/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/MaxIterationsExceededException.java,39,}
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/MaxIterationsExceededException.java,38,this.maxIterations = maxIterations;
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/MaxIterationsExceededException.java,36,super("Maximal number of iterations ({0}) exceeded",
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/special/Gamma.java,180,throw new MaxIterationsExceededException(maxIterations);
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/MathException.java,272,}
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/MathException.java,271,}
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/MathException.java,267,if (rootCause != null && JDK_SUPPORTS_NESTED == false) {
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/MathException.java,266,super.printStackTrace(out);
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/MathException.java,265,synchronized (out) {
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/MathException.java,235,return rootCause;
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/MathException.java,115,return mf.format(arguments);
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/MathException.java,114,mf.setLocale(locale);
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/MathException.java,113,MessageFormat mf = new MessageFormat(translate(pattern, locale));
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/MathException.java,100,return s;
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/MathException.java,94,} catch (MissingResourceException mre) {
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/MathException.java,85,cachedResources =
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/MathException.java,83,if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/MathException.java,155,}
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/MathException.java,154,this.rootCause = null;
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/MathException.java,153,this.arguments = arguments;
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/MathException.java,152,this.pattern   = pattern;
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/MathException.java,151,super(buildMessage(pattern, arguments, Locale.US));
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/ConvergenceException.java,45,}
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/ConvergenceException.java,44,super(pattern, arguments);
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/special/Gamma.java,161,ret = 0.0;
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/special/Erf.java,60,return ret;
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/special/Erf.java,58,ret = -ret;
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/special/Erf.java,57,if (x < 0) {
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/special/Erf.java,56,double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java,109,return 0.5 * (1.0 + Erf.erf((x - mean) /
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/special/Gamma.java,186,return ret;
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/special/Gamma.java,182,ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/special/Gamma.java,179,if (n >= maxIterations) {
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/special/Gamma.java,177,sum = sum + an;
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/special/Gamma.java,174,an = an * (x / (a + n));
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/special/Gamma.java,173,n = n + 1.0;
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/special/Gamma.java,171,while (Math.abs(an) > epsilon && n < maxIterations) {
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/special/Gamma.java,170,double sum = an; // partial sum
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/special/Gamma.java,169,double an = 1.0 / a; // n-th element in the series
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/special/Gamma.java,168,double n = 0.0; // current element index
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/special/Gamma.java,162,} else if (a >= 1.0 && x > a) {
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/special/Gamma.java,160,} else if (x == 0.0) {
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/special/Gamma.java,158,if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/special/Gamma.java,106,return ret;
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/special/Gamma.java,102,ret = ((x + .5) * Math.log(tmp)) - tmp +
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/special/Gamma.java,101,double tmp = x + g + .5;
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/special/Gamma.java,99,sum = sum + lanczos[0];
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/special/Gamma.java,97,sum = sum + (lanczos[i] / (x + i));
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/special/Gamma.java,96,for (int i = lanczos.length - 1; i > 0; --i) {
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/special/Gamma.java,95,double sum = 0.0;
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/special/Gamma.java,93,double g = 607.0 / 128.0;
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/special/Gamma.java,90,if (Double.isNaN(x) || (x <= 0.0)) {
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java,98,}
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java,97,standardDeviation = sd;
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java,93,if (sd <= 0.0) {
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java,77,}
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java,76,this.mean = mean;
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java,53,}
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java,52,setStandardDeviation(sd);
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java,51,setMean(mean);
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java,42,private double standardDeviation = 1;
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java,39,private double mean = 0;
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java,50,super();
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/distribution/AbstractDistribution.java,39,}
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/distribution/AbstractDistribution.java,38,super();
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java,46,}
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java,45,super();
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/MaxIterationsExceededException.java,58,return maxIterations;
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/MaxIterationsExceededException.java,52,}
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/MaxIterationsExceededException.java,51,this.maxIterations = maxIterations;
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/MaxIterationsExceededException.java,50,super(pattern, arguments);
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/special/Gamma.java,260,return ret;
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/special/Gamma.java,257,ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/special/Gamma.java,256,ret = 1.0 / cf.evaluate(x, epsilon, maxIterations);
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/special/Gamma.java,243,ContinuedFraction cf = new ContinuedFraction() {
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/special/Gamma.java,240,ret = 1.0 - regularizedGammaP(a, x, epsilon, maxIterations);
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/special/Gamma.java,237,} else if (x < a || a < 1.0) {
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/special/Gamma.java,236,ret = 1.0;
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/special/Gamma.java,235,} else if (x == 0.0) {
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/special/Gamma.java,234,ret = Double.NaN;
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/special/Gamma.java,233,if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/special/Gamma.java,200,return regularizedGammaQ(a, x, DEFAULT_EPSILON, Integer.MAX_VALUE);
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/special/Gamma.java,165,ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/special/Gamma.java,159,ret = Double.NaN;
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/special/Gamma.java,120,return regularizedGammaP(a, x, DEFAULT_EPSILON, Integer.MAX_VALUE);
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/special/Gamma.java,91,ret = Double.NaN;
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/special/Gamma.java,68,}
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/special/Gamma.java,67,super();
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/util/ContinuedFraction.java,178,return c;
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/util/ContinuedFraction.java,173,throw new MaxIterationsExceededException(maxIterations,
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/util/ContinuedFraction.java,172,if (n >= maxIterations) {
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/util/ContinuedFraction.java,170,}
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/util/ContinuedFraction.java,169,q1 = q2;
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/util/ContinuedFraction.java,168,q0 = q1;
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/util/ContinuedFraction.java,167,p1 = p2;
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/util/ContinuedFraction.java,166,p0 = p1;
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/util/ContinuedFraction.java,165,c = p2 / q2;
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/util/ContinuedFraction.java,162,relativeError = Math.abs(r / c - 1.0);
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/util/ContinuedFraction.java,161,double r = p2 / q2;
/home/dear-auto-fix/DEAR/approach/sbfl/defects4j_data/Math/103/src/java/org/apache/commons/math/util/ContinuedFraction.java,156,throw new ConvergenceException(
