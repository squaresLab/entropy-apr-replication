diff --git a/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java b/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java
index 627271f9..20486aa0 100644
--- a/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java
+++ b/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java
@@ -113,41 +113,7 @@ class MakeDeclaredNamesUnique
   @Override
   public boolean shouldTraverse(NodeTraversal t, Node n, Node parent) {
 
-    switch (n.getType()) {
-      case Token.FUNCTION:
-        {
-          // Add recursive function name, if needed.
-          // NOTE: "enterScope" is called after we need to pick up this name.
-          Renamer renamer = nameStack.peek().forChildScope();
-
-          // If needed, add the function recursive name.
-          String name = n.getFirstChild().getString();
-          if (name != null && !name.isEmpty() && parent != null
-              && !NodeUtil.isFunctionDeclaration(n)) {
-            renamer.addDeclaredName(name);
-          }
-
-
-
-          // Add the function parameters
-
-          // Add the function body declarations
-
-          nameStack.push(renamer);
-        }
-        break;
-
-      case Token.CATCH:
-        {
-          Renamer renamer = nameStack.peek().forChildScope();
-
-          String name = n.getFirstChild().getString();
-          renamer.addDeclaredName(name);
-
-          nameStack.push(renamer);
-        }
-        break;
-    }
+    
 
     return true;
   }