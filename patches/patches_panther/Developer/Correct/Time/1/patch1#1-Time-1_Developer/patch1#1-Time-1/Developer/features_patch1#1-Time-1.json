{
  "files": [
    {
      "features": [
        {
          "CONSTANT": {
            "0": {
              "C1_SAME_TYPE_CONSTANT": "true",
              "C2_SAME_TYPE_CONSTANT_VAR": "false",
              "C2_SAME_TYPE_VAR": "false"
            }
          },
          "FEATURES_BINARYOPERATOR": {
            "0_type == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "10_compare < 0": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "11_((\"Types array must be in order largest-smallest: \" + types[i - 1].getName()) + \" < \") + loopType.getName()": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "12_((\"Types array must be in order largest-smallest: \" + types[i - 1].getName()) + \" < \")": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "13_(\"Types array must be in order largest-smallest: \" + types[i - 1].getName())": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "14_i - 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "15_compare == 0": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "16_types[i - 1].getRangeDurationType() == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "17_i - 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "18_loopType.getRangeDurationType() == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "19_((\"Types array must not contain duplicate: \" + types[i - 1].getName()) + \" and \") + loopType.getName()": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "1_types == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "20_((\"Types array must not contain duplicate: \" + types[i - 1].getName()) + \" and \")": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "21_(\"Types array must not contain duplicate: \" + types[i - 1].getName())": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "22_i - 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "23_loopType.getRangeDurationType() == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "24_((\"Types array must be in order largest-smallest: \" + types[i - 1].getName()) + \" < \") + loopType.getName()": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "25_((\"Types array must be in order largest-smallest: \" + types[i - 1].getName()) + \" < \")": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "26_(\"Types array must be in order largest-smallest: \" + types[i - 1].getName())": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "27_i - 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "28_i - 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "29_lastRangeField.compareTo(loopRangeField) < 0": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "2_values == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "30_((\"Types array must be in order largest-smallest: \" + types[i - 1].getName()) + \" < \") + loopType.getName()": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "31_((\"Types array must be in order largest-smallest: \" + types[i - 1].getName()) + \" < \")": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "32_(\"Types array must be in order largest-smallest: \" + types[i - 1].getName())": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "33_i - 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "34_lastRangeField.compareTo(loopRangeField) == 0": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "35_((\"Types array must not contain duplicate: \" + types[i - 1].getName()) + \" and \") + loopType.getName()": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "36_((\"Types array must not contain duplicate: \" + types[i - 1].getName()) + \" and \")": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "37_(\"Types array must not contain duplicate: \" + types[i - 1].getName())": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "38_i - 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "39_partial == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "3_values.length != types.length": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "40_i < partial.size()": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "41_newChronology == getChronology()": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "42_fieldType == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "43_index == (-1)": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "44_iTypes.length + 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "45_i < iTypes.length": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "46_compare > 0": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "47_compare == 0": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "48_fieldType.getRangeDurationType() == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "49_rangeField.compareTo(loopRangeField) > 0": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "4_types.length == 0": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "50_i + 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "51_(newTypes.length - i) - 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "52_(newTypes.length - i)": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "53_i + 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "54_(newValues.length - i) - 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "55_(newValues.length - i)": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "56_value == getValue(index)": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "57_index != (-1)": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "58_size() - 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "59_size() - 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "5_i < types.length": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "60_index + 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "61_newTypes.length - index": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "62_index + 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "63_newValues.length - index": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "64_value == getValue(index)": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "65_amount == 0": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "66_amount == 0": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "67_(period == null) || (scalar == 0)": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "true",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "68_(period == null)": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "69_(scalar == 0)": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "6_types[i] == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "70_i < period.size()": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "71_index >= 0": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "72_i < iTypes.length": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "73_value != iValues[i]": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "74_partial == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "75_i < iTypes.length": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "76_value != iValues[i]": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "77_f == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "78_size() == 0": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "79_list.size() == 0": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "7_\"Types array must not contain null: index \" + i": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "80_f == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "81_f == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "82_f1 == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "83_20 * size": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "84_i < size": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "85_i > 0": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "86_pattern == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "87_pattern == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "8_i < types.length": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "9_i > 0": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            }
          },
          "FEATURES_LOGICAL_EXPRESSION": {
            "logical_expression_0_i > 0": {
              "LE10_ATOMIC_EXPRESSION_COMPARISION_SAME_LEFT": "false",
              "LE10_ATOMIC_EXPRESSION_COMPARISION_SAME_RIGHT": "false",
              "LE10_ATOMIC_EXPRESSION_MULTIPLE_VAR_AS_BOOLEAN": "false",
              "LE10_ATOMIC_EXPRESSION_SAME_INVOCATION_TARGET": "false",
              "LE10_ATOMIC_EXPRESSION_USED_IN_INVOCATION_COMPARISION_VARIABLE": "false",
              "LE10_CONTAINS_ALL_INVOCATION_COMPARISION_VARIABLE": "false",
              "LE1_EXISTS_RELATED_BOOLEAN_EXPRESSION": "true",
              "LE2_IS_BOOLEAN_METHOD_PARAM_TYPE_VAR": "false",
              "LE3_IS_COMPATIBLE_VAR_NOT_INCLUDED": "false",
              "LE4_EXISTS_LOCAL_UNUSED_VARIABLES": "false",
              "LE5_COMPLEX_REFERENCE": "true",
              "LE6_HAS_NEGATION": "false",
              "LE7_SIMPLE_VAR_OR_METHOD_IN_LOGIC": "false",
              "LE8_SCOPE_VAR_USED_OTHER_BOOLEXPER": "true",
              "LE9_EQUAL_NOTEQUAL_NULL_CHECK": "false",
              "LE9_MIX_CHECK": "false",
              "LE9_NORMAL_CHECK": "false",
              "LE9_NULL_CHECK": "false"
            }
          },
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {
            "i": {
              "V10_VAR_TYPE_Similar_VAR": "false",
              "V11_VAR_COMPATIBLE_TYPE_IN_CONDITION": "false",
              "V12_VAR_Invocation_VAR_REPLACE_BY_VAR": "false",
              "V13_VAR_Invocation_VAR_REPLACE_BY_INVOCATION": "false",
              "V14_VAR_INSTANCE_OF_CLASS": "false",
              "V15_VAR_LAST_THREE_SAME_TYPE_LOC": "false",
              "V16_IS_METHOD_PARAMETER_TYPE_VAR": "true",
              "V17_VAR_IS_ENUMERATION": "false",
              "V18_Has_Method_Similar_In_Name": "false",
              "V19_With_Special_Name": "false",
              "V1_IS_TYPE_COMPATIBLE_METHOD_CALL_PARAM_RETURN": "true",
              "V1_LOCAL_VAR_NOT_ASSIGNED": "true",
              "V1_LOCAL_VAR_NOT_USED": "false",
              "V2_HAS_VAR_SIM_NAME": "false",
              "V2_HAS_VAR_SIM_NAME_COMP_TYPE": "false",
              "V2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "true",
              "V2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
              "V3_HAS_CONSTANT": "false",
              "V4B_USED_MULTIPLE_AS_PARAMETER": "false",
              "V4_Field_NOT_ASSIGNED": "false",
              "V4_Field_NOT_USED": "false",
              "V5_HAS_VAR_IN_TRANSFORMATION": "false",
              "V5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "true",
              "V5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "true",
              "V6_IS_METHOD_RETURN_TYPE_VAR": "true",
              "V7_OBJECT_USED_IN_ASSIGNMENT": "false",
              "V8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
              "V8_VAR_OBJECT": "false",
              "V8_VAR_PRIMITIVE": "true",
              "V9_VAR_TYPE_Similar_Literal": "true"
            }
          },
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "Assignment",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "For",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "true",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "true",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "true",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "true",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "if (loopUnitField.isSupported() == false) {\n    if (lastUnitField.isSupported()) {\n        throw new java.lang.IllegalArgumentException(((\"Types array must be in order largest-smallest: \" + types[i - 1].getName()) + \" < \") + loopType.getName());\n    } else {\n        throw new java.lang.IllegalArgumentException(((\"Types array must not contain duplicate unsupported: \" + types[i - 1].getName()) + \" and \") + loopType.getName());\n    }\n}",
            "src_parent": "{\n    if (loopUnitField.isSupported() == false) {\n        if (lastUnitField.isSupported()) {\n            throw new java.lang.IllegalArgumentException(((\"Types array must be in order largest-smallest: \" + types[i - 1].getName()) + \" < \") + loopType.getName());\n        } else {\n            throw new java.lang.IllegalArgumentException(((\"Types array must not contain duplicate unsupported: \" + types[i - 1].getName()) + \" and \") + loopType.getName());\n        }\n    }\n    int compare = lastUnitField.compareTo(loopUnitField);\n    if (compare < 0) {\n        throw new java.lang.IllegalArgumentException(((\"Types array must be in order largest-smallest: \" + types[i - 1].getName()) + \" < \") + loopType.getName());\n    } else if ((compare == 0) && lastUnitField.equals(loopUnitField)) {\n        if (types[i - 1].getRangeDurationType() == null) {\n            if (loopType.getRangeDurationType() == null) {\n                throw new java.lang.IllegalArgumentException(((\"Types array must not contain duplicate: \" + types[i - 1].getName()) + \" and \") + loopType.getName());\n            }\n        } else {\n            if (loopType.getRangeDurationType() == null) {\n                throw new java.lang.IllegalArgumentException(((\"Types array must be in order largest-smallest: \" + types[i - 1].getName()) + \" < \") + loopType.getName());\n            }\n            org.joda.time.DurationField lastRangeField = types[i - 1].getRangeDurationType().getField(iChronology);\n            org.joda.time.DurationField loopRangeField = loopType.getRangeDurationType().getField(iChronology);\n            if (lastRangeField.compareTo(loopRangeField) < 0) {\n                throw new java.lang.IllegalArgumentException(((\"Types array must be in order largest-smallest: \" + types[i - 1].getName()) + \" < \") + loopType.getName());\n            }\n            if (lastRangeField.compareTo(loopRangeField) == 0) {\n                throw new java.lang.IllegalArgumentException(((\"Types array must not contain duplicate: \" + types[i - 1].getName()) + \" and \") + loopType.getName());\n            }\n        }\n    }\n}",
            "src_parent_type": "Block",
            "src_type": "If"
          }
        },
        {
          "CONSTANT": {
            "0": {
              "C1_SAME_TYPE_CONSTANT": "true",
              "C2_SAME_TYPE_CONSTANT_VAR": "false",
              "C2_SAME_TYPE_VAR": "true"
            }
          },
          "FEATURES_BINARYOPERATOR": {
            "0_type == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "10_compare < 0": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "11_((\"Types array must be in order largest-smallest: \" + types[i - 1].getName()) + \" < \") + loopType.getName()": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "12_((\"Types array must be in order largest-smallest: \" + types[i - 1].getName()) + \" < \")": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "13_(\"Types array must be in order largest-smallest: \" + types[i - 1].getName())": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "14_i - 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "15_compare == 0": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "16_types[i - 1].getRangeDurationType() == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "17_i - 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "18_loopType.getRangeDurationType() == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "19_((\"Types array must not contain duplicate: \" + types[i - 1].getName()) + \" and \") + loopType.getName()": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "1_types == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "20_((\"Types array must not contain duplicate: \" + types[i - 1].getName()) + \" and \")": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "21_(\"Types array must not contain duplicate: \" + types[i - 1].getName())": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "22_i - 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "23_loopType.getRangeDurationType() == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "24_((\"Types array must be in order largest-smallest: \" + types[i - 1].getName()) + \" < \") + loopType.getName()": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "25_((\"Types array must be in order largest-smallest: \" + types[i - 1].getName()) + \" < \")": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "26_(\"Types array must be in order largest-smallest: \" + types[i - 1].getName())": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "27_i - 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "28_i - 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "29_lastRangeField.compareTo(loopRangeField) < 0": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "2_values == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "30_((\"Types array must be in order largest-smallest: \" + types[i - 1].getName()) + \" < \") + loopType.getName()": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "31_((\"Types array must be in order largest-smallest: \" + types[i - 1].getName()) + \" < \")": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "32_(\"Types array must be in order largest-smallest: \" + types[i - 1].getName())": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "33_i - 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "34_lastRangeField.compareTo(loopRangeField) == 0": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "35_((\"Types array must not contain duplicate: \" + types[i - 1].getName()) + \" and \") + loopType.getName()": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "36_((\"Types array must not contain duplicate: \" + types[i - 1].getName()) + \" and \")": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "37_(\"Types array must not contain duplicate: \" + types[i - 1].getName())": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "38_i - 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "39_partial == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "3_values.length != types.length": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "40_i < partial.size()": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "41_newChronology == getChronology()": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "42_fieldType == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "43_index == (-1)": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "44_iTypes.length + 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "45_i < iTypes.length": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "46_compare > 0": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "47_compare == 0": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "48_fieldType.getRangeDurationType() == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "49_rangeField.compareTo(loopRangeField) > 0": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "4_types.length == 0": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "50_i + 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "51_(newTypes.length - i) - 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "52_(newTypes.length - i)": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "53_i + 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "54_(newValues.length - i) - 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "55_(newValues.length - i)": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "56_value == getValue(index)": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "57_index != (-1)": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "58_size() - 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "59_size() - 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "5_i < types.length": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "60_index + 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "61_newTypes.length - index": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "62_index + 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "63_newValues.length - index": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "64_value == getValue(index)": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "65_amount == 0": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "66_amount == 0": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "67_(period == null) || (scalar == 0)": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "true",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "68_(period == null)": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "69_(scalar == 0)": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "6_types[i] == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "70_i < period.size()": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "71_index >= 0": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "72_i < iTypes.length": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "73_value != iValues[i]": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "74_partial == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "75_i < iTypes.length": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "76_value != iValues[i]": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "77_f == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "78_size() == 0": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "79_list.size() == 0": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "7_\"Types array must not contain null: index \" + i": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "80_f == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "81_f == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "82_f1 == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "83_20 * size": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "84_i < size": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "85_i > 0": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "86_pattern == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "87_pattern == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "8_i < types.length": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "9_i > 0": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            }
          },
          "FEATURES_LOGICAL_EXPRESSION": {
            "logical_expression_0_compare < 0": {
              "LE10_ATOMIC_EXPRESSION_COMPARISION_SAME_LEFT": "false",
              "LE10_ATOMIC_EXPRESSION_COMPARISION_SAME_RIGHT": "false",
              "LE10_ATOMIC_EXPRESSION_MULTIPLE_VAR_AS_BOOLEAN": "false",
              "LE10_ATOMIC_EXPRESSION_SAME_INVOCATION_TARGET": "false",
              "LE10_ATOMIC_EXPRESSION_USED_IN_INVOCATION_COMPARISION_VARIABLE": "false",
              "LE10_CONTAINS_ALL_INVOCATION_COMPARISION_VARIABLE": "false",
              "LE1_EXISTS_RELATED_BOOLEAN_EXPRESSION": "true",
              "LE2_IS_BOOLEAN_METHOD_PARAM_TYPE_VAR": "false",
              "LE3_IS_COMPATIBLE_VAR_NOT_INCLUDED": "false",
              "LE4_EXISTS_LOCAL_UNUSED_VARIABLES": "false",
              "LE5_COMPLEX_REFERENCE": "true",
              "LE6_HAS_NEGATION": "false",
              "LE7_SIMPLE_VAR_OR_METHOD_IN_LOGIC": "false",
              "LE8_SCOPE_VAR_USED_OTHER_BOOLEXPER": "true",
              "LE9_EQUAL_NOTEQUAL_NULL_CHECK": "false",
              "LE9_MIX_CHECK": "false",
              "LE9_NORMAL_CHECK": "false",
              "LE9_NULL_CHECK": "false"
            }
          },
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {
            "compare": {
              "V10_VAR_TYPE_Similar_VAR": "false",
              "V11_VAR_COMPATIBLE_TYPE_IN_CONDITION": "true",
              "V12_VAR_Invocation_VAR_REPLACE_BY_VAR": "false",
              "V13_VAR_Invocation_VAR_REPLACE_BY_INVOCATION": "false",
              "V14_VAR_INSTANCE_OF_CLASS": "false",
              "V15_VAR_LAST_THREE_SAME_TYPE_LOC": "false",
              "V16_IS_METHOD_PARAMETER_TYPE_VAR": "true",
              "V17_VAR_IS_ENUMERATION": "false",
              "V18_Has_Method_Similar_In_Name": "false",
              "V19_With_Special_Name": "false",
              "V1_IS_TYPE_COMPATIBLE_METHOD_CALL_PARAM_RETURN": "true",
              "V1_LOCAL_VAR_NOT_ASSIGNED": "true",
              "V1_LOCAL_VAR_NOT_USED": "false",
              "V2_HAS_VAR_SIM_NAME": "false",
              "V2_HAS_VAR_SIM_NAME_COMP_TYPE": "false",
              "V2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "true",
              "V2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "true",
              "V3_HAS_CONSTANT": "false",
              "V4B_USED_MULTIPLE_AS_PARAMETER": "false",
              "V4_Field_NOT_ASSIGNED": "false",
              "V4_Field_NOT_USED": "false",
              "V5_HAS_VAR_IN_TRANSFORMATION": "false",
              "V5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "true",
              "V5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
              "V6_IS_METHOD_RETURN_TYPE_VAR": "true",
              "V7_OBJECT_USED_IN_ASSIGNMENT": "false",
              "V8_PRIMITIVE_USED_IN_ASSIGNMENT": "true",
              "V8_VAR_OBJECT": "false",
              "V8_VAR_PRIMITIVE": "true",
              "V9_VAR_TYPE_Similar_Literal": "true"
            }
          },
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "LocalVariable",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "true",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "true",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "true",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "true",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "true",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "null",
            "dst_parent": "null",
            "dst_parent_type": "null",
            "dst_type": "null",
            "operator": "INS",
            "src": "(compare == 0) && lastUnitField.equals(loopUnitField)",
            "src_parent": "if ((compare == 0) && lastUnitField.equals(loopUnitField)) {\n    if (types[i - 1].getRangeDurationType() == null) {\n        if (loopType.getRangeDurationType() == null) {\n            throw new java.lang.IllegalArgumentException(((\"Types array must not contain duplicate: \" + types[i - 1].getName()) + \" and \") + loopType.getName());\n        }\n    } else {\n        if (loopType.getRangeDurationType() == null) {\n            throw new java.lang.IllegalArgumentException(((\"Types array must be in order largest-smallest: \" + types[i - 1].getName()) + \" < \") + loopType.getName());\n        }\n        org.joda.time.DurationField lastRangeField = types[i - 1].getRangeDurationType().getField(iChronology);\n        org.joda.time.DurationField loopRangeField = loopType.getRangeDurationType().getField(iChronology);\n        if (lastRangeField.compareTo(loopRangeField) < 0) {\n            throw new java.lang.IllegalArgumentException(((\"Types array must be in order largest-smallest: \" + types[i - 1].getName()) + \" < \") + loopType.getName());\n        }\n        if (lastRangeField.compareTo(loopRangeField) == 0) {\n            throw new java.lang.IllegalArgumentException(((\"Types array must not contain duplicate: \" + types[i - 1].getName()) + \" and \") + loopType.getName());\n        }\n    }\n}",
            "src_parent_type": "If",
            "src_type": "BinaryOperator"
          }
        },
        {
          "CONSTANT": {
            "0": {
              "C1_SAME_TYPE_CONSTANT": "true",
              "C2_SAME_TYPE_CONSTANT_VAR": "false",
              "C2_SAME_TYPE_VAR": "true"
            }
          },
          "FEATURES_BINARYOPERATOR": {
            "0_type == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "10_compare < 0": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "11_((\"Types array must be in order largest-smallest: \" + types[i - 1].getName()) + \" < \") + loopType.getName()": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "12_((\"Types array must be in order largest-smallest: \" + types[i - 1].getName()) + \" < \")": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "13_(\"Types array must be in order largest-smallest: \" + types[i - 1].getName())": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "14_i - 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "15_compare == 0": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "16_types[i - 1].getRangeDurationType() == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "17_i - 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "18_loopType.getRangeDurationType() == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "19_((\"Types array must not contain duplicate: \" + types[i - 1].getName()) + \" and \") + loopType.getName()": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "1_types == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "20_((\"Types array must not contain duplicate: \" + types[i - 1].getName()) + \" and \")": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "21_(\"Types array must not contain duplicate: \" + types[i - 1].getName())": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "22_i - 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "23_loopType.getRangeDurationType() == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "24_((\"Types array must be in order largest-smallest: \" + types[i - 1].getName()) + \" < \") + loopType.getName()": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "25_((\"Types array must be in order largest-smallest: \" + types[i - 1].getName()) + \" < \")": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "26_(\"Types array must be in order largest-smallest: \" + types[i - 1].getName())": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "27_i - 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "28_i - 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "29_lastRangeField.compareTo(loopRangeField) < 0": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "2_values == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "30_((\"Types array must be in order largest-smallest: \" + types[i - 1].getName()) + \" < \") + loopType.getName()": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "31_((\"Types array must be in order largest-smallest: \" + types[i - 1].getName()) + \" < \")": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "32_(\"Types array must be in order largest-smallest: \" + types[i - 1].getName())": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "33_i - 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "34_lastRangeField.compareTo(loopRangeField) == 0": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "35_((\"Types array must not contain duplicate: \" + types[i - 1].getName()) + \" and \") + loopType.getName()": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "36_((\"Types array must not contain duplicate: \" + types[i - 1].getName()) + \" and \")": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "37_(\"Types array must not contain duplicate: \" + types[i - 1].getName())": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "38_i - 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "39_partial == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "3_values.length != types.length": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "40_i < partial.size()": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "41_newChronology == getChronology()": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "42_fieldType == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "43_index == (-1)": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "44_iTypes.length + 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "45_i < iTypes.length": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "46_compare > 0": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "47_compare == 0": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "48_fieldType.getRangeDurationType() == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "49_rangeField.compareTo(loopRangeField) > 0": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "4_types.length == 0": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "50_i + 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "51_(newTypes.length - i) - 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "52_(newTypes.length - i)": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "53_i + 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "54_(newValues.length - i) - 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "55_(newValues.length - i)": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "56_value == getValue(index)": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "57_index != (-1)": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "58_size() - 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "59_size() - 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "5_i < types.length": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "60_index + 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "61_newTypes.length - index": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "62_index + 1": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "63_newValues.length - index": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "64_value == getValue(index)": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "65_amount == 0": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "66_amount == 0": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "67_(period == null) || (scalar == 0)": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "true",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "false"
            },
            "68_(period == null)": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "69_(scalar == 0)": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "6_types[i] == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "70_i < period.size()": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "71_index >= 0": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "72_i < iTypes.length": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "73_value != iValues[i]": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "74_partial == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "75_i < iTypes.length": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "76_value != iValues[i]": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "77_f == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "78_size() == 0": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "79_list.size() == 0": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "7_\"Types array must not contain null: index \" + i": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "80_f == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "81_f == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "82_f1 == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "83_20 * size": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "false",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "true",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "false",
              "O5_IS_MATH_ROOT": "true"
            },
            "84_i < size": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "85_i > 0": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "86_pattern == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "87_pattern == null": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "true",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "8_i < types.length": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "false",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            },
            "9_i > 0": {
              "O1_IS_BIT": "false",
              "O1_IS_COMPARE": "true",
              "O1_IS_LOGICAL": "false",
              "O1_IS_MATH": "false",
              "O1_IS_OTHERS": "false",
              "O1_IS_SHIFT": "false",
              "O2_LOGICAL_CONTAIN_NOT": "false",
              "O3_CONTAIN_01": "true",
              "O3_CONTAIN_NULL": "false",
              "O4_COMPARE_IN_CONDITION": "true",
              "O5_IS_MATH_ROOT": "false"
            }
          },
          "FEATURES_LOGICAL_EXPRESSION": {
            "logical_expression_0_compare == 0": {
              "LE10_ATOMIC_EXPRESSION_COMPARISION_SAME_LEFT": "false",
              "LE10_ATOMIC_EXPRESSION_COMPARISION_SAME_RIGHT": "false",
              "LE10_ATOMIC_EXPRESSION_MULTIPLE_VAR_AS_BOOLEAN": "false",
              "LE10_ATOMIC_EXPRESSION_SAME_INVOCATION_TARGET": "false",
              "LE10_ATOMIC_EXPRESSION_USED_IN_INVOCATION_COMPARISION_VARIABLE": "false",
              "LE10_CONTAINS_ALL_INVOCATION_COMPARISION_VARIABLE": "false",
              "LE1_EXISTS_RELATED_BOOLEAN_EXPRESSION": "true",
              "LE2_IS_BOOLEAN_METHOD_PARAM_TYPE_VAR": "false",
              "LE3_IS_COMPATIBLE_VAR_NOT_INCLUDED": "false",
              "LE4_EXISTS_LOCAL_UNUSED_VARIABLES": "false",
              "LE5_COMPLEX_REFERENCE": "true",
              "LE6_HAS_NEGATION": "false",
              "LE7_SIMPLE_VAR_OR_METHOD_IN_LOGIC": "false",
              "LE8_SCOPE_VAR_USED_OTHER_BOOLEXPER": "true",
              "LE9_EQUAL_NOTEQUAL_NULL_CHECK": "false",
              "LE9_MIX_CHECK": "false",
              "LE9_NORMAL_CHECK": "false",
              "LE9_NULL_CHECK": "false"
            }
          },
          "FEATURES_METHOD_INVOCATION": {},
          "FEATURES_TYPEACCESS": {},
          "FEATURES_VARS": {
            "compare": {
              "V10_VAR_TYPE_Similar_VAR": "false",
              "V11_VAR_COMPATIBLE_TYPE_IN_CONDITION": "false",
              "V12_VAR_Invocation_VAR_REPLACE_BY_VAR": "false",
              "V13_VAR_Invocation_VAR_REPLACE_BY_INVOCATION": "false",
              "V14_VAR_INSTANCE_OF_CLASS": "false",
              "V15_VAR_LAST_THREE_SAME_TYPE_LOC": "false",
              "V16_IS_METHOD_PARAMETER_TYPE_VAR": "true",
              "V17_VAR_IS_ENUMERATION": "false",
              "V18_Has_Method_Similar_In_Name": "false",
              "V19_With_Special_Name": "false",
              "V1_IS_TYPE_COMPATIBLE_METHOD_CALL_PARAM_RETURN": "true",
              "V1_LOCAL_VAR_NOT_ASSIGNED": "false",
              "V1_LOCAL_VAR_NOT_USED": "false",
              "V2_HAS_VAR_SIM_NAME": "false",
              "V2_HAS_VAR_SIM_NAME_COMP_TYPE": "false",
              "V2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
              "V2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
              "V3_HAS_CONSTANT": "false",
              "V4B_USED_MULTIPLE_AS_PARAMETER": "false",
              "V4_Field_NOT_ASSIGNED": "false",
              "V4_Field_NOT_USED": "false",
              "V5_HAS_VAR_IN_TRANSFORMATION": "false",
              "V5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
              "V5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
              "V6_IS_METHOD_RETURN_TYPE_VAR": "true",
              "V7_OBJECT_USED_IN_ASSIGNMENT": "false",
              "V8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
              "V8_VAR_OBJECT": "false",
              "V8_VAR_PRIMITIVE": "true",
              "V9_VAR_TYPE_Similar_Literal": "true"
            }
          },
          "S10_METHOD_CALL_WITH_NULL_GUARD": "false",
          "S11_FAULTY_CLASS_EXCEPTION_TYPE": "false",
          "S12_METHOD_CALL_WITH_TRY_CATCH": "false",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_AFTER_3": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_1": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_2": "",
          "S13_TYPE_OF_FAULTY_STATEMENT_BEFORE_3": "",
          "S14_TYPE_OF_FAULTY_STATEMENT_PARENT": "If",
          "S15_HAS_OBJECTIVE_METHOD_CALL": "false",
          "S16_HAS_Invocations_Prone_Exception": "false",
          "S18_In_Synchronized_Method": "false",
          "S1_LOCAL_VAR_NOT_ASSIGNED": "false",
          "S1_LOCAL_VAR_NOT_USED": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NORMAL_GUARD": "false",
          "S2_SIMILAR_OBJECT_TYPE_WITH_NULL_GUARD": "false",
          "S3_TYPE_OF_FAULTY_STATEMENT": "If",
          "S4_Field_NOT_ASSIGNED": "false",
          "S4_Field_NOT_USED": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NORMAL_GUARD": "false",
          "S5_SIMILAR_PRIMITIVE_TYPE_WITH_NULL_GUARD": "false",
          "S6_METHOD_THROWS_EXCEPTION": "false",
          "S7_OBJECT_USED_IN_ASSIGNMENT": "false",
          "S8_PRIMITIVE_USED_IN_ASSIGNMENT": "false",
          "S9_METHOD_CALL_WITH_NORMAL_GUARD": "false",
          "ast_info": {
            "dst": "(compare == 0)",
            "dst_parent": "(compare == 0) && lastUnitField.equals(loopUnitField)",
            "dst_parent_type": "BinaryOperator",
            "dst_type": "BinaryOperator",
            "operator": "MOV",
            "src": "compare == 0",
            "src_parent": "if (compare == 0) {\n    if (types[i - 1].getRangeDurationType() == null) {\n        if (loopType.getRangeDurationType() == null) {\n            throw new java.lang.IllegalArgumentException(((\"Types array must not contain duplicate: \" + types[i - 1].getName()) + \" and \") + loopType.getName());\n        }\n    } else {\n        if (loopType.getRangeDurationType() == null) {\n            throw new java.lang.IllegalArgumentException(((\"Types array must be in order largest-smallest: \" + types[i - 1].getName()) + \" < \") + loopType.getName());\n        }\n        org.joda.time.DurationField lastRangeField = types[i - 1].getRangeDurationType().getField(iChronology);\n        org.joda.time.DurationField loopRangeField = loopType.getRangeDurationType().getField(iChronology);\n        if (lastRangeField.compareTo(loopRangeField) < 0) {\n            throw new java.lang.IllegalArgumentException(((\"Types array must be in order largest-smallest: \" + types[i - 1].getName()) + \" < \") + loopType.getName());\n        }\n        if (lastRangeField.compareTo(loopRangeField) == 0) {\n            throw new java.lang.IllegalArgumentException(((\"Types array must not contain duplicate: \" + types[i - 1].getName()) + \" and \") + loopType.getName());\n        }\n    }\n}",
            "src_parent_type": "If",
            "src_type": "BinaryOperator"
          }
        },
        {
          "P4J_FORMER_ABST_V_AF": "0",
          "P4J_FORMER_ASSIGN_CONST_AF": "0",
          "P4J_FORMER_ASSIGN_LHS_AF": "0",
          "P4J_FORMER_ASSIGN_ZERO_AF": "0",
          "P4J_FORMER_CALLEE_AF": "0",
          "P4J_FORMER_CALL_ARGUMENT_AF": "0",
          "P4J_FORMER_CHANGED_AF": "0",
          "P4J_FORMER_DEREF_AF": "0",
          "P4J_FORMER_FUNC_ARGUMENT_VF": "0",
          "P4J_FORMER_GLOBAL_VARIABLE_VF": "0",
          "P4J_FORMER_INDEX_AF": "0",
          "P4J_FORMER_INSERT_CONTROL_RF": "0",
          "P4J_FORMER_INSERT_GUARD_RF": "0",
          "P4J_FORMER_INSERT_STMT_RF": "0",
          "P4J_FORMER_LOCAL_VARIABLE_VF": "0",
          "P4J_FORMER_MEMBER_ACCESS_AF": "0",
          "P4J_FORMER_MEMBER_VF": "0",
          "P4J_FORMER_MODIFIED_SIMILAR_VF": "0",
          "P4J_FORMER_MODIFIED_VF": "0",
          "P4J_FORMER_NONZERO_CONST_VF": "0",
          "P4J_FORMER_OP_ADD_AF": "0",
          "P4J_FORMER_OP_DIV_AF": "0",
          "P4J_FORMER_OP_EQ_AF": "0",
          "P4J_FORMER_OP_GE_AF": "0",
          "P4J_FORMER_OP_GT_AF": "0",
          "P4J_FORMER_OP_LE_AF": "0",
          "P4J_FORMER_OP_LT_AF": "0",
          "P4J_FORMER_OP_MOD_AF": "0",
          "P4J_FORMER_OP_MUL_AF": "0",
          "P4J_FORMER_OP_NE_AF": "0",
          "P4J_FORMER_OP_SUB_AF": "0",
          "P4J_FORMER_REMOVE_PARTIAL_IF": "0",
          "P4J_FORMER_REMOVE_STMT": "0",
          "P4J_FORMER_REMOVE_WHOLE_BLOCK": "0",
          "P4J_FORMER_REMOVE_WHOLE_IF": "0",
          "P4J_FORMER_REPLACE_COND_RF": "0",
          "P4J_FORMER_REPLACE_STMT_RF": "0",
          "P4J_FORMER_R_STMT_ASSIGN_AF": "0",
          "P4J_FORMER_R_STMT_CALL_AF": "0",
          "P4J_FORMER_R_STMT_COND_AF": "0",
          "P4J_FORMER_R_STMT_CONTROL_AF": "0",
          "P4J_FORMER_SIZE_LITERAL_VF": "0",
          "P4J_FORMER_STMT_ASSIGN_AF": "0",
          "P4J_FORMER_STMT_CALL_AF": "0",
          "P4J_FORMER_STMT_COND_AF": "0",
          "P4J_FORMER_STMT_CONTROL_AF": "0",
          "P4J_FORMER_STMT_LABEL_AF": "0",
          "P4J_FORMER_STMT_LOOP_AF": "0",
          "P4J_FORMER_STRING_LITERAL_VF": "0",
          "P4J_FORMER_UOP_DEC_AF": "0",
          "P4J_FORMER_UOP_INC_AF": "0",
          "P4J_FORMER_ZERO_CONST_VF": "0",
          "P4J_LATER_ABST_V_AF": "0",
          "P4J_LATER_ASSIGN_CONST_AF": "0",
          "P4J_LATER_ASSIGN_LHS_AF": "0",
          "P4J_LATER_ASSIGN_ZERO_AF": "0",
          "P4J_LATER_CALLEE_AF": "1",
          "P4J_LATER_CALL_ARGUMENT_AF": "1",
          "P4J_LATER_CHANGED_AF": "0",
          "P4J_LATER_DEREF_AF": "0",
          "P4J_LATER_FUNC_ARGUMENT_VF": "0",
          "P4J_LATER_GLOBAL_VARIABLE_VF": "0",
          "P4J_LATER_INDEX_AF": "0",
          "P4J_LATER_INSERT_CONTROL_RF": "0",
          "P4J_LATER_INSERT_GUARD_RF": "0",
          "P4J_LATER_INSERT_STMT_RF": "0",
          "P4J_LATER_LOCAL_VARIABLE_VF": "0",
          "P4J_LATER_MEMBER_ACCESS_AF": "1",
          "P4J_LATER_MEMBER_VF": "0",
          "P4J_LATER_MODIFIED_SIMILAR_VF": "0",
          "P4J_LATER_MODIFIED_VF": "0",
          "P4J_LATER_NONZERO_CONST_VF": "0",
          "P4J_LATER_OP_ADD_AF": "1",
          "P4J_LATER_OP_DIV_AF": "0",
          "P4J_LATER_OP_EQ_AF": "1",
          "P4J_LATER_OP_GE_AF": "0",
          "P4J_LATER_OP_GT_AF": "0",
          "P4J_LATER_OP_LE_AF": "0",
          "P4J_LATER_OP_LT_AF": "1",
          "P4J_LATER_OP_MOD_AF": "0",
          "P4J_LATER_OP_MUL_AF": "0",
          "P4J_LATER_OP_NE_AF": "0",
          "P4J_LATER_OP_SUB_AF": "1",
          "P4J_LATER_REMOVE_PARTIAL_IF": "0",
          "P4J_LATER_REMOVE_STMT": "0",
          "P4J_LATER_REMOVE_WHOLE_BLOCK": "0",
          "P4J_LATER_REMOVE_WHOLE_IF": "0",
          "P4J_LATER_REPLACE_COND_RF": "0",
          "P4J_LATER_REPLACE_STMT_RF": "0",
          "P4J_LATER_R_STMT_ASSIGN_AF": "0",
          "P4J_LATER_R_STMT_CALL_AF": "0",
          "P4J_LATER_R_STMT_COND_AF": "0",
          "P4J_LATER_R_STMT_CONTROL_AF": "0",
          "P4J_LATER_SIZE_LITERAL_VF": "0",
          "P4J_LATER_STMT_ASSIGN_AF": "0",
          "P4J_LATER_STMT_CALL_AF": "1",
          "P4J_LATER_STMT_COND_AF": "1",
          "P4J_LATER_STMT_CONTROL_AF": "1",
          "P4J_LATER_STMT_LABEL_AF": "0",
          "P4J_LATER_STMT_LOOP_AF": "0",
          "P4J_LATER_STRING_LITERAL_VF": "0",
          "P4J_LATER_UOP_DEC_AF": "0",
          "P4J_LATER_UOP_INC_AF": "0",
          "P4J_LATER_ZERO_CONST_VF": "0",
          "P4J_SRC_ABST_V_AF": "0",
          "P4J_SRC_ASSIGN_CONST_AF": "0",
          "P4J_SRC_ASSIGN_LHS_AF": "0",
          "P4J_SRC_ASSIGN_ZERO_AF": "0",
          "P4J_SRC_CALLEE_AF": "1",
          "P4J_SRC_CALL_ARGUMENT_AF": "0",
          "P4J_SRC_CHANGED_AF": "0",
          "P4J_SRC_DEREF_AF": "0",
          "P4J_SRC_FUNC_ARGUMENT_VF": "0",
          "P4J_SRC_GLOBAL_VARIABLE_VF": "1",
          "P4J_SRC_INDEX_AF": "0",
          "P4J_SRC_INSERT_CONTROL_RF": "1",
          "P4J_SRC_INSERT_GUARD_RF": "0",
          "P4J_SRC_INSERT_STMT_RF": "0",
          "P4J_SRC_LOCAL_VARIABLE_VF": "1",
          "P4J_SRC_MEMBER_ACCESS_AF": "0",
          "P4J_SRC_MEMBER_VF": "0",
          "P4J_SRC_MODIFIED_SIMILAR_VF": "0",
          "P4J_SRC_MODIFIED_VF": "0",
          "P4J_SRC_NONZERO_CONST_VF": "1",
          "P4J_SRC_OP_ADD_AF": "1",
          "P4J_SRC_OP_DIV_AF": "0",
          "P4J_SRC_OP_EQ_AF": "1",
          "P4J_SRC_OP_GE_AF": "0",
          "P4J_SRC_OP_GT_AF": "0",
          "P4J_SRC_OP_LE_AF": "0",
          "P4J_SRC_OP_LT_AF": "0",
          "P4J_SRC_OP_MOD_AF": "0",
          "P4J_SRC_OP_MUL_AF": "0",
          "P4J_SRC_OP_NE_AF": "0",
          "P4J_SRC_OP_SUB_AF": "1",
          "P4J_SRC_REMOVE_PARTIAL_IF": "0",
          "P4J_SRC_REMOVE_STMT": "0",
          "P4J_SRC_REMOVE_WHOLE_BLOCK": "0",
          "P4J_SRC_REMOVE_WHOLE_IF": "0",
          "P4J_SRC_REPLACE_COND_RF": "0",
          "P4J_SRC_REPLACE_STMT_RF": "0",
          "P4J_SRC_R_STMT_ASSIGN_AF": "0",
          "P4J_SRC_R_STMT_CALL_AF": "0",
          "P4J_SRC_R_STMT_COND_AF": "0",
          "P4J_SRC_R_STMT_CONTROL_AF": "0",
          "P4J_SRC_SIZE_LITERAL_VF": "0",
          "P4J_SRC_STMT_ASSIGN_AF": "0",
          "P4J_SRC_STMT_CALL_AF": "1",
          "P4J_SRC_STMT_COND_AF": "1",
          "P4J_SRC_STMT_CONTROL_AF": "1",
          "P4J_SRC_STMT_LABEL_AF": "0",
          "P4J_SRC_STMT_LOOP_AF": "0",
          "P4J_SRC_STRING_LITERAL_VF": "1",
          "P4J_SRC_UOP_DEC_AF": "0",
          "P4J_SRC_UOP_INC_AF": "0",
          "P4J_SRC_ZERO_CONST_VF": "0"
        },
        {
          "repairPatterns": {
            "codeMove": 0,
            "condBlockExcAdd": 0,
            "condBlockOthersAdd": 0,
            "condBlockRem": 0,
            "condBlockRetAdd": 0,
            "constChange": 0,
            "copyPaste": 0,
            "expArithMod": 0,
            "expLogicExpand": 0,
            "expLogicMod": 0,
            "expLogicReduce": 0,
            "missNullCheckN": 0,
            "missNullCheckP": 0,
            "notClassified": 0,
            "singleLine": 0,
            "unwrapIfElse": 0,
            "unwrapMethod": 0,
            "unwrapTryCatch": 0,
            "wrapsElse": 0,
            "wrapsIf": 0,
            "wrapsIfElse": 0,
            "wrapsLoop": 0,
            "wrapsMethod": 0,
            "wrapsTryCatch": 0,
            "wrongMethodRef": 0,
            "wrongVarRef": 0
          }
        },
        {
          "UpdateLiteral": 0,
          "addLineNo": 10,
          "addThis": 0,
          "condLogicReduce": 0,
          "dupArgsInvocation": 0,
          "ifTrue": 0,
          "insertBooleanLiteral": 0,
          "insertIfFalse": 0,
          "insertNewConstLiteral": 0,
          "patchedFileNo": 1,
          "removeNullinCond": 0,
          "rmLineNo": 1,
          "updIfFalse": 0
        }
      ],
      "file_name": "Developer"
    }
  ],
  "id": "patch1#1-Time-1"
}