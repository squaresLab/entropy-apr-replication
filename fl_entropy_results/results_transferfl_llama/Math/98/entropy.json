{"line_number": 994, "line_type": "original", "code": "            for (int i = 0; i < nCols; i++) {", "entropy": 1.031507134437561, "is_bug_line": false, "sus_score": 0.4582134187221527, "per_token_entropy": [7.139294624328613, 6.332721710205078, 1.4040005207061768, 0.626350462436676, 0.38998329639434814, 0.030928973108530045, 0.018838418647646904, 0.019578656181693077, 0.005049689672887325, 0.006596812047064304, 0.023892927914857864, 1.3634370565414429, 1.0500887632369995, 0.03341994062066078, 0.017275337129831314, 0.0509895496070385, 0.022704878821969032, 0.03197614476084709], "tokens": [632, 363, 313, 524, 474, 353, 29871, 29900, 29936, 474, 529, 302, 1625, 29879, 29936, 474, 4862, 426]}
{"line_number": 994, "line_type": "generated", "code": "\n     *", "entropy": 0.2894028425216675, "is_bug_line": false, "sus_score": 0.4582134187221527, "per_token_entropy": [0.6313762068748474, 0.2294699102640152, 0.007362376432865858], "tokens": [13, 268, 334]}
{"line_number": 783, "line_type": "original", "code": "     *", "entropy": 3.343595504760742, "is_bug_line": false, "sus_score": 0.45806437730789185, "per_token_entropy": [5.886646270751953, 0.800544798374176], "tokens": [418, 334]}
{"line_number": 783, "line_type": "generated", "code": "\n     * @param row row index\n     * @param column column index\n     * @return entry in the specified row and column\n     * @throws MatrixIndexException if the row or column index is not valid\n     */\n    public", "entropy": 0.14291493594646454, "is_bug_line": false, "sus_score": 0.45806437730789185, "per_token_entropy": [0.04350953549146652, 0.04401342198252678, 0.004000281449407339, 0.03223439306020737, 0.007161542307585478, 0.14656434953212738, 1.0554949045181274, 0.30277079343795776, 0.37344837188720703, 0.057455990463495255, 8.654219709569588e-05, 0.008895057253539562, 0.0007529999129474163, 0.026183629408478737, 0.013302621431648731, 0.001135776867158711, 0.015516041778028011, 0.03260507807135582, 0.0011360150529071689, 0.0036844005808234215, 0.009787782095372677, 1.4414087533950806, 0.6465532183647156, 0.4041072726249695, 0.5972028374671936, 0.09319807589054108, 0.25993216037750244, 0.00154971145093441, 0.20329278707504272, 0.042791947722435, 0.0050804088823497295, 0.002310703741386533, 0.0113101527094841, 9.77468371274881e-05, 0.031495727598667145, 0.00021717573690693825, 8.451581379631534e-05, 0.057733166962862015, 0.1463078409433365, 0.6246476769447327, 0.04324425384402275, 0.004852898418903351, 0.04784565046429634, 0.03426628187298775, 0.19402937591075897, 0.009620139375329018, 0.12084430456161499, 0.10793334990739822, 0.034316617995500565, 0.01516961120069027, 0.06083115562796593, 0.009561458602547646], "tokens": [13, 268, 334, 732, 3207, 1948, 1948, 2380, 13, 268, 334, 732, 3207, 1897, 1897, 2380, 13, 268, 334, 732, 2457, 6251, 297, 278, 6790, 1948, 322, 1897, 13, 268, 334, 732, 386, 5727, 22513, 3220, 2451, 565, 278, 1948, 470, 1897, 2380, 338, 451, 2854, 13, 268, 3776, 13, 1678, 970]}
{"line_number": 986, "line_type": "original", "code": "        if (v.length != this.getColumnDimension()) {", "entropy": 1.4625972509384155, "is_bug_line": false, "sus_score": 0.44270265102386475, "per_token_entropy": [6.8478169441223145, 5.10629415512085, 0.10790584981441498, 4.135430812835693, 1.5931484699249268, 0.0378841795027256, 1.0097311735153198, 2.3414154052734375, 0.0025800534058362246, 0.057278137654066086, 0.6513866186141968, 0.00027771908207796514, 9.63164638960734e-05, 0.0306547824293375, 0.017058787867426872], "tokens": [308, 565, 313, 29894, 29889, 2848, 2804, 445, 29889, 657, 4409, 16142, 2673, 3101, 426]}
{"line_number": 986, "line_type": "generated", "code": "\n            out[col] = sum;\n        }\n        return out;\n    }\n    \n    /**\n     * Returns the (row) vector result of premultiplying this by the vector", "entropy": 0.06443336606025696, "is_bug_line": false, "sus_score": 0.44270265102386475, "per_token_entropy": [0.3010217547416687, 0.5310845375061035, 1.1887273788452148, 0.004081729333847761, 0.016304483637213707, 0.004758581053465605, 0.0007764662150293589, 0.044573377817869186, 0.1501111090183258, 0.011549632996320724, 0.0538494847714901, 0.00112160702701658, 0.008361215703189373, 0.07989407330751419, 0.0035101487301290035, 0.0013569919392466545, 0.0005766874528490007, 0.0041644759476184845, 0.02002394013106823, 0.0008592489175498486, 0.004365913104265928, 0.03823200985789299, 0.00014423283573705703, 0.03737661987543106, 0.012528643012046814, 0.004071162547916174, 0.0016179102240130305, 0.00012706902634818107, 0.04150230437517166, 0.03650452196598053, 0.11629663407802582, 0.005468765739351511, 0.0002549561613705009, 0.00691082701086998, 0.004032338969409466, 0.0003381395654287189, 0.011069436557590961, 0.0013165149139240384, 0.0004825619689654559, 0.0017241863533854485, 0.0028773832600563765, 0.003138380590826273, 0.013547152280807495], "tokens": [13, 9651, 714, 29961, 1054, 29962, 353, 2533, 29936, 13, 4706, 500, 13, 4706, 736, 714, 29936, 13, 1678, 500, 13, 268, 13, 1678, 7762, 13, 268, 334, 16969, 278, 313, 798, 29897, 4608, 1121, 310, 758, 18056, 5890, 445, 491, 278, 4608]}
{"line_number": 774, "line_type": "original", "code": "        }", "entropy": 7.9538984298706055, "is_bug_line": false, "sus_score": 0.44179388880729675, "per_token_entropy": [5.9771904945373535, 9.9306058883667], "tokens": [308, 500]}
{"line_number": 774, "line_type": "generated", "code": "\n     * Returns the matrix cell value at coordinates", "entropy": 0.70640629529953, "is_bug_line": false, "sus_score": 0.44179388880729675, "per_token_entropy": [0.30794233083724976, 0.35638245940208435, 0.07210477441549301, 0.7698620557785034, 0.6517865061759949, 1.475156545639038, 0.7688469290733337, 0.15334545075893402, 0.30539530515670776, 2.2032408714294434], "tokens": [13, 268, 334, 16969, 278, 4636, 3038, 995, 472, 10350]}
{"line_number": 989, "line_type": "original", "code": "        final int nRows = this.getRowDimension();", "entropy": 1.0176937580108643, "is_bug_line": false, "sus_score": 0.44159355759620667, "per_token_entropy": [5.728155612945557, 6.97953987121582, 0.24263860285282135, 0.04803279787302017, 0.1606183797121048, 0.003195182653144002, 0.04238399863243103, 0.00021789084712509066, 0.004998805467039347, 0.019302973523736, 0.00011884459672728553, 1.2874520507466514e-05, 0.000802075956016779], "tokens": [308, 2186, 938, 302, 10661, 353, 445, 29889, 657, 4301, 16142, 2673, 890]}
{"line_number": 989, "line_type": "generated", "code": "\n        final int nRows = this.getRowDimension();\n        if (v.length != nRows) {\n            throw new IllegalArgumentException(\"vector has wrong length\");\n        }\n        final int nCols = this", "entropy": 0.06253741681575775, "is_bug_line": false, "sus_score": 0.44159355759620667, "per_token_entropy": [0.10332344472408295, 1.120457410812378, 0.4673566222190857, 0.0965334102511406, 0.0248710960149765, 0.27452191710472107, 0.0021657124161720276, 0.023577798157930374, 0.0001731960946926847, 0.002547235693782568, 0.010496056638658047, 6.4490144723095e-05, 6.6756979322235566e-06, 0.0006571040721610188, 0.0015410225605592132, 0.028750022873282433, 0.5370498299598694, 0.0006180283380672336, 0.012129239737987518, 0.0012763934209942818, 0.0036381976678967476, 0.0026632812805473804, 0.007149469573050737, 0.005252371542155743, 0.001257224939763546, 0.0005891970940865576, 0.0004576589271891862, 0.0035278485156595707, 0.0034249713644385338, 0.0007656264933757484, 0.0015672078588977456, 3.015949550899677e-05, 0.00022921319759916514, 6.961580220377073e-05, 0.003931532148271799, 0.009368977509438992, 0.005325061734765768, 0.0009469077922403812, 0.003490429138764739, 0.016056284308433533, 0.0005018643569201231, 0.0012769886525347829, 0.00026544384309090674, 0.0027513764798641205, 0.2444237321615219, 0.04763084650039673, 0.1634443700313568, 0.00442122109234333, 0.004797495435923338, 0.00014554394874721766, 0.00045098623377270997, 0.0039780777879059315], "tokens": [13, 4706, 2186, 938, 302, 10661, 353, 445, 29889, 657, 4301, 16142, 2673, 890, 13, 4706, 565, 313, 29894, 29889, 2848, 2804, 302, 10661, 29897, 426, 13, 9651, 3183, 716, 1720, 12018, 15730, 2451, 703, 8111, 756, 2743, 3309, 1496, 13, 4706, 500, 13, 4706, 2186, 938, 302, 1625, 29879, 353, 445]}
{"line_number": 995, "line_type": "original", "code": "                sum = sum.add(data[row][i].multiply(v[i]));", "entropy": 1.309483289718628, "is_bug_line": false, "sus_score": 0.43904104828834534, "per_token_entropy": [7.047458171844482, 12.306620597839355, 1.084065556526184, 1.0646167993545532, 0.02145976386964321, 0.12251835316419601, 0.016658609732985497, 0.2013397514820099, 0.00511670159175992, 1.1602954864501953, 0.025486499071121216, 2.4748449325561523, 0.042825981974601746, 0.06391040235757828, 0.00022539935889653862, 0.005943956319242716, 1.5115200281143188, 0.03475412353873253, 0.22834821045398712, 0.07739179581403732, 0.0037491286639124155], "tokens": [462, 2533, 353, 2533, 29889, 1202, 29898, 1272, 29961, 798, 3816, 29875, 1822, 18056, 368, 29898, 29894, 29961, 29875, 2314, 416]}
{"line_number": 995, "line_type": "generated", "code": "\n     * @param b matrix of constant vectors\n     * @return a matrix of solution vectors\n     * @throws IllegalArgumentException if columnDimension != b.rowDimension\n     */\n    public BigMatrix solve(BigMatrix", "entropy": 0.25136440992355347, "is_bug_line": false, "sus_score": 0.43904104828834534, "per_token_entropy": [0.26989805698394775, 0.15279707312583923, 0.0509423092007637, 1.222863793373108, 0.12183713912963867, 0.19118987023830414, 0.8499890565872192, 0.394296795129776, 0.4659508168697357, 0.0428382009267807, 0.2560851573944092, 0.08826902508735657, 0.007083895616233349, 0.029463518410921097, 0.052016161382198334, 2.344533920288086, 0.03643659129738808, 0.30520573258399963, 0.21064811944961548, 0.01533116027712822, 0.14050789177417755, 0.07504184544086456, 0.16757701337337494, 0.0814838781952858, 0.024989811703562737, 0.00027426297310739756, 0.08579804748296738, 8.702239938429557e-06, 0.0020042823161929846, 0.0003543464408721775, 0.06643867492675781, 0.9678986072540283, 0.03710430860519409, 0.0006993946735747159, 0.09227725863456726, 0.1840406060218811, 0.015751348808407784, 0.297458291053772, 0.002130621112883091, 0.00031883400515653193, 0.5680568218231201, 0.18122437596321106, 0.7176707983016968, 0.00605948967859149, 0.042259786278009415, 0.010986315086483955, 0.38565921783447266, 1.5838656425476074, 0.11600518226623535, 0.0375446118414402, 0.06583736836910248, 0.005943363532423973], "tokens": [13, 268, 334, 732, 3207, 289, 4636, 310, 4868, 12047, 13, 268, 334, 732, 2457, 263, 4636, 310, 1650, 12047, 13, 268, 334, 732, 386, 5727, 1720, 12018, 15730, 2451, 565, 1897, 16142, 2673, 2804, 289, 29889, 798, 16142, 2673, 13, 268, 3776, 13, 1678, 970, 7997, 14609, 4505, 29898, 6970, 14609]}
{"line_number": 775, "line_type": "original", "code": "        return out;", "entropy": 4.546846866607666, "is_bug_line": false, "sus_score": 0.43659427762031555, "per_token_entropy": [4.9474053382873535, 8.651589393615723, 4.029732704162598, 0.5586596727371216], "tokens": [308, 736, 714, 29936]}
{"line_number": 775, "line_type": "generated", "code": "\n     *\n     * @param row the row index of the entry to be fetched\n     * @param column the column index of the entry to be fetched\n     * @return the entry in the specified row and column\n     * @", "entropy": 0.16929888725280762, "is_bug_line": false, "sus_score": 0.43659427762031555, "per_token_entropy": [0.10369814187288284, 0.1749112755060196, 0.021837962791323662, 0.8877113461494446, 0.049605291336774826, 0.0014136569807305932, 0.05979514122009277, 0.014201411046087742, 0.05286681652069092, 1.1143474578857422, 0.08748762309551239, 0.6324852705001831, 2.082157611846924, 0.009407948702573776, 0.22260047495365143, 0.6586804389953613, 0.12743443250656128, 0.5523821115493774, 0.00020132421923335642, 0.05194079130887985, 0.02696707285940647, 4.053033626405522e-05, 0.0023315169382840395, 0.0010419422760605812, 0.11611270904541016, 0.01580767333507538, 0.014355361461639404, 0.0018634112784639, 0.0007047553663142025, 0.0012665116228163242, 0.0005703729693777859, 0.0014024670235812664, 0.0005626287311315536, 0.0003667397249955684, 0.0012493670219555497, 0.007695670239627361, 0.05612991005182266, 0.0020918408408761024, 0.0065340446308255196, 0.009153426624834538, 0.2270122617483139, 0.12859299778938293, 0.17618338763713837, 0.14928428828716278, 0.46342381834983826, 0.06049805507063866, 0.06602943688631058, 0.0011375630274415016, 0.15204046666622162, 0.1738756150007248, 0.027837786823511124, 0.00621221074834466], "tokens": [13, 268, 334, 13, 268, 334, 732, 3207, 1948, 278, 1948, 2380, 310, 278, 6251, 304, 367, 6699, 287, 13, 268, 334, 732, 3207, 1897, 278, 1897, 2380, 310, 278, 6251, 304, 367, 6699, 287, 13, 268, 334, 732, 2457, 278, 6251, 297, 278, 6790, 1948, 322, 1897, 13, 268, 334, 732]}
{"line_number": 780, "line_type": "original", "code": "     * <p>", "entropy": 3.263652801513672, "is_bug_line": false, "sus_score": 0.43502509593963623, "per_token_entropy": [6.681218147277832, 2.4126176834106445, 2.5253329277038574, 4.515491008758545, 0.18360278010368347], "tokens": [418, 334, 529, 29886, 29958]}
{"line_number": 780, "line_type": "generated", "code": "\n     * </ul>\n     * </p>\n     *\n     * @param row row index\n     * @param column column index\n     * @return the entry in the specified row and column.\n     * @throws Matrix", "entropy": 0.13927960395812988, "is_bug_line": false, "sus_score": 0.43502509593963623, "per_token_entropy": [0.025001438334584236, 0.06550806015729904, 0.002020938089117408, 0.024925630539655685, 0.004248759243637323, 0.17226938903331757, 0.017763806506991386, 0.09032263606786728, 0.0022693139035254717, 0.5552637577056885, 0.004511416424065828, 0.019367048516869545, 0.01373318675905466, 0.05813569203019142, 0.002202229807153344, 0.3876132667064667, 0.01725108176469803, 0.0004894727608188987, 0.00628435704857111, 0.006319302599877119, 0.13759545981884003, 1.196150779724121, 0.2615245580673218, 0.39580267667770386, 0.04023035243153572, 0.00015007323236204684, 0.0006043276516720653, 0.0006073060794733465, 0.018034646287560463, 0.015952929854393005, 0.0010175295174121857, 0.017744014039635658, 0.027708277106285095, 0.0011960265692323446, 0.004335765726864338, 0.012618345208466053, 0.875700831413269, 0.25767242908477783, 0.3699706792831421, 0.1853843629360199, 0.404716432094574, 0.06999380886554718, 0.07416447252035141, 0.0015881556319072843, 1.22861647605896, 0.008872726000845432, 0.06056661531329155, 0.01880577951669693, 0.010181985795497894, 0.021243534982204437, 9.476689592702314e-05, 0.048192303627729416], "tokens": [13, 268, 334, 1533, 352, 29958, 13, 268, 334, 1533, 29886, 29958, 13, 268, 334, 13, 268, 334, 732, 3207, 1948, 1948, 2380, 13, 268, 334, 732, 3207, 1897, 1897, 2380, 13, 268, 334, 732, 2457, 278, 6251, 297, 278, 6790, 1948, 322, 1897, 29889, 13, 268, 334, 732, 386, 5727, 22513]}
{"line_number": 992, "line_type": "original", "code": "        for (int row = 0; row < nRows; row++) {", "entropy": 0.8736071586608887, "is_bug_line": false, "sus_score": 0.43280717730522156, "per_token_entropy": [6.467409610748291, 6.180116653442383, 0.04692132771015167, 0.10241083055734634, 1.4706463813781738, 0.03512445092201233, 0.03451000154018402, 0.007579497527331114, 0.005002482328563929, 0.0042654965072870255, 0.0066572073847055435, 0.42542657256126404, 0.008640876971185207, 0.01432046014815569, 0.023859288543462753, 0.010934080928564072, 0.0074964407831430435], "tokens": [308, 363, 313, 524, 1948, 353, 29871, 29900, 29936, 1948, 529, 302, 10661, 29936, 1948, 4862, 426]}
{"line_number": 992, "line_type": "generated", "code": "\n     * Returns the result of adding this and m.\n     *\n     * @param m matrix to add\n     * @return this + m\n     * @throws IllegalArgumentException if m is not the same size as this\n", "entropy": 0.1685456484556198, "is_bug_line": false, "sus_score": 0.43280717730522156, "per_token_entropy": [0.28784042596817017, 0.6365876793861389, 0.0784887745976448, 0.5161334872245789, 0.22564400732517242, 1.5097633600234985, 0.005021104589104652, 1.3989272117614746, 0.49023526906967163, 0.7352467179298401, 0.1832486093044281, 0.0726170763373375, 0.028368055820465088, 0.037453096359968185, 0.0020283141639083624, 0.07305498421192169, 0.03424439579248428, 0.0007245299639180303, 0.0024733925238251686, 0.0017310886178165674, 0.0151565782725811, 0.5569619536399841, 0.0008883106056600809, 0.050297148525714874, 0.014952017925679684, 0.028253912925720215, 0.00041237910045310855, 0.004503465257585049, 0.009540440514683723, 0.017456812784075737, 0.05281740427017212, 0.0008183944155462086, 0.007892020978033543, 0.019901126623153687, 0.00921461172401905, 0.01174499373883009, 0.004178246948868036, 0.00014351768186315894, 0.01216998789459467, 2.47952248173533e-05, 0.00015507926582358778, 0.0004959068610332906, 0.015710627660155296, 0.44031471014022827, 0.7253022789955139, 0.17366862297058105, 0.025500094518065453, 0.005912433844059706, 0.02006985805928707, 0.00639665313065052, 0.0014397265622392297, 0.2122492492198944], "tokens": [13, 268, 334, 16969, 278, 1121, 310, 4417, 445, 322, 286, 29889, 13, 268, 334, 13, 268, 334, 732, 3207, 286, 4636, 304, 788, 13, 268, 334, 732, 2457, 445, 718, 286, 13, 268, 334, 732, 386, 5727, 1720, 12018, 15730, 2451, 565, 286, 338, 451, 278, 1021, 2159, 408, 445, 13]}
{"line_number": 776, "line_type": "original", "code": "    }", "entropy": 6.6894307136535645, "is_bug_line": false, "sus_score": 0.42826730012893677, "per_token_entropy": [1.8595598936080933, 11.519301414489746], "tokens": [268, 500]}
{"line_number": 776, "line_type": "generated", "code": "\n     * Row and column indices start at 0.  A", "entropy": 0.10959671437740326, "is_bug_line": false, "sus_score": 0.42826730012893677, "per_token_entropy": [0.31261661648750305, 0.09782852232456207, 0.012729462236166, 0.500427782535553, 0.14089521765708923, 0.0063882432878017426, 0.0072942133992910385, 0.010100089013576508, 0.0008981961291283369, 0.0432281531393528, 0.0014230611268430948, 0.1818249672651291, 0.10458918660879135, 0.11411026865243912], "tokens": [13, 268, 334, 11438, 322, 1897, 16285, 1369, 472, 29871, 29900, 29889, 29871, 319]}
{"line_number": 154, "line_type": "original", "code": "                if (d[r].length != nCols) {", "entropy": 2.0341362953186035, "is_bug_line": false, "sus_score": 0.4188343286514282, "per_token_entropy": [8.444933891296387, 10.589396476745605, 0.029029831290245056, 0.07438726723194122, 4.011106967926025, 4.406589984893799, 0.3950267434120178, 0.015229725278913975, 0.11889810860157013, 0.27371540665626526, 0.04903952032327652, 0.006290279794484377, 0.03930331766605377, 0.024959582835435867], "tokens": [462, 565, 313, 29881, 29961, 29878, 1822, 2848, 2804, 302, 1625, 29879, 29897, 426]}
{"line_number": 154, "line_type": "generated", "code": "\n    public BigMatrixImpl(String[][] d) {\n        final int nRows = d.length;\n        if (nRows == 0) {\n            throw new IllegalArgumentException(\n            \"Matrix must have at least", "entropy": 0.02678811363875866, "is_bug_line": false, "sus_score": 0.4188343286514282, "per_token_entropy": [0.21788205206394196, 0.20344054698944092, 0.04657844081521034, 0.019544990733265877, 0.005099860019981861, 0.003838553326204419, 0.004713139962404966, 0.0929722711443901, 0.021289048716425896, 0.02949083410203457, 0.015032108873128891, 0.024230998009443283, 0.020871298387646675, 0.019405048340559006, 0.183312326669693, 0.2042386680841446, 0.003586291102692485, 0.005176118575036526, 0.001438060076907277, 0.001545426552183926, 0.001077071763575077, 0.00022003613412380219, 6.687417771900073e-05, 0.0006086166249588132, 0.0032793099526315928, 0.01045535784214735, 0.003485320834442973, 0.0003914067056030035, 0.003423308255150914, 2.8609820219571702e-05, 0.0011336335446685553, 0.00020656836568377912, 3.182837463100441e-05, 0.0013163958210498095, 0.0004439560289029032, 0.0018618644680827856, 0.01380502711981535, 0.0005546461907215416, 0.0003883084573317319, 0.0011847150744870305, 1.1920922133867862e-06, 6.747018051100895e-05, 9.775113539944869e-06, 0.1398863047361374, 0.0026264239568263292, 0.076540008187294, 0.0014577010879293084, 0.0037993642035871744, 0.000416907190810889, 0.0002946419408544898, 0.00016008525562938303, 7.295342220459133e-05], "tokens": [13, 1678, 970, 7997, 14609, 6647, 29898, 1231, 2636, 2636, 270, 29897, 426, 13, 4706, 2186, 938, 302, 10661, 353, 270, 29889, 2848, 29936, 13, 4706, 565, 313, 29876, 10661, 1275, 29871, 29900, 29897, 426, 13, 9651, 3183, 716, 1720, 12018, 15730, 2451, 29898, 13, 9651, 376, 14609, 1818, 505, 472, 3203]}
{"line_number": 990, "line_type": "original", "code": "        final int nCols = this.getColumnDimension();", "entropy": 1.3723819255828857, "is_bug_line": false, "sus_score": 0.4023262560367584, "per_token_entropy": [7.3144941329956055, 9.845844268798828, 0.5411106944084167, 0.14439524710178375, 1.219730257987976, 0.006803443189710379, 0.03201955556869507, 0.08517280220985413, 0.0007314390386454761, 0.010982777923345566, 0.00886433757841587, 7.343022298300639e-05, 0.00017128908075392246, 0.002951196860522032], "tokens": [308, 2186, 938, 302, 1625, 29879, 353, 445, 29889, 657, 4409, 16142, 2673, 890]}
{"line_number": 990, "line_type": "generated", "code": "\n    /**\n     * Returns the (row) vector result of premultiplying this by the vector", "entropy": 0.07999743521213531, "is_bug_line": false, "sus_score": 0.4023262560367584, "per_token_entropy": [0.07226825505495071, 0.3084881007671356, 0.0715436041355133, 0.020176995545625687, 0.006476247683167458, 0.0005018643569201231, 0.21802401542663574, 0.14496825635433197, 0.6918887495994568, 0.01720350980758667, 0.000777776469476521, 0.021395238116383553, 0.01066650077700615, 0.0005725175142288208, 0.046699728816747665, 0.0021236028987914324, 0.0010253892978653312, 0.004793580621480942, 0.008778905496001244, 0.005417546723037958, 0.026155756786465645], "tokens": [13, 1678, 7762, 13, 268, 334, 16969, 278, 313, 798, 29897, 4608, 1121, 310, 758, 18056, 5890, 445, 491, 278, 4608]}
{"line_number": 779, "line_type": "original", "code": "     * Returns the entries in column number <code>col</code> as an array.", "entropy": 1.660138726234436, "is_bug_line": true, "sus_score": 0.3976830840110779, "per_token_entropy": [6.441494464874268, 2.213320016860962, 13.875039100646973, 0.3430855870246887, 4.773873329162598, 0.03407342731952667, 1.491968035697937, 0.04476421698927879, 0.05664415284991264, 0.0063511673361063, 0.0006921279709786177, 0.035636261105537415, 0.0019443194614723325, 0.00030870441696606576, 0.006374976597726345, 0.03601488843560219, 0.015227260068058968, 0.006116481497883797, 2.159705400466919], "tokens": [418, 334, 16969, 278, 9976, 297, 1897, 1353, 529, 401, 29958, 1054, 829, 401, 29958, 408, 385, 1409, 29889]}
{"line_number": 779, "line_type": "generated", "code": "\n     *", "entropy": 0.038480084389448166, "is_bug_line": true, "sus_score": 0.3976830840110779, "per_token_entropy": [0.02755718119442463, 0.08733688294887543, 0.0005461869877763093], "tokens": [13, 268, 334]}
{"line_number": 991, "line_type": "original", "code": "        final BigDecimal[] out = new BigDecimal[v.length];", "entropy": 1.569970965385437, "is_bug_line": true, "sus_score": 0.3972943127155304, "per_token_entropy": [7.144286632537842, 9.254260063171387, 1.0795750617980957, 0.033675048500299454, 0.49582988023757935, 0.9495885372161865, 0.11337020248174667, 0.06667490303516388, 0.0008413827163167298, 0.0002975021197926253, 0.004294103477150202, 4.381572723388672, 0.007892967201769352, 0.01471429131925106, 0.0026903883554041386], "tokens": [308, 2186, 7997, 23307, 2636, 714, 353, 716, 7997, 23307, 29961, 29894, 29889, 2848, 1385]}
{"line_number": 991, "line_type": "generated", "code": "\n    /**\n     * Returns the (row) vector result of premultiplying this by the vector", "entropy": 0.09441913664340973, "is_bug_line": true, "sus_score": 0.3972943127155304, "per_token_entropy": [0.09740954637527466, 0.3126370310783386, 0.09265188127756119, 0.02074870653450489, 0.007446982432156801, 0.00040820849244482815, 0.2565489113330841, 0.14767032861709595, 0.8722325563430786, 0.025728533044457436, 0.0015501875896006823, 0.022508617490530014, 0.01337472815066576, 0.0005911033367738128, 0.05811285600066185, 0.0020393780432641506, 0.0010492063593119383, 0.005925825331360102, 0.009408775717020035, 0.0061628068797290325, 0.02859572507441044], "tokens": [13, 1678, 7762, 13, 268, 334, 16969, 278, 313, 798, 29897, 4608, 1121, 310, 758, 18056, 5890, 445, 491, 278, 4608]}
{"line_number": 993, "line_type": "original", "code": "            BigDecimal sum = ZERO;", "entropy": 2.4460065364837646, "is_bug_line": false, "sus_score": 0.39721712470054626, "per_token_entropy": [4.595162868499756, 4.757359027862549, 0.2460026890039444, 11.54300308227539, 0.5326966643333435, 0.32119137048721313, 0.0004677870310842991, 0.00011765264935093, 0.01805770955979824], "tokens": [632, 7997, 23307, 2533, 353, 796, 1001, 29949, 29936]}
{"line_number": 993, "line_type": "generated", "code": "\n     * @param b the matrix representing the right hand side of the linear equations\n     * @return a matrix of solution vectors\n     * @throws IllegalArgumentException if columnDimension != b.rowDimension\n     */\n   ", "entropy": 0.4132375121116638, "is_bug_line": false, "sus_score": 0.39721712470054626, "per_token_entropy": [0.779553234577179, 0.20694604516029358, 0.008457202464342117, 2.4350855350494385, 0.19593362510204315, 1.3127013444900513, 1.2983304262161255, 1.5123361349105835, 2.405860662460327, 0.056532178074121475, 0.7418301105499268, 0.3333320915699005, 0.15407656133174896, 0.2511548399925232, 0.16966064274311066, 0.7142800688743591, 1.655471682548523, 0.17386320233345032, 0.27131062746047974, 0.0030214395374059677, 0.09113176167011261, 0.0672483965754509, 1.5102628469467163, 0.09055274724960327, 0.6695637702941895, 0.5430800318717957, 0.05905105546116829, 0.23408439755439758, 0.07116831094026566, 0.08032913506031036, 0.06571481376886368, 0.01138370018452406, 0.00024172721896320581, 0.0772235244512558, 7.629365427419543e-06, 0.0029724722262471914, 0.0003936707798857242, 0.0888732522726059, 1.2024734020233154, 0.02358478307723999, 0.0017370387213304639, 0.04354286193847656, 0.26896047592163086, 0.009501592256128788, 0.35204827785491943, 0.002285608323290944, 0.0003607814433053136, 0.4119044542312622, 0.20452561974525452, 0.5767198801040649, 0.00517517002299428, 0.04251093417406082], "tokens": [13, 268, 334, 732, 3207, 289, 278, 4636, 15783, 278, 1492, 1361, 2625, 310, 278, 5608, 10693, 13, 268, 334, 732, 2457, 263, 4636, 310, 1650, 12047, 13, 268, 334, 732, 386, 5727, 1720, 12018, 15730, 2451, 565, 1897, 16142, 2673, 2804, 289, 29889, 798, 16142, 2673, 13, 268, 3776, 13, 1678]}
{"line_number": 781, "line_type": "original", "code": "     * Column indices start at 0.  A <code>MatrixIndexException</code> is thrown", "entropy": 0.9306700825691223, "is_bug_line": false, "sus_score": 0.39457738399505615, "per_token_entropy": [6.704923152923584, 2.720780611038208, 8.539016723632812, 0.19652330875396729, 0.04837223142385483, 0.006676509045064449, 0.019600750878453255, 0.008208940736949444, 0.3960382640361786, 1.0314478874206543, 0.20085735619068146, 0.23282194137573242, 0.006112690083682537, 0.0018466339679434896, 0.014271808788180351, 0.0020217709243297577, 0.0010598048102110624, 0.0025733946822583675, 0.0003955773718189448, 0.0002874914789572358, 0.292647123336792, 0.048255804926157], "tokens": [418, 334, 12481, 16285, 1369, 472, 29871, 29900, 29889, 29871, 319, 529, 401, 29958, 14609, 3220, 2451, 829, 401, 29958, 338, 12005]}
{"line_number": 781, "line_type": "generated", "code": "\n     * </p>\n     *\n     * @param row the row index\n     * @param column the column index\n     * @return the entry in the specified row and column\n     * @throws MatrixIndexException if the specified", "entropy": 0.1538061797618866, "is_bug_line": false, "sus_score": 0.39457738399505615, "per_token_entropy": [0.033182065933942795, 0.06991099566221237, 0.004801291972398758, 0.8241243958473206, 0.046600401401519775, 0.02001260593533516, 0.008774060755968094, 0.04004517197608948, 0.002286678645759821, 0.27217182517051697, 0.020435502752661705, 0.00047124247066676617, 0.006730624008923769, 0.005363835021853447, 0.1433919370174408, 1.4197570085525513, 0.10600022971630096, 0.6105197072029114, 0.23287077248096466, 0.022967975586652756, 5.23315102327615e-05, 0.0008424547268077731, 0.0004862556525040418, 0.019714483991265297, 0.01381713803857565, 0.01623997651040554, 0.0018981549656018615, 0.017063943669199944, 0.007417282555252314, 0.0012961566681042314, 0.004428460728377104, 0.013583256863057613, 0.1223088800907135, 0.2886175811290741, 0.5065810084342957, 0.20823577046394348, 0.5513611435890198, 0.1046345978975296, 0.09602703899145126, 0.002084584441035986, 0.2064228057861328, 0.036697711795568466, 0.014612440951168537, 0.005298499949276447, 0.020503828302025795, 0.00011145447206217796, 0.044779036194086075, 0.00038961926475167274, 0.00014137222024146467, 0.04929056018590927, 0.3817179799079895, 1.3708471059799194], "tokens": [13, 268, 334, 1533, 29886, 29958, 13, 268, 334, 13, 268, 334, 732, 3207, 1948, 278, 1948, 2380, 13, 268, 334, 732, 3207, 1897, 278, 1897, 2380, 13, 268, 334, 732, 2457, 278, 6251, 297, 278, 6790, 1948, 322, 1897, 13, 268, 334, 732, 386, 5727, 22513, 3220, 2451, 565, 278, 6790]}
{"line_number": 782, "line_type": "original", "code": "     * unless <code>0 <= column < columnDimension.</code></p>", "entropy": 1.3389674425125122, "is_bug_line": false, "sus_score": 0.38029083609580994, "per_token_entropy": [6.447704792022705, 1.1622943878173828, 13.604874610900879, 0.14094698429107666, 0.0095334742218256, 0.003909683786332607, 0.10586394369602203, 0.0067842621356248856, 2.0851128101348877, 0.011066606268286705, 0.020256202667951584, 0.000625176471658051, 8.082063141046092e-05, 0.3648238480091095, 0.0002338612830499187, 0.05478141829371452, 0.06407611817121506, 0.018444571644067764], "tokens": [418, 334, 6521, 529, 401, 29958, 29900, 5277, 1897, 529, 1897, 16142, 2673, 21106, 401, 2565, 29886, 29958]}
{"line_number": 782, "line_type": "generated", "code": "\n     * @param row row index\n     * @param column column index\n     * @return matrix entry in row", "entropy": 0.22757335007190704, "is_bug_line": false, "sus_score": 0.38029083609580994, "per_token_entropy": [0.03408748656511307, 0.0778578370809555, 0.01724475435912609, 1.3803054094314575, 0.01896604150533676, 0.07909166067838669, 1.0037388801574707, 0.22383320331573486, 0.4166586697101593, 0.02696858160197735, 0.00012468514614738524, 0.003118534805253148, 0.0012403184082359076, 0.021183431148529053, 0.013398959301412106, 0.0015099564334377646, 0.014598578214645386, 0.012976957485079765, 0.0026397404726594687, 0.004775191191583872, 0.013362259604036808, 1.3047051429748535, 0.08277096599340439, 0.7397615909576416, 0.19441477954387665], "tokens": [13, 268, 334, 732, 3207, 1948, 1948, 2380, 13, 268, 334, 732, 3207, 1897, 1897, 2380, 13, 268, 334, 732, 2457, 4636, 6251, 297, 1948]}
{"line_number": 784, "line_type": "original", "code": "     * @param col the column to be fetched", "entropy": 2.1299984455108643, "is_bug_line": false, "sus_score": 0.3728910982608795, "per_token_entropy": [5.8609700202941895, 2.0624845027923584, 0.13691343367099762, 0.05560221150517464, 2.681722402572632, 9.50041389465332, 0.026699919253587723, 3.047736883163452, 0.030522054061293602, 0.02641272358596325, 0.0005061537376604974], "tokens": [418, 334, 732, 3207, 784, 278, 1897, 304, 367, 6699, 287]}
{"line_number": 784, "line_type": "generated", "code": "\n     * @param column  column location of entry to be fetched\n     * @return the entry in the specified row and column.\n     * @throws MatrixIndexException if the row or column index is not valid.\n     */\n", "entropy": 0.14775224030017853, "is_bug_line": false, "sus_score": 0.3728910982608795, "per_token_entropy": [0.056257933378219604, 0.054267797619104385, 0.001967162825167179, 0.010295025072991848, 0.07114655524492264, 0.03577809035778046, 0.1922309845685959, 0.010108585469424725, 0.0027633835561573505, 0.0007901645149104297, 0.0009866851614788175, 0.0016296928515657783, 0.00048720886115916073, 0.0004287039046175778, 0.00042167355422861874, 0.5835885405540466, 0.43703699111938477, 0.0027398450765758753, 0.01755356974899769, 0.01343977265059948, 1.3974757194519043, 0.20336505770683289, 0.3909057378768921, 0.26441746950149536, 0.5363662242889404, 0.11180612444877625, 0.08091607689857483, 0.0023340145125985146, 1.009861946105957, 0.037221118807792664, 0.08959515392780304, 0.0071869888342916965, 0.007938028313219547, 0.015262012369930744, 0.00015066919149830937, 0.05366251617670059, 0.00022957073815632612, 0.00010156115604331717, 0.14558999240398407, 0.24974225461483002, 0.46239644289016724, 0.04132948815822601, 0.009486714377999306, 0.1010996624827385, 0.03640061244368553, 0.1327211558818817, 0.014089047908782959, 0.5543161630630493, 0.0327603742480278, 0.11919358372688293, 0.06207539886236191, 0.019200654700398445], "tokens": [13, 268, 334, 732, 3207, 1897, 29871, 1897, 4423, 310, 6251, 304, 367, 6699, 287, 13, 268, 334, 732, 2457, 278, 6251, 297, 278, 6790, 1948, 322, 1897, 29889, 13, 268, 334, 732, 386, 5727, 22513, 3220, 2451, 565, 278, 1948, 470, 1897, 2380, 338, 451, 2854, 29889, 13, 268, 3776, 13]}
{"line_number": 997, "line_type": "original", "code": "            out[row] = sum;", "entropy": 5.031809329986572, "is_bug_line": false, "sus_score": 0.37200745940208435, "per_token_entropy": [4.575215816497803, 10.992159843444824, 1.1671569347381592, 1.8411879539489746, 3.0816867351531982, 0.3006616532802582, 7.575214385986328, 10.72119140625], "tokens": [632, 714, 29961, 798, 29962, 353, 2533, 29936]}
{"line_number": 997, "line_type": "generated", "code": "\n     * @return Matrix of solution vectors\n     * @throws IllegalArgumentException if this matrix is not square or\n     *  if the length of any column of b does not match the row dimension\n     *  of this matrix.", "entropy": 0.43182554841041565, "is_bug_line": false, "sus_score": 0.37200745940208435, "per_token_entropy": [0.9602116942405701, 0.23141026496887207, 0.01978437602519989, 0.6130558252334595, 0.17519386112689972, 2.7384207248687744, 0.21890753507614136, 0.39198580384254456, 0.027441784739494324, 0.556553304195404, 0.17332716286182404, 0.140953928232193, 0.11930743604898453, 0.03006141074001789, 0.00026782741770148277, 0.0758809894323349, 2.062299427052494e-05, 0.0028864170890301466, 0.0004487222759053111, 0.09696248173713684, 1.6735656261444092, 0.11802227050065994, 0.050333086401224136, 0.2902083992958069, 0.08780475705862045, 1.0244507789611816, 1.1949851512908936, 0.2485208958387375, 0.004782191012054682, 1.6811771392822266, 0.7825461626052856, 0.9074207544326782, 0.9640610218048096, 0.0035669293720275164, 0.30448490381240845, 0.26499173045158386, 0.07164891809225082, 0.6497260928153992, 0.770263671875, 0.0157601498067379, 0.20578858256340027, 0.32654139399528503, 0.8342018127441406, 0.48959577083587646, 1.1245346069335938, 0.14621928334236145, 0.5436615347862244, 0.16235774755477905, 0.050990570336580276, 0.018414141610264778, 0.14390482008457184, 0.7273153066635132], "tokens": [13, 268, 334, 732, 2457, 22513, 310, 1650, 12047, 13, 268, 334, 732, 386, 5727, 1720, 12018, 15730, 2451, 565, 445, 4636, 338, 451, 6862, 470, 13, 268, 334, 29871, 565, 278, 3309, 310, 738, 1897, 310, 289, 947, 451, 1993, 278, 1948, 9927, 13, 268, 334, 29871, 310, 445, 4636, 29889]}
{"line_number": 786, "line_type": "original", "code": "     * @throws MatrixIndexException if the specified column index is not valid", "entropy": 1.2498854398727417, "is_bug_line": false, "sus_score": 0.36936649680137634, "per_token_entropy": [6.665628433227539, 2.046841621398926, 0.7016106247901917, 0.1959710568189621, 0.00030393750057555735, 0.15666355192661285, 0.0008490057080052793, 0.00023934361524879932, 0.1981268674135208, 0.18035031855106354, 1.873119592666626, 6.923041343688965, 0.979111909866333, 0.03216085955500603, 0.03865174949169159, 0.005498167593032122], "tokens": [418, 334, 732, 386, 5727, 22513, 3220, 2451, 565, 278, 6790, 1897, 2380, 338, 451, 2854]}
{"line_number": 786, "line_type": "generated", "code": "\n     */\n    public BigDecimal getEntry(int row, int column) throws MatrixIndexException {\n        if ( !isValidCoordinate( row, column ) ) {\n            throw new MatrixIndexException(\"illegal row or column argument", "entropy": 0.08688026666641235, "is_bug_line": false, "sus_score": 0.36936649680137634, "per_token_entropy": [0.025244520977139473, 0.07877946645021439, 0.7183934450149536, 0.01587279513478279, 0.06089991331100464, 0.01217646524310112, 0.0944410040974617, 0.0017416798509657383, 0.010192487388849258, 0.027601828798651695, 0.004294815473258495, 0.050003159791231155, 0.0018165291985496879, 0.0040773362852633, 0.04274705797433853, 0.00936602521687746, 0.00877370685338974, 0.18649394810199738, 0.01185302622616291, 0.00027736154152080417, 3.421248038648628e-05, 0.018667371943593025, 0.006864654831588268, 0.039473965764045715, 0.09124220907688141, 0.03329138457775116, 0.008243228308856487, 0.008644304238259792, 0.0003591130953282118, 0.00032360086333937943, 0.00021634146105498075, 0.0019233791390433908, 0.5180648565292358, 0.0027826419100165367, 0.006982686463743448, 0.08549920469522476, 0.00449800631031394, 0.007352909538894892, 0.0036688416730612516, 0.009199375286698341, 0.0050276280380785465, 0.0031010655220597982, 0.0015169790713116527, 0.00012540031457319856, 7.629365427419543e-06, 0.15852303802967072, 0.6785615682601929, 4.386805812828243e-05, 0.37290728092193604, 0.7590448260307312, 0.0024132197722792625, 0.32412222027778625], "tokens": [13, 268, 3776, 13, 1678, 970, 7997, 23307, 679, 9634, 29898, 524, 1948, 29892, 938, 1897, 29897, 8026, 22513, 3220, 2451, 426, 13, 4706, 565, 313, 1738, 275, 7211, 7967, 16065, 29898, 1948, 29892, 1897, 1723, 1723, 426, 13, 9651, 3183, 716, 22513, 3220, 2451, 703, 309, 12018, 1948, 470, 1897, 2980]}
{"line_number": 158, "line_type": "original", "code": "            data = d;", "entropy": 4.941348075866699, "is_bug_line": false, "sus_score": 0.35162898898124695, "per_token_entropy": [4.713311672210693, 10.485062599182129, 4.4396162033081055, 4.919464111328125, 0.14928613603115082], "tokens": [632, 848, 353, 270, 29936]}
{"line_number": 158, "line_type": "generated", "code": "Matrix must have at least one row.<|/mask:0|><|/mask:1|>\n            ); \n        }\n        final int nCols = d[0].length;\n        if (nCols == ", "entropy": 0.15926390886306763, "is_bug_line": false, "sus_score": 0.35162898898124695, "per_token_entropy": [1.527491807937622, 0.012519224546849728, 0.00784920621663332, 0.004116514697670937, 0.0014246086357161403, 0.009046400897204876, 0.021091224625706673, 0.9075263738632202, 0.020075350999832153, 1.502328872680664, 0.015813658013939857, 0.07720819115638733, 0.45803046226501465, 0.0076759145595133305, 0.4960305094718933, 0.006767803803086281, 0.15947623550891876, 0.000379132863599807, 0.0002512616047170013, 0.028047146275639534, 0.001207814086228609, 0.24372169375419617, 0.09507673978805542, 1.106382131576538, 1.2340223789215088, 0.19438514113426208, 0.0007880204357206821, 0.026466941460967064, 0.0015964870108291507, 0.010697755962610245, 0.0620482861995697, 0.014047554694116116, 0.0017019324004650116, 0.001212814822793007, 0.0007060657371766865, 4.911301948595792e-05, 0.0005738280597142875, 0.0029314663261175156, 0.00023707917716819793, 0.0004644507134798914, 0.00014697425649501383, 3.397406908334233e-05, 0.00039188333903439343, 0.0019474128494039178, 0.014946380630135536, 0.0012935374397784472, 0.0001481661747675389, 0.0005109196645207703, 0.00018475732940714806, 2.3841855067985307e-07, 0.000507464399561286, 0.00014399446081370115], "tokens": [14609, 1818, 505, 472, 3203, 697, 1948, 19423, 29989, 29914, 13168, 29901, 29900, 29989, 5299, 29989, 29914, 13168, 29901, 29896, 29989, 29958, 13, 9651, 3482, 29871, 13, 4706, 500, 13, 4706, 2186, 938, 302, 1625, 29879, 353, 270, 29961, 29900, 1822, 2848, 29936, 13, 4706, 565, 313, 29876, 1625, 29879, 1275, 29871]}
