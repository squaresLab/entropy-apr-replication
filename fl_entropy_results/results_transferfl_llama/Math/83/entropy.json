{"line_number": 344, "line_type": "original", "code": "      for (int i = 0; i < coefficients.length; i++) {", "entropy": 0.8922327160835266, "is_bug_line": false, "sus_score": 0.6351512670516968, "per_token_entropy": [6.49987268447876, 3.6161890029907227, 0.07112812250852585, 0.07445576786994934, 0.4590563178062439, 0.03529259189963341, 0.218403160572052, 0.10281103849411011, 0.016726020723581314, 0.007596652023494244, 0.04884699732065201, 4.643311977386475, 0.04085056483745575, 0.00391763960942626, 0.05545707419514656, 0.13294975459575653, 0.013252037577331066, 0.02007114328444004], "tokens": [539, 363, 313, 524, 474, 353, 29871, 29900, 29936, 474, 529, 16127, 29889, 2848, 29936, 474, 4862, 426]}
{"line_number": 344, "line_type": "generated", "code": "\n     * Get the objective function value at the current solution.\n     * \n     * @return objective function value at the current solution\n     */\n    protected double getObjectiveValue() {\n        return getEntry(0, getR", "entropy": 0.3799426257610321, "is_bug_line": false, "sus_score": 0.6351512670516968, "per_token_entropy": [0.21959838271141052, 0.42949265241622925, 0.047364380210638046, 2.97802996635437, 0.13409464061260223, 2.2985196113586426, 0.19055350124835968, 1.5578103065490723, 1.8315249681472778, 0.6142655611038208, 0.8590658903121948, 0.231587216258049, 0.11086515337228775, 0.01130390539765358, 0.02859479747712612, 0.013030732050538063, 0.5883629322052002, 0.002133595058694482, 0.03607376292347908, 0.0026145342271775007, 0.01162445917725563, 0.09430509060621262, 0.48289984464645386, 0.052954331040382385, 0.01595398411154747, 0.6273081302642822, 0.35233771800994873, 0.022566428408026695, 0.004250896163284779, 0.0542917363345623, 0.025691935792565346, 0.05018582195043564, 0.005084916017949581, 0.06278578191995621, 0.31501373648643494, 0.03420453518629074, 0.05410157889127731, 0.4282793402671814, 0.0029502459801733494, 1.1733182668685913, 0.09448286890983582, 0.004069381859153509, 0.019314197823405266, 0.49306750297546387, 0.9199216365814209, 0.8785284757614136, 0.1641610562801361, 0.008409682661294937, 0.5133720636367798, 0.0022142434027045965, 0.22461846470832825, 0.37986090779304504], "tokens": [13, 268, 334, 3617, 278, 12091, 740, 995, 472, 278, 1857, 1650, 29889, 13, 268, 334, 29871, 13, 268, 334, 732, 2457, 12091, 740, 995, 472, 278, 1857, 1650, 13, 268, 3776, 13, 1678, 6364, 3765, 679, 2061, 573, 1917, 580, 426, 13, 4706, 736, 679, 9634, 29898, 29900, 29892, 679, 29934]}
{"line_number": 345, "line_type": "original", "code": "          Integer basicRow = getBasicRow(getNumObjectiveFunctions() + i);", "entropy": 1.5651096105575562, "is_bug_line": true, "sus_score": 0.6319454312324524, "per_token_entropy": [8.23987102508545, 7.616489410400391, 5.676001071929932, 1.0410813093185425, 0.1878383606672287, 0.2944762408733368, 0.012224866077303886, 0.04080948233604431, 0.038223061710596085, 1.0495665073394775, 3.3218278884887695, 0.2541253864765167, 0.01802375726401806, 0.0036390291061252356, 0.0007061848300509155, 0.4889577031135559, 0.212222158908844, 1.1368576288223267, 0.10414306819438934], "tokens": [965, 8102, 6996, 4301, 353, 679, 16616, 4301, 29898, 657, 8009, 2061, 573, 6678, 29879, 580, 718, 474, 416]}
{"line_number": 345, "line_type": "generated", "code": "\n     * @return the width of the tableau\n     */\n    protected int getWidth() {\n        return tableau.getColumnDimension() + 1;\n    }\n\n    /**\n     * Get the height of the", "entropy": 0.14467351138591766, "is_bug_line": true, "sus_score": 0.6319454312324524, "per_token_entropy": [0.1596316248178482, 0.11423182487487793, 0.014774197712540627, 0.619910478591919, 0.015495148487389088, 0.95036780834198, 0.15482357144355774, 0.4908897280693054, 0.01165886502712965, 0.030204957351088524, 0.0030415249057114124, 0.193013533949852, 0.07249235361814499, 0.03147909417748451, 0.003488290822133422, 0.047686200588941574, 0.277421236038208, 0.05722399055957794, 0.002120034070685506, 0.029845992103219032, 0.00838426686823368, 0.001982629531994462, 0.022389840334653854, 0.25542977452278137, 0.03523631766438484, 0.7441263198852539, 0.0008525789016857743, 0.019868522882461548, 0.00018880968855228275, 0.02182326652109623, 0.0002307625545654446, 0.00011634149996098131, 0.994012713432312, 0.5956356525421143, 0.6383693218231201, 0.05101096257567406, 0.12710580229759216, 0.08376361429691315, 0.09641682356595993, 0.0006439996068365872, 0.006521016824990511, 0.09727446734905243, 0.04889921844005585, 0.009928721934556961, 0.013502108864486217, 0.004725716542452574, 0.000674616196192801, 0.1928827166557312, 0.02456185780465603, 0.14148399233818054, 0.0035729873925447464, 0.001606484642252326], "tokens": [13, 268, 334, 732, 2457, 278, 2920, 310, 278, 1591, 585, 13, 268, 3776, 13, 1678, 6364, 938, 679, 6110, 580, 426, 13, 4706, 736, 1591, 585, 29889, 657, 4409, 16142, 2673, 580, 718, 29871, 29896, 29936, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 3617, 278, 3171, 310, 278]}
{"line_number": 349, "line_type": "original", "code": "              coefficients[i] = 0;", "entropy": 3.382634401321411, "is_bug_line": false, "sus_score": 0.5754181146621704, "per_token_entropy": [10.456910133361816, 14.430124282836914, 1.3581278324127197, 1.0881702899932861, 0.255262166261673, 0.16368083655834198, 2.0784568786621094, 0.41377246379852295, 0.19920463860034943], "tokens": [1669, 16127, 29961, 29875, 29962, 353, 29871, 29900, 29936]}
{"line_number": 349, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Get the height of the tableau.\n     * @return height of the tableau\n     */\n    protected final int getHeight() {\n        return tableau.getRowDimension();\n", "entropy": 0.026628151535987854, "is_bug_line": false, "sus_score": 0.5754181146621704, "per_token_entropy": [0.16938292980194092, 0.2991630434989929, 0.011716834269464016, 0.01376704964786768, 0.07695335149765015, 0.03470967710018158, 0.015717435628175735, 0.014195652678608894, 0.0013875867007300258, 0.000513064325787127, 0.19400198757648468, 0.01533045619726181, 0.07226381450891495, 0.003679649904370308, 0.0014674619305878878, 0.003559564705938101, 0.0012411518255248666, 0.022991858422756195, 0.0047187162563204765, 0.006273932289332151, 0.001105650793761015, 0.053599923849105835, 0.0005818104837089777, 0.03031887859106064, 0.004219320602715015, 0.0015899409772828221, 0.001701099332422018, 0.0004957877099514008, 0.011178366839885712, 0.002815451705828309, 0.003840334713459015, 0.0035741752944886684, 0.004453621339052916, 0.025564704090356827, 0.06758939474821091, 0.0011700696777552366, 0.0005389191792346537, 0.0007223857101053, 0.0010998159414157271, 0.000614216027315706, 0.0022749039344489574, 0.018556445837020874, 0.004114852286875248, 0.012609870173037052, 8.046303264563903e-05, 0.00098525604698807, 0.0003233625029679388, 0.0022852513939142227, 0.0001714082609396428, 0.00027247529942542315, 0.15825504064559937, 0.004925261251628399], "tokens": [13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 3617, 278, 3171, 310, 278, 1591, 585, 29889, 13, 268, 334, 732, 2457, 3171, 310, 278, 1591, 585, 13, 268, 3776, 13, 1678, 6364, 2186, 938, 679, 7011, 580, 426, 13, 4706, 736, 1591, 585, 29889, 657, 4301, 16142, 2673, 890, 13]}
{"line_number": 297, "line_type": "original", "code": "                return null;", "entropy": 3.53466534614563, "is_bug_line": false, "sus_score": 0.5556726455688477, "per_token_entropy": [5.997305870056152, 7.89350700378418, 0.2443852722644806, 0.0034629872534424067], "tokens": [462, 736, 1870, 29936]}
{"line_number": 297, "line_type": "generated", "code": "\n              coefficients[i] = 0;\n          } else if (basicRow == null) {\n<|mask:1|><|mask:0|>\n              coefficients[i] = 0;\n          } else {\n", "entropy": 0.16483646631240845, "is_bug_line": false, "sus_score": 0.5556726455688477, "per_token_entropy": [0.19165107607841492, 1.2344484329223633, 1.0575134754180908, 0.0024497280828654766, 0.010271662846207619, 0.0036740675568580627, 0.035681355744600296, 0.667611300945282, 0.03492531552910805, 0.13737332820892334, 0.0273609422147274, 0.3997531831264496, 0.01008923165500164, 0.03317860886454582, 0.8371639847755432, 0.02744758501648903, 0.04415087401866913, 0.020801713690161705, 0.7178773880004883, 0.10688997060060501, 0.05004318803548813, 0.0015187645331025124, 0.018757227808237076, 0.82096928358078, 0.0005728749092668295, 0.006060793064534664, 0.0009598892065696418, 0.4132172763347626, 0.004428460728377104, 0.2788558006286621, 0.0006778326351195574, 0.004428104963153601, 0.00034731553751043975, 0.04533799737691879, 0.0008678245940245688, 0.007033824920654297, 0.015291949734091759, 0.04918365925550461, 0.08032253384590149, 0.0007007050444371998, 0.0007245299639180303, 0.0005006728461012244, 0.0025859985034912825, 0.5790642499923706, 0.023227743804454803, 0.008213433437049389, 0.006226189900189638, 0.051331039518117905, 0.0009099871967919171, 0.006051669362932444, 0.4828963279724121, 0.009875842370092869], "tokens": [13, 795, 16127, 29961, 29875, 29962, 353, 29871, 29900, 29936, 13, 3986, 500, 1683, 565, 313, 16121, 4301, 1275, 1870, 29897, 426, 13, 29966, 29989, 13168, 29901, 29896, 29989, 5299, 29989, 13168, 29901, 29900, 29989, 29958, 13, 795, 16127, 29961, 29875, 29962, 353, 29871, 29900, 29936, 13, 3986, 500, 1683, 426, 13]}
{"line_number": 132, "line_type": "original", "code": "        // initialize the objective function rows", "entropy": 2.4711670875549316, "is_bug_line": false, "sus_score": 0.5438534617424011, "per_token_entropy": [5.857004165649414, 4.871778964996338, 3.0393142700195312, 0.4736804962158203, 1.663399338722229, 0.2612798511981964, 1.131712555885315], "tokens": [308, 849, 11905, 278, 12091, 740, 4206]}
{"line_number": 132, "line_type": "generated", "code": "\n        return matrix;\n    }\n\n    /**\n     * Initialize the tableau.\n     */\n    protected void initialize() {\n        // initialize the basis\n        basis = new int[numDecisionVariables];\n        for", "entropy": 0.3337894082069397, "is_bug_line": false, "sus_score": 0.5438534617424011, "per_token_entropy": [0.0523320734500885, 0.7317808270454407, 0.30254295468330383, 0.0033197076991200447, 0.0007306052139028907, 0.0038771473336964846, 0.2061791718006134, 0.0014729375252500176, 0.0057466295547783375, 0.145491361618042, 0.1361393928527832, 0.04331468790769577, 0.17466504871845245, 0.0016708712792024016, 0.0009995469590649009, 1.5993021726608276, 0.2236638367176056, 0.3935205638408661, 0.005875696428120136, 0.6340327262878418, 0.0723784789443016, 0.005036049522459507, 0.28169217705726624, 0.003911108709871769, 0.003787250956520438, 0.23390865325927734, 0.08467532694339752, 0.0004049911512993276, 0.0029161330312490463, 0.013641232624650002, 0.018918314948678017, 0.48365259170532227, 1.24318265914917, 2.3996267318725586, 0.6756513118743896, 1.0939127206802368, 0.7458595037460327, 0.08941115438938141, 2.1624820232391357, 0.511757493019104, 0.18890851736068726, 0.4587266445159912, 0.01245141215622425, 0.5578067302703857, 0.1451200395822525, 0.00016223068814724684, 9.30981186684221e-05, 3.504691630951129e-05, 0.23508775234222412, 0.02493935078382492, 0.13908986747264862, 0.8011630177497864], "tokens": [13, 4706, 736, 4636, 29936, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 25455, 278, 1591, 585, 29889, 13, 268, 3776, 13, 1678, 6364, 1780, 11905, 580, 426, 13, 4706, 849, 11905, 278, 8405, 13, 4706, 8405, 353, 716, 938, 29961, 1949, 6185, 2459, 10444, 1849, 1385, 13, 4706, 363]}
{"line_number": 351, "line_type": "original", "code": "              basicRows.add(basicRow);", "entropy": 2.7630133628845215, "is_bug_line": false, "sus_score": 0.5391925573348999, "per_token_entropy": [11.76052188873291, 10.318109512329102, 1.1108171939849854, 0.8532164096832275, 0.05184096470475197, 0.00944680068641901, 0.6371902823448181, 0.06858475506305695, 0.05739318206906319], "tokens": [1669, 6996, 10661, 29889, 1202, 29898, 16121, 4301, 416]}
{"line_number": 351, "line_type": "generated", "code": "\n    /**\n     * Get the height of the tableau.\n     * @return height of the tableau\n     */\n    protected final int getHeight() {\n        return tableau.getRowDimension();\n    }\n\n", "entropy": 0.04764576256275177, "is_bug_line": false, "sus_score": 0.5391925573348999, "per_token_entropy": [0.08780618011951447, 0.19992202520370483, 0.0716746598482132, 0.0352112278342247, 0.002585760550573468, 0.00044324109330773354, 0.6494172215461731, 0.06685766577720642, 0.5267094373703003, 0.00495029054582119, 0.002135260496288538, 0.006927045993506908, 0.002590278862044215, 0.0444197915494442, 0.008695240132510662, 0.0013392536202445626, 0.00154292699880898, 0.07117042690515518, 0.0008487674640491605, 0.033357568085193634, 0.005204580724239349, 0.0018284284742549062, 0.0023264028131961823, 0.00037674958002753556, 0.017740266397595406, 0.0014996008248999715, 0.004141089040786028, 0.0022607501596212387, 0.011682665906846523, 0.04483409225940704, 0.0863475576043129, 0.0015051951631903648, 0.000816250394564122, 0.0023755207657814026, 0.0015144795179367065, 0.0006529344827868044, 0.0031589390709996223, 0.022072020918130875, 0.006702205166220665, 0.026004426181316376, 0.00013660451804753393, 0.0008310201810672879, 0.0004101150552742183, 0.004042549524456263, 0.00019012074335478246, 0.0013183006085455418, 0.16769304871559143, 0.005020511336624622, 0.004446262959390879, 0.0007889734115451574, 0.007285574451088905, 0.22376811504364014], "tokens": [13, 1678, 7762, 13, 268, 334, 3617, 278, 3171, 310, 278, 1591, 585, 29889, 13, 268, 334, 732, 2457, 3171, 310, 278, 1591, 585, 13, 268, 3776, 13, 1678, 6364, 2186, 938, 679, 7011, 580, 426, 13, 4706, 736, 1591, 585, 29889, 657, 4301, 16142, 2673, 890, 13, 1678, 500, 13, 13]}
{"line_number": 310, "line_type": "original", "code": "        int width = getWidth() - numArtificialVariables - 1;", "entropy": 1.438035011291504, "is_bug_line": false, "sus_score": 0.5370509624481201, "per_token_entropy": [8.09063720703125, 6.811092376708984, 3.3793692588806152, 0.11766541004180908, 0.31302833557128906, 0.3657258152961731, 0.927104115486145, 0.12011417001485825, 2.889143466949463, 0.7496232390403748, 0.0021828413009643555, 0.0009565545478835702, 0.005126070696860552, 0.0003150205302517861, 1.7011127471923828, 0.2762105464935303, 0.09650948643684387, 0.038712188601493835], "tokens": [308, 938, 2920, 353, 679, 6110, 580, 448, 954, 9986, 928, 616, 10444, 1849, 448, 29871, 29896, 29936]}
{"line_number": 310, "line_type": "generated", "code": "\n    /**\n     * Get the current solution.\n     * \n     * @return current solution\n     */\n    protected RealPointValuePair getSolution() {\n      double[] coefficients = new double[getOriginalNumDecisionVari", "entropy": 0.11602253466844559, "is_bug_line": false, "sus_score": 0.5370509624481201, "per_token_entropy": [0.07564184069633484, 0.38448864221572876, 0.2267715185880661, 0.15958426892757416, 0.0030151403043419123, 0.0005266471416689456, 1.7170766592025757, 0.1150859072804451, 0.6707911491394043, 0.2625774145126343, 0.22606021165847778, 0.028682608157396317, 0.002891884883865714, 0.00517433974891901, 0.14445437490940094, 0.0008032671175897121, 0.0007813499541953206, 0.0007845661020837724, 0.006659338716417551, 0.03122527338564396, 0.015063932165503502, 0.0013959197094663978, 0.01007530651986599, 0.0013894913718104362, 0.008485926315188408, 0.0026241650339215994, 0.009904288686811924, 0.10539296269416809, 0.12106643617153168, 0.010576269589364529, 0.003764211433008313, 0.0003734129713848233, 0.017629003152251244, 0.046685848385095596, 0.0011438739020377398, 0.2924433648586273, 0.004091464448720217, 0.004493853077292442, 0.7289772629737854, 0.33698299527168274, 0.010779249481856823, 0.033667903393507004, 0.005860289558768272, 0.032154396176338196, 0.0008256602450273931, 0.002017725957557559, 0.04774711653590202, 0.0715249553322792, 0.0010239601833745837, 0.04082115367054939, 0.00012492353562265635, 0.0009872806258499622], "tokens": [13, 1678, 7762, 13, 268, 334, 3617, 278, 1857, 1650, 29889, 13, 268, 334, 29871, 13, 268, 334, 732, 2457, 1857, 1650, 13, 268, 3776, 13, 1678, 6364, 8195, 5228, 1917, 20547, 679, 13296, 918, 580, 426, 13, 418, 3765, 2636, 16127, 353, 716, 3765, 29961, 657, 26036, 8009, 6185, 2459, 10444]}
{"line_number": 319, "line_type": "original", "code": "        this.tableau = new Array2DRowRealMatrix(matrix);", "entropy": 2.3063278198242188, "is_bug_line": false, "sus_score": 0.5366582870483398, "per_token_entropy": [8.750129699707031, 9.195743560791016, 0.0469934418797493, 3.1121339797973633, 0.03316638246178627, 5.722496509552002, 2.5689101219177246, 3.1911211013793945, 0.09782452136278152, 0.00025650550378486514, 0.0006785474251955748, 0.06233741343021393, 8.153582894010469e-05, 0.03473581373691559, 2.4288744926452637, 1.6557620763778687], "tokens": [308, 445, 29889, 2371, 585, 353, 716, 4398, 29906, 29928, 4301, 21713, 14609, 29898, 5344, 416]}
{"line_number": 319, "line_type": "generated", "code": "\n    private void divideRow(final int dividendRow, final double divisor) {\n        double[] row = matrix[dividendRow];\n        for (int i = 0; i", "entropy": 0.18937896192073822, "is_bug_line": false, "sus_score": 0.5366582870483398, "per_token_entropy": [0.09389765560626984, 0.301191121339798, 0.5840542316436768, 0.030965957790613174, 1.0038120746612549, 0.09786732494831085, 0.06604528427124023, 0.1678248941898346, 0.04374222457408905, 0.0570271834731102, 0.00014554394874721766, 0.0051015205681324005, 0.002442711964249611, 0.1182936504483223, 0.050511155277490616, 0.0031244768761098385, 0.00014125302550382912, 0.052806999534368515, 0.023597240447998047, 0.01111777313053608, 0.15067850053310394, 1.705979585647583, 0.38861486315727234, 0.6553031802177429, 0.10502780973911285, 1.1713438034057617, 0.13735711574554443, 0.027254341170191765, 0.001353063271380961, 0.00012039413559250534, 0.00011789103882620111, 0.12784679234027863, 0.020020082592964172, 0.0443495474755764, 0.3110296428203583, 0.007374683395028114, 0.001634096377529204, 0.31242650747299194, 0.0041467878036201, 0.15409567952156067, 0.09191793203353882, 0.010227651335299015, 0.001364372787065804], "tokens": [13, 1678, 2024, 1780, 16429, 4301, 29898, 8394, 938, 25227, 355, 4301, 29892, 2186, 3765, 8572, 272, 29897, 426, 13, 4706, 3765, 2636, 1948, 353, 4636, 29961, 29881, 3640, 355, 4301, 1385, 13, 4706, 363, 313, 524, 474, 353, 29871, 29900, 29936, 474]}
{"line_number": 149, "line_type": "original", "code": "                // initialize the constraint rows", "entropy": 4.513404846191406, "is_bug_line": false, "sus_score": 0.5347338318824768, "per_token_entropy": [6.5053887367248535, 5.5449748039245605, 6.744638919830322, 1.4283709526062012, 2.670147180557251, 4.1869096755981445], "tokens": [462, 849, 11905, 278, 7276, 4206]}
{"line_number": 149, "line_type": "generated", "code": "\n        for (LinearConstraint constraint : constraints) {\n            if (constraint.getRelationship() == Relationship.EQ) {\n                if (constraint.getValue()", "entropy": 0.16945724189281464, "is_bug_line": false, "sus_score": 0.5347338318824768, "per_token_entropy": [0.16945114731788635, 0.25429782271385193, 0.4251914322376251, 0.00432947464287281, 0.15358799695968628, 0.00011717586312443018, 0.45278406143188477, 0.027349691838026047, 0.17217305302619934, 0.0036731173750013113, 0.0015261442167684436, 0.004042905755341053, 0.10315915942192078, 0.38476502895355225, 0.09088817983865738, 0.10637617856264114, 0.0048258500173687935, 0.6814662218093872, 0.05100790411233902, 2.729855441430118e-05, 1.537788011773955e-05, 0.014902104623615742, 0.14654169976711273, 0.008656476624310017, 4.529942543740617e-06, 6.079655122448457e-06, 0.0004247716860845685, 0.8167409896850586, 0.1787005215883255, 0.0016853903653100133, 0.01220767293125391, 0.08838099986314774, 1.6835110187530518, 0.05857324227690697, 0.3195345103740692, 0.001347944256849587, 0.015335621312260628, 0.0017660749144852161], "tokens": [13, 4706, 363, 313, 12697, 21529, 7276, 584, 11938, 29897, 426, 13, 9651, 565, 313, 13646, 29889, 657, 9662, 800, 4034, 580, 1275, 6376, 800, 4034, 29889, 28879, 29897, 426, 13, 18884, 565, 313, 13646, 29889, 23433, 580]}
{"line_number": 352, "line_type": "original", "code": "              coefficients[i] =", "entropy": 3.2208621501922607, "is_bug_line": false, "sus_score": 0.5345748662948608, "per_token_entropy": [9.368483543395996, 8.332764625549316, 0.4832753539085388, 0.7071681618690491, 0.10617883503437042, 0.32730141282081604], "tokens": [1669, 16127, 29961, 29875, 29962, 353]}
{"line_number": 352, "line_type": "generated", "code": "\n     * Get the height of the tableau.\n     * @return height of the tableau\n     */\n    protected final int getHeight() {\n        return tableau.getRowDimension();\n    }\n\n    /**\n", "entropy": 0.0888654962182045, "is_bug_line": false, "sus_score": 0.5345748662948608, "per_token_entropy": [0.2656403183937073, 0.2272748053073883, 0.026349445804953575, 0.9835727214813232, 0.07941554486751556, 1.572526454925537, 0.007413377519696951, 0.003546379506587982, 0.013139684684574604, 0.0018052248051390052, 0.07976166158914566, 0.015424367971718311, 0.06320943683385849, 0.00520434370264411, 0.14461387693881989, 0.002763026859611273, 0.03856664523482323, 0.006845001131296158, 0.002211269922554493, 0.0021038558334112167, 0.0006702084210701287, 0.025746425613760948, 0.01936810091137886, 0.05082425847649574, 0.01791147142648697, 0.1346207559108734, 0.05650480091571808, 0.11106295883655548, 0.004527912009507418, 0.0024531767703592777, 0.0056401873007416725, 0.002466376405209303, 0.000961913785431534, 0.004873777274042368, 0.05664538964629173, 0.010194375179708004, 0.05153508856892586, 0.00048303857329301536, 0.0011466125724837184, 0.000570253818295896, 0.004518181085586548, 0.0002516191452741623, 0.000328367663314566, 0.28578031063079834, 0.011451585218310356, 0.024977952241897583, 0.0013667537132278085, 0.010080144740641117, 0.0626298114657402, 0.09161917865276337, 0.015605711378157139, 0.012801256962120533], "tokens": [13, 268, 334, 3617, 278, 3171, 310, 278, 1591, 585, 29889, 13, 268, 334, 732, 2457, 3171, 310, 278, 1591, 585, 13, 268, 3776, 13, 1678, 6364, 2186, 938, 679, 7011, 580, 426, 13, 4706, 736, 1591, 585, 29889, 657, 4301, 16142, 2673, 890, 13, 1678, 500, 13, 13, 1678, 7762, 13]}
{"line_number": 346, "line_type": "original", "code": "          if (basicRows.contains(basicRow)) {", "entropy": 2.053556442260742, "is_bug_line": false, "sus_score": 0.5343154668807983, "per_token_entropy": [7.855792999267578, 4.222987174987793, 0.9757995009422302, 5.285630226135254, 0.9294130206108093, 1.2665692567825317, 0.6992084383964539, 0.03240463510155678, 2.5392355918884277, 0.6087233424186707, 0.2010265290737152, 0.025886761024594307], "tokens": [965, 565, 313, 16121, 10661, 29889, 11516, 29898, 16121, 4301, 876, 426]}
{"line_number": 346, "line_type": "generated", "code": "\n     */\n    protected int getWidth() {\n        return tableau.getColumnDimension();\n<|mask:1|>\n        return tableau.getColumnDimension() - 1;\n    }\n\n    /**", "entropy": 0.15629954636096954, "is_bug_line": false, "sus_score": 0.5343154668807983, "per_token_entropy": [0.18462583422660828, 0.14357028901576996, 0.4277154505252838, 0.0049263290129601955, 0.050099655985832214, 0.30992263555526733, 0.05148821324110031, 0.0043553500436246395, 0.05230707302689552, 0.018280597403645515, 0.004351077135652304, 0.029725654050707817, 0.24445509910583496, 0.03477058559656143, 0.7941689491271973, 0.0006619884516112506, 0.013745180331170559, 0.00020740265608765185, 0.018777234479784966, 0.0002548369811847806, 0.0001280225842492655, 0.48038309812545776, 0.02523510530591011, 0.585205614566803, 0.00047219570842571557, 0.027648793533444405, 0.00320504535920918, 0.3841475546360016, 0.004779580980539322, 0.28018635511398315, 0.08196976780891418, 1.2016018629074097, 0.14335733652114868, 0.1274322271347046, 0.000364713923772797, 0.0017807116964831948, 0.000543446687515825, 0.0378466472029686, 0.00011300401820335537, 0.00012194366718176752, 0.037401653826236725, 0.504117488861084, 0.6284481883049011, 0.04758083075284958, 0.031102674081921577, 0.06839128583669662, 0.9129186868667603, 0.002002378925681114, 0.008486399427056313, 0.06752900779247284, 0.03465268015861511, 0.010012284852564335], "tokens": [13, 268, 3776, 13, 1678, 6364, 938, 679, 6110, 580, 426, 13, 4706, 736, 1591, 585, 29889, 657, 4409, 16142, 2673, 890, 13, 29966, 29989, 13168, 29901, 29896, 29989, 29958, 13, 4706, 736, 1591, 585, 29889, 657, 4409, 16142, 2673, 580, 448, 29871, 29896, 29936, 13, 1678, 500, 13, 13, 1678, 7762]}
{"line_number": 885, "line_type": "original", "code": "", "entropy": 2.933950901031494, "is_bug_line": false, "sus_score": 0.531222939491272, "per_token_entropy": [5.229613304138184, 0.6382887363433838], "tokens": [29871, 13]}
{"line_number": 885, "line_type": "generated", "code": "\n<|mask:1|><|mask:0|><|mask:0|>\n<|mask:1|><|mask:0|><|mask:0|><|mask:0|>\n<|mask:1", "entropy": 0.08484767377376556, "is_bug_line": false, "sus_score": 0.531222939491272, "per_token_entropy": [0.12742005288600922, 0.44162094593048096, 0.02531089074909687, 0.12958279252052307, 0.01165674440562725, 0.6267305612564087, 0.020008398219943047, 0.4097411334514618, 0.00875172670930624, 0.07766053080558777, 0.005375929642468691, 0.617153525352478, 0.010570371523499489, 0.9163617491722107, 0.0038443722296506166, 0.036068473011255264, 0.002928138244897127, 0.2575196623802185, 0.003643661504611373, 0.08928599953651428, 0.016158927232027054, 0.08181621879339218, 0.004782665520906448, 0.015106204897165298, 0.003391112433746457, 0.1272537112236023, 0.0030967872589826584, 0.009540204890072346, 0.0015282867243513465, 0.004892283584922552, 0.0031072453130036592, 0.024780625477433205, 0.001840446493588388, 0.01903727278113365, 0.002111945068463683, 0.004340157378464937, 0.001966329989954829, 0.019167209044098854, 0.0017736908048391342, 0.023762091994285583, 0.002010706812143326, 0.006328779272735119, 0.002565071452409029, 0.04162054881453514, 0.0019052940187975764, 0.03584042936563492, 0.00621007801964879, 0.05922465771436691, 0.004676595330238342, 0.010629701428115368, 0.0026033578906208277, 0.047774963080883026], "tokens": [13, 29966, 29989, 13168, 29901, 29896, 29989, 5299, 29989, 13168, 29901, 29900, 29989, 5299, 29989, 13168, 29901, 29900, 29989, 29958, 13, 29966, 29989, 13168, 29901, 29896, 29989, 5299, 29989, 13168, 29901, 29900, 29989, 5299, 29989, 13168, 29901, 29900, 29989, 5299, 29989, 13168, 29901, 29900, 29989, 29958, 13, 29966, 29989, 13168, 29901, 29896]}
{"line_number": 311, "line_type": "original", "code": "        int height = getHeight() - 1;", "entropy": 1.9842703342437744, "is_bug_line": false, "sus_score": 0.5299084782600403, "per_token_entropy": [7.307604789733887, 6.403234481811523, 4.2251996994018555, 0.09175840020179749, 0.5205047130584717, 0.22425197064876556, 1.3201792240142822, 0.16940012574195862, 1.3383643627166748, 0.13500943779945374, 0.09146492928266525], "tokens": [308, 938, 3171, 353, 679, 7011, 580, 448, 29871, 29896, 29936]}
{"line_number": 311, "line_type": "generated", "code": "\n     * Get the current solution.\n     * \n     * @return current solution\n     */\n    protected RealPointValuePair getSolution() {\n      double[] coefficients = new double[getOriginalNumDecisionVariables()];", "entropy": 0.1576858013868332, "is_bug_line": false, "sus_score": 0.5299084782600403, "per_token_entropy": [0.2605131268501282, 0.4183407723903656, 0.08731722086668015, 2.0997626781463623, 0.13415813446044922, 0.8114041686058044, 0.41146042943000793, 0.40536949038505554, 0.03328757733106613, 0.26072338223457336, 0.004930480848997831, 0.215388223528862, 0.0007652691565454006, 0.051826927810907364, 0.001353063271380961, 0.0068892803974449635, 0.08126596361398697, 0.020266950130462646, 0.0019281383138149977, 0.013788801617920399, 0.03625726327300072, 0.014254532754421234, 0.003868834814056754, 0.03799011558294296, 0.13044290244579315, 0.17131605744361877, 0.008797812275588512, 0.005474100820720196, 0.00042215018766000867, 0.03441498428583145, 0.08022154122591019, 0.0010790961096063256, 0.9903780817985535, 0.0054143453016877174, 0.004842458758503199, 0.723630964756012, 0.2858821451663971, 0.012747940607368946, 0.030462156981229782, 0.005305851809680462, 0.024592332541942596, 0.0009918061550706625, 0.002679807133972645, 0.0598822757601738, 0.060344427824020386, 0.0010924329981207848, 0.04884767904877663, 0.0001292145170737058, 0.0009162995265796781, 6.496695277746767e-05, 0.0015049570938572288, 0.09467136114835739], "tokens": [13, 268, 334, 3617, 278, 1857, 1650, 29889, 13, 268, 334, 29871, 13, 268, 334, 732, 2457, 1857, 1650, 13, 268, 3776, 13, 1678, 6364, 8195, 5228, 1917, 20547, 679, 13296, 918, 580, 426, 13, 418, 3765, 2636, 16127, 353, 716, 3765, 29961, 657, 26036, 8009, 6185, 2459, 10444, 1849, 580, 1385]}
{"line_number": 886, "line_type": "original", "code": "", "entropy": 2.933950901031494, "is_bug_line": false, "sus_score": 0.5291856527328491, "per_token_entropy": [5.229613304138184, 0.6382887363433838], "tokens": [29871, 13]}
{"line_number": 886, "line_type": "generated", "code": "\n<|mask:1|><|mask:1|><|mask:0|>\n<|mask:1|><|mask:1|><|mask:1|><|mask:0|>\n<|mask:1", "entropy": 0.08530794084072113, "is_bug_line": false, "sus_score": 0.5291856527328491, "per_token_entropy": [0.12742005288600922, 0.44162094593048096, 0.02531089074909687, 0.12958279252052307, 0.01165674440562725, 0.6267305612564087, 0.020008398219943047, 0.4097411334514618, 0.00875172670930624, 0.07766053080558777, 0.005375929642468691, 0.867153525352478, 0.009107593446969986, 0.7077062129974365, 0.009441250935196877, 0.07415307313203812, 0.003577976254746318, 0.1574222892522812, 0.004292797762900591, 0.08239305764436722, 0.013495286926627159, 0.06612205505371094, 0.003723475616425276, 0.014122076332569122, 0.0030418813694268465, 0.11703889071941376, 0.0031373111996799707, 0.00794950034469366, 0.001879355520941317, 0.005365376826375723, 0.0031191289890557528, 0.05243762210011482, 0.0016415942227467895, 0.014286262914538383, 0.0021641661878675222, 0.004445669706910849, 0.0032785970252007246, 0.02484063059091568, 0.0013686585007235408, 0.1112530380487442, 0.0046227253042161465, 0.01844421960413456, 0.0025454522110521793, 0.02899995446205139, 0.002137282630428672, 0.014123369939625263, 0.004915059544146061, 0.048175375908613205, 0.0038740597665309906, 0.01008415687829256, 0.002481478499248624, 0.04179160296916962], "tokens": [13, 29966, 29989, 13168, 29901, 29896, 29989, 5299, 29989, 13168, 29901, 29896, 29989, 5299, 29989, 13168, 29901, 29900, 29989, 29958, 13, 29966, 29989, 13168, 29901, 29896, 29989, 5299, 29989, 13168, 29901, 29896, 29989, 5299, 29989, 13168, 29901, 29896, 29989, 5299, 29989, 13168, 29901, 29900, 29989, 29958, 13, 29966, 29989, 13168, 29901, 29896]}
{"line_number": 317, "line_type": "original", "code": "            matrix[i][width - 1] = getEntry(i + 1, getRhsOffset());", "entropy": 1.6295263767242432, "is_bug_line": false, "sus_score": 0.5291764736175537, "per_token_entropy": [7.85256814956665, 7.717270374298096, 0.8637599945068359, 5.2632622718811035, 0.8408836126327515, 7.460381507873535, 0.7114330530166626, 0.05914454534649849, 0.09603971242904663, 0.040857087820768356, 0.5469883680343628, 4.110838890075684, 0.11423224955797195, 0.005425490438938141, 0.3869103789329529, 0.7490963935852051, 0.045286159962415695, 0.0019624039996415377, 0.00419130502268672, 1.6235853433609009, 0.2685226500034332, 0.0021189635153859854, 0.003994700964540243, 0.3398781716823578], "tokens": [632, 4636, 29961, 29875, 3816, 2103, 448, 29871, 29896, 29962, 353, 679, 9634, 29898, 29875, 718, 29871, 29896, 29892, 679, 29934, 9499, 10302, 3310]}
{"line_number": 317, "line_type": "generated", "code": "\n     * @param divisorRow index of the row\n<|mask:1|><|mask:0|>\n     * @param multiple factor by which the subtrahend row is multiplied\n     */\n    protected void subtract", "entropy": 0.20979368686676025, "is_bug_line": false, "sus_score": 0.5291764736175537, "per_token_entropy": [0.14117619395256042, 0.05381084978580475, 0.11690229922533035, 0.034484896808862686, 0.013546446338295937, 0.4906899333000183, 0.0006943913758732378, 0.09411761164665222, 0.07527914643287659, 0.002434268593788147, 0.02211574651300907, 0.08878664672374725, 0.14275901019573212, 0.5770397782325745, 0.00047350639943033457, 0.006013988982886076, 0.002243860624730587, 0.42529600858688354, 0.007201901637017727, 0.05187152326107025, 0.00037865620106458664, 0.004366981331259012, 0.0005161621957086027, 0.06331641227006912, 0.0010559941874817014, 0.0067553711123764515, 0.006714283023029566, 0.06480776518583298, 0.1725587397813797, 0.008982369676232338, 0.04048258066177368, 0.23680616915225983, 2.057269334793091, 0.704586386680603, 0.002431652508676052, 0.7721309065818787, 0.6889907717704773, 0.003386003663763404, 0.008360860869288445, 0.0020943391136825085, 0.6228844523429871, 0.4138513505458832, 0.31765085458755493, 0.0009926398051902652, 0.24997113645076752, 0.21056564152240753, 0.4027813673019409, 0.0035211960785090923, 0.04963047429919243, 0.9126790761947632, 0.021201521158218384, 0.510612428188324], "tokens": [13, 268, 334, 732, 3207, 8572, 272, 4301, 2380, 310, 278, 1948, 13, 29966, 29989, 13168, 29901, 29896, 29989, 5299, 29989, 13168, 29901, 29900, 29989, 29958, 13, 268, 334, 732, 3207, 2999, 7329, 491, 607, 278, 1014, 3018, 29882, 355, 1948, 338, 6674, 2957, 13, 268, 3776, 13, 1678, 6364, 1780, 23197]}
{"line_number": 357, "line_type": "original", "code": "        return new RealPointValuePair(coefficients, f.getValue(coefficients));", "entropy": 1.892452597618103, "is_bug_line": false, "sus_score": 0.5248475074768066, "per_token_entropy": [6.786643028259277, 2.7616894245147705, 7.977166175842285, 3.8589632511138916, 0.043747931718826294, 0.016940180212259293, 0.001100649475120008, 0.05815717205405235, 0.4981216788291931, 0.027163157239556313, 0.004246741533279419, 0.14556433260440826, 4.619519233703613, 3.4407339096069336, 3.9991416931152344, 3.4314823150634766, 0.09862899780273438, 0.0016738465055823326, 0.0008521024719811976, 0.07751613110303879], "tokens": [308, 736, 716, 8195, 5228, 1917, 20547, 29898, 1111, 8462, 29879, 29892, 285, 29889, 23433, 29898, 1111, 8462, 29879, 2483]}
{"line_number": 357, "line_type": "generated", "code": "\n\n    /**\n     * Get the number of artificial variables.\n     * @return number of artificial variables\n     */\n    protected final int getNumArtificialVariables() {\n        return numArtificialVariables;\n   ", "entropy": 0.17369021475315094, "is_bug_line": false, "sus_score": 0.5248475074768066, "per_token_entropy": [0.08351801335811615, 2.0165276527404785, 0.3374263644218445, 0.282370924949646, 0.026416439563035965, 0.003559564705938101, 0.0004593271005433053, 0.8436650037765503, 0.17603614926338196, 2.1377899646759033, 0.004957288969308138, 1.0677565336227417, 0.045253120362758636, 0.5292916297912598, 0.011102329008281231, 0.003158107167109847, 0.003124239156022668, 0.1763816773891449, 0.0016786068445071578, 0.31700074672698975, 0.002314747544005513, 0.01880227029323578, 0.009570668451488018, 0.05874017998576164, 0.005170188844203949, 0.013408485800027847, 0.003695565043017268, 0.015344073995947838, 0.14811460673809052, 0.29921430349349976, 0.002359703416004777, 0.004429054446518421, 0.02548382617533207, 0.0018550821114331484, 0.000745137978810817, 0.0012085284106433392, 0.005784794222563505, 0.0002548369811847806, 0.0015816095983609557, 0.0009092725813388824, 0.0050934553146362305, 0.04432491585612297, 0.0067856828682124615, 0.03179832547903061, 0.0004048719711136073, 0.00010716341057559475, 0.0001805857609724626, 0.0002812943421304226, 1.2874520507466514e-05, 0.005960783455520868, 0.006603562273085117, 0.2438765913248062], "tokens": [13, 13, 1678, 7762, 13, 268, 334, 3617, 278, 1353, 310, 23116, 3651, 29889, 13, 268, 334, 732, 2457, 1353, 310, 23116, 3651, 13, 268, 3776, 13, 1678, 6364, 2186, 938, 679, 8009, 9986, 928, 616, 10444, 1849, 580, 426, 13, 4706, 736, 954, 9986, 928, 616, 10444, 1849, 29936, 13, 1678]}
{"line_number": 146, "line_type": "original", "code": "                        getInvertedCoeffiecientSum(objectiveCoefficients);", "entropy": 1.584742546081543, "is_bug_line": false, "sus_score": 0.52455073595047, "per_token_entropy": [6.987617492675781, 3.51942777633667, 7.116044998168945, 5.619789123535156, 0.024751553311944008, 0.010957781225442886, 0.04539051279425621, 0.0003488647344056517, 0.06431368738412857, 0.0032270282972604036, 0.002089223824441433, 0.002915301127359271, 0.42870989441871643, 6.828638076782227, 0.019650312140583992, 0.5696261525154114, 0.0006885541952215135, 0.007631078828126192, 0.002782879862934351, 0.4402492344379425], "tokens": [462, 308, 679, 797, 1765, 287, 29907, 7297, 600, 347, 15566, 11139, 29898, 3318, 573, 29907, 7297, 4543, 29879, 416]}
{"line_number": 146, "line_type": "generated", "code": "\n     */\n    protected List<LinearConstraint> getNormalizedConstraints() {\n        List<LinearConstraint> constraints = new ArrayList<LinearConstraint>();\n        for (LinearConstraint constraint : this.constraints) {\n            if (constraint.", "entropy": 0.12965424358844757, "is_bug_line": false, "sus_score": 0.52455073595047, "per_token_entropy": [0.09686748683452606, 0.3450866937637329, 0.06931433826684952, 0.003325172932818532, 0.02150573395192623, 0.7904927134513855, 0.03751544654369354, 0.007061879150569439, 0.0024409282486885786, 0.0003947432560380548, 0.0004379982128739357, 0.009356341324746609, 0.008307070471346378, 0.00023398046323563904, 0.0002526917669456452, 0.002833995968103409, 0.0021923573222011328, 0.00610392214730382, 0.2909192144870758, 0.2614487409591675, 0.00422074506059289, 0.0031697528902441263, 1.3947389561508317e-05, 0.00011550712952157483, 0.9965276718139648, 0.038071710616350174, 0.15377067029476166, 0.005995384883135557, 0.13676445186138153, 0.08054044097661972, 3.0517112463712692e-05, 0.5392189621925354, 0.011691738851368427, 0.170101597905159, 0.17226095497608185, 0.003203025320544839, 0.13705626130104065, 6.532455881824717e-05, 0.461700975894928, 0.027252135798335075, 0.8635612726211548, 0.04605979472398758, 0.005464615765959024, 1.0609570381348021e-05, 0.002113372553139925, 0.0011598295532166958, 0.0030194190330803394, 0.12302539497613907, 0.5301399230957031, 0.07998750358819962, 0.18419420719146729, 0.005420748144388199], "tokens": [13, 268, 3776, 13, 1678, 6364, 2391, 29966, 12697, 21529, 29958, 679, 19077, 1891, 27427, 580, 426, 13, 4706, 2391, 29966, 12697, 21529, 29958, 11938, 353, 716, 9791, 29966, 12697, 21529, 8295, 13, 4706, 363, 313, 12697, 21529, 7276, 584, 445, 29889, 13646, 29879, 29897, 426, 13, 9651, 565, 313, 13646, 29889]}
{"line_number": 188, "line_type": "original", "code": "     */", "entropy": 7.8960747718811035, "is_bug_line": false, "sus_score": 0.524030327796936, "per_token_entropy": [6.852546691894531, 8.939602851867676], "tokens": [418, 3776]}
{"line_number": 188, "line_type": "generated", "code": "\n            }\n        }\n        return count;\n    }\n\n    /**\n     * Get the number of artificial variables.\n     * @return number of artificial variables\n     */\n    protected final int getNumArtificialVariables", "entropy": 0.1554163545370102, "is_bug_line": false, "sus_score": 0.524030327796936, "per_token_entropy": [0.13357587158679962, 0.3131157457828522, 0.02506689541041851, 0.05252404138445854, 0.058896753937006, 0.001450082752853632, 0.008791903965175152, 0.315553218126297, 0.010963913053274155, 0.002947393339127302, 0.00691875908523798, 0.0038355845026671886, 0.06429535895586014, 0.0017811877187341452, 0.007734943646937609, 0.035459551960229874, 0.036792051047086716, 0.018903343006968498, 0.09577891230583191, 0.016706090420484543, 0.0016150538576766849, 0.35993507504463196, 0.30349868535995483, 1.2775171995162964, 0.00413171062245965, 1.7269011735916138, 0.10008493065834045, 1.2004462480545044, 0.04165085032582283, 0.12083162367343903, 0.0031280419789254665, 0.041326284408569336, 0.0037481787148863077, 0.1834944188594818, 0.004623674787580967, 0.03369060903787613, 0.025310076773166656, 0.1270485818386078, 0.18228276073932648, 0.030746573582291603, 0.001959072658792138, 0.017619164660573006, 0.8211004734039307, 0.21199257671833038, 0.001954313600435853, 0.00278014549985528, 0.024323495104908943, 0.007385688368231058, 0.001116486731916666, 0.0032093231566250324, 0.004749564453959465, 0.00035637227119877934], "tokens": [13, 9651, 500, 13, 4706, 500, 13, 4706, 736, 2302, 29936, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 3617, 278, 1353, 310, 23116, 3651, 29889, 13, 268, 334, 732, 2457, 1353, 310, 23116, 3651, 13, 268, 3776, 13, 1678, 6364, 2186, 938, 679, 8009, 9986, 928, 616, 10444, 1849]}
{"line_number": 92, "line_type": "original", "code": "    /**", "entropy": 6.877490043640137, "is_bug_line": false, "sus_score": 0.5221499800682068, "per_token_entropy": [5.6760358810424805, 8.078944206237793], "tokens": [268, 7762]}
{"line_number": 92, "line_type": "generated", "code": "f.getConstant()<|endmask:0|><|endmask:1|><|mask:2|>-f.getConstant()<|endmask:2|>;\n\n        // initialize the constraint rows\n       ", "entropy": 0.2238488346338272, "is_bug_line": false, "sus_score": 0.5221499800682068, "per_token_entropy": [2.1167221069335938, 0.00931110791862011, 0.16036689281463623, 0.4844319224357605, 4.529942543740617e-06, 0.6454512476921082, 0.4321064352989197, 0.02241886593401432, 1.3701846599578857, 0.31126272678375244, 0.22561508417129517, 0.48721784353256226, 0.020332831889390945, 0.2322162538766861, 0.002702990546822548, 0.2763984799385071, 0.0002609150833450258, 0.0013258008984848857, 0.029553335160017014, 0.0029154198709875345, 0.6448193192481995, 0.004469880368560553, 0.23530691862106323, 0.0016462358180433512, 1.4055784940719604, 0.004666865803301334, 0.20021294057369232, 0.6466406583786011, 0.0942370668053627, 0.0032198987901210785, 0.0025810045190155506, 0.0072988285683095455, 1.2755313036905136e-05, 0.004330542869865894, 0.010179271921515465, 9.440929716220126e-05, 0.0019011296099051833, 0.00019762947340495884, 0.0003678122302517295, 0.012752648442983627, 0.00043132537393830717, 0.4488880932331085, 0.023244980722665787, 0.1664903163909912, 0.0405377596616745, 0.055364932864904404, 0.1215992346405983, 0.12475388497114182, 0.38138052821159363, 0.06059522554278374, 0.06893298029899597, 0.03660554438829422], "tokens": [29888, 29889, 657, 12075, 424, 580, 29966, 29989, 355, 13168, 29901, 29900, 29989, 5299, 29989, 355, 13168, 29901, 29896, 29989, 5299, 29989, 13168, 29901, 29906, 29989, 29958, 29899, 29888, 29889, 657, 12075, 424, 580, 29966, 29989, 355, 13168, 29901, 29906, 29989, 25867, 13, 13, 4706, 849, 11905, 278, 7276, 4206, 13, 4706]}
{"line_number": 189, "line_type": "original", "code": "    public int getNumVariables() {", "entropy": 2.55808424949646, "is_bug_line": false, "sus_score": 0.5185550451278687, "per_token_entropy": [6.176802635192871, 8.815942764282227, 0.6145738959312439, 0.09600690007209778, 1.9100587368011475, 5.329912185668945, 0.0011260127648711205, 0.04877104610204697, 0.029565025120973587], "tokens": [268, 970, 938, 679, 8009, 10444, 1849, 580, 426]}
{"line_number": 189, "line_type": "generated", "code": "\n            if (constraint.getRelationship() == Relationship.GEQ) {\n                ++count;\n            }\n        }\n        return count;\n    }\n\n    /**\n     * Get the offset of the s", "entropy": 0.20576699078083038, "is_bug_line": false, "sus_score": 0.5185550451278687, "per_token_entropy": [0.13807249069213867, 1.060863971710205, 0.6868577599525452, 0.15815193951129913, 0.19945329427719116, 0.01543152891099453, 0.08888524770736694, 0.049286361783742905, 0.00045980370487086475, 0.0002826052950695157, 0.07667824625968933, 0.11484787613153458, 0.7080982327461243, 0.0002134810492862016, 4.2676016164477915e-05, 0.002269432647153735, 1.6224570274353027, 0.0008481719414703548, 0.19495925307273865, 0.010658598504960537, 0.0140003003180027, 0.05820722132921219, 0.1372225433588028, 0.005287472158670425, 0.0016089839627966285, 0.009404052048921585, 0.0156008992344141, 0.000935950840357691, 0.11100535094738007, 0.43467676639556885, 0.015320242382586002, 0.004806037526577711, 0.3311878740787506, 0.007284982595592737, 0.00210111984051764, 0.0035493490286171436, 0.0026645890902727842, 0.02213067188858986, 0.0008198237628675997, 0.0036151548847556114, 0.03524310514330864, 0.02961432747542858, 0.013935292139649391, 0.0936877503991127, 0.00641607865691185, 0.0012354368809610605, 0.3227171003818512, 0.27696722745895386, 1.597348690032959, 0.6316437125205994, 0.12684278190135956, 1.2539844512939453], "tokens": [13, 9651, 565, 313, 13646, 29889, 657, 9662, 800, 4034, 580, 1275, 6376, 800, 4034, 29889, 1692, 29984, 29897, 426, 13, 18884, 8445, 2798, 29936, 13, 9651, 500, 13, 4706, 500, 13, 4706, 736, 2302, 29936, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 3617, 278, 9210, 310, 278, 269]}
{"line_number": 313, "line_type": "original", "code": "        for (int i = 0; i < height; i++) {", "entropy": 0.6920797824859619, "is_bug_line": false, "sus_score": 0.5171235799789429, "per_token_entropy": [4.964690685272217, 1.692047119140625, 0.10262451320886612, 0.048096876591444016, 0.8427430987358093, 0.02259265072643757, 0.23861928284168243, 0.10536335408687592, 0.01937967725098133, 0.0030996394343674183, 0.03215070441365242, 2.837944507598877, 0.1088300347328186, 0.03326912969350815, 0.009947016835212708, 0.01187894307076931], "tokens": [308, 363, 313, 524, 474, 353, 29871, 29900, 29936, 474, 529, 3171, 29936, 474, 4862, 426]}
{"line_number": 313, "line_type": "generated", "code": "\n     * @param minuendRow the row to subtract from\n     * @param subtrahendRow the row to subtract\n     * @param multiplier the multiple to subtract\n     */\n    private void subtractRow(final int min", "entropy": 0.26640963554382324, "is_bug_line": false, "sus_score": 0.5171235799789429, "per_token_entropy": [0.2837771475315094, 0.2777450978755951, 0.06013981252908707, 0.5661627650260925, 0.007974216714501381, 2.566178798675537, 0.004721326753497124, 0.0004801789182238281, 0.5249882340431213, 0.8879953622817993, 0.18024839460849762, 0.3236008882522583, 0.05742514878511429, 0.034136105328798294, 0.09270414710044861, 0.02486632950603962, 0.00037150635034777224, 0.003882728284224868, 0.0004629017203114927, 0.0047404286451637745, 0.0013185387942939997, 0.0025091851130127907, 0.0007201223634183407, 0.11683686077594757, 0.027478782460093498, 0.0056380536407232285, 0.05089189484715462, 0.058036819100379944, 0.03149711340665817, 0.015162448398768902, 0.13676050305366516, 0.003491854527965188, 0.04124381020665169, 1.6043446063995361, 0.10480207949876785, 0.36868658661842346, 2.373412847518921, 0.6532930135726929, 0.2879619002342224, 0.09387855976819992, 0.05685883015394211, 0.4688747525215149, 0.0035843905061483383, 0.02133806049823761, 0.4570547938346863, 0.011092189699411392, 0.11237988620996475, 0.6082725524902344, 0.07678291201591492, 0.12154465913772583, 0.03166020289063454, 0.003290122374892235], "tokens": [13, 268, 334, 732, 3207, 1375, 29884, 355, 4301, 278, 1948, 304, 23197, 515, 13, 268, 334, 732, 3207, 1014, 3018, 29882, 355, 4301, 278, 1948, 304, 23197, 13, 268, 334, 732, 3207, 6674, 4926, 278, 2999, 304, 23197, 13, 268, 3776, 13, 1678, 2024, 1780, 23197, 4301, 29898, 8394, 938, 1375]}
