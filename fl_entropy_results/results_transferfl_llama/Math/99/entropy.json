{"line_number": 713, "line_type": "original", "code": "        int lcm = Math.abs(mulAndCheck(a / gcd(a, b), b));", "entropy": 1.4980740547180176, "is_bug_line": true, "sus_score": 0.7466042041778564, "per_token_entropy": [4.8091936111450195, 7.952354431152344, 4.64007043838501, 0.31734582781791687, 0.6418597102165222, 3.906395196914673, 2.6445679664611816, 0.23676279187202454, 0.07069770246744156, 5.946985721588135, 0.23052874207496643, 0.004205431789159775, 0.027387039735913277, 0.49598121643066406, 1.3260834217071533, 0.09841024875640869, 0.021967535838484764, 2.202531337738037, 0.010756488889455795, 0.0013775869738310575, 0.23535403609275818, 0.018649587407708168, 0.03319394588470459, 0.08111703395843506], "tokens": [308, 938, 301, 4912, 353, 5792, 29889, 6897, 29898, 16109, 2855, 5596, 29898, 29874, 847, 330, 2252, 29898, 29874, 29892, 289, 511, 289, 2483]}
{"line_number": 713, "line_type": "generated", "code": "\n     * @since 1.2\n     */\n    public static long mulAndCheck(long a, long b) {\n        return mulAndCheck(a, b, null);\n    }\n\n    /**\n     * Mult", "entropy": 0.15134960412979126, "is_bug_line": true, "sus_score": 0.7466042041778564, "per_token_entropy": [0.19879508018493652, 0.9781748652458191, 0.35490208864212036, 0.046417199075222015, 0.059100497514009476, 0.006229862570762634, 0.04447520896792412, 0.0005869334563612938, 0.6017444133758545, 0.02531786449253559, 0.04017195105552673, 0.013318266719579697, 0.03418322280049324, 0.03392421454191208, 0.0054589249193668365, 0.0012744885170832276, 0.023221220821142197, 0.0022845377679914236, 0.0009455977124162018, 0.00018463814922142774, 0.003440653206780553, 0.009866517037153244, 0.010258801281452179, 0.0005397531786002219, 0.003965373151004314, 0.00021360022947192192, 0.009376890026032925, 0.012768890708684921, 0.009104758501052856, 0.28689563274383545, 0.8175938725471497, 0.5792339444160461, 0.06376132369041443, 0.0010518262861296535, 0.12144236266613007, 0.06010086089372635, 0.0014537728857249022, 0.05781102925539017, 0.03223877772688866, 2.7398507595062256, 0.042226191610097885, 0.014765270985662937, 0.08439970761537552, 0.0017884464468806982, 0.007066258694976568, 0.09506893903017044, 0.06165551766753197, 0.11774435639381409, 0.031676605343818665, 0.007150416262447834, 0.0002431573811918497, 0.11471396684646606], "tokens": [13, 268, 334, 732, 16076, 29871, 29896, 29889, 29906, 13, 268, 3776, 13, 1678, 970, 2294, 1472, 15065, 2855, 5596, 29898, 5426, 263, 29892, 1472, 289, 29897, 426, 13, 4706, 736, 15065, 2855, 5596, 29898, 29874, 29892, 289, 29892, 1870, 416, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 9683]}
{"line_number": 710, "line_type": "original", "code": "        if (a==0 || b==0){", "entropy": 1.6963214874267578, "is_bug_line": false, "sus_score": 0.7342032194137573, "per_token_entropy": [5.47663688659668, 4.364720821380615, 0.2712581157684326, 0.7305157780647278, 4.019332408905029, 0.49380505084991455, 0.3815307915210724, 0.02268926426768303, 0.056834615767002106, 0.044311799108982086, 2.797900438308716], "tokens": [308, 565, 313, 29874, 1360, 29900, 3830, 289, 1360, 29900, 2597]}
{"line_number": 710, "line_type": "generated", "code": "\n            return 0L;\n        }\n        long ret = a * b;\n        if (a != 0 && ret / a != b) {\n            throw new ArithmeticException(\"overflow: mul\");\n        }\n       ", "entropy": 0.12558375298976898, "is_bug_line": false, "sus_score": 0.7342032194137573, "per_token_entropy": [0.14058847725391388, 1.414293885231018, 0.17406293749809265, 0.6717214584350586, 0.059271059930324554, 0.8028964996337891, 0.003677512053400278, 0.00848356168717146, 0.038749001920223236, 0.016984952613711357, 0.010740566998720169, 0.06784573942422867, 0.18612824380397797, 0.6969552040100098, 0.2676509916782379, 0.11140096187591553, 0.06043846905231476, 0.005042454693466425, 0.004315350204706192, 0.008094246499240398, 0.08846917003393173, 0.13486246764659882, 0.06671203672885895, 0.07367400825023651, 0.19159123301506042, 0.13587093353271484, 0.002684206236153841, 0.3442032039165497, 0.07829919457435608, 0.16482891142368317, 0.018914105370640755, 0.001931469771079719, 0.0013255628291517496, 0.013468471355736256, 0.011493422091007233, 0.010013110935688019, 0.03153211250901222, 0.012860454618930817, 0.006865009665489197, 0.01945064589381218, 6.282132380874828e-05, 0.0004409771354403347, 0.030986415222287178, 0.017625605687499046, 0.037504080682992935, 0.2127465158700943, 0.01493381429463625, 0.00466105155646801, 0.014276391826570034, 0.0014294892316684127, 0.003725375747308135, 0.03357096016407013], "tokens": [13, 9651, 736, 29871, 29900, 29931, 29936, 13, 4706, 500, 13, 4706, 1472, 3240, 353, 263, 334, 289, 29936, 13, 4706, 565, 313, 29874, 2804, 29871, 29900, 2607, 3240, 847, 263, 2804, 289, 29897, 426, 13, 9651, 3183, 716, 826, 18542, 2451, 703, 2262, 29901, 15065, 1496, 13, 4706, 500, 13, 4706]}
{"line_number": 714, "line_type": "original", "code": "        return lcm;", "entropy": 4.846035003662109, "is_bug_line": true, "sus_score": 0.714484691619873, "per_token_entropy": [6.629866600036621, 6.8967204093933105, 6.547079563140869, 2.0504097938537598, 2.106100559234619], "tokens": [308, 736, 301, 4912, 29936]}
{"line_number": 714, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Returns the value of the first argument raised to the power of the second\n     * argument.  If the second argument is negative, the result is 0.\n     * \n     * @param", "entropy": 0.3557029962539673, "is_bug_line": true, "sus_score": 0.714484691619873, "per_token_entropy": [0.09723369032144547, 0.3528222441673279, 0.0938081219792366, 0.007973626255989075, 0.05439865589141846, 0.0512017086148262, 0.02423681505024433, 0.10642440617084503, 0.005751607473939657, 0.00039414744242094457, 2.01186466217041, 0.21411684155464172, 2.473336696624756, 0.051191966980695724, 0.12268728762865067, 0.3104016184806824, 0.00047672350774519145, 0.38329923152923584, 0.0009478605352342129, 0.0006127863889560103, 0.02031729742884636, 0.012533116154372692, 0.010463380254805088, 1.6808841228485107, 0.3144015073776245, 0.003758035833016038, 0.00010990492592100054, 0.0170608963817358, 0.055039823055267334, 1.4706348180770874, 1.4538668394088745, 0.704254686832428, 0.6527079939842224, 0.015931693837046623, 0.016833633184432983, 0.5499277710914612, 0.16166512668132782, 1.071823000907898, 0.36340269446372986, 0.08268415927886963, 1.235400915145874, 0.2556079626083374, 0.13580277562141418, 1.2682803869247437, 0.040667906403541565, 0.0015079329023137689, 0.47473078966140747, 0.0010246747406199574, 0.0038018582854419947, 0.00020668754586949944, 0.05117226019501686, 0.006870337296277285], "tokens": [13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 16969, 278, 995, 310, 278, 937, 2980, 10425, 304, 278, 3081, 310, 278, 1473, 13, 268, 334, 2980, 29889, 29871, 960, 278, 1473, 2980, 338, 8178, 29892, 278, 1121, 338, 29871, 29900, 29889, 13, 268, 334, 29871, 13, 268, 334, 732, 3207]}
{"line_number": 711, "line_type": "original", "code": "            return 0;", "entropy": 3.7925708293914795, "is_bug_line": false, "sus_score": 0.6965466141700745, "per_token_entropy": [7.619509696960449, 6.437112331390381, 3.997763156890869, 0.33352023363113403, 0.574949324131012], "tokens": [632, 736, 29871, 29900, 29936]}
{"line_number": 711, "line_type": "generated", "code": "\n        return (a * b);\n    }\n\n    /**\n     * Multiply two integers, checking for overflow.\n     * \n     * @param a first value\n     * @param b second value\n     * @", "entropy": 0.19479237496852875, "is_bug_line": false, "sus_score": 0.6965466141700745, "per_token_entropy": [0.12550251185894012, 1.4464759826660156, 1.176885724067688, 1.6740360260009766, 0.7527478337287903, 0.3776795268058777, 0.014620429836213589, 0.1114807277917862, 0.027393534779548645, 0.10043226927518845, 0.001825929619371891, 0.007301313802599907, 0.03531376272439957, 0.039237525314092636, 0.029247509315609932, 0.08716918528079987, 0.004156641196459532, 0.0002489972102921456, 1.8494749069213867, 3.71926071238704e-05, 0.003083358285948634, 0.04950591176748276, 0.7002755999565125, 0.10829702019691467, 0.05767364427447319, 0.0005488081369549036, 0.009277448058128357, 0.2137404978275299, 0.11191485077142715, 0.03030928038060665, 0.00026520551182329655, 0.06502684205770493, 0.00012683063687290996, 0.009367442689836025, 0.00023552982020191848, 0.01030387356877327, 0.0012254356406629086, 0.8088193535804749, 0.017203275114297867, 0.010005793534219265, 0.017172105610370636, 0.013279564678668976, 6.365573790390044e-05, 7.354942499659956e-05, 0.00025519452174194157, 0.0010801678290590644, 0.0010386077919974923, 0.0005845506675541401, 0.0026406915858387947, 0.02341116964817047, 0.00021002470748499036, 0.0009201106731779873], "tokens": [13, 4706, 736, 313, 29874, 334, 289, 416, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 9683, 666, 368, 1023, 11920, 29892, 8454, 363, 11969, 29889, 13, 268, 334, 29871, 13, 268, 334, 732, 3207, 263, 937, 995, 13, 268, 334, 732, 3207, 289, 1473, 995, 13, 268, 334, 732]}
{"line_number": 749, "line_type": "original", "code": "        if (m < Integer.MIN_VALUE || m > Integer.MAX_VALUE) {", "entropy": 1.277551293373108, "is_bug_line": false, "sus_score": 0.69472336769104, "per_token_entropy": [6.722127437591553, 6.062451362609863, 0.04616884887218475, 8.154244422912598, 0.9064128398895264, 2.7816784381866455, 0.0009467886411584914, 0.16966064274311066, 0.0008492438937537372, 0.0006049233488738537, 0.49927088618278503, 0.025693794712424278, 0.003889378160238266, 0.00815750751644373, 0.0009162995265796781, 0.0021820086985826492, 0.0004086851258762181, 0.00036244976217858493, 0.10348017513751984, 0.06151730939745903], "tokens": [308, 565, 313, 29885, 529, 8102, 29889, 16173, 29918, 19143, 3830, 286, 1405, 8102, 29889, 12648, 29918, 19143, 29897, 426]}
{"line_number": 749, "line_type": "generated", "code": "\n                } else {\n                    throw new ArithmeticException(msg);\n                }\n            } else {\n                // assert a == 0\n                ret = 0;\n            }\n        }\n        return ret;\n   ", "entropy": 0.035849206149578094, "is_bug_line": false, "sus_score": 0.69472336769104, "per_token_entropy": [0.15181505680084229, 0.7509713768959045, 0.04377200827002525, 0.05591293424367905, 0.009471717290580273, 0.0047760214656591415, 0.04544006660580635, 0.009028207510709763, 0.04076439142227173, 0.0006355411605909467, 0.002374093746766448, 0.00022063204960431904, 0.0006530536338686943, 0.003242950653657317, 0.0008609164506196976, 0.0012809175532311201, 0.007793850731104612, 0.19465197622776031, 0.0039044588338583708, 0.010525193065404892, 0.05694441497325897, 0.002703465986996889, 0.0073648616671562195, 0.019389381632208824, 0.004855507984757423, 0.05554932355880737, 0.012817027978599072, 0.005710597150027752, 0.008427178487181664, 0.006999732926487923, 0.006028444971889257, 0.0011181537993252277, 0.002765404526144266, 0.028552165254950523, 0.062147993594408035, 0.0009018882992677391, 0.001655637752264738, 0.0009913297835737467, 0.0016586130950599909, 0.010602572932839394, 0.031012417748570442, 0.0017550080083310604, 0.0035631281789392233, 0.03583743795752525, 0.0019086254760622978, 0.004221813287585974, 0.10467281937599182, 0.010068697854876518, 0.0009838269324973226, 0.0014334175502881408, 0.009079950861632824, 0.024342460557818413], "tokens": [13, 18884, 500, 1683, 426, 13, 462, 1678, 3183, 716, 826, 18542, 2451, 29898, 7645, 416, 13, 18884, 500, 13, 9651, 500, 1683, 426, 13, 18884, 849, 4974, 263, 1275, 29871, 29900, 13, 18884, 3240, 353, 29871, 29900, 29936, 13, 9651, 500, 13, 4706, 500, 13, 4706, 736, 3240, 29936, 13, 1678]}
{"line_number": 562, "line_type": "original", "code": "            k++; // cast out twos.", "entropy": 6.082045555114746, "is_bug_line": false, "sus_score": 0.6665274500846863, "per_token_entropy": [8.388124465942383, 15.132902145385742, 4.508943557739258, 4.054087162017822, 8.41421127319336, 3.017381429672241, 6.714942932128906, 0.00010084597306558862, 4.507717609405518], "tokens": [632, 413, 9107, 849, 4320, 714, 3252, 359, 29889]}
{"line_number": 562, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Returns an integer hash code representing the given float value.\n     * \n     * @param value the value to be hashed\n     * @return the hash code\n     */\n    public static", "entropy": 0.028327576816082, "is_bug_line": false, "sus_score": 0.6665274500846863, "per_token_entropy": [0.12991668283939362, 0.7726889252662659, 0.02068938873708248, 0.0051548900082707405, 0.014244308695197105, 0.013336499221622944, 0.008696540258824825, 0.005047198850661516, 0.001142325927503407, 3.635817120084539e-05, 0.03019246645271778, 0.03101184032857418, 0.001972754718735814, 0.0026362924836575985, 0.00021073981770314276, 0.0024584089405834675, 0.0009140365873463452, 0.001751794945448637, 0.286213219165802, 0.010884084738790989, 0.0028329261112958193, 0.002430344233289361, 0.00043704494601115584, 3.766942609217949e-05, 0.015541980974376202, 1.7404405298293568e-05, 0.00018416139937471598, 2.098061486321967e-05, 0.0023017835337668657, 0.00018130090029444546, 0.000819347333163023, 0.004833679646253586, 0.00026222606538794935, 0.0008521024719811976, 0.00010799778101500124, 8.606540359323844e-05, 5.185469490243122e-05, 0.004504414740949869, 0.00011896379146492109, 2.706014311115723e-05, 0.000198821333469823, 0.00020692592079285532, 0.0005081792478449643, 8.606540359323844e-05, 0.0006286313873715699, 0.0008818790083751082, 0.0012959185987710953, 0.09168237447738647, 0.0002797450579237193, 0.0016496871830895543, 0.0006625840906053782, 0.00010501786891836673], "tokens": [13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 16969, 385, 6043, 6608, 775, 15783, 278, 2183, 5785, 995, 29889, 13, 268, 334, 29871, 13, 268, 334, 732, 3207, 995, 278, 995, 304, 367, 6608, 287, 13, 268, 334, 732, 2457, 278, 6608, 775, 13, 268, 3776, 13, 1678, 970, 2294]}
{"line_number": 560, "line_type": "original", "code": "            u /= 2;", "entropy": 4.061720848083496, "is_bug_line": false, "sus_score": 0.6512259244918823, "per_token_entropy": [8.569328308105469, 10.203471183776855, 7.457186222076416, 0.4944339394569397, 0.3918929100036621, 1.0923340320587158, 0.22339509427547455], "tokens": [632, 318, 847, 29922, 29871, 29906, 29936]}
{"line_number": 560, "line_type": "generated", "code": "\n     */\n    public static int hash(double[] value) {\n        return Arrays.hashCode(value);\n    }\n\n    /**\n     * Returns an integer hash code representing the given float value.\n     * \n", "entropy": 0.056120987981557846, "is_bug_line": false, "sus_score": 0.6512259244918823, "per_token_entropy": [0.1890326589345932, 0.2536751925945282, 0.05668853223323822, 0.0011014830088242888, 0.03345475718379021, 0.0118888383731246, 0.000902126485016197, 0.002657931065186858, 0.0004465774691198021, 0.014471807517111301, 0.07615476846694946, 0.03784354776144028, 0.0136897973716259, 0.007529333233833313, 0.0021290748845785856, 0.004226324148476124, 0.203545480966568, 0.9678539037704468, 0.480037122964859, 0.00803606677800417, 0.0020374746527522802, 0.001629216712899506, 0.00044705410255119205, 0.007257526274770498, 0.0020462782122194767, 0.007801302243024111, 0.0023919325321912766, 0.020878536626696587, 0.00019941726350225508, 0.002776816952973604, 0.017247332260012627, 0.009485769085586071, 0.006858498323708773, 0.004969506990164518, 0.001481984043493867, 4.625213477993384e-05, 0.04778280481696129, 0.022540321573615074, 0.0015353093622252345, 0.0018196230521425605, 0.00015448330668732524, 0.0020247451029717922, 0.0007566926069557667, 0.0018862566212192178, 0.348935067653656, 0.015899429097771645, 0.0018858996918424964, 0.0013716346584260464, 0.0044100647792220116, 4.160317621426657e-05, 0.014257588423788548, 6.961580220377073e-05], "tokens": [13, 268, 3776, 13, 1678, 970, 2294, 938, 6608, 29898, 8896, 2636, 995, 29897, 426, 13, 4706, 736, 4398, 29879, 29889, 8568, 3399, 29898, 1767, 416, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 16969, 385, 6043, 6608, 775, 15783, 278, 2183, 5785, 995, 29889, 13, 268, 334, 29871, 13]}
{"line_number": 561, "line_type": "original", "code": "            v /= 2;", "entropy": 4.604878902435303, "is_bug_line": false, "sus_score": 0.6453644633293152, "per_token_entropy": [10.444230079650879, 10.69112777709961, 8.555639266967773, 0.3694666028022766, 0.5616913437843323, 1.359235167503357, 0.25276219844818115], "tokens": [632, 325, 847, 29922, 29871, 29906, 29936]}
{"line_number": 561, "line_type": "generated", "code": "\n    public static int hash(double[] value) {\n        return Arrays.hashCode(value);\n    }\n\n    /**\n     * Returns an integer hash code representing the given int value.\n     * \n     * @", "entropy": 0.08589035272598267, "is_bug_line": false, "sus_score": 0.6453644633293152, "per_token_entropy": [0.12404092401266098, 0.2749549150466919, 0.19998399913311005, 0.002561979927122593, 0.004352145362645388, 0.001090765930712223, 0.024926792830228806, 0.10325775295495987, 0.028730330988764763, 0.019981639459729195, 0.014122663997113705, 0.004062258172780275, 0.006892003118991852, 0.1394096165895462, 0.905169665813446, 0.5772292613983154, 0.006404588930308819, 0.0021356174256652594, 0.0025598397478461266, 0.00040713604539632797, 0.006588995922356844, 0.0027619570028036833, 0.0055785453878343105, 0.00322548346593976, 0.019564513117074966, 0.0005896736984141171, 0.006887504365295172, 0.026984594762325287, 0.017274048179388046, 0.013031673617661, 0.006084135267883539, 0.0014453213661909103, 6.174850568640977e-05, 0.07334227859973907, 0.04020996764302254, 0.0020535350777208805, 0.0030497252009809017, 0.0001662831346038729, 0.0021341899409890175, 0.0007898071780800819, 0.0014396075857803226, 1.7255816459655762, 0.029669182375073433, 0.002707983832806349, 0.008199009113013744, 0.0016346914926543832, 9.178694017464295e-05, 0.01965300180017948, 8.129743218887597e-05, 0.00033968876232393086, 4.5060096454108134e-05, 0.0027573206461966038], "tokens": [13, 1678, 970, 2294, 938, 6608, 29898, 8896, 2636, 995, 29897, 426, 13, 4706, 736, 4398, 29879, 29889, 8568, 3399, 29898, 1767, 416, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 16969, 385, 6043, 6608, 775, 15783, 278, 2183, 938, 995, 29889, 13, 268, 334, 29871, 13, 268, 334, 732]}
{"line_number": 578, "line_type": "original", "code": "                t /= 2; // cast out twos", "entropy": 3.050111770629883, "is_bug_line": false, "sus_score": 0.6319649815559387, "per_token_entropy": [5.172413349151611, 12.659658432006836, 8.657218933105469, 2.166196346282959, 1.1406710147857666, 1.4901478290557861, 0.5976262092590332, 2.5978050231933594, 2.0505127906799316, 0.015809550881385803, 0.053253330290317535, 2.753696753643453e-05], "tokens": [462, 260, 847, 29922, 29871, 29906, 29936, 849, 4320, 714, 3252, 359]}
{"line_number": 578, "line_type": "generated", "code": "\n     * -1.0 if x", "entropy": 0.15949641168117523, "is_bug_line": false, "sus_score": 0.6319649815559387, "per_token_entropy": [0.4421263039112091, 0.18100784718990326, 0.016904549673199654, 0.7672878503799438, 0.003425090340897441, 0.0062348381616175175, 0.00027378625236451626, 0.01746360771358013, 0.0007439468172378838], "tokens": [13, 268, 334, 448, 29896, 29889, 29900, 565, 921]}
{"line_number": 543, "line_type": "original", "code": "            return (Math.abs(u) + Math.abs(v));", "entropy": 1.6289961338043213, "is_bug_line": true, "sus_score": 0.5797553062438965, "per_token_entropy": [10.880041122436523, 3.101184129714966, 2.0646209716796875, 5.287909507751465, 0.03442097455263138, 0.34877946972846985, 0.025055617094039917, 1.0327026844024658, 0.11479697376489639, 0.792919397354126, 0.26255595684051514, 0.0037117176689207554, 0.0015165030490607023, 0.0011741180205717683, 0.003130062250420451, 2.1094186305999756], "tokens": [632, 736, 313, 11309, 29889, 6897, 29898, 29884, 29897, 718, 5792, 29889, 6897, 29898, 29894, 2483]}
{"line_number": 543, "line_type": "generated", "code": "\n    /**\n     *", "entropy": 0.14977172017097473, "is_bug_line": true, "sus_score": 0.5797553062438965, "per_token_entropy": [0.05172358453273773, 0.707922101020813, 0.1040034070611, 0.021861638873815536, 0.012961070984601974, 0.00015841660206206143], "tokens": [13, 1678, 7762, 13, 268, 334]}
{"line_number": 752, "line_type": "original", "code": "        return (int)m;", "entropy": 3.6453731060028076, "is_bug_line": false, "sus_score": 0.5792962312698364, "per_token_entropy": [6.795121192932129, 9.451071739196777, 3.0661895275115967, 0.4461742639541626, 0.039243943989276886, 5.667722225189209, 0.05208722874522209], "tokens": [308, 736, 313, 524, 29897, 29885, 29936]}
{"line_number": 752, "line_type": "generated", "code": "\n            } else {\n                // assert a == 0\n                ret = 0;\n            }\n        }\n        return ret;\n    }\n\n    /**\n     * Multiply two integers, checking for overflow.\n", "entropy": 0.06728604435920715, "is_bug_line": false, "sus_score": 0.5792962312698364, "per_token_entropy": [0.1368844211101532, 0.21920141577720642, 0.002711193636059761, 0.01015390083193779, 0.019786713644862175, 0.00948706828057766, 0.047821443527936935, 0.01738511584699154, 0.005721738561987877, 0.011376510374248028, 0.01115290354937315, 0.008896712213754654, 0.0009846605826169252, 0.004517943598330021, 0.03125958889722824, 0.05425989627838135, 0.0008709213580004871, 0.0017257335130125284, 0.0009179668850265443, 0.0014192519010975957, 0.00802459567785263, 0.04794485121965408, 0.002354232594370842, 0.0053957304917275906, 0.08535353094339371, 0.0020283141639083624, 0.00504648732021451, 0.13895699381828308, 0.014670239761471748, 0.0009395237429998815, 0.0013852057745680213, 0.010704596526920795, 0.05073859542608261, 0.004428460728377104, 0.013002844527363777, 0.06438366323709488, 0.05262119695544243, 0.023689333349466324, 0.14895299077033997, 0.00321122445166111, 0.00014101465058047324, 1.2177534103393555, 0.00012718822108581662, 0.00815797969698906, 0.0695631206035614, 0.47870948910713196, 0.16176876425743103, 0.13090725243091583, 0.00033480284037068486, 0.0017838055500760674, 0.022211706265807152, 0.12704795598983765], "tokens": [13, 9651, 500, 1683, 426, 13, 18884, 849, 4974, 263, 1275, 29871, 29900, 13, 18884, 3240, 353, 29871, 29900, 29936, 13, 9651, 500, 13, 4706, 500, 13, 4706, 736, 3240, 29936, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 9683, 666, 368, 1023, 11920, 29892, 8454, 363, 11969, 29889, 13]}
{"line_number": 558, "line_type": "original", "code": "        while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are", "entropy": 1.3364137411117554, "is_bug_line": false, "sus_score": 0.5780388712882996, "per_token_entropy": [4.866615295410156, 10.659793853759766, 4.699957370758057, 6.425887584686279, 2.1728901863098145, 0.19168463349342346, 0.34828999638557434, 0.017394723370671272, 0.0190782081335783, 0.00270845927298069, 0.0896412581205368, 3.063163995742798, 1.6281572580337524, 0.09247713536024094, 0.013339675031602383, 0.001807366730645299, 0.004571937955915928, 0.00524691678583622, 0.0062376814894378185, 0.0035539816599339247, 0.05181006342172623, 2.3797225952148438, 3.438288927078247, 0.3756904602050781, 0.11045555770397186, 0.03545805439352989, 0.3108825385570526, 0.03067617118358612, 0.026455912739038467, 2.2598729133605957, 0.7016338109970093, 2.394916296005249, 0.17093230783939362, 0.10636802762746811, 0.06882192939519882], "tokens": [308, 1550, 5135, 29884, 669, 29871, 29896, 29897, 1275, 29871, 29900, 2607, 313, 29894, 669, 29871, 29896, 29897, 1275, 29871, 29900, 2607, 413, 529, 29871, 29941, 29896, 29897, 426, 849, 1550, 318, 322, 325, 526]}
{"line_number": 558, "line_type": "generated", "code": "\n     * @return the hash code\n     */\n    public static int hash(double[] value) {\n        return Arrays.hashCode(value);\n    }\n\n    /**\n     * Returns an integer hash code representing the given", "entropy": 0.07516226917505264, "is_bug_line": false, "sus_score": 0.5780388712882996, "per_token_entropy": [0.17866364121437073, 0.7629904747009277, 0.05052044615149498, 0.015487519092857838, 0.16027924418449402, 0.0031526407692581415, 0.0005007919971831143, 0.0034623933024704456, 0.034291625022888184, 0.03699931502342224, 0.09762711077928543, 0.0027646913658827543, 0.02772381529211998, 0.014479797333478928, 0.003305212128907442, 0.005438769701868296, 0.001090289675630629, 0.03593508154153824, 0.08800586313009262, 0.06035104766488075, 0.04763675481081009, 0.02127061039209366, 0.005759074818342924, 0.007052883040159941, 0.17667962610721588, 0.8557274341583252, 0.9326649904251099, 0.013101799413561821, 0.0028401773888617754, 0.005107569042593241, 0.0008586533949710429, 0.008431433700025082, 0.0035583768039941788, 0.012447762303054333, 0.004328287672251463, 0.016463270410895348, 0.0005899119423702359, 0.0060500106774270535, 0.02286067232489586, 0.02567102201282978, 0.01630553789436817, 0.004846136085689068, 0.003441247157752514, 0.00010430268594063818, 0.08154036104679108, 0.03851113095879555, 0.0021793919149786234, 0.002524405485019088, 0.00018404220463708043, 0.002174633787944913, 0.0012035276740789413, 0.003253169357776642], "tokens": [13, 268, 334, 732, 2457, 278, 6608, 775, 13, 268, 3776, 13, 1678, 970, 2294, 938, 6608, 29898, 8896, 2636, 995, 29897, 426, 13, 4706, 736, 4398, 29879, 29889, 8568, 3399, 29898, 1767, 416, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 16969, 385, 6043, 6608, 775, 15783, 278, 2183]}
{"line_number": 748, "line_type": "original", "code": "        long m = ((long)x) * ((long)y);", "entropy": 2.0056843757629395, "is_bug_line": false, "sus_score": 0.5771613121032715, "per_token_entropy": [7.215540409088135, 8.34781551361084, 2.3722054958343506, 0.09047891944646835, 5.332126617431641, 1.328815221786499, 0.0651797503232956, 4.024410724639893, 0.2732173502445221, 0.10507889091968536, 0.8085838556289673, 0.0155399851500988, 0.005169240292161703, 0.07296134531497955, 0.02813720703125], "tokens": [308, 1472, 286, 353, 5135, 5426, 29897, 29916, 29897, 334, 5135, 5426, 29897, 29891, 416]}
{"line_number": 748, "line_type": "generated", "code": "\n                    ret = a * b;\n                } else {\n                    throw new ArithmeticException(msg);\n                }\n            } else {\n                // assert a == 0\n                ret = 0;\n            }\n", "entropy": 0.02473566308617592, "is_bug_line": false, "sus_score": 0.5771613121032715, "per_token_entropy": [0.12953105568885803, 0.23544465005397797, 0.08052174001932144, 0.07908185571432114, 0.001110532903112471, 0.0035175136290490627, 0.0032063524704426527, 0.001049920916557312, 0.0019160023657605052, 0.006307338364422321, 0.23620183765888214, 0.0023646983318030834, 0.00723456684499979, 0.005629756022244692, 0.003115326166152954, 0.08174349367618561, 0.004153435584157705, 0.011520172469317913, 0.0004204819560982287, 0.001883281976915896, 0.00011944057769142091, 0.0005212855176068842, 0.001701218425296247, 0.0005983707960695028, 0.0008200620068237185, 0.009591684676706791, 0.11746392399072647, 0.0036359410732984543, 0.00871509313583374, 0.023927845060825348, 0.0012740122620016336, 0.004530878737568855, 0.028120748698711395, 0.004698427394032478, 0.035150233656167984, 0.007774215191602707, 0.005342373624444008, 0.00715574249625206, 0.00523612555116415, 0.003822521772235632, 0.0008395960903726518, 0.002511444501578808, 0.03300734609365463, 0.06110011041164398, 0.0010045487433671951, 0.0018548441585153341, 0.0008891443139873445, 0.001804986852221191, 0.0046949866227805614, 0.007451123557984829, 0.0011826909612864256, 0.00375934224575758], "tokens": [13, 462, 1678, 3240, 353, 263, 334, 289, 29936, 13, 18884, 500, 1683, 426, 13, 462, 1678, 3183, 716, 826, 18542, 2451, 29898, 7645, 416, 13, 18884, 500, 13, 9651, 500, 1683, 426, 13, 18884, 849, 4974, 263, 1275, 29871, 29900, 13, 18884, 3240, 353, 29871, 29900, 29936, 13, 9651, 500, 13]}
{"line_number": 577, "line_type": "original", "code": "            while ((t & 1) == 0) { // while t is even..", "entropy": 1.6384446620941162, "is_bug_line": false, "sus_score": 0.568212628364563, "per_token_entropy": [9.010292053222656, 7.919244289398193, 1.9079580307006836, 5.131811141967773, 0.9615782499313354, 1.046669602394104, 0.3940047025680542, 0.027733322232961655, 0.04195759445428848, 0.004549035336822271, 0.004677781835198402, 0.702255129814148, 0.08429452776908875, 2.184964656829834, 0.15527653694152832, 0.30640071630477905, 0.005798779893666506, 0.01116186287254095, 1.2298190593719482], "tokens": [632, 1550, 5135, 29873, 669, 29871, 29896, 29897, 1275, 29871, 29900, 29897, 426, 849, 1550, 260, 338, 1584, 636]}
{"line_number": 577, "line_type": "generated", "code": "\n     * For a short value x, this method returns (short)(+1) if x >= 0 and\n     * (short)(-1) if x", "entropy": 0.08317681401968002, "is_bug_line": false, "sus_score": 0.568212628364563, "per_token_entropy": [0.22126151621341705, 0.2980470657348633, 0.08756516873836517, 0.5860404968261719, 0.49964872002601624, 0.9689284563064575, 0.00358522217720747, 0.007604815065860748, 0.0003194298769813031, 0.0020650746300816536, 0.000723576988093555, 0.0006910558440722525, 0.0940263569355011, 0.019478587433695793, 0.01208531018346548, 0.003278834745287895, 0.0005086558521725237, 0.00019262365822214633, 0.0012076949933543801, 0.002183198230341077, 0.020410507917404175, 0.005531837232410908, 0.00010716341057559475, 0.005670295562595129, 0.015945302322506905, 0.045696113258600235, 0.00040165462996810675, 0.0023425775580108166, 0.004022721666842699, 0.0005310555570758879, 0.00014745102089364082, 0.0001399419124936685, 6.067568756407127e-05, 0.0004353767435532063, 0.00030417583184316754], "tokens": [13, 268, 334, 1152, 263, 3273, 995, 921, 29892, 445, 1158, 3639, 313, 12759, 5033, 29974, 29896, 29897, 565, 921, 6736, 29871, 29900, 322, 13, 268, 334, 313, 12759, 5033, 29899, 29896, 29897, 565, 921]}
{"line_number": 557, "line_type": "original", "code": "        int k = 0;", "entropy": 2.5169408321380615, "is_bug_line": false, "sus_score": 0.5666300654411316, "per_token_entropy": [6.260823726654053, 3.8309078216552734, 6.092229843139648, 0.09383471310138702, 0.08381371200084686, 1.2392956018447876, 0.017680654302239418], "tokens": [308, 938, 413, 353, 29871, 29900, 29936]}
{"line_number": 557, "line_type": "generated", "code": "\n     * @param array the array to be hashed\n     * @return the hash code\n     */\n    public static int hash(double[] array) {\n        int i = array.length;\n        int hash = i + ", "entropy": 0.20146873593330383, "is_bug_line": false, "sus_score": 0.5666300654411316, "per_token_entropy": [0.13563114404678345, 0.4485224485397339, 0.03521502763032913, 0.07103963196277618, 0.004541321657598019, 1.0345515012741089, 0.12447362393140793, 0.08916857093572617, 0.13223132491111755, 0.007312911096960306, 0.0003219324571546167, 0.0002374367177253589, 0.04032080993056297, 0.06506090611219406, 0.0005218812730163336, 0.006303903181105852, 0.17510361969470978, 0.0032456836197525263, 0.0002361257211305201, 0.004235464613884687, 0.007936608977615833, 0.05179851874709129, 0.21958211064338684, 0.0016161249950528145, 0.055885203182697296, 0.018545914441347122, 0.0018554391572251916, 0.0078547652810812, 0.0006149308173917234, 0.012173638679087162, 0.158502995967865, 0.1079309955239296, 0.05527142435312271, 0.0210542231798172, 0.004383123014122248, 0.004082085099071264, 0.15203984081745148, 0.7663814425468445, 1.851219892501831, 0.3489956855773926, 0.9770395159721375, 0.010107523761689663, 0.002435338916257024, 0.11417174339294434, 0.008044344373047352, 0.15901947021484375, 0.6357904672622681, 1.503535509109497, 0.17702414095401764, 0.6423753499984741, 0.006443676073104143, 0.014386383816599846], "tokens": [13, 268, 334, 732, 3207, 1409, 278, 1409, 304, 367, 6608, 287, 13, 268, 334, 732, 2457, 278, 6608, 775, 13, 268, 3776, 13, 1678, 970, 2294, 938, 6608, 29898, 8896, 2636, 1409, 29897, 426, 13, 4706, 938, 474, 353, 1409, 29889, 2848, 29936, 13, 4706, 938, 6608, 353, 474, 718, 29871]}
{"line_number": 590, "line_type": "original", "code": "        } while (t != 0);", "entropy": 2.313699245452881, "is_bug_line": false, "sus_score": 0.564471423625946, "per_token_entropy": [9.1635103225708, 5.0970988273620605, 5.69305419921875, 0.061541635543107986, 0.7587620615959167, 0.017240067943930626, 0.0021946171764284372, 0.00041607304592616856, 0.029476018622517586], "tokens": [308, 500, 1550, 313, 29873, 2804, 29871, 29900, 416]}
{"line_number": 590, "line_type": "generated", "code": "\n    /**\n     * For an integer value x, this method returns 1 if x >= 0 and -1 if x", "entropy": 0.17485474050045013, "is_bug_line": false, "sus_score": 0.564471423625946, "per_token_entropy": [0.03858017921447754, 0.31174689531326294, 0.04663533344864845, 0.015186987817287445, 0.003536401316523552, 0.00016640232934150845, 0.49516561627388, 1.2378162145614624, 1.1319704055786133, 0.006391085684299469, 0.020619675517082214, 0.0006677066558040679, 0.0038016207981854677, 0.0022157898638397455, 0.0006021831650286913, 0.6353873610496521, 0.0033736478071659803, 0.0006571040721610188, 0.0017993940273299813, 0.585723340511322, 0.0003597089380491525, 0.0001538873475510627, 0.0018306892598047853, 0.15467703342437744, 0.0002307625545654446, 0.008549517020583153, 0.013233214616775513], "tokens": [13, 1678, 7762, 13, 268, 334, 1152, 385, 6043, 995, 921, 29892, 445, 1158, 3639, 29871, 29896, 565, 921, 6736, 29871, 29900, 322, 448, 29896, 565, 921]}
{"line_number": 571, "line_type": "original", "code": "        int t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;", "entropy": 2.617173671722412, "is_bug_line": false, "sus_score": 0.556797444820404, "per_token_entropy": [6.739118576049805, 6.315219402313232, 4.1236371994018555, 0.13440880179405212, 2.7007017135620117, 8.212259292602539, 1.183176040649414, 0.40389445424079895, 2.390528678894043, 1.0307013988494873, 2.1744704246520996, 0.032145507633686066, 1.8718435764312744, 0.516482412815094, 0.013108741492033005, 6.812549591064453, 0.24384669959545135, 4.375236511230469, 1.948191523551941, 2.591501235961914, 0.127369686961174, 0.00726001150906086, 2.65183424949646, 6.9420084953308105, 5.431116104125977, 1.7782220840454102, 2.431645393371582, 0.09838021546602249], "tokens": [308, 938, 260, 353, 5135, 29884, 669, 29871, 29896, 29897, 1275, 29871, 29896, 29897, 1577, 325, 584, 19691, 29884, 847, 29871, 29906, 29897, 5515, 350, 29941, 3776, 29936]}
{"line_number": 571, "line_type": "generated", "code": "\n     * @since 1.2\n     */\n    public static byte sign(final byte x) {\n        return (byte) ((x >> 7) | (-x >> 7));\n    }\n\n    /**\n    ", "entropy": 0.1667705923318863, "is_bug_line": false, "sus_score": 0.556797444820404, "per_token_entropy": [0.13743983209133148, 0.21767236292362213, 1.1483556032180786, 0.0901377946138382, 0.12698957324028015, 0.002298929262906313, 0.15624496340751648, 0.00025459862081333995, 0.40794089436531067, 0.026599979028105736, 0.02569623477756977, 0.01743759959936142, 0.000846027978695929, 0.024115566164255142, 0.015074148774147034, 0.0009763241396285594, 0.08632677793502808, 0.021765880286693573, 0.1506090760231018, 0.603204607963562, 0.011737806722521782, 0.038226962089538574, 0.0024317714851349592, 0.003764211433008313, 0.007242259569466114, 0.11569326370954514, 0.2201756089925766, 0.21495294570922852, 0.728950023651123, 0.03403966873884201, 1.1253705024719238, 0.009305085055530071, 0.14786817133426666, 0.05011371523141861, 0.006944093853235245, 0.0001919085334520787, 0.3761577010154724, 1.3898005485534668, 0.10091917216777802, 0.07564117759466171, 0.002092554699629545, 0.6381431818008423, 0.003429366974160075, 0.0512838177382946, 0.026338880881667137, 0.0003516055876389146, 0.001833782996982336, 0.014983373694121838, 0.00637580594047904, 0.004621538799256086, 0.0023229538928717375, 0.0007803970365785062], "tokens": [13, 268, 334, 732, 16076, 29871, 29896, 29889, 29906, 13, 268, 3776, 13, 1678, 970, 2294, 7023, 1804, 29898, 8394, 7023, 921, 29897, 426, 13, 4706, 736, 313, 10389, 29897, 5135, 29916, 5099, 29871, 29955, 29897, 891, 8521, 29916, 5099, 29871, 29955, 2483, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268]}
{"line_number": 542, "line_type": "original", "code": "        if ((u == 0) || (v == 0)) {", "entropy": 1.1054259538650513, "is_bug_line": true, "sus_score": 0.5541630983352661, "per_token_entropy": [6.315308570861816, 3.5931124687194824, 3.4858791828155518, 0.47437939047813416, 2.7703323364257812, 0.3435783386230469, 0.04054977744817734, 0.18269366025924683, 0.05516471341252327, 0.011492596939206123, 0.012575614266097546, 0.005516899283975363, 0.3064460754394531, 0.043369367718696594, 0.032061003148555756, 0.01435465645045042], "tokens": [308, 565, 5135, 29884, 1275, 29871, 29900, 29897, 3830, 313, 29894, 1275, 29871, 29900, 876, 426]}
{"line_number": 542, "line_type": "generated", "code": "\n            return (Math.abs(u) + Math.abs(v));\n        }\n        // keep u and v negative, as negative integers range down to\n        // -2^31, while positive numbers can only be as large", "entropy": 0.06912630796432495, "is_bug_line": true, "sus_score": 0.5541630983352661, "per_token_entropy": [0.09777522832155228, 1.2187570333480835, 0.36964157223701477, 0.9013808369636536, 0.5048252940177917, 0.0016609933227300644, 0.03183954954147339, 0.0037068482488393784, 0.0608987919986248, 0.0350254662334919, 0.035510290414094925, 0.0022715735249221325, 0.000533795915544033, 0.00045408427831716835, 0.0002503081923350692, 0.0015955348499119282, 0.02826874703168869, 0.0022612258326262236, 0.009969677776098251, 0.0015961299650371075, 0.0036359410732984543, 0.04263477399945259, 0.06046540290117264, 0.0071207075379788876, 0.00037531962152570486, 0.004044448956847191, 5.030505417380482e-05, 0.0013461584458127618, 0.0004553949984256178, 6.878139538457617e-05, 0.0005192600074224174, 0.004818613175302744, 0.00041333239641971886, 0.000482442817883566, 0.00023457636416424066, 0.0013887770473957062, 0.0003828269545920193, 0.0001070442158379592, 0.0022532569710165262, 0.000602421467192471, 0.00032872517476789653, 0.14799854159355164, 0.004692257381975651, 0.0003293210465926677, 0.0002603192115202546, 0.0005229535745456815, 0.00029416524921543896, 6.496695277746767e-05, 0.0001289761275984347, 8.415821503149346e-05, 0.00012146688823122531, 0.00011908298620255664], "tokens": [13, 9651, 736, 313, 11309, 29889, 6897, 29898, 29884, 29897, 718, 5792, 29889, 6897, 29898, 29894, 2483, 13, 4706, 500, 13, 4706, 849, 3013, 318, 322, 325, 8178, 29892, 408, 8178, 11920, 3464, 1623, 304, 13, 4706, 849, 448, 29906, 29985, 29941, 29896, 29892, 1550, 6374, 3694, 508, 871, 367, 408, 2919]}
{"line_number": 591, "line_type": "original", "code": "        return -u * (1 << k); // gcd is u*2^k", "entropy": 2.0132768154144287, "is_bug_line": false, "sus_score": 0.5513433218002319, "per_token_entropy": [8.685176849365234, 5.814122200012207, 4.599350452423096, 4.475656509399414, 4.788135051727295, 1.3199177980422974, 2.1252472400665283, 1.256028413772583, 0.8062298893928528, 0.09440824389457703, 2.2403604984283447, 0.6890873908996582, 0.0028778587002307177, 0.8776309490203857, 0.4623895287513733, 0.007657341659069061, 0.00045074793160893023, 0.007142131216824055, 0.000388665939681232], "tokens": [308, 736, 448, 29884, 334, 313, 29896, 3532, 413, 416, 849, 330, 2252, 338, 318, 29930, 29906, 29985, 29895]}
{"line_number": 591, "line_type": "generated", "code": "\n\n    /**\n     * For a float value x, this method returns +1.0f if x >= 0 and\n     * -1.0f if x", "entropy": 0.11321667581796646, "is_bug_line": false, "sus_score": 0.5513433218002319, "per_token_entropy": [0.05234881862998009, 0.788489580154419, 0.06203528866171837, 0.03587205708026886, 0.013519044034183025, 0.002359108766540885, 0.0001512651506345719, 0.61905837059021, 0.5109918713569641, 0.15770110487937927, 0.025481967255473137, 0.004870218224823475, 0.0002236116270069033, 0.0013762774178758264, 0.00043406602344475687, 0.0002108589978888631, 0.4179138243198395, 0.00031144535751082003, 0.39069557189941406, 0.0005734706646762788, 0.42290380597114563, 0.0002971446083392948, 0.00024863966973498464, 0.012818558141589165, 0.00028939827461726964, 8.4638240878121e-06, 0.008447273634374142, 0.6562671065330505, 0.0001685477327555418, 1.1801649634435307e-05, 0.0017446548445150256, 5.8887653722194955e-05, 0.0004135706985834986, 8.165503095369786e-05, 0.00022802136663813144, 0.0003773453936446458, 3.40932747349143e-05], "tokens": [13, 13, 1678, 7762, 13, 268, 334, 1152, 263, 5785, 995, 921, 29892, 445, 1158, 3639, 718, 29896, 29889, 29900, 29888, 565, 921, 6736, 29871, 29900, 322, 13, 268, 334, 448, 29896, 29889, 29900, 29888, 565, 921]}
{"line_number": 587, "line_type": "original", "code": "            t = (v - u) / 2;", "entropy": 3.5015482902526855, "is_bug_line": false, "sus_score": 0.5505703091621399, "per_token_entropy": [6.8131866455078125, 11.182367324829102, 0.3218381404876709, 1.8643505573272705, 8.707958221435547, 4.389805316925049, 5.086965560913086, 0.433552622795105, 1.0321292877197266, 1.7763299942016602, 0.09406564384698868, 0.31602898240089417], "tokens": [632, 260, 353, 313, 29894, 448, 318, 29897, 847, 29871, 29906, 29936]}
{"line_number": 587, "line_type": "generated", "code": "\n        }\n        return (x >= 0) ? 1.0 : -1.0;\n    }\n\n    /**\n     * For a float value x, this method returns +1.0f if x >= 0", "entropy": 0.0959344208240509, "is_bug_line": false, "sus_score": 0.5505703091621399, "per_token_entropy": [0.09435227513313293, 0.3254835605621338, 0.024412378668785095, 0.24656431376934052, 0.2742280662059784, 0.11724724620580673, 0.566386342048645, 0.010891985148191452, 0.12041351199150085, 0.11266909539699554, 0.00047910655848681927, 0.7740494608879089, 0.0006543640629388392, 0.2643089294433594, 0.0007459718617610633, 0.4573264718055725, 0.00129413278773427, 0.1061616837978363, 0.003976534586399794, 0.00036054308293387294, 0.0006378046819008887, 6.949660019017756e-05, 0.001321515068411827, 0.02139243669807911, 0.025196397677063942, 0.0002299282787134871, 0.0008074360666796565, 0.008156797848641872, 0.00570395914837718, 0.002158218529075384, 0.0019050560658797622, 0.0003759154351428151, 1.680836794548668e-05, 0.06448570638895035, 0.2252943515777588, 0.05295919254422188, 0.0858924612402916, 0.0014455594355240464, 0.00013851160474587232, 0.0004714807728305459, 0.00012790338951162994, 0.00019536493346095085, 0.1205562874674797, 0.00011359999916749075, 0.5802481174468994, 0.0006144542712718248, 0.28356295824050903, 0.00023266946664080024, 0.00014494798961095512, 0.0019458661554381251, 0.0001760566228767857, 6.6756979322235566e-06], "tokens": [13, 4706, 500, 13, 4706, 736, 313, 29916, 6736, 29871, 29900, 29897, 1577, 29871, 29896, 29889, 29900, 584, 448, 29896, 29889, 29900, 29936, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 1152, 263, 5785, 995, 921, 29892, 445, 1158, 3639, 718, 29896, 29889, 29900, 29888, 565, 921, 6736, 29871, 29900]}
{"line_number": 564, "line_type": "original", "code": "        if (k == 31) {", "entropy": 2.8005406856536865, "is_bug_line": false, "sus_score": 0.5389451384544373, "per_token_entropy": [8.327898979187012, 5.67869234085083, 0.11199350655078888, 6.347653388977051, 1.0457866191864014, 0.23025919497013092, 4.679948329925537, 1.4388904571533203, 0.1256152242422104, 0.018667489290237427], "tokens": [308, 565, 313, 29895, 1275, 29871, 29941, 29896, 29897, 426]}
{"line_number": 564, "line_type": "generated", "code": "\n    /**\n     * Returns an integer hash code representing the given float value.\n     * \n     * @param value the value to be hashed\n     * @return the hash code\n     */\n    public static int hash(float", "entropy": 0.034818101674318314, "is_bug_line": false, "sus_score": 0.5389451384544373, "per_token_entropy": [0.10897735506296158, 0.37060296535491943, 0.09197045117616653, 0.019564161077141762, 0.007640306372195482, 0.00023707917716819793, 0.17488716542720795, 0.15101629495620728, 0.0060438490472733974, 0.008557317778468132, 0.00037508129025809467, 0.003193875541910529, 0.0013821106404066086, 0.002314509591087699, 0.5276281237602234, 0.0201845895498991, 0.0034969625994563103, 0.006457060109823942, 0.002184744458645582, 0.00021443451987579465, 0.06790020316839218, 0.00013648532330989838, 0.0008347125840373337, 7.784063927829266e-05, 0.005881147924810648, 0.0005175919504836202, 0.0016001766780391335, 0.012797726318240166, 0.0003326578007545322, 0.0021046886686235666, 0.00015889335190877318, 0.00015317220822907984, 8.546940807718784e-05, 0.006947526708245277, 0.0003496989083942026, 6.949660019017756e-05, 0.0004514628672040999, 0.0003381395654287189, 0.0007862337515689433, 0.00011395759065635502, 0.0006970121758058667, 0.0012167439563199878, 0.0029801977798342705, 0.1428692787885666, 0.002552467631176114, 0.005886006634682417, 0.0034370890352874994, 0.0008965287124738097, 0.0009564354550093412, 0.00030787018476985395, 0.0012278169160708785, 0.0389481782913208], "tokens": [13, 1678, 7762, 13, 268, 334, 16969, 385, 6043, 6608, 775, 15783, 278, 2183, 5785, 995, 29889, 13, 268, 334, 29871, 13, 268, 334, 732, 3207, 995, 278, 995, 304, 367, 6608, 287, 13, 268, 334, 732, 2457, 278, 6608, 775, 13, 268, 3776, 13, 1678, 970, 2294, 938, 6608, 29898, 7411]}
