{"line_number": 337, "line_type": "original", "code": "                for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {", "entropy": 1.3608773946762085, "is_bug_line": true, "sus_score": 0.8112542033195496, "per_token_entropy": [9.16937255859375, 11.996886253356934, 0.08724894374608994, 0.09292566776275635, 0.8115555047988892, 0.02494039759039879, 1.9017595052719116, 0.9844427108764648, 0.17182235419750214, 0.011933011934161186, 0.001983462367206812, 0.0004789874074049294, 0.870574951171875, 0.228912353515625, 0.04843231290578842, 0.20715132355690002, 3.2320423126220703, 0.3745400607585907, 0.02236909046769142, 0.007941457442939281, 0.0004574206250254065, 0.013287446461617947, 0.05388879403471947, 7.468218803405762, 0.1777082085609436, 0.0764869973063469, 0.027001651003956795, 0.04019954800605774], "tokens": [462, 363, 313, 524, 432, 353, 679, 8009, 2061, 573, 6678, 29879, 890, 432, 529, 679, 8009, 2061, 573, 6678, 29879, 580, 718, 474, 29936, 432, 4862, 426]}
{"line_number": 337, "line_type": "generated", "code": "\n\n    /**\n     * Get the height of the tableau.\n     * @return height of the tableau\n     */\n    protected final int getHeight() {\n        return tableau.getRowDimension();\n    }\n", "entropy": 0.06490977108478546, "is_bug_line": true, "sus_score": 0.8112542033195496, "per_token_entropy": [0.059949081391096115, 1.553340196609497, 0.09433014690876007, 0.04545726999640465, 0.044131938368082047, 0.004460860975086689, 0.0005709686665795743, 0.5858532190322876, 0.06472910195589066, 0.4060961604118347, 0.004772106651216745, 0.0023272354155778885, 0.005341069307178259, 0.004164001438766718, 0.03437432646751404, 0.005265653133392334, 0.0013923484366387129, 0.0016869375249370933, 0.03556884825229645, 0.0009188005933538079, 0.031446631997823715, 0.004983385093510151, 0.0019687095191329718, 0.0017644088948145509, 0.0013375869020819664, 0.014561805874109268, 0.001708239782601595, 0.003833447117358446, 0.001821169862523675, 0.009601720608770847, 0.04561752825975418, 0.07425191253423691, 0.0017949911998584867, 0.0007918321643956006, 0.001610174193046987, 0.001279607880860567, 0.0006785474251955748, 0.0028715587686747313, 0.0154005391523242, 0.005898331757634878, 0.02146419696509838, 0.0005285535007715225, 0.0010274137603119016, 0.000580499938223511, 0.00555744394659996, 0.00025281094713136554, 0.0006760457181371748, 0.1473274827003479, 0.004987180698662996, 0.0036918832920491695, 0.0009908534120768309, 0.010271427221596241], "tokens": [13, 13, 1678, 7762, 13, 268, 334, 3617, 278, 3171, 310, 278, 1591, 585, 29889, 13, 268, 334, 732, 2457, 3171, 310, 278, 1591, 585, 13, 268, 3776, 13, 1678, 6364, 2186, 938, 679, 7011, 580, 426, 13, 4706, 736, 1591, 585, 29889, 657, 4301, 16142, 2673, 890, 13, 1678, 500, 13]}
{"line_number": 338, "line_type": "original", "code": "                    if (tableau.getEntry(basicRow, j) == 1) {", "entropy": 1.6145988702774048, "is_bug_line": true, "sus_score": 0.8024746775627136, "per_token_entropy": [8.688970565795898, 2.7890849113464355, 6.356170654296875, 0.17740467190742493, 3.1717748641967773, 0.007192906457930803, 0.13436472415924072, 0.05260163173079491, 0.5798056721687317, 0.005367629695683718, 2.762629508972168, 0.14206840097904205, 0.03697403892874718, 1.8779659271240234, 0.127055823802948, 1.5730199813842773, 0.10752501338720322, 3.245147943496704, 0.4282224774360657, 0.028626656159758568], "tokens": [462, 268, 565, 313, 2371, 585, 29889, 657, 9634, 29898, 16121, 4301, 29892, 432, 29897, 1275, 29871, 29896, 29897, 426]}
{"line_number": 338, "line_type": "generated", "code": "\n    /**\n     * Get the height of the tableau.\n     * @return height of the tableau\n     */\n    protected final int getHeight() {\n        return tableau.getRowDimension();\n    }\n\n", "entropy": 0.0638536810874939, "is_bug_line": true, "sus_score": 0.8024746775627136, "per_token_entropy": [0.11865822970867157, 0.38567203283309937, 0.12527652084827423, 0.07719770818948746, 0.005902005359530449, 0.0005498804384842515, 0.857677698135376, 0.10551783442497253, 0.8237667083740234, 0.005457146558910608, 0.0014488924061879516, 0.008762717247009277, 0.004012866877019405, 0.03996121883392334, 0.005409009754657745, 0.000947622349485755, 0.0017475108616054058, 0.034939590841531754, 0.001060757553204894, 0.03671851009130478, 0.005230196285992861, 0.0018199799815192819, 0.002130740089341998, 0.0016362386522814631, 0.015866810455918312, 0.0015931545058265328, 0.004633879289031029, 0.0028477851301431656, 0.01764645427465439, 0.06055404618382454, 0.09493733197450638, 0.0019508631667122245, 0.0009358317474834621, 0.003364499658346176, 0.0013961577787995338, 0.0007258402765728533, 0.0036712170112878084, 0.015207535587251186, 0.006804508622735739, 0.03262215480208397, 0.0002269487304147333, 0.0009243983076885343, 0.0005886013968847692, 0.008901437744498253, 0.0002873722987715155, 0.0008229206432588398, 0.09630899876356125, 0.0046497792936861515, 0.004144532140344381, 0.0009036748087964952, 0.008914080448448658, 0.27745872735977173], "tokens": [13, 1678, 7762, 13, 268, 334, 3617, 278, 3171, 310, 278, 1591, 585, 29889, 13, 268, 334, 732, 2457, 3171, 310, 278, 1591, 585, 13, 268, 3776, 13, 1678, 6364, 2186, 938, 679, 7011, 580, 426, 13, 4706, 736, 1591, 585, 29889, 657, 4301, 16142, 2673, 890, 13, 1678, 500, 13, 13]}
{"line_number": 339, "line_type": "original", "code": "                         coefficients[i] = 0;", "entropy": 2.6756839752197266, "is_bug_line": true, "sus_score": 0.7970555424690247, "per_token_entropy": [7.912252426147461, 3.7191503047943115, 9.779475212097168, 1.2311919927597046, 0.7912034392356873, 0.07928626984357834, 0.7850793600082397, 1.4730087518692017, 0.43991798162460327, 0.5462749004364014], "tokens": [462, 3986, 16127, 29961, 29875, 29962, 353, 29871, 29900, 29936]}
{"line_number": 339, "line_type": "generated", "code": "\n     * Get the entry in the tableau.\n     * @param row row index\n     * @param column column index\n     * @return entry in the tableau\n     */\n    protected double getEntry(final int row, final", "entropy": 0.1978229284286499, "is_bug_line": true, "sus_score": 0.7970555424690247, "per_token_entropy": [0.27821168303489685, 0.21855752170085907, 0.08474947512149811, 1.0812327861785889, 0.11876992136240005, 2.2663235664367676, 1.0924723148345947, 0.25960615277290344, 0.3269937336444855, 0.01680268719792366, 0.7084518074989319, 0.0083712637424469, 0.08617838472127914, 0.0015616138698533177, 0.2403574138879776, 0.002152032917365432, 0.14383956789970398, 0.2225227952003479, 0.10565149039030075, 0.09195882081985474, 0.05866486579179764, 0.0012215065071359277, 0.001658970140852034, 0.006241354160010815, 0.12372306734323502, 0.013728013262152672, 0.004872472491115332, 0.017070388421416283, 0.025126533582806587, 0.003705898066982627, 0.011026167310774326, 0.005681319627910852, 0.566342830657959, 0.5490952730178833, 0.06078213453292847, 0.024271836504340172, 0.009242605417966843, 0.07849020510911942, 0.07939241826534271, 0.03778477758169174, 0.009508087299764156, 0.0950464978814125, 0.10680394619703293, 0.9658911228179932, 0.0033201829064637423, 0.0028406528290361166, 0.0026213114615529776, 0.04422079026699066, 0.006943620275706053, 0.0012953233672305942, 0.0014388932613655925, 0.013973850756883621], "tokens": [13, 268, 334, 3617, 278, 6251, 297, 278, 1591, 585, 29889, 13, 268, 334, 732, 3207, 1948, 1948, 2380, 13, 268, 334, 732, 3207, 1897, 1897, 2380, 13, 268, 334, 732, 2457, 6251, 297, 278, 1591, 585, 13, 268, 3776, 13, 1678, 6364, 3765, 679, 9634, 29898, 8394, 938, 1948, 29892, 2186]}
{"line_number": 70, "line_type": "original", "code": "", "entropy": 2.6671485900878906, "is_bug_line": false, "sus_score": 0.6945320963859558, "per_token_entropy": [4.91823673248291, 0.4160606861114502], "tokens": [29871, 13]}
{"line_number": 70, "line_type": "generated", "code": "\n     * @param isMaximization if true, the problem is a maximization, otherwise it is a minimization\n     * @return the tableau\n     */\n    private RealMatrix createTableau(final boolean isMaximization)", "entropy": 0.2077552229166031, "is_bug_line": false, "sus_score": 0.6945320963859558, "per_token_entropy": [0.21461713314056396, 0.12815116345882416, 0.012404082342982292, 0.22949625551700592, 0.040038760751485825, 2.029195785522461, 0.08919081836938858, 0.03380436450242996, 0.12410031259059906, 0.6378410458564758, 0.15299709141254425, 0.04869838058948517, 0.9144066572189331, 1.001887321472168, 0.04913508519530296, 0.2770763039588928, 0.017605459317564964, 0.0009578645695000887, 0.8913394808769226, 0.18095223605632782, 0.3800298273563385, 0.28199252486228943, 0.06546182930469513, 0.08086428791284561, 0.0019848900847136974, 0.12423349916934967, 0.10582844913005829, 0.022042518481612206, 0.012809142470359802, 0.024487411603331566, 0.6201093792915344, 0.2624605894088745, 0.002196520334109664, 0.43591365218162537, 0.10041340440511703, 0.07299071550369263, 0.007136804983019829, 0.03397399187088013, 0.6000223755836487, 0.21224144101142883, 0.0008269704412668943, 0.021646080538630486, 0.0006833125371485949, 0.00013302871957421303, 0.005717945750802755, 0.24640752375125885, 0.0006356602534651756, 0.0008138681878335774, 7.86750388215296e-05, 0.00014494798961095512, 5.6265202147187665e-05, 0.005037710070610046], "tokens": [13, 268, 334, 732, 3207, 338, 7976, 326, 2133, 565, 1565, 29892, 278, 1108, 338, 263, 5256, 2133, 29892, 6467, 372, 338, 263, 6260, 2133, 13, 268, 334, 732, 2457, 278, 1591, 585, 13, 268, 3776, 13, 1678, 2024, 8195, 14609, 1653, 3562, 585, 29898, 8394, 7223, 338, 7976, 326, 2133, 29897]}
{"line_number": 333, "line_type": "original", "code": "                coefficients[i] =", "entropy": 4.732146739959717, "is_bug_line": true, "sus_score": 0.6782548427581787, "per_token_entropy": [6.909788608551025, 14.101116180419922, 5.3272199630737305, 1.1474860906600952, 0.2546747028827667, 0.6525963544845581], "tokens": [462, 16127, 29961, 29875, 29962, 353]}
{"line_number": 333, "line_type": "generated", "code": "\n     */\n    protected int getWidth() {\n        return getNumObjectiveFunctions() + getNumDecisionVariables() + 1;\n    }\n\n    /**\n     * Get the height of the tableau.\n", "entropy": 0.1358981430530548, "is_bug_line": true, "sus_score": 0.6782548427581787, "per_token_entropy": [0.21425454318523407, 0.15774895250797272, 0.36216723918914795, 0.006147049367427826, 0.053408052772283554, 0.2956617474555969, 0.04742543399333954, 0.003496843855828047, 0.041091542690992355, 0.011862450279295444, 0.0030115749686956406, 0.023014342412352562, 0.18610745668411255, 0.0425705723464489, 0.782429575920105, 0.3476101756095886, 0.10948832333087921, 0.002201516181230545, 0.0006856950931251049, 0.0002755738969426602, 0.007589790038764477, 0.02429848164319992, 0.2262452393770218, 1.410693645477295, 0.1549648940563202, 0.0010839784517884254, 0.0008551992941647768, 0.00014697425649501383, 0.5257505178451538, 0.09903904050588608, 0.41248995065689087, 0.06117311492562294, 0.15016014873981476, 0.046474210917949677, 0.4696466326713562, 0.007202730048447847, 0.013993952423334122, 0.06960614770650864, 0.04111327975988388, 0.011240136809647083, 0.013797973282635212, 0.0012442474253475666, 0.0004757702990900725, 0.2895856499671936, 0.036805953830480576, 0.2568259537220001, 0.004257187247276306, 0.0016167201101779938, 0.004932141397148371, 0.003310440108180046, 0.024506255984306335, 0.004917076323181391], "tokens": [13, 268, 3776, 13, 1678, 6364, 938, 679, 6110, 580, 426, 13, 4706, 736, 679, 8009, 2061, 573, 6678, 29879, 580, 718, 679, 8009, 6185, 2459, 10444, 1849, 580, 718, 29871, 29896, 29936, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 3617, 278, 3171, 310, 278, 1591, 585, 29889, 13]}
{"line_number": 328, "line_type": "original", "code": "        double mostNegative = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset());", "entropy": 1.3751661777496338, "is_bug_line": false, "sus_score": 0.674627423286438, "per_token_entropy": [5.672064304351807, 6.123800277709961, 6.7036590576171875, 0.0417458675801754, 0.0020277192816138268, 0.13022923469543457, 0.2848255932331085, 9.01589298248291, 3.9559807777404785, 1.1415085792541504, 0.2612222731113434, 0.048770591616630554, 0.8107510209083557, 0.06271031498908997, 0.11852916330099106, 1.0347180366516113, 0.04132594168186188, 0.0013946102699264884, 0.030525406822562218, 0.00022599527437705547, 0.002214600332081318, 0.1588706076145172, 0.010908612050116062, 0.0005343916127458215, 0.0008024332928471267, 0.09907747805118561], "tokens": [308, 3765, 1556, 29940, 387, 1230, 353, 6996, 4301, 1275, 1870, 1577, 29871, 29900, 584, 679, 9634, 29898, 16121, 4301, 29892, 679, 29934, 9499, 10302, 3310]}
{"line_number": 328, "line_type": "generated", "code": "\n        // update the basis matrix\n        Integer basicColumn = getBasicColumn(subtrahendRow);\n        if (basicColumn != null) {\n            basis[minuendRow] = basicColumn;\n        }\n<|", "entropy": 0.4150494933128357, "is_bug_line": false, "sus_score": 0.674627423286438, "per_token_entropy": [0.12465707212686539, 1.069116473197937, 1.9992512464523315, 2.3256688117980957, 0.9408525228500366, 1.6191320419311523, 2.087409019470215, 0.36781132221221924, 0.0409482903778553, 1.3007534742355347, 1.667537808418274, 0.7539462447166443, 0.07325199246406555, 0.26538950204849243, 0.033993810415267944, 0.009506551548838615, 0.009018756449222565, 0.7589452862739563, 0.00030989613151177764, 0.00012170527770649642, 7.152301259338856e-05, 0.0008032671175897121, 0.13121865689754486, 0.015219158492982388, 0.05977863445878029, 0.33707302808761597, 0.013166979886591434, 0.018028205260634422, 0.0007818264421075583, 0.09688858687877655, 0.004017259925603867, 0.08228009194135666, 0.0010275328531861305, 0.014467460103332996, 0.05409807711839676, 1.8463314771652222, 0.6765087842941284, 1.0003437995910645, 0.00013290952483657748, 0.00011336160969221964, 0.000791236583609134, 0.8631203770637512, 0.010717215947806835, 0.13417084515094757, 0.0022513538133352995, 0.059121400117874146, 0.011541030369699001, 0.13111650943756104, 0.0013636585790663958, 0.06557749956846237, 0.5014903545379639, 0.0013386583887040615], "tokens": [13, 4706, 849, 2767, 278, 8405, 4636, 13, 4706, 8102, 6996, 4409, 353, 679, 16616, 4409, 29898, 1491, 3018, 29882, 355, 4301, 416, 13, 4706, 565, 313, 16121, 4409, 2804, 1870, 29897, 426, 13, 9651, 8405, 29961, 1195, 29884, 355, 4301, 29962, 353, 6996, 4409, 29936, 13, 4706, 500, 13, 29966, 29989]}
{"line_number": 329, "line_type": "original", "code": "        for (int i = 0; i < coefficients.length; i++) {", "entropy": 0.9131882786750793, "is_bug_line": true, "sus_score": 0.6741787791252136, "per_token_entropy": [7.381908893585205, 4.498021125793457, 0.009929075837135315, 0.06616713851690292, 0.5758956074714661, 0.01514730229973793, 0.41497838497161865, 0.10693356394767761, 0.011459480971097946, 0.00453562568873167, 0.04465444013476372, 3.053377628326416, 0.05732935667037964, 0.005985668394714594, 0.05291792377829552, 0.1200525313615799, 0.01242727693170309, 0.0056686364114284515], "tokens": [308, 363, 313, 524, 474, 353, 29871, 29900, 29936, 474, 529, 16127, 29889, 2848, 29936, 474, 4862, 426]}
{"line_number": 329, "line_type": "generated", "code": "\n    /**\n     * Swaps two rows of the tableau.\n     * @param row1 index of the first row\n     * @param row2 index of the second row\n     */\n    protected void swapRows(final int row", "entropy": 0.1906319111585617, "is_bug_line": true, "sus_score": 0.6741787791252136, "per_token_entropy": [0.054023198783397675, 0.45312267541885376, 0.10853832215070724, 0.05079638585448265, 0.0021941415034234524, 0.000486970558995381, 2.6911492347717285, 0.4311692714691162, 0.5099331140518188, 0.1914859116077423, 1.3500081300735474, 0.05924331024289131, 0.15722692012786865, 0.028622601181268692, 0.15358369052410126, 0.008874144405126572, 0.002117892960086465, 0.001495434669777751, 0.39564844965934753, 0.0006878394051454961, 0.23163987696170807, 0.3971005976200104, 1.5806610584259033, 0.023182667791843414, 0.22474615275859833, 0.03988516330718994, 0.006118732504546642, 0.35463789105415344, 0.00039986721822060645, 0.00027021096320822835, 0.0004744596080854535, 0.0003203832311555743, 0.0009460740839131176, 0.004242230672389269, 0.0025032395496964455, 0.0008554374799132347, 0.001680630026385188, 0.01832694746553898, 0.001806176733225584, 0.005484770983457565, 0.0025139416102319956, 0.04094691947102547, 0.0020205811597406864, 0.009136298671364784, 0.1021452248096466, 0.0027214179281145334, 0.03307550773024559, 0.12495968490839005, 0.001564113306812942, 0.03956208378076553, 0.007697326596826315, 0.00082601752365008], "tokens": [13, 1678, 7762, 13, 268, 334, 3925, 2547, 1023, 4206, 310, 278, 1591, 585, 29889, 13, 268, 334, 732, 3207, 1948, 29896, 2380, 310, 278, 937, 1948, 13, 268, 334, 732, 3207, 1948, 29906, 2380, 310, 278, 1473, 1948, 13, 268, 3776, 13, 1678, 6364, 1780, 17945, 10661, 29898, 8394, 938, 1948]}
{"line_number": 886, "line_type": "original", "code": "", "entropy": 2.933950901031494, "is_bug_line": false, "sus_score": 0.6721373796463013, "per_token_entropy": [5.229613304138184, 0.6382887363433838], "tokens": [29871, 13]}
{"line_number": 886, "line_type": "generated", "code": "\n<|mask:1|><|mask:0|>\n<|mask:1|><|mask:0|>\n<|mask:1|><|mask:0|>\n<|mask:1|><|mask", "entropy": 0.0830150619149208, "is_bug_line": false, "sus_score": 0.6721373796463013, "per_token_entropy": [0.12742005288600922, 0.44162094593048096, 0.02531089074909687, 0.12958279252052307, 0.01165674440562725, 0.6267305612564087, 0.020008398219943047, 0.4097411334514618, 0.00875172670930624, 0.07766053080558777, 0.005375929642468691, 0.617153525352478, 0.010570371523499489, 0.5257367491722107, 0.1606103628873825, 0.16064822673797607, 0.009069791994988918, 0.040247298777103424, 0.004692138638347387, 0.20726226270198822, 0.005169477313756943, 0.09662410616874695, 0.0018255725735798478, 0.012480845674872398, 0.002736991737037897, 0.03829110041260719, 0.0027019204571843147, 0.0725240632891655, 0.014400954358279705, 0.08089683204889297, 0.004439498297870159, 0.01743982546031475, 0.0033279056660830975, 0.07618381828069687, 0.002738299546763301, 0.04391907528042793, 0.0011524471919983625, 0.006160200573503971, 0.0025548457633703947, 0.01647312007844448, 0.0017088347813114524, 0.04144306480884552, 0.00863721314817667, 0.05499277263879776, 0.003344064112752676, 0.010474114678800106, 0.0024968183133751154, 0.03825461491942406, 0.0019665679428726435, 0.026320302858948708, 0.0009353553177788854, 0.004317724145948887], "tokens": [13, 29966, 29989, 13168, 29901, 29896, 29989, 5299, 29989, 13168, 29901, 29900, 29989, 29958, 13, 29966, 29989, 13168, 29901, 29896, 29989, 5299, 29989, 13168, 29901, 29900, 29989, 29958, 13, 29966, 29989, 13168, 29901, 29896, 29989, 5299, 29989, 13168, 29901, 29900, 29989, 29958, 13, 29966, 29989, 13168, 29901, 29896, 29989, 5299, 29989, 13168]}
{"line_number": 279, "line_type": "original", "code": "                    return null;", "entropy": 3.578498601913452, "is_bug_line": false, "sus_score": 0.6715584993362427, "per_token_entropy": [7.229194164276123, 2.7329459190368652, 5.4265594482421875, 2.496615171432495, 0.007177875377237797], "tokens": [462, 268, 736, 1870, 29936]}
{"line_number": 279, "line_type": "generated", "code": "\n        for (int i = 0; i", "entropy": 0.24548757076263428, "is_bug_line": false, "sus_score": 0.6715584993362427, "per_token_entropy": [0.10563990473747253, 0.18164724111557007, 1.1519163846969604, 0.002267410745844245, 0.03743415325880051, 0.6204937100410461, 0.005337512120604515, 0.3193548917770386, 0.2351020723581314, 0.034155458211898804, 0.007014529779553413], "tokens": [13, 4706, 363, 313, 524, 474, 353, 29871, 29900, 29936, 474]}
{"line_number": 344, "line_type": "original", "code": "        return new RealPointValuePair(coefficients, f.getValue(coefficients));", "entropy": 1.911969780921936, "is_bug_line": false, "sus_score": 0.6651862263679504, "per_token_entropy": [6.282732009887695, 2.179392099380493, 8.070113182067871, 5.438750267028809, 0.5027035474777222, 0.04266207292675972, 0.001278060139156878, 0.06525938212871552, 0.4896915555000305, 0.018289728090167046, 0.004288999363780022, 0.1990557610988617, 3.926833152770996, 3.616055488586426, 3.5594730377197266, 3.65053129196167, 0.11376605182886124, 0.0010520643554627895, 0.0006737822550348938, 0.07679019868373871], "tokens": [308, 736, 716, 8195, 5228, 1917, 20547, 29898, 1111, 8462, 29879, 29892, 285, 29889, 23433, 29898, 1111, 8462, 29879, 2483]}
{"line_number": 344, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Get the number of artificial variables.\n     * @return number of artificial variables\n     */\n    protected final int getNumArtificialVariables() {\n        return numArtificialVariables", "entropy": 0.12260829657316208, "is_bug_line": false, "sus_score": 0.6651862263679504, "per_token_entropy": [0.1030445322394371, 0.39012566208839417, 0.059994887560606, 0.012046677991747856, 0.08087088912725449, 0.06094556674361229, 0.019501734524965286, 0.014372870326042175, 0.0014631766825914383, 0.00018916724366135895, 0.5039780139923096, 0.2487078607082367, 2.0231926441192627, 0.004022484179586172, 1.3072589635849, 0.049659401178359985, 0.6127753257751465, 0.008891158737242222, 0.0029693818651139736, 0.0013606823049485683, 0.09367559105157852, 0.0017187122721225023, 0.2860935926437378, 0.0015900599537417293, 0.014896584674715996, 0.007985452190041542, 0.05253252387046814, 0.001903747208416462, 0.020190780982375145, 0.0013571109157055616, 0.010927596129477024, 0.08543463796377182, 0.19607669115066528, 0.002431533532217145, 0.0030604214407503605, 0.013838653452694416, 0.0012853225925937295, 0.0007401349139399827, 0.0006325627909973264, 0.005035456735640764, 0.0002101439022226259, 0.001086598145775497, 0.0006333967321552336, 0.004285675473511219, 0.030301183462142944, 0.006147760432213545, 0.025631750002503395, 0.0001565095444675535, 0.0001280225842492655, 0.00010764019680209458, 0.00014590153296012431, 1.883488948806189e-05], "tokens": [13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 3617, 278, 1353, 310, 23116, 3651, 29889, 13, 268, 334, 732, 2457, 1353, 310, 23116, 3651, 13, 268, 3776, 13, 1678, 6364, 2186, 938, 679, 8009, 9986, 928, 616, 10444, 1849, 580, 426, 13, 4706, 736, 954, 9986, 928, 616, 10444, 1849]}
{"line_number": 149, "line_type": "original", "code": "                // initialize the constraint rows", "entropy": 4.5043559074401855, "is_bug_line": false, "sus_score": 0.6635172367095947, "per_token_entropy": [6.470278263092041, 5.5728888511657715, 6.6934919357299805, 1.4106696844100952, 2.6875832080841064, 4.191220760345459], "tokens": [462, 849, 11905, 278, 7276, 4206]}
{"line_number": 149, "line_type": "generated", "code": "\n        for (LinearConstraint constraint : constraints) {\n            if (constraint.getValue()", "entropy": 0.16088512539863586, "is_bug_line": false, "sus_score": 0.6635172367095947, "per_token_entropy": [0.16413091123104095, 0.2613621950149536, 0.4337300956249237, 0.004260629881173372, 0.1541314423084259, 0.00012444675667211413, 0.4647233486175537, 0.027759643271565437, 0.16791932284832, 0.0037762064021080732, 0.0015286438865587115, 0.003901965217664838, 0.10126546770334244, 0.3788287043571472, 0.08814940601587296, 0.09831549972295761, 0.004920516163110733, 0.6968295574188232, 0.0011591151123866439], "tokens": [13, 4706, 363, 313, 12697, 21529, 7276, 584, 11938, 29897, 426, 13, 9651, 565, 313, 13646, 29889, 23433, 580]}
{"line_number": 132, "line_type": "original", "code": "        // initialize the objective function rows", "entropy": 2.467819929122925, "is_bug_line": false, "sus_score": 0.6628478765487671, "per_token_entropy": [5.880366802215576, 4.82655143737793, 2.9927806854248047, 0.45616674423217773, 1.7027469873428345, 0.26509544253349304, 1.151028037071228], "tokens": [308, 849, 11905, 278, 12091, 740, 4206]}
{"line_number": 132, "line_type": "generated", "code": "\n        return matrix;\n    }\n\n    /**\n     * Get the number of variables in the problem.\n     * @return number of variables\n     */\n    protected abstract int getNumVariables();\n\n    /**\n     *", "entropy": 0.20261238515377045, "is_bug_line": false, "sus_score": 0.6628478765487671, "per_token_entropy": [0.052658744156360626, 0.7354876399040222, 0.3178020715713501, 0.003393844934180379, 0.0006947487709112465, 0.00378119433298707, 0.21783459186553955, 0.002176299225538969, 0.005694358143955469, 0.1429443061351776, 0.13677796721458435, 0.045711372047662735, 0.18443195521831512, 0.0018330690218135715, 0.0006985607906244695, 1.595550775527954, 0.18449589610099792, 1.2131297588348389, 0.00304615986533463, 1.4385918378829956, 0.6108605265617371, 0.09175144135951996, 0.820277214050293, 0.3087192475795746, 0.1550741195678711, 0.0013505632523447275, 0.00711573613807559, 0.12574422359466553, 0.004152604844421148, 0.17835679650306702, 0.0019488405669108033, 0.05946630239486694, 0.5529682636260986, 0.0019074357114732265, 0.014510697685182095, 0.003549467772245407, 0.006959483493119478, 0.4260904788970947, 0.7146697044372559, 0.0014334175502881408, 0.0003797286772169173, 0.00029273517429828644, 0.0009226117981597781, 4.7205765440594405e-05, 0.0008764001540839672, 0.005311069544404745, 0.08757095783948898, 0.027613889425992966, 0.005995384883135557, 0.032365161925554276, 0.0005872909096069634, 0.00023910524032544345], "tokens": [13, 4706, 736, 4636, 29936, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 3617, 278, 1353, 310, 3651, 297, 278, 1108, 29889, 13, 268, 334, 732, 2457, 1353, 310, 3651, 13, 268, 3776, 13, 1678, 6364, 9846, 938, 679, 8009, 10444, 1849, 890, 13, 13, 1678, 7762, 13, 268, 334]}
{"line_number": 146, "line_type": "original", "code": "                        getInvertedCoeffiecientSum(objectiveCoefficients);", "entropy": 1.5931581258773804, "is_bug_line": false, "sus_score": 0.6628146171569824, "per_token_entropy": [7.008646011352539, 3.495551586151123, 7.155383586883545, 5.646812438964844, 0.029835695400834084, 0.011134395375847816, 0.04818832874298096, 0.0003426679759286344, 0.06703917682170868, 0.0032404554076492786, 0.002045802306383848, 0.0029042467940598726, 0.4251788258552551, 6.945147514343262, 0.02027909830212593, 0.558921754360199, 0.0006873629172332585, 0.007639478426426649, 0.0027159492019563913, 0.43146783113479614], "tokens": [462, 308, 679, 797, 1765, 287, 29907, 7297, 600, 347, 15566, 11139, 29898, 3318, 573, 29907, 7297, 4543, 29879, 416]}
{"line_number": 146, "line_type": "generated", "code": "\n     */\n    protected List<LinearConstraint> getNormalizedConstraints() {\n        List<LinearConstraint> constraints = new ArrayList<LinearConstraint>();\n        for (LinearConstraint constraint : getConstraints()) {\n            if (constraint.getValue()", "entropy": 0.14015831053256989, "is_bug_line": false, "sus_score": 0.6628146171569824, "per_token_entropy": [0.09438850730657578, 0.3459513783454895, 0.06933113187551498, 0.0033116282429546118, 0.021549951285123825, 0.7923368215560913, 0.044012054800987244, 0.007522352505475283, 0.0027425792068243027, 0.0004379982128739357, 0.0005308172549121082, 0.008715921081602573, 0.007841281592845917, 0.00021753329201601446, 0.0002522150462027639, 0.002778481226414442, 0.002262177411466837, 0.006215054076164961, 0.3048006594181061, 0.26379114389419556, 0.004272618796676397, 0.0032494859769940376, 1.4066597032069694e-05, 0.0001294529065489769, 1.0121426582336426, 0.03990406170487404, 0.15750619769096375, 0.006630207411944866, 0.12755407392978668, 0.06750627607107162, 2.396077979938127e-05, 0.5391840934753418, 0.011706702411174774, 0.17188750207424164, 0.1808817982673645, 0.0030534095130860806, 0.12528450787067413, 6.580135959666222e-05, 0.46673810482025146, 0.02683199569582939, 0.7456938624382019, 0.14866390824317932, 0.015588223934173584, 0.000992877990938723, 0.003535450901836157, 0.09472612291574478, 0.4894237816333771, 0.08404576778411865, 0.18220734596252441, 0.005304903257638216, 0.5932416319847107, 0.0012506766943261027], "tokens": [13, 268, 3776, 13, 1678, 6364, 2391, 29966, 12697, 21529, 29958, 679, 19077, 1891, 27427, 580, 426, 13, 4706, 2391, 29966, 12697, 21529, 29958, 11938, 353, 716, 9791, 29966, 12697, 21529, 8295, 13, 4706, 363, 313, 12697, 21529, 7276, 584, 679, 27427, 3101, 426, 13, 9651, 565, 313, 13646, 29889, 23433, 580]}
{"line_number": 192, "line_type": "original", "code": "", "entropy": 3.2068991661071777, "is_bug_line": false, "sus_score": 0.6580145359039307, "per_token_entropy": [6.260425567626953, 0.153372660279274], "tokens": [29871, 13]}
{"line_number": 192, "line_type": "generated", "code": "\n    /**\n     * Get the offset of the slack variables.\n     * @return offset of the slack variables\n     */\n    protected final int getSlackVariableOffset() {\n        return getNumObjectiveFunctions();\n", "entropy": 0.2537165582180023, "is_bug_line": false, "sus_score": 0.6580145359039307, "per_token_entropy": [0.026138337329030037, 0.07205186784267426, 0.0225263349711895, 0.2567053437232971, 0.004425256513059139, 0.0003695997002068907, 0.5276544094085693, 0.29277175664901733, 2.106261730194092, 0.7660269737243652, 0.11196600645780563, 1.1647491455078125, 0.0003375437227077782, 0.5881444215774536, 0.8938031196594238, 0.07542508095502853, 0.000648883986286819, 0.0027891802601516247, 0.05818169191479683, 0.004601366352289915, 0.6154901385307312, 0.3248232901096344, 0.23910276591777802, 0.04866170510649681, 0.0006964165368117392, 0.05064227804541588, 0.12182648479938507, 0.003014427376911044, 0.007605406921356916, 0.0024876620154827833, 0.004628777038305998, 0.6195250749588013, 0.3559350371360779, 0.00238277530297637, 0.0005545270396396518, 0.0020387833938002586, 0.0002109781780745834, 0.0006498370785266161, 0.0003252692404203117, 0.0009957361035048962, 0.0012834176886826754, 0.0038210966158658266, 0.014474627561867237, 0.12140636146068573, 0.7459685206413269, 0.2703319787979126, 0.9581031203269958, 0.010398376733064651, 0.004103692714124918, 0.00016389934171456844, 1.6636961698532104, 0.022333651781082153], "tokens": [13, 1678, 7762, 13, 268, 334, 3617, 278, 9210, 310, 278, 269, 2364, 3651, 29889, 13, 268, 334, 732, 2457, 9210, 310, 278, 269, 2364, 3651, 13, 268, 3776, 13, 1678, 6364, 2186, 938, 679, 29903, 2364, 16174, 10302, 580, 426, 13, 4706, 736, 679, 8009, 2061, 573, 6678, 29879, 890, 13]}
{"line_number": 293, "line_type": "original", "code": "        int width = getWidth() - numArtificialVariables - 1;", "entropy": 1.5327014923095703, "is_bug_line": false, "sus_score": 0.6553982496261597, "per_token_entropy": [5.956243515014648, 6.403974533081055, 6.778530597686768, 0.15171653032302856, 0.22724109888076782, 0.29440850019454956, 1.240289330482483, 0.05167524516582489, 4.275393486022949, 0.3368874192237854, 0.0011749514378607273, 0.0007765853079035878, 0.0017849955474957824, 0.00016306500765495002, 1.4325884580612183, 0.26705044507980347, 0.13722680509090424, 0.031501732766628265], "tokens": [308, 938, 2920, 353, 679, 6110, 580, 448, 954, 9986, 928, 616, 10444, 1849, 448, 29871, 29896, 29936]}
{"line_number": 293, "line_type": "generated", "code": "\n        }\n<|mask:1|>\n        return new RealPointValuePair(new ArrayRealVector(coefficients, false), 0.0);\n    }\n\n    /**\n     * Get the current solution.\n", "entropy": 0.306838721036911, "is_bug_line": false, "sus_score": 0.6553982496261597, "per_token_entropy": [0.09761326760053635, 0.49309056997299194, 0.1667729765176773, 0.018813500180840492, 1.6285479068756104, 0.002764096949249506, 0.12051623314619064, 0.010377731174230576, 0.561487078666687, 0.009869586676359177, 0.19920063018798828, 0.13537058234214783, 0.25392502546310425, 0.708711564540863, 0.09845583885908127, 0.07039698213338852, 0.0004533693427219987, 0.0030397421214729548, 0.0004986473359167576, 0.00969699863344431, 1.1870217323303223, 0.2701951563358307, 0.0008797351038083434, 0.0004812512779608369, 0.009157324209809303, 0.015812719240784645, 0.0013024666113778949, 0.0011659021256491542, 0.6807173490524292, 0.1176106184720993, 0.02342747338116169, 1.3315805196762085, 0.18604660034179688, 1.3202121257781982, 0.03704870864748955, 0.014685041271150112, 0.02345285937190056, 0.274132639169693, 0.002207106677815318, 0.0072364602237939835, 0.10076666623353958, 0.24513281881809235, 0.03667622059583664, 0.09478944540023804, 0.0013423488708212972, 0.0007074952009133995, 1.5336192846298218, 0.14127586781978607, 1.8281753063201904, 1.1904113292694092, 0.6675059199333191, 0.021234314888715744], "tokens": [13, 4706, 500, 13, 29966, 29989, 13168, 29901, 29896, 29989, 29958, 13, 4706, 736, 716, 8195, 5228, 1917, 20547, 29898, 1482, 4398, 21713, 12877, 29898, 1111, 8462, 29879, 29892, 2089, 511, 29871, 29900, 29889, 29900, 416, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 3617, 278, 1857, 1650, 29889, 13]}
{"line_number": 459, "line_type": "original", "code": "        return restrictToNonNegative ? numDecisionVariables : numDecisionVariables - 1;", "entropy": 1.6740195751190186, "is_bug_line": false, "sus_score": 0.6547695398330688, "per_token_entropy": [7.002816677093506, 3.692535877227783, 6.392136573791504, 0.0021845067385584116, 0.0009029601933434606, 0.0005975367967039347, 0.000120751719805412, 0.000605638197157532, 6.926639080047607, 6.465030670166016, 0.26364418864250183, 0.0018264055252075195, 0.002169043058529496, 0.00039891392225399613, 5.441978454589844, 0.8116303086280823, 0.08008114993572235, 0.0010421803453937173, 0.0008119623525999486, 0.00021109737281221896, 2.2320284843444824, 0.03168134018778801, 0.00569056486710906, 0.8197008371353149], "tokens": [308, 736, 9250, 1762, 12283, 29940, 387, 1230, 1577, 954, 6185, 2459, 10444, 1849, 584, 954, 6185, 2459, 10444, 1849, 448, 29871, 29896, 29936]}
{"line_number": 459, "line_type": "generated", "code": "\n\n      } catch (ClassCastException cce) {\n          return false;\n      }\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public int hashCode() {\n        return 11", "entropy": 0.18719659745693207, "is_bug_line": false, "sus_score": 0.6547695398330688, "per_token_entropy": [0.0656571015715599, 1.4019229412078857, 0.11422618478536606, 0.004235820844769478, 0.0189412422478199, 0.017765795812010765, 0.03832551836967468, 0.0003734129713848233, 0.001149827498011291, 0.445512592792511, 0.0033956270199269056, 0.01045936904847622, 0.003302241675555706, 0.04982318729162216, 0.2193721979856491, 0.059135109186172485, 0.007828152738511562, 0.0014772227732464671, 0.01911446452140808, 0.010178917087614536, 0.0015829188050702214, 0.03753887116909027, 1.6207648515701294, 0.013463295996189117, 0.003769793314859271, 0.05408237874507904, 0.05097618326544762, 0.023810166865587234, 0.17562419176101685, 0.0018403275171294808, 0.0007285801111720502, 0.0008269704412668943, 0.0009640575153753161, 0.006504199001938105, 0.0028468340169638395, 0.008065038360655308, 0.016420116648077965, 0.004201751668006182, 0.002879166277125478, 0.0029674803372472525, 0.008563108742237091, 0.18215976655483246, 0.002879166277125478, 0.0006070678355172276, 0.0024370038881897926, 0.0018319981172680855, 0.007694013882428408, 0.4412412941455841, 0.8136767148971558, 0.3638865649700165, 1.3835575580596924, 2.003633737564087], "tokens": [13, 13, 418, 500, 4380, 313, 2385, 15738, 2451, 274, 346, 29897, 426, 13, 3986, 736, 2089, 29936, 13, 418, 500, 13, 1678, 500, 13, 13, 1678, 7762, 26633, 262, 27069, 14526, 29913, 3776, 13, 1678, 732, 4640, 13, 1678, 970, 938, 6608, 3399, 580, 426, 13, 4706, 736, 29871, 29896, 29896]}
{"line_number": 300, "line_type": "original", "code": "            matrix[i][width - 1] = getEntry(i + 1, getRhsOffset());", "entropy": 1.4490903615951538, "is_bug_line": false, "sus_score": 0.6494929194450378, "per_token_entropy": [5.116271495819092, 4.66603946685791, 1.357028841972351, 2.634469747543335, 0.5968717932701111, 7.618640899658203, 1.1421853303909302, 0.07810163497924805, 0.04555830359458923, 0.025966212153434753, 1.4277294874191284, 3.936652660369873, 0.3376411497592926, 0.0031175841577351093, 0.3211572766304016, 1.4662728309631348, 0.034497104585170746, 0.002142516663298011, 0.003190310439094901, 2.881168842315674, 0.34707018733024597, 0.0023755207657814026, 0.005364665295928717, 0.7286518216133118], "tokens": [632, 4636, 29961, 29875, 3816, 2103, 448, 29871, 29896, 29962, 353, 679, 9634, 29898, 29875, 718, 29871, 29896, 29892, 679, 29934, 9499, 10302, 3310]}
{"line_number": 300, "line_type": "generated", "code": "\n     * </p>\n     * @param row row to subtract from\n     * @param subtrahend row to subtract\n     * @param multiple multiple to use for subtrahend\n     */\n    protected void subtractRow(", "entropy": 0.31294307112693787, "is_bug_line": false, "sus_score": 0.6494929194450378, "per_token_entropy": [0.2179032415151596, 0.09222812205553055, 0.004061664454638958, 0.5637305378913879, 0.0021058782003819942, 0.009915738366544247, 0.005553887225687504, 0.02280217967927456, 0.004217896144837141, 0.07521214336156845, 0.0012031705118715763, 1.2314993143081665, 1.7758231163024902, 0.23333372175693512, 0.1660626083612442, 0.14224760234355927, 0.12168114632368088, 0.010594788007438183, 0.0004648081958293915, 0.001959905494004488, 0.00038258862332440913, 1.6949771642684937, 0.6496869325637817, 0.12192578613758087, 0.0020404488313943148, 0.5365860462188721, 0.06702947616577148, 0.07673897594213486, 0.06437405198812485, 0.0009676303598098457, 0.013271095231175423, 0.0007242917199619114, 0.003750553820282221, 1.7902417182922363, 0.5874026417732239, 0.8471217751502991, 0.9848898649215698, 1.5469516515731812, 1.1582739353179932, 0.0015625660307705402, 0.5843958854675293, 0.0015749443555250764, 0.1839415282011032, 0.015514632686972618, 0.14358578622341156, 0.0031874587293714285, 0.019137153401970863, 0.44293999671936035, 0.025108514353632927, 0.013159215450286865, 0.006009367760270834, 0.002983763348311186], "tokens": [13, 268, 334, 1533, 29886, 29958, 13, 268, 334, 732, 3207, 1948, 1948, 304, 23197, 515, 13, 268, 334, 732, 3207, 1014, 3018, 29882, 355, 1948, 304, 23197, 13, 268, 334, 732, 3207, 2999, 2999, 304, 671, 363, 1014, 3018, 29882, 355, 13, 268, 3776, 13, 1678, 6364, 1780, 23197, 4301, 29898]}
{"line_number": 296, "line_type": "original", "code": "        for (int i = 0; i < height; i++) {", "entropy": 1.0786168575286865, "is_bug_line": false, "sus_score": 0.6485286951065063, "per_token_entropy": [7.4450602531433105, 3.8027687072753906, 0.00812002457678318, 0.06237056478857994, 0.49368971586227417, 0.007774688303470612, 0.2479405552148819, 0.10293763130903244, 0.014043441042304039, 0.00527063338086009, 0.012124882079660892, 4.829475402832031, 0.172573983669281, 0.03776710107922554, 0.012358162552118301, 0.003594605950638652], "tokens": [308, 363, 313, 524, 474, 353, 29871, 29900, 29936, 474, 529, 3171, 29936, 474, 4862, 426]}
{"line_number": 296, "line_type": "generated", "code": "\n\n    /**\n     * Get the current solution.\n     *", "entropy": 0.42397844791412354, "is_bug_line": false, "sus_score": 0.6485286951065063, "per_token_entropy": [0.0774979293346405, 1.5624632835388184, 0.261101096868515, 0.12314650416374207, 0.16097688674926758, 0.004869269207119942, 0.0006331584881991148, 1.4452813863754272, 0.1380125731229782, 1.6890729665756226, 0.6184350848197937, 0.2583533227443695, 0.013419072143733501, 0.0018651961581781507, 0.004548916593194008], "tokens": [13, 13, 1678, 7762, 13, 268, 334, 3617, 278, 1857, 1650, 29889, 13, 268, 334]}
{"line_number": 297, "line_type": "original", "code": "            for (int j = 0; j < width - 1; j++) {", "entropy": 1.117509126663208, "is_bug_line": false, "sus_score": 0.6475475430488586, "per_token_entropy": [9.023090362548828, 4.14365291595459, 0.014455827884376049, 0.07837513834238052, 1.4882786273956299, 0.017765913158655167, 0.49075981974601746, 0.12469211220741272, 0.0122537175193429, 0.009493563324213028, 0.017176441848278046, 3.0375757217407227, 2.4639859199523926, 0.1622755527496338, 0.05170377343893051, 0.029741737991571426, 0.04621381312608719, 0.012053744867444038, 0.00912861991673708], "tokens": [632, 363, 313, 524, 432, 353, 29871, 29900, 29936, 432, 529, 2920, 448, 29871, 29896, 29936, 432, 4862, 426]}
{"line_number": 297, "line_type": "generated", "code": "\n    /**\n     * Get the current solution.\n     *", "entropy": 0.3748989999294281, "is_bug_line": false, "sus_score": 0.6475475430488586, "per_token_entropy": [0.0932227298617363, 0.43226346373558044, 0.20150689780712128, 0.15691588819026947, 0.003762311302125454, 0.000527123745996505, 1.4062024354934692, 0.14571675658226013, 1.8685654401779175, 0.6467287540435791, 0.27524420619010925, 0.011978951282799244, 0.0012321030953899026, 0.0047187162563204765], "tokens": [13, 1678, 7762, 13, 268, 334, 3617, 278, 1857, 1650, 29889, 13, 268, 334]}
{"line_number": 302, "line_type": "original", "code": "        this.tableau = new RealMatrixImpl(matrix);", "entropy": 2.143202543258667, "is_bug_line": false, "sus_score": 0.6467024087905884, "per_token_entropy": [5.898990154266357, 5.475590705871582, 0.06041007861495018, 0.5492263436317444, 0.0013904437655583024, 3.342168092727661, 2.7547125816345215, 5.23453426361084, 0.012591270729899406, 1.1275184154510498, 0.035815127193927765, 2.9599342346191406, 0.4087487757205963], "tokens": [308, 445, 29889, 2371, 585, 353, 716, 8195, 14609, 6647, 29898, 5344, 416]}
{"line_number": 302, "line_type": "generated", "code": "\n     * </p>\n     * @param minuendRow the row to subtract from\n     * @param multiple the multiple of the subtrahend row to subtract\n     * @param subtrahendRow the row to subtract\n", "entropy": 0.17619001865386963, "is_bug_line": false, "sus_score": 0.6467024087905884, "per_token_entropy": [0.17457465827465057, 0.05939182639122009, 0.005574514623731375, 0.3622514605522156, 0.0011435167398303747, 0.008302105590701103, 0.007425328716635704, 0.052966199815273285, 0.0041217380203306675, 0.14061270654201508, 0.001465676468797028, 0.0579863116145134, 0.00011979816190432757, 0.00014602071314584464, 0.021672561764717102, 1.3662872314453125, 0.26314839720726013, 0.42274010181427, 0.11273651570081711, 0.0649426132440567, 0.09992388635873795, 0.012133361771702766, 4.756337511935271e-05, 0.0010172913316637278, 0.00017188502533826977, 1.418337106704712, 0.6395017504692078, 0.6149616837501526, 0.948588490486145, 0.11574847251176834, 0.23757848143577576, 0.0021506056655198336, 0.007383203133940697, 0.002092316746711731, 0.7926850318908691, 0.42672303318977356, 0.043775200843811035, 0.07988284528255463, 0.16075299680233002, 0.004226680379360914, 0.002146323211491108, 0.0014246086357161403, 0.007631551939994097, 0.0011648305226117373, 0.00018916724366135895, 0.0005029367166571319, 0.006075841374695301, 0.036645423620939255, 0.06604974716901779, 0.08274583518505096, 0.14316365122795105, 0.0788494274020195], "tokens": [13, 268, 334, 1533, 29886, 29958, 13, 268, 334, 732, 3207, 1375, 29884, 355, 4301, 278, 1948, 304, 23197, 515, 13, 268, 334, 732, 3207, 2999, 278, 2999, 310, 278, 1014, 3018, 29882, 355, 1948, 304, 23197, 13, 268, 334, 732, 3207, 1014, 3018, 29882, 355, 4301, 278, 1948, 304, 23197, 13]}
{"line_number": 189, "line_type": "original", "code": "    public int getNumVariables() {", "entropy": 2.55808424949646, "is_bug_line": false, "sus_score": 0.6448713541030884, "per_token_entropy": [6.176802635192871, 8.815942764282227, 0.6145738959312439, 0.09600690007209778, 1.9100587368011475, 5.329912185668945, 0.0011260127648711205, 0.04877104610204697, 0.029565025120973587], "tokens": [268, 970, 938, 679, 8009, 10444, 1849, 580, 426]}
{"line_number": 189, "line_type": "generated", "code": "\n        }\n        return count;\n    }\n\n    /**\n     * Get the number of slack variables in this tableau.\n     * @return number of slack variables\n     */\n    protected final int getNumSlack", "entropy": 0.17934365570545197, "is_bug_line": false, "sus_score": 0.6448713541030884, "per_token_entropy": [0.13807249069213867, 0.9046140313148499, 0.4423098564147949, 0.008251149207353592, 0.6170998811721802, 0.018462592735886574, 0.016097577288746834, 0.013007198460400105, 0.003819077741354704, 0.09477415680885315, 0.005250236950814724, 0.0057523190043866634, 0.04114840179681778, 0.03446473926305771, 0.016860827803611755, 0.1151958703994751, 0.008590411394834518, 0.0012378181563690305, 0.3690483272075653, 0.2862831652164459, 1.3244848251342773, 0.0043849037028849125, 0.9895434379577637, 0.000303818320389837, 0.0900532603263855, 1.3849395513534546, 0.24825309216976166, 0.12470800429582596, 0.014264051802456379, 0.03686926141381264, 0.05472273379564285, 0.0025825502816587687, 0.0008279233006760478, 0.050103284418582916, 0.007659352850168943, 0.3064722418785095, 0.006413946393877268, 0.020767154172062874, 0.0004543225804809481, 0.015901891514658928, 0.1908474564552307, 0.008420558646321297, 0.006762238685041666, 0.0014212755486369133, 0.09220170974731445, 0.7119783759117126, 0.1989395022392273, 0.002597650745883584, 0.001427227514795959, 0.2811431884765625, 0.006039346568286419, 4.172238186583854e-05], "tokens": [13, 4706, 500, 13, 4706, 736, 2302, 29936, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 3617, 278, 1353, 310, 269, 2364, 3651, 297, 445, 1591, 585, 29889, 13, 268, 334, 732, 2457, 1353, 310, 269, 2364, 3651, 13, 268, 3776, 13, 1678, 6364, 2186, 938, 679, 8009, 29903, 2364]}
