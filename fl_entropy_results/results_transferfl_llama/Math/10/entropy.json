{"line_number": 1391, "line_type": "original", "code": "        add(tmp1, 0, tmp2, 0, tmp2, 0);                 // x^2 + y^2", "entropy": 1.0830715894699097, "is_bug_line": false, "sus_score": 0.7057057023048401, "per_token_entropy": [6.513125419616699, 5.824594020843506, 0.14334969222545624, 5.5154595375061035, 1.0925827026367188, 0.036137234419584274, 0.08554298430681229, 0.03620299696922302, 0.0016548046842217445, 0.3802858591079712, 0.2760574221611023, 0.0011944787111133337, 0.006938292644917965, 0.008265573531389236, 0.022835154086351395, 0.6641983389854431, 1.9050995111465454, 0.0028790475334972143, 0.0027601737529039383, 0.00285337190143764, 0.006714638322591782, 3.2580761909484863, 1.79399573802948, 2.1735734939575195, 0.8060715198516846, 0.061908453702926636, 1.3529443740844727, 0.5123843550682068, 0.0035400837659835815, 0.0009201106731779873], "tokens": [308, 788, 29898, 7050, 29896, 29892, 29871, 29900, 29892, 13128, 29906, 29892, 29871, 29900, 29892, 13128, 29906, 29892, 29871, 29900, 416, 462, 849, 921, 29985, 29906, 718, 343, 29985, 29906]}
{"line_number": 1391, "line_type": "generated", "code": "\n        }\n\n        // apply function composition\n        compose(operand, operandOffset, function, result, resultOffset);\n\n    }\n\n    /** Compute hyperbolic sine of a derivative structure.\n     * @", "entropy": 0.027349792420864105, "is_bug_line": false, "sus_score": 0.7057057023048401, "per_token_entropy": [0.05238603800535202, 0.35072970390319824, 0.005533022340387106, 0.004155928734689951, 0.015803683549165726, 0.003111404599621892, 0.014613615348935127, 0.02907973900437355, 0.008654704317450523, 0.0009715604246594012, 0.003977127838879824, 0.012678613886237144, 0.0030939350835978985, 0.000503770774230361, 0.04371370002627373, 3.659658250398934e-05, 0.0001137191939051263, 0.0022587282583117485, 2.312633478140924e-05, 5.8530047681415454e-05, 0.00438098656013608, 0.001116486731916666, 9.178694017464295e-05, 0.0009581027552485466, 0.00011884459672728553, 0.0006870055221952498, 2.90866428258596e-05, 0.0019309938652440906, 0.0007613382767885923, 0.023206427693367004, 0.015355578623712063, 0.00027497802511788905, 0.00011669908417388797, 0.005280238576233387, 0.006199889350682497, 0.0013888961402699351, 0.02215515822172165, 0.0006036128615960479, 0.6080975532531738, 4.708655978902243e-05, 8.487341256113723e-05, 0.17115584015846252, 4.2437604861333966e-05, 0.0017059786478057504, 0.0006594866863451898, 0.0003833036171272397, 0.00025006983196362853, 0.0008685392094776034, 0.00012289722508285195, 0.0008211340173147619, 0.00012432756193447858, 0.0016721803694963455], "tokens": [13, 4706, 500, 13, 13, 4706, 849, 3394, 740, 15259, 13, 4706, 27435, 29898, 3372, 392, 29892, 1751, 392, 10302, 29892, 740, 29892, 1121, 29892, 1121, 10302, 416, 13, 13, 1678, 500, 13, 13, 1678, 7762, 11796, 29872, 11266, 2095, 293, 269, 457, 310, 263, 16291, 3829, 29889, 13, 268, 334, 732]}
{"line_number": 757, "line_type": "original", "code": "", "entropy": 4.883190155029297, "is_bug_line": false, "sus_score": 0.7047131061553955, "per_token_entropy": [4.725095748901367, 5.041284084320068], "tokens": [29871, 13]}
{"line_number": 757, "line_type": "generated", "code": "\n     * one of the input arrays)\n     * @param resultOffset offset of the result in its array\n     */\n    public void remainder(final double[] lhs, final int lhsOffset,\n                          final double[] rhs,", "entropy": 0.03972000628709793, "is_bug_line": false, "sus_score": 0.7047131061553955, "per_token_entropy": [1.3735185861587524, 0.12639619410037994, 0.008515594527125359, 0.04991550371050835, 0.0007445423980243504, 0.012674493715167046, 0.0006509092636406422, 0.0006976078147999942, 0.06373772770166397, 0.013485996052622795, 0.0630754753947258, 0.0039026776794344187, 0.0003532739356160164, 0.00019298121333122253, 0.0005087750032544136, 0.00032789100077934563, 0.00039867559098638594, 6.210611172718927e-05, 7.045020902296528e-05, 0.00017867876158561558, 0.0002388668799540028, 0.00026770823751576245, 0.00012373158824630082, 0.003874890971928835, 0.10303065925836563, 0.06583134084939957, 0.013373198918998241, 0.04693998396396637, 0.009950675070285797, 0.006204273086041212, 0.0029898248612880707, 0.0007309625507332385, 0.0037691995967179537, 0.0009681067313067615, 0.0005777596961706877, 0.002811647718772292, 4.088794958079234e-05, 0.00021979777375236154, 0.0026629245840013027, 0.00018380382971372455, 0.0005379660287871957, 9.179073458653875e-06, 0.00013350549852475524, 0.00037353215157054365, 0.003115326166152954, 0.020726988092064857, 0.053842365741729736, 0.0011185110779479146, 0.0005528590409085155, 0.00024327656137757003, 0.0004962643142789602, 9.202533692587167e-05], "tokens": [13, 268, 334, 697, 310, 278, 1881, 7049, 29897, 13, 268, 334, 732, 3207, 1121, 10302, 9210, 310, 278, 1121, 297, 967, 1409, 13, 268, 3776, 13, 1678, 970, 1780, 21162, 29898, 8394, 3765, 2636, 301, 9499, 29892, 2186, 938, 301, 9499, 10302, 29892, 13, 462, 3986, 2186, 3765, 2636, 29365, 29892]}
{"line_number": 1399, "line_type": "original", "code": "            atan(tmp1, 0, tmp2, 0);                     // atan(y / (r + x))", "entropy": 1.355055570602417, "is_bug_line": false, "sus_score": 0.7030153274536133, "per_token_entropy": [10.24034309387207, 9.530118942260742, 0.32344111800193787, 0.6472495198249817, 8.855424880981445, 0.9907025098800659, 1.614654302597046, 0.11862149089574814, 0.010666029527783394, 0.029404137283563614, 0.49054884910583496, 0.10301797091960907, 0.00222090445458889, 0.007078332360833883, 0.0034151107538491488, 0.0692211240530014, 1.500957727432251, 0.751501739025116, 0.03174474090337753, 0.16236422955989838, 0.009015803225338459, 0.046721458435058594, 1.059657335281372, 0.13460668921470642, 0.5141847133636475, 0.06937506049871445, 1.8270504474639893, 0.13095630705356598, 0.02234729193150997], "tokens": [632, 472, 273, 29898, 7050, 29896, 29892, 29871, 29900, 29892, 13128, 29906, 29892, 29871, 29900, 416, 462, 268, 849, 472, 273, 29898, 29891, 847, 313, 29878, 718, 921, 876]}
{"line_number": 1399, "line_type": "generated", "code": "\n     * @param operand array holding the operand\n     * @param operandOffset offset of the operand in its array\n     * @param result array where result must be stored (for\n     * hyperbolic sine the result", "entropy": 0.01589897647500038, "is_bug_line": false, "sus_score": 0.7030153274536133, "per_token_entropy": [0.1547105312347412, 0.34100085496902466, 0.012351921759545803, 0.02123081497848034, 0.0007279845303855836, 0.03514862060546875, 0.0002330270071979612, 0.002474462613463402, 0.00016032364510465413, 0.0001284993631998077, 0.0006864098832011223, 0.00021753329201601446, 0.002084703417494893, 0.09103620797395706, 0.0003980797773692757, 0.0001147919538198039, 2.0146166207268834e-05, 0.00444756867364049, 1.3351351299206726e-05, 5.543078441405669e-05, 0.00021860594279132783, 3.6238969187252223e-05, 1.490105023549404e-05, 0.00010299152199877426, 7.271740287251305e-06, 0.00011002412065863609, 3.862306402879767e-05, 0.0002252801787108183, 0.00039915222441777587, 0.04168481007218361, 0.0007840896723791957, 0.0004328744253143668, 0.0004117832868359983, 0.0017886845162138343, 0.0020252210088074207, 0.0002019201492657885, 0.0005183068569749594, 0.00019834458362311125, 2.9205850296420977e-05, 3.4450891689630225e-05, 0.027968786656856537, 0.0010643299901857972, 0.021401304751634598, 0.03536301478743553, 0.00013052565918769687, 0.004826205782592297, 5.674201020156033e-05, 4.005352093372494e-05, 0.016604209318757057, 5.113947918289341e-05, 0.002524405485019088, 0.0002119316632160917], "tokens": [13, 268, 334, 732, 3207, 1751, 392, 1409, 13587, 278, 1751, 392, 13, 268, 334, 732, 3207, 1751, 392, 10302, 9210, 310, 278, 1751, 392, 297, 967, 1409, 13, 268, 334, 732, 3207, 1121, 1409, 988, 1121, 1818, 367, 6087, 313, 1454, 13, 268, 334, 11266, 2095, 293, 269, 457, 278, 1121]}
{"line_number": 1392, "line_type": "original", "code": "        rootN(tmp2, 0, 2, tmp1, 0);                     // r = sqrt(x^2 + y^2)", "entropy": 1.6413730382919312, "is_bug_line": false, "sus_score": 0.701424241065979, "per_token_entropy": [6.901400566101074, 14.122085571289062, 4.0145063400268555, 1.6111582517623901, 8.647958755493164, 2.5970611572265625, 0.055892642587423325, 0.35687822103500366, 0.11895515769720078, 0.07325176894664764, 2.0323524475097656, 1.0586895942687988, 1.030596137046814, 1.2588880062103271, 0.3189953565597534, 0.03938835859298706, 0.029099076986312866, 0.019790103659033775, 0.2615412473678589, 3.220158576965332, 2.312386989593506, 0.02910035103559494, 2.3558120727539062, 1.7476305961608887, 0.3020181655883789, 0.0025496138259768486, 0.020866744220256805, 0.8230934739112854, 0.10647960007190704, 0.0019041041377931833, 0.831974446773529, 1.0826748609542847, 0.002536890795454383, 0.0020831567235291004, 0.05829561874270439], "tokens": [308, 3876, 29940, 29898, 7050, 29906, 29892, 29871, 29900, 29892, 29871, 29906, 29892, 13128, 29896, 29892, 29871, 29900, 416, 462, 268, 849, 364, 353, 18074, 2273, 29898, 29916, 29985, 29906, 718, 343, 29985, 29906, 29897]}
{"line_number": 1392, "line_type": "generated", "code": "\n\n        // apply function composition\n        compose(operand, operandOffset, function, result, resultOffset);\n\n    }\n\n    /** Compute hyperbolic sine of a derivative structure.\n     * @param operand", "entropy": 0.026102520525455475, "is_bug_line": false, "sus_score": 0.701424241065979, "per_token_entropy": [0.026289183646440506, 0.18946793675422668, 0.01872376725077629, 0.0481569729745388, 0.07027875632047653, 0.011361542157828808, 0.0012020989088341594, 0.00609681336209178, 0.011497074738144875, 0.004679087083786726, 0.0008559139096178114, 0.04808233305811882, 3.504691630951129e-05, 0.00013302871957421303, 0.0030414059292525053, 1.883488948806189e-05, 6.174850568640977e-05, 0.0056531080044806, 0.0016337393317371607, 0.00012408917245920748, 0.0016609933227300644, 0.00019274283840786666, 0.0012661544606089592, 3.5523738915799186e-05, 0.0034833012614399195, 0.003122456604614854, 0.05552598088979721, 0.026954540982842445, 0.00045134371612221, 0.0004400238685775548, 0.01328768115490675, 0.008613339625298977, 0.001995002618059516, 0.0225015077739954, 0.0005245024804025888, 0.569615364074707, 4.911301948595792e-05, 8.40390202938579e-05, 0.1883610486984253, 4.60137271147687e-05, 0.0018986309878528118, 0.0007203606073744595, 0.0003906917118001729, 0.0002723561483435333, 0.0008719933102838695, 0.00017450717859901488, 0.0010102650849148631, 0.0001227780303452164, 0.001755483914166689, 4.756337511935271e-05, 0.004438430070877075, 2.47952248173533e-05], "tokens": [13, 13, 4706, 849, 3394, 740, 15259, 13, 4706, 27435, 29898, 3372, 392, 29892, 1751, 392, 10302, 29892, 740, 29892, 1121, 29892, 1121, 10302, 416, 13, 13, 1678, 500, 13, 13, 1678, 7762, 11796, 29872, 11266, 2095, 293, 269, 457, 310, 263, 16291, 3829, 29889, 13, 268, 334, 732, 3207, 1751, 392]}
{"line_number": 1387, "line_type": "original", "code": "        double[] tmp1 = new double[getSize()];", "entropy": 1.2258738279342651, "is_bug_line": false, "sus_score": 0.7013265490531921, "per_token_entropy": [6.817261219024658, 3.6464385986328125, 1.522245168685913, 2.2969839572906494, 1.017095685005188, 0.06356523931026459, 0.03762555494904518, 0.00034814971149899065, 0.004498837050050497, 0.5247572660446167, 0.0005987281911075115, 0.0004011779965367168, 0.004539778921753168], "tokens": [308, 3765, 2636, 13128, 29896, 353, 716, 3765, 29961, 657, 3505, 580, 1385]}
{"line_number": 1387, "line_type": "generated", "code": "\n            // as per polynomial parity, we can store coefficients of both Q_(n-1) and Q_n in the same array\n            final double[] q = new double[order];\n            q[0] = 1;\n", "entropy": 0.057400383055210114, "is_bug_line": false, "sus_score": 0.7013265490531921, "per_token_entropy": [0.06730713695287704, 0.07473313808441162, 1.228967547416687, 1.243523359298706, 0.02185044251382351, 0.011649439111351967, 0.04966824874281883, 5.125868119648658e-05, 0.004590686876326799, 0.0016565899131819606, 0.0020769708789885044, 0.0037797691766172647, 0.002183792879804969, 0.0007583603146485984, 0.004359029233455658, 0.0483950600028038, 0.016004784032702446, 0.0009572691051289439, 0.002419879427179694, 0.0009976415894925594, 0.00021920185827184469, 0.0004717191040981561, 0.00031192204914987087, 0.0006413786904886365, 7.259582343976945e-05, 0.0005807381821796298, 0.00043823651503771544, 0.0015637562610208988, 0.00025459862081333995, 0.0011369676794856787, 0.001193526084534824, 0.014244073070585728, 0.0017170461360365152, 0.007969368249177933, 0.003536282340064645, 0.0060636368580162525, 0.00047386385267600417, 3.158996332786046e-05, 0.0014918637461960316, 0.014871803112328053, 0.03151455521583557, 0.0010375360725447536, 0.0013238961109891534, 0.027275916188955307, 8.010543388081715e-05, 0.007788172923028469, 9.42901024245657e-05, 0.0020410437136888504, 0.04493655636906624, 0.01959303580224514, 0.005128680262714624, 0.0007918321643956006], "tokens": [13, 9651, 849, 408, 639, 10159, 610, 537, 29892, 591, 508, 3787, 16127, 310, 1716, 660, 23538, 29876, 29899, 29896, 29897, 322, 660, 29918, 29876, 297, 278, 1021, 1409, 13, 9651, 2186, 3765, 2636, 3855, 353, 716, 3765, 29961, 2098, 1385, 13, 9651, 3855, 29961, 29900, 29962, 353, 29871, 29896, 29936, 13]}
{"line_number": 1389, "line_type": "original", "code": "        double[] tmp2 = new double[getSize()];", "entropy": 1.7239969968795776, "is_bug_line": false, "sus_score": 0.7011052966117859, "per_token_entropy": [7.780858039855957, 4.297976493835449, 3.981036424636841, 1.3420430421829224, 3.5989990234375, 0.08419196307659149, 0.07381153851747513, 0.0030100299045443535, 0.010577094741165638, 1.2188206911087036, 0.0022808508947491646, 0.0009320206008851528, 0.017424244433641434], "tokens": [308, 3765, 2636, 13128, 29906, 353, 716, 3765, 29961, 657, 3505, 580, 1385]}
{"line_number": 1389, "line_type": "generated", "code": "\n                function[i] = function[i - 2];\n            }\n        }\n\n        // apply function composition\n        compose(operand, operandOffset, function, result, resultOffset);\n\n    }\n\n   ", "entropy": 0.06024700775742531, "is_bug_line": false, "sus_score": 0.7011052966117859, "per_token_entropy": [0.1658572107553482, 0.5018512606620789, 0.10124683380126953, 0.0016191004542633891, 0.003344183089211583, 0.0005844315164722502, 0.007239419035613537, 0.920730710029602, 0.006058186292648315, 0.358252614736557, 0.05190197005867958, 0.0019349202048033476, 0.33514538407325745, 0.36854228377342224, 0.028905687853693962, 0.10463105887174606, 0.0003446938644628972, 0.0010600429959595203, 0.028311043977737427, 0.00017593742813915014, 0.0009097489528357983, 0.008611802943050861, 0.0018742390675470233, 0.005720434710383415, 0.018247589468955994, 0.007433611433953047, 0.0009591746493242681, 0.0026903883554041386, 0.011337144300341606, 0.0023053516633808613, 0.0004020121123176068, 0.037471700459718704, 4.327203714638017e-05, 9.262132516596466e-05, 0.0018424693262204528, 2.658331868587993e-05, 5.900685573578812e-05, 0.004909721668809652, 0.0008912881603464484, 8.904537389753386e-05, 0.0008318539476022124, 0.000105375460407231, 0.0006138585740700364, 3.290122185717337e-05, 0.0008892634068615735, 0.0004576589271891862, 0.017475556582212448, 0.010230837389826775, 0.00023552982020191848, 7.497983460780233e-05, 0.0028584832325577736, 0.005383636336773634], "tokens": [13, 18884, 740, 29961, 29875, 29962, 353, 740, 29961, 29875, 448, 29871, 29906, 1385, 13, 9651, 500, 13, 4706, 500, 13, 13, 4706, 849, 3394, 740, 15259, 13, 4706, 27435, 29898, 3372, 392, 29892, 1751, 392, 10302, 29892, 740, 29892, 1121, 29892, 1121, 10302, 416, 13, 13, 1678, 500, 13, 13, 1678]}
{"line_number": 1398, "line_type": "original", "code": "            divide(y, yOffset, tmp2, 0, tmp1, 0);       // y /(r + x)", "entropy": 1.0207726955413818, "is_bug_line": false, "sus_score": 0.7010979056358337, "per_token_entropy": [11.416110038757324, 9.513115882873535, 0.3560151159763336, 2.0936951637268066, 0.056678395718336105, 0.07362428307533264, 0.004072112496942282, 0.004570395220071077, 0.8654191493988037, 0.7996419668197632, 0.0012481764424592257, 0.015304511412978172, 0.0024903970770537853, 0.000990377040579915, 0.1588449776172638, 0.10764608532190323, 0.00033384948619641364, 0.0030632736161351204, 0.00120936194434762, 0.007769720628857613, 0.8530641198158264, 0.0013710394268855453, 0.20873861014842987, 0.0496419332921505, 0.9446913003921509, 0.013726366683840752, 1.9814391136169434, 0.05656969174742699, 0.011320878751575947], "tokens": [632, 16429, 29898, 29891, 29892, 343, 10302, 29892, 13128, 29906, 29892, 29871, 29900, 29892, 13128, 29896, 29892, 29871, 29900, 416, 539, 849, 343, 847, 29898, 29878, 718, 921, 29897]}
{"line_number": 1398, "line_type": "generated", "code": "\n    /** Compute hyperbolic sine of a derivative structure.\n     * @param operand array holding the operand\n     * @param operandOffset offset of the operand in its array\n     * @param result array where result", "entropy": 0.0297993291169405, "is_bug_line": false, "sus_score": 0.7010979056358337, "per_token_entropy": [0.056686729192733765, 0.30757805705070496, 0.016914863139390945, 0.07331890612840652, 0.0014697236474603415, 0.7644811272621155, 6.067568756407127e-05, 0.00011395759065635502, 0.2847709059715271, 0.00010597144137136638, 0.005676341243088245, 0.0008239926537498832, 0.001522692502476275, 0.0005091324565000832, 0.001806176733225584, 0.0006043276516720653, 0.008289573714137077, 0.00037698791129514575, 0.004664136562496424, 0.0001778444420779124, 0.011456063017249107, 8.022463589441031e-05, 0.0007795632118359208, 0.00010394509445177391, 9.154854342341423e-05, 0.0002530493075028062, 0.00015066919149830937, 0.00041333239641971886, 0.0002217047003796324, 1.823885577323381e-05, 2.753696753643453e-05, 1.156323378381785e-05, 0.0021820086985826492, 1.5735502529423684e-05, 3.516612196108326e-05, 0.0001726001501083374, 2.7417760065873154e-05, 1.2040065485052764e-05, 6.246371776796877e-05, 5.960446742392378e-06, 7.70062324590981e-05, 3.3378044463461265e-05, 0.00011240804451517761, 0.00013553177996072918, 0.0004631400224752724, 5.98412734689191e-05, 3.731181277544238e-05, 0.0001538873475510627, 0.0007391819381155074, 0.0011445883428677917, 0.00019453064305707812, 0.0003413571394048631], "tokens": [13, 1678, 7762, 11796, 29872, 11266, 2095, 293, 269, 457, 310, 263, 16291, 3829, 29889, 13, 268, 334, 732, 3207, 1751, 392, 1409, 13587, 278, 1751, 392, 13, 268, 334, 732, 3207, 1751, 392, 10302, 9210, 310, 278, 1751, 392, 297, 967, 1409, 13, 268, 334, 732, 3207, 1121, 1409, 988, 1121]}
{"line_number": 758, "line_type": "original", "code": "    /** Perform multiplication of two derivative structures.", "entropy": 2.0957443714141846, "is_bug_line": false, "sus_score": 0.6984038949012756, "per_token_entropy": [1.7117077112197876, 10.268538475036621, 1.1615511178970337, 4.917943000793457, 0.08270742744207382, 0.5995844006538391, 0.028041234239935875, 0.004043855704367161, 0.087579146027565], "tokens": [268, 7762, 27313, 21666, 310, 1023, 16291, 12286, 29889]}
{"line_number": 758, "line_type": "generated", "code": "\n     * @param resultOffset offset of the result in its array\n     */\n    public void remainder(final double[] lhs, final int lhsOffset,\n                          final double[] rhs, final int rhsOffset,\n                          final", "entropy": 0.017456073313951492, "is_bug_line": false, "sus_score": 0.6984038949012756, "per_token_entropy": [0.34777724742889404, 0.07526908814907074, 0.051734451204538345, 0.0033422820270061493, 0.0036042272113263607, 0.00902891717851162, 0.0013617537915706635, 0.0008546037715859711, 0.00014530557382386178, 0.00012289722508285195, 0.00043418517452664673, 0.000605638197157532, 0.0005553610390052199, 0.00014172980445437133, 0.013681330718100071, 0.06555081903934479, 0.08227010071277618, 0.010009688325226307, 0.04822445288300514, 0.012710747309029102, 0.008252923376858234, 0.002825199393555522, 0.000854961050208658, 0.006462508346885443, 0.0014831743901595473, 0.0007288183551281691, 0.004010136239230633, 4.2437604861333966e-05, 0.00043871314846910536, 0.004156522452831268, 0.0002348147245356813, 0.0009027220075950027, 1.1444026313256472e-05, 0.00015925093612167984, 0.0009809688199311495, 0.004117107950150967, 0.027653316035866737, 0.041638389229774475, 0.0021734442561864853, 0.0007926659309305251, 0.0005480932886712253, 0.0007363230688497424, 0.00016306500765495002, 0.0010034770239144564, 0.0003084660565946251, 0.0003771070914808661, 0.00010895135346800089, 0.0004724340105894953, 0.0014140140265226364, 0.05534068122506142, 0.004983978345990181, 0.006914852187037468], "tokens": [13, 268, 334, 732, 3207, 1121, 10302, 9210, 310, 278, 1121, 297, 967, 1409, 13, 268, 3776, 13, 1678, 970, 1780, 21162, 29898, 8394, 3765, 2636, 301, 9499, 29892, 2186, 938, 301, 9499, 10302, 29892, 13, 462, 3986, 2186, 3765, 2636, 29365, 29892, 2186, 938, 29365, 10302, 29892, 13, 462, 3986, 2186]}
{"line_number": 1397, "line_type": "original", "code": "            add(tmp1, 0, x, xOffset, tmp2, 0);          // r + x", "entropy": 1.1838340759277344, "is_bug_line": false, "sus_score": 0.688772439956665, "per_token_entropy": [11.521413803100586, 7.081948280334473, 0.45627641677856445, 2.351764678955078, 0.5851198434829712, 0.012808672152459621, 0.053811416029930115, 0.011722136288881302, 0.001495434669777751, 1.851337194442749, 0.03622518852353096, 0.052453458309173584, 0.0009422629955224693, 0.004455757327377796, 0.18713884055614471, 0.5891786813735962, 0.00041416651220060885, 0.003545072628185153, 0.004967134445905685, 0.005218218546360731, 4.007011890411377, 0.004832611884921789, 0.6537653207778931, 0.09485927224159241, 0.023145627230405807], "tokens": [632, 788, 29898, 7050, 29896, 29892, 29871, 29900, 29892, 921, 29892, 921, 10302, 29892, 13128, 29906, 29892, 29871, 29900, 416, 3986, 849, 364, 718, 921]}
{"line_number": 1397, "line_type": "generated", "code": "\n    /** Compute hyperbolic sine of a derivative structure.\n     * @param operand array holding the operand\n     * @param operandOffset offset of the operand in its array\n     * @param result array where result", "entropy": 0.023939169943332672, "is_bug_line": false, "sus_score": 0.688772439956665, "per_token_entropy": [0.029687581583857536, 0.2436552792787552, 0.016614291816949844, 0.05053597316145897, 0.0010406322544440627, 0.5958431363105774, 4.8040190449682996e-05, 0.00010764019680209458, 0.2692468464374542, 7.688703772146255e-05, 0.0040144105441868305, 0.000683074293192476, 0.0011320855701342225, 0.00046397410915233195, 0.0015468548517674208, 0.000724887300748378, 0.00895602349191904, 0.0003486264031380415, 0.00394958071410656, 0.00014685506175737828, 0.009060931392014027, 5.447716102935374e-05, 0.0006431656656786799, 9.822363062994555e-05, 7.73638384998776e-05, 0.00022504181833937764, 0.00013910756388213485, 0.00037996700848452747, 0.00023147765023168176, 1.5258672647178173e-05, 2.9801878554280847e-05, 8.940656698541716e-06, 0.001750604948028922, 1.6689160474925302e-05, 3.731181277544238e-05, 0.00015579440514557064, 2.5987286790041253e-05, 1.1086402082582936e-05, 6.16293036728166e-05, 7.629365427419543e-06, 7.271502545336261e-05, 2.95634672511369e-05, 0.00012110930401831865, 0.00016175392374861985, 0.00031859567388892174, 3.0636318115284666e-05, 7.73638384998776e-05, 0.00011121608258690685, 0.0006026597693562508, 0.0009753713966347277, 0.00019071667338721454, 0.00029202012228779495], "tokens": [13, 1678, 7762, 11796, 29872, 11266, 2095, 293, 269, 457, 310, 263, 16291, 3829, 29889, 13, 268, 334, 732, 3207, 1751, 392, 1409, 13587, 278, 1751, 392, 13, 268, 334, 732, 3207, 1751, 392, 10302, 9210, 310, 278, 1751, 392, 297, 967, 1409, 13, 268, 334, 732, 3207, 1121, 1409, 988, 1121]}
{"line_number": 1390, "line_type": "original", "code": "        multiply(y, yOffset, y, yOffset, tmp2, 0);      // y^2", "entropy": 1.4528980255126953, "is_bug_line": false, "sus_score": 0.6871591210365295, "per_token_entropy": [7.407477378845215, 8.341010093688965, 0.8576505184173584, 8.535792350769043, 0.4114605784416199, 0.7291463017463684, 0.0648142471909523, 0.21288354694843292, 1.2222250699996948, 0.020814206451177597, 0.01423831470310688, 0.0014605579199269414, 0.023112429305911064, 1.0110042095184326, 1.8331533670425415, 0.010651522316038609, 0.023675594478845596, 0.010293491184711456, 0.03155232593417168, 3.1556315422058105, 0.010916275903582573, 0.4287504255771637, 0.4849036633968353, 0.02693759836256504], "tokens": [308, 22932, 29898, 29891, 29892, 343, 10302, 29892, 343, 29892, 343, 10302, 29892, 13128, 29906, 29892, 29871, 29900, 416, 418, 849, 343, 29985, 29906]}
{"line_number": 1390, "line_type": "generated", "code": "\n            }\n        }\n\n        // apply function composition\n        compose(operand, operandOffset, function, result, resultOffset);\n\n    }\n\n    /** Compute hyperbolic sine of a derivative structure.\n", "entropy": 0.022250143811106682, "is_bug_line": false, "sus_score": 0.6871591210365295, "per_token_entropy": [0.10952432453632355, 0.10979267954826355, 0.0005891970940865576, 0.0019083875231444836, 0.030730504542589188, 0.00027497802511788905, 0.0014974582009017467, 0.009795219637453556, 0.0020449694711714983, 0.007483662571758032, 0.02467246912419796, 0.006745780352503061, 0.000747758662328124, 0.003156324615702033, 0.015247336588799953, 0.002380396705120802, 0.0004568248405121267, 0.04345623403787613, 4.2199197196168825e-05, 0.00010382589971413836, 0.002060316037386656, 2.825220326485578e-05, 6.067568756407127e-05, 0.004932497162371874, 0.001064806361682713, 8.785339014139026e-05, 0.0010737375123426318, 0.00011252723925281316, 0.0006451908848248422, 3.45700973412022e-05, 0.001166854752227664, 0.000587767455726862, 0.016465498134493828, 0.011024516075849533, 0.00037400881410576403, 8.821098163025454e-05, 0.0034759361296892166, 0.005904375575482845, 0.0010889797704294324, 0.021147016435861588, 0.0006661579827778041, 0.5595863461494446, 4.851700214203447e-05, 8.177422569133341e-05, 0.1504630446434021, 4.2437604861333966e-05, 0.0016362386522814631, 0.0006812873762100935, 0.00038795097498223186, 0.00026925752172246575, 0.0009531007381156087, 0.00011717586312443018], "tokens": [13, 9651, 500, 13, 4706, 500, 13, 13, 4706, 849, 3394, 740, 15259, 13, 4706, 27435, 29898, 3372, 392, 29892, 1751, 392, 10302, 29892, 740, 29892, 1121, 29892, 1121, 10302, 416, 13, 13, 1678, 500, 13, 13, 1678, 7762, 11796, 29872, 11266, 2095, 293, 269, 457, 310, 263, 16291, 3829, 29889, 13]}
{"line_number": 1400, "line_type": "original", "code": "            for (int i = 0; i < tmp2.length; ++i) {", "entropy": 1.2706197500228882, "is_bug_line": false, "sus_score": 0.6860960125923157, "per_token_entropy": [7.467274188995361, 6.478614330291748, 2.2332911491394043, 0.06311912089586258, 0.04695875197649002, 0.029879430308938026, 0.1728186160326004, 0.08565262705087662, 0.010401562787592411, 0.01543845422565937, 0.2003648728132248, 5.850495338439941, 2.640516519546509, 0.01989271305501461, 0.0021728496067225933, 0.011338440701365471, 0.06020020321011543, 0.0014354411978274584, 0.005523538216948509, 0.017004525288939476], "tokens": [632, 363, 313, 524, 474, 353, 29871, 29900, 29936, 474, 529, 13128, 29906, 29889, 2848, 29936, 8445, 29875, 29897, 426]}
{"line_number": 1400, "line_type": "generated", "code": "\n     * @param operandOffset offset of the operand in its array\n     * @param result array where result must be stored (for\n     * hyperbolic sine the result array", "entropy": 0.024223584681749344, "is_bug_line": false, "sus_score": 0.6860960125923157, "per_token_entropy": [0.12324029952287674, 0.1189085841178894, 0.010347528383135796, 0.004691545385867357, 0.0010332489619031549, 0.27109649777412415, 3.6000557884108275e-05, 0.002858720952644944, 0.0016181482933461666, 8.868777513271198e-05, 5.8530047681415454e-05, 0.0005273620481602848, 2.9682672902708873e-05, 0.00047183825518004596, 0.00027295202016830444, 0.0013769917422905564, 0.008436989039182663, 0.30075961351394653, 0.002000356325879693, 0.000902007392141968, 0.0004122599493712187, 0.0028981848154217005, 0.0037448531948029995, 0.000348268891684711, 0.0005098473629914224, 0.00032491172896698117, 5.125868119648658e-05, 9.42901024245657e-05, 0.02728879265487194, 0.001025627483613789, 0.02031332440674305, 0.05937913432717323, 0.0003147821989841759, 0.00430229352787137, 6.818538531661034e-05, 5.0424259825376794e-05, 0.019501151517033577, 5.686121585313231e-05, 0.0025918246246874332, 0.00027450130437500775, 0.0008606782066635787], "tokens": [13, 268, 334, 732, 3207, 1751, 392, 10302, 9210, 310, 278, 1751, 392, 297, 967, 1409, 13, 268, 334, 732, 3207, 1121, 1409, 988, 1121, 1818, 367, 6087, 313, 1454, 13, 268, 334, 11266, 2095, 293, 269, 457, 278, 1121, 1409]}
{"line_number": 1388, "line_type": "original", "code": "        multiply(x, xOffset, x, xOffset, tmp1, 0);      // x^2", "entropy": 1.2993228435516357, "is_bug_line": false, "sus_score": 0.6853147745132446, "per_token_entropy": [6.387430191040039, 7.368424415588379, 0.34642839431762695, 6.96346378326416, 0.7569782733917236, 1.209651231765747, 0.1252816766500473, 0.01445982325822115, 1.6608636379241943, 0.04717244580388069, 0.014396724291145802, 0.0008623456815257668, 0.006066480651497841, 1.0375674962997437, 1.5175509452819824, 0.006220266688615084, 0.01909668743610382, 0.013688739389181137, 0.015298875980079174, 3.16184139251709, 0.004942224361002445, 0.07451164722442627, 0.42805683612823486, 0.0034949432592839003], "tokens": [308, 22932, 29898, 29916, 29892, 921, 10302, 29892, 921, 29892, 921, 10302, 29892, 13128, 29896, 29892, 29871, 29900, 416, 418, 849, 921, 29985, 29906]}
{"line_number": 1388, "line_type": "generated", "code": "\n        }\n\n        // apply function composition\n        compose(operand, operandOffset, function, result, resultOffset);\n\n    }\n\n    /** Compute hyperbolic sine of a derivative structure.\n     * @", "entropy": 0.04381098225712776, "is_bug_line": false, "sus_score": 0.6853147745132446, "per_token_entropy": [0.0823996514081955, 0.9349327087402344, 0.01606578752398491, 0.008119551464915276, 0.07219871878623962, 0.006594443693757057, 0.01140880398452282, 0.037161968648433685, 0.006651641335338354, 0.0007560970261693001, 0.0035634846426546574, 0.011477512307465076, 0.0026088273152709007, 0.00044288364006206393, 0.042787835001945496, 2.5510462364763953e-05, 9.393251093570143e-05, 0.0020411626901477575, 7.390948667307384e-06, 4.446407547220588e-05, 0.0042586117051541805, 0.0009335688664577901, 0.00011216964776394889, 0.0012055517872795463, 0.00011300401820335537, 0.000583597575314343, 2.3364747903542593e-05, 0.001405324088409543, 0.0002731903805397451, 0.015207652933895588, 0.011660043150186539, 0.00021371940965764225, 7.56950321374461e-05, 0.0035815397277474403, 0.0061373342759907246, 0.001148398732766509, 0.03680204600095749, 0.0007964776013977826, 0.7634345293045044, 6.747018051100895e-05, 0.00010740180005086586, 0.18294884264469147, 4.994744449504651e-05, 0.002026529749855399, 0.0006744970451109111, 0.0004233417857903987, 0.0002383901592111215, 0.0010034770239144564, 0.00010442188795423135, 0.0006683023530058563, 9.727005090098828e-05, 0.0024131007958203554], "tokens": [13, 4706, 500, 13, 13, 4706, 849, 3394, 740, 15259, 13, 4706, 27435, 29898, 3372, 392, 29892, 1751, 392, 10302, 29892, 740, 29892, 1121, 29892, 1121, 10302, 416, 13, 13, 1678, 500, 13, 13, 1678, 7762, 11796, 29872, 11266, 2095, 293, 269, 457, 310, 263, 16291, 3829, 29889, 13, 268, 334, 732]}
{"line_number": 759, "line_type": "original", "code": "     * @param lhs array holding left hand side of multiplication", "entropy": 1.533669114112854, "is_bug_line": false, "sus_score": 0.6773901581764221, "per_token_entropy": [6.2855095863342285, 1.5304237604141235, 0.269718199968338, 0.6678401231765747, 4.4753031730651855, 0.020380139350891113, 0.43665099143981934, 0.014233025722205639, 0.032013438642024994, 0.0026780238840729, 0.0006098079611547291, 0.005611737724393606, 6.196727275848389], "tokens": [418, 334, 732, 3207, 301, 9499, 1409, 13587, 2175, 1361, 2625, 310, 21666]}
{"line_number": 759, "line_type": "generated", "code": "\n     */\n    public void remainder(final double[] lhs, final int lhsOffset,\n                          final double[] rhs, final int rhsOffset,\n                          final double[] result, final int resultOffset) {\n        for (", "entropy": 0.020176012068986893, "is_bug_line": false, "sus_score": 0.6773901581764221, "per_token_entropy": [0.051143378019332886, 0.14327222108840942, 0.14427348971366882, 0.001982510555535555, 0.018604421988129616, 0.012099090032279491, 0.006007353309541941, 0.0020147517789155245, 0.0005025792634114623, 0.004215640481561422, 0.000571326119825244, 0.0005314130103215575, 0.002142040990293026, 2.682172998902388e-05, 0.00018737945356406271, 0.0030826451256871223, 0.00022182388056535274, 0.00042215018766000867, 2.861018856492592e-06, 0.00010311071673640981, 8.928377064876258e-05, 0.003241168335080147, 0.00493641197681427, 0.04161025956273079, 0.000700466800481081, 0.0004951919545419514, 0.0002798642381094396, 0.00026854246971197426, 9.16677454370074e-05, 0.0007591941393911839, 0.00014518637908622622, 0.00013517419574782252, 7.045020902296528e-05, 0.00015925093612167984, 0.0003505330823827535, 0.0009242791566066444, 0.0019741824362426996, 0.0007884969236329198, 0.0005485698929987848, 0.000503770774230361, 0.0004266782198101282, 0.00018475732940714806, 0.0021829602774232626, 0.00012242044613230973, 0.00015531764074694365, 0.00017009719158522785, 0.003207421861588955, 0.004954916890710592, 0.0018046298064291477, 0.08734944462776184, 0.4984913468360901, 0.0006236277404241264], "tokens": [13, 268, 3776, 13, 1678, 970, 1780, 21162, 29898, 8394, 3765, 2636, 301, 9499, 29892, 2186, 938, 301, 9499, 10302, 29892, 13, 462, 3986, 2186, 3765, 2636, 29365, 29892, 2186, 938, 29365, 10302, 29892, 13, 462, 3986, 2186, 3765, 2636, 1121, 29892, 2186, 938, 1121, 10302, 29897, 426, 13, 4706, 363, 313]}
{"line_number": 1329, "line_type": "original", "code": "        function[0] = FastMath.atan(x);", "entropy": 2.3181536197662354, "is_bug_line": false, "sus_score": 0.675171434879303, "per_token_entropy": [3.5666205883026123, 10.207441329956055, 2.7808032035827637, 1.018477439880371, 0.023182084783911705, 0.15811286866664886, 0.48201045393943787, 0.00046004203613847494, 0.0017586969770491123, 0.13662980496883392, 5.2091965675354, 1.4746944904327393, 5.076609134674072], "tokens": [308, 740, 29961, 29900, 29962, 353, 23786, 11309, 29889, 23402, 29898, 29916, 416]}
{"line_number": 1329, "line_type": "generated", "code": "\n     * be the input array)\n     * @param resultOffset offset of the result in its array\n     */\n    public void atan2(final double[] y, final int yOffset,\n                      final double[] x, final", "entropy": 0.05363670364022255, "is_bug_line": false, "sus_score": 0.675171434879303, "per_token_entropy": [0.8087164163589478, 0.20325922966003418, 0.03402077406644821, 0.24239325523376465, 0.40213945508003235, 0.14797386527061462, 0.20148047804832458, 0.2607397437095642, 0.004499430768191814, 0.013504931703209877, 0.003985201939940453, 0.0004359725280664861, 0.0009285667329095304, 0.0023278300650417805, 0.0005707303644157946, 0.0012356749502941966, 0.0001012035645544529, 0.0001357701694360003, 0.00042215018766000867, 0.0009914488764479756, 0.0006629414856433868, 0.00015400654228869826, 0.0014285369543358684, 0.0464523620903492, 0.06324256211519241, 0.00031096869497559965, 0.05679125338792801, 0.00856594555079937, 0.0031785464379936457, 0.0025758917909115553, 0.00043025295599363744, 0.0011481605470180511, 0.0023053516633808613, 0.0027677821926772594, 0.0026537699159234762, 0.0015835139201954007, 0.006854236125946045, 0.0009984752396121621, 0.006923139560967684, 0.0007730118231847882, 0.00025412190007045865, 8.594620157964528e-05, 9.679325739853084e-05, 0.2023581713438034, 0.02211947739124298, 0.020382709801197052, 0.0002960720448754728, 0.0007130940794013441, 0.00039939055568538606, 0.0005063920398242772, 0.00023934361524879932, 0.001994288759306073], "tokens": [13, 268, 334, 367, 278, 1881, 1409, 29897, 13, 268, 334, 732, 3207, 1121, 10302, 9210, 310, 278, 1121, 297, 967, 1409, 13, 268, 3776, 13, 1678, 970, 1780, 472, 273, 29906, 29898, 8394, 3765, 2636, 343, 29892, 2186, 938, 343, 10302, 29892, 13, 462, 418, 2186, 3765, 2636, 921, 29892, 2186]}
{"line_number": 1349, "line_type": "original", "code": "                for (int k = n - 1; k >= 0; k -= 2) {", "entropy": 1.456106185913086, "is_bug_line": false, "sus_score": 0.6744167804718018, "per_token_entropy": [4.336757659912109, 10.069047927856445, 0.014479444362223148, 0.006516160909086466, 2.8298499584198, 0.017659103497862816, 5.855673789978027, 1.6762492656707764, 0.047698020935058594, 0.20324531197547913, 0.013916129246354103, 0.01740971766412258, 0.36539652943611145, 0.0398559533059597, 0.26137182116508484, 0.004301225300878286, 2.0623669624328613, 4.13102388381958, 0.0234068613499403, 0.035495564341545105, 0.007171602454036474, 0.015440450049936771], "tokens": [462, 363, 313, 524, 413, 353, 302, 448, 29871, 29896, 29936, 413, 6736, 29871, 29900, 29936, 413, 22361, 29871, 29906, 29897, 426]}
{"line_number": 1349, "line_type": "generated", "code": "\n            atan(tmp1, 0, tmp1, 0);                     // atan(y / (r + x))\n            multiplyByTwo(tmp1, 0, tmp1, 0);            // 2", "entropy": 0.15233206748962402, "is_bug_line": false, "sus_score": 0.6744167804718018, "per_token_entropy": [0.14970260858535767, 0.4104597270488739, 0.34233829379081726, 0.0002954761730507016, 0.007935307919979095, 0.0073736184276640415, 0.0035790454130619764, 0.0003292018664069474, 0.007460944354534149, 0.000942858459893614, 0.0005085367010906339, 0.33261868357658386, 1.2568038702011108, 0.00012635385792236775, 0.0022776394616812468, 0.000890097115188837, 0.002557342639192939, 0.19452106952667236, 0.06361837685108185, 0.00013386306818574667, 0.07315272092819214, 0.002948581939563155, 0.042838774621486664, 0.011263829655945301, 0.09159927815198898, 0.18856552243232727, 0.004873777274042368, 0.002566141774877906, 0.0011444692499935627, 0.02481667511165142, 0.008776896633207798, 0.6795260310173035, 0.8902233242988586, 0.7933117151260376, 1.1597192287445068, 0.0024406902957707644, 0.00781324878334999, 0.002633557887747884, 0.004022127948701382, 0.009448808617889881, 0.0002474478678777814, 0.12339341640472412, 0.4228260815143585, 0.38690242171287537, 0.0003209791029803455, 0.0009108209051191807, 0.001341753639280796, 0.0017676219576969743, 0.13890106976032257, 5.638440416078083e-05, 0.0578962005674839, 0.0005452338373288512], "tokens": [13, 9651, 472, 273, 29898, 7050, 29896, 29892, 29871, 29900, 29892, 13128, 29896, 29892, 29871, 29900, 416, 462, 268, 849, 472, 273, 29898, 29891, 847, 313, 29878, 718, 921, 876, 13, 9651, 22932, 2059, 13985, 29898, 7050, 29896, 29892, 29871, 29900, 29892, 13128, 29896, 29892, 29871, 29900, 416, 9651, 849, 29871, 29906]}
{"line_number": 1368, "line_type": "original", "code": "        compose(operand, operandOffset, function, result, resultOffset);", "entropy": 1.6877434253692627, "is_bug_line": false, "sus_score": 0.6650947332382202, "per_token_entropy": [7.591193199157715, 11.99727725982666, 0.43565747141838074, 3.4098901748657227, 0.12130752950906754, 1.0716947317123413, 0.3853576183319092, 0.0015238827327266335, 0.015799224376678467, 0.016669513657689095, 2.035220146179199, 0.0298546701669693, 1.299383521080017, 0.049188196659088135, 0.022680407389998436, 0.0007281036232598126, 0.20821408927440643], "tokens": [308, 27435, 29898, 3372, 392, 29892, 1751, 392, 10302, 29892, 740, 29892, 1121, 29892, 1121, 10302, 416]}
{"line_number": 1368, "line_type": "generated", "code": "\n\n    }\n\n    /** Compute arc tangent of a derivative structure.\n     * @param y first operand\n     * @param x second operand\n     * @param result array where result must be stored (for\n    ", "entropy": 0.12788090109825134, "is_bug_line": false, "sus_score": 0.6650947332382202, "per_token_entropy": [0.013070149347186089, 0.14960838854312897, 0.06842924654483795, 0.0028889132663607597, 0.003138143103569746, 0.03736456111073494, 0.04012740030884743, 0.012455062009394169, 0.16923648118972778, 0.0015506636118516326, 1.0604814291000366, 0.9525187015533447, 0.002229825360700488, 0.058325644582509995, 0.23090799152851105, 0.17860540747642517, 0.00394958071410656, 0.18438337743282318, 0.0007040405762381852, 0.014472277835011482, 0.0018691227305680513, 0.04465991258621216, 0.004342768341302872, 0.9570099115371704, 1.4715214967727661, 0.16185353696346283, 0.00013362467871047556, 0.2572932541370392, 0.0002723561483435333, 0.00044169207103550434, 0.0005080600967630744, 0.004132423084229231, 0.022771300747990608, 0.010118970647454262, 0.000301673193462193, 0.00015579440514557064, 0.006467838305979967, 0.0009809688199311495, 0.0052400389686226845, 0.0003165697562508285, 0.19739459455013275, 0.007546606939285994, 0.13666567206382751, 0.007208055816590786, 0.004629370290786028, 0.0007768235518597066, 0.0001716466504149139, 0.0007731309160590172, 0.1346690058708191, 0.002736991737037897, 0.02183539606630802, 0.0005609607324004173], "tokens": [13, 13, 1678, 500, 13, 13, 1678, 7762, 11796, 29872, 15232, 18806, 296, 310, 263, 16291, 3829, 29889, 13, 268, 334, 732, 3207, 343, 937, 1751, 392, 13, 268, 334, 732, 3207, 921, 1473, 1751, 392, 13, 268, 334, 732, 3207, 1121, 1409, 988, 1121, 1818, 367, 6087, 313, 1454, 13, 268]}
{"line_number": 1353, "line_type": "original", "code": "                    } else if (k == 2) {", "entropy": 2.997685194015503, "is_bug_line": false, "sus_score": 0.664372444152832, "per_token_entropy": [5.738988399505615, 3.7271432876586914, 5.036573886871338, 0.9839357137680054, 2.5309581756591797, 0.017794370651245117, 13.946154594421387, 1.6262731552124023, 0.17135784029960632, 2.019061803817749, 0.16160517930984497, 0.012376765720546246], "tokens": [462, 268, 500, 1683, 565, 313, 29895, 1275, 29871, 29906, 29897, 426]}
{"line_number": 1353, "line_type": "generated", "code": "\n\n        } else {\n\n            // compute atan2(y, x) = +/- pi - 2 atan(y / (r - x))\n            add(tmp1, 0, x, xOffset, tmp", "entropy": 0.11814723163843155, "is_bug_line": false, "sus_score": 0.664372444152832, "per_token_entropy": [0.06706169247627258, 0.9125154614448547, 0.08489152044057846, 0.003392062848433852, 0.00900139007717371, 0.10032272338867188, 0.008403772488236427, 0.14553867280483246, 0.010168415494263172, 0.1224576011300087, 0.12751807272434235, 0.10047227144241333, 0.002760055009275675, 0.03883569315075874, 0.011001525446772575, 0.005657256580889225, 0.0052288915030658245, 0.08563074469566345, 0.0018774517811834812, 0.026029281318187714, 1.0846892595291138, 0.1937846690416336, 0.3032122850418091, 0.006096220575273037, 0.00914409477263689, 4.732496745418757e-05, 0.03220253437757492, 0.0008725888328626752, 0.07127000391483307, 0.04358862712979317, 0.04548688605427742, 0.03369107097387314, 0.05869117006659508, 0.004219320602715015, 0.00319589558057487, 0.0026032389141619205, 0.019249534234404564, 0.10835596174001694, 2.1668968200683594, 0.009005879983305931, 0.058738045394420624, 0.011761723086237907, 5.94836674281396e-05, 0.000914393924176693, 0.00017820201173890382, 9.679325739853084e-05, 0.004774716682732105, 6.854299135738984e-05, 0.0008781867218203843, 2.0146166207268834e-05, 5.1377883210079744e-05, 0.0010468247346580029], "tokens": [13, 13, 4706, 500, 1683, 426, 13, 13, 9651, 849, 10272, 472, 273, 29906, 29898, 29891, 29892, 921, 29897, 353, 718, 24028, 2930, 448, 29871, 29906, 472, 273, 29898, 29891, 847, 313, 29878, 448, 921, 876, 13, 9651, 788, 29898, 7050, 29896, 29892, 29871, 29900, 29892, 921, 29892, 921, 10302, 29892, 13128]}
{"line_number": 1351, "line_type": "original", "code": "                    if (k > 2) {", "entropy": 2.816779851913452, "is_bug_line": false, "sus_score": 0.6627809405326843, "per_token_entropy": [3.3303604125976562, 2.827244758605957, 4.262694835662842, 0.0969303548336029, 11.287601470947266, 2.566498279571533, 0.21149222552776337, 3.187577962875366, 0.37633216381073, 0.02106449566781521], "tokens": [462, 268, 565, 313, 29895, 1405, 29871, 29906, 29897, 426]}
{"line_number": 1351, "line_type": "generated", "code": "\n                }\n\n        } else {\n\n            // compute atan2(y, x) = -2 atan(y / (r - x))\n            subtract(tmp1, 0, x, xOffset, tmp2", "entropy": 0.1221126839518547, "is_bug_line": false, "sus_score": 0.6627809405326843, "per_token_entropy": [0.267738938331604, 0.7598732709884644, 1.1336805820465088, 0.014902221970260143, 0.6174416542053223, 0.21850328147411346, 0.01152040809392929, 0.0035922301467508078, 0.05465162917971611, 0.004316180944442749, 0.06451432406902313, 0.006393217947334051, 0.08134333044290543, 0.07136357575654984, 0.06867135316133499, 0.001645878772251308, 0.03179474547505379, 0.006216831039637327, 0.0036086218897253275, 0.005818928126245737, 0.08087649196386337, 0.0012546057114377618, 0.015940140932798386, 1.8601593971252441, 0.12693770229816437, 0.011033712886273861, 0.0023388906847685575, 0.014525501988828182, 0.014174732379615307, 0.015497613698244095, 0.010637132450938225, 0.03728566691279411, 0.016477106139063835, 0.002056271303445101, 0.004129098728299141, 0.2594272792339325, 0.016738681122660637, 0.4022989869117737, 0.0007949291029945016, 0.006480274721980095, 0.003136360552161932, 5.3881147323409095e-05, 0.0010977915953844786, 7.855583680793643e-05, 0.0002325502864550799, 0.0014541300479322672, 0.00014256415306590497, 0.0009812070056796074, 4.255681051290594e-05, 0.00013839241000823677, 0.0005218812730163336, 0.015324351377785206], "tokens": [13, 18884, 500, 13, 13, 4706, 500, 1683, 426, 13, 13, 9651, 849, 10272, 472, 273, 29906, 29898, 29891, 29892, 921, 29897, 353, 448, 29906, 472, 273, 29898, 29891, 847, 313, 29878, 448, 921, 876, 13, 9651, 23197, 29898, 7050, 29896, 29892, 29871, 29900, 29892, 921, 29892, 921, 10302, 29892, 13128, 29906]}
{"line_number": 756, "line_type": "original", "code": "    }", "entropy": 7.344820022583008, "is_bug_line": false, "sus_score": 0.6624253392219543, "per_token_entropy": [2.910172939300537, 11.779467582702637], "tokens": [268, 500]}
{"line_number": 756, "line_type": "generated", "code": "\n     * @param result array where result must be stored (for\n     * remainder the result array", "entropy": 0.07512708008289337, "is_bug_line": false, "sus_score": 0.6624253392219543, "per_token_entropy": [0.16045115888118744, 0.19213664531707764, 0.04720667377114296, 0.0025377231650054455, 0.007371014915406704, 0.01290658675134182, 0.0057265982031822205, 0.0004395472351461649, 0.001918857917189598, 0.0006598440813831985, 7.962863310240209e-05, 0.000198821333469823, 0.056633900851011276, 0.7406511902809143, 0.0316634364426136, 0.02295166626572609, 0.0002849888114724308, 0.2597261369228363, 0.032327305525541306, 0.00021860594279132783, 0.0015783959534019232], "tokens": [13, 268, 334, 732, 3207, 1121, 1409, 988, 1121, 1818, 367, 6087, 313, 1454, 13, 268, 334, 21162, 278, 1121, 1409]}
{"line_number": 2423, "line_type": "original", "code": "", "entropy": 3.7427854537963867, "is_bug_line": false, "sus_score": 0.6616148352622986, "per_token_entropy": [5.868173599243164, 1.6173970699310303], "tokens": [29871, 13]}
{"line_number": 2423, "line_type": "generated", "code": "\n<|mask:1|><|mask:1|><|mask:0|>\n<|mask:1|><|mask:1|><|mask:1|><|mask:0|>\n<|mask:1", "entropy": 0.08050801604986191, "is_bug_line": false, "sus_score": 0.6616148352622986, "per_token_entropy": [0.11029788851737976, 0.3817541301250458, 0.022218117490410805, 0.1094190776348114, 0.014171206392347813, 0.7883501052856445, 0.026934001594781876, 0.47738733887672424, 0.00984609592705965, 0.054889976978302, 0.007796452846378088, 0.5595923662185669, 0.008560745045542717, 0.8689370155334473, 0.010081561282277107, 0.06651195883750916, 0.0052610281854867935, 0.1622907519340515, 0.004895605146884918, 0.0800173282623291, 0.006314327474683523, 0.029850389808416367, 0.003459066851064563, 0.008768389001488686, 0.0023426965344697237, 0.0708540752530098, 0.0019002966582775116, 0.00414310721680522, 0.001446868758648634, 0.0037555419839918613, 0.0017742858035489917, 0.03748065605759621, 0.001086121890693903, 0.009303313679993153, 0.0019443194614723325, 0.003501120489090681, 0.00201617949642241, 0.018609102815389633, 0.0010002615163102746, 0.07792201638221741, 0.0033687767572700977, 0.010679828934371471, 0.002430819906294346, 0.02156803570687771, 0.0016037471359595656, 0.011234006844460964, 0.0025346316397190094, 0.029041411355137825, 0.00378606328740716, 0.00717610027641058, 0.0018552012043073773, 0.03445310890674591], "tokens": [13, 29966, 29989, 13168, 29901, 29896, 29989, 5299, 29989, 13168, 29901, 29896, 29989, 5299, 29989, 13168, 29901, 29900, 29989, 29958, 13, 29966, 29989, 13168, 29901, 29896, 29989, 5299, 29989, 13168, 29901, 29896, 29989, 5299, 29989, 13168, 29901, 29896, 29989, 5299, 29989, 13168, 29901, 29900, 29989, 29958, 13, 29966, 29989, 13168, 29901, 29896]}
{"line_number": 1344, "line_type": "original", "code": "            for (int n = 2; n <= order; ++n) {", "entropy": 1.337106704711914, "is_bug_line": false, "sus_score": 0.6540384888648987, "per_token_entropy": [8.862704277038574, 7.118783473968506, 0.020339373499155045, 0.01657700724899769, 2.729266405105591, 0.02194712683558464, 0.2722415626049042, 2.8371405601501465, 0.10962368547916412, 0.0036889140028506517, 0.194935604929924, 0.10418270528316498, 0.014839738607406616, 0.4132401645183563, 0.0007599088130518794, 0.0065204245038330555, 0.004023671615868807], "tokens": [632, 363, 313, 524, 302, 353, 29871, 29906, 29936, 302, 5277, 1797, 29936, 8445, 29876, 29897, 426]}
{"line_number": 1344, "line_type": "generated", "code": "\n\n        // compute x = y / r\n        final double[] tmp3 = new double[getSize()];\n        divide(y, yOffset, tmp1, 0, tmp3, 0);\n        final double[] tmp", "entropy": 0.34837275743484497, "is_bug_line": false, "sus_score": 0.6540384888648987, "per_token_entropy": [0.1341981589794159, 0.8787416219711304, 0.13826487958431244, 0.1521940380334854, 0.5415801405906677, 3.0173935890197754, 1.7362724542617798, 1.612833857536316, 0.8860104084014893, 0.030969541519880295, 0.1752690076828003, 0.030532576143741608, 1.9378465414047241, 0.16116929054260254, 0.20134305953979492, 1.478520154953003, 0.20712515711784363, 0.023644044995307922, 0.07760747522115707, 0.00036530973738990724, 0.0012187680695205927, 0.05293635278940201, 0.00027295202016830444, 0.0002261144545627758, 0.0007757514831610024, 0.016075171530246735, 0.028682954609394073, 0.17632001638412476, 0.004270600620657206, 0.03074645809829235, 0.0002252801787108183, 0.002361011691391468, 3.5523738915799186e-05, 8.67805938469246e-05, 0.002606805879622698, 0.010287709534168243, 0.0003150205302517861, 0.009894728660583496, 0.0039023214485496283, 0.0005067494930699468, 0.061314281076192856, 0.09135091304779053, 0.00021896349790040404, 0.0015822045970708132, 0.0004574206250254065, 0.0015475689433515072, 1.033937931060791, 1.2440940141677856, 0.9278433918952942, 0.01801743544638157, 0.10967303812503815, 0.8617168664932251], "tokens": [13, 13, 4706, 849, 10272, 921, 353, 343, 847, 364, 13, 4706, 2186, 3765, 2636, 13128, 29941, 353, 716, 3765, 29961, 657, 3505, 580, 1385, 13, 4706, 16429, 29898, 29891, 29892, 343, 10302, 29892, 13128, 29896, 29892, 29871, 29900, 29892, 13128, 29941, 29892, 29871, 29900, 416, 13, 4706, 2186, 3765, 2636, 13128]}
