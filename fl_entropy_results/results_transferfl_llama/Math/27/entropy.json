{"line_number": 597, "line_type": "original", "code": "        return multiply(100).doubleValue();", "entropy": 2.649914503097534, "is_bug_line": true, "sus_score": 0.49274903535842896, "per_token_entropy": [7.734034538269043, 3.91404390335083, 9.555143356323242, 0.1359872817993164, 1.3404265642166138, 0.42982685565948486, 0.3870046138763428, 0.6515184640884399, 2.822859287261963, 0.002571611199527979, 2.1756386756896973], "tokens": [308, 736, 22932, 29898, 29896, 29900, 29900, 467, 8896, 1917, 890]}
{"line_number": 597, "line_type": "generated", "code": "\n    }\n\n    /**\n     *", "entropy": 0.13672082126140594, "is_bug_line": true, "sus_score": 0.49274903535842896, "per_token_entropy": [0.07787945121526718, 0.6306068897247314, 0.18919013440608978, 0.020014123991131783, 0.19592589139938354, 0.09941945225000381, 0.10480014979839325, 0.04295412078499794, 0.005899161100387573, 0.0005187834613025188], "tokens": [13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334]}
{"line_number": 555, "line_type": "original", "code": "        return new Fraction(numerator * i, denominator);", "entropy": 1.566982626914978, "is_bug_line": false, "sus_score": 0.48902979493141174, "per_token_entropy": [7.31082010269165, 4.036137104034424, 0.5012392997741699, 0.031300950795412064, 0.0001565095444675535, 0.21145682036876678, 2.675285816192627, 0.019117504358291626, 2.018062114715576, 4.034584999084473, 0.25997626781463623, 0.24316838383674622, 0.00023803261865396053, 0.5962114930152893], "tokens": [308, 736, 716, 7347, 428, 29898, 8058, 1061, 334, 474, 29892, 14267, 1061, 416]}
{"line_number": 555, "line_type": "generated", "code": "\n     *\n     * @param numerator  the numerator, for example the three in 'three sevenths'\n     * @param denominator  the denominator, for example the seven in 'three sevenths'\n     * @return", "entropy": 0.061159297823905945, "is_bug_line": false, "sus_score": 0.48902979493141174, "per_token_entropy": [0.04462958499789238, 0.4957811236381531, 0.08124255388975143, 0.6520974040031433, 0.030676517635583878, 0.0012328175362199545, 0.177169531583786, 0.05886494740843773, 0.7020345330238342, 0.00018010901112575084, 0.24731332063674927, 0.0009190387791022658, 0.018384533002972603, 1.8596476365928538e-05, 0.0009754904895089567, 0.022013599053025246, 0.004615250043570995, 0.0014321081107482314, 0.3075197637081146, 0.00013481661153491586, 0.058197326958179474, 0.013777279295027256, 0.14176584780216217, 0.006386939901858568, 0.014207405038177967, 0.0004640932602342218, 0.0038327344227582216, 5.590759246842936e-05, 0.00010561384988250211, 0.0006636562757194042, 0.00819557998329401, 5.900685573578812e-05, 0.0010371787939220667, 1.3351351299206726e-05, 0.007392078172415495, 2.4318398573086597e-05, 7.271740287251305e-06, 1.9550132492440753e-05, 0.0007425173535011709, 0.00021360022947192192, 0.0010552796302363276, 5.245195097813848e-06, 1.2159273865108844e-05, 8.248942322097719e-05, 0.025069452822208405, 0.002856937935575843, 0.0003672163875307888, 0.0008000510279089212, 0.017684869468212128, 0.004320098087191582, 0.0029845954850316048, 0.020647935569286346], "tokens": [13, 268, 334, 13, 268, 334, 732, 3207, 4825, 1061, 29871, 278, 4825, 1061, 29892, 363, 1342, 278, 2211, 297, 525, 17536, 16741, 9499, 29915, 13, 268, 334, 732, 3207, 14267, 1061, 29871, 278, 14267, 1061, 29892, 363, 1342, 278, 9881, 297, 525, 17536, 16741, 9499, 29915, 13, 268, 334, 732, 2457]}
{"line_number": 319, "line_type": "original", "code": "        return (double)numerator / (double)denominator;", "entropy": 1.277645230293274, "is_bug_line": false, "sus_score": 0.4704502820968628, "per_token_entropy": [6.3487067222595215, 0.5004934072494507, 3.4058737754821777, 6.199367523193359, 0.24252982437610626, 0.40372249484062195, 7.247662142617628e-05, 0.936744749546051, 1.075188398361206, 0.0019921474158763885, 0.0018929197685793042, 0.03701815381646156, 0.0007858763565309346, 5.590759246842936e-05, 0.01023225300014019], "tokens": [308, 736, 313, 8896, 29897, 8058, 1061, 847, 313, 8896, 29897, 1145, 5817, 1061, 29936]}
{"line_number": 319, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Gets the fraction as a", "entropy": 0.21207493543624878, "is_bug_line": false, "sus_score": 0.4704502820968628, "per_token_entropy": [0.0593268945813179, 0.35117754340171814, 0.0203165952116251, 0.005419562105089426, 0.029573241248726845, 0.058166395872831345, 0.020048944279551506, 0.007846840657293797, 0.003606602782383561, 0.00012742661056108773, 0.7906831502914429, 0.0003058442671317607, 0.7666969299316406, 0.12077246606349945, 0.2592063546180725, 0.8999241590499878], "tokens": [13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 402, 1691, 278, 15958, 408, 263]}
{"line_number": 282, "line_type": "original", "code": "        this.numerator   = num;", "entropy": 2.5795674324035645, "is_bug_line": false, "sus_score": 0.3629421591758728, "per_token_entropy": [8.911344528198242, 6.695550918579102, 0.108406662940979, 0.46810731291770935, 0.001359610934741795, 4.7424116134643555, 0.3328419327735901, 1.8551721572875977, 0.10091022402048111], "tokens": [308, 445, 29889, 8058, 1061, 259, 353, 954, 29936]}
{"line_number": 282, "line_type": "generated", "code": "\n    public boolean equals(Object other) {\n        if (this == other) {\n            return true;\n        }\n        if (other instanceof Fraction) {\n            Fraction rhs = (Fraction)other;\n            return", "entropy": 0.05925140529870987, "is_bug_line": false, "sus_score": 0.3629421591758728, "per_token_entropy": [0.10012634098529816, 0.10464394092559814, 0.046392958611249924, 0.012486967258155346, 0.0018845908343791962, 0.01678944192826748, 0.06768041849136353, 0.035517193377017975, 0.013318384066224098, 0.006402457132935524, 0.008362634107470512, 0.16455116868019104, 0.053493257611989975, 0.010868637822568417, 0.04019863158464432, 0.002680045086890459, 0.0004858981992583722, 0.004784919787198305, 0.008056524209678173, 0.013407427817583084, 0.011425421573221684, 0.008865282870829105, 0.0006903410539962351, 0.00011503035057103261, 0.002469349419698119, 0.004730343818664551, 0.0003589939442463219, 0.04771824926137924, 0.048316121101379395, 0.008187303319573402, 0.030551768839359283, 0.01713917776942253, 0.06823630630970001, 0.005776853300631046, 1.811964830267243e-05, 0.04393504932522774, 0.0004059444472659379, 0.003137429943308234, 0.04229041188955307, 0.6141670942306519, 4.0531076592742465e-06, 0.24156227707862854, 0.0007564543629996479, 0.016660135239362717, 0.0007101159426383674, 1.2636104656849056e-05, 0.0019444384379312396, 0.7753783464431763, 0.0003846143954433501, 0.0033197076991200447, 0.0454132966697216, 0.324260413646698], "tokens": [13, 1678, 970, 7223, 15743, 29898, 2061, 916, 29897, 426, 13, 4706, 565, 313, 1366, 1275, 916, 29897, 426, 13, 9651, 736, 1565, 29936, 13, 4706, 500, 13, 4706, 565, 313, 1228, 28919, 7347, 428, 29897, 426, 13, 9651, 7347, 428, 29365, 353, 313, 29943, 13857, 29897, 1228, 29936, 13, 9651, 736]}
{"line_number": 400, "line_type": "original", "code": "", "entropy": 4.4586181640625, "is_bug_line": false, "sus_score": 0.31288132071495056, "per_token_entropy": [5.526216506958008, 3.391019344329834], "tokens": [29871, 13]}
{"line_number": 400, "line_type": "generated", "code": "    * @throws MathArithmeticException if the resulting numerator or denominator\n     * exceeds {@code Integer.MAX_VALUE}\n<|mask:0|>     */\n    public Fraction subtract(Fraction fraction) {", "entropy": 0.13530991971492767, "is_bug_line": false, "sus_score": 0.31288132071495056, "per_token_entropy": [0.9712580442428589, 0.15569216012954712, 0.0152123486623168, 0.006967770401388407, 2.0146166207268834e-05, 0.014405067078769207, 0.0015883937012404203, 1.4066597032069694e-05, 0.00011073929636040702, 0.005191773176193237, 0.002016060519963503, 0.018283406272530556, 0.014907389879226685, 5.328513361746445e-05, 0.008128892630338669, 0.03595693036913872, 0.00016616393986623734, 1.227003574371338, 0.4236041009426117, 0.0217740461230278, 0.7042893767356873, 0.00498563889414072, 0.021009983494877815, 0.01018611527979374, 0.006494368892163038, 0.0007815881981514394, 0.0017495339270681143, 0.00011240804451517761, 0.0010194348869845271, 0.008794385939836502, 0.03137928247451782, 0.3396344482898712, 0.0014723424101248384, 0.10403026640415192, 0.004240924958139658, 0.7912145853042603, 0.0018450870411470532, 0.42680472135543823, 0.09467092901468277, 1.2796735763549805, 0.002229825360700488, 0.027125682681798935, 0.010207591578364372, 0.00303356209769845, 3.576272320060525e-06, 0.016529638320207596, 0.0010239601833745837, 0.21447254717350006, 1.645074735279195e-05, 0.0012661544606089592, 0.0021893836092203856, 0.0012735360069200397], "tokens": [268, 334, 732, 386, 5727, 5792, 1433, 18542, 2451, 565, 278, 9819, 4825, 1061, 470, 14267, 1061, 13, 268, 334, 13461, 29879, 26633, 401, 8102, 29889, 12648, 29918, 19143, 29913, 13, 29966, 29989, 13168, 29901, 29900, 29989, 29958, 268, 3776, 13, 1678, 970, 7347, 428, 23197, 29898, 29943, 13857, 15958, 29897, 426]}
{"line_number": 426, "line_type": "original", "code": "     * @throws NullArgumentException if the fraction is {@code null}", "entropy": 0.9261772036552429, "is_bug_line": false, "sus_score": 0.3018478751182556, "per_token_entropy": [5.89284086227417, 4.628024578094482, 0.5424946546554565, 0.9741063714027405, 5.9126061387360096e-05, 2.494290590286255, 0.01519391592592001, 0.00012134769349358976, 0.028717821463942528, 0.04284825176000595, 0.08485943078994751, 0.014169090427458286, 0.08153925836086273, 0.0004812512779608369, 0.0025038341991603374, 0.016584981232881546], "tokens": [418, 334, 732, 386, 5727, 19014, 15730, 2451, 565, 278, 15958, 338, 26633, 401, 1870, 29913]}
{"line_number": 426, "line_type": "generated", "code": "\n    private Fraction addSub(Fraction fraction, boolean isAdd) {\n        if (fraction == null) {\n            throw new NullArgumentException();\n        }\n\n        final int a = numerator;\n        final int", "entropy": 0.16518497467041016, "is_bug_line": false, "sus_score": 0.3018478751182556, "per_token_entropy": [0.1663345843553543, 0.3448598384857178, 0.27481818199157715, 0.02091064117848873, 3.2186455882765586e-06, 0.004517350345849991, 0.0003649522550404072, 0.016011470928788185, 0.37560662627220154, 2.90866428258596e-05, 0.007935781031847, 0.005237904377281666, 0.07607456296682358, 0.0006136203301139176, 0.00013648532330989838, 0.013820194639265537, 0.03648946434259415, 0.003752572927623987, 0.225446879863739, 0.6991822719573975, 0.026741238310933113, 0.13712963461875916, 5.221230458118953e-05, 0.04404615983366966, 0.0025201248936355114, 0.01416109874844551, 0.0025634069461375475, 0.008088096976280212, 0.047499895095825195, 0.016952019184827805, 0.025786157697439194, 0.012544064782559872, 0.002298334613442421, 8.093983342405409e-05, 0.3226761817932129, 0.0034629872534424067, 0.00689389742910862, 0.0026139398105442524, 0.005939808674156666, 0.6134122610092163, 0.05823185294866562, 1.612165093421936, 0.14476735889911652, 1.0946463346481323, 1.1092488765716553, 0.9385360479354858, 1.0728830375228426e-06, 0.018338769674301147, 0.021339111030101776, 0.006569337099790573, 0.01761529967188835, 0.0005509527400135994], "tokens": [13, 1678, 2024, 7347, 428, 788, 4035, 29898, 29943, 13857, 15958, 29892, 7223, 338, 2528, 29897, 426, 13, 4706, 565, 313, 29888, 13857, 1275, 1870, 29897, 426, 13, 9651, 3183, 716, 19014, 15730, 2451, 890, 13, 4706, 500, 13, 13, 4706, 2186, 938, 263, 353, 4825, 1061, 29936, 13, 4706, 2186, 938]}
{"line_number": 387, "line_type": "original", "code": "    public int intValue() {", "entropy": 2.108501672744751, "is_bug_line": false, "sus_score": 0.29971030354499817, "per_token_entropy": [3.2623894214630127, 4.343363285064697, 2.8816635608673096, 4.0718302726745605, 0.05400976166129112, 0.11640710383653641, 0.029847612604498863], "tokens": [268, 970, 938, 938, 1917, 580, 426]}
{"line_number": 387, "line_type": "generated", "code": "\n     * @return the result of the addition.\n     */\n    public Fraction add(int i) {\n        return add(new Fraction(i, 1));\n    }\n\n    /**\n     *", "entropy": 0.15860788524150848, "is_bug_line": false, "sus_score": 0.29971030354499817, "per_token_entropy": [0.21310357749462128, 0.8888617753982544, 0.10597395896911621, 0.06978415697813034, 0.09576742351055145, 1.075783133506775, 0.3806614875793457, 0.28647518157958984, 0.05958356335759163, 0.11957084387540817, 0.5206984281539917, 0.005472440738230944, 0.18284617364406586, 0.30291488766670227, 0.005799372214823961, 0.03919362649321556, 0.033522315323352814, 0.045334238559007645, 6.6756979322235566e-06, 0.010532860644161701, 0.00665602320805192, 0.10731302201747894, 0.006033658981323242, 0.006127381697297096, 0.004362708423286676, 0.005645166151225567, 0.10676290839910507, 0.3254222571849823, 0.15586058795452118, 0.7508347034454346, 1.1077773571014404, 0.006099419668316841, 6.794906312279636e-06, 0.0034477810841053724, 0.004413150716573, 0.500329852104187, 0.035113055258989334, 0.004476645030081272, 0.015836773440241814, 0.006060319021344185, 0.04944237694144249, 0.005773060489445925, 0.009800530970096588, 0.043879829347133636, 0.03557034581899643, 0.014303656294941902, 0.005183590110391378, 0.006972032133489847, 0.00039593485416844487], "tokens": [13, 268, 334, 732, 2457, 278, 1121, 310, 278, 6124, 29889, 13, 268, 3776, 13, 1678, 970, 7347, 428, 788, 29898, 524, 474, 29897, 426, 13, 4706, 736, 788, 29898, 1482, 7347, 428, 29898, 29875, 29892, 29871, 29896, 2483, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334]}
{"line_number": 438, "line_type": "original", "code": "     */", "entropy": 7.097740173339844, "is_bug_line": false, "sus_score": 0.2945595681667328, "per_token_entropy": [6.1356892585754395, 8.05979061126709], "tokens": [418, 3776]}
{"line_number": 438, "line_type": "generated", "code": "\n        // of the time, so we will use it to avoid calculating the GCD most of the time.\n        int d1 = this.denominator;\n        int d2 = fraction.denominator;\n        if (d", "entropy": 0.5334224700927734, "is_bug_line": false, "sus_score": 0.2945595681667328, "per_token_entropy": [0.21091711521148682, 0.20706486701965332, 1.4280189275741577, 1.7519022226333618, 0.006822387222200632, 0.005023358389735222, 1.4458186626434326, 0.32267382740974426, 1.36384916305542, 1.4415775537490845, 1.4967976808547974, 1.4798954725265503, 2.011138916015625, 1.217848300933838, 3.2519006729125977, 0.5613612532615662, 1.2115675210952759, 0.016087958589196205, 1.8348039388656616, 0.32201462984085083, 0.9386341571807861, 0.20273035764694214, 0.21344491839408875, 0.007007545791566372, 0.14113861322402954, 0.8234810829162598, 0.057094063609838486, 0.03978584334254265, 0.031221576035022736, 1.6630560159683228, 0.004276060964912176, 0.02306932769715786, 1.168244216387393e-05, 1.823885577323381e-05, 0.15377485752105713, 0.015265299007296562, 0.09462679177522659, 0.0785670205950737, 0.0399489626288414, 0.003506941255182028, 0.0025760105345398188, 0.0016569469589740038, 0.00011562632425921038, 0.04199589043855667, 8.583032467868179e-06, 2.3007127310847864e-05, 0.00151305110193789, 0.00422525592148304, 0.16019707918167114, 1.1698275804519653, 0.04014366492629051, 0.1979382187128067], "tokens": [13, 4706, 849, 310, 278, 931, 29892, 577, 591, 674, 671, 372, 304, 4772, 25202, 278, 402, 6530, 1556, 310, 278, 931, 29889, 13, 4706, 938, 270, 29896, 353, 445, 29889, 1145, 5817, 1061, 29936, 13, 4706, 938, 270, 29906, 353, 15958, 29889, 1145, 5817, 1061, 29936, 13, 4706, 565, 313, 29881]}
{"line_number": 413, "line_type": "original", "code": "     * Return the multiplicative inverse of this fraction.", "entropy": 1.8321646451950073, "is_bug_line": false, "sus_score": 0.29067450761795044, "per_token_entropy": [5.919215202331543, 7.539844989776611, 6.4066972732543945, 0.49137794971466064, 1.4931126832962036, 0.0007401349139399827, 0.005803402047604322, 0.0019142176024615765, 0.053910817950963974, 0.014262641780078411, 0.018246417865157127, 0.04084976390004158], "tokens": [418, 334, 7106, 278, 6674, 506, 1230, 16402, 310, 445, 15958, 29889]}
{"line_number": 413, "line_type": "generated", "code": "\n        return new Fraction(numerator - i * denominator, denominator);\n    }\n\n    /**\n     *", "entropy": 0.07860827445983887, "is_bug_line": false, "sus_score": 0.29067450761795044, "per_token_entropy": [0.1681341677904129, 0.612214982509613, 0.24206465482711792, 0.2104455977678299, 0.003988645505160093, 0.0002628219372127205, 0.0440751351416111, 0.08049182593822479, 7.092700980138034e-05, 0.0653480514883995, 0.02471701242029667, 0.009699123911559582, 0.006222754251211882, 9.881961887003854e-05, 0.0020249830558896065, 0.003921439405530691, 2.038458114839159e-05, 0.010305997915565968, 0.00429208530113101, 0.40647968649864197, 0.005991711746901274, 0.007947253063321114, 0.043202582746744156, 0.08509200811386108, 0.0589577816426754, 0.015546441078186035, 0.08147915452718735, 0.007935544475913048], "tokens": [13, 4706, 736, 716, 7347, 428, 29898, 8058, 1061, 448, 474, 334, 14267, 1061, 29892, 14267, 1061, 416, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334]}
{"line_number": 406, "line_type": "original", "code": "        if (numerator==Integer.MIN_VALUE) {", "entropy": 1.7293848991394043, "is_bug_line": false, "sus_score": 0.28960171341896057, "per_token_entropy": [6.857174873352051, 2.6977107524871826, 0.11402379721403122, 2.30288028717041, 0.035992465913295746, 8.197733879089355, 0.727228581905365, 0.000578474544454366, 0.0438903272151947, 0.00017569905321579427, 0.00015352977789007127, 1.4741555452346802, 0.030303843319416046], "tokens": [308, 565, 313, 8058, 1061, 1360, 7798, 29889, 16173, 29918, 19143, 29897, 426]}
{"line_number": 406, "line_type": "generated", "code": "\n    /**\n     * Subtract an integer from the fraction.\n     * @param i the", "entropy": 0.1340583860874176, "is_bug_line": false, "sus_score": 0.28960171341896057, "per_token_entropy": [0.04480069503188133, 1.3686686754226685, 0.22249971330165863, 0.020682265982031822, 0.011955157853662968, 0.0010183630511164665, 0.8055703043937683, 0.003777512814849615, 0.00022456508304458112, 0.16733592748641968, 0.08483752608299255, 0.0828295648097992, 0.03160903975367546, 0.003746040863916278, 0.011505795642733574, 0.0035100297536700964, 0.001177690108306706, 0.00026723151677288115, 0.02546197734773159, 0.0006716379430145025, 0.01769869029521942, 0.03943614661693573], "tokens": [13, 1678, 7762, 13, 268, 334, 3323, 29873, 1461, 385, 6043, 515, 278, 15958, 29889, 13, 268, 334, 732, 3207, 474, 278]}
{"line_number": 402, "line_type": "original", "code": "     * Return the additive inverse of this fraction.", "entropy": 1.9918855428695679, "is_bug_line": false, "sus_score": 0.28814998269081116, "per_token_entropy": [6.950282573699951, 1.8141794204711914, 9.195121765136719, 0.30275970697402954, 3.477802276611328, 0.0025535377208143473, 0.0017437029164284468, 0.015598669648170471, 0.02863580733537674, 0.027625253424048424, 0.09443829208612442], "tokens": [418, 334, 7106, 278, 788, 3321, 16402, 310, 445, 15958, 29889]}
{"line_number": 402, "line_type": "generated", "code": "\n     */\n    public Fraction subtract(Fraction fraction) {\n        return addSub(fraction, false /* subtract */);\n    }\n\n    /**\n     * Subtract an integer from the fraction.\n     * @", "entropy": 0.027123378589749336, "is_bug_line": false, "sus_score": 0.28814998269081116, "per_token_entropy": [0.06048201024532318, 0.04706031456589699, 0.09510449320077896, 0.0017146660247817636, 0.017867326736450195, 0.008489117957651615, 0.002778600202873349, 2.0265558760002023e-06, 0.015339260920882225, 0.0012024560710415244, 0.20535492897033691, 1.0251946150674485e-05, 0.0013581824023276567, 0.002683255122974515, 0.0013735393295064569, 0.001899820752441883, 0.021353697404265404, 0.009684956632554531, 0.008387104608118534, 0.0010471820132806897, 0.0008430502493865788, 0.0004782725009135902, 5.006777428206988e-06, 0.001613387605175376, 0.004262885078787804, 0.05198425054550171, 0.07391561567783356, 0.01478888001292944, 0.001437464845366776, 0.0018086755881085992, 0.015533999539911747, 0.0014851979212835431, 0.0002892790944315493, 0.013971147127449512, 0.014338674955070019, 0.012595273554325104, 0.006220266688615084, 0.007653674576431513, 0.0005849081207998097, 0.2919367551803589, 0.0030497252009809017, 0.00017915551143232733, 0.15409669280052185, 0.08693600445985794, 0.08299042284488678, 0.02699967846274376, 0.0023924082051962614, 0.008588047698140144, 0.0019271865021437407, 0.006194913759827614, 0.0001134808044298552, 0.018008185550570488], "tokens": [13, 268, 3776, 13, 1678, 970, 7347, 428, 23197, 29898, 29943, 13857, 15958, 29897, 426, 13, 4706, 736, 788, 4035, 29898, 29888, 13857, 29892, 2089, 4949, 23197, 3776, 416, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 3323, 29873, 1461, 385, 6043, 515, 278, 15958, 29889, 13, 268, 334, 732]}
{"line_number": 257, "line_type": "original", "code": "        if (den == 0) {", "entropy": 2.2851192951202393, "is_bug_line": false, "sus_score": 0.28622785210609436, "per_token_entropy": [6.440588474273682, 1.5291539430618286, 0.024052027612924576, 2.913066864013672, 7.332633972167969, 1.8238987922668457, 0.14708372950553894, 0.34737521409988403, 0.008220527321100235], "tokens": [308, 565, 313, 1145, 1275, 29871, 29900, 29897, 426]}
{"line_number": 257, "line_type": "generated", "code": "\n        if (numerator", "entropy": 0.7331931591033936, "is_bug_line": false, "sus_score": 0.28622785210609436, "per_token_entropy": [0.15154075622558594, 0.5656704902648926, 1.6096428632736206, 0.020851917564868927, 2.051239490509033, 0.0002134810492862016], "tokens": [13, 4706, 565, 313, 8058, 1061]}
{"line_number": 419, "line_type": "original", "code": "", "entropy": 4.604170322418213, "is_bug_line": false, "sus_score": 0.28552621603012085, "per_token_entropy": [5.180887222290039, 4.027453422546387], "tokens": [29871, 13]}
{"line_number": 419, "line_type": "generated", "code": "\n     * @param fraction fraction to add or subtract, must not be {@code null}.\n     * @param isAdd if {@code true}, add, otherwise subtract\n     * @return a {@code Fraction} instance with the resulting values\n", "entropy": 0.21685510873794556, "is_bug_line": false, "sus_score": 0.28552621603012085, "per_token_entropy": [0.38819003105163574, 0.35287705063819885, 0.04129517078399658, 0.341981440782547, 0.006076907739043236, 0.2690469026565552, 2.0641427040100098, 0.011854439973831177, 0.10586726665496826, 0.252104252576828, 0.00415094243362546, 0.23640015721321106, 0.5781309008598328, 0.010170775465667248, 0.0002787916746456176, 0.24396458268165588, 0.0027646913658827543, 0.004322353284806013, 0.9087430238723755, 0.0036828566808253527, 0.26703035831451416, 0.004468574654310942, 0.0066322204656898975, 0.0029944602865725756, 0.14007410407066345, 0.0011098184622824192, 2.136916160583496, 0.18028731644153595, 0.0009389282786287367, 0.0048152911476790905, 0.32749226689338684, 0.22423948347568512, 0.09102761000394821, 0.1864558607339859, 0.0002579356369096786, 0.5334689617156982, 0.0843118354678154, 0.012295284308493137, 0.009115153923630714, 0.01176843885332346, 0.8643130660057068, 0.15505309402942657, 0.07343034446239471, 0.009104758501052856, 0.0001429217227268964, 0.0012860370334237814, 0.011807198636233807, 0.03273903205990791, 0.00264937081374228, 0.009718603454530239, 0.003359984839335084, 0.061114802956581116], "tokens": [13, 268, 334, 732, 3207, 15958, 15958, 304, 788, 470, 23197, 29892, 1818, 451, 367, 26633, 401, 1870, 1836, 13, 268, 334, 732, 3207, 338, 2528, 565, 26633, 401, 1565, 1118, 788, 29892, 6467, 23197, 13, 268, 334, 732, 2457, 263, 26633, 401, 7347, 428, 29913, 2777, 411, 278, 9819, 1819, 13]}
{"line_number": 399, "line_type": "original", "code": "    }", "entropy": 6.898632049560547, "is_bug_line": false, "sus_score": 0.2824805974960327, "per_token_entropy": [2.3224387168884277, 11.474825859069824], "tokens": [268, 500]}
{"line_number": 399, "line_type": "generated", "code": "\n     * @throws NullArgumentException if the fraction is {@code null}\n     * @throws MathArithmeticException if the resulting numerator or denominator exceeds\n     *  {@code Integer.MAX_VALUE}\n     */", "entropy": 0.050514329224824905, "is_bug_line": false, "sus_score": 0.2824805974960327, "per_token_entropy": [0.15030089020729065, 0.5286215543746948, 0.11543307453393936, 0.011822867207229137, 0.022210190072655678, 3.182837463100441e-05, 0.5936436653137207, 0.0021974719129502773, 6.854299135738984e-05, 0.007161305285990238, 0.004567903000861406, 0.009936511516571045, 0.02794792130589485, 0.004569801967591047, 5.411955135059543e-05, 0.0003297977091278881, 0.00121412449516356, 0.004081848077476025, 0.21934884786605835, 0.10507620871067047, 0.005548552609980106, 0.004802834242582321, 3.6477376852417365e-05, 0.002439501229673624, 0.0009392855572514236, 1.5020257706055418e-05, 6.365573790390044e-05, 0.00451580761000514, 0.0010515881003811955, 0.00852363184094429, 0.0022705032024532557, 3.540453326422721e-05, 0.0014117523096501827, 0.006822860799729824, 0.0001565095444675535, 0.4099406898021698, 0.00034528967808000743, 0.007287231273949146, 0.026222066953778267, 0.0005460678366944194, 0.024071577936410904, 0.012022768147289753, 0.002493250882253051, 0.003020726377144456, 0.0003259842633269727, 0.0028139064088463783, 8.046303264563903e-05, 0.0003620922507252544, 0.001865434111095965, 0.009057387709617615, 0.24382035434246063, 0.03521767258644104], "tokens": [13, 268, 334, 732, 386, 5727, 19014, 15730, 2451, 565, 278, 15958, 338, 26633, 401, 1870, 29913, 13, 268, 334, 732, 386, 5727, 5792, 1433, 18542, 2451, 565, 278, 9819, 4825, 1061, 470, 14267, 1061, 13461, 29879, 13, 268, 334, 29871, 26633, 401, 8102, 29889, 12648, 29918, 19143, 29913, 13, 268, 3776]}
{"line_number": 429, "line_type": "original", "code": "     */", "entropy": 7.006081581115723, "is_bug_line": false, "sus_score": 0.2822396159172058, "per_token_entropy": [6.247107982635498, 7.765055179595947], "tokens": [418, 3776]}
{"line_number": 429, "line_type": "generated", "code": "\n        }\n\n        final int n0 = numerator;\n        final int d0 = denominator;\n        final int n1 = fraction.numerator;\n        final int d1 = fraction.denominator;\n\n       ", "entropy": 0.16278868913650513, "is_bug_line": false, "sus_score": 0.2822396159172058, "per_token_entropy": [0.10032422840595245, 0.27925458550453186, 0.7642727494239807, 0.0392594188451767, 0.6235494613647461, 0.04306339845061302, 1.5468904972076416, 0.12390465289354324, 1.7778069972991943, 0.7654802203178406, 0.06290522962808609, 0.7695391178131104, 8.106198947643861e-06, 0.019155630841851234, 0.017791559919714928, 0.017880674451589584, 0.04901352524757385, 0.0014186566695570946, 0.3794502019882202, 0.007374683395028114, 0.0006485265912488103, 0.004881369415670633, 2.13382354559144e-05, 0.0010786197381094098, 0.002823891816660762, 0.11112450808286667, 0.023223083466291428, 0.0007969540893100202, 0.013595016673207283, 0.006749924272298813, 0.0032881025690585375, 0.0013427060330286622, 0.0004942387458868325, 0.45404738187789917, 1.8954096958623268e-05, 0.0032599421683698893, 0.0024947968777269125, 0.0026038335636258125, 0.002311417367309332, 0.00015937011630740017, 0.0008790204883553088, 0.0006778326351195574, 0.0005429700831882656, 0.0010933857411146164, 3.0517112463712692e-05, 0.0011014830088242888, 8.284702198579907e-05, 7.271740287251305e-06, 0.0010186012368649244, 0.001680511049926281, 0.3818303644657135, 0.05275961756706238], "tokens": [13, 4706, 500, 13, 13, 4706, 2186, 938, 302, 29900, 353, 4825, 1061, 29936, 13, 4706, 2186, 938, 270, 29900, 353, 14267, 1061, 29936, 13, 4706, 2186, 938, 302, 29896, 353, 15958, 29889, 8058, 1061, 29936, 13, 4706, 2186, 938, 270, 29896, 353, 15958, 29889, 1145, 5817, 1061, 29936, 13, 13, 4706]}
{"line_number": 425, "line_type": "original", "code": "     * @return a {@code Fraction} instance with the resulting values", "entropy": 0.6885364651679993, "is_bug_line": false, "sus_score": 0.28147459030151367, "per_token_entropy": [5.193268775939941, 1.7559033632278442, 0.7437893152236938, 1.7964190244674683, 0.5887759327888489, 0.09467212110757828, 0.016188016161322594, 0.014551819302141666, 4.434487345861271e-05, 0.002733900910243392, 0.006720795761793852, 0.03563568741083145, 0.0026801638305187225, 0.05353822931647301, 0.023125357925891876], "tokens": [418, 334, 732, 2457, 263, 26633, 401, 7347, 428, 29913, 2777, 411, 278, 9819, 1819]}
{"line_number": 425, "line_type": "generated", "code": "\n     */\n    private Fraction addSub(Fraction fraction, boolean isAdd) {\n        if (fraction == null) {\n            throw new NullArgumentException();\n        }\n\n        int aNumerator   = this", "entropy": 0.15250134468078613, "is_bug_line": false, "sus_score": 0.28147459030151367, "per_token_entropy": [0.05957716330885887, 0.1248105987906456, 0.0887414813041687, 0.0003623305819928646, 0.023684093728661537, 0.0384068563580513, 0.006177379284054041, 7.152555099310121e-07, 0.0008972433279268444, 2.729855441430118e-05, 0.004743631929159164, 0.3280375897884369, 8.4638240878121e-06, 0.002402516780421138, 0.0013821106404066086, 0.08250909298658371, 0.00023922442051116377, 7.199982064776123e-05, 0.009665240533649921, 0.027108512818813324, 0.001979060238227248, 0.16695871949195862, 0.8413893580436707, 0.02139057032763958, 0.10560289770364761, 4.827859811484814e-05, 0.04748716577887535, 0.0021621440537273884, 0.014040620066225529, 0.0027807399164885283, 0.005698980763554573, 0.03561221808195114, 0.015516863204538822, 0.02341279946267605, 0.006622983608394861, 0.0011117237154394388, 3.671578815556131e-05, 0.40572312474250793, 0.002460549585521221, 0.005644099321216345, 0.0011561383726075292, 0.0018467529444023967, 0.5773285031318665, 0.04549076035618782, 1.5816844701766968, 1.0363160371780396, 0.6774857640266418, 0.021964386105537415, 0.05115300416946411, 0.6828450560569763, 6.09140915912576e-05, 0.7482042908668518], "tokens": [13, 268, 3776, 13, 1678, 2024, 7347, 428, 788, 4035, 29898, 29943, 13857, 15958, 29892, 7223, 338, 2528, 29897, 426, 13, 4706, 565, 313, 29888, 13857, 1275, 1870, 29897, 426, 13, 9651, 3183, 716, 19014, 15730, 2451, 890, 13, 4706, 500, 13, 13, 4706, 938, 263, 29940, 4680, 1061, 259, 353, 445]}
{"line_number": 407, "line_type": "original", "code": "            throw new MathArithmeticException(LocalizedFormats.OVERFLOW_IN_FRACTION, numerator, denominator);", "entropy": 0.879357635974884, "is_bug_line": false, "sus_score": 0.2811228036880493, "per_token_entropy": [10.548389434814453, 4.995204448699951, 0.09983477741479874, 0.15729261934757233, 0.00941633339971304, 1.490105023549404e-05, 0.0004817279113922268, 0.44315147399902344, 0.1944754272699356, 0.004785987548530102, 0.05058754235506058, 1.2993727978027891e-05, 0.012425039894878864, 0.922013521194458, 2.634490556374658e-05, 0.0001820160250645131, 2.8609820219571702e-05, 0.0774124264717102, 0.5747156739234924, 0.000336590368533507, 0.26555222272872925, 3.1709168979432434e-05, 3.683499380713329e-05, 3.6922099590301514, 3.134349822998047, 0.014803210273385048, 0.3440115451812744, 0.4215134382247925, 0.00010978573118336499, 0.41732096672058105], "tokens": [632, 3183, 716, 5792, 1433, 18542, 2451, 29898, 7717, 1891, 2500, 1446, 29889, 29949, 5348, 29943, 27998, 29918, 1177, 29918, 29943, 4717, 9838, 29892, 4825, 1061, 29892, 14267, 1061, 416]}
{"line_number": 407, "line_type": "generated", "code": "\n    /**\n     * Subtract an integer from the fraction.\n     * @param i the", "entropy": 0.1208752766251564, "is_bug_line": false, "sus_score": 0.2811228036880493, "per_token_entropy": [0.04835167154669762, 0.9131039977073669, 0.14397872984409332, 0.018405599519610405, 0.019481509923934937, 0.0007889734115451574, 1.0040373802185059, 0.0030303532257676125, 0.00021908267808612436, 0.16581419110298157, 0.11164173483848572, 0.08909071981906891, 0.03240013122558594, 0.003916570916771889, 0.010792340151965618, 0.004824189003556967, 0.0018565100617706776, 0.00040046300273388624, 0.023631587624549866, 0.0006423317245207727, 0.02348383329808712, 0.039364174008369446], "tokens": [13, 1678, 7762, 13, 268, 334, 3323, 29873, 1461, 385, 6043, 515, 278, 15958, 29889, 13, 268, 334, 732, 3207, 474, 278]}
{"line_number": 435, "line_type": "original", "code": "     * Add an integer to the fraction.", "entropy": 3.3554701805114746, "is_bug_line": false, "sus_score": 0.2781065106391907, "per_token_entropy": [6.0025315284729, 7.246088027954102, 7.24437141418457, 6.647521495819092, 0.15158694982528687, 0.910516083240509, 0.9064629673957825, 0.8646693229675293, 0.22548456490039825], "tokens": [418, 334, 3462, 385, 6043, 304, 278, 15958, 29889]}
{"line_number": 435, "line_type": "generated", "code": "\n        }\n\n        // if the denominators match, we can simply use integer arithmetic\n        if (denominator == fraction.denominator) {\n            if (isAdd) {\n                return new Fraction(numerator +", "entropy": 0.38178661465644836, "is_bug_line": false, "sus_score": 0.2781065106391907, "per_token_entropy": [0.19929693639278412, 0.7405329346656799, 0.26999005675315857, 0.02673218585550785, 0.9048535823822021, 0.09711924195289612, 0.6793322563171387, 1.3528673648834229, 1.9951417446136475, 0.4398980140686035, 0.10032530874013901, 0.324767529964447, 0.011567780748009682, 1.556859016418457, 1.5747802257537842, 2.0858802795410156, 1.6035094261169434, 1.3421109914779663, 0.22858327627182007, 1.1456239223480225, 0.16062934696674347, 0.2294193059206009, 0.005325061734765768, 0.20203398168087006, 4.100715523236431e-05, 0.00038985759601928294, 0.01783922128379345, 0.001329253427684307, 3.313963316031732e-05, 0.004302174784243107, 1.6689160474925302e-05, 1.4662635294371285e-05, 0.00998714566230774, 0.001745130866765976, 0.005242410581558943, 0.1770300269126892, 1.8684026002883911, 0.010263639502227306, 0.026187924668192863, 0.00022885564249008894, 0.018578913062810898, 0.0029735418502241373, 0.003780125407502055, 0.20552460849285126, 0.07042553275823593, 0.091611348092556, 0.003426991170272231, 5.364403477869928e-06, 0.004789427854120731, 0.047540705651044846, 1.4305104514278355e-06, 0.004010967444628477], "tokens": [13, 4706, 500, 13, 13, 4706, 849, 565, 278, 14267, 4097, 1993, 29892, 591, 508, 3763, 671, 6043, 23342, 13, 4706, 565, 313, 1145, 5817, 1061, 1275, 15958, 29889, 1145, 5817, 1061, 29897, 426, 13, 9651, 565, 313, 275, 2528, 29897, 426, 13, 18884, 736, 716, 7347, 428, 29898, 8058, 1061, 718]}
{"line_number": 439, "line_type": "original", "code": "    public Fraction add(final int i) {", "entropy": 2.0252373218536377, "is_bug_line": false, "sus_score": 0.26878058910369873, "per_token_entropy": [6.338847637176514, 10.82685661315918, 1.5570991039276123, 0.00015507926582358778, 0.9207872152328491, 0.29425057768821716, 1.3725619316101074, 0.5961976051330566, 0.29840323328971863, 0.04315325990319252, 0.02929729036986828], "tokens": [268, 970, 7347, 428, 788, 29898, 8394, 938, 474, 29897, 426]}
{"line_number": 439, "line_type": "generated", "code": "\n        final int d1 = Math.abs(denominator);\n        final int d2 = Math.abs(fraction.denominator);\n        final int n1 = numerator;\n        final int n2 = fraction.", "entropy": 0.1747300624847412, "is_bug_line": false, "sus_score": 0.26878058910369873, "per_token_entropy": [0.13564790785312653, 0.81177818775177, 1.660240650177002, 0.28560730814933777, 0.19863179326057434, 0.126905158162117, 0.046509258449077606, 1.5620733499526978, 0.14543797075748444, 0.3765237629413605, 0.009984549134969711, 0.17256876826286316, 2.95634672511369e-05, 0.00012087091454304755, 0.027512649074196815, 0.019810905680060387, 0.1364416778087616, 0.034001417458057404, 0.004203176125884056, 0.0320977158844471, 0.0035770260728895664, 0.0015194787411019206, 0.0029118540696799755, 0.00022265815641731024, 0.00012194366718176752, 0.0011411352315917611, 0.003315549110993743, 0.00036221143091097474, 0.000387831823900342, 0.07359836995601654, 1.6927575416048057e-05, 1.4185804502631072e-05, 0.001593392575159669, 0.00323320715688169, 0.3377506136894226, 0.6033450365066528, 0.1290893256664276, 0.7316914796829224, 0.09769025444984436, 0.02398545667529106, 0.6590060591697693, 3.4570634852570947e-06, 0.5640124082565308, 0.020526250824332237, 0.01747426763176918, 0.009724978357553482, 0.0007782529573887587, 0.003442435059696436, 0.0003985564399044961, 0.0011302995262667537, 0.007426748517900705, 0.00034517052699811757], "tokens": [13, 4706, 2186, 938, 270, 29896, 353, 5792, 29889, 6897, 29898, 1145, 5817, 1061, 416, 13, 4706, 2186, 938, 270, 29906, 353, 5792, 29889, 6897, 29898, 29888, 13857, 29889, 1145, 5817, 1061, 416, 13, 4706, 2186, 938, 302, 29896, 353, 4825, 1061, 29936, 13, 4706, 2186, 938, 302, 29906, 353, 15958, 29889]}
{"line_number": 271, "line_type": "original", "code": "        final int d = ArithmeticUtils.gcd(num, den);", "entropy": 1.54595148563385, "is_bug_line": false, "sus_score": 0.21573852002620697, "per_token_entropy": [8.382606506347656, 6.10975980758667, 1.555408000946045, 1.3136543035507202, 0.3083818852901459, 2.697887420654297, 0.015663569793105125, 0.015371543355286121, 0.0020189157221466303, 0.013104505836963654, 0.00015448330668732524, 0.04823104292154312, 4.102158546447754, 0.07310307770967484, 0.06016518175601959, 0.03755437210202217], "tokens": [308, 2186, 938, 270, 353, 826, 18542, 12177, 29889, 29887, 2252, 29898, 1949, 29892, 972, 416]}
{"line_number": 271, "line_type": "generated", "code": "\n    /**\n     * Gets the fraction as a", "entropy": 0.13682997226715088, "is_bug_line": false, "sus_score": 0.21573852002620697, "per_token_entropy": [0.05423324555158615, 0.3330080509185791, 0.059436649084091187, 0.030987223610281944, 0.005024900194257498, 0.00028153270250186324, 0.701590895652771, 0.0003828269545920193, 0.09903860837221146, 0.13444767892360687, 0.025465000420808792, 0.19806310534477234], "tokens": [13, 1678, 7762, 13, 268, 334, 402, 1691, 278, 15958, 408, 263]}
{"line_number": 385, "line_type": "original", "code": "     */", "entropy": 4.4315643310546875, "is_bug_line": false, "sus_score": 0.21573852002620697, "per_token_entropy": [5.831928253173828, 3.031200885772705], "tokens": [418, 3776]}
{"line_number": 385, "line_type": "generated", "code": "\n    /**\n     *", "entropy": 0.21509075164794922, "is_bug_line": false, "sus_score": 0.21573852002620697, "per_token_entropy": [0.12930376827716827, 0.7842936515808105, 0.2628101706504822, 0.016337674111127853, 0.09575767815113068, 0.002041638595983386], "tokens": [13, 1678, 7762, 13, 268, 334]}
