{"line_number": 417, "line_type": "original", "code": "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;", "entropy": 1.0940951108932495, "is_bug_line": true, "sus_score": 0.49597635865211487, "per_token_entropy": [5.062685966491699, 4.33624792098999, 2.747331380844116, 4.045945644378662, 0.003676918102428317, 3.442505121231079, 0.032101526856422424, 0.0021092090755701065, 0.034668341279029846, 0.007709510624408722, 0.0707927718758583, 0.029662584885954857, 0.0010337253334000707, 0.0011960265692323446, 0.0004024887748528272, 0.0006243425305001438, 0.0029962430708110332, 0.025161292403936386, 0.11043036729097366, 4.308608531951904, 0.06952185928821564, 0.004715037997812033, 0.8240600824356079], "tokens": [308, 736, 313, 11843, 29889, 275, 19377, 29898, 29916, 29897, 2607, 11599, 29889, 275, 19377, 29898, 29891, 876, 3830, 921, 1275, 343, 29936]}
{"line_number": 417, "line_type": "generated", "code": "\n     * @param x first value\n     * @param y second value\n     * @param maxUlps {@code (maxUlps - 1)} is the number of floating point\n     * values between {@code x} and", "entropy": 0.05402205139398575, "is_bug_line": true, "sus_score": 0.49597635865211487, "per_token_entropy": [0.4875640869140625, 0.7592090964317322, 0.03185190632939339, 0.9815806746482849, 0.010226588696241379, 0.00857930164784193, 0.015569796785712242, 0.0018903020536527038, 0.006575613748282194, 0.029637357220053673, 4.100715523236431e-05, 0.000998594332486391, 0.0005485698929987848, 0.00021026308240834624, 0.0009515525307506323, 0.001931469771079719, 0.0009253510506823659, 0.04551023617386818, 0.0003828269545920193, 0.002114800037816167, 0.053012553602457047, 0.003200054634362459, 0.00027247529942542315, 0.0069524990394711494, 1.9073468138230965e-06, 9.178694017464295e-05, 3.6477376852417365e-05, 2.729855441430118e-05, 0.0008597253472544253, 6.222531374078244e-05, 0.002124673454090953, 1.0728830375228426e-06, 2.145764938177308e-06, 2.109982233378105e-05, 4.887569048150908e-06, 0.0005035324720665812, 9.989239333663136e-05, 0.00035232058144174516, 0.023353291675448418, 1.2874520507466514e-05, 0.0008905735448934138, 0.0011536378879100084, 0.22316434979438782, 0.014700899831950665, 0.0004814896092284471, 0.08109130710363388, 0.0021647608373314142, 0.007696616463363171, 7.510157047363464e-06, 3.075552376685664e-05, 0.0004462200158741325, 2.6225699912174605e-05], "tokens": [13, 268, 334, 732, 3207, 921, 937, 995, 13, 268, 334, 732, 3207, 343, 1473, 995, 13, 268, 334, 732, 3207, 4236, 29965, 29880, 567, 26633, 401, 313, 3317, 29965, 29880, 567, 448, 29871, 29896, 2915, 338, 278, 1353, 310, 16526, 1298, 13, 268, 334, 1819, 1546, 26633, 401, 921, 29913, 322]}
{"line_number": 529, "line_type": "original", "code": "        for (int i = 0; i < x.length; ++i) {", "entropy": 1.2828936576843262, "is_bug_line": false, "sus_score": 0.4538898766040802, "per_token_entropy": [4.9500346183776855, 9.131409645080566, 0.8520950675010681, 0.12039259076118469, 0.09534650295972824, 0.03876299038529396, 0.18395641446113586, 2.8297204971313477, 0.027638008818030357, 0.05089268833398819, 0.26064935326576233, 5.059335708618164, 0.23707132041454315, 0.0021673778537660837, 0.017174450680613518, 0.4733923673629761, 0.0019169541774317622, 0.009923646226525307, 0.03309614956378937], "tokens": [308, 363, 313, 524, 474, 353, 29871, 29900, 29936, 474, 529, 921, 29889, 2848, 29936, 8445, 29875, 29897, 426]}
{"line_number": 529, "line_type": "generated", "code": "\n     * @return", "entropy": 0.14413924515247345, "is_bug_line": false, "sus_score": 0.4538898766040802, "per_token_entropy": [0.3018161356449127, 0.2479734867811203, 0.02650989592075348, 0.04263260215520859, 0.10176412761211395], "tokens": [13, 268, 334, 732, 2457]}
{"line_number": 523, "line_type": "original", "code": "        if ((x == null) || (y == null)) {", "entropy": 2.0255796909332275, "is_bug_line": false, "sus_score": 0.4533125162124634, "per_token_entropy": [7.195310592651367, 7.719878196716309, 4.503151893615723, 5.270713806152344, 2.2936882972717285, 0.8659761548042297, 0.0063962978310883045, 0.30158647894859314, 0.07165712863206863, 0.09966614097356796, 0.0007967158453539014, 0.0006550788530148566, 0.01755661703646183, 0.011079810559749603], "tokens": [308, 565, 5135, 29916, 1275, 1870, 29897, 3830, 313, 29891, 1275, 1870, 876, 426]}
{"line_number": 523, "line_type": "generated", "code": "\n     * is guaranteed to fit in a", "entropy": 0.6121914982795715, "is_bug_line": false, "sus_score": 0.4533125162124634, "per_token_entropy": [0.9707382321357727, 0.22853964567184448, 0.019026979804039, 2.1030101776123047, 1.7636858224868774, 0.03370201960206032, 0.019828086718916893, 0.3649977445602417, 0.006194913759827614], "tokens": [13, 268, 334, 338, 22688, 304, 6216, 297, 263]}
{"line_number": 526, "line_type": "original", "code": "        if (x.length != y.length) {", "entropy": 1.8986842632293701, "is_bug_line": false, "sus_score": 0.44919633865356445, "per_token_entropy": [5.637042045593262, 4.4673919677734375, 0.053008146584033966, 6.111059188842773, 5.617774486541748, 0.2888603210449219, 0.44909220933914185, 0.13213367760181427, 0.00312673463486135, 0.0006363751017488539, 0.012454237788915634, 0.011630703695118427], "tokens": [308, 565, 313, 29916, 29889, 2848, 2804, 343, 29889, 2848, 29897, 426]}
{"line_number": 526, "line_type": "generated", "code": "\n     *\n     * @param n Argument.\n     * @return", "entropy": 0.16363419592380524, "is_bug_line": false, "sus_score": 0.44919633865356445, "per_token_entropy": [0.13070769608020782, 0.3697511851787567, 0.11440886557102203, 1.1050667762756348, 0.020160289481282234, 0.002564120339229703, 0.0194417592138052, 0.003149075899273157, 0.007109344471246004, 0.7238274216651917, 0.00210564024746418, 0.0025789830833673477, 0.05451041832566261, 0.0010193157941102982, 0.04970761016011238, 0.012038432992994785], "tokens": [13, 268, 334, 13, 268, 334, 732, 3207, 302, 23125, 29889, 13, 268, 334, 732, 2457]}
{"line_number": 530, "line_type": "original", "code": "            if (!equals(x[i], y[i])) {", "entropy": 2.556432008743286, "is_bug_line": false, "sus_score": 0.44513213634490967, "per_token_entropy": [5.474597930908203, 3.0907700061798096, 6.28857946395874, 9.367177963256836, 0.2168704867362976, 4.993058681488037, 5.064303874969482, 0.18102476000785828, 0.11824365705251694, 0.4696095883846283, 0.014938394539058208, 0.02377093769609928, 0.42454221844673157, 0.06255725026130676], "tokens": [632, 565, 5384, 10954, 29898, 29916, 29961, 29875, 1402, 343, 29961, 29875, 12622, 426]}
{"line_number": 530, "line_type": "generated", "code": "\n     * @throws IllegalArgumentException if", "entropy": 0.1540347933769226, "is_bug_line": false, "sus_score": 0.44513213634490967, "per_token_entropy": [0.3882915675640106, 0.42416611313819885, 0.23725301027297974, 0.06518455594778061, 0.04595573619008064, 0.0002119316632160917, 0.4922509789466858, 0.0001842805795604363, 0.0011131525970995426, 0.0005068686441518366, 0.03926434740424156], "tokens": [13, 268, 334, 732, 386, 5727, 1720, 12018, 15730, 2451, 565]}
{"line_number": 524, "line_type": "original", "code": "            return !((x == null) ^ (y == null));", "entropy": 1.7195088863372803, "is_bug_line": false, "sus_score": 0.42861422896385193, "per_token_entropy": [4.793889045715332, 4.053439140319824, 8.411599159240723, 5.495167255401611, 1.1331260204315186, 0.046845003962516785, 0.06711798906326294, 0.0038528037257492542, 0.015730343759059906, 0.0015254301251843572, 0.0014019908849149942, 0.0005594118847511709, 0.0013143719406798482, 0.04755787178874016], "tokens": [632, 736, 1738, 3552, 29916, 1275, 1870, 29897, 6228, 313, 29891, 1275, 1870, 2483]}
{"line_number": 524, "line_type": "generated", "code": "\n     * an", "entropy": 0.5615299940109253, "is_bug_line": false, "sus_score": 0.42861422896385193, "per_token_entropy": [0.48974865674972534, 0.16676278412342072, 0.008196407929062843, 1.5814120769500732], "tokens": [13, 268, 334, 385]}
{"line_number": 527, "line_type": "original", "code": "            return false;", "entropy": 5.238506317138672, "is_bug_line": false, "sus_score": 0.41407132148742676, "per_token_entropy": [9.288800239562988, 3.238765239715576, 8.413474082946777, 0.012984370812773705], "tokens": [632, 736, 2089, 29936]}
{"line_number": 527, "line_type": "generated", "code": "\n     * @param n Argument.\n     * @return", "entropy": 0.12108360230922699, "is_bug_line": false, "sus_score": 0.41407132148742676, "per_token_entropy": [0.09356562048196793, 0.1652723103761673, 0.07107049971818924, 0.2193845510482788, 0.007796334568411112, 0.0062417094595730305, 0.8877941370010376, 0.0017952292691916227, 0.002432247158139944, 0.06479480117559433, 0.0011647114297375083, 0.037986211478710175, 0.014788293279707432], "tokens": [13, 268, 334, 732, 3207, 302, 23125, 29889, 13, 268, 334, 732, 2457]}
{"line_number": 534, "line_type": "original", "code": "        return true;", "entropy": 5.238568305969238, "is_bug_line": false, "sus_score": 0.41120490431785583, "per_token_entropy": [9.376057624816895, 2.6674561500549316, 8.897536277770996, 0.013221568427979946], "tokens": [308, 736, 1565, 29936]}
{"line_number": 534, "line_type": "generated", "code": "\n    public static long factorial(int n) {\n        if (n", "entropy": 0.09161580353975296, "is_bug_line": false, "sus_score": 0.41120490431785583, "per_token_entropy": [0.12735247611999512, 0.24854451417922974, 0.14163361489772797, 0.025012250989675522, 0.13112957775592804, 0.015059235505759716, 1.0132738680113107e-05, 0.02322389930486679, 0.3807770013809204, 0.0014319891342893243, 0.014049435965716839, 0.09089231491088867, 0.00774192251265049, 0.1556195169687271, 0.15989916026592255, 0.02942277491092682, 0.005668873433023691], "tokens": [13, 1678, 970, 2294, 1472, 7329, 616, 29898, 524, 302, 29897, 426, 13, 4706, 565, 313, 29876]}
{"line_number": 33, "line_type": "original", "code": "public final class MathUtils {", "entropy": 2.9777019023895264, "is_bug_line": false, "sus_score": 0.31384432315826416, "per_token_entropy": [5.51829195022583, 5.530359268188477, 6.208447456359863, 0.3955109417438507, 0.012349684722721577, 0.2012523114681244], "tokens": [970, 2186, 770, 5792, 12177, 426]}
{"line_number": 33, "line_type": "generated", "code": "\n    public static int addExact(int x, int y) {\n        int r = x + y;\n        // HD 2-12 Overflow iff both arguments have the opposite sign of the result\n        if (((x", "entropy": 0.10130495578050613, "is_bug_line": false, "sus_score": 0.31384432315826416, "per_token_entropy": [0.11296205222606659, 0.4353288412094116, 0.06081174686551094, 0.008737428113818169, 0.045651357620954514, 0.0076049333438277245, 0.5329267978668213, 7.414542778860778e-05, 0.010088051669299603, 0.12448825687170029, 0.0010311054065823555, 0.00028320116689428687, 0.16229653358459473, 0.0003597089380491525, 0.006486078258603811, 0.11873064190149307, 0.006758686620742083, 0.14097826182842255, 0.908139169216156, 1.0190238952636719, 0.005344744771718979, 0.026429906487464905, 0.0008934320067055523, 0.00019786784832831472, 0.0015792291378602386, 0.002917678328230977, 0.01821504719555378, 0.47128909826278687, 0.7079088091850281, 0.0031565623357892036, 3.111314072157256e-05, 0.0008388814167119563, 0.000727508042473346, 4.410734163684538e-06, 0.017809828743338585, 0.00013255194062367082, 0.0008506731828674674, 0.0872926414012909, 0.0016124354442581534, 0.0007117837085388601, 0.00017033556650858372, 0.003280022880062461, 0.002411317080259323, 0.001759410952217877, 0.005877118557691574, 0.0006755692302249372, 0.0013511584838852286, 0.005885177291929722, 0.0018630543490871787, 0.1807641088962555, 0.007612031884491444, 0.005503146909177303], "tokens": [13, 1678, 970, 2294, 938, 788, 1252, 627, 29898, 524, 921, 29892, 938, 343, 29897, 426, 13, 4706, 938, 364, 353, 921, 718, 343, 29936, 13, 4706, 849, 18435, 29871, 29906, 29899, 29896, 29906, 28845, 565, 29888, 1716, 6273, 505, 278, 11564, 1804, 310, 278, 1121, 13, 4706, 565, 313, 3552, 29916]}
{"line_number": 75, "line_type": "original", "code": "    private static final long[] FACTORIALS = new long[] {", "entropy": 1.539355993270874, "is_bug_line": false, "sus_score": 0.31384432315826416, "per_token_entropy": [2.047602415084839, 8.717117309570312, 0.12868565320968628, 3.6659693717956543, 0.3889160454273224, 3.201796531677246, 3.9149513244628906, 0.001642665360122919, 0.23891597986221313, 0.0037047103978693485, 0.015742547810077667, 0.317920058965683, 1.7440775632858276, 0.07431123405694962, 0.10285761207342148, 0.06548628211021423], "tokens": [268, 2024, 2294, 2186, 1472, 2636, 13515, 1783, 1955, 25758, 29903, 353, 716, 1472, 2636, 426]}
{"line_number": 75, "line_type": "generated", "code": "\n     *\n     * @param a an addend\n     * @param b an addend\n     * @param pattern Message pattern providing the name of the function and the\n     * values of {@code a} and {@code b}.\n", "entropy": 0.16685347259044647, "is_bug_line": false, "sus_score": 0.31384432315826416, "per_token_entropy": [0.2195868045091629, 0.10237833112478256, 0.003796157892793417, 0.3231433629989624, 0.013876628130674362, 0.0007245299639180303, 0.013713432475924492, 0.0014221088495105505, 0.050927355885505676, 0.09463980048894882, 0.005650263279676437, 0.0006672301678918302, 0.0037560169585049152, 0.013940699398517609, 0.0007996936910785735, 0.0002588890492916107, 0.000288087350782007, 0.00039939055568538606, 0.0061607928946614265, 0.00039498155820183456, 0.00016842853801790625, 0.0011891205795109272, 0.014024515636265278, 0.00018010901112575084, 0.001050516264513135, 0.0732077807188034, 0.01612420566380024, 0.35710328817367554, 0.025032714009284973, 0.28562361001968384, 0.014981729909777641, 0.3656291365623474, 0.0040728249587118626, 0.0008077934035100043, 0.29255959391593933, 0.3852803409099579, 1.1804656982421875, 0.3003934919834137, 0.0030746827833354473, 5.94836674281396e-05, 2.2969627380371094, 0.15052232146263123, 1.4337013959884644, 0.0029362207278609276, 0.04639682546257973, 0.0919932872056961, 0.006089941132813692, 0.0038925844710320234, 0.0005797850899398327, 0.005435212515294552, 0.4037795662879944, 0.05653690919280052], "tokens": [13, 268, 334, 13, 268, 334, 732, 3207, 263, 385, 788, 355, 13, 268, 334, 732, 3207, 289, 385, 788, 355, 13, 268, 334, 732, 3207, 4766, 7777, 4766, 13138, 278, 1024, 310, 278, 740, 322, 278, 13, 268, 334, 1819, 310, 26633, 401, 263, 29913, 322, 26633, 401, 289, 1836, 13]}
