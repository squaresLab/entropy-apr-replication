{"line_number": 347, "line_type": "original", "code": "            columnsToDrop.add(col);", "entropy": 2.7177062034606934, "is_bug_line": false, "sus_score": 0.5815082788467407, "per_token_entropy": [9.839653015136719, 9.572807312011719, 0.47625166177749634, 0.2037573754787445, 0.9977195262908936, 0.12148015946149826, 0.042426615953445435, 2.933358669281006, 0.2719014585018158], "tokens": [632, 4341, 1762, 15063, 29889, 1202, 29898, 1054, 416]}
{"line_number": 347, "line_type": "generated", "code": "\n        final double[] solution = new double[getNumObjectiveFunctions()];\n        final double[] coefficients = new double[getNumObjectiveFunctions()];\n        final double[] costs = new double[getNumObjectiveFunctions", "entropy": 0.36500346660614014, "is_bug_line": false, "sus_score": 0.5815082788467407, "per_token_entropy": [0.14432653784751892, 0.48304814100265503, 1.2575751543045044, 1.015089750289917, 0.25433099269866943, 1.3529655933380127, 0.1371377408504486, 0.09113230556249619, 0.003461918095126748, 0.006454454734921455, 0.31961825489997864, 0.6309464573860168, 1.1935449838638306, 0.04004963859915733, 0.006729676853865385, 0.000474936212413013, 0.0007204797584563494, 0.42728179693222046, 0.005104248411953449, 0.24146032333374023, 1.40566086769104, 0.29349565505981445, 0.07592154294252396, 2.157808303833008, 0.010815807618200779, 0.49625179171562195, 0.0026945495046675205, 0.0030478236731141806, 0.10806453973054886, 0.1979464441537857, 0.07525040209293365, 0.0008683010237291455, 0.003060540184378624, 0.00038675934774801135, 0.00037651124875992537, 0.16662666201591492, 0.005117413122206926, 0.3052571415901184, 1.5847488641738892, 0.5203513503074646, 0.2031138688325882, 3.4037203788757324, 0.02010689675807953, 0.2504023015499115, 0.012053391896188259, 0.0024775543715804815, 0.029047084972262383, 0.013202980160713196, 0.01651439443230629, 0.0008175606490112841, 0.0032430693972855806, 0.00027378625236451626], "tokens": [13, 4706, 2186, 3765, 2636, 1650, 353, 716, 3765, 29961, 657, 8009, 2061, 573, 6678, 29879, 580, 1385, 13, 4706, 2186, 3765, 2636, 16127, 353, 716, 3765, 29961, 657, 8009, 2061, 573, 6678, 29879, 580, 1385, 13, 4706, 2186, 3765, 2636, 21544, 353, 716, 3765, 29961, 657, 8009, 2061, 573, 6678, 29879]}
{"line_number": 337, "line_type": "original", "code": "            final double entry = tableau.getEntry(0, i);", "entropy": 0.8942226767539978, "is_bug_line": false, "sus_score": 0.5685623288154602, "per_token_entropy": [7.593540668487549, 4.238103866577148, 0.23153121769428253, 0.6866796612739563, 0.20910455286502838, 0.15161634981632233, 0.00012444675667211413, 0.0008250646642409265, 0.0005380851216614246, 0.000990615226328373, 0.0019873883575201035, 0.20347575843334198, 0.0005208089714869857, 0.040611933916807175, 0.05368918180465698], "tokens": [632, 2186, 3765, 6251, 353, 1591, 585, 29889, 657, 9634, 29898, 29900, 29892, 474, 416]}
{"line_number": 337, "line_type": "generated", "code": "\n        }\n        return true;\n    }\n\n    /**\n     * Returns whether the problem is at an infeasible state.\n     * @return whether the model is infeasible\n     */\n    boolean isIn", "entropy": 0.13900047540664673, "is_bug_line": false, "sus_score": 0.5685623288154602, "per_token_entropy": [0.10099266469478607, 0.5768575668334961, 0.004840560257434845, 0.0027769359294325113, 0.23711363971233368, 0.03351401537656784, 0.02577175199985504, 0.0005709686665795743, 0.0008912881603464484, 0.01376305241137743, 0.0006420934805646539, 0.0013448490062728524, 0.026443954557180405, 0.04884268343448639, 0.05130499601364136, 0.05937553942203522, 0.00145329674705863, 0.0008370947907678783, 1.1670607328414917, 0.5063076615333557, 0.11100705713033676, 0.3482711613178253, 0.22326228022575378, 1.1404669284820557, 0.49505212903022766, 0.888641357421875, 0.0003466005437076092, 0.0005900310934521258, 0.0024845702573657036, 0.015321534126996994, 0.028063373640179634, 0.011025930754840374, 0.003270873799920082, 0.0016627785516902804, 0.02586073987185955, 0.007481059525161982, 0.056372981518507004, 0.016607843339443207, 0.3911598026752472, 0.3374306261539459, 0.1275620460510254, 0.013077208772301674, 0.001191025716252625, 0.0028024944476783276, 0.025053640827536583, 0.002029622904956341, 0.008306833915412426, 0.00011228884250158444, 0.005260316655039787, 0.05130510777235031, 0.005329567473381758, 0.020909590646624565], "tokens": [13, 4706, 500, 13, 4706, 736, 1565, 29936, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 16969, 3692, 278, 1108, 338, 472, 385, 297, 1725, 294, 1821, 2106, 29889, 13, 268, 334, 732, 2457, 3692, 278, 1904, 338, 297, 1725, 294, 1821, 13, 268, 3776, 13, 1678, 7223, 338, 797]}
{"line_number": 279, "line_type": "original", "code": "     * @param relationship relationship to count", "entropy": 4.349152088165283, "is_bug_line": false, "sus_score": 0.5680932998657227, "per_token_entropy": [6.845088958740234, 8.633362770080566, 3.1194100379943848, 0.7967029213905334, 9.46176528930664, 1.8095240592956543, 1.0293755531311035, 3.097986936569214], "tokens": [418, 334, 732, 3207, 9443, 9443, 304, 2302]}
{"line_number": 279, "line_type": "generated", "code": "\n            // remove the objective function\n            removeRow(getHeight() - 1);\n            final RealVector coefficients = getRow(getHeight() - 1);\n            final int numArtificialVariables = getNumArtificial", "entropy": 0.5863906145095825, "is_bug_line": false, "sus_score": 0.5680932998657227, "per_token_entropy": [0.1411880999803543, 0.3021787405014038, 1.4909634590148926, 1.7547065019607544, 1.085845947265625, 1.5086158514022827, 0.15332305431365967, 0.46795040369033813, 0.05991225317120552, 2.1339147090911865, 0.46445441246032715, 0.026264915242791176, 1.6458948850631714, 0.44344258308410645, 0.004032695200294256, 0.020688338205218315, 0.025936361402273178, 0.03750086575746536, 0.009602075442671776, 0.007897225208580494, 1.115210771560669, 2.917121410369873, 1.5930424928665161, 0.1664409637451172, 2.1495423316955566, 0.03678182512521744, 0.4996882677078247, 1.2434272766113281, 0.2561706006526947, 0.3717016279697418, 0.10492122918367386, 0.014482500031590462, 0.0064184474758803844, 0.00429623993113637, 0.0806715339422226, 0.2661057114601135, 0.008283544331789017, 0.20650571584701538, 1.2048519849777222, 1.424350380897522, 1.6164662837982178, 1.5596047639846802, 0.08109153062105179, 0.002988517517223954, 0.9290802478790283, 0.0002983363519888371, 0.08108053356409073, 0.2895539700984955, 0.44501447677612305, 0.02791534550487995, 0.0005032941699028015, 0.004385378211736679], "tokens": [13, 9651, 849, 3349, 278, 12091, 740, 13, 9651, 3349, 4301, 29898, 657, 7011, 580, 448, 29871, 29896, 416, 13, 9651, 2186, 8195, 12877, 16127, 353, 679, 4301, 29898, 657, 7011, 580, 448, 29871, 29896, 416, 13, 9651, 2186, 938, 954, 9986, 928, 616, 10444, 1849, 353, 679, 8009, 9986, 928, 616]}
{"line_number": 344, "line_type": "original", "code": "        for (int i = 0; i < getNumArtificialVariables(); i++) {", "entropy": 0.7190993428230286, "is_bug_line": false, "sus_score": 0.5673365592956543, "per_token_entropy": [5.2464799880981445, 3.8490865230560303, 0.025794290006160736, 0.11142261326313019, 0.22322499752044678, 0.007867065258324146, 0.2678021490573883, 0.28707796335220337, 0.01733626239001751, 0.003121030516922474, 0.011439328081905842, 0.7263571619987488, 0.3625568747520447, 4.540154457092285, 0.0014947204617783427, 0.0007994554471224546, 0.06195349618792534, 0.00011324241495458409, 0.035337354987859726, 0.028974825516343117, 0.005211340729147196, 0.006579285021871328], "tokens": [308, 363, 313, 524, 474, 353, 29871, 29900, 29936, 474, 529, 679, 8009, 9986, 928, 616, 10444, 1849, 890, 474, 4862, 426]}
{"line_number": 344, "line_type": "generated", "code": "\n     * @return the current solution\n     */\n    protected RealVector getSolution() {\n        final RealVector solution = new ArrayRealVector(getNumDecisionVariables());\n        for (int i = getNumObjectiveFunction", "entropy": 0.28023532032966614, "is_bug_line": false, "sus_score": 0.5673365592956543, "per_token_entropy": [0.4253864586353302, 0.7385016679763794, 0.022244233638048172, 0.26642677187919617, 0.4054221212863922, 0.49339208006858826, 0.5280051231384277, 0.08127772063016891, 0.5155526399612427, 0.0914134681224823, 0.15547044575214386, 0.006299282889813185, 0.07106361538171768, 2.038874387741089, 0.5955449938774109, 0.19236396253108978, 0.08822154998779297, 0.44733965396881104, 0.0012056708801537752, 0.12317253649234772, 0.0033486979082226753, 0.003103085793554783, 0.2179809808731079, 0.7623304724693298, 0.7269280552864075, 0.046009473502635956, 0.5326130986213684, 0.05990372225642204, 0.4168511927127838, 0.008254223503172398, 0.0005584587925113738, 8.237022848334163e-05, 0.015424367971718311, 0.1859307885169983, 0.963420033454895, 0.6351529359817505, 0.0030067020561546087, 0.0023366310633718967, 2.8013790142722428e-05, 0.31333640217781067, 0.0026184578891843557, 0.25294530391693115, 0.3552556335926056, 0.0017972521018236876, 0.07628853619098663, 0.1157175749540329, 0.0025537756737321615, 1.3973298072814941, 0.07456663250923157, 0.0992652103304863, 0.009393423795700073, 0.0007254829397425056], "tokens": [13, 268, 334, 732, 2457, 278, 1857, 1650, 13, 268, 3776, 13, 1678, 6364, 8195, 12877, 679, 13296, 918, 580, 426, 13, 4706, 2186, 8195, 12877, 1650, 353, 716, 4398, 21713, 12877, 29898, 657, 8009, 6185, 2459, 10444, 1849, 3310, 13, 4706, 363, 313, 524, 474, 353, 679, 8009, 2061, 573, 6678]}
{"line_number": 346, "line_type": "original", "code": "          if (getBasicRow(col) == null) {", "entropy": 2.061415433883667, "is_bug_line": false, "sus_score": 0.5643740296363831, "per_token_entropy": [10.040886878967285, 3.8419203758239746, 0.21071985363960266, 2.1711583137512207, 4.0640106201171875, 0.9038670063018799, 0.02788589894771576, 4.4733076095581055, 0.3127743601799011, 0.5127643346786499, 0.17117613554000854, 0.04619525745511055, 0.021733103320002556], "tokens": [965, 565, 313, 657, 16616, 4301, 29898, 1054, 29897, 1275, 1870, 29897, 426]}
{"line_number": 346, "line_type": "generated", "code": "\n    public RealVector getSolution() {\n        final RealVector solution = new ArrayRealVector(getNumDecisionVariables());\n        for (int i = 0; i", "entropy": 0.25462254881858826, "is_bug_line": false, "sus_score": 0.5643740296363831, "per_token_entropy": [0.2280684858560562, 0.22960703074932098, 1.1295325756072998, 0.7732979655265808, 0.42076706886291504, 0.09833613783121109, 0.4180832505226135, 0.000961913785431534, 0.0726042166352272, 0.009282526560127735, 0.023039622232317924, 0.26362520456314087, 1.3460025787353516, 0.7504678964614868, 0.06259073317050934, 0.6728951930999756, 0.07090482860803604, 0.38102754950523376, 0.00857871025800705, 0.0008734225411899388, 0.0001578206429257989, 0.023285744711756706, 0.24251821637153625, 0.9116592407226562, 0.45866659283638, 0.002418927848339081, 0.0014992436626926064, 4.5060096454108134e-05, 0.2636526823043823, 0.00472180126234889, 0.18774756789207458, 0.3592585623264313, 0.002861217362806201, 0.12596410512924194, 0.08886376023292542, 0.0034872216638177633, 0.19337908923625946, 0.3377324938774109, 0.014997701160609722, 0.001437702914699912], "tokens": [13, 1678, 970, 8195, 12877, 679, 13296, 918, 580, 426, 13, 4706, 2186, 8195, 12877, 1650, 353, 716, 4398, 21713, 12877, 29898, 657, 8009, 6185, 2459, 10444, 1849, 3310, 13, 4706, 363, 313, 524, 474, 353, 29871, 29900, 29936, 474]}
{"line_number": 362, "line_type": "original", "code": "          columnLabels.remove((int) columnsToDrop.get(i));", "entropy": 1.9206300973892212, "is_bug_line": false, "sus_score": 0.5628299713134766, "per_token_entropy": [5.034928321838379, 8.663187026977539, 0.9663246870040894, 0.01686692424118519, 0.06159476563334465, 2.6038527488708496, 6.157907485961914, 1.678558588027954, 0.07247915863990784, 6.301031589508057, 0.10435348004102707, 0.3979943096637726, 0.13270945847034454, 0.09498448669910431, 0.014474157243967056, 0.24198642373085022, 0.10747630149126053], "tokens": [965, 1897, 4775, 29879, 29889, 5992, 3552, 524, 29897, 4341, 1762, 15063, 29889, 657, 29898, 29875, 2483]}
{"line_number": 362, "line_type": "generated", "code": "\n          if (basicRow != null) {\n            basicRows.add(basicRow);\n            coefficients[i] = getEntry(basicRow, getRhsOffset());\n          } else {\n            coefficients[i] = 0", "entropy": 0.13331075012683868, "is_bug_line": false, "sus_score": 0.5628299713134766, "per_token_entropy": [0.3317519724369049, 1.0162020921707153, 0.502434253692627, 0.0837186649441719, 0.030732817947864532, 0.12203499674797058, 0.8693665266036987, 0.026243316009640694, 0.3830638825893402, 0.0035535066854208708, 0.013695206493139267, 0.5661406517028809, 1.0110300779342651, 0.0006780709372833371, 0.00020037073409184813, 0.0003094194398727268, 0.0008172033121809363, 0.00805013906210661, 0.00038985759601928294, 0.007173969876021147, 0.005956043489277363, 0.13073845207691193, 0.25074365735054016, 0.0004891153075732291, 0.0043073976412415504, 0.000979896984063089, 0.008042688481509686, 0.33277732133865356, 0.027878249064087868, 0.0010215784423053265, 0.007575592957437038, 0.0012235306203365326, 0.0021297885105013847, 0.1273333728313446, 0.03595980629324913, 0.0003022690652869642, 0.0006820021662861109, 0.03854932636022568, 0.007834776304662228, 0.259922057390213, 0.013797149993479252, 0.33018043637275696, 0.04742281883955002, 0.010244996286928654, 0.15064342319965363, 0.11630778014659882, 0.0003923600015696138, 0.0011162485461682081, 0.0005690624238923192, 0.0008886678842827678, 0.03551546856760979, 0.0030463975854218006], "tokens": [13, 3986, 565, 313, 16121, 4301, 2804, 1870, 29897, 426, 13, 9651, 6996, 10661, 29889, 1202, 29898, 16121, 4301, 416, 13, 9651, 16127, 29961, 29875, 29962, 353, 679, 9634, 29898, 16121, 4301, 29892, 679, 29934, 9499, 10302, 3310, 13, 3986, 500, 1683, 426, 13, 9651, 16127, 29961, 29875, 29962, 353, 29871, 29900]}
{"line_number": 351, "line_type": "original", "code": "        double[][] matrix = new double[getHeight() - 1][getWidth() - columnsToDrop.size()];", "entropy": 1.222011685371399, "is_bug_line": false, "sus_score": 0.5620150566101074, "per_token_entropy": [7.854865550994873, 2.187288284301758, 0.7492684125900269, 4.4332170486450195, 2.524658679962158, 0.3312785029411316, 1.2047233581542969, 0.015566745772957802, 0.07676050066947937, 0.5463531613349915, 0.3590319752693176, 0.001082073082216084, 0.6516085863113403, 0.1540849357843399, 0.023425843566656113, 0.02560270205140114, 0.1545005440711975, 0.19193123281002045, 0.000849482137709856, 0.26703009009361267, 10.424846649169922, 0.17538975179195404, 0.21089625358581543, 0.13437336683273315, 0.0042774854227900505, 0.0001677133986959234, 0.29123935103416443], "tokens": [308, 3765, 2636, 2636, 4636, 353, 716, 3765, 29961, 657, 7011, 580, 448, 29871, 29896, 3816, 657, 6110, 580, 448, 4341, 1762, 15063, 29889, 2311, 580, 1385]}
{"line_number": 351, "line_type": "generated", "code": "\n      double[] solution = new double[getNumDecisionVariables()];\n      for (int i = 0; i", "entropy": 0.32487326860427856, "is_bug_line": false, "sus_score": 0.5620150566101074, "per_token_entropy": [0.08143234252929688, 0.47701016068458557, 1.6775273084640503, 0.9274758100509644, 1.3128737211227417, 0.15485523641109467, 0.07263858616352081, 0.002016774145886302, 0.015634112060070038, 0.5706212520599365, 0.5861220359802246, 0.8437068462371826, 0.0020831567235291004, 0.0016847953666001558, 1.2040065485052764e-05, 0.0023079682141542435, 0.4873451590538025, 0.004919093102216721, 0.25020283460617065, 0.7992092967033386, 0.0040059806779026985, 0.11333262920379639, 0.17885306477546692, 0.004084696993231773, 0.14392103254795074, 0.34576722979545593, 0.03430314362049103, 0.0025046665687114], "tokens": [13, 418, 3765, 2636, 1650, 353, 716, 3765, 29961, 657, 8009, 6185, 2459, 10444, 1849, 580, 1385, 13, 418, 363, 313, 524, 474, 353, 29871, 29900, 29936, 474]}
{"line_number": 356, "line_type": "original", "code": "              matrix[i - 1][col++] = tableau.getEntry(i, j);", "entropy": 2.072100877761841, "is_bug_line": false, "sus_score": 0.5598370432853699, "per_token_entropy": [7.002618789672852, 10.025097846984863, 1.9009201526641846, 1.0035953521728516, 5.922177314758301, 1.467305302619934, 0.028340013697743416, 0.6651322841644287, 2.756633758544922, 4.357890605926514, 0.004874370526522398, 0.014306123368442059, 4.3820109367370605, 0.0010991015005856752, 0.013215920887887478, 0.0028471907135099173, 0.004004080779850483, 0.007149114273488522, 2.4918594360351562, 0.23282213509082794, 3.1350150108337402, 0.16730719804763794], "tokens": [1669, 4636, 29961, 29875, 448, 29871, 29896, 3816, 1054, 1817, 29962, 353, 1591, 585, 29889, 657, 9634, 29898, 29875, 29892, 432, 416]}
{"line_number": 356, "line_type": "generated", "code": "\n          } else {\n            Integer row = getBasicRow(colIndex);\n            if (row != null) {\n              basicRows.add(row);\n              coefficients[i] = getEntry(row, getRhsOffset());", "entropy": 0.09798775613307953, "is_bug_line": false, "sus_score": 0.5598370432853699, "per_token_entropy": [0.07290006428956985, 0.5770731568336487, 0.018997738137841225, 0.49013131856918335, 0.0673002228140831, 0.0019802500028163195, 0.7110171914100647, 0.1327558159828186, 0.6620684266090393, 0.7283191680908203, 0.02169915847480297, 0.0004409771354403347, 0.0009182051289826632, 0.00041631137719377875, 0.012783249840140343, 0.0003275334893260151, 0.012323545292019844, 0.00374770350754261, 0.0468829944729805, 0.07545183598995209, 0.022688331082463264, 0.008014307357370853, 0.2769429385662079, 0.0012029323261231184, 0.05467656999826431, 0.005268143489956856, 0.006018491927534342, 0.08016939461231232, 0.1852082461118698, 0.0003505330823827535, 0.0003070359816774726, 0.00017355366435367614, 0.0019741824362426996, 0.008679640479385853, 0.004268820397555828, 0.0016255272785201669, 0.1825411170721054, 0.24822090566158295, 0.0010282472940161824, 0.004255881533026695, 0.0010414659045636654, 0.009828389622271061, 0.21048402786254883, 0.023588508367538452, 0.0009742995607666671, 0.005118124652653933, 0.0018949424847960472, 0.06214956194162369, 0.013310384936630726, 0.00025245340657420456, 0.0006354220095090568, 0.03493602201342583], "tokens": [13, 3986, 500, 1683, 426, 13, 9651, 8102, 1948, 353, 679, 16616, 4301, 29898, 1054, 3220, 416, 13, 9651, 565, 313, 798, 2804, 1870, 29897, 426, 13, 795, 6996, 10661, 29889, 1202, 29898, 798, 416, 13, 795, 16127, 29961, 29875, 29962, 353, 679, 9634, 29898, 798, 29892, 679, 29934, 9499, 10302, 3310]}
{"line_number": 525, "line_type": "original", "code": "     * @see #getOriginalNumDecisionVariables()", "entropy": 1.7193924188613892, "is_bug_line": false, "sus_score": 0.5590246915817261, "per_token_entropy": [5.069033622741699, 6.968105316162109, 4.480557441711426, 1.8561171293258667, 0.4195391833782196, 0.49675092101097107, 2.7912302017211914, 0.16378527879714966, 0.08715880662202835, 0.0010099078062921762, 0.000990377040579915, 0.0001802282058633864, 0.017640246078372], "tokens": [418, 334, 732, 4149, 396, 657, 26036, 8009, 6185, 2459, 10444, 1849, 580]}
{"line_number": 525, "line_type": "generated", "code": "\n                  tableau.equals(rhs.tableau);\n      }\n\n      return false;\n\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public int hashCode() {\n        return", "entropy": 0.11726778745651245, "is_bug_line": false, "sus_score": 0.5590246915817261, "per_token_entropy": [0.24121205508708954, 0.7497829794883728, 0.15841254591941833, 2.0826005935668945, 0.0018231928115710616, 0.01715206913650036, 0.09674618393182755, 0.024510908871889114, 0.005064990371465683, 0.0003911683743353933, 0.005217744503170252, 0.0711723119020462, 0.0002712835557758808, 0.3123228847980499, 0.016383294016122818, 0.22207868099212646, 0.003803995903581381, 0.047314468771219254, 0.14984586834907532, 0.06621365994215012, 0.008836805820465088, 0.03656049445271492, 0.0006347072194330394, 0.0015260252403095365, 0.5369892716407776, 0.15739183127880096, 0.0012877037515863776, 0.0007167869480326772, 0.024850863963365555, 0.03591334447264671, 0.013575729914009571, 0.11430923640727997, 0.001684914343059063, 0.0007291757501661777, 0.0007377525325864553, 0.0009413101943209767, 0.008965474553406239, 0.0013081812066957355, 0.006376516539603472, 0.007830873131752014, 0.003837484633550048, 0.001379610737785697, 0.0029435898177325726, 0.0059044938534498215, 0.07168364524841309, 0.0023204563185572624, 0.0007721779984422028, 0.0017534609651193023, 0.0014869834994897246, 0.0055465372279286385, 0.3763379752635956, 0.3904709219932556], "tokens": [13, 462, 29871, 1591, 585, 29889, 10954, 29898, 29878, 9499, 29889, 2371, 585, 416, 13, 418, 500, 13, 13, 418, 736, 2089, 29936, 13, 13, 1678, 500, 13, 13, 1678, 7762, 26633, 262, 27069, 14526, 29913, 3776, 13, 1678, 732, 4640, 13, 1678, 970, 938, 6608, 3399, 580, 426, 13, 4706, 736]}
{"line_number": 338, "line_type": "original", "code": "            if (Precision.compareTo(entry, 0d, maxUlps) > 0) {", "entropy": 0.9188882112503052, "is_bug_line": false, "sus_score": 0.5586380362510681, "per_token_entropy": [9.356752395629883, 2.4957985877990723, 0.1881367713212967, 1.6494543552398682, 0.0005737089086323977, 0.0004924515378661454, 0.002278947737067938, 0.0854511633515358, 0.00042000532266683877, 0.0052923341281712055, 3.522364377975464, 0.014832221902906895, 0.16568399965763092, 0.13475297391414642, 0.040192220360040665, 0.002221023431047797, 4.947429656982422, 0.03705227002501488, 0.0015442363219335675, 0.0003935516288038343, 0.02847326546907425, 1.1661779880523682, 0.015221741981804371, 0.0032982020638883114, 0.022002752870321274, 0.004804020747542381], "tokens": [632, 565, 313, 29925, 3757, 2459, 29889, 18307, 1762, 29898, 8269, 29892, 29871, 29900, 29881, 29892, 4236, 29965, 29880, 567, 29897, 1405, 29871, 29900, 29897, 426]}
{"line_number": 338, "line_type": "generated", "code": "\n        return true;\n    }\n\n    /**\n     * Returns whether the problem is at a primal feasible state.\n     * @return whether the model is primal feasible\n     */\n    boolean isPrimalFeas", "entropy": 0.20101840794086456, "is_bug_line": false, "sus_score": 0.5586380362510681, "per_token_entropy": [0.09040617197751999, 0.30958303809165955, 0.25401294231414795, 0.2533379793167114, 0.0009654866298660636, 0.002646517474204302, 0.059101399034261703, 0.0014965059235692024, 0.0031969649717211723, 0.043512843549251556, 0.07432960718870163, 0.061196327209472656, 0.06617840379476547, 0.0022306579630821943, 0.0005465444410219789, 1.1689975261688232, 0.5249271392822266, 0.11502502113580704, 0.35617977380752563, 0.22326026856899261, 1.1449017524719238, 1.0438700914382935, 1.7280281782150269, 0.0004717191040981561, 1.0255622863769531, 0.009099560789763927, 0.047594018280506134, 0.04643552005290985, 0.012940125539898872, 0.0019822726026177406, 0.001589702907949686, 0.05431307479739189, 0.017648445442318916, 0.06710561364889145, 0.02923789992928505, 0.502916157245636, 0.5473939180374146, 0.15857960283756256, 0.026299402117729187, 0.015071330592036247, 0.0012468667700886726, 0.03258246183395386, 0.004067600704729557, 0.016876887530088425, 0.0008080316474661231, 0.013126625679433346, 0.08790029585361481, 0.012091080658137798, 0.18927675485610962, 0.001527096494100988, 0.001256510615348816, 2.455681169521995e-05], "tokens": [13, 4706, 736, 1565, 29936, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 16969, 3692, 278, 1108, 338, 472, 263, 1903, 284, 28326, 1821, 2106, 29889, 13, 268, 334, 732, 2457, 3692, 278, 1904, 338, 1903, 284, 28326, 1821, 13, 268, 3776, 13, 1678, 7223, 338, 4040, 3039, 8263, 294]}
{"line_number": 365, "line_type": "original", "code": "        this.tableau = new Array2DRowRealMatrix(matrix);", "entropy": 1.8465608358383179, "is_bug_line": false, "sus_score": 0.5582321882247925, "per_token_entropy": [6.32925271987915, 8.761031150817871, 0.03089325875043869, 4.851524353027344, 0.002625829540193081, 1.9952397346496582, 2.0687317848205566, 0.6179459095001221, 0.04193678870797157, 0.00010311071673640981, 0.00047231485950760543, 0.04832225292921066, 6.05564855504781e-05, 0.03813952952623367, 3.4465742111206055, 1.3121206760406494], "tokens": [308, 445, 29889, 2371, 585, 353, 716, 4398, 29906, 29928, 4301, 21713, 14609, 29898, 5344, 416]}
{"line_number": 365, "line_type": "generated", "code": "\n              coefficients[i] = 0;\n          } else {\n              // if a single variable can take a given value\n<|mask:0|>\n              basicRows.add(basicRow);\n              coefficients[i] =", "entropy": 0.28694435954093933, "is_bug_line": false, "sus_score": 0.5582321882247925, "per_token_entropy": [0.2674825191497803, 0.5912790298461914, 0.6115454435348511, 0.0010488491971045732, 0.006362539250403643, 0.0014641289599239826, 0.003561584046110511, 0.10037728399038315, 0.005382213741540909, 0.028753729537129402, 0.012577380053699017, 0.5496557950973511, 0.008340172469615936, 0.03865599259734154, 0.8199458718299866, 0.01029018685221672, 0.2903171181678772, 1.5646761655807495, 1.0053787231445312, 2.640916347503662, 1.0599559545516968, 0.18309704959392548, 0.358361154794693, 0.04183207452297211, 0.07440774142742157, 0.07558436691761017, 0.0038247781340032816, 0.10245171934366226, 0.9346176981925964, 0.0005565524916164577, 0.006966704968363047, 0.002171184169128537, 0.9935925602912903, 0.003317450173199177, 0.39261817932128906, 0.02830270119011402, 0.10543651878833771, 1.5173192024230957, 0.0005679901223629713, 0.00029666791670024395, 0.0001720042055239901, 0.0006572232232429087, 0.00399790657684207, 0.00013183678674977273, 0.0012724645202979445, 0.0036435427609831095, 0.08311592787504196, 0.3785516619682312, 0.00038223114097490907, 0.0016737275291234255, 0.000559173640795052, 0.0036579144652932882], "tokens": [13, 795, 16127, 29961, 29875, 29962, 353, 29871, 29900, 29936, 13, 3986, 500, 1683, 426, 13, 795, 849, 565, 263, 2323, 2286, 508, 2125, 263, 2183, 995, 13, 29966, 29989, 13168, 29901, 29900, 29989, 29958, 13, 795, 6996, 10661, 29889, 1202, 29898, 16121, 4301, 416, 13, 795, 16127, 29961, 29875, 29962, 353]}
{"line_number": 352, "line_type": "original", "code": "        for (int i = 1; i < getHeight(); i++) {", "entropy": 0.6558143496513367, "is_bug_line": false, "sus_score": 0.5577639937400818, "per_token_entropy": [7.4002251625061035, 1.0214476585388184, 0.004135509487241507, 0.06328608840703964, 0.3153006136417389, 0.0039429315365850925, 0.22929410636425018, 0.9102842211723328, 0.013243096880614758, 0.0026440205983817577, 0.09281399101018906, 0.16178984940052032, 0.8294328451156616, 0.07224562764167786, 0.022035988047719002, 0.004666272550821304, 0.002056509256362915], "tokens": [308, 363, 313, 524, 474, 353, 29871, 29896, 29936, 474, 529, 679, 7011, 890, 474, 4862, 426]}
{"line_number": 352, "line_type": "generated", "code": "\n      for (int i = 0; i", "entropy": 0.2703607976436615, "is_bug_line": false, "sus_score": 0.5577639937400818, "per_token_entropy": [0.08846065402030945, 0.9041730165481567, 0.7436825633049011, 0.003924764227122068, 0.07910586893558502, 0.31557294726371765, 0.004015716724097729, 0.3314490020275116, 0.49194204807281494, 0.009511629119515419, 0.0021305023692548275], "tokens": [13, 418, 363, 313, 524, 474, 353, 29871, 29900, 29936, 474]}
{"line_number": 354, "line_type": "original", "code": "          for (int j = 0; j < getWidth(); j++) {", "entropy": 0.9006830453872681, "is_bug_line": false, "sus_score": 0.5577325820922852, "per_token_entropy": [7.339910984039307, 5.184556007385254, 0.004155453760176897, 0.10157255828380585, 0.1065588966012001, 0.0035545756109058857, 0.40118756890296936, 0.30679410696029663, 0.012242059223353863, 0.005131526384502649, 0.008691339753568172, 0.2355014532804489, 1.4503730535507202, 0.1368749737739563, 0.009421175345778465, 0.0037800066638737917, 0.0013062763027846813], "tokens": [965, 363, 313, 524, 432, 353, 29871, 29900, 29936, 432, 529, 679, 6110, 890, 432, 4862, 426]}
{"line_number": 354, "line_type": "generated", "code": "\n        int col = columnLabels.indexOf(i);\n        if (col >= 0) {\n          Integer basicRow = getBasicRow(col);\n          if (basicRow != null) {\n            basicRows.add(", "entropy": 0.2186339944601059, "is_bug_line": false, "sus_score": 0.5577325820922852, "per_token_entropy": [0.1449970304965973, 0.8428114056587219, 1.2576860189437866, 1.34316885471344, 0.044026199728250504, 0.8852043151855469, 0.03252338245511055, 0.0012075759004801512, 0.002851588884368539, 0.12186204642057419, 0.03318368270993233, 1.2145236730575562, 0.45800167322158813, 0.00930638425052166, 0.16415803134441376, 0.8956650495529175, 0.01580251008272171, 0.02538701891899109, 1.6276130676269531, 0.04820820689201355, 0.004544525872915983, 0.08870068192481995, 0.0016444505890831351, 0.006461797747761011, 0.19765181839466095, 0.16141703724861145, 0.989190936088562, 0.04207110032439232, 0.005337986163794994, 0.021222760900855064, 0.000376034586224705, 0.0008810452418401837, 0.000529149197973311, 0.010679946281015873, 0.007284390740096569, 0.0032171655911952257, 0.024269860237836838, 0.08338827639818192, 0.024683400988578796, 0.012595390900969505, 0.016034699976444244, 0.09042076766490936, 0.001737157697789371, 0.08853845298290253, 0.003607077756896615, 0.0042246622033417225, 0.02906978130340576, 0.2758850157260895, 0.0009221353684552014, 0.0007553822943009436, 0.0004409771354403347, 0.0029960053507238626], "tokens": [13, 4706, 938, 784, 353, 1897, 4775, 29879, 29889, 19402, 29898, 29875, 416, 13, 4706, 565, 313, 1054, 6736, 29871, 29900, 29897, 426, 13, 3986, 8102, 6996, 4301, 353, 679, 16616, 4301, 29898, 1054, 416, 13, 3986, 565, 313, 16121, 4301, 2804, 1870, 29897, 426, 13, 9651, 6996, 10661, 29889, 1202, 29898]}
{"line_number": 355, "line_type": "original", "code": "            if (!columnsToDrop.contains(j)) {", "entropy": 2.5922601222991943, "is_bug_line": false, "sus_score": 0.5576480627059937, "per_token_entropy": [8.50438117980957, 1.4634530544281006, 4.920688629150391, 4.718667507171631, 0.5330537557601929, 0.6645506620407104, 0.030402837321162224, 0.0184086412191391, 0.008980479091405869, 9.955791473388672, 0.2663388252258301, 0.02240266278386116], "tokens": [632, 565, 5384, 13099, 1762, 15063, 29889, 11516, 29898, 29926, 876, 426]}
{"line_number": 355, "line_type": "generated", "code": "\n          Integer rowIndex = colIndex > 0 ? getBasicRow(colIndex) : null;\n          if (rowIndex != null) {\n              basicRows.add(rowIndex);\n              coefficients[i] = getEntry(", "entropy": 0.1233760416507721, "is_bug_line": false, "sus_score": 0.5576480627059937, "per_token_entropy": [0.08241347968578339, 0.43880364298820496, 0.7881364226341248, 0.7366696000099182, 0.6025004982948303, 0.008253750391304493, 0.5922447443008423, 0.00041083001997321844, 0.3754855990409851, 0.032662998884916306, 0.0008261366747319698, 0.023509332910180092, 0.020262861624360085, 0.0004996005445718765, 0.00042167355422861874, 0.0006249382277019322, 0.007550748065114021, 0.0001629458274692297, 0.004895367659628391, 0.0010876698652282357, 0.06945424526929855, 0.001341634662821889, 0.004478306509554386, 0.4440271854400635, 0.26694411039352417, 0.03903542459011078, 0.02737729623913765, 0.00021073981770314276, 0.28999873995780945, 0.0012045992771163583, 0.09170065075159073, 0.00587747385725379, 0.006971440277993679, 0.4337356686592102, 0.27207040786743164, 0.0003657863999251276, 0.00021300431399140507, 0.00011085849109804258, 0.002021295018494129, 0.008521740324795246, 5.245195097813848e-06, 0.006801904179155827, 0.0014211564557626843, 0.20972469449043274, 0.24207803606987, 0.0007920703501440585, 0.0037433092948049307, 0.0009659630013629794, 0.011045974679291248, 0.23585113883018494, 0.018893400207161903, 0.0011473270133137703], "tokens": [13, 3986, 8102, 1948, 3220, 353, 784, 3220, 1405, 29871, 29900, 1577, 679, 16616, 4301, 29898, 1054, 3220, 29897, 584, 1870, 29936, 13, 3986, 565, 313, 798, 3220, 2804, 1870, 29897, 426, 13, 795, 6996, 10661, 29889, 1202, 29898, 798, 3220, 416, 13, 795, 16127, 29961, 29875, 29962, 353, 679, 9634, 29898]}
{"line_number": 419, "line_type": "original", "code": "              coefficients[i] =", "entropy": 4.229253768920898, "is_bug_line": false, "sus_score": 0.546265721321106, "per_token_entropy": [9.928556442260742, 13.153157234191895, 1.65773606300354, 0.48111480474472046, 0.06597565114498138, 0.0889798104763031], "tokens": [1669, 16127, 29961, 29875, 29962, 353]}
{"line_number": 419, "line_type": "generated", "code": "\n     */\n    protected final int getHeight() {\n        return tableau.getRowDimension();\n    }\n\n    /**\n     * Get the entry in the tableau.\n     * @param row row index\n     *", "entropy": 0.13812445104122162, "is_bug_line": false, "sus_score": 0.546265721321106, "per_token_entropy": [0.20784801244735718, 0.7106580138206482, 0.1873764842748642, 0.0036706230603158474, 0.027260487899184227, 0.0763266384601593, 0.09737136960029602, 0.004550340585410595, 0.000993830617517233, 0.00721373688429594, 0.0034014484845101833, 0.0009458358981646597, 0.0034153484739363194, 0.08581849932670593, 0.015621320344507694, 0.07381552457809448, 7.73638384998776e-05, 0.0011255365097895265, 0.000763244170229882, 0.006820137612521648, 0.001839375589042902, 0.00011205045302631333, 0.12345220893621445, 0.007188172545284033, 0.21122628450393677, 0.005666265729814768, 0.005783846136182547, 0.028857393190264702, 0.02160373330116272, 0.015302046202123165, 0.017724690958857536, 0.0018115314887836576, 0.00034433635300956666, 0.45181548595428467, 0.2436046302318573, 1.2948230504989624, 1.2702757120132446, 0.24238136410713196, 0.25337648391723633, 0.015590570867061615, 0.6261780858039856, 0.005021223332732916, 0.015397134236991405, 0.0005629861843772233, 0.17129376530647278, 0.003497200319543481, 0.15167012810707092, 0.2954886853694916, 0.10190603137016296, 0.05958143249154091, 0.02323659509420395, 0.000785280775744468], "tokens": [13, 268, 3776, 13, 1678, 6364, 2186, 938, 679, 7011, 580, 426, 13, 4706, 736, 1591, 585, 29889, 657, 4301, 16142, 2673, 890, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 3617, 278, 6251, 297, 278, 1591, 585, 29889, 13, 268, 334, 732, 3207, 1948, 1948, 2380, 13, 268, 334]}
{"line_number": 403, "line_type": "original", "code": "      for (int i = 0; i < coefficients.length; i++) {", "entropy": 1.292633056640625, "is_bug_line": false, "sus_score": 0.5445989370346069, "per_token_entropy": [4.179612159729004, 9.43278980255127, 0.048907049000263214, 0.010241574607789516, 1.694749116897583, 0.009102514013648033, 0.39445430040359497, 0.08000676333904266, 0.012569021433591843, 0.002293339231982827, 0.015615100041031837, 6.996378421783447, 0.17482320964336395, 0.07516990602016449, 0.0374625138938427, 0.08440332859754562, 0.009522728621959686, 0.009294691495597363], "tokens": [539, 363, 313, 524, 474, 353, 29871, 29900, 29936, 474, 529, 16127, 29889, 2848, 29936, 474, 4862, 426]}
{"line_number": 403, "line_type": "generated", "code": "\n                              final double multiple) {\n        for (int j = 0; j", "entropy": 0.262694776058197, "is_bug_line": false, "sus_score": 0.5445989370346069, "per_token_entropy": [1.117492437362671, 0.9136415719985962, 1.5095412731170654, 0.06831324100494385, 0.16178275644779205, 0.07097189873456955, 0.1498773843050003, 0.0848522037267685, 0.019627518951892853, 0.47480738162994385, 0.26498669385910034, 0.0007531190640293062, 0.0008027906878851354, 0.06522386521100998, 0.0004836343287024647, 0.07485050708055496, 0.010885735973715782, 0.001208885689266026, 0.0010976725025102496], "tokens": [13, 462, 795, 2186, 3765, 2999, 29897, 426, 13, 4706, 363, 313, 524, 432, 353, 29871, 29900, 29936, 432]}
{"line_number": 413, "line_type": "original", "code": "          if (basicRows.contains(basicRow)) {", "entropy": 2.161064624786377, "is_bug_line": true, "sus_score": 0.5442642569541931, "per_token_entropy": [8.436012268066406, 4.093270778656006, 0.09310717135667801, 5.2644500732421875, 0.9045831561088562, 0.7335862517356873, 1.5186001062393188, 0.3491577208042145, 3.418571949005127, 0.7002578377723694, 0.4132818579673767, 0.007895214483141899], "tokens": [965, 565, 313, 16121, 10661, 29889, 11516, 29898, 16121, 4301, 876, 426]}
{"line_number": 413, "line_type": "generated", "code": "\n        return tableau.getColumnDimension() + 1;\n    }\n\n    /**\n     * Get the height of the tableau.\n     * @return height of the tableau\n     */\n    protected final int get", "entropy": 0.10739478468894958, "is_bug_line": true, "sus_score": 0.5442642569541931, "per_token_entropy": [0.27989041805267334, 0.4016631543636322, 0.07817506045103073, 0.6130744218826294, 0.00034290633630007505, 0.009666893631219864, 0.00026043839170597494, 0.08427819609642029, 0.0003741279651876539, 3.93382906622719e-05, 0.5173549652099609, 0.43192264437675476, 1.1065208911895752, 0.11117347329854965, 0.09260091930627823, 0.05532015487551689, 0.702001690864563, 0.009279928170144558, 0.0178640466183424, 0.03889348357915878, 0.0396287702023983, 0.03013937547802925, 0.0108041325584054, 0.0018377096857875586, 0.00014911970356479287, 0.28211328387260437, 0.05382338911294937, 0.384742796421051, 0.005370475351810455, 0.0008418591460213065, 0.0042650215327739716, 0.0020926736760884523, 0.01455405168235302, 0.0018587708473205566, 0.00221055606380105, 0.00040046300273388624, 0.0306547824293375, 0.0003398079425096512, 0.036799632012844086, 0.004492666106671095, 0.0015050761867314577, 0.0018398514948785305, 0.0008507922757416964, 0.006730742286890745, 0.0011863820254802704, 0.0023350848350673914, 0.0010351543314754963, 0.00615712022408843, 0.03164542093873024, 0.07234010845422745, 0.0009055804111994803, 0.00018034738604910672], "tokens": [13, 4706, 736, 1591, 585, 29889, 657, 4409, 16142, 2673, 580, 718, 29871, 29896, 29936, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 3617, 278, 3171, 310, 278, 1591, 585, 29889, 13, 268, 334, 732, 2457, 3171, 310, 278, 1591, 585, 13, 268, 3776, 13, 1678, 6364, 2186, 938, 679]}
{"line_number": 409, "line_type": "original", "code": "          Integer basicRow = getBasicRow(colIndex);", "entropy": 1.7266790866851807, "is_bug_line": true, "sus_score": 0.5434301495552063, "per_token_entropy": [9.41141128540039, 5.892403602600098, 1.8603368997573853, 0.2742290794849396, 0.10264839231967926, 0.4788801074028015, 0.023691195994615555, 0.061850182712078094, 0.05231216177344322, 2.3311238288879395, 0.1879574954509735, 0.043304070830345154], "tokens": [965, 8102, 6996, 4301, 353, 679, 16616, 4301, 29898, 1054, 3220, 416]}
{"line_number": 409, "line_type": "generated", "code": "\n     * @param columnLabels the column labels\n     * @return the width of the tableau\n     */\n    private int getWidth(final List<String> columnLabels) {\n        int width = columnLabels.size", "entropy": 0.429644376039505, "is_bug_line": true, "sus_score": 0.5434301495552063, "per_token_entropy": [0.12323060631752014, 0.26062601804733276, 0.04031313583254814, 1.986505389213562, 0.3229729235172272, 2.695868730545044, 2.339907646179199, 1.100508451461792, 1.4418854713439941, 0.5303962230682373, 0.2605019211769104, 0.24324838817119598, 0.08205927163362503, 0.22635503113269806, 0.018206151202321053, 0.7744681239128113, 0.5062354803085327, 3.4398601055145264, 0.9088497161865234, 0.058087438344955444, 0.4146710932254791, 0.02443866990506649, 0.2695253789424896, 0.029776105657219887, 0.03432686999440193, 0.002357324818149209, 0.05826086923480034, 0.770663857460022, 0.10707645118236542, 0.30855754017829895, 0.3149469196796417, 0.0834958627820015, 0.1266876757144928, 0.12696689367294312, 0.049691956490278244, 0.05829179659485817, 0.0009417866240255535, 0.002314509591087699, 0.0003455280384514481, 0.00021681819634977728, 0.01281691063195467, 0.0017584589077159762, 0.013252625241875648, 0.2834887206554413, 0.9810311198234558, 0.33628717064857483, 0.03623392432928085, 0.5209064483642578, 0.0006847421173006296, 0.0006985607906244695, 0.0054612960666418076, 0.005246561020612717], "tokens": [13, 268, 334, 732, 3207, 1897, 4775, 29879, 278, 1897, 11073, 13, 268, 334, 732, 2457, 278, 2920, 310, 278, 1591, 585, 13, 268, 3776, 13, 1678, 2024, 938, 679, 6110, 29898, 8394, 2391, 29966, 1231, 29958, 1897, 4775, 29879, 29897, 426, 13, 4706, 938, 2920, 353, 1897, 4775, 29879, 29889, 2311]}
{"line_number": 404, "line_type": "original", "code": "          int colIndex = columnLabels.indexOf(\"x\" + i);", "entropy": 1.6525111198425293, "is_bug_line": false, "sus_score": 0.5434100031852722, "per_token_entropy": [8.43427848815918, 3.329671621322632, 2.376856803894043, 0.4473154544830322, 0.08420248329639435, 1.3141812086105347, 0.06299947947263718, 0.002182603348046541, 0.0035239283461123705, 0.0646304339170456, 4.141497611999512, 1.553074836730957, 0.5862250328063965, 0.012544771656394005, 3.8836636543273926, 0.14333109557628632], "tokens": [965, 938, 784, 3220, 353, 1897, 4775, 29879, 29889, 19402, 703, 29916, 29908, 718, 474, 416]}
{"line_number": 404, "line_type": "generated", "code": "\n        for (int j = 0; j", "entropy": 0.10195767879486084, "is_bug_line": false, "sus_score": 0.5434100031852722, "per_token_entropy": [0.07488159090280533, 0.31985437870025635, 0.46265876293182373, 0.0010989824077114463, 0.0026478252839297056, 0.09349375218153, 0.0007628867751918733, 0.14253564178943634, 0.016662010923027992, 0.005883162375539541, 0.0010555178159847856], "tokens": [13, 4706, 363, 313, 524, 432, 353, 29871, 29900, 29936, 432]}
{"line_number": 312, "line_type": "original", "code": "        for (int i = 0; i < getHeight(); i++) {", "entropy": 0.9356729388237, "is_bug_line": false, "sus_score": 0.5353737473487854, "per_token_entropy": [6.3886566162109375, 3.626840114593506, 0.003985558170825243, 0.025919750332832336, 4.610229015350342, 0.03598314896225929, 0.32750213146209717, 0.13844041526317596, 0.009447155520319939, 0.0016499252524226904, 0.007709628902375698, 0.25652557611465454, 0.32099205255508423, 0.12932398915290833, 0.014147934503853321, 0.004283539019525051, 0.004803546238690615], "tokens": [308, 363, 313, 524, 474, 353, 29871, 29900, 29936, 474, 529, 679, 7011, 890, 474, 4862, 426]}
{"line_number": 312, "line_type": "generated", "code": "\n            tableau.removeColumn(columnsToDrop.get(i));\n        }\n    }\n\n    /**\n     * Removes the artificial variables from this tableau.\n     */\n    protected void dropPhase2Object", "entropy": 0.25630709528923035, "is_bug_line": false, "sus_score": 0.5353737473487854, "per_token_entropy": [0.1774061620235443, 0.879521906375885, 0.8688944578170776, 0.0009742995607666671, 0.08295750617980957, 0.3100791275501251, 0.013936820439994335, 0.010263402946293354, 0.11474446952342987, 0.0005621521850116551, 0.0008099374244920909, 0.0020786363165825605, 0.005858986172825098, 0.0008274468709714711, 0.004714800976216793, 0.1718190312385559, 0.006199771072715521, 0.34006673097610474, 0.004026639740914106, 0.004786106292158365, 1.7877192497253418, 0.00808880664408207, 0.005123936105519533, 0.034663159400224686, 0.055608976632356644, 0.03506229817867279, 0.10013238340616226, 0.0009560781763866544, 0.00022468426323030144, 2.705002784729004, 0.0032737255096435547, 9.929640509653836e-05, 0.3901229202747345, 1.6735283136367798, 0.4243861138820648, 0.4410216510295868, 0.19505546987056732, 0.01618707738816738, 0.003184844274073839, 0.12041034549474716, 0.06333711743354797, 0.0013093716697767377, 0.13093172013759613, 0.00037245964631438255, 0.006189108360558748, 0.07416613399982452, 0.012307059951126575, 0.07484719157218933, 1.655860185623169, 0.0005383234238252044, 0.0989518016576767, 0.20877771079540253], "tokens": [13, 9651, 1591, 585, 29889, 5992, 4409, 29898, 13099, 1762, 15063, 29889, 657, 29898, 29875, 2483, 13, 4706, 500, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 5240, 586, 267, 278, 23116, 3651, 515, 445, 1591, 585, 29889, 13, 268, 3776, 13, 1678, 6364, 1780, 5768, 4819, 559, 29906, 2061]}
{"line_number": 405, "line_type": "original", "code": "          if (colIndex < 0) {", "entropy": 2.490601062774658, "is_bug_line": false, "sus_score": 0.535151481628418, "per_token_entropy": [4.1962995529174805, 9.450530052185059, 0.11210349202156067, 6.661354064941406, 0.8799437880516052, 1.7931861877441406, 1.4952548742294312, 0.09903202205896378, 0.20348353683948517, 0.014819654636085033], "tokens": [965, 565, 313, 1054, 3220, 529, 29871, 29900, 29897, 426]}
{"line_number": 405, "line_type": "generated", "code": "\n                .subtract(tableau.getRowVector(subtrahendRow).mapMultiply(multiple))\n<|mask:1|><|mask:1|>\n                .subtract(tableau.get", "entropy": 0.15438133478164673, "is_bug_line": false, "sus_score": 0.535151481628418, "per_token_entropy": [0.6497243046760559, 1.9937435388565063, 0.03287400305271149, 0.2621140480041504, 0.0002640137099660933, 8.523101132595912e-05, 0.06182597950100899, 0.26949334144592285, 7.521823135903105e-05, 0.0015983913326635957, 0.001660517300479114, 0.01023272518068552, 0.0034397027920931578, 0.0018760239472612739, 0.0041558099910616875, 0.0001461399078834802, 8.070142939686775e-05, 8.666139910928905e-05, 0.00018451895448379219, 0.2373061329126358, 0.0529310368001461, 0.010956602171063423, 7.497983460780233e-05, 0.0046000611037015915, 0.547618567943573, 0.013352966867387295, 0.9115311503410339, 0.13822148740291595, 0.34315112233161926, 0.0021755853667855263, 0.27396994829177856, 0.004675408825278282, 0.5905952453613281, 0.014386383816599846, 0.44983944296836853, 0.002280374988913536, 0.042702969163656235, 0.0029806732200086117, 0.24775418639183044, 0.003388023469597101, 0.0719461515545845, 0.07882606983184814, 0.2324836701154709, 0.036768607795238495, 0.2580258846282959, 0.00027259447961114347, 7.092700980138034e-05, 0.028024543076753616, 0.1274016946554184, 5.769562994828448e-05, 0.0029118540696799755, 0.002885703928768635], "tokens": [13, 18884, 869, 1491, 29873, 1461, 29898, 2371, 585, 29889, 657, 4301, 12877, 29898, 1491, 3018, 29882, 355, 4301, 467, 1958, 6857, 666, 368, 29898, 20787, 876, 13, 29966, 29989, 13168, 29901, 29896, 29989, 5299, 29989, 13168, 29901, 29896, 29989, 29958, 13, 18884, 869, 1491, 29873, 1461, 29898, 2371, 585, 29889, 657]}
