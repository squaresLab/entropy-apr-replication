{"line_number": 146, "line_type": "original", "code": "            if (numerator==Integer.MIN_VALUE ||", "entropy": 1.573127031326294, "is_bug_line": false, "sus_score": 0.6163195371627808, "per_token_entropy": [7.962485313415527, 4.008406162261963, 0.1239023357629776, 2.123344898223877, 0.005550686735659838, 1.842968225479126, 1.270448088645935, 0.004051572643220425, 0.027560776099562645, 0.0006286313873715699, 0.00018320789968129247, 1.5079935789108276], "tokens": [632, 565, 313, 8058, 1061, 1360, 7798, 29889, 16173, 29918, 19143, 3830]}
{"line_number": 146, "line_type": "generated", "code": "\n     *", "entropy": 0.10700111836194992, "is_bug_line": false, "sus_score": 0.6163195371627808, "per_token_entropy": [0.14182646572589874, 0.14493732154369354, 0.03423955664038658], "tokens": [13, 268, 334]}
{"line_number": 470, "line_type": "original", "code": "        return Fraction.getFraction(numerator / gcd, denominator / gcd);", "entropy": 1.2975473403930664, "is_bug_line": false, "sus_score": 0.6146706938743591, "per_token_entropy": [7.886889934539795, 2.4725430011749268, 4.56908655166626, 0.0010546842822805047, 0.05157177150249481, 0.5888417363166809, 0.6786818504333496, 2.9682672902708873e-05, 0.34388333559036255, 0.5225428342819214, 5.6622808187967166e-05, 7.531478404998779, 1.6683448553085327, 0.017937934026122093, 0.21749897301197052, 0.39747118949890137, 6.4490144723095e-05, 0.14788411557674408, 0.008514057844877243, 0.0004223884898237884, 0.14369575679302216], "tokens": [308, 736, 7347, 428, 29889, 657, 29943, 13857, 29898, 8058, 1061, 847, 330, 2252, 29892, 14267, 1061, 847, 330, 2252, 416]}
{"line_number": 470, "line_type": "generated", "code": "\n    public Fraction abs() {\n        return (numerator>=0 ? this : negate());\n    }\n\n    /**\n     *", "entropy": 0.19991517066955566, "is_bug_line": false, "sus_score": 0.6146706938743591, "per_token_entropy": [0.05954054743051529, 1.0119802951812744, 1.2384499311447144, 0.046853192150592804, 2.3603161025675945e-05, 0.04332975670695305, 0.008859492838382721, 0.006525399163365364, 0.013827248476445675, 0.06781944632530212, 0.7551889419555664, 0.5375625491142273, 0.03187326714396477, 1.9550132492440753e-05, 1.6565438508987427, 0.0107320761308074, 0.1553710550069809, 0.009118224494159222, 0.006435859017074108, 0.17455342411994934, 6.675497570540756e-05, 0.03852156922221184, 0.011267601512372494, 0.04254886507987976, 0.0036227568052709103, 0.016601277515292168, 0.06579529494047165, 0.04128922522068024, 0.33624911308288574, 0.005257708020508289, 0.0011099375551566482, 0.0003475538978818804], "tokens": [13, 1678, 970, 7347, 428, 6425, 580, 426, 13, 4706, 736, 313, 8058, 1061, 18572, 29900, 1577, 445, 584, 3480, 403, 3310, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334]}
{"line_number": 150, "line_type": "original", "code": "            numerator = -numerator;", "entropy": 3.495651960372925, "is_bug_line": false, "sus_score": 0.6146570444107056, "per_token_entropy": [4.188394546508789, 6.255302906036377, 0.0007223857101053, 1.8848621845245361, 7.101517677307129, 7.960134983062744, 0.0018767378060147166, 0.5724045634269714], "tokens": [632, 4825, 1061, 353, 448, 8058, 1061, 29936]}
{"line_number": 150, "line_type": "generated", "code": "\n     * fraction will be 1/2.</p>\n     *\n     *", "entropy": 0.17822787165641785, "is_bug_line": false, "sus_score": 0.6146570444107056, "per_token_entropy": [0.8469389081001282, 0.20629160106182098, 0.005161294247955084, 0.7065795660018921, 0.22746531665325165, 0.6326882839202881, 0.3909662365913391, 0.006092666182667017, 0.001763218897394836, 0.006918403785675764, 0.24533067643642426, 0.0015010291244834661, 0.0016233850037679076, 0.0076457480899989605, 0.033193252980709076, 0.0010939810890704393, 0.04993988573551178, 0.014863817021250725, 0.00027211778797209263], "tokens": [13, 268, 334, 15958, 674, 367, 29871, 29896, 29914, 29906, 21106, 29886, 29958, 13, 268, 334, 13, 268, 334]}
{"line_number": 466, "line_type": "original", "code": "        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);", "entropy": 1.1274999380111694, "is_bug_line": true, "sus_score": 0.6143859028816223, "per_token_entropy": [6.315445423126221, 6.987939357757568, 4.035519123077393, 0.07711438834667206, 0.08829881995916367, 3.296720266342163, 0.001192454481497407, 0.3333534598350525, 0.00025233422638848424, 3.981510963058099e-05, 0.06421855837106705, 2.110663890838623, 0.003729413729161024, 0.0006282739923335612, 0.0011194637045264244, 0.03535829484462738, 0.0003275334893260151, 0.0030769407749176025, 0.31919488310813904, 1.7404405298293568e-05, 0.0032876271288841963], "tokens": [308, 938, 330, 2252, 353, 14176, 18877, 12596, 275, 272, 29898, 11309, 29889, 6897, 29898, 8058, 1061, 511, 14267, 1061, 416]}
{"line_number": 466, "line_type": "generated", "code": "\n     * @return a new fraction instance with the positive numerator\n     */\n    public Fraction abs() {\n        return (numerator", "entropy": 0.20605307817459106, "is_bug_line": true, "sus_score": 0.6143859028816223, "per_token_entropy": [0.057606685906648636, 0.557101845741272, 0.07648490369319916, 0.3543519675731659, 0.07409019768238068, 0.16605402529239655, 0.0616925023496151, 0.011551400646567345, 0.025355521589517593, 0.1669355183839798, 0.20484250783920288, 1.5943232774734497, 0.7915749549865723, 0.0017777367029339075, 0.13455167412757874, 0.15769824385643005, 0.13284140825271606, 0.004941512830555439, 0.03146442025899887, 0.010731014423072338, 0.0031752190552651882, 5.8412379075889476e-06, 0.018355857580900192, 0.0026150099001824856, 0.003453127108514309, 0.00849065463989973, 0.13705801963806152, 1.018265962600708, 0.5492386221885681, 0.031001092866063118, 1.5258672647178173e-05], "tokens": [13, 268, 334, 732, 2457, 263, 716, 15958, 2777, 411, 278, 6374, 4825, 1061, 13, 268, 3776, 13, 1678, 970, 7347, 428, 6425, 580, 426, 13, 4706, 736, 313, 8058, 1061]}
{"line_number": 467, "line_type": "original", "code": "        if (gcd == 1) {", "entropy": 2.123396635055542, "is_bug_line": false, "sus_score": 0.6078065633773804, "per_token_entropy": [5.090904712677002, 3.6539440155029297, 0.02616179548203945, 9.241251945495605, 0.05048644542694092, 1.507249116897583, 0.07330162078142166, 1.371172308921814, 0.205152690410614, 0.014343492686748505], "tokens": [308, 565, 313, 29887, 2252, 1275, 29871, 29896, 29897, 426]}
{"line_number": 467, "line_type": "generated", "code": "\n     * @return a new fraction instance with the opposite signed numerator\n     */\n    public Fraction abs() {\n        if (numerator", "entropy": 0.15245649218559265, "is_bug_line": false, "sus_score": 0.6078065633773804, "per_token_entropy": [0.2311365008354187, 0.6574015021324158, 0.18556062877178192, 0.14105020463466644, 0.10619599372148514, 0.30700355768203735, 0.06007784977555275, 0.01651873253285885, 0.028054913505911827, 0.2059735208749771, 0.21712380647659302, 1.1971462965011597, 0.010012048296630383, 0.018006429076194763, 0.00013279033009894192, 0.20132288336753845, 0.16693218052387238, 0.17517276108264923, 0.009035414084792137, 0.04335601255297661, 0.014581190422177315, 0.008225374855101109, 3.671578815556131e-05, 0.028440475463867188, 0.003302004188299179, 0.004895011894404888, 0.009894846007227898, 0.13624456524848938, 0.6566417813301086, 0.009005761705338955, 0.030080612748861313, 4.541770613286644e-05], "tokens": [13, 268, 334, 732, 2457, 263, 716, 15958, 2777, 411, 278, 11564, 8794, 4825, 1061, 13, 268, 3776, 13, 1678, 970, 7347, 428, 6425, 580, 426, 13, 4706, 565, 313, 8058, 1061]}
{"line_number": 151, "line_type": "original", "code": "            denominator = -denominator;", "entropy": 2.661872148513794, "is_bug_line": false, "sus_score": 0.6045650243759155, "per_token_entropy": [9.529464721679688, 8.088624000549316, 0.005960665177553892, 0.7972495555877686, 4.93267822265625, 0.5696353316307068, 0.0042977831326425076, 0.00011979816190432757, 0.02881755121052265], "tokens": [632, 14267, 1061, 353, 448, 1145, 5817, 1061, 29936]}
{"line_number": 151, "line_type": "generated", "code": "\n     *\n     * @param numerator  the numerator, for example the three in 'three sevenths'\n     * @param denominator  the denominator, for example the seven in 'three sevenths'\n     * @return", "entropy": 0.019066259264945984, "is_bug_line": false, "sus_score": 0.6045650243759155, "per_token_entropy": [0.036954279989004135, 0.1671377569437027, 0.008275032043457031, 0.3915961682796478, 0.008167675696313381, 0.0002953569928649813, 0.1766313761472702, 0.007378824986517429, 0.038271136581897736, 2.90866428258596e-05, 0.005167223978787661, 0.0003177614707965404, 0.0010805251076817513, 2.3841830625315197e-06, 0.031561337411403656, 0.0017635759431868792, 0.00017438798386137933, 0.0006983225466683507, 0.045469798147678375, 0.0008043391280807555, 0.0005490464391186833, 0.007925491780042648, 0.003303548786789179, 0.0008275659638457, 0.0018552012043073773, 0.0007208371534943581, 0.0116348285228014, 1.6331539882230572e-05, 0.00029047083808109164, 0.0002727136597968638, 0.0031701093539595604, 6.961580220377073e-05, 0.000872946111485362, 7.664863369427621e-05, 0.0009034366230480373, 2.062299427052494e-05, 4.649054244509898e-05, 0.00024923557066358626, 6.210611172718927e-05, 3.528532761265524e-05, 0.0005551227368414402, 9.548207890475169e-05, 6.222531374078244e-05, 0.00024089295766316354, 0.001490316353738308, 0.0003511289251036942, 0.000311802898067981, 0.0012466285843402147, 0.009701485745608807, 0.007284509018063545, 0.0014869834994897246, 0.013939994387328625], "tokens": [13, 268, 334, 13, 268, 334, 732, 3207, 4825, 1061, 29871, 278, 4825, 1061, 29892, 363, 1342, 278, 2211, 297, 525, 17536, 16741, 9499, 29915, 13, 268, 334, 732, 3207, 14267, 1061, 29871, 278, 14267, 1061, 29892, 363, 1342, 278, 9881, 297, 525, 17536, 16741, 9499, 29915, 13, 268, 334, 732, 2457]}
{"line_number": 468, "line_type": "original", "code": "            return this;", "entropy": 3.5232508182525635, "is_bug_line": false, "sus_score": 0.5928579568862915, "per_token_entropy": [6.152915954589844, 4.201250076293945, 3.426145553588867, 0.3126913607120514], "tokens": [632, 736, 445, 29936]}
{"line_number": 468, "line_type": "generated", "code": "\n     */\n    public Fraction abs() {\n        if (numerator==Integer.MIN_VALUE) {\n            throw new ArithmeticException(\"overflow: can't negate numerator\");\n        }\n        if (numerator", "entropy": 0.11447537690401077, "is_bug_line": false, "sus_score": 0.5928579568862915, "per_token_entropy": [0.2894402742385864, 0.13646996021270752, 0.2508222460746765, 0.004200327210128307, 0.03251634165644646, 0.009230793453752995, 0.004329712130129337, 1.2755313036905136e-05, 0.019868170842528343, 0.002087796339765191, 0.002452106447890401, 0.00590520491823554, 0.11011456698179245, 0.7131863236427307, 0.008155260235071182, 0.027158169075846672, 1.4781842764932662e-05, 2.3949520587921143, 0.03557989373803139, 0.00011455356434453279, 0.0014019908849149942, 2.1815061700181104e-05, 2.9444261599564925e-05, 0.01216315757483244, 0.0019392033573240042, 0.003703166265040636, 0.025355638936161995, 0.1174100786447525, 0.0003519630990922451, 0.006858853157609701, 5.125986263010418e-06, 7.86750388215296e-05, 0.0055772410705685616, 0.04700686037540436, 0.01164661068469286, 0.7570623755455017, 0.0018888743361458182, 0.00010525626566959545, 0.06122525781393051, 0.00024029705673456192, 0.09435737133026123, 0.00010191874753218144, 0.009383858181536198, 0.001796657219529152, 0.006002732086926699, 0.00044204952428117394, 0.00427712919190526, 0.1167331263422966, 0.6103562116622925, 0.002791914390400052, 0.005782542284578085, 1.07287787614041e-05], "tokens": [13, 268, 3776, 13, 1678, 970, 7347, 428, 6425, 580, 426, 13, 4706, 565, 313, 8058, 1061, 1360, 7798, 29889, 16173, 29918, 19143, 29897, 426, 13, 9651, 3183, 716, 826, 18542, 2451, 703, 2262, 29901, 508, 29915, 29873, 3480, 403, 4825, 1061, 1496, 13, 4706, 500, 13, 4706, 565, 313, 8058, 1061]}
{"line_number": 590, "line_type": "original", "code": "        int t = ((u&1)==1) ? v : -(u/2)/*B3*/;", "entropy": 2.4504168033599854, "is_bug_line": false, "sus_score": 0.5564338564872742, "per_token_entropy": [5.38815450668335, 7.615658760070801, 5.630435466766357, 0.11688321083784103, 4.937352180480957, 5.582150459289551, 2.1017045974731445, 3.436802625656128, 0.2590412199497223, 0.4774121642112732, 1.5225181579589844, 0.6510984301567078, 0.0554879754781723, 2.7097315788269043, 0.32014116644859314, 7.435703754425049, 1.2489265203475952, 1.388757586479187, 0.0045625632628798485, 1.8330473899841309, 3.3736047744750977, 2.3836352825164795, 2.64644455909729, 0.10974974185228348, 0.031412553042173386], "tokens": [308, 938, 260, 353, 5135, 29884, 29987, 29896, 29897, 1360, 29896, 29897, 1577, 325, 584, 19691, 29884, 29914, 29906, 29897, 5515, 29933, 29941, 3877, 29936]}
{"line_number": 590, "line_type": "generated", "code": "\n     * @throws ArithmeticException if the result can not be represented as\n     *                             an int\n     */\n    private static int mulPosAndCheck(int x, int y) {\n        long m = ((long)", "entropy": 0.05538593605160713, "is_bug_line": false, "sus_score": 0.5564338564872742, "per_token_entropy": [0.2825008034706116, 0.2335551679134369, 0.14767299592494965, 0.013619359582662582, 0.018786827102303505, 0.0002212279650848359, 0.06405621767044067, 0.00018475732940714806, 0.0010371787939220667, 0.007268296089023352, 0.020465051755309105, 0.0012190061388537288, 0.012537001632153988, 0.0011993603548035026, 0.0007017772295512259, 0.00642768619582057, 0.06513886898756027, 0.039663370698690414, 0.012681791558861732, 0.0006754500791430473, 0.012306353077292442, 0.007225216832011938, 0.18733230233192444, 0.09661166369915009, 0.03365902602672577, 0.2689904272556305, 0.0755750834941864, 0.01402910053730011, 0.037072259932756424, 0.04477972164750099, 0.00494803674519062, 0.03080136701464653, 0.04933243244886398, 0.4088282883167267, 0.14879469573497772, 0.001293656532652676, 0.00486179580911994, 0.02307130955159664, 0.002641761675477028, 0.0008559139096178114, 0.0019456282025203109, 0.0005414212355390191, 0.0027115503326058388, 0.008377883583307266, 0.00930354930460453, 0.10510905086994171, 0.30854010581970215, 0.008849803358316422, 0.0024194037541747093, 0.04755673557519913, 0.00153840403072536, 0.0005527398898266256], "tokens": [13, 268, 334, 732, 386, 5727, 826, 18542, 2451, 565, 278, 1121, 508, 451, 367, 9875, 408, 13, 268, 334, 462, 632, 385, 938, 13, 268, 3776, 13, 1678, 2024, 2294, 938, 15065, 9135, 2855, 5596, 29898, 524, 921, 29892, 938, 343, 29897, 426, 13, 4706, 1472, 286, 353, 5135, 5426, 29897]}
{"line_number": 571, "line_type": "original", "code": "        if (Math.abs(u) <= 1 || Math.abs(v) <= 1) {", "entropy": 1.5781986713409424, "is_bug_line": false, "sus_score": 0.5531389117240906, "per_token_entropy": [5.002887725830078, 5.322141647338867, 0.38773113489151, 6.304487228393555, 0.08609165251255035, 0.595384955406189, 0.009276148863136768, 11.291967391967773, 0.6276406049728394, 3.664869546890259, 2.051018714904785, 0.9293419122695923, 1.1019411087036133, 0.12049848586320877, 0.0029608244076371193, 0.00016962042718660086, 0.003113900311291218, 0.04122333601117134, 0.0017088347813114524, 0.009046164341270924, 0.11820711940526962, 0.021419158205389977, 0.15029217302799225, 0.03334234654903412], "tokens": [308, 565, 313, 11309, 29889, 6897, 29898, 29884, 29897, 5277, 29871, 29896, 3830, 5792, 29889, 6897, 29898, 29894, 29897, 5277, 29871, 29896, 29897, 426]}
{"line_number": 571, "line_type": "generated", "code": "\n     * @return the product", "entropy": 0.19490991532802582, "is_bug_line": false, "sus_score": 0.5531389117240906, "per_token_entropy": [0.24650217592716217, 0.39251962304115295, 0.09893452376127243, 0.04408768191933632, 0.124533511698246, 0.3554554879665375, 0.10233636200428009], "tokens": [13, 268, 334, 732, 2457, 278, 3234]}
{"line_number": 606, "line_type": "original", "code": "            t = (v - u)/2;", "entropy": 3.8728833198547363, "is_bug_line": false, "sus_score": 0.5513301491737366, "per_token_entropy": [6.995280742645264, 10.339850425720215, 1.8049890995025635, 2.265597343444824, 5.287315368652344, 4.165119171142578, 2.6987714767456055, 4.844343185424805, 0.09351296722888947, 0.23405326902866364], "tokens": [632, 260, 353, 313, 29894, 448, 318, 6802, 29906, 29936]}
{"line_number": 606, "line_type": "generated", "code": "\n     * @param y an addend\n<|mask:0|><|mask:1|>\n     * @return the sum", "entropy": 0.08416228741407394, "is_bug_line": false, "sus_score": 0.5513301491737366, "per_token_entropy": [0.09668460488319397, 0.05835960805416107, 0.004214690998196602, 0.002852896461263299, 0.00924673955887556, 0.0020015460904687643, 0.010987612418830395, 0.0022769258357584476, 0.003621806390583515, 0.02762768790125847, 0.891130805015564, 0.002454246859997511, 0.028454147279262543, 0.015228433534502983, 0.736086905002594, 0.005450270138680935, 0.3405870199203491, 0.000601349223870784, 0.01099975686520338, 0.0063874139450490475, 0.2132558673620224, 0.001889588194899261, 0.0033568956423550844, 0.011216796934604645, 0.01981651596724987, 0.001022650278173387, 0.003213600954040885, 0.005583405494689941, 0.009387400932610035, 0.000871159543748945], "tokens": [13, 268, 334, 732, 3207, 343, 385, 788, 355, 13, 29966, 29989, 13168, 29901, 29900, 29989, 5299, 29989, 13168, 29901, 29896, 29989, 29958, 13, 268, 334, 732, 2457, 278, 2533]}
{"line_number": 581, "line_type": "original", "code": "        int k=0;", "entropy": 4.271174430847168, "is_bug_line": false, "sus_score": 0.5509442687034607, "per_token_entropy": [5.412043571472168, 6.587427139282227, 7.359474182128906, 4.587769031524658, 1.6464886665344238, 0.033845044672489166], "tokens": [308, 938, 413, 29922, 29900, 29936]}
{"line_number": 581, "line_type": "generated", "code": "\n        return (int) m;\n    }\n\n    /** \n     * Divide two integers, checking for overflow.\n     * \n     * @param p a dividend\n     * @param q a divisor\n    ", "entropy": 0.16407373547554016, "is_bug_line": false, "sus_score": 0.5509442687034607, "per_token_entropy": [0.10096248984336853, 0.04613003134727478, 0.04968344792723656, 0.03413057327270508, 0.0018356868531554937, 0.0018511555390432477, 1.601531744003296, 0.0015436412068083882, 0.025407705456018448, 0.04003268852829933, 0.000714404450263828, 0.01273063849657774, 0.056956805288791656, 0.047702908515930176, 0.14500589668750763, 0.6018247604370117, 0.00019107422849629074, 0.002894618781283498, 5.3881147323409095e-05, 1.0915170907974243, 0.0022794236429035664, 0.020993990823626518, 0.01679026149213314, 0.013309914618730545, 0.001077190856449306, 0.00019464982324279845, 0.03632807731628418, 0.02550683543086052, 0.01320580393075943, 0.0016769407084211707, 0.00011002412065863609, 0.06452617049217224, 0.00033241944038309157, 0.0004107108688913286, 3.886147169396281e-05, 0.004811969585716724, 0.0007611000328324735, 1.1860321760177612, 2.435931444168091, 0.595098614692688, 5.602679812000133e-05, 0.008419375866651535, 9.941560711013153e-05, 6.747018051100895e-05, 7.86750388215296e-05, 0.0001264730526600033, 0.0005600076401606202, 0.0060815284959971905, 0.007855593226850033, 7.784063927829266e-05, 0.22614455223083496, 0.00014852374442853034], "tokens": [13, 4706, 736, 313, 524, 29897, 286, 29936, 13, 1678, 500, 13, 13, 1678, 7762, 29871, 13, 268, 334, 4910, 680, 1023, 11920, 29892, 8454, 363, 11969, 29889, 13, 268, 334, 29871, 13, 268, 334, 732, 3207, 282, 263, 25227, 355, 13, 268, 334, 732, 3207, 3855, 263, 8572, 272, 13, 268]}
{"line_number": 582, "line_type": "original", "code": "        while ((u&1)==0 && (v&1)==0 && k<31) { // while u and v are both even...", "entropy": 1.2659062147140503, "is_bug_line": false, "sus_score": 0.548366367816925, "per_token_entropy": [5.712979793548584, 11.411014556884766, 2.0334556102752686, 6.627527236938477, 1.3260546922683716, 0.41355183720588684, 0.02314143255352974, 0.21102793514728546, 0.02983291819691658, 0.496654212474823, 0.10563153773546219, 0.014083405956625938, 0.00610344810411334, 0.002809508005157113, 0.001465200330130756, 0.010382568463683128, 0.00829784944653511, 4.28654146194458, 3.1576733589172363, 1.2903316020965576, 0.036072153598070145, 0.12060520797967911, 0.037531983107328415, 0.00901450403034687, 1.8975473642349243, 1.520132064819336, 0.3996286988258362, 0.06424561142921448, 0.011552814394235611, 0.004959899000823498, 0.37681734561920166, 0.0182130578905344, 0.11001642793416977], "tokens": [308, 1550, 5135, 29884, 29987, 29896, 29897, 1360, 29900, 2607, 313, 29894, 29987, 29896, 29897, 1360, 29900, 2607, 413, 29966, 29941, 29896, 29897, 426, 849, 1550, 318, 322, 325, 526, 1716, 1584, 856]}
{"line_number": 582, "line_type": "generated", "code": "\n    }\n\n    /**\n     *", "entropy": 0.1918046772480011, "is_bug_line": false, "sus_score": 0.548366367816925, "per_token_entropy": [0.15073129534721375, 0.6056321859359741, 0.0302731953561306, 0.021207822486758232, 0.0737617090344429, 0.051449939608573914, 0.16797293722629547, 0.8128708600997925, 0.0040121544152498245, 0.00013457823661156], "tokens": [13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334]}
{"line_number": 153, "line_type": "original", "code": "        return new Fraction(numerator, denominator);", "entropy": 1.2636358737945557, "is_bug_line": false, "sus_score": 0.5393239259719849, "per_token_entropy": [7.237299919128418, 6.227968215942383, 0.7018757462501526, 0.015673426911234856, 7.819823804311454e-05, 0.06282037496566772, 0.46585923433303833, 0.007010031491518021, 0.1785300225019455, 0.20464502274990082, 9.047575440490618e-05, 0.06177924573421478], "tokens": [308, 736, 716, 7347, 428, 29898, 8058, 1061, 29892, 14267, 1061, 416]}
{"line_number": 153, "line_type": "generated", "code": "\n    /**\n     *", "entropy": 0.3405018746852875, "is_bug_line": false, "sus_score": 0.5393239259719849, "per_token_entropy": [0.05029125511646271, 0.7701005339622498, 1.204697847366333, 0.007284864317625761, 0.010407225228846073, 0.00022933237778488547], "tokens": [13, 1678, 7762, 13, 268, 334]}
{"line_number": 145, "line_type": "original", "code": "        if (denominator < 0) {", "entropy": 1.3890012502670288, "is_bug_line": false, "sus_score": 0.5388942360877991, "per_token_entropy": [7.388893127441406, 5.055802822113037, 0.03880450502038002, 1.447594165802002, 0.01221485622227192, 0.0023246188648045063, 1.2022873163223267, 0.012849980965256691, 0.002650321926921606, 0.09877955913543701, 0.016812652349472046], "tokens": [308, 565, 313, 1145, 5817, 1061, 529, 29871, 29900, 29897, 426]}
{"line_number": 145, "line_type": "generated", "code": "\n    /**\n     *", "entropy": 0.08826353400945663, "is_bug_line": false, "sus_score": 0.5388942360877991, "per_token_entropy": [0.08428017050027847, 0.2701655924320221, 0.1577698290348053, 0.01247543003410101, 0.0046623568050563335, 0.0002277830062666908], "tokens": [13, 1678, 7762, 13, 268, 334]}
{"line_number": 585, "line_type": "original", "code": "        if (k==31) {", "entropy": 2.9222800731658936, "is_bug_line": false, "sus_score": 0.5296764373779297, "per_token_entropy": [5.997730255126953, 5.7000627517700195, 0.25663626194000244, 6.659553527832031, 2.074740409851074, 4.660918235778809, 0.7177474498748779, 0.15279830992221832, 0.08033144474029541], "tokens": [308, 565, 313, 29895, 1360, 29941, 29896, 29897, 426]}
{"line_number": 585, "line_type": "generated", "code": "\n     *", "entropy": 0.3201841711997986, "is_bug_line": false, "sus_score": 0.5296764373779297, "per_token_entropy": [0.2781934440135956, 0.5150581002235413, 0.16730093955993652], "tokens": [13, 268, 334]}
{"line_number": 368, "line_type": "original", "code": "        return numerator;", "entropy": 2.599111557006836, "is_bug_line": false, "sus_score": 0.507981538772583, "per_token_entropy": [6.2536091804504395, 3.6741747856140137, 0.245639368891716, 0.0006255338666960597, 2.8215086460113525], "tokens": [308, 736, 4825, 1061, 29936]}
{"line_number": 368, "line_type": "generated", "code": "\n    }\n\n    /**\n     *", "entropy": 0.12831641733646393, "is_bug_line": false, "sus_score": 0.507981538772583, "per_token_entropy": [0.13633069396018982, 0.49883005023002625, 0.374883770942688, 0.014429155737161636, 0.10300570726394653, 0.04395638406276703, 0.0948176383972168, 0.006975583266466856, 0.002052940195426345, 0.007882204838097095], "tokens": [13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334]}
{"line_number": 377, "line_type": "original", "code": "        return denominator;", "entropy": 3.2143571376800537, "is_bug_line": false, "sus_score": 0.5078836679458618, "per_token_entropy": [6.147622585296631, 1.6218304634094238, 5.179831504821777, 0.0003327769518364221, 3.122166395187378], "tokens": [308, 736, 14267, 1061, 29936]}
{"line_number": 377, "line_type": "generated", "code": "\n     * @return the whole number fraction part\n     */\n    public long longValue() {\n        return numerator / denominator;\n    }\n\n    /**\n     *", "entropy": 0.06923864781856537, "is_bug_line": false, "sus_score": 0.5078836679458618, "per_token_entropy": [0.13212133944034576, 1.0064928531646729, 0.20637325942516327, 0.2526140511035919, 0.044801265001297, 0.010072591714560986, 0.012439168058335781, 0.005090252961963415, 0.004163170233368874, 0.0007911174325272441, 0.05912679433822632, 0.18899764120578766, 0.038608625531196594, 0.002538080094382167, 0.05671173706650734, 0.020771590992808342, 0.010016769170761108, 0.0041547417640686035, 0.0004196478403173387, 0.004989197477698326, 0.0016861044568940997, 0.0029693818651139736, 0.16254135966300964, 0.02042277157306671, 0.25907349586486816, 3.6477376852417365e-05, 0.0030499629210680723, 0.03700092062354088, 6.079655122448457e-06, 0.0028008301742374897, 0.0035649100318551064, 0.11536116153001785, 0.0013549680588766932, 0.006074063945561647, 0.021621350198984146, 0.03689178079366684, 0.03058217652142048, 0.0005566716426983476, 0.0019387274514883757, 0.0007185738068073988], "tokens": [13, 268, 334, 732, 2457, 278, 3353, 1353, 15958, 760, 13, 268, 3776, 13, 1678, 970, 1472, 1472, 1917, 580, 426, 13, 4706, 736, 4825, 1061, 847, 14267, 1061, 29936, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334]}
{"line_number": 142, "line_type": "original", "code": "        if (denominator == 0) {", "entropy": 1.2508089542388916, "is_bug_line": false, "sus_score": 0.4987470507621765, "per_token_entropy": [5.60488224029541, 4.209897994995117, 0.01995336264371872, 1.1599833965301514, 0.0008041008841246367, 7.045020902296528e-05, 1.8593566417694092, 0.07244345545768738, 0.8089690804481506, 0.011751944199204445, 0.010785499587655067], "tokens": [308, 565, 313, 1145, 5817, 1061, 1275, 29871, 29900, 29897, 426]}
{"line_number": 142, "line_type": "generated", "code": "\n            throw new ArithmeticException(\"The denominator must not be zero\");\n        }\n        if (denominator", "entropy": 0.11270653456449509, "is_bug_line": false, "sus_score": 0.4987470507621765, "per_token_entropy": [0.05082448199391365, 1.2751398086547852, 0.29523351788520813, 0.00038354191929101944, 0.011578031815588474, 1.2874520507466514e-05, 9.929640509653836e-05, 0.007703359238803387, 0.7811198830604553, 0.15358379483222961, 0.0001161031104857102, 0.003807677188888192, 0.0068942527286708355, 0.0006414977833628654, 0.14013679325580597, 0.003299984149634838, 0.002253851620480418, 0.013783510774374008, 0.002206393051892519, 0.006493302993476391, 0.05594968423247337, 0.08097544312477112, 0.0007414452848024666, 0.03717115893959999, 0.00016318420239258558, 5.709961988031864e-05], "tokens": [13, 9651, 3183, 716, 826, 18542, 2451, 703, 1576, 14267, 1061, 1818, 451, 367, 5225, 1496, 13, 4706, 500, 13, 4706, 565, 313, 1145, 5817, 1061]}
{"line_number": 572, "line_type": "original", "code": "            return 1;", "entropy": 3.866208791732788, "is_bug_line": false, "sus_score": 0.4979514181613922, "per_token_entropy": [6.9155120849609375, 5.468874931335449, 3.8269433975219727, 2.8787498474121094, 0.24096204340457916], "tokens": [632, 736, 29871, 29896, 29936]}
{"line_number": 572, "line_type": "generated", "code": "\n     * @throws ArithmeticException if the result can not be represented as\n     * an int\n     */\n    private static int multiplyAndCheck(int x, int y) {\n        long m = (long)x * (", "entropy": 0.15298154950141907, "is_bug_line": false, "sus_score": 0.4979514181613922, "per_token_entropy": [0.2435261458158493, 0.10683629661798477, 0.3030455410480499, 0.034910235553979874, 0.0542750246822834, 9.655486064730212e-05, 0.048519305884838104, 0.00020621081057470292, 0.0012853225925937295, 0.019554808735847473, 0.00034409802174195647, 0.034987132996320724, 0.42472612857818604, 0.0053344289772212505, 0.0003762729174923152, 0.02592276968061924, 0.26372230052948, 0.6831067800521851, 0.0051236990839242935, 0.0003399271226953715, 0.7062379121780396, 0.6631280183792114, 0.11766625940799713, 0.1563105285167694, 0.29035598039627075, 0.009043801575899124, 0.03700942173600197, 0.18611003458499908, 0.080889031291008, 0.01858733780682087, 0.7959163784980774, 1.276500940322876, 3.504691630951129e-05, 0.0075617507100105286, 0.025751188397407532, 0.002609540708363056, 0.0005015069036744535, 0.0054233563132584095, 0.0007191693875938654, 0.005482755601406097, 0.06118825078010559, 0.005300634540617466, 0.10940946638584137, 0.1047651469707489, 0.1479087918996811, 5.924526340095326e-05, 0.38611364364624023, 0.004544881638139486, 0.0010768335778266191, 0.372342586517334, 0.1162354052066803, 0.004016784951090813], "tokens": [13, 268, 334, 732, 386, 5727, 826, 18542, 2451, 565, 278, 1121, 508, 451, 367, 9875, 408, 13, 268, 334, 385, 938, 13, 268, 3776, 13, 1678, 2024, 2294, 938, 22932, 2855, 5596, 29898, 524, 921, 29892, 938, 343, 29897, 426, 13, 4706, 1472, 286, 353, 313, 5426, 29897, 29916, 334, 313]}
{"line_number": 610, "line_type": "original", "code": "        return -u*(1<<k); // gcd is u*2^k", "entropy": 3.212709426879883, "is_bug_line": false, "sus_score": 0.4974629282951355, "per_token_entropy": [6.168618679046631, 10.85107421875, 7.224481582641602, 7.969403266906738, 7.26268196105957, 3.021606683731079, 2.7812092304229736, 1.341753363609314, 0.21445831656455994, 2.521623134613037, 2.069974660873413, 0.0650533139705658, 0.35896196961402893, 4.375653266906738, 1.5883733034133911, 0.00652279332280159, 0.003253288334235549, 0.004067600704729557], "tokens": [308, 736, 448, 29884, 16395, 29896, 9314, 29895, 416, 849, 330, 2252, 338, 318, 29930, 29906, 29985, 29895]}
{"line_number": 610, "line_type": "generated", "code": "\n    }\n\n    /** \n     * Add two non-negative integers, checking for overflow.\n     * \n     * @param x a non-negative addend\n     * @param y a non-negative addend\n    ", "entropy": 0.10676426440477371, "is_bug_line": false, "sus_score": 0.4974629282951355, "per_token_entropy": [0.21505321562290192, 1.0031802654266357, 0.23140506446361542, 0.013047793880105019, 0.4792882204055786, 0.12385673075914383, 0.273373544216156, 0.6985116004943848, 0.00046206763363443315, 0.012996725738048553, 0.0004919749335385859, 1.4837193489074707, 0.11497348546981812, 0.5617754459381104, 0.002115037990733981, 0.0015061474405229092, 0.006727900356054306, 0.0019185009878128767, 0.005118480417877436, 0.0008063640561886132, 0.004232971463352442, 0.07897886633872986, 0.017535297200083733, 0.02726512774825096, 0.0005818104837089777, 0.040942683815956116, 0.00020823694649152458, 0.0021031422074884176, 0.000325388420606032, 0.0017460829112678766, 0.0004549183649942279, 0.0071874624118208885, 0.01824384368956089, 0.008375992067158222, 0.0017748808022588491, 0.0015066235791891813, 0.057496845722198486, 0.001383896335028112, 0.012097440659999847, 0.0035306992940604687, 0.00024959311122074723, 5.1377883210079744e-05, 0.00017438798386137933, 0.000289159914245829, 0.0071771652437746525, 0.0006694936309941113, 0.0011080323019996285, 0.004027708433568478, 0.0027147603686898947, 0.0009520289022475481, 0.004710054956376553, 0.01331732515245676], "tokens": [13, 1678, 500, 13, 13, 1678, 7762, 29871, 13, 268, 334, 3462, 1023, 1661, 29899, 22198, 11920, 29892, 8454, 363, 11969, 29889, 13, 268, 334, 29871, 13, 268, 334, 732, 3207, 921, 263, 1661, 29899, 22198, 788, 355, 13, 268, 334, 732, 3207, 343, 263, 1661, 29899, 22198, 788, 355, 13, 268]}
{"line_number": 609, "line_type": "original", "code": "        } while (t!=0);", "entropy": 2.8249027729034424, "is_bug_line": false, "sus_score": 0.47189176082611084, "per_token_entropy": [3.888772964477539, 9.059415817260742, 5.905533313751221, 0.09077082574367523, 2.9305949211120605, 0.6431031227111816, 0.028394591063261032, 0.052636802196502686], "tokens": [308, 500, 1550, 313, 29873, 19216, 29900, 416]}
{"line_number": 609, "line_type": "generated", "code": "    * an int\n     */\n    private static int addAndCheck(int x, int y) {\n        long s = ((long)x)+((long)y);\n        if (s", "entropy": 0.10849762707948685, "is_bug_line": false, "sus_score": 0.47189176082611084, "per_token_entropy": [0.8715108633041382, 0.2793872058391571, 1.0462422370910645, 0.03105425275862217, 0.02708554081618786, 0.06778881698846817, 0.02222161553800106, 0.009811509400606155, 0.03710246831178665, 0.019238542765378952, 0.0015126940561458468, 0.005505518056452274, 0.00643905671313405, 0.003582252422347665, 0.0007319155265577137, 0.0035253537353128195, 0.00900139007717371, 0.000724887300748378, 0.0004049911512993276, 0.0017390617867931724, 0.0002862997353076935, 0.0018623403739184141, 0.00451426487416029, 0.004426917992532253, 0.06382563710212708, 1.110135555267334, 0.01603669300675392, 0.000985494232736528, 0.014343845658004284, 0.0004029654082842171, 0.0001726001501083374, 0.0044050803408026695, 0.8281251192092896, 0.023013761267066002, 0.00048744716332294047, 0.0004383556661196053, 0.0004800597671419382, 0.0003116837178822607, 0.011078514158725739, 0.06628327816724777, 0.01503011304885149, 0.032455410808324814, 0.021686559543013573], "tokens": [268, 334, 385, 938, 13, 268, 3776, 13, 1678, 2024, 2294, 938, 788, 2855, 5596, 29898, 524, 921, 29892, 938, 343, 29897, 426, 13, 4706, 1472, 269, 353, 5135, 5426, 29897, 29916, 7240, 3552, 5426, 29897, 29891, 416, 13, 4706, 565, 313, 29879]}
