{"line_number": 1080, "line_type": "original", "code": "", "entropy": 5.14422082901001, "is_bug_line": false, "sus_score": 0.6041462421417236, "per_token_entropy": [4.91545295715332, 5.372988700866699], "tokens": [29871, 13]}
{"line_number": 1080, "line_type": "generated", "code": "\n        Node child = n.getFirstChild();\n        Node replacement = tryMinimizeCondition(child);\n        if (replacement != child) {\n          Node newNode = new Node(n.getType(), replacement).copyInformation", "entropy": 0.2308911234140396, "is_bug_line": false, "sus_score": 0.6041462421417236, "per_token_entropy": [0.4620841443538666, 0.12290205806493759, 0.7785928845405579, 0.3244216740131378, 0.03493164852261543, 0.09213093668222427, 0.0002337421028641984, 0.02209114283323288, 0.031060840934515, 7.497983460780233e-05, 0.005501013249158859, 0.0017206162447109818, 0.31285589933395386, 1.0358606576919556, 0.777804434299469, 0.2869396507740021, 0.05146930366754532, 0.005108043551445007, 0.0004070168943144381, 0.000125281119835563, 0.002462571021169424, 0.001627550576813519, 0.009501473978161812, 0.003256258787587285, 0.002588733099400997, 0.28283604979515076, 0.14970353245735168, 0.03345003351569176, 0.11614667624235153, 1.0490362910786644e-05, 0.19624099135398865, 0.0759856253862381, 0.03533654659986496, 0.0013111574808135629, 0.003807677188888192, 0.03017592616379261, 1.7897282838821411, 1.1291781663894653, 0.5010594129562378, 0.06835132092237473, 0.8218823075294495, 0.02750951610505581, 0.004766767844557762, 0.8944879770278931, 0.006310418248176575, 0.005232686642557383, 0.004625573288649321, 0.12230676412582397, 0.12390728294849396, 1.1574680805206299, 0.04500756040215492, 0.013759289868175983], "tokens": [13, 4706, 9071, 2278, 353, 302, 29889, 657, 6730, 5938, 890, 13, 4706, 9071, 16920, 353, 1018, 8140, 326, 675, 25255, 29898, 5145, 416, 13, 4706, 565, 313, 3445, 9552, 2804, 2278, 29897, 426, 13, 3986, 9071, 716, 4247, 353, 716, 9071, 29898, 29876, 29889, 657, 1542, 3285, 16920, 467, 8552, 20350]}
{"line_number": 1428, "line_type": "original", "code": "      action = FoldArrayAction.SAFE_TO_FOLD_WITH_ARGS;", "entropy": 0.8677434325218201, "is_bug_line": false, "sus_score": 0.6039078235626221, "per_token_entropy": [6.296638011932373, 12.216022491455078, 0.1721796691417694, 0.7759456038475037, 0.01792844943702221, 0.8913655877113342, 0.0006114759016782045, 0.002531777834519744, 0.20445799827575684, 0.0006158839096315205, 9.30981186684221e-05, 0.000502817565575242, 0.0006624649395234883, 0.000922849983908236, 0.0010157431242987514, 0.00029738296871073544, 0.0006238659843802452, 0.006296084728091955, 0.0015947017818689346, 0.21780803799629211, 0.0009023646707646549, 0.002176061272621155, 0.0008012421894818544, 0.013847235590219498], "tokens": [539, 3158, 353, 383, 1025, 2588, 4276, 29889, 29903, 5098, 29923, 29918, 4986, 29918, 29943, 5607, 29928, 29918, 29956, 13054, 29918, 1718, 10749, 29936]}
{"line_number": 1428, "line_type": "generated", "code": "\n\n      String reString = pattern.getString();\n      String flagString = (null == flags) ? \"\" : flags.getString();\n\n      String re = \"/\" + reString + \"/\" + flagString;\n      Node newNode", "entropy": 0.44314414262771606, "is_bug_line": false, "sus_score": 0.6039078235626221, "per_token_entropy": [0.08586040139198303, 1.0613527297973633, 0.0860690101981163, 1.485802412033081, 2.4317216873168945, 1.1478908061981201, 0.11068876832723618, 0.9254011511802673, 0.01809505559504032, 0.042520418763160706, 0.1039956733584404, 0.009040848352015018, 0.3118630647659302, 0.652970016002655, 1.4261680841445923, 0.030746227130293846, 0.049629226326942444, 1.4442963600158691, 0.23332098126411438, 0.3792564570903778, 0.0005072260973975062, 0.20842403173446655, 0.04341285675764084, 0.0815194845199585, 0.009112791158258915, 0.02646624483168125, 0.0003967689990531653, 0.0010085977846756577, 0.01563798449933529, 0.001257463125512004, 0.7100322842597961, 0.04510442167520523, 1.5517728328704834, 1.8312865495681763, 1.5297261476516724, 0.8672196269035339, 0.05817202106118202, 0.03856687620282173, 0.060797613114118576, 0.000485183292767033, 0.10570940375328064, 0.0234068613499403, 0.598255455493927, 0.008581073954701424, 0.0037473472766578197, 0.0004140473320148885, 0.01170846913009882, 0.004089208785444498, 0.45491698384284973, 0.8044875860214233, 0.9331321120262146, 0.9774519205093384], "tokens": [13, 13, 418, 1714, 337, 1231, 353, 4766, 29889, 13719, 890, 13, 418, 1714, 7353, 1231, 353, 313, 4304, 1275, 13449, 29897, 1577, 5124, 584, 13449, 29889, 13719, 890, 13, 13, 418, 1714, 337, 353, 5591, 29908, 718, 337, 1231, 718, 5591, 29908, 718, 7353, 1231, 29936, 13, 418, 9071, 716, 4247]}
{"line_number": 1429, "line_type": "original", "code": "    } else {", "entropy": 2.7999205589294434, "is_bug_line": false, "sus_score": 0.6039078235626221, "per_token_entropy": [5.8810343742370605, 2.708381175994873, 1.976257085800171, 0.6340100169181824], "tokens": [268, 500, 1683, 426]}
{"line_number": 1429, "line_type": "generated", "code": "\n      String re = pattern.getString();\n      if (null != flags) {\n        re = re + flags.getString();\n      }\n\n      Node newRegexpNode = IR.regexp(re);\n      parent.replace", "entropy": 0.3842850625514984, "is_bug_line": false, "sus_score": 0.6039078235626221, "per_token_entropy": [0.18575993180274963, 0.17405082285404205, 0.7283745408058167, 2.738252639770508, 0.9396772980690002, 0.4826219379901886, 0.00890840869396925, 0.04663408175110817, 0.2585199475288391, 0.009732652455568314, 0.2845841944217682, 1.186216115951538, 0.4039058983325958, 1.2129170894622803, 0.16351006925106049, 0.02122708037495613, 0.12711966037750244, 0.006323448847979307, 0.0080089857801795, 0.01787470281124115, 0.11948241293430328, 1.4664720296859741, 0.6283279061317444, 0.021997855976223946, 0.2516985535621643, 0.0014778178883716464, 0.0032169281039386988, 0.013807025738060474, 0.004907230380922556, 0.01510561816394329, 4.005352093372494e-05, 0.012493560090661049, 1.139683485031128, 0.05332769826054573, 1.7145256996154785, 0.6866510510444641, 1.4645919799804688, 0.8172962665557861, 0.26426243782043457, 0.041637931019067764, 0.3883226215839386, 0.0005274811992421746, 0.1187908798456192, 0.0012990139657631516, 0.004488987382501364, 0.5537704229354858, 0.2140641063451767, 0.005617071874439716, 0.2035130113363266, 0.7636623978614807, 0.0008074360666796565, 0.0027350897435098886], "tokens": [13, 418, 1714, 337, 353, 4766, 29889, 13719, 890, 13, 418, 565, 313, 4304, 2804, 13449, 29897, 426, 13, 4706, 337, 353, 337, 718, 13449, 29889, 13719, 890, 13, 418, 500, 13, 13, 418, 9071, 716, 4597, 4548, 4247, 353, 23292, 29889, 13087, 29886, 29898, 276, 416, 13, 418, 3847, 29889, 6506]}
{"line_number": 1452, "line_type": "original", "code": "    Node parent = n.getParent();", "entropy": 1.893035650253296, "is_bug_line": false, "sus_score": 0.6039078235626221, "per_token_entropy": [7.227670192718506, 5.725587368011475, 3.5394535064697266, 0.15218369662761688, 0.33439454436302185, 0.04636416584253311, 0.0019120759097859263, 0.006253082305192947, 0.0035015956964343786], "tokens": [268, 9071, 3847, 353, 302, 29889, 657, 9780, 890]}
{"line_number": 1452, "line_type": "generated", "code": "\n    }\n    return n;\n  }\n\n  private boolean areValidRegexpFlags(String flags) {\n    for (int i = 0; i", "entropy": 0.19356568157672882, "is_bug_line": false, "sus_score": 0.6039078235626221, "per_token_entropy": [0.05575645714998245, 1.0678378343582153, 0.009622029028832912, 0.06120125949382782, 1.0741724967956543, 0.01943112164735794, 0.03218948841094971, 0.0010122895473614335, 0.0026087083388119936, 0.2251242846250534, 0.001775951823219657, 0.007069217972457409, 0.05365833640098572, 0.06097988784313202, 0.5664211511611938, 1.391294240951538, 0.6381661295890808, 0.3293851912021637, 0.0007223857101053, 0.0004972175229340792, 0.0001627074379939586, 0.0015570909017696977, 0.005333954934030771, 0.26831674575805664, 0.09232877939939499, 0.0011865011183544993, 0.00023541064001619816, 0.07437686622142792, 0.8490676283836365, 0.003996719140559435, 0.035671692341566086, 0.013365671038627625, 0.008275385946035385, 0.024448558688163757, 0.0004673104267567396, 0.1827612817287445, 0.0014521064003929496], "tokens": [13, 1678, 500, 13, 1678, 736, 302, 29936, 13, 29871, 500, 13, 13, 29871, 2024, 7223, 526, 7211, 4597, 4548, 15675, 29898, 1231, 13449, 29897, 426, 13, 1678, 363, 313, 524, 474, 353, 29871, 29900, 29936, 474]}
{"line_number": 1457, "line_type": "original", "code": "    if (null == pattern || (null != flags && null != flags.getNext())) {", "entropy": 1.5287693738937378, "is_bug_line": false, "sus_score": 0.6039078235626221, "per_token_entropy": [8.4868745803833, 4.403783798217773, 0.17426134645938873, 3.0814318656921387, 0.4731510281562805, 2.4115662574768066, 1.024383783340454, 4.099806785583496, 0.43165281414985657, 0.5700240135192871, 0.34182730317115784, 0.06113913655281067, 1.8724337816238403, 1.5896998643875122, 1.2487635612487793, 0.015339730307459831, 0.07202080637216568, 0.13909028470516205, 0.06799788773059845, 0.010135255753993988], "tokens": [268, 565, 313, 4304, 1275, 4766, 3830, 313, 4304, 2804, 13449, 2607, 1870, 2804, 13449, 29889, 657, 9190, 22130, 426]}
{"line_number": 1457, "line_type": "generated", "code": "\n\n  /**\n   * @param n A node representing a regular expression literal.\n   * @return Whether the flags of this regular expression are valid.\n   */\n  private boolean areValidRegexpFlags(String flags) {\n   ", "entropy": 0.48646360635757446, "is_bug_line": false, "sus_score": 0.6039078235626221, "per_token_entropy": [0.041562456637620926, 0.39429664611816406, 0.09569766372442245, 0.8406047821044922, 0.08410275727510452, 0.004514739383012056, 0.00022384998737834394, 2.9659600257873535, 0.908900797367096, 1.6290428638458252, 0.6685739159584045, 0.9118369817733765, 1.7196294069290161, 0.5857335329055786, 2.128546953201294, 0.02600117400288582, 0.586689829826355, 0.44946032762527466, 0.12439373135566711, 0.002010825788602233, 0.10801264643669128, 0.06408104300498962, 0.03412654250860214, 0.6354554891586304, 0.5627734661102295, 1.8915714025497437, 2.2527849674224854, 1.6543254852294922, 0.6759754419326782, 0.006967059802263975, 0.5891226530075073, 1.3423961400985718, 0.4104624092578888, 0.0534670427441597, 0.0016357626300305128, 0.0476631261408329, 8.999896090244874e-05, 0.022594399750232697, 0.1138957291841507, 0.23852002620697021, 0.008203383535146713, 0.0035537441726773977, 0.0005930095794610679, 0.001909934333525598, 3.71926071238704e-05, 0.006535228807479143, 0.04052734375, 0.21087896823883057, 0.08176326751708984, 0.001073856488801539, 0.0001778444420779124, 0.06714774668216705], "tokens": [13, 13, 29871, 7762, 13, 259, 334, 732, 3207, 302, 319, 2943, 15783, 263, 4943, 4603, 16333, 29889, 13, 259, 334, 732, 2457, 26460, 278, 13449, 310, 445, 4943, 4603, 526, 2854, 29889, 13, 259, 3776, 13, 29871, 2024, 7223, 526, 7211, 4597, 4548, 15675, 29898, 1231, 13449, 29897, 426, 13, 1678]}
{"line_number": 1446, "line_type": "original", "code": "      }", "entropy": 4.536099433898926, "is_bug_line": false, "sus_score": 0.5991976857185364, "per_token_entropy": [6.938488006591797, 2.133711099624634], "tokens": [539, 500]}
{"line_number": 1446, "line_type": "generated", "code": "\n        // fold to /foobar/gi\n        regexLiteral = IR.regexp(pattern, flags);\n      }\n\n      // replace the NEW node with a regex literal\n      parent.replaceChild(n, regexLiter", "entropy": 0.38215869665145874, "is_bug_line": false, "sus_score": 0.5991976857185364, "per_token_entropy": [0.04790746793150902, 0.4616203010082245, 2.2832419872283936, 1.0914084911346436, 0.002886892529204488, 0.016241617500782013, 0.08690234273672104, 0.00941739697009325, 0.0003551805857568979, 0.009373228996992111, 0.8593108654022217, 0.12119507044553757, 0.013777985237538815, 0.1494201123714447, 0.00016723664884921163, 6.592056161025539e-05, 0.0016448076348751783, 0.0768561065196991, 0.000507464399561286, 0.005667687859386206, 0.0002469711471349001, 0.0014563917648047209, 0.03662726655602455, 0.1029309630393982, 0.15476568043231964, 0.2887921929359436, 0.0025440254248678684, 0.1661214679479599, 0.0006272017490118742, 0.0013402060139924288, 0.45991429686546326, 0.02617468684911728, 1.646824598312378, 3.200932264328003, 1.341115117073059, 2.2761764526367188, 0.4947485625743866, 0.37943023443222046, 1.3647769689559937, 0.834737241268158, 1.0744311809539795, 0.39373892545700073, 0.01088950876146555, 0.35912561416625977, 0.0003592322755139321, 0.004259324166923761, 0.0006973695708438754, 0.00012230125139467418, 0.006558559834957123, 0.00019536493346095085, 0.0035545756109058857, 6.842378934379667e-05], "tokens": [13, 4706, 849, 900, 29881, 304, 847, 1181, 22872, 29914, 3146, 13, 4706, 6528, 24938, 284, 353, 23292, 29889, 13087, 29886, 29898, 11037, 29892, 13449, 416, 13, 418, 500, 13, 13, 418, 849, 5191, 278, 29091, 2943, 411, 263, 6528, 16333, 13, 418, 3847, 29889, 6506, 5938, 29898, 29876, 29892, 6528, 24938]}
{"line_number": 1459, "line_type": "original", "code": "      return n;", "entropy": 2.615516424179077, "is_bug_line": false, "sus_score": 0.58857262134552, "per_token_entropy": [8.769478797912598, 1.47275710105896, 0.19489341974258423, 0.02493574656546116], "tokens": [539, 736, 302, 29936]}
{"line_number": 1459, "line_type": "generated", "code": "\n    return n;\n  }\n\n  private Node reduceBooleanConstructor(Node n) {\n    Node parent = n.getParent();\n    Node arg = n.getFirstChild();\n    if (arg == null) {\n", "entropy": 0.25302380323410034, "is_bug_line": false, "sus_score": 0.58857262134552, "per_token_entropy": [0.08218346536159515, 0.40818169713020325, 0.9756406545639038, 0.056030839681625366, 0.009147756733000278, 0.002232917817309499, 0.016252174973487854, 0.0005912224878557026, 0.00098525604698807, 0.012136895209550858, 0.026362566277384758, 0.41080397367477417, 0.4251638650894165, 0.9740637540817261, 2.197200059890747, 1.340373158454895, 0.07322739064693451, 0.0044149309396743774, 0.02573283202946186, 0.05643528699874878, 0.0003200257197022438, 0.00021562635083682835, 0.5869061946868896, 0.4370393753051758, 0.7067496180534363, 0.00208291900344193, 0.0004773192631546408, 0.0003781795676331967, 8.809178689261898e-05, 0.00022146634000819176, 0.0002516191452741623, 0.0013667537132278085, 0.13736875355243683, 0.10196588933467865, 0.676487386226654, 0.020088203251361847, 0.0847102701663971, 0.00019238528329879045, 0.13303522765636444, 0.03433539345860481, 0.001673013437539339, 0.019223574548959732, 0.020206786692142487, 0.49620258808135986, 0.49998876452445984, 0.0709543526172638, 0.5703914165496826, 1.0916342735290527, 0.001099935034289956, 0.35119548439979553, 0.00033456450910307467, 0.012890464626252651], "tokens": [13, 1678, 736, 302, 29936, 13, 29871, 500, 13, 13, 29871, 2024, 9071, 10032, 18146, 23770, 29898, 4247, 302, 29897, 426, 13, 1678, 9071, 3847, 353, 302, 29889, 657, 9780, 890, 13, 1678, 9071, 1852, 353, 302, 29889, 657, 6730, 5938, 890, 13, 1678, 565, 313, 1191, 1275, 1870, 29897, 426, 13]}
{"line_number": 1331, "line_type": "original", "code": "      \"Array\",", "entropy": 5.2520341873168945, "is_bug_line": false, "sus_score": 0.5468072891235352, "per_token_entropy": [6.786962032318115, 8.370835304260254, 2.5586490631103516, 3.291691541671753], "tokens": [539, 376, 2588, 613]}
{"line_number": 1331, "line_type": "generated", "code": "\n        if (NodeUtil.isRegExpCallToLiteral(n)) {\n          newLiteralNode = NodeUtil.regExpToLiteral(n);\n        }\n      } else if (\"Array\".equals(className)) {", "entropy": 0.2508760988712311, "is_bug_line": false, "sus_score": 0.5468072891235352, "per_token_entropy": [0.1072753295302391, 0.44205883145332336, 1.3045806884765625, 0.10421288758516312, 1.6895672082901, 0.009110664948821068, 0.0001357701694360003, 0.3332245349884033, 0.8945574760437012, 0.07340431213378906, 0.1913965344429016, 1.076342225074768, 1.136534571647644, 1.4424220353248529e-05, 0.004455045331269503, 0.030028557404875755, 0.20986533164978027, 0.00037877538125030696, 0.000904032145626843, 0.06508548557758331, 0.469836950302124, 3.325883881188929e-05, 6.079655122448457e-06, 2.074220174108632e-05, 0.0004396664153318852, 0.48770245909690857, 0.0031453920528292656, 0.000900101731531322, 0.8009388446807861, 0.00011979816190432757, 0.6671172976493835, 0.0028271013870835304, 1.156323378381785e-05, 0.49981218576431274, 0.0707203596830368, 0.3035047650337219, 0.000456109904916957, 0.3797364830970764, 0.0001461399078834802, 0.06897971034049988, 0.5177397131919861, 0.0023971651680767536, 0.11015823483467102, 0.11806242167949677, 0.18562963604927063, 0.5364181995391846, 0.0016265984158962965, 0.0002609150833450258, 9.822363062994555e-05, 0.0008476955117657781, 0.1421574354171753, 0.0005732323625124991], "tokens": [13, 4706, 565, 313, 4247, 7270, 29889, 275, 4597, 9544, 5594, 1762, 24938, 284, 29898, 29876, 876, 426, 13, 3986, 716, 24938, 284, 4247, 353, 9071, 7270, 29889, 1727, 9544, 1762, 24938, 284, 29898, 29876, 416, 13, 4706, 500, 13, 418, 500, 1683, 565, 4852, 2588, 1642, 10954, 29898, 27542, 876, 426]}
{"line_number": 957, "line_type": "original", "code": "   */", "entropy": 5.025917053222656, "is_bug_line": false, "sus_score": 0.5439913868904114, "per_token_entropy": [8.658600807189941, 1.393232822418213], "tokens": [1678, 3776]}
{"line_number": 957, "line_type": "generated", "code": "\n  private Node getReturnExpression(Node n) {\n    Preconditions.checkState(isReturnExpression(n));\n    return n.getFirstChild();\n  }\n\n  /**\n   * @return Whether the node is", "entropy": 0.05049128085374832, "is_bug_line": false, "sus_score": 0.5439913868904114, "per_token_entropy": [0.0102814557030797, 0.05659503862261772, 0.006731926463544369, 0.005502909887582064, 0.006429226137697697, 0.17539075016975403, 0.24967186152935028, 0.005879014730453491, 0.001189477858133614, 0.015781622380018234, 0.005160938482731581, 0.0003010773507412523, 0.0010744519531726837, 0.009285833686590195, 0.06450784206390381, 0.0002926159941125661, 8.642300235806033e-05, 0.0016677769599482417, 0.0003921216703020036, 0.014113378711044788, 0.002529875375330448, 0.02842402271926403, 0.017370471730828285, 0.14683446288108826, 0.0006417360855266452, 0.0005428509321063757, 0.10076623409986496, 0.000731558189727366, 0.01741686463356018, 0.06529444456100464, 0.01723678782582283, 0.006350456736981869, 0.010579453781247139, 0.04649082571268082, 0.0016870565013960004, 0.011143590323626995, 0.0008094609947875142, 0.006111149676144123, 0.00013290952483657748, 0.0085197314620018, 0.03496652841567993, 0.031143348664045334, 0.12321669608354568, 0.010475530289113522, 0.0067501612938940525, 0.000491855782456696, 0.21088795363903046, 0.016497040167450905, 0.8864632844924927, 0.0359172560274601, 0.12812022864818573, 0.020666852593421936], "tokens": [13, 29871, 2024, 9071, 679, 11609, 10960, 29898, 4247, 302, 29897, 426, 13, 1678, 4721, 1116, 2187, 29889, 3198, 2792, 29898, 275, 11609, 10960, 29898, 29876, 2483, 13, 1678, 736, 302, 29889, 657, 6730, 5938, 890, 13, 29871, 500, 13, 13, 29871, 7762, 13, 259, 334, 732, 2457, 26460, 278, 2943, 338]}
{"line_number": 974, "line_type": "original", "code": "", "entropy": 4.909214496612549, "is_bug_line": false, "sus_score": 0.5439913868904114, "per_token_entropy": [7.008943557739258, 2.8094851970672607], "tokens": [29871, 13]}
{"line_number": 974, "line_type": "generated", "code": "\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @return Whether the node is a block with a single statement that is\n   *     a VAR declaration of a single variable.\n   */", "entropy": 0.08999611437320709, "is_bug_line": false, "sus_score": 0.5439913868904114, "per_token_entropy": [0.01652107760310173, 0.09389841556549072, 0.001456629834137857, 0.007792786229401827, 0.10258136689662933, 0.00046659549116156995, 0.008400462567806244, 0.516856849193573, 0.05258296802639961, 0.005005803424865007, 0.0012199586490169168, 0.000125281119835563, 0.00041321321623399854, 0.006496027112007141, 0.00014256415306590497, 0.003376380307599902, 0.01557953841984272, 0.015809550881385803, 0.04935251548886299, 0.0029967185109853745, 0.001023364719003439, 6.758938252460212e-05, 0.052231043577194214, 0.006771119311451912, 0.4421499967575073, 0.015299815684556961, 0.057242002338171005, 0.01188059151172638, 0.054970432072877884, 1.1367359161376953, 0.031057141721248627, 0.08290012180805206, 0.01814773678779602, 0.1613062620162964, 0.028778284788131714, 0.022125542163848877, 0.024586981162428856, 0.00046361665590666234, 0.0001387499796692282, 0.02062014304101467, 0.19054433703422546, 0.30191344022750854, 0.0006254147156141698, 0.07163937389850616, 0.18152755498886108, 0.12353776395320892, 0.03680066764354706, 0.07302839308977127, 0.5988559722900391, 0.018936563283205032, 0.0030551922973245382, 0.009761692956089973], "tokens": [13, 418, 500, 13, 1678, 500, 13, 13, 1678, 736, 2089, 29936, 13, 29871, 500, 13, 13, 29871, 7762, 13, 259, 334, 732, 2457, 26460, 278, 2943, 338, 263, 2908, 411, 263, 2323, 3229, 393, 338, 13, 259, 334, 268, 263, 478, 1718, 12029, 310, 263, 2323, 2286, 29889, 13, 259, 3776]}
{"line_number": 984, "line_type": "original", "code": "      if (n.hasOneChild()) {", "entropy": 1.6184252500534058, "is_bug_line": false, "sus_score": 0.5439913868904114, "per_token_entropy": [9.14716911315918, 2.994312286376953, 0.09353609383106232, 0.4417247176170349, 0.008742745965719223, 3.2180182933807373, 0.048067450523376465, 0.0013983005192130804, 0.22919590771198273, 0.0020874394103884697], "tokens": [539, 565, 313, 29876, 29889, 5349, 6716, 5938, 3101, 426]}
{"line_number": 984, "line_type": "generated", "code": "\n    Preconditions.checkState(isVarBlock(n));\n    return n.getFirstChild().getFirstChild();\n  }\n\n  /**\n   * @return Whether the node is a block with a single statement that is", "entropy": 0.08063605427742004, "is_bug_line": false, "sus_score": 0.5439913868904114, "per_token_entropy": [0.11430594325065613, 0.22135429084300995, 0.29363706707954407, 0.0003280101518612355, 0.0001401803019689396, 0.0006958208978176117, 0.0005993238883093, 0.005731932353228331, 0.0012017417466267943, 0.00596398301422596, 0.025327511131763458, 0.0016419512685388327, 0.000325388420606032, 0.0009348789462819695, 0.006498632486909628, 0.001671109232120216, 0.10309195518493652, 0.06445452570915222, 0.0159562136977911, 0.01373671367764473, 0.003170228097587824, 0.004350245930254459, 0.02487912029027939, 1.2803248167037964, 0.006542216520756483, 0.01879197545349598, 0.007408526260405779, 0.025038179010152817, 0.0037025725468993187, 0.11371934413909912, 0.0009623901569284499, 0.0024667331017553806, 0.013725190423429012, 0.0239908117800951, 0.07600495964288712, 0.004770326893776655, 0.0013093716697767377, 0.00024125049822032452, 0.10198806971311569, 0.014343375340104103, 0.20448501408100128, 0.03263842314481735, 0.08200963586568832, 0.02113931253552437, 0.10554829984903336, 0.8041289448738098, 0.03749202564358711, 0.08315377682447433, 0.02608177810907364, 0.12776736915111542, 0.03962395712733269, 0.023679086938500404], "tokens": [13, 1678, 4721, 1116, 2187, 29889, 3198, 2792, 29898, 275, 9037, 7445, 29898, 29876, 2483, 13, 1678, 736, 302, 29889, 657, 6730, 5938, 2141, 657, 6730, 5938, 890, 13, 29871, 500, 13, 13, 29871, 7762, 13, 259, 334, 732, 2457, 26460, 278, 2943, 338, 263, 2908, 411, 263, 2323, 3229, 393, 338]}
{"line_number": 985, "line_type": "original", "code": "        Node first = n.getFirstChild();", "entropy": 1.312652587890625, "is_bug_line": false, "sus_score": 0.5439913868904114, "per_token_entropy": [9.833717346191406, 2.723686456680298, 0.46558308601379395, 0.05895373597741127, 0.01643231138586998, 0.00896228477358818, 0.0014559156261384487, 0.003176526166498661, 0.0017810686258599162, 0.012776894494891167], "tokens": [308, 9071, 937, 353, 302, 29889, 657, 6730, 5938, 890]}
{"line_number": 985, "line_type": "generated", "code": "\n    return n.getFirstChild();\n  }\n\n  /**\n   * @return Whether the node is a block with a single statement that is\n   *     a VAR declaration of a single variable with an initializer.\n  ", "entropy": 0.1367805004119873, "is_bug_line": false, "sus_score": 0.5439913868904114, "per_token_entropy": [0.052463073283433914, 0.10122431814670563, 0.13102835416793823, 0.03870553523302078, 0.048121869564056396, 0.008684840053319931, 0.007685496937483549, 0.0318649522960186, 0.47658270597457886, 0.009093890897929668, 0.11503150314092636, 0.001050516264513135, 0.0036354658659547567, 0.02263309247791767, 0.018321681767702103, 0.050735536962747574, 0.0034448110964149237, 0.001100530382245779, 0.0003651905863080174, 0.05914465710520744, 0.009970622137188911, 0.3215603828430176, 0.022718163207173347, 0.0666923001408577, 0.015224676579236984, 0.07935740053653717, 0.7518928647041321, 0.02695152349770069, 0.08215963840484619, 0.025977015495300293, 0.1086866483092308, 0.035995569080114365, 0.02143222652375698, 0.03174208477139473, 0.0014024670235812664, 0.00020859450160060078, 0.01740889810025692, 0.28446444869041443, 0.7046319842338562, 0.002174158114939928, 0.07642659544944763, 0.1481838971376419, 0.08161946386098862, 0.026295801624655724, 0.074931800365448, 1.3125964403152466, 0.4712812006473541, 0.7131351232528687, 0.23457205295562744, 0.1779937893152237, 0.0034391088411211967, 0.00054058717796579], "tokens": [13, 1678, 736, 302, 29889, 657, 6730, 5938, 890, 13, 29871, 500, 13, 13, 29871, 7762, 13, 259, 334, 732, 2457, 26460, 278, 2943, 338, 263, 2908, 411, 263, 2323, 3229, 393, 338, 13, 259, 334, 268, 263, 478, 1718, 12029, 310, 263, 2323, 2286, 411, 385, 2847, 3950, 29889, 13, 259]}
{"line_number": 986, "line_type": "original", "code": "        if (first.isReturn()) {", "entropy": 2.1014914512634277, "is_bug_line": false, "sus_score": 0.5439913868904114, "per_token_entropy": [10.885255813598633, 3.6748085021972656, 0.11642514169216156, 0.9627693891525269, 0.04664420709013939, 0.8679677248001099, 2.294250726699829, 0.06032703071832657, 0.0049746073782444], "tokens": [308, 565, 313, 4102, 29889, 275, 11609, 3101, 426]}
{"line_number": 986, "line_type": "generated", "code": "\n  }\n\n  /**\n   * @return Whether the node is a block with a single statement that is\n   *     a VAR declaration of a single variable.\n   */\n  private boolean isVarExpression(Node n) {", "entropy": 0.10914650559425354, "is_bug_line": false, "sus_score": 0.5439913868904114, "per_token_entropy": [0.04148469120264053, 0.12122611701488495, 0.017760291695594788, 0.004567903000861406, 0.04995621368288994, 0.022610366344451904, 0.06878142058849335, 0.0047494457103312016, 0.0014207994099706411, 0.00025507534155622125, 0.08472658693790436, 0.011134512722492218, 0.3734699487686157, 0.028566762804985046, 0.08215337991714478, 0.019841410219669342, 0.0962149128317833, 0.8402533531188965, 0.03338051214814186, 0.07841967046260834, 0.023804115131497383, 0.12476325035095215, 0.040498606860637665, 0.022383196279406548, 0.03830062225461006, 0.001426870352588594, 0.0002029928145930171, 0.019731197506189346, 0.3040423095226288, 0.7389435172080994, 0.0021362120751291513, 0.07920510321855545, 0.15730586647987366, 0.08267757296562195, 0.026566894724965096, 0.08462055772542953, 0.7775803208351135, 0.012583618983626366, 0.011363781988620758, 0.00491873687133193, 0.00019167017308063805, 0.013430246151983738, 0.008903801441192627, 0.017093123868107796, 0.0071015325374901295, 0.5611168146133423, 0.5197643637657166, 0.01021891925483942, 0.00033563701435923576, 0.0010495636379346251, 0.002184744458645582, 0.00019929806876461953], "tokens": [13, 29871, 500, 13, 13, 29871, 7762, 13, 259, 334, 732, 2457, 26460, 278, 2943, 338, 263, 2908, 411, 263, 2323, 3229, 393, 338, 13, 259, 334, 268, 263, 478, 1718, 12029, 310, 263, 2323, 2286, 29889, 13, 259, 3776, 13, 29871, 2024, 7223, 338, 9037, 10960, 29898, 4247, 302, 29897, 426]}
{"line_number": 993, "line_type": "original", "code": "  }", "entropy": 6.123146057128906, "is_bug_line": false, "sus_score": 0.5439913868904114, "per_token_entropy": [6.9511542320251465, 5.295137882232666], "tokens": [259, 500]}
{"line_number": 993, "line_type": "generated", "code": "\n  private boolean consumesDanglingElse(Node n) {\n    return false;\n  }\n\n  /**\n   * @return Whether the node is a block with a single statement that is\n   *     a VAR declaration", "entropy": 0.2208835631608963, "is_bug_line": false, "sus_score": 0.5439913868904114, "per_token_entropy": [0.04485688731074333, 0.4540306329727173, 0.19957946240901947, 0.06954554468393326, 0.4645688235759735, 0.0005822870298288763, 0.03064715303480625, 0.0050878808833658695, 0.0007228621980175376, 0.0153220035135746, 0.009113027714192867, 0.017714032903313637, 0.10086442530155182, 0.03399496525526047, 0.002009992953389883, 0.0010188394226133823, 0.09644237160682678, 1.8358802795410156, 1.7432663440704346, 0.0013560395454987884, 0.013445653952658176, 0.0806238055229187, 0.0021701136138290167, 0.009422946721315384, 0.1295739859342575, 0.056381091475486755, 0.17697280645370483, 0.016652395948767662, 0.0019676387310028076, 0.00026901919045485556, 1.5273149013519287, 0.05420287325978279, 0.17941035330295563, 0.13406473398208618, 0.3011268079280853, 0.10485628992319107, 0.33187371492385864, 0.9485286474227905, 0.14283487200737, 0.10044003278017044, 0.017623379826545715, 0.13985593616962433, 0.206016406416893, 0.11750654131174088, 0.04737722873687744, 0.001796538126654923, 0.00023064337437972426, 0.05501353368163109, 0.4198905825614929, 0.9133890867233276, 0.004681104328483343, 0.12382744997739792], "tokens": [13, 29871, 2024, 7223, 1136, 9351, 29928, 574, 1847, 27406, 29898, 4247, 302, 29897, 426, 13, 1678, 736, 2089, 29936, 13, 29871, 500, 13, 13, 29871, 7762, 13, 259, 334, 732, 2457, 26460, 278, 2943, 338, 263, 2908, 411, 263, 2323, 3229, 393, 338, 13, 259, 334, 268, 263, 478, 1718, 12029]}
{"line_number": 994, "line_type": "original", "code": "", "entropy": 5.607739448547363, "is_bug_line": false, "sus_score": 0.5439913868904114, "per_token_entropy": [4.947122573852539, 6.268356800079346], "tokens": [29871, 13]}
{"line_number": 994, "line_type": "generated", "code": "\n    if (n.isExprResult() || n.isLabel()) {\n      return true;\n    }\n\n    if (n.isReturn()) {\n      return !n.hasChildren();\n    }\n\n    if", "entropy": 0.3624761700630188, "is_bug_line": false, "sus_score": 0.5439913868904114, "per_token_entropy": [0.2594532072544098, 0.14904676377773285, 1.142545223236084, 0.04437326639890671, 0.42895227670669556, 0.08964507281780243, 0.037441615015268326, 2.919121742248535, 0.018588507547974586, 1.4905078411102295, 0.6857761740684509, 0.5339582562446594, 0.004005386959761381, 0.014434442855417728, 1.9509395360946655, 0.21861326694488525, 0.0023253324907273054, 0.004563037771731615, 0.03174243122339249, 0.4409782290458679, 0.5291889309883118, 0.00025948495022021234, 0.016482265666127205, 0.06085549667477608, 0.0018173621501773596, 0.3855001628398895, 0.7488231658935547, 0.14220593869686127, 0.5003588795661926, 0.019596893340349197, 0.22697360813617706, 0.0022427900694310665, 0.009786837734282017, 2.065899133682251, 0.5637969374656677, 0.0006850994541309774, 0.0017761897761374712, 0.04643256217241287, 0.31623685359954834, 1.6574432849884033, 0.29909080266952515, 0.0014846028061583638, 0.12806035578250885, 0.02275417186319828, 0.03528372943401337, 0.013654402457177639, 0.008914552628993988, 0.00022957073815632612, 0.034266743808984756, 0.24861155450344086, 0.06698421388864517, 0.22605183720588684], "tokens": [13, 1678, 565, 313, 29876, 29889, 275, 21176, 3591, 580, 3830, 302, 29889, 275, 4775, 3101, 426, 13, 418, 736, 1565, 29936, 13, 1678, 500, 13, 13, 1678, 565, 313, 29876, 29889, 275, 11609, 3101, 426, 13, 418, 736, 1738, 29876, 29889, 5349, 19334, 890, 13, 1678, 500, 13, 13, 1678, 565]}
{"line_number": 944, "line_type": "original", "code": "          }", "entropy": 7.303050994873047, "is_bug_line": false, "sus_score": 0.5436511039733887, "per_token_entropy": [12.232108116149902, 2.3739938735961914], "tokens": [965, 500]}
{"line_number": 944, "line_type": "generated", "code": "\n\n  /**\n   * @return The expression node.\n   */\n  private Node getReturnBlockExpression(Node n) {\n    Preconditions.checkState(isReturnBlock(n));\n    return n.getFirstChild", "entropy": 0.10481659322977066, "is_bug_line": false, "sus_score": 0.5436511039733887, "per_token_entropy": [0.013334734365344048, 0.25700095295906067, 0.05916488543152809, 0.2443295270204544, 0.019002066925168037, 0.001948483637534082, 0.00014208737411536276, 0.4012768864631653, 0.02148204855620861, 0.4786285161972046, 0.3657081127166748, 0.08809777349233627, 0.32660287618637085, 0.011803428642451763, 0.0004861365014221519, 0.004954323638230562, 0.00018654513405635953, 0.0018742390675470233, 0.008799467235803604, 0.005532785318791866, 0.00763498293235898, 0.20718009769916534, 0.6313552856445312, 0.18084190785884857, 0.003686419688165188, 0.0008500776602886617, 0.0058988058008253574, 0.003522265236824751, 0.00025769727653823793, 0.0004944770480506122, 0.007117275148630142, 0.035070355981588364, 0.00025781645672395825, 1.537788011773955e-05, 0.0020535350777208805, 0.00033563701435923576, 0.0048539661802351475, 0.0017183552263304591, 0.004670544061809778, 0.022160988301038742, 1.4441783428192139, 0.0011100566480308771, 0.0005049622268415987, 0.10757575929164886, 0.0002796259068418294, 0.014026161283254623, 0.26303166151046753, 0.05667681619524956, 0.0034652443137019873, 0.015572496689856052, 0.013255683705210686, 0.10045437514781952], "tokens": [13, 13, 29871, 7762, 13, 259, 334, 732, 2457, 450, 4603, 2943, 29889, 13, 259, 3776, 13, 29871, 2024, 9071, 679, 11609, 7445, 10960, 29898, 4247, 302, 29897, 426, 13, 1678, 4721, 1116, 2187, 29889, 3198, 2792, 29898, 275, 11609, 7445, 29898, 29876, 2483, 13, 1678, 736, 302, 29889, 657, 6730, 5938]}
{"line_number": 945, "line_type": "original", "code": "", "entropy": 4.189218521118164, "is_bug_line": false, "sus_score": 0.5436511039733887, "per_token_entropy": [3.3940858840942383, 4.98435115814209], "tokens": [29871, 13]}
{"line_number": 945, "line_type": "generated", "code": "\n  /**\n   * @return The expression node.\n   */\n  private Node getReturnBlockExpression(Node n) {\n    Preconditions.checkState(isReturnExpressBlock(n));\n    return n.getFirstChild", "entropy": 0.07563721388578415, "is_bug_line": false, "sus_score": 0.5436511039733887, "per_token_entropy": [0.049799595028162, 0.1947500854730606, 0.24790789186954498, 0.01699327491223812, 0.002665896899998188, 0.00014006110723130405, 0.3438549339771271, 0.01719706505537033, 0.41234275698661804, 0.3623112142086029, 0.09115765988826752, 0.33646318316459656, 0.010775003582239151, 0.000533795915544033, 0.004765937104821205, 0.00020430385484360158, 0.0030389102175831795, 0.00882239080965519, 0.005270989146083593, 0.00789828971028328, 0.21828098595142365, 0.7436215877532959, 0.17635299265384674, 0.0039854394271969795, 0.0008750900160521269, 0.00643905671313405, 0.0037696745712310076, 0.00028618055512197316, 0.0005735897575505078, 0.010822293348610401, 0.03959256410598755, 0.0003398079425096512, 9.357491217087954e-05, 0.0014669859083369374, 0.0003567297535482794, 0.00545169273391366, 0.0019935749005526304, 0.004724885802716017, 0.020244520157575607, 0.2761441767215729, 8.284702198579907e-05, 0.00020704510097857565, 0.00045849301386624575, 0.004489580634981394, 0.00025602878304198384, 0.008305178955197334, 0.1421998292207718, 0.041485607624053955, 0.0006238659843802452, 0.004220507573336363, 0.005234227981418371, 0.09326279908418655], "tokens": [13, 29871, 7762, 13, 259, 334, 732, 2457, 450, 4603, 2943, 29889, 13, 259, 3776, 13, 29871, 2024, 9071, 679, 11609, 7445, 10960, 29898, 4247, 302, 29897, 426, 13, 1678, 4721, 1116, 2187, 29889, 3198, 2792, 29898, 275, 11609, 27404, 7445, 29898, 29876, 2483, 13, 1678, 736, 302, 29889, 657, 6730, 5938]}
{"line_number": 956, "line_type": "original", "code": "   * @return The expression node.", "entropy": 2.626600980758667, "is_bug_line": false, "sus_score": 0.5436511039733887, "per_token_entropy": [7.7862162590026855, 3.947401523590088, 1.8125606775283813, 0.02528206631541252, 1.2013705968856812, 0.9427704811096191, 1.8463255167007446, 3.4508814811706543], "tokens": [1678, 334, 732, 2457, 450, 4603, 2943, 29889]}
{"line_number": 956, "line_type": "generated", "code": "\n   */\n  private Node getBlockReturn(Node n) {\n    Preconditions.checkState(isReturnBlock(n));\n    return n.getFirstChild();\n  }\n\n  /**\n<|mask:1", "entropy": 0.07537616044282913, "is_bug_line": false, "sus_score": 0.5436511039733887, "per_token_entropy": [0.02027033641934395, 0.04327598959207535, 0.07248613983392715, 9.42901024245657e-05, 0.0028653775807470083, 0.012799020856618881, 0.10155047476291656, 0.025749213993549347, 1.2614153623580933, 0.12446920573711395, 0.6949617862701416, 0.0007205988513305783, 0.006182355340570211, 0.005300397519022226, 0.0003914067056030035, 0.00023648326168768108, 0.001968114636838436, 0.0313604511320591, 0.0001311216183239594, 2.0861407392658293e-05, 0.0009534580749459565, 0.00014208737411536276, 0.007751030847430229, 0.0018252156442031264, 0.010018539614975452, 0.03452013432979584, 0.05979514122009277, 0.00011801023356383666, 0.0002942844294011593, 0.02342316508293152, 0.0001565095444675535, 0.009171380661427975, 0.0845852866768837, 0.0992988869547844, 0.0008615119731985033, 0.024944700300693512, 0.009081132709980011, 0.056694839149713516, 0.24238717555999756, 0.0007996936910785735, 0.0007700338610447943, 6.174850568640977e-05, 0.0001820160250645131, 0.0026675614062696695, 0.023122446611523628, 0.03733654320240021, 0.0040730624459683895, 0.4280478060245514, 0.0025879007298499346, 0.0011603058082982898, 0.0009189196862280369, 0.34556061029434204], "tokens": [13, 259, 3776, 13, 29871, 2024, 9071, 679, 7445, 11609, 29898, 4247, 302, 29897, 426, 13, 1678, 4721, 1116, 2187, 29889, 3198, 2792, 29898, 275, 11609, 7445, 29898, 29876, 2483, 13, 1678, 736, 302, 29889, 657, 6730, 5938, 890, 13, 29871, 500, 13, 13, 29871, 7762, 13, 29966, 29989, 13168, 29901, 29896]}
{"line_number": 979, "line_type": "original", "code": "   * @return Whether the node is a block with a single statement that is", "entropy": 1.1850630044937134, "is_bug_line": false, "sus_score": 0.5436511039733887, "per_token_entropy": [7.7154998779296875, 5.1854095458984375, 1.679415225982666, 0.055293645709753036, 0.486621230840683, 0.04623281955718994, 0.11941947042942047, 0.02694699726998806, 0.10975166410207748, 2.1319334506988525, 0.10686051100492477, 0.11548341810703278, 0.05062391981482506, 0.948975145816803, 0.11625981330871582, 0.06628294289112091], "tokens": [1678, 334, 732, 2457, 26460, 278, 2943, 338, 263, 2908, 411, 263, 2323, 3229, 393, 338]}
{"line_number": 979, "line_type": "generated", "code": "\n\n  /**\n   * @return Whether the node is a single VAR declaration of a single\n   *     variable.\n   */\n  private boolean isVarExpression(Node n) {\n    if (n.isVar()) {", "entropy": 0.14138460159301758, "is_bug_line": false, "sus_score": 0.5436511039733887, "per_token_entropy": [0.012202609330415726, 1.1815805435180664, 0.09251245856285095, 0.10966385155916214, 0.0064580077305436134, 0.09552399814128876, 0.0016916978638619184, 0.14731082320213318, 0.007890365086495876, 0.3830864727497101, 0.025668814778327942, 0.09953967481851578, 0.02080650068819523, 0.1048625111579895, 0.7327155470848083, 0.685629665851593, 0.00017212340026162565, 0.20569658279418945, 1.0398445129394531, 0.03689499944448471, 0.054325833916664124, 1.0123589038848877, 0.005066650453954935, 0.0007344171172007918, 0.16524067521095276, 0.04397691786289215, 0.08686463534832001, 0.010600803419947624, 0.005751489195972681, 0.0065442295745015144, 0.00019059749320149422, 0.013183098286390305, 0.009881153702735901, 0.009029271081089973, 0.0008052920456975698, 0.10347405076026917, 0.3205765187740326, 0.001864363206550479, 0.00031144535751082003, 0.001128513365983963, 0.0019161213422194123, 0.00018010901112575084, 0.0005967028555460274, 0.011104097589850426, 0.42886751890182495, 0.004273212049156427, 0.013491053134202957, 0.0009105826611630619, 0.0008970050839707255, 0.02277141809463501, 0.024996789172291756, 0.00033420699764974415], "tokens": [13, 13, 29871, 7762, 13, 259, 334, 732, 2457, 26460, 278, 2943, 338, 263, 2323, 478, 1718, 12029, 310, 263, 2323, 13, 259, 334, 268, 2286, 29889, 13, 259, 3776, 13, 29871, 2024, 7223, 338, 9037, 10960, 29898, 4247, 302, 29897, 426, 13, 1678, 565, 313, 29876, 29889, 275, 9037, 3101, 426]}
{"line_number": 958, "line_type": "original", "code": "  private Node getBlockExpression(Node n) {", "entropy": 1.6859443187713623, "is_bug_line": false, "sus_score": 0.5424479842185974, "per_token_entropy": [6.946186542510986, 3.631164073944092, 0.4340636432170868, 0.25286513566970825, 5.155295372009277, 1.9673166275024414, 0.053793568164110184, 0.011191334575414658, 0.0745672956109047, 0.012956835329532623, 0.005986260715872049], "tokens": [259, 2024, 9071, 679, 7445, 10960, 29898, 4247, 302, 29897, 426]}
{"line_number": 958, "line_type": "generated", "code": "\n    Preconditions.checkState(isReturnExpression(n));\n    return n.getFirstChild();\n  }\n\n  /**\n   * @return Whether the node is a single return statement with an expression.\n   */\n", "entropy": 0.15388208627700806, "is_bug_line": false, "sus_score": 0.5424479842185974, "per_token_entropy": [0.016541246324777603, 0.2074965238571167, 0.08152145892381668, 0.000342191313393414, 0.00016473367577418685, 0.0006119524477981031, 8.511180931236595e-05, 0.013973497785627842, 0.002141922013834119, 0.012386303395032883, 0.025129206478595734, 0.35896679759025574, 0.0005479741375893354, 0.003248178865760565, 0.044343505054712296, 0.0006161222117953002, 0.01788477413356304, 0.02001938223838806, 0.009395667351782322, 0.014473100192844868, 0.00948234461247921, 0.039688121527433395, 0.0017027654685080051, 0.011322529055178165, 0.0024374795611947775, 0.019816866144537926, 0.0007853999268263578, 0.009121177718043327, 0.026860196143388748, 0.04520891234278679, 0.1412314772605896, 0.009828626178205013, 0.001261630211956799, 0.00019727191829588264, 0.24224141240119934, 0.018260816112160683, 0.468713641166687, 0.04807119816541672, 0.1609364002943039, 0.03197868540883064, 0.14010414481163025, 1.2196228504180908, 0.8481170535087585, 0.3972148597240448, 1.5649919509887695, 1.069279432296753, 0.34901031851768494, 0.2811734080314636, 0.00037400881410576403, 0.0010521834483370185, 0.011679720133543015, 0.00021169328829273582], "tokens": [13, 1678, 4721, 1116, 2187, 29889, 3198, 2792, 29898, 275, 11609, 10960, 29898, 29876, 2483, 13, 1678, 736, 302, 29889, 657, 6730, 5938, 890, 13, 29871, 500, 13, 13, 29871, 7762, 13, 259, 334, 732, 2457, 26460, 278, 2943, 338, 263, 2323, 736, 3229, 411, 385, 4603, 29889, 13, 259, 3776, 13]}
{"line_number": 981, "line_type": "original", "code": "   */", "entropy": 5.0517497062683105, "is_bug_line": false, "sus_score": 0.5421282649040222, "per_token_entropy": [6.2360639572143555, 3.8674356937408447], "tokens": [1678, 3776]}
{"line_number": 981, "line_type": "generated", "code": "\n  /**\n   * @return Whether the node is a single VAR declaration.\n   */\n  private boolean isVarExpression(Node n) {\n    if (n.isVar()) {\n      return n.hasOneChild();", "entropy": 0.10873645544052124, "is_bug_line": false, "sus_score": 0.5421282649040222, "per_token_entropy": [0.056591544300317764, 0.26115965843200684, 0.8747338056564331, 0.00976039469242096, 0.1350841075181961, 0.0011512563796713948, 0.09579364210367203, 0.011181667447090149, 0.28511694073677063, 0.02487446926534176, 0.07476455718278885, 0.017048239707946777, 0.09384274482727051, 0.9869675040245056, 0.6782951951026917, 0.00014578233822248876, 0.14723138511180878, 0.6819244027137756, 0.004337902180850506, 0.167279452085495, 0.011852907948195934, 0.002336274366825819, 0.06475982815027237, 0.027404554188251495, 0.005469002760946751, 0.0012187680695205927, 0.07888016104698181, 0.1761012226343155, 0.001302942750044167, 0.0007370378007180989, 0.0012348415330052376, 0.0026544833090156317, 0.00021598390594590455, 0.0017414417816326022, 0.0439847894012928, 0.47388535737991333, 0.004888487514108419, 0.009932144545018673, 0.0008391196606680751, 0.0007440659101121128, 0.022866031154990196, 0.011395721696317196, 0.0003768687602132559, 0.0013574680779129267, 0.017237022519111633, 0.0385698564350605, 0.028150882571935654, 0.0001685477327555418, 0.0026754082646220922, 0.0016749175265431404, 0.000512111175339669, 0.011842777021229267], "tokens": [13, 29871, 7762, 13, 259, 334, 732, 2457, 26460, 278, 2943, 338, 263, 2323, 478, 1718, 12029, 29889, 13, 259, 3776, 13, 29871, 2024, 7223, 338, 9037, 10960, 29898, 4247, 302, 29897, 426, 13, 1678, 565, 313, 29876, 29889, 275, 9037, 3101, 426, 13, 418, 736, 302, 29889, 5349, 6716, 5938, 890]}
