{"line_number": 140, "line_type": "original", "code": "                return 0L;", "entropy": 3.7495532035827637, "is_bug_line": false, "sus_score": 0.6663496494293213, "per_token_entropy": [8.872740745544434, 9.216405868530273, 2.2068686485290527, 0.23131529986858368, 1.940614104270935, 0.029373925179243088], "tokens": [462, 736, 29871, 29900, 29931, 29936]}
{"line_number": 140, "line_type": "generated", "code": "\n    /**\n     * Casts to an int throwing an exception if overflow occurs.\n     * \n     * @param value  the value\n     * @return the value as an int\n     * @throws ArithmeticException if the", "entropy": 0.07229030132293701, "is_bug_line": false, "sus_score": 0.6663496494293213, "per_token_entropy": [0.19031059741973877, 0.8225089907646179, 0.36784788966178894, 0.016067076474428177, 0.004924312233924866, 0.0015142414486035705, 0.93496173620224, 0.005237074103206396, 0.07442732155323029, 0.8072983026504517, 0.18726716935634613, 0.04467735439538956, 0.010303637944161892, 0.0025898031890392303, 0.0008604400209151208, 0.018386639654636383, 0.003965016920119524, 0.034275151789188385, 0.004031626507639885, 0.0031042741611599922, 0.0010589712765067816, 0.04255891963839531, 0.0011388728162273765, 0.002768138889223337, 0.0024513930547982454, 0.004104286432266235, 0.0024758896324783564, 0.017219914123415947, 0.005370356608182192, 0.0015491163358092308, 0.0019694233778864145, 0.025667652487754822, 0.0028085571248084307, 0.0017540559638291597, 0.002220071852207184, 0.03577648103237152, 0.0025000290479511023, 0.00433956366032362, 0.003378162393346429, 0.022358832880854607, 0.006745306774973869, 0.005559221841394901, 0.002314390614628792, 0.004386446438729763, 0.002193308901041746, 0.0019374187104403973, 0.0008731843554414809, 0.010345876216888428, 0.0006023023161105812, 0.0018789985915645957, 0.0016913408180698752, 0.002540576970204711], "tokens": [13, 1678, 7762, 13, 268, 334, 4834, 29879, 304, 385, 938, 17452, 385, 3682, 565, 11969, 10008, 29889, 13, 268, 334, 29871, 13, 268, 334, 732, 3207, 995, 29871, 278, 995, 13, 268, 334, 732, 2457, 278, 995, 408, 385, 938, 13, 268, 334, 732, 386, 5727, 826, 18542, 2451, 565, 278]}
{"line_number": 138, "line_type": "original", "code": "                return -val1;", "entropy": 4.939033508300781, "is_bug_line": true, "sus_score": 0.6120589971542358, "per_token_entropy": [8.245050430297852, 6.180371284484863, 5.904284477233887, 6.895479679107666, 2.34350323677063, 0.06551174074411392], "tokens": [462, 736, 448, 791, 29896, 29936]}
{"line_number": 138, "line_type": "generated", "code": "\n    }\n    \n    /**\n     * Casts to a long throwing an exception if overflow occurs.\n     * \n     * @param value  the value\n     * @return the value as a long\n     * @throws", "entropy": 0.05377292260527611, "is_bug_line": true, "sus_score": 0.6120589971542358, "per_token_entropy": [0.10304087400436401, 0.21449506282806396, 0.008437580429017544, 0.008561926893889904, 0.5830674171447754, 0.0007843278581276536, 0.06110796332359314, 0.3381365239620209, 0.006020387634634972, 0.0009550062823109329, 0.0005796659388579428, 0.4161665141582489, 0.003417368046939373, 0.05183621123433113, 0.5472445487976074, 0.049183543771505356, 0.032692305743694305, 0.0028071305714547634, 0.0008454324561171234, 0.0009732277248986065, 0.01006610132753849, 0.0010850501712411642, 0.0059817577712237835, 0.002186647616326809, 0.0022782341111451387, 0.0006448334897868335, 0.02413208968937397, 0.0008713977294974029, 0.0016331442166119814, 0.0010913613950833678, 0.002700731623917818, 0.0018114125123247504, 0.0073325554840266705, 0.005635919980704784, 0.0015350712928920984, 0.0023975218646228313, 0.03804554417729378, 0.0029987390153110027, 0.0011812621960416436, 0.001261273049749434, 0.005765593610703945, 0.002567211864516139, 0.004057153128087521, 0.0030901322606951, 0.2084580957889557, 0.003484726883471012, 0.0036532822996377945, 0.004412913229316473, 0.011368024162948132, 0.0013660395052284002, 0.0018748340662568808, 0.0008705640211701393], "tokens": [13, 1678, 500, 13, 268, 13, 1678, 7762, 13, 268, 334, 4834, 29879, 304, 263, 1472, 17452, 385, 3682, 565, 11969, 10008, 29889, 13, 268, 334, 29871, 13, 268, 334, 732, 3207, 995, 29871, 278, 995, 13, 268, 334, 732, 2457, 278, 995, 408, 263, 1472, 13, 268, 334, 732, 386, 5727]}
{"line_number": 142, "line_type": "original", "code": "                return val1;", "entropy": 5.287285804748535, "is_bug_line": false, "sus_score": 0.5644732117652893, "per_token_entropy": [8.716869354248047, 8.418444633483887, 6.009348392486572, 0.030297599732875824, 3.261467933654785], "tokens": [462, 736, 659, 29896, 29936]}
{"line_number": 142, "line_type": "generated", "code": "\n     * \n     * @param val1  the first value\n     * @param val2  the second value\n     * @return the new total\n     * @throws ArithmeticException if the value is too big or too small", "entropy": 0.024888508021831512, "is_bug_line": false, "sus_score": 0.5644732117652893, "per_token_entropy": [0.10886681824922562, 0.21371403336524963, 0.14907315373420715, 0.3650938868522644, 0.00036137725692242384, 0.02846897765994072, 0.001281393808312714, 0.006363249849528074, 0.0075508663430809975, 0.04307504743337631, 0.00664051016792655, 0.00386040355078876, 0.0007289375062100589, 0.0012900849105790257, 0.003923933021724224, 0.05518028140068054, 0.09581758081912994, 0.00027247529942542315, 0.00017045476124621928, 0.001860198681242764, 0.0015710166189819574, 0.0003985564399044961, 0.0008612737292423844, 0.00016127715934999287, 0.005399168934673071, 0.0009302341495640576, 0.004726903047412634, 0.018538542091846466, 0.0010900514898821712, 0.0011755467858165503, 0.003788082394748926, 0.0046726795844733715, 0.039342284202575684, 0.0254309494048357, 0.02354135364294052, 0.03046157956123352, 0.007965347729623318, 0.001176975667476654, 0.0017960622208192945, 0.0002535260282456875, 0.0037626675330102444, 0.0002184867626056075, 0.0005977750988677144, 0.000992997083812952, 0.001166735659353435, 0.009480573236942291, 0.004435344599187374, 0.00047803416964598, 0.0003097769513260573, 0.005218693055212498, 0.0003488647344056517, 0.00031716562807559967], "tokens": [13, 268, 334, 29871, 13, 268, 334, 732, 3207, 659, 29896, 29871, 278, 937, 995, 13, 268, 334, 732, 3207, 659, 29906, 29871, 278, 1473, 995, 13, 268, 334, 732, 2457, 278, 716, 3001, 13, 268, 334, 732, 386, 5727, 826, 18542, 2451, 565, 278, 995, 338, 2086, 4802, 470, 2086, 2319]}
{"line_number": 136, "line_type": "original", "code": "        switch (val2) {", "entropy": 3.3728647232055664, "is_bug_line": false, "sus_score": 0.5046608448028564, "per_token_entropy": [5.493370056152344, 10.230615615844727, 0.28287234902381897, 4.501528739929199, 3.0265750885009766, 0.06533632427453995, 0.00975248496979475], "tokens": [308, 4607, 313, 791, 29906, 29897, 426]}
{"line_number": 136, "line_type": "generated", "code": "\n            throw new ArithmeticException(\"Value cannot fit in an int: \" + value);\n        }\n        return (int) value;\n    }\n    \n    /**\n     * Casts to a long throwing an exception if overflow occurs", "entropy": 0.19367702305316925, "is_bug_line": false, "sus_score": 0.5046608448028564, "per_token_entropy": [0.12699387967586517, 1.0491788387298584, 1.5188393592834473, 0.00365672679618001, 0.04531373083591461, 0.00018094333063345402, 0.001335801207460463, 0.1263488084077835, 1.433769941329956, 1.5434529781341553, 0.5924052596092224, 0.2404579073190689, 0.11660052090883255, 0.05979109928011894, 0.043362632393836975, 0.009231857024133205, 0.0021815330255776644, 0.012678613886237144, 0.015378821641206741, 0.009178468026220798, 0.20389671623706818, 0.0029130426701158285, 0.03113260306417942, 0.6743766665458679, 0.10577600449323654, 0.12404229491949081, 0.0027912012301385403, 0.0005610798834823072, 0.007432546466588974, 0.0016194575000554323, 0.0057058557868003845, 0.04114542901515961, 0.002734257373958826, 0.006696166004985571, 0.4973415732383728, 0.0007372760446742177, 0.052590999752283096, 0.3491109609603882, 0.006014700047671795, 0.0009248746791854501, 0.0009757286752574146, 0.4062938988208771, 0.0035924678668379784, 0.04808676242828369, 0.4504108428955078, 0.03583537042140961, 0.037340790033340454, 0.00270715169608593, 0.0009046276099979877, 0.001586013357155025, 0.014003708958625793, 0.0015855372184887528], "tokens": [13, 9651, 3183, 716, 826, 18542, 2451, 703, 1917, 2609, 6216, 297, 385, 938, 29901, 376, 718, 995, 416, 13, 4706, 500, 13, 4706, 736, 313, 524, 29897, 995, 29936, 13, 1678, 500, 13, 268, 13, 1678, 7762, 13, 268, 334, 4834, 29879, 304, 263, 1472, 17452, 385, 3682, 565, 11969, 10008]}
{"line_number": 144, "line_type": "original", "code": "        long total = val1 * val2;", "entropy": 1.7617225646972656, "is_bug_line": false, "sus_score": 0.4755330979824066, "per_token_entropy": [5.108964920043945, 6.485342025756836, 4.272594451904297, 0.03568779677152634, 1.5315470695495605, 0.013669454492628574, 0.055438242852687836, 0.09094183892011642, 0.002405370818451047, 0.020635908469557762], "tokens": [308, 1472, 3001, 353, 659, 29896, 334, 659, 29906, 29936]}
{"line_number": 144, "line_type": "generated", "code": "\n     * @param val2  the second value\n     * @return the new total\n     * @throws ArithmeticException if the value is too big or too small\n     */\n    public static int safeMultiplyToInt(", "entropy": 0.031177900731563568, "is_bug_line": false, "sus_score": 0.4755330979824066, "per_token_entropy": [0.13287825882434845, 0.24843814969062805, 0.02470189332962036, 0.004312501288950443, 0.0832449272274971, 0.007541874423623085, 0.007733405567705631, 0.00237171514891088, 0.00041321321623399854, 0.010856845416128635, 0.001358896610327065, 0.01954452134668827, 0.4259176254272461, 0.00280962698161602, 0.0022306579630821943, 0.007350543048232794, 0.005699929315596819, 0.048648420721292496, 0.0264605563133955, 0.018023287877440453, 0.06502337753772736, 0.006438109558075666, 0.001142325927503407, 0.002325689420104027, 0.0002208704245276749, 0.0033742417581379414, 0.00025138078490272164, 0.0006319671520031989, 0.0011859057703986764, 0.0012224590172991157, 0.012861867435276508, 0.004589856136590242, 0.0004120216181036085, 0.000359351426595822, 0.0053563653491437435, 0.0003398079425096512, 0.0004914983292110264, 0.007364151533693075, 0.06309718638658524, 0.22441361844539642, 0.006560809910297394, 0.029626594856381416, 0.006759870797395706, 0.0014851979212835431, 0.03424243628978729, 0.004611808806657791, 0.051811762154102325, 0.00032669928623363376, 0.000860320869833231, 0.0013660395052284002, 2.682172998902388e-05, 0.0019334923708811402], "tokens": [13, 268, 334, 732, 3207, 659, 29906, 29871, 278, 1473, 995, 13, 268, 334, 732, 2457, 278, 716, 3001, 13, 268, 334, 732, 386, 5727, 826, 18542, 2451, 565, 278, 995, 338, 2086, 4802, 470, 2086, 2319, 13, 268, 3776, 13, 1678, 970, 2294, 938, 9109, 6857, 666, 368, 1762, 2928, 29898]}
{"line_number": 148, "line_type": "original", "code": "        return total;", "entropy": 5.647617340087891, "is_bug_line": false, "sus_score": 0.4536433219909668, "per_token_entropy": [7.627905368804932, 5.8039374351501465, 9.082854270935059, 0.07577192038297653], "tokens": [308, 736, 3001, 29936]}
{"line_number": 148, "line_type": "generated", "code": "\n    public static int safeMultiplyToInt(long val1, long val2) {\n        if (val1 > 0 && val2 > 0) {\n            if (val1", "entropy": 0.1798444241285324, "is_bug_line": false, "sus_score": 0.4536433219909668, "per_token_entropy": [0.07315969467163086, 0.6226933002471924, 0.34072422981262207, 0.002398948883637786, 0.054569341242313385, 0.00382608431391418, 0.043589308857917786, 0.00043072958942502737, 0.0009333306807093322, 0.0030074152164161205, 4.124556289752945e-05, 0.0016952680889517069, 0.6176908016204834, 0.02605796977877617, 0.0007129749283194542, 0.0007898071780800819, 0.5640300512313843, 0.00119138287845999, 0.0007722970913164318, 0.0023654119577258825, 0.007964283227920532, 0.007167341653257608, 0.11741156131029129, 1.8547745943069458, 0.019821424037218094, 0.025238361209630966, 0.5692383646965027, 0.1969422996044159, 0.11816930770874023, 0.4485470652580261, 0.5635082721710205, 0.02649027667939663, 0.0838991105556488, 0.0046218945644795895, 0.06640320271253586, 0.0027398450765758753, 1.1579463481903076, 0.002463165670633316, 0.01509775035083294, 0.048566773533821106, 0.13894319534301758, 0.005782898049801588, 0.009490611031651497, 0.061247568577528], "tokens": [13, 1678, 970, 2294, 938, 9109, 6857, 666, 368, 1762, 2928, 29898, 5426, 659, 29896, 29892, 1472, 659, 29906, 29897, 426, 13, 4706, 565, 313, 791, 29896, 1405, 29871, 29900, 2607, 659, 29906, 1405, 29871, 29900, 29897, 426, 13, 9651, 565, 313, 791, 29896]}
{"line_number": 145, "line_type": "original", "code": "        if (total / val2 != val1) {", "entropy": 1.5408161878585815, "is_bug_line": false, "sus_score": 0.43731409311294556, "per_token_entropy": [4.504997730255127, 4.2973198890686035, 0.26447540521621704, 5.716019153594971, 2.716723918914795, 0.014371695928275585, 0.1261415034532547, 0.03155255690217018, 0.004411489237099886, 0.0014780559577047825, 0.7842543125152588, 0.0280479583889246], "tokens": [308, 565, 313, 7827, 847, 659, 29906, 2804, 659, 29896, 29897, 426]}
{"line_number": 145, "line_type": "generated", "code": "\n     * @return the new total\n     * @throws ArithmeticException if the value is too big or too small\n     */\n    public static int safeMultiplyToInt(long val1, long val2) {\n       ", "entropy": 0.06030549854040146, "is_bug_line": false, "sus_score": 0.43731409311294556, "per_token_entropy": [0.28564468026161194, 0.4036335051059723, 0.08248680830001831, 0.01710929535329342, 0.12786556780338287, 0.009572911076247692, 0.07645121961832047, 0.024610476568341255, 0.03059651330113411, 0.07959192246198654, 0.013663222081959248, 0.002686940599232912, 0.0035393708385527134, 0.00031668893643654883, 0.004732360597699881, 0.00018320789968129247, 0.0007014198345132172, 0.001578157884068787, 0.0017753568245097995, 0.019207436591386795, 0.004259798675775528, 0.0005184260080568492, 0.0004287039046175778, 0.006859682034701109, 0.00044741155579686165, 0.000726316764485091, 0.009475495666265488, 0.14552506804466248, 0.233568474650383, 0.012206966057419777, 0.027829904109239578, 0.007621733006089926, 0.0014703187625855207, 0.041089367121458054, 0.004517112858593464, 0.04074607789516449, 0.0003828269545920193, 0.0008990298374556005, 0.001652186387218535, 3.2543604902457446e-05, 0.001668252982199192, 0.7178179621696472, 0.012206495739519596, 0.0006267252028919756, 0.0008338788175024092, 0.4685506820678711, 0.0012966329231858253, 0.0007121411035768688, 0.003437920706346631, 0.006858616601675749, 0.004775428678840399, 0.19089631736278534], "tokens": [13, 268, 334, 732, 2457, 278, 716, 3001, 13, 268, 334, 732, 386, 5727, 826, 18542, 2451, 565, 278, 995, 338, 2086, 4802, 470, 2086, 2319, 13, 268, 3776, 13, 1678, 970, 2294, 938, 9109, 6857, 666, 368, 1762, 2928, 29898, 5426, 659, 29896, 29892, 1472, 659, 29906, 29897, 426, 13, 4706]}
