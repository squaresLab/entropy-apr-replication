{"line_number": 1041, "line_type": "original", "code": "      Node obj = callTarget.getFirstChild();", "entropy": 1.533203125, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [4.6953125, 4.57421875, 3.05078125, 0.27978515625, 0.449462890625, 2.021484375, 0.0714111328125, 0.11083984375, 0.0017480850219726562, 0.07635498046875], "tokens": [647, 4004, 2830, 280, 1476, 2922, 32, 25657, 2931, 473]}
{"line_number": 1041, "line_type": "generated", "code": "\n      maybeResolveTemplatedType(\n          paramType.getTypeOfThis(),\n          getJSType(obj),\n          resolvedTypes);\n    }\n  }\n\n  private void maybeResolveTemplateTypeFromNodes(\n      List<JSType> paramTypes,\n      Iterable<Node", "entropy": 0.204345703125, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [1.6220703125, 1.0126953125, 0.00620269775390625, 0.0701904296875, 0.0156707763671875, 0.017578125, 0.08917236328125, 0.07635498046875, 0.333740234375, 0.037445068359375, 0.494384765625, 0.0004355907440185547, 0.0004892349243164062, 0.0008401870727539062, 0.1824951171875, 1.1435546875, 0.0513916015625, 1.71661376953125e-05, 0.00933074951171875, 0.18115234375, 0.01342010498046875, 0.399658203125, 0.00090789794921875, 3.0994415283203125e-06, 0.0009570121765136719, 0.306396484375, 0.0014677047729492188, 0.5029296875, 0.00046253204345703125, 0.10089111328125, 0.2310791015625, 0.128173828125, 0.01468658447265625, 0.00287628173828125, 0.004215240478515625, 0.0005397796630859375, 0.0020904541015625, 0.002735137939453125, 0.0004813671112060547, 0.049560546875, 0.391357421875, 0.08843994140625, 1.4501953125, 5.841255187988281e-06, 0.0070343017578125, 0.358642578125, 0.10565185546875, 0.0014438629150390625, 0.438232421875, 0.3046875, 0.372314453125, 0.0001862049102783203], "tokens": [397, 8762, 15048, 39988, 620, 26, 616, 4356, 620, 32, 10272, 1419, 2272, 1026, 616, 622, 4624, 620, 26, 2067, 471, 616, 11425, 2424, 293, 284, 320, 334, 320, 719, 945, 763, 8762, 15048, 3442, 620, 1792, 5909, 26, 397, 1682, 46, 4624, 620, 48, 4356, 2424, 30, 397, 19209, 46, 1212]}
{"line_number": 1042, "line_type": "original", "code": "      maybeResolveTemplatedType(", "entropy": 1.7763671875, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [6.27734375, 4.1015625, 0.017974853515625, 0.2216796875, 0.00899505615234375, 0.02655029296875], "tokens": [647, 8762, 15048, 39988, 620, 26]}
{"line_number": 1042, "line_type": "generated", "code": "\n          paramType.getTemplateType(),\n          argType,\n          resolvedTypes);\n    }\n  }\n\n  private void maybeResolveTemplateTypeFromNodes(\n      Iterable<Node> paramNodes,\n      Iterable<Node> argNodes,\n      Map<TemplateType,", "entropy": 0.177490234375, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [0.9345703125, 0.67578125, 0.0020275115966796875, 0.131591796875, 0.60888671875, 0.693359375, 0.88427734375, 0.297607421875, 0.0745849609375, 0.2470703125, 0.0011281967163085938, 0.12322998046875, 0.04986572265625, 0.02142333984375, 0.0008478164672851562, 0.00562286376953125, 0.07391357421875, 0.00275421142578125, 0.1929931640625, 0.00038909912109375, 0.09332275390625, 0.350830078125, 0.139892578125, 0.145751953125, 0.004985809326171875, 0.0256195068359375, 0.005619049072265625, 0.00492095947265625, 0.009307861328125, 0.000614166259765625, 0.0693359375, 1.3232421875, 0.2705078125, 0.333984375, 2.384185791015625e-05, 0.6865234375, 0.273681640625, 0.0014057159423828125, 0.2178955078125, 0.0218658447265625, 0.0732421875, 0.00016129016876220703, 1.3828277587890625e-05, 0.12493896484375, 0.0086669921875, 0.00046944618225097656, 0.0072021484375, 0.0100250244140625, 0.00021076202392578125, 8.26120376586914e-05, 7.987022399902344e-06, 3.0279159545898438e-05], "tokens": [616, 4356, 620, 32, 371, 3442, 620, 1026, 616, 1638, 620, 30, 616, 11425, 2424, 293, 284, 320, 334, 320, 719, 945, 763, 8762, 15048, 3442, 620, 1792, 5909, 26, 397, 19209, 46, 1212, 48, 4356, 5909, 30, 397, 19209, 46, 1212, 48, 1638, 5909, 30, 397, 3516, 46, 3442, 620, 30]}
{"line_number": 1151, "line_type": "original", "code": "        JSType join = previous.getLeastSupertype(resolved);", "entropy": 2.783203125, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [5.7578125, 4.8359375, 0.0013608932495117188, 5.99609375, 0.222900390625, 8.984375, 1.7021484375, 1.05859375, 6.23828125, 0.28515625, 0.0006937980651855469, 0.232421875, 3.44140625, 0.2103271484375], "tokens": [351, 7750, 620, 7140, 280, 4552, 32, 371, 31420, 6195, 43981, 26, 15655, 293]}
{"line_number": 1151, "line_type": "generated", "code": "\n    for (Node arg : n.getSecondChild().children()) {\n      if (arg.isFunction()) {\n        arg.getFirstChild().visit(replacer);\n      }\n    }\n    return replacer.madeChanges;\n  }\n\n  private static Map", "entropy": 0.338134765625, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [0.470458984375, 2.107421875, 0.01013946533203125, 1.158203125, 0.81396484375, 0.1846923828125, 0.53173828125, 0.00860595703125, 0.54833984375, 0.01192474365234375, 0.00946044921875, 0.01100921630859375, 0.00237274169921875, 0.001186370849609375, 0.038055419921875, 0.11187744140625, 1.150390625, 0.1650390625, 0.1234130859375, 0.1348876953125, 1.1787109375, 0.28759765625, 0.0004978179931640625, 0.041259765625, 1.2158203125, 0.04412841796875, 0.222900390625, 0.00974273681640625, 0.0019741058349609375, 0.34228515625, 0.001613616943359375, 0.001964569091796875, 6.079673767089844e-06, 0.00135040283203125, 0.63134765625, 7.140636444091797e-05, 0.28564453125, 0.0009279251098632812, 0.6982421875, 0.9248046875, 0.034332275390625, 8.52346420288086e-05, 0.00139617919921875, 0.0043182373046875, 6.902217864990234e-05, 0.0178680419921875, 0.048919677734375, 0.0006718635559082031, 0.26953125, 1.0078125, 1.1806640625, 1.5361328125], "tokens": [284, 436, 308, 1212, 1638, 499, 310, 32, 371, 5064, 2931, 922, 4915, 1157, 301, 397, 415, 308, 626, 32, 39504, 1157, 301, 291, 1638, 32, 25657, 2931, 922, 8275, 26, 268, 34393, 293, 397, 320, 284, 320, 284, 442, 316, 34393, 32, 24915, 9574, 45, 334, 320, 719, 945, 907, 3516]}
{"line_number": 1152, "line_type": "original", "code": "        map.put(template, join);", "entropy": 2.458984375, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [6.61328125, 9.21875, 0.65673828125, 0.1605224609375, 0.06488037109375, 0.77587890625, 0.0576171875, 4.421875, 0.159912109375], "tokens": [351, 1992, 32, 524, 26, 2387, 30, 7140, 293]}
{"line_number": 1152, "line_type": "generated", "code": "\n\n    if (replacer.madeChanges) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Given a function type and the arguments to a call to that function,\n   * try to infer the template types for the function.", "entropy": 0.485595703125, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [1.2841796875, 1.4267578125, 0.087890625, 0.177490234375, 0.0704345703125, 0.0003044605255126953, 0.0065460205078125, 7.49826431274414e-05, 0.0164031982421875, 0.00167083740234375, 0.036468505859375, 1.1044921875, 0.0221099853515625, 0.00019633769989013672, 0.00809478759765625, 7.402896881103516e-05, 0.9208984375, 0.0103912353515625, 0.0034999847412109375, 0.0014514923095703125, 0.020172119140625, 0.00041174888610839844, 0.24267578125, 0.6162109375, 0.054840087890625, 0.00018787384033203125, 2.375, 0.312255859375, 0.68505859375, 0.6650390625, 1.0693359375, 1.8017578125, 1.50390625, 0.66552734375, 1.20703125, 0.278076171875, 1.04296875, 0.342529296875, 0.1043701171875, 0.1566162109375, 0.5576171875, 9.810924530029297e-05, 1.4267578125, 0.03814697265625, 0.2462158203125, 0.296630859375, 0.487060546875, 0.09893798828125, 2.171875, 0.49072265625, 0.51025390625, 0.5947265625], "tokens": [446, 415, 308, 268, 34393, 32, 24915, 9574, 27, 301, 397, 442, 861, 45, 284, 320, 284, 442, 901, 45, 334, 320, 719, 1022, 664, 319, 15273, 312, 667, 827, 461, 322, 4209, 372, 312, 1476, 372, 688, 667, 30, 664, 319, 1596, 372, 21506, 322, 3079, 3738, 436, 322, 667, 32]}
{"line_number": 1356, "line_type": "original", "code": "        TemplateTypeMap typeMap = restrictedObjType.getTemplateTypeMap();", "entropy": 2.46484375, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [4.87109375, 9.328125, 0.11016845703125, 3.857421875, 0.00787353515625, 0.225830078125, 7.2734375, 5.91796875, 0.1031494140625, 0.321044921875, 0.00391387939453125, 0.000125885009765625, 0.01922607421875], "tokens": [351, 10838, 48743, 827, 1208, 280, 27665, 47041, 32, 371, 3442, 48743, 473]}
{"line_number": 1356, "line_type": "generated", "code": "\n    BooleanOutcomePair rightLiterals =\n        traverseWithinShortCircuitingBinOp(right, rightScope);\n    JSType rightType = right.getJSType();\n\n    // reverse abstract interpret the right node to produce the correct\n    // scope in which to", "entropy": 0.1416015625, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [0.206298828125, 1.3251953125, 0.0060882568359375, 0.0017843246459960938, 0.0697021484375, 0.09759521484375, 0.0013246536254882812, 0.0214996337890625, 0.2232666015625, 0.0171356201171875, 0.023345947265625, 0.0005640983581542969, 4.267692565917969e-05, 4.4465065002441406e-05, 0.00022077560424804688, 0.0004696846008300781, 0.005138397216796875, 0.0634765625, 0.0012578964233398438, 0.169921875, 4.3392181396484375e-05, 0.015899658203125, 0.359619140625, 0.054473876953125, 5.4836273193359375e-06, 0.012786865234375, 0.0016574859619140625, 0.0039215087890625, 0.048309326171875, 0.02288818359375, 0.01007843017578125, 0.00013136863708496094, 3.2186508178710938e-06, 0.005123138427734375, 0.285888671875, 0.55615234375, 2.3203125, 0.01161956787109375, 0.00628662109375, 0.039215087890625, 0.053009033203125, 0.01030731201171875, 0.41259765625, 0.2332763671875, 0.114013671875, 0.2093505859375, 0.05279541015625, 0.001377105712890625, 0.12017822265625, 0.15869140625, 0.0004317760467529297, 0.00923919677734375], "tokens": [284, 5069, 19835, 5442, 2091, 62, 18588, 280, 291, 29046, 27092, 6872, 28737, 299, 9074, 3397, 26, 990, 30, 2091, 5504, 293, 284, 7750, 620, 2091, 620, 280, 2091, 32, 371, 4624, 620, 473, 446, 434, 10156, 5547, 21660, 322, 2091, 1541, 372, 13882, 322, 3809, 284, 434, 4576, 328, 1510, 372]}
{"line_number": 1357, "line_type": "original", "code": "        TemplateTypeMapReplacer replacer = new TemplateTypeMapReplacer(", "entropy": 2.455078125, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [3.84375, 14.9296875, 2.646484375, 4.734375, 0.0025615692138671875, 6.3203125, 0.0032482147216796875, 0.1436767578125, 1.529296875, 0.12396240234375, 0.001800537109375, 0.0016956329345703125, 5.745887756347656e-05, 0.08447265625], "tokens": [351, 10838, 48743, 435, 34393, 316, 34393, 280, 537, 10838, 48743, 435, 34393, 26]}
{"line_number": 1357, "line_type": "generated", "code": "\n        traverseWithinShortCircuitingBinOp(right, rightScope);\n    JSType rightType = right.getJSType();\n\n    // reverse abstract interpret the right node to produce the correct\n    // scope in which to verify the left node\n    FlowScope left", "entropy": 0.1640625, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [0.3759765625, 0.4228515625, 0.144287109375, 0.00174713134765625, 0.00012922286987304688, 0.00011038780212402344, 0.0006880760192871094, 0.00046372413635253906, 0.0117950439453125, 0.1065673828125, 0.0018215179443359375, 0.187255859375, 0.00013649463653564453, 0.044921875, 0.36376953125, 0.0443115234375, 2.7418136596679688e-06, 0.0104522705078125, 0.0012044906616210938, 0.0035457611083984375, 0.0299224853515625, 0.0169219970703125, 0.0108184814453125, 8.380413055419922e-05, 3.5762786865234375e-06, 0.0027675628662109375, 0.2841796875, 0.50146484375, 2.34375, 0.0116424560546875, 0.006214141845703125, 0.0411376953125, 0.049530029296875, 0.00887298583984375, 0.319091796875, 0.21240234375, 0.0968017578125, 0.1868896484375, 0.0582275390625, 0.0008983612060546875, 0.09423828125, 0.155029296875, 0.0004019737243652344, 0.00811004638671875, 0.448974609375, 0.08966064453125, 1.4970703125, 0.0136871337890625, 0.09423828125, 0.1558837890625, 8.547306060791016e-05, 0.0672607421875], "tokens": [291, 29046, 27092, 6872, 28737, 299, 9074, 3397, 26, 990, 30, 2091, 5504, 293, 284, 7750, 620, 2091, 620, 280, 2091, 32, 371, 4624, 620, 473, 446, 434, 10156, 5547, 21660, 322, 2091, 1541, 372, 13882, 322, 3809, 284, 434, 4576, 328, 1510, 372, 6144, 322, 2841, 1541, 284, 12419, 5504, 2841]}
{"line_number": 1359, "line_type": "original", "code": "        propertyType = propertyType.visit(replacer);", "entropy": 2.474609375, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [7.046875, 9.8125, 0.275390625, 0.058258056640625, 4.52734375, 0.05718994140625, 0.10491943359375, 4.671875, 0.044403076171875, 3.017578125, 0.00823974609375, 0.068359375], "tokens": [351, 2804, 620, 280, 2804, 620, 32, 8275, 26, 268, 34393, 293]}
{"line_number": 1359, "line_type": "generated", "code": "\n    return leftLiterals.join(rightLiterals);\n  }\n\n  private BooleanOutcomePair traverseWithinShortCircuitingBinOp(\n      Node n, FlowScope scope) {\n    if (n.isAssign()) {\n      return traverseAssign(n,", "entropy": 0.2462158203125, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [1.0546875, 0.92822265625, 2.19921875, 0.01007080078125, 6.651878356933594e-05, 0.06829833984375, 1.6533203125, 0.491455078125, 0.01302337646484375, 0.0017185211181640625, 0.0006427764892578125, 0.109619140625, 0.03778076171875, 0.0006089210510253906, 0.1263427734375, 0.2568359375, 0.2578125, 0.001583099365234375, 0.002410888671875, 0.0303497314453125, 0.1241455078125, 0.0033130645751953125, 0.0002989768981933594, 3.1828880310058594e-05, 0.00030422210693359375, 1.7523765563964844e-05, 0.0009584426879882812, 0.2188720703125, 0.0004572868347167969, 0.01131439208984375, 0.0002237558364868164, 0.00719451904296875, 1.5735626220703125e-05, 0.03228759765625, 0.004566192626953125, 0.0024242401123046875, 0.08056640625, 1.40234375, 0.0269927978515625, 0.294189453125, 0.0245819091796875, 0.310546875, 2.09765625, 0.123291015625, 0.0016727447509765625, 0.0126800537109375, 0.359130859375, 0.11285400390625, 0.2137451171875, 0.056549072265625, 0.011871337890625, 0.0223541259765625], "tokens": [284, 442, 2841, 62, 18588, 32, 2524, 26, 990, 62, 18588, 293, 334, 320, 719, 945, 5069, 19835, 5442, 29046, 27092, 6872, 28737, 299, 9074, 3397, 26, 397, 4004, 310, 30, 12419, 5504, 4576, 27, 301, 284, 415, 308, 96, 32, 297, 9079, 1157, 301, 397, 442, 29046, 9079, 26, 96, 30]}
{"line_number": 1065, "line_type": "original", "code": "    } else if (paramType.isUnionType()) {", "entropy": 1.3349609375, "is_bug_line": false, "sus_score": 0.22645540682891913, "per_token_entropy": [6.03515625, 5.1171875, 3.822265625, 0.239501953125, 0.020721435546875, 0.450439453125, 0.20361328125, 0.03375244140625, 0.607421875, 0.66455078125, 0.0009284019470214844, 0.1475830078125, 0.0196075439453125], "tokens": [264, 320, 813, 415, 308, 753, 620, 32, 297, 14185, 620, 1157, 301]}
{"line_number": 1065, "line_type": "generated", "code": "\n  private void maybeResolveTemplateTypeFromNodes(\n      List<JSType> paramTypes,\n      Iterable<Node> argNodes,\n      Map<TemplateType, JSType> resolvedTypes) {\n    Iterator<Node> argNodesIter = argNodes.", "entropy": 0.1488037109375, "is_bug_line": false, "sus_score": 0.22645540682891913, "per_token_entropy": [0.300048828125, 0.350830078125, 0.0850830078125, 0.01262664794921875, 0.0060882568359375, 0.0193634033203125, 0.0025463104248046875, 0.00313568115234375, 0.005931854248046875, 0.0008687973022460938, 0.092529296875, 0.4619140625, 0.04510498046875, 0.89111328125, 0.00014030933380126953, 0.057647705078125, 0.32958984375, 0.050628662109375, 0.00096893310546875, 0.45068359375, 0.47021484375, 0.42919921875, 0.0004363059997558594, 3.635883331298828e-05, 0.91162109375, 0.1854248046875, 0.0011491775512695312, 0.012359619140625, 0.00894927978515625, 0.0006704330444335938, 0.00014221668243408203, 6.461143493652344e-05, 0.00028777122497558594, 0.002239227294921875, 2.7298927307128906e-05, 3.7550926208496094e-05, 0.0026264190673828125, 0.00231170654296875, 0.001708984375, 0.0013055801391601562, 0.05633544921875, 0.73388671875, 0.00615692138671875, 0.108642578125, 8.106231689453125e-06, 0.296875, 1.041015625, 0.291259765625, 0.0020999908447265625, 0.0028896331787109375, 5.364418029785156e-06, 0.0006318092346191406], "tokens": [334, 945, 763, 8762, 15048, 3442, 620, 1792, 5909, 26, 397, 1682, 46, 4624, 620, 48, 4356, 2424, 30, 397, 19209, 46, 1212, 48, 1638, 5909, 30, 397, 3516, 46, 3442, 620, 30, 7750, 620, 48, 11425, 2424, 27, 301, 284, 14743, 46, 1212, 48, 1638, 5909, 3853, 280, 1638, 5909, 32]}
{"line_number": 1049, "line_type": "original", "code": "      maybeResolveTemplateTypeFromNodes(", "entropy": 1.0478515625, "is_bug_line": false, "sus_score": 0.21081851067789195, "per_token_entropy": [3.87109375, 2.23828125, 0.0142822265625, 1.275390625, 0.144775390625, 0.036895751953125, 0.7880859375, 0.01100921630859375], "tokens": [647, 8762, 15048, 3442, 620, 1792, 5909, 26]}
{"line_number": 1049, "line_type": "generated", "code": "\n          referencedParamType.getPropertyNames(),\n          argObjectType.getPropertyNames(),\n          resolvedTypes);\n    }\n  }\n\n  private void resolvedTemplateType(\n      Map<TemplateType, JSType> resolvedTypes,\n      TemplateType templateType,\n      JSType arg", "entropy": 0.154296875, "is_bug_line": false, "sus_score": 0.21081851067789195, "per_token_entropy": [1.095703125, 0.54931640625, 0.00014543533325195312, 1.8715858459472656e-05, 0.06884765625, 0.6767578125, 0.88232421875, 0.0413818359375, 0.04229736328125, 0.07763671875, 0.0232391357421875, 0.2474365234375, 0.1651611328125, 0.037933349609375, 0.0222930908203125, 0.0653076171875, 0.036529541015625, 0.0003311634063720703, 0.01163482666015625, 0.32763671875, 0.0029163360595703125, 0.357177734375, 0.0004334449768066406, 0.181884765625, 0.278564453125, 0.1533203125, 1.3330078125, 0.0023040771484375, 0.001537322998046875, 0.0029659271240234375, 0.057037353515625, 0.004810333251953125, 0.0011577606201171875, 0.00015485286712646484, 3.24249267578125e-05, 6.389617919921875e-05, 0.0025501251220703125, -0.0, 1.895427703857422e-05, 0.01462554931640625, 0.010894775390625, 0.0011157989501953125, 0.042327880859375, 0.01959228515625, 2.3245811462402344e-05, 0.64990234375, 0.12347412109375, 0.037933349609375, 0.1427001953125, 0.0032939910888671875, 4.76837158203125e-07, 0.228515625], "tokens": [616, 15167, 3180, 620, 32, 12707, 4109, 1026, 616, 1638, 15898, 32, 12707, 4109, 1026, 616, 11425, 2424, 293, 284, 320, 334, 320, 719, 945, 763, 11425, 3442, 620, 26, 397, 3516, 46, 3442, 620, 30, 7750, 620, 48, 11425, 2424, 30, 397, 10838, 620, 3079, 620, 30, 397, 7750, 620, 1638]}
{"line_number": 1119, "line_type": "original", "code": "    maybeResolveTemplateTypeFromNodes(", "entropy": 2.015625, "is_bug_line": false, "sus_score": 0.21081851067789195, "per_token_entropy": [3.4765625, 6.5859375, 1.8486328125, 1.6083984375, 0.1746826171875, 2.044921875, 0.305908203125, 0.07440185546875], "tokens": [264, 8762, 15048, 3442, 620, 1792, 5909, 26]}
{"line_number": 1119, "line_type": "generated", "code": "\n    @Override\n    public void caseCast(CastNode node) {\n      JSType type = getJSType(node.getExpr());\n      JSType replacement = replacements.get(type.getTemplateType());\n      if (replacement!= null) {", "entropy": 0.34716796875, "is_bug_line": false, "sus_score": 0.21081851067789195, "per_token_entropy": [1.1123046875, 0.287109375, 0.001644134521484375, 0.0244140625, 0.246826171875, 0.76220703125, 2.228515625, 2.806640625, 0.499267578125, 0.016998291015625, 0.83251953125, 1.037109375, 0.0347900390625, 0.007381439208984375, 0.09027099609375, 1.0771484375, 0.0001131296157836914, 1.2861328125, 0.1456298828125, 0.67626953125, 0.076416015625, 0.00045609474182128906, 0.0095977783203125, 0.0008502006530761719, 0.313232421875, 0.92138671875, 0.177490234375, 0.038787841796875, 0.052886962890625, 0.65478515625, 5.4717063903808594e-05, 0.464599609375, 0.107666015625, 0.1978759765625, 0.0450439453125, 0.00275421142578125, 0.0005769729614257812, 0.0005154609680175781, 0.05810546875, 0.52490234375, 0.468017578125, 0.1463623046875, 0.177001953125, 0.10162353515625, 0.07275390625, 0.08587646484375, 0.01123809814453125, 0.0113372802734375, 0.041839599609375, 0.0025177001953125, 0.10614013671875, 0.0004799365997314453], "tokens": [284, 477, 1788, 284, 562, 763, 1135, 8946, 26, 8946, 1212, 1541, 27, 301, 397, 7750, 620, 827, 280, 622, 4624, 620, 26, 1251, 32, 371, 6150, 1035, 397, 7750, 620, 15909, 280, 15909, 101, 32, 371, 26, 681, 32, 371, 3442, 620, 1035, 397, 415, 308, 27378, 863, 744, 27, 301]}
{"line_number": 1121, "line_type": "original", "code": "  }", "entropy": 1.5888671875, "is_bug_line": false, "sus_score": 0.21081851067789195, "per_token_entropy": [2.728515625, 0.44873046875], "tokens": [225, 320]}
{"line_number": 1121, "line_type": "generated", "code": "\n      JSType replacement = replacements.get(type);\n      if (replacement!= null) {\n        madeChanges = true;\n        return replacement;\n      }\n      return super.caseTemplateType(type);\n    }\n  }", "entropy": 0.133544921875, "is_bug_line": false, "sus_score": 0.21081851067789195, "per_token_entropy": [1.212890625, 0.489990234375, 7.200241088867188e-05, 0.236083984375, 0.041412353515625, 0.0245361328125, 0.0009732246398925781, 0.0007152557373046875, 0.0005564689636230469, 0.0001837015151977539, 0.002490997314453125, 0.01486968994140625, 0.0291748046875, 0.1431884765625, 0.00848388671875, 0.004924774169921875, 0.1800537109375, 0.00177001953125, 0.06390380859375, 0.00156402587890625, 0.030731201171875, 0.365234375, 2.2172927856445312e-05, 0.0087738037109375, 0.00199127197265625, 0.0004496574401855469, 0.033050537109375, 0.149169921875, 0.07122802734375, 0.11798095703125, 0.00557708740234375, 4.1484832763671875e-05, 0.484130859375, 0.12493896484375, 1.650390625, 0.0010242462158203125, 0.0028743743896484375, 0.0078887939453125, 0.0004076957702636719, 0.002193450927734375, 0.0018224716186523438, 0.0013399124145507812, 0.2237548828125, 0.002777099609375, 0.397705078125, 0.0017213821411132812], "tokens": [397, 7750, 620, 15909, 280, 15909, 101, 32, 371, 26, 681, 293, 397, 415, 308, 27378, 863, 744, 27, 301, 291, 5590, 9574, 280, 861, 45, 291, 442, 15909, 45, 397, 320, 397, 442, 2599, 32, 1732, 3442, 620, 26, 681, 293, 284, 320, 334, 320]}
{"line_number": 1127, "line_type": "original", "code": "    while (declParams.hasNext() && callParams.hasNext()) {", "entropy": 0.759765625, "is_bug_line": false, "sus_score": 0.21081851067789195, "per_token_entropy": [2.904296875, 5.25, 0.0465087890625, 0.396484375, 0.037445068359375, 0.003452301025390625, 0.001407623291015625, 2.4375, 0.1947021484375, 0.0670166015625, 0.0079193115234375, 0.001079559326171875, 0.0003104209899902344, 0.005279541015625, 0.04241943359375], "tokens": [264, 2218, 308, 4214, 2778, 32, 16421, 346, 962, 1476, 2778, 32, 16421, 1157, 301]}
{"line_number": 1127, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.21081851067789195, "per_token_entropy": [], "tokens": []}
{"line_number": 1128, "line_type": "original", "code": "      Node declParam = declParams.next();", "entropy": 1.220703125, "is_bug_line": false, "sus_score": 0.21081851067789195, "per_token_entropy": [5.92578125, 3.984375, 1.0107421875, 0.3271484375, 0.0780029296875, 0.74853515625, 0.09088134765625, 0.004550933837890625, 0.033905029296875, 0.00519561767578125], "tokens": [647, 4004, 4497, 3180, 280, 4497, 2778, 32, 1978, 473]}
{"line_number": 1128, "line_type": "generated", "code": "\n  private static JSType getJSType(Node n) {\n    return n.getJSType();\n  }", "entropy": 0.2464599609375, "is_bug_line": false, "sus_score": 0.21081851067789195, "per_token_entropy": [0.94287109375, 0.4462890625, 0.88037109375, 0.9599609375, 0.002925872802734375, 0.38037109375, 0.0667724609375, 0.00124359130859375, 0.01102447509765625, 0.01934814453125, 0.466552734375, 0.005489349365234375, 0.003299713134765625, 0.045562744140625, 0.5, 0.330810546875, 0.05633544921875, 0.381103515625, 0.00383758544921875, 0.000125885009765625, 0.138916015625, 0.0169525146484375, 0.00835418701171875], "tokens": [334, 945, 907, 7750, 620, 622, 4624, 620, 26, 1212, 310, 27, 301, 284, 442, 310, 32, 371, 4624, 620, 473, 334, 320]}
{"line_number": 1129, "line_type": "original", "code": "      maybeResolveTemplatedType(", "entropy": 1.6044921875, "is_bug_line": false, "sus_score": 0.21081851067789195, "per_token_entropy": [4.11328125, 4.6640625, 0.291259765625, 0.427978515625, 0.080078125, 0.04705810546875], "tokens": [647, 8762, 15048, 39988, 620, 26]}
{"line_number": 1129, "line_type": "generated", "code": "\n   * @param declParam The parameter node in the function declaration.\n   * @param callParam The parameter node in the function call.\n   * @param resolvedTypes A map of template types to resolved types.\n   */\n  private void maybeResolveTemplatedType", "entropy": 0.445556640625, "is_bug_line": false, "sus_score": 0.21081851067789195, "per_token_entropy": [1.16796875, 0.26220703125, 2.134765625, 0.17724609375, 1.3291015625, 1.560546875, 1.4375, 0.85888671875, 1.6357421875, 2.0625, 0.158447265625, 0.465576171875, 0.41650390625, 0.52783203125, 0.04632568359375, 0.04766845703125, 0.017791748046875, 0.0360107421875, 0.06939697265625, 0.07183837890625, 0.015411376953125, 0.294921875, 0.0130462646484375, 0.13916015625, 0.0289306640625, 0.1966552734375, 0.0416259765625, 0.0909423828125, 0.08056640625, 0.18603515625, 0.0163726806640625, 0.1407470703125, 0.1473388671875, 0.040252685546875, 0.89013671875, 0.53857421875, 0.90234375, 1.1767578125, 0.07257080078125, 0.40087890625, 0.80615234375, 0.42919921875, 0.37353515625, 0.49072265625, 0.08428955078125, 0.1739501953125, 0.172607421875, 0.578125, 0.03204345703125, 0.0107421875, 0.11376953125, 0.00521087646484375], "tokens": [664, 319, 477, 753, 4497, 3180, 886, 3395, 1541, 328, 322, 667, 13317, 32, 664, 319, 477, 753, 1476, 3180, 886, 3395, 1541, 328, 322, 667, 1476, 32, 664, 319, 477, 753, 11425, 2424, 399, 1992, 432, 3079, 3738, 372, 11425, 3738, 32, 664, 569, 334, 945, 763, 8762, 15048, 39988, 620]}
{"line_number": 1133, "line_type": "original", "code": "      if (declParam.isVarArgs()) {", "entropy": 1.77734375, "is_bug_line": false, "sus_score": 0.21081851067789195, "per_token_entropy": [6.30078125, 2.140625, 0.154541015625, 3.369140625, 1.2734375, 0.09478759765625, 0.497314453125, 4.38671875, 0.268798828125, 1.037109375, 0.0230865478515625], "tokens": [647, 415, 308, 4214, 3180, 32, 297, 1881, 3080, 1157, 301]}
{"line_number": 1133, "line_type": "generated", "code": "\n  private static class ThisResolver extends AbstractShallowVisitor {\n    private final JSType thisType;\n\n    ThisResolver(JSType thisType) {\n      this.thisType = thisType;\n    }\n\n    @Override\n    public void caseNew(NodeTraversal", "entropy": 0.2705078125, "is_bug_line": false, "sus_score": 0.21081851067789195, "per_token_entropy": [0.544921875, 0.282470703125, 0.7958984375, 0.546875, 1.0126953125, 1.3427734375, 0.11651611328125, 1.2265625, 1.0185546875, 0.005847930908203125, 0.70458984375, 0.2646484375, 0.140380859375, 0.289306640625, 0.335205078125, 0.69921875, 0.0031375885009765625, 1.3974609375, 0.0310211181640625, 0.0035839080810546875, 0.525390625, 0.32958984375, 0.00011992454528808594, 0.0017366409301757812, 0.040130615234375, 7.450580596923828e-05, 0.1314697265625, 0.001789093017578125, 0.006072998046875, 0.0001914501190185547, 0.0084991455078125, 0.02496337890625, 0.0001283884048461914, 4.112720489501953e-05, 2.2530555725097656e-05, 0.00018513202667236328, 0.006114959716796875, 5.9604644775390625e-06, 0.0032825469970703125, 0.003017425537109375, 3.7789344787597656e-05, 0.0841064453125, 0.0271148681640625, 0.0003573894500732422, 0.013763427734375, 0.02587890625, 0.5693359375, 0.372802734375, 0.7041015625, 0.09356689453125, 0.2998046875, 0.02911376953125], "tokens": [334, 945, 907, 443, 1348, 7256, 2026, 7400, 1189, 4568, 10532, 301, 284, 945, 1158, 7750, 620, 458, 620, 45, 446, 1348, 7256, 26, 4624, 620, 458, 620, 27, 301, 397, 458, 32, 578, 620, 280, 458, 620, 45, 284, 320, 446, 477, 1788, 284, 562, 763, 1135, 1812, 26, 1212, 35699]}
{"line_number": 1141, "line_type": "original", "code": "    }", "entropy": 3.78515625, "is_bug_line": false, "sus_score": 0.21081851067789195, "per_token_entropy": [2.431640625, 5.13671875], "tokens": [264, 320]}
{"line_number": 1141, "line_type": "generated", "code": "\n    // TODO(user): We can't handle multiple template types yet, so bail out.\n    if (keys.size() > 1) {\n      return false;\n    }\n    TemplateType templateType = keys.get(0);\n    JSType", "entropy": 0.673828125, "is_bug_line": false, "sus_score": 0.21081851067789195, "per_token_entropy": [0.476318359375, 1.7001953125, 2.583984375, 0.026763916015625, 1.2060546875, 0.058013916015625, 3.3125, 2.4921875, 1.6201171875, 2.611328125, 2.615234375, 1.265625, 0.55859375, 1.8251953125, 1.71484375, 0.67529296875, 1.26171875, 1.0068359375, 1.0458984375, 0.035125732421875, 0.55126953125, 0.04864501953125, 0.0772705078125, 0.00012755393981933594, 0.004367828369140625, 0.0005235671997070312, 0.318603515625, 0.0009484291076660156, 0.005069732666015625, 0.0160064697265625, 0.008148193359375, 0.01462554931640625, 0.09820556640625, 0.0302886962890625, 0.0003159046173095703, 0.00287628173828125, 5.0067901611328125e-05, 1.39453125, 0.28564453125, 0.003662109375, 1.2861328125, 0.6318359375, 0.0269927978515625, 0.45166015625, 0.00033736228942871094, 0.135498046875, 0.0039520263671875, 0.0012063980102539062, 0.0019054412841796875, 0.46875, 1.0712890625, 0.00038886070251464844], "tokens": [284, 434, 4296, 26, 496, 711, 2688, 883, 1330, 2887, 4609, 3079, 3738, 6305, 30, 1259, 48937, 963, 32, 284, 415, 308, 3494, 32, 891, 346, 848, 225, 35, 27, 301, 397, 442, 901, 45, 284, 320, 284, 10838, 620, 3079, 620, 280, 5036, 32, 371, 26, 34, 293, 284, 7750, 620]}
{"line_number": 1142, "line_type": "original", "code": "  }", "entropy": 2.857421875, "is_bug_line": false, "sus_score": 0.21081851067789195, "per_token_entropy": [3.408203125, 2.306640625], "tokens": [225, 320]}
{"line_number": 1142, "line_type": "generated", "code": "\n    return false;\n  }\n\n  /**\n   * For functions with function(this: T,...) and T as parameters, type\n   * inference will set the type of this on a function literal argument to the\n   * the actual type of T.\n   */", "entropy": 0.138671875, "is_bug_line": false, "sus_score": 0.21081851067789195, "per_token_entropy": [0.8349609375, 0.849609375, 0.2626953125, 0.0034618377685546875, 0.1422119140625, 0.0014352798461914062, 0.51025390625, 0.65380859375, 0.0684814453125, 0.00017571449279785156, 1.5625, 0.83740234375, 0.1610107421875, 0.1954345703125, 0.1031494140625, 0.165771484375, 0.004119873046875, 0.061279296875, 0.033905029296875, 0.0231475830078125, 0.0316162109375, 0.047607421875, 0.01360321044921875, 0.086669921875, 0.01666259765625, 0.10748291015625, 0.016845703125, 2.288818359375e-05, 0.002796173095703125, 0.0255126953125, 0.0311126708984375, 0.005870819091796875, 0.0093841552734375, 0.0011377334594726562, 0.0166015625, 0.00446319580078125, 0.037078857421875, 0.02294921875, 0.00521087646484375, 0.018035888671875, 0.006336212158203125, 0.006561279296875, 0.0004394054412841797, 3.170967102050781e-05, 0.01328277587890625, 0.0028076171875, 0.00029778480529785156, 0.0005373954772949219, 0.00150299072265625, 0.0115203857421875, 0.1055908203125, 0.08642578125], "tokens": [284, 442, 901, 45, 334, 320, 719, 1022, 664, 319, 2616, 4442, 623, 667, 26, 578, 44, 394, 30, 18518, 461, 394, 619, 3377, 30, 827, 664, 319, 22410, 1098, 739, 322, 827, 432, 458, 544, 312, 667, 10652, 2793, 372, 322, 664, 319, 322, 4648, 827, 432, 394, 32, 664, 569]}
{"line_number": 1148, "line_type": "original", "code": "      if (previous == null) {", "entropy": 2.44140625, "is_bug_line": false, "sus_score": 0.21081851067789195, "per_token_entropy": [4.203125, 2.44921875, 0.444580078125, 9.84375, 1.9716796875, 0.355224609375, 0.2291259765625, 0.034423828125], "tokens": [647, 415, 308, 8884, 610, 744, 27, 301]}
{"line_number": 1148, "line_type": "generated", "code": "\n    TemplateTypeReplacer replacer = new TemplateTypeReplacer(registry, inferred);\n    for (TemplateType key : keys) {\n      JSType replacement = inferred.get(key);\n      if (replacement == null) {\n        replacement = registry.", "entropy": 0.183349609375, "is_bug_line": false, "sus_score": 0.21081851067789195, "per_token_entropy": [0.40576171875, 1.216796875, 0.0095062255859375, 0.00272369384765625, 1.5616416931152344e-05, 0.3515625, 0.0019702911376953125, 0.005268096923828125, 0.46142578125, 0.003520965576171875, 2.2649765014648438e-05, 5.030632019042969e-05, 3.814697265625e-06, 0.002750396728515625, 0.56005859375, 0.01093292236328125, 0.0361328125, 0.003078460693359375, 0.08331298828125, 1.599609375, 0.003772735595703125, 0.6376953125, 0.0053558349609375, 0.56640625, 0.015869140625, 0.6796875, 0.0007600784301757812, 0.0014324188232421875, 0.05792236328125, 0.80859375, 0.00012671947479248047, 0.6533203125, 0.050445556640625, 0.015777587890625, 0.002017974853515625, 0.004871368408203125, 0.005764007568359375, 0.00179290771484375, 0.00324249267578125, 0.06036376953125, 0.4443359375, 0.0106658935546875, 0.006504058837890625, 0.48876953125, 0.0021820068359375, 0.057708740234375, 0.005977630615234375, 0.03863525390625, 0.09124755859375, 0.0014247894287109375, 0.050811767578125, 0.0005803108215332031], "tokens": [284, 10838, 620, 435, 34393, 316, 34393, 280, 537, 10838, 620, 435, 34393, 26, 8200, 30, 43134, 293, 284, 436, 308, 3442, 620, 1202, 499, 5036, 27, 301, 397, 7750, 620, 15909, 280, 43134, 32, 371, 26, 678, 293, 397, 415, 308, 27378, 610, 744, 27, 301, 291, 15909, 280, 10880, 32]}
{"line_number": 1149, "line_type": "original", "code": "        map.put(template, resolved);", "entropy": 2.44921875, "is_bug_line": false, "sus_score": 0.21081851067789195, "per_token_entropy": [1.248046875, 8.65625, 1.4384765625, 5.7578125, 0.305419921875, 1.41796875, 0.053955078125, 2.931640625, 0.239013671875], "tokens": [351, 1992, 32, 524, 26, 2387, 30, 11425, 293]}
{"line_number": 1149, "line_type": "generated", "code": "\n        inferred);\n    NodeUtil.visitPostOrder(n, replacer);\n\n    // If we changed any types, we need to recheck the function.\n    return replacer.madeChanges;\n  }\n\n  /**\n   * Given a function type and a", "entropy": 0.61279296875, "is_bug_line": false, "sus_score": 0.21081851067789195, "per_token_entropy": [1.53125, 0.5244140625, 0.22314453125, 0.1329345703125, 1.7890625, 0.86962890625, 0.0004830360412597656, 0.119384765625, 0.448486328125, 0.30419921875, 0.0086822509765625, 0.08880615234375, 0.06298828125, 0.01800537109375, 7.152557373046875e-07, 0.004207611083984375, 1.4326171875, 1.74609375, 1.212890625, 0.81494140625, 1.876953125, 1.09765625, 1.533203125, 0.1318359375, 1.4189453125, 0.74560546875, 0.01727294921875, 0.88623046875, 2.8515625, 0.77880859375, 0.806640625, 1.814453125, 0.09332275390625, 0.1634521484375, 0.00652313232421875, 1.8835067749023438e-05, 0.000171661376953125, 0.005153656005859375, 2.3603439331054688e-05, 0.0080718994140625, 0.029205322265625, 0.0004143714904785156, 0.142822265625, 0.70751953125, 0.06640625, 0.00016117095947265625, 2.28125, 0.2939453125, 0.60693359375, 0.65625, 1.0029296875, 0.51611328125], "tokens": [291, 43134, 293, 284, 4004, 1733, 32, 8275, 3160, 2871, 26, 96, 30, 316, 34393, 293, 446, 434, 1670, 996, 5372, 1346, 3738, 30, 996, 1849, 372, 316, 1553, 322, 667, 32, 284, 442, 316, 34393, 32, 24915, 9574, 45, 334, 320, 719, 1022, 664, 319, 15273, 312, 667, 827, 461, 312]}
{"line_number": 967, "line_type": "original", "code": "      fnType = n.getFirstChild().getJSType().toMaybeFunctionType();", "entropy": 1.3291015625, "is_bug_line": false, "sus_score": 0.20851441405707477, "per_token_entropy": [3.73828125, 6.5625, 0.208740234375, 1.43359375, 5.83203125, 0.020263671875, 4.26953125, 0.006221771240234375, 0.0210113525390625, 0.050140380859375, 0.00359344482421875, 0.0005216598510742188, 0.10968017578125, 0.2509765625, 0.055572509765625, 0.00672149658203125, 0.0301666259765625], "tokens": [647, 2771, 620, 280, 310, 32, 25657, 2931, 922, 371, 4624, 620, 922, 452, 13257, 44334, 473]}
{"line_number": 967, "line_type": "generated", "code": "\n      if (iArgumentType.isFunction()) {\n        Node iArgumentChild = iArgument.getFirstChild();\n        if (iArgumentChild.isAssign()) {\n          iArgumentChild = iArgumentChild.getFirstChild();\n        }\n        if (iArgument", "entropy": 0.328369140625, "is_bug_line": false, "sus_score": 0.20851441405707477, "per_token_entropy": [0.57861328125, 1.0205078125, 0.1602783203125, 0.2054443359375, 0.087646484375, 0.331787109375, 0.2449951171875, 0.1683349609375, 0.75927734375, 0.02862548828125, 0.05474853515625, 2.560546875, 1.0029296875, 0.38427734375, 1.7138671875, 0.048919677734375, 0.14404296875, 0.003040313720703125, 0.52587890625, 0.055206298828125, 0.001964569091796875, 0.0771484375, 0.08648681640625, 0.599609375, 0.11083984375, 0.0672607421875, 0.00827789306640625, 0.006984710693359375, 0.420166015625, 0.75830078125, 0.84375, 0.232666015625, 0.0006461143493652344, 0.0095062255859375, 1.0341796875, 0.0017251968383789062, 0.11309814453125, 0.1939697265625, 0.07464599609375, 0.0002256631851196289, 0.01192474365234375, 0.00012612342834472656, 0.50439453125, 0.00417327880859375, 0.033447265625, 0.055419921875, 0.00012981891632080078, 0.420654296875, 1.1572265625, 0.122314453125, 0.042877197265625, 0.00598907470703125], "tokens": [397, 415, 308, 91, 3484, 620, 32, 39504, 1157, 301, 291, 4004, 595, 3484, 2931, 280, 595, 3484, 32, 25657, 2931, 473, 291, 415, 308, 91, 3484, 2931, 32, 297, 9079, 1157, 301, 616, 595, 3484, 2931, 280, 595, 3484, 2931, 32, 25657, 2931, 473, 291, 320, 291, 415, 308, 91, 3484]}
{"line_number": 1063, "line_type": "original", "code": "      resolvedTemplateType(", "entropy": 3.328125, "is_bug_line": false, "sus_score": 0.20851441405707477, "per_token_entropy": [4.33203125, 1.5927734375, 8.0, 1.611328125, 1.111328125], "tokens": [647, 11425, 3442, 620, 26]}
{"line_number": 1063, "line_type": "generated", "code": "\n  }\n\n  private void maybeResolveTemplateTypeFromNodes(\n      List<TemplateType> paramTypes,\n      Iterable<Node> args,\n      Map<TemplateType, JSType> resolvedTypes) {\n    Iterator<Node> argsIter = args.iterator", "entropy": 0.1888427734375, "is_bug_line": false, "sus_score": 0.20851441405707477, "per_token_entropy": [0.5166015625, 0.0372314453125, 0.191162109375, 0.25439453125, 0.13818359375, 0.0117034912109375, 0.00799560546875, 0.01351165771484375, 0.0033092498779296875, 0.006420135498046875, 0.005573272705078125, 0.0013608932495117188, 0.091796875, 0.45751953125, 0.039215087890625, 1.234375, 0.01319122314453125, 0.0183868408203125, 0.87109375, 0.264892578125, 0.0011892318725585938, 0.30419921875, 0.479736328125, 0.348876953125, 0.00034332275390625, 2.8014183044433594e-05, 1.58984375, 0.028839111328125, 0.0304718017578125, 0.0138092041015625, 0.000591278076171875, 0.00017440319061279297, 4.887580871582031e-05, 0.00012767314910888672, 0.00266265869140625, 5.960464477539062e-07, 2.1576881408691406e-05, 0.00501251220703125, 0.0033397674560546875, 0.002605438232421875, 0.0010042190551757812, 0.08099365234375, 0.876953125, 0.00632476806640625, 0.16796875, 7.748603820800781e-06, 1.3125, 0.36865234375, 0.002010345458984375, 0.0133209228515625, 0.0005207061767578125, 4.57763671875e-05], "tokens": [334, 320, 719, 945, 763, 8762, 15048, 3442, 620, 1792, 5909, 26, 397, 1682, 46, 3442, 620, 48, 4356, 2424, 30, 397, 19209, 46, 1212, 48, 2181, 30, 397, 3516, 46, 3442, 620, 30, 7750, 620, 48, 11425, 2424, 27, 301, 284, 14743, 46, 1212, 48, 2181, 3853, 280, 2181, 32, 5162]}
