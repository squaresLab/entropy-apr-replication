{"line_number": 267, "line_type": "original", "code": "        Preconditions.checkState(childCount == 1);", "entropy": 1.3681640625, "is_bug_line": false, "sus_score": 0.18257418583505536, "per_token_entropy": [4.32421875, 5.3828125, 0.0048828125, 0.005126953125, 0.022430419921875, 0.12115478515625, 3.052734375, 0.00510406494140625, 0.08709716796875, 0.0068511962890625, 3.080078125, 0.333740234375], "tokens": [351, 40596, 32, 1553, 1078, 26, 2661, 1534, 610, 225, 35, 293]}
{"line_number": 267, "line_type": "generated", "code": "\n\n        addFunction(n, funcNeedsParens);\n        break;\n\n      case Token.OBJECTLIT:\n        add(\"{\");\n        addList(first);\n        add(\"}\");\n        break;\n\n      case Token.THIS:\n        add(\"this\");\n        break", "entropy": 0.288330078125, "is_bug_line": false, "sus_score": 0.18257418583505536, "per_token_entropy": [1.12109375, 1.7626953125, 0.96484375, 0.5634765625, 0.51953125, 0.343994140625, 0.54345703125, 0.0257415771484375, 0.00014531612396240234, 2.384185791015625e-07, -0.0, 0.155029296875, 0.12042236328125, 0.053131103515625, 0.00026297569274902344, 0.045074462890625, 0.10491943359375, 0.0011529922485351562, 1.1682510375976562e-05, 2.9296875, 0.0033855438232421875, 0.0005269050598144531, 0.1787109375, 1.0283203125, 0.089599609375, 0.0147552490234375, 0.04412841796875, 0.2386474609375, 1.3076171875, 0.028472900390625, 0.099365234375, 0.08074951171875, 0.007717132568359375, 0.0277099609375, 0.007518768310546875, 0.0025615692138671875, 0.00689697265625, 0.004543304443359375, 9.524822235107422e-05, 0.0199127197265625, 0.08349609375, 0.0010862350463867188, 2.574920654296875e-05, 1.3818359375, 0.00011706352233886719, 0.1658935546875, 0.7919921875, 0.08563232421875, 0.00289154052734375, 0.010040283203125, 0.007114410400390625, 0.0174713134765625], "tokens": [584, 1015, 2447, 26, 96, 30, 3420, 32380, 66, 586, 2425, 293, 291, 1626, 45, 1687, 1135, 6512, 32, 8460, 22532, 44, 291, 1015, 15062, 724, 291, 1015, 720, 26, 2232, 293, 291, 1015, 440, 13626, 291, 1626, 45, 1687, 1135, 6512, 32, 25339, 44, 291, 1015, 440, 578, 724, 291, 1626]}
{"line_number": 272, "line_type": "original", "code": "        if (n.getFirstChild().isNumber()) {", "entropy": 1.3388671875, "is_bug_line": false, "sus_score": 0.18257418583505536, "per_token_entropy": [4.23828125, 1.80078125, 0.259765625, 1.439453125, 0.0121917724609375, 1.0380859375, 0.0002751350402832031, 0.070068359375, 5.7890625, 0.0655517578125, 0.01168060302734375], "tokens": [351, 415, 308, 96, 32, 25657, 2931, 922, 42128, 1157, 301]}
{"line_number": 272, "line_type": "generated", "code": "\n        add(\"(\");\n        addList(first);\n        add(\")\");\n\n        addFunctionBody(last);\n\n        if (funcNeedsParens) {\n          add(\")\");\n        }\n        break;\n\n      case Token.BLOCK:\n        if (n.", "entropy": 0.288818359375, "is_bug_line": false, "sus_score": 0.18257418583505536, "per_token_entropy": [0.2099609375, 0.6904296875, 1.7470703125, 0.375732421875, 0.014678955078125, 0.09918212890625, 0.23681640625, 0.61865234375, 0.0185089111328125, 0.177490234375, 0.2271728515625, 0.0207672119140625, 0.018798828125, 0.0027256011962890625, 0.14892578125, 1.4609375, 0.7509765625, 2.404296875, 0.1717529296875, 0.076171875, 0.41552734375, 0.463623046875, 0.513671875, 0.016876220703125, 0.0008220672607421875, 0.003017425537109375, 8.189678192138672e-05, 7.3909759521484375e-06, 2.1457672119140625e-06, 5.960464477539062e-07, 0.00027751922607421875, 0.0029277801513671875, 0.006534576416015625, 0.0105438232421875, 0.0009331703186035156, 0.0033130645751953125, 0.0025882720947265625, 7.677078247070312e-05, 0.164306640625, 0.006946563720703125, 0.00010919570922851562, 0.04449462890625, 0.0684814453125, 0.00106048583984375, 7.152557373046875e-06, 1.818359375, 0.002483367919921875, 0.2425537109375, 1.0166015625, 0.211669921875, 0.513671875, 0.0130615234375], "tokens": [291, 1015, 440, 440, 293, 291, 1015, 720, 26, 2232, 293, 291, 1015, 440, 13372, 584, 1015, 2447, 3050, 26, 2135, 293, 584, 415, 308, 1298, 32380, 66, 586, 2425, 27, 301, 616, 1015, 440, 13372, 291, 320, 291, 1626, 45, 1687, 1135, 6512, 32, 10322, 44, 291, 415, 308, 96, 32]}
{"line_number": 275, "line_type": "original", "code": "          cc.addOp(NodeUtil.opToStrNoFail(type), false);", "entropy": 0.87646484375, "is_bug_line": false, "sus_score": 0.18257418583505536, "per_token_entropy": [6.15234375, 4.31640625, 0.007598876953125, 0.1944580078125, 0.53955078125, 2.73828125, 0.837890625, 0.0018939971923828125, 0.0003952980041503906, 0.09228515625, 0.006061553955078125, 0.00820159912109375, 0.2158203125, 0.00027561187744140625, 0.0029296875, 0.2459716796875, 0.04742431640625, 1.232421875, 0.00930023193359375], "tokens": [2033, 10639, 32, 669, 3397, 26, 1212, 1733, 32, 520, 705, 2007, 2023, 4976, 26, 681, 471, 901, 293]}
{"line_number": 275, "line_type": "generated", "code": "\n        addExpr(last, 1, Context.IN_FUNCTION);\n\n        if (funcNeedsParens) {\n          add(\")\");\n        }\n        break;\n\n      case Token.NAME:\n        if (n.isGetProp()) {\n          add", "entropy": 0.347412109375, "is_bug_line": false, "sus_score": 0.18257418583505536, "per_token_entropy": [0.290771484375, 0.33349609375, 0.744140625, 0.0277557373046875, 0.35791015625, 0.1588134765625, 0.5087890625, 1.7958984375, 0.07794189453125, 0.280029296875, 0.00012493133544921875, 1.0810546875, 0.0076141357421875, 0.25537109375, 0.6005859375, 0.35302734375, 0.03326416015625, 0.0012731552124023438, 0.00696563720703125, 0.00012505054473876953, 1.2516975402832031e-05, 4.0531158447265625e-06, 1.0728836059570312e-06, 0.0002467632293701172, 0.0024433135986328125, 0.004390716552734375, 0.010711669921875, 0.001422882080078125, 0.004131317138671875, 0.0029754638671875, 0.0001914501190185547, 0.14111328125, 0.007568359375, 0.00012028217315673828, 0.039093017578125, 0.113525390625, 0.0015850067138671875, 1.049041748046875e-05, 2.69921875, 0.0008716583251953125, 0.306884765625, 0.7119140625, 0.318603515625, 1.1015625, 0.01444244384765625, 1.623046875, 2.048828125, 0.0965576171875, 0.5029296875, 0.0019397735595703125, 0.08148193359375, 1.3095703125], "tokens": [291, 1015, 6150, 26, 2135, 30, 225, 35, 30, 7049, 32, 521, 81, 9842, 293, 584, 415, 308, 1298, 32380, 66, 586, 2425, 27, 301, 616, 1015, 440, 13372, 291, 320, 291, 1626, 45, 1687, 1135, 6512, 32, 2474, 44, 291, 415, 308, 96, 32, 297, 936, 6567, 1157, 301, 616, 1015]}
{"line_number": 276, "line_type": "original", "code": "          addExpr(first, NodeUtil.precedence(type), Context.OTHER);", "entropy": 1.041015625, "is_bug_line": false, "sus_score": 0.18257418583505536, "per_token_entropy": [8.1171875, 1.33984375, 1.80078125, 0.054473876953125, 1.23828125, 2.787109375, 0.9755859375, 0.0006666183471679688, 4.661083221435547e-05, 0.038665771484375, 5.078315734863281e-05, 0.0072784423828125, 0.474365234375, 0.09503173828125, 0.6796875, 0.000766754150390625, 1.08203125, 0.038787841796875], "tokens": [2033, 1015, 6150, 26, 2232, 30, 4004, 1733, 32, 1001, 39939, 26, 681, 471, 7049, 32, 21144, 293]}
{"line_number": 276, "line_type": "generated", "code": "\n        if (funcNeedsParens) {\n          add(\")\");\n        }\n        break;\n\n      case Token.THIS:\n        Preconditions.checkState(childCount == 0);\n        cc.addThis();\n        break;\n\n      case Token.TRUE:", "entropy": 0.138427734375, "is_bug_line": false, "sus_score": 0.18257418583505536, "per_token_entropy": [0.56396484375, 0.158203125, 0.0029964447021484375, 0.01512908935546875, 0.00014472007751464844, 1.3828277587890625e-05, -0.0, 8.344650268554688e-07, 0.00039696693420410156, 0.003269195556640625, 0.00632476806640625, 0.01526641845703125, 0.0022106170654296875, 0.005695343017578125, 0.0037708282470703125, 0.00021588802337646484, 0.1007080078125, 0.012359619140625, 0.0001735687255859375, 0.0518798828125, 0.0997314453125, 0.001384735107421875, 1.7642974853515625e-05, 1.46484375, 0.0003459453582763672, 0.194580078125, 1.02734375, 2.467632293701172e-05, 0.00012385845184326172, 0.001369476318359375, 0.00359344482421875, 0.058502197265625, 4.410743713378906e-06, 0.0029430389404296875, 8.034706115722656e-05, 0.0043792724609375, 0.0121307373046875, 0.0293731689453125, 0.71435546875, 8.618831634521484e-05, 0.0061187744140625, 0.9638671875, 0.055084228515625, 0.00881195068359375, 0.004909515380859375, 5.340576171875e-05, 0.029022216796875, 0.03271484375, 0.0007262229919433594, 1.7404556274414062e-05, 1.5390625, 0.00021016597747802734], "tokens": [291, 415, 308, 1298, 32380, 66, 586, 2425, 27, 301, 616, 1015, 440, 13372, 291, 320, 291, 1626, 45, 1687, 1135, 6512, 32, 25339, 44, 291, 40596, 32, 1553, 1078, 26, 2661, 1534, 610, 225, 34, 293, 291, 10639, 32, 669, 2272, 473, 291, 1626, 45, 1687, 1135, 6512, 32, 6373, 44]}
{"line_number": 279, "line_type": "original", "code": "        break;", "entropy": 3.517578125, "is_bug_line": false, "sus_score": 0.18257418583505536, "per_token_entropy": [3.13671875, 7.41015625, 0.0114898681640625], "tokens": [351, 1626, 45]}
{"line_number": 279, "line_type": "generated", "code": "\n          add(\")\");\n        }\n        break;\n\n      case Token.OBJECTLIT:\n        add(\"{\");\n        addObjectLit(first, last);\n        add(\"}\");\n        break;\n\n      case Token.LB:\n        Preconditions.checkState(childCount == ", "entropy": 0.337158203125, "is_bug_line": false, "sus_score": 0.18257418583505536, "per_token_entropy": [0.669921875, 0.354248046875, 0.028839111328125, 0.054229736328125, 0.134033203125, 0.00014412403106689453, 0.2032470703125, 0.0128936767578125, 0.0005044937133789062, 0.09130859375, 0.06884765625, 0.0009131431579589844, 3.8504600524902344e-05, 3.115234375, 0.00304412841796875, 0.000865936279296875, 0.267822265625, 1.2294921875, 0.06646728515625, 0.00853729248046875, 0.10595703125, 0.356201171875, 1.4345703125, 0.3427734375, 0.572265625, 0.78955078125, 0.833984375, 0.479248046875, 0.469482421875, 0.0248870849609375, 0.198486328125, 0.005100250244140625, 0.00438690185546875, 0.017730712890625, 0.007457733154296875, 0.00023484230041503906, 0.054656982421875, 0.0703125, 0.0009479522705078125, 1.990795135498047e-05, 3.134765625, 0.003997802734375, 0.5009765625, 1.4609375, 0.00013554096221923828, 0.00022459030151367188, 0.00395965576171875, 0.0033092498779296875, 0.07672119140625, 1.2516975402832031e-05, 0.25927734375, 0.0015497207641601562], "tokens": [616, 1015, 440, 13372, 291, 320, 291, 1626, 45, 1687, 1135, 6512, 32, 8460, 22532, 44, 291, 1015, 15062, 724, 291, 1015, 959, 27472, 26, 2232, 30, 2401, 293, 291, 1015, 440, 13626, 291, 1626, 45, 1687, 1135, 6512, 32, 12703, 44, 291, 40596, 32, 1553, 1078, 26, 2661, 1534, 610, 225]}
{"line_number": 422, "line_type": "original", "code": "            add(first, Context.IN_FOR_INIT_CLAUSE);", "entropy": 1.455078125, "is_bug_line": false, "sus_score": 0.13608276348795434, "per_token_entropy": [8.0078125, 1.6689453125, 1.279296875, 0.413818359375, 2.021484375, 0.51953125, 0.0003304481506347656, 1.65625, 0.005771636962890625, 7.49609375, 0.002361297607421875, 0.1143798828125, 0.0029659271240234375, 3.254413604736328e-05, 2.8252601623535156e-05, 0.0963134765625], "tokens": [1468, 1015, 26, 2232, 30, 7049, 32, 521, 81, 7321, 81, 7532, 81, 46651, 4855, 293]}
{"line_number": 422, "line_type": "generated", "code": "\n        break;\n      }\n\n      case Token.GETELEM: {\n        Preconditions.checkState(\n            childCount == 2,\n            \"Bad GETELEM: expected 2 children, but got %s\", childCount);", "entropy": 0.057159423828125, "is_bug_line": false, "sus_score": 0.13608276348795434, "per_token_entropy": [0.42041015625, 0.29443359375, 0.0003056526184082031, 0.004497528076171875, 0.0003261566162109375, 0.047454833984375, 0.020294189453125, 0.000324249267578125, 1.1682510375976562e-05, 1.0009765625, 0.0034046173095703125, 0.0007505416870117188, 0.36376953125, 0.01036834716796875, 0.0687255859375, 3.123283386230469e-05, 0.0002161264419555664, 0.0017576217651367188, 0.00029921531677246094, 0.1070556640625, 0.01197052001953125, 9.942054748535156e-05, 0.032135009765625, 0.0001729726791381836, 0.066162109375, 0.022064208984375, 0.015289306640625, 0.0002522468566894531, 0.0011053085327148438, 0.011260986328125, 0.0404052734375, 0.0019378662109375, 0.0018138885498046875, 0.0004897117614746094, 0.002727508544921875, 0.0016527175903320312, 0.0018978118896484375, 0.0011148452758789062, 0.00035858154296875, 0.0013685226440429688, 0.00025582313537597656, 0.005207061767578125, 0.007110595703125, 0.0001519918441772461, 0.0004119873046875], "tokens": [291, 1626, 45, 397, 320, 1687, 1135, 6512, 32, 2788, 32313, 44, 301, 291, 40596, 32, 1553, 1078, 26, 324, 2838, 1534, 610, 225, 36, 30, 324, 313, 8418, 6272, 32313, 44, 2799, 225, 36, 5713, 30, 1273, 5424, 904, 101, 392, 2838, 1534, 293]}
{"line_number": 135, "line_type": "original", "code": "        addExpr(first, p, context);", "entropy": 0.9775390625, "is_bug_line": false, "sus_score": 0.09759000729485333, "per_token_entropy": [3.6875, 0.1363525390625, 0.2347412109375, 0.02337646484375, 0.1595458984375, 0.062469482421875, 4.4296875, 0.08160400390625, 0.94677734375, 0.01084136962890625], "tokens": [351, 1015, 6150, 26, 2232, 30, 298, 30, 1619, 293]}
{"line_number": 135, "line_type": "generated", "code": "\n        addExpr(first, NodeUtil.precedence(type), context);\n        break;\n\n      case Token.RETURN:\n        Preconditions.checkState(childCount <= 1);\n        add(\"return\");", "entropy": 0.1356201171875, "is_bug_line": false, "sus_score": 0.09759000729485333, "per_token_entropy": [0.1092529296875, 0.12042236328125, 0.26025390625, 0.0218658447265625, 0.2320556640625, 0.06640625, 1.14453125, 0.0014095306396484375, 4.0650367736816406e-05, 0.019775390625, 4.5299530029296875e-06, 0.034393310546875, 0.3232421875, 0.1329345703125, 0.8583984375, 0.006877899169921875, 0.0290069580078125, 0.028778076171875, 0.00036525726318359375, 0.03668212890625, 0.0264892578125, 0.0008211135864257812, 3.409385681152344e-05, 0.935546875, 0.0005488395690917969, 0.078125, 0.412109375, 2.110004425048828e-05, 5.424022674560547e-05, 0.0007190704345703125, 0.0011425018310546875, 0.020172119140625, 3.5762786865234375e-07, 0.345947265625, 0.0015726089477539062, 0.0029926300048828125, 0.037628173828125, 0.15771484375, 0.2337646484375, 0.0096435546875, 0.0002073049545288086, 0.0033092498779296875], "tokens": [291, 1015, 6150, 26, 2232, 30, 4004, 1733, 32, 1001, 39939, 26, 681, 471, 1619, 293, 291, 1626, 45, 1687, 1135, 6512, 32, 10934, 44, 291, 40596, 32, 1553, 1078, 26, 2661, 1534, 2511, 225, 35, 293, 291, 1015, 440, 601, 724]}
{"line_number": 136, "line_type": "original", "code": "        cc.addOp(opstr, true);", "entropy": 1.34765625, "is_bug_line": false, "sus_score": 0.09759000729485333, "per_token_entropy": [5.375, 4.62109375, 0.0006575584411621094, 0.61376953125, 1.5439453125, 1.1474609375, 0.154541015625, 0.00157928466796875, 0.6220703125, 0.73974609375, 0.0052947998046875], "tokens": [351, 10639, 32, 669, 3397, 26, 520, 466, 30, 861, 293]}
{"line_number": 136, "line_type": "generated", "code": "\n        break;\n\n      case Token.BREAK:\n        Preconditions.checkState(childCount == 1);\n        add(\"break\");\n        add(first);", "entropy": 0.2012939453125, "is_bug_line": false, "sus_score": 0.09759000729485333, "per_token_entropy": [0.0638427734375, 0.05487060546875, 0.0001220703125, 0.05718994140625, 0.0284576416015625, 0.0010175704956054688, 3.719329833984375e-05, 2.59765625, 0.00021910667419433594, 0.406494140625, 0.3310546875, 7.796287536621094e-05, 7.641315460205078e-05, 0.000995635986328125, 0.0027637481689453125, 0.038848876953125, 3.337860107421875e-06, 0.50341796875, 0.0028171539306640625, 0.2056884765625, 0.2149658203125, 0.0209197998046875, 0.150634765625, 0.01214599609375, 0.001728057861328125, 0.158935546875, 0.1031494140625, 0.97119140625, 0.179931640625, 0.00872039794921875, 0.11859130859375], "tokens": [291, 1626, 45, 1687, 1135, 6512, 32, 26924, 44, 291, 40596, 32, 1553, 1078, 26, 2661, 1534, 610, 225, 35, 293, 291, 1015, 440, 2969, 724, 291, 1015, 26, 2232, 293]}
{"line_number": 137, "line_type": "original", "code": "        addExpr(last, p, rhsContext);", "entropy": 1.7958984375, "is_bug_line": false, "sus_score": 0.09759000729485333, "per_token_entropy": [3.283203125, 3.767578125, 2.880859375, 0.1541748046875, 2.431640625, 0.110107421875, 3.08203125, 0.127197265625, 3.90234375, 0.0023212432861328125, 0.00726318359375], "tokens": [351, 1015, 6150, 26, 2135, 30, 298, 30, 9322, 1222, 293]}
{"line_number": 137, "line_type": "generated", "code": "\n        break;\n\n      case Token.RETURN:\n        Preconditions.checkState(childCount == 1 || childCount == 0);\n        add(\"return\");\n        if (childCount == 1) {\n          add(first);\n        }", "entropy": 0.153564453125, "is_bug_line": false, "sus_score": 0.09759000729485333, "per_token_entropy": [0.41259765625, 0.059356689453125, 0.0008802413940429688, 0.204833984375, 0.030548095703125, 0.0012865066528320312, 5.412101745605469e-05, 1.2294921875, 0.0012378692626953125, 0.09832763671875, 0.399658203125, 4.5180320739746094e-05, 7.641315460205078e-05, 0.003734588623046875, 0.0015316009521484375, 0.0229949951171875, 7.152557373046875e-07, 1.259765625, 0.00934600830078125, 0.413330078125, 0.71240234375, 0.087890625, 6.556510925292969e-05, 0.0009288787841796875, 0.0003039836883544922, 0.9375, 0.041748046875, 0.157470703125, 0.455810546875, 0.0124359130859375, 0.0004105567932128906, 0.00525665283203125, 0.2890625, 0.1324462890625, 0.01032257080078125, 0.06390380859375, 3.5762786865234375e-07, 0.1851806640625, 0.00010764598846435547, 0.015106201171875, 0.00643157958984375, 0.0092926025390625, 0.02850341796875, 0.0435791015625, 0.013580322265625, 0.00763702392578125, 0.05908203125, 0.10247802734375, 0.00012242794036865234], "tokens": [291, 1626, 45, 1687, 1135, 6512, 32, 10934, 44, 291, 40596, 32, 1553, 1078, 26, 2661, 1534, 610, 225, 35, 1276, 2838, 1534, 610, 225, 34, 293, 291, 1015, 440, 601, 724, 291, 415, 308, 2661, 1534, 610, 225, 35, 27, 301, 616, 1015, 26, 2232, 293, 291, 320]}
{"line_number": 232, "line_type": "original", "code": "        add(\"[\");", "entropy": 3.62109375, "is_bug_line": false, "sus_score": 0.08630637040042062, "per_token_entropy": [7.2421875, 2.94921875, 4.2265625, 0.06939697265625], "tokens": [351, 1015, 9670, 724]}
{"line_number": 232, "line_type": "generated", "code": "\n      case Token.ASSIGN:\n        Preconditions.checkState(childCount == 2);\n        cc.addOp(NodeUtil.opToStrNoFail(type), true);\n        if (first.isComma()) {\n          addExpr(first,", "entropy": 0.19140625, "is_bug_line": false, "sus_score": 0.08630637040042062, "per_token_entropy": [0.2127685546875, 0.104736328125, 0.0011816024780273438, 0.0005784034729003906, 2.322265625, 0.35693359375, 1.05078125, 0.85498046875, 0.0003490447998046875, 0.00014162063598632812, 0.0118255615234375, 0.00797271728515625, 0.050445556640625, 1.4185905456542969e-05, 0.018341064453125, 0.00038433074951171875, 0.0311431884765625, 0.0222625732421875, 0.1806640625, 1.525390625, 0.003948211669921875, 0.060516357421875, 0.06988525390625, 0.4765625, 0.0496826171875, 2.8967857360839844e-05, 1.33514404296875e-05, 0.003170013427734375, 0.0003249645233154297, 0.0010290145874023438, 0.07598876953125, 0.00012171268463134766, 0.0005235671997070312, 0.037933349609375, 0.0272674560546875, 0.253173828125, 0.005802154541015625, 0.1361083984375, 1.271484375, 0.0304107666015625, 0.3134765625, 0.047149658203125, 0.0369873046875, 0.044525146484375, 0.0190582275390625, 0.00043201446533203125, 0.009002685546875, 0.118408203125, 0.07708740234375, 0.0102386474609375, 0.0135040283203125, 0.0040740966796875], "tokens": [397, 1135, 6512, 32, 25620, 44, 291, 40596, 32, 1553, 1078, 26, 2661, 1534, 610, 225, 36, 293, 291, 10639, 32, 669, 3397, 26, 1212, 1733, 32, 520, 705, 2007, 2023, 4976, 26, 681, 471, 861, 293, 291, 415, 308, 2232, 32, 297, 34010, 1157, 301, 616, 1015, 6150, 26, 2232, 30]}
{"line_number": 233, "line_type": "original", "code": "        addArrayList(first);", "entropy": 4.4453125, "is_bug_line": false, "sus_score": 0.08630637040042062, "per_token_entropy": [7.57421875, 1.8046875, 14.2734375, 0.10919189453125, 1.9462890625, 0.9599609375], "tokens": [351, 1015, 7110, 26, 2232, 293]}
{"line_number": 233, "line_type": "generated", "code": "\n        break;\n      }\n\n      case Token.INC:\n      case Token.DEC:\n        // ++ and -- are always right-associative\n        Preconditions.checkState(childCount == 1);\n        cc.addOp(NodeUtil.opToStr", "entropy": 0.304443359375, "is_bug_line": false, "sus_score": 0.08630637040042062, "per_token_entropy": [0.111083984375, 1.5068359375, 0.00017321109771728516, 0.003833770751953125, 0.0002307891845703125, 0.034210205078125, 0.06524658203125, 0.0005269050598144531, 1.5497207641601562e-06, 2.23828125, 0.0042572021484375, 0.1295166015625, 0.00016939640045166016, 2.562999725341797e-05, 5.602836608886719e-06, 0.0015478134155273438, 0.0003192424774169922, 1.4287109375, 2.09375, 2.76171875, 0.9033203125, 0.00873565673828125, 0.19482421875, 1.9423828125, 0.70361328125, 0.1734619140625, 0.045135498046875, 0.0009784698486328125, 0.77978515625, 0.29833984375, 7.987022399902344e-05, 4.482269287109375e-05, 0.00019443035125732422, 0.0008883476257324219, 0.007480621337890625, 4.5299530029296875e-06, 0.0013275146484375, 7.11679458618164e-05, 0.0036754608154296875, 0.006011962890625, 0.0777587890625, 0.1588134765625, 0.00018024444580078125, 0.006046295166015625, 0.038055419921875, 0.01404571533203125, 0.08074951171875, 1.7762184143066406e-05, 6.794929504394531e-06, 0.004535675048828125, 0.0001462697982788086, 0.0003039836883544922], "tokens": [291, 1626, 45, 397, 320, 1687, 1135, 6512, 32, 16177, 44, 397, 1135, 6512, 32, 14221, 44, 291, 434, 3311, 461, 769, 884, 5182, 2091, 31, 13131, 1353, 291, 40596, 32, 1553, 1078, 26, 2661, 1534, 610, 225, 35, 293, 291, 10639, 32, 669, 3397, 26, 1212, 1733, 32, 520, 705, 2007]}
{"line_number": 234, "line_type": "original", "code": "        add(\"]\");", "entropy": 4.98046875, "is_bug_line": false, "sus_score": 0.08630637040042062, "per_token_entropy": [5.73046875, 2.9140625, 2.6640625, 8.609375], "tokens": [351, 1015, 440, 28915]}
{"line_number": 234, "line_type": "generated", "code": "\n        break;\n      }\n\n      case Token.AND:\n      case Token.OR: {\n        Preconditions.checkState(childCount == 2);\n        unrollBinaryOperator(n, type, \"||\", context,\n            getContextForNoInOperator(", "entropy": 0.1563720703125, "is_bug_line": false, "sus_score": 0.08630637040042062, "per_token_entropy": [0.1973876953125, 0.2352294921875, 0.00013589859008789062, 0.0035991668701171875, 0.00023543834686279297, 0.0311126708984375, 0.06402587890625, 0.000476837158203125, 1.9073486328125e-06, 2.2578125, 0.0005221366882324219, 0.09765625, 0.0003504753112792969, 3.24249267578125e-05, 1.8358230590820312e-05, 0.05810546875, 0.00019109249114990234, 0.73828125, 0.0146636962890625, 0.71435546875, 2.4080276489257812e-05, 7.474422454833984e-05, 0.0005564689636230469, 0.0021762847900390625, 0.0150604248046875, 0.0004019737243652344, 0.01395416259765625, 0.00020682811737060547, 0.00946044921875, 0.01207733154296875, 0.302001953125, 0.5517578125, 0.0002613067626953125, 0.06756591796875, 0.0009541511535644531, 0.006267547607421875, 0.043548583984375, 0.0005464553833007812, 0.036895751953125, 0.002559661865234375, 1.1279296875, 0.9033203125, 0.169677734375, 0.09149169921875, 0.0262298583984375, 0.1829833984375, 0.135009765625, 0.0014581680297851562, 0.0156097412109375, 0.0009870529174804688, 0.0003063678741455078, 0.0004291534423828125], "tokens": [291, 1626, 45, 397, 320, 1687, 1135, 6512, 32, 3349, 44, 397, 1135, 6512, 32, 758, 44, 301, 291, 40596, 32, 1553, 1078, 26, 2661, 1534, 610, 225, 36, 293, 291, 707, 1019, 6954, 7145, 26, 96, 30, 827, 30, 313, 4697, 392, 1619, 30, 324, 42630, 1562, 2023, 383, 7145, 26]}
{"line_number": 235, "line_type": "original", "code": "        break;", "entropy": 2.080078125, "is_bug_line": false, "sus_score": 0.08630637040042062, "per_token_entropy": [5.27734375, 0.9599609375, 0.0038394927978515625], "tokens": [351, 1626, 45]}
{"line_number": 235, "line_type": "generated", "code": "\n        break;\n      }\n\n      case Token.THIS:\n        Preconditions.checkState(childCount == 0);\n        cc.addThis();\n        break;\n\n      case Token.NULL:\n        Preconditions.checkState(childCount == 0);\n        cc", "entropy": 0.1688232421875, "is_bug_line": false, "sus_score": 0.08630637040042062, "per_token_entropy": [0.8427734375, 0.413330078125, 0.00028777122497558594, 0.003818511962890625, 0.0003380775451660156, 0.0504150390625, 0.0775146484375, 0.00042319297790527344, 2.2649765014648438e-06, 1.9130859375, 0.0002512931823730469, 0.396728515625, 1.0009765625, 2.181529998779297e-05, 4.5299530029296875e-05, 0.0004239082336425781, 0.02655029296875, 0.0284423828125, 0.0013980865478515625, 0.00072479248046875, 4.6253204345703125e-05, 0.0003044605255126953, 0.005870819091796875, 0.0084686279296875, 0.38671875, 3.123283386230469e-05, 0.005496978759765625, 1.513671875, 0.0291900634765625, 0.0059814453125, 0.007068634033203125, 8.177757263183594e-05, 0.0278778076171875, 0.02679443359375, 0.0002949237823486328, 4.291534423828125e-06, 1.76953125, 0.0003314018249511719, 0.058258056640625, 0.15673828125, 4.649162292480469e-06, 1.8358230590820312e-05, 7.927417755126953e-05, 0.0006814002990722656, 0.001712799072265625, 0.0025787353515625, 0.00012814998626708984, 2.193450927734375e-05, 0.00020229816436767578, 0.00046539306640625, 0.0032787322998046875, 0.01544952392578125], "tokens": [291, 1626, 45, 397, 320, 1687, 1135, 6512, 32, 25339, 44, 291, 40596, 32, 1553, 1078, 26, 2661, 1534, 610, 225, 34, 293, 291, 10639, 32, 669, 2272, 473, 291, 1626, 45, 1687, 1135, 6512, 32, 3293, 44, 291, 40596, 32, 1553, 1078, 26, 2661, 1534, 610, 225, 34, 293, 291, 10639]}
{"line_number": 967, "line_type": "original", "code": "    boolean lastWasEmpty = false;", "entropy": 3.59375, "is_bug_line": false, "sus_score": 0.08630637040042062, "per_token_entropy": [2.94140625, 11.8828125, 5.515625, 1.2158203125, 6.28125, 0.5341796875, 0.330810546875, 0.042999267578125], "tokens": [264, 1905, 2401, 22434, 2766, 280, 901, 45]}
{"line_number": 967, "line_type": "generated", "code": "\n      }\n    }\n\n    if (singleq == 0 && doubleq == 0) {\n      return \"'\" + s + \"'\";\n    } else if (singleq <= doubleq) {\n      return \"'\" + s.replace(\"'\", \"\\\\'\") +", "entropy": 0.239990234375, "is_bug_line": false, "sus_score": 0.08630637040042062, "per_token_entropy": [1.1923828125, 0.0033130645751953125, 0.016815185546875, 9.131431579589844e-05, 0.33251953125, 0.83056640625, 0.2462158203125, 0.74560546875, 5.3048133850097656e-05, 0.451416015625, 0.016448974609375, 0.0018777847290039062, 0.318359375, 0.10870361328125, 5.602836608886719e-06, 0.04620361328125, 0.0014963150024414062, 0.0007100105285644531, 0.08154296875, 0.0194854736328125, 0.04583740234375, 0.51171875, 1.3193359375, 0.0005159378051757812, 0.07159423828125, 0.048675537109375, 0.00562286376953125, 0.00010383129119873047, 0.108154296875, 0.00020372867584228516, 0.494140625, 0.07269287109375, 0.12054443359375, 0.337890625, 3.421306610107422e-05, 2.255859375, 0.0299835205078125, 1.9073486328125e-06, 0.186767578125, 0.0004363059997558594, 0.0128631591796875, 0.2083740234375, 1.0302734375, 0.000640869140625, 0.2008056640625, 0.09307861328125, 0.6552734375, 0.21875, 0.004207611083984375, 0.01214599609375, 0.0125579833984375, 0.00656890869140625], "tokens": [397, 320, 284, 320, 446, 415, 308, 6270, 99, 610, 225, 34, 962, 2064, 99, 610, 225, 34, 27, 301, 397, 442, 37638, 474, 309, 474, 5335, 866, 284, 320, 813, 415, 308, 6270, 99, 2511, 2064, 99, 27, 301, 397, 442, 37638, 474, 309, 32, 3227, 440, 13042, 18474, 32147, 474]}
{"line_number": 968, "line_type": "original", "code": "    for (Node n = firstInList; n != null; n = n.getNext()) {", "entropy": 0.58837890625, "is_bug_line": false, "sus_score": 0.08630637040042062, "per_token_entropy": [2.68359375, 5.62109375, 0.0982666015625, 0.8681640625, 1.49609375, 0.219482421875, 0.93896484375, 0.1405029296875, 0.077880859375, 0.042205810546875, 0.0294036865234375, 0.01082611083984375, 0.005710601806640625, 0.0098876953125, 0.0267181396484375, 0.0018863677978515625, 0.0035915374755859375, 2.9921531677246094e-05, 0.00905609130859375, 0.0157318115234375, 0.0511474609375], "tokens": [264, 436, 308, 1212, 310, 280, 1932, 383, 720, 45, 310, 863, 744, 45, 310, 280, 310, 32, 23017, 1157, 301]}
{"line_number": 968, "line_type": "generated", "code": "\n    }\n\n    if (singleq == 0 && doubleq == 0) {\n      // no quotes needed\n      return s;\n    }\n\n    if (useSlashV) {\n      // Use the slashV syntax.\n      // TODO(johnlenz", "entropy": 0.6396484375, "is_bug_line": false, "sus_score": 0.08630637040042062, "per_token_entropy": [0.83984375, 0.329833984375, 0.482177734375, 0.81787109375, 0.2861328125, 0.705078125, 5.5670738220214844e-05, 0.45458984375, 0.025054931640625, 0.0022068023681640625, 0.325439453125, 0.12298583984375, 8.225440979003906e-06, 0.05743408203125, 0.0016527175903320312, 0.0004639625549316406, 0.0638427734375, 0.0236968994140625, 0.056488037109375, 1.236328125, 2.48046875, 0.80029296875, 1.857421875, 0.5244140625, 0.1444091796875, 0.403076171875, 0.01355743408203125, 0.0643310546875, 0.00020313262939453125, 0.70458984375, 0.78076171875, 0.1527099609375, 1.6044921875, 0.0006718635559082031, 2.2649765014648438e-05, 0.161376953125, 0.004177093505859375, 0.032867431640625, 0.6337890625, 3.1796875, 1.521484375, 2.41796875, 1.0234375, 2.17578125, 1.7041015625, 0.38720703125, 1.3349609375, 2.37109375, 0.10943603515625, 0.81787109375, 0.0013513565063476562, 0.003017425537109375], "tokens": [284, 320, 446, 415, 308, 6270, 99, 610, 225, 34, 962, 2064, 99, 610, 225, 34, 27, 301, 397, 434, 1289, 22002, 5349, 397, 442, 309, 45, 284, 320, 446, 415, 308, 539, 28444, 72, 27, 301, 397, 434, 4417, 322, 29659, 72, 8345, 32, 397, 434, 4296, 26, 25172, 1657, 108]}
{"line_number": 976, "line_type": "original", "code": "    if (lastWasEmpty) {", "entropy": 2.521484375, "is_bug_line": false, "sus_score": 0.08630637040042062, "per_token_entropy": [2.791015625, 3.6875, 0.1435546875, 6.609375, 2.408203125, 4.21484375, 0.16455078125, 0.1483154296875], "tokens": [264, 415, 308, 2135, 22434, 2766, 27, 301]}
{"line_number": 976, "line_type": "generated", "code": "\n      doublequote = \"\\\"\";\n      singlequote = \"'\";\n    } else {\n      // more single quotes so enclose in double quotes.\n      quote = '\"';", "entropy": 0.177734375, "is_bug_line": false, "sus_score": 0.08630637040042062, "per_token_entropy": [0.479248046875, 1.0048828125, 0.0157928466796875, 0.00396728515625, 1.666015625, 0.052520751953125, 0.50048828125, 0.0220794677734375, 0.0001474618911743164, 0.0034008026123046875, 0.732421875, 0.0013532638549804688, 0.1785888671875, 0.0005960464477539062, 0.0035343170166015625, 0.0284881591796875, 0.07928466796875, 0.27197265625, 0.111572265625, 0.0205230712890625, 0.0138092041015625, 0.261474609375, 0.07330322265625, 0.0036468505859375, 0.003803253173828125, 0.00739288330078125, 0.01110076904296875, 0.119384765625, 0.025726318359375, 0.00948333740234375, 0.0007061958312988281, 0.1549072265625, 7.033348083496094e-06], "tokens": [397, 2064, 7345, 280, 12378, 866, 397, 3982, 7345, 280, 5335, 866, 284, 320, 813, 301, 397, 434, 1829, 3982, 22002, 1259, 931, 2679, 328, 2064, 22002, 32, 397, 15358, 280, 6113, 920]}
{"line_number": 979, "line_type": "original", "code": "  }", "entropy": 1.7998046875, "is_bug_line": false, "sus_score": 0.08630637040042062, "per_token_entropy": [2.9140625, 0.68505859375], "tokens": [225, 320]}
{"line_number": 979, "line_type": "generated", "code": "\n      // more single quotes so enclose in double quotes.\n      quote = '\"';\n      doublequote = \"\\\\\\\"\";\n      singlequote = \"\\'\";\n    }\n\n    StringBuilder sb = new StringBuilder();\n    sb.append(quote);\n    for (int i =", "entropy": 0.13623046875, "is_bug_line": false, "sus_score": 0.08630637040042062, "per_token_entropy": [0.85009765625, 0.78173828125, 0.1280517578125, 0.0182037353515625, 0.0108642578125, 0.189453125, 0.0677490234375, 0.0033740997314453125, 0.0043792724609375, 0.0086212158203125, 0.00965118408203125, 0.11236572265625, 0.0165557861328125, 0.01371002197265625, 0.0007987022399902344, 0.2445068359375, 1.430511474609375e-05, 0.0080108642578125, 0.230224609375, 1.1563301086425781e-05, 0.0008945465087890625, 0.04443359375, 0.0015964508056640625, 4.017353057861328e-05, 0.0024051666259765625, 0.0016107559204101562, 7.987022399902344e-06, 0.0005502700805664062, 0.67919921875, 0.12646484375, 0.026336669921875, 3.5881996154785156e-05, 0.34130859375, 1.1748046875, 0.08087158203125, 0.0092010498046875, 0.0134124755859375, 0.0005893707275390625, 0.4755859375, 0.154296875, 0.359619140625, 0.00022029876708984375, 0.0004878044128417969, 0.00634765625, 0.01439666748046875, 0.00704193115234375, 0.44775390625, 0.397705078125, 0.0017347335815429688, 0.005382537841796875, 0.00762176513671875, 0.00444793701171875], "tokens": [397, 434, 1829, 3982, 22002, 1259, 931, 2679, 328, 2064, 22002, 32, 397, 15358, 280, 6113, 920, 397, 2064, 7345, 280, 18474, 1492, 866, 397, 3982, 7345, 280, 2706, 26177, 284, 320, 446, 9706, 6115, 280, 537, 9706, 473, 284, 6115, 32, 1689, 26, 7345, 293, 284, 436, 308, 410, 595, 280]}
{"line_number": 928, "line_type": "original", "code": "      add(\"(\");", "entropy": 2.955078125, "is_bug_line": false, "sus_score": 0.07597371763975863, "per_token_entropy": [6.234375, 0.380126953125, 0.2919921875, 7.84375, 0.021514892578125], "tokens": [647, 1015, 440, 440, 293]}
{"line_number": 928, "line_type": "generated", "code": "\n    }\n  }\n\n  /**\n   * Returns the context to use for an expression that does not have an IN\n   * operator.  This is used for the first item in a comma-separated list\n   * where the list is not enclosed in parentheses.", "entropy": 0.88037109375, "is_bug_line": false, "sus_score": 0.07597371763975863, "per_token_entropy": [0.2327880859375, 0.0014810562133789062, 0.0931396484375, 0.0003650188446044922, 0.1295166015625, 0.7265625, 0.0511474609375, 0.00019609928131103516, 3.01953125, 0.634765625, 0.71142578125, 1.259765625, 0.181640625, 0.59423828125, 1.6201171875, 0.33544921875, 1.3369140625, 1.39453125, 0.0285186767578125, 1.39453125, 0.779296875, 0.6162109375, 0.1114501953125, 0.0002582073211669922, 0.06439208984375, 0.654296875, 1.3642578125, 1.3291015625, 0.78466796875, 2.17578125, 1.787109375, 2.025390625, 2.279296875, 2.259765625, 0.137451171875, 0.51806640625, 2.001953125, 0.28125, 0.0391845703125, 0.15869140625, 1.8623046875, 0.000270843505859375, 1.767578125, 1.0478515625, 2.76171875, 0.953125, 0.9853515625, 2.009765625, 0.0043487548828125, 0.142333984375, 0.62060546875, 0.51025390625], "tokens": [284, 320, 334, 320, 719, 1022, 664, 319, 3759, 322, 1619, 372, 793, 436, 600, 6101, 688, 1957, 646, 1159, 600, 1236, 664, 319, 4134, 32, 225, 1348, 438, 1654, 436, 322, 1932, 1623, 328, 312, 18231, 31, 26398, 1149, 664, 319, 2154, 322, 1149, 438, 646, 931, 10687, 328, 45110, 32]}
{"line_number": 929, "line_type": "original", "code": "      add(n, Context.OTHER);", "entropy": 1.890625, "is_bug_line": false, "sus_score": 0.07597371763975863, "per_token_entropy": [8.8359375, 1.119140625, 3.857421875, 2.13671875, 0.491943359375, 0.44189453125, 0.0008711814880371094, 0.1082763671875, 0.017364501953125], "tokens": [647, 1015, 26, 96, 30, 7049, 32, 21144, 293]}
{"line_number": 929, "line_type": "generated", "code": "\n  }\n\n  /**\n   * This function adds a comma-separated list as is specified by an ARRAYLIT\n   * node with the associated skipIndexes array.  This is a space optimization\n   * since we avoid creating a whole Node object for each empty array literal", "entropy": 0.0977783203125, "is_bug_line": false, "sus_score": 0.07597371763975863, "per_token_entropy": [0.1929931640625, 0.002323150634765625, 0.1375732421875, 0.73291015625, 0.052642822265625, 0.00034165382385253906, 1.5986328125, 0.14794921875, 0.32666015625, 0.12261962890625, 0.10870361328125, 0.0163421630859375, 0.002960205078125, 0.0287017822265625, 0.2315673828125, 0.042327880859375, 0.00545501708984375, 0.007785797119140625, 0.394287109375, 0.5400390625, 0.04888916015625, 0.0199432373046875, 0.0003657341003417969, 0.0728759765625, 0.1036376953125, 0.021331787109375, 0.0019016265869140625, 0.0157928466796875, 0.0010690689086914062, 0.0021839141845703125, 0.022735595703125, 0.0294036865234375, 0.026092529296875, 0.003040313720703125, 0.0011873245239257812, 0.0011835098266601562, 0.0025787353515625, 0.0008873939514160156, 4.291534423828125e-06, 0.0006756782531738281, 0.00026679039001464844, 0.0005030632019042969, 0.00023949146270751953, 0.00015985965728759766, 0.0002689361572265625, 0.0012264251708984375, 0.0022525787353515625, 0.00022590160369873047, 0.00010895729064941406, 0.0034427642822265625, 0.0067291259765625, 0.000598907470703125], "tokens": [334, 320, 719, 1022, 664, 319, 1348, 667, 10476, 312, 18231, 31, 26398, 1149, 619, 438, 3191, 810, 600, 18559, 22532, 664, 319, 1541, 623, 322, 5746, 7116, 19401, 1417, 32, 225, 1348, 438, 312, 5122, 16809, 664, 319, 4558, 996, 7358, 6892, 312, 9844, 4004, 1300, 436, 2504, 3502, 1417, 10652]}
{"line_number": 930, "line_type": "original", "code": "      add(\")\");", "entropy": 3.87109375, "is_bug_line": false, "sus_score": 0.07597371763975863, "per_token_entropy": [7.74609375, 2.12109375, 4.60546875, 1.009765625], "tokens": [647, 1015, 440, 13372]}
{"line_number": 930, "line_type": "generated", "code": "\n\n  /**\n   * Add an expression to the output stream.  The expression is wrapped in\n   * parentheses if necessary to ensure that it is evaluated at the correct\n   * precedence level.\n   * @param n The node to add.\n   */\n  void add", "entropy": 0.69873046875, "is_bug_line": false, "sus_score": 0.07597371763975863, "per_token_entropy": [0.94970703125, 0.74267578125, 0.06976318359375, 0.0006537437438964844, 2.869140625, 2.05078125, 1.1533203125, 1.900390625, 0.2310791015625, 0.57177734375, 0.83203125, 0.759765625, 1.1396484375, 1.40625, 0.8662109375, 0.953125, 3.251953125, 0.2734375, 0.259521484375, 0.0010099411010742188, 0.2783203125, 0.30810546875, 1.236328125, 0.55517578125, 0.578125, 0.66845703125, 0.397216796875, 0.9501953125, 0.80517578125, 1.4248046875, 0.2391357421875, 1.2568359375, 0.006855010986328125, 0.0005178451538085938, 0.134033203125, 0.9345703125, 0.1605224609375, 0.322265625, 0.418212890625, 0.63134765625, 0.0162811279296875, 0.294921875, 0.278076171875, 1.041015625, 0.417236328125, 0.521484375, 0.47265625, 0.0276641845703125, 1.39453125, 0.0113983154296875, 0.27734375, 0.017852783203125], "tokens": [719, 1022, 664, 319, 2222, 600, 6101, 372, 322, 1688, 3443, 32, 225, 886, 6101, 438, 16283, 328, 664, 319, 45110, 415, 7506, 372, 7279, 688, 561, 438, 22423, 821, 322, 3809, 664, 319, 32787, 3193, 32, 664, 319, 477, 753, 310, 886, 1541, 372, 1015, 32, 664, 569, 334, 763, 1015]}
{"line_number": 951, "line_type": "original", "code": "        cc.listSeparator();", "entropy": 3.484375, "is_bug_line": false, "sus_score": 0.07345531603115876, "per_token_entropy": [4.8828125, 5.71875, 0.0098419189453125, 10.1484375, 0.10894775390625, 0.0309906005859375], "tokens": [351, 10639, 32, 668, 11145, 473]}
{"line_number": 951, "line_type": "generated", "code": "\n      if (cached == null) {\n        cached = jsString(s, useSlashV);\n        escapedJsStrings.put(s, cached);\n      }\n      add(cached);\n    }\n  }\n\n  private String jsString(String s, boolean", "entropy": 0.1214599609375, "is_bug_line": false, "sus_score": 0.07345531603115876, "per_token_entropy": [0.11016845703125, 0.2403564453125, 0.007598876953125, 0.04083251953125, 0.7099609375, 0.0009908676147460938, 0.0217132568359375, 0.001613616943359375, 0.0210723876953125, 0.91357421875, 0.00034308433532714844, 0.3330078125, 0.005184173583984375, 0.0088653564453125, 0.2342529296875, 0.2100830078125, 0.474853515625, 0.000732421875, 3.743171691894531e-05, 0.0059661865234375, 0.06787109375, 0.05389404296875, 4.208087921142578e-05, 0.0001043081283569336, 0.001178741455078125, 0.0032291412353515625, 0.0014133453369140625, 0.00728607177734375, 0.0002474784851074219, 0.0014495849609375, 0.0004944801330566406, 0.027557373046875, 0.00015354156494140625, 0.10430908203125, 0.058013916015625, 0.011993408203125, 0.00909423828125, 0.0023784637451171875, 0.054901123046875, 7.021427154541016e-05, 0.0158538818359375, 0.0003516674041748047, 0.147216796875, 1.248046875, 0.97119140625, 0.0310211181640625, 0.00411224365234375, 0.0097503662109375, 0.003238677978515625, 0.1280517578125, 0.0090789794921875, 0.0022945404052734375], "tokens": [397, 415, 308, 10569, 610, 744, 27, 301, 291, 10814, 280, 4060, 652, 26, 101, 30, 793, 28444, 72, 293, 291, 31253, 10535, 9634, 32, 524, 26, 101, 30, 10814, 293, 397, 320, 397, 1015, 26, 10569, 293, 284, 320, 334, 320, 719, 945, 892, 4060, 652, 26, 652, 309, 30, 1905]}
