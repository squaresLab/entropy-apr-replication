{"line_number": 87, "line_type": "original", "code": "    if (!generated) {", "entropy": 2.388671875, "is_bug_line": false, "sus_score": 0.1849000654084097, "per_token_entropy": [6.32421875, 2.77734375, 2.123046875, 2.958984375, 0.04681396484375, 0.10174560546875], "tokens": [264, 415, 1429, 6398, 27, 301]}
{"line_number": 87, "line_type": "generated", "code": "\n            return true;\n          }\n        }\n      }\n\n      return false;\n    }\n  }\n\n  /**\n   * A traversal that builds a global namespace.\n   */\n  private class BuildGlobalNamespace extends AbstractShallowCallback {\n\n    private final Set<Node> newNodes", "entropy": 0.28759765625, "is_bug_line": false, "sus_score": 0.1849000654084097, "per_token_entropy": [1.2158203125, 0.337890625, 0.037506103515625, 0.015045166015625, 0.2486572265625, 0.006389617919921875, 0.31494140625, 0.00817108154296875, 0.431396484375, 0.318115234375, 0.95556640625, 0.324951171875, 0.1063232421875, 0.000637054443359375, 0.01904296875, 0.0009946823120117188, 0.05181884765625, 0.00212860107421875, 0.0654296875, 0.11773681640625, 0.03118896484375, 0.00038909912109375, 1.0087890625, 1.515625, 0.1962890625, 0.5634765625, 1.275390625, 0.59326171875, 0.09869384765625, 1.1669921875, 0.173828125, 0.12890625, 0.00457000732421875, 0.10540771484375, 0.052337646484375, 0.0005726814270019531, 0.00024390220642089844, 0.309814453125, 0.2178955078125, 0.7509765625, 0.043670654296875, 0.1654052734375, 0.05963134765625, 0.87353515625, 0.63134765625, 0.1959228515625, 0.12384033203125, 0.0033664703369140625, 0.0174713134765625, 6.413459777832031e-05, 0.063720703125, 0.007717132568359375], "tokens": [324, 442, 861, 45, 616, 320, 291, 320, 397, 320, 1687, 442, 901, 45, 284, 320, 334, 320, 719, 1022, 664, 319, 399, 34395, 688, 13963, 312, 3649, 3583, 32, 664, 569, 334, 945, 443, 5238, 21611, 2026, 7400, 1189, 4568, 3296, 301, 446, 945, 1158, 1756, 46, 1212, 48, 537, 5909]}
{"line_number": 88, "line_type": "original", "code": "      process();", "entropy": 5.0625, "is_bug_line": false, "sus_score": 0.1849000654084097, "per_token_entropy": [3.568359375, 9.2734375, 2.349609375], "tokens": [647, 2164, 473]}
{"line_number": 88, "line_type": "generated", "code": "\n        }\n      }\n\n      return false;\n    }\n  }\n\n  /**\n   * A traversal that builds the global namespace.\n   */\n  private class BuildGlobalNamespace extends AbstractShallowCallback {\n    private final Set<Node> newNodes;\n\n    BuildGlobalNamespace(Predicate", "entropy": 0.2022705078125, "is_bug_line": false, "sus_score": 0.1849000654084097, "per_token_entropy": [0.192626953125, 0.0062713623046875, 0.036163330078125, 0.000339508056640625, 0.517578125, 0.34814453125, 0.32568359375, 0.0008769035339355469, 0.038482666015625, 0.00021779537200927734, 0.045440673828125, 0.001220703125, 0.058868408203125, 0.139892578125, 0.03887939453125, 0.0003044605255126953, 0.9287109375, 1.5625, 0.205810546875, 0.62548828125, 0.5888671875, 0.1114501953125, 0.0740966796875, 0.70703125, 0.1400146484375, 0.126953125, 0.0033283233642578125, 0.10162353515625, 0.056121826171875, 0.00047278404235839844, 0.0002560615539550781, 0.35302734375, 0.254638671875, 0.9208984375, 0.04638671875, 0.163330078125, 0.08282470703125, 0.57421875, 0.288818359375, 0.16943359375, 0.2235107421875, 0.0036182403564453125, 0.02252197265625, 7.581710815429688e-05, 0.07952880859375, 0.00618743896484375, 0.022857666015625, 0.09698486328125, 0.0950927734375, 2.0503997802734375e-05, 0.0021343231201171875, 0.1259765625], "tokens": [291, 320, 397, 320, 1687, 442, 901, 45, 284, 320, 334, 320, 719, 1022, 664, 319, 399, 34395, 688, 13963, 322, 3649, 3583, 32, 664, 569, 334, 945, 443, 5238, 21611, 2026, 7400, 1189, 4568, 3296, 301, 284, 945, 1158, 1756, 46, 1212, 48, 537, 5909, 45, 446, 5238, 21611, 26, 12688]}
{"line_number": 90, "line_type": "original", "code": "    return globalNames;", "entropy": 4.59375, "is_bug_line": false, "sus_score": 0.1849000654084097, "per_token_entropy": [3.1171875, 0.58447265625, 10.1640625, 0.23779296875, 8.859375], "tokens": [264, 442, 3649, 4109, 45]}
{"line_number": 90, "line_type": "generated", "code": "\n      return false;\n    }\n  }\n\n  /**\n   * A visitor that builds the global namespace.\n   */\n  private class BuildGlobalNamespace extends NodeTraversal.AbstractPostOrderCallback {\n    private final Set<Node> newNodes;\n\n    BuildGlobalNamespace(Predicate<", "entropy": 0.2161865234375, "is_bug_line": false, "sus_score": 0.1849000654084097, "per_token_entropy": [0.630859375, 0.2015380859375, 0.057403564453125, 0.00125885009765625, 0.0268402099609375, 0.0007386207580566406, 0.057373046875, 0.0016813278198242188, 0.1478271484375, 0.14013671875, 0.0380859375, 0.0003876686096191406, 0.85400390625, 1.466796875, 0.1619873046875, 0.74658203125, 0.6259765625, 0.1568603515625, 0.06488037109375, 0.77734375, 0.12005615234375, 0.103271484375, 0.0038051605224609375, 0.10699462890625, 0.07135009765625, 0.0008578300476074219, 0.0003616809844970703, 0.37939453125, 1.3486328125, 0.283447265625, 0.00531005859375, 0.03472900390625, 1.0771484375, 0.01042938232421875, 0.0054931640625, 0.1373291015625, 0.4140625, 0.284912109375, 0.127197265625, 0.1517333984375, 0.006328582763671875, 0.021575927734375, 6.258487701416016e-05, 0.06884765625, 0.005306243896484375, 0.017059326171875, 0.08197021484375, 0.07672119140625, 3.0279159545898438e-05, 0.001766204833984375, 0.1307373046875, 0.0035037994384765625], "tokens": [397, 442, 901, 45, 284, 320, 334, 320, 719, 1022, 664, 319, 399, 16957, 688, 13963, 322, 3649, 3583, 32, 664, 569, 334, 945, 443, 5238, 21611, 2026, 4004, 35699, 32, 5584, 3160, 2871, 3296, 301, 284, 945, 1158, 1756, 46, 1212, 48, 537, 5909, 45, 446, 5238, 21611, 26, 12688, 46]}
{"line_number": 98, "line_type": "original", "code": "    if (!generated) {", "entropy": 1.80859375, "is_bug_line": false, "sus_score": 0.15665208999759148, "per_token_entropy": [5.19921875, 5.203125, 0.291015625, 0.0283355712890625, 0.01030731201171875, 0.12091064453125], "tokens": [264, 415, 1429, 6398, 27, 301]}
{"line_number": 98, "line_type": "generated", "code": "\n  private void process() {\n    if (generated) {\n      return;\n    }\n    generated = true;\n    process(externsRoot);\n    process(root);\n  }\n\n  /**\n   * Builds the namespace from the given AST root.\n   */\n ", "entropy": 0.342041015625, "is_bug_line": false, "sus_score": 0.15665208999759148, "per_token_entropy": [0.229248046875, 0.408447265625, 0.1212158203125, 0.038818359375, 0.003017425537109375, 0.0068511962890625, 0.24658203125, 0.419677734375, 0.19091796875, 0.07440185546875, 0.005802154541015625, 0.01220703125, 0.0518798828125, 0.054962158203125, 0.0021038055419921875, 0.0205230712890625, 0.0004324913024902344, 0.77001953125, 0.1541748046875, 0.0011749267578125, 0.000675201416015625, 0.01428985595703125, 1.2353515625, 2.330078125, 0.6181640625, 0.8095703125, 0.003345489501953125, 0.01172637939453125, 0.6953125, 0.095458984375, 0.0294189453125, 0.007686614990234375, 0.007587432861328125, 0.007411956787109375, 0.39208984375, 0.0016241073608398438, 0.26904296875, 0.341552734375, 0.05047607421875, 0.0003814697265625, 0.90625, 0.0987548828125, 0.3154296875, 1.7607421875, 0.822265625, 0.54150390625, 1.0712890625, 1.5634765625, 0.259521484375, 0.0924072265625, 0.54931640625, 0.06964111328125], "tokens": [334, 945, 763, 2164, 346, 301, 284, 415, 308, 6398, 27, 301, 397, 442, 45, 284, 320, 284, 4723, 280, 861, 45, 284, 2164, 26, 4318, 101, 4058, 293, 284, 2164, 26, 2388, 293, 334, 320, 719, 1022, 664, 319, 37169, 322, 3583, 645, 322, 2702, 16095, 3051, 32, 664, 569, 334]}
{"line_number": 101, "line_type": "original", "code": "    return nameMap;", "entropy": 3.447265625, "is_bug_line": false, "sus_score": 0.15665208999759148, "per_token_entropy": [2.80859375, 6.78515625, 7.3984375, 0.08941650390625, 0.158447265625], "tokens": [264, 442, 636, 1208, 45]}
{"line_number": 101, "line_type": "generated", "code": "\n    } else {\n      inExterns = false;", "entropy": 0.1805419921875, "is_bug_line": false, "sus_score": 0.15665208999759148, "per_token_entropy": [0.603515625, 0.04058837890625, 0.98095703125, 0.042816162109375, 0.2366943359375, 0.254150390625, 0.00106048583984375, 4.887580871582031e-06, 2.5153160095214844e-05, 0.00034046173095703125, 0.005001068115234375, 0.0012073516845703125], "tokens": [284, 320, 813, 301, 397, 328, 571, 900, 101, 280, 901, 45]}
{"line_number": 206, "line_type": "original", "code": "    return s.getParent() == null;", "entropy": 3.603515625, "is_bug_line": false, "sus_score": 0.1556997888323046, "per_token_entropy": [5.46484375, 4.1953125, 9.390625, 0.455078125, 8.5234375, 2.056640625, 0.662109375, 0.52880859375, 1.1689453125], "tokens": [264, 442, 309, 32, 18789, 346, 610, 744, 45]}
{"line_number": 206, "line_type": "generated", "code": "\n          type = Name.Type.STRING;\n          break;\n\n        case Token.NAME:\n          name = n.getString();", "entropy": 0.212158203125, "is_bug_line": false, "sus_score": 0.1556997888323046, "per_token_entropy": [0.39306640625, 1.83984375, 0.0019626617431640625, 0.2099609375, 0.0024242401123046875, 0.002269744873046875, 0.0016155242919921875, 0.66748046875, 0.275390625, 0.08233642578125, 0.06134033203125, 0.00164031982421875, 0.56005859375, 0.0224151611328125, 0.002750396728515625, 2.47955322265625e-05, 0.60205078125, 0.00032019615173339844, 0.07830810546875, 0.367919921875, 0.00021147727966308594, 0.11962890625, 8.07046890258789e-05, 0.0084381103515625, 0.0030155181884765625], "tokens": [616, 827, 280, 3270, 32, 620, 32, 5203, 45, 616, 1626, 45, 584, 1135, 6512, 32, 2474, 44, 616, 636, 280, 310, 32, 7069, 473]}
{"line_number": 168, "line_type": "original", "code": "    String topVarName = getTopVarName(name);", "entropy": 1.4775390625, "is_bug_line": false, "sus_score": 0.1529438225803745, "per_token_entropy": [2.15234375, 7.1484375, 0.62158203125, 0.0121917724609375, 0.004543304443359375, 1.669921875, 6.01171875, 0.0241241455078125, 0.0023365020751953125, 6.29425048828125e-05, 0.08673095703125, 1.427734375, 0.04022216796875], "tokens": [264, 892, 2663, 1881, 558, 280, 622, 3155, 1881, 558, 26, 426, 293]}
{"line_number": 168, "line_type": "generated", "code": "\n    /**\n     * Whether the current traversal is inside a function body.\n     */\n    private boolean inFunctionBody = false;", "entropy": 0.6123046875, "is_bug_line": false, "sus_score": 0.1529438225803745, "per_token_entropy": [0.33935546875, 1.7607421875, 0.23388671875, 0.0005245208740234375, 2.513671875, 0.7236328125, 1.060546875, 1.14453125, 0.3427734375, 1.5439453125, 0.6943359375, 0.79833984375, 1.63671875, 0.255126953125, 0.1470947265625, 0.01605224609375, 0.0031070709228515625, 0.0509033203125, 0.0102386474609375, 0.08837890625, 0.011199951171875, 1.28515625, 0.64111328125, 0.005619049072265625, 0.0016021728515625], "tokens": [284, 1022, 275, 319, 14071, 322, 1550, 34395, 438, 6517, 312, 667, 3361, 32, 275, 569, 284, 945, 1905, 328, 2447, 3050, 280, 901, 45]}
{"line_number": 169, "line_type": "original", "code": "    return isGlobalVarReference(topVarName, s);", "entropy": 1.8896484375, "is_bug_line": false, "sus_score": 0.1529438225803745, "per_token_entropy": [2.494140625, 6.953125, 5.796875, 0.32373046875, 3.0234375, 0.10614013671875, 0.3251953125, 4.14453125, 0.5107421875, 0.06536865234375, 0.0184478759765625, 0.2861328125, 0.5185546875], "tokens": [264, 442, 438, 4455, 1881, 3564, 26, 1393, 1881, 558, 30, 309, 293]}
{"line_number": 169, "line_type": "generated", "code": "\n      this.nodeFilter = new NodeFilter(newNodes);\n    }\n\n    @Override\n    public void visit(NodeTraversal t, Node n, Node parent) {\n      if (nodeFilter.apply(n)) {\n        newNodes.add(n", "entropy": 0.1524658203125, "is_bug_line": false, "sus_score": 0.1529438225803745, "per_token_entropy": [0.876953125, 0.92626953125, 0.06317138671875, 0.01084136962890625, 0.00012576580047607422, 0.0006818771362304688, 0.305419921875, 0.03912353515625, 0.0030345916748046875, 0.0116119384765625, 0.28759765625, 0.16455078125, 0.0134429931640625, 0.062286376953125, 0.00047278404235839844, 0.125732421875, 0.4287109375, 0.0004017353057861328, 0.0126190185546875, 0.00933074951171875, 0.0226898193359375, 0.00974273681640625, 0.00013172626495361328, 0.00026416778564453125, 0.0256500244140625, 0.0106048583984375, 2.205371856689453e-05, 0.0001277923583984375, 0.007343292236328125, 0.0013599395751953125, 0.002033233642578125, 0.003978729248046875, 0.00016617774963378906, 0.0017995834350585938, 0.10382080078125, 0.36767578125, 0.28955078125, 1.7236328125, 0.00423431396484375, 0.004913330078125, 0.004375457763671875, 0.0008320808410644531, 0.004749298095703125, 0.06842041015625, 0.00165557861328125, 0.1961669921875, 1.5791015625, 0.0259552001953125, 0.003025054931640625, 0.08953857421875, 0.00319671630859375, 0.0252227783203125], "tokens": [397, 458, 32, 1251, 2348, 280, 537, 4004, 2348, 26, 890, 5909, 293, 284, 320, 446, 477, 1788, 284, 562, 763, 7725, 26, 1212, 35699, 273, 30, 4004, 310, 30, 4004, 2935, 27, 301, 397, 415, 308, 1251, 2348, 32, 4699, 26, 96, 490, 301, 291, 537, 5909, 32, 669, 26, 96]}
{"line_number": 179, "line_type": "original", "code": "    int firstDotIndex = name.indexOf('.');", "entropy": 1.392578125, "is_bug_line": false, "sus_score": 0.1529438225803745, "per_token_entropy": [2.759765625, 5.66796875, 0.8466796875, 0.03448486328125, 0.002109527587890625, 0.325927734375, 3.822265625, 0.2037353515625, 0.19873046875, 0.06939697265625], "tokens": [264, 629, 1932, 10025, 1284, 280, 636, 32, 7142, 49129]}
{"line_number": 179, "line_type": "generated", "code": "\n    @Override\n    public void visit(NodeTraversal t, Node n, Node parent) {\n      if (nodeFilter!= null &&!nodeFilter.apply(n)) {\n        return;\n      }", "entropy": 0.0712890625, "is_bug_line": false, "sus_score": 0.1529438225803745, "per_token_entropy": [0.397216796875, 0.240234375, 0.0004832744598388672, 0.0134124755859375, 0.00955963134765625, 0.03369140625, 0.00763702392578125, 0.0004448890686035156, 0.00011456012725830078, 0.10498046875, 0.013916015625, 3.24249267578125e-05, 0.00021350383758544922, 0.00811767578125, 0.005153656005859375, 0.005634307861328125, 0.003070831298828125, 0.0003376007080078125, 0.004718780517578125, 0.126220703125, 0.228515625, 0.1610107421875, 0.259765625, 0.0009431838989257812, 0.208740234375, 5.650520324707031e-05, 0.04229736328125, 0.0246429443359375, 0.003818511962890625, 3.9577484130859375e-05, 0.0006546974182128906, 0.9609375, 0.0050506591796875, 0.0012302398681640625, 0.0038661956787109375, 0.0027256011962890625, 0.01082611083984375, 0.0274810791015625, 0.0007758140563964844, 0.005634307861328125, 7.987022399902344e-05], "tokens": [284, 477, 1788, 284, 562, 763, 7725, 26, 1212, 35699, 273, 30, 4004, 310, 30, 4004, 2935, 27, 301, 397, 415, 308, 1251, 2348, 863, 744, 962, 653, 1251, 2348, 32, 4699, 26, 96, 490, 301, 291, 442, 45, 397, 320]}
{"line_number": 180, "line_type": "original", "code": "    return firstDotIndex == -1 ? name : name.substring(0, firstDotIndex);", "entropy": 0.95703125, "is_bug_line": false, "sus_score": 0.1529438225803745, "per_token_entropy": [4.03515625, 4.75, 7.37109375, 1.720703125, 0.040496826171875, 0.8330078125, 0.050323486328125, 0.0007781982421875, 0.78173828125, 0.295654296875, 0.07818603515625, 0.0201416015625, 0.0016775131225585938, 0.00331878662109375, 0.0010232925415039062, 0.038818359375, 0.0004916191101074219, 0.0499267578125, 0.0002727508544921875, 7.152557373046875e-06, 0.028717041015625], "tokens": [264, 442, 1932, 10025, 1284, 610, 429, 35, 1018, 636, 499, 636, 32, 8723, 26, 34, 30, 1932, 10025, 1284, 293]}
{"line_number": 180, "line_type": "generated", "code": "\n  }\n\n  // -------------------------------------------------------------------------\n\n  /**\n   * A scope that represents the global scope.\n   */\n  private static class GlobalNamespaceScope extends Scope {\n\n    GlobalNamespaceScope(String name, Scope parent) {\n      super(name, parent);\n    }\n\n    @Override\n   ", "entropy": 0.4658203125, "is_bug_line": false, "sus_score": 0.1529438225803745, "per_token_entropy": [0.88818359375, 0.00919342041015625, 0.7626953125, 0.87158203125, 0.050079345703125, 0.2447509765625, 0.1917724609375, 0.0386962890625, 0.0002541542053222656, 2.138671875, 2.142578125, 2.4609375, 1.7236328125, 0.55126953125, 0.14990234375, 1.419921875, 0.226806640625, 0.280029296875, 0.038055419921875, 0.003387451171875, 0.17724609375, 0.5517578125, 0.11639404296875, 1.0537109375, 0.99462890625, 0.5595703125, 0.1488037109375, 0.02020263671875, 0.32421875, 0.352294921875, 4.00543212890625e-05, 0.26123046875, 1.4599609375, 1.36328125, 0.810546875, 0.45361328125, 0.09283447265625, 0.2135009765625, 0.0008287429809570312, 0.004680633544921875, 0.024139404296875, 0.005283355712890625, 0.192626953125, 0.006740570068359375, 0.0584716796875, 0.1705322265625, 0.110107421875, 0.00018298625946044922, 0.3193359375, 0.166259765625, 0.0011425018310546875, 0.01096343994140625], "tokens": [334, 320, 719, 434, 37377, 719, 1022, 664, 319, 399, 4576, 688, 10666, 322, 3649, 4576, 32, 664, 569, 334, 945, 907, 443, 37500, 5504, 2026, 22148, 301, 446, 37500, 5504, 26, 652, 636, 30, 22148, 2935, 27, 301, 397, 2599, 26, 426, 30, 2935, 293, 284, 320, 446, 477, 1788, 284]}
{"line_number": 192, "line_type": "original", "code": "    Scope.Var v = s.getVar(name);", "entropy": 1.2705078125, "is_bug_line": false, "sus_score": 0.1529438225803745, "per_token_entropy": [3.9765625, 2.50390625, 5.36328125, 0.51904296875, 0.058135986328125, 0.1793212890625, 1.888671875, 0.026214599609375, 0.291015625, 0.06134033203125, 0.35205078125, 0.0253143310546875], "tokens": [264, 22148, 32, 1881, 354, 280, 309, 32, 48086, 26, 426, 293]}
{"line_number": 192, "line_type": "generated", "code": "\n      if (n.isFunction() || n.isClass()) {\n        String name = n.getFirstChild().getString();\n        if (name!= null) {\n          if (isGlobalScope(t.getScope())) {\n            // Add the function or", "entropy": 0.482666015625, "is_bug_line": false, "sus_score": 0.1529438225803745, "per_token_entropy": [0.21044921875, 0.8955078125, 0.1317138671875, 0.791015625, 0.0100860595703125, 1.0498046875, 1.28125, 0.62744140625, 0.18017578125, 0.0005898475646972656, 0.00897979736328125, 1.14453125, 0.188720703125, 0.0048828125, 0.054931640625, 1.6767578125, 0.454345703125, 0.04754638671875, 1.248046875, 0.0005087852478027344, 0.2724609375, 0.00047016143798828125, 0.018157958984375, 0.0947265625, 0.015655517578125, 0.193603515625, 0.96337890625, 0.3857421875, 0.9326171875, 0.57177734375, 0.00118255615234375, 0.1754150390625, 0.0010099411010742188, 0.04290771484375, 1.814453125, 0.2705078125, 0.880859375, 0.06756591796875, 0.305908203125, 0.0013360977172851562, 0.053131103515625, 0.00022101402282714844, 0.0169677734375, 9.21487808227539e-05, 0.1268310546875, 0.0007562637329101562, 0.043975830078125, 2.560546875, 2.48828125, 1.203125, 0.9296875, 0.6591796875], "tokens": [397, 415, 308, 96, 32, 39504, 346, 1276, 310, 32, 297, 1339, 1157, 301, 291, 892, 636, 280, 310, 32, 25657, 2931, 922, 7069, 473, 291, 415, 308, 426, 863, 744, 27, 301, 616, 415, 308, 297, 4455, 5504, 26, 102, 32, 371, 5504, 5156, 301, 324, 434, 2222, 322, 667, 556]}
{"line_number": 193, "line_type": "original", "code": "    if (v == null && externsScope != null) {", "entropy": 1.873046875, "is_bug_line": false, "sus_score": 0.1529438225803745, "per_token_entropy": [5.70703125, 1.494140625, 0.109130859375, 9.25, 3.298828125, 0.030853271484375, 2.767578125, 3.158203125, 0.00954437255859375, 0.1424560546875, 0.1302490234375, 0.0014820098876953125, 0.037078857421875, 0.087890625], "tokens": [264, 415, 308, 104, 610, 744, 962, 12098, 101, 5504, 863, 744, 27, 301]}
{"line_number": 193, "line_type": "generated", "code": "\n      name = NodeUtil.getBestName(n);\n    }", "entropy": 0.47412109375, "is_bug_line": false, "sus_score": 0.1529438225803745, "per_token_entropy": [0.301025390625, 1.744140625, 0.0009870529174804688, 2.107421875, 0.0067901611328125, 0.0004935264587402344, 0.7138671875, 0.72607421875, 0.1922607421875, 0.020416259765625, 0.0201873779296875, 0.0870361328125, 0.69384765625, 0.0205535888671875], "tokens": [397, 636, 280, 4004, 1733, 32, 371, 15036, 558, 26, 96, 293, 284, 320]}
{"line_number": 196, "line_type": "original", "code": "    return v != null && !v.isLocal();", "entropy": 1.9189453125, "is_bug_line": false, "sus_score": 0.1529438225803745, "per_token_entropy": [4.0, 6.42578125, 7.46875, 1.76953125, 0.0008335113525390625, 0.498291015625, 1.845703125, 0.483642578125, 0.0007448196411132812, 0.07733154296875, 0.37890625, 0.0855712890625], "tokens": [264, 442, 354, 863, 744, 962, 653, 104, 32, 297, 3325, 473]}
{"line_number": 196, "line_type": "generated", "code": "\n    }\n  }", "entropy": 0.218017578125, "is_bug_line": false, "sus_score": 0.1529438225803745, "per_token_entropy": [0.5751953125, 0.001922607421875, 0.29248046875, 0.0025177001953125], "tokens": [284, 320, 334, 320]}
{"line_number": 62, "line_type": "original", "code": "    this(compiler, null, root);", "entropy": 2.865234375, "is_bug_line": false, "sus_score": 0.15161960871578067, "per_token_entropy": [2.48046875, 2.361328125, 11.390625, 3.875, 0.397216796875, 2.576171875, 0.26171875, 1.59375, 0.84912109375], "tokens": [264, 458, 26, 10199, 30, 744, 30, 3051, 293]}
{"line_number": 62, "line_type": "generated", "code": "\n        new NewNodeScanner(this));\n    for (Node n : newNodes) {\n      t.traverse(n);\n    }\n  }\n\n  /**\n   * Scans the code and builds the global namespace.\n   */\n  private void process() {\n   ", "entropy": 0.381103515625, "is_bug_line": false, "sus_score": 0.15161960871578067, "per_token_entropy": [1.119140625, 0.1083984375, 0.94189453125, 0.460693359375, 0.75439453125, 0.44140625, 1.0107421875, 1.2138671875, 0.1434326171875, 0.677734375, 0.0034999847412109375, 0.0018930435180664062, 0.134521484375, 0.0177154541015625, 0.00384521484375, 4.649162292480469e-05, 0.0006890296936035156, 0.0036029815673828125, 0.020294189453125, 0.1710205078125, 6.151199340820312e-05, 0.021209716796875, 0.421630859375, 0.285400390625, 0.62158203125, 0.05474853515625, 7.522106170654297e-05, 0.10577392578125, 0.0015506744384765625, 0.07757568359375, 0.368896484375, 0.16162109375, 0.00022733211517333984, 2.25, 0.000911712646484375, 0.420166015625, 2.78125, 2.080078125, 0.6533203125, 0.517578125, 0.2197265625, 0.06988525390625, 0.5244140625, 0.1651611328125, 0.11627197265625, 0.00653839111328125, 0.53076171875, 0.0169830322265625, 0.0089569091796875, 0.0008702278137207031, 0.0017042160034179688, 0.09954833984375], "tokens": [291, 537, 3136, 1212, 13038, 26, 578, 876, 284, 436, 308, 1212, 310, 499, 537, 5909, 27, 301, 397, 273, 32, 33261, 26, 96, 293, 284, 320, 334, 320, 719, 1022, 664, 319, 6906, 693, 322, 1340, 461, 13963, 322, 3649, 3583, 32, 664, 569, 334, 945, 763, 2164, 346, 301, 284]}
{"line_number": 63, "line_type": "original", "code": "  }", "entropy": 1.47265625, "is_bug_line": false, "sus_score": 0.15161960871578067, "per_token_entropy": [2.41796875, 0.52685546875], "tokens": [225, 320]}
{"line_number": 63, "line_type": "generated", "code": "\n    t.traverse(root, scope);\n  }\n\n  /**\n   * If the client adds new nodes to the AST, scan these new nodes\n   * to see if they've added any references to the global namespace.\n   * @param newNodes New nodes", "entropy": 0.197021484375, "is_bug_line": false, "sus_score": 0.15161960871578067, "per_token_entropy": [1.3623046875, 0.3759765625, 0.00496673583984375, 0.049957275390625, 0.259521484375, 1.5751953125, 0.537109375, 0.14404296875, 0.02630615234375, 0.320068359375, 0.007488250732421875, 0.1458740234375, 0.267822265625, 0.1678466796875, 0.00028705596923828125, 2.23828125, 0.208984375, 0.044281005859375, 0.381103515625, 0.1043701171875, 0.413818359375, 0.02996826171875, 0.0169677734375, 0.046661376953125, 0.046295166015625, 0.1546630859375, 0.039154052734375, 0.01267242431640625, 0.006328582763671875, 0.03741455078125, 0.00022935867309570312, 0.0160369873046875, 0.003948211669921875, 0.0006690025329589844, 0.0024566650390625, 0.006221771240234375, 0.022216796875, 0.003749847412109375, 0.036956787109375, 0.0007214546203613281, 0.01532745361328125, 0.0189361572265625, 0.003223419189453125, 0.01287078857421875, 0.0079345703125, 0.04718017578125, 0.1517333984375, 0.005367279052734375, 0.8193359375, 0.007434844970703125, 0.0217132568359375, 0.01165008544921875], "tokens": [284, 273, 32, 33261, 26, 2388, 30, 4576, 293, 334, 320, 719, 1022, 664, 319, 1670, 322, 2043, 10476, 537, 5166, 372, 322, 16095, 30, 8971, 3282, 537, 5166, 664, 319, 372, 2318, 415, 2953, 4763, 3640, 1346, 10647, 372, 322, 3649, 3583, 32, 664, 319, 477, 753, 537, 5909, 3136, 5166]}
{"line_number": 76, "line_type": "original", "code": "  GlobalNamespace(AbstractCompiler compiler, Node externsRoot, Node root) {", "entropy": 1.5986328125, "is_bug_line": false, "sus_score": 0.15097027121927944, "per_token_entropy": [5.2265625, 13.3984375, 2.666015625, 2.2109375, 0.0021457672119140625, 0.0114593505859375, 0.14306640625, 0.372314453125, 0.7939453125, 0.011505126953125, 0.0220184326171875, 0.2410888671875, 0.28125, 0.0163726806640625, 0.0229034423828125, 0.16064453125], "tokens": [225, 37500, 26, 5584, 8115, 8980, 30, 4004, 12098, 101, 4058, 30, 4004, 3051, 27, 301]}
{"line_number": 76, "line_type": "generated", "code": "\n    public boolean apply(Node n) {\n      return (n.getType() == Token.NAME) && newNodes.contains(n);\n    }\n  }\n\n  /**\n   * A traversal that builds the global namespace.\n   */\n  private class BuildGlobalNamespace", "entropy": 0.2763671875, "is_bug_line": false, "sus_score": 0.15097027121927944, "per_token_entropy": [0.4013671875, 1.1142578125, 0.00473785400390625, 0.039794921875, 0.01654052734375, 0.0010271072387695312, 0.134521484375, 0.0007119178771972656, 0.0007920265197753906, 0.07171630859375, 0.7373046875, 1.9521484375, 0.1629638671875, 0.24365234375, 0.994140625, 0.00605010986328125, 0.0137176513671875, 0.01503753662109375, 0.03350830078125, 0.322265625, 0.99560546875, 0.92919921875, 0.32177734375, 1.621246337890625e-05, 0.00017464160919189453, 0.0003857612609863281, 0.0030574798583984375, 0.004451751708984375, 0.268798828125, 0.00937652587890625, 0.0008282661437988281, 0.1226806640625, 0.0014276504516601562, 0.1910400390625, 0.1251220703125, 0.042205810546875, 0.00033354759216308594, 0.95068359375, 1.3359375, 0.1844482421875, 0.54931640625, 0.5927734375, 0.09991455078125, 0.06427001953125, 0.84716796875, 0.1502685546875, 0.10638427734375, 0.04266357421875, 0.1226806640625, 0.03997802734375, 0.0003261566162109375, 0.00016295909881591797], "tokens": [284, 562, 1905, 4871, 26, 1212, 310, 27, 301, 397, 442, 308, 96, 32, 10272, 346, 610, 6512, 32, 2474, 27, 962, 537, 5909, 32, 4752, 26, 96, 293, 284, 320, 334, 320, 719, 1022, 664, 319, 399, 34395, 688, 13963, 322, 3649, 3583, 32, 664, 569, 334, 945, 443, 5238, 21611]}
{"line_number": 47, "line_type": "original", "code": "  private boolean generated = false;", "entropy": 2.2421875, "is_bug_line": false, "sus_score": 0.15097027121927944, "per_token_entropy": [3.943359375, 8.046875, 3.1640625, 0.1553955078125, 0.2197265625, 0.057403564453125, 0.10748291015625], "tokens": [225, 945, 1905, 4723, 280, 901, 45]}
{"line_number": 47, "line_type": "generated", "code": "\n    return nameMap;\n  }\n\n  /**\n   * Gets the node for a given name.\n   *\n   * @param name The name to get the node for.\n   * @return The node for the name, or null if it is not defined.", "entropy": 0.482666015625, "is_bug_line": false, "sus_score": 0.15097027121927944, "per_token_entropy": [0.486083984375, 0.05523681640625, 0.01117706298828125, 0.0007319450378417969, 0.0126953125, 0.175537109375, 0.0009851455688476562, 0.282958984375, 0.19580078125, 0.1734619140625, 0.00026917457580566406, 0.82763671875, 0.666015625, 2.822265625, 1.6875, 1.033203125, 0.79541015625, 0.66357421875, 0.95654296875, 0.404052734375, 0.33056640625, 0.442138671875, 0.004718780517578125, 0.28369140625, 0.15625, 0.2427978515625, 0.66162109375, 0.473388671875, 0.68798828125, 1.3271484375, 0.328125, 0.082275390625, 0.07037353515625, 0.46435546875, 0.2340087890625, 0.204345703125, 0.07012939453125, 0.09356689453125, 0.087890625, 0.38671875, 0.98046875, 0.26025390625, 0.5400390625, 0.3759765625, 0.09039306640625, 0.05877685546875, 0.053924560546875, 1.525390625, 1.3193359375, 0.0791015625, 1.4560546875, 0.4775390625], "tokens": [284, 442, 636, 1208, 45, 334, 320, 719, 1022, 664, 319, 7124, 322, 1541, 436, 312, 2702, 636, 32, 664, 319, 664, 319, 477, 753, 636, 886, 636, 372, 622, 322, 1541, 436, 32, 664, 319, 477, 601, 886, 1541, 436, 322, 636, 30, 556, 744, 415, 561, 438, 646, 3417, 32]}
{"line_number": 50, "line_type": "original", "code": "  private List<Name> globalNames = new ArrayList<Name>();", "entropy": 0.9580078125, "is_bug_line": false, "sus_score": 0.15097027121927944, "per_token_entropy": [2.8671875, 6.94921875, 1.7919921875, 0.0112762451171875, 0.105712890625, 0.0031147003173828125, 0.39794921875, 0.0014467239379882812, 0.33056640625, 0.181396484375, 0.030364990234375, 0.134521484375, 0.0033283233642578125, 0.607421875], "tokens": [225, 945, 1682, 46, 558, 48, 3649, 4109, 280, 537, 5059, 46, 558, 2923]}
{"line_number": 50, "line_type": "generated", "code": "\n    return nameMap;\n  }\n\n  /**\n   * Gets the externs scope.\n   */\n  Scope getExternsScope() {\n    if (!generated) {\n      process();\n    }\n    return externsScope;\n  }\n\n  /**\n   * Gets", "entropy": 0.1990966796875, "is_bug_line": false, "sus_score": 0.15097027121927944, "per_token_entropy": [0.53955078125, 0.04766845703125, 0.017547607421875, 0.002933502197265625, 0.0059051513671875, 0.10223388671875, 0.0004744529724121094, 0.1455078125, 0.193359375, 0.128662109375, 0.00017154216766357422, 0.671875, 0.8642578125, 2.37890625, 0.2113037109375, 0.422607421875, 1.2958984375, 0.413818359375, 0.1722412109375, 0.011260986328125, 0.0421142578125, 0.0014467239379882812, 0.005062103271484375, 1.1920928955078125e-07, 0.08697509765625, 0.040130615234375, 0.00482940673828125, 0.0006694793701171875, 0.01641845703125, 0.329345703125, 0.266845703125, 0.002216339111328125, 0.0036296844482421875, 0.0004401206970214844, 0.001617431640625, 0.0239105224609375, 0.0011854171752929688, 0.00637054443359375, 0.00019299983978271484, 0.1265869140625, 0.07525634765625, 0.01309967041015625, 0.001056671142578125, 0.0005602836608886719, 0.0010786056518554688, 0.0222625732421875, 0.00011110305786132812, 0.10052490234375, 0.27392578125, 0.08740234375, 7.677078247070312e-05, 1.189453125], "tokens": [284, 442, 636, 1208, 45, 334, 320, 719, 1022, 664, 319, 7124, 322, 12098, 101, 4576, 32, 664, 569, 334, 22148, 622, 571, 900, 101, 5504, 346, 301, 284, 415, 1429, 6398, 27, 301, 397, 2164, 473, 284, 320, 284, 442, 12098, 101, 5504, 45, 334, 320, 719, 1022, 664, 319, 7124]}
{"line_number": 53, "line_type": "original", "code": "  private Map<String, Name> nameMap = new HashMap<String, Name>();", "entropy": 0.29833984375, "is_bug_line": false, "sus_score": 0.15097027121927944, "per_token_entropy": [2.662109375, 0.93798828125, 0.6103515625, 0.004390716552734375, 0.004535675048828125, 0.0005512237548828125, 0.022125244140625, 0.0004246234893798828, 0.012481689453125, 0.00052642822265625, 0.117431640625, 0.8095703125, 0.00885009765625, 0.1644287109375, 0.0027446746826171875, 4.756450653076172e-05, 0.00749969482421875, 0.005199432373046875], "tokens": [225, 945, 3516, 46, 652, 30, 3270, 48, 636, 1208, 280, 537, 8322, 46, 652, 30, 3270, 2923]}
{"line_number": 53, "line_type": "generated", "code": "\n\n  /**\n   * Gets a list of all the names in the global namespace.\n   */\n  List<String> getAllNames() {\n    if (!generated) {\n      process();\n    }\n    return allNames;\n  }\n\n  /**\n   * Gets the name", "entropy": 0.330322265625, "is_bug_line": false, "sus_score": 0.15097027121927944, "per_token_entropy": [0.337890625, 0.1756591796875, 0.142822265625, 0.00022423267364501953, 0.87548828125, 1.0908203125, 0.48583984375, 0.01265716552734375, 0.5966796875, 0.279296875, 2.01953125, 1.26953125, 0.2073974609375, 0.1912841796875, 0.265380859375, 1.02734375, 0.203857421875, 0.1407470703125, 0.01470184326171875, 0.1741943359375, 0.003337860107421875, 0.9248046875, 7.081031799316406e-05, 0.8544921875, 0.0008602142333984375, 0.02227783203125, 0.0004968643188476562, 0.027252197265625, 0.28955078125, 0.004215240478515625, 0.00023639202117919922, 0.00010144710540771484, 0.000598907470703125, 0.0005707740783691406, 0.0204620361328125, 0.0002734661102294922, 0.0027618408203125, 2.8014183044433594e-05, 0.0621337890625, 0.318359375, 0.791015625, 0.01904296875, 0.0107879638671875, 0.06329345703125, 0.00010979175567626953, 0.222900390625, 0.11065673828125, 0.06842041015625, 0.0005087852478027344, 0.5517578125, 1.2763671875, 2.01171875], "tokens": [719, 1022, 664, 319, 7124, 312, 1149, 432, 1169, 322, 4467, 328, 322, 3649, 3583, 32, 664, 569, 334, 1682, 46, 652, 48, 16735, 4109, 346, 301, 284, 415, 1429, 6398, 27, 301, 397, 2164, 473, 284, 320, 284, 442, 1169, 4109, 45, 334, 320, 719, 1022, 664, 319, 7124, 322, 636]}
{"line_number": 77, "line_type": "original", "code": "    this.compiler = compiler;", "entropy": 2.408203125, "is_bug_line": false, "sus_score": 0.15097027121927944, "per_token_entropy": [2.080078125, 9.984375, 0.1539306640625, 3.95703125, 0.0261993408203125, 0.63427734375, 0.01885986328125], "tokens": [264, 458, 32, 10199, 280, 8980, 45]}
{"line_number": 77, "line_type": "generated", "code": "\n    @Override\n    public boolean apply(Node n) {\n      return newNodes.contains(n);\n    }\n  }\n\n  /**\n   * A callback that builds the global namespace.\n   */\n  private class BuildGlobalNamespace implements NodeTraversal.Callback {\n\n    private", "entropy": 0.272705078125, "is_bug_line": false, "sus_score": 0.15097027121927944, "per_token_entropy": [0.54736328125, 0.85009765625, 0.0004754066467285156, 0.033660888671875, 0.006931304931640625, 0.004241943359375, 0.050872802734375, 0.0292205810546875, 0.0007576942443847656, 0.2083740234375, 0.0005903244018554688, 0.0008602142333984375, 0.11865234375, 0.546875, 1.130859375, 0.0003459453582763672, 0.007633209228515625, 0.0012845993041992188, 0.000667572021484375, 0.0032100677490234375, 0.11370849609375, 0.00592803955078125, 0.0007181167602539062, 0.07818603515625, 0.0021419525146484375, 0.08721923828125, 0.116943359375, 0.044219970703125, 0.0006375312805175781, 0.94580078125, 1.6435546875, 0.7744140625, 0.90771484375, 0.450927734375, 0.136474609375, 0.0548095703125, 1.0283203125, 0.1593017578125, 0.075439453125, 0.0038661956787109375, 0.09783935546875, 0.053497314453125, 0.00030684471130371094, 0.0002015829086303711, 0.6923828125, 1.15625, 0.313232421875, 0.0325927734375, 0.1043701171875, 0.1041259765625, 0.97265625, 0.4755859375], "tokens": [284, 477, 1788, 284, 562, 1905, 4871, 26, 1212, 310, 27, 301, 397, 442, 537, 5909, 32, 4752, 26, 96, 293, 284, 320, 334, 320, 719, 1022, 664, 319, 399, 3309, 688, 13963, 322, 3649, 3583, 32, 664, 569, 334, 945, 443, 5238, 21611, 4575, 4004, 35699, 32, 3296, 301, 446, 945]}
{"line_number": 78, "line_type": "original", "code": "    this.externsRoot = externsRoot;", "entropy": 2.107421875, "is_bug_line": false, "sus_score": 0.15097027121927944, "per_token_entropy": [3.8359375, 8.1640625, 0.022796630859375, 9.6171875, 0.0284576416015625, 0.6611328125, 0.257568359375, 0.57421875, 0.00379180908203125, 0.004611968994140625, 0.01538848876953125], "tokens": [264, 458, 32, 4318, 101, 4058, 280, 12098, 101, 4058, 45]}
{"line_number": 78, "line_type": "generated", "code": "\n      return false;\n    }\n  }\n\n  /**\n   * A traversal that builds a global namespace.\n   */\n  private class BuildGlobalNamespace extends AbstractPostOrderCallback {\n\n    /** Nodes to be scanned for references to the global namespace */\n    private Set<Node>", "entropy": 0.449462890625, "is_bug_line": false, "sus_score": 0.15097027121927944, "per_token_entropy": [0.1951904296875, 0.294189453125, 0.75390625, 0.0011091232299804688, 0.0440673828125, 0.0003132820129394531, 0.03729248046875, 0.002353668212890625, 0.069091796875, 0.1357421875, 0.0357666015625, 0.0006299018859863281, 0.85400390625, 1.4443359375, 0.1890869140625, 0.5283203125, 1.162109375, 0.348876953125, 0.072265625, 1.3408203125, 0.15869140625, 0.10955810546875, 0.001987457275390625, 0.128173828125, 0.04522705078125, 0.00030517578125, 0.00018227100372314453, 0.28369140625, 0.349853515625, 0.67919921875, 0.0028533935546875, 0.001369476318359375, 0.087646484375, 0.73828125, 1.16796875, 1.96875, 1.0126953125, 3.22265625, 1.666015625, 0.9521484375, 1.005859375, 0.13427734375, 0.203369140625, 0.044647216796875, 0.06256103515625, 0.5205078125, 0.0210418701171875, 0.1611328125, 1.1279296875, 0.00965118408203125, 0.002010345458984375, 6.115436553955078e-05], "tokens": [397, 442, 901, 45, 284, 320, 334, 320, 719, 1022, 664, 319, 399, 34395, 688, 13963, 312, 3649, 3583, 32, 664, 569, 334, 945, 443, 5238, 21611, 2026, 7400, 3160, 2871, 3296, 301, 446, 1022, 32056, 372, 526, 47547, 436, 10647, 372, 322, 3649, 3583, 569, 284, 945, 1756, 46, 1212, 48]}
