{"line_number": 291, "line_type": "original", "code": "    GraphNode<Node, Branch> n = getCfg().getNode(defNode);", "entropy": 2.154296875, "is_bug_line": false, "sus_score": 0.14744195615489714, "per_token_entropy": [5.04296875, 9.8203125, 0.131103515625, 2.541015625, 0.6611328125, 0.5048828125, 6.73046875, 0.1943359375, 1.248046875, 0.62060546875, 3.44921875, 1.1826171875, 4.703125, 0.039581298828125, 0.11962890625, 1.701171875, 0.06036376953125, 0.0209503173828125], "tokens": [264, 6466, 1212, 46, 1212, 30, 23745, 48, 310, 280, 622, 11812, 922, 17699, 26, 589, 1212, 293]}
{"line_number": 291, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.14744195615489714, "per_token_entropy": [], "tokens": []}
{"line_number": 292, "line_type": "original", "code": "    Preconditions.checkNotNull(n);", "entropy": 2.40234375, "is_bug_line": false, "sus_score": 0.14744195615489714, "per_token_entropy": [5.96875, 4.97265625, 0.002017974853515625, 2.873046875, 0.00156402587890625, 2.052734375, 0.93798828125], "tokens": [264, 40596, 32, 42698, 26, 96, 293]}
{"line_number": 292, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.14744195615489714, "per_token_entropy": [], "tokens": []}
{"line_number": 293, "line_type": "original", "code": "    FlowState<ReachingUses> state = n.getAnnotation();", "entropy": 2.203125, "is_bug_line": false, "sus_score": 0.14744195615489714, "per_token_entropy": [7.14453125, 11.4296875, 0.259033203125, 2.251953125, 4.01953125, 0.00019848346710205078, 0.255859375, 0.10546875, 0.491943359375, 0.826171875, 2.845703125, 0.0035686492919921875, 1.1953125, 0.01629638671875], "tokens": [264, 12419, 1078, 46, 435, 9469, 25626, 48, 1603, 280, 310, 32, 45319, 473]}
{"line_number": 293, "line_type": "generated", "code": "\n\n  /**\n   * Gets the reaching definition node for the given variable.\n   *\n   * @param name name of the variable. It can only be names of local variable\n   *     that are not function parameters, escaped variables or variables\n   *     declared", "entropy": 0.305419921875, "is_bug_line": false, "sus_score": 0.14744195615489714, "per_token_entropy": [0.892578125, 0.2479248046875, 0.0987548828125, 0.0009870529174804688, 0.69970703125, 1.1123046875, 2.732421875, 0.000682830810546875, 0.223876953125, 2.783203125, 0.64013671875, 0.52587890625, 0.849609375, 0.53955078125, 1.865234375, 0.39697265625, 0.669921875, 0.32568359375, 0.002475738525390625, 0.115234375, 0.0858154296875, 0.15087890625, 0.51953125, 0.0038166046142578125, 0.0211181640625, 0.0159912109375, 0.09686279296875, 0.1016845703125, 0.007122039794921875, 0.015960693359375, 0.00040841102600097656, 0.026458740234375, 0.0006003379821777344, 0.0040740966796875, 0.01445770263671875, 0.006591796875, 0.0001112222671508789, 0.0213470458984375, 0.0055389404296875, 0.0019197463989257812, 0.0010776519775390625, 0.004070281982421875, 0.0018053054809570312, 0.033538818359375, 0.003936767578125, 0.00299072265625, 0.00455474853515625, 0.0026149749755859375, 0.004634857177734375, 9.202957153320312e-05, 0.0007376670837402344, 0.00016009807586669922], "tokens": [719, 1022, 664, 319, 7124, 322, 316, 9469, 5644, 1541, 436, 322, 2702, 2677, 32, 664, 319, 664, 319, 477, 753, 636, 636, 432, 322, 2677, 32, 2030, 883, 1755, 526, 4467, 432, 2196, 2677, 664, 319, 262, 688, 884, 646, 667, 3377, 30, 31253, 4886, 556, 4886, 664, 319, 262, 17103]}
{"line_number": 294, "line_type": "original", "code": "    return state.getOut().mayUseMap.get(jsScope.getVar(name));", "entropy": 0.80322265625, "is_bug_line": false, "sus_score": 0.14744195615489714, "per_token_entropy": [4.8203125, 1.23046875, 1.1630859375, 0.0697021484375, 2.1796875, 4.4296875, 0.2763671875, 0.54736328125, 0.00974273681640625, 0.025390625, 0.007282257080078125, 0.0308074951171875, 0.0229949951171875, 1.0947265625, 0.00852203369140625, 0.018310546875, 0.0035572052001953125, 0.0015134811401367188, 0.005474090576171875, 0.11456298828125], "tokens": [264, 442, 1603, 32, 371, 1512, 922, 17302, 4391, 1208, 32, 371, 26, 754, 5504, 32, 48086, 26, 426, 876]}
{"line_number": 294, "line_type": "generated", "code": "\n  }", "entropy": 1.5654296875, "is_bug_line": false, "sus_score": 0.14744195615489714, "per_token_entropy": [1.31640625, 1.814453125], "tokens": [334, 320]}
{"line_number": 228, "line_type": "original", "code": "            removeFromUseIfLocal(name.getString(), output);", "entropy": 1.580078125, "is_bug_line": false, "sus_score": 0.1336306209562122, "per_token_entropy": [10.15625, 3.939453125, 0.21142578125, 1.08203125, 0.30322265625, 0.0771484375, 0.1243896484375, 0.41259765625, 2.79296875, 0.93798828125, 0.0184173583984375, 0.447998046875, 0.044281005859375], "tokens": [1468, 3345, 1792, 4391, 2797, 3325, 26, 426, 32, 7069, 1026, 1688, 293]}
{"line_number": 228, "line_type": "generated", "code": "\n  }", "entropy": 0.16796875, "is_bug_line": false, "sus_score": 0.1336306209562122, "per_token_entropy": [0.327392578125, 0.00865936279296875], "tokens": [334, 320]}
{"line_number": 226, "line_type": "original", "code": "          Node name = n.getFirstChild();", "entropy": 2.767578125, "is_bug_line": false, "sus_score": 0.13245323570650439, "per_token_entropy": [7.13671875, 5.51171875, 7.9921875, 2.4375, 1.69140625, 0.0203094482421875, 0.0888671875, 0.0025272369384765625, 0.0232391357421875], "tokens": [2033, 4004, 636, 280, 310, 32, 25657, 2931, 473]}
{"line_number": 226, "line_type": "generated", "code": "\n      use.mayUseMap.remove(var);\n    }\n  }\n\n  /**\n   * Sets the variable for the given name to the node value in the upward\n   * exposed lattice. Do nothing if the variable name is one of the escaped\n   *", "entropy": 0.1119384765625, "is_bug_line": false, "sus_score": 0.13245323570650439, "per_token_entropy": [0.142822265625, 0.1195068359375, 0.000762939453125, 0.021209716796875, 0.00835418701171875, 0.0026111602783203125, 0.00046062469482421875, 0.0288543701171875, 0.0079345703125, 0.006927490234375, 0.043060302734375, 0.054656982421875, 0.0001615285873413086, 0.0064239501953125, 0.0016202926635742188, 0.8310546875, 0.423583984375, 0.09088134765625, 0.0009121894836425781, 1.607421875, 0.09613037109375, 0.20654296875, 0.09002685546875, 0.006641387939453125, 0.00812530517578125, 0.01430511474609375, 0.03338623046875, 0.2181396484375, 0.169921875, 0.039642333984375, 0.0176239013671875, 0.006992340087890625, 0.7470703125, 0.00046515464782714844, 0.061553955078125, 4.410743713378906e-05, 0.033111572265625, 0.004352569580078125, 0.1322021484375, 0.362548828125, 0.006847381591796875, 0.004573822021484375, 0.006191253662109375, 0.005828857421875, 0.0200042724609375, 0.01453399658203125, 0.09295654296875, 0.0009822845458984375, 0.001262664794921875, 0.0156707763671875, 0.0051116943359375, 8.547306060791016e-05], "tokens": [397, 793, 32, 17302, 4391, 1208, 32, 2546, 26, 869, 293, 284, 320, 334, 320, 719, 1022, 664, 319, 9013, 322, 2677, 436, 322, 2702, 636, 372, 322, 1541, 786, 328, 322, 973, 2489, 664, 319, 23447, 46411, 32, 3278, 7553, 415, 322, 2677, 636, 438, 1591, 432, 322, 31253, 664, 319]}
{"line_number": 227, "line_type": "original", "code": "          if (!conditional) {", "entropy": 1.9951171875, "is_bug_line": false, "sus_score": 0.13245323570650439, "per_token_entropy": [7.3203125, 1.4287109375, 1.365234375, 1.7158203125, 0.11163330078125, 0.0266571044921875], "tokens": [2033, 415, 1429, 25065, 27, 301]}
{"line_number": 227, "line_type": "generated", "code": "\n    }\n  }\n\n  /**\n   * Computes the set of variables that are read and written to in the\n   * given node.\n   */\n  private void computeUses(Node n, Node cfgNode, ReachingUses output) {\n    computeUses(n", "entropy": 0.6123046875, "is_bug_line": false, "sus_score": 0.13245323570650439, "per_token_entropy": [0.2239990234375, 0.032958984375, 0.077392578125, 0.00258636474609375, 0.82861328125, 0.451416015625, 0.089599609375, 0.0009136199951171875, 2.224609375, 0.251220703125, 1.60546875, 0.0162200927734375, 0.56787109375, 0.4365234375, 0.78857421875, 2.19140625, 2.779296875, 0.8251953125, 1.171875, 1.2001953125, 0.350341796875, 1.728515625, 0.0006113052368164062, 1.81640625, 1.2666015625, 0.673828125, 0.448974609375, 0.31787109375, 0.007244110107421875, 0.254638671875, 0.390380859375, 0.050689697265625, 2.98828125, 0.267822265625, 0.039581298828125, 0.1859130859375, 0.01107025146484375, 1.0615234375, 0.0478515625, 0.00225067138671875, 0.00830078125, 0.040618896484375, 6.210803985595703e-05, 0.13671875, 0.45849609375, 0.2093505859375, 0.007808685302734375, 0.04718017578125, 0.82421875, 1.6083984375, 0.78955078125, 0.0438232421875], "tokens": [284, 320, 334, 320, 719, 1022, 664, 319, 41932, 322, 739, 432, 4886, 688, 884, 1491, 461, 6638, 372, 328, 322, 664, 319, 2702, 1541, 32, 664, 569, 334, 945, 763, 7596, 25626, 26, 1212, 310, 30, 4004, 8444, 1212, 30, 902, 9469, 25626, 1688, 27, 301, 284, 7596, 25626, 26, 96]}
{"line_number": 232, "line_type": "original", "code": "          if (!n.isAssign()) {", "entropy": 2.798828125, "is_bug_line": false, "sus_score": 0.13245323570650439, "per_token_entropy": [9.953125, 4.01953125, 4.328125, 4.4921875, 0.0235748291015625, 0.36572265625, 1.314453125, 0.6171875, 0.07232666015625], "tokens": [2033, 415, 1429, 96, 32, 297, 9079, 1157, 301]}
{"line_number": 232, "line_type": "generated", "code": "\n   * in the given node.\n   */\n  public List<Node> getNodesThatMayUseName(String name, Node n) {\n    ReachingUses use = computeUses(n);\n    return use.mayUseMap.get(jsScope", "entropy": 0.3955078125, "is_bug_line": false, "sus_score": 0.13245323570650439, "per_token_entropy": [0.21826171875, 0.544921875, 1.3740234375, 0.323486328125, 1.1103515625, 1.283203125, 0.412353515625, 0.366455078125, 0.372314453125, 0.0174407958984375, 0.73779296875, 0.6767578125, 0.007785797119140625, 0.007770538330078125, 0.0001608133316040039, 0.180908203125, 1.81640625, 1.16015625, 0.053985595703125, 0.1263427734375, 0.243408203125, 0.2161865234375, 0.15478515625, 0.00472259521484375, 0.082275390625, 0.0273895263671875, 1.2841796875, 0.0672607421875, 0.002899169921875, 0.1439208984375, 0.83984375, 0.0012760162353515625, 0.0146026611328125, 1.1318359375, 0.040313720703125, 1.3779296875, 1.1220703125, 0.3056640625, 0.0819091796875, 0.1649169921875, 0.09564208984375, 0.87646484375, 0.311279296875, 0.0181427001953125, 0.591796875, 0.01058197021484375, 0.05633544921875, 0.0009007453918457031, 0.0460205078125, 0.0247955322265625, 0.42431640625, 0.0039520263671875], "tokens": [664, 319, 328, 322, 2702, 1541, 32, 664, 569, 334, 562, 1682, 46, 1212, 48, 622, 5909, 4974, 12911, 4391, 558, 26, 652, 636, 30, 4004, 310, 27, 301, 284, 902, 9469, 25626, 793, 280, 7596, 25626, 26, 96, 293, 284, 442, 793, 32, 17302, 4391, 1208, 32, 371, 26, 754, 5504]}
{"line_number": 236, "line_type": "original", "code": "          computeMayUse(name.getNext(), cfgNode, output, conditional);", "entropy": 2.125, "is_bug_line": false, "sus_score": 0.13245323570650439, "per_token_entropy": [8.96875, 12.8828125, 0.321044921875, 0.060028076171875, 0.0936279296875, 2.38671875, 3.52734375, 3.470703125, 0.0675048828125, 0.68896484375, 0.0094146728515625, 0.02288818359375, 0.335205078125, 0.215576171875, 0.9189453125, 0.0297088623046875], "tokens": [2033, 7596, 12911, 4391, 26, 426, 32, 23017, 1026, 8444, 1212, 30, 1688, 30, 21161, 293]}
{"line_number": 236, "line_type": "generated", "code": "\n   * @param defNode a control flow graph node where the variable is defined.\n   */\n  public List<Node> getNodesUsing(String name, Node defNode) {\n    Preconditions.checkArgument(defNode.getParent()!= null);\n   ", "entropy": 0.3818359375, "is_bug_line": false, "sus_score": 0.13245323570650439, "per_token_entropy": [0.1776123046875, 0.27783203125, 0.311767578125, 0.1932373046875, 0.20361328125, 0.00737762451171875, 2.017578125, 1.412109375, 0.031494140625, 0.2054443359375, 0.0248565673828125, 1.3603515625, 0.306640625, 0.6728515625, 0.32958984375, 0.250244140625, 0.37548828125, 0.2218017578125, 0.935546875, 0.0224761962890625, 0.37841796875, 0.6748046875, 0.01073455810546875, 0.004825592041015625, 0.00021910667419433594, 0.138427734375, 1.7783203125, 1.53125, 0.32421875, 0.035552978515625, 0.0018253326416015625, 0.0108184814453125, 0.01493072509765625, 0.0214691162109375, 0.0009775161743164062, 0.0241241455078125, 0.002040863037109375, 0.0721435546875, 1.486328125, 0.0004754066467285156, 0.040740966796875, 0.26025390625, 0.0221405029296875, 1.03125, 0.0018215179443359375, 0.317138671875, 1.044921875, 0.39892578125, 0.1583251953125, 0.0007143020629882812, 0.432373046875, 0.306884765625], "tokens": [664, 319, 477, 753, 665, 1212, 312, 3498, 7290, 3996, 1541, 2154, 322, 2677, 438, 3417, 32, 664, 569, 334, 562, 1682, 46, 1212, 48, 622, 5909, 9515, 26, 652, 636, 30, 4004, 665, 1212, 27, 301, 284, 40596, 32, 1553, 3484, 26, 589, 1212, 32, 18789, 346, 863, 744, 293, 284]}
{"line_number": 237, "line_type": "original", "code": "        } else {", "entropy": 5.578125, "is_bug_line": false, "sus_score": 0.13245323570650439, "per_token_entropy": [6.640625, 9.65625, 5.359375, 0.65966796875], "tokens": [351, 320, 813, 301]}
{"line_number": 237, "line_type": "generated", "code": "\n   *     declared in an outer scope.\n   * @param defNode the node where the value is defined.\n   * @return a list of nodes that may use the value assigned to {@code name}\n   *     in {@code defNode}.\n  ", "entropy": 0.410400390625, "is_bug_line": false, "sus_score": 0.13245323570650439, "per_token_entropy": [0.53955078125, 0.285888671875, 0.75, 1.078125, 0.313720703125, 1.259765625, 0.349365234375, 0.2047119140625, 0.264404296875, 0.0980224609375, 0.19873046875, 0.09423828125, 0.1729736328125, 0.177001953125, 0.00646209716796875, 0.982421875, 1.125, 0.74755859375, 0.1568603515625, 1.52734375, 0.9375, 0.802734375, 0.374755859375, 0.369140625, 0.35791015625, 0.06341552734375, 0.299072265625, 0.6279296875, 0.2259521484375, 0.01519775390625, 0.66748046875, 0.50732421875, 0.2122802734375, 0.9521484375, 0.056640625, 0.235595703125, 0.83837890625, 0.034759521484375, 0.4443359375, 0.0020580291748046875, 0.017791748046875, 0.2352294921875, 1.3583984375, 0.1513671875, 0.058868408203125, 0.45556640625, 0.06793212890625, 0.0006594657897949219, 0.02093505859375, 0.0017681121826171875, 0.403564453125, 0.2216796875], "tokens": [664, 319, 262, 17103, 328, 600, 16162, 4576, 32, 664, 319, 477, 753, 665, 1212, 322, 1541, 2154, 322, 786, 438, 3417, 32, 664, 319, 477, 601, 312, 1149, 432, 5166, 688, 1631, 793, 322, 786, 11012, 372, 3088, 687, 636, 111, 664, 319, 262, 328, 3088, 687, 665, 1212, 4009, 664]}
{"line_number": 217, "line_type": "original", "code": "          computeMayUse(varName.getFirstChild(), cfgNode, output, conditional);", "entropy": 2.171875, "is_bug_line": false, "sus_score": 0.11952286093343936, "per_token_entropy": [9.8828125, 12.5078125, 0.45263671875, 0.046051025390625, 0.2325439453125, 6.5859375, 0.203125, 4.6328125, 0.0011148452758789062, 0.13427734375, 0.83154296875, 0.005054473876953125, 0.031829833984375, 0.66064453125, 0.329833984375, 0.396484375, 0.018341064453125], "tokens": [2033, 7596, 12911, 4391, 26, 48644, 32, 25657, 2931, 1026, 8444, 1212, 30, 1688, 30, 21161, 293]}
{"line_number": 217, "line_type": "generated", "code": "\n   * exposed lattice. Do nothing if the variable name is one of the escaped\n   * variable.\n   */\n  private void removeFromUseIfLocal(String name, ReachingUses use) {\n    Var var = jsScope.getVar(name);\n   ", "entropy": 0.03179931640625, "is_bug_line": false, "sus_score": 0.11952286093343936, "per_token_entropy": [0.451416015625, 0.04736328125, 0.13623046875, 0.00594329833984375, 0.06146240234375, 0.36865234375, 0.005062103271484375, 0.0114593505859375, 0.018890380859375, 0.0113983154296875, 0.02960205078125, 0.01190185546875, 0.047821044921875, 0.0030422210693359375, 0.0041656494140625, 0.024871826171875, 0.0870361328125, 0.00103759765625, 0.0291595458984375, 0.035125732421875, 0.029876708984375, 0.0192413330078125, 0.015655517578125, 0.01181793212890625, 0.013824462890625, 0.0023040771484375, 9.810924530029297e-05, 0.00016617774963378906, 0.0055999755859375, 0.0012836456298828125, 0.0006313323974609375, 0.01197052001953125, 0.003589630126953125, 0.00026297569274902344, 0.01045989990234375, 0.00011050701141357422, 0.00677490234375, 0.033416748046875, 0.002368927001953125, 0.0018568038940429688, 0.03863525390625, 0.021026611328125, 0.002422332763671875, 0.0003528594970703125, 0.0179901123046875, 0.00023734569549560547, 4.661083221435547e-05, 0.00025343894958496094, 0.0005736351013183594, 0.00014698505401611328, 0.0003809928894042969, 0.0088348388671875], "tokens": [664, 319, 23447, 46411, 32, 3278, 7553, 415, 322, 2677, 636, 438, 1591, 432, 322, 31253, 664, 319, 2677, 32, 664, 569, 334, 945, 763, 3345, 1792, 4391, 2797, 3325, 26, 652, 636, 30, 902, 9469, 25626, 793, 27, 301, 284, 7329, 773, 280, 4060, 5504, 32, 48086, 26, 426, 293, 284]}
{"line_number": 218, "line_type": "original", "code": "          if (!conditional) {", "entropy": 3.7578125, "is_bug_line": false, "sus_score": 0.11952286093343936, "per_token_entropy": [8.3515625, 7.8203125, 1.3505859375, 4.8828125, 0.08074951171875, 0.066650390625], "tokens": [2033, 415, 1429, 25065, 27, 301]}
{"line_number": 218, "line_type": "generated", "code": "\n   * variable.\n   */\n  private void removeFromUseIfLocal(String name, ReachingUses use) {\n    Var var = jsScope.getVar(name);\n    if (var == null || var.scope!= jsScope) {\n      return", "entropy": 0.022003173828125, "is_bug_line": false, "sus_score": 0.11952286093343936, "per_token_entropy": [0.415771484375, 0.049346923828125, 0.020355224609375, 0.037628173828125, 0.032440185546875, 0.0176239013671875, 0.03173828125, 0.0163116455078125, 0.0160064697265625, 0.002712249755859375, 0.0001264810562133789, 0.00024199485778808594, 0.0046844482421875, 0.0007843971252441406, 0.0006737709045410156, 0.01103973388671875, 0.00382232666015625, 0.0002739429473876953, 0.007328033447265625, 0.00010514259338378906, 0.0056304931640625, 0.0340576171875, 0.0020427703857421875, 0.0017147064208984375, 0.033355712890625, 0.028228759765625, 0.003177642822265625, 0.0004115104675292969, 0.020172119140625, 0.00020694732666015625, 4.565715789794922e-05, 0.0002808570861816406, 0.0006165504455566406, 0.00017774105072021484, 0.0004336833953857422, 0.01079559326171875, 0.0172119140625, 0.006725311279296875, 0.0028133392333984375, 0.1995849609375, 0.00028395652770996094, 0.057403564453125, 0.006114959716796875, 6.556510925292969e-05, 0.00261688232421875, 0.0015516281127929688, 0.0010175704956054688, 3.1948089599609375e-05, 0.022735595703125, 0.001148223876953125, 0.01226043701171875, 0.0022296905517578125], "tokens": [664, 319, 2677, 32, 664, 569, 334, 945, 763, 3345, 1792, 4391, 2797, 3325, 26, 652, 636, 30, 902, 9469, 25626, 793, 27, 301, 284, 7329, 773, 280, 4060, 5504, 32, 48086, 26, 426, 293, 284, 415, 308, 869, 610, 744, 1276, 773, 32, 3473, 863, 4060, 5504, 27, 301, 397, 442]}
{"line_number": 219, "line_type": "original", "code": "            removeFromUseIfLocal(varName.getString(), output);", "entropy": 1.9990234375, "is_bug_line": false, "sus_score": 0.11952286093343936, "per_token_entropy": [10.5859375, 3.94921875, 0.1304931640625, 0.072265625, 0.2890625, 0.0197906494140625, 0.455078125, 4.27734375, 4.109375, 0.01392364501953125, 0.04541015625, 2.01171875, 0.0256195068359375], "tokens": [1468, 3345, 1792, 4391, 2797, 3325, 26, 48644, 32, 7069, 1026, 1688, 293]}
{"line_number": 219, "line_type": "generated", "code": "\n   */\n  private void removeFromUseIfLocal(String name, ReachingUses use) {\n    Var var = jsScope.getVar(name);\n    if (var == null || var.scope!= jsScope) {\n      return;\n    }\n   ", "entropy": 0.0283203125, "is_bug_line": false, "sus_score": 0.11952286093343936, "per_token_entropy": [0.82568359375, 0.03582763671875, 0.00798797607421875, 0.01517486572265625, 0.01544952392578125, 0.0021915435791015625, 0.0001246929168701172, 0.00018703937530517578, 0.00531768798828125, 0.0006761550903320312, 0.0007152557373046875, 0.01157379150390625, 0.004024505615234375, 0.0004520416259765625, 0.010986328125, 6.222724914550781e-05, 0.0079498291015625, 0.038116455078125, 0.0026760101318359375, 0.0029087066650390625, 0.042327880859375, 0.0265350341796875, 0.002964019775390625, 0.00040841102600097656, 0.023529052734375, 0.0002715587615966797, 5.054473876953125e-05, 0.00033164024353027344, 0.0006661415100097656, 0.00016295909881591797, 0.00038552284240722656, 0.01029205322265625, 0.017669677734375, 0.005950927734375, 0.0025539398193359375, 0.1705322265625, 0.0006361007690429688, 0.050811767578125, 0.007080078125, 3.707408905029297e-05, 0.002620697021484375, 0.0012559890747070312, 0.000995635986328125, 3.886222839355469e-05, 0.0233917236328125, 0.0010156631469726562, 0.01132965087890625, 0.0026950836181640625, 0.000789642333984375, 0.0022182464599609375, 7.867813110351562e-06, 0.07464599609375], "tokens": [664, 569, 334, 945, 763, 3345, 1792, 4391, 2797, 3325, 26, 652, 636, 30, 902, 9469, 25626, 793, 27, 301, 284, 7329, 773, 280, 4060, 5504, 32, 48086, 26, 426, 293, 284, 415, 308, 869, 610, 744, 1276, 773, 32, 3473, 863, 4060, 5504, 27, 301, 397, 442, 45, 284, 320, 284]}
{"line_number": 258, "line_type": "original", "code": "      return;", "entropy": 5.0078125, "is_bug_line": false, "sus_score": 0.1111111111111111, "per_token_entropy": [7.25, 1.177734375, 6.59375], "tokens": [647, 442, 45]}
{"line_number": 258, "line_type": "generated", "code": "\n  /**\n   * Gets a list of nodes that may be using the value assigned to {@code name}\n   * in {@code defNode}. {@code defNode} must be one of the control flow graph\n   * nodes.\n   *\n   * @param", "entropy": 0.133056640625, "is_bug_line": false, "sus_score": 0.1111111111111111, "per_token_entropy": [1.75, 0.8095703125, 0.15625, 0.0010519027709960938, 0.6767578125, 0.476318359375, 0.09161376953125, 0.001895904541015625, 0.1942138671875, 0.052337646484375, 0.1649169921875, 0.111328125, 0.443359375, 0.058990478515625, 0.082763671875, 0.07696533203125, 0.0022296905517578125, 0.07183837890625, 0.0022125244140625, 0.1502685546875, 0.10986328125, 0.05328369140625, 0.0010623931884765625, 0.07666015625, 0.317138671875, 0.0005745887756347656, 0.1474609375, 0.05523681640625, 0.29833984375, 0.2132568359375, 0.00016927719116210938, 0.004528045654296875, 0.0005602836608886719, 0.00029730796813964844, 0.028656005859375, 0.0015726089477539062, 0.0110626220703125, 0.0004062652587890625, 0.0005221366882324219, 0.003849029541015625, 0.00154876708984375, 0.0037288665771484375, 0.0012197494506835938, 1.3828277587890625e-05, 0.0008196830749511719, 0.02008056640625, 0.104248046875, 0.031707763671875, 0.0146942138671875, 0.00103759765625, 0.03857421875, 0.005649566650390625], "tokens": [334, 1022, 664, 319, 7124, 312, 1149, 432, 5166, 688, 1631, 526, 1471, 322, 786, 11012, 372, 3088, 687, 636, 111, 664, 319, 328, 3088, 687, 665, 1212, 4009, 3088, 687, 665, 1212, 111, 2298, 526, 1591, 432, 322, 3498, 7290, 3996, 664, 319, 5166, 32, 664, 319, 664, 319, 477, 753]}
{"line_number": 276, "line_type": "original", "code": "      use.mayUseMap.removeAll(var);", "entropy": 2.064453125, "is_bug_line": false, "sus_score": 0.10783277320343841, "per_token_entropy": [7.10546875, 5.87890625, 0.55712890625, 0.2042236328125, 0.580078125, 0.039031982421875, 0.038238525390625, 5.01953125, 0.072021484375, 2.509765625, 0.72216796875], "tokens": [647, 793, 32, 17302, 4391, 1208, 32, 28797, 26, 869, 293]}
{"line_number": 276, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.10783277320343841, "per_token_entropy": [], "tokens": []}
{"line_number": 213, "line_type": "original", "code": "        Node varName = n.getFirstChild();", "entropy": 2.029296875, "is_bug_line": false, "sus_score": 0.10660035817780521, "per_token_entropy": [7.359375, 4.640625, 3.92578125, 1.3701171875, 0.1644287109375, 2.703125, 0.0474853515625, 0.050994873046875, 0.001708984375, 0.02984619140625], "tokens": [351, 4004, 773, 558, 280, 310, 32, 25657, 2931, 473]}
{"line_number": 213, "line_type": "generated", "code": "\n  }\n\n  /**\n   * Sets the variable for the given name to the node value in the upward\n   * exposed lattice. Do nothing if the variable name is one of the escaped\n   * variable.\n   */\n  private void removeFromUseIfLocal(", "entropy": 0.0728759765625, "is_bug_line": false, "sus_score": 0.10660035817780521, "per_token_entropy": [0.6650390625, 0.0187225341796875, 0.14111328125, 0.21044921875, 0.0743408203125, 0.0007944107055664062, 0.60595703125, 0.029693603515625, 0.042266845703125, 0.07672119140625, 0.00553131103515625, 0.005176544189453125, 0.00431060791015625, 0.038543701171875, 0.83056640625, 0.333740234375, 0.018157958984375, 0.0225982666015625, 0.0026340484619140625, 0.152587890625, 0.0004298686981201172, 0.0302581787109375, 0.0004534721374511719, 0.0038547515869140625, 0.00273895263671875, 0.055938720703125, 0.118408203125, 0.0019388198852539062, 0.0038547515869140625, 0.006900787353515625, 0.00450897216796875, 0.0184173583984375, 0.006134033203125, 0.024383544921875, 0.0005121231079101562, 0.000518798828125, 0.00368499755859375, 0.0016374588012695312, 1.2516975402832031e-05, 0.00447845458984375, 0.0213165283203125, 0.0270843505859375, 0.020904541015625, 0.0152130126953125, 0.012481689453125, 0.0242919921875, 0.0966796875, 0.00031304359436035156, 5.698204040527344e-05, 0.00286102294921875, 0.00017881393432617188, 0.00031828880310058594], "tokens": [334, 320, 719, 1022, 664, 319, 9013, 322, 2677, 436, 322, 2702, 636, 372, 322, 1541, 786, 328, 322, 973, 2489, 664, 319, 23447, 46411, 32, 3278, 7553, 415, 322, 2677, 636, 438, 1591, 432, 322, 31253, 664, 319, 2677, 32, 664, 569, 334, 945, 763, 3345, 1792, 4391, 2797, 3325, 26]}
{"line_number": 214, "line_type": "original", "code": "        Preconditions.checkState(n.hasChildren(), \"AST should be normalized\");", "entropy": 2.4140625, "is_bug_line": false, "sus_score": 0.10660035817780521, "per_token_entropy": [9.1015625, 9.875, 0.00516510009765625, 0.025970458984375, 0.190185546875, 0.1318359375, 3.818359375, 0.1741943359375, 3.50390625, 0.0090484619140625, 0.7685546875, 2.01171875, 5.58203125, 3.1015625, 1.0615234375, 1.201171875, 0.48486328125], "tokens": [351, 40596, 32, 1553, 1078, 26, 96, 32, 2040, 7640, 1026, 313, 4375, 1395, 526, 17666, 724]}
{"line_number": 214, "line_type": "generated", "code": "\n  private void removeFromUseIfLocal(String name, ReachingUses use) {\n    Var var = jsScope.getVar(name);\n    if (var == null || var.scope!= jsScope) {\n      return;\n    }\n    if (!", "entropy": 0.07745361328125, "is_bug_line": false, "sus_score": 0.10660035817780521, "per_token_entropy": [1.6005859375, 0.8505859375, 0.044677734375, 0.259521484375, 0.0007452964782714844, 9.930133819580078e-05, 0.01325225830078125, 0.0006289482116699219, 0.0007719993591308594, 0.00882720947265625, 0.007625579833984375, 0.0002758502960205078, 0.004726409912109375, 3.7550926208496094e-05, 0.0025577545166015625, 0.0953369140625, 0.004016876220703125, 0.0020084381103515625, 0.00991058349609375, 0.03228759765625, 0.005157470703125, 0.0004792213439941406, 0.020965576171875, 0.00018012523651123047, 5.984306335449219e-05, 0.0002815723419189453, 0.0006322860717773438, 0.00010561943054199219, 0.00032138824462890625, 0.00565338134765625, 0.0156097412109375, 0.004978179931640625, 0.0024318695068359375, 0.283203125, 0.00016748905181884766, 0.050506591796875, 0.004489898681640625, 5.316734313964844e-05, 0.0023632049560546875, 0.0017795562744140625, 0.00112152099609375, 7.557868957519531e-05, 0.0117645263671875, 0.0007038116455078125, 0.001888275146484375, 0.00203704833984375, 0.0006742477416992188, 0.0011472702026367188, 7.271766662597656e-06, 0.040863037109375, 0.57568359375, 0.05450439453125], "tokens": [334, 945, 763, 3345, 1792, 4391, 2797, 3325, 26, 652, 636, 30, 902, 9469, 25626, 793, 27, 301, 284, 7329, 773, 280, 4060, 5504, 32, 48086, 26, 426, 293, 284, 415, 308, 869, 610, 744, 1276, 773, 32, 3473, 863, 4060, 5504, 27, 301, 397, 442, 45, 284, 320, 284, 415, 1429]}
{"line_number": 216, "line_type": "original", "code": "        if (varName.hasChildren()) {", "entropy": 2.26953125, "is_bug_line": false, "sus_score": 0.10660035817780521, "per_token_entropy": [7.796875, 2.814453125, 0.67041015625, 4.7734375, 0.5615234375, 3.419921875, 0.0086669921875, 0.30859375, 0.07513427734375], "tokens": [351, 415, 308, 48644, 32, 2040, 7640, 1157, 301]}
{"line_number": 216, "line_type": "generated", "code": "\n   * Sets the variable for the given name to the node value in the upward\n   * exposed lattice. Do nothing if the variable name is one of the escaped\n   * variable.\n   */\n  private void removeFromUseIfLocal(String name, Re", "entropy": 0.057952880859375, "is_bug_line": false, "sus_score": 0.10660035817780521, "per_token_entropy": [0.344482421875, 0.0592041015625, 0.32763671875, 0.027618408203125, 0.04266357421875, 0.0592041015625, 0.005680084228515625, 0.00492095947265625, 0.004901885986328125, 0.051055908203125, 0.69677734375, 0.32080078125, 0.024322509765625, 0.0256500244140625, 0.003643035888671875, 0.10772705078125, 0.0006041526794433594, 0.039031982421875, 0.0008182525634765625, 0.0079803466796875, 0.004550933837890625, 0.06500244140625, 0.2061767578125, 0.0027484893798828125, 0.0033321380615234375, 0.00757598876953125, 0.00524139404296875, 0.01727294921875, 0.00974273681640625, 0.05596923828125, 0.000690460205078125, 0.0008392333984375, 0.00481414794921875, 0.00728607177734375, 1.5020370483398438e-05, 0.0078887939453125, 0.02374267578125, 0.1397705078125, 0.026519775390625, 0.050933837890625, 0.016632080078125, 0.016693115234375, 0.15673828125, 0.0003635883331298828, 0.0001844167709350586, 0.00693511962890625, 0.0008525848388671875, 0.0005159378051757812, 0.00707244873046875, 0.0028743743896484375, 0.00021326541900634766, 0.0092620849609375], "tokens": [664, 319, 9013, 322, 2677, 436, 322, 2702, 636, 372, 322, 1541, 786, 328, 322, 973, 2489, 664, 319, 23447, 46411, 32, 3278, 7553, 415, 322, 2677, 636, 438, 1591, 432, 322, 31253, 664, 319, 2677, 32, 664, 569, 334, 945, 763, 3345, 1792, 4391, 2797, 3325, 26, 652, 636, 30, 902]}
{"line_number": 222, "line_type": "original", "code": "        return;", "entropy": 3.693359375, "is_bug_line": false, "sus_score": 0.10660035817780521, "per_token_entropy": [6.8515625, 4.17578125, 0.047607421875], "tokens": [351, 442, 45]}
{"line_number": 222, "line_type": "generated", "code": "  if (var == null || var.scope!= jsScope) {\n      return;\n    }\n    if (!escaped.contains(var)) {\n      use.mayUseMap.remove(var);\n    }\n  }", "entropy": 0.07342529296875, "is_bug_line": false, "sus_score": 0.10660035817780521, "per_token_entropy": [1.296875, 0.33447265625, 0.01934814453125, 0.0177459716796875, 0.381103515625, 0.00015282630920410156, 0.0843505859375, 0.01323699951171875, 0.00019121170043945312, 0.0116424560546875, 0.0023365020751953125, 0.005603790283203125, 0.0003097057342529297, 0.089599609375, 0.0139007568359375, 0.0797119140625, 0.0139923095703125, 0.0031490325927734375, 0.010284423828125, 0.0005373954772949219, 0.1881103515625, 0.291259765625, 0.069091796875, 0.01708984375, 0.0005726814270019531, 0.0004341602325439453, 0.00010716915130615234, 0.000823974609375, 0.032012939453125, 0.0018186569213867188, 0.0103759765625, 0.06854248046875, 0.00046253204345703125, 0.031768798828125, 0.0162506103515625, 0.004154205322265625, 0.00019121170043945312, 0.0157928466796875, 0.01360321044921875, 0.001247406005859375, 0.06793212890625, 0.046417236328125, 3.612041473388672e-05, 0.043212890625, 0.00405120849609375], "tokens": [225, 415, 308, 869, 610, 744, 1276, 773, 32, 3473, 863, 4060, 5504, 27, 301, 397, 442, 45, 284, 320, 284, 415, 1429, 37349, 32, 4752, 26, 869, 490, 301, 397, 793, 32, 17302, 4391, 1208, 32, 2546, 26, 869, 293, 284, 320, 334, 320]}
{"line_number": 275, "line_type": "original", "code": "    if (!escaped.contains(var)) {", "entropy": 1.09375, "is_bug_line": false, "sus_score": 0.105999788000636, "per_token_entropy": [6.15625, 2.205078125, 1.291015625, 0.9521484375, 0.01111602783203125, 0.00995635986328125, 0.0021381378173828125, 0.1107177734375, 0.14697265625, 0.053741455078125], "tokens": [264, 415, 1429, 37349, 32, 4752, 26, 869, 490, 301]}
{"line_number": 275, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.105999788000636, "per_token_entropy": [], "tokens": []}
{"line_number": 278, "line_type": "original", "code": "  }", "entropy": 2.873046875, "is_bug_line": false, "sus_score": 0.105999788000636, "per_token_entropy": [4.66015625, 1.0869140625], "tokens": [225, 320]}
{"line_number": 278, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.105999788000636, "per_token_entropy": [], "tokens": []}
