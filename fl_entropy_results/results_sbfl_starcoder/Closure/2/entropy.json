{"line_number": 1570, "line_type": "original", "code": "    ObjectType implicitProto = interfaceType.getImplicitPrototype();", "entropy": 2.771484375, "is_bug_line": false, "sus_score": 0.14002800840280097, "per_token_entropy": [6.12109375, 11.6484375, 7.875, 0.050262451171875, 0.09295654296875, 6.94921875, 0.082275390625, 0.126220703125, 0.210205078125, 0.00218963623046875, 0.03167724609375, 0.05133056640625], "tokens": [264, 42562, 10353, 3489, 280, 2568, 620, 32, 371, 24461, 17534, 473]}
{"line_number": 1570, "line_type": "generated", "code": "\n                                        \"dict\", functionPrivateName));\n          } else if (functionType.makesUnrestricted() &&\n                    !proto.isUnrestricted()) {\n            compiler.report(t.makeError(n, CONFLICTING_EXTENDED_TYPE", "entropy": 0.11077880859375, "is_bug_line": false, "sus_score": 0.14002800840280097, "per_token_entropy": [0.87060546875, 0.01554107666015625, 0.12091064453125, 0.004573822021484375, 0.033599853515625, 0.002223968505859375, 1.9788742065429688e-05, 0.008453369140625, 0.064453125, 0.0017805099487304688, 0.81884765625, 0.1806640625, 0.1593017578125, 0.08502197265625, 0.008453369140625, 0.0012388229370117188, 0.2113037109375, 9.930133819580078e-05, 0.97900390625, 0.2386474609375, 0.76220703125, 0.108642578125, 0.41357421875, 0.067626953125, 0.05157470703125, 0.00010454654693603516, 0.0953369140625, 0.09259033203125, 0.0003135204315185547, 0.172119140625, 0.00025153160095214844, 0.020416259765625, 0.01117706298828125, 0.0007276535034179688, 0.0002834796905517578, 0.00033020973205566406, 0.11700439453125, 0.0013284683227539062, 0.0005555152893066406, 0.000278472900390625, 0.00016260147094726562, 0.0190582275390625, 0.00010704994201660156, 0.0218658447265625, 3.0994415283203125e-05, 2.2649765014648438e-06, 2.777576446533203e-05, 9.644031524658203e-05, 0.0005779266357421875, 7.140636444091797e-05, 6.568431854248047e-05, 0.000274658203125], "tokens": [2476, 313, 2665, 392, 667, 6527, 558, 876, 616, 320, 813, 415, 308, 1126, 620, 32, 95, 4062, 1061, 32355, 346, 962, 3486, 653, 1805, 32, 297, 1061, 32355, 1157, 301, 324, 8980, 32, 3734, 26, 102, 32, 2682, 924, 26, 96, 30, 2198, 34033, 935, 1392, 81, 2399, 35368, 81, 2319]}
{"line_number": 1574, "line_type": "original", "code": "      currentPropertyNames = implicitProto.getOwnPropertyNames();", "entropy": 2.3359375, "is_bug_line": true, "sus_score": 0.14002800840280097, "per_token_entropy": [2.97265625, 8.1015625, 3.859375, 0.059600830078125, 0.1373291015625, 5.671875, 0.24462890625, 0.061492919921875, 4.53515625, 0.0020885467529296875, 0.037353515625], "tokens": [647, 1550, 1653, 4109, 280, 10353, 3489, 32, 36661, 4109, 473]}
{"line_number": 1574, "line_type": "generated", "code": "\n      }\n    }\n    visitParameterList(t, n, functionType);\n\n    // Check that this function does not override a non-private property\n    // of the same name.\n    if (functionType.isConstructor()) {\n      ObjectType proto = function", "entropy": 0.755859375, "is_bug_line": true, "sus_score": 0.14002800840280097, "per_token_entropy": [1.525390625, 0.00963592529296875, 0.277587890625, 0.0009584426879882812, 1.015625, 0.99951171875, 0.0582275390625, 0.0004811286926269531, 0.0016641616821289062, 0.003204345703125, 0.00014901161193847656, 0.005279541015625, 0.00885009765625, 0.00887298583984375, 0.00090789794921875, 0.01262664794921875, 1.8837890625, 1.2685546875, 2.1171875, 1.685546875, 2.96875, 0.65234375, 2.44140625, 0.01263427734375, 1.6796875, 0.5947265625, 3.2265625, 0.036407470703125, 1.3837890625, 1.416015625, 0.91796875, 0.58203125, 1.154296875, 1.3642578125, 0.546875, 0.013763427734375, 0.76806640625, 0.29931640625, 1.5009765625, 0.281494140625, 0.356689453125, 0.422607421875, 0.12103271484375, 0.27197265625, 1.1474609375, 0.40869140625, 0.0015821456909179688, 0.060577392578125, 1.4912109375, 2.15625, 0.0989990234375, 0.03961181640625], "tokens": [397, 320, 284, 320, 284, 7725, 3012, 720, 26, 102, 30, 310, 30, 667, 620, 293, 446, 434, 3456, 688, 458, 667, 1957, 646, 2684, 312, 2979, 31, 2055, 2804, 284, 434, 432, 322, 2432, 636, 32, 284, 415, 308, 1126, 620, 32, 297, 7932, 1157, 301, 397, 42562, 3642, 280, 667]}
{"line_number": 1658, "line_type": "original", "code": "        HashMap<String, ObjectType> properties", "entropy": 2.783203125, "is_bug_line": false, "sus_score": 0.14002800840280097, "per_token_entropy": [5.375, 14.703125, 0.038238525390625, 0.1702880859375, 0.0002765655517578125, 1.044921875, 0.045745849609375, 0.888671875], "tokens": [351, 8322, 46, 652, 30, 42562, 48, 4308]}
{"line_number": 1658, "line_type": "generated", "code": "\n          !isExtern)) {\n        report(t, n, CONSTRUCTOR_NOT_CALLABLE, childType.toString());\n        ensureTyped(t, n);\n        return;\n      }\n\n      // Non-native methods should not be called directly\n     ", "entropy": 0.29150390625, "is_bug_line": false, "sus_score": 0.14002800840280097, "per_token_entropy": [1.4365234375, 1.9638671875, 0.12078857421875, 0.003665924072265625, 6.222724914550781e-05, 0.2000732421875, 0.00734710693359375, 0.050018310546875, 0.478515625, 0.03363037109375, 0.0596923828125, 7.140636444091797e-05, 0.0416259765625, 0.005016326904296875, 1.2841796875, 0.128662109375, 0.009124755859375, 0.25048828125, 0.00030541419982910156, 0.1417236328125, 8.225440979003906e-05, 0.159912109375, 0.85546875, 0.06976318359375, 0.026702880859375, 0.002521514892578125, 0.0229339599609375, 0.46044921875, 0.296875, 0.0007395744323730469, 0.00023925304412841797, 0.0010633468627929688, 7.748603820800781e-05, 0.0057525634765625, 0.0036945343017578125, 0.1044921875, 0.0168304443359375, 0.0005178451538085938, 0.00751495361328125, 0.00022399425506591797, 0.1285400390625, 0.72216796875, 2.83203125, 0.0157623291015625, 0.60693359375, 1.3291015625, 0.515625, 0.10272216796875, 0.01059722900390625, 0.01552581787109375, 0.1961669921875, 0.4306640625], "tokens": [2607, 653, 297, 571, 900, 490, 301, 291, 3639, 26, 102, 30, 310, 30, 2198, 43753, 81, 3908, 81, 5038, 2147, 30, 2838, 620, 32, 3108, 1035, 291, 7279, 11851, 26, 102, 30, 310, 293, 291, 442, 45, 397, 320, 1687, 434, 12495, 31, 3723, 4438, 1395, 646, 526, 3823, 7029, 397]}
{"line_number": 1660, "line_type": "original", "code": "        HashMap<String, ObjectType> currentProperties", "entropy": 1.830078125, "is_bug_line": false, "sus_score": 0.14002800840280097, "per_token_entropy": [1.7177734375, 11.4609375, 0.022857666015625, 0.269287109375, 0.00037479400634765625, 1.20703125, 0.00455474853515625, 1.7421875, 0.036834716796875], "tokens": [351, 8322, 46, 652, 30, 42562, 48, 1550, 3289]}
{"line_number": 1660, "line_type": "generated", "code": "\n      }\n\n      if (functionType.isConstructor()) {\n        // Constructors are always called with new.\n        if (!NodeUtil.isCallNew(n)) {\n          report(t, n, CONSTRUCTOR_NOT_CALLABLE, childType.", "entropy": 0.44873046875, "is_bug_line": false, "sus_score": 0.14002800840280097, "per_token_entropy": [1.7724609375, 0.037628173828125, 0.521484375, 1.548828125, 0.317626953125, 0.398681640625, 0.047882080078125, 0.00995635986328125, 0.16015625, 0.62255859375, 0.8125, 0.0013055801391601562, 0.024627685546875, 1.2314453125, 1.1484375, 1.43359375, 2.806640625, 0.84765625, 0.6015625, 1.1279296875, 1.53125, 0.216796875, 0.8984375, 0.1402587890625, 1.498046875, 0.00014221668243408203, 9.799003601074219e-05, 0.58349609375, 0.6123046875, 0.3134765625, 0.509765625, 0.0711669921875, 0.1802978515625, 0.0006923675537109375, 0.01690673828125, 0.1650390625, 0.025665283203125, 0.031280517578125, 7.748603820800781e-05, 0.01108551025390625, 0.00432586669921875, 0.5703125, 0.01861572265625, 0.001041412353515625, 0.0966796875, 6.449222564697266e-05, 0.04351806640625, 0.01505279541015625, 0.1671142578125, 0.11944580078125, 0.006763458251953125, 0.0008168220520019531], "tokens": [397, 320, 1687, 415, 308, 1126, 620, 32, 297, 7932, 1157, 301, 291, 434, 34758, 884, 5182, 3823, 623, 537, 32, 291, 415, 1429, 1212, 1733, 32, 297, 1853, 1812, 26, 96, 490, 301, 616, 3639, 26, 102, 30, 310, 30, 2198, 43753, 81, 3908, 81, 5038, 2147, 30, 2838, 620, 32]}
{"line_number": 1662, "line_type": "original", "code": "        for (ObjectType interfaceType : functionType.getExtendedInterfaces()) {", "entropy": 1.357421875, "is_bug_line": false, "sus_score": 0.14002800840280097, "per_token_entropy": [5.2734375, 4.41796875, 0.00908660888671875, 5.12890625, 2.197265625, 0.27490234375, 0.392578125, 0.794921875, 0.0014429092407226562, 0.1492919921875, 0.1864013671875, 1.5107421875, 0.0010919570922851562, 0.006771087646484375, 0.00736236572265625], "tokens": [351, 436, 308, 15898, 2568, 620, 499, 667, 620, 32, 371, 14861, 12295, 1157, 301]}
{"line_number": 1662, "line_type": "generated", "code": "\n      if (functionType.isConstructor() &&\n          functionType.getReturnType().isInterfaceType() &&\n         !functionType.isNativeObjectType()) {\n        ObjectType interfaceType = functionType.getReturnType().toObjectType();\n        if (interfaceType.", "entropy": 0.41162109375, "is_bug_line": false, "sus_score": 0.14002800840280097, "per_token_entropy": [0.2266845703125, 1.349609375, 0.371337890625, 0.34130859375, 0.052001953125, 0.017120361328125, 0.21044921875, 0.599609375, 0.75439453125, 0.299072265625, 0.6318359375, 1.1201171875, 0.0230255126953125, 0.005046844482421875, 0.91455078125, 1.36328125, 0.06317138671875, 0.271728515625, 1.5537109375, 0.45947265625, 1.0556640625, 0.146728515625, 0.02294921875, 0.66357421875, 0.525390625, 0.044769287109375, 0.0005555152893066406, 0.93896484375, 0.250732421875, 0.005298614501953125, 0.332275390625, 0.0012102127075195312, 0.037200927734375, 2.46484375, 1.32421875, 0.182373046875, 0.0576171875, 0.59619140625, 0.0002282857894897461, 0.0008540153503417969, 0.016937255859375, 0.0014553070068359375, 0.23388671875, 0.0770263671875, 0.0906982421875, 0.0009489059448242188, 0.11572265625, 1.0478515625, 0.34130859375, 0.13525390625, 0.004825592041015625, 0.0626220703125], "tokens": [397, 415, 308, 1126, 620, 32, 297, 7932, 346, 962, 616, 667, 620, 32, 371, 28085, 922, 297, 3041, 620, 346, 962, 616, 653, 1126, 620, 32, 297, 6134, 15898, 1157, 301, 291, 42562, 2568, 620, 280, 667, 620, 32, 371, 28085, 922, 452, 15898, 473, 291, 415, 308, 3337, 620, 32]}
{"line_number": 1663, "line_type": "original", "code": "          currentProperties.clear();", "entropy": 4.31640625, "is_bug_line": false, "sus_score": 0.14002800840280097, "per_token_entropy": [7.6875, 9.6484375, 7.375, 0.393798828125, 0.7890625, 0.0020313262939453125], "tokens": [2033, 1550, 3289, 32, 3815, 473]}
{"line_number": 1663, "line_type": "generated", "code": "\n      if (functionType.hasThisType()) {\n        // TODO(nicksantos): This is a bit of a hack.  We should have a\n        // better way of getting the scope of the function call.\n        Node scope = n.", "entropy": 0.89599609375, "is_bug_line": false, "sus_score": 0.14002800840280097, "per_token_entropy": [0.180419921875, 0.56982421875, 0.21484375, 0.42041015625, 0.01367950439453125, 0.0055694580078125, 0.93505859375, 0.288330078125, 0.05755615234375, 0.57177734375, 0.0017652511596679688, 0.0460205078125, 2.2109375, 1.8798828125, 0.0255584716796875, 1.1376953125, 0.005840301513671875, 5.924701690673828e-05, 0.000457763671875, 0.0143890380859375, 2.421875, 1.44921875, 1.1513671875, 2.703125, 0.697265625, 0.09686279296875, 0.1741943359375, 0.80615234375, 1.33203125, 1.0029296875, 1.369140625, 2.6484375, 0.494384765625, 1.1806640625, 0.00540924072265625, 1.9501953125, 0.2164306640625, 0.72998046875, 2.51171875, 0.4404296875, 3.365234375, 1.5068359375, 0.60302734375, 1.0751953125, 1.826171875, 0.6787109375, 0.25244140625, 1.255859375, 1.3291015625, 0.396728515625, 1.537109375, 0.8193359375], "tokens": [397, 415, 308, 1126, 620, 32, 2040, 2272, 620, 1157, 301, 291, 434, 4296, 26, 96, 6758, 278, 10369, 711, 1348, 438, 312, 3493, 432, 312, 16445, 32, 225, 2688, 1395, 1159, 312, 291, 434, 6085, 3352, 432, 7867, 322, 4576, 432, 322, 667, 1476, 32, 291, 4004, 4576, 280, 310, 32]}
{"line_number": 1664, "line_type": "original", "code": "          checkInterfaceConflictProperties(t, n, functionPrivateName,", "entropy": 3.162109375, "is_bug_line": false, "sus_score": 0.14002800840280097, "per_token_entropy": [6.6328125, 3.66796875, 8.078125, 8.15625, 10.015625, 0.046142578125, 0.54541015625, 0.0121612548828125, 0.181884765625, 0.10931396484375, 0.42724609375, 5.27734375, 0.0142822265625, 1.1171875], "tokens": [2033, 1505, 3041, 19610, 3289, 26, 102, 30, 310, 30, 667, 6527, 558, 30]}
{"line_number": 1664, "line_type": "generated", "code": "\n      if (functionType.hasThisType() &&!NodeUtil.isGet(n.getParent()) &&\n         !NodeUtil.isCallOrNewTarget(n.getParent())) {\n        report(t, n, FUNCTION_NOT_CALLABLE", "entropy": 0.372802734375, "is_bug_line": false, "sus_score": 0.14002800840280097, "per_token_entropy": [0.481689453125, 0.61376953125, 0.26953125, 0.39697265625, 0.0120391845703125, 0.0062408447265625, 0.84521484375, 0.262451171875, 0.07672119140625, 0.642578125, 0.16796875, 1.291015625, 2.162109375, 0.00027441978454589844, 0.0007996559143066406, 0.09869384765625, 0.771484375, 0.07861328125, 0.40673828125, 0.5634765625, 0.032562255859375, 1.3798828125, 0.45263671875, 0.08447265625, 0.1923828125, 0.62841796875, 0.00014925003051757812, 3.0159950256347656e-05, 0.134033203125, 1.52734375, 0.37841796875, 0.0013647079467773438, 0.51318359375, 0.059234619140625, 0.0767822265625, 0.65087890625, 0.0135650634765625, 0.391845703125, 0.00551605224609375, 0.042022705078125, 0.2166748046875, 0.024078369140625, 0.034759521484375, 4.696846008300781e-05, 0.0169830322265625, 0.005176544189453125, 1.5478515625, 0.00034332275390625, 1.8212890625, 5.924701690673828e-05, 0.013641357421875, 0.0001308917999267578], "tokens": [397, 415, 308, 1126, 620, 32, 2040, 2272, 620, 346, 962, 653, 1212, 1733, 32, 297, 936, 26, 96, 32, 18789, 1157, 962, 616, 653, 1212, 1733, 32, 297, 1853, 1527, 1812, 2922, 26, 96, 32, 18789, 5156, 301, 291, 3639, 26, 102, 30, 310, 30, 17747, 81, 3908, 81, 5038, 2147]}
{"line_number": 1647, "line_type": "original", "code": "        if (extInterface.getConstructor() != null", "entropy": 2.98046875, "is_bug_line": false, "sus_score": 0.09016696346674323, "per_token_entropy": [2.6015625, 10.734375, 0.26806640625, 10.7109375, 3.552734375, 0.9775390625, 0.5048828125, 1.1083984375, 1.8154296875, 0.39013671875, 0.1177978515625], "tokens": [351, 415, 308, 407, 3041, 32, 371, 7932, 346, 863, 744]}
{"line_number": 1647, "line_type": "generated", "code": "\n          functionJSDocInfo.isExtern() ) {\n        isExtern = true;\n      }\n\n      if (!isExtern) {\n        int argCount = n.getChildCount() - 1;\n        FunctionType.Builder builder = function", "entropy": 0.353271484375, "is_bug_line": false, "sus_score": 0.09016696346674323, "per_token_entropy": [1.0439453125, 0.3076171875, 0.0283966064453125, 3.814697265625e-06, 2.384185791015625e-07, 0.00022113323211669922, 0.00543212890625, 0.421142578125, 0.10675048828125, 8.225440979003906e-06, 0.73876953125, 0.279541015625, 0.0987548828125, 0.169921875, 0.09027099609375, 9.012222290039062e-05, 1.430511474609375e-06, 0.019561767578125, 0.0109710693359375, 0.00356292724609375, 0.1494140625, 0.001087188720703125, 0.316650390625, 0.97900390625, 1.017578125, 0.1912841796875, 0.0023899078369140625, 7.748603820800781e-06, 0.2259521484375, 0.008026123046875, 0.05560302734375, 3.068359375, 2.380859375, 0.215087890625, 0.01450347900390625, 0.533203125, 8.344650268554688e-05, 0.0489501953125, 3.6716461181640625e-05, 0.031402587890625, 0.0009198188781738281, 0.016937255859375, 0.019073486328125, 0.003082275390625, 0.2066650390625, 2.12109375, 0.73486328125, 1.0576171875, 0.77392578125, 0.3779296875, 0.05999755859375, 0.4306640625], "tokens": [616, 667, 60, 3181, 542, 1120, 32, 297, 571, 900, 346, 829, 301, 291, 438, 571, 900, 280, 861, 45, 397, 320, 1687, 415, 1429, 297, 571, 900, 27, 301, 291, 629, 1638, 1534, 280, 310, 32, 24213, 1534, 346, 429, 225, 35, 45, 291, 4540, 620, 32, 1796, 4906, 280, 667]}
{"line_number": 1653, "line_type": "original", "code": "      }", "entropy": 5.08984375, "is_bug_line": false, "sus_score": 0.09016696346674323, "per_token_entropy": [4.8359375, 5.34375], "tokens": [647, 320]}
{"line_number": 1653, "line_type": "generated", "code": "\n      if (functionType.isConstructor()\n          &&!functionType.isNativeObjectType()\n          &&!isExtern) {\n        report(t, n, CONSTRUCTOR_NOT_CALLABLE, childType.toString());\n        ensureTyped(t", "entropy": 0.242919921875, "is_bug_line": false, "sus_score": 0.09016696346674323, "per_token_entropy": [0.68115234375, 0.666015625, 0.378173828125, 0.607421875, 0.018096923828125, 0.014373779296875, 0.0753173828125, 0.0217132568359375, 0.302490234375, 1.3515625, 0.031494140625, 0.6435546875, 0.443359375, 0.02520751953125, 0.0013532638549804688, 0.47900390625, 0.11212158203125, 0.37353515625, 0.3154296875, 0.07672119140625, 0.006195068359375, 0.599609375, 0.767578125, 0.0190582275390625, 1.430511474609375e-06, 0.316650390625, 0.0021495819091796875, 0.046630859375, 0.99951171875, 0.03338623046875, 0.048858642578125, 0.00011396408081054688, 0.03778076171875, 0.0053253173828125, 1.1298828125, 0.10205078125, 0.0130767822265625, 0.2113037109375, 0.0003027915954589844, 0.08941650390625, 0.00010609626770019531, 0.1380615234375, 0.7080078125, 0.08233642578125, 0.024993896484375, 0.0016946792602539062, 0.017364501953125, 0.35498046875, 0.25927734375, 0.000484466552734375, 0.00028514862060546875, 0.0012178421020507812], "tokens": [397, 415, 308, 1126, 620, 32, 297, 7932, 346, 616, 962, 653, 1126, 620, 32, 297, 6134, 15898, 346, 616, 962, 653, 297, 571, 900, 27, 301, 291, 3639, 26, 102, 30, 310, 30, 2198, 43753, 81, 3908, 81, 5038, 2147, 30, 2838, 620, 32, 3108, 1035, 291, 7279, 11851, 26, 102]}
{"line_number": 1646, "line_type": "original", "code": "      for (ObjectType extInterface : functionType.getExtendedInterfaces()) {", "entropy": 1.3232421875, "is_bug_line": false, "sus_score": 0.04441155916843276, "per_token_entropy": [4.48828125, 5.3515625, 0.01355743408203125, 3.3828125, 5.5078125, 0.041534423828125, 0.1298828125, 0.398193359375, 0.0247039794921875, 0.296630859375, 0.162353515625, 0.0194549560546875, 0.0006852149963378906, 0.007198333740234375, 0.0169525146484375], "tokens": [647, 436, 308, 15898, 1447, 3041, 499, 667, 620, 32, 371, 14861, 12295, 1157, 301]}
{"line_number": 1646, "line_type": "generated", "code": "\n        if (functionJSDocInfo!= null) {\n          isExtern = functionJSDocInfo.isExtern();\n        }\n      }\n      if (isExtern) {\n        // TODO(johnlenz): if the function is a", "entropy": 0.3837890625, "is_bug_line": false, "sus_score": 0.04441155916843276, "per_token_entropy": [0.7236328125, 0.46337890625, 0.033294677734375, 0.09503173828125, 0.06787109375, 3.933906555175781e-06, -0.0, 1.2755393981933594e-05, 0.052001953125, 0.00018489360809326172, 0.69775390625, 0.00341033935546875, 0.0243988037109375, 0.36328125, 0.0003437995910644531, 4.76837158203125e-07, 0.002857208251953125, 0.1917724609375, 0.0096435546875, 0.00015342235565185547, 3.218650817871094e-05, 9.298324584960938e-05, 0.0011968612670898438, 0.07830810546875, 0.007328033447265625, 3.6954879760742188e-06, 0.0289764404296875, 0.08123779296875, 0.00011336803436279297, 0.501953125, 0.07745361328125, 1.443359375, 0.50634765625, 0.52001953125, 0.2298583984375, 0.00565338134765625, 1.0967254638671875e-05, 0.11663818359375, 0.0029735565185546875, 0.05767822265625, 0.94921875, 1.978515625, 0.028167724609375, 1.4208984375, 0.002536773681640625, 0.0015087127685546875, 0.049072265625, 4.359375, 1.041015625, 0.6435546875, 0.6025390625, 2.486328125], "tokens": [291, 415, 308, 1126, 60, 3181, 542, 1120, 863, 744, 27, 301, 616, 438, 571, 900, 280, 667, 60, 3181, 542, 1120, 32, 297, 571, 900, 473, 291, 320, 397, 320, 397, 415, 308, 297, 571, 900, 27, 301, 291, 434, 4296, 26, 25172, 1657, 108, 711, 415, 322, 667, 438, 312]}
{"line_number": 1656, "line_type": "original", "code": "      if (functionType.getExtendedInterfacesCount() > 1) {", "entropy": 2.025390625, "is_bug_line": false, "sus_score": 0.04441155916843276, "per_token_entropy": [3.666015625, 4.91796875, 0.9619140625, 0.6337890625, 0.11016845703125, 0.011566162109375, 0.388427734375, 8.015625, 0.5849609375, 7.25, 0.00614166259765625, 1.27734375, 0.0025539398193359375, 3.212890625, 1.287109375, 0.0770263671875], "tokens": [647, 415, 308, 1126, 620, 32, 371, 14861, 12295, 1534, 346, 848, 225, 35, 27, 301]}
{"line_number": 1656, "line_type": "generated", "code": "\n         !isExtern) {\n        report(t, n, CALL_TO_NON_CTOR, childType.toString());\n        ensureTyped(t, n);\n        return;\n      }\n\n      // If the function is a named function, then it", "entropy": 0.42724609375, "is_bug_line": false, "sus_score": 0.04441155916843276, "per_token_entropy": [0.3974609375, 0.80224609375, 0.517578125, 0.01110076904296875, 3.135204315185547e-05, 0.176025390625, 0.055145263671875, 0.1357421875, 0.6083984375, 0.032745361328125, 0.055389404296875, 0.00010180473327636719, 0.044677734375, 0.005496978759765625, 1.7060546875, 0.060546875, 0.1910400390625, 5.7220458984375e-05, 0.458740234375, 0.018585205078125, 0.48583984375, 0.265625, 0.95458984375, 0.08380126953125, 0.04425048828125, 0.00433349609375, 0.0254364013671875, 0.52099609375, 0.3359375, 0.000698089599609375, 0.00028252601623535156, 0.0011110305786132812, 8.618831634521484e-05, 0.005161285400390625, 0.0028629302978515625, 0.0794677734375, 0.0184173583984375, 0.0011157989501953125, 0.0299224853515625, 0.00014293193817138672, 0.177001953125, 0.66943359375, 2.806640625, 0.84423828125, 0.52978515625, 0.77392578125, 1.2568359375, 2.611328125, 0.398681640625, 1.2119140625, 0.99365234375, 1.80078125], "tokens": [616, 653, 297, 571, 900, 27, 301, 291, 3639, 26, 102, 30, 310, 30, 16084, 81, 1407, 81, 10007, 81, 12829, 30, 2838, 620, 32, 3108, 1035, 291, 7279, 11851, 26, 102, 30, 310, 293, 291, 442, 45, 397, 320, 1687, 434, 1670, 322, 667, 438, 312, 8189, 667, 30, 1615, 561]}
{"line_number": 338, "line_type": "original", "code": "    this(compiler, reverseInterpreter, typeRegistry, null, null,", "entropy": 0.85986328125, "is_bug_line": false, "sus_score": 0.014765074068626156, "per_token_entropy": [2.09375, 3.55859375, 2.142578125, 0.0992431640625, 0.011199951171875, 0.148681640625, 0.0012559890747070312, 0.006038665771484375, 0.08892822265625, 0.0002282857894897461, 0.1785888671875, 3.591796875, 0.0411376953125, 0.8720703125, 0.06561279296875], "tokens": [264, 458, 26, 10199, 30, 10156, 18636, 30, 827, 5378, 30, 744, 30, 744, 30]}
{"line_number": 338, "line_type": "generated", "code": "\n    check(externsRoot, true);\n    check(jsRoot, false);\n    return topScope;\n  }\n\n  /**\n   * Check a parse tree for type errors.\n   *\n   * @param root The root of the parse tree.\n   *", "entropy": 0.3115234375, "is_bug_line": false, "sus_score": 0.014765074068626156, "per_token_entropy": [0.71435546875, 1.53515625, 0.0247650146484375, 0.26806640625, 2.7298927307128906e-05, 0.0222320556640625, 0.010406494140625, 0.0193939208984375, 0.00728607177734375, 0.0367431640625, 0.157958984375, 0.0030727386474609375, 0.0026874542236328125, 4.5299530029296875e-06, 0.000255584716796875, 0.006107330322265625, 0.0007524490356445312, 0.49462890625, 0.0838623046875, 0.00986480712890625, 1.8715858459472656e-05, 0.006805419921875, 0.068115234375, 0.00040793418884277344, 0.2025146484375, 0.58544921875, 0.499267578125, 0.00017201900482177734, 2.25, 0.9033203125, 1.470703125, 0.0980224609375, 1.49609375, 0.74072265625, 0.80029296875, 0.2132568359375, 0.38671875, 0.0777587890625, 0.1448974609375, 0.0007357597351074219, 0.057464599609375, 0.0194549560546875, 1.0, 0.1610107421875, 0.213623046875, 0.0767822265625, 0.0215301513671875, 0.4638671875, 0.00576019287109375, 0.72802734375, 0.040679931640625, 0.075439453125], "tokens": [284, 1505, 26, 4318, 101, 4058, 30, 861, 293, 284, 1505, 26, 754, 4058, 30, 901, 293, 284, 442, 2663, 5504, 45, 334, 320, 719, 1022, 664, 319, 3456, 312, 3185, 4345, 436, 827, 3878, 32, 664, 319, 664, 319, 477, 753, 3051, 886, 3051, 432, 322, 3185, 4345, 32, 664, 319]}
{"line_number": 340, "line_type": "original", "code": "  }", "entropy": 6.7421875, "is_bug_line": false, "sus_score": 0.014765074068626156, "per_token_entropy": [5.0234375, 8.4609375], "tokens": [225, 320]}
{"line_number": 340, "line_type": "generated", "code": "\n        reverseInterpreter,\n        typeRegistry,\n        topScope,\n        scopeCreator,\n        reportMissingOverride,\n        reportUnknownTypes);\n    inference.process(externsRoot, jsRoot);\n    return topScope;\n  }\n\n  /**\n   * Check the AST", "entropy": 0.287841796875, "is_bug_line": false, "sus_score": 0.014765074068626156, "per_token_entropy": [0.77978515625, 0.85400390625, 0.003093719482421875, 0.047393798828125, 0.5810546875, 0.322509765625, 0.00012695789337158203, 0.1341552734375, 0.3203125, 0.4111328125, 4.9948692321777344e-05, 0.1796875, 0.12841796875, 0.361572265625, 0.0008263587951660156, 0.304931640625, 0.166259765625, 0.355712890625, 0.0200958251953125, 0.0246429443359375, 0.045074462890625, 0.09906005859375, 0.01904296875, 0.0207366943359375, 4.5299530029296875e-06, 0.2467041015625, 0.54443359375, 0.381591796875, 0.0009794235229492188, 0.100341796875, 0.056304931640625, 0.02789306640625, 2.6702880859375e-05, 0.03558349609375, 0.01123809814453125, 0.01194000244140625, 0.0001957416534423828, 0.003757476806640625, 0.88720703125, 0.35546875, 0.037017822265625, 1.4066696166992188e-05, 0.00620269775390625, 0.371337890625, 0.002948760986328125, 0.220703125, 0.65283203125, 0.51318359375, 0.0001659393310546875, 2.302734375, 1.0009765625, 2.015625], "tokens": [291, 10156, 18636, 30, 291, 827, 5378, 30, 291, 2663, 5504, 30, 291, 4576, 11143, 30, 291, 3639, 9085, 1788, 30, 291, 3639, 5842, 2424, 293, 284, 22410, 32, 2416, 26, 4318, 101, 4058, 30, 4060, 4058, 293, 284, 442, 2663, 5504, 45, 334, 320, 719, 1022, 664, 319, 3456, 322, 16095]}
{"line_number": 380, "line_type": "original", "code": "    Preconditions.checkState(scopeCreator == null);", "entropy": 2.248046875, "is_bug_line": false, "sus_score": 0.011849472443606932, "per_token_entropy": [1.78125, 12.703125, 0.0043182373046875, 0.0103302001953125, 0.0709228515625, 0.07421875, 5.73828125, 1.615234375, 2.2890625, 0.037872314453125, 0.413330078125], "tokens": [264, 40596, 32, 1553, 1078, 26, 3473, 11143, 610, 744, 293]}
{"line_number": 380, "line_type": "generated", "code": "\n    }\n  }\n\n  /**\n   * This is the main entry point for type checking. It is called by the traversal\n   * code in NodeTraversal.\n   */\n  @Override\n  public void visit(NodeTraversal t, Node n, Node parent) {", "entropy": 0.56689453125, "is_bug_line": false, "sus_score": 0.011849472443606932, "per_token_entropy": [1.515625, 0.07958984375, 0.2548828125, 0.007427215576171875, 0.4970703125, 1.830078125, 0.351318359375, 0.0002219676971435547, 3.3828125, 0.9853515625, 0.7333984375, 0.7216796875, 0.953125, 0.032989501953125, 0.21826171875, 1.2451171875, 0.413818359375, 0.51171875, 1.8720703125, 1.50390625, 0.53662109375, 1.353515625, 0.7158203125, 2.06640625, 0.74658203125, 0.0006656646728515625, 1.716796875, 1.2958984375, 1.05078125, 0.048309326171875, 0.67431640625, 0.33203125, 0.468505859375, 0.0399169921875, 0.2374267578125, 0.0021648406982421875, 0.01169586181640625, 0.00832366943359375, 0.51318359375, 0.23291015625, 0.0009164810180664062, 0.0003597736358642578, 0.258056640625, 0.031463623046875, 6.437301635742188e-05, 0.0002434253692626953, 0.003082275390625, 0.001209259033203125, 0.01654052734375, 0.007762908935546875, 0.0008187294006347656, 0.0017299652099609375], "tokens": [284, 320, 334, 320, 719, 1022, 664, 319, 1348, 438, 322, 2575, 3414, 2260, 436, 827, 11056, 32, 2030, 438, 3823, 810, 322, 34395, 664, 319, 1340, 328, 4004, 35699, 32, 664, 569, 334, 477, 1788, 334, 562, 763, 7725, 26, 1212, 35699, 273, 30, 4004, 310, 30, 4004, 2935, 27, 301]}
{"line_number": 381, "line_type": "original", "code": "    Preconditions.checkState(topScope == null);", "entropy": 1.796875, "is_bug_line": false, "sus_score": 0.011849472443606932, "per_token_entropy": [3.701171875, 6.703125, 0.004535675048828125, 0.0246429443359375, 0.058624267578125, 0.0496826171875, 4.53515625, 0.034637451171875, 2.373046875, 1.0634765625, 1.224609375], "tokens": [264, 40596, 32, 1553, 1078, 26, 1393, 5504, 610, 744, 293]}
{"line_number": 381, "line_type": "generated", "code": "\n  }", "entropy": 0.46533203125, "is_bug_line": false, "sus_score": 0.011849472443606932, "per_token_entropy": [0.85791015625, 0.072998046875], "tokens": [334, 320]}
{"line_number": 383, "line_type": "original", "code": "    Preconditions.checkState(jsRoot.getParent() != null);", "entropy": 1.8525390625, "is_bug_line": false, "sus_score": 0.011849472443606932, "per_token_entropy": [4.83984375, 7.23046875, 0.003787994384765625, 0.024261474609375, 0.0850830078125, 0.060302734375, 6.28515625, 3.642578125, 1.4541015625, 0.7373046875, 0.1793212890625, 1.337890625, 0.0036792755126953125, 0.048919677734375], "tokens": [264, 40596, 32, 1553, 1078, 26, 754, 4058, 32, 18789, 346, 863, 744, 293]}
{"line_number": 383, "line_type": "generated", "code": "\n  @Override\n  public void visit(NodeTraversal t, Node n, Node parent) {\n    if (n.isName()) {\n      checkNoTypeCheckSection(n, true);\n      validator.visitName(n, parent);\n      checkNo", "entropy": 0.31103515625, "is_bug_line": false, "sus_score": 0.011849472443606932, "per_token_entropy": [0.5771484375, 1.0751953125, 0.0018482208251953125, 0.01727294921875, 0.005084991455078125, 0.1409912109375, 0.56787109375, 0.0017004013061523438, 0.0008692741394042969, 0.0199737548828125, 0.0156707763671875, 3.8504600524902344e-05, 0.0006351470947265625, 0.00675201416015625, 0.0017242431640625, 0.07122802734375, 0.007373809814453125, 0.00030159950256347656, 0.00531768798828125, 0.157470703125, 1.4111328125, 0.18603515625, 1.3642578125, 0.0377197265625, 0.56298828125, 1.0673828125, 0.1473388671875, 0.0022640228271484375, 0.037567138671875, 1.4619140625, 1.283203125, 0.0004987716674804688, 8.7738037109375e-05, 0.0001544952392578125, 0.00103759765625, 0.0836181640625, 0.074462890625, 0.30322265625, 0.001979827880859375, 0.5869140625, 1.3759765625, 0.002132415771484375, 0.8515625, 0.317626953125, 0.1209716796875, 0.5546875, 0.379150390625, 0.411865234375, 0.09320068359375, 0.6201171875, 0.15185546875, 0.006397247314453125], "tokens": [334, 477, 1788, 334, 562, 763, 7725, 26, 1212, 35699, 273, 30, 4004, 310, 30, 4004, 2935, 27, 301, 284, 415, 308, 96, 32, 297, 558, 1157, 301, 397, 1505, 2023, 620, 2140, 5426, 26, 96, 30, 861, 293, 397, 13420, 32, 8275, 558, 26, 96, 30, 2935, 293, 397, 1505, 2023]}
{"line_number": 384, "line_type": "original", "code": "    Node externsAndJsRoot = jsRoot.getParent();", "entropy": 2.56640625, "is_bug_line": false, "sus_score": 0.011849472443606932, "per_token_entropy": [3.052734375, 3.201171875, 9.515625, 0.464111328125, 2.53515625, 0.0045318603515625, 0.073974609375, 8.484375, 4.2421875, 0.064697265625, 0.2049560546875, 0.0143585205078125, 1.509765625], "tokens": [264, 4004, 12098, 101, 2185, 10535, 4058, 280, 4060, 4058, 32, 18789, 473]}
{"line_number": 384, "line_type": "generated", "code": "\n      JSType actual, JSType expected) {\n    t.report(diagnosticType, n, actual.toString(), expected.toString());\n  }\n\n  private void report(NodeTraversal t, Node n, DiagnosticType diagnosticType,", "entropy": 0.30859375, "is_bug_line": false, "sus_score": 0.011849472443606932, "per_token_entropy": [1.0068359375, 2.45703125, 0.0009093284606933594, 1.603515625, 0.837890625, 0.276123046875, 2.205371856689453e-05, 0.3251953125, 0.326904296875, 0.005970001220703125, 0.1544189453125, 0.984375, 0.0001633167266845703, 0.265625, 0.0171661376953125, 1.0986328125, 0.006488800048828125, 0.0209503173828125, 0.0233917236328125, 0.004093170166015625, 1.01171875, 0.51953125, 0.0235443115234375, 0.294189453125, 0.0716552734375, 0.016143798828125, 0.0005159378051757812, 0.0137481689453125, 0.07061767578125, 0.0035915374755859375, 0.292724609375, 0.62353515625, 0.352294921875, 0.4228515625, 0.7021484375, 0.1651611328125, 0.2098388671875, 0.002025604248046875, 0.00015592575073242188, 0.057403564453125, 0.00856781005859375, 0.0007238388061523438, 0.0804443359375, 0.0006341934204101562, 0.00714111328125, 0.007171630859375, 0.1287841796875], "tokens": [397, 7750, 620, 4648, 30, 7750, 620, 2799, 27, 301, 284, 273, 32, 3734, 26, 29803, 620, 30, 310, 30, 4648, 32, 3108, 1026, 2799, 32, 3108, 1035, 334, 320, 719, 945, 763, 3639, 26, 1212, 35699, 273, 30, 4004, 310, 30, 32350, 620, 17809, 620, 30]}
{"line_number": 386, "line_type": "original", "code": "    scopeCreator = new MemoizedScopeCreator(new TypedScopeCreator(compiler));", "entropy": 1.78125, "is_bug_line": false, "sus_score": 0.011849472443606932, "per_token_entropy": [3.716796875, 6.1484375, 1.724609375, 5.8203125, 0.70751953125, 4.140625, 0.06390380859375, 0.14599609375, 0.00039839744567871094, 0.002193450927734375, 0.08929443359375, 3.552734375, 3.61328125, 0.0005321502685546875, 0.01202392578125, 0.1937255859375, 1.8466796875, 0.2861328125], "tokens": [264, 4576, 11143, 280, 537, 488, 5943, 1191, 5504, 11143, 26, 890, 21418, 5504, 11143, 26, 10199, 876]}
{"line_number": 386, "line_type": "generated", "code": "\n      t.report(diagnosticType, n, arguments);\n    }\n  }\n\n  private void report(NodeTraversal t, JSDocInfo info, Node n,\n      DiagnosticType diagnosticType, String... arguments) {\n    if (noTypeCheckSection", "entropy": 0.1717529296875, "is_bug_line": false, "sus_score": 0.011849472443606932, "per_token_entropy": [0.2939453125, 0.98046875, 4.208087921142578e-05, 0.306884765625, 0.004974365234375, 0.0792236328125, 0.0025768280029296875, 0.0021457672119140625, 0.023406982421875, 0.0008845329284667969, 0.0228729248046875, 0.004978179931640625, 0.06732177734375, 0.00014901161193847656, 0.046661376953125, 0.0010728836059570312, 0.258056640625, 0.75439453125, 0.5380859375, 0.51611328125, 0.9140625, 0.2027587890625, 0.7177734375, 0.003147125244140625, 8.058547973632812e-05, 1.501953125, 0.00305938720703125, 7.033348083496094e-06, 0.001300811767578125, 0.10064697265625, 0.00365447998046875, 0.80908203125, 0.028472900390625, 0.0021419525146484375, 0.13720703125, 0.007537841796875, 0.0005478858947753906, 0.00746917724609375, 0.00519561767578125, 0.045989990234375, 0.051177978515625, 0.0080108642578125, 0.006683349609375, 0.00022912025451660156, 0.00029468536376953125, 0.042816162109375, 0.08941650390625, 0.041748046875, 0.2900390625, 9.608268737792969e-05, 2.1457672119140625e-06, 9.822845458984375e-05], "tokens": [397, 273, 32, 3734, 26, 29803, 620, 30, 310, 30, 4209, 293, 284, 320, 334, 320, 719, 945, 763, 3639, 26, 1212, 35699, 273, 30, 971, 3181, 542, 1120, 3099, 30, 4004, 310, 30, 397, 32350, 620, 17809, 620, 30, 892, 1179, 4209, 27, 301, 284, 415, 308, 1347, 620, 2140, 5426]}
{"line_number": 387, "line_type": "original", "code": "    topScope = scopeCreator.createScope(externsAndJsRoot, null);", "entropy": 1.6845703125, "is_bug_line": false, "sus_score": 0.011849472443606932, "per_token_entropy": [2.7265625, 9.609375, 0.01361083984375, 2.87890625, 1.0166015625, 0.21630859375, 0.00879669189453125, 1.1474609375, 0.1275634765625, 0.04046630859375, 5.51171875, 0.00891876220703125, 4.0234375, 0.00539398193359375, 0.919921875, 0.3388671875, 1.6630859375, 0.0638427734375], "tokens": [264, 2663, 5504, 280, 4576, 11143, 32, 1297, 5504, 26, 4318, 101, 2185, 10535, 4058, 30, 744, 293]}
{"line_number": 387, "line_type": "generated", "code": "\n    }\n  }\n\n  @Override\n  public void visit(NodeTraversal t, Node n, Node parent) {\n    checkNoTypeCheckSection(n, true);\n\n    switch (n.getType()) {\n      case Token.ASSIGN:\n        visitAssign(", "entropy": 0.1707763671875, "is_bug_line": false, "sus_score": 0.011849472443606932, "per_token_entropy": [0.2259521484375, 0.00688934326171875, 0.05877685546875, 0.001590728759765625, 0.316162109375, 1.2685546875, 0.00555419921875, 0.014068603515625, 0.00372314453125, 0.1529541015625, 0.3505859375, 0.001617431640625, 0.0003910064697265625, 0.0033111572265625, 0.0037384033203125, 6.198883056640625e-06, 0.0005517005920410156, 0.0074615478515625, 0.0012454986572265625, 0.086181640625, 0.0076904296875, 0.00015306472778320312, 0.003932952880859375, 0.1531982421875, 0.66748046875, 0.00782012939453125, 6.103515625e-05, 2.9921531677246094e-05, 4.2319297790527344e-05, 0.0003883838653564453, 0.0189666748046875, 0.0005521774291992188, 0.015716552734375, 0.002025604248046875, 1.142578125, 0.79736328125, 0.005107879638671875, 0.002109527587890625, 5.7220458984375e-06, 0.0027141571044921875, 1.990795135498047e-05, 0.058746337890625, 0.26123046875, 0.0352783203125, 0.002841949462890625, 4.303455352783203e-05, 2.248046875, 0.00206756591796875, 0.13330078125, 0.74365234375, 0.053863525390625, 0.006412506103515625], "tokens": [284, 320, 334, 320, 719, 477, 1788, 334, 562, 763, 7725, 26, 1212, 35699, 273, 30, 4004, 310, 30, 4004, 2935, 27, 301, 284, 1505, 2023, 620, 2140, 5426, 26, 96, 30, 861, 293, 446, 3578, 308, 96, 32, 10272, 1157, 301, 397, 1135, 6512, 32, 25620, 44, 291, 7725, 9079, 26]}
{"line_number": 389, "line_type": "original", "code": "    TypeInferencePass inference = new TypeInferencePass(compiler,", "entropy": 1.810546875, "is_bug_line": false, "sus_score": 0.011849472443606932, "per_token_entropy": [5.76953125, 5.9609375, 3.80078125, 2.80859375, 1.298828125, 1.1123046875, 0.355224609375, 0.01311492919921875, 0.0001800060272216797, 0.0034389495849609375, 0.322998046875, 1.8134765625, 0.267822265625], "tokens": [264, 2768, 29072, 6129, 22410, 280, 537, 2768, 29072, 6129, 26, 10199, 30]}
{"line_number": 389, "line_type": "generated", "code": "\n\n  /**\n   * @param n The node to check.\n   * @param reportMissingProperties Whether to report an error if a property\n   *     doesn't exist on an object.\n   * @param reportUnknownTypes Whether to report an error if a type", "entropy": 0.5830078125, "is_bug_line": false, "sus_score": 0.011849472443606932, "per_token_entropy": [0.6708984375, 1.486328125, 0.4072265625, 0.00018167495727539062, 3.15625, 0.52734375, 1.5615234375, 0.87060546875, 0.51806640625, 0.59912109375, 1.3759765625, 0.49462890625, 0.0992431640625, 0.10809326171875, 0.0164337158203125, 0.330078125, 2.498046875, 0.958984375, 1.802734375, 0.35546875, 0.2401123046875, 0.28662109375, 1.7490234375, 0.0231170654296875, 0.55615234375, 0.654296875, 0.62646484375, 0.94921875, 0.000698089599609375, 0.09185791015625, 1.712890625, 0.0003330707550048828, 0.4091796875, 0.50732421875, 0.52685546875, 0.5615234375, 0.32763671875, 0.1785888671875, 0.1326904296875, 0.016387939453125, 0.165283203125, 0.0950927734375, 0.81640625, 0.0139923095703125, 0.025970458984375, 0.0091094970703125, 0.0341796875, 0.12249755859375, 0.01654052734375, 0.1851806640625, 0.880859375, 0.5673828125], "tokens": [719, 1022, 664, 319, 477, 753, 310, 886, 1541, 372, 1505, 32, 664, 319, 477, 753, 3639, 9085, 3289, 14071, 372, 3639, 600, 1048, 415, 312, 2804, 664, 319, 262, 4163, 1330, 2307, 544, 600, 1300, 32, 664, 319, 477, 753, 3639, 5842, 2424, 14071, 372, 3639, 600, 1048, 415, 312, 827]}
{"line_number": 392, "line_type": "original", "code": "    inference.process(externsRoot, jsRoot);", "entropy": 3.416015625, "is_bug_line": false, "sus_score": 0.011849472443606932, "per_token_entropy": [4.0, 23.34375, 2.5078125, 8.671875, 0.362060546875, 1.8017578125, 0.006587982177734375, 0.15869140625, 0.00817108154296875, 0.04876708984375, 0.0009121894836425781, 0.082275390625], "tokens": [264, 22410, 32, 2416, 26, 4318, 101, 4058, 30, 4060, 4058, 293]}
{"line_number": 392, "line_type": "generated", "code": "\n      NodeTraversal t, Node n, Node parent) {\n    checkNoTypeCheckSection(n, true);\n    return true;\n  }\n\n  @Override\n  public void visit(NodeTraversal t, Node n, Node parent) {\n    if (n", "entropy": 0.145263671875, "is_bug_line": false, "sus_score": 0.011849472443606932, "per_token_entropy": [0.6845703125, 0.00354766845703125, 0.002017974853515625, 0.163330078125, 0.0007314682006835938, 0.07391357421875, 0.003841400146484375, 0.00569915771484375, 0.330078125, 0.00931549072265625, 0.00015151500701904297, 0.01558685302734375, 0.269287109375, 0.91064453125, 0.0060577392578125, 4.076957702636719e-05, 2.1576881408691406e-05, 0.00016021728515625, 0.0008754730224609375, 0.03643798828125, 0.0006532669067382812, 0.0135650634765625, 0.001300811767578125, 0.2939453125, 0.4814453125, 0.214111328125, 0.0002658367156982422, 0.01275634765625, 0.0006775856018066406, 0.083984375, 0.026519775390625, 0.0002894401550292969, 0.00072479248046875, 0.0029888153076171875, 0.0011281967163085938, 0.01061248779296875, 0.0013360977172851562, 0.71826171875, 7.76052474975586e-05, 0.0016469955444335938, 5.519390106201172e-05, 0.0079345703125, 0.00930023193359375, 0.000789642333984375, 0.0294952392578125, 0.003032684326171875, 0.00015115737915039062, 0.006626129150390625, 0.2318115234375, 1.7265625, 0.16552734375, 0.99169921875], "tokens": [397, 4004, 35699, 273, 30, 4004, 310, 30, 4004, 2935, 27, 301, 284, 1505, 2023, 620, 2140, 5426, 26, 96, 30, 861, 293, 284, 442, 861, 45, 334, 320, 719, 477, 1788, 334, 562, 763, 7725, 26, 1212, 35699, 273, 30, 4004, 310, 30, 4004, 2935, 27, 301, 284, 415, 308, 96]}
