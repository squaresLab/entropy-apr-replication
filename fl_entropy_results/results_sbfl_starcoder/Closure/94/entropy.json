{"line_number": 346, "line_type": "original", "code": "    return false;", "entropy": 2.5625, "is_bug_line": true, "sus_score": 0.5477225575051661, "per_token_entropy": [3.951171875, 4.3828125, 1.9140625, 0.0007238388061523438], "tokens": [264, 442, 901, 45]}
{"line_number": 346, "line_type": "generated", "code": "\n      case Token.NE:\n      case Token.OR:\n      case Token.RSH:\n      case Token.SUB:\n      case Token.URSH:\n        return true;\n    }\n    return false;\n  }\n\n  /**\n   * Returns whether the given", "entropy": 0.180908203125, "is_bug_line": true, "sus_score": 0.5477225575051661, "per_token_entropy": [0.6025390625, 0.194580078125, 0.0003726482391357422, 2.6226043701171875e-05, 0.3740234375, 5.245208740234375e-05, 0.0616455078125, 0.001857757568359375, 2.9921531677246094e-05, 5.960464477539062e-07, 0.427490234375, 0.00014221668243408203, 0.1171875, 0.003009796142578125, 3.9577484130859375e-05, 8.499622344970703e-05, 0.1558837890625, 0.0010290145874023438, 1.3113021850585938e-05, 0.06695556640625, 0.0013065338134765625, 2.002716064453125e-05, 9.870529174804688e-05, 0.46533203125, 5.9485435485839844e-05, 0.441162109375, 0.00788116455078125, 9.751319885253906e-05, 0.00042557716369628906, 0.248291015625, 0.000988006591796875, 0.00020074844360351562, 0.477294921875, 0.032684326171875, 0.0200653076171875, 0.00022220611572265625, 0.94287109375, 0.0024738311767578125, 0.38818359375, 0.0100860595703125, 0.0029296875, 0.0004489421844482422, 0.01384735107421875, 0.0009317398071289062, 0.3115234375, 0.53662109375, 0.07666015625, 0.0007100105285644531, 1.330078125, 0.52978515625, 0.9306640625, 0.62353515625], "tokens": [397, 1135, 6512, 32, 3567, 44, 397, 1135, 6512, 32, 758, 44, 397, 1135, 6512, 32, 68, 2514, 44, 397, 1135, 6512, 32, 7100, 44, 397, 1135, 6512, 32, 1263, 2514, 44, 291, 442, 861, 45, 284, 320, 284, 442, 901, 45, 334, 320, 719, 1022, 664, 319, 3759, 4946, 322, 2702]}
{"line_number": 337, "line_type": "original", "code": "        return isValidDefineValue(val.getFirstChild(), defines);", "entropy": 2.80078125, "is_bug_line": true, "sus_score": 0.2581988897471611, "per_token_entropy": [5.328125, 3.078125, 10.453125, 5.81640625, 0.52978515625, 0.03338623046875, 6.19921875, 3.96875, 0.466796875, 0.0017614364624023438, 0.0577392578125, 0.42919921875, 0.05047607421875], "tokens": [351, 442, 20440, 19077, 882, 26, 695, 32, 25657, 2931, 1026, 12706, 293]}
{"line_number": 337, "line_type": "generated", "code": "\n      case Token.GT:\n      case Token.IN:\n      case Token.INSTANCEOF:\n      case Token.LE:\n      case Token.LSH:\n      case Token.LT:\n      case Token.MOD:\n      case Token.MUL:\n      case", "entropy": 0.0609130859375, "is_bug_line": true, "sus_score": 0.2581988897471611, "per_token_entropy": [0.435302734375, 0.0207977294921875, 0.0001575946807861328, 6.4373016357421875e-06, 0.14208984375, 2.002716064453125e-05, 0.10540771484375, 0.0012187957763671875, 0.00029540061950683594, 0.0001558065414428711, 0.41259765625, 0.0014629364013671875, 0.0625, 0.0018033981323242188, 0.00014221668243408203, 0.0002028942108154297, 0.12237548828125, 7.367134094238281e-05, 2.47955322265625e-05, 0.05181884765625, 0.0010051727294921875, 0.0002906322479248047, 0.0002658367156982422, 0.4873046875, 1.5735626220703125e-05, 0.12078857421875, 0.0007452964782714844, 0.0002472400665283203, 6.198883056640625e-06, 0.358642578125, 0.06494140625, 0.0015468597412109375, 0.11065673828125, 0.0008120536804199219, 0.00012731552124023438, 0.0004372596740722656, 0.0037059783935546875, 2.8014183044433594e-05, 0.1336669921875, 0.00098419189453125, 5.614757537841797e-05, 6.318092346191406e-06, 0.332763671875, 0.0002225637435913086, 0.0850830078125, 0.0006618499755859375, 7.450580596923828e-05, 0.00035119056701660156, 0.010589599609375, 2.4199485778808594e-05, 0.09320068359375, 0.0007581710815429688], "tokens": [397, 1135, 6512, 32, 11502, 44, 397, 1135, 6512, 32, 521, 44, 397, 1135, 6512, 32, 12452, 2109, 44, 397, 1135, 6512, 32, 815, 44, 397, 1135, 6512, 32, 62, 2514, 44, 397, 1135, 6512, 32, 11704, 44, 397, 1135, 6512, 32, 6719, 44, 397, 1135, 6512, 32, 12769, 44, 397, 1135]}
{"line_number": 342, "line_type": "original", "code": "        if (val.isQualifiedName()) {", "entropy": 2.634765625, "is_bug_line": false, "sus_score": 0.2581988897471611, "per_token_entropy": [4.6484375, 4.6875, 0.0992431640625, 8.078125, 0.68994140625, 1.6416015625, 3.56640625, 0.2373046875, 0.0718994140625], "tokens": [351, 415, 308, 695, 32, 297, 41340, 1157, 301]}
{"line_number": 342, "line_type": "generated", "code": "\n      case Token.LSH:\n      case Token.LT:\n      case Token.MOD:\n      case Token.MUL:\n      case Token.NE:\n      case Token.OR:\n      case Token.RSH:\n      case Token.SUB:\n      case", "entropy": 0.0675048828125, "is_bug_line": false, "sus_score": 0.2581988897471611, "per_token_entropy": [0.49951171875, 0.0633544921875, 0.0011425018310546875, 6.628036499023438e-05, 0.4658203125, 0.0274200439453125, 0.00042319297790527344, 0.150634765625, 0.0015783309936523438, 0.0004305839538574219, 8.344650268554688e-07, 0.032806396484375, 2.276897430419922e-05, 0.14794921875, 0.0013914108276367188, 0.0002262592315673828, 0.0001074075698852539, 0.08221435546875, 0.0003368854522705078, 0.07275390625, 0.0011739730834960938, 0.00017583370208740234, 6.67572021484375e-06, 0.0155487060546875, 2.8848648071289062e-05, 0.0972900390625, 0.0011997222900390625, 8.690357208251953e-05, 0.00016438961029052734, 0.1527099609375, 2.6226043701171875e-05, 0.1361083984375, 0.0012826919555664062, 3.3736228942871094e-05, 0.00014197826385498047, 0.428955078125, 0.0001900196075439453, 0.16650390625, 0.0025882720947265625, 0.00012445449829101562, 1.5497207641601562e-05, 0.1500244140625, 0.0007863044738769531, 1.8596649169921875e-05, 0.1011962890625, 0.0012969970703125, 2.0503997802734375e-05, 6.878376007080078e-05, 0.3515625, 5.316734313964844e-05, 0.3466796875, 0.0073089599609375], "tokens": [397, 1135, 6512, 32, 62, 2514, 44, 397, 1135, 6512, 32, 11704, 44, 397, 1135, 6512, 32, 6719, 44, 397, 1135, 6512, 32, 12769, 44, 397, 1135, 6512, 32, 3567, 44, 397, 1135, 6512, 32, 758, 44, 397, 1135, 6512, 32, 68, 2514, 44, 397, 1135, 6512, 32, 7100, 44, 397, 1135]}
{"line_number": 343, "line_type": "original", "code": "          return defines.contains(val.getQualifiedName());", "entropy": 3.056640625, "is_bug_line": false, "sus_score": 0.2581988897471611, "per_token_entropy": [6.01171875, 3.0078125, 17.484375, 0.69384765625, 0.1927490234375, 0.02191162109375, 3.642578125, 0.52294921875, 1.9208984375, 0.0071563720703125, 0.134033203125], "tokens": [2033, 442, 12706, 32, 4752, 26, 695, 32, 371, 41340, 1035]}
{"line_number": 343, "line_type": "generated", "code": "\n      case Token.LT:\n      case Token.MOD:\n      case Token.MUL:\n      case Token.NE:\n      case Token.OR:\n      case Token.RSH:\n      case Token.SUB:\n      case Token.URSH:\n        return", "entropy": 0.07635498046875, "is_bug_line": false, "sus_score": 0.2581988897471611, "per_token_entropy": [0.51171875, 0.02203369140625, 0.00012433528900146484, 7.271766662597656e-06, 0.54638671875, 3.0279159545898438e-05, 0.07354736328125, 0.0009016990661621094, 0.00013625621795654297, 9.34600830078125e-05, 0.08978271484375, 0.0005106925964355469, 0.0308380126953125, 0.00077056884765625, 0.00015354156494140625, 7.3909759521484375e-06, 0.01525115966796875, 2.6226043701171875e-05, 0.0494384765625, 0.0007090568542480469, 4.744529724121094e-05, 8.058547973632812e-05, 0.138671875, 2.193450927734375e-05, 0.0310516357421875, 0.0009918212890625, 2.0384788513183594e-05, 3.0040740966796875e-05, 0.436767578125, 0.00015413761138916016, 0.13623046875, 0.00244140625, 0.00010347366333007812, 2.7298927307128906e-05, 0.1572265625, 0.0007152557373046875, 2.2411346435546875e-05, 0.09381103515625, 0.0014896392822265625, 1.633167266845703e-05, 0.00020420551300048828, 0.61181640625, 3.9696693420410156e-05, 0.425537109375, 0.006420135498046875, 0.00010514259338378906, 7.987022399902344e-06, 0.197509765625, 0.0005807876586914062, 0.00022649765014648438, 0.356689453125, 0.028656005859375], "tokens": [397, 1135, 6512, 32, 11704, 44, 397, 1135, 6512, 32, 6719, 44, 397, 1135, 6512, 32, 12769, 44, 397, 1135, 6512, 32, 3567, 44, 397, 1135, 6512, 32, 758, 44, 397, 1135, 6512, 32, 68, 2514, 44, 397, 1135, 6512, 32, 7100, 44, 397, 1135, 6512, 32, 1263, 2514, 44, 291, 442]}
{"line_number": 321, "line_type": "original", "code": "    switch (val.getType()) {", "entropy": 2.349609375, "is_bug_line": true, "sus_score": 0.22677868380553634, "per_token_entropy": [5.828125, 3.56640625, 0.05078125, 8.9296875, 0.3720703125, 0.01129150390625, 0.0016031265258789062, 0.032379150390625], "tokens": [264, 3578, 308, 695, 32, 10272, 1157, 301]}
{"line_number": 321, "line_type": "generated", "code": "\n  /**\n   * Returns whether this is a simple operator token.\n   *\n   * @param type The token type.\n   */\n  static boolean isSimpleOperatorType(int type) {\n    switch (type) {\n      case Token.ADD:\n      case", "entropy": 0.2130126953125, "is_bug_line": true, "sus_score": 0.22677868380553634, "per_token_entropy": [0.28515625, 0.99462890625, 0.2177734375, 0.0003552436828613281, 0.537109375, 0.367431640625, 0.5595703125, 0.3193359375, 0.208740234375, 0.431396484375, 0.334228515625, 1.9638671875, 0.3544921875, 0.178466796875, 0.3349609375, 0.42626953125, 0.001575469970703125, 0.2457275390625, 0.031036376953125, 0.6767578125, 0.1676025390625, 0.206787109375, 0.03472900390625, 0.091796875, 0.0010347366333007812, 0.0288848876953125, 0.0034198760986328125, 0.1993408203125, 0.00716400146484375, 0.0001710653305053711, 0.00024080276489257812, 0.0001823902130126953, 0.00537109375, 0.013031005859375, 0.1959228515625, 0.007442474365234375, 0.0009732246398925781, 0.0009140968322753906, 0.035888671875, 0.262939453125, 0.02227783203125, 0.006923675537109375, 0.0002455711364746094, 0.00449371337890625, 0.047698974609375, 0.06866455078125, 0.00444793701171875, 0.0002741813659667969, 1.171875, 0.0015382766723632812, 0.0198822021484375, 0.0002868175506591797], "tokens": [334, 1022, 664, 319, 3759, 4946, 458, 438, 312, 4281, 4134, 2404, 32, 664, 319, 664, 319, 477, 753, 827, 886, 2404, 827, 32, 664, 569, 334, 907, 1905, 438, 5291, 7145, 620, 26, 410, 827, 27, 301, 284, 3578, 308, 681, 27, 301, 397, 1135, 6512, 32, 5363, 44, 397, 1135]}
{"line_number": 326, "line_type": "original", "code": "        return true;", "entropy": 2.7890625, "is_bug_line": false, "sus_score": 0.08164965809277261, "per_token_entropy": [8.3515625, 0.8505859375, 1.9443359375, 0.0065155029296875], "tokens": [351, 442, 861, 45]}
{"line_number": 326, "line_type": "generated", "code": "\n\n  static boolean isSimpleOperatorType(TokenType type) {\n    switch (type) {\n      case SEMI:\n      case COMMA:\n      case OR:\n      case AND:\n      case BITOR:\n      case BITXOR:\n      case BITAND:", "entropy": 0.25537109375, "is_bug_line": false, "sus_score": 0.08164965809277261, "per_token_entropy": [0.7646484375, 1.0791015625, 0.03515625, 0.015625, 0.0677490234375, 0.0272216796875, 0.02691650390625, 0.005039215087890625, 1.4970703125, 0.312255859375, 0.0006594657897949219, 0.0007925033569335938, 0.133544921875, 0.30810546875, 0.0181884765625, 0.0006976127624511719, 0.01641845703125, 0.0084228515625, 0.1783447265625, 0.1002197265625, 2.845703125, 1.232421875, 0.07342529296875, 0.001804351806640625, 0.414306640625, 0.0059356689453125, 0.361328125, 3.0159950256347656e-05, 2.8848648071289062e-05, 0.30712890625, 0.00998687744140625, 2.3515625, 0.00032210350036621094, 0.056915283203125, 0.003353118896484375, 0.0154266357421875, 2.181529998779297e-05, 0.2352294921875, 0.007740020751953125, 0.66064453125, 0.010711669921875, 0.0002117156982421875, 0.006855010986328125, 0.000354766845703125, 0.00238037109375, 0.04620361328125, 4.76837158203125e-06, 0.0034580230712890625, 0.0006866455078125, 0.00482940673828125, 0.0225830078125, 6.079673767089844e-06], "tokens": [719, 907, 1905, 438, 5291, 7145, 620, 26, 27579, 827, 27, 301, 284, 3578, 308, 681, 27, 301, 397, 1135, 358, 4547, 59, 44, 397, 1135, 19531, 1400, 44, 397, 1135, 1878, 44, 397, 1135, 3114, 44, 397, 1135, 20542, 758, 44, 397, 1135, 20542, 42417, 44, 397, 1135, 20542, 3349, 44]}
{"line_number": 1485, "line_type": "original", "code": "    return (parent.getType() == Token.ASSIGN && parent.getFirstChild() == n) ||", "entropy": 1.6015625, "is_bug_line": false, "sus_score": 0.049844478627922684, "per_token_entropy": [3.58984375, 6.515625, 9.140625, 3.859375, 0.29248046875, 0.2005615234375, 0.0140533447265625, 0.0638427734375, 0.00209808349609375, 0.0009927749633789062, 1.662109375, 1.46484375, 1.5810546875, 0.0154571533203125, 1.1015625, 0.00016188621520996094, 0.052642822265625, 0.0219879150390625, 1.3779296875, 0.5986328125, 2.05859375], "tokens": [264, 442, 308, 2544, 32, 10272, 346, 610, 6512, 32, 25620, 962, 2935, 32, 25657, 2931, 346, 610, 310, 27, 1276]}
{"line_number": 1485, "line_type": "generated", "code": "\n      case Token.RSH: return \">>\";\n      case Token.GE: return \">=\";\n      case Token.GT: return \">\";\n      case Token.INSTANCEOF: return \"instanceof\";\n      case Token.ADD: return \"+\";\n     ", "entropy": 0.09173583984375, "is_bug_line": false, "sus_score": 0.049844478627922684, "per_token_entropy": [0.71142578125, 0.1839599609375, 0.0010004043579101562, 0.00019371509552001953, 1.404296875, 0.0030612945556640625, 0.0015506744384765625, 0.0078887939453125, 0.0008678436279296875, 0.0011358261108398438, 0.2264404296875, 0.0714111328125, 0.004489898681640625, 0.00010585784912109375, 0.0002994537353515625, 0.27294921875, 3.4928321838378906e-05, 0.0004467964172363281, 0.0005087852478027344, 2.574920654296875e-05, 0.0001703500747680664, 0.01324462890625, 0.0007538795471191406, 0.00013113021850585938, 6.377696990966797e-05, 0.0009751319885253906, 1.609325408935547e-05, 0.00018656253814697266, 0.0019779205322265625, 0.00028228759765625, 0.319091796875, 0.041229248046875, 0.00011515617370605469, 5.6624412536621094e-05, 0.68701171875, 8.380413055419922e-05, 0.0003218650817871094, 0.001674652099609375, 0.005405426025390625, 0.0105438232421875, 0.00023055076599121094, 0.0015802383422851562, 0.2344970703125, 0.06109619140625, 0.00020968914031982422, 9.703636169433594e-05, 0.473876953125, 0.00030803680419921875, 0.003177642822265625, 0.0006871223449707031, 0.0001138448715209961, 0.0164031982421875], "tokens": [397, 1135, 6512, 32, 68, 2514, 44, 442, 313, 2005, 866, 397, 1135, 6512, 32, 3055, 44, 442, 9120, 347, 45, 397, 1135, 6512, 32, 11502, 44, 442, 313, 7857, 397, 1135, 6512, 32, 12452, 2109, 44, 442, 313, 2386, 1028, 866, 397, 1135, 6512, 32, 5363, 44, 442, 6757, 866, 397]}
{"line_number": 1047, "line_type": "original", "code": "    return n.getType() == Token.EXPR_RESULT", "entropy": 1.4609375, "is_bug_line": false, "sus_score": 0.04794633014853841, "per_token_entropy": [5.52734375, 3.552734375, 1.107421875, 0.0275115966796875, 0.72998046875, 0.01082611083984375, 0.09259033203125, 0.04052734375, 0.0034580230712890625, 6.4296875, 0.00018143653869628906, 0.00655364990234375], "tokens": [264, 442, 310, 32, 10272, 346, 610, 6512, 32, 17793, 81, 6383]}
{"line_number": 1047, "line_type": "generated", "code": "\n  static Node maybeGetLoopBody(Node n) {\n    if (isLoopStructure(n)) {\n      return n.getLastChild().getLastChild();\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Determines whether the given", "entropy": 0.216796875, "is_bug_line": false, "sus_score": 0.04794633014853841, "per_token_entropy": [0.337646484375, 0.05963134765625, 0.038787841796875, 1.2275390625, 0.732421875, 0.169189453125, 0.458984375, 0.00945281982421875, 0.0027675628662109375, 0.0023212432861328125, 0.0021305084228515625, 0.00832366943359375, 0.253173828125, 0.97998046875, 0.24951171875, 0.42578125, 0.0947265625, 0.006946563720703125, 0.0006999969482421875, 0.00034117698669433594, 0.093017578125, 0.007442474365234375, 0.09503173828125, 0.393310546875, 0.10198974609375, 0.00041222572326660156, 0.039337158203125, 0.00013875961303710938, 1.4306640625, 0.66259765625, 0.0023822784423828125, 0.092529296875, 0.0306549072265625, 0.0002455711364746094, 1.0546875, 0.06658935546875, 0.01309967041015625, 0.00727081298828125, 0.002086639404296875, 0.0007271766662597656, 0.0049285888671875, 5.447864532470703e-05, 0.026275634765625, 0.00202178955078125, 0.325439453125, 0.074462890625, 0.0296478271484375, 0.0007734298706054688, 1.2412109375, 0.077392578125, 0.2049560546875, 0.134521484375], "tokens": [334, 907, 4004, 8762, 936, 7497, 3050, 26, 1212, 310, 27, 301, 284, 415, 308, 297, 7497, 8634, 26, 96, 490, 301, 397, 442, 310, 32, 20197, 2931, 922, 20197, 2931, 473, 284, 320, 813, 301, 397, 442, 744, 45, 284, 320, 334, 320, 719, 1022, 664, 319, 34450, 4946, 322, 2702]}
{"line_number": 854, "line_type": "original", "code": "      case Token.NEG:    return 13;", "entropy": 2.884765625, "is_bug_line": false, "sus_score": 0.03856149436398495, "per_token_entropy": [5.04296875, 0.94482421875, 0.0210113525390625, 0.0062408447265625, 8.4921875, 0.034271240234375, 6.6015625, 0.5556640625, 7.26953125, 0.376220703125, 5.21484375, 0.060089111328125], "tokens": [647, 1135, 6512, 32, 25531, 44, 264, 442, 225, 35, 37, 45]}
{"line_number": 854, "line_type": "generated", "code": "\n    }\n    return false;\n  }\n\n  static boolean isIncDecOp(Node n) {\n    switch (n.getType()) {\n      case Token.INC:\n      case Token.DEC:\n        return true;\n      default:\n        return false;\n   ", "entropy": 0.154296875, "is_bug_line": false, "sus_score": 0.03856149436398495, "per_token_entropy": [0.7333984375, 0.08538818359375, 0.11724853515625, 0.021881103515625, 0.00701141357421875, 0.0007548332214355469, 0.01025390625, 0.0016937255859375, 0.18505859375, 0.53125, 0.1947021484375, 0.0423583984375, 2.794921875, 0.354736328125, 0.0810546875, 0.0012636184692382812, 0.08050537109375, 0.007457733154296875, 0.004467010498046875, 0.0008106231689453125, 0.0135650634765625, 0.293701171875, 0.00948333740234375, 0.0008234977722167969, 0.00010907649993896484, 0.0006432533264160156, 0.525390625, 0.0157012939453125, 1.3818359375, 0.007099151611328125, 0.008697509765625, 0.0003781318664550781, 0.01904296875, 0.00406646728515625, 0.02044677734375, 8.90493392944336e-05, 8.094310760498047e-05, 5.245208740234375e-05, 0.0002651214599609375, 0.0013866424560546875, 0.1285400390625, 0.0048370361328125, 0.003936767578125, 0.0002646446228027344, 0.257568359375, 0.030609130859375, 0.00176239013671875, 0.0211181640625, 0.0042266845703125, 0.00627899169921875, 0.0002818107604980469, 0.004467010498046875], "tokens": [284, 320, 284, 442, 901, 45, 334, 320, 719, 907, 1905, 438, 16476, 13774, 3397, 26, 1212, 310, 27, 301, 284, 3578, 308, 96, 32, 10272, 1157, 301, 397, 1135, 6512, 32, 16177, 44, 397, 1135, 6512, 32, 14221, 44, 291, 442, 861, 45, 397, 1244, 44, 291, 442, 901, 45, 284]}
{"line_number": 1589, "line_type": "original", "code": "    return has(node, new MatchNodeType(type), traverseChildrenPred);", "entropy": 3.974609375, "is_bug_line": false, "sus_score": 0.03301391004002389, "per_token_entropy": [5.13671875, 0.57470703125, 9.4296875, 6.26953125, 8.078125, 0.98583984375, 6.55859375, 5.56640625, 5.859375, 0.1812744140625, 7.15625, 1.4267578125, 4.58203125, 0.10137939453125, 0.611328125, 1.083984375], "tokens": [264, 442, 1401, 26, 1251, 30, 537, 12253, 24581, 26, 681, 471, 29046, 7640, 7903, 293]}
{"line_number": 1589, "line_type": "generated", "code": "\n  }\n\n  /**\n   * Gets a collection of VAR nodes that are children of the current scope.\n   */\n  private static Collection<Node> getVarsDeclaredInBranch(Node n) {\n    Collection<Node> vars = Lists.newArrayList();", "entropy": 0.321044921875, "is_bug_line": false, "sus_score": 0.03301391004002389, "per_token_entropy": [0.36083984375, 0.0028705596923828125, 0.1395263671875, 0.11260986328125, 0.032073974609375, 0.00040435791015625, 0.99169921875, 1.34765625, 1.65234375, 0.0232696533203125, 0.92333984375, 0.66259765625, 0.75, 0.51416015625, 1.728515625, 0.03436279296875, 0.5400390625, 1.1220703125, 0.1004638671875, 0.5517578125, 0.052978515625, 0.193115234375, 0.0005350112915039062, 0.213623046875, 0.0006690025329589844, 0.026123046875, 0.0007028579711914062, 0.004207611083984375, 1.049041748046875e-05, 0.00984954833984375, 0.007534027099609375, 0.0098114013671875, 0.0016622543334960938, 0.09173583984375, 0.0010271072387695312, 0.006778717041015625, 0.3779296875, 0.0012979507446289062, 0.0008211135864257812, 0.501953125, 1.2724609375, 0.000514984130859375, 0.00872039794921875, 1.9431114196777344e-05, 0.7373046875, 0.0283203125, 0.80322265625, 0.005279541015625, 0.056365966796875, 0.03448486328125], "tokens": [334, 320, 719, 1022, 664, 319, 7124, 312, 4491, 432, 10244, 5166, 688, 884, 5713, 432, 322, 1550, 4576, 32, 664, 569, 334, 945, 907, 7376, 46, 1212, 48, 622, 12034, 22050, 383, 10094, 26, 1212, 310, 27, 301, 284, 7376, 46, 1212, 48, 14447, 280, 25163, 32, 41668, 473]}
{"line_number": 1497, "line_type": "original", "code": "    if (node.getType() == Token.STRING && parent.getType() == Token.OBJECTLIT) {", "entropy": 1.3515625, "is_bug_line": false, "sus_score": 0.031588048837738844, "per_token_entropy": [2.16796875, 10.1171875, 0.1365966796875, 6.30078125, 0.208984375, 0.1973876953125, 0.0261993408203125, 0.07708740234375, 0.0181732177734375, 0.0235748291015625, 3.025390625, 2.318359375, 3.193359375, 0.2205810546875, 0.268310546875, 0.0052490234375, 0.1318359375, 0.0116424560546875, 0.00623321533203125, 2.4609375, 0.045867919921875, 0.103515625, 0.028717041015625], "tokens": [264, 415, 308, 1251, 32, 10272, 346, 610, 6512, 32, 5203, 962, 2935, 32, 10272, 346, 610, 6512, 32, 8460, 22532, 27, 301]}
{"line_number": 1497, "line_type": "generated", "code": "    }\n    return null;\n  }\n\n  /**\n   * @param node The node\n   * @return Whether the node is a string literal\n   */\n  static boolean isStringLiteral(Node node) {\n    return node.isString();\n  }\n\n  /**\n   *", "entropy": 0.38134765625, "is_bug_line": false, "sus_score": 0.031588048837738844, "per_token_entropy": [2.177734375, 0.057159423828125, 0.3447265625, 0.036865234375, 0.006603240966796875, 0.00039505958557128906, 0.044219970703125, 0.0019817352294921875, 0.42529296875, 0.1376953125, 0.0411376953125, 0.0003662109375, 2.505859375, 0.91748046875, 1.8701171875, 1.1201171875, 0.427490234375, 1.3388671875, 0.0161590576171875, 0.004421234130859375, 0.3837890625, 0.449951171875, 0.421142578125, 0.2337646484375, 0.5234375, 0.5380859375, 2.423828125, 0.603515625, 0.88916015625, 0.0127410888671875, 0.002716064453125, 0.06842041015625, 0.0023212432861328125, 0.00638580322265625, 0.1904296875, 0.00441741943359375, 0.0009975433349609375, 0.00335693359375, 0.0019283294677734375, 0.00029349327087402344, 0.033905029296875, 0.146484375, 0.07220458984375, 0.0634765625, 0.951171875, 0.1416015625, 0.0352783203125, 0.000339508056640625, 0.10125732421875, 0.039093017578125, 0.0144195556640625, 0.0005393028259277344], "tokens": [264, 320, 284, 442, 744, 45, 334, 320, 719, 1022, 664, 319, 477, 753, 1541, 886, 1541, 664, 319, 477, 601, 14071, 322, 1541, 438, 312, 802, 10652, 664, 569, 334, 907, 1905, 438, 46001, 26, 1212, 1541, 27, 301, 284, 442, 1541, 32, 35690, 473, 334, 320, 719, 1022, 664, 319]}
{"line_number": 1508, "line_type": "original", "code": "    return false;", "entropy": 5.1953125, "is_bug_line": false, "sus_score": 0.031588048837738844, "per_token_entropy": [1.8759765625, 7.94921875, 10.953125, 0.00893402099609375], "tokens": [264, 442, 901, 45]}
{"line_number": 1508, "line_type": "generated", "code": "\n      case Token.VOID: return \"void\";\n      case Token.TYPEOF: return \"typeof\";\n      case Token.DELPROP: return \"delete\";\n      case Token.GETPROP: return \".\";\n      case Token.GETELEM: return \"[\";", "entropy": 0.199951171875, "is_bug_line": false, "sus_score": 0.031588048837738844, "per_token_entropy": [1.263671875, 1.220703125, 0.00812530517578125, 0.001811981201171875, 2.66796875, 0.0153045654296875, 0.11492919921875, 0.056640625, 0.0167236328125, 0.037872314453125, 0.11883544921875, 0.037200927734375, 0.00020885467529296875, 1.5735626220703125e-05, 0.810546875, 8.034706115722656e-05, 0.00010073184967041016, 0.0005855560302734375, 0.0005316734313964844, 0.00015223026275634766, 0.0006875991821289062, 0.059478759765625, 0.01416015625, 0.00011086463928222656, 1.8835067749023438e-05, 0.6552734375, 0.0242462158203125, 8.249282836914062e-05, 0.004680633544921875, 0.00045228004455566406, 0.0177154541015625, 0.008819580078125, 0.1656494140625, 0.021209716796875, 0.00019240379333496094, 4.780292510986328e-05, 1.49609375, 0.03851318359375, 0.008819580078125, 0.06524658203125, 1.208984375, 0.0002048015594482422, 0.09149169921875, 0.0058441162109375, 0.0004439353942871094, 4.756450653076172e-05, 0.0810546875, 0.00615692138671875, 0.00032782554626464844, 0.004512786865234375, 0.00756072998046875, 0.038482666015625], "tokens": [397, 1135, 6512, 32, 13572, 44, 442, 313, 1117, 866, 397, 1135, 6512, 32, 2319, 2109, 44, 442, 313, 5139, 866, 397, 1135, 6512, 32, 17024, 15262, 44, 442, 313, 2560, 866, 397, 1135, 6512, 32, 2788, 15262, 44, 442, 4939, 866, 397, 1135, 6512, 32, 2788, 32313, 44, 442, 7185, 866]}
{"line_number": 2175, "line_type": "original", "code": "    } else if (isObjectLitKey(node, parent)) {", "entropy": 1.818359375, "is_bug_line": false, "sus_score": 0.031588048837738844, "per_token_entropy": [2.521484375, 5.2734375, 1.345703125, 0.494873046875, 0.049163818359375, 8.0859375, 0.10430908203125, 0.58544921875, 0.25146484375, 2.314453125, 3.30078125, 0.67236328125, 0.282958984375, 0.1636962890625], "tokens": [264, 320, 813, 415, 308, 37704, 27472, 953, 26, 1251, 30, 2935, 490, 301]}
{"line_number": 2175, "line_type": "generated", "code": "\n   */\n  static String getSourceName(Node n) {\n    if (n == null) {\n      return null;\n    }\n    String name = n.getString();\n    if (name!= null) {\n      return name;\n    }\n    return get", "entropy": 0.206298828125, "is_bug_line": false, "sus_score": 0.031588048837738844, "per_token_entropy": [0.53076171875, 0.4345703125, 0.0260467529296875, 0.111083984375, 0.0361328125, 0.07073974609375, 0.1904296875, 0.0040740966796875, 0.0257110595703125, 0.002735137939453125, 0.0013561248779296875, 0.0030803680419921875, 0.00908660888671875, 0.11749267578125, 1.7822265625, 0.043212890625, 0.10107421875, 0.86865234375, 0.0009746551513671875, 0.0279083251953125, 0.0157012939453125, 0.02313232421875, 0.0260772705078125, 0.1466064453125, 8.380413055419922e-05, 0.007598876953125, 0.00020802021026611328, 0.6689453125, 0.74951171875, 0.84521484375, 0.031707763671875, 0.15478515625, 0.0002741813659667969, 0.06402587890625, 0.1611328125, 0.0699462890625, 0.293212890625, 0.100830078125, 0.0906982421875, 0.308837890625, 0.0002321004867553711, 0.06634521484375, 0.00298309326171875, 0.01441192626953125, 0.042938232421875, 0.00637054443359375, 0.004444122314453125, 0.0121002197265625, 0.0009555816650390625, 0.6513671875, 1.2822265625, 0.498046875], "tokens": [664, 569, 334, 907, 892, 622, 2028, 558, 26, 1212, 310, 27, 301, 284, 415, 308, 96, 610, 744, 27, 301, 397, 442, 744, 45, 284, 320, 284, 892, 636, 280, 310, 32, 7069, 473, 284, 415, 308, 426, 863, 744, 27, 301, 397, 442, 636, 45, 284, 320, 284, 442, 622]}
{"line_number": 2178, "line_type": "original", "code": "      return convention.isConstant(name);", "entropy": 3.0859375, "is_bug_line": false, "sus_score": 0.031588048837738844, "per_token_entropy": [6.09765625, 0.489013671875, 11.4375, 0.033447265625, 4.046875, 0.267333984375, 2.951171875, 1.2470703125, 1.2138671875], "tokens": [647, 442, 20636, 32, 297, 5465, 26, 426, 293]}
{"line_number": 2178, "line_type": "generated", "code": "\n    return sourceName;\n  }\n\n  /**\n   * @param n The node.\n   * @return The source file property on the node or its ancestors.\n   */\n  static String getSourceFile(Node n) {\n    String sourceFile = null;", "entropy": 0.1231689453125, "is_bug_line": false, "sus_score": 0.031588048837738844, "per_token_entropy": [0.253662109375, 0.3095703125, 0.017425537109375, 2.4437904357910156e-05, 0.019989013671875, 0.005435943603515625, 0.0010976791381835938, 0.1617431640625, 0.135498046875, 0.142822265625, 0.0006356239318847656, 0.853515625, 0.1705322265625, 0.2607421875, 0.2509765625, 0.310791015625, 0.1102294921875, 0.00341033935546875, 0.002079010009765625, 0.0003228187561035156, 0.1295166015625, 0.37939453125, 1.0048828125, 0.288330078125, 0.54345703125, 0.0203857421875, 0.00299835205078125, 0.00872802734375, 0.033050537109375, 0.00885772705078125, 0.0059356689453125, 3.5762786865234375e-05, 0.07427978515625, 0.0088348388671875, 0.007274627685546875, 0.0009055137634277344, 0.0300750732421875, 0.1751708984375, 0.0004181861877441406, 0.046142578125, 0.0026111602783203125, 0.0005488395690917969, 0.0015649795532226562, 0.0004334449768066406, 0.0005841255187988281, 0.0276947021484375, 0.12188720703125, 0.0517578125, 0.32763671875, 0.0040435791015625, 0.0859375, 0.0006098747253417969], "tokens": [284, 442, 1914, 558, 45, 334, 320, 719, 1022, 664, 319, 477, 753, 310, 886, 1541, 32, 664, 319, 477, 601, 886, 1914, 803, 2804, 544, 322, 1541, 556, 2819, 600, 48023, 32, 664, 569, 334, 907, 892, 622, 17900, 26, 1212, 310, 27, 301, 284, 892, 1914, 974, 280, 744, 45]}
{"line_number": 2047, "line_type": "original", "code": "    return false;", "entropy": 4.17578125, "is_bug_line": false, "sus_score": 0.03158332209274327, "per_token_entropy": [2.28125, 11.6875, 2.41015625, 0.328125], "tokens": [264, 442, 901, 45]}
{"line_number": 2047, "line_type": "generated", "code": "\n   * the predicate.\n   */\n  static void visitPostOrder(Node node,\n                      Visitor vistor,\n                      Predicate<Node> traverseChildrenPred) {\n    if (traverseChildrenPred.apply(node)) {\n      for (Node c = node.", "entropy": 0.062164306640625, "is_bug_line": false, "sus_score": 0.03158332209274327, "per_token_entropy": [0.8623046875, 0.339111328125, 0.02142333984375, 0.00910186767578125, 0.030731201171875, 0.035247802734375, 0.0224761962890625, 0.040008544921875, 0.01898193359375, 0.00821685791015625, 0.0017681121826171875, 0.00524139404296875, 0.0004181861877441406, 0.002246856689453125, 0.1339111328125, 0.046875, 0.00030040740966796875, 1.1220703125, 0.014923095703125, 0.1781005859375, 7.784366607666016e-05, 0.0008363723754882812, 0.02728271484375, 0.00205230712890625, 0.0004737377166748047, 0.00016832351684570312, 1.3828277587890625e-05, 0.00511932373046875, 0.0007772445678710938, 0.00124359130859375, 0.0022258758544921875, 0.01251220703125, 0.1983642578125, 0.06097412109375, 0.00508880615234375, 0.0031032562255859375, 2.3484230041503906e-05, 1.5497207641601562e-05, 0.0003154277801513672, 0.00014209747314453125, 7.176399230957031e-05, 0.0006909370422363281, 0.0004107952117919922, 0.00030493736267089844, 0.00783538818359375, 0.001766204833984375, 0.00031065940856933594, 0.00028443336486816406, 0.00450897216796875, 0.00021982192993164062, 0.0003418922424316406, 0.00044035911560058594], "tokens": [664, 319, 322, 14094, 32, 664, 569, 334, 907, 763, 7725, 3160, 2871, 26, 1212, 1541, 30, 2855, 34982, 354, 10971, 30, 2855, 23426, 46, 1212, 48, 29046, 7640, 7903, 27, 301, 284, 415, 308, 33261, 7640, 7903, 32, 4699, 26, 1251, 490, 301, 397, 436, 308, 1212, 281, 280, 1541, 32]}
{"line_number": 2171, "line_type": "original", "code": "    String name = node.getString();", "entropy": 2.1640625, "is_bug_line": false, "sus_score": 0.031581746982546406, "per_token_entropy": [7.23046875, 5.80859375, 0.247802734375, 0.056976318359375, 3.916015625, 0.0243988037109375, 0.0178070068359375, 0.015350341796875], "tokens": [264, 892, 636, 280, 1541, 32, 7069, 473]}
{"line_number": 2171, "line_type": "generated", "code": "\n  /**\n   * Get the JSDocInfo for a function.\n   */\n  static JSDocInfo getFunctionInfo(Node n) {\n    Preconditions.checkState(n.getType() == Token.FUNCTION);\n    JSDocInfo fnInfo", "entropy": 0.1697998046875, "is_bug_line": false, "sus_score": 0.031581746982546406, "per_token_entropy": [0.69140625, 0.2279052734375, 0.2607421875, 0.00064849853515625, 1.6953125, 0.118408203125, 0.783203125, 0.0005049705505371094, 0.0003192424774169922, 0.06024169921875, 0.08856201171875, 0.25634765625, 1.4365234375, 1.0302734375, 0.03839111328125, 0.0479736328125, 0.01012420654296875, 0.056671142578125, 0.1019287109375, 0.0001360177993774414, 7.271766662597656e-06, 0.0005292892456054688, 0.04718017578125, 0.548828125, 0.1854248046875, 0.156982421875, 0.17529296875, 0.1317138671875, 0.1168212890625, 0.003719329833984375, 0.032379150390625, 0.07952880859375, 3.0517578125e-05, 0.0002543926239013672, 0.027984619140625, 0.0012483596801757812, 0.01464080810546875, 0.00019788742065429688, 0.01479339599609375, 7.152557373046875e-05, 0.0007572174072265625, 0.0002684593200683594, 4.267692565917969e-05, 0.007049560546875, 0.0246429443359375, 0.068603515625, 0.256591796875, 0.00011181831359863281, 1.1920928955078125e-07, 6.651878356933594e-05, 0.0269317626953125, 0.0015020370483398438], "tokens": [334, 1022, 664, 319, 1390, 322, 971, 3181, 542, 1120, 436, 312, 667, 32, 664, 569, 334, 907, 971, 3181, 542, 1120, 622, 2447, 1120, 26, 1212, 310, 27, 301, 284, 40596, 32, 1553, 1078, 26, 96, 32, 10272, 346, 610, 6512, 32, 9842, 293, 284, 971, 3181, 542, 1120, 2771, 1120]}
{"line_number": 2172, "line_type": "original", "code": "    if (parent.getType() == Token.GETPROP &&", "entropy": 1.2822265625, "is_bug_line": false, "sus_score": 0.031581746982546406, "per_token_entropy": [5.921875, 2.484375, 0.1175537109375, 2.08203125, 0.42138671875, 0.146728515625, 0.004436492919921875, 0.0167236328125, 0.0009303092956542969, 0.0004978179931640625, 3.4609375, 0.391845703125, 1.6259765625], "tokens": [264, 415, 308, 2544, 32, 10272, 346, 610, 6512, 32, 2788, 15262, 962]}
{"line_number": 2172, "line_type": "generated", "code": "\n  /**\n   * @param n A CALL node\n   * @return The function object associated with the call, or null if the\n   *     call is not to a function.\n   */\n  static Node getFunctionObject(Node n) {\n    if (", "entropy": 0.58544921875, "is_bug_line": false, "sus_score": 0.031581746982546406, "per_token_entropy": [0.58203125, 0.360595703125, 0.347900390625, 0.0009746551513671875, 1.544921875, 0.51171875, 1.0693359375, 0.84619140625, 2.865234375, 0.58935546875, 0.57373046875, 0.01971435546875, 0.00606536865234375, 0.11199951171875, 1.2265625, 1.1943359375, 1.59765625, 3.712890625, 0.01079559326171875, 0.39306640625, 0.73828125, 1.5517578125, 0.6533203125, 0.11175537109375, 0.3642578125, 1.4345703125, 0.86865234375, 0.0005669593811035156, 0.265380859375, 1.37109375, 0.47119140625, 0.54931640625, 1.0908203125, 0.032196044921875, 0.252685546875, 0.59423828125, 0.08319091796875, 0.08514404296875, 0.01151275634765625, 0.1534423828125, 0.275390625, 0.048248291015625, 0.310791015625, 0.10931396484375, 0.05853271484375, 0.002628326416015625, 0.006015777587890625, 0.00473785400390625, 0.0010938644409179688, 0.0273895263671875, 1.1875, 0.1607666015625], "tokens": [334, 1022, 664, 319, 477, 753, 310, 399, 16084, 1541, 664, 319, 477, 601, 886, 667, 1300, 5746, 623, 322, 1476, 30, 556, 744, 415, 322, 664, 319, 262, 1476, 438, 646, 372, 312, 667, 32, 664, 569, 334, 907, 4004, 622, 2447, 959, 26, 1212, 310, 27, 301, 284, 415, 308]}
{"line_number": 2041, "line_type": "original", "code": "    for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {", "entropy": 0.45849609375, "is_bug_line": false, "sus_score": 0.03138824102871723, "per_token_entropy": [4.56640625, 4.42578125, 0.072509765625, 0.081787109375, 0.1251220703125, 0.061004638671875, 0.20166015625, 0.01284027099609375, 0.256591796875, 0.00334930419921875, 0.0268096923828125, 0.0780029296875, 0.0028228759765625, 0.001712799072265625, 0.0196990966796875, 0.067626953125, 0.0032215118408203125, 0.022430419921875, 0.004253387451171875, 0.0035953521728515625, 0.01116943359375, 0.03582763671875], "tokens": [264, 436, 308, 1212, 281, 280, 1541, 32, 25657, 2931, 473, 281, 863, 744, 45, 281, 280, 281, 32, 23017, 1157, 301]}
{"line_number": 2041, "line_type": "generated", "code": "\n      }\n    }\n  }\n\n  /**\n   * A post-order traversal, calling Vistor.visit for each child matching\n   * the predicate.\n   */\n  static void visitPostOrder(Node node,\n                      Visitor vistor,\n                      Predicate<Node>", "entropy": 0.0679931640625, "is_bug_line": false, "sus_score": 0.03138824102871723, "per_token_entropy": [0.23828125, 0.2451171875, 0.055999755859375, 0.00040650367736816406, 0.08197021484375, 0.0007424354553222656, 0.27734375, 0.1397705078125, 0.033233642578125, 0.0012636184692382812, 0.3134765625, 0.71875, 0.0157012939453125, 0.002044677734375, 0.00388336181640625, 0.0209808349609375, 0.00757598876953125, 0.1142578125, 7.236003875732422e-05, 0.00034809112548828125, 0.0025157928466796875, 0.011474609375, 0.0167083740234375, 0.02142333984375, 0.0113372802734375, 0.0151519775390625, 0.0009245872497558594, 0.0014514923095703125, 0.004856109619140625, 0.0235443115234375, 0.01042938232421875, 0.00739288330078125, 0.005512237548828125, 0.00820159912109375, 0.001354217529296875, 0.000713348388671875, 0.0011663436889648438, 0.0003840923309326172, 0.0009746551513671875, 0.09173583984375, 0.01250457763671875, 7.128715515136719e-05, 0.87060546875, 0.0072479248046875, 0.1331787109375, 3.981590270996094e-05, 9.5367431640625e-05, 0.0044097900390625, 0.0008292198181152344, 9.143352508544922e-05, 8.296966552734375e-05, 0.00016248226165771484], "tokens": [397, 320, 284, 320, 334, 320, 719, 1022, 664, 319, 399, 2364, 31, 1174, 34395, 30, 8276, 676, 10971, 32, 8275, 436, 2504, 2838, 9215, 664, 319, 322, 14094, 32, 664, 569, 334, 907, 763, 7725, 3160, 2871, 26, 1212, 1541, 30, 2855, 34982, 354, 10971, 30, 2855, 23426, 46, 1212, 48]}
{"line_number": 2037, "line_type": "original", "code": "    if (!traverseChildrenPred.apply(node)) {", "entropy": 0.53955078125, "is_bug_line": false, "sus_score": 0.03134965682110384, "per_token_entropy": [3.02734375, 1.1982421875, 1.853515625, 0.1802978515625, 0.00091552734375, 0.0029621124267578125, 0.017242431640625, 0.01158905029296875, 0.0025653839111328125, 0.1063232421875, 0.01538848876953125, 0.061737060546875], "tokens": [264, 415, 1429, 33261, 7640, 7903, 32, 4699, 26, 1251, 490, 301]}
{"line_number": 2037, "line_type": "generated", "code": "\n  }\n\n  /**\n   * A pre-order traversal, calling Vistor.visit for each child matching\n   * the predicate.\n   */\n  static void visitPreOrder(Node node, Visitor vistor) {\n    visitPreOrder(node, vistor", "entropy": 0.091064453125, "is_bug_line": false, "sus_score": 0.03134965682110384, "per_token_entropy": [1.2255859375, 0.0084381103515625, 0.2275390625, 0.141845703125, 0.042572021484375, 0.001071929931640625, 0.237548828125, 0.7783203125, 0.00464630126953125, 0.0012607574462890625, 0.009307861328125, 0.085693359375, 0.0865478515625, 0.12322998046875, 6.413459777832031e-05, 0.00043964385986328125, 0.0012989044189453125, 0.015167236328125, 0.0126190185546875, 0.115966796875, 0.2509765625, 0.0178985595703125, 0.0006957054138183594, 0.005466461181640625, 0.0318603515625, 0.1025390625, 0.051422119140625, 0.02191162109375, 0.0049285888671875, 0.01335906982421875, 0.0090179443359375, 0.0014810562133789062, 0.406982421875, 0.0001977682113647461, 0.019989013671875, 0.0640869140625, 0.0285797119140625, 0.00018298625946044922, 0.291259765625, 0.10687255859375, 0.00021088123321533203, 0.01126861572265625, 0.0007839202880859375, 0.0209197998046875, 0.01678466796875, 0.002140045166015625, 0.00012636184692382812, 0.0006947517395019531, 0.10308837890625, 0.0001823902130126953, 0.030731201171875, 4.76837158203125e-07], "tokens": [334, 320, 719, 1022, 664, 319, 399, 1406, 31, 1174, 34395, 30, 8276, 676, 10971, 32, 8275, 436, 2504, 2838, 9215, 664, 319, 322, 14094, 32, 664, 569, 334, 907, 763, 7725, 2626, 2871, 26, 1212, 1541, 30, 34982, 354, 10971, 27, 301, 284, 7725, 2626, 2871, 26, 1251, 30, 354, 10971]}
{"line_number": 2033, "line_type": "original", "code": "    if (pred.apply(node)) {", "entropy": 1.146484375, "is_bug_line": false, "sus_score": 0.03125381539589969, "per_token_entropy": [4.453125, 3.11328125, 0.67236328125, 1.7744140625, 0.0340576171875, 0.024139404296875, 0.007564544677734375, 1.0849609375, 0.0294189453125, 0.27685546875], "tokens": [264, 415, 308, 8293, 32, 4699, 26, 1251, 490, 301]}
{"line_number": 2033, "line_type": "generated", "code": "\n  static void visit(Node n, Visitor v, Predicate<Node> pred) {\n    if (pred.apply(n)) {\n      v.visit(n);\n    }\n\n    for (Node c = n.getFirstChild(); c!= null;", "entropy": 0.13720703125, "is_bug_line": false, "sus_score": 0.03125381539589969, "per_token_entropy": [0.8134765625, 0.6142578125, 0.2030029296875, 0.01256561279296875, 0.14501953125, 0.1722412109375, 0.7451171875, 0.00390625, 0.44873046875, 0.17529296875, 0.2257080078125, 0.1328125, 0.006565093994140625, 0.002147674560546875, 0.00019228458404541016, 0.86376953125, 0.20458984375, 0.037872314453125, 0.5556640625, 0.7119140625, 0.25048828125, 0.138671875, 0.0095367431640625, 0.003448486328125, 0.00022351741790771484, 0.0015544891357421875, 0.0059967041015625, 0.0041046142578125, 0.0186309814453125, 0.005859375, 0.0006318092346191406, 0.0005664825439453125, 0.0008263587951660156, 0.0012731552124023438, 0.0013990402221679688, 0.0182952880859375, 0.0006899833679199219, 0.446533203125, 0.0955810546875, 0.00168609619140625, 0.0017099380493164062, 0.036529541015625, 0.003398895263671875, 0.0016584396362304688, 7.62939453125e-05, 0.0019369125366210938, 0.000247955322265625, 0.002178192138671875, 0.001789093017578125, 0.0006237030029296875, 0.0007600784301757812, 0.004055023193359375], "tokens": [334, 907, 763, 7725, 26, 1212, 310, 30, 34982, 354, 30, 23426, 46, 1212, 48, 4626, 27, 301, 284, 415, 308, 8293, 32, 4699, 26, 96, 490, 301, 397, 354, 32, 8275, 26, 96, 293, 284, 320, 446, 436, 308, 1212, 281, 280, 310, 32, 25657, 2931, 473, 281, 863, 744, 45]}
{"line_number": 2197, "line_type": "original", "code": "      info = parent.getJSDocInfo();", "entropy": 1.7373046875, "is_bug_line": false, "sus_score": 0.02930579881759053, "per_token_entropy": [7.64453125, 7.84375, 0.2666015625, 3.056640625, 0.03277587890625, 0.2086181640625, 0.00846099853515625, 4.410743713378906e-05, 2.86102294921875e-06, 0.00011742115020751953, 0.048553466796875], "tokens": [647, 3099, 280, 2935, 32, 371, 60, 3181, 542, 1120, 473]}
{"line_number": 2197, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.02930579881759053, "per_token_entropy": [], "tokens": []}
