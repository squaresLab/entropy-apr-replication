{"line_number": 175, "line_type": "original", "code": "        throw new IllegalArgumentException(\"Node cannot be refined. \\n\" +", "entropy": 2.337890625, "is_bug_line": true, "sus_score": 0.5773502691896258, "per_token_entropy": [4.66015625, 3.576171875, 0.01763916015625, 2.294921875, 1.541015625, 4.94921875, 5.7109375, 0.1964111328125, 0.94873046875, 0.00835418701171875, 4.3828125, 5.70703125, 0.100830078125, 0.4609375, 0.492919921875], "tokens": [351, 1422, 537, 12137, 440, 1212, 4881, 526, 2488, 1441, 32, 766, 96, 20, 474]}
{"line_number": 175, "line_type": "generated", "code": "\n    };\n\n  /**\n   * Returns a type that is the same as {@code type} but without the\n   * {@code undefined} type.\n   */\n  protected JSType getRestrictedWithoutUndefined(JSType type) {\n    return type.visit(restrict", "entropy": 0.321533203125, "is_bug_line": true, "sus_score": 0.5773502691896258, "per_token_entropy": [1.54296875, 0.11859130859375, 0.1781005859375, 0.1075439453125, 0.03515625, 0.0001556873321533203, 1.1123046875, 0.50341796875, 1.0927734375, 0.59423828125, 0.397216796875, 1.2666015625, 0.955078125, 0.00841522216796875, 0.267822265625, 0.0016994476318359375, 0.0977783203125, 0.51904296875, 0.662109375, 1.45703125, 1.2490234375, 0.5078125, 5.030632019042969e-05, 0.482421875, 0.310791015625, 0.343017578125, 0.0072784423828125, 0.322021484375, 0.279052734375, 0.52783203125, 0.273681640625, 0.00096893310546875, 0.78466796875, 0.12158203125, 5.364418029785156e-06, 0.00693511962890625, 0.0007495880126953125, 0.0011663436889648438, 8.618831634521484e-05, 0.0007109642028808594, 0.0089569091796875, 2.384185791015625e-07, 0.0009822845458984375, 0.00041604042053222656, 0.00013744831085205078, 0.0080413818359375, 0.321044921875, 0.043731689453125, 0.17236328125, 0.0192108154296875, 0.004245758056640625, 0.0011959075927734375], "tokens": [284, 1472, 719, 1022, 664, 319, 3759, 312, 827, 688, 438, 322, 2432, 619, 3088, 687, 827, 111, 1273, 2876, 322, 664, 319, 3088, 687, 3469, 111, 827, 32, 664, 569, 334, 2522, 7750, 620, 622, 37455, 11446, 14339, 26, 4624, 620, 827, 27, 301, 284, 442, 827, 32, 8275, 26, 20757]}
{"line_number": 149, "line_type": "original", "code": "    return null;", "entropy": 2.69921875, "is_bug_line": false, "sus_score": 0.05407380704358752, "per_token_entropy": [4.87890625, 4.44140625, 1.4716796875, 0.0016202926635742188], "tokens": [264, 442, 744, 45]}
{"line_number": 149, "line_type": "generated", "code": "\n      }\n\n      @Override\n      public JSType caseNoType(NoType noType) {\n        return null;\n      }\n\n      @Override\n      public JSType caseUnknownType(UnknownType unknownType) {\n        return null;\n      }\n\n      @Override\n     ", "entropy": 0.099609375, "is_bug_line": false, "sus_score": 0.05407380704358752, "per_token_entropy": [0.17431640625, 0.01195526123046875, 0.21337890625, 0.02099609375, 0.000171661376953125, 0.001598358154296875, 0.008544921875, 0.0013914108276367188, 2.384185791015625e-07, 0.0256805419921875, 0.69677734375, 0.482177734375, 0.03240966796875, 0.0017004013061523438, 0.0016012191772460938, 0.08392333984375, 5.14984130859375e-05, 0.0002846717834472656, 9.632110595703125e-05, 0.019439697265625, 0.119384765625, 1.244140625, 0.0007481575012207031, 0.15673828125, 7.43865966796875e-05, 0.09661865234375, 0.010528564453125, 0.0002014636993408203, 0.004955291748046875, 0.007648468017578125, 0.0005640983581542969, 3.5762786865234375e-07, 0.030853271484375, 1.0234375, 2.4557113647460938e-05, 0.0419921875, 0.01232147216796875, 5.364418029785156e-06, 0.031524658203125, 0.004787445068359375, 0.0001990795135498047, 0.00011777877807617188, 0.0087127685546875, 0.029754638671875, 0.40869140625, 0.00022554397583007812, 0.0889892578125, 0.00012218952178955078, 0.06988525390625, 0.00917816162109375, 6.73532485961914e-05, 0.0022869110107421875], "tokens": [397, 320, 1687, 477, 1788, 397, 562, 7750, 620, 1135, 2023, 620, 26, 2023, 620, 1289, 620, 27, 301, 291, 442, 744, 45, 397, 320, 1687, 477, 1788, 397, 562, 7750, 620, 1135, 5842, 620, 26, 5842, 620, 8665, 620, 27, 301, 291, 442, 744, 45, 397, 320, 1687, 477, 1788, 397]}
{"line_number": 680, "line_type": "original", "code": "    return typeRegistry.getNativeType(typeId);", "entropy": 1.40625, "is_bug_line": false, "sus_score": 0.05314940034527339, "per_token_entropy": [6.11328125, 1.2451171875, 3.140625, 5.7890625, 0.11456298828125, 0.1776123046875, 0.0107421875, 0.1331787109375, 0.03839111328125, 0.050689697265625, 0.01338958740234375, 0.042083740234375], "tokens": [264, 442, 827, 5378, 32, 371, 6134, 620, 26, 681, 606, 293]}
{"line_number": 680, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.05314940034527339, "per_token_entropy": [], "tokens": []}
{"line_number": 81, "line_type": "original", "code": "    Preconditions.checkArgument(lastLink.nextLink == null);", "entropy": 2.11328125, "is_bug_line": false, "sus_score": 0.03601412030328099, "per_token_entropy": [3.076171875, 12.75, 0.005970001220703125, 0.04254150390625, 1.1396484375, 0.021759033203125, 8.75, 0.12054443359375, 1.740234375, 1.529296875, 0.0152740478515625, 0.2176513671875, 0.027496337890625, 0.137939453125], "tokens": [264, 40596, 32, 1553, 3484, 26, 2135, 2359, 32, 1978, 2359, 610, 744, 293]}
{"line_number": 81, "line_type": "generated", "code": "\n      default:\n        return null;\n    }\n  }\n\n  /**\n   * Updates the type of a node in the given scope if the node corresponds to a\n   * name whose type is capable of being refined.\n   * @param node The node whose type", "entropy": 0.253173828125, "is_bug_line": false, "sus_score": 0.03601412030328099, "per_token_entropy": [0.5751953125, 0.413818359375, 0.001346588134765625, 0.0479736328125, 0.1177978515625, 0.179443359375, 0.0004687309265136719, 0.04156494140625, 0.00130462646484375, 0.0191802978515625, 0.0007290840148925781, 0.224609375, 0.2015380859375, 0.03265380859375, 0.00022149085998535156, 3.083984375, 0.219970703125, 0.81591796875, 0.108642578125, 0.20556640625, 0.356201171875, 0.2646484375, 0.08258056640625, 0.0406494140625, 0.0067596435546875, 0.580078125, 0.1356201171875, 0.047637939453125, 0.0587158203125, 0.0180816650390625, 0.03729248046875, 0.004856109619140625, 7.486343383789062e-05, 0.045379638671875, 0.2178955078125, 0.00952911376953125, 0.291748046875, 0.031707763671875, 0.0010061264038085938, 0.0008869171142578125, 0.01395416259765625, 0.00017011165618896484, 0.05633544921875, 0.09417724609375, 0.5361328125, 0.17236328125, 1.556640625, 0.8994140625, 0.33154296875, 0.2164306640625, 0.68017578125, 0.081298828125], "tokens": [397, 1244, 44, 291, 442, 744, 45, 284, 320, 334, 320, 719, 1022, 664, 319, 19293, 322, 827, 432, 312, 1541, 328, 322, 2702, 4576, 415, 322, 1541, 20809, 372, 312, 664, 319, 636, 13696, 827, 438, 31582, 432, 3998, 2488, 1441, 32, 664, 319, 477, 753, 1541, 886, 1541, 13696, 827]}
{"line_number": 82, "line_type": "original", "code": "    this.nextLink = lastLink;", "entropy": 3.166015625, "is_bug_line": false, "sus_score": 0.03601412030328099, "per_token_entropy": [5.66015625, 8.40625, 0.68017578125, 4.35546875, 0.55859375, 2.16796875, 6.1015625, 0.2108154296875, 0.358154296875], "tokens": [264, 458, 32, 1978, 2359, 280, 2401, 2359, 45]}
{"line_number": 82, "line_type": "generated", "code": "\n        // TODO(user): Make sure that this is correct.\n        ObjectType objectType = getTypeIfRefinable(node.getFirstChild(), scope);\n        if (objectType!= null) {\n          return objectType.getPropertyType(node.getLastChild", "entropy": 0.5185546875, "is_bug_line": false, "sus_score": 0.03601412030328099, "per_token_entropy": [0.2071533203125, 2.58203125, 1.5595703125, 0.03662109375, 0.83056640625, 0.07342529296875, 3.89453125, 1.0966796875, 0.9521484375, 1.9384765625, 1.2001953125, 2.310546875, 0.58154296875, 0.2489013671875, 1.330078125, 2.578125, 0.300537109375, 0.023101806640625, 1.322265625, 0.09832763671875, 0.010894775390625, 0.0008172988891601562, 5.8770179748535156e-05, 0.037200927734375, 0.153564453125, 0.003162384033203125, 0.0246429443359375, 0.00014698505401611328, 0.000400543212890625, 0.2578125, 0.2646484375, 0.035736083984375, 0.291259765625, 0.022491455078125, 0.004230499267578125, 7.033348083496094e-06, 0.63037109375, 0.0003998279571533203, 0.265380859375, 0.0014858245849609375, 0.0252532958984375, 1.0263671875, 0.1983642578125, 5.4836273193359375e-06, 0.031951904296875, 0.06524658203125, 0.00521087646484375, 0.007293701171875, 0.09100341796875, 0.0010280609130859375, 0.349853515625, 0.00020623207092285156], "tokens": [291, 434, 4296, 26, 496, 711, 6400, 3654, 688, 458, 438, 3809, 32, 291, 42562, 1300, 620, 280, 24115, 2797, 2084, 266, 444, 26, 1251, 32, 25657, 2931, 1026, 4576, 293, 291, 415, 308, 1473, 620, 863, 744, 27, 301, 616, 442, 1300, 620, 32, 12707, 620, 26, 1251, 32, 20197, 2931]}
{"line_number": 83, "line_type": "original", "code": "    lastLink.firstLink = this.firstLink;", "entropy": 2.56640625, "is_bug_line": false, "sus_score": 0.03601412030328099, "per_token_entropy": [5.078125, 10.1171875, 0.335205078125, 0.371337890625, 6.171875, 0.72216796875, 3.779296875, 1.8017578125, 1.3857421875, 0.5869140625, 0.0161895751953125, 0.435302734375], "tokens": [264, 2401, 2359, 32, 2232, 2359, 280, 458, 32, 2232, 2359, 45]}
{"line_number": 83, "line_type": "generated", "code": "\n        if (qualifiedName == null) {\n          return null;\n        }\n\n        ObjectType ownerType = getTypeIfRefinable(node.getFirstChild(), scope);\n        if (ownerType == null) {\n          return null;\n        }\n\n        ObjectType resolvedType", "entropy": 0.32373046875, "is_bug_line": false, "sus_score": 0.03601412030328099, "per_token_entropy": [0.23583984375, 0.97705078125, 0.06689453125, 0.11090087890625, 0.0002770423889160156, 1.3076171875, 0.005687713623046875, 0.1590576171875, 0.00537109375, 0.045440673828125, 0.66748046875, 0.1883544921875, 0.0001474618911743164, 0.012237548828125, 0.0008502006530761719, 1.599609375, 0.9072265625, 1.578125, 0.6875, 0.03997802734375, 1.1708984375, 0.09185791015625, 0.01186370849609375, 0.0007867813110351562, 2.276897430419922e-05, 0.0345458984375, 0.129150390625, 0.0015773773193359375, 0.0226898193359375, 0.00028967857360839844, 0.00013208389282226562, 0.07958984375, 0.0187530517578125, 0.10693359375, 0.1614990234375, 0.03607177734375, 0.0031223297119140625, 8.821487426757812e-06, 0.29150390625, 0.00035452842712402344, 0.09466552734375, 0.0020542144775390625, 0.01039886474609375, 0.0599365234375, 0.0107879638671875, 0.00014925003051757812, 0.005397796630859375, 0.00020420551300048828, 0.278564453125, 2.25, 2.89453125, 0.4677734375], "tokens": [291, 415, 308, 22362, 558, 610, 744, 27, 301, 616, 442, 744, 45, 291, 320, 584, 42562, 7423, 620, 280, 24115, 2797, 2084, 266, 444, 26, 1251, 32, 25657, 2931, 1026, 4576, 293, 291, 415, 308, 5632, 620, 610, 744, 27, 301, 616, 442, 744, 45, 291, 320, 584, 42562, 11425, 620]}
{"line_number": 84, "line_type": "original", "code": "    return lastLink;", "entropy": 4.375, "is_bug_line": false, "sus_score": 0.03601412030328099, "per_token_entropy": [5.45703125, 1.2470703125, 9.3671875, 0.099365234375, 5.70703125], "tokens": [264, 442, 2401, 2359, 45]}
{"line_number": 84, "line_type": "generated", "code": "\n        }\n        StaticSlot<JSType> qualifiedSlot = scope.getSlot(qualifiedName);\n        if (qualifiedSlot!= null) {\n          JSType qualifiedSlotType = qualifiedSlot.getType();\n          if (qualifiedSlotType == null) {\n           ", "entropy": 0.1790771484375, "is_bug_line": false, "sus_score": 0.03601412030328099, "per_token_entropy": [1.4013671875, 0.01428985595703125, 0.360595703125, 1.66796875, 0.01000213623046875, 0.01314544677734375, 0.0144195556640625, 4.76837158203125e-07, 7.021427154541016e-05, 1.6015625, 1.7060546875, 0.012359619140625, 0.03326416015625, 0.001407623291015625, 0.01325225830078125, 0.03704833984375, 0.0017137527465820312, 0.011810302734375, 8.428096771240234e-05, 0.0045166015625, 0.02374267578125, 0.2042236328125, 0.005279541015625, 0.0015783309936523438, 0.0013484954833984375, 0.3798828125, 0.00015854835510253906, 0.07696533203125, 0.0018215179443359375, 0.032470703125, 0.5234375, 7.30752944946289e-05, 0.271240234375, 0.42236328125, 0.0057373046875, 0.0014677047729492188, 0.005615234375, 0.00015091896057128906, 0.0004329681396484375, 0.0003380775451660156, 0.0011644363403320312, 0.02105712890625, 0.08270263671875, 0.01262664794921875, 0.002349853515625, 0.00013124942779541016, 0.004627227783203125, 0.258056640625, 0.0013971328735351562, 0.021697998046875, 0.001300811767578125, 0.044403076171875], "tokens": [291, 320, 291, 14360, 9490, 46, 4624, 620, 48, 16793, 9490, 280, 4576, 32, 371, 9490, 26, 22362, 558, 293, 291, 415, 308, 22362, 9490, 863, 744, 27, 301, 616, 7750, 620, 16793, 9490, 620, 280, 16793, 9490, 32, 10272, 473, 616, 415, 308, 22362, 9490, 620, 610, 744, 27, 301, 324]}
{"line_number": 91, "line_type": "original", "code": "    return firstLink;", "entropy": 3.83984375, "is_bug_line": false, "sus_score": 0.03601412030328099, "per_token_entropy": [4.1875, 0.8818359375, 7.34375, 0.037506103515625, 6.7578125], "tokens": [264, 442, 1932, 2359, 45]}
{"line_number": 91, "line_type": "generated", "code": "\n        return propVarType;\n\n      case Token.STRING_KEY:\n        return getTypeIfRefinable(node.getFirstChild(), scope);\n\n      default:\n        return null;\n    }\n  }\n\n  /**\n   * Returns a {@link FlowScope} that", "entropy": 0.335693359375, "is_bug_line": false, "sus_score": 0.03601412030328099, "per_token_entropy": [0.50439453125, 0.449951171875, 0.34912109375, 0.000385284423828125, 0.01331329345703125, 0.06060791015625, 0.2125244140625, 0.65478515625, 0.0005593299865722656, 2.5391578674316406e-05, 1.4501953125, 0.09405517578125, 0.0016450881958007812, 0.0025920867919921875, 0.10760498046875, 1.134765625, 0.354736328125, 0.00327301025390625, 0.00395965576171875, 0.0002799034118652344, 3.4570693969726562e-06, 0.005886077880859375, 0.03582763671875, 0.0007777214050292969, 0.049591064453125, 0.00019657611846923828, 0.0010213851928710938, 0.002750396728515625, 0.0021648406982421875, 0.14208984375, 0.74072265625, 0.0005574226379394531, 0.020721435546875, 0.08740234375, 0.06402587890625, 0.0002353191375732422, 0.018707275390625, 7.891654968261719e-05, 0.0186920166015625, 0.0009679794311523438, 0.25927734375, 0.260498046875, 0.0369873046875, 0.00015056133270263672, 1.3603515625, 2.107421875, 2.826171875, 0.2763671875, 2.095703125, 0.01329803466796875, 0.056365966796875, 1.5693359375], "tokens": [291, 442, 7018, 1881, 620, 45, 1687, 1135, 6512, 32, 5203, 81, 3307, 44, 291, 442, 24115, 2797, 2084, 266, 444, 26, 1251, 32, 25657, 2931, 1026, 4576, 293, 1687, 1244, 44, 291, 442, 744, 45, 284, 320, 334, 320, 719, 1022, 664, 319, 3759, 312, 3088, 1204, 12419, 5504, 111, 688]}
{"line_number": 158, "line_type": "original", "code": "    switch (node.getType()) {", "entropy": 1.44140625, "is_bug_line": true, "sus_score": 0.02709639073017024, "per_token_entropy": [5.73046875, 4.55078125, 0.07672119140625, 0.8974609375, 0.019866943359375, 0.045928955078125, 0.001956939697265625, 0.2061767578125], "tokens": [264, 3578, 308, 1251, 32, 10272, 1157, 301]}
{"line_number": 158, "line_type": "generated", "code": "\n        return getNativeType(NO_TYPE);\n      }\n\n      @Override\n      public JSType caseUnknownType() {\n        return getNativeType(UNKNOWN_TYPE);\n      }\n\n      @Override\n      public JSType caseNoTypeType() {\n        return get", "entropy": 0.2283935546875, "is_bug_line": true, "sus_score": 0.02709639073017024, "per_token_entropy": [0.2369384765625, 0.496337890625, 0.9970703125, 0.04547119140625, 0.0010890960693359375, 0.0019168853759765625, 0.578125, 0.0006909370422363281, 0.3994140625, 0.00997161865234375, 0.3515625, 0.004062652587890625, 0.1614990234375, 0.016510009765625, 0.000385284423828125, 0.000370025634765625, 0.00665283203125, 0.0005192756652832031, 6.9141387939453125e-06, 0.0306854248046875, 1.6611328125, 3.635883331298828e-05, 0.01021575927734375, 0.0006165504455566406, 0.478515625, 0.03558349609375, 0.2271728515625, 0.015899658203125, 0.0005393028259277344, 0.0003521442413330078, 0.160888671875, 0.0001556873321533203, 0.0003440380096435547, 0.000621795654296875, 0.023468017578125, 0.0008473396301269531, 0.07611083984375, 0.014373779296875, 0.0001093149185180664, 0.003124237060546875, 0.002452850341796875, 0.0005788803100585938, 1.2993812561035156e-05, 0.0298004150390625, 1.896484375, 0.603515625, 2.96484375, 0.021575927734375, 0.00014388561248779297, 0.1463623046875, 0.026092529296875, 0.1365966796875], "tokens": [291, 442, 622, 6134, 620, 26, 2576, 81, 2319, 293, 397, 320, 1687, 477, 1788, 397, 562, 7750, 620, 1135, 5842, 620, 346, 301, 291, 442, 622, 6134, 620, 26, 14174, 81, 2319, 293, 397, 320, 1687, 477, 1788, 397, 562, 7750, 620, 1135, 2023, 620, 620, 346, 301, 291, 442, 622]}
{"line_number": 119, "line_type": "original", "code": "    switch (node.getType()) {", "entropy": 1.5234375, "is_bug_line": false, "sus_score": 0.026162237992630243, "per_token_entropy": [5.84375, 4.625, 0.034271240234375, 1.228515625, 0.00498199462890625, 0.421630859375, 0.0034656524658203125, 0.026947021484375], "tokens": [264, 3578, 308, 1251, 32, 10272, 1157, 301]}
{"line_number": 119, "line_type": "generated", "code": "\n        if (type.isSubtype(origType)) {\n          scope.inferSlotType(qualifiedName, type);\n        } else {\n          scope.inferSlotType(qualifiedName, origType);\n        }\n        break;\n\n      default:\n        throw new", "entropy": 0.2205810546875, "is_bug_line": false, "sus_score": 0.026162237992630243, "per_token_entropy": [0.304443359375, 1.3056640625, 0.1702880859375, 0.8525390625, 0.603515625, 0.4375, 0.55322265625, 0.794921875, 0.229248046875, 1.4543533325195312e-05, 0.13720703125, 0.0026988983154296875, 0.039093017578125, 0.5458984375, 0.0010118484497070312, 0.1605224609375, 0.05474853515625, 0.0021648406982421875, 0.002288818359375, 0.0193328857421875, 1.895427703857422e-05, 0.0005574226379394531, 0.1405029296875, 0.0183258056640625, 0.08441162109375, 0.001758575439453125, 0.86669921875, 0.2431640625, 0.0758056640625, 0.67431640625, 0.0110321044921875, 0.333251953125, 0.0211029052734375, 0.0089263916015625, 0.017852783203125, 0.10272216796875, 1.1205673217773438e-05, 0.00833892822265625, 0.33935546875, 1.728534698486328e-05, 0.1507568359375, 0.1688232421875, 0.000171661376953125, 0.30126953125, 0.0282745361328125, 0.00372314453125, 1.060546875, 0.22119140625, 0.0006952285766601562, 0.0233306884765625, 0.33740234375, 0.01155853271484375], "tokens": [291, 415, 308, 681, 32, 297, 41186, 26, 3831, 620, 490, 301, 616, 4576, 32, 22987, 9490, 620, 26, 22362, 558, 30, 827, 293, 291, 320, 813, 301, 616, 4576, 32, 22987, 9490, 620, 26, 22362, 558, 30, 3218, 620, 293, 291, 320, 291, 1626, 45, 1687, 1244, 44, 291, 1422, 537]}
{"line_number": 63, "line_type": "original", "code": "      JSTypeRegistry typeRegistry) {", "entropy": 2.392578125, "is_bug_line": false, "sus_score": 0.011211213233271875, "per_token_entropy": [7.6171875, 4.66015625, 0.0019989013671875, 3.044921875, 0.76953125, 0.0020503997802734375, 2.892578125, 0.158203125], "tokens": [647, 7750, 620, 5378, 827, 5378, 27, 301]}
{"line_number": 63, "line_type": "generated", "code": "\n  /**\n   * Calculates the preciser scope knowing the outcome of the condition.\n   * @param condition a condition node\n   * @param blindScope the scope without the condition\n   * @param outcome the outcome of the condition\n   * @return the scope with", "entropy": 0.4833984375, "is_bug_line": false, "sus_score": 0.011211213233271875, "per_token_entropy": [0.6083984375, 0.7001953125, 0.11273193359375, 0.0002505779266357422, 1.8505859375, 0.1029052734375, 1.21484375, 0.002391815185546875, 0.081787109375, 1.8740234375, 0.48095703125, 0.493896484375, 0.02862548828125, 1.0185546875, 0.377685546875, 0.5087890625, 0.0499267578125, 0.313720703125, 1.4853515625, 0.0970458984375, 0.04925537109375, 1.7119140625, 1.2646484375, 0.521484375, 0.429443359375, 0.004367828369140625, 0.0015773773193359375, 0.00795745849609375, 0.0531005859375, 0.0005621910095214844, 0.67431640625, 0.32177734375, 2.45703125, 1.4970703125, 0.400146484375, 0.409912109375, 0.006145477294921875, 0.0014629364013671875, 0.0190582275390625, 0.00662994384765625, 0.66845703125, 0.1744384765625, 0.053466796875, 0.07244873046875, 0.025390625, 0.29150390625, 0.222412109375, 0.0093994140625, 0.013824462890625, 0.1390380859375, 0.630859375, 1.59375], "tokens": [334, 1022, 664, 319, 42236, 322, 14361, 12058, 4576, 44470, 322, 18360, 432, 322, 3700, 32, 664, 319, 477, 753, 3700, 312, 3700, 1541, 664, 319, 477, 753, 47999, 5504, 322, 4576, 2876, 322, 3700, 664, 319, 477, 753, 18360, 322, 18360, 432, 322, 3700, 664, 319, 477, 601, 322, 4576, 623]}
{"line_number": 183, "line_type": "original", "code": "  private final Visitor<JSType> restrictUndefinedVisitor =", "entropy": 2.416015625, "is_bug_line": false, "sus_score": 0.011211213233271875, "per_token_entropy": [4.53515625, 6.6640625, 3.240234375, 4.66796875, 0.00960540771484375, 0.046417236328125, 8.821487426757812e-06, 0.001201629638671875, 5.5859375, 3.4921875, 0.68603515625, 0.07855224609375], "tokens": [225, 945, 1158, 34982, 46, 4624, 620, 48, 21432, 14339, 10532, 280]}
{"line_number": 183, "line_type": "generated", "code": "\n        return getRestrictedWithoutUndefined(type);\n      }\n\n      @Override\n      public JSType caseStringType() {\n        return getNativeType(STRING_TYPE);\n      }\n\n      @Override\n      public JSType caseUnionType(UnionType type) {\n        List", "entropy": 0.13232421875, "is_bug_line": false, "sus_score": 0.011211213233271875, "per_token_entropy": [0.5517578125, 0.50390625, 1.2919921875, 0.63232421875, 0.01971435546875, 0.0233154296875, 0.00736236572265625, 0.034820556640625, 0.0299072265625, 0.40234375, 0.0020751953125, 0.057098388671875, 0.0091705322265625, 8.940696716308594e-05, 0.0021190643310546875, 0.002132415771484375, 0.0006346702575683594, -0.0, 0.0025386810302734375, 0.1484375, 0.0014438629150390625, 3.7550926208496094e-05, 0.004520416259765625, 0.0012178421020507812, 0.00635528564453125, 0.0013103485107421875, 1.800060272216797e-05, 5.543231964111328e-05, 0.0007610321044921875, 1.239776611328125e-05, 4.291534423828125e-05, 0.00018835067749023438, 0.00400543212890625, 0.0002899169921875, 0.0638427734375, 0.00922393798828125, 6.842613220214844e-05, 0.00237274169921875, 0.0038967132568359375, 0.0008454322814941406, 5.745887756347656e-05, 0.021209716796875, 1.7158203125, 0.00018715858459472656, 0.0007233619689941406, 0.0021266937255859375, 5.602836608886719e-06, 0.0936279296875, 0.000713348388671875, 0.0006246566772460938, 0.1407470703125, 1.08203125], "tokens": [291, 442, 622, 37455, 11446, 14339, 26, 681, 293, 397, 320, 1687, 477, 1788, 397, 562, 7750, 620, 1135, 47639, 346, 301, 291, 442, 622, 6134, 620, 26, 5203, 81, 2319, 293, 397, 320, 1687, 477, 1788, 397, 562, 7750, 620, 1135, 14185, 620, 26, 14185, 620, 827, 27, 301, 291, 1682]}
{"line_number": 271, "line_type": "original", "code": "  private final Visitor<JSType> restrictNullVisitor =", "entropy": 2.587890625, "is_bug_line": false, "sus_score": 0.011211213233271875, "per_token_entropy": [5.08984375, 8.28125, 2.51953125, 5.046875, 0.0146942138671875, 0.1256103515625, 4.851818084716797e-05, 0.002292633056640625, 5.078125, 3.013671875, 1.7744140625, 0.098388671875], "tokens": [225, 945, 1158, 34982, 46, 4624, 620, 48, 21432, 1883, 10532, 280]}
{"line_number": 271, "line_type": "generated", "code": "\n        return type;\n      }\n\n      @Override\n      public JSType caseStringType() {\n        return getNativeType(STRING_TYPE);\n      }\n\n      @Override\n      public JSType caseUnionType(UnionType type) {\n        return type.getRestrictedUnion", "entropy": 0.045745849609375, "is_bug_line": false, "sus_score": 0.011211213233271875, "per_token_entropy": [0.497314453125, 0.2237548828125, 0.33642578125, 0.2568359375, 0.075439453125, 0.0003426074981689453, 0.0195770263671875, 0.0009088516235351562, 6.914138793945312e-05, 0.0009083747863769531, 0.0012922286987304688, 0.00023043155670166016, -0.0, 0.00012123584747314453, 0.006168365478515625, 4.029273986816406e-05, 8.273124694824219e-05, 0.005428314208984375, 0.0010833740234375, 0.00705718994140625, 0.0001354217529296875, 2.7418136596679688e-06, 1.5854835510253906e-05, 0.0007185935974121094, 6.4373016357421875e-06, 6.198883056640625e-06, 5.137920379638672e-05, 0.0016527175903320312, 5.161762237548828e-05, 0.006717681884765625, 0.0005459785461425781, 1.4662742614746094e-05, 0.0003235340118408203, 0.0002053976058959961, 0.0003204345703125, 8.034706115722656e-05, 0.00011467933654785156, 0.0149078369140625, 2.7418136596679688e-06, 0.0001513957977294922, 0.0008373260498046875, -0.0, 0.004611968994140625, 0.00022852420806884766, 0.0012874603271484375, 0.1505126953125, 0.441162109375, 0.1583251953125, 0.0684814453125, 0.07867431640625, 0.006702423095703125, 0.008270263671875], "tokens": [291, 442, 827, 45, 397, 320, 1687, 477, 1788, 397, 562, 7750, 620, 1135, 47639, 346, 301, 291, 442, 622, 6134, 620, 26, 5203, 81, 2319, 293, 397, 320, 1687, 477, 1788, 397, 562, 7750, 620, 1135, 14185, 620, 26, 14185, 620, 827, 27, 301, 291, 442, 827, 32, 371, 37455, 14185]}
{"line_number": 64, "line_type": "original", "code": "    Preconditions.checkNotNull(convention);", "entropy": 3.85546875, "is_bug_line": false, "sus_score": 0.011211213233271875, "per_token_entropy": [3.23828125, 8.7890625, 0.01268768310546875, 4.60546875, 0.0048828125, 10.1875, 0.1507568359375], "tokens": [264, 40596, 32, 42698, 26, 31614, 293]}
{"line_number": 64, "line_type": "generated", "code": "\n   * Gets the scope of the given node, knowing that the given condition is\n   * true.\n   *\n   * @param condition a node\n   * @param blindScope a scope\n   * @return the scope of the given node, knowing that the given", "entropy": 0.72412109375, "is_bug_line": false, "sus_score": 0.011211213233271875, "per_token_entropy": [0.65771484375, 0.356201171875, 1.7763671875, 0.1552734375, 2.2578125, 2.10546875, 0.84619140625, 1.84375, 1.1845703125, 1.2216796875, 2.396484375, 0.66064453125, 0.474853515625, 0.93603515625, 0.2491455078125, 2.02734375, 0.54833984375, 0.0001423358917236328, 0.82421875, 1.1005859375, 0.46044921875, 0.440673828125, 0.751953125, 0.00983428955078125, 0.64599609375, 0.07501220703125, 1.0771484375, 1.9189453125, 0.8779296875, 1.6875, 0.00431060791015625, 0.003910064697265625, 0.049102783203125, 0.34619140625, 0.0007195472717285156, 1.2724609375, 0.127197265625, 1.6806640625, 0.03375244140625, 0.01157379150390625, 0.50634765625, 0.27880859375, 0.240234375, 0.8251953125, 0.140625, 1.3564453125, 0.092529296875, 0.73193359375, 0.159423828125, 0.06396484375, 0.0266265869140625, 0.1253662109375], "tokens": [664, 319, 7124, 322, 4576, 432, 322, 2702, 1541, 30, 44470, 688, 322, 2702, 3700, 438, 664, 319, 861, 32, 664, 319, 664, 319, 477, 753, 3700, 312, 1541, 664, 319, 477, 753, 47999, 5504, 312, 4576, 664, 319, 477, 601, 322, 4576, 432, 322, 2702, 1541, 30, 44470, 688, 322, 2702]}
{"line_number": 65, "line_type": "original", "code": "    this.convention = convention;", "entropy": 3.978515625, "is_bug_line": false, "sus_score": 0.011211213233271875, "per_token_entropy": [3.728515625, 9.1484375, 3.51953125, 2.88671875, 7.2578125, 0.9921875, 0.3115234375], "tokens": [264, 458, 32, 31614, 280, 20636, 45]}
{"line_number": 65, "line_type": "generated", "code": "\n   * variable.\n   *\n   * <p>If the node does not correspond to a variable, returns null.\n   */\n  protected JSType getType(Node n, FlowScope scope) {\n    if (n.isName()) {\n      return scope", "entropy": 0.4375, "is_bug_line": false, "sus_score": 0.011211213233271875, "per_token_entropy": [0.75439453125, 0.055938720703125, 1.53125, 1.1162109375, 0.9814453125, 0.322021484375, 0.84033203125, 0.01332855224609375, 2.357421875, 0.042724609375, 0.01430511474609375, 1.6083984375, 0.344970703125, 0.69970703125, 1.0517578125, 0.01392364501953125, 0.219970703125, 0.0038776397705078125, 0.0377197265625, 0.1346435546875, 0.280517578125, 1.1142578125, 1.20703125, 0.0374755859375, 0.1085205078125, 0.72509765625, 0.01293182373046875, 0.54638671875, 0.070556640625, 1.6689300537109375e-05, 0.67724609375, 0.80810546875, 0.31298828125, 0.2890625, 0.0031280517578125, 0.06341552734375, 0.00019478797912597656, 0.397216796875, 0.08172607421875, 0.0010280609130859375, 0.0789794921875, 1.4091796875, 0.0792236328125, 0.29052734375, 0.193603515625, 0.53955078125, 0.1929931640625, 0.10052490234375, 0.00148773193359375, 0.02264404296875, 0.8408203125, 0.1168212890625], "tokens": [664, 319, 2677, 32, 664, 319, 664, 319, 333, 98, 48, 2797, 322, 1541, 1957, 646, 20630, 372, 312, 2677, 30, 3217, 744, 32, 664, 569, 334, 2522, 7750, 620, 24115, 26, 1212, 310, 30, 12419, 5504, 4576, 27, 301, 284, 415, 308, 96, 32, 297, 558, 1157, 301, 397, 442, 4576]}
{"line_number": 66, "line_type": "original", "code": "    this.typeRegistry = typeRegistry;", "entropy": 1.9892578125, "is_bug_line": false, "sus_score": 0.011211213233271875, "per_token_entropy": [3.30859375, 7.8359375, 3.111328125, 1.7548828125, 0.326416015625, 0.9873046875, 0.481689453125, 0.0020465850830078125, 0.095458984375], "tokens": [264, 458, 32, 681, 5378, 280, 827, 5378, 45]}
{"line_number": 66, "line_type": "generated", "code": "\n   */\n  protected JSType getPreciserType(Node n, FlowScope scope) {\n    return firstLink.getPreciserType(n, scope);\n  }\n\n  /**\n   * Returns the type of a node in the given scope if the node", "entropy": 0.227783203125, "is_bug_line": false, "sus_score": 0.011211213233271875, "per_token_entropy": [0.243896484375, 0.63525390625, 0.019927978515625, 0.482421875, 0.089599609375, 1.1563301086425781e-05, 0.9931640625, 1.0263671875, 0.2154541015625, 0.1671142578125, 0.66796875, 0.4794921875, 0.392822265625, 0.0035533905029296875, 0.08306884765625, 0.0002237558364868164, 0.334228515625, 0.112060546875, 0.002410888671875, 0.1453857421875, 0.982421875, 1.58203125, 0.008880615234375, 0.0012149810791015625, 0.1597900390625, 0.00038123130798339844, 0.00104522705078125, 0.00687408447265625, 0.01418304443359375, 0.005626678466796875, 0.0004622936248779297, 0.0016613006591796875, 0.006168365478515625, 0.004932403564453125, 0.0005011558532714844, 0.09246826171875, 0.09588623046875, 0.0293426513671875, 0.0001214742660522461, 0.9375, 0.291259765625, 0.64453125, 0.09490966796875, 0.1324462890625, 0.11474609375, 0.2305908203125, 0.0205078125, 0.0178985595703125, 0.0087890625, 0.2120361328125, 0.0264434814453125, 0.020660400390625], "tokens": [664, 569, 334, 2522, 7750, 620, 622, 30532, 12058, 620, 26, 1212, 310, 30, 12419, 5504, 4576, 27, 301, 284, 442, 1932, 2359, 32, 371, 30532, 12058, 620, 26, 96, 30, 4576, 293, 334, 320, 719, 1022, 664, 319, 3759, 322, 827, 432, 312, 1541, 328, 322, 2702, 4576, 415, 322, 1541]}
{"line_number": 67, "line_type": "original", "code": "    firstLink = this;", "entropy": 2.533203125, "is_bug_line": false, "sus_score": 0.011211213233271875, "per_token_entropy": [3.1171875, 9.734375, 0.07965087890625, 1.5400390625, 0.66552734375, 0.062347412109375], "tokens": [264, 1932, 2359, 280, 458, 45]}
{"line_number": 67, "line_type": "generated", "code": "\n   */\n  @Override\n  public JSType getPreciserType(Node node, FlowScope scope) {\n    return getPreciserType(node, scope, false);\n  }\n\n  /**\n   * Returns the type of a node in the given scope if", "entropy": 0.25537109375, "is_bug_line": false, "sus_score": 0.011211213233271875, "per_token_entropy": [0.599609375, 0.0643310546875, 0.0157012939453125, 1.6416015625, 0.00861358642578125, 0.02130126953125, 0.02471923828125, 0.1749267578125, 2.7418136596679688e-06, 1.0908203125, 0.7275390625, 0.1357421875, 0.31396484375, 0.223876953125, 0.1505126953125, 1.2197265625, 0.006076812744140625, 0.04876708984375, 0.00011217594146728516, 0.0467529296875, 0.054962158203125, 0.0010080337524414062, 0.1507568359375, 1.28125, 1.1474609375, 0.247802734375, 0.003978729248046875, 0.253662109375, 0.69775390625, 0.0576171875, 0.046600341796875, 0.138916015625, 0.248291015625, 1.2587890625, 0.06463623046875, 0.00464630126953125, 0.0003635883331298828, 0.06903076171875, 0.217529296875, 0.04437255859375, 0.00020587444305419922, 0.45458984375, 0.0418701171875, 0.07684326171875, 0.01198577880859375, 0.0172882080078125, 0.01337432861328125, 0.032318115234375, 0.0050048828125, 0.0017871856689453125, 0.0025730133056640625, 0.10833740234375], "tokens": [664, 569, 334, 477, 1788, 334, 562, 7750, 620, 622, 30532, 12058, 620, 26, 1212, 1541, 30, 12419, 5504, 4576, 27, 301, 284, 442, 622, 30532, 12058, 620, 26, 1251, 30, 4576, 30, 901, 293, 334, 320, 719, 1022, 664, 319, 3759, 322, 827, 432, 312, 1541, 328, 322, 2702, 4576, 415]}
{"line_number": 68, "line_type": "original", "code": "    nextLink = null;", "entropy": 4.109375, "is_bug_line": false, "sus_score": 0.011211213233271875, "per_token_entropy": [5.9609375, 14.0390625, 0.61279296875, 3.40234375, 0.6240234375, 0.024749755859375], "tokens": [264, 2354, 2359, 280, 744, 45]}
{"line_number": 68, "line_type": "generated", "code": "\n  public JSType getRefinedType(Node node, FlowScope scope) {\n    return null;\n  }\n\n  /**\n   * Returns the type of a node in the given scope if the node corresponds to a\n   * name whose type is capable of being", "entropy": 0.304931640625, "is_bug_line": false, "sus_score": 0.011211213233271875, "per_token_entropy": [0.69873046875, 2.0546875, 0.326416015625, 8.821487426757812e-06, 0.81591796875, 1.0205078125, 0.1553955078125, 0.1923828125, 0.1561279296875, 0.360595703125, 1.30078125, 0.00943756103515625, 0.0985107421875, 0.00037598609924316406, 0.08172607421875, 0.09564208984375, 0.005992889404296875, 0.13330078125, 1.2724609375, 1.1201171875, 0.0009937286376953125, 0.033172607421875, 0.0026645660400390625, 0.279052734375, 0.1724853515625, 0.038909912109375, 0.00024235248565673828, 1.21875, 0.5205078125, 0.98193359375, 0.12127685546875, 0.271240234375, 0.310546875, 0.1624755859375, 0.012939453125, 0.005767822265625, 0.00611114501953125, 0.2398681640625, 0.0726318359375, 0.0187530517578125, 0.1138916015625, 0.0164947509765625, 0.07696533203125, 0.0066375732421875, 0.0008020401000976562, 0.223876953125, 0.392333984375, 0.1849365234375, 0.275390625, 0.187255859375, 0.0021114349365234375, 0.01055908203125], "tokens": [334, 562, 7750, 620, 622, 2084, 1441, 620, 26, 1212, 1541, 30, 12419, 5504, 4576, 27, 301, 284, 442, 744, 45, 334, 320, 719, 1022, 664, 319, 3759, 322, 827, 432, 312, 1541, 328, 322, 2702, 4576, 415, 322, 1541, 20809, 372, 312, 664, 319, 636, 13696, 827, 438, 31582, 432, 3998]}
{"line_number": 69, "line_type": "original", "code": "  }", "entropy": 1.001953125, "is_bug_line": false, "sus_score": 0.011211213233271875, "per_token_entropy": [1.66015625, 0.34326171875], "tokens": [225, 320]}
{"line_number": 69, "line_type": "generated", "code": "\n  }\n\n  /**\n   * Gets the precise type of a name in the given scope.\n   * @param node The node corresponding to the name\n   * @param scope The scope containing the name\n   * @return The precise type of the name in the given", "entropy": 0.5595703125, "is_bug_line": false, "sus_score": 0.011211213233271875, "per_token_entropy": [1.2236328125, 0.053924560546875, 0.192138671875, 0.1331787109375, 0.027069091796875, 0.00018513202667236328, 2.509765625, 0.178955078125, 3.701171875, 0.40380859375, 0.2369384765625, 0.52880859375, 1.740234375, 1.291015625, 0.40283203125, 0.152587890625, 0.0254974365234375, 0.8447265625, 0.29345703125, 0.2452392578125, 0.763671875, 0.6142578125, 0.9931640625, 0.446533203125, 0.65087890625, 1.951171875, 0.013397216796875, 0.07342529296875, 0.1632080078125, 1.87109375, 0.002773284912109375, 0.00235748291015625, 0.0279998779296875, 0.0340576171875, 0.057159423828125, 0.269287109375, 2.25, 0.032684326171875, 0.26953125, 0.219970703125, 0.05096435546875, 0.0040435791015625, 0.2313232421875, 0.14013671875, 0.75732421875, 0.053131103515625, 0.089111328125, 0.0299072265625, 0.1357421875, 2.046875, 0.0836181640625, 0.57275390625], "tokens": [334, 320, 719, 1022, 664, 319, 7124, 322, 27447, 827, 432, 312, 636, 328, 322, 2702, 4576, 32, 664, 319, 477, 753, 1541, 886, 1541, 8435, 372, 322, 636, 664, 319, 477, 753, 4576, 886, 4576, 6621, 322, 636, 664, 319, 477, 601, 886, 27447, 827, 432, 322, 636, 328, 322, 2702]}
