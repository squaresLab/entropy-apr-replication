{"line_number": 123, "line_type": "original", "code": "      firstModule = moduleGraph.getRootModule();", "entropy": 2.189453125, "is_bug_line": false, "sus_score": 0.2721655269759087, "per_token_entropy": [5.0390625, 12.0703125, 0.057373046875, 1.6357421875, 0.426025390625, 0.387451171875, 0.0196533203125, 1.650390625, 0.5888671875, 0.013946533203125], "tokens": [647, 1932, 2459, 280, 2297, 3406, 32, 29892, 2459, 473]}
{"line_number": 123, "line_type": "generated", "code": "\n   */\n  private NameInfo getNameInfoForName(String name, int kind) {\n    switch (kind) {\n      case PROPERTY:\n        return propertyNameInfo.get(name);\n      case VAR:\n        return varNameInfo.get(name);\n   ", "entropy": 0.175048828125, "is_bug_line": false, "sus_score": 0.2721655269759087, "per_token_entropy": [0.1810302734375, 0.56982421875, 0.00539398193359375, 0.6962890625, 0.006168365478515625, 3.4570693969726562e-06, 0.00803375244140625, 0.00032901763916015625, 0.006397247314453125, 0.00489044189453125, 0.0012674331665039062, 0.01107025146484375, 0.00212860107421875, 0.02606201171875, 1.4677734375, 1.251953125, 0.004039764404296875, 0.0065765380859375, 0.1531982421875, 0.92578125, 0.0173797607421875, 0.0012187957763671875, 0.00012195110321044922, 0.004749298095703125, 0.11907958984375, 0.006206512451171875, 0.2587890625, 0.0051116943359375, 0.08197021484375, 1.060546875, 0.049407958984375, 0.0001513957977294922, 0.00019693374633789062, 0.0849609375, 0.0007390975952148438, 0.0046234130859375, 0.0030307769775390625, 0.35498046875, 0.00948333740234375, 0.50390625, 0.0081024169921875, 0.04107666015625, 0.03668212890625, 0.0007805824279785156, 1.6689300537109375e-05, 2.110004425048828e-05, 3.254413604736328e-05, 0.0002532005310058594, 9.09566879272461e-05, 0.000316619873046875, 0.00029659271240234375, 1.1201171875], "tokens": [664, 569, 334, 945, 3270, 1120, 16407, 1120, 1562, 558, 26, 652, 636, 30, 629, 6186, 27, 301, 284, 3578, 308, 5462, 27, 301, 397, 1135, 42149, 44, 291, 442, 28859, 1120, 32, 371, 26, 426, 293, 397, 1135, 10244, 44, 291, 442, 773, 558, 1120, 32, 371, 26, 426, 293, 284]}
{"line_number": 138, "line_type": "original", "code": "        for (JSModule module : moduleGraph.getAllModules()) {", "entropy": 1.0341796875, "is_bug_line": false, "sus_score": 0.2721655269759087, "per_token_entropy": [9.0390625, 3.453125, 0.004791259765625, 0.9482421875, 0.0014905929565429688, 0.07232666015625, 0.11822509765625, 0.33056640625, 0.0065460205078125, 0.055206298828125, 0.35205078125, 0.03778076171875, 0.005462646484375, 0.060211181640625], "tokens": [351, 436, 308, 4624, 2459, 2297, 499, 2297, 3406, 32, 13917, 12242, 1157, 301]}
{"line_number": 138, "line_type": "generated", "code": "\n  /**\n   * Gets the name info for the property or variable of a given name,\n   * and creates a new one if necessary.\n   *\n   * @param name The name of the symbol.\n   * @param type The type of symbol.\n  ", "entropy": 0.1280517578125, "is_bug_line": false, "sus_score": 0.2721655269759087, "per_token_entropy": [0.151123046875, 0.387939453125, 0.09320068359375, 0.0001761913299560547, 1.578125, 0.12115478515625, 0.71435546875, 0.05633544921875, 0.05126953125, 0.73974609375, 0.476806640625, 0.152587890625, 0.00960540771484375, 0.07513427734375, 0.01708984375, 0.0171966552734375, 0.0838623046875, 0.318359375, 0.07171630859375, 0.00016415119171142578, 0.2235107421875, 0.025787353515625, 0.00347137451171875, 0.0006957054138183594, 0.001613616943359375, 0.003200531005859375, 0.0019407272338867188, 0.055267333984375, 0.29150390625, 0.0400390625, 0.039276123046875, 0.0002372264862060547, 0.062469482421875, 0.01081085205078125, 0.30078125, 0.06219482421875, 0.0122528076171875, 0.0038299560546875, 0.0005021095275878906, 0.00820159912109375, 0.008819580078125, 0.005535125732421875, 0.03216552734375, 0.00335693359375, 0.00753021240234375, 0.323486328125, 0.0030765533447265625, 0.0012416839599609375, 0.00040602684020996094, 0.00562286376953125, 0.0016317367553710938, 0.00460052490234375], "tokens": [334, 1022, 664, 319, 7124, 322, 636, 3099, 436, 322, 2804, 556, 2677, 432, 312, 2702, 636, 30, 664, 319, 461, 9585, 312, 537, 1591, 415, 7506, 32, 664, 319, 664, 319, 477, 753, 636, 886, 636, 432, 322, 6977, 32, 664, 319, 477, 753, 827, 886, 827, 432, 6977, 32, 664]}
{"line_number": 139, "line_type": "original", "code": "          symbolGraph.connect(externNode, module, nameInfo);", "entropy": 1.544921875, "is_bug_line": false, "sus_score": 0.2721655269759087, "per_token_entropy": [9.265625, 7.875, 0.2275390625, 0.060516357421875, 0.04571533203125, 0.0231170654296875, 1.2392578125, 0.006786346435546875, 0.004688262939453125, 2.650390625, 0.07269287109375, 0.12310791015625, 0.00786590576171875, 0.026763916015625], "tokens": [2033, 6977, 3406, 32, 3517, 26, 4318, 1212, 30, 2297, 30, 636, 1120, 293]}
{"line_number": 139, "line_type": "generated", "code": "\n  }\n\n  private class ProcessExternProperties implements NodeTraversal.ScopedCallback {", "entropy": 0.186767578125, "is_bug_line": false, "sus_score": 0.2721655269759087, "per_token_entropy": [2.15234375, 0.0275726318359375, 0.06683349609375, 0.27294921875, 0.0266876220703125, 0.00927734375, 0.004913330078125, 1.6689300537109375e-05, 0.00016629695892333984, 0.362548828125, 0.045928955078125, 5.8770179748535156e-05, 0.0006041526794433594, 0.00875091552734375, 9.21487808227539e-05, 0.00948333740234375], "tokens": [334, 320, 719, 945, 443, 6833, 571, 900, 3289, 4575, 4004, 35699, 32, 21805, 3296, 301]}
{"line_number": 140, "line_type": "original", "code": "        }", "entropy": 6.38671875, "is_bug_line": false, "sus_score": 0.2721655269759087, "per_token_entropy": [7.59375, 5.1796875], "tokens": [351, 320]}
{"line_number": 140, "line_type": "generated", "code": "\n    @Override\n    public void enterScope(NodeTraversal t) {\n      symbolStack.push(new NameContext(t.getScope()));\n    }\n\n    @Override\n    public void exitScope(NodeTraversal t) {\n      symbolStack.pop();\n   ", "entropy": 0.131103515625, "is_bug_line": false, "sus_score": 0.2721655269759087, "per_token_entropy": [0.67138671875, 0.81494140625, 0.0004017353057861328, 0.031982421875, 0.0034656524658203125, 0.2147216796875, 0.00644683837890625, 0.0009784698486328125, 0.01204681396484375, 0.0022411346435546875, 0.04132080078125, 0.016326904296875, 0.0034637451171875, 0.00665283203125, 0.1328125, 1.0546875, 0.0007481575012207031, 0.0005145072937011719, 0.0811767578125, 0.0005288124084472656, 0.1492919921875, 0.00881195068359375, 0.0005521774291992188, 1.044921875, 0.60986328125, 0.486083984375, 0.288330078125, 0.00457000732421875, 0.220458984375, 0.303466796875, 0.00020122528076171875, 0.1324462890625, 0.01277923583984375, 7.224082946777344e-05, 0.0008172988891601562, 0.004619598388671875, 0.01045989990234375, 0.002666473388671875, 3.2186508178710938e-06, 0.0005793571472167969, 6.270408630371094e-05, 0.00011813640594482422, 0.002384185791015625, 0.00010037422180175781, 0.0011749267578125, 0.0229644775390625, 0.341064453125, 5.996227264404297e-05, 3.838539123535156e-05, 0.0016231536865234375, 0.01001739501953125, 0.06451416015625], "tokens": [284, 477, 1788, 284, 562, 763, 6612, 5504, 26, 1212, 35699, 273, 27, 301, 397, 6977, 3113, 32, 2018, 26, 890, 3270, 1222, 26, 102, 32, 371, 5504, 5073, 284, 320, 446, 477, 1788, 284, 562, 763, 4323, 5504, 26, 1212, 35699, 273, 27, 301, 397, 6977, 3113, 32, 3235, 473, 284]}
{"line_number": 147, "line_type": "original", "code": "      NodeTraversal.traverse(compiler, externRoot,", "entropy": 1.76953125, "is_bug_line": false, "sus_score": 0.23145502494313785, "per_token_entropy": [4.55078125, 3.810546875, 3.49609375, 0.044647216796875, 0.5654296875, 0.06597900390625, 0.44970703125, 0.000705718994140625, 6.234375, 0.187255859375, 0.058746337890625], "tokens": [647, 4004, 35699, 32, 33261, 26, 10199, 30, 12098, 4058, 30]}
{"line_number": 147, "line_type": "generated", "code": "\n      NameContext nameContext = symbolStack.peek();\n      if (nameContext.type == PROPERTY) {\n        // If we are entering a scope for a property, we need to create a new\n        // name context that is a child of the current one", "entropy": 0.71533203125, "is_bug_line": false, "sus_score": 0.23145502494313785, "per_token_entropy": [0.85693359375, 1.685546875, 0.05963134765625, 1.5966796875, 0.0186920166015625, 0.029876708984375, 1.1328125, 0.0008563995361328125, 0.0008211135864257812, 0.2705078125, 0.03863525390625, 0.12451171875, 1.4091796875, 0.08038330078125, 0.234130859375, 0.00020313262939453125, 0.138916015625, 2.134765625, 0.12005615234375, 1.1904296875, 0.1463623046875, 0.0048370361328125, 0.1263427734375, 1.541015625, 2.111328125, 0.55126953125, 1.5859375, 0.49169921875, 0.1448974609375, 1.2041015625, 0.8974609375, 0.125, 0.48779296875, 0.5068359375, 1.9765625, 1.1923828125, 0.06646728515625, 1.607421875, 0.74072265625, 0.82373046875, 0.0430908203125, 0.00855255126953125, 1.53515625, 0.4375, 2.474609375, 1.6806640625, 1.345703125, 0.278564453125, 0.03131103515625, 0.121337890625, 0.99072265625, 0.79443359375], "tokens": [397, 3270, 1222, 636, 1222, 280, 6977, 3113, 32, 20124, 473, 397, 415, 308, 426, 1222, 32, 681, 610, 42149, 27, 301, 291, 434, 1670, 996, 884, 35528, 312, 4576, 436, 312, 2804, 30, 996, 1849, 372, 1487, 312, 537, 291, 434, 636, 1619, 688, 438, 312, 2838, 432, 322, 1550, 1591]}
{"line_number": 179, "line_type": "original", "code": "      return map.get(name);", "entropy": 3.298828125, "is_bug_line": false, "sus_score": 0.22176638128637186, "per_token_entropy": [2.80859375, 6.54296875, 14.25, 0.57568359375, 0.3212890625, 0.0364990234375, 1.6025390625, 0.245849609375], "tokens": [647, 442, 1992, 32, 371, 26, 426, 293]}
{"line_number": 179, "line_type": "generated", "code": "\n        }\n      } else if (n.getType() == Token.NAME) {\n        String varName = n.getString();\n        if (varName.equals(\"this\")) {\n          processPrototypeParent(t, parent);\n        } else if (compiler.", "entropy": 0.226318359375, "is_bug_line": false, "sus_score": 0.22176638128637186, "per_token_entropy": [0.321044921875, 0.00211334228515625, 0.06646728515625, 0.001865386962890625, 0.359130859375, 0.01708984375, 0.01465606689453125, 0.6396484375, 0.0005464553833007812, 0.080322265625, 0.0002180337905883789, 0.002147674560546875, 0.0003342628479003906, 3.314018249511719e-05, 0.76806640625, 0.275390625, 0.0003447532653808594, 0.0604248046875, 0.71923828125, 1.109375, 0.007549285888671875, 0.00928497314453125, 0.066650390625, 7.200241088867188e-05, 0.00476837158203125, 0.0021514892578125, 0.052703857421875, 0.352294921875, 0.1470947265625, 1.125, 0.06915283203125, 0.100830078125, 0.0229949951171875, 0.9716796875, 0.2396240234375, 0.004207611083984375, 0.0259552001953125, 1.3046875, 1.4521484375, 0.0183868408203125, 0.0013456344604492188, 0.0014734268188476562, 0.0019426345825195312, 0.1304931640625, 0.004154205322265625, 0.0828857421875, 0.00020110607147216797, 0.051666259765625, 0.322265625, 0.08367919921875, 0.66796875, 7.426738739013672e-05], "tokens": [291, 320, 397, 320, 813, 415, 308, 96, 32, 10272, 346, 610, 6512, 32, 2474, 27, 301, 291, 892, 773, 558, 280, 310, 32, 7069, 473, 291, 415, 308, 48644, 32, 3574, 440, 578, 2131, 301, 616, 2164, 17534, 4433, 26, 102, 30, 2935, 293, 291, 320, 813, 415, 308, 10199, 32]}
{"line_number": 116, "line_type": "original", "code": "      boolean anchorUnusedVars) {", "entropy": 3.591796875, "is_bug_line": false, "sus_score": 0.21650635094610968, "per_token_entropy": [6.6484375, 9.375, 5.1484375, 0.6796875, 0.10943603515625, 3.0859375, 0.08685302734375], "tokens": [647, 1905, 14177, 28694, 12034, 27, 301]}
{"line_number": 116, "line_type": "generated", "code": "\n    return symbolGraph.getAllNodes();\n  }\n\n  /**\n   * Returns information on the prototype property with the given name, or null\n   * if there is no such property.\n   */\n  public NameInfo getNameInfoForProperty(String propertyName) {\n   ", "entropy": 0.32421875, "is_bug_line": false, "sus_score": 0.21650635094610968, "per_token_entropy": [0.63427734375, 0.53515625, 1.6328125, 0.0003943443298339844, 0.01517486572265625, 1.1748046875, 0.017364501953125, 0.018890380859375, 0.344482421875, 0.0011625289916992188, 0.11761474609375, 0.1273193359375, 0.021881103515625, 4.947185516357422e-05, 0.303955078125, 0.55859375, 0.257568359375, 1.0634765625, 1.1240234375, 0.2330322265625, 0.59814453125, 0.0687255859375, 0.14453125, 0.157470703125, 1.1845703125, 1.431640625, 0.87109375, 0.1678466796875, 0.0005702972412109375, 0.006725311279296875, 1.0849609375, 0.1553955078125, 0.1781005859375, 0.182373046875, 0.083984375, 0.0731201171875, 0.03912353515625, 0.0699462890625, 0.0046844482421875, 0.040435791015625, 0.02349853515625, 2.8848648071289062e-05, 0.0399169921875, 0.0006031990051269531, 0.0267791748046875, 1.458984375, 0.0034770965576171875, 0.0082550048828125, 0.50244140625, 0.006938934326171875, 0.0003662109375, 0.07012939453125], "tokens": [284, 442, 6977, 3406, 32, 13917, 5909, 473, 334, 320, 719, 1022, 664, 319, 3759, 2471, 544, 322, 21666, 2804, 623, 322, 2702, 636, 30, 556, 744, 664, 319, 415, 2017, 438, 1289, 3751, 2804, 32, 664, 569, 334, 562, 3270, 1120, 16407, 1120, 1562, 1653, 26, 652, 28859, 27, 301, 284]}
{"line_number": 55, "line_type": "original", "code": "  private final SymbolType PROPERTY = SymbolType.PROPERTY;", "entropy": 1.2080078125, "is_bug_line": false, "sus_score": 0.21650635094610968, "per_token_entropy": [1.2353515625, 2.078125, 1.017578125, 3.794921875, 0.8955078125, 5.3046875, 0.13427734375, 0.01462554931640625, 0.000339508056640625, 0.0012273788452148438, 0.0094451904296875, 0.00765228271484375], "tokens": [225, 945, 1158, 12450, 620, 42149, 280, 12450, 620, 32, 12315, 45]}
{"line_number": 55, "line_type": "generated", "code": "  * Creates a new pass.", "entropy": 0.98828125, "is_bug_line": false, "sus_score": 0.21650635094610968, "per_token_entropy": [1.24609375, 1.435546875, 1.6630859375, 0.440185546875, 0.2071533203125, 0.98046875, 0.9453125], "tokens": [225, 319, 9301, 312, 537, 3097, 32]}
{"line_number": 56, "line_type": "original", "code": "  private final SymbolType VAR = SymbolType.VAR;", "entropy": 1.8603515625, "is_bug_line": false, "sus_score": 0.21650635094610968, "per_token_entropy": [3.39453125, 4.77734375, 0.92578125, 4.30859375, 1.9248046875, 6.65234375, 0.2403564453125, 0.0450439453125, 0.0004258155822753906, 0.002254486083984375, 0.012664794921875, 0.0438232421875], "tokens": [225, 945, 1158, 12450, 620, 10244, 280, 12450, 620, 32, 7416, 45]}
{"line_number": 56, "line_type": "generated", "code": "\n   *\n   * @param compiler The compiler\n   * @param canModifyExterns Whether this pass can modify externs.\n   * @param anchorUnusedVars Whether to add synthetic declarations for unused\n   *     variables.\n   */\n  AnalyzePrototypeProperties", "entropy": 0.4072265625, "is_bug_line": false, "sus_score": 0.21650635094610968, "per_token_entropy": [0.1444091796875, 0.1221923828125, 0.46142578125, 0.0126495361328125, 0.0435791015625, 0.0006041526794433594, 0.10076904296875, 0.285888671875, 0.4599609375, 1.5107421875, 0.377197265625, 0.004550933837890625, 0.0012254714965820312, 0.76318359375, 0.0018377304077148438, 0.0013523101806640625, 2.574920654296875e-05, 0.0007848739624023438, 0.2626953125, 1.7841796875, 0.08026123046875, 0.286376953125, 0.319091796875, 0.51611328125, 0.061981201171875, 0.6240234375, 0.315673828125, 0.281494140625, 0.17333984375, 0.0017805099487304688, 0.3359375, 0.0018749237060546875, 0.0012121200561523438, 0.1654052734375, 0.7978515625, 1.4296875, 2.484375, 2.9609375, 0.45361328125, 1.0283203125, 0.206298828125, 0.004901885986328125, 0.255859375, 0.703125, 0.822265625, 0.1854248046875, 0.149658203125, 0.02850341796875, 0.1573486328125, 2.384185791015625e-05, 0.00012290477752685547, 0.00017511844635009766], "tokens": [664, 319, 664, 319, 477, 753, 8980, 886, 8980, 664, 319, 477, 753, 883, 14504, 571, 900, 101, 14071, 458, 3097, 883, 5351, 12098, 101, 32, 664, 319, 477, 753, 14177, 28694, 12034, 14071, 372, 1015, 39391, 20632, 436, 15649, 664, 319, 262, 4886, 32, 664, 569, 334, 2244, 12884, 17534, 3289]}
{"line_number": 84, "line_type": "original", "code": "  private final LinkedDirectedGraph<NameInfo, JSModule> symbolGraph =", "entropy": 1.810546875, "is_bug_line": false, "sus_score": 0.21650635094610968, "per_token_entropy": [4.83203125, 7.8671875, 2.02734375, 5.7109375, 0.00383758544921875, 8.0108642578125e-05, 0.00921630859375, 3.33203125, 0.271728515625, 0.0016193389892578125, 2.1328125, 2.88671875, 0.0086517333984375, 0.07720947265625, 1.3701171875, 0.005786895751953125, 0.236328125], "tokens": [225, 945, 1158, 18227, 6997, 318, 3406, 46, 558, 1120, 30, 7750, 2459, 48, 6977, 3406, 280]}
{"line_number": 84, "line_type": "generated", "code": "\n      NameInfo info = new NameInfo(property);\n      info.markReference(null);\n      symbolGraph.createNode(info);", "entropy": 0.2371826171875, "is_bug_line": false, "sus_score": 0.21650635094610968, "per_token_entropy": [0.1827392578125, 0.96337890625, 0.00022280216217041016, 0.923828125, 0.005382537841796875, 0.921875, 0.0297088623046875, 3.421306610107422e-05, 0.02935791015625, 0.059600830078125, 0.23583984375, 0.15966796875, 0.5625, 0.0017337799072265625, 0.048248291015625, 0.3359375, 0.0205078125, 0.484375, 0.015716552734375, 0.081298828125, 1.2919921875, 0.00031256675720214844, 0.004302978515625, 0.035247802734375, 0.004817962646484375, 0.0028285980224609375, 0.002155303955078125], "tokens": [397, 3270, 1120, 3099, 280, 537, 3270, 1120, 26, 2433, 293, 397, 3099, 32, 1826, 3564, 26, 1693, 293, 397, 6977, 3406, 32, 46625, 26, 1338, 293]}
{"line_number": 88, "line_type": "original", "code": "  private final NameInfo globalNode = new NameInfo(\"[global]\");", "entropy": 1.171875, "is_bug_line": false, "sus_score": 0.21650635094610968, "per_token_entropy": [3.744140625, 7.30859375, 0.677734375, 1.0732421875, 0.0008254051208496094, 2.01953125, 0.65673828125, 0.25927734375, 0.32666015625, 0.009063720703125, 5.996227264404297e-05, 0.2423095703125, 0.07208251953125, 0.018585205078125], "tokens": [225, 945, 1158, 3270, 1120, 3649, 1212, 280, 537, 3270, 1120, 9670, 3264, 28915]}
{"line_number": 88, "line_type": "generated", "code": "\n      }\n    }\n  }\n\n  /**\n   * Returns the NameInfo for the given property name, creating it if\n   * necessary.\n   */\n  private NameInfo getNameInfoForName(String name, SymbolType symbolType) {\n    if (symbolType", "entropy": 0.33447265625, "is_bug_line": false, "sus_score": 0.21650635094610968, "per_token_entropy": [0.91943359375, 0.00562286376953125, 0.423583984375, 0.0009870529174804688, 0.2208251953125, 0.00034236907958984375, 0.20703125, 1.119140625, 0.09564208984375, 0.00012099742889404297, 1.7587890625, 0.4912109375, 0.89013671875, 0.0016374588012695312, 0.60546875, 0.383056640625, 0.415283203125, 0.95458984375, 0.65576171875, 1.0546875, 0.20458984375, 0.68798828125, 0.1922607421875, 1.2099609375, 0.0004825592041015625, 0.436279296875, 0.0197601318359375, 0.1104736328125, 0.348388671875, 0.01129913330078125, 0.208984375, 0.00525665283203125, 5.125999450683594e-06, 0.0178375244140625, 0.0002892017364501953, 0.0009975433349609375, 0.0802001953125, 0.0003657341003417969, 0.00896453857421875, 0.140625, 0.00824737548828125, 0.032745361328125, 6.008148193359375e-05, 1.05859375, 0.0052032470703125, 0.00122833251953125, 0.0006551742553710938, 0.0163116455078125, 1.9443359375, 0.05859375, 0.36962890625, 0.00823211669921875], "tokens": [397, 320, 284, 320, 334, 320, 719, 1022, 664, 319, 3759, 322, 3270, 1120, 436, 322, 2702, 2804, 636, 30, 6892, 561, 415, 664, 319, 7506, 32, 664, 569, 334, 945, 3270, 1120, 16407, 1120, 1562, 558, 26, 652, 636, 30, 12450, 620, 6977, 620, 27, 301, 284, 415, 308, 7010, 620]}
{"line_number": 91, "line_type": "original", "code": "  private final NameInfo externNode = new NameInfo(\"[extern]\");", "entropy": 0.79638671875, "is_bug_line": false, "sus_score": 0.21650635094610968, "per_token_entropy": [2.16015625, 7.63671875, 0.3017578125, 0.281494140625, 0.0003757476806640625, 0.1890869140625, 0.006229400634765625, 0.0078582763671875, 0.219482421875, 0.002635955810546875, 3.6835670471191406e-05, 0.1229248046875, 0.01105499267578125, 0.2095947265625], "tokens": [225, 945, 1158, 3270, 1120, 12098, 1212, 280, 537, 3270, 1120, 9670, 4318, 28915]}
{"line_number": 91, "line_type": "generated", "code": "      }\n      propertyNameInfo.put(property, nameInfo);\n    }\n  }\n\n  @Override\n  public void process(Node externs, Node root) {\n    Preconditions.checkState(compiler.getLifeCycleStage().isNormalized());\n\n    // G", "entropy": 0.300048828125, "is_bug_line": false, "sus_score": 0.21650635094610968, "per_token_entropy": [1.30078125, 0.183349609375, 1.060546875, 0.56298828125, 0.0001246929168701172, 0.00017654895782470703, 0.0002732276916503906, 0.00299835205078125, 0.01666259765625, 0.0011606216430664062, 0.0014677047729492188, 2.9802322387695312e-06, 0.0001767873764038086, 0.322509765625, 0.0011463165283203125, 0.49267578125, 0.0008764266967773438, 0.2027587890625, 0.759765625, 0.002758026123046875, 0.0167236328125, 0.0068206787109375, 0.030059814453125, 0.00778961181640625, 9.906291961669922e-05, 0.002178192138671875, 0.0019626617431640625, 0.0011157989501953125, 0.004344940185546875, 0.0007538795471191406, 0.005950927734375, 3.8623809814453125e-05, 0.0005211830139160156, 0.05780029296875, 1.830078125, 0.00067901611328125, 0.031219482421875, 0.1934814453125, 0.0927734375, 1.650390625, 0.0311431884765625, 0.6845703125, 0.0435791015625, 0.005588531494140625, 0.005428314208984375, 0.358642578125, 0.0011119842529296875, 0.109619140625, 0.051300048828125, 0.56640625, 1.359375, 3.533203125], "tokens": [647, 320, 397, 28859, 1120, 32, 524, 26, 2433, 30, 636, 1120, 293, 284, 320, 334, 320, 719, 477, 1788, 334, 562, 763, 2164, 26, 1212, 12098, 101, 30, 4004, 3051, 27, 301, 284, 40596, 32, 1553, 1078, 26, 10199, 32, 371, 19825, 16128, 9595, 922, 297, 29814, 1035, 446, 434, 570]}
{"line_number": 94, "line_type": "original", "code": "  private final NameInfo anonymousNode = new NameInfo(\"[anonymous]\");", "entropy": 0.6884765625, "is_bug_line": false, "sus_score": 0.21650635094610968, "per_token_entropy": [2.146484375, 1.189453125, 0.9873046875, 0.302490234375, 0.0012102127075195312, 0.52294921875, 2.16015625, 0.09344482421875, 0.7265625, 0.00989532470703125, 4.0650367736816406e-05, 1.015625, 0.336669921875, 0.1451416015625], "tokens": [225, 945, 1158, 3270, 1120, 23231, 1212, 280, 537, 3270, 1120, 9670, 12800, 28915]}
{"line_number": 94, "line_type": "generated", "code": "\n\n  /**\n   * Gets the NameInfo for the given property.\n   * @param propertyName The name of the property.\n   * @return The NameInfo for the property.\n   */\n  NameInfo getNameInfoForProperty(String propertyName) {\n    return propertyName", "entropy": 0.325439453125, "is_bug_line": false, "sus_score": 0.21650635094610968, "per_token_entropy": [0.63037109375, 0.7890625, 0.11297607421875, 0.00015413761138916016, 1.8076171875, 0.378662109375, 0.98583984375, 0.00461578369140625, 0.55615234375, 0.61083984375, 0.4599609375, 0.86083984375, 1.591796875, 0.68212890625, 0.343994140625, 0.27587890625, 0.07135009765625, 0.82177734375, 0.052520751953125, 0.32568359375, 0.019378662109375, 0.0207977294921875, 0.048095703125, 0.2841796875, 0.0526123046875, 0.140625, 0.0038967132568359375, 0.3076171875, 0.1182861328125, 0.426513671875, 0.0005316734313964844, 0.390625, 0.211181640625, 0.5595703125, 0.6044921875, 0.0714111328125, 0.022552490234375, 0.0137786865234375, 0.78662109375, 8.463859558105469e-06, 0.2261962890625, 0.002513885498046875, 0.019500732421875, 0.416748046875, 0.0016641616821289062, 0.00487518310546875, 0.00064849853515625, 0.0030612945556640625, 0.0003600120544433594, 0.0224761962890625, 0.56884765625, 0.2093505859375], "tokens": [719, 1022, 664, 319, 7124, 322, 3270, 1120, 436, 322, 2702, 2804, 32, 664, 319, 477, 753, 28859, 886, 636, 432, 322, 2804, 32, 664, 319, 477, 601, 886, 3270, 1120, 436, 322, 2804, 32, 664, 569, 334, 3270, 1120, 16407, 1120, 1562, 1653, 26, 652, 28859, 27, 301, 284, 442, 28859]}
{"line_number": 98, "line_type": "original", "code": "  private final Map<String, NameInfo> propertyNameInfo = Maps.newHashMap();", "entropy": 1.4853515625, "is_bug_line": false, "sus_score": 0.21650635094610968, "per_token_entropy": [3.828125, 5.79296875, 2.158203125, 7.5625, 0.01263427734375, 0.285888671875, 0.0015163421630859375, 0.6611328125, 0.00032830238342285156, 0.004596710205078125, 4.25390625, 0.71533203125, 0.58447265625, 0.8447265625, 0.0125885009765625, 0.0008311271667480469, 0.00601959228515625, 0.01274871826171875], "tokens": [225, 945, 1158, 3516, 46, 652, 30, 3270, 1120, 48, 28859, 1120, 280, 23301, 32, 890, 8254, 473]}
{"line_number": 98, "line_type": "generated", "code": "\n      );\n    }\n    NodeTraversal.traverse(compiler, root,", "entropy": 0.25146484375, "is_bug_line": false, "sus_score": 0.21650635094610968, "per_token_entropy": [1.806640625, 0.454345703125, 0.2054443359375, 9.85860824584961e-05, 0.931640625, 0.09661865234375, 0.0085906982421875, 0.0005049705505371094, 4.8041343688964844e-05, 0.003070831298828125, 0.0023021697998046875, 7.152557373046875e-06, 0.01091766357421875, 0.00031113624572753906], "tokens": [397, 1093, 284, 320, 284, 4004, 35699, 32, 33261, 26, 10199, 30, 3051, 30]}
{"line_number": 102, "line_type": "original", "code": "  private final Map<String, NameInfo> varNameInfo = Maps.newHashMap();", "entropy": 0.806640625, "is_bug_line": false, "sus_score": 0.21650635094610968, "per_token_entropy": [1.48046875, 7.32421875, 1.453125, 1.41796875, 0.00865936279296875, 0.08819580078125, 0.000659942626953125, 0.2442626953125, 0.00019919872283935547, 0.00128173828125, 2.71875, 0.233154296875, 0.013702392578125, 0.01535797119140625, 0.320068359375, 0.004955291748046875, 0.0010585784912109375, 0.0017795562744140625, 0.0027980804443359375], "tokens": [225, 945, 1158, 3516, 46, 652, 30, 3270, 1120, 48, 773, 558, 1120, 280, 23301, 32, 890, 8254, 473]}
{"line_number": 102, "line_type": "generated", "code": "\n    if (anchorUnusedVars) {\n      for (String var : globalFunctionNames.keySet()) {\n        if (!symbolGraph.hasNode(getNameInfoForName(var, VAR))) {\n          symbolGraph.createNode(getNameInfoForName(var", "entropy": 0.382568359375, "is_bug_line": false, "sus_score": 0.21650635094610968, "per_token_entropy": [1.5615234375, 2.009765625, 0.1331787109375, 0.6240234375, 9.942054748535156e-05, 9.739398956298828e-05, 0.0430908203125, 0.0013399124145507812, 0.0496826171875, 1.166015625, 0.0013875961303710938, 1.791015625, 1.384765625, 0.8017578125, 1.6259765625, 1.63671875, 0.375244140625, 0.305908203125, 0.020233154296875, 0.0010766983032226562, 0.00019180774688720703, 0.021575927734375, 1.37109375, 0.46533203125, 1.4130859375, 0.0137939453125, 0.0044403076171875, 0.72265625, 0.366943359375, 0.0251617431640625, 0.4775390625, 0.0007634162902832031, 0.00447845458984375, 0.0184326171875, 0.0016012191772460938, 0.018585205078125, 0.01708984375, 0.00801849365234375, 0.0277252197265625, 0.00031185150146484375, 0.02410888671875, 1.2490234375, 0.0002677440643310547, 0.00048732757568359375, 0.044647216796875, 0.00530242919921875, 0.0458984375, 2.0503997802734375e-05, 0.00035643577575683594, 0.00048542022705078125, 0.00019502639770507812, 0.0013284683227539062], "tokens": [284, 415, 308, 9920, 28694, 12034, 27, 301, 397, 436, 308, 652, 773, 499, 3649, 2447, 4109, 32, 23614, 1157, 301, 291, 415, 1429, 7010, 3406, 32, 2040, 1212, 26, 5165, 1120, 1562, 558, 26, 869, 30, 10244, 2610, 301, 616, 6977, 3406, 32, 46625, 26, 5165, 1120, 1562, 558, 26, 869]}
{"line_number": 117, "line_type": "original", "code": "    this.compiler = compiler;", "entropy": 1.9091796875, "is_bug_line": false, "sus_score": 0.21650635094610968, "per_token_entropy": [5.7890625, 6.28515625, 0.052886962890625, 1.1904296875, 0.031341552734375, 0.01010894775390625, 0.01041412353515625], "tokens": [264, 458, 32, 10199, 280, 8980, 45]}
{"line_number": 117, "line_type": "generated", "code": "\n  /**\n   * Returns information on all prototype properties that are referenced.\n   */\n  public Collection<NameInfo> getReferencedNameInfo() {\n    return symbolGraph.getReachableNodes(globalNode);\n  }\n\n  /**\n   * Returns information on the", "entropy": 0.29638671875, "is_bug_line": false, "sus_score": 0.21650635094610968, "per_token_entropy": [0.55615234375, 0.410888671875, 0.0311126708984375, 0.0001691579818725586, 0.395751953125, 0.521484375, 0.306396484375, 1.419921875, 0.71728515625, 0.046234130859375, 0.91357421875, 0.37744140625, 1.06640625, 1.0380859375, 0.0137939453125, 0.07440185546875, 0.0102386474609375, 0.037689208984375, 0.058837890625, 0.0008273124694824219, 0.0030231475830078125, 4.673004150390625e-05, 0.00030541419982910156, 0.113525390625, 0.2265625, 0.018218994140625, 0.2164306640625, 0.026947021484375, 0.0007696151733398438, 0.03277587890625, 0.82666015625, 0.86376953125, 0.00024509429931640625, 0.005992889404296875, 0.27001953125, 0.52490234375, 0.0008082389831542969, 0.03216552734375, 0.4248046875, 0.5234375, 0.0006089210510253906, 0.178955078125, 0.004093170166015625, 0.0002046823501586914, 0.48974609375, 0.1326904296875, 0.01505279541015625, 3.3974647521972656e-05, 0.3134765625, 0.404052734375, 0.1129150390625, 1.6494140625], "tokens": [334, 1022, 664, 319, 3759, 2471, 544, 1169, 21666, 4308, 688, 884, 15167, 32, 664, 569, 334, 562, 7376, 46, 558, 1120, 48, 622, 34481, 558, 1120, 346, 301, 284, 442, 6977, 3406, 32, 371, 33489, 444, 5909, 26, 3264, 1212, 293, 334, 320, 719, 1022, 664, 319, 3759, 2471, 544, 322]}
{"line_number": 118, "line_type": "original", "code": "    this.moduleGraph = moduleGraph;", "entropy": 2.0546875, "is_bug_line": false, "sus_score": 0.21650635094610968, "per_token_entropy": [5.58203125, 9.328125, 0.0283660888671875, 3.14453125, 0.343994140625, 0.02874755859375, 0.0256500244140625, 0.00015437602996826172, 0.00907135009765625], "tokens": [264, 458, 32, 1647, 3406, 280, 2297, 3406, 45]}
{"line_number": 118, "line_type": "generated", "code": "\n  /**\n   * Returns information on the name of a prototype property, or null if the\n   * name is not a prototype property.\n   */\n  public NameInfo getNameInfoForName(String name, int type) {\n    if (type == PROPERTY)", "entropy": 0.406005859375, "is_bug_line": false, "sus_score": 0.21650635094610968, "per_token_entropy": [0.31689453125, 0.468994140625, 0.04095458984375, 0.00016427040100097656, 0.54345703125, 0.64501953125, 0.3232421875, 0.85693359375, 2.5234375, 1.2001953125, 0.65625, 0.67626953125, 0.0162353515625, 1.369140625, 0.89208984375, 0.20458984375, 0.58056640625, 1.8525390625, 0.0885009765625, 0.00028133392333984375, 0.67578125, 0.66455078125, 0.1552734375, 0.30859375, 0.1407470703125, 0.00787353515625, 0.1185302734375, 0.05670166015625, 0.144775390625, 0.005138397216796875, 0.1502685546875, 0.0142364501953125, 4.363059997558594e-05, 0.0584716796875, 0.0020656585693359375, 0.035919189453125, 0.56103515625, 0.0015926361083984375, 0.006500244140625, 0.1541748046875, 0.60498046875, 1.640625, 0.69140625, 0.0127105712890625, 0.001140594482421875, 0.042938232421875, 1.15625, 0.036468505859375, 0.1846923828125, 0.01349639892578125, 0.170654296875, 0.03338623046875], "tokens": [334, 1022, 664, 319, 3759, 2471, 544, 322, 636, 432, 312, 21666, 2804, 30, 556, 744, 415, 322, 664, 319, 636, 438, 646, 312, 21666, 2804, 32, 664, 569, 334, 562, 3270, 1120, 16407, 1120, 1562, 558, 26, 652, 636, 30, 629, 827, 27, 301, 284, 415, 308, 681, 610, 42149, 27]}
{"line_number": 119, "line_type": "original", "code": "    this.canModifyExterns = canModifyExterns;", "entropy": 1.3125, "is_bug_line": false, "sus_score": 0.21650635094610968, "per_token_entropy": [2.4765625, 11.1484375, 0.26904296875, 5.68359375, 0.012451171875, 0.0035858154296875, 5.042552947998047e-05, 0.0036373138427734375, 0.01515960693359375, 0.0263214111328125, 0.0003871917724609375, 0.0002880096435546875, 2.6226043701171875e-06, 8.64267349243164e-05, 0.05255126953125], "tokens": [264, 458, 32, 3374, 14504, 571, 900, 101, 280, 883, 14504, 571, 900, 101, 45]}
{"line_number": 119, "line_type": "generated", "code": "\n   * Returns information on the given property.\n   */\n  public NameInfo getNameInfoForName(String name, PropertyType propertyType) {\n    if (propertyType == PropertyType.PROPERTY) {\n      NameInfo nameInfo = propertyNameInfo.get(", "entropy": 0.318603515625, "is_bug_line": false, "sus_score": 0.21650635094610968, "per_token_entropy": [0.77294921875, 0.044464111328125, 0.260986328125, 0.623046875, 0.327880859375, 1.080078125, 1.333984375, 1.05078125, 0.806640625, 0.2919921875, 0.382080078125, 0.014495849609375, 0.09429931640625, 0.041961669921875, 3.8743019104003906e-05, 0.034149169921875, 0.0004949569702148438, 0.047515869140625, 0.335693359375, 0.00118255615234375, 0.008026123046875, 0.17919921875, 0.322998046875, 1.0283203125, 0.734375, 0.73388671875, 0.05316162109375, 0.00212860107421875, 0.0026569366455078125, 0.09185791015625, 1.5703125, 0.050079345703125, 0.1748046875, 0.00019347667694091797, 0.042938232421875, 1.251953125, 0.0002887248992919922, 8.940696716308594e-05, 0.2047119140625, 0.02618408203125, 0.00060272216796875, 0.01036834716796875, 1.5478515625, 3.0040740966796875e-05, 0.97412109375, 0.00036025047302246094, 0.004703521728515625, 0.002338409423828125, 9.059906005859375e-06, 3.8504600524902344e-05, 0.0001227855682373047, 0.00016319751739501953], "tokens": [664, 319, 3759, 2471, 544, 322, 2702, 2804, 32, 664, 569, 334, 562, 3270, 1120, 16407, 1120, 1562, 558, 26, 652, 636, 30, 6480, 620, 2804, 620, 27, 301, 284, 415, 308, 2433, 620, 610, 6480, 620, 32, 12315, 27, 301, 397, 3270, 1120, 636, 1120, 280, 28859, 1120, 32, 371, 26]}
{"line_number": 120, "line_type": "original", "code": "    this.anchorUnusedVars = anchorUnusedVars;", "entropy": 2.75390625, "is_bug_line": false, "sus_score": 0.21650635094610968, "per_token_entropy": [4.13671875, 9.796875, 4.4453125, 9.1171875, 0.7236328125, 0.01739501953125, 1.98046875, 0.04290771484375, 0.00311279296875, 0.002063751220703125, 0.0290679931640625], "tokens": [264, 458, 32, 9920, 28694, 12034, 280, 14177, 28694, 12034, 45]}
{"line_number": 120, "line_type": "generated", "code": "\n   * creating it if necessary.\n   */\n  private NameInfo getNameInfoForName(String name, int type) {\n    Preconditions.checkArgument(name!= null);\n    Preconditions.checkArgument(type == PROPERTY || type == VAR);\n    Preconditions.", "entropy": 0.281494140625, "is_bug_line": false, "sus_score": 0.21650635094610968, "per_token_entropy": [0.2152099609375, 0.0238494873046875, 1.1357421875, 0.63330078125, 0.11517333984375, 0.5498046875, 0.03387451171875, 0.1832275390625, 0.41796875, 0.0071563720703125, 0.52685546875, 0.006557464599609375, 4.76837158203125e-06, 0.01055908203125, 0.00032806396484375, 0.0083770751953125, 0.01364898681640625, 0.0011091232299804688, 0.01849365234375, 0.038726806640625, 0.008636474609375, 1.3994140625, 0.705078125, 0.00798797607421875, 0.0035381317138671875, 0.10894775390625, 1.7529296875, 0.00047469139099121094, 0.0870361328125, 0.169189453125, 0.1771240234375, 1.1240234375, 0.23193359375, 0.0012226104736328125, 0.283935546875, 0.346923828125, 0.3779296875, 1.6450881958007812e-05, 0.0018749237060546875, 0.0303497314453125, 0.06561279296875, 0.2327880859375, 0.053314208984375, 0.1510009765625, 0.018798828125, 0.02069091796875, 0.0003819465637207031, 0.435546875, 0.06494140625, 0.96923828125, 1.8642578125, 0.0012845993041992188], "tokens": [664, 319, 6892, 561, 415, 7506, 32, 664, 569, 334, 945, 3270, 1120, 16407, 1120, 1562, 558, 26, 652, 636, 30, 629, 827, 27, 301, 284, 40596, 32, 1553, 3484, 26, 426, 863, 744, 293, 284, 40596, 32, 1553, 3484, 26, 681, 610, 42149, 1276, 827, 610, 10244, 293, 284, 40596, 32]}
{"line_number": 122, "line_type": "original", "code": "    if (moduleGraph != null) {", "entropy": 1.0986328125, "is_bug_line": false, "sus_score": 0.21650635094610968, "per_token_entropy": [3.623046875, 2.033203125, 0.248046875, 2.3828125, 0.1669921875, 1.15234375, 0.0008025169372558594, 0.258056640625, 0.0218963623046875], "tokens": [264, 415, 308, 1647, 3406, 863, 744, 27, 301]}
{"line_number": 122, "line_type": "generated", "code": "\n   * @param name The name of the property or variable.\n   * @param type The type of the name.\n   * @return The name info.\n   */\n  private NameInfo getNameInfoForName(String name, Type type) {\n    switch", "entropy": 0.26220703125, "is_bug_line": false, "sus_score": 0.21650635094610968, "per_token_entropy": [0.1693115234375, 0.1904296875, 0.374267578125, 0.083251953125, 0.0833740234375, 0.12091064453125, 0.1279296875, 0.71484375, 0.05908203125, 0.2498779296875, 0.1861572265625, 0.0633544921875, 0.199462890625, 0.05816650390625, 0.07440185546875, 0.00738525390625, 0.1046142578125, 0.72998046875, 0.52783203125, 0.07672119140625, 0.08990478515625, 0.5654296875, 0.990234375, 1.134765625, 0.44140625, 0.353271484375, 0.03277587890625, 0.1256103515625, 0.37255859375, 0.50830078125, 0.0235595703125, 1.2587890625, 0.037506103515625, 0.0184326171875, 0.00817108154296875, 0.46484375, 0.005168914794921875, 1.9073486328125e-06, 0.0024585723876953125, 8.809566497802734e-05, 0.00182342529296875, 0.000926971435546875, 0.00037026405334472656, 0.0085601806640625, 0.0009813308715820312, 0.0003571510314941406, 1.9765625, 0.00925445556640625, 0.0017719268798828125, 0.0041046142578125, 0.045989990234375, 0.95458984375], "tokens": [664, 319, 477, 753, 636, 886, 636, 432, 322, 2804, 556, 2677, 32, 664, 319, 477, 753, 827, 886, 827, 432, 322, 636, 32, 664, 319, 477, 601, 886, 636, 3099, 32, 664, 569, 334, 945, 3270, 1120, 16407, 1120, 1562, 558, 26, 652, 636, 30, 2768, 827, 27, 301, 284, 3578]}
{"line_number": 128, "line_type": "original", "code": "    globalNode.markReference(null);", "entropy": 1.615234375, "is_bug_line": false, "sus_score": 0.21650635094610968, "per_token_entropy": [2.408203125, 11.03125, 0.39013671875, 0.026824951171875, 0.28076171875, 0.152587890625, 0.029022216796875, 0.216064453125, 0.006992340087890625], "tokens": [264, 3649, 1212, 32, 1826, 3564, 26, 1693, 293]}
{"line_number": 128, "line_type": "generated", "code": "\n    if (!map.containsKey(name)) {\n      NameInfo nameInfo = new NameInfo(name, type);\n      map.put(name, nameInfo);\n      symbolGraph.createNode(nameInfo);\n    }\n    return map.get(name", "entropy": 0.1463623046875, "is_bug_line": false, "sus_score": 0.21650635094610968, "per_token_entropy": [0.156982421875, 1.279296875, 0.93896484375, 0.138427734375, 7.18832015991211e-05, 0.0010089874267578125, 0.00036263465881347656, 0.0011053085327148438, 0.0027523040771484375, 0.0007257461547851562, 0.00991058349609375, 1.017578125, 0.00011098384857177734, 0.486572265625, 0.0005426406860351562, 0.008758544921875, 0.023193359375, 0.0028591156005859375, 3.2782554626464844e-05, 0.004253387451171875, 0.03131103515625, 0.6640625, 0.028594970703125, 0.0775146484375, 0.0205535888671875, 0.18359375, 2.944469451904297e-05, 4.3511390686035156e-05, 0.00010120868682861328, 0.0001798868179321289, 0.0005092620849609375, 0.0004467964172363281, 1.2159347534179688e-05, 6.830692291259766e-05, 0.6494140625, 0.76513671875, 0.0001506805419921875, 0.0003528594970703125, 0.0280609130859375, 0.0009717941284179688, 0.0009212493896484375, 2.5391578674316406e-05, 0.00273895263671875, 0.7177734375, 0.0011692047119140625, 0.343017578125, 0.0201568603515625, 0.00220489501953125, 2.7418136596679688e-05, 2.110004425048828e-05, 2.0265579223632812e-05, 6.0558319091796875e-05], "tokens": [284, 415, 1429, 1110, 32, 15943, 26, 426, 490, 301, 397, 3270, 1120, 636, 1120, 280, 537, 3270, 1120, 26, 426, 30, 827, 293, 397, 1992, 32, 524, 26, 426, 30, 636, 1120, 293, 397, 6977, 3406, 32, 46625, 26, 426, 1120, 293, 284, 320, 284, 442, 1992, 32, 371, 26, 426]}
