{"line_number": 136, "line_type": "original", "code": "          return TernaryValue.FALSE;", "entropy": 2.7578125, "is_bug_line": true, "sus_score": 0.2886751345948129, "per_token_entropy": [8.8046875, 0.80078125, 8.6796875, 0.0011835098266601562, 0.00019359588623046875, 0.003963470458984375, 3.740234375, 0.0308380126953125], "tokens": [2033, 442, 394, 48584, 882, 32, 7347, 45]}
{"line_number": 136, "line_type": "generated", "code": "\n\n      case Token.TRUE:\n      case Token.FALSE:\n        return n.getString();\n\n      case Token.NULL:\n        return \"null\";\n    }\n\n    return null;\n  }\n\n  /**\n   * Gets the value of a node as a number, or", "entropy": 0.1494140625, "is_bug_line": true, "sus_score": 0.2886751345948129, "per_token_entropy": [0.634765625, 0.034027099609375, 6.61611557006836e-05, 2.86102294921875e-05, 0.226318359375, 0.00011491775512695312, 0.1739501953125, 0.00038170814514160156, 1.430511474609375e-05, 7.295608520507812e-05, 0.00966644287109375, 2.5033950805664062e-05, 0.66748046875, 0.0504150390625, 0.071533203125, 0.00011456012725830078, 0.27685546875, 0.02374267578125, 0.493408203125, 0.07086181640625, 0.00011324882507324219, 9.250640869140625e-05, 0.267822265625, 1.8715858459472656e-05, 0.1051025390625, 0.024200439453125, 0.03924560546875, 0.00018727779388427734, 0.0001747608184814453, 0.978515625, 0.0003037452697753906, 0.157958984375, 0.11126708984375, 0.0010690689086914062, 0.00012099742889404297, 0.004734039306640625, 0.0004284381866455078, 0.26953125, 0.22412109375, 0.05364990234375, 0.00030422210693359375, 0.74169921875, 0.1300048828125, 0.7177734375, 0.0153656005859375, 0.099853515625, 0.1129150390625, 0.1416015625, 0.06964111328125, 0.51708984375, 0.2095947265625, 0.03924560546875], "tokens": [1687, 1135, 6512, 32, 6373, 44, 397, 1135, 6512, 32, 7347, 44, 291, 442, 310, 32, 7069, 473, 1687, 1135, 6512, 32, 3293, 44, 291, 442, 313, 1693, 866, 284, 320, 446, 442, 744, 45, 334, 320, 719, 1022, 664, 319, 7124, 322, 786, 432, 312, 1541, 619, 312, 1451, 30, 556]}
{"line_number": 123, "line_type": "original", "code": "        return TernaryValue.forBoolean(n.getString().length() > 0);", "entropy": 1.4033203125, "is_bug_line": false, "sus_score": 0.1889822365046136, "per_token_entropy": [7.21875, 1.732421875, 8.6171875, 0.0008258819580078125, 0.00018835067749023438, 0.003772735595703125, 1.859375, 1.123046875, 0.0175323486328125, 0.239013671875, 0.0111236572265625, 2.443359375, 1.2080078125, 0.329345703125, 0.123779296875, 1.6708984375, 0.00293731689453125, 0.00742340087890625, 0.06231689453125], "tokens": [351, 442, 394, 48584, 882, 32, 979, 4709, 26, 96, 32, 7069, 922, 1322, 346, 848, 225, 34, 293]}
{"line_number": 123, "line_type": "generated", "code": "\n\n      case Token.STRING:\n        return n.getString();\n\n      case Token.NUMBER:\n        return String.valueOf(n.getDouble());\n\n      case Token.NULL:\n        return \"null\";\n\n      case Token.TRUE:\n        return \"true\";\n\n      case", "entropy": 0.1427001953125, "is_bug_line": false, "sus_score": 0.1889822365046136, "per_token_entropy": [0.96923828125, 0.1429443359375, 0.0006618499755859375, 1.4424324035644531e-05, 0.62939453125, 0.0012216567993164062, 0.17431640625, 0.16259765625, 0.046356201171875, 0.0002677440643310547, 0.01053619384765625, 0.003055572509765625, 0.15869140625, 0.040374755859375, 0.00016129016876220703, 1.3828277587890625e-05, 0.58740234375, 0.00014579296112060547, 0.10174560546875, 0.89990234375, 1.1201171875, 0.00699615478515625, 0.001361846923828125, 0.00872039794921875, 0.005916595458984375, 0.00010800361633300781, 0.0032444000244140625, 0.0009975433349609375, 0.04718017578125, 0.0248870849609375, 0.00022685527801513672, 3.921985626220703e-05, 1.2333984375, 2.6106834411621094e-05, 0.2142333984375, 0.0081634521484375, 0.032318115234375, 0.0001983642578125, 0.0004012584686279297, 0.0248565673828125, 0.007205963134765625, 3.8743019104003906e-05, 0.0010519027709960938, 0.732421875, 1.5735626220703125e-05, 0.00890350341796875, 0.0006561279296875, 0.0016603469848632812, 5.8770179748535156e-05, 5.1856040954589844e-05, 0.004634857177734375, 0.000606536865234375], "tokens": [1687, 1135, 6512, 32, 5203, 44, 291, 442, 310, 32, 7069, 473, 1687, 1135, 6512, 32, 10463, 44, 291, 442, 892, 32, 9162, 26, 96, 32, 37792, 1035, 1687, 1135, 6512, 32, 3293, 44, 291, 442, 313, 1693, 866, 1687, 1135, 6512, 32, 6373, 44, 291, 442, 313, 1508, 866, 1687, 1135]}
{"line_number": 156, "line_type": "original", "code": "        if (!mayHaveSideEffects(n)) {", "entropy": 1.3642578125, "is_bug_line": false, "sus_score": 0.17677669529663687, "per_token_entropy": [4.25390625, 1.9267578125, 2.24609375, 5.91015625, 0.183349609375, 0.0198974609375, 0.08880615234375, 0.055084228515625, 0.047607421875, 0.1942138671875, 0.0821533203125], "tokens": [351, 415, 1429, 17302, 9037, 7427, 20126, 26, 96, 490, 301]}
{"line_number": 156, "line_type": "generated", "code": "\n      case Token.OBJECTLIT:\n        return objectToString(n);\n      }\n      break;\n    }\n\n    return null;\n  }\n\n  /**\n   * Gets the value of a node as a double, or null if it cannot be converted.\n   * When", "entropy": 0.27099609375, "is_bug_line": false, "sus_score": 0.17677669529663687, "per_token_entropy": [1.11328125, 0.454833984375, 0.002315521240234375, 0.0007867813110351562, 0.335205078125, 0.0005240440368652344, 0.0020084381103515625, 0.439208984375, 0.38818359375, 0.626953125, 0.059783935546875, 0.00983428955078125, 0.007549285888671875, 0.044921875, 1.99609375, 0.22802734375, 0.57421875, 0.356201171875, 0.0007724761962890625, 0.5546875, 0.021453857421875, 0.2548828125, 0.10772705078125, 0.00823974609375, 0.000186920166015625, 0.01332855224609375, 0.00022912025451660156, 0.2125244140625, 0.63232421875, 0.10797119140625, 0.00021719932556152344, 0.7373046875, 0.0716552734375, 0.537109375, 0.01099395751953125, 0.04327392578125, 0.240478515625, 0.09552001953125, 0.05462646484375, 1.57421875, 0.2607421875, 0.06451416015625, 1.4287109375, 0.005859375, 0.0190887451171875, 0.01983642578125, 0.0086669921875, 0.005146026611328125, 0.025299072265625, 0.00324249267578125, 0.1673583984375, 0.1600341796875], "tokens": [397, 1135, 6512, 32, 8460, 22532, 44, 291, 442, 1300, 4590, 26, 96, 293, 397, 320, 397, 1626, 45, 284, 320, 446, 442, 744, 45, 334, 320, 719, 1022, 664, 319, 7124, 322, 786, 432, 312, 1541, 619, 312, 2064, 30, 556, 744, 415, 561, 4881, 526, 12785, 32, 664, 319, 5076]}
{"line_number": 157, "line_type": "original", "code": "          return TernaryValue.TRUE;", "entropy": 2.609375, "is_bug_line": false, "sus_score": 0.17677669529663687, "per_token_entropy": [6.359375, 1.37109375, 9.96875, 0.00039386749267578125, 0.0003266334533691406, 0.0019550323486328125, 2.724609375, 0.4453125], "tokens": [2033, 442, 394, 48584, 882, 32, 6373, 45]}
{"line_number": 157, "line_type": "generated", "code": "\n        break;\n    }\n\n    return null;\n  }\n\n  /**\n   * Gets the value of a node as a number, or null if it cannot be converted.\n   * When it returns a non-null number, this method effectively emulates the\n   *", "entropy": 0.1435546875, "is_bug_line": false, "sus_score": 0.17677669529663687, "per_token_entropy": [0.72265625, 0.4560546875, 0.00022554397583007812, 0.32666015625, 9.036064147949219e-05, 0.179931640625, 0.083251953125, 0.0022106170654296875, 9.942054748535156e-05, 0.00722503662109375, 0.00031638145446777344, 0.1318359375, 0.49755859375, 0.0933837890625, 0.00022149085998535156, 0.79931640625, 0.076904296875, 0.69091796875, 0.01383209228515625, 0.04510498046875, 0.250244140625, 0.1688232421875, 0.0682373046875, 1.0703125, 0.2303466796875, 0.057159423828125, 0.73681640625, 0.006305694580078125, 0.016510009765625, 0.017730712890625, 0.0106658935546875, 0.00476837158203125, 0.03143310546875, 0.0028896331787109375, 0.1112060546875, 0.1219482421875, 0.009246826171875, 0.0033321380615234375, 0.00904083251953125, 0.07647705078125, 0.0005736351013183594, 0.0013065338134765625, 0.276123046875, 0.01061248779296875, 0.0055999755859375, 0.00298309326171875, 0.024993896484375, 0.00090789794921875, 0.0002448558807373047, 0.007411956787109375, 0.0011968612670898438, 7.402896881103516e-05], "tokens": [291, 1626, 45, 284, 320, 446, 442, 744, 45, 334, 320, 719, 1022, 664, 319, 7124, 322, 786, 432, 312, 1541, 619, 312, 1451, 30, 556, 744, 415, 561, 4881, 526, 12785, 32, 664, 319, 5076, 561, 3217, 312, 2979, 31, 1693, 1451, 30, 458, 1411, 29419, 2642, 26292, 322, 664, 319]}
{"line_number": 144, "line_type": "original", "code": "          return TernaryValue.FALSE;", "entropy": 1.962890625, "is_bug_line": false, "sus_score": 0.15811388300841897, "per_token_entropy": [5.703125, 0.57568359375, 8.0546875, 7.271766662597656e-05, 0.00041365623474121094, 0.0016222000122070312, 1.349609375, 0.020294189453125], "tokens": [2033, 442, 394, 48584, 882, 32, 7347, 45]}
{"line_number": 144, "line_type": "generated", "code": "\n    }\n\n    return null;\n  }\n\n  /**\n   * Gets the value of a node as a double, or NaN if it cannot be converted.\n   * When it returns a non-NaN double, this method effectively emulates the\n   * <code>", "entropy": 0.167236328125, "is_bug_line": false, "sus_score": 0.15811388300841897, "per_token_entropy": [1.3818359375, 0.0016794204711914062, 0.188720703125, 0.190185546875, 0.0034694671630859375, 7.271766662597656e-05, 0.00565338134765625, 0.0001220703125, 0.05596923828125, 0.379150390625, 0.1063232421875, 0.00018978118896484375, 0.35791015625, 0.08697509765625, 0.64453125, 0.012847900390625, 0.0275115966796875, 0.383056640625, 0.08111572265625, 0.057403564453125, 1.431640625, 0.305908203125, 0.06512451171875, 1.134765625, 0.0279541015625, 0.0535888671875, 0.033905029296875, 0.01103973388671875, 0.006916046142578125, 0.033477783203125, 0.0234527587890625, 0.28125, 0.2357177734375, 0.0260162353515625, 0.0411376953125, 0.06732177734375, 0.275390625, 0.046722412109375, 0.017425537109375, 0.457275390625, 0.0219268798828125, 0.005680084228515625, 0.0030803680419921875, 0.0159912109375, 0.001201629638671875, 0.0003077983856201172, 0.0126953125, 0.0023212432861328125, 0.0001081228256225586, 0.0914306640625, 0.0003542900085449219, 0.000469207763671875], "tokens": [284, 320, 446, 442, 744, 45, 334, 320, 719, 1022, 664, 319, 7124, 322, 786, 432, 312, 1541, 619, 312, 2064, 30, 556, 21644, 415, 561, 4881, 526, 12785, 32, 664, 319, 5076, 561, 3217, 312, 2979, 31, 11126, 2064, 30, 458, 1411, 29419, 2642, 26292, 322, 664, 319, 333, 687, 48]}
{"line_number": 2515, "line_type": "original", "code": "    if (!isExprAssign(n)) {", "entropy": 1.798828125, "is_bug_line": false, "sus_score": 0.125, "per_token_entropy": [3.822265625, 3.10546875, 2.203125, 2.328125, 2.37890625, 1.5537109375, 0.09759521484375, 2.091796875, 0.374267578125, 0.03466796875], "tokens": [264, 415, 1429, 297, 6150, 9079, 26, 96, 490, 301]}
{"line_number": 2515, "line_type": "generated", "code": "\n  }\n\n  /**\n   * Create a node for a named property access:\n   *   \"this.propertyName\"\n   */\n  static Node newThisPropertyNode(String name, Node srcReferenceNode) {\n    Node node = new Node(Token.GET", "entropy": 0.46875, "is_bug_line": false, "sus_score": 0.125, "per_token_entropy": [0.47900390625, 0.123779296875, 0.6875, 0.284912109375, 0.08258056640625, 0.0005888938903808594, 0.9345703125, 0.101806640625, 0.2607421875, 0.1915283203125, 1.2158203125, 3.67578125, 2.130859375, 0.438232421875, 0.75537109375, 0.042205810546875, 0.0010929107666015625, 0.1771240234375, 0.833984375, 2.25390625, 0.242919921875, 0.93310546875, 0.12384033203125, 0.02630615234375, 0.1407470703125, 0.0161285400390625, 0.06842041015625, 0.00485992431640625, 0.1785888671875, 0.9697265625, 1.4677734375, 0.36767578125, 0.0013914108276367188, 0.3642578125, 1.275390625, 0.3515625, 0.0919189453125, 0.03436279296875, 0.1241455078125, 0.00418853759765625, 0.00897979736328125, 0.0030918121337890625, 0.07464599609375, 0.325439453125, 1.287109375, 0.00942230224609375, 0.288818359375, 0.06494140625, 0.0010004043579101562, 0.580078125, 5.7220458984375e-06, 0.267822265625], "tokens": [334, 320, 719, 1022, 664, 319, 2648, 312, 1541, 436, 312, 8189, 2804, 2857, 44, 664, 319, 261, 313, 578, 32, 24948, 20, 664, 569, 334, 907, 4004, 537, 2272, 1653, 1212, 26, 652, 636, 30, 4004, 1561, 3564, 1212, 27, 301, 284, 4004, 1541, 280, 537, 4004, 26, 1763, 32, 2788]}
{"line_number": 2516, "line_type": "original", "code": "      return false;", "entropy": 2.505859375, "is_bug_line": false, "sus_score": 0.125, "per_token_entropy": [7.8671875, 1.19921875, 0.9482421875, 0.01026153564453125], "tokens": [647, 442, 901, 45]}
{"line_number": 2516, "line_type": "generated", "code": "\n  /**\n   * Create a node for a conditional expression:\n   *   \"a? b : c\"\n   */\n  static Node newConditionalNode(Node srcReferenceNode, Node cond, Node thenExpr,\n      Node elseExpr) {\n    Node node", "entropy": 0.369873046875, "is_bug_line": false, "sus_score": 0.125, "per_token_entropy": [1.1494140625, 0.6708984375, 0.0830078125, 0.0011568069458007812, 1.24609375, 0.1246337890625, 0.28564453125, 0.1951904296875, 1.2177734375, 3.5078125, 0.20361328125, 0.390625, 0.028656005859375, 0.0022983551025390625, 0.152587890625, 0.6123046875, 1.14453125, 0.043121337890625, 0.03302001953125, 0.0126953125, 0.01442718505859375, 0.02349853515625, 0.021820068359375, 0.1064453125, 0.016143798828125, 0.07098388671875, 0.004364013671875, 0.01175689697265625, 0.26708984375, 0.40087890625, 0.0012273788452148438, 0.238037109375, 0.98388671875, 0.1998291015625, 0.007312774658203125, 0.076904296875, 0.52978515625, 0.59814453125, 0.62109375, 0.125732421875, 1.203125, 1.0322265625, 0.003696441650390625, 0.8466796875, 0.00039458274841308594, 0.0002624988555908203, 0.00047659873962402344, 0.0029277801513671875, 0.0016984939575195312, 0.049591064453125, 0.19580078125, 0.475341796875], "tokens": [334, 1022, 664, 319, 2648, 312, 1541, 436, 312, 21161, 6101, 44, 664, 319, 261, 313, 83, 1018, 323, 499, 281, 20, 664, 569, 334, 907, 4004, 537, 21741, 1212, 26, 1212, 1561, 3564, 1212, 30, 4004, 16526, 30, 4004, 1615, 6150, 30, 397, 4004, 813, 6150, 27, 301, 284, 4004, 1541]}
{"line_number": 133, "line_type": "original", "code": "        return TernaryValue.FALSE;", "entropy": 2.158203125, "is_bug_line": false, "sus_score": 0.11180339887498948, "per_token_entropy": [7.30078125, 1.36328125, 6.421875, 0.00040268898010253906, 0.0003380775451660156, 0.0037784576416015625, 2.1640625, 0.0145263671875], "tokens": [351, 442, 394, 48584, 882, 32, 7347, 45]}
{"line_number": 133, "line_type": "generated", "code": "\n\n      case Token.NUMBER:\n          return String.valueOf(n.getDouble());\n\n      case Token.TRUE:\n        return \"true\";\n\n      case Token.FALSE:\n        return \"false\";\n\n      case Token.NULL:\n        return \"null\";\n\n      case Token", "entropy": 0.127685546875, "is_bug_line": false, "sus_score": 0.11180339887498948, "per_token_entropy": [0.5361328125, 0.083740234375, 0.00010204315185546875, 1.4662742614746094e-05, 0.82666015625, 0.0006718635559082031, 0.78759765625, 0.174560546875, 1.41796875, 0.01422119140625, 0.00189208984375, 0.0123748779296875, 0.0178070068359375, 0.0038166046142578125, 0.005062103271484375, 0.001995086669921875, 0.298583984375, 0.12158203125, 0.00025844573974609375, 6.008148193359375e-05, 0.4541015625, 7.164478302001953e-05, 0.52099609375, 0.0026645660400390625, 0.00890350341796875, 0.00027060508728027344, 0.0002601146697998047, 0.08782958984375, 0.0011920928955078125, 3.8504600524902344e-05, 7.522106170654297e-05, 0.0231170654296875, 1.9431114196777344e-05, 0.01497650146484375, 0.0002574920654296875, 0.00024509429931640625, 0.00036215782165527344, 6.246566772460938e-05, 0.0665283203125, 0.15380859375, 0.00010585784912109375, 0.00018787384033203125, 0.051544189453125, 2.2292137145996094e-05, 0.0217437744140625, 0.0057373046875, 0.01849365234375, 0.0002582073211669922, 0.0002244710922241211, 0.3642578125, 0.53125, 0.0002073049545288086], "tokens": [1687, 1135, 6512, 32, 10463, 44, 616, 442, 892, 32, 9162, 26, 96, 32, 37792, 1035, 1687, 1135, 6512, 32, 6373, 44, 291, 442, 313, 1508, 866, 1687, 1135, 6512, 32, 7347, 44, 291, 442, 313, 1870, 866, 1687, 1135, 6512, 32, 3293, 44, 291, 442, 313, 1693, 866, 1687, 1135, 6512]}
{"line_number": 152, "line_type": "original", "code": "        return TernaryValue.TRUE;", "entropy": 2.3203125, "is_bug_line": false, "sus_score": 0.11180339887498948, "per_token_entropy": [7.83203125, 2.029296875, 5.8359375, 2.5153160095214844e-05, 0.0008668899536132812, 0.0011730194091796875, 2.833984375, 0.03009033203125], "tokens": [351, 442, 394, 48584, 882, 32, 6373, 45]}
{"line_number": 152, "line_type": "generated", "code": "\n\n      case Token.ARRAYLIT:\n      case Token.OBJECTLIT:\n        if (!mayHaveSideEffects(n)) {\n          return n.toSource();\n        }\n        break;\n    }\n\n    return null;\n  }\n\n  /**\n   * Gets the numeric", "entropy": 0.2052001953125, "is_bug_line": false, "sus_score": 0.11180339887498948, "per_token_entropy": [0.9794921875, 0.033935546875, 9.906291961669922e-05, 3.3020973205566406e-05, 0.378173828125, 0.00017881393432617188, 0.00012004375457763672, 0.82080078125, 0.0010194778442382812, 1.1086463928222656e-05, 0.00010037422180175781, 0.007587432861328125, 4.9948692321777344e-05, 7.283687591552734e-05, 0.04669189453125, 0.44189453125, 0.28271484375, 0.025634765625, 0.0001310110092163086, 0.0006499290466308594, 1.2040138244628906e-05, 0.0004425048828125, 0.0004887580871582031, 0.00424957275390625, 0.0007100105285644531, 0.008270263671875, 0.326171875, 1.806640625, 0.0034694671630859375, 2.291015625, 0.003993988037109375, 0.2037353515625, 0.029266357421875, 0.0001938343048095703, 0.08160400390625, 0.0167083740234375, 0.00028443336486816406, 0.1865234375, 0.00017595291137695312, 0.1419677734375, 0.05126953125, 0.0012683868408203125, 0.00010156631469726562, 0.0071868896484375, 0.00017130374908447266, 0.11431884765625, 0.2646484375, 0.05596923828125, 0.00023066997528076172, 0.455322265625, 0.0677490234375, 1.5263671875], "tokens": [1687, 1135, 6512, 32, 9487, 22532, 44, 397, 1135, 6512, 32, 8460, 22532, 44, 291, 415, 1429, 17302, 9037, 7427, 20126, 26, 96, 490, 301, 616, 442, 310, 32, 452, 2028, 473, 291, 320, 291, 1626, 45, 284, 320, 446, 442, 744, 45, 334, 320, 719, 1022, 664, 319, 7124, 322, 12738]}
{"line_number": 1940, "line_type": "original", "code": "    return isFunctionExpression(node) && isEmptyBlock(node.getLastChild());", "entropy": 2.162109375, "is_bug_line": false, "sus_score": 0.1091089451179962, "per_token_entropy": [4.96484375, 0.50341796875, 0.8173828125, 4.61328125, 7.63671875, 0.2216796875, 2.49609375, 1.2177734375, 0.849609375, 6.9296875, 5.17578125, 0.00797271728515625, 0.4599609375, 0.638671875, 0.056427001953125, 0.00039958953857421875, 0.14501953125], "tokens": [264, 442, 438, 2447, 3487, 26, 1251, 27, 962, 29073, 2227, 26, 1251, 32, 20197, 2931, 1035]}
{"line_number": 1940, "line_type": "generated", "code": "\n  }\n\n  /**\n   * Determines whether a function is a named function expression or a function\n   * declaration.\n   *\n   * @param function The function node.\n   * @return Whether the function is a named function expression or a function\n   *     declaration", "entropy": 0.46142578125, "is_bug_line": false, "sus_score": 0.1091089451179962, "per_token_entropy": [0.38671875, 0.0011053085327148438, 0.1502685546875, 0.10064697265625, 0.0400390625, 0.00024139881134033203, 1.283203125, 0.966796875, 1.1630859375, 1.759765625, 1.291015625, 1.3623046875, 1.9443359375, 0.161376953125, 0.1785888671875, 2.1484375, 0.927734375, 1.29296875, 0.02728271484375, 0.0001952648162841797, 0.86962890625, 0.331787109375, 0.27294921875, 0.367431640625, 0.25244140625, 0.004642486572265625, 0.5068359375, 0.178466796875, 0.59619140625, 1.4697265625, 0.3251953125, 0.48291015625, 0.88720703125, 0.0292510986328125, 0.058349609375, 0.020782470703125, 0.051025390625, 0.224609375, 0.269287109375, 0.2366943359375, 0.09210205078125, 0.248779296875, 0.0458984375, 0.0215606689453125, 0.044036865234375, 0.51123046875, 0.190673828125, 0.054473876953125, 0.008575439453125, 0.0016298294067382812, 0.1624755859375, 0.0035915374755859375], "tokens": [334, 320, 719, 1022, 664, 319, 34450, 4946, 312, 667, 438, 312, 8189, 667, 6101, 556, 312, 667, 664, 319, 13317, 32, 664, 319, 664, 319, 477, 753, 667, 886, 667, 1541, 32, 664, 319, 477, 601, 14071, 322, 667, 438, 312, 8189, 667, 6101, 556, 312, 667, 664, 319, 262, 13317]}
{"line_number": 770, "line_type": "original", "code": "        if (checkForNewObjects) {", "entropy": 1.42578125, "is_bug_line": false, "sus_score": 0.09805806756909202, "per_token_entropy": [4.7265625, 3.29296875, 0.0858154296875, 1.955078125, 0.08221435546875, 2.0703125, 0.0008020401000976562, 0.5859375, 0.03411865234375], "tokens": [351, 415, 308, 1553, 1562, 1812, 6692, 27, 301]}
{"line_number": 770, "line_type": "generated", "code": "\n            return true;\n          }\n          // fall through to the next case\n        }\n\n        if (n.getType() == Token.GETELEM) {\n          // getelem is safe if the property is a string literal.\n          // TODO(johnlenz):", "entropy": 0.810546875, "is_bug_line": false, "sus_score": 0.09805806756909202, "per_token_entropy": [1.400390625, 0.466064453125, 0.3173828125, 0.0015077590942382812, 0.1861572265625, 0.051544189453125, 1.349609375, 2.048828125, 2.32421875, 0.8232421875, 1.1611328125, 2.251953125, 1.744140625, 0.214111328125, 1.083984375, 0.023406982421875, 0.52001953125, 0.9140625, 0.059722900390625, 1.2001953125, 0.0015773773193359375, 0.6953125, 0.0311737060546875, 0.0228271484375, 0.00127410888671875, 0.00020515918731689453, 0.849609375, 0.89697265625, 0.607421875, 0.00290679931640625, 0.142822265625, 1.53125, 2.59765625, 0.0843505859375, 1.59375, 2.267578125, 0.337646484375, 0.615234375, 2.318359375, 1.3310546875, 0.45068359375, 0.8896484375, 0.59521484375, 1.8955078125, 0.15869140625, 1.5869140625, 1.8955078125, 0.047607421875, 0.5166015625, 0.0016794204711914062, 0.00199127197265625, 0.058837890625], "tokens": [324, 442, 861, 45, 616, 320, 616, 434, 16843, 3919, 372, 322, 2354, 1135, 291, 320, 584, 415, 308, 96, 32, 10272, 346, 610, 6512, 32, 2788, 32313, 27, 301, 616, 434, 622, 7613, 438, 10061, 415, 322, 2804, 438, 312, 802, 10652, 32, 616, 434, 4296, 26, 25172, 1657, 108, 711]}
{"line_number": 766, "line_type": "original", "code": "        return false;", "entropy": 3.53515625, "is_bug_line": false, "sus_score": 0.08703882797784893, "per_token_entropy": [6.29296875, 4.2109375, 3.6328125, 0.004505157470703125], "tokens": [351, 442, 901, 45]}
{"line_number": 766, "line_type": "generated", "code": "\n          return true;\n        }\n\n        if (n.isIncDec()) {\n          return true;\n        }\n\n        if (n.isComma()) {\n          // Commas are not side-effect free if one of the operands has\n          // side effects.", "entropy": 0.5869140625, "is_bug_line": false, "sus_score": 0.08703882797784893, "per_token_entropy": [1.6474609375, 1.169921875, 0.12481689453125, 0.00036334991455078125, 0.1046142578125, 0.00037384033203125, 0.357421875, 0.89453125, 0.06341552734375, 1.150390625, 0.0014410018920898438, 0.79248046875, 1.7021484375, 0.5849609375, 0.1409912109375, 0.00194549560546875, 0.2744140625, 0.64892578125, 0.058441162109375, 0.0006246566772460938, 0.01165008544921875, 0.00031375885009765625, 0.237548828125, 0.78271484375, 0.0360107421875, 0.6728515625, 0.0008234977722167969, 0.32666015625, 1.1650390625, 0.1959228515625, 0.0011434555053710938, 0.1016845703125, 1.529296875, 1.794921875, 0.5703125, 1.2626953125, 2.224609375, 1.7490234375, 0.685546875, 0.10308837890625, 0.1773681640625, 1.22265625, 2.33203125, 0.1712646484375, 0.45849609375, 0.56103515625, 0.80126953125, 0.56689453125, 0.003025054931640625, 0.156982421875, 0.55322265625, 0.340576171875], "tokens": [616, 442, 861, 45, 291, 320, 584, 415, 308, 96, 32, 297, 16476, 13774, 1157, 301, 616, 442, 861, 45, 291, 320, 584, 415, 308, 96, 32, 297, 34010, 1157, 301, 616, 434, 2764, 6294, 884, 646, 5209, 31, 7469, 3741, 415, 1591, 432, 322, 26200, 1401, 616, 434, 5209, 15987, 32]}
{"line_number": 760, "line_type": "original", "code": "        for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {", "entropy": 0.445556640625, "is_bug_line": false, "sus_score": 0.08219949365267865, "per_token_entropy": [4.75390625, 3.30078125, 0.0127105712890625, 0.05084228515625, 0.481201171875, 0.028167724609375, 0.01611328125, 0.00397491455078125, 0.01369476318359375, 0.0025634765625, 0.051055908203125, 0.1353759765625, 0.030242919921875, 0.006107330322265625, 0.017822265625, 0.7822265625, 0.006427764892578125, 0.07598876953125, 0.0148773193359375, 0.0008172988891601562, 0.00600433349609375, 0.01056671142578125], "tokens": [351, 436, 308, 1212, 281, 280, 310, 32, 25657, 2931, 473, 281, 863, 744, 45, 281, 280, 281, 32, 23017, 1157, 301]}
{"line_number": 760, "line_type": "generated", "code": "\n      case Token.ASSIGN:\n        if (checkForStateChangeHelper(n.getLastChild(), checkForNewObjects, compiler)) {\n          return true;\n        }", "entropy": 0.2548828125, "is_bug_line": false, "sus_score": 0.08219949365267865, "per_token_entropy": [0.91650390625, 0.3408203125, 0.002140045166015625, 0.0005993843078613281, 1.30078125, 0.0653076171875, 0.68017578125, 0.81201171875, 0.12078857421875, 0.4716796875, 0.258544921875, 0.1285400390625, 0.0243988037109375, 0.0026988983154296875, 0.73291015625, 0.0012102127075195312, 0.28759765625, 0.00012063980102539062, 0.0024013519287109375, 0.951171875, 0.00021576881408691406, 0.00030541419982910156, 5.364418029785156e-05, 0.0170745849609375, 1.0869140625, 0.142578125, 0.003948211669921875, 0.0182037353515625, 0.035125732421875, 0.0012311935424804688, 0.00016176700592041016, 0.004932403564453125, 0.00025963783264160156], "tokens": [397, 1135, 6512, 32, 25620, 44, 291, 415, 308, 1553, 1562, 36049, 2762, 26, 96, 32, 20197, 2931, 1026, 1505, 1562, 1812, 6692, 30, 8980, 490, 301, 616, 442, 861, 45, 291, 320]}
{"line_number": 757, "line_type": "original", "code": "        if (checkForNewObjects) {", "entropy": 1.1923828125, "is_bug_line": false, "sus_score": 0.07808688094430304, "per_token_entropy": [5.171875, 3.087890625, 0.2484130859375, 1.275390625, 0.1068115234375, 0.53857421875, 0.0011339187622070312, 0.2783203125, 0.02667236328125], "tokens": [351, 415, 308, 1553, 1562, 1812, 6692, 27, 301]}
{"line_number": 757, "line_type": "generated", "code": "\n        }\n        return true;\n\n      case Token.GETPROP:\n        // For now, don't treat getters and setters as having side effects.\n        // TODO(johnlenz): consider treating them as having side effects.\n        if (checkFor", "entropy": 0.6533203125, "is_bug_line": false, "sus_score": 0.07808688094430304, "per_token_entropy": [0.247802734375, 0.05645751953125, 0.1531982421875, 0.0721435546875, 0.00566864013671875, 0.0005431175231933594, 0.1683349609375, 0.12939453125, 0.0010204315185546875, 1.33514404296875e-05, 0.5029296875, 0.10577392578125, 0.001026153564453125, 0.4736328125, 0.8837890625, 4.8515625, 1.8798828125, 0.318359375, 2.423828125, 8.356571197509766e-05, 1.8642578125, 1.59375, 1.58203125, 0.00373077392578125, 2.765655517578125e-05, 0.073974609375, 0.8134765625, 0.41064453125, 0.47509765625, 0.61328125, 0.08251953125, 0.73974609375, 1.234375, 0.0257415771484375, 0.3818359375, 0.0022335052490234375, 0.0011644363403320312, 0.028350830078125, 2.416015625, 2.65234375, 0.0001010894775390625, 0.8837890625, 0.1124267578125, 0.89990234375, 0.319091796875, 0.067138671875, 1.072265625, 0.10205078125, 0.70263671875, 0.1953125, 2.162109375, 0.1968994140625], "tokens": [291, 320, 291, 442, 861, 45, 1687, 1135, 6512, 32, 2788, 15262, 44, 291, 434, 2616, 2464, 30, 2800, 1330, 17562, 33771, 461, 739, 5725, 619, 7696, 5209, 15987, 32, 291, 434, 4296, 26, 25172, 1657, 108, 711, 6295, 9643, 1741, 3026, 619, 7696, 5209, 15987, 32, 291, 415, 308, 1553, 1562]}
{"line_number": 2031, "line_type": "original", "code": "    return (parent.getType() == Token.ASSIGN && parent.getFirstChild() == n) ||", "entropy": 1.205078125, "is_bug_line": false, "sus_score": 0.07624928516630233, "per_token_entropy": [6.70703125, 0.8564453125, 3.708984375, 1.244140625, 0.0167388916015625, 0.061126708984375, 0.0021190643310546875, 0.0199737548828125, 0.0007042884826660156, 0.00026226043701171875, 2.052734375, 0.86376953125, 1.40234375, 0.015655517578125, 1.04296875, 0.00010442733764648438, 0.027099609375, 0.034912109375, 4.93359375, 0.6435546875, 1.6728515625], "tokens": [264, 442, 308, 2544, 32, 10272, 346, 610, 6512, 32, 25620, 962, 2935, 32, 25657, 2931, 346, 610, 310, 27, 1276]}
{"line_number": 2031, "line_type": "generated", "code": "\n  static boolean isObjectLitKey(Node node) {\n    return isObjectLitKey(node, node.getParent());\n  }\n\n  /**\n   * Determines whether a node is a function argument.\n   *\n   * @param node A node\n   * @", "entropy": 0.377197265625, "is_bug_line": false, "sus_score": 0.07624928516630233, "per_token_entropy": [1.4248046875, 1.3515625, 0.09600830078125, 0.09637451171875, 2.12109375, 0.0640869140625, 0.47607421875, 0.6142578125, 0.01264190673828125, 0.1282958984375, 0.1595458984375, 0.00218963623046875, 0.081787109375, 0.50537109375, 0.127685546875, 0.0022563934326171875, 0.0007805824279785156, 0.000507354736328125, 0.00676727294921875, 0.007373809814453125, 0.0161285400390625, 0.1341552734375, 0.00417327880859375, 0.0012054443359375, 0.006587982177734375, 0.003932952880859375, 0.0006976127624511719, 0.35498046875, 0.1265869140625, 0.043731689453125, 0.00054168701171875, 0.43017578125, 0.03387451171875, 0.419189453125, 0.214111328125, 0.87646484375, 0.7646484375, 2.59765625, 3.314453125, 0.55078125, 0.1953125, 0.1722412109375, 0.375244140625, 0.000667572021484375, 0.18505859375, 0.01873779296875, 0.292724609375, 0.455322265625, 0.0323486328125, 0.10321044921875, 0.60400390625, 0.005496978759765625], "tokens": [334, 907, 1905, 438, 959, 27472, 953, 26, 1212, 1541, 27, 301, 284, 442, 438, 959, 27472, 953, 26, 1251, 30, 1541, 32, 18789, 1035, 334, 320, 719, 1022, 664, 319, 34450, 4946, 312, 1541, 438, 312, 667, 2793, 32, 664, 319, 664, 319, 477, 753, 1541, 399, 1541, 664, 319, 477]}
{"line_number": 121, "line_type": "original", "code": "    switch (n.getType()) {", "entropy": 0.86474609375, "is_bug_line": false, "sus_score": 0.07516460280028289, "per_token_entropy": [6.4375, 0.411376953125, 0.0153045654296875, 0.01200103759765625, 6.210803985595703e-05, 0.0004191398620605469, 0.00011479854583740234, 0.040252685546875], "tokens": [264, 3578, 308, 96, 32, 10272, 1157, 301]}
{"line_number": 121, "line_type": "generated", "code": "\n      case Token.STRING:\n        return n.getString();\n\n      case Token.NUMBER:\n        double value = n.getDouble();\n        if (value == 0 && 1 / value == Double.NEGATIVE_INFINITY) {\n          return \"0\";\n       ", "entropy": 0.163818359375, "is_bug_line": false, "sus_score": 0.07516460280028289, "per_token_entropy": [0.348876953125, 0.133056640625, 0.0006952285766601562, 2.4437904357910156e-05, 0.324462890625, 0.0007419586181640625, 0.09783935546875, 0.05694580078125, 0.00954437255859375, 0.0003643035888671875, 0.0010881423950195312, 0.0022983551025390625, 0.1298828125, 0.008392333984375, 0.00010633468627929688, 2.300739288330078e-05, 0.45361328125, 0.0001417398452758789, 0.09478759765625, 1.072265625, 0.89111328125, 0.005298614501953125, 0.0050048828125, 1.2159347534179688e-05, 0.0006232261657714844, 0.00044345855712890625, 0.0982666015625, 0.54248046875, 0.0609130859375, 0.86376953125, 0.1107177734375, 0.111572265625, 0.0023479461669921875, 0.5908203125, 0.154541015625, 0.000751495361328125, 0.5107421875, 0.0011005401611328125, 0.2154541015625, 0.168701171875, 0.0004456043243408203, 0.00379180908203125, 1.6689300537109375e-06, 2.2172927856445312e-05, 0.007106781005859375, 0.0015506744384765625, 0.01312255859375, 0.313720703125, 1.0439453125, 0.00408935546875, 0.0021495819091796875, 0.055450439453125], "tokens": [397, 1135, 6512, 32, 5203, 44, 291, 442, 310, 32, 7069, 473, 1687, 1135, 6512, 32, 10463, 44, 291, 2064, 786, 280, 310, 32, 37792, 473, 291, 415, 308, 853, 610, 225, 34, 962, 225, 35, 517, 786, 610, 6934, 32, 43518, 81, 36069, 27, 301, 616, 442, 313, 34, 866, 291]}
{"line_number": 1527, "line_type": "original", "code": "    return n.getType() == Token.EXPR_RESULT", "entropy": 1.4609375, "is_bug_line": false, "sus_score": 0.06941172200741212, "per_token_entropy": [5.52734375, 3.552734375, 1.107421875, 0.0275115966796875, 0.72998046875, 0.01082611083984375, 0.09259033203125, 0.04052734375, 0.0034580230712890625, 6.4296875, 0.00018143653869628906, 0.00655364990234375], "tokens": [264, 442, 310, 32, 10272, 346, 610, 6512, 32, 17793, 81, 6383]}
{"line_number": 1527, "line_type": "generated", "code": "\n  static Node getLoopBody(Node n) {\n    switch (n.getType()) {\n      case Token.FOR:\n        return n.getLastChild();\n      case Token.DO:\n        return n.getLastChild().getLastChild();\n      case Token.", "entropy": 0.119384765625, "is_bug_line": false, "sus_score": 0.06941172200741212, "per_token_entropy": [0.337646484375, 0.05963134765625, 0.038787841796875, 0.47705078125, 0.472900390625, 0.4013671875, 0.0098724365234375, 0.00250244140625, 0.002246856689453125, 0.002170562744140625, 0.00971221923828125, 0.2420654296875, 0.98095703125, 0.0171051025390625, 0.0010929107666015625, 0.00013780593872070312, 0.00026535987854003906, 7.95125961303711e-05, 0.005859375, 0.0625, 0.0125274658203125, 0.00035881996154785156, 1.239776611328125e-05, 0.06256103515625, 0.0025463104248046875, 0.58544921875, 0.2100830078125, 0.0814208984375, 0.00047969818115234375, 0.07647705078125, 0.0001283884048461914, 0.4140625, 0.08544921875, 0.00412750244140625, 8.022785186767578e-05, 0.0001081228256225586, 0.68798828125, 4.076957702636719e-05, 0.12841796875, 0.077880859375, 0.02197265625, 0.02337646484375, 0.315673828125, 0.000507354736328125, 0.0902099609375, 0.152587890625, 0.00057220458984375, 0.03326416015625, 0.0140380859375, 0.0017337799072265625, 2.777576446533203e-05, 7.486343383789062e-05], "tokens": [334, 907, 4004, 622, 7497, 3050, 26, 1212, 310, 27, 301, 284, 3578, 308, 96, 32, 10272, 1157, 301, 397, 1135, 6512, 32, 7321, 44, 291, 442, 310, 32, 20197, 2931, 473, 397, 1135, 6512, 32, 1680, 44, 291, 442, 310, 32, 20197, 2931, 922, 20197, 2931, 473, 397, 1135, 6512, 32]}
{"line_number": 126, "line_type": "original", "code": "        return TernaryValue.forBoolean(n.getDouble() != 0);", "entropy": 1.2998046875, "is_bug_line": false, "sus_score": 0.0601929265428846, "per_token_entropy": [7.5234375, 2.4453125, 5.109375, 0.00023376941680908203, 0.00023365020751953125, 0.003185272216796875, 1.955078125, 1.1640625, 0.0162506103515625, 0.44677734375, 0.0183868408203125, 1.837890625, 0.22021484375, 0.7275390625, 0.0157012939453125, 0.0006818771362304688, 0.60546875], "tokens": [351, 442, 394, 48584, 882, 32, 979, 4709, 26, 96, 32, 37792, 346, 863, 225, 34, 293]}
{"line_number": 126, "line_type": "generated", "code": "\n\n      case Token.NOT:\n        TernaryValue value = getPureBooleanValue(n.getLastChild());\n        return value.toBoolean()? \"\" : null;\n\n      case Token.VOID:\n          return null;\n\n      case Token.NAME:\n        String", "entropy": 0.2239990234375, "is_bug_line": false, "sus_score": 0.0601929265428846, "per_token_entropy": [0.49365234375, 0.07330322265625, 0.0003914833068847656, 4.017353057861328e-05, 1.1171875, 0.00018346309661865234, 0.09686279296875, 1.19921875, 3.159046173095703e-05, 2.181529998779297e-05, 0.141845703125, 0.0016222000122070312, 0.0097808837890625, 0.484619140625, 0.00048351287841796875, 0.0001207590103149414, 0.00020754337310791016, 0.0045013427734375, 0.040679931640625, 0.0053253173828125, 3.4332275390625e-05, 0.007587432861328125, 0.00656890869140625, 0.62890625, 0.13818359375, 0.01543426513671875, 0.459716796875, 0.087158203125, 0.9892578125, 0.0589599609375, 0.64453125, 0.0008840560913085938, 0.2086181640625, 0.0007977485656738281, 0.1124267578125, 0.034912109375, 0.00011491775512695312, 8.58306884765625e-05, 1.8359375, 0.0004520416259765625, 0.92431640625, 0.180419921875, 0.1990966796875, 0.0030574798583984375, 0.07928466796875, 0.0289154052734375, 6.687641143798828e-05, 6.282329559326172e-05, 1.1337890625, 3.921985626220703e-05, 0.04730224609375, 0.1502685546875], "tokens": [1687, 1135, 6512, 32, 3908, 44, 291, 394, 48584, 882, 786, 280, 622, 24278, 4709, 882, 26, 96, 32, 20197, 2931, 1035, 291, 442, 786, 32, 452, 4709, 346, 1018, 3330, 499, 744, 45, 1687, 1135, 6512, 32, 13572, 44, 616, 442, 744, 45, 1687, 1135, 6512, 32, 2474, 44, 291, 892]}
{"line_number": 139, "line_type": "original", "code": "        String name = n.getString();", "entropy": 1.8818359375, "is_bug_line": false, "sus_score": 0.05933908290969266, "per_token_entropy": [5.75390625, 7.26953125, 1.6796875, 0.06610107421875, 0.2318115234375, 0.00368499755859375, 0.0253753662109375, 0.0235443115234375], "tokens": [351, 892, 636, 280, 310, 32, 7069, 473]}
{"line_number": 139, "line_type": "generated", "code": "\n        return \"false\";\n\n      case Token.TRUE:\n        return \"true\";\n    }\n\n    return null;\n  }\n\n  /**\n   * Gets the string value of a node that represents a literal. This method\n   * effectively emulates the <code>String", "entropy": 0.24560546875, "is_bug_line": false, "sus_score": 0.05933908290969266, "per_token_entropy": [0.23681640625, 0.04351806640625, 0.056304931640625, 0.05194091796875, 0.005176544189453125, 0.9794921875, 0.0030345916748046875, 4.398822784423828e-05, 8.916854858398438e-05, 0.57763671875, 0.00012600421905517578, 0.89013671875, 0.00803375244140625, 0.001979827880859375, 0.000316619873046875, 0.0002753734588623047, 1.392578125, 0.0005159378051757812, 0.1585693359375, 0.07861328125, 0.0011682510375976562, 8.845329284667969e-05, 0.00566864013671875, 0.00022590160369873047, 0.07733154296875, 0.38818359375, 0.095947265625, 0.00036406517028808594, 0.37939453125, 0.09686279296875, 2.138671875, 0.1962890625, 0.1456298828125, 0.0975341796875, 2.521484375, 0.382568359375, 0.05474853515625, 0.01824951171875, 0.73486328125, 0.3232421875, 0.38720703125, 0.0201416015625, 0.0184326171875, 9.119510650634766e-05, 0.1563720703125, 0.0012140274047851562, 0.0002701282501220703, 0.0016279220581054688, 0.0237884521484375, 0.0002834796905517578, 0.0010614395141601562, 0.02178955078125], "tokens": [291, 442, 313, 1870, 866, 1687, 1135, 6512, 32, 6373, 44, 291, 442, 313, 1508, 866, 284, 320, 446, 442, 744, 45, 334, 320, 719, 1022, 664, 319, 7124, 322, 802, 786, 432, 312, 1541, 688, 10666, 312, 10652, 32, 1348, 1411, 664, 319, 29419, 2642, 26292, 322, 333, 687, 48, 652]}
{"line_number": 140, "line_type": "original", "code": "        if (\"undefined\".equals(name)", "entropy": 1.537109375, "is_bug_line": false, "sus_score": 0.05933908290969266, "per_token_entropy": [4.2421875, 3.634765625, 3.53515625, 1.73828125, 0.03277587890625, 0.0048675537109375, 0.019683837890625, 0.33837890625, 0.28857421875], "tokens": [351, 415, 2884, 6376, 2296, 3574, 26, 426, 27]}
{"line_number": 140, "line_type": "generated", "code": "\n        return n.getType() == Token.TRUE? \"true\" : \"false\";", "entropy": 0.1314697265625, "is_bug_line": false, "sus_score": 0.05933908290969266, "per_token_entropy": [0.55859375, 0.131591796875, 0.51513671875, 0.0023822784423828125, 0.92333984375, 0.05828857421875, 0.01027679443359375, 0.001621246337890625, 0.00017547607421875, 0.10162353515625, 0.0223541259765625, 0.0210113525390625, 0.0028438568115234375, 0.007114410400390625, 0.001293182373046875, 0.0024967193603515625, 0.0006241798400878906, 0.0070953369140625], "tokens": [291, 442, 310, 32, 10272, 346, 610, 6512, 32, 6373, 1018, 313, 1508, 20, 499, 313, 1870, 866]}
{"line_number": 1300, "line_type": "original", "code": "        return n.getString().equals(\"undefined\");", "entropy": 3.287109375, "is_bug_line": false, "sus_score": 0.05360562674188974, "per_token_entropy": [5.265625, 1.8408203125, 7.8828125, 0.92529296875, 5.17578125, 0.050811767578125, 0.54931640625, 2.404296875, 8.15625, 0.63671875], "tokens": [351, 442, 310, 32, 7069, 922, 3574, 440, 6376, 724]}
{"line_number": 1300, "line_type": "generated", "code": "\n    }\n    return false;\n  }\n\n  /**\n   * Returns true if the operator is commutative.\n   * e.g. a + b = b + a\n   */\n  static boolean isCommutative(int type) {\n    switch (", "entropy": 0.08526611328125, "is_bug_line": false, "sus_score": 0.05360562674188974, "per_token_entropy": [0.34423828125, 0.055023193359375, 0.056610107421875, 0.11358642578125, 0.0760498046875, 0.00030541419982910156, 0.0084075927734375, 0.0010099411010742188, 0.12200927734375, 0.483642578125, 0.04833984375, 0.0020599365234375, 0.287841796875, 0.236572265625, 0.021728515625, 0.078369140625, 0.1478271484375, 0.07562255859375, 0.185546875, 0.0084991455078125, 0.00241851806640625, 0.0977783203125, 0.0255126953125, 0.142822265625, 0.055511474609375, 0.0004787445068359375, 0.00022590160369873047, 0.01190185546875, 0.1412353515625, 0.58837890625, 0.008575439453125, 0.193359375, 0.0020961761474609375, 0.000797271728515625, 0.00371551513671875, 0.1055908203125, 0.54296875, 0.0024013519287109375, 0.010406494140625, 0.0013360977172851562, 0.0002675056457519531, 0.0012569427490234375, 3.254413604736328e-05, 0.0003020763397216797, 0.0023651123046875, 0.00836181640625, 0.0171051025390625, 0.0007867813110351562, 0.00040411949157714844, 0.01282501220703125, 0.09149169921875, 0.00597381591796875], "tokens": [284, 320, 284, 442, 901, 45, 334, 320, 719, 1022, 664, 319, 3759, 861, 415, 322, 4134, 438, 767, 2278, 1353, 32, 664, 319, 484, 32, 89, 32, 312, 474, 323, 280, 323, 474, 312, 664, 569, 334, 907, 1905, 438, 1233, 2278, 1353, 26, 410, 827, 27, 301, 284, 3578, 308]}
