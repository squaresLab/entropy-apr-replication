{"line_number": 185, "line_type": "original", "code": "    return extractClassNameIfGoog(node, parent, \"goog.require\");", "entropy": 1.4541015625, "is_bug_line": false, "sus_score": 0.19245008972987526, "per_token_entropy": [5.6953125, 2.26953125, 7.4375, 1.15234375, 0.120361328125, 1.248046875, 0.0007381439208984375, 0.03466796875, 4.23046875, 0.0169219970703125, 0.1468505859375, 0.0531005859375, 0.456298828125, 0.0171051025390625, 0.0078887939453125, 1.78125, 0.056793212890625], "tokens": [264, 442, 6571, 8469, 2797, 57, 18011, 26, 1251, 30, 2935, 30, 313, 25745, 32, 1981, 724]}
{"line_number": 185, "line_type": "generated", "code": "\n          }\n        }\n        return typeNames;\n      }\n    }\n    return null;\n  }\n\n  @Override\n  public boolean isTypeExpression(Node n) {\n    return n.isAssign() && n.getFirstChild().isGetProp() &&\n       ", "entropy": 0.312255859375, "is_bug_line": false, "sus_score": 0.19245008972987526, "per_token_entropy": [0.96923828125, 0.006000518798828125, 0.22314453125, 0.0007109642028808594, 0.1134033203125, 0.177978515625, 0.0206298828125, 0.0001888275146484375, 0.00955963134765625, 0.01348114013671875, 0.00018167495727539062, 0.0296783447265625, 0.00027179718017578125, 0.105712890625, 0.0089569091796875, 0.14794921875, 0.0001850128173828125, 0.00920867919921875, 0.0009584426879882812, 0.379150390625, 0.252197265625, 0.001583099365234375, 0.00261688232421875, 0.022705078125, 1.1181640625, 0.378662109375, 1.3095703125, 1.4482421875, 0.1693115234375, 0.0472412109375, 0.28662109375, 0.071044921875, 0.0006957054138183594, 0.2103271484375, 0.57861328125, 0.7861328125, 0.04217529296875, 1.9853515625, 2.13671875, 0.05023193359375, 0.265869140625, 0.56884765625, 0.0003180503845214844, 0.2374267578125, 0.0013637542724609375, 0.0151824951171875, 0.560546875, 0.455078125, 0.01318359375, 0.52880859375, 0.388671875, 0.09014892578125], "tokens": [616, 320, 291, 320, 291, 442, 827, 4109, 45, 397, 320, 284, 320, 284, 442, 744, 45, 334, 320, 719, 477, 1788, 334, 562, 1905, 438, 620, 3487, 26, 1212, 310, 27, 301, 284, 442, 310, 32, 297, 9079, 346, 962, 310, 32, 25657, 2931, 922, 297, 936, 6567, 346, 962, 291]}
{"line_number": 192, "line_type": "original", "code": "      Node callee = node.getFirstChild();", "entropy": 1.806640625, "is_bug_line": false, "sus_score": 0.16666666666666666, "per_token_entropy": [6.84765625, 4.4453125, 0.5517578125, 0.00034117698669433594, 0.052276611328125, 5.765625, 0.0723876953125, 0.2276611328125, 0.0028285980224609375, 0.08929443359375], "tokens": [647, 4004, 2182, 13369, 280, 1541, 32, 25657, 2931, 473]}
{"line_number": 192, "line_type": "generated", "code": "\n  }", "entropy": 0.60546875, "is_bug_line": false, "sus_score": 0.16666666666666666, "per_token_entropy": [0.33251953125, 0.87841796875], "tokens": [334, 320]}
{"line_number": 193, "line_type": "original", "code": "      if (callee != null && callee.getType() == Token.GETPROP) {", "entropy": 1.154296875, "is_bug_line": false, "sus_score": 0.16666666666666666, "per_token_entropy": [8.5390625, 2.857421875, 0.23583984375, 3.84375, 2.962890625, 0.0047454833984375, 0.60400390625, 0.98876953125, 1.9311904907226562e-05, 0.0074615478515625, 0.80322265625, 0.00286102294921875, 0.019561767578125, 0.0030002593994140625, 0.000377655029296875, 0.7255859375, 0.012847900390625, 0.319580078125, 0.00984954833984375], "tokens": [647, 415, 308, 29203, 863, 744, 962, 2182, 13369, 32, 10272, 346, 610, 6512, 32, 2788, 15262, 27, 301]}
{"line_number": 193, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.16666666666666666, "per_token_entropy": [], "tokens": []}
{"line_number": 194, "line_type": "original", "code": "        String qualifiedName = callee.getQualifiedName();", "entropy": 1.650390625, "is_bug_line": false, "sus_score": 0.16666666666666666, "per_token_entropy": [9.484375, 4.60546875, 0.304443359375, 0.01242828369140625, 0.1544189453125, 3.541015625, 8.797645568847656e-05, 0.02984619140625, 0.0158538818359375, 0.0009098052978515625, 0.0026035308837890625], "tokens": [351, 892, 16793, 558, 280, 2182, 13369, 32, 371, 41340, 473]}
{"line_number": 194, "line_type": "generated", "code": "\n  private static final String[] FUNCTION_PROTOTYPE_PROPERTIES = {\n    \"apply\",\n    \"call\",\n    \"bind\"\n  };", "entropy": 0.68701171875, "is_bug_line": false, "sus_score": 0.16666666666666666, "per_token_entropy": [0.77734375, 1.8984375, 0.5888671875, 0.7490234375, 1.2685546875, 2.150390625, 3.78515625, 0.041961669921875, 2.8125, 0.400634765625, 0.09832763671875, 0.0712890625, 1.8134765625, 0.047332763671875, 0.332763671875, 0.375732421875, 0.11810302734375, 0.52685546875, 0.00467681884765625, 0.413818359375, 0.0019664764404296875, 0.68408203125, 0.0299835205078125, 0.04473876953125, 0.006793975830078125, 0.061859130859375, 0.80615234375, 0.01148223876953125, 0.00543975830078125], "tokens": [334, 945, 907, 1158, 892, 1178, 17747, 81, 2383, 17330, 6031, 81, 30835, 280, 301, 284, 313, 4699, 392, 284, 313, 1851, 392, 284, 313, 2539, 20, 334, 1472]}
{"line_number": 195, "line_type": "original", "code": "        if (functionName.equals(qualifiedName)) {", "entropy": 2.318359375, "is_bug_line": false, "sus_score": 0.16666666666666666, "per_token_entropy": [8.578125, 3.1328125, 0.362548828125, 3.587890625, 0.152099609375, 0.12744140625, 0.18896484375, 3.26953125, 8.015625, 0.0972900390625, 0.282470703125, 0.025238037109375], "tokens": [351, 415, 308, 1126, 558, 32, 3574, 26, 22362, 558, 490, 301]}
{"line_number": 195, "line_type": "generated", "code": "\n  public String getGlobalObjectName() {\n    return \"goog.global\";\n  }\n\n  @Override\n  public String getPrivateMemberReference(String name) {\n    return name;\n  }\n\n  @Override\n  public String getPrivateMemberAccess(String name)", "entropy": 0.45166015625, "is_bug_line": false, "sus_score": 0.16666666666666666, "per_token_entropy": [0.220947265625, 0.525390625, 1.8974609375, 0.607421875, 2.84765625, 1.8837890625, 0.188232421875, 0.0015401840209960938, 0.036834716796875, 0.05633544921875, 0.206298828125, 0.59521484375, 0.23291015625, 0.00351715087890625, 0.006801605224609375, 0.0303497314453125, 0.0006413459777832031, 0.5205078125, 0.1729736328125, 0.0012226104736328125, 0.19091796875, 0.018585205078125, 0.802734375, 0.316650390625, 1.158203125, 0.37890625, 1.9814453125, 0.204345703125, 0.1103515625, 2.416015625, 0.22021484375, 0.0003311634063720703, 0.0286407470703125, 0.1624755859375, 1.0703125, 0.412109375, 0.022430419921875, 0.0007038116455078125, 0.277587890625, 0.10455322265625, 0.0005869865417480469, 0.04644775390625, 0.01045989990234375, 0.63232421875, 0.278564453125, 0.145751953125, 0.210205078125, 1.51171875, 0.2120361328125, 0.0250244140625, 0.449462890625, 0.050048828125], "tokens": [334, 562, 892, 622, 4455, 17461, 346, 301, 284, 442, 313, 25745, 32, 3264, 866, 334, 320, 719, 477, 1788, 334, 562, 892, 622, 6527, 4592, 3564, 26, 652, 636, 27, 301, 284, 442, 636, 45, 334, 320, 719, 477, 1788, 334, 562, 892, 622, 6527, 4592, 2791, 26, 652, 636, 27]}
{"line_number": 196, "line_type": "original", "code": "          Node target = callee.getNext();", "entropy": 3.408203125, "is_bug_line": false, "sus_score": 0.16666666666666666, "per_token_entropy": [10.046875, 7.30078125, 3.40625, 0.126953125, 8.046875, 0.005565643310546875, 0.2059326171875, 1.365234375, 0.1712646484375], "tokens": [2033, 4004, 1760, 280, 2182, 13369, 32, 23017, 473]}
{"line_number": 196, "line_type": "generated", "code": "\n    return \"abstractMethod\";\n  }\n\n  @Override\n  public boolean isAbstractMethodName(String name) {\n    return \"abstractMethod\".equals(name);\n  }\n\n  @Override\n  public boolean isOverrideable(String name) {\n    return false;", "entropy": 0.376708984375, "is_bug_line": false, "sus_score": 0.16666666666666666, "per_token_entropy": [0.2086181640625, 0.2379150390625, 0.35791015625, 0.88427734375, 0.09234619140625, 0.1370849609375, 0.0673828125, 0.0017576217651367188, 0.3759765625, 0.14013671875, 0.0008349418640136719, 0.0019588470458984375, 0.0198516845703125, 1.6943359375, 0.4873046875, 1.12109375, 0.30419921875, 0.0016326904296875, 0.03436279296875, 0.53955078125, 0.017303466796875, 0.0006194114685058594, 0.81005859375, 0.03851318359375, 0.28515625, 0.004177093505859375, 0.0004258155822753906, 0.01016998291015625, 0.00336456298828125, 0.0002930164337158203, 0.000537872314453125, 0.00762176513671875, 0.00567626953125, 0.0006070137023925781, 0.2509765625, 0.12249755859375, 0.0007781982421875, 0.0006804466247558594, 0.009307861328125, 0.947265625, 0.302001953125, 3.568359375, 1.9931640625, 0.396728515625, 1.134765625, 1.0693359375, 0.0894775390625, 0.0019159317016601562, 0.200439453125, 0.1033935546875, 1.5, 0.005054473876953125], "tokens": [284, 442, 313, 9436, 1868, 866, 334, 320, 719, 477, 1788, 334, 562, 1905, 438, 5584, 21781, 26, 652, 636, 27, 301, 284, 442, 313, 9436, 1868, 2296, 3574, 26, 426, 293, 334, 320, 719, 477, 1788, 334, 562, 1905, 438, 1788, 444, 26, 652, 636, 27, 301, 284, 442, 901, 45]}
{"line_number": 197, "line_type": "original", "code": "          if (target != null) {", "entropy": 3.123046875, "is_bug_line": true, "sus_score": 0.16666666666666666, "per_token_entropy": [10.65625, 4.75390625, 0.44775390625, 5.69140625, 2.64453125, 0.0439453125, 0.67041015625, 0.08380126953125], "tokens": [2033, 415, 308, 1977, 863, 744, 27, 301]}
{"line_number": 197, "line_type": "generated", "code": "\n  }\n\n  @Override\n  public String getSingletonGetterFunction() {\n    return \"goog.getSingletonGetter\";\n  }", "entropy": 0.351806640625, "is_bug_line": true, "sus_score": 0.16666666666666666, "per_token_entropy": [0.2034912109375, 0.032379150390625, 0.53271484375, 0.167724609375, 0.0008063316345214844, 0.003459930419921875, 0.0207366943359375, 0.74560546875, 0.214111328125, 3.005859375, 0.09246826171875, 1.068359375, 0.2066650390625, 0.0007724761962890625, 0.015869140625, 0.01456451416015625, 0.036895751953125, 0.0127716064453125, 0.0015478134155273438, 0.81982421875, 0.017059326171875, 0.79052734375, 0.406494140625, 0.382568359375, 0.0019083023071289062], "tokens": [334, 320, 719, 477, 1788, 334, 562, 892, 622, 15968, 11723, 2447, 346, 301, 284, 442, 313, 25745, 32, 371, 15968, 11723, 866, 334, 320]}
{"line_number": 198, "line_type": "original", "code": "            className = target.getString();", "entropy": 3.125, "is_bug_line": false, "sus_score": 0.16666666666666666, "per_token_entropy": [11.1796875, 8.6796875, 0.335693359375, 1.4033203125, 0.01282501220703125, 0.1849365234375, 0.07464599609375], "tokens": [1468, 2615, 280, 1760, 32, 7069, 473]}
{"line_number": 198, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.16666666666666666, "per_token_entropy": [], "tokens": []}
{"line_number": 190, "line_type": "original", "code": "    String className = null;", "entropy": 2.423828125, "is_bug_line": false, "sus_score": 0.16012815380508713, "per_token_entropy": [2.392578125, 7.0, 3.5078125, 0.15966796875, 1.4765625, 0.01105499267578125], "tokens": [264, 892, 2615, 280, 744, 45]}
{"line_number": 190, "line_type": "generated", "code": "\n    }\n    return null;\n  }\n\n  @Override\n  public boolean isTypeDeclarationCall(Node n) {\n    return isGoogCall(n, \"goog.addDependency\");\n  }\n\n  @Override\n  public boolean isTypeDeclarationRequire(Node", "entropy": 0.32080078125, "is_bug_line": false, "sus_score": 0.16012815380508713, "per_token_entropy": [0.298583984375, 0.033050537109375, 0.2315673828125, 0.025146484375, 0.223388671875, 0.0007586479187011719, 0.059173583984375, 0.001186370849609375, 0.45263671875, 0.231201171875, 0.0013036727905273438, 0.002532958984375, 0.0197906494140625, 1.1044921875, 0.419921875, 1.302734375, 1.18359375, 0.861328125, 0.0185394287109375, 0.04132080078125, 0.12054443359375, 0.1229248046875, 0.0005383491516113281, 0.1278076171875, 0.962890625, 2.052734375, 0.79638671875, 0.000476837158203125, 0.67578125, 0.65380859375, 0.009613037109375, 0.10064697265625, 0.0809326171875, 0.0880126953125, 0.002719879150390625, 0.188720703125, 0.00490570068359375, 0.337158203125, 0.08978271484375, 0.002101898193359375, 0.221435546875, 0.406494140625, 0.001010894775390625, 0.0009822845458984375, 0.006938934326171875, 0.64892578125, 0.1260986328125, 0.6826171875, 0.4697265625, 1.1123046875, 0.0662841796875, 0.007190704345703125], "tokens": [284, 320, 284, 442, 744, 45, 334, 320, 719, 477, 1788, 334, 562, 1905, 438, 620, 10367, 1853, 26, 1212, 310, 27, 301, 284, 442, 438, 57, 18011, 1853, 26, 96, 30, 313, 25745, 32, 669, 9672, 724, 334, 320, 719, 477, 1788, 334, 562, 1905, 438, 620, 10367, 3797, 26, 1212]}
{"line_number": 191, "line_type": "original", "code": "    if (NodeUtil.isExprCall(parent)) {", "entropy": 1.5009765625, "is_bug_line": false, "sus_score": 0.16012815380508713, "per_token_entropy": [3.294921875, 2.79296875, 0.921875, 3.322265625, 0.0022220611572265625, 0.00040411949157714844, 0.1783447265625, 0.623046875, 0.57861328125, 0.0217742919921875, 7.25, 0.5107421875, 0.0209503173828125], "tokens": [264, 415, 308, 1212, 1733, 32, 297, 6150, 1853, 26, 2544, 490, 301]}
{"line_number": 191, "line_type": "generated", "code": "\n    return null;\n  }\n\n  @Override\n  public boolean isTypeCheck(Node n) {\n    return n.getFirstChild().getQualifiedName().equals(\"goog.asserts.assert\");\n  }\n\n  @Override\n  public boolean isTypeDeclaration(Node", "entropy": 0.332275390625, "is_bug_line": false, "sus_score": 0.16012815380508713, "per_token_entropy": [0.17138671875, 0.1748046875, 0.300048828125, 0.0006561279296875, 0.048187255859375, 0.0014476776123046875, 0.5322265625, 0.2210693359375, 0.0010671615600585938, 0.00283050537109375, 0.022674560546875, 1.1806640625, 0.43017578125, 1.3203125, 2.708984375, 0.411376953125, 0.01529693603515625, 0.5107421875, 0.1600341796875, 0.0008668899536132812, 0.243408203125, 0.97802734375, 1.1201171875, 0.020965576171875, 1.283203125, 0.0003228187561035156, 0.059600830078125, 0.83447265625, 0.007656097412109375, 0.02734375, 1.0712890625, 0.1748046875, 0.00044798851013183594, 0.000507354736328125, 0.11212158203125, 0.032470703125, 0.005214691162109375, 0.0009732246398925781, 0.255615234375, 0.0187225341796875, 0.00043392181396484375, 0.268798828125, 0.1097412109375, 0.0007071495056152344, 0.0011768341064453125, 0.01158905029296875, 0.708984375, 0.155517578125, 0.46044921875, 0.97900390625, 0.10479736328125, 0.018646240234375], "tokens": [284, 442, 744, 45, 334, 320, 719, 477, 1788, 334, 562, 1905, 438, 620, 2140, 26, 1212, 310, 27, 301, 284, 442, 310, 32, 25657, 2931, 922, 371, 41340, 922, 3574, 440, 25745, 32, 862, 101, 32, 862, 724, 334, 320, 719, 477, 1788, 334, 562, 1905, 438, 620, 10367, 26, 1212]}
{"line_number": 203, "line_type": "original", "code": "    return className;", "entropy": 2.529296875, "is_bug_line": false, "sus_score": 0.16012815380508713, "per_token_entropy": [3.962890625, 0.401611328125, 5.515625, 0.239013671875], "tokens": [264, 442, 2615, 45]}
{"line_number": 203, "line_type": "generated", "code": "\n  }\n\n  @Override\n  public String getSingletonGetterMemberName(Node callNode) {\n    Node callArg = callNode.getFirstChild();\n    String callName = callArg.getQualifiedName();", "entropy": 0.2078857421875, "is_bug_line": false, "sus_score": 0.16012815380508713, "per_token_entropy": [0.64599609375, 0.004940032958984375, 0.430908203125, 0.1947021484375, 0.0009946823120117188, 0.002956390380859375, 0.0092315673828125, 0.68017578125, 0.2529296875, 1.8603515625, 0.128173828125, 2.361328125, 0.069580078125, 0.49365234375, 0.0694580078125, 0.27490234375, 0.00753021240234375, 0.03826904296875, 0.0003833770751953125, 0.03070068359375, 0.433349609375, 0.04986572265625, 0.02496337890625, 0.0018939971923828125, 0.0015010833740234375, 0.01158905029296875, 1.3947486877441406e-05, 0.02398681640625, 0.00012791156768798828, 0.006496429443359375, 0.035858154296875, 0.32470703125, 0.016448974609375, 0.0015211105346679688, 0.0009093284606933594, 0.00287628173828125, 0.0014162063598632812, 0.0003509521484375, 0.0258026123046875, 0.00028228759765625, 0.0014324188232421875], "tokens": [334, 320, 719, 477, 1788, 334, 562, 892, 622, 15968, 11723, 4592, 558, 26, 1212, 1476, 1212, 27, 301, 284, 4004, 1476, 1765, 280, 1476, 1212, 32, 25657, 2931, 473, 284, 892, 1476, 558, 280, 1476, 1765, 32, 371, 41340, 473]}
{"line_number": 38, "line_type": "original", "code": "public class ClosureCodingConvention extends DefaultCodingConvention {", "entropy": 2.484375, "is_bug_line": false, "sus_score": 0.022327214034455325, "per_token_entropy": [11.0078125, 2.650390625, 5.62109375, 2.00390625, 0.0190887451171875, 0.431396484375, 2.73046875, 0.002513885498046875, 0.00162506103515625, 0.37744140625], "tokens": [923, 443, 40531, 27427, 21748, 2026, 4101, 27427, 21748, 301]}
{"line_number": 38, "line_type": "generated", "code": "\n          Preconditions.checkArgument(\n              superclass.getType() == Token.GETPROP &&\n              superclass.getLastChild().getType() == Token.STRING,\n              \"Expected mixin call to be of the form \" +\n                  \"SubClass.mixin(SuperClass.", "entropy": 0.46875, "is_bug_line": false, "sus_score": 0.022327214034455325, "per_token_entropy": [0.77978515625, 2.265625, 0.0034351348876953125, 0.006011962890625, 1.1806640625, 0.00852203369140625, 0.8818359375, 1.4951171875, 0.0076904296875, 1.150390625, 0.002498626708984375, 0.004642486572265625, 0.0005788803100585938, 3.1828880310058594e-05, 0.449951171875, 0.06878662109375, 1.6337890625, 0.23388671875, 0.197509765625, 0.00026154518127441406, 0.6806640625, 0.00011432170867919922, 0.0280303955078125, 0.10748291015625, 0.0007586479187011719, 0.0035400390625, 0.0010967254638671875, 5.698204040527344e-05, 0.299560546875, 0.54052734375, 0.038421630859375, 0.2724609375, 1.3544921875, 2.6640625, 1.568359375, 0.41064453125, 0.80908203125, 0.9833984375, 0.2403564453125, 0.032989501953125, 0.76904296875, 0.34765625, 1.6171875, 0.1021728515625, 0.99609375, 0.01543426513671875, 0.00789642333984375, 0.0455322265625, 0.01433563232421875, 0.0305938720703125, 0.0171966552734375, 0.00830841064453125], "tokens": [616, 40596, 32, 1553, 3484, 26, 1090, 37475, 32, 10272, 346, 610, 6512, 32, 2788, 15262, 962, 1090, 37475, 32, 20197, 2931, 922, 10272, 346, 610, 6512, 32, 5203, 30, 1090, 313, 7700, 40942, 1476, 372, 526, 432, 322, 2234, 313, 474, 1750, 313, 1721, 1339, 32, 22672, 26, 11069, 1339, 32]}
{"line_number": 278, "line_type": "original", "code": "  private final Set<String> propertyTestFunctions = ImmutableSet.of(", "entropy": 0.84619140625, "is_bug_line": false, "sus_score": 0.022327214034455325, "per_token_entropy": [4.62890625, 3.41796875, 1.85546875, 1.029296875, 0.01007843017578125, 0.0039215087890625, 0.00011801719665527344, 0.353515625, 0.00861358642578125, 0.0006246566772460938, 0.062164306640625, 2.095703125, 0.0004336833953857422, 0.0234832763671875, 0.006927490234375, 0.04254150390625], "tokens": [225, 945, 1158, 1756, 46, 652, 48, 2804, 1006, 10905, 280, 12932, 885, 32, 1028, 26]}
{"line_number": 278, "line_type": "generated", "code": "\n  public void checkParameterType(NodeTraversal t, Node parameter,\n      Node parameterType) {\n    Preconditions.checkArgument(parameter.getType() == Token.NAME);\n    Preconditions.checkArgument(parameterType.getType() == Token.NAME);\n    String", "entropy": 0.36669921875, "is_bug_line": false, "sus_score": 0.022327214034455325, "per_token_entropy": [0.181884765625, 0.2457275390625, 1.6533203125, 1.8916015625, 1.7705078125, 0.0408935546875, 0.2138671875, 0.080078125, 0.014984130859375, 0.00013005733489990234, 0.1787109375, 0.54931640625, 0.115966796875, 0.458251953125, 1.5693359375, 0.5908203125, 0.16796875, 0.81689453125, 0.195068359375, 0.6025390625, 1.611328125, 0.0011463165283203125, 0.0087127685546875, 0.1732177734375, 0.01202392578125, 0.26611328125, 0.837890625, 0.2666015625, 0.0007872581481933594, 0.00702667236328125, 0.0024394989013671875, 2.1457672119140625e-06, 0.11669921875, 0.1424560546875, 0.276123046875, 0.489013671875, 0.0004134178161621094, 0.001346588134765625, 0.0043487548828125, 0.00839996337890625, 0.21630859375, 0.048980712890625, 0.29541015625, 0.045196533203125, 0.00043129920959472656, 0.0075225830078125, 0.006259918212890625, 7.998943328857422e-05, 0.890625, 0.05059814453125, 0.91552734375, 1.0166015625], "tokens": [334, 562, 763, 1505, 46453, 26, 1212, 35699, 273, 30, 4004, 3395, 30, 397, 4004, 3395, 620, 27, 301, 284, 40596, 32, 1553, 3484, 26, 5609, 32, 10272, 346, 610, 6512, 32, 2474, 293, 284, 40596, 32, 1553, 3484, 26, 5609, 620, 32, 10272, 346, 610, 6512, 32, 2474, 293, 284, 892]}
