{"line_number": 223, "line_type": "original", "code": "          ReferenceCollectingCallback.Reference aliasRef =", "entropy": 3.04296875, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [4.22265625, 10.9765625, 1.994140625, 0.000194549560546875, 0.00031280517578125, 3.673828125, 2.697265625, 6.265625, 0.446044921875, 0.15234375], "tokens": [2033, 9494, 7938, 299, 3296, 32, 3564, 8813, 2084, 280]}
{"line_number": 223, "line_type": "generated", "code": "\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Warns about the redefinition of a namespace.\n   */\n  private void warnAboutNamespaceRedefinition(Name name, Ref ref) {\n    compiler.report(JSError.make(", "entropy": 0.238525390625, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [0.75537109375, 0.0032939910888671875, 0.4638671875, 0.0003418922424316406, 0.042022705078125, 0.00030159950256347656, 0.025238037109375, 0.0006237030029296875, 0.0254974365234375, 0.0003314018249511719, 0.19677734375, 0.9892578125, 0.12646484375, 0.00015926361083984375, 1.1865234375, 0.0002913475036621094, 0.47607421875, 1.64453125, 1.1162109375, 0.10552978515625, 0.029266357421875, 0.505859375, 0.11474609375, 0.81591796875, 0.24951171875, 0.52294921875, 0.0038700103759765625, 0.031646728515625, 0.0188446044921875, 0.0013141632080078125, 0.0003674030303955078, 0.0002868175506591797, 9.1552734375e-05, 1.728534698486328e-05, 0.00315093994140625, 0.187255859375, 0.115966796875, 0.0018854141235351562, 0.0103759765625, 0.2315673828125, 0.0018491744995117188, 0.00135040283203125, 0.1741943359375, 1.466796875, 0.0007257461547851562, 0.1063232421875, 0.01493072509765625, 0.463134765625, 0.1695556640625, 0.0005078315734863281, 0.00029206275939941406, 0.0015211105346679688], "tokens": [616, 320, 291, 320, 397, 320, 284, 320, 334, 320, 719, 1022, 664, 319, 34571, 2425, 2625, 322, 316, 7390, 432, 312, 3583, 32, 664, 569, 334, 945, 763, 17161, 11936, 5916, 435, 7390, 26, 558, 636, 30, 7908, 2488, 27, 301, 284, 8980, 32, 3734, 26, 60, 21887, 32, 2682, 26]}
{"line_number": 226, "line_type": "original", "code": "          Node newNode = alias.node.cloneTree();", "entropy": 2.404296875, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [6.3515625, 5.80859375, 5.97265625, 0.10931396484375, 4.29296875, 1.357421875, 0.53662109375, 0.21484375, 0.2080078125, 1.5888671875, 0.01523590087890625], "tokens": [2033, 4004, 33202, 280, 8813, 32, 1251, 32, 6358, 3350, 473]}
{"line_number": 226, "line_type": "generated", "code": "\n      }\n    }\n  }\n\n  private void warnAboutNamespaceRedefinition(Name name, Ref ref) {\n    // TODO(johnlenz): provide more details about the redefinition\n    // (e.g. line number).\n    errorReporter.error", "entropy": 0.560546875, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [0.42626953125, 0.01399993896484375, 0.10711669921875, 0.001811981201171875, 0.052703857421875, 0.0005998611450195312, 0.1942138671875, 0.5185546875, 0.0765380859375, 0.02587890625, 0.0023899078369140625, 0.005214691162109375, 0.370849609375, 7.712841033935547e-05, 0.004024505615234375, 0.1781005859375, 0.0911865234375, 0.0013103485107421875, 0.01242828369140625, 0.1650390625, 0.0018358230590820312, 0.002887725830078125, 0.08221435546875, 1.982421875, 1.0615234375, 0.04949951171875, 0.4697265625, 0.006988525390625, 0.0007572174072265625, 0.05499267578125, 2.400390625, 1.181640625, 2.14453125, 0.91796875, 0.6298828125, 2.009765625, 0.08441162109375, 1.4794921875, 1.5380859375, 1.990234375, 1.515625, 0.0007796287536621094, 0.0013103485107421875, 0.08441162109375, 2.025390625, 0.61767578125, 2.04296875, 0.1319580078125, 1.4375, 0.32958984375, 0.0013170242309570312, 0.6328125], "tokens": [397, 320, 284, 320, 334, 320, 719, 945, 763, 17161, 11936, 5916, 435, 7390, 26, 558, 636, 30, 7908, 2488, 27, 301, 284, 434, 4296, 26, 25172, 1657, 108, 711, 2355, 1829, 4245, 2625, 322, 316, 7390, 284, 434, 308, 87, 32, 89, 32, 1628, 1451, 547, 284, 1048, 20624, 32, 731]}
{"line_number": 227, "line_type": "original", "code": "          aliasRef.getParent().replaceChild(aliasRef.getNode(), newNode);", "entropy": 2.2109375, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [8.265625, 6.90234375, 4.71875, 0.68798828125, 5.875, 0.11444091796875, 1.0859375, 0.0214691162109375, 0.0092926025390625, 0.62255859375, 0.0257720947265625, 0.1524658203125, 1.4599609375, 0.00565338134765625, 5.39453125, 0.04193115234375], "tokens": [2033, 8813, 2084, 32, 18789, 922, 3227, 2931, 26, 7909, 2084, 32, 17699, 1026, 33202, 293]}
{"line_number": 227, "line_type": "generated", "code": "\n  }\n\n  private void warnAboutNamespaceRedefinition(Name name, Ref ref) {\n    JSDocInfo info = name.getJSDocInfo();\n    if (info!= null && info.isOverride()) {\n      return;\n    }\n\n   ", "entropy": 0.241455078125, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [1.5380859375, 0.017181396484375, 0.1663818359375, 0.5888671875, 0.0887451171875, 0.03057861328125, 0.0025959014892578125, 0.0059814453125, 0.3388671875, 6.54458999633789e-05, 0.003978729248046875, 0.1663818359375, 0.0980224609375, 0.0011434555053710938, 0.01172637939453125, 0.1654052734375, 0.0013523101806640625, 0.0022106170654296875, 0.050048828125, 1.9716796875, 0.146240234375, 0.0011377334594726562, 0.005901336669921875, 1.0556640625, 0.01232147216796875, 1.1201171875, 0.0021457672119140625, 0.6435546875, 0.81982421875, 3.993511199951172e-05, 6.115436553955078e-05, 0.002483367919921875, 0.042877197265625, 0.0836181640625, 0.7939453125, 0.07861328125, 0.043731689453125, 0.18505859375, 5.078315734863281e-05, 0.3369140625, 0.153564453125, 0.0007939338684082031, 0.267333984375, 0.94580078125, 0.0924072265625, 0.003299713134765625, 0.004909515380859375, 0.329833984375, 0.0005855560302734375, 0.0229644775390625, 7.069110870361328e-05, 0.1077880859375], "tokens": [334, 320, 719, 945, 763, 17161, 11936, 5916, 435, 7390, 26, 558, 636, 30, 7908, 2488, 27, 301, 284, 971, 3181, 542, 1120, 3099, 280, 636, 32, 371, 60, 3181, 542, 1120, 473, 284, 415, 308, 1338, 863, 744, 962, 3099, 32, 297, 1788, 1157, 301, 397, 442, 45, 284, 320, 446]}
{"line_number": 228, "line_type": "original", "code": "          newNodes.add(newNode);", "entropy": 2.8828125, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [10.2421875, 6.32421875, 4.16015625, 0.384033203125, 1.005859375, 0.0161590576171875, 3.55078125, 0.2462158203125, 0.0256805419921875], "tokens": [2033, 537, 5909, 32, 669, 26, 890, 1212, 293]}
{"line_number": 228, "line_type": "generated", "code": "\n  }\n\n  private void warnAboutNamespaceAliasing(Name name, Ref ref) {\n    compiler.report(JSError.make(\n        ref.node,\n        NAMESPACE_ALIASING_ERROR,\n        name.getFullName()));\n  }\n\n  private", "entropy": 0.26708984375, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [0.46044921875, 0.0159912109375, 0.165771484375, 0.6982421875, 0.0938720703125, 0.039031982421875, 0.0031681060791015625, 0.00830841064453125, 1.2939453125, 5.7697296142578125e-05, 0.00152587890625, 0.0621337890625, 0.1243896484375, 0.000904083251953125, 0.00901031494140625, 0.340087890625, 0.0010061264038085938, 0.00167083740234375, 0.046539306640625, 1.2861328125, 0.00095367431640625, 0.0911865234375, 0.02618408203125, 0.365478515625, 0.2340087890625, 0.00047969818115234375, 0.00032591819763183594, 0.0015058517456054688, 0.80029296875, 0.2197265625, 0.00359344482421875, 0.221435546875, 0.026641845703125, 1.05078125, 1.9287109375, 0.010467529296875, 0.0018177032470703125, 0.326416015625, 0.11083984375, 0.20849609375, 0.68994140625, 0.1905517578125, 0.09930419921875, 0.1912841796875, 0.051483154296875, 1.6025390625, 0.35302734375, 0.2408447265625, 0.0797119140625, 0.0003883838653564453, 0.036956787109375, 0.066650390625], "tokens": [334, 320, 719, 945, 763, 17161, 11936, 5916, 7886, 299, 26, 558, 636, 30, 7908, 2488, 27, 301, 284, 8980, 32, 3734, 26, 60, 21887, 32, 2682, 26, 291, 2488, 32, 1251, 30, 291, 35121, 8993, 81, 25138, 1392, 81, 2930, 30, 291, 636, 32, 371, 16058, 5073, 334, 320, 719, 945]}
{"line_number": 181, "line_type": "original", "code": "              name.removeRef(ref);", "entropy": 2.6171875, "is_bug_line": false, "sus_score": 0.2886751345948129, "per_token_entropy": [8.765625, 6.6171875, 0.363525390625, 2.630859375, 0.73974609375, 0.0247955322265625, 1.7314453125, 0.0572509765625], "tokens": [2850, 636, 32, 2546, 2084, 26, 612, 293]}
{"line_number": 181, "line_type": "generated", "code": "\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Collapses all NAME nodes that refer to a collapsible descendant of\n   * {@code name}.\n   *\n   * @param name The name to start collap", "entropy": 0.58544921875, "is_bug_line": false, "sus_score": 0.2886751345948129, "per_token_entropy": [0.85791015625, 0.480712890625, 0.01554107666015625, 0.00380706787109375, 0.0270538330078125, 0.000225067138671875, 0.1563720703125, 0.00018715858459472656, 1.021484375, 0.0161895751953125, 0.00041484832763671875, 0.0009307861328125, 0.01219940185546875, 0.0009059906005859375, 0.435302734375, 0.373779296875, 0.048797607421875, 0.00017726421356201172, 1.4736328125, 1.2255859375, 0.0036869049072265625, 1.7587890625, 2.97265625, 0.42041015625, 1.4208984375, 2.021484375, 0.019775390625, 1.12890625, 1.228515625, 0.04443359375, 0.8095703125, 0.00995635986328125, 1.5341796875, 0.6748046875, 0.00013506412506103516, 0.35400390625, 0.0040130615234375, 1.1142578125, 1.1455078125, 0.7548828125, 0.29296875, 0.448486328125, 0.0009365081787109375, 1.32421875, 0.06048583984375, 0.11737060546875, 0.373779296875, 1.1669921875, 1.3330078125, 0.90087890625, 0.85595703125, 0.00023603439331054688], "tokens": [291, 442, 861, 45, 397, 320, 284, 320, 284, 442, 901, 45, 334, 320, 719, 1022, 664, 319, 2561, 3712, 1464, 1169, 8912, 5166, 688, 5279, 372, 312, 932, 42161, 5585, 23207, 432, 664, 319, 3088, 687, 636, 4009, 664, 319, 664, 319, 477, 753, 636, 886, 636, 372, 1477, 932, 3712]}
{"line_number": 220, "line_type": "original", "code": "        int size = aliasRefs.references.size();", "entropy": 1.76171875, "is_bug_line": false, "sus_score": 0.2886751345948129, "per_token_entropy": [2.86328125, 7.60546875, 2.9921875, 0.055450439453125, 3.38671875, 2.091796875, 0.0105743408203125, 0.3427734375, 0.00337982177734375, 0.002777099609375, 0.01447296142578125], "tokens": [351, 629, 1334, 280, 8813, 21777, 32, 6365, 32, 891, 473]}
{"line_number": 220, "line_type": "generated", "code": "\n          } else if (ref.type == Ref.Type.GET_FROM_GLOBAL) {\n            if (!initialized) {\n              warnAboutNamespaceUsage(name, ref);\n            }\n          } else if (ref.type == Ref.Type.GET", "entropy": 0.2056884765625, "is_bug_line": false, "sus_score": 0.2886751345948129, "per_token_entropy": [1.01953125, 0.01397705078125, 0.398681640625, 0.286376953125, 0.04656982421875, 0.493896484375, 0.0019159317016601562, 0.038848876953125, 0.01374053955078125, 0.031646728515625, 0.0002033710479736328, 0.0046234130859375, 7.95125961303711e-05, 0.88232421875, 0.491455078125, 0.80419921875, 0.00748443603515625, 0.8310546875, 0.499267578125, 0.0023193359375, 0.173828125, 0.400390625, 0.73779296875, 0.0352783203125, 0.129638671875, 0.0012464523315429688, 0.030181884765625, 0.213134765625, 0.01110076904296875, 0.2037353515625, 1.0595703125, 0.72265625, 0.026641845703125, 0.0220947265625, 0.00782012939453125, 0.05133056640625, 0.033416748046875, 0.0004260540008544922, 0.28466796875, 0.0006804466247558594, 0.3125, 0.1500244140625, 0.00655364990234375, 0.06158447265625, 0.0004703998565673828, 0.00556182861328125, 0.0016946792602539062, 0.0029926300048828125, 2.0384788513183594e-05, 0.0007448196411132812, 2.0384788513183594e-05, 0.1380615234375], "tokens": [616, 320, 813, 415, 308, 612, 32, 681, 610, 7908, 32, 620, 32, 2788, 81, 9067, 81, 14285, 27, 301, 324, 415, 1429, 16165, 27, 301, 1090, 17161, 11936, 5916, 6772, 26, 426, 30, 2488, 293, 324, 320, 616, 320, 813, 415, 308, 612, 32, 681, 610, 7908, 32, 620, 32, 2788]}
{"line_number": 221, "line_type": "original", "code": "        Set<Node> newNodes = Sets.newHashSetWithExpectedSize(size - 1);", "entropy": 1.517578125, "is_bug_line": false, "sus_score": 0.2886751345948129, "per_token_entropy": [2.76171875, 8.4453125, 0.11553955078125, 2.318359375, 0.0031490325927734375, 3.75390625, 0.4267578125, 0.07208251953125, 0.81396484375, 0.007190704345703125, 0.0002624988555908203, 0.06561279296875, 3.7578125, 0.007724761962890625, 1.8715858459472656e-05, 0.012054443359375, 4.53125, 4.73046875, 0.03759765625, 0.017425537109375, 0.004055023193359375], "tokens": [351, 1756, 46, 1212, 48, 537, 5909, 280, 9013, 32, 890, 17175, 1554, 7700, 1250, 26, 891, 429, 225, 35, 293]}
{"line_number": 221, "line_type": "generated", "code": "          } else if (ref.type == Ref.Type.GET_FROM_GLOBAL) {\n            if (!initialized) {\n              warnAboutNamespaceInitialization(name, ref);\n            }\n          } else if (ref.type == Ref.Type.GET", "entropy": 0.2254638671875, "is_bug_line": false, "sus_score": 0.2886751345948129, "per_token_entropy": [1.6708984375, 0.08673095703125, 0.24951171875, 0.1900634765625, 0.042205810546875, 0.67333984375, 0.0016651153564453125, 0.0389404296875, 0.01678466796875, 0.0286712646484375, 0.00016820430755615234, 0.0011816024780273438, 0.0008034706115722656, 0.77685546875, 0.64111328125, 0.82373046875, 0.007167816162109375, 0.9130859375, 0.47412109375, 0.00823974609375, 0.2169189453125, 0.5439453125, 0.76904296875, 0.03509521484375, 0.12841796875, 0.0013523101806640625, 0.0215911865234375, 0.1875, 0.011016845703125, 0.2001953125, 1.8662109375, 0.023223876953125, 0.0207061767578125, 0.032012939453125, 0.00510406494140625, 0.0215606689453125, 0.030914306640625, 0.00038886070251464844, 0.318359375, 0.0010471343994140625, 0.3369140625, 0.1376953125, 0.0057220458984375, 0.05975341796875, 0.00039768218994140625, 0.003818511962890625, 0.0018434524536132812, 0.0014886856079101562, 7.152557373046875e-06, 0.00035190582275390625, 1.621246337890625e-05, 0.1005859375], "tokens": [2033, 320, 813, 415, 308, 612, 32, 681, 610, 7908, 32, 620, 32, 2788, 81, 9067, 81, 14285, 27, 301, 324, 415, 1429, 16165, 27, 301, 1090, 17161, 11936, 5916, 20356, 26, 426, 30, 2488, 293, 324, 320, 616, 320, 813, 415, 308, 612, 32, 681, 610, 7908, 32, 620, 32, 2788]}
{"line_number": 222, "line_type": "original", "code": "        for (int i = 1; i < size; i++) {", "entropy": 1.177734375, "is_bug_line": false, "sus_score": 0.2886751345948129, "per_token_entropy": [4.0390625, 5.80859375, 0.03607177734375, 3.015625, 0.1590576171875, 0.00785064697265625, 0.09857177734375, 3.09765625, 0.037750244140625, 0.04193115234375, 0.0299224853515625, 2.3203125, 0.058074951171875, 0.08209228515625, 0.004650115966796875, 0.01099395751953125], "tokens": [351, 436, 308, 410, 595, 280, 225, 35, 45, 595, 333, 1334, 45, 595, 1987, 301]}
{"line_number": 222, "line_type": "generated", "code": "\n          } else if (ref.type == Ref.Type.GET_ALIAS) {\n            if (initialized) {\n              warnAboutNamespaceRedefinition(name, ref);\n            }\n          } else if (ref.type == Ref.Type.ALIASING", "entropy": 0.2225341796875, "is_bug_line": false, "sus_score": 0.2886751345948129, "per_token_entropy": [0.33642578125, 0.07470703125, 0.44287109375, 0.264404296875, 0.05047607421875, 0.394775390625, 0.001842498779296875, 0.0389404296875, 0.01467132568359375, 0.024658203125, 0.00019538402557373047, 0.001361846923828125, 6.937980651855469e-05, 0.74462890625, 0.5087890625, 1.3427734375, 1.326171875, 0.001056671142578125, 0.057464599609375, 0.77587890625, 0.52001953125, 0.306396484375, 0.0877685546875, 0.0004642009735107422, 0.0120391845703125, 0.064208984375, 0.0016660690307617188, 0.11798095703125, 0.154541015625, 0.0195770263671875, 0.002288818359375, 0.002010345458984375, 0.0010890960693359375, 0.0007538795471191406, 0.0026607513427734375, 0.033416748046875, 0.0013942718505859375, 1.05078125, 0.0012884140014648438, 0.89208984375, 0.3779296875, 0.03729248046875, 0.1666259765625, 0.0012445449829101562, 0.03387451171875, 0.0208740234375, 0.00907135009765625, 2.2172927856445312e-05, 0.0012187957763671875, 1.8715858459472656e-05, 1.197265625, 0.047515869140625], "tokens": [616, 320, 813, 415, 308, 612, 32, 681, 610, 7908, 32, 620, 32, 2788, 81, 25138, 27, 301, 324, 415, 308, 16165, 27, 301, 1090, 17161, 11936, 5916, 435, 7390, 26, 426, 30, 2488, 293, 324, 320, 616, 320, 813, 415, 308, 612, 32, 681, 610, 7908, 32, 620, 32, 25138, 1392]}
{"line_number": 232, "line_type": "original", "code": "        aliasParent.replaceChild(alias.node, IR.nullNode());", "entropy": 2.50390625, "is_bug_line": false, "sus_score": 0.2886751345948129, "per_token_entropy": [6.94921875, 7.1640625, 5.50390625, 0.8642578125, 2.63671875, 0.04840087890625, 0.00606536865234375, 0.462646484375, 1.55078125, 0.035064697265625, 0.00946044921875, 11.7109375, 0.0145263671875, 2.994140625, 0.07476806640625, 0.034454345703125], "tokens": [351, 8813, 4433, 32, 3227, 2931, 26, 7909, 32, 1251, 30, 14095, 32, 1693, 1212, 1035]}
{"line_number": 232, "line_type": "generated", "code": "\n   */\n  private void warnAboutNamespaceAliasing(Name name, Ref ref) {\n    if (ref.node.isGetProp() && ref.node.getParent().isAssign()) {\n      return;\n    }\n\n    compiler.report(JSError", "entropy": 0.329833984375, "is_bug_line": false, "sus_score": 0.2886751345948129, "per_token_entropy": [0.1275634765625, 0.55029296875, 0.01042938232421875, 0.06646728515625, 0.0205535888671875, 0.0021343231201171875, 0.0009427070617675781, 0.0006494522094726562, 0.01226806640625, 2.872943878173828e-05, 0.0011701583862304688, 0.07818603515625, 0.119140625, 0.000850677490234375, 0.0115203857421875, 0.176513671875, 0.0014982223510742188, 0.0028858184814453125, 0.0921630859375, 2.5078125, 0.2244873046875, 0.85546875, 0.038299560546875, 1.1533203125, 0.305908203125, 0.55322265625, 1.0849609375, 0.08599853515625, 1.0947265625, 0.477294921875, 0.921875, 0.00200653076171875, 0.11126708984375, 0.004611968994140625, 2.416015625, 0.02001953125, 0.0828857421875, 0.0950927734375, 0.08380126953125, 0.0011777877807617188, 0.0146026611328125, 1.99609375, 0.00060272216796875, 0.046844482421875, 0.0001544952392578125, 0.1961669921875, 0.83251953125, 0.0004968643188476562, 0.10797119140625, 0.0233612060546875, 0.332275390625, 0.215576171875], "tokens": [664, 569, 334, 945, 763, 17161, 11936, 5916, 7886, 299, 26, 558, 636, 30, 7908, 2488, 27, 301, 284, 415, 308, 612, 32, 1251, 32, 297, 936, 6567, 346, 962, 2488, 32, 1251, 32, 18789, 922, 297, 9079, 1157, 301, 397, 442, 45, 284, 320, 446, 8980, 32, 3734, 26, 60, 21887]}
{"line_number": 233, "line_type": "original", "code": "        compiler.reportCodeChange();", "entropy": 2.841796875, "is_bug_line": false, "sus_score": 0.2886751345948129, "per_token_entropy": [5.6484375, 7.21875, 0.04571533203125, 0.0694580078125, 6.8203125, 0.0005970001220703125, 0.09478759765625], "tokens": [351, 8980, 32, 3734, 1227, 1791, 473]}
{"line_number": 233, "line_type": "generated", "code": "\n   * @param name The namespace being aliased.\n   * @param ref The node where the alias was used.\n   */\n  private void warnAboutNamespaceAliasing(Name name, Ref ref) {\n    Node aliasNode = ref.node;\n   ", "entropy": 0.316162109375, "is_bug_line": false, "sus_score": 0.2886751345948129, "per_token_entropy": [0.27880859375, 0.58447265625, 0.3076171875, 0.00665283203125, 0.2459716796875, 0.27490234375, 0.56005859375, 2.12890625, 0.141845703125, 3.337860107421875e-06, 0.180419921875, 0.0152130126953125, 0.0243988037109375, 0.0011205673217773438, 0.0003113746643066406, 0.1837158203125, 0.109619140625, 2.755859375, 0.79931640625, 0.07061767578125, 0.28369140625, 0.81640625, 1.2724609375, 0.0469970703125, 0.016815185546875, 0.006038665771484375, 0.0025634765625, 0.06549072265625, 0.01192474365234375, 0.0010881423950195312, 0.00023818016052246094, 0.00033283233642578125, 0.006378173828125, 2.205371856689453e-05, 0.0012292861938476562, 0.06268310546875, 0.0006594657897949219, 6.67572021484375e-05, 0.009918212890625, 0.0007638931274414062, 0.00026607513427734375, 0.00099945068359375, 0.049713134765625, 2.41796875, 0.73828125, 1.2470703125, 0.0033626556396484375, 0.267578125, 0.0007538795471191406, 0.2249755859375, 0.0304412841796875, 0.1856689453125], "tokens": [664, 319, 477, 753, 636, 886, 3583, 3998, 11934, 16109, 32, 664, 319, 477, 753, 2488, 886, 1541, 2154, 322, 8813, 1597, 1654, 32, 664, 569, 334, 945, 763, 17161, 11936, 5916, 7886, 299, 26, 558, 636, 30, 7908, 2488, 27, 301, 284, 4004, 8813, 1212, 280, 2488, 32, 1251, 45, 284]}
{"line_number": 237, "line_type": "original", "code": "        namespace.scanNewNodes(alias.scope, newNodes);", "entropy": 3.58984375, "is_bug_line": false, "sus_score": 0.2886751345948129, "per_token_entropy": [6.28515625, 9.5234375, 2.921875, 9.46875, 3.796875, 3.486328125, 0.91162109375, 4.6484375, 1.91015625, 1.9150390625, 0.62451171875, 1.4580078125, 2.9765625, 0.315673828125], "tokens": [351, 3583, 32, 6979, 1812, 5909, 26, 7909, 32, 3473, 30, 537, 5909, 293]}
{"line_number": 237, "line_type": "generated", "code": "\n    // TODO(johnlenz): This is a hack to get the line number correct.\n    // The correct way to get the line number is to use the aliasing node.\n    // Unfortunately, the aliasing node is not always the same as the", "entropy": 1.091796875, "is_bug_line": false, "sus_score": 0.2886751345948129, "per_token_entropy": [0.71240234375, 2.345703125, 0.82958984375, 0.0855712890625, 0.52783203125, 0.00567626953125, 0.0012969970703125, 0.06378173828125, 4.46875, 1.6259765625, 1.103515625, 2.580078125, 0.94287109375, 1.57421875, 1.1123046875, 2.908203125, 0.1463623046875, 2.81640625, 0.482666015625, 0.23974609375, 0.8828125, 2.140625, 2.041015625, 1.2900390625, 0.2225341796875, 2.08984375, 0.283447265625, 0.1387939453125, 0.03118896484375, 0.417724609375, 0.1649169921875, 1.72265625, 0.90478515625, 2.19921875, 0.87939453125, 1.72265625, 1.498046875, 0.051055908203125, 1.19921875, 1.7138671875, 0.5830078125, 1.5068359375, 0.46826171875, 0.056732177734375, 0.06439208984375, 0.98193359375, 0.93017578125, 1.6884765625, 1.3642578125, 2.298828125, 0.478515625, 0.1727294921875], "tokens": [284, 434, 4296, 26, 25172, 1657, 108, 711, 1348, 438, 312, 16445, 372, 622, 322, 1628, 1451, 3809, 32, 284, 434, 886, 3809, 3352, 372, 622, 322, 1628, 1451, 438, 372, 793, 322, 8813, 299, 1541, 32, 284, 434, 26449, 30, 322, 8813, 299, 1541, 438, 646, 5182, 322, 2432, 619, 322]}
{"line_number": 238, "line_type": "original", "code": "        return true;", "entropy": 4.01171875, "is_bug_line": false, "sus_score": 0.2886751345948129, "per_token_entropy": [2.13671875, 12.0546875, 1.72265625, 0.1290283203125], "tokens": [351, 442, 861, 45]}
{"line_number": 238, "line_type": "generated", "code": "\n        JSC_NAMESPACE_REDEFINED_WARNING,\n        ref.node,\n        nameObj.node.getString(),\n        ref.node.getSourceFileName());\n  }\n\n  /**\n   * Reports a warning because a namespace was redefined.\n   *\n   *", "entropy": 0.300048828125, "is_bug_line": false, "sus_score": 0.2886751345948129, "per_token_entropy": [1.7626953125, 0.8876953125, 0.775390625, 0.016021728515625, 0.68505859375, 0.0013837814331054688, 0.0303802490234375, 0.126708984375, 0.266845703125, 1.4453125, 0.2919921875, 0.439208984375, 0.45947265625, 0.0048065185546875, 0.1396484375, 0.1683349609375, 0.69580078125, 0.227294921875, 0.0053253173828125, 0.0108795166015625, 1.8076171875, 0.35986328125, 0.2958984375, 0.2491455078125, 0.10589599609375, 0.85693359375, 0.0205535888671875, 0.6376953125, 0.115478515625, 1.083984375, 0.08233642578125, 0.28466796875, 0.1651611328125, 0.000980377197265625, 0.02642822265625, 0.0219268798828125, 0.006740570068359375, 0.00015854835510253906, 0.03314208984375, 0.01641845703125, 0.0035648345947265625, 0.24072265625, 0.06890869140625, 0.03955078125, 0.1953125, 0.144775390625, 0.08734130859375, 0.17822265625, 0.01174163818359375, 0.0037822723388671875, 0.012359619140625, 0.0003070831298828125], "tokens": [291, 971, 2117, 81, 9621, 81, 613, 19842, 81, 10431, 30, 291, 2488, 32, 1251, 30, 291, 636, 3273, 32, 1251, 32, 7069, 1026, 291, 2488, 32, 1251, 32, 25552, 6777, 1035, 334, 320, 719, 1022, 664, 319, 38742, 312, 5967, 3301, 312, 3583, 1597, 316, 2187, 32, 664, 319, 664, 319]}
{"line_number": 207, "line_type": "original", "code": "      Scope scope = alias.scope;", "entropy": 2.826171875, "is_bug_line": false, "sus_score": 0.2672612419124244, "per_token_entropy": [4.82421875, 9.0546875, 2.15234375, 0.06658935546875, 5.42578125, 0.73388671875, 0.1907958984375, 0.1656494140625], "tokens": [647, 22148, 4576, 280, 8813, 32, 3473, 45]}
{"line_number": 207, "line_type": "generated", "code": "\n            continue;\n          }\n\n          // If this is a property access, we only care if the property is\n          // defined on the prototype, not the instance.\n          if (ref.node.isGetProp() && ref.node.getFirstChild().is", "entropy": 0.78955078125, "is_bug_line": false, "sus_score": 0.2672612419124244, "per_token_entropy": [0.4052734375, 0.8740234375, 0.0064239501953125, 0.10546875, 0.0012998580932617188, 0.60791015625, 1.9150390625, 2.00390625, 2.46875, 0.87255859375, 0.71337890625, 2.740234375, 2.162109375, 0.5849609375, 2.71875, 1.984375, 1.244140625, 0.97314453125, 0.83642578125, 0.97021484375, 0.904296875, 0.3056640625, 0.004039764404296875, 2.830078125, 0.77734375, 0.367431640625, 0.99169921875, 1.3720703125, 1.1201171875, 1.802734375, 0.8408203125, 0.267333984375, 0.171875, 0.59765625, 0.09881591796875, 0.148193359375, 0.01139068603515625, 1.1279296875, 0.0814208984375, 0.3134765625, 0.1202392578125, 0.009552001953125, 0.45263671875, 0.254150390625, 1.091796875, 0.0150146484375, 0.1861572265625, 0.0049591064453125, 0.424560546875, 0.0007643699645996094, 0.06805419921875, 0.1119384765625], "tokens": [324, 4036, 45, 616, 320, 5678, 434, 1670, 458, 438, 312, 2804, 2857, 30, 996, 1755, 9347, 415, 322, 2804, 438, 616, 434, 3417, 544, 322, 21666, 30, 646, 322, 1980, 32, 616, 415, 308, 612, 32, 1251, 32, 297, 936, 6567, 346, 962, 2488, 32, 1251, 32, 25657, 2931, 922, 297]}
{"line_number": 208, "line_type": "original", "code": "      Var aliasVar = scope.getVar(aliasParent.getString());", "entropy": 2.37109375, "is_bug_line": false, "sus_score": 0.2672612419124244, "per_token_entropy": [5.0546875, 7.984375, 4.03125, 0.1668701171875, 0.09014892578125, 6.08984375, 0.059356689453125, 0.342529296875, 0.1729736328125, 2.869140625, 6.09765625, 0.1539306640625, 0.04949951171875, 0.02227783203125], "tokens": [647, 7329, 8813, 1881, 280, 4576, 32, 48086, 26, 7909, 4433, 32, 7069, 1035]}
{"line_number": 208, "line_type": "generated", "code": "\n          }\n\n          if (ref.type == Type.ALIASING_GET) {\n            if (initialized) {\n              compiler.report(\n                  JSError.make(ref.node, NAME_IN_LOCAL_ASSIGNMENT_NOT_READ_IN", "entropy": 0.48828125, "is_bug_line": false, "sus_score": 0.2672612419124244, "per_token_entropy": [0.413818359375, 0.043792724609375, 0.6103515625, 0.82958984375, 0.202880859375, 0.254150390625, 0.01467132568359375, 0.68115234375, 0.134521484375, 1.009765625, 0.004604339599609375, 1.0146484375, 0.0015392303466796875, 0.0006079673767089844, 0.007659912109375, 0.744140625, 0.0014352798461914062, 0.0662841796875, 1.060546875, 0.373291015625, 0.763671875, 0.1995849609375, 0.0033397674560546875, 0.077880859375, 0.947265625, 0.0010004043579101562, 0.06597900390625, 0.00884246826171875, 1.0048828125, 0.0865478515625, 0.0743408203125, 0.0005178451538085938, 0.0006799697875976562, 0.00266265869140625, 0.235107421875, 0.00550079345703125, 0.1995849609375, 0.011444091796875, 3.546875, 0.00714874267578125, 2.14453125, 0.0015802383422851562, 1.8525390625, 0.00787353515625, 2.52734375, 0.0374755859375, 1.2236328125, 0.2406005859375, 0.0005478858947753906, 0.205810546875, 0.744140625, 1.685546875], "tokens": [616, 320, 5678, 415, 308, 612, 32, 681, 610, 2768, 32, 25138, 1392, 81, 2788, 27, 301, 324, 415, 308, 16165, 27, 301, 1090, 8980, 32, 3734, 26, 1750, 971, 21887, 32, 2682, 26, 612, 32, 1251, 30, 8912, 81, 521, 81, 11144, 81, 25620, 3480, 81, 3908, 81, 4409, 81, 521]}
{"line_number": 209, "line_type": "original", "code": "      ReferenceCollectingCallback collector =", "entropy": 2.263671875, "is_bug_line": false, "sus_score": 0.2672612419124244, "per_token_entropy": [4.96484375, 6.21484375, 0.2242431640625, 7.37905502319336e-05, 0.00026726722717285156, 4.33984375, 0.11053466796875], "tokens": [647, 9494, 7938, 299, 3296, 26013, 280]}
{"line_number": 209, "line_type": "generated", "code": "\n            if (ref.type == Type.ALIASING_GET\n                && (initialized || ref.scope.isGlobal())) {\n              // The namespace is used in an unsafe way.\n              compiler.report(\n                  JSError.make(ref.node,", "entropy": 0.4921875, "is_bug_line": false, "sus_score": 0.2672612419124244, "per_token_entropy": [1.1728515625, 0.94873046875, 0.3134765625, 0.5439453125, 0.0159454345703125, 0.6923828125, 0.14990234375, 0.99853515625, 0.00682830810546875, 0.98681640625, 0.0015277862548828125, 0.0006771087646484375, 0.009368896484375, 2.109375, 0.66552734375, 1.5908203125, 0.86279296875, 0.14111328125, 0.413818359375, 0.003795623779296875, 0.67724609375, 0.1055908203125, 0.1893310546875, 0.7314453125, 0.2294921875, 0.008087158203125, 0.1063232421875, 1.76953125, 1.9130859375, 1.052734375, 0.853515625, 1.1181640625, 0.52587890625, 0.487548828125, 0.1217041015625, 0.0308837890625, 0.336181640625, 0.415771484375, 1.4462890625, 0.001041412353515625, 0.06793212890625, 0.00579071044921875, 0.966796875, 0.09698486328125, 0.1007080078125, 0.0003006458282470703, 0.00037670135498046875, 0.0029296875, 0.3955078125, 0.00269317626953125, 0.1956787109375, 0.0147705078125], "tokens": [324, 415, 308, 612, 32, 681, 610, 2768, 32, 25138, 1392, 81, 2788, 400, 962, 308, 16165, 1276, 2488, 32, 3473, 32, 297, 4455, 5156, 301, 1090, 434, 886, 3583, 438, 1654, 328, 600, 11135, 3352, 32, 1090, 8980, 32, 3734, 26, 1750, 971, 21887, 32, 2682, 26, 612, 32, 1251, 30]}
{"line_number": 213, "line_type": "original", "code": "      (new NodeTraversal(compiler, collector)).traverseAtScope(scope);", "entropy": 2.7734375, "is_bug_line": false, "sus_score": 0.2672612419124244, "per_token_entropy": [4.94921875, 7.6328125, 4.77734375, 4.28125, 3.244140625, 0.040008544921875, 0.073974609375, 0.1966552734375, 10.7734375, 0.5283203125, 0.294921875, 4.0078125, 0.057373046875, 0.01031494140625, 3.087890625, 0.4111328125], "tokens": [647, 308, 890, 4004, 35699, 26, 10199, 30, 26013, 3427, 33261, 1076, 5504, 26, 3473, 293]}
{"line_number": 213, "line_type": "generated", "code": "\n            }\n          } else if (ref.type == Ref.Type.ALIASING_GET) {\n            if (initialized) {\n              warnAboutNamespaceRedefinition(name, ref);", "entropy": 0.1588134765625, "is_bug_line": false, "sus_score": 0.2672612419124244, "per_token_entropy": [0.3720703125, 0.0028629302978515625, 0.8037109375, 0.0011968612670898438, 0.055755615234375, 0.463134765625, 0.1029052734375, 0.1494140625, 0.00461578369140625, 0.193115234375, 0.072265625, 0.00417327880859375, 2.6941299438476562e-05, 9.942054748535156e-05, 3.2901763916015625e-05, 1.3193359375, 0.0011348724365234375, 0.0006947517395019531, 0.0361328125, 0.32080078125, 0.00024890899658203125, 0.045501708984375, 0.41259765625, 0.319091796875, 0.60595703125, 0.3125, 0.0004367828369140625, 0.032745361328125, 0.1473388671875, 0.001338958740234375, 0.07464599609375, 0.102783203125, 0.06866455078125, 0.0029277801513671875, 0.0012187957763671875, 0.0004825592041015625, 0.0004875659942626953, 0.001964569091796875], "tokens": [324, 320, 616, 320, 813, 415, 308, 612, 32, 681, 610, 7908, 32, 620, 32, 25138, 1392, 81, 2788, 27, 301, 324, 415, 308, 16165, 27, 301, 1090, 17161, 11936, 5916, 435, 7390, 26, 426, 30, 2488, 293]}
{"line_number": 215, "line_type": "original", "code": "      ReferenceCollection aliasRefs = collector.getReferences(aliasVar);", "entropy": 2.650390625, "is_bug_line": false, "sus_score": 0.2672612419124244, "per_token_entropy": [5.015625, 9.140625, 4.75390625, 8.046875, 0.03619384765625, 0.038726806640625, 4.65234375, 0.041717529296875, 0.2822265625, 0.22509765625, 0.07281494140625, 3.853515625, 0.85400390625, 0.08880615234375], "tokens": [647, 9494, 2256, 8813, 21777, 280, 26013, 32, 371, 15661, 26, 7909, 1881, 293]}
{"line_number": 215, "line_type": "generated", "code": "\n              initialized &&\n              (ref.type == Ref.Type.ASSIGN ||\n               ref.type == Ref.Type.ALIASING_GET)) {\n            warnAboutNamespaceRedefinition(name, ref);\n          }\n        }\n      }\n    }\n  }\n\n ", "entropy": 0.2178955078125, "is_bug_line": false, "sus_score": 0.2672612419124244, "per_token_entropy": [0.314697265625, 1.5927734375, 0.76171875, 0.75732421875, 0.689453125, 0.0970458984375, 0.0063323974609375, 0.166015625, 0.11083984375, 0.0118560791015625, 0.00011897087097167969, 0.00015401840209960938, 3.218650817871094e-05, 2.12109375, 0.45361328125, 0.7822265625, 0.0963134765625, 0.0016336441040039062, 0.034149169921875, 0.0015115737915039062, 0.0030193328857421875, 8.58306884765625e-06, 3.933906555175781e-05, 3.635883331298828e-05, 1.5048828125, 0.00685882568359375, 0.0008764266967773438, 0.155029296875, 0.89697265625, 0.002635955810546875, 0.145263671875, 0.13623046875, 0.00018584728240966797, 0.0028438568115234375, 0.005611419677734375, 0.01312255859375, 0.0005488395690917969, 0.0006632804870605469, 0.0002551078796386719, 0.0008230209350585938, 0.0008568763732910156, 0.046661376953125, 0.00026869773864746094, 0.1634521484375, 0.0002856254577636719, 0.0215606689453125, 6.139278411865234e-05, 0.0308837890625, 0.001171112060546875, 0.0187530517578125, 0.00022864341735839844, 0.1685791015625], "tokens": [1090, 8765, 962, 1090, 308, 612, 32, 681, 610, 7908, 32, 620, 32, 25620, 1276, 3083, 2488, 32, 681, 610, 7908, 32, 620, 32, 25138, 1392, 81, 2788, 490, 301, 324, 17161, 11936, 5916, 435, 7390, 26, 426, 30, 2488, 293, 616, 320, 291, 320, 397, 320, 284, 320, 334, 320, 719]}
{"line_number": 216, "line_type": "original", "code": "      if (aliasRefs.isWellDefined()", "entropy": 2.94140625, "is_bug_line": false, "sus_score": 0.2672612419124244, "per_token_entropy": [4.703125, 7.0234375, 0.0694580078125, 6.59375, 3.93359375, 0.0760498046875, 0.87109375, 5.3984375, 0.15625, 0.5859375], "tokens": [647, 415, 308, 7909, 21777, 32, 297, 25778, 12421, 346]}
{"line_number": 216, "line_type": "generated", "code": "\n              ref.type == Ref.Type.SET_FROM_LOCAL) {\n            if (initialized && name.isNamespace()) {\n              warnAboutNamespaceRedefinition(name, ref);\n            }\n          } else if (\n              ref.type == Ref.", "entropy": 0.254638671875, "is_bug_line": false, "sus_score": 0.2672612419124244, "per_token_entropy": [0.51611328125, 0.1318359375, 0.0005946159362792969, 0.0246734619140625, 0.0031108856201171875, 0.00751495361328125, 0.00011324882507324219, 0.00016450881958007812, 2.086162567138672e-05, 0.5732421875, 0.046142578125, 0.113525390625, 7.033348083496094e-05, 0.2235107421875, 0.468017578125, 0.006450653076171875, 0.05157470703125, 0.62646484375, 0.336669921875, 0.364990234375, 1.3896484375, 1.7919921875, 0.0102996826171875, 2.244140625, 1.1962890625, 0.29833984375, 0.0005297660827636719, 0.021392822265625, 0.052886962890625, 0.00016629695892333984, 0.003009796142578125, 0.002902984619140625, 0.004367828369140625, 0.0003991127014160156, 0.0009441375732421875, 0.0003516674041748047, 0.0004737377166748047, 0.0011157989501953125, 0.0165863037109375, 2.968311309814453e-05, 0.3486328125, 0.00018739700317382812, 0.67578125, 0.373046875, 0.06512451171875, 1.0771484375, 0.12249755859375, 0.00196075439453125, 0.018707275390625, 0.023162841796875, 0.003971099853515625, 0.00010573863983154297], "tokens": [1090, 2488, 32, 681, 610, 7908, 32, 620, 32, 2695, 81, 9067, 81, 11144, 27, 301, 324, 415, 308, 16165, 962, 636, 32, 297, 5916, 1157, 301, 1090, 17161, 11936, 5916, 435, 7390, 26, 426, 30, 2488, 293, 324, 320, 616, 320, 813, 415, 308, 1090, 2488, 32, 681, 610, 7908, 32]}
{"line_number": 180, "line_type": "original", "code": "            if (inlineAliasIfPossible(ref, namespace)) {", "entropy": 1.826171875, "is_bug_line": false, "sus_score": 0.25, "per_token_entropy": [8.0, 3.427734375, 0.35791015625, 4.8046875, 1.1806640625, 2.005859375, 0.12103271484375, 0.2022705078125, 2.748046875, 0.34912109375, 0.427978515625, 0.057952880859375, 0.049224853515625], "tokens": [1468, 415, 308, 3221, 7886, 2797, 23708, 26, 612, 30, 3583, 490, 301]}
{"line_number": 180, "line_type": "generated", "code": "\n        return true;\n      }\n    }\n\n    return false;\n  }", "entropy": 0.1973876953125, "is_bug_line": false, "sus_score": 0.25, "per_token_entropy": [0.79833984375, 0.72265625, 0.043792724609375, 0.00704193115234375, 0.040008544921875, 0.0003590583801269531, 0.1451416015625, 0.00046825408935546875, 0.8759765625, 0.11383056640625, 0.0011682510375976562, 0.0019435882568359375, 0.01079559326171875, 0.001697540283203125], "tokens": [291, 442, 861, 45, 397, 320, 284, 320, 446, 442, 901, 45, 334, 320]}
{"line_number": 204, "line_type": "original", "code": "    Node aliasParent = alias.node.getParent();", "entropy": 1.5087890625, "is_bug_line": false, "sus_score": 0.25, "per_token_entropy": [4.99609375, 4.89453125, 3.06640625, 0.490234375, 0.04461669921875, 1.8662109375, 0.185546875, 0.91552734375, 0.1126708984375, 0.01258087158203125, 0.006740570068359375], "tokens": [264, 4004, 8813, 4433, 280, 8813, 32, 1251, 32, 18789, 473]}
{"line_number": 204, "line_type": "generated", "code": "\n        compiler.report(JSError.make(\n            aliasNode,\n            aliasNode.isAssign()?\n                CheckGlobalThis.UNSAFE_NAMESPACE_REMOVAL :\n                CheckGlobalThis.UNSAFE_NAMESPACE_EXTENSION,\n            name.get", "entropy": 0.490966796875, "is_bug_line": false, "sus_score": 0.25, "per_token_entropy": [0.377197265625, 1.083984375, 0.001018524169921875, 0.049285888671875, 0.00843048095703125, 0.329345703125, 0.037078857421875, 0.00042557716369628906, 0.0006856918334960938, 0.005290985107421875, 1.1845703125, 0.9638671875, 1.7451171875, 0.318603515625, 1.2119140625, 1.416015625, 1.064453125, 0.1485595703125, 0.84814453125, 0.11614990234375, 0.005657196044921875, 0.53857421875, 0.5751953125, 1.9755859375, 1.349609375, 0.2435302734375, 0.33642578125, 1.2451171875, 0.037689208984375, 0.0029392242431640625, 0.05633544921875, 0.0125732421875, 1.0302734375, 1.578125, 0.0006556510925292969, 0.43798828125, 0.0238037109375, 0.028411865234375, 0.01458740234375, 0.0012054443359375, 0.0022983551025390625, 0.09075927734375, 0.0018110275268554688, 0.0001569986343383789, 0.033294677734375, 0.0189361572265625, 2.041015625, 0.1605224609375, 0.20458984375, 0.6103515625, 0.05218505859375, 1.9130859375], "tokens": [291, 8980, 32, 3734, 26, 60, 21887, 32, 2682, 26, 324, 8813, 1212, 30, 324, 8813, 1212, 32, 297, 9079, 346, 1018, 400, 3456, 4455, 2272, 32, 1413, 24154, 81, 9621, 81, 613, 2396, 2715, 499, 400, 3456, 4455, 2272, 32, 1413, 24154, 81, 9621, 81, 19814, 30, 324, 636, 32, 371]}
{"line_number": 205, "line_type": "original", "code": "    if (aliasParent.isName()) {", "entropy": 2.423828125, "is_bug_line": false, "sus_score": 0.25, "per_token_entropy": [4.546875, 1.1015625, 0.732421875, 5.87890625, 6.76171875, 1.2138671875, 0.634765625, 2.654296875, 0.65869140625, 0.0467529296875], "tokens": [264, 415, 308, 7909, 4433, 32, 297, 558, 1157, 301]}
{"line_number": 205, "line_type": "generated", "code": "\n        if (initialized && name.globalSets > 0) {\n          // The namespace is initialized and it's being set more than once.\n          compiler.report(JSError.make(\n              name.getDeclaration(),\n              name.isEnum()\n                 ", "entropy": 0.67919921875, "is_bug_line": false, "sus_score": 0.25, "per_token_entropy": [0.52783203125, 0.9814453125, 0.75732421875, 0.2174072265625, 0.97021484375, 0.7705078125, 0.003814697265625, 1.89453125, 0.06793212890625, 1.2705078125, 0.0079193115234375, 1.0966796875, 0.3759765625, 0.0038890838623046875, 0.0545654296875, 1.6669921875, 1.9677734375, 0.45263671875, 0.80712890625, 1.2080078125, 1.65234375, 2.8984375, 1.103515625, 1.470703125, 1.23828125, 1.4326171875, 0.07061767578125, 0.2457275390625, 0.273193359375, 0.10552978515625, 1.55859375, 0.0007834434509277344, 0.0635986328125, 0.00966644287109375, 0.449462890625, 0.04364013671875, 0.00018095970153808594, 0.0015153884887695312, 0.0018587112426757812, 0.92578125, 0.0804443359375, 0.004150390625, 0.51171875, 0.0517578125, 0.199951171875, 0.458251953125, 2.404296875, 0.0076446533203125, 1.0185546875, 1.0205078125, 0.0275421142578125, 0.8935546875], "tokens": [291, 415, 308, 16165, 962, 636, 32, 3264, 10527, 848, 225, 34, 27, 301, 616, 434, 886, 3583, 438, 8765, 461, 561, 1182, 3998, 739, 1829, 2784, 5049, 32, 616, 8980, 32, 3734, 26, 60, 21887, 32, 2682, 26, 1090, 636, 32, 371, 10367, 1026, 1090, 636, 32, 297, 2759, 346, 1750]}
