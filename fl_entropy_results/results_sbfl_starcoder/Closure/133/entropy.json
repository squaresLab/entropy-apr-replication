{"line_number": 1838, "line_type": "original", "code": "    restoreLookAhead(token);", "entropy": 4.2421875, "is_bug_line": false, "sus_score": 0.2182178902359924, "per_token_entropy": [7.09375, 13.90625, 7.984375, 1.197265625, 0.0302734375, 2.267578125, 1.3486328125, 0.11871337890625], "tokens": [264, 11309, 7760, 51, 1816, 26, 1956, 293]}
{"line_number": 1838, "line_type": "generated", "code": "\n  private Node parseFunctionType(JsDocToken token) {\n    if (token!= JsDocToken.STRING) {\n      return reportGenericTypeSyntaxWarning();\n    }\n\n    String string = stream.getString();\n    if (!\"function\".equals(string)) {", "entropy": 0.09051513671875, "is_bug_line": false, "sus_score": 0.2182178902359924, "per_token_entropy": [0.1875, 0.0653076171875, 0.0130615234375, 0.007648468017578125, 0.020233154296875, 0.0131072998046875, 0.006938934326171875, 7.271766662597656e-06, 0.0009207725524902344, 0.0386962890625, 0.0026397705078125, 0.01030731201171875, 0.08038330078125, 0.572265625, 0.0706787109375, 0.0335693359375, 0.0870361328125, 0.0030155181884765625, 8.58306884765625e-06, 8.380413055419922e-05, 3.600120544433594e-05, 0.01129913330078125, 0.314208984375, 0.004852294921875, 0.020233154296875, 0.07281494140625, 0.047332763671875, 0.5546875, 0.00037097930908203125, 0.0002357959747314453, 0.004421234130859375, 0.004657745361328125, 0.00027060508728027344, 0.110107421875, 0.6484375, 1.3740234375, 0.0162353515625, 0.00794219970703125, 2.3245811462402344e-05, 0.0008058547973632812, 0.039154052734375, 0.043670654296875, 0.1058349609375, 0.052947998046875, 0.040740966796875, 0.0015239715576171875, 0.00024068355560302734, 0.0008869171142578125, 0.0002796649932861328, 0.0006232261657714844, 0.00936126708984375, 0.004543304443359375], "tokens": [334, 945, 4004, 3185, 44334, 26, 10535, 4216, 1763, 2404, 27, 301, 284, 415, 308, 1956, 863, 22301, 4216, 1763, 32, 5203, 27, 301, 397, 442, 3639, 40529, 6647, 5711, 473, 284, 320, 446, 892, 802, 280, 3443, 32, 7069, 473, 284, 415, 1429, 20, 1126, 2296, 3574, 26, 800, 490, 301]}
{"line_number": 1839, "line_type": "original", "code": "    return reportGenericTypeSyntaxWarning();", "entropy": 1.4365234375, "is_bug_line": false, "sus_score": 0.2182178902359924, "per_token_entropy": [5.234375, 1.9697265625, 1.9140625, 0.91650390625, 0.0025615692138671875, 0.001079559326171875, 0.01556396484375], "tokens": [264, 442, 3639, 40529, 6647, 5711, 473]}
{"line_number": 1839, "line_type": "generated", "code": "\n    if (token!= JsDocToken.STRING) {\n      return reportGenericTypeSyntaxWarning();\n    }\n\n    String functionType = stream.getString();\n    int lineno = stream.getLineno();\n    int charno = stream.getCharno();\n\n   ", "entropy": 0.1475830078125, "is_bug_line": false, "sus_score": 0.2182178902359924, "per_token_entropy": [0.69677734375, 0.91650390625, 0.152587890625, 0.1810302734375, 0.25048828125, 0.0034275054931640625, 7.510185241699219e-06, 6.902217864990234e-05, 6.020069122314453e-05, 0.01393890380859375, 0.17919921875, 0.01107025146484375, 0.01401519775390625, 0.06842041015625, 0.03436279296875, 0.417236328125, 0.0005679130554199219, 0.00037670135498046875, 0.0126800537109375, 0.005615234375, 0.00013577938079833984, 0.141845703125, 0.64208984375, 0.6708984375, 0.76904296875, 0.072509765625, 0.0784912109375, 3.7550926208496094e-05, 0.0007829666137695312, 0.00986480712890625, 0.10369873046875, 0.52490234375, 0.029693603515625, 0.0011644363403320312, 0.003032684326171875, 0.0015478134155273438, 0.0006375312805175781, 1.4424324035644531e-05, 1.800060272216797e-05, 0.00017714500427246094, 0.0053863525390625, 0.0175628662109375, 0.0012025833129882812, 0.0001550912857055664, 0.0003037452697753906, 0.0001952648162841797, 2.6464462280273438e-05, 0.0001914501190185547, 1.7523765563964844e-05, 3.7789344787597656e-05, 0.0003936290740966797, 1.6376953125], "tokens": [284, 415, 308, 1956, 863, 22301, 4216, 1763, 32, 5203, 27, 301, 397, 442, 3639, 40529, 6647, 5711, 473, 284, 320, 446, 892, 667, 620, 280, 3443, 32, 7069, 473, 284, 629, 39997, 280, 3443, 32, 371, 7366, 7888, 473, 284, 629, 1351, 1347, 280, 3443, 32, 371, 2659, 1347, 473, 446]}
{"line_number": 2303, "line_type": "original", "code": "    return reportTypeSyntaxWarning(\"msg.jsdoc.type.syntax\");", "entropy": 2.099609375, "is_bug_line": false, "sus_score": 0.20412414523193154, "per_token_entropy": [6.83984375, 2.884765625, 3.044921875, 0.382080078125, 0.0268096923828125, 0.007122039794921875, 0.95263671875, 8.6640625, 4.44921875, 3.310546875, 0.040924072265625, 0.008453369140625, 1.6494140625, 0.0875244140625, 0.77392578125, 0.465576171875], "tokens": [264, 442, 3639, 620, 6647, 5711, 440, 2076, 32, 754, 1427, 32, 681, 32, 8144, 724]}
{"line_number": 2303, "line_type": "generated", "code": "\n\n  private JsDocToken next() {\n    if (unreadToken!= NO_UNREAD_TOKEN) {\n      JsDocToken token = unreadToken;\n      unreadToken = NO_UNREAD_TOKEN;\n      return token;\n    }\n    return stream.", "entropy": 0.1514892578125, "is_bug_line": false, "sus_score": 0.20412414523193154, "per_token_entropy": [1.119140625, 1.1123046875, 1.5712890625, 0.0015001296997070312, 0.06243896484375, 0.7275390625, 0.04541015625, 0.0172882080078125, 0.077880859375, 0.54736328125, 0.010955810546875, 0.0197296142578125, 2.276897430419922e-05, 0.11529541015625, 0.0160064697265625, 8.225440979003906e-06, 0.00014126300811767578, 1.6689300537109375e-06, 1.7881393432617188e-05, 8.106231689453125e-06, 0.0010366439819335938, 0.0005602836608886719, 0.01210784912109375, 0.066650390625, 1.9669532775878906e-05, 7.152557373046875e-05, 0.5546875, 0.0160675048828125, 0.00960540771484375, 4.172325134277344e-06, 0.00024330615997314453, 0.0013866424560546875, 0.006649017333984375, 1.4185905456542969e-05, 6.16312026977539e-05, 0.0240631103515625, 0.003997802734375, 6.592273712158203e-05, 6.079673767089844e-06, 0.0002149343490600586, 4.76837158203125e-06, 6.99758529663086e-05, 0.00836181640625, 0.042755126953125, 0.00107574462890625, 0.0005297660827636719, 0.002826690673828125, 0.0005164146423339844, 0.69384765625, 0.366455078125, 0.6181640625, 0.0021266937255859375], "tokens": [719, 945, 22301, 4216, 1763, 2354, 346, 301, 284, 415, 308, 45906, 1763, 863, 4435, 81, 1413, 4409, 81, 9052, 27, 301, 397, 22301, 4216, 1763, 2404, 280, 49117, 1763, 45, 397, 49117, 1763, 280, 4435, 81, 1413, 4409, 81, 9052, 45, 397, 442, 2404, 45, 284, 320, 284, 442, 3443, 32]}
{"line_number": 947, "line_type": "original", "code": "                          type = createJSTypeExpression(newNode(Token.QMARK));", "entropy": 3.625, "is_bug_line": false, "sus_score": 0.1111111111111111, "per_token_entropy": [11.9609375, 8.71875, 0.317138671875, 5.86328125, 4.6171875, 0.0966796875, 2.6328125, 0.2352294921875, 6.0390625, 4.83203125, 4.3125, 1.955078125, 0.007442474365234375, 4.875, 0.0279083251953125, 1.5078125], "tokens": [10086, 827, 280, 1487, 4624, 620, 3487, 26, 890, 1212, 26, 1763, 32, 67, 12213, 876]}
{"line_number": 947, "line_type": "generated", "code": "\n        }\n\n        token = eatTokensUntilEOL();\n      }\n    }\n\n    // Verify that the @fileoverview tag is the first tag in the file.\n    if (fileoverviewLine!= -1 && fileoverviewLine!= lineno) {\n      parser.add", "entropy": 0.74169921875, "is_bug_line": false, "sus_score": 0.1111111111111111, "per_token_entropy": [0.65771484375, 0.26513671875, 0.9794921875, 1.447265625, 0.01470184326171875, 0.42041015625, 0.1304931640625, 0.0258026123046875, 0.029266357421875, 0.53076171875, 0.6044921875, 0.002513885498046875, 0.75634765625, 0.01471710205078125, 0.9833984375, 1.603515625, 4.234375, 0.29931640625, 1.4541015625, 3.3828125, 1.54296875, 0.1297607421875, 1.083984375, 0.92626953125, 1.4580078125, 0.40283203125, 1.49609375, 0.5478515625, 0.1322021484375, 0.4267578125, 0.2744140625, 0.061187744140625, 0.54248046875, 0.31689453125, 1.7255859375, 0.8408203125, 3.314453125, 0.802734375, 0.358154296875, 0.0009074211120605469, 1.1318359375, 0.6455078125, 0.01314544677734375, 0.1705322265625, 0.45556640625, 1.4560546875, 0.1475830078125, 0.004085540771484375, 0.0090484619140625, 0.263916015625, 0.0007243156433105469, 0.03570556640625], "tokens": [291, 320, 584, 2404, 280, 40808, 10911, 14877, 20277, 473, 397, 320, 284, 320, 446, 434, 12072, 688, 322, 477, 761, 11034, 2604, 438, 322, 1932, 2604, 328, 322, 803, 32, 284, 415, 308, 761, 11034, 1811, 863, 429, 35, 962, 803, 11034, 1811, 863, 39997, 27, 301, 397, 4118, 32, 669]}
{"line_number": 2341, "line_type": "original", "code": "    unreadToken = token;", "entropy": 2.96875, "is_bug_line": false, "sus_score": 0.0890870806374748, "per_token_entropy": [5.1796875, 6.7890625, 0.0044403076171875, 0.06597900390625, 4.81640625, 0.95703125], "tokens": [264, 49117, 1763, 280, 2404, 45]}
{"line_number": 2341, "line_type": "generated", "code": "\n      }\n    }\n  }\n\n  /**\n   * Skips all EOLs and all empty lines in the JSDoc. Call this method if you\n   * want the JSDoc entry to span multiple lines.\n   */\n  private void skipEOLs", "entropy": 0.142822265625, "is_bug_line": false, "sus_score": 0.0890870806374748, "per_token_entropy": [0.494384765625, 0.00550079345703125, 0.134765625, 0.0012798309326171875, 0.047821044921875, 0.001613616943359375, 0.293701171875, 0.197509765625, 0.08428955078125, 0.00042939186096191406, 1.16796875, 0.00069427490234375, 0.6240234375, 1.3759765625, 0.044525146484375, 0.0264434814453125, 0.26708984375, 0.2578125, 0.0233306884765625, 0.00377655029296875, 0.16015625, 0.0059814453125, 0.02655029296875, 4.5299530029296875e-05, 8.189678192138672e-05, 0.38232421875, 0.26025390625, 0.0004940032958984375, 0.0020618438720703125, 0.04156494140625, 0.0112152099609375, 0.0031909942626953125, 2.6345252990722656e-05, 0.045501708984375, 0.032257080078125, 0.01032257080078125, 7.796287536621094e-05, 8.428096771240234e-05, 0.01398468017578125, 0.00252532958984375, 0.0151214599609375, 0.00969696044921875, 0.0020923614501953125, 0.06829833984375, 0.09320068359375, 0.08770751953125, 0.006011962890625, 0.00605010986328125, 0.09857177734375, 0.05120849609375, 0.86083984375, 0.0792236328125], "tokens": [397, 320, 284, 320, 334, 320, 719, 1022, 664, 319, 6908, 9510, 1169, 516, 1752, 101, 461, 1169, 3502, 5430, 328, 322, 971, 3181, 542, 32, 5640, 458, 1411, 415, 844, 664, 319, 2637, 322, 971, 3181, 542, 3414, 372, 8106, 4609, 5430, 32, 664, 569, 334, 945, 763, 7116, 20277, 101]}
{"line_number": 2342, "line_type": "original", "code": "  }", "entropy": 1.9609375, "is_bug_line": false, "sus_score": 0.0890870806374748, "per_token_entropy": [3.775390625, 0.146484375], "tokens": [225, 320]}
{"line_number": 2342, "line_type": "generated", "code": "\n      }\n    }\n  }\n\n  /**\n   * Skips all empty lines in the JSDoc. Call this method if you want the JSDoc\n   * entry to span multiple lines.\n   */\n  private void skipEmptyLines() {\n    while (", "entropy": 0.13134765625, "is_bug_line": false, "sus_score": 0.0890870806374748, "per_token_entropy": [0.79541015625, 0.0130157470703125, 0.2200927734375, 0.0014581680297851562, 0.0635986328125, 0.0014505386352539062, 0.295654296875, 0.183837890625, 0.0762939453125, 0.0003368854522705078, 1.1826171875, 0.0007348060607910156, 0.64892578125, 1.052734375, 0.026153564453125, 0.1522216796875, 0.006549835205078125, 0.0155487060546875, 5.7220458984375e-05, 7.522106170654297e-05, 0.0833740234375, 0.382568359375, 0.0006594657897949219, 0.0045013427734375, 0.05816650390625, 0.0204925537109375, 0.35888671875, 0.2357177734375, 0.234375, 4.57763671875e-05, 0.0001392364501953125, 0.0018415451049804688, 0.00022089481353759766, 0.040618896484375, 0.01219940185546875, 0.1517333984375, 0.033111572265625, 0.00711822509765625, 0.096923828125, 0.033172607421875, 0.0165863037109375, 0.00530242919921875, 0.004207611083984375, 0.0168609619140625, 0.0031986236572265625, 0.0587158203125, 0.009765625, 0.0128326416015625, 0.001857757568359375, 0.07293701171875, 0.1297607421875, 0.007381439208984375], "tokens": [397, 320, 284, 320, 334, 320, 719, 1022, 664, 319, 6908, 9510, 1169, 3502, 5430, 328, 322, 971, 3181, 542, 32, 5640, 458, 1411, 415, 844, 2637, 322, 971, 3181, 542, 664, 319, 3414, 372, 8106, 4609, 5430, 32, 664, 569, 334, 945, 763, 7116, 2766, 8683, 346, 301, 284, 2218, 308]}
{"line_number": 2298, "line_type": "original", "code": "    parser.addTypeWarning(warning, stream.getLineno(), stream.getCharno());", "entropy": 2.203125, "is_bug_line": false, "sus_score": 0.08804509063256238, "per_token_entropy": [5.9375, 11.859375, 1.099609375, 3.322265625, 4.85546875, 8.1640625, 0.83642578125, 2.337890625, 2.216796875, 3.416015625, 0.277587890625, 0.259521484375, 0.032257080078125, 0.001094818115234375, 0.47216796875, 0.9150390625, 0.0092926025390625, 0.019439697265625, 0.007518768310546875, 6.210803985595703e-05, 0.2330322265625], "tokens": [264, 4118, 32, 669, 620, 5711, 26, 5691, 30, 3443, 32, 371, 7366, 7888, 1026, 3443, 32, 371, 2659, 1347, 1035]}
{"line_number": 2298, "line_type": "generated", "code": "\n  private boolean matches(JsDocToken token) {\n    return token == peek();\n  }\n\n  /**\n   * Returns the next token in the stream.\n   */\n  private JsDocToken next() {\n    if (unreadToken!= NO_UNREAD_", "entropy": 0.295166015625, "is_bug_line": false, "sus_score": 0.08804509063256238, "per_token_entropy": [0.62939453125, 0.130615234375, 0.093505859375, 1.7802734375, 0.252685546875, 0.040374755859375, 0.0006289482116699219, 0.0010538101196289062, 0.1875, 0.030029296875, 0.018585205078125, 0.23779296875, 0.58154296875, 1.361328125, 0.283935546875, 0.79248046875, 0.210205078125, 0.02130126953125, 0.0006246566772460938, 0.1158447265625, 0.11724853515625, 0.1060791015625, 0.0009284019470214844, 2.173828125, 0.1881103515625, 0.232177734375, 0.79736328125, 1.56640625, 0.0292816162109375, 1.0517578125, 0.68408203125, 0.3564453125, 0.1427001953125, 0.223876953125, 0.0303802490234375, 0.004085540771484375, 2.276897430419922e-05, 7.43865966796875e-05, 0.0240936279296875, 0.006992340087890625, 0.00547027587890625, 0.152099609375, 0.491943359375, 0.0131988525390625, 0.03338623046875, 3.325939178466797e-05, 0.126220703125, 0.02001953125, 6.67572021484375e-06, 0.0001519918441772461, 2.384185791015625e-06, 1.2755393981933594e-05], "tokens": [334, 945, 1905, 8001, 26, 10535, 4216, 1763, 2404, 27, 301, 284, 442, 2404, 610, 28474, 473, 334, 320, 719, 1022, 664, 319, 3759, 322, 2354, 2404, 328, 322, 3443, 32, 664, 569, 334, 945, 22301, 4216, 1763, 2354, 346, 301, 284, 415, 308, 45906, 1763, 863, 4435, 81, 1413, 4409, 81]}
{"line_number": 2299, "line_type": "original", "code": "    return null;", "entropy": 2.8984375, "is_bug_line": false, "sus_score": 0.08804509063256238, "per_token_entropy": [4.078125, 0.59521484375, 6.859375, 0.06396484375], "tokens": [264, 442, 744, 45]}
{"line_number": 2299, "line_type": "generated", "code": "\n  }\n\n  /**\n   * Tests whether the next symbol of the token stream matches the specific\n   * token.\n   */\n  private boolean match(JsDocToken token, JsDocToken... tokens) {", "entropy": 0.267578125, "is_bug_line": false, "sus_score": 0.08804509063256238, "per_token_entropy": [0.86083984375, 0.00716400146484375, 0.0789794921875, 0.150390625, 0.09698486328125, 0.0006794929504394531, 0.78759765625, 0.020172119140625, 0.04656982421875, 0.114501953125, 0.11651611328125, 0.0276641845703125, 0.003879547119140625, 0.004734039306640625, 0.0035266876220703125, 0.2451171875, 0.57861328125, 0.158447265625, 0.03594970703125, 0.0003268718719482422, 0.373779296875, 0.78369140625, 0.471923828125, 0.1365966796875, 0.0162506103515625, 0.0145111083984375, 0.1246337890625, 0.06439208984375, 0.411865234375, 0.29638671875, 0.0005965232849121094, 0.039520263671875, 0.184326171875, 0.541015625, 1.44921875, 0.0005946159362792969, 0.29345703125, 1.478515625, 0.94677734375, 0.004268646240234375, 0.0016384124755859375], "tokens": [334, 320, 719, 1022, 664, 319, 11398, 4946, 322, 2354, 6977, 432, 322, 2404, 3443, 8001, 322, 2818, 664, 319, 2404, 32, 664, 569, 334, 945, 1905, 2530, 26, 10535, 4216, 1763, 2404, 30, 22301, 4216, 1763, 1179, 7937, 27, 301]}
{"line_number": 958, "line_type": "original", "code": "                          ExtractionInfo returnDescriptionInfo =", "entropy": 3.4140625, "is_bug_line": false, "sus_score": 0.06950480468569159, "per_token_entropy": [9.0, 12.2109375, 2.625, 1.701171875, 1.431640625, 0.1981201171875, 0.00811767578125, 0.1356201171875], "tokens": [10086, 1283, 15487, 1120, 442, 3234, 1120, 280]}
{"line_number": 958, "line_type": "generated", "code": "\n          return false;\n\n        default:\n          // discard any accumulated information\n          jsdocBuilder.build(null);\n          parser.addError(\"msg.jsdoc.unexpected.token\",\n              token.getType().toString(),\n              token.getLineno(), token", "entropy": 0.464599609375, "is_bug_line": false, "sus_score": 0.06950480468569159, "per_token_entropy": [0.74169921875, 1.8046875, 0.47216796875, 0.002819061279296875, 0.404052734375, 0.72509765625, 0.00201416015625, 0.047332763671875, 2.134765625, 2.150390625, 0.01219940185546875, 0.0090179443359375, 0.0028209686279296875, 0.043914794921875, 0.0295867919921875, 2.3365020751953125e-05, 0.00034356117248535156, 0.00021648406982421875, 0.004718780517578125, 0.0011310577392578125, 0.005828857421875, 0.0003249645233154297, 0.8798828125, 2.916015625, 0.0035724639892578125, 0.37841796875, 1.4296875, 0.331787109375, 0.385009765625, 0.00036454200744628906, 0.440673828125, 0.03546142578125, 0.007717132568359375, 1.7978515625, 0.630859375, 0.5810546875, 0.15185546875, 0.4921875, 0.53369140625, 0.0970458984375, 0.73095703125, 0.386474609375, 0.0100250244140625, 0.09521484375, 0.81298828125, 0.78125, 0.04473876953125, 0.8974609375, 0.0034618377685546875, 0.0029354095458984375, 0.002796173095703125, 0.69775390625], "tokens": [616, 442, 901, 45, 584, 1244, 44, 616, 434, 27411, 1346, 47043, 2471, 616, 4060, 1427, 1796, 32, 1832, 26, 1693, 293, 616, 4118, 32, 669, 924, 440, 2076, 32, 754, 1427, 32, 22562, 32, 1956, 392, 1090, 2404, 32, 10272, 922, 3108, 1026, 1090, 2404, 32, 371, 7366, 7888, 1026, 2404]}
{"line_number": 1483, "line_type": "original", "code": "              builder.append(' ');", "entropy": 2.8203125, "is_bug_line": false, "sus_score": 0.06375767130633382, "per_token_entropy": [10.484375, 3.62109375, 0.076904296875, 0.08795166015625, 2.62109375, 0.0322265625], "tokens": [2850, 4906, 32, 1689, 463, 17858]}
{"line_number": 1483, "line_type": "generated", "code": "\n   * @return The top-level block comment.\n   */\n  private ExtractionInfo extractTopLevelBlock(JsDocToken token) {\n    Preconditions.checkArgument(token == JsDocToken.BLOCK_COMMENT_START);\n\n    StringBuilder builder = new StringBuilder", "entropy": 0.325927734375, "is_bug_line": false, "sus_score": 0.06375767130633382, "per_token_entropy": [0.08648681640625, 0.67041015625, 0.0848388671875, 0.405029296875, 0.6171875, 2.24609375, 0.1905517578125, 0.0032939910888671875, 0.379638671875, 0.1768798828125, 1.673828125, 0.1002197265625, 0.198974609375, 0.00978851318359375, 0.374267578125, 0.52587890625, 8.702278137207031e-06, 0.0006866455078125, 0.03558349609375, 0.8359375, 0.2279052734375, 0.59912109375, 0.1771240234375, 0.0002930164337158203, 0.01303863525390625, 0.004425048828125, 0.06646728515625, 0.1744384765625, 0.07220458984375, 1.630859375, 0.0008449554443359375, 0.005096435546875, 0.82861328125, 0.004604339599609375, 0.23583984375, 0.076904296875, 0.0307769775390625, 1.823902130126953e-05, 0.00087738037109375, 0.00018167495727539062, 1.435546875, 0.09271240234375, 0.093994140625, 0.234619140625, 0.0073394775390625, 0.289306640625, 0.3896484375, 1.5302734375, 0.0966796875, 0.0022678375244140625, 0.018280029296875, 0.0008449554443359375], "tokens": [664, 319, 477, 601, 886, 2663, 31, 2649, 2163, 5093, 32, 664, 569, 334, 945, 1283, 15487, 1120, 6571, 26412, 2227, 26, 10535, 4216, 1763, 2404, 27, 301, 284, 40596, 32, 1553, 3484, 26, 1956, 610, 22301, 4216, 1763, 32, 10322, 81, 16884, 81, 7383, 293, 446, 9706, 4906, 280, 537, 9706]}
{"line_number": 1475, "line_type": "original", "code": "            if (lineStartChar != -1 && option == WhitespaceOption.PRESERVE) {", "entropy": 1.0302734375, "is_bug_line": false, "sus_score": 0.05716619504750295, "per_token_entropy": [7.9375, 2.04296875, 0.12646484375, 2.84375, 1.0419921875, 0.001873016357421875, 0.7021484375, 0.05242919921875, 0.0008511543273925781, 2.86328125, 1.748046875, 1.1943359375, 0.1734619140625, 6.878376007080078e-05, 0.0016546249389648438, 0.0009775161743164062, 0.875, 0.0014591217041015625, 8.881092071533203e-05, 0.023193359375, 0.00955963134765625], "tokens": [1468, 415, 308, 928, 2130, 2659, 863, 429, 35, 962, 2470, 610, 2619, 12616, 2828, 32, 2883, 1408, 2478, 27, 301]}
{"line_number": 1475, "line_type": "generated", "code": "\n  /**\n   * Gets the next token.\n   *\n   * @return the next token.\n   */\n  private JsDocToken next() {\n    return tokenizer.getToken();\n  }", "entropy": 0.428955078125, "is_bug_line": false, "sus_score": 0.05716619504750295, "per_token_entropy": [0.69580078125, 0.95458984375, 0.2257080078125, 0.0004792213439941406, 2.72265625, 0.2015380859375, 0.85888671875, 0.2071533203125, 1.6220703125, 0.193359375, 0.474365234375, 0.15869140625, 0.003597259521484375, 0.056060791015625, 0.058349609375, 1.24609375, 0.220458984375, 0.11370849609375, 1.1123046875, 0.0220489501953125, 0.1932373046875, 0.02252197265625, 0.279296875, 0.0872802734375, 4.3392181396484375e-05, 0.004947662353515625, 0.0304412841796875, 0.0065765380859375, 0.12890625, 0.07708740234375, 1.5927734375, 0.732421875, 0.0209197998046875, 1.48828125, 0.053802490234375, 0.00931549072265625, 0.0005345344543457031], "tokens": [334, 1022, 664, 319, 7124, 322, 2354, 2404, 32, 664, 319, 664, 319, 477, 601, 322, 2354, 2404, 32, 664, 569, 334, 945, 22301, 4216, 1763, 2354, 346, 301, 284, 442, 26764, 32, 30120, 473, 334, 320]}
{"line_number": 1503, "line_type": "original", "code": "              jsdocBuilder.markText(multilineText, startLineno, startCharno,", "entropy": 2.169921875, "is_bug_line": false, "sus_score": 0.0419960525565808, "per_token_entropy": [4.734375, 9.1953125, 0.7021484375, 2.490234375, 0.244140625, 3.873046875, 5.8984375, 0.37451171875, 8.34375, 0.033935546875, 1.9453125, 0.7470703125, 3.853515625, 0.06134033203125, 0.00365447998046875, 0.04681396484375, 0.394775390625, 0.05535888671875, 0.0052490234375, 0.395751953125], "tokens": [2850, 4060, 1427, 1796, 32, 1826, 1031, 26, 7740, 17333, 1031, 30, 1477, 7366, 7888, 30, 1477, 2659, 1347, 30]}
{"line_number": 1503, "line_type": "generated", "code": "\n            builder.append(token);\n          }\n\n          ignoreStar = true;\n          token = next();\n          continue;\n\n        case EOL:\n          ignoreStar = true;\n          token = next();\n          continue;\n\n        default:\n          ignoreStar = false;\n         ", "entropy": 0.156982421875, "is_bug_line": false, "sus_score": 0.0419960525565808, "per_token_entropy": [0.794921875, 0.378173828125, 0.0136871337890625, 0.031982421875, 0.99609375, 1.3369140625, 0.66748046875, 0.07855224609375, 0.00042629241943359375, 0.480712890625, 0.6650390625, 1.1801719665527344e-05, 0.00017273426055908203, 0.3232421875, 5.5789947509765625e-05, 0.03997802734375, 0.09783935546875, 7.236003875732422e-05, 0.00655364990234375, 0.004306793212890625, 0.01349639892578125, 0.0406494140625, 0.0001271963119506836, 0.00848388671875, 0.11334228515625, 0.451416015625, 0.00011408329010009766, 0.0005044937133789062, 0.061279296875, 0.501953125, 3.0279159545898438e-05, 0.00011742115020751953, 0.1533203125, 2.682209014892578e-05, 0.07794189453125, 0.19677734375, 9.691715240478516e-05, 0.001743316650390625, 0.0006008148193359375, 0.01178741455078125, 0.018829345703125, 0.00014734268188476562, 0.006031036376953125, 0.0875244140625, 0.00032639503479003906, 0.0119476318359375, 0.059417724609375, 1.4066696166992188e-05, 0.00019359588623046875, 0.0018262863159179688, 3.2067298889160156e-05, 0.4287109375], "tokens": [324, 4906, 32, 1689, 26, 1956, 293, 616, 320, 5678, 5079, 9024, 280, 861, 45, 616, 2404, 280, 2354, 473, 616, 4036, 45, 584, 1135, 516, 1752, 44, 616, 5079, 9024, 280, 861, 45, 616, 2404, 280, 2354, 473, 616, 4036, 45, 584, 1244, 44, 616, 5079, 9024, 280, 901, 45, 616]}
{"line_number": 209, "line_type": "original", "code": "      ExtractionInfo blockInfo = extractBlockComment(token);", "entropy": 3.0703125, "is_bug_line": false, "sus_score": 0.041344911529736156, "per_token_entropy": [7.8828125, 10.015625, 0.0168914794921875, 0.10589599609375, 6.953125, 0.07562255859375, 0.49609375, 0.65380859375, 3.67578125, 4.74609375, 2.32421875, 2.712890625, 0.2470703125], "tokens": [647, 1283, 15487, 1120, 2163, 1120, 280, 6571, 2227, 6315, 26, 1956, 293]}
{"line_number": 209, "line_type": "generated", "code": "\n                          stream.getLineno(), stream.getCharno());\n                    } else {\n                      jsdocBuilder.recordAuthor(author);\n                    }\n                  }\n                  break;\n\n                case VERSION:\n                  if (jsdocBuilder.shouldParseDocumentation()) {\n                    Ex", "entropy": 0.140380859375, "is_bug_line": false, "sus_score": 0.041344911529736156, "per_token_entropy": [0.5126953125, 0.2259521484375, 0.0008058547973632812, 0.008941650390625, 0.0017576217651367188, 5.507469177246094e-05, 0.021240234375, 0.2296142578125, 0.0002830028533935547, 0.0009322166442871094, 0.001918792724609375, 3.4928321838378906e-05, 0.033233642578125, 0.1796875, 8.654594421386719e-05, 0.2437744140625, 0.10089111328125, 0.0304412841796875, 0.296142578125, 4.315376281738281e-05, 0.00017261505126953125, 0.0006413459777832031, 0.05303955078125, 0.060791015625, 0.0234832763671875, 0.0188140869140625, 0.1641845703125, 0.09619140625, 0.00010561943054199219, 0.445068359375, 0.0002968311309814453, 0.388671875, 1.271484375, 0.0005774497985839844, 0.06353759765625, 0.006076812744140625, 2.59375, 0.0003032684326171875, 0.022857666015625, 0.046417236328125, 0.0127410888671875, 0.00424957275390625, 1.5497207641601562e-05, 0.0013103485107421875, 5.1856040954589844e-05, 0.0030231475830078125, 0.0005955696105957031, 0.00046133995056152344, 0.002674102783203125, 0.00024819374084472656, 0.0172119140625, 0.10888671875], "tokens": [3775, 3443, 32, 371, 7366, 7888, 1026, 3443, 32, 371, 2659, 1347, 1035, 528, 320, 813, 301, 2855, 4060, 1427, 1796, 32, 4133, 4360, 26, 2116, 293, 528, 320, 1750, 320, 1750, 1626, 45, 2110, 1135, 20418, 44, 1750, 415, 308, 754, 1427, 1796, 32, 3163, 4480, 16944, 1157, 301, 528, 1283]}
{"line_number": 210, "line_type": "original", "code": "      token = blockInfo.token;", "entropy": 2.525390625, "is_bug_line": false, "sus_score": 0.041344911529736156, "per_token_entropy": [6.453125, 3.8828125, 0.0019989013671875, 7.63671875, 0.1365966796875, 0.00855255126953125, 1.8115234375, 0.2744140625], "tokens": [647, 2404, 280, 2163, 1120, 32, 1956, 45]}
{"line_number": 210, "line_type": "generated", "code": "\n                    } else {\n                      jsdocBuilder.recordAuthor(author);\n                    }\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case CONTRIBUTORS:\n                  if (jsdocBuilder.shouldParseDocumentation()) {\n                    ExtractionInfo contributorInfo", "entropy": 0.1492919921875, "is_bug_line": false, "sus_score": 0.041344911529736156, "per_token_entropy": [0.37890625, 0.004547119140625, 0.11309814453125, 0.1385498046875, 0.0418701171875, 0.30810546875, 2.8014183044433594e-05, 0.0001277923583984375, 0.0002751350402832031, 0.0552978515625, 0.061370849609375, 0.0234527587890625, 0.01552581787109375, 0.1575927734375, 0.09503173828125, 0.00012540817260742188, 0.186279296875, 0.0004425048828125, 0.340576171875, 0.424560546875, 9.572505950927734e-05, 0.0246734619140625, 0.006481170654296875, 0.0006341934204101562, 0.002162933349609375, 0.0023174285888671875, 0.005481719970703125, 0.0075531005859375, 0.00048351287841796875, 9.78708267211914e-05, 0.0828857421875, 0.00916290283203125, 3.583984375, 0.0009303092956542969, 0.032318115234375, 0.10186767578125, 0.01898193359375, 0.004550933837890625, 2.0742416381835938e-05, 0.0016374588012695312, 8.511543273925781e-05, 0.0013904571533203125, 0.0006132125854492188, 0.007610321044921875, 0.0035915374755859375, 0.0004887580871582031, 0.035247802734375, 0.263427734375, 1.0371208190917969e-05, 0.0003418922424316406, 1.1796875, 0.040252685546875], "tokens": [528, 320, 813, 301, 2855, 4060, 1427, 1796, 32, 4133, 4360, 26, 2116, 293, 528, 320, 1750, 320, 1750, 2404, 280, 40808, 10911, 14877, 20277, 473, 1750, 4036, 11322, 45, 2110, 1135, 13656, 44, 1750, 415, 308, 754, 1427, 1796, 32, 3163, 4480, 16944, 1157, 301, 528, 1283, 15487, 1120, 13893, 1120]}
{"line_number": 211, "line_type": "original", "code": "      if (!blockInfo.string.isEmpty()) {", "entropy": 2.123046875, "is_bug_line": false, "sus_score": 0.041344911529736156, "per_token_entropy": [7.70703125, 2.640625, 1.171875, 8.4609375, 0.5302734375, 0.0145721435546875, 1.8935546875, 0.0307159423828125, 0.70751953125, 0.0758056640625, 0.10760498046875], "tokens": [647, 415, 1429, 1521, 1120, 32, 800, 32, 6393, 1157, 301]}
{"line_number": 211, "line_type": "generated", "code": "\n                        jsdocBuilder.recordAuthor(author);\n                      }\n                    }\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case COPYRIGHT:\n                  if (jsdocBuilder.shouldParseDocumentation()) {\n                    ExtractionInfo copyrightInfo = extract", "entropy": 0.128173828125, "is_bug_line": false, "sus_score": 0.041344911529736156, "per_token_entropy": [1.12109375, 0.10211181640625, 3.361701965332031e-05, 0.00019156932830810547, 0.001491546630859375, 0.0548095703125, 0.05731201171875, 0.0247344970703125, 0.019073486328125, 0.1456298828125, 0.480224609375, 0.00861358642578125, 0.212646484375, 0.008819580078125, 0.453369140625, 0.1058349609375, 0.3212890625, 0.397705078125, 0.0001538991928100586, 0.05889892578125, 0.01004791259765625, 0.0007505416870117188, 0.003032684326171875, 0.0028476715087890625, 0.005092620849609375, 0.011749267578125, 0.0007195472717285156, 0.00013518333435058594, 0.09466552734375, 0.0114288330078125, 2.501953125, 0.0004558563232421875, 0.017974853515625, 0.04241943359375, 0.004802703857421875, 0.003482818603515625, 1.0371208190917969e-05, 0.00136566162109375, 0.00010991096496582031, 0.0007081031799316406, 0.00038313865661621094, 0.00115203857421875, 0.001583099365234375, 0.0004897117614746094, 0.01959228515625, 0.03924560546875, 2.7418136596679688e-06, 4.6253204345703125e-05, 0.252685546875, 0.00676727294921875, 0.002227783203125, 0.055511474609375], "tokens": [715, 4060, 1427, 1796, 32, 4133, 4360, 26, 2116, 293, 2855, 320, 528, 320, 1750, 320, 1750, 2404, 280, 40808, 10911, 14877, 20277, 473, 1750, 4036, 11322, 45, 2110, 1135, 8994, 44, 1750, 415, 308, 754, 1427, 1796, 32, 3163, 4480, 16944, 1157, 301, 528, 1283, 15487, 1120, 5539, 1120, 280, 6571]}
{"line_number": 214, "line_type": "original", "code": "    } else {", "entropy": 3.1875, "is_bug_line": false, "sus_score": 0.041344911529736156, "per_token_entropy": [7.0859375, 2.33984375, 2.767578125, 0.5546875], "tokens": [264, 320, 813, 301]}
{"line_number": 214, "line_type": "generated", "code": "\n                    if (token!= JsDocToken.EOC) {\n                      // Mark that there was a description, but don't bother\n                      // marking what it was.\n                      jsdocBuilder.recordBlockDescription(\"\");\n                    }\n                  }\n                  break;\n\n                case A", "entropy": 0.208984375, "is_bug_line": false, "sus_score": 0.041344911529736156, "per_token_entropy": [0.429931640625, 0.64990234375, 0.036834716796875, 0.038421630859375, 0.2313232421875, 0.0031948089599609375, 1.239776611328125e-05, 0.00013077259063720703, 0.00015342235565185547, 0.497802734375, 0.010223388671875, 0.10821533203125, 0.004261016845703125, 0.02215576171875, 1.2783203125, 1.482421875, 0.1854248046875, 0.0640869140625, 0.01061248779296875, 0.06597900390625, 0.045623779296875, 0.040618896484375, 0.0066986083984375, 0.0165863037109375, 3.719329833984375e-05, 0.07818603515625, 0.1107177734375, 5.4836273193359375e-05, 0.00618743896484375, 0.00891876220703125, 0.0005292892456054688, 0.0005044937133789062, 0.007465362548828125, 0.006595611572265625, 0.0217742919921875, 1.8477439880371094e-05, 0.00027251243591308594, 0.00017213821411132812, 0.01934814453125, 0.034759521484375, 0.0005612373352050781, 0.01275634765625, 0.03887939453125, 7.522106170654297e-05, 0.2462158203125, 0.00024580955505371094, 0.396728515625, 0.6416015625, 0.01099395751953125, 0.08709716796875, 0.01215362548828125, 3.8984375], "tokens": [528, 415, 308, 1956, 863, 22301, 4216, 1763, 32, 55, 9274, 27, 301, 2855, 434, 7778, 688, 2017, 1597, 312, 3048, 30, 1273, 2800, 1330, 41569, 2855, 434, 44720, 2769, 561, 1597, 32, 2855, 4060, 1427, 1796, 32, 4133, 2227, 3234, 10920, 528, 320, 1750, 320, 1750, 1626, 45, 2110, 1135, 399]}
{"line_number": 1537, "line_type": "original", "code": "    StringBuilder builder = new StringBuilder();", "entropy": 3.001953125, "is_bug_line": false, "sus_score": 0.041344911529736156, "per_token_entropy": [4.08984375, 11.7265625, 3.572265625, 1.2119140625, 0.061798095703125, 0.01418304443359375, 0.335693359375], "tokens": [264, 9706, 4906, 280, 537, 9706, 473]}
{"line_number": 1537, "line_type": "generated", "code": "\n   * specified in the parameter {@code trimChars}.\n   *\n   * @param str The string to trim.\n   * @param trimChars The characters to trim.\n   *\n   * @return The trimmed string.\n   */\n  private static String trimEnd", "entropy": 0.33984375, "is_bug_line": false, "sus_score": 0.041344911529736156, "per_token_entropy": [0.6318359375, 0.0137786865234375, 1.5029296875, 0.71728515625, 1.0986328125, 3.611328125, 1.6357421875, 0.0175933837890625, 1.544921875, 0.3720703125, 0.19775390625, 0.07421875, 0.017822265625, 0.146728515625, 0.0005636215209960938, 0.041168212890625, 0.007602691650390625, 1.650390625, 0.1446533203125, 0.0977783203125, 0.2469482421875, 0.1280517578125, 0.204833984375, 0.00731658935546875, 0.00397491455078125, 0.285888671875, 0.0175323486328125, 0.020660400390625, 0.002048492431640625, 0.42626953125, 0.1751708984375, 0.039703369140625, 0.2548828125, 0.55224609375, 0.043182373046875, 0.0178985595703125, 0.3662109375, 0.0010929107666015625, 0.0018243789672851562, 0.00269317626953125, 0.10760498046875, 0.1845703125, 0.025299072265625, 0.0445556640625, 0.0137939453125, 0.015838623046875, 0.01776123046875, 0.14111328125, 0.7236328125, 0.02508544921875, 0.010498046875, 0.039337158203125], "tokens": [664, 319, 3191, 328, 322, 3395, 3088, 687, 11760, 16364, 4009, 664, 319, 664, 319, 477, 753, 596, 886, 802, 372, 11760, 32, 664, 319, 477, 753, 11760, 16364, 886, 7125, 372, 11760, 32, 664, 319, 664, 319, 477, 601, 886, 41556, 802, 32, 664, 569, 334, 945, 907, 892, 11760, 2102]}
{"line_number": 1539, "line_type": "original", "code": "    boolean ignoreStar = true;", "entropy": 2.962890625, "is_bug_line": false, "sus_score": 0.041344911529736156, "per_token_entropy": [5.73828125, 9.296875, 3.677734375, 0.277099609375, 0.32470703125, 1.3662109375, 0.060150146484375], "tokens": [264, 1905, 5079, 9024, 280, 861, 45]}
{"line_number": 1539, "line_type": "generated", "code": "\n   * @param string The string to trim.\n   * @param trimChars The characters to trim.\n   *\n   * @return The trimmed string.\n   */\n  private static String trimEnd(String string, String trimChars) {\n    int end =", "entropy": 0.2471923828125, "is_bug_line": false, "sus_score": 0.041344911529736156, "per_token_entropy": [0.2041015625, 0.1690673828125, 0.2222900390625, 0.0149078369140625, 2.0625, 0.1793212890625, 0.0936279296875, 0.229248046875, 0.1982421875, 0.36767578125, 0.02191162109375, 0.0159149169921875, 0.60498046875, 0.131591796875, 1.673828125, 0.404052734375, 0.322265625, 0.14892578125, 0.0244598388671875, 0.2164306640625, 0.4638671875, 0.0684814453125, 0.0194091796875, 0.55322265625, 0.0011434555053710938, 0.002819061279296875, 0.0026798248291015625, 0.1064453125, 0.2412109375, 0.0228118896484375, 0.0501708984375, 0.0226287841796875, 0.01451873779296875, 0.016082763671875, 0.1505126953125, 0.7490234375, 0.0229949951171875, 0.00640106201171875, 0.02142333984375, 0.0094451904296875, 0.0208892822265625, 0.027740478515625, 0.11859130859375, 0.74267578125, 0.027130126953125, 0.0005741119384765625, 0.0038776397705078125, 0.005794525146484375, 0.06396484375, 0.53271484375, 1.1240234375, 0.33642578125], "tokens": [664, 319, 477, 753, 802, 886, 802, 372, 11760, 32, 664, 319, 477, 753, 11760, 16364, 886, 7125, 372, 11760, 32, 664, 319, 664, 319, 477, 601, 886, 41556, 802, 32, 664, 569, 334, 945, 907, 892, 11760, 2102, 26, 652, 802, 30, 892, 11760, 16364, 27, 301, 284, 629, 943, 280]}
{"line_number": 1542, "line_type": "original", "code": "      switch (token) {", "entropy": 3.732421875, "is_bug_line": false, "sus_score": 0.041344911529736156, "per_token_entropy": [5.13671875, 10.0859375, 0.1456298828125, 5.34765625, 1.498046875, 0.1820068359375], "tokens": [647, 3578, 308, 1956, 27, 301]}
{"line_number": 1542, "line_type": "generated", "code": "\n   */\n  private static String trimEnd(String s) {\n    if (s.length() == 0) {\n      return s;\n    }\n\n    int end = s.length() - 1;\n\n    while (end >= 0 && Character", "entropy": 0.1688232421875, "is_bug_line": false, "sus_score": 0.041344911529736156, "per_token_entropy": [0.47021484375, 0.08502197265625, 0.027587890625, 0.1822509765625, 0.841796875, 0.023284912109375, 0.0014200210571289062, 0.0020542144775390625, 0.01184844970703125, 0.020172119140625, 0.007099151611328125, 0.1480712890625, 0.0187835693359375, 0.1055908203125, 1.91796875, 0.03228759765625, 0.079345703125, 0.8388671875, 0.2091064453125, 0.003055572509765625, 0.103271484375, 0.0004754066467285156, 0.00257110595703125, 0.021087646484375, 0.01434326171875, 0.03192138671875, 0.0090179443359375, 0.0692138671875, 0.0012159347534179688, 0.007289886474609375, 0.00119781494140625, 0.09356689453125, 0.282470703125, 0.88525390625, 0.310791015625, 0.01073455810546875, 3.445148468017578e-05, 0.0002186298370361328, 0.12451171875, 0.00035190582275390625, 0.008270263671875, 8.90493392944336e-05, 0.0008363723754882812, 0.3134765625, 0.29638671875, 0.11053466796875, 0.283203125, 0.140380859375, 0.002758026123046875, 0.0005435943603515625, 0.299072265625, 0.330322265625], "tokens": [664, 569, 334, 945, 907, 892, 11760, 2102, 26, 652, 309, 27, 301, 284, 415, 308, 101, 32, 1322, 346, 610, 225, 34, 27, 301, 397, 442, 309, 45, 284, 320, 446, 629, 943, 280, 309, 32, 1322, 346, 429, 225, 35, 45, 446, 2218, 308, 416, 2377, 225, 34, 962, 15041]}
{"line_number": 1546, "line_type": "original", "code": "          return new ExtractionInfo(builder.toString().trim(), token);", "entropy": 1.5712890625, "is_bug_line": false, "sus_score": 0.041344911529736156, "per_token_entropy": [7.2734375, 4.31640625, 5.80078125, 2.27734375, 0.00017702579498291016, 0.0017251968383789062, 0.032470703125, 0.70458984375, 0.049957275390625, 0.00655364990234375, 2.6171875, 0.02294921875, 0.037811279296875, 0.421630859375, 0.004360198974609375], "tokens": [2033, 442, 537, 1283, 15487, 1120, 26, 4164, 32, 3108, 922, 5464, 1026, 2404, 293]}
{"line_number": 1546, "line_type": "generated", "code": "\n      trimCount++;\n    }\n\n    return s.substring(0, s.length() - trimCount);\n  }\n\n  /**\n   * Determines if the current token is a block comment.\n   *\n   * @param token The token to check.\n   *", "entropy": 0.396240234375, "is_bug_line": false, "sus_score": 0.041344911529736156, "per_token_entropy": [1.390625, 1.0498046875, 0.0012483596801757812, 0.042510986328125, 0.037567138671875, 0.0004792213439941406, 0.413330078125, 0.380615234375, 0.1678466796875, 0.00249481201171875, 0.00388336181640625, 0.0004086494445800781, 0.018035888671875, 0.0009183883666992188, 0.63818359375, 0.0001480579376220703, 0.001468658447265625, 0.027801513671875, 0.001079559326171875, 0.005527496337890625, 0.00021386146545410156, 0.019134521484375, 0.015289306640625, 0.0020427703857421875, 0.42919921875, 0.11077880859375, 0.0240631103515625, 0.0007472038269042969, 3.466796875, 0.68359375, 0.394775390625, 1.6796875, 0.56103515625, 0.433349609375, 0.71533203125, 2.54296875, 0.67236328125, 0.77099609375, 0.08477783203125, 0.036376953125, 0.390869140625, 0.0004239082336425781, 0.0214080810546875, 0.8369140625, 0.064453125, 0.3330078125, 0.73046875, 0.60693359375, 0.67041015625, 0.10498046875, 0.0026531219482421875, 0.02325439453125], "tokens": [397, 11760, 1534, 3334, 284, 320, 446, 442, 309, 32, 8723, 26, 34, 30, 309, 32, 1322, 346, 429, 11760, 1534, 293, 334, 320, 719, 1022, 664, 319, 34450, 415, 322, 1550, 2404, 438, 312, 2163, 5093, 32, 664, 319, 664, 319, 477, 753, 2404, 886, 2404, 372, 1505, 32, 664, 319]}
{"line_number": 1379, "line_type": "original", "code": "    return extractMultilineTextualBlock(token, WhitespaceOption.SINGLE_LINE);", "entropy": 1.166015625, "is_bug_line": false, "sus_score": 0.037267799624996496, "per_token_entropy": [3.92578125, 2.302734375, 4.7109375, 0.20947265625, 0.0006361007690429688, 0.1876220703125, 0.04071044921875, 0.007686614990234375, 0.430419921875, 0.79052734375, 0.19140625, 7.33984375, 0.0004241466522216797, 0.004489898681640625, 0.123291015625, 1.7724609375, 0.00066375732421875, 0.00045418739318847656, 0.116455078125], "tokens": [264, 442, 6571, 11235, 17333, 1031, 1029, 2227, 26, 1956, 30, 2619, 12616, 2828, 32, 20799, 81, 4780, 293]}
{"line_number": 1379, "line_type": "generated", "code": "\n    if (option == WhitespaceOption.SINGLE_LINE) {\n      line = line.replaceAll(\"\\\\s+\", \" \");\n    }\n\n    builder.append(line);\n\n    // Read the rest of the lines.\n    while (true) {\n      token =", "entropy": 0.30859375, "is_bug_line": false, "sus_score": 0.037267799624996496, "per_token_entropy": [1.0185546875, 2.16015625, 0.05694580078125, 0.5361328125, 0.1302490234375, 0.006103515625, 7.62939453125e-06, 5.4836273193359375e-06, 9.047985076904297e-05, 0.222412109375, 1.5854835510253906e-05, 6.794929504394531e-06, 0.03692626953125, 0.0013589859008789062, 0.0283203125, 1.8125, 0.037261962890625, 0.189208984375, 0.0011491775512695312, 0.56494140625, 0.228271484375, 0.10064697265625, 0.177978515625, 0.0186004638671875, 0.05169677734375, 0.25439453125, 0.00013887882232666016, 0.63525390625, 0.8203125, 0.00107574462890625, 0.0004074573516845703, 0.002391815185546875, 0.00618743896484375, 0.0543212890625, 0.387451171875, 0.61767578125, 0.744140625, 0.6162109375, 0.70166015625, 0.07562255859375, 0.007770538330078125, 0.345703125, 0.30615234375, 0.1080322265625, 1.212890625, 0.10791015625, 0.3427734375, 0.00054168701171875, 0.00186920166015625, 0.1439208984375, 1.1650390625, 0.005786895751953125], "tokens": [284, 415, 308, 1762, 610, 2619, 12616, 2828, 32, 20799, 81, 4780, 27, 301, 397, 1628, 280, 1628, 32, 23358, 22899, 101, 32672, 313, 7170, 284, 320, 446, 4906, 32, 1689, 26, 928, 293, 446, 434, 4841, 322, 6109, 432, 322, 5430, 32, 284, 2218, 308, 1508, 27, 301, 397, 2404, 280]}
