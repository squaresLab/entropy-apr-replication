{"line_number": 1484, "line_type": "original", "code": "          sb.append(joinString);", "entropy": 2.2421875, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [7.0234375, 7.23046875, 0.80322265625, 0.158447265625, 0.14013671875, 2.466796875, 0.015869140625, 0.0980224609375], "tokens": [2033, 6115, 32, 1689, 26, 2524, 652, 293]}
{"line_number": 1484, "line_type": "generated", "code": "\n        }\n        break;\n    }\n\n    t.getCompiler().reportCodeChange();\n  }\n\n\n  /**\n   * Try to fold an array join: ['a', 'b', 'c'].join('') -> 'abc';\n   */\n  void tryFoldArray", "entropy": 0.2095947265625, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.1993408203125, 0.00640869140625, 0.84326171875, 0.365966796875, 0.00023436546325683594, 0.0178680419921875, 0.00040221214294433594, 0.55322265625, 0.1025390625, 1.1920928955078125e-05, 0.0020198822021484375, 0.0001245737075805664, 8.082389831542969e-05, 0.00019800662994384766, 0.00579071044921875, 9.059906005859375e-06, 0.0006957054138183594, 0.021820068359375, 0.0005202293395996094, 1.7587890625, 0.188232421875, 0.058258056640625, 0.00027251243591308594, 0.453857421875, 0.01522064208984375, 0.2220458984375, 1.5595703125, 0.294189453125, 1.6279296875, 0.2479248046875, 0.45068359375, 0.049896240234375, 0.033843994140625, 0.017120361328125, 0.0031261444091796875, 0.02618408203125, 0.0097503662109375, 0.0013933181762695312, 0.06756591796875, 0.10540771484375, 0.31396484375, 0.0170440673828125, 0.03875732421875, 0.01274871826171875, 0.07904052734375, 0.00244903564453125, 0.043060302734375, 0.00460052490234375, 0.0204620361328125, 0.00926971435546875, 0.0262451171875, 1.0166015625], "tokens": [291, 320, 291, 1626, 45, 284, 320, 446, 273, 32, 371, 8115, 922, 3734, 1227, 1791, 473, 334, 320, 8878, 1022, 664, 319, 8959, 372, 11426, 600, 1417, 7140, 44, 2107, 83, 370, 330, 84, 370, 330, 85, 5695, 2524, 25416, 967, 330, 8183, 920, 664, 569, 334, 763, 1596, 15483, 1261]}
{"line_number": 1490, "line_type": "original", "code": "          foldedSize += sb.length() + 2;", "entropy": 1.7392578125, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [6.8203125, 7.41796875, 0.00042939186096191406, 0.1490478515625, 1.8212890625, 5.5625, 0.0037899017333984375, 0.029022216796875, 0.5166015625, 0.1181640625, 0.049163818359375, 0.08404541015625, 0.040496826171875], "tokens": [2033, 14801, 981, 1250, 1454, 6115, 32, 1322, 346, 474, 225, 36, 45]}
{"line_number": 1490, "line_type": "generated", "code": "\n          return;\n        }\n        arrayNode.detachChildren();\n        for (Node child : arrayFoldedChildren) {\n          arrayNode.addChildToBack(child);\n        }\n        Node newJoin = new Node(Token.STRING,\n            Node.", "entropy": 0.282958984375, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.14990234375, 0.049224853515625, 0.0022792816162109375, 0.0204010009765625, 0.000751495361328125, 0.425048828125, 1.494140625, 0.02777099609375, 0.0004856586456298828, 0.1259765625, 0.0002321004867553711, 0.0005540847778320312, 0.048736572265625, 0.68994140625, 0.0029754638671875, 0.0300140380859375, 1.3095703125, 0.08740234375, 0.004207611083984375, 0.0004668235778808594, -0.0, 3.5762786865234375e-07, 1.7404556274414062e-05, 0.0006399154663085938, 0.0004565715789794922, 0.0279083251953125, 0.220458984375, 8.213520050048828e-05, 2.7418136596679688e-05, 0.003032684326171875, 0.00966644287109375, 0.09185791015625, 0.0005359649658203125, 0.0186309814453125, 0.03955078125, 0.036285400390625, 3.063678741455078e-05, 0.17529296875, 1.2978515625, 1.568359375, 1.18359375, 0.62548828125, 0.720703125, 0.00704193115234375, 0.0008172988891601562, 0.0723876953125, 1.2278556823730469e-05, 0.52880859375, 0.37939453125, 2.076171875, 1.14453125, 0.0126953125], "tokens": [616, 442, 45, 291, 320, 291, 1417, 1212, 32, 18723, 7640, 473, 291, 436, 308, 1212, 2838, 499, 1417, 56, 362, 981, 7640, 27, 301, 616, 1417, 1212, 32, 21545, 705, 2495, 26, 2661, 293, 291, 320, 291, 4004, 537, 6249, 280, 537, 4004, 26, 1763, 32, 5203, 30, 324, 4004, 32]}
{"line_number": 1491, "line_type": "original", "code": "          arrayFoldedChildren.add(Node.newString(sb.toString()));", "entropy": 0.9912109375, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [7.90625, 2.974609375, 0.744140625, 1.6689300537109375e-06, 1.3232231140136719e-05, 0.0013437271118164062, 0.1224365234375, 0.09521484375, 0.011383056640625, 1.4326171875, 0.00812530517578125, 0.0012969970703125, 0.004730224609375, 0.33642578125, 4.15625, 0.022735595703125, 0.0028247833251953125, 0.0160369873046875], "tokens": [2033, 1417, 56, 362, 981, 7640, 32, 669, 26, 1212, 32, 890, 652, 26, 5682, 32, 3108, 5073]}
{"line_number": 1491, "line_type": "generated", "code": "\n        }\n        arrayNode.detachChildren();\n        for (Node child : arrayFoldedChildren) {\n          arrayNode.addChildToBack(child);\n        }\n        Node newJoin = new Node(Token.STRING_CONCAT,\n            Node.new", "entropy": 0.29296875, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.032684326171875, 0.0015916824340820312, 0.44091796875, 1.4228515625, 0.0249786376953125, 0.00039958953857421875, 0.146484375, 0.00025272369384765625, 0.0006589889526367188, 0.0465087890625, 1.0146484375, 0.003284454345703125, 0.0443115234375, 1.291015625, 0.09210205078125, 0.005573272705078125, 0.0006046295166015625, -0.0, 5.245208740234375e-06, 1.4066696166992188e-05, 0.0008115768432617188, 0.0004978179931640625, 0.026702880859375, 0.265625, 0.00014328956604003906, 3.24249267578125e-05, 0.004199981689453125, 0.01238250732421875, 0.087890625, 0.0005359649658203125, 0.0267486572265625, 0.04766845703125, 0.07916259765625, 5.9485435485839844e-05, 0.2120361328125, 1.1357421875, 1.53125, 1.1220703125, 0.6064453125, 0.7255859375, 0.00652313232421875, 0.0008349418640136719, 0.06585693359375, 6.318092346191406e-06, 0.446533203125, 1.0361328125, 1.634765625, 0.040130615234375, 0.74560546875, 0.78759765625, 0.0135955810546875, 0.0002560615539550781], "tokens": [291, 320, 291, 1417, 1212, 32, 18723, 7640, 473, 291, 436, 308, 1212, 2838, 499, 1417, 56, 362, 981, 7640, 27, 301, 616, 1417, 1212, 32, 21545, 705, 2495, 26, 2661, 293, 291, 320, 291, 4004, 537, 6249, 280, 537, 4004, 26, 1763, 32, 5203, 81, 46142, 30, 324, 4004, 32, 890]}
{"line_number": 1492, "line_type": "original", "code": "          sb = new StringBuilder();", "entropy": 2.541015625, "is_bug_line": true, "sus_score": 1.0, "per_token_entropy": [8.9921875, 5.0546875, 1.025390625, 0.058807373046875, 0.0012416839599609375, 0.1134033203125], "tokens": [2033, 6115, 280, 537, 9706, 473]}
{"line_number": 1492, "line_type": "generated", "code": "\n        Node newArrayNode = new Node(Token.ARRAYLIT, arrayFoldedChildren);\n        parent.replaceChild(n, newArrayNode);\n        break;\n    }\n\n    t.getCompiler().reportCodeChange();\n  }", "entropy": 0.1583251953125, "is_bug_line": true, "sus_score": 1.0, "per_token_entropy": [0.423828125, 1.212890625, 1.5224609375, 0.5849609375, 0.79052734375, 0.006145477294921875, 0.316650390625, 0.00440216064453125, 0.000980377197265625, 0.08526611328125, 1.0013580322265625e-05, 0.00274658203125, 0.0005240440368652344, 0.138916015625, 0.2095947265625, 0.007045745849609375, 1.9073486328125e-06, 2.7418136596679688e-06, 4.0411949157714844e-05, 0.226806640625, 0.0760498046875, 0.37548828125, 0.0001035928726196289, 0.0011653900146484375, 4.303455352783203e-05, 0.00030875205993652344, 0.4169921875, 0.0022792816162109375, 0.00469207763671875, 0.0001785755157470703, 3.600120544433594e-05, 0.0028820037841796875, 0.66064453125, 0.1541748046875, 0.0014495849609375, 0.06005859375, 0.0008063316345214844, 0.357177734375, 0.06402587890625, 1.5139579772949219e-05, 0.0039825439453125, 0.0001533031463623047, 7.95125961303711e-05, 0.00014328956604003906, 0.0078887939453125, 8.702278137207031e-06, 0.0006346702575683594, 0.0297698974609375, 0.0008978843688964844], "tokens": [291, 4004, 537, 1261, 1212, 280, 537, 4004, 26, 1763, 32, 9487, 22532, 30, 1417, 56, 362, 981, 7640, 293, 291, 2935, 32, 3227, 2931, 26, 96, 30, 537, 1261, 1212, 293, 291, 1626, 45, 284, 320, 446, 273, 32, 371, 8115, 922, 3734, 1227, 1791, 473, 334, 320]}
{"line_number": 1511, "line_type": "original", "code": "        Node emptyStringNode = Node.newString(\"\");", "entropy": 1.896484375, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [7.03125, 6.4140625, 5.6875, 0.8837890625, 0.11273193359375, 0.00942230224609375, 0.599609375, 0.09124755859375, 0.00034356117248535156, 0.0029315948486328125, 0.0300140380859375], "tokens": [351, 4004, 3502, 652, 1212, 280, 4004, 32, 890, 652, 10920]}
{"line_number": 1511, "line_type": "generated", "code": "\n        return;\n      }\n\n      int index = NodeUtil.getIntegerValue(right);\n      if (index < 0) {\n        return;\n      }\n\n      int numElements = left.getChildCount();\n      if (index >= numElements) {\n        return", "entropy": 0.27001953125, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.1871337890625, 0.147705078125, 0.0034198760986328125, 0.007053375244140625, 0.00011217594146728516, 0.27587890625, 0.88623046875, 0.2509765625, 0.11614990234375, 1.8701171875, 0.0018548965454101562, 4.1365623474121094e-05, 1.12109375, 0.00022280216217041016, 0.00020003318786621094, 0.00490570068359375, 0.023284912109375, 0.447021484375, 0.329345703125, 0.0355224609375, 0.007282257080078125, 0.5498046875, 0.00926971435546875, 0.0007295608520507812, 0.4814453125, 0.0014982223510742188, 0.11285400390625, 1.1455078125, 0.0015878677368164062, 0.0189361572265625, 5.984306335449219e-05, 0.198486328125, 1.5068359375, 1.6708984375, 1.107421875, 0.0286712646484375, 0.174560546875, 3.707408905029297e-05, 0.004947662353515625, 0.00013589859008789062, 0.08050537109375, 0.1376953125, 0.1497802734375, 0.0302276611328125, 0.138427734375, 0.2349853515625, 0.00177001953125, 2.384185791015625e-07, 0.01093292236328125, 0.0007939338684082031, 0.1455078125, 0.38818359375], "tokens": [291, 442, 45, 397, 320, 1687, 629, 1650, 280, 4004, 1733, 32, 48896, 882, 26, 990, 293, 397, 415, 308, 1055, 333, 225, 34, 27, 301, 291, 442, 45, 397, 320, 1687, 629, 1929, 7452, 280, 2841, 32, 24213, 1534, 473, 397, 415, 308, 1055, 2377, 1929, 7452, 27, 301, 291, 442]}
{"line_number": 1512, "line_type": "original", "code": "        parent.replaceChild(n, emptyStringNode);", "entropy": 1.8681640625, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [7.4765625, 7.84375, 0.016082763671875, 0.1240234375, 0.000823974609375, 0.0005974769592285156, 0.0712890625, 0.0007205009460449219, 6.125, 0.56103515625, 0.176513671875, 0.033172607421875], "tokens": [351, 2935, 32, 3227, 2931, 26, 96, 30, 3502, 652, 1212, 293]}
{"line_number": 1512, "line_type": "generated", "code": "\n      }\n\n      int index = right.getDouble() == Math.floor(right.getDouble())\n         ? (int) right.getDouble() : -1;\n\n      // If we can't fold it, bail.\n      if (index < 0 || index", "entropy": 0.47265625, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.11614990234375, 0.001983642578125, 0.2342529296875, 0.84130859375, 0.25634765625, 0.12493896484375, 1.01953125, 0.0012388229370117188, 0.38671875, 0.254638671875, 1.8203125, 0.296630859375, 0.00020444393157958984, 0.348388671875, 0.0005602836608886719, 0.01556396484375, 0.0002791881561279297, 0.0010652542114257812, 0.00254058837890625, 0.6171875, 0.01496124267578125, 0.21484375, 0.0011692047119140625, 0.00298309326171875, 0.0679931640625, 3.838539123535156e-05, 0.0009431838989257812, 0.0004165172576904297, 1.06640625, 0.1512451171875, 0.00267791748046875, 0.00286102294921875, 0.58544921875, 2.265625, 2.623046875, 2.19921875, 1.3017578125, 0.33642578125, 2.138671875, 1.7431640625, 0.262939453125, 1.8994140625, 0.68408203125, 0.0882568359375, 0.0982666015625, 0.1561279296875, 0.0218505859375, 0.1798095703125, 0.003643035888671875, 0.0005769729614257812, 0.08978271484375, 0.0298614501953125], "tokens": [397, 320, 1687, 629, 1650, 280, 2091, 32, 37792, 346, 610, 4175, 32, 9121, 26, 990, 32, 37792, 1157, 616, 1018, 308, 410, 27, 2091, 32, 37792, 346, 499, 429, 35, 45, 1687, 434, 1670, 996, 883, 1330, 11426, 561, 30, 48937, 32, 397, 415, 308, 1055, 333, 225, 34, 1276, 1650]}
{"line_number": 1513, "line_type": "original", "code": "        break;", "entropy": 5.234375, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [7.3671875, 8.328125, 0.01044464111328125], "tokens": [351, 1626, 45]}
{"line_number": 1513, "line_type": "generated", "code": "\n\n      int index = right.getDouble()\n         .intValue();\n      if (index < 0 || index >= left.getChildCount()) {\n        return;\n      }\n\n      Node elem = left.getChildAtIndex(index);\n      parent.replaceChild(n,", "entropy": 0.298583984375, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.78369140625, 1.0498046875, 0.290771484375, 0.07257080078125, 1.0908203125, 0.001598358154296875, 0.2005615234375, 0.390869140625, 2.66015625, 0.237548828125, 0.00543212890625, 0.037689208984375, 0.7880859375, 0.70458984375, 0.120849609375, 0.052093505859375, 0.296875, 0.02691650390625, 0.0006098747253417969, 0.497802734375, 0.04791259765625, 0.04766845703125, 0.06866455078125, 0.0001157522201538086, 0.0038604736328125, 6.461143493652344e-05, 0.0322265625, 0.0010671615600585938, 0.0220184326171875, 0.759765625, 0.00246429443359375, 0.01059722900390625, 0.00020647048950195312, 0.6669921875, 0.185546875, 1.521484375, 0.06304931640625, 0.046417236328125, 0.00011706352233886719, 0.396484375, 0.003017425537109375, 0.0011548995971679688, 0.005153656005859375, 0.0113067626953125, 0.353759765625, 1.9609375, 0.00030684471130371094, 0.00414276123046875, 6.818771362304688e-05, 7.164478302001953e-05, 0.007251739501953125, 4.017353057861328e-05], "tokens": [1687, 629, 1650, 280, 2091, 32, 37792, 346, 616, 638, 22802, 473, 397, 415, 308, 1055, 333, 225, 34, 1276, 1650, 2377, 2841, 32, 24213, 1534, 1157, 301, 291, 442, 45, 397, 320, 1687, 4004, 10313, 280, 2841, 32, 24213, 29948, 26, 1055, 293, 397, 2935, 32, 3227, 2931, 26, 96, 30]}
{"line_number": 1518, "line_type": "original", "code": "          return;", "entropy": 5.73046875, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [6.58203125, 10.5234375, 0.08270263671875], "tokens": [2033, 442, 45]}
{"line_number": 1518, "line_type": "generated", "code": "\n        ));\n        return;\n      }\n\n      Node elem = left.getFirstChild();\n      int i = 0;\n      while (elem!= null) {\n        if (i == intIndex) {\n          // We found the element, replace the getelem with", "entropy": 0.4228515625, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [1.56640625, 0.360107421875, 0.12109375, 0.0262298583984375, 0.0007090568542480469, 0.0053558349609375, 5.7816505432128906e-05, 0.322021484375, 0.998046875, 1.4677734375, 0.09771728515625, 0.345703125, 0.0038471221923828125, 0.09393310546875, 0.00013136863708496094, 0.0087890625, 0.059967041015625, 0.76123046875, 0.6455078125, 0.02301025390625, 0.008880615234375, 0.0034503936767578125, 0.0007047653198242188, 0.058013916015625, 0.140625, 0.0750732421875, 0.2890625, 0.0010423660278320312, 0.000423431396484375, 0.1806640625, 0.00021576881408691406, 0.0186004638671875, 0.11920166015625, 0.0145111083984375, 0.0675048828125, 0.049468994140625, 0.0396728515625, 2.7418136596679688e-06, 0.0038909912109375, 0.00039124488830566406, 0.03045654296875, 1.845703125, 2.701171875, 1.3466796875, 0.254150390625, 0.734375, 2.197265625, 1.8876953125, 0.85693359375, 1.31640625, 0.3515625, 0.478759765625], "tokens": [291, 11975, 291, 442, 45, 397, 320, 1687, 4004, 10313, 280, 2841, 32, 25657, 2931, 473, 397, 629, 595, 280, 225, 34, 45, 397, 2218, 308, 7613, 863, 744, 27, 301, 291, 415, 308, 91, 610, 629, 1284, 27, 301, 616, 434, 2688, 2431, 322, 1994, 30, 7084, 322, 622, 7613, 623]}
{"line_number": 1533, "line_type": "original", "code": "        if (arrayFoldedChildren.size() == arrayNode.getChildCount()) {", "entropy": 1.2177734375, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [3.8515625, 0.490966796875, 0.01158905029296875, 7.84375, 1.298828125, 3.4809112548828125e-05, 0.00011789798736572266, 0.035797119140625, 0.31689453125, 0.1390380859375, 0.0052642822265625, 1.5517578125, 5.34375, 1.4892578125, 0.048583984375, 0.05926513671875, 0.0010442733764648438, 0.6396484375, 0.01268768310546875], "tokens": [351, 415, 308, 955, 56, 362, 981, 7640, 32, 891, 346, 610, 1417, 1212, 32, 24213, 1534, 1157, 301]}
{"line_number": 1533, "line_type": "generated", "code": "\n        // No folding could actually be performed.", "entropy": 0.68359375, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [1.0, 2.41796875, 2.384765625, 0.70263671875, 0.0140533447265625, 0.125732421875, 0.160400390625, 0.002201080322265625, 0.0048675537109375, 0.024505615234375], "tokens": [291, 434, 3139, 11426, 299, 3065, 6723, 526, 13555, 32]}
{"line_number": 1534, "line_type": "original", "code": "          return;", "entropy": 2.853515625, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [7.9921875, 0.56103515625, 0.008453369140625], "tokens": [2033, 442, 45]}
{"line_number": 1534, "line_type": "generated", "code": "\n        return;\n      }\n\n      Node result = elem.cloneNode();\n      parent.replaceChild(n, result);\n      t.getCompiler().reportCodeChange();\n    }\n  }", "entropy": 0.28369140625, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [1.2138671875, 0.329833984375, 0.0017900466918945312, 0.0172119140625, 0.0003666877746582031, 0.2880859375, 1.5458984375, 3.0859375, 0.1737060546875, 0.4638671875, 0.2366943359375, 0.77001953125, 1.48046875, 0.0462646484375, 0.13623046875, 0.353515625, 9.202957153320312e-05, 0.0092620849609375, 2.086162567138672e-05, 0.00010097026824951172, 0.02447509765625, 5.8650970458984375e-05, 0.002452850341796875, 0.0008502006530761719, 0.189208984375, 0.08807373046875, 1.6808509826660156e-05, 0.0139007568359375, 0.00014984607696533203, 1.1920928955078125e-05, 5.829334259033203e-05, 0.011322021484375, 3.814697265625e-06, 0.0007014274597167969, 0.130126953125, 0.00020706653594970703, 0.167236328125, 0.001422882080078125], "tokens": [291, 442, 45, 397, 320, 1687, 4004, 1056, 280, 10313, 32, 6358, 1212, 473, 397, 2935, 32, 3227, 2931, 26, 96, 30, 1056, 293, 397, 273, 32, 371, 8115, 922, 3734, 1227, 1791, 473, 284, 320, 334, 320]}
{"line_number": 1536, "line_type": "original", "code": "        int kJoinOverhead = \"[].join()\".length();", "entropy": 1.900390625, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [3.783203125, 6.703125, 5.65234375, 0.88427734375, 0.006999969482421875, 5.8770179748535156e-05, 0.0118255615234375, 6.6328125, 1.1708984375, 0.145263671875, 1.361328125, 0.095947265625, 0.004421234130859375, 0.157958984375], "tokens": [351, 629, 831, 6249, 3966, 1816, 280, 7185, 997, 2524, 346, 2296, 1322, 473]}
{"line_number": 1536, "line_type": "generated", "code": "\n        return;\n      }\n\n      NodeUtil.markFunctionsDeleted(t, elem);\n      parent.replaceChild(n, elem.detach());\n      t.getCompiler().reportCodeChange();\n    }\n  }", "entropy": 0.2396240234375, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.279541015625, 0.28515625, 0.0037899017333984375, 0.040191650390625, 0.0005469322204589844, 0.468505859375, 1.83984375, 0.6728515625, 0.005126953125, 0.99951171875, 0.27294921875, 0.0283050537109375, 0.020660400390625, 1.1982421875, 0.1641845703125, 0.3251953125, 0.187255859375, 0.27294921875, 0.5576171875, 0.00021946430206298828, 0.03857421875, 3.552436828613281e-05, 0.00011980533599853516, 0.044036865234375, 6.937980651855469e-05, 0.02618408203125, 0.41845703125, 1.1435546875, 0.28271484375, 0.20166015625, 0.072998046875, 2.193450927734375e-05, 0.0217742919921875, 0.0003254413604736328, 3.159046173095703e-05, 0.00012624263763427734, 0.01384735107421875, 6.318092346191406e-06, 0.0008878707885742188, 0.2017822265625, 0.00013875961303710938, 0.2105712890625, 0.0018663406372070312], "tokens": [291, 442, 45, 397, 320, 1687, 4004, 1733, 32, 1826, 10905, 13576, 26, 102, 30, 10313, 293, 397, 2935, 32, 3227, 2931, 26, 96, 30, 10313, 32, 18723, 1035, 397, 273, 32, 371, 8115, 922, 3734, 1227, 1791, 473, 284, 320, 334, 320]}
{"line_number": 1537, "line_type": "original", "code": "        foldedSize += kJoinOverhead;", "entropy": 2.14453125, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [4.58984375, 6.5, 0.0005879402160644531, 0.0562744140625, 0.1033935546875, 9.234375, 0.619140625, 0.003826141357421875, 5.2809715270996094e-05, 0.334228515625], "tokens": [351, 14801, 981, 1250, 1454, 831, 6249, 3966, 1816, 45]}
{"line_number": 1537, "line_type": "generated", "code": "\n      }\n\n      if (elem.getNext()!= null) {\n        return;\n      }\n\n      int originalSize = InlineCostEstimator.getCost(n);\n      Node foldedNode = elem.cloneTree();\n      int foldedSize = InlineCostEstimator", "entropy": 0.316650390625, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.1846923828125, 0.01325225830078125, 0.5595703125, 1.564453125, 0.1202392578125, 0.74169921875, 0.1607666015625, 0.92236328125, 0.006305694580078125, 0.60400390625, 0.001583099365234375, 0.09332275390625, 0.0006270408630371094, 0.0802001953125, 1.54296875, 0.0010023117065429688, 0.089599609375, 0.00036406517028808594, 0.212158203125, 2.75390625, 0.50732421875, 0.038238525390625, 0.00121307373046875, 0.025604248046875, 0.00012290477752685547, 1.71661376953125e-05, 0.0003609657287597656, 0.0007724761962890625, 0.0001245737075805664, 0.0004086494445800781, 0.033416748046875, 0.0020847320556640625, 0.1678466796875, 0.9765625, 0.7666015625, 1.6450881958007812e-05, 1.44140625, 0.0313720703125, 0.1773681640625, 0.07403564453125, 0.6171875, 0.26318359375, 0.01172637939453125, 0.1900634765625, 0.78466796875, 0.41796875, 1.0848045349121094e-05, 0.1376953125, 0.002635955810546875, 0.1495361328125, 0.000194549560546875, 1.6927719116210938e-05], "tokens": [397, 320, 1687, 415, 308, 7613, 32, 23017, 346, 863, 744, 27, 301, 291, 442, 45, 397, 320, 1687, 629, 4707, 1250, 280, 29662, 9375, 38469, 32, 371, 9375, 26, 96, 293, 397, 4004, 14801, 981, 1212, 280, 10313, 32, 6358, 3350, 473, 397, 629, 14801, 981, 1250, 280, 29662, 9375, 38469]}
{"line_number": 1538, "line_type": "original", "code": "        foldedSize += InlineCostEstimator.getCost(right);", "entropy": 1.220703125, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [7.37890625, 5.34375, 0.001956939697265625, 0.0968017578125, 0.1632080078125, 0.0980224609375, 0.0006031990051269531, 0.0002586841583251953, 0.004161834716796875, 0.006134033203125, 0.00310516357421875, 0.0019025802612304688, 3.892578125, 0.10333251953125], "tokens": [351, 14801, 981, 1250, 1454, 29662, 9375, 38469, 32, 371, 9375, 26, 990, 293]}
{"line_number": 1538, "line_type": "generated", "code": "\n      int originalSize = InlineCostEstimator.getCost(n);\n      int foldedSize = InlineCostEstimator.getCost(left);\n      if (foldedSize > originalSize) {\n        return;\n      }\n      parent.replaceChild(n", "entropy": 0.2064208984375, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.177001953125, 1.8505859375, 0.72509765625, 0.06414794921875, 0.0015249252319335938, 0.04193115234375, 0.0001747608184814453, 1.8477439880371094e-05, 0.0007257461547851562, 0.001556396484375, 0.00035953521728515625, 0.0008959770202636719, 0.045440673828125, 0.003612518310546875, 0.09771728515625, 0.576171875, 1.2607421875, 1.239776611328125e-05, 0.065185546875, 0.01071929931640625, 0.292236328125, 0.00035452842712402344, 6.961822509765625e-05, 0.00010919570922851562, 0.0094451904296875, 0.00615692138671875, 0.00409698486328125, 1.640625, 0.87353515625, 0.182861328125, 1.029296875, 0.036956787109375, 0.332275390625, 1.1920928955078125e-07, 0.0002008676528930664, 0.270263671875, 0.0050201416015625, 2.1457672119140625e-06, 0.025238037109375, 0.0019063949584960938, 0.006107330322265625, 0.030364990234375, 0.000743865966796875, 0.0029144287109375, 0.00012242794036865234, 0.54345703125, 0.482177734375, 0.0002410411834716797, 0.0140533447265625, 2.9325485229492188e-05, 0.00022268295288085938, 0.0181121826171875], "tokens": [397, 629, 4707, 1250, 280, 29662, 9375, 38469, 32, 371, 9375, 26, 96, 293, 397, 629, 14801, 981, 1250, 280, 29662, 9375, 38469, 32, 371, 9375, 26, 1873, 293, 397, 415, 308, 8025, 981, 1250, 848, 4707, 1250, 27, 301, 291, 442, 45, 397, 320, 397, 2935, 32, 3227, 2931, 26, 96]}
{"line_number": 1539, "line_type": "original", "code": "        if (foldedSize > originalSize) {", "entropy": 1.1318359375, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [3.943359375, 2.30859375, 0.1207275390625, 5.4140625, 0.0004088878631591797, 0.0970458984375, 0.3017578125, 0.162109375, 0.002132415771484375, 0.077880859375, 0.018218994140625], "tokens": [351, 415, 308, 8025, 981, 1250, 848, 4707, 1250, 27, 301]}
{"line_number": 1539, "line_type": "generated", "code": "\n        return;\n      }\n    }\n  }", "entropy": 0.317138671875, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.97265625, 0.283447265625, 0.014251708984375, 0.1656494140625, 0.0239105224609375, 0.5771484375, 0.037445068359375, 0.748046875, 0.0311737060546875], "tokens": [291, 442, 45, 397, 320, 284, 320, 334, 320]}
{"line_number": 1542, "line_type": "original", "code": "        arrayNode.detachChildren();", "entropy": 2.634765625, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [6.9296875, 7.5546875, 1.751953125, 0.349609375, 1.8125, 0.0253753662109375, 0.006000518798828125], "tokens": [351, 1417, 1212, 32, 18723, 7640, 473]}
{"line_number": 1542, "line_type": "generated", "code": "\n      t.getCompiler().reportCodeChange();\n    }\n  }", "entropy": 0.07550048828125, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.400146484375, 0.41357421875, 0.00018513202667236328, 0.00760650634765625, 0.0003657341003417969, 0.0006656646728515625, 0.00013720989227294922, 0.007232666015625, 7.748603820800781e-06, 0.0008945465087890625, 0.08984375, 0.0002765655517578125, 0.1341552734375, 0.001514434814453125], "tokens": [397, 273, 32, 371, 8115, 922, 3734, 1227, 1791, 473, 284, 320, 334, 320]}
{"line_number": 1543, "line_type": "original", "code": "        for (Node node : arrayFoldedChildren) {", "entropy": 1.28515625, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [4.73046875, 5.12890625, 0.164794921875, 0.66064453125, 2.8125, 0.46484375, 2.150390625, 0.496337890625, 1.6689300537109375e-05, 1.8596649169921875e-05, 0.00836181640625, 0.0230255126953125, 0.0582275390625], "tokens": [351, 436, 308, 1212, 1541, 499, 1417, 56, 362, 981, 7640, 27, 301]}
{"line_number": 1543, "line_type": "generated", "code": "\n    }\n  }", "entropy": 0.199462890625, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.497314453125, 0.06805419921875, 0.2303466796875, 0.0020618438720703125], "tokens": [284, 320, 334, 320]}
{"line_number": 1544, "line_type": "original", "code": "          arrayNode.addChildToBack(node);", "entropy": 2.9375, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [10.890625, 9.0859375, 1.4306640625, 0.50537109375, 2.984375, 0.005290985107421875, 0.4462890625, 0.048095703125, 3.748046875, 0.22314453125], "tokens": [2033, 1417, 1212, 32, 21545, 705, 2495, 26, 1251, 293]}
{"line_number": 1544, "line_type": "generated", "code": "\n  }\n\n  /**\n   * Try to fold array-element. e.g [1, 2, 3][10];\n   */\n  void tryFoldGetElem(NodeTraversal t, Node n, Node left, Node right,\n                      Node", "entropy": 0.175537109375, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.279541015625, 0.005889892578125, 0.93017578125, 0.251220703125, 0.05224609375, 0.0004987716674804688, 0.43994140625, 0.01378631591796875, 0.11029052734375, 1.103515625, 0.384521484375, 1.3408203125, 0.22265625, 0.032257080078125, 0.0003192424774169922, 5.8650970458984375e-05, 0.390380859375, 0.022064208984375, 0.0163116455078125, 0.0251007080078125, 0.0008230209350585938, 0.015716552734375, 0.0067596435546875, 0.00045108795166015625, 0.445068359375, 0.1483154296875, 0.0206451416015625, 0.10333251953125, 0.0103759765625, 0.039337158203125, 0.0119171142578125, 0.0279083251953125, 0.01107025146484375, 0.0141143798828125, 0.5771484375, 0.6220703125, 0.75244140625, 0.0066375732421875, 0.033782958984375, 0.00250244140625, 0.00023162364959716797, 0.029815673828125, 0.0341796875, 0.023773193359375, 0.023468017578125, 0.112548828125, 0.01050567626953125, 0.04913330078125, 0.06585693359375, 0.15478515625, 0.1292724609375, 0.0181121826171875], "tokens": [334, 320, 719, 1022, 664, 319, 8959, 372, 11426, 1417, 31, 2543, 32, 484, 32, 89, 428, 35, 30, 225, 36, 30, 225, 37, 1674, 35, 34, 970, 664, 569, 334, 763, 1596, 15483, 936, 10797, 26, 1212, 35699, 273, 30, 4004, 310, 30, 4004, 2841, 30, 4004, 2091, 30, 2855, 4004]}
{"line_number": 1545, "line_type": "original", "code": "        }", "entropy": 5.79296875, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [9.1640625, 2.421875], "tokens": [351, 320]}
{"line_number": 1545, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [], "tokens": []}
{"line_number": 1475, "line_type": "original", "code": "    String joinString = NodeUtil.getStringValue(right);", "entropy": 2.056640625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [6.53515625, 9.5546875, 9.7578125, 0.0648193359375, 0.351806640625, 0.251953125, 0.00966644287109375, 0.0018711090087890625, 0.0172271728515625, 0.0013179779052734375, 0.00960540771484375, 0.156005859375, 0.0148162841796875], "tokens": [264, 892, 7140, 652, 280, 4004, 1733, 32, 7069, 882, 26, 990, 293]}
{"line_number": 1475, "line_type": "generated", "code": "\n              Node.newString(\"\"),\n              foldedStringNode);\n          foldedStringNode = replacement;\n        }\n        parent.replaceChild(n, foldedStringNode);\n        break;\n\n      default:\n        if (foldedSize > originalSize) {", "entropy": 0.11822509765625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.488525390625, 1.509765625, 0.056915283203125, 0.0007090568542480469, 0.0227813720703125, 0.1878662109375, 0.2802734375, 0.1619873046875, 1.9073486328125e-06, 0.0008268356323242188, 0.00049591064453125, 0.1458740234375, 0.076171875, 0.7861328125, 1.7881393432617188e-06, 0.0031070709228515625, 9.942054748535156e-05, 0.43994140625, 0.056976318359375, 0.0124053955078125, 0.08148193359375, 3.421306610107422e-05, 0.10064697265625, 0.333984375, 0.00012052059173583984, 0.0007266998291015625, 3.159046173095703e-05, 0.0003180503845214844, 0.0263214111328125, 0.00017523765563964844, 0.005504608154296875, 7.152557373046875e-07, 2.777576446533203e-05, 2.300739288330078e-05, 0.01544952392578125, 0.032867431640625, 0.1129150390625, 0.00036025047302246094, 0.25439453125, 0.07366943359375, 0.0007009506225585938, 0.06671142578125, 0.54931640625, 0.0226593017578125, 0.09326171875, 1.1920928955078125e-07, 0.0002646446228027344, 0.1168212890625, 0.0117340087890625, 7.271766662597656e-06, 0.0180816650390625, 0.00067901611328125], "tokens": [1090, 4004, 32, 890, 652, 46342, 1090, 14801, 981, 652, 1212, 293, 616, 14801, 981, 652, 1212, 280, 15909, 45, 291, 320, 291, 2935, 32, 3227, 2931, 26, 96, 30, 14801, 981, 652, 1212, 293, 291, 1626, 45, 1687, 1244, 44, 291, 415, 308, 8025, 981, 1250, 848, 4707, 1250, 27, 301]}
{"line_number": 1476, "line_type": "original", "code": "    List<Node> arrayFoldedChildren = Lists.newLinkedList();", "entropy": 1.791015625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [5.7578125, 10.3984375, 0.011566162109375, 0.052154541015625, 0.0003933906555175781, 6.265625, 1.9169921875, 0.00013339519500732422, 9.489059448242188e-05, 0.2052001953125, 0.2484130859375, 1.333984375, 0.004291534423828125, 2.4375, 0.0012331008911132812, 0.022247314453125], "tokens": [264, 1682, 46, 1212, 48, 1417, 56, 362, 981, 7640, 280, 25163, 32, 890, 20555, 473]}
{"line_number": 1476, "line_type": "generated", "code": "\n          parent.replaceChild(n, replacement);\n        } else {\n          parent.replaceChild(n, foldedStringNode);\n        }\n        break;\n\n      default:\n        if (foldedSize > originalSize) {\n          return;\n        }\n       ", "entropy": 0.0789794921875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.1279296875, 0.88818359375, 0.0009469985961914062, 0.005672454833984375, 3.147125244140625e-05, 0.00026988983154296875, 0.061767578125, 0.0004374980926513672, 0.02020263671875, 0.0035762786865234375, 0.5947265625, 0.0005869865417480469, 0.0239410400390625, 0.011810302734375, 0.04766845703125, 0.32275390625, 2.4080276489257812e-05, 0.0004622936248779297, 1.9550323486328125e-05, 6.365776062011719e-05, 0.005584716796875, 0.0003895759582519531, 0.017333984375, 1.1920928955078125e-07, 0.00015795230865478516, 1.8715858459472656e-05, 0.02276611328125, 0.03387451171875, 6.389617919921875e-05, 0.07171630859375, 0.11688232421875, 0.0006308555603027344, 0.345458984375, 0.096923828125, 0.00121307373046875, 0.0775146484375, 0.537109375, 0.0299835205078125, 0.1873779296875, 3.5762786865234375e-07, 0.001552581787109375, 0.165771484375, 0.0125885009765625, 1.2874603271484375e-05, 0.018157958984375, 0.0009484291076660156, 0.006221771240234375, 0.03558349609375, 0.0004291534423828125, 0.0016851425170898438, 0.0004291534423828125, 0.207275390625], "tokens": [616, 2935, 32, 3227, 2931, 26, 96, 30, 15909, 293, 291, 320, 813, 301, 616, 2935, 32, 3227, 2931, 26, 96, 30, 14801, 981, 652, 1212, 293, 291, 320, 291, 1626, 45, 1687, 1244, 44, 291, 415, 308, 8025, 981, 1250, 848, 4707, 1250, 27, 301, 616, 442, 45, 291, 320, 291]}
{"line_number": 1477, "line_type": "original", "code": "    StringBuilder sb = new StringBuilder();", "entropy": 2.17578125, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [5.25, 9.609375, 0.1962890625, 0.06500244140625, 0.04388427734375, 0.002227783203125, 0.0631103515625], "tokens": [264, 9706, 6115, 280, 537, 9706, 473]}
{"line_number": 1477, "line_type": "generated", "code": "\n        }\n        parent.replaceChild(n, foldedStringNode);\n        break;\n\n      default:\n        if (foldedSize > originalSize) {\n          return;\n        }\n        arrayNode.detachChildren();\n        for (Node child : arrayF", "entropy": 0.11029052734375, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [0.12646484375, 0.00377655029296875, 0.134033203125, 0.42822265625, 0.00015163421630859375, 0.0007863044738769531, 3.135204315185547e-05, 0.00017547607421875, 0.0226593017578125, 0.00015401840209960938, 0.00579833984375, 3.5762786865234375e-07, 6.663799285888672e-05, 2.6345252990722656e-05, 0.01317596435546875, 0.133056640625, 0.1318359375, 0.00196075439453125, 0.59130859375, 0.0570068359375, 0.0018548965454101562, 0.1163330078125, 0.51904296875, 0.0310211181640625, 0.1031494140625, 5.960464477539062e-07, 0.0006103515625, 0.12646484375, 0.00991058349609375, 1.728534698486328e-05, 0.0145416259765625, 0.0014057159423828125, 0.0158538818359375, 0.0205841064453125, 0.0005917549133300781, 0.037933349609375, 1.704692840576172e-05, 0.17919921875, 0.7216796875, 0.011749267578125, 0.0009775161743164062, 0.10919189453125, 0.00013267993927001953, 0.0002617835998535156, 0.083740234375, 0.7314453125, 0.0035953521728515625, 0.040008544921875, 1.1328125, 0.0653076171875, 0.004947662353515625, 0.0003516674041748047], "tokens": [291, 320, 291, 2935, 32, 3227, 2931, 26, 96, 30, 14801, 981, 652, 1212, 293, 291, 1626, 45, 1687, 1244, 44, 291, 415, 308, 8025, 981, 1250, 848, 4707, 1250, 27, 301, 616, 442, 45, 291, 320, 291, 1417, 1212, 32, 18723, 7640, 473, 291, 436, 308, 1212, 2838, 499, 1417, 56]}
