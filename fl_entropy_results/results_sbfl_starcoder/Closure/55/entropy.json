{"line_number": 94, "line_type": "original", "code": "        for (Reduction reduction : reductions) {", "entropy": 1.447265625, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [4.94140625, 5.953125, 0.10675048828125, 3.255859375, 0.068359375, 0.0139617919921875, 0.015625, 0.0419921875, 0.00295257568359375, 0.067626953125], "tokens": [351, 436, 308, 35802, 25160, 499, 25160, 101, 27, 301]}
{"line_number": 94, "line_type": "generated", "code": "\n     */\n    int estimateSavings() {\n      int oldCost = InlineCostEstimator.getCost(oldChild);\n      int newCost = InlineCostEstimator.getCost(newChild);\n      return oldCost - newCost;\n    }\n  }\n\n ", "entropy": 0.0947265625, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [0.1822509765625, 0.367919921875, 0.01096343994140625, 0.07733154296875, 0.00045490264892578125, 0.0006070137023925781, 1.1920928955078125e-07, 0.0021820068359375, 0.0009031295776367188, 0.1768798828125, 0.99169921875, 0.448974609375, 1.4189453125, 0.0111846923828125, 0.10693359375, 0.00024771690368652344, 0.0001347064971923828, 0.0006365776062011719, 0.005329132080078125, 0.0004792213439941406, 0.004482269287109375, 0.021881103515625, 7.784366607666016e-05, 0.0238494873046875, 0.02777099609375, 0.0208587646484375, 0.005146026611328125, 0.0015153884887695312, 0.0004754066467285156, 0.0022678375244140625, 3.4689903259277344e-05, 0.00010669231414794922, 3.1948089599609375e-05, 0.0013217926025390625, 6.079673767089844e-05, 0.00031185150146484375, 0.0008630752563476562, 1.2636184692382812e-05, 0.003032684326171875, 0.366943359375, 0.174072265625, 0.259521484375, 0.0015773773193359375, 0.004711151123046875, 0.0008955001831054688, 7.712841033935547e-05, 0.00414276123046875, 0.0242919921875, 0.00033092498779296875, 0.099365234375, 0.0014467239379882812, 0.0709228515625], "tokens": [275, 569, 284, 629, 20772, 69, 31156, 346, 301, 397, 629, 3610, 9375, 280, 29662, 9375, 38469, 32, 371, 9375, 26, 1455, 2931, 293, 397, 629, 537, 9375, 280, 29662, 9375, 38469, 32, 371, 9375, 26, 890, 2931, 293, 397, 442, 3610, 9375, 429, 537, 9375, 45, 284, 320, 334, 320, 719]}
{"line_number": 95, "line_type": "original", "code": "          reduction.apply();", "entropy": 3.994140625, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [8.875, 8.375, 0.90380859375, 1.779296875, 0.0307464599609375], "tokens": [2033, 25160, 32, 4699, 473]}
{"line_number": 95, "line_type": "generated", "code": "\n    int estimateSavings() {\n      return -1;\n    }\n  }\n\n  /**\n   * Base class for all reducer implementations.\n   */\n  private abstract class Reducer {\n    /**\n     * Return the source code for the helper function to be used by", "entropy": 0.537109375, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [0.8203125, 0.208740234375, 0.0005259513854980469, 0.0006222724914550781, 1.1920928955078125e-07, 0.003940582275390625, 0.0026226043701171875, 0.2498779296875, 0.80810546875, 2.482421875, 0.52197265625, 0.036956787109375, 0.0567626953125, 0.0018091201782226562, 0.111328125, 0.00214385986328125, 0.09423828125, 0.1505126953125, 0.01523590087890625, 0.00021004676818847656, 2.52734375, 0.08074951171875, 0.09503173828125, 1.5185546875, 2.412109375, 1.533203125, 0.042388916015625, 0.08984375, 0.11627197265625, 0.02459716796875, 0.26708984375, 0.284912109375, 0.677734375, 0.00760650634765625, 0.00016248226165771484, 0.037261962890625, 0.06195068359375, 0.66064453125, 0.04840087890625, 0.0006265640258789062, 1.9951171875, 1.1708984375, 0.91748046875, 0.426025390625, 0.74560546875, 0.51708984375, 0.28369140625, 0.4638671875, 3.1015625, 0.345703125, 1.6123046875, 0.297607421875], "tokens": [284, 629, 20772, 69, 31156, 346, 301, 397, 442, 429, 35, 45, 284, 320, 334, 320, 719, 1022, 664, 319, 3772, 443, 436, 1169, 27582, 17451, 32, 664, 569, 334, 945, 5547, 443, 4761, 10377, 301, 284, 1022, 275, 319, 2744, 322, 1914, 1340, 436, 322, 9332, 667, 372, 526, 1654, 810]}
{"line_number": 96, "line_type": "original", "code": "        }", "entropy": 4.6640625, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [4.4375, 4.88671875], "tokens": [351, 320]}
{"line_number": 96, "line_type": "generated", "code": "\n\n      return InlineCostEstimator.getCost(oldChild) -\n          InlineCostEstimator.getCost(newChild);\n    }\n  }\n\n  /**\n   * Interface for reducing a function expression.\n   */\n  private interface Reducer {\n    /**\n     * Get", "entropy": 0.32275390625, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [1.80078125, 0.90478515625, 2.5859375, 0.0013551712036132812, 0.0006561279296875, 0.0024929046630859375, 0.03289794921875, 0.004077911376953125, 0.0185394287109375, 0.2476806640625, 0.00038313865661621094, 0.08740234375, 0.34423828125, 0.73193359375, 0.00457763671875, 0.00010764598846435547, 0.0008716583251953125, 7.68899917602539e-05, 0.0005006790161132812, 6.020069122314453e-05, 0.0003159046173095703, 0.0018720626831054688, 1.3232231140136719e-05, 0.00479888916015625, 0.01544952392578125, 0.0004169940948486328, 0.06817626953125, 0.0009717941284179688, 0.051483154296875, 0.12261962890625, 0.012054443359375, 0.0003180503845214844, 1.9375, 0.33837890625, 1.6650390625, 0.896484375, 0.458740234375, 0.49560546875, 0.76025390625, 0.0885009765625, 0.126953125, 0.001277923583984375, 0.240966796875, 0.56884765625, 0.0005283355712890625, 1.0967254638671875e-05, 0.0206451416015625, 0.046966552734375, 0.4091796875, 0.0523681640625, 0.0002168416976928711, 1.619140625], "tokens": [1687, 442, 29662, 9375, 38469, 32, 371, 9375, 26, 1455, 2931, 27, 429, 616, 29662, 9375, 38469, 32, 371, 9375, 26, 890, 2931, 293, 284, 320, 334, 320, 719, 1022, 664, 319, 13199, 436, 45984, 312, 667, 6101, 32, 664, 569, 334, 945, 2568, 4761, 10377, 301, 284, 1022, 275, 319, 1390]}
{"line_number": 98, "line_type": "original", "code": "        Node addingRoot = compiler.getNodeForCodeInsertion(null);", "entropy": 2.076171875, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [6.3671875, 5.328125, 8.5703125, 0.265869140625, 0.09552001953125, 3.76171875, 0.002346038818359375, 1.9853515625, 0.390869140625, 0.01006317138671875, 0.0192413330078125, 0.08184814453125, 2.169921875, 0.03314208984375], "tokens": [351, 4004, 7165, 4058, 280, 8980, 32, 17699, 1562, 1227, 46662, 26, 1693, 293]}
{"line_number": 98, "line_type": "generated", "code": "\n    }\n  }\n\n  /**\n   * Gather possible reductions in a map.\n   */\n  private class ReductionGatherer extends AbstractPostOrderCallback {\n    private final List<Reducer> reducers;\n    private final Multimap<Reducer, Reduction", "entropy": 0.2120361328125, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [0.11749267578125, 0.018890380859375, 0.11541748046875, 0.0018320083618164062, 0.06683349609375, 0.1361083984375, 0.01232147216796875, 0.0003249645233154297, 2.115234375, 0.1629638671875, 0.58447265625, 0.10491943359375, 0.02032470703125, 1.404296875, 0.283935546875, 2.255859375, 0.96240234375, 0.22607421875, 0.16259765625, 0.0019702911376953125, 0.09027099609375, 0.245849609375, 0.00010001659393310547, 2.86102294921875e-06, 5.745887756347656e-05, 6.4373016357421875e-06, 0.2325439453125, 0.410400390625, 0.5830078125, 0.0009522438049316406, 0.002086639404296875, 0.021484375, 0.07080078125, 0.12255859375, 0.0242767333984375, 0.364501953125, 0.006923675537109375, 0.0007638931274414062, 8.320808410644531e-05, 0.0040435791015625, 3.337860107421875e-06, 0.003299713134765625, 0.0196990966796875, 0.00799560546875, 0.004852294921875, 0.047149658203125, 6.67572021484375e-06, 0.00018548965454101562, 0.00042700767517089844, 3.5881996154785156e-05, 0.0024089813232421875, 0.00015163421630859375], "tokens": [284, 320, 334, 320, 719, 1022, 664, 319, 570, 3790, 4195, 25160, 101, 328, 312, 1992, 32, 664, 569, 334, 945, 443, 4761, 2927, 33564, 265, 2026, 7400, 3160, 2871, 3296, 301, 284, 945, 1158, 1682, 46, 14997, 48, 14721, 483, 45, 284, 945, 1158, 18423, 20464, 46, 14997, 30, 4761, 2927]}
{"line_number": 99, "line_type": "original", "code": "        addingRoot.addChildrenToFront(helperCode);", "entropy": 2.087890625, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [8.125, 10.6484375, 0.06390380859375, 0.134765625, 3.837890625, 0.0116729736328125, 0.00119781494140625, 0.84814453125, 0.006866455078125, 0.90380859375, 0.0938720703125, 0.376220703125], "tokens": [351, 7165, 4058, 32, 669, 7640, 705, 10112, 26, 4313, 1227, 293]}
{"line_number": 99, "line_type": "generated", "code": "\n  }\n\n  /**\n   * Interface for classes that can reduce function expressions.\n   */\n  private interface Reducer {\n    /**\n     * @return Source code for helper functions needed by this reducer.\n     */\n    String getHelperSource();\n\n    /**\n     * @", "entropy": 0.385498046875, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [0.43701171875, 0.0149383544921875, 0.1551513671875, 0.1539306640625, 0.01378631591796875, 0.0008044242858886719, 1.974609375, 0.2802734375, 2.15234375, 0.13525390625, 1.029296875, 0.69580078125, 1.9140625, 0.394287109375, 0.2529296875, 0.045379638671875, 0.0972900390625, 0.0037975311279296875, 0.2802734375, 0.51220703125, 0.0004863739013671875, 7.152557373046875e-06, 0.0172576904296875, 0.0711669921875, 0.456787109375, 0.049346923828125, 0.00018095970153808594, 1.9375, 0.01377105712890625, 1.0498046875, 0.39453125, 0.49951171875, 0.60498046875, 1.1826171875, 0.9248046875, 0.31103515625, 0.51220703125, 0.08367919921875, 0.11407470703125, 0.0205841064453125, 0.033660888671875, 0.00585174560546875, 0.038299560546875, 0.0011234283447265625, 8.594989776611328e-05, 0.00045680999755859375, 0.00212860107421875, 0.210693359375, 0.01230621337890625, 0.0031757354736328125, 0.0008645057678222656, 0.9443359375], "tokens": [334, 320, 719, 1022, 664, 319, 13199, 436, 6015, 688, 883, 11665, 667, 15866, 32, 664, 569, 334, 945, 2568, 4761, 10377, 301, 284, 1022, 275, 319, 477, 601, 6374, 1340, 436, 9332, 4442, 5349, 810, 458, 27582, 32, 275, 569, 284, 892, 622, 2762, 2028, 473, 446, 1022, 275, 319, 477]}
{"line_number": 100, "line_type": "original", "code": "        compiler.reportCodeChange();", "entropy": 2.107421875, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [7.99609375, 5.625, 0.6240234375, 0.43994140625, 0.058441162109375, 0.0002409219741821289, 0.0150604248046875], "tokens": [351, 8980, 32, 3734, 1227, 1791, 473]}
{"line_number": 100, "line_type": "generated", "code": "\n  /**\n   * A reducer examines a function body and determines whether it can be\n   * reduced in size by replacing it with a helper function.\n   */\n  private abstract class Reducer {\n    /**\n     * Return the source code for the helper function.", "entropy": 0.619140625, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [1.2158203125, 0.389404296875, 0.034759521484375, 0.0003724098205566406, 2.13671875, 1.1171875, 1.423828125, 0.0004584789276123047, 0.62060546875, 0.7265625, 2.552734375, 0.34130859375, 1.2900390625, 0.61669921875, 0.64306640625, 0.712890625, 0.5068359375, 0.2481689453125, 0.00107574462890625, 0.196533203125, 1.3134765625, 0.42724609375, 1.3017578125, 0.78564453125, 0.60205078125, 0.0200958251953125, 0.640625, 1.8759765625, 0.176025390625, 0.35986328125, 0.2335205078125, 0.2193603515625, 0.0207672119140625, 0.2431640625, 1.138671875, 0.853515625, 0.000324249267578125, 3.0994415283203125e-06, 0.03192138671875, 0.06866455078125, 0.61572265625, 0.052459716796875, 0.0004925727844238281, 2.01953125, 0.912109375, 0.90380859375, 0.394287109375, 0.634765625, 0.50048828125, 0.088134765625, 0.12310791015625, 0.8662109375], "tokens": [334, 1022, 664, 319, 399, 27582, 21361, 2353, 312, 667, 3361, 461, 24384, 4946, 561, 883, 526, 664, 319, 22974, 328, 1334, 810, 27949, 561, 623, 312, 9332, 667, 32, 664, 569, 334, 945, 5547, 443, 4761, 10377, 301, 284, 1022, 275, 319, 2744, 322, 1914, 1340, 436, 322, 9332, 667, 32]}
{"line_number": 78, "line_type": "original", "code": "      Node helperCode = parseHelperCode(reducer);", "entropy": 1.703125, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [6.62109375, 5.3125, 0.30419921875, 0.1346435546875, 2.037109375, 4.0390625, 0.0011196136474609375, 0.002300262451171875, 0.1351318359375, 0.1370849609375, 0.00801849365234375], "tokens": [647, 4004, 9332, 1227, 280, 3185, 2762, 1227, 26, 32277, 293]}
{"line_number": 78, "line_type": "generated", "code": "\n    Reduction(Node parent, Node oldChild, Node newChild) {\n      this.parent = parent;\n      this.oldChild = oldChild;\n      this.newChild = newChild;\n    }", "entropy": 0.0321044921875, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [0.339599609375, 0.7001953125, 0.00010704994201660156, 0.00269317626953125, 0.045989990234375, 0.051300048828125, 0.001522064208984375, 0.032562255859375, 0.01024627685546875, 0.002593994140625, 0.00848388671875, 0.006740570068359375, 0.00579071044921875, 0.0003108978271484375, 0.01445770263671875, 0.003856658935546875, 0.007030487060546875, 0.06451416015625, 0.00024116039276123047, 0.004276275634765625, 0.0008702278137207031, 0.0068359375, 0.016754150390625, 0.0014734268188476562, 0.0018320083618164062, 2.491474151611328e-05, 0.0016336441040039062, 4.112720489501953e-05, 0.0001779794692993164, 0.0007176399230957031, 1.3589859008789062e-05, 0.0012369155883789062, 0.0021381378173828125, 0.0018091201782226562, 2.765655517578125e-05, 0.0003457069396972656, 1.5974044799804688e-05, 0.00017583370208740234, 0.0013885498046875, 1.633167266845703e-05, 0.000553131103515625, 0.03900146484375, 0.00020325183868408203], "tokens": [284, 4761, 2927, 26, 1212, 2935, 30, 4004, 3610, 2931, 30, 4004, 537, 2931, 27, 301, 397, 458, 32, 2544, 280, 2935, 45, 397, 458, 32, 1455, 2931, 280, 3610, 2931, 45, 397, 458, 32, 890, 2931, 280, 537, 2931, 45, 284, 320]}
{"line_number": 79, "line_type": "original", "code": "      if (helperCode == null) {", "entropy": 1.9931640625, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [1.6064453125, 4.26953125, 0.33056640625, 10.1484375, 0.94384765625, 0.454833984375, 0.00511932373046875, 0.058563232421875, 0.11309814453125], "tokens": [647, 415, 308, 4313, 1227, 610, 744, 27, 301]}
{"line_number": 79, "line_type": "generated", "code": "      this.parent = parent;\n      this.oldChild = oldChild;\n      this.newChild = newChild;\n    }\n\n    /**\n     * Estimate savings of applying this reduction.\n     *\n     * @return Estimated savings.\n    ", "entropy": 0.254638671875, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [1.6171875, 0.284912109375, 0.00507354736328125, 0.025848388671875, 0.0044097900390625, 0.01404571533203125, 0.0156707763671875, 0.1837158203125, 0.0086517333984375, 2.5033950805664062e-05, 0.003414154052734375, 9.489059448242188e-05, 0.0003421306610107422, 0.0009684562683105469, 1.3232231140136719e-05, 0.002727508544921875, 0.01812744140625, 0.0020465850830078125, 4.1961669921875e-05, 0.00040602684020996094, 2.47955322265625e-05, 0.0001697540283203125, 0.0012731552124023438, 3.6954879760742188e-06, 0.0014324188232421875, 0.11029052734375, 0.0004584789276123047, 0.320556640625, 0.67578125, 0.10064697265625, 0.0002627372741699219, 0.60595703125, 0.02899169921875, 1.3271484375, 7.987022399902344e-05, 3.396484375, 0.8046875, 0.368408203125, 0.03564453125, 0.08062744140625, 0.08001708984375, 0.78271484375, 0.1156005859375, 0.004451751708984375, 0.4052734375, 0.0065460205078125, 0.69091796875, 0.0712890625, 0.229248046875, 6.115436553955078e-05, 0.73876953125, 0.0732421875], "tokens": [647, 458, 32, 2544, 280, 2935, 45, 397, 458, 32, 1455, 2931, 280, 3610, 2931, 45, 397, 458, 32, 890, 2931, 280, 537, 2931, 45, 284, 320, 446, 1022, 275, 319, 14164, 5679, 309, 31156, 432, 23242, 458, 25160, 32, 275, 319, 275, 319, 477, 601, 14164, 9831, 309, 31156, 32, 275]}
{"line_number": 83, "line_type": "original", "code": "      int helperCodeCost = InlineCostEstimator.getCost(helperCode);", "entropy": 2.373046875, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [5.421875, 2.626953125, 10.0703125, 1.552734375, 0.06475830078125, 0.66748046875, 12.1328125, 0.289794921875, 0.057037353515625, 0.043853759765625, 0.6220703125, 0.01175689697265625, 0.0526123046875, 4.234375, 0.0297393798828125, 0.0782470703125], "tokens": [647, 629, 9332, 1227, 9375, 280, 29662, 9375, 38469, 32, 371, 9375, 26, 4313, 1227, 293]}
{"line_number": 83, "line_type": "generated", "code": "\n    /**\n     * Estimate the number of bytes saved by applying this reduction.\n     */\n    int estimateSavings() {\n      // TODO(johnlenz): estimate the number of bytes saved.\n      return 0;\n    }", "entropy": 0.389404296875, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [0.7958984375, 0.499755859375, 0.1412353515625, 0.00020325183868408203, 0.315185546875, 0.016082763671875, 0.9580078125, 1.4404296875, 0.0039043426513671875, 0.1611328125, 0.44970703125, 0.17578125, 0.74609375, 0.290283203125, 0.0653076171875, 0.054168701171875, 0.0268096923828125, 0.669921875, 0.00634765625, 0.4443359375, 0.0005164146423339844, 0.000324249267578125, 1.1920928955078125e-07, 0.0022525787353515625, 0.0019893646240234375, 0.0968017578125, 1.5087890625, 1.3623046875, 0.1531982421875, 0.281005859375, 0.01058197021484375, 0.0008707046508789062, 0.10546875, 2.28125, 1.150390625, 1.3798828125, 0.00981903076171875, 0.2919921875, 0.154052734375, 1.654296875, 0.171630859375, 0.1754150390625, 0.09893798828125, 0.12493896484375, 0.0011205673217773438, 0.01076507568359375, 0.0010232925415039062], "tokens": [284, 1022, 275, 319, 14164, 5679, 322, 1451, 432, 3519, 7511, 810, 23242, 458, 25160, 32, 275, 569, 284, 629, 20772, 69, 31156, 346, 301, 397, 434, 4296, 26, 25172, 1657, 108, 711, 20772, 322, 1451, 432, 3519, 7511, 32, 397, 442, 225, 34, 45, 284, 320]}
{"line_number": 86, "line_type": "original", "code": "      int savings = 0;", "entropy": 1.5244140625, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [4.91796875, 5.328125, 1.1669921875, 0.0010499954223632812, 0.06451416015625, 0.69189453125, 0.01355743408203125, 0.014190673828125], "tokens": [647, 629, 309, 31156, 280, 225, 34, 45]}
{"line_number": 86, "line_type": "generated", "code": "\n     */\n    void apply() {\n      parent.replaceChild(oldChild, newChild);\n    }\n\n    /**\n     * Estimate savings resulting from the reduction.\n     */\n    int estimateSavings() {\n      int oldSize = oldChild.getSource", "entropy": 0.26318359375, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [0.07342529296875, 0.0826416015625, 0.0099945068359375, 0.421630859375, 0.00020420551300048828, 0.0015821456909179688, 0.0019741058349609375, 0.02447509765625, 0.7080078125, 0.0001856088638305664, 0.01126861572265625, 0.0005621910095214844, 0.0018377304077148438, 0.004291534423828125, 8.940696716308594e-06, 0.0010938644409179688, 0.0029392242431640625, 5.0067901611328125e-05, 0.0181121826171875, 0.228759765625, 0.00033926963806152344, 0.24658203125, 0.052825927734375, 0.092529296875, 0.0005173683166503906, 0.1651611328125, 0.0114898681640625, 1.3271484375, 7.593631744384766e-05, 1.4150390625, 0.027587890625, 0.96337890625, 0.05157470703125, 0.102783203125, 0.73046875, 0.669921875, 0.033660888671875, 0.1002197265625, 0.001194000244140625, 0.0004870891571044922, -0.0, 0.0016622543334960938, 0.0010194778442382812, 0.1544189453125, 1.2548828125, 0.40185546875, 1.513671875, 0.0176239013671875, 0.93798828125, 0.0004940032958984375, 0.00191497802734375, 1.810546875], "tokens": [275, 569, 284, 763, 4871, 346, 301, 397, 2935, 32, 3227, 2931, 26, 1455, 2931, 30, 537, 2931, 293, 284, 320, 446, 1022, 275, 319, 14164, 5679, 309, 31156, 14302, 645, 322, 25160, 32, 275, 569, 284, 629, 20772, 69, 31156, 346, 301, 397, 629, 3610, 1250, 280, 3610, 2931, 32, 25552]}
{"line_number": 87, "line_type": "original", "code": "      for (Reduction reduction : reductions) {", "entropy": 1.1767578125, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [2.986328125, 7.44921875, 0.041900634765625, 1.1484375, 0.026153564453125, 0.01506805419921875, 0.0184478759765625, 0.0364990234375, 0.006378173828125, 0.0399169921875], "tokens": [647, 436, 308, 35802, 25160, 499, 25160, 101, 27, 301]}
{"line_number": 87, "line_type": "generated", "code": "\n    public void apply() {\n      parent.replaceChild(oldChild, newChild);\n    }", "entropy": 0.10333251953125, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [0.453125, 0.6357421875, 0.00946807861328125, 0.0004572868347167969, 0.0033893585205078125, 0.0270843505859375, 0.0906982421875, 0.59521484375, 0.0008592605590820312, 0.01490020751953125, 0.0005707740783691406, 0.0017185211181640625, 0.00716400146484375, 0.00034427642822265625, 0.0020351409912109375, 0.002582550048828125, 0.00017821788787841797, 0.0204620361328125, 0.199951171875, 0.001209259033203125], "tokens": [284, 562, 763, 4871, 346, 301, 397, 2935, 32, 3227, 2931, 26, 1455, 2931, 30, 537, 2931, 293, 284, 320]}
{"line_number": 88, "line_type": "original", "code": "        savings += reduction.estimateSavings();", "entropy": 2.486328125, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [4.9375, 10.203125, 1.93359375, 0.9765625, 3.705078125, 0.330078125, 1.6953125, 0.64111328125, 1.6927719116210938e-05, 0.43896484375], "tokens": [351, 309, 31156, 1454, 25160, 32, 26892, 69, 31156, 473]}
{"line_number": 88, "line_type": "generated", "code": "\n    }\n  }\n\n  /**\n   * Reducer is a strategy for reducing a function expression.  The\n   * strategy is represented by a helper function.  The helper function\n   * is implemented in JavaScript.  The helper function is expected to\n   * take", "entropy": 0.92236328125, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [0.5185546875, 0.0005583763122558594, 0.13232421875, 0.0008139610290527344, 0.05712890625, 0.1187744140625, 0.00829315185546875, 0.0002428293228149414, 2.77734375, 0.74658203125, 2.22265625, 1.025390625, 1.283203125, 0.61083984375, 1.8056640625, 0.81640625, 0.57275390625, 0.775390625, 1.2978515625, 1.4326171875, 1.75, 0.458740234375, 0.0002624988555908203, 1.5146484375, 1.2109375, 2.5859375, 0.39306640625, 0.64794921875, 2.2265625, 0.345703125, 1.294921875, 0.68408203125, 0.89306640625, 0.87646484375, 0.295166015625, 0.040130615234375, 4.303455352783203e-05, 1.0625, 3.25390625, 0.78125, 0.71875, 1.078125, 0.84912109375, 0.8623046875, 1.1787109375, 0.12744140625, 1.3193359375, 3.638671875, 0.072509765625, 0.039337158203125, 0.0002046823501586914, 1.5712890625], "tokens": [284, 320, 334, 320, 719, 1022, 664, 319, 4761, 10377, 438, 312, 13689, 436, 45984, 312, 667, 6101, 32, 225, 886, 664, 319, 13689, 438, 17718, 810, 312, 9332, 667, 32, 225, 886, 9332, 667, 664, 319, 438, 7586, 328, 9657, 32, 225, 886, 9332, 667, 438, 2799, 372, 664, 319, 4818]}
{"line_number": 89, "line_type": "original", "code": "      }", "entropy": 3.111328125, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [4.26953125, 1.953125], "tokens": [647, 320]}
{"line_number": 89, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Estimate the savings resulting from the reduction.\n     */\n    int estimateSavings() {\n      int oldChildCost = InlineCostEstimator.getCost(oldChild);\n      int newChildCost = InlineCostEstimator.get", "entropy": 0.1746826171875, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [0.25048828125, 0.008209228515625, 0.0875244140625, 0.0546875, 0.00948333740234375, 0.00024020671844482422, 0.1298828125, 0.012847900390625, 0.71142578125, 0.86572265625, 8.344650268554688e-05, 1.1142578125, 0.026641845703125, 1.25390625, 0.05621337890625, 0.1258544921875, 0.2152099609375, 0.7412109375, 0.0040740966796875, 0.09844970703125, 0.0003857612609863281, 0.00032591819763183594, -0.0, 0.0012683868408203125, 0.0006685256958007812, 0.1539306640625, 1.1171875, 0.4013671875, 1.369140625, 0.097900390625, 0.008941650390625, 0.06878662109375, 0.00016236305236816406, 8.83340835571289e-05, 0.0004911422729492188, 0.0038394927978515625, 0.00046896934509277344, 0.003643035888671875, 0.0109405517578125, 1.3113021850585938e-05, 0.01580810546875, 0.02532958984375, 0.0240020751953125, 0.0070953369140625, 0.0005407333374023438, 0.0014734268188476562, 0.0005922317504882812, 0.001827239990234375, 2.288818359375e-05, 0.001590728759765625, 1.9550323486328125e-05, 0.00084686279296875], "tokens": [284, 320, 446, 1022, 275, 319, 14164, 5679, 322, 309, 31156, 14302, 645, 322, 25160, 32, 275, 569, 284, 629, 20772, 69, 31156, 346, 301, 397, 629, 3610, 2931, 9375, 280, 29662, 9375, 38469, 32, 371, 9375, 26, 1455, 2931, 293, 397, 629, 537, 2931, 9375, 280, 29662, 9375, 38469, 32, 371]}
{"line_number": 93, "line_type": "original", "code": "      if (savings > (helperCodeCost + SAVINGS_THRESHOLD)) {", "entropy": 1.6259765625, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [1.787109375, 9.5390625, 0.318603515625, 7.609375, 7.987022399902344e-05, 0.7275390625, 5.5234375, 2.404296875, 0.7451171875, 0.032745361328125, 0.413818359375, 0.071044921875, 0.0015659332275390625, 0.004543304443359375, 9.226799011230469e-05, 0.00278472900390625, 0.0594482421875, 0.0288238525390625], "tokens": [647, 415, 308, 24957, 2052, 848, 308, 4313, 1227, 9375, 474, 358, 4570, 9825, 81, 29520, 490, 301]}
{"line_number": 93, "line_type": "generated", "code": "\n     * Estimate the savings resulting from applying the reduction.\n     *\n     * @return Estimated savings.\n     */\n    int estimateSavings() {\n      int oldSize = oldChild.getSize();\n      int newSize = newChild.getSize", "entropy": 0.255615234375, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [0.6611328125, 0.036865234375, 0.177490234375, 0.011505126953125, 0.68798828125, 0.81298828125, 6.222724914550781e-05, 1.240234375, 0.0262298583984375, 0.97900390625, 0.70654296875, 0.0193023681640625, 0.0606689453125, 0.2135009765625, 0.39208984375, 0.43603515625, 0.00275421142578125, 0.209716796875, 0.005619049072265625, 0.63623046875, 0.10894775390625, 0.1593017578125, 3.933906555175781e-05, 0.7060546875, 0.134521484375, 0.0146331787109375, 0.05303955078125, 0.1131591796875, 0.0008554458618164062, 0.0002491474151611328, 1.1920928955078125e-07, 0.0015544891357421875, 0.0009636878967285156, 0.09619140625, 0.6513671875, 0.39306640625, 1.2392578125, 0.0165252685546875, 0.80224609375, 0.0004677772521972656, 0.0018815994262695312, 1.328125, 0.030670166015625, 0.034912109375, 0.037384033203125, 0.015167236328125, 0.0029735565185546875, 0.00044918060302734375, 0.01178741455078125, 3.135204315185547e-05, 4.863739013671875e-05, 0.01473236083984375], "tokens": [275, 319, 14164, 5679, 322, 309, 31156, 14302, 645, 23242, 322, 25160, 32, 275, 319, 275, 319, 477, 601, 14164, 9831, 309, 31156, 32, 275, 569, 284, 629, 20772, 69, 31156, 346, 301, 397, 629, 3610, 1250, 280, 3610, 2931, 32, 24619, 473, 397, 629, 537, 1250, 280, 537, 2931, 32, 24619]}
{"line_number": 102, "line_type": "original", "code": "    }", "entropy": 4.32421875, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [1.943359375, 6.70703125], "tokens": [264, 320]}
{"line_number": 102, "line_type": "generated", "code": "  }\n\n  /**\n   * Abstract class for reducing a function expression node.\n   */\n  private abstract class Reducer {\n    /**\n     * Returns the source code of the helper function.\n     */\n    abstract String getHelperSource();\n\n    /**\n     * Returns the", "entropy": 0.55126953125, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [1.8193359375, 1.1923828125, 1.30859375, 0.126953125, 0.04150390625, 0.0006384849548339844, 2.482421875, 0.90380859375, 0.76611328125, 1.1630859375, 1.041015625, 0.49560546875, 0.489501953125, 1.8671875, 0.383544921875, 0.1419677734375, 0.14697265625, 0.00559234619140625, 0.224365234375, 0.272705078125, 0.498291015625, 0.01447296142578125, 8.785724639892578e-05, 0.028472900390625, 0.1683349609375, 0.64892578125, 0.1419677734375, 0.0009255409240722656, 2.12109375, 0.91796875, 0.8125, 0.485107421875, 1.1396484375, 0.48046875, 0.2413330078125, 0.466796875, 2.1953125, 0.30224609375, 0.04937744140625, 0.01068115234375, 0.2052001953125, 0.011474609375, 0.0006222724914550781, 0.00026297569274902344, 0.0025177001953125, 0.004268646240234375, 0.341064453125, 0.0283660888671875, 0.041748046875, 0.0008640289306640625, 1.0234375, 1.3935546875], "tokens": [225, 320, 719, 1022, 664, 319, 7400, 443, 436, 45984, 312, 667, 6101, 1541, 32, 664, 569, 334, 945, 5547, 443, 4761, 10377, 301, 284, 1022, 275, 319, 3759, 322, 1914, 1340, 432, 322, 9332, 667, 32, 275, 569, 284, 5547, 892, 622, 2762, 2028, 473, 446, 1022, 275, 319, 3759, 322]}
{"line_number": 111, "line_type": "original", "code": "    Node root = compiler.parseSyntheticCode(", "entropy": 1.66796875, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [2.8828125, 3.666015625, 1.90625, 2.23046875, 3.466796875, 0.0030384063720703125, 2.755859375, 1.2685546875, 0.0029277801513671875, 0.004180908203125, 0.1513671875], "tokens": [264, 4004, 3051, 280, 8980, 32, 2208, 24105, 18228, 1227, 26]}
{"line_number": 111, "line_type": "generated", "code": "\n     * @param reducers List of reducers to apply.\n     * @param reductions List of reductions to add to.\n     */\n    ReductionGatherer(List<Reducer> reducers, Multimap<Reducer, Reduction> reductions", "entropy": 0.2763671875, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [0.521484375, 0.1292724609375, 0.95361328125, 0.0094757080078125, 0.1343994140625, 1.3828277587890625e-05, 1.515625, 0.00384521484375, 0.30224609375, 0.0252532958984375, 0.59375, 1.43359375, 0.485595703125, 0.112060546875, 0.13671875, 0.00551605224609375, 0.0017871856689453125, 0.005199432373046875, 0.01033782958984375, 2.576171875, 0.14111328125, 0.1839599609375, 0.015167236328125, 0.334228515625, 2.140625, 0.4677734375, 0.19677734375, 0.14501953125, 0.011383056640625, 0.0296478271484375, 0.251953125, 3.5762786865234375e-06, 9.119510650634766e-05, 4.0531158447265625e-06, 0.0018854141235351562, 0.0574951171875, 0.0010766983032226562, 0.0001270771026611328, 0.0001844167709350586, 0.00185394287109375, 5.960464477539062e-07, 0.00016355514526367188, 1.2724609375, 9.5367431640625e-07, 0.00034546852111816406, 0.0002206563949584961, 0.0001316070556640625, 0.0125274658203125, 1.239776611328125e-05, 6.318092346191406e-05, 0.1431884765625, 0.0003437995910644531], "tokens": [275, 319, 477, 753, 14721, 483, 1682, 432, 14721, 483, 372, 4871, 32, 275, 319, 477, 753, 25160, 101, 1682, 432, 25160, 101, 372, 1015, 372, 32, 275, 569, 284, 4761, 2927, 33564, 265, 26, 720, 46, 14997, 48, 14721, 483, 30, 18423, 20464, 46, 14997, 30, 4761, 2927, 48, 25160, 101]}
{"line_number": 113, "line_type": "original", "code": "    return (root != null) ? root.removeFirstChild() : null;", "entropy": 2.45703125, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [2.294921875, 11.0625, 5.33203125, 5.82421875, 4.9609375, 0.059783935546875, 0.421142578125, 2.23828125, 1.2265625, 0.1795654296875, 5.28125, 2.693359375, 0.00226593017578125, 0.0167388916015625, 0.01064300537109375, 0.158935546875, 0.0231475830078125], "tokens": [264, 442, 308, 2388, 863, 744, 27, 1018, 3051, 32, 2546, 3472, 2931, 346, 499, 744, 45]}
{"line_number": 113, "line_type": "generated", "code": "\n     */\n    ReductionGatherer(List<Reducer> reducers,\n                      Multimap<Reducer, Reduction> reductions) {\n      this.reducers = reducers;\n      this.reductions = reductions;\n    }\n\n    public void enter(", "entropy": 0.091064453125, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [0.63037109375, 0.076416015625, 0.0157318115234375, 0.19970703125, 5.602836608886719e-06, 5.936622619628906e-05, 3.933906555175781e-06, 0.0011625289916992188, 0.08746337890625, 0.0012655258178710938, 0.00012350082397460938, 0.00013577938079833984, 0.00150299072265625, 5.960464477539062e-07, 0.0008029937744140625, 0.9501953125, 0.0037899017333984375, 3.814697265625e-06, 0.000118255615234375, 6.079673767089844e-05, 6.389617919921875e-05, 0.0022068023681640625, 7.152557373046875e-06, 0.00010263919830322266, 0.0007266998291015625, 0.00115203857421875, 0.0013074874877929688, 0.0021839141845703125, 0.07293701171875, 0.01568603515625, 0.00017213821411132812, 0.0003299713134765625, 0.0002288818359375, 0.008697509765625, -0.0, 0.00025010108947753906, 0.03485107421875, 0.0005440711975097656, 1.7642974853515625e-05, 1.5974044799804688e-05, 0.00010895729064941406, 0.00018644332885742188, 0.0005221366882324219, 8.344650268554688e-07, 0.00039649009704589844, 0.12054443359375, 0.000362396240234375, 0.132568359375, 1.0830078125, 0.2386474609375, 0.90625, 0.140869140625], "tokens": [275, 569, 284, 4761, 2927, 33564, 265, 26, 720, 46, 14997, 48, 14721, 483, 30, 2855, 18423, 20464, 46, 14997, 30, 4761, 2927, 48, 25160, 101, 27, 301, 397, 458, 32, 41634, 280, 14721, 483, 45, 397, 458, 32, 35977, 101, 280, 25160, 101, 45, 284, 320, 446, 562, 763, 6612, 26]}
{"line_number": 52, "line_type": "original", "code": "  FunctionRewriter(AbstractCompiler compiler) {", "entropy": 2.3046875, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [2.361328125, 14.9140625, 0.7109375, 0.001087188720703125, 2.9453125, 1.5458984375, 0.0009684562683105469, 0.1328125, 0.248779296875, 0.1890869140625], "tokens": [225, 4540, 11404, 2036, 26, 5584, 8115, 8980, 27, 301]}
{"line_number": 52, "line_type": "generated", "code": "\n  }\n\n  /**\n   * Returns the function expression for the given reducer.\n   *\n   * @param reducer The reducer for which to return the function expression.\n   * @return The function expression for the given reducer, or null if there is\n   *    ", "entropy": 0.58740234375, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [0.65625, 0.006793975830078125, 0.1431884765625, 0.71875, 0.06591796875, 0.00054931640625, 1.703125, 0.7822265625, 3.056640625, 2.58203125, 2.16796875, 0.338134765625, 1.4404296875, 0.326416015625, 0.66162109375, 0.337158203125, 0.462646484375, 0.765625, 0.01165771484375, 0.75927734375, 0.470947265625, 0.0853271484375, 0.787109375, 0.2030029296875, 1.08984375, 0.049774169921875, 0.46728515625, 0.69970703125, 0.55322265625, 0.380126953125, 0.86474609375, 0.25390625, 0.00278472900390625, 0.1512451171875, 0.083740234375, 0.02215576171875, 0.23046875, 0.07086181640625, 0.07916259765625, 0.80224609375, 0.070068359375, 0.2459716796875, 0.01029205322265625, 1.2333984375, 0.193603515625, 0.2215576171875, 0.08392333984375, 2.775390625, 0.97607421875, 0.21142578125, 0.00122833251953125, 0.18994140625], "tokens": [334, 320, 719, 1022, 664, 319, 3759, 322, 667, 6101, 436, 322, 2702, 27582, 32, 664, 319, 664, 319, 477, 753, 27582, 886, 27582, 436, 1510, 372, 442, 322, 667, 6101, 32, 664, 319, 477, 601, 886, 667, 6101, 436, 322, 2702, 27582, 30, 556, 744, 415, 2017, 438, 664, 319, 262]}
{"line_number": 53, "line_type": "original", "code": "    this.compiler = compiler;", "entropy": 1.982421875, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [5.94140625, 6.05859375, 0.0113677978515625, 1.18359375, 0.61083984375, 0.05841064453125, 0.0109405517578125], "tokens": [264, 458, 32, 10199, 280, 8980, 45]}
{"line_number": 53, "line_type": "generated", "code": "\n  }\n\n  private static Node parseHelperCode(Reducer reducer) {\n    return reducer.parseHelperCode(new JsDocInfo(null));\n  }", "entropy": 0.492431640625, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [0.1795654296875, 0.0008740425109863281, 0.1876220703125, 0.7822265625, 0.7490234375, 0.53173828125, 0.0106964111328125, 0.0003120899200439453, 0.0006442070007324219, 0.001300811767578125, 0.0269622802734375, 0.011810302734375, 0.0006022453308105469, 0.0030364990234375, 0.1707763671875, 1.6220703125, 0.5810546875, 0.046112060546875, 0.91552734375, 0.121337890625, 0.058502197265625, 1.1669921875, 1.5673828125, 1.9921875, 1.119140625, 0.7578125, 1.2421875, 0.63916015625, 0.75146484375, 0.030853271484375, 0.00036334991455078125], "tokens": [334, 320, 719, 945, 907, 4004, 3185, 2762, 1227, 26, 14997, 27582, 27, 301, 284, 442, 27582, 32, 2208, 2762, 1227, 26, 890, 22301, 4216, 1120, 26, 1693, 876, 334, 320]}
{"line_number": 54, "line_type": "original", "code": "  }", "entropy": 1.7119140625, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [2.37109375, 1.052734375], "tokens": [225, 320]}
{"line_number": 54, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [], "tokens": []}
{"line_number": 58, "line_type": "original", "code": "    List<Reducer> reducers = ImmutableList.of(new ReturnConstantReducer(),", "entropy": 2.017578125, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [2.234375, 6.1640625, 0.05023193359375, 4.890625, 0.0282135009765625, 0.05029296875, 5.245208740234375e-06, 3.49609375, 1.044921875, 0.04205322265625, 0.018035888671875, 0.045135498046875, 2.072265625, 8.8828125, 4.7265625, 0.04644775390625, 0.529296875], "tokens": [264, 1682, 46, 14997, 48, 14721, 483, 280, 29667, 32, 1028, 26, 890, 2744, 5465, 14997, 1026]}
{"line_number": 58, "line_type": "generated", "code": "\n   * @param reducer The reducer that needs the helper code.\n   * @return The helper code for the reducer or null if parsing failed.\n   */\n  private Node parseHelperCode(Reducer reducer) {\n    Node root = new Node(Token.SCRIPT", "entropy": 0.45263671875, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [0.53173828125, 0.134033203125, 0.282958984375, 0.32373046875, 0.0309295654296875, 1.60546875, 0.1173095703125, 1.7822265625, 0.63134765625, 0.67822265625, 0.2099609375, 0.266845703125, 0.19482421875, 0.01213836669921875, 0.0802001953125, 0.0264892578125, 0.0125885009765625, 0.72265625, 2.017578125, 0.08990478515625, 2.720703125, 0.2220458984375, 0.14892578125, 1.4521484375, 0.15478515625, 0.114013671875, 1.546875, 0.77685546875, 0.0418701171875, 0.01070404052734375, 0.0180816650390625, 0.0122222900390625, 0.1573486328125, 0.1739501953125, 0.0004830360412597656, 1.7523765563964844e-05, 1.430511474609375e-05, 0.00089263916015625, 0.0169219970703125, 0.0009555816650390625, 0.000553131103515625, 0.001129150390625, 0.20703125, 2.4375, 2.671875, 0.07257080078125, 0.46435546875, 0.1422119140625, 0.0023059844970703125, 0.077880859375, 1.0967254638671875e-05, 0.135986328125], "tokens": [664, 319, 477, 753, 27582, 886, 27582, 688, 5652, 322, 9332, 1340, 32, 664, 319, 477, 601, 886, 9332, 1340, 436, 322, 27582, 556, 744, 415, 11708, 3803, 32, 664, 569, 334, 945, 4004, 3185, 2762, 1227, 26, 14997, 27582, 27, 301, 284, 4004, 3051, 280, 537, 4004, 26, 1763, 32, 12210]}
