{"line_number": 207, "line_type": "original", "code": "      JSType type = functionNode.getJSType();", "entropy": 2.654296875, "is_bug_line": false, "sus_score": 0.03027690723576271, "per_token_entropy": [6.1953125, 8.8359375, 0.003787994384765625, 2.5859375, 0.1085205078125, 8.28125, 5.1328125, 0.0296478271484375, 0.60888671875, 0.004730224609375, 0.00023055076599121094, 0.07940673828125], "tokens": [647, 7750, 620, 827, 280, 667, 1212, 32, 371, 4624, 620, 473]}
{"line_number": 207, "line_type": "generated", "code": "\n    return s;\n  }\n\n  /**\n   * Declare a native function.\n   *\n   * @param name The name of the function.\n   * @param functionType The type of the function.\n   */\n  private void declareNativeFunctionType(Scope scope,", "entropy": 0.36279296875, "is_bug_line": false, "sus_score": 0.03027690723576271, "per_token_entropy": [0.4755859375, 0.69921875, 0.00469207763671875, 0.0013608932495117188, 0.0290985107421875, 0.0003516674041748047, 0.176513671875, 0.61474609375, 0.2064208984375, 0.0002067089080810547, 1.4091796875, 0.411376953125, 1.2109375, 0.55908203125, 2.322265625, 0.475341796875, 1.5263671875, 0.55126953125, 0.00347137451171875, 0.183349609375, 0.0428466796875, 1.0654296875, 0.382080078125, 0.376220703125, 0.14990234375, 0.01047515869140625, 0.2919921875, 0.61376953125, 0.06915283203125, 0.056610107421875, 0.002197265625, 0.0038585662841796875, 2.23046875, 0.04205322265625, 0.11492919921875, 0.48583984375, 0.082275390625, 0.038482666015625, 0.0274200439453125, 0.15625, 0.056793212890625, 0.0601806640625, 0.00844573974609375, 0.4150390625, 0.0845947265625, 0.0006685256958007812, 0.0017518997192382812, 0.0206756591796875, 0.00209808349609375, 0.155517578125, 0.95751953125, 0.0003743171691894531], "tokens": [284, 442, 309, 45, 334, 320, 719, 1022, 664, 319, 36239, 312, 7555, 667, 32, 664, 319, 664, 319, 477, 753, 636, 886, 636, 432, 322, 667, 32, 664, 319, 477, 753, 667, 620, 886, 827, 432, 322, 667, 32, 664, 569, 334, 945, 763, 8864, 6134, 44334, 26, 5504, 4576, 30]}
{"line_number": 208, "line_type": "original", "code": "      if (type != null && type instanceof FunctionType) {", "entropy": 1.8681640625, "is_bug_line": false, "sus_score": 0.03027690723576271, "per_token_entropy": [4.71484375, 3.12890625, 0.169921875, 1.6572265625, 6.53125, 0.0648193359375, 1.732421875, 0.56103515625, 4.984375, 0.62548828125, 0.058868408203125, 0.04876708984375, 0.00516510009765625], "tokens": [647, 415, 308, 681, 863, 744, 962, 827, 5113, 4540, 620, 27, 301]}
{"line_number": 208, "line_type": "generated", "code": "\n    return s;\n  }\n\n  /**\n   * Declare a native function type.\n   */\n  void declareNativeFunctionType(Scope s, NativeType nativeType) {\n    JSType nativeTypeType = typeRegistry.getNativeType(nativeType);\n    JS", "entropy": 0.5068359375, "is_bug_line": false, "sus_score": 0.03027690723576271, "per_token_entropy": [0.3740234375, 1.4599609375, 0.005474090576171875, 0.00138092041015625, 0.056427001953125, 0.0004901885986328125, 0.1678466796875, 0.64990234375, 0.2147216796875, 0.0002256631851196289, 1.2939453125, 0.395751953125, 1.240234375, 0.52099609375, 1.021484375, 1.3115234375, 0.396484375, 0.207275390625, 0.00481414794921875, 1.677734375, 0.000316619873046875, 0.0010347366333007812, 0.0230560302734375, 0.002040863037109375, 0.06536865234375, 0.44775390625, 0.00012445449829101562, 2.37109375, 0.8828125, 0.353515625, 0.1319580078125, 0.00417327880859375, 0.0024280548095703125, 0.03326416015625, 1.5576171875, 0.0014810562133789062, 2.1875, 1.8984375, 1.33984375, 0.02685546875, 0.716796875, 0.01275634765625, 0.0004246234893798828, 0.2449951171875, 0.00014460086822509766, 0.1402587890625, 0.04217529296875, 0.061798095703125, 4.208087921142578e-05, 0.420166015625, 0.0714111328125, 2.32421875], "tokens": [284, 442, 309, 45, 334, 320, 719, 1022, 664, 319, 36239, 312, 7555, 667, 827, 32, 664, 569, 334, 763, 8864, 6134, 44334, 26, 5504, 309, 30, 13123, 620, 7555, 620, 27, 301, 284, 7750, 620, 7555, 620, 620, 280, 827, 5378, 32, 371, 6134, 620, 26, 3723, 620, 293, 284, 7750]}
{"line_number": 209, "line_type": "original", "code": "        FunctionType fnType = (FunctionType) type;", "entropy": 2.154296875, "is_bug_line": false, "sus_score": 0.03027690723576271, "per_token_entropy": [5.39453125, 4.171875, 0.0218353271484375, 3.57421875, 0.88671875, 0.0263671875, 3.03125, 0.0014429092407226562, 0.0029354095458984375, 0.70556640625, 5.86328125], "tokens": [351, 4540, 620, 2771, 620, 280, 308, 44334, 27, 827, 45]}
{"line_number": 209, "line_type": "generated", "code": "\n    declareNativeObjectType(s, \"ActiveXObject\", OBJECT_FUNCTION_TYPE,\n        ActiveXObject.class);", "entropy": 0.448974609375, "is_bug_line": false, "sus_score": 0.03027690723576271, "per_token_entropy": [0.426025390625, 0.54296875, 0.1361083984375, 0.64453125, 0.0266571044921875, 0.09100341796875, 0.0133056640625, 0.2445068359375, 0.01104736328125, 0.0005183219909667969, 8.20159912109375e-05, 0.067138671875, 1.951171875, 0.0014505386352539062, 0.419189453125, 0.0036563873291015625, 0.00182342529296875, 1.279296875, 0.8369140625, 2.615234375, 0.0015249252319335938, 0.07659912109375, 0.84912109375, 0.67822265625, 0.30859375], "tokens": [284, 8864, 6134, 15898, 26, 101, 30, 313, 4077, 74, 959, 392, 19350, 81, 9842, 81, 2319, 30, 291, 8755, 74, 959, 32, 823, 293]}
{"line_number": 210, "line_type": "original", "code": "        ObjectType fnThisType = fnType.getTypeOfThis();", "entropy": 2.189453125, "is_bug_line": false, "sus_score": 0.03027690723576271, "per_token_entropy": [3.48046875, 11.8359375, 3.904296875, 1.2900390625, 0.036163330078125, 0.062042236328125, 3.8671875, 0.99951171875, 0.0791015625, 2.85546875, 0.0031604766845703125, 0.00048542022705078125, 0.052337646484375], "tokens": [351, 42562, 2771, 2272, 620, 280, 2771, 620, 32, 10272, 1419, 2272, 473]}
{"line_number": 210, "line_type": "generated", "code": "    // pass to its constructor).\n    declareNativeObjectType(s, \"ActiveXObject\", ANY_TYPE);\n\n    // Global functions\n    declareNativeObjectType(s, \"eval\", EVAL_TYPE);\n    declareNativeObjectType(s, \"isFinite", "entropy": 0.45361328125, "is_bug_line": false, "sus_score": 0.03027690723576271, "per_token_entropy": [1.0107421875, 0.12103271484375, 0.439697265625, 0.39111328125, 0.89013671875, 0.039276123046875, 0.72265625, 0.666015625, 0.6376953125, 0.079345703125, 0.85791015625, 0.02313232421875, 0.07275390625, 0.007633209228515625, 0.292236328125, 0.003749847412109375, 0.0007829666137695312, 4.863739013671875e-05, 0.11383056640625, 2.3359375, 0.0023174285888671875, 0.1209716796875, 0.299072265625, 0.515625, 0.67041015625, 3.3203125, 2.099609375, 2.02734375, 0.49365234375, 0.6123046875, 0.7880859375, 0.01959228515625, 0.027435302734375, 0.00044918060302734375, 0.095703125, 0.53955078125, 0.0067596435546875, 0.802734375, 0.0001436471939086914, 0.0031452178955078125, 0.76513671875, 0.0462646484375, 0.1419677734375, 0.06158447265625, 0.0187835693359375, 0.034332275390625, 0.00258636474609375, 0.0011844635009765625, 3.612041473388672e-05, 0.007778167724609375, 1.3603515625, 0.0011930465698242188], "tokens": [264, 434, 3097, 372, 2819, 4374, 547, 284, 8864, 6134, 15898, 26, 101, 30, 313, 4077, 74, 959, 392, 2964, 81, 2319, 293, 446, 434, 6564, 4442, 284, 8864, 6134, 15898, 26, 101, 30, 313, 6569, 392, 516, 2715, 81, 2319, 293, 284, 8864, 6134, 15898, 26, 101, 30, 313, 297, 40643]}
{"line_number": 211, "line_type": "original", "code": "        if (!fnThisType.isUnknownType()) {", "entropy": 2.326171875, "is_bug_line": false, "sus_score": 0.03027690723576271, "per_token_entropy": [5.546875, 3.916015625, 1.9716796875, 10.125, 4.6015625, 0.0958251953125, 0.0794677734375, 0.5654296875, 0.42822265625, 0.1663818359375, 0.3876953125, 0.0260162353515625], "tokens": [351, 415, 1429, 3359, 2272, 620, 32, 297, 5842, 620, 1157, 301]}
{"line_number": 211, "line_type": "generated", "code": "\n    ObjectType activexObject = new ObjectType(\n        typeRegistry.getNativeObjectType(ObjectType.IActiveXObject),\n        typeRegistry.getNativeObjectType(ObjectType.IUnknown));\n    s.declareType(\"ActiveXObject\", activexObject);", "entropy": 0.469482421875, "is_bug_line": false, "sus_score": 0.03027690723576271, "per_token_entropy": [0.34814453125, 2.150390625, 0.90087890625, 0.0038394927978515625, 0.8603515625, 0.5185546875, 1.2216796875, 0.376708984375, 0.035797119140625, 1.4375, 0.93994140625, 0.0034275054931640625, 0.195556640625, 0.444580078125, 0.007785797119140625, 0.10992431640625, 0.0289154052734375, 1.921875, 0.016845703125, 1.7177734375, 0.92529296875, 0.002349853515625, 0.028564453125, 0.2919921875, 0.5390625, 1.5537109375, 0.004436492919921875, 0.7001953125, 0.19140625, 0.02020263671875, 0.404541015625, 0.0049285888671875, 0.180419921875, 5.316734313964844e-05, 0.1153564453125, 1.470703125, 0.7353515625, 0.1766357421875, 1.4384765625, 0.003376007080078125, 0.055206298828125, 0.4560546875, 0.258056640625, 0.0021495819091796875, 0.00022554397583007812, 6.186962127685547e-05, 0.002605438232421875, 0.0576171875, 4.0531158447265625e-06, 5.078315734863281e-05, 1.0703125], "tokens": [284, 42562, 6206, 327, 959, 280, 537, 42562, 26, 291, 827, 5378, 32, 371, 6134, 15898, 26, 15898, 32, 59, 4077, 74, 959, 471, 291, 827, 5378, 32, 371, 6134, 15898, 26, 15898, 32, 59, 5842, 876, 284, 309, 32, 8238, 620, 440, 4077, 74, 959, 392, 6206, 327, 959, 293]}
{"line_number": 216, "line_type": "original", "code": "    }", "entropy": 5.390625, "is_bug_line": false, "sus_score": 0.03027690723576271, "per_token_entropy": [5.86328125, 4.9140625], "tokens": [264, 320]}
{"line_number": 216, "line_type": "generated", "code": "\n\n  /**\n   * Declare a function type with a given name.\n   */\n  private void declareNativeFunctionType(Scope s, String name) {\n    FunctionType fnType = new FunctionType(name);\n    fnType.setPrototypeBasedDispatch(true);", "entropy": 0.487060546875, "is_bug_line": false, "sus_score": 0.03027690723576271, "per_token_entropy": [0.44482421875, 0.4267578125, 0.162109375, 0.00024962425231933594, 1.6494140625, 0.308349609375, 1.6904296875, 0.98828125, 1.9697265625, 1.5498046875, 1.0673828125, 0.11932373046875, 1.130859375, 0.4208984375, 0.1512451171875, 0.005130767822265625, 0.221435546875, 0.10235595703125, 0.000904083251953125, 0.0020580291748046875, 0.014129638671875, 0.0017614364624023438, 0.1602783203125, 0.4384765625, 9.775161743164062e-05, 0.395751953125, 0.36083984375, 0.021331787109375, 0.00121307373046875, 0.01384735107421875, 1.2158203125, 0.0552978515625, 2.166015625, 0.208251953125, 0.033599853515625, 1.9482421875, 0.07537841796875, 0.1019287109375, 0.277587890625, 0.79931640625, 0.393310546875, 0.0362548828125, 0.75732421875, 3.254413604736328e-05, 0.0220794677734375, 0.393798828125, 1.5205078125, 0.328125, 0.47802734375, 0.3154296875, 0.385009765625, 0.002361297607421875], "tokens": [719, 1022, 664, 319, 36239, 312, 667, 827, 623, 312, 2702, 636, 32, 664, 569, 334, 945, 763, 8864, 6134, 44334, 26, 5504, 309, 30, 892, 636, 27, 301, 284, 4540, 620, 2771, 620, 280, 537, 4540, 620, 26, 426, 293, 284, 2771, 620, 32, 470, 17534, 10332, 7179, 26, 1508, 293]}
{"line_number": 1783, "line_type": "original", "code": "      return n.getFirstChild();", "entropy": 2.076171875, "is_bug_line": false, "sus_score": 0.029209315003911808, "per_token_entropy": [6.5703125, 1.4150390625, 2.904296875, 0.52490234375, 2.263671875, 0.0009264945983886719, 0.85888671875], "tokens": [647, 442, 310, 32, 25657, 2931, 473]}
{"line_number": 1783, "line_type": "generated", "code": "\n  /**\n   * Returns true if the given node is a variable declaration.\n   */\n  private static boolean isVarDeclaration(Node n) {\n    return n.getType() == Token.VAR;\n  }\n\n  /**\n   * Returns true if the given node", "entropy": 0.431884765625, "is_bug_line": false, "sus_score": 0.029209315003911808, "per_token_entropy": [1.296875, 0.58642578125, 0.73046875, 0.00032401084899902344, 2.591796875, 1.6328125, 0.11151123046875, 0.52880859375, 0.58154296875, 1.1396484375, 0.728515625, 0.7666015625, 3.390625, 1.0107421875, 1.6171875, 0.193359375, 0.456787109375, 0.004863739013671875, 0.2890625, 0.1641845703125, 0.00540924072265625, 0.01690673828125, 0.45849609375, 0.5166015625, 0.061553955078125, 0.0110015869140625, 0.1328125, 0.00966644287109375, 0.0005078315734863281, 0.00893402099609375, 0.78759765625, 0.288818359375, 0.060760498046875, 0.80419921875, 0.0004181861877441406, 0.0025501251220703125, 0.0007367134094238281, 7.140636444091797e-05, 0.079345703125, 0.2330322265625, 0.00481414794921875, 0.0009965896606445312, 0.26513671875, 0.087890625, 0.149169921875, 0.00029778480529785156, 0.33154296875, 0.0941162109375, 0.0063934326171875, 0.038330078125, 0.032928466796875, 0.1348876953125], "tokens": [334, 1022, 664, 319, 3759, 861, 415, 322, 2702, 1541, 438, 312, 2677, 13317, 32, 664, 569, 334, 945, 907, 1905, 438, 1881, 10367, 26, 1212, 310, 27, 301, 284, 442, 310, 32, 10272, 346, 610, 6512, 32, 7416, 45, 334, 320, 719, 1022, 664, 319, 3759, 861, 415, 322, 2702, 1541]}
{"line_number": 1799, "line_type": "original", "code": "    if (NodeUtil.isObjectLitKey(lValue, lValue.getParent())) {", "entropy": 0.7421875, "is_bug_line": false, "sus_score": 0.0278942469585241, "per_token_entropy": [5.60546875, 1.7080078125, 0.095947265625, 2.595703125, 0.0010614395141601562, 0.00026106834411621094, 1.404296875, 0.004634857177734375, 0.0276947021484375, 0.0024776458740234375, 1.8759765625, 0.008331298828125, 0.529296875, 0.162841796875, 0.0002925395965576172, 0.004833221435546875, 0.004795074462890625, 0.056732177734375, 0.01081085205078125], "tokens": [264, 415, 308, 1212, 1733, 32, 37704, 27472, 953, 26, 94, 882, 30, 456, 882, 32, 18789, 5156, 301]}
{"line_number": 1799, "line_type": "generated", "code": "\n  /**\n   * Returns true if the given function declaration node is a local function\n   * declaration.\n   */\n  private static boolean isLocalFunctionDeclaration(Node functionNode) {\n    Node functionParent = functionNode.getParent();\n    if (functionParent ==", "entropy": 0.626953125, "is_bug_line": false, "sus_score": 0.0278942469585241, "per_token_entropy": [1.904296875, 0.486328125, 0.75927734375, 0.0003819465637207031, 2.46875, 1.70703125, 0.11279296875, 0.476318359375, 0.5537109375, 2.087890625, 2.275390625, 1.9736328125, 0.90966796875, 1.1416015625, 2.30078125, 0.1617431640625, 0.720703125, 0.0029010772705078125, 2.099609375, 0.78515625, 0.32421875, 0.103271484375, 0.0061492919921875, 0.1907958984375, 0.2607421875, 0.00399017333984375, 0.025909423828125, 0.1527099609375, 0.1435546875, 0.464599609375, 0.0220794677734375, 0.040374755859375, 1.1728515625, 0.66796875, 0.021942138671875, 0.0009870529174804688, 0.029296875, 0.744140625, 2.078125, 0.99853515625, 0.032867431640625, 0.042938232421875, 3.218650817871094e-05, 0.0017251968383789062, 0.001125335693359375, 0.00363922119140625, 0.07476806640625, 0.92431640625, 0.08740234375, 0.1456298828125, 0.047332763671875, 0.83837890625], "tokens": [334, 1022, 664, 319, 3759, 861, 415, 322, 2702, 667, 13317, 1541, 438, 312, 2196, 667, 664, 319, 13317, 32, 664, 569, 334, 945, 907, 1905, 438, 3325, 2447, 10367, 26, 1212, 667, 1212, 27, 301, 284, 4004, 667, 4433, 280, 667, 1212, 32, 18789, 473, 284, 415, 308, 1126, 4433, 610]}
{"line_number": 1809, "line_type": "original", "code": "    return lValue.getQualifiedName();", "entropy": 1.57421875, "is_bug_line": false, "sus_score": 0.0278942469585241, "per_token_entropy": [7.44140625, 0.9814453125, 0.406982421875, 0.00014138221740722656, 0.0050201416015625, 3.73828125, 0.01194000244140625, 0.004894256591796875], "tokens": [264, 442, 456, 882, 32, 371, 41340, 473]}
{"line_number": 1809, "line_type": "generated", "code": "\n\n  /**\n   * Returns the function node containing the given node, or null if the node is\n   * not contained in a function.\n   */\n  private static Node getFunctionNode(Node n) {\n    Node parent = n.getParent();\n    if (", "entropy": 0.50341796875, "is_bug_line": false, "sus_score": 0.0278942469585241, "per_token_entropy": [0.52783203125, 0.11529541015625, 0.75830078125, 0.00017762184143066406, 2.451171875, 1.07421875, 3.666015625, 1.9677734375, 3.15625, 0.154052734375, 0.5693359375, 0.374267578125, 0.9404296875, 0.487060546875, 0.40185546875, 0.1575927734375, 0.50341796875, 0.912109375, 0.90087890625, 0.12481689453125, 0.00022804737091064453, 0.146484375, 0.55126953125, 0.3046875, 0.0748291015625, 0.0234375, 0.2215576171875, 0.0804443359375, 0.050140380859375, 0.0044097900390625, 0.55126953125, 0.17578125, 0.0699462890625, 0.2166748046875, 1.0439453125, 0.1597900390625, 0.0626220703125, 0.0178375244140625, 0.09619140625, 0.01006317138671875, 0.0001499652862548828, 0.00652313232421875, 0.89453125, 0.66796875, 0.10125732421875, 0.03143310546875, 0.26708984375, 0.0019397735595703125, 0.0008177757263183594, 0.026947021484375, 1.041015625, 0.0308685302734375], "tokens": [719, 1022, 664, 319, 3759, 322, 667, 1541, 6621, 322, 2702, 1541, 30, 556, 744, 415, 322, 1541, 438, 664, 319, 646, 14549, 328, 312, 667, 32, 664, 569, 334, 945, 907, 4004, 622, 2447, 1212, 26, 1212, 310, 27, 301, 284, 4004, 2935, 280, 310, 32, 18789, 473, 284, 415, 308]}
{"line_number": 194, "line_type": "original", "code": "      newScope = new Scope(parent, root);", "entropy": 2.01171875, "is_bug_line": false, "sus_score": 0.027612933127094993, "per_token_entropy": [5.59375, 6.72265625, 0.380615234375, 0.57177734375, 1.44140625, 1.18359375, 0.0121612548828125, 3.6328125, 0.1451416015625, 0.478515625, 1.9599609375], "tokens": [647, 537, 5504, 280, 537, 22148, 26, 2544, 30, 3051, 293]}
{"line_number": 194, "line_type": "generated", "code": "\n    declareNativeFunctionType(s, REGEXP_FUNCTION_TYPE);\n    declareNativeFunctionType(s, STRING_OBJECT_FUNCTION_TYPE);\n    declareNativeFunctionType(s, NATIVE_ARRAY_TYPE);", "entropy": 0.1343994140625, "is_bug_line": false, "sus_score": 0.027612933127094993, "per_token_entropy": [0.65771484375, 0.1229248046875, 0.02301025390625, 0.1021728515625, 0.0014905929565429688, 0.0022182464599609375, 0.00014281272888183594, 0.1729736328125, 0.1754150390625, 0.00018453598022460938, 0.0026569366455078125, 0.0007462501525878906, 0.00019562244415283203, 0.00699615478515625, 0.3818359375, 0.01300811767578125, 0.001567840576171875, 0.0217437744140625, 2.5391578674316406e-05, 5.91278076171875e-05, 1.9788742065429688e-05, 0.035400390625, 4.315376281738281e-05, 0.1728515625, 2.7298927307128906e-05, 0.0064239501953125, 6.198883056640625e-06, 7.748603820800781e-06, 0.0005865097045898438, 0.1925048828125, 0.029876708984375, 0.007602691650390625, 0.03167724609375, 7.367134094238281e-05, 5.7220458984375e-05, 5.936622619628906e-05, 1.3740234375, 0.0127716064453125, 0.00013828277587890625, 1.0224609375, 0.0267181396484375, 1.123046875, 0.05389404296875], "tokens": [284, 8864, 6134, 44334, 26, 101, 30, 11752, 12275, 81, 9842, 81, 2319, 293, 284, 8864, 6134, 44334, 26, 101, 30, 19397, 81, 8460, 81, 9842, 81, 2319, 293, 284, 8864, 6134, 44334, 26, 101, 30, 489, 13829, 81, 9487, 81, 2319, 293]}
{"line_number": 195, "line_type": "original", "code": "      LocalScopeBuilder localScopeBuilder = new LocalScopeBuilder(newScope);", "entropy": 1.3955078125, "is_bug_line": false, "sus_score": 0.027612933127094993, "per_token_entropy": [5.61328125, 8.7578125, 0.55859375, 0.252197265625, 0.485595703125, 0.083251953125, 0.035125732421875, 0.0220489501953125, 0.4765625, 0.0236663818359375, 0.00037860870361328125, 0.0011110305786132812, 0.023834228515625, 5.578125, 0.072265625, 0.351318359375], "tokens": [647, 7089, 5504, 1796, 2196, 5504, 1796, 280, 537, 7089, 5504, 1796, 26, 890, 5504, 293]}
{"line_number": 195, "line_type": "generated", "code": "\n    declareNativeFunctionType(s, REGEXP_FUNCTION_TYPE);\n    declareNativeFunctionType(s, STRING_OBJECT_FUNCTION_TYPE);\n    declareNativeFunctionType(s, URI_ERROR_FUNCTION_TYPE);\n    declareNativeFunctionType(s, N", "entropy": 0.105224609375, "is_bug_line": false, "sus_score": 0.027612933127094993, "per_token_entropy": [0.487060546875, 0.436767578125, 0.0411376953125, 0.10650634765625, 0.0020084381103515625, 0.0033702850341796875, 0.00020241737365722656, 0.25439453125, 0.08892822265625, 0.00019598007202148438, 0.0025386810302734375, 0.0011243820190429688, 0.0001901388168334961, 0.0091400146484375, 0.1602783203125, 0.01381683349609375, 0.0014562606811523438, 0.019012451171875, 2.09808349609375e-05, 0.00033783912658691406, 1.5616416931152344e-05, 0.033477783203125, 7.152557373046875e-05, 0.26025390625, 3.600120544433594e-05, 0.00811004638671875, 6.9141387939453125e-06, 4.887580871582031e-06, 0.0005855560302734375, 0.08917236328125, 0.039642333984375, 0.00698089599609375, 0.0247344970703125, 5.733966827392578e-05, 0.00015175342559814453, 4.3511390686035156e-05, 1.0927734375, 0.003902435302734375, 0.00016760826110839844, 5.805492401123047e-05, 0.003509521484375, 3.159046173095703e-05, 2.8014183044433594e-05, 0.0003027915954589844, 0.340576171875, 0.12335205078125, 0.020843505859375, 0.058807373046875, 0.0007166862487792969, 0.0006694793701171875, 0.00012445449829101562, 1.734375], "tokens": [284, 8864, 6134, 44334, 26, 101, 30, 11752, 12275, 81, 9842, 81, 2319, 293, 284, 8864, 6134, 44334, 26, 101, 30, 19397, 81, 8460, 81, 9842, 81, 2319, 293, 284, 8864, 6134, 44334, 26, 101, 30, 7412, 81, 2930, 81, 9842, 81, 2319, 293, 284, 8864, 6134, 44334, 26, 101, 30, 489]}
{"line_number": 196, "line_type": "original", "code": "      scopeBuilder = localScopeBuilder;", "entropy": 2.671875, "is_bug_line": false, "sus_score": 0.027612933127094993, "per_token_entropy": [6.09375, 6.8203125, 2.521484375, 1.736328125, 3.537109375, 0.00644683837890625, 0.011474609375, 0.6484375], "tokens": [647, 4576, 1796, 280, 2196, 5504, 1796, 45]}
{"line_number": 196, "line_type": "generated", "code": "\n    declareNativeFunctionType(s, REGEXP_FUNCTION_TYPE);\n    declareNativeFunctionType(s, STRING_FUNCTION_TYPE);\n    declareNativeFunctionType(s, STRING_OBJECT_FUNCTION_TYPE);\n    declareNativeFunctionType(s, SYNTAX_", "entropy": 0.06585693359375, "is_bug_line": false, "sus_score": 0.027612933127094993, "per_token_entropy": [0.375732421875, 0.275146484375, 0.035980224609375, 0.10406494140625, 0.001827239990234375, 0.002872467041015625, 0.00020766258239746094, 0.1976318359375, 0.1290283203125, 0.0002913475036621094, 0.0027637481689453125, 0.001251220703125, 0.0002532005310058594, 0.01015472412109375, 0.2205810546875, 0.015045166015625, 0.0016489028930664062, 0.01947021484375, 1.4185905456542969e-05, 0.0002865791320800781, 1.9788742065429688e-05, 0.036529541015625, 7.104873657226562e-05, 1.478515625, 6.73532485961914e-05, 4.9591064453125e-05, 0.00290679931640625, 0.016357421875, 0.0056610107421875, 0.00136566162109375, 0.00908660888671875, 3.123283386230469e-05, 0.00099945068359375, 5.161762237548828e-05, 0.0161895751953125, 4.971027374267578e-05, 0.029052734375, 3.3974647521972656e-05, 0.0108489990234375, 4.5299530029296875e-06, 2.2172927856445312e-05, 0.00036716461181640625, 0.045013427734375, 0.01190185546875, 0.002391815185546875, 0.00830078125, 0.0002034902572631836, 8.344650268554688e-05, 4.0650367736816406e-05, 0.3525390625, 0.00010442733764648438, 3.814697265625e-05], "tokens": [284, 8864, 6134, 44334, 26, 101, 30, 11752, 12275, 81, 9842, 81, 2319, 293, 284, 8864, 6134, 44334, 26, 101, 30, 19397, 81, 9842, 81, 2319, 293, 284, 8864, 6134, 44334, 26, 101, 30, 19397, 81, 8460, 81, 9842, 81, 2319, 293, 284, 8864, 6134, 44334, 26, 101, 30, 9291, 43193, 81]}
{"line_number": 197, "line_type": "original", "code": "      localScopeBuilder.build();", "entropy": 4.05859375, "is_bug_line": false, "sus_score": 0.027612933127094993, "per_token_entropy": [6.34765625, 11.0, 1.8681640625, 1.2041015625, 0.17529296875, 6.4453125, 1.38671875], "tokens": [647, 2196, 5504, 1796, 32, 1832, 473]}
{"line_number": 197, "line_type": "generated", "code": "\n    return s;\n  }\n\n  /**\n   * Creates a function type for the given native function.\n   */\n  private void declareNativeFunctionType(Scope s, NativeFunctionType type) {\n    JSType nativeType = typeRegistry.getNativeObjectType(type.", "entropy": 0.4951171875, "is_bug_line": false, "sus_score": 0.027612933127094993, "per_token_entropy": [0.45263671875, 0.7998046875, 0.003108978271484375, 0.0011453628540039062, 0.020721435546875, 0.0005316734313964844, 0.204345703125, 0.69580078125, 0.1885986328125, 0.00019931793212890625, 1.8740234375, 0.341552734375, 2.205078125, 0.266845703125, 0.7646484375, 1.3017578125, 0.88427734375, 1.9921875, 0.52490234375, 1.0517578125, 0.353759765625, 0.21923828125, 0.0034160614013671875, 0.373779296875, 0.2900390625, 0.0010080337524414062, 0.0007390975952148438, 0.0020999908447265625, 0.00196075439453125, 0.153564453125, 0.513671875, 0.0001747608184814453, 2.259765625, 0.80810546875, 0.95263671875, 0.00244140625, 0.0012159347534179688, 0.0281524658203125, 2.123046875, 0.00403594970703125, 0.96630859375, 0.41796875, 0.02386474609375, 0.281005859375, 0.642578125, 0.00016558170318603516, 0.37353515625, 0.0001354217529296875, 0.9990234375, 0.00234222412109375, 0.080810546875, 0.29638671875], "tokens": [284, 442, 309, 45, 334, 320, 719, 1022, 664, 319, 9301, 312, 667, 827, 436, 322, 2702, 7555, 667, 32, 664, 569, 334, 945, 763, 8864, 6134, 44334, 26, 5504, 309, 30, 13123, 44334, 827, 27, 301, 284, 7750, 620, 7555, 620, 280, 827, 5378, 32, 371, 6134, 15898, 26, 681, 32]}
{"line_number": 355, "line_type": "original", "code": "    return typeRegistry.getNativeType(nativeType);", "entropy": 1.9580078125, "is_bug_line": false, "sus_score": 0.027542461894052572, "per_token_entropy": [3.94140625, 9.203125, 3.216796875, 1.1962890625, 0.410400390625, 0.35595703125, 0.01512908935546875, 0.3408203125, 0.0193023681640625, 4.51171875, 0.10565185546875, 0.182861328125], "tokens": [264, 442, 827, 5378, 32, 371, 6134, 620, 26, 3723, 620, 293]}
{"line_number": 355, "line_type": "generated", "code": "\n      }\n\n      // Resolve types and attach them to scope properties.\n      Iterator<String> props = scope.getProperties();\n      while (props.hasNext()) {", "entropy": 0.25439453125, "is_bug_line": false, "sus_score": 0.027542461894052572, "per_token_entropy": [0.767578125, 0.004398345947265625, 0.509765625, 0.1776123046875, 0.9375, 0.436767578125, 0.50390625, 0.0138397216796875, 0.01019287109375, 0.003757476806640625, 1.6318359375, 1.2275390625, 0.038818359375, 0.04290771484375, 0.32275390625, 0.0041046142578125, 0.41064453125, 0.0014400482177734375, 0.89208984375, 0.00711822509765625, 0.011138916015625, 3.039836883544922e-05, 0.042144775390625, 0.1263427734375, 0.0052642822265625, 0.00649261474609375, 0.001617431640625, 9.417533874511719e-05, 5.14984130859375e-05, 8.463859558105469e-06, 9.620189666748047e-05, 0.0023212432861328125], "tokens": [397, 320, 1687, 434, 27315, 3738, 461, 12386, 3026, 372, 4576, 4308, 32, 397, 14743, 46, 652, 48, 5576, 280, 4576, 32, 40139, 473, 397, 2218, 308, 2962, 32, 16421, 1157, 301]}
{"line_number": 1759, "line_type": "original", "code": "    JSDocInfo info = n.getJSDocInfo();", "entropy": 0.9716796875, "is_bug_line": false, "sus_score": 0.027460923447734174, "per_token_entropy": [2.8046875, 7.39453125, 6.222724914550781e-05, 4.172325134277344e-06, 0.0006785392761230469, 0.685546875, 0.006591796875, 3.404296875, 0.023345947265625, 0.0252227783203125, 0.2161865234375, 2.6702880859375e-05, 2.86102294921875e-06, 8.177757263183594e-05, 0.01520538330078125], "tokens": [264, 971, 3181, 542, 1120, 3099, 280, 310, 32, 371, 60, 3181, 542, 1120, 473]}
{"line_number": 1759, "line_type": "generated", "code": "\n    return lValue.getString();\n  }\n\n  /**\n   * Check if the given l-value is a property of a qualified name.\n   * @param lValue The l-value to check.\n   * @return Whether the l-value is qualified", "entropy": 0.59228515625, "is_bug_line": false, "sus_score": 0.027460923447734174, "per_token_entropy": [0.164306640625, 0.70361328125, 0.20751953125, 0.00011026859283447266, 0.0009565353393554688, 0.1243896484375, 0.00893402099609375, 0.019744873046875, 0.0029296875, 0.419677734375, 0.19482421875, 0.830078125, 0.0001976490020751953, 3.58203125, 0.765625, 0.42529296875, 0.3408203125, 2.251953125, 0.1158447265625, 0.00302886962890625, 0.9111328125, 1.2861328125, 1.8720703125, 1.2041015625, 1.64453125, 3.2734375, 0.2030029296875, 0.66796875, 0.31494140625, 0.52978515625, 1.69921875, 0.7890625, 0.3447265625, 0.1348876953125, 0.5478515625, 0.6982421875, 0.048675537109375, 0.0010919570922851562, 0.94677734375, 0.166259765625, 0.30078125, 0.0134429931640625, 0.28125, 0.006511688232421875, 0.1983642578125, 0.428466796875, 0.37060546875, 0.368408203125, 0.02301025390625, 0.0021209716796875, 0.07958984375, 1.279296875], "tokens": [284, 442, 456, 882, 32, 7069, 473, 334, 320, 719, 1022, 664, 319, 3456, 415, 322, 2702, 456, 31, 853, 438, 312, 2804, 432, 312, 16793, 636, 32, 664, 319, 477, 753, 456, 882, 886, 456, 31, 853, 372, 1505, 32, 664, 319, 477, 601, 14071, 322, 456, 31, 853, 438, 16793]}
{"line_number": 1760, "line_type": "original", "code": "    if (info == null) {", "entropy": 1.6826171875, "is_bug_line": false, "sus_score": 0.027460923447734174, "per_token_entropy": [4.5546875, 1.384765625, 0.058013916015625, 6.203125, 0.474365234375, 0.002048492431640625, 0.779296875, 0.00839996337890625], "tokens": [264, 415, 308, 1338, 610, 744, 27, 301]}
{"line_number": 1760, "line_type": "generated", "code": "\n  }\n\n  /**\n   * Determines whether the given node is a function definition.\n   */\n  private static boolean isFunctionDefinition(Node n) {\n    if (n.isFunction()) {\n      return true;\n    }\n\n    // Functions can be declared as a", "entropy": 0.6875, "is_bug_line": false, "sus_score": 0.027460923447734174, "per_token_entropy": [0.63037109375, 0.0304107666015625, 0.5380859375, 0.2293701171875, 0.72021484375, 0.00018513202667236328, 3.25390625, 0.7001953125, 0.6162109375, 0.32275390625, 1.099609375, 0.68994140625, 0.74658203125, 1.994140625, 2.98828125, 1.107421875, 0.314453125, 0.78271484375, 0.007404327392578125, 0.31298828125, 0.2047119140625, 0.00814056396484375, 0.02587890625, 0.10247802734375, 0.1866455078125, 0.1591796875, 0.01279449462890625, 0.1114501953125, 0.0221099853515625, 0.00033164024353027344, 0.0187530517578125, 1.3974609375, 0.1380615234375, 0.319580078125, 0.29443359375, 1.0830078125, 0.0675048828125, 0.0033931732177734375, 0.0146331787109375, 0.5712890625, 0.0535888671875, 0.00010776519775390625, 0.0200653076171875, 0.0006051063537597656, 1.6689453125, 1.328125, 3.0546875, 1.8466796875, 0.83984375, 1.1650390625, 1.48828125, 2.453125], "tokens": [334, 320, 719, 1022, 664, 319, 34450, 4946, 322, 2702, 1541, 438, 312, 667, 5644, 32, 664, 569, 334, 945, 907, 1905, 438, 2447, 3373, 26, 1212, 310, 27, 301, 284, 415, 308, 96, 32, 39504, 1157, 301, 397, 442, 861, 45, 284, 320, 446, 434, 14749, 883, 526, 17103, 619, 312]}
{"line_number": 1774, "line_type": "original", "code": "    return info;", "entropy": 2.87890625, "is_bug_line": false, "sus_score": 0.027460923447734174, "per_token_entropy": [7.77734375, 2.466796875, 1.2509765625, 0.0166015625], "tokens": [264, 442, 3099, 45]}
{"line_number": 1774, "line_type": "generated", "code": "\n\n  /**\n   * Builds a scope object for the given node.\n   *\n   * @param n The node for which to build the scope.\n   * @param parent The parent scope.\n   * @param builder The builder to use for building the scope.", "entropy": 0.73388671875, "is_bug_line": false, "sus_score": 0.027460923447734174, "per_token_entropy": [0.81787109375, 0.204833984375, 0.6845703125, 0.00019347667694091797, 4.3828125, 0.6767578125, 1.947265625, 2.76171875, 1.37109375, 0.488037109375, 0.1759033203125, 1.4375, 0.50732421875, 0.509765625, 0.498291015625, 0.6416015625, 0.003002166748046875, 0.6181640625, 0.19091796875, 1.2490234375, 0.46240234375, 0.5078125, 1.4072265625, 0.04510498046875, 0.442626953125, 0.112060546875, 0.9501953125, 0.02984619140625, 0.28857421875, 0.061614990234375, 0.1673583984375, 0.0345458984375, 0.443359375, 0.54833984375, 1.1181640625, 0.55859375, 0.285400390625, 1.4033203125, 0.10699462890625, 0.18505859375, 0.016571044921875, 0.58740234375, 2.978515625, 0.396484375, 1.087890625, 1.1064453125, 0.1983642578125, 1.2509765625, 1.3876953125, 0.53857421875, 0.18603515625, 0.10089111328125], "tokens": [719, 1022, 664, 319, 37169, 312, 4576, 1300, 436, 322, 2702, 1541, 32, 664, 319, 664, 319, 477, 753, 310, 886, 1541, 436, 1510, 372, 1968, 322, 4576, 32, 664, 319, 477, 753, 2935, 886, 2935, 4576, 32, 664, 319, 477, 753, 4906, 886, 4906, 372, 793, 436, 9038, 322, 4576, 32]}
{"line_number": 1779, "line_type": "original", "code": "    Node parent = n.getParent();", "entropy": 1.1826171875, "is_bug_line": false, "sus_score": 0.027460923447734174, "per_token_entropy": [5.71875, 2.490234375, 1.10546875, 0.043060302734375, 0.08306884765625, 0.01015472412109375, 0.0017595291137695312, 0.006317138671875], "tokens": [264, 4004, 2935, 280, 310, 32, 18789, 473]}
{"line_number": 1779, "line_type": "generated", "code": "\n\n  /**\n   * Get the best JSDoc for the given node.\n   *\n   * @param n The node to get the JSDoc for.\n   * @return The JSDoc for the node, or null if none could be found.", "entropy": 0.5107421875, "is_bug_line": false, "sus_score": 0.027460923447734174, "per_token_entropy": [1.017578125, 0.20068359375, 0.7333984375, 0.00020384788513183594, 3.255859375, 0.2252197265625, 2.4609375, 1.7587890625, 0.001575469970703125, 8.130073547363281e-05, 0.9921875, 0.270751953125, 0.21337890625, 0.86474609375, 0.61181640625, 0.609375, 0.397216796875, 0.82666015625, 0.0023860931396484375, 0.93701171875, 0.317626953125, 0.31591796875, 0.59326171875, 0.11798095703125, 0.634765625, 0.57470703125, 0.3134765625, 0.3505859375, 0.0001704692840576172, 0.0002880096435546875, 0.12451171875, 0.2257080078125, 0.0220489501953125, 0.0777587890625, 0.0162811279296875, 0.291259765625, 0.1259765625, 1.515625, 0.00028395652770996094, 0.0002980232238769531, 0.62841796875, 0.1932373046875, 0.41552734375, 0.64453125, 0.29541015625, 0.263427734375, 0.1162109375, 0.83740234375, 2.1171875, 0.00154876708984375, 0.0242919921875, 0.0178680419921875], "tokens": [719, 1022, 664, 319, 1390, 322, 5273, 971, 3181, 542, 436, 322, 2702, 1541, 32, 664, 319, 664, 319, 477, 753, 310, 886, 1541, 372, 622, 322, 971, 3181, 542, 436, 32, 664, 319, 477, 601, 886, 971, 3181, 542, 436, 322, 1541, 30, 556, 744, 415, 4909, 3065, 526, 2431, 32]}
{"line_number": 1780, "line_type": "original", "code": "    int parentType = parent.getType();", "entropy": 1.2802734375, "is_bug_line": false, "sus_score": 0.027460923447734174, "per_token_entropy": [6.4609375, 4.8359375, 0.086669921875, 0.0026092529296875, 0.00997161865234375, 0.10211181640625, 0.01885986328125, 0.0005159378051757812, 0.003337860107421875], "tokens": [264, 629, 2935, 620, 280, 2935, 32, 10272, 473]}
{"line_number": 1780, "line_type": "generated", "code": "\n  /**\n   * Returns true if the given variable name is a special variable that is\n   * created by the compiler.\n   */\n  private static boolean isCompilerCreatedVariableName(String name) {\n    return name.startsWith(\"$\") &&!name.startsWith", "entropy": 0.73388671875, "is_bug_line": false, "sus_score": 0.027460923447734174, "per_token_entropy": [1.0048828125, 0.57470703125, 0.76513671875, 0.0003039836883544922, 2.560546875, 1.541015625, 0.1168212890625, 0.483154296875, 0.5615234375, 2.849609375, 1.341796875, 0.67822265625, 1.3671875, 2.423828125, 1.7880859375, 1.259765625, 1.7158203125, 0.7861328125, 0.00039076805114746094, 3.396484375, 0.64501953125, 0.48974609375, 0.2330322265625, 0.99853515625, 0.2279052734375, 0.1180419921875, 0.004032135009765625, 0.5166015625, 0.171630859375, 0.00988006591796875, 0.01203155517578125, 1.556640625, 2.130859375, 0.59375, 0.59765625, 0.02349853515625, 0.0221710205078125, 0.406982421875, 0.007289886474609375, 0.00034546852111816406, 0.009002685546875, 0.278564453125, 0.31591796875, 0.08624267578125, 0.2156982421875, 0.595703125, 1.0361328125, 0.2978515625, 0.97216796875, 0.2303466796875, 0.0007948875427246094, 0.1473388671875], "tokens": [334, 1022, 664, 319, 3759, 861, 415, 322, 2702, 2677, 636, 438, 312, 7456, 2677, 688, 438, 664, 319, 3272, 810, 322, 8980, 32, 664, 569, 334, 945, 907, 1905, 438, 8115, 6873, 3818, 558, 26, 652, 636, 27, 301, 284, 442, 636, 32, 13912, 18663, 657, 962, 653, 426, 32, 13912]}
{"line_number": 1781, "line_type": "original", "code": "    boolean isFunctionDeclaration = NodeUtil.isFunctionDeclaration(n);", "entropy": 1.0908203125, "is_bug_line": false, "sus_score": 0.027460923447734174, "per_token_entropy": [6.49609375, 4.06640625, 0.07281494140625, 0.1265869140625, 0.0029277801513671875, 0.46142578125, 3.203125, 0.001194000244140625, 0.009429931640625, 0.1910400390625, 0.02593994140625, 0.0030193328857421875, 0.576171875, 0.040557861328125], "tokens": [264, 1905, 438, 2447, 10367, 280, 4004, 1733, 32, 39504, 10367, 26, 96, 293]}
{"line_number": 1781, "line_type": "generated", "code": "\n  /**\n   * Get the type of the given l-value node.\n   * @param lValue The l-value node.\n   * @return The type of the l-value, or null if it could not be determined.\n   */\n  private", "entropy": 0.451416015625, "is_bug_line": false, "sus_score": 0.027460923447734174, "per_token_entropy": [0.921875, 0.56591796875, 0.92822265625, 0.0002999305725097656, 3.294921875, 0.195068359375, 2.013671875, 0.359375, 0.282470703125, 0.260009765625, 0.91455078125, 0.02703857421875, 0.0014095306396484375, 0.3349609375, 0.443603515625, 0.3046875, 0.486083984375, 1.220703125, 0.48583984375, 0.53466796875, 0.034149169921875, 0.55224609375, 0.609375, 0.0390625, 0.00106048583984375, 0.485107421875, 0.68017578125, 0.03485107421875, 0.187744140625, 0.0057220458984375, 0.50732421875, 0.08453369140625, 0.245361328125, 0.229736328125, 0.07220458984375, 0.417724609375, 0.01163482666015625, 0.0013780593872070312, 1.361328125, 0.1866455078125, 0.450439453125, 0.1201171875, 1.6474609375, 1.060546875, 0.0031223297119140625, 0.01306915283203125, 0.4541015625, 0.03656005859375, 0.0025463104248046875, 0.0119781494140625, 0.00905609130859375, 0.331787109375], "tokens": [334, 1022, 664, 319, 1390, 322, 827, 432, 322, 2702, 456, 31, 853, 1541, 32, 664, 319, 477, 753, 456, 882, 886, 456, 31, 853, 1541, 32, 664, 319, 477, 601, 886, 827, 432, 322, 456, 31, 853, 30, 556, 744, 415, 561, 3065, 646, 526, 19829, 32, 664, 569, 334, 945]}
{"line_number": 1782, "line_type": "original", "code": "    if (isFunctionDeclaration) {", "entropy": 1.4140625, "is_bug_line": false, "sus_score": 0.027460923447734174, "per_token_entropy": [5.8203125, 2.443359375, 0.093505859375, 1.380859375, 0.0045928955078125, 0.1280517578125, 0.0296478271484375], "tokens": [264, 415, 308, 39504, 10367, 27, 301]}
{"line_number": 1782, "line_type": "generated", "code": "\n\n  /**\n   * Find the best JSDoc for the given node.\n   * @param n The node to get the JSDoc for.\n   * @return The best JSDoc for the given node.\n   */\n  private JSDocInfo", "entropy": 0.455810546875, "is_bug_line": false, "sus_score": 0.027460923447734174, "per_token_entropy": [0.8974609375, 0.1905517578125, 0.76171875, 0.00018644332885742188, 3.234375, 0.297119140625, 1.072265625, 1.3427734375, 0.0006880760192871094, 6.747245788574219e-05, 0.59326171875, 0.1710205078125, 0.210693359375, 0.9130859375, 0.76806640625, 0.277099609375, 0.54931640625, 1.2607421875, 0.38818359375, 0.460693359375, 0.642578125, 0.1282958984375, 0.55908203125, 1.73046875, 0.48974609375, 0.29150390625, 0.00017642974853515625, 0.00036787986755371094, 0.231689453125, 0.2327880859375, 0.01934814453125, 0.09881591796875, 0.0108642578125, 0.2958984375, 0.1683349609375, 0.52783203125, 0.061676025390625, 0.0001405477523803711, 0.00034165382385253906, 0.64208984375, 0.201904296875, 0.71337890625, 0.01116943359375, 0.52880859375, 0.11773681640625, 0.0171051025390625, 0.0090484619140625, 1.1474609375, 1.43359375, 3.314018249511719e-05, 2.384185791015625e-07, 0.00035953521728515625], "tokens": [719, 1022, 664, 319, 7477, 322, 5273, 971, 3181, 542, 436, 322, 2702, 1541, 32, 664, 319, 477, 753, 310, 886, 1541, 372, 622, 322, 971, 3181, 542, 436, 32, 664, 319, 477, 601, 886, 5273, 971, 3181, 542, 436, 322, 2702, 1541, 32, 664, 569, 334, 945, 971, 3181, 542, 1120]}
