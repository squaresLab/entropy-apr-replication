{"line_number": 1051, "line_type": "original", "code": "              appendHexJavaScriptRepresentation(sb, c);", "entropy": 2.271484375, "is_bug_line": false, "sus_score": 0.2182178902359924, "per_token_entropy": [10.0390625, 11.140625, 1.361328125, 0.003879547119140625, 0.01983642578125, 0.049560546875, 0.048797607421875, 0.005580902099609375, 0.0360107421875, 0.01178741455078125], "tokens": [2850, 5489, 10226, 14575, 16541, 26, 5682, 30, 281, 293]}
{"line_number": 1051, "line_type": "generated", "code": "\n    for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) {\n      if (c.getType()!= Token.EMPTY) {\n        return c;\n      }\n    }\n    return null;\n  }\n\n  /** Gets", "entropy": 0.094482421875, "is_bug_line": false, "sus_score": 0.2182178902359924, "per_token_entropy": [0.56005859375, 1.95703125, 0.09515380859375, 0.035003662109375, 0.04180908203125, 0.005191802978515625, 0.00339508056640625, 0.00138092041015625, 0.0018053054809570312, 6.401538848876953e-05, 0.0038852691650390625, 0.04205322265625, 0.0015058517456054688, 0.0005006790161132812, 0.0258636474609375, 0.005603790283203125, 0.0006823539733886719, 0.0019388198852539062, 0.0003590583801269531, 0.00020837783813476562, 0.00284576416015625, 0.0158843994140625, 0.035064697265625, 0.0970458984375, 0.007289886474609375, 0.002231597900390625, 0.0012378692626953125, 0.0015459060668945312, 0.0007538795471191406, 0.2227783203125, 0.003932952880859375, 7.927417755126953e-05, 0.0057525634765625, 0.044891357421875, 0.009124755859375, 0.01355743408203125, 0.00894927978515625, 0.00115966796875, 0.0009226799011230469, 0.0026874542236328125, 0.0008563995361328125, 0.0177154541015625, 0.00013399124145507812, 0.065185546875, 0.0377197265625, 0.03253173828125, 0.0004773139953613281, 0.015411376953125, 0.0010671615600585938, 0.241943359375, 0.35205078125, 0.8896484375], "tokens": [284, 436, 308, 1212, 281, 280, 310, 32, 25657, 2931, 473, 281, 863, 744, 45, 281, 280, 281, 32, 23017, 1157, 301, 397, 415, 308, 85, 32, 10272, 346, 863, 6512, 32, 13073, 27, 301, 291, 442, 281, 45, 397, 320, 284, 320, 284, 442, 744, 45, 334, 320, 719, 1022, 7124]}
{"line_number": 1160, "line_type": "original", "code": "      appendHexJavaScriptRepresentation(c, sb);", "entropy": 1.451171875, "is_bug_line": false, "sus_score": 0.2182178902359924, "per_token_entropy": [7.078125, 4.703125, 0.35400390625, 0.0006237030029296875, 0.01465606689453125, 0.0714111328125, 1.6953125, 0.1185302734375, 0.458251953125, 0.0215606689453125], "tokens": [647, 5489, 10226, 14575, 16541, 26, 85, 30, 6115, 293]}
{"line_number": 1160, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.2182178902359924, "per_token_entropy": [], "tokens": []}
{"line_number": 1164, "line_type": "original", "code": "    }", "entropy": 4.5390625, "is_bug_line": false, "sus_score": 0.2182178902359924, "per_token_entropy": [6.3671875, 2.7109375], "tokens": [264, 320]}
{"line_number": 1164, "line_type": "generated", "code": "\n  /**\n   * Returns a javascript representation of the character in a hex escaped\n   * format.\n   *\n   * @param c The character to append.\n   * @param out The buffer to which the hex representation should be appended.\n   */\n  private static", "entropy": 0.12078857421875, "is_bug_line": false, "sus_score": 0.2182178902359924, "per_token_entropy": [1.205078125, 0.4990234375, 0.1640625, 0.0006647109985351562, 1.4228515625, 0.25244140625, 0.277099609375, 0.052734375, 0.003131866455078125, 0.052581787109375, 0.7109375, 0.03363037109375, 0.017730712890625, 0.0135345458984375, 0.0007839202880859375, 0.00464630126953125, 4.57763671875e-05, 0.0011653900146484375, 0.022369384765625, 0.03985595703125, 0.03582763671875, 0.01145172119140625, 0.000965118408203125, 0.0206298828125, 0.0089874267578125, 0.423828125, 0.026092529296875, 0.451416015625, 0.01102447509765625, 0.085693359375, 0.015838623046875, 0.004322052001953125, 0.005584716796875, 0.0022487640380859375, 0.026519775390625, 0.24951171875, 0.001445770263671875, 0.0025386810302734375, 0.0003070831298828125, 0.0007195472717285156, 0.00025916099548339844, 0.00185394287109375, 0.0007519721984863281, 0.0007734298706054688, 0.00015819072723388672, 0.0009098052978515625, 0.00028777122497558594, 0.0009813308715820312, 0.03167724609375, 0.01526641845703125, 0.05908203125, 0.00855255126953125], "tokens": [334, 1022, 664, 319, 3759, 312, 18778, 10293, 432, 322, 5341, 328, 312, 9960, 31253, 664, 319, 2179, 32, 664, 319, 664, 319, 477, 753, 281, 886, 5341, 372, 5489, 32, 664, 319, 477, 753, 963, 886, 3112, 372, 1510, 322, 9960, 10293, 1395, 526, 22363, 32, 664, 569, 334, 945, 907]}
{"line_number": 1165, "line_type": "original", "code": "  }", "entropy": 2.673828125, "is_bug_line": false, "sus_score": 0.2182178902359924, "per_token_entropy": [4.046875, 1.30078125], "tokens": [225, 320]}
{"line_number": 1165, "line_type": "generated", "code": "\n\n  /**\n   * @see #appendJavaScriptString(String, Appendable)\n   */\n  private static void appendJavaScriptString(String s, Appendable out)\n      throws IOException {\n    out.append('\"');\n    for (int i = 0;", "entropy": 0.1993408203125, "is_bug_line": false, "sus_score": 0.2182178902359924, "per_token_entropy": [0.286865234375, 0.185546875, 0.1260986328125, 0.0004405975341796875, 1.9384765625, 0.07916259765625, 0.037628173828125, 0.1358642578125, 1.509765625, 0.10931396484375, 0.05169677734375, 0.1121826171875, 0.01271820068359375, 0.312255859375, 7.152557373046875e-06, 0.12432861328125, 0.004665374755859375, 0.0240325927734375, 0.00844573974609375, 0.0816650390625, 0.05218505859375, 0.040283203125, 0.001117706298828125, 0.00864410400390625, 0.0011339187622070312, 0.0035839080810546875, 0.432861328125, 0.299560546875, 0.0023040771484375, 0.85302734375, 4.76837158203125e-06, 0.20849609375, 0.004730224609375, 0.0635986328125, 9.191036224365234e-05, 0.00015795230865478516, 0.00469207763671875, 0.01198577880859375, 1.7880859375, 0.0009107589721679688, 0.0006213188171386719, 0.2042236328125, 0.26171875, 0.034210205078125, 0.60595703125, 0.0013494491577148438, 0.0179901123046875, 0.03546142578125, 0.0024471282958984375, 0.000591278076171875, 9.322166442871094e-05, 0.282958984375], "tokens": [719, 1022, 664, 319, 477, 2970, 588, 1689, 14575, 652, 26, 652, 30, 20593, 444, 27, 664, 569, 334, 945, 907, 763, 5489, 14575, 652, 26, 652, 309, 30, 20593, 444, 963, 27, 397, 2571, 6291, 301, 284, 963, 32, 1689, 33103, 895, 284, 436, 308, 410, 595, 280, 225, 34, 45]}
{"line_number": 1177, "line_type": "original", "code": "    if (Character.isSupplementaryCodePoint(codePoint)) {", "entropy": 0.66015625, "is_bug_line": false, "sus_score": 0.2182178902359924, "per_token_entropy": [4.33984375, 2.43359375, 0.241455078125, 2.28515625, 0.0008854866027832031, 0.12420654296875, 0.6865234375, 2.2649765014648438e-06, 6.318092346191406e-06, 0.00012302398681640625, 0.0011758804321289062, 0.003421783447265625, 0.320068359375, 0.013397216796875, 0.0611572265625, 0.054931640625], "tokens": [264, 415, 308, 6881, 32, 297, 33777, 727, 672, 1227, 1943, 26, 687, 1943, 490, 301]}
{"line_number": 1177, "line_type": "generated", "code": "\n  private static void appendHexJavaScriptRepresentation(\n      char c, Appendable out)\n      throws IOException {\n    int codePoint = c;\n    if (Character.isHighSurrogate(codePoint)) {\n      // This is a supplementary unicode value", "entropy": 0.31103515625, "is_bug_line": false, "sus_score": 0.2182178902359924, "per_token_entropy": [0.90283203125, 1.31640625, 0.1248779296875, 0.40576171875, 0.00955963134765625, 0.1353759765625, 0.0029163360595703125, 0.0024318695068359375, 0.00879669189453125, 0.466552734375, 0.040802001953125, 0.1268310546875, 0.0023059844970703125, 0.2047119140625, 4.0531158447265625e-06, 0.060333251953125, 0.00032401084899902344, 0.14892578125, 0.00020813941955566406, 7.62939453125e-05, 0.0022125244140625, 0.132568359375, 1.2353515625, 0.60400390625, 0.032196044921875, 0.02716064453125, 0.54931640625, 0.0579833984375, 0.1300048828125, 0.65478515625, 0.18310546875, 1.0390625, 0.00049591064453125, 0.0194244384765625, 1.0224609375, 5.316734313964844e-05, 2.872943878173828e-05, 0.004180908203125, 1.0439453125, 6.9141387939453125e-06, 0.3974609375, 0.0030879974365234375, 0.037261962890625, 0.59228515625, 2.0, 0.52490234375, 0.442626953125, 0.91845703125, 0.0011425018310546875, 0.01544952392578125, 0.334716796875, 0.2056884765625], "tokens": [334, 945, 907, 763, 5489, 10226, 14575, 16541, 26, 397, 1351, 281, 30, 20593, 444, 963, 27, 397, 2571, 6291, 301, 284, 629, 1340, 1943, 280, 281, 45, 284, 415, 308, 6881, 32, 297, 7554, 12335, 32062, 26, 687, 1943, 490, 301, 397, 434, 1348, 438, 312, 11066, 727, 672, 15390, 786]}
{"line_number": 1187, "line_type": "original", "code": "    out.append(\"\\\\u\")", "entropy": 1.4638671875, "is_bug_line": false, "sus_score": 0.2182178902359924, "per_token_entropy": [4.55859375, 3.37109375, 0.0176239013671875, 0.01727294921875, 1.2587890625, 0.2237548828125, 0.80029296875], "tokens": [264, 963, 32, 1689, 22899, 103, 657]}
{"line_number": 1187, "line_type": "generated", "code": "\n\n  /**\n   * @see #appendHexJavaScriptRepresentation(int, Appendable)\n   */\n  private static void appendHexJavaScriptRepresentation(char c, Appendable out)\n      throws IOException {\n    out.append(\"\\\\u\")\n       .append(HEX_", "entropy": 0.2318115234375, "is_bug_line": false, "sus_score": 0.2182178902359924, "per_token_entropy": [1.291015625, 0.2412109375, 0.1502685546875, 0.0005879402160644531, 1.6728515625, 0.10833740234375, 0.040313720703125, 0.166259765625, 1.13671875, 0.017486572265625, 0.2822265625, 0.06390380859375, 0.1580810546875, 0.03765869140625, 0.1258544921875, 3.2901763916015625e-05, 0.0122528076171875, 0.004276275634765625, 0.024017333984375, 0.00690460205078125, 0.043212890625, 0.053192138671875, 0.1536865234375, 0.0016527175903320312, 0.08868408203125, 0.005374908447265625, 0.02313232421875, 0.0187835693359375, 1.54296875, 0.52099609375, 0.19775390625, 0.79345703125, 2.9802322387695312e-06, 0.135009765625, 0.00044083595275878906, 0.0274505615234375, 0.00013053417205810547, 0.00017654895782470703, 0.0029010772705078125, 0.060516357421875, 1.4853515625, 0.02130126953125, 0.0026645660400390625, 0.496826171875, 0.1749267578125, 0.33837890625, 0.2900390625, 0.00490570068359375, 4.267692565917969e-05, 0.0025920867919921875, 0.0275726318359375, 0.00012505054473876953], "tokens": [719, 1022, 664, 319, 477, 2970, 588, 1689, 10226, 14575, 16541, 26, 410, 30, 20593, 444, 27, 664, 569, 334, 945, 907, 763, 5489, 10226, 14575, 16541, 26, 1594, 281, 30, 20593, 444, 963, 27, 397, 2571, 6291, 301, 284, 963, 32, 1689, 22899, 103, 657, 291, 638, 1689, 26, 25902, 81]}
{"line_number": 1192, "line_type": "original", "code": "  }", "entropy": 3.09375, "is_bug_line": false, "sus_score": 0.2182178902359924, "per_token_entropy": [4.65625, 1.5302734375], "tokens": [225, 320]}
{"line_number": 1192, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.2182178902359924, "per_token_entropy": [], "tokens": []}
{"line_number": 205, "line_type": "original", "code": "        add(\"[\");", "entropy": 3.216796875, "is_bug_line": false, "sus_score": 0.10127393670836667, "per_token_entropy": [7.2421875, 1.28515625, 4.20703125, 0.13623046875], "tokens": [351, 1015, 9670, 724]}
{"line_number": 205, "line_type": "generated", "code": "\n        Preconditions.checkState(childCount == 3);\n        addExpr(first, NodeUtil.precedence(Token.HOOK));\n        cc.addOp(\":\", false);\n        addExpr(n.getLastChild(), NodeUtil.precedence(", "entropy": 0.1326904296875, "is_bug_line": false, "sus_score": 0.10127393670836667, "per_token_entropy": [0.053802490234375, 0.70947265625, 0.00021088123321533203, 0.0001569986343383789, 0.00531005859375, 0.0023822784423828125, 0.0258636474609375, 2.9802322387695312e-05, 0.01262664794921875, 0.0005283355712890625, 0.13671875, 0.033050537109375, 0.315185546875, 0.7099609375, 0.202392578125, 0.01326751708984375, 0.2425537109375, 0.01019287109375, 0.2646484375, 1.239776611328125e-05, 5.602836608886719e-06, 0.003875732421875, 9.5367431640625e-07, 0.0020427703857421875, 0.26416015625, 0.0001348257064819336, 0.005779266357421875, 0.4501953125, 0.0697021484375, 0.45556640625, 0.00011277198791503906, 0.05133056640625, 0.0604248046875, 0.08172607421875, 0.55859375, 0.57666015625, 0.00997161865234375, 0.07806396484375, 0.25732421875, 0.10040283203125, 0.0074005126953125, 0.317626953125, 0.0004131793975830078, 0.372802734375, 0.0006222724914550781, 0.1502685546875, 0.281982421875, 1.9550323486328125e-05, 0.00011682510375976562, 0.0023822784423828125, 2.7418136596679688e-06, 0.0032711029052734375], "tokens": [291, 40596, 32, 1553, 1078, 26, 2661, 1534, 610, 225, 37, 293, 291, 1015, 6150, 26, 2232, 30, 4004, 1733, 32, 1001, 39939, 26, 1763, 32, 29243, 876, 291, 10639, 32, 669, 3397, 440, 9318, 901, 293, 291, 1015, 6150, 26, 96, 32, 20197, 2931, 1026, 4004, 1733, 32, 1001, 39939, 26]}
{"line_number": 206, "line_type": "original", "code": "        addArrayList(first);", "entropy": 4.16796875, "is_bug_line": false, "sus_score": 0.10127393670836667, "per_token_entropy": [7.359375, 1.205078125, 14.1015625, 0.1041259765625, 1.1064453125, 1.1396484375], "tokens": [351, 1015, 7110, 26, 2232, 293]}
{"line_number": 206, "line_type": "generated", "code": "\n        break;\n      }\n\n      case Token.STRING:\n        Preconditions.checkState(childCount == 0);\n        cc.addString(n.getString());\n        break;\n\n      case Token.INC:\n      case Token.DEC:\n        Preconditions.check", "entropy": 0.146484375, "is_bug_line": false, "sus_score": 0.10127393670836667, "per_token_entropy": [0.1561279296875, 0.67626953125, 0.0001245737075805664, 0.002880096435546875, 0.00019180774688720703, 0.0268096923828125, 0.06292724609375, 0.0005350112915039062, 2.6226043701171875e-06, 1.7900390625, 0.08709716796875, 0.1424560546875, 0.50732421875, 3.707408905029297e-05, 5.1021575927734375e-05, 0.0003180503845214844, 0.006862640380859375, 0.00946044921875, 5.7220458984375e-06, 0.0007047653198242188, 0.00011718273162841797, 0.0010662078857421875, 0.005523681640625, 0.044219970703125, 0.1922607421875, 6.186962127685547e-05, 0.0029430389404296875, 0.0701904296875, 0.0139923095703125, 0.1622314453125, 0.00690460205078125, 0.0012655258178710938, 0.049560546875, 0.005695343017578125, 0.0052032470703125, 6.937980651855469e-05, 0.014984130859375, 0.069091796875, 0.0007686614990234375, 8.58306884765625e-06, 1.5556640625, 0.008087158203125, 0.1966552734375, 0.00023758411407470703, 3.516674041748047e-05, 4.887580871582031e-06, 0.00102996826171875, 0.0002646446228027344, 1.0869140625, 0.650390625, 6.818771362304688e-05, 0.00017726421356201172], "tokens": [291, 1626, 45, 397, 320, 1687, 1135, 6512, 32, 5203, 44, 291, 40596, 32, 1553, 1078, 26, 2661, 1534, 610, 225, 34, 293, 291, 10639, 32, 669, 652, 26, 96, 32, 7069, 1035, 291, 1626, 45, 1687, 1135, 6512, 32, 16177, 44, 397, 1135, 6512, 32, 14221, 44, 291, 40596, 32, 1553]}
{"line_number": 207, "line_type": "original", "code": "        add(\"]\");", "entropy": 4.7421875, "is_bug_line": false, "sus_score": 0.10127393670836667, "per_token_entropy": [5.48046875, 1.708984375, 4.0390625, 7.734375], "tokens": [351, 1015, 440, 28915]}
{"line_number": 207, "line_type": "generated", "code": "\n        break;\n      }\n\n      case Token.STRING:\n        Preconditions.checkState(childCount == 0);\n        cc.addString(n.getString());\n        break;\n\n      case Token.TRUE:\n      case Token.FALSE:\n        Preconditions.check", "entropy": 0.1641845703125, "is_bug_line": false, "sus_score": 0.10127393670836667, "per_token_entropy": [0.2275390625, 0.257080078125, 0.00011444091796875, 0.002651214599609375, 0.00023221969604492188, 0.03240966796875, 0.07781982421875, 0.0004730224609375, 4.172325134277344e-06, 1.9091796875, 0.07000732421875, 0.1495361328125, 0.552734375, 0.00011479854583740234, 5.805492401123047e-05, 0.00024962425231933594, 0.00646209716796875, 0.00821685791015625, 7.152557373046875e-06, 0.0008840560913085938, 0.00011658668518066406, 0.0010662078857421875, 0.006191253662109375, 0.03826904296875, 0.19384765625, 5.459785461425781e-05, 0.0023784637451171875, 0.05560302734375, 0.01290130615234375, 0.154296875, 0.005603790283203125, 0.0011072158813476562, 0.04400634765625, 0.0057830810546875, 0.004535675048828125, 2.5272369384765625e-05, 0.0158538818359375, 0.05853271484375, 0.0007014274597167969, 8.106231689453125e-06, 2.828125, 0.0003809928894042969, 0.80224609375, 0.00016570091247558594, 1.8596649169921875e-05, 6.449222564697266e-05, 0.004199981689453125, 3.921985626220703e-05, 0.62451171875, 0.38134765625, 7.450580596923828e-05, 5.984306335449219e-05], "tokens": [291, 1626, 45, 397, 320, 1687, 1135, 6512, 32, 5203, 44, 291, 40596, 32, 1553, 1078, 26, 2661, 1534, 610, 225, 34, 293, 291, 10639, 32, 669, 652, 26, 96, 32, 7069, 1035, 291, 1626, 45, 1687, 1135, 6512, 32, 6373, 44, 397, 1135, 6512, 32, 7347, 44, 291, 40596, 32, 1553]}
{"line_number": 208, "line_type": "original", "code": "        break;", "entropy": 3.185546875, "is_bug_line": false, "sus_score": 0.10127393670836667, "per_token_entropy": [4.98828125, 4.5625, 0.00592803955078125], "tokens": [351, 1626, 45]}
{"line_number": 208, "line_type": "generated", "code": "\n        add(\"? \");\n        addExpr(n.getChildAtIndex(1), p);", "entropy": 0.259765625, "is_bug_line": false, "sus_score": 0.10127393670836667, "per_token_entropy": [0.33203125, 1.15234375, 0.4111328125, 0.214599609375, 0.0267486572265625, 0.1407470703125, 0.0760498046875, 0.26806640625, 0.00760650634765625, 0.3740234375, 0.00042366981506347656, 0.69873046875, 0.4150390625, 0.00061798095703125, 0.139892578125, 0.01146697998046875, 0.1649169921875, 0.2423095703125], "tokens": [291, 1015, 440, 1018, 7170, 291, 1015, 6150, 26, 96, 32, 24213, 29948, 26, 35, 471, 298, 293]}
{"line_number": 912, "line_type": "original", "code": "    boolean lastWasEmpty = false;", "entropy": 2.779296875, "is_bug_line": false, "sus_score": 0.10127393670836667, "per_token_entropy": [2.310546875, 7.875, 5.39453125, 0.224365234375, 5.9921875, 0.2037353515625, 0.2142333984375, 0.022491455078125], "tokens": [264, 1905, 2401, 22434, 2766, 280, 901, 45]}
{"line_number": 912, "line_type": "generated", "code": "\n    }\n    return quote + CodeGenerator.escapeString(s, quote, doublequote,\n        singlequote, outputCharsetEncoder) + quote;\n  }\n\n  static String jsString(String s) {\n    return jsString(s, CharsetEncoder.", "entropy": 0.34619140625, "is_bug_line": false, "sus_score": 0.10127393670836667, "per_token_entropy": [0.1995849609375, 0.004772186279296875, 1.47265625, 0.55908203125, 0.366943359375, 0.0595703125, 2.43359375, 0.50634765625, 0.025787353515625, 0.5283203125, 1.037109375, 0.0175323486328125, 0.0462646484375, 0.0179443359375, 0.673828125, 0.05718994140625, 0.5302734375, 0.0007128715515136719, 0.00206756591796875, 1.3193359375, 0.0255889892578125, 0.0001062154769897461, 0.02978515625, 0.110107421875, 5.805492401123047e-05, 9.417533874511719e-05, 0.033843994140625, 0.01491546630859375, 0.002384185791015625, 0.0029239654541015625, 0.039337158203125, 0.0009322166442871094, 0.346923828125, 1.80078125, 0.2802734375, 0.9189453125, 1.376953125, 0.107666015625, 0.041534423828125, 0.0143890380859375, 0.08001708984375, 0.0013761520385742188, 0.0958251953125, 0.224853515625, 0.045257568359375, 0.0002994537353515625, 0.0007967948913574219, 0.0029392242431640625, 0.0035648345947265625, 1.6044921875, 0.8369140625, 0.09259033203125], "tokens": [284, 320, 284, 442, 15358, 474, 4402, 4815, 32, 11731, 652, 26, 101, 30, 15358, 30, 2064, 7345, 30, 291, 3982, 7345, 30, 1688, 26082, 8770, 27, 474, 15358, 45, 334, 320, 719, 907, 892, 4060, 652, 26, 652, 309, 27, 301, 284, 442, 4060, 652, 26, 101, 30, 47048, 8770, 32]}
{"line_number": 913, "line_type": "original", "code": "    for (Node n = firstInList; n != null; n = n.getNext()) {", "entropy": 0.71240234375, "is_bug_line": false, "sus_score": 0.10127393670836667, "per_token_entropy": [3.0390625, 4.0546875, 0.0234832763671875, 5.41015625, 1.4150390625, 0.06866455078125, 0.427490234375, 0.305419921875, 0.09429931640625, 0.01715087890625, 0.0245819091796875, 0.006038665771484375, 0.0017328262329101562, 0.01163482666015625, 0.0194244384765625, 0.0013904571533203125, 0.004756927490234375, 7.37905502319336e-05, 0.005329132080078125, 0.00740814208984375, 0.0240478515625], "tokens": [264, 436, 308, 1212, 310, 280, 1932, 383, 720, 45, 310, 863, 744, 45, 310, 280, 310, 32, 23017, 1157, 301]}
{"line_number": 913, "line_type": "generated", "code": "\n    return quote + s.replaceAll(doublequote, doublequote + doublequote)\n       .replaceAll(singlequote, singlequote + singlequote) + quote;\n  }\n\n  /**\n   * Adds a string, taking into account the output character set.\n  ", "entropy": 0.5107421875, "is_bug_line": false, "sus_score": 0.10127393670836667, "per_token_entropy": [0.440673828125, 1.0517578125, 0.6806640625, 0.07415771484375, 0.84130859375, 0.09564208984375, 0.5732421875, 0.380615234375, 0.84716796875, 0.0001857280731201172, 0.004787445068359375, 0.31689453125, 0.0012769699096679688, 0.1597900390625, 0.08575439453125, 5.3763389587402344e-05, 0.1087646484375, 1.1689453125, 0.023040771484375, 0.025970458984375, 0.01436614990234375, 0.08355712890625, 0.00013148784637451172, 0.00039958953857421875, 0.08038330078125, 0.00024306774139404297, 0.00307464599609375, 0.0047607421875, 0.0001544952392578125, 0.01947021484375, 0.2464599609375, 0.00679779052734375, 0.0089263916015625, 0.04931640625, 0.0015048980712890625, 0.3330078125, 0.830078125, 0.61279296875, 0.0005812644958496094, 3.900390625, 0.5654296875, 0.97412109375, 2.630859375, 1.818359375, 0.86962890625, 0.08953857421875, 1.2138671875, 1.5126953125, 2.224609375, 0.232666015625, 0.88134765625, 0.479248046875], "tokens": [284, 442, 15358, 474, 309, 32, 23358, 26, 2627, 7345, 30, 2064, 7345, 474, 2064, 7345, 27, 291, 638, 23358, 26, 6270, 7345, 30, 3982, 7345, 474, 3982, 7345, 27, 474, 15358, 45, 334, 320, 719, 1022, 664, 319, 15450, 312, 802, 30, 15137, 1991, 3497, 322, 1688, 5341, 739, 32, 664]}
{"line_number": 921, "line_type": "original", "code": "    if (lastWasEmpty) {", "entropy": 1.537109375, "is_bug_line": false, "sus_score": 0.10127393670836667, "per_token_entropy": [4.03515625, 2.91796875, 0.17578125, 4.5234375, 0.294677734375, 0.2041015625, 0.0802001953125, 0.06903076171875], "tokens": [264, 415, 308, 2135, 22434, 2766, 27, 301]}
{"line_number": 921, "line_type": "generated", "code": "\n  }\n\n  /**\n   * Escapes a string with the specified quote character.\n   * @param s The string to escape.\n   * @param quote The quote character to use for escaping.\n   * @param doublequote The quote character to use", "entropy": 0.431884765625, "is_bug_line": false, "sus_score": 0.10127393670836667, "per_token_entropy": [0.380126953125, 0.052825927734375, 0.12005615234375, 0.30908203125, 1.1455078125, 0.0006570816040039062, 0.6328125, 0.1600341796875, 0.0077056884765625, 0.6455078125, 0.18505859375, 2.482421875, 1.173828125, 1.056640625, 0.68408203125, 0.48046875, 1.072265625, 0.537109375, 0.2015380859375, 1.05859375, 0.04815673828125, 0.5712890625, 0.5087890625, 0.173583984375, 0.1405029296875, 0.2724609375, 0.56884765625, 0.03521728515625, 0.0026798248291015625, 0.0012111663818359375, 0.00315093994140625, 0.170166015625, 0.2220458984375, 0.2454833984375, 0.09271240234375, 0.73876953125, 0.5048828125, 1.466796875, 0.46044921875, 0.0195770263671875, 0.319091796875, 0.09136962890625, 0.033660888671875, 0.00731658935546875, 0.0243682861328125, 0.220947265625, 0.0278778076171875, 0.326171875, 2.169921875, 0.1658935546875, 0.29248046875, 0.14453125], "tokens": [334, 320, 719, 1022, 664, 319, 516, 545, 10247, 312, 802, 623, 322, 3191, 15358, 5341, 32, 664, 319, 477, 753, 309, 886, 802, 372, 15820, 32, 664, 319, 477, 753, 15358, 886, 15358, 5341, 372, 793, 436, 40777, 299, 32, 664, 319, 477, 753, 2064, 7345, 886, 15358, 5341, 372, 793]}
{"line_number": 924, "line_type": "original", "code": "  }", "entropy": 2.65234375, "is_bug_line": false, "sus_score": 0.10127393670836667, "per_token_entropy": [2.40625, 2.900390625], "tokens": [225, 320]}
{"line_number": 924, "line_type": "generated", "code": "\n   * Escapes a string\n   * @param s The string to escape\n   * @param quote The character used for the quote\n   * @param doublequote The string used for escaping double quotes\n   * @param singlequote The string used for escap", "entropy": 0.46044921875, "is_bug_line": false, "sus_score": 0.10127393670836667, "per_token_entropy": [1.0546875, 0.52587890625, 0.9375, 0.09539794921875, 0.007572174072265625, 0.71484375, 0.174072265625, 2.611328125, 0.4130859375, 0.54736328125, 0.03167724609375, 0.5107421875, 0.64013671875, 0.1617431640625, 0.1708984375, 0.2120361328125, 0.2196044921875, 0.0035533905029296875, 0.0011529922485351562, 0.01418304443359375, 0.44189453125, 0.265625, 1.4697265625, 1.5146484375, 1.3701171875, 1.671875, 1.4140625, 0.7763671875, 0.00507354736328125, 0.0029449462890625, 0.00797271728515625, 0.2169189453125, 0.0275726318359375, 0.263427734375, 0.908203125, 0.64599609375, 0.49560546875, 1.5615234375, 0.00849151611328125, 0.955078125, 0.6533203125, 0.150634765625, 0.0006375312805175781, 0.0035190582275390625, 0.0017118453979492188, 0.01161956787109375, 0.002658843994140625, 0.00872802734375, 0.0037975311279296875, 0.00643157958984375, 0.0032939910888671875, 0.01493072509765625], "tokens": [664, 319, 516, 545, 10247, 312, 802, 664, 319, 477, 753, 309, 886, 802, 372, 15820, 664, 319, 477, 753, 15358, 886, 5341, 1654, 436, 322, 15358, 664, 319, 477, 753, 2064, 7345, 886, 802, 1654, 436, 40777, 299, 2064, 22002, 664, 319, 477, 753, 3982, 7345, 886, 802, 1654, 436, 40777]}
{"line_number": 471, "line_type": "original", "code": "        Preconditions.checkState(", "entropy": 1.5048828125, "is_bug_line": false, "sus_score": 0.07362101738323103, "per_token_entropy": [3.7734375, 5.2265625, 0.0022716522216796875, 0.0025539398193359375, 0.01293182373046875, 0.01275634765625], "tokens": [351, 40596, 32, 1553, 1078, 26]}
{"line_number": 471, "line_type": "generated", "code": "\n        } else {\n          addExpr(first, NodeUtil.precedence(type));\n        }\n        add(\"(\");\n        if (childCount > 1) {\n          add(first.getNext());\n          for (Node child = first.getNext().", "entropy": 0.2498779296875, "is_bug_line": false, "sus_score": 0.07362101738323103, "per_token_entropy": [0.9755859375, 0.1217041015625, 0.021697998046875, 0.1995849609375, 0.09637451171875, 0.234619140625, 0.66162109375, 0.006916046142578125, 0.01050567626953125, 0.0008969306945800781, 0.01739501953125, 0.0024547576904296875, 1.2874603271484375e-05, 0.003070831298828125, 0.00014889240264892578, 0.0022430419921875, 0.52587890625, 0.0186309814453125, 0.1849365234375, 0.00016582012176513672, 0.288818359375, 0.489501953125, 0.07757568359375, 0.0025196075439453125, 0.0010404586791992188, 0.2425537109375, 2.26953125, 0.12548828125, 0.6494140625, 0.0003559589385986328, 0.315673828125, 0.003528594970703125, 0.6005859375, 0.02410888671875, 0.00292205810546875, 0.048736572265625, 0.4951171875, 0.759765625, 0.36962890625, 0.004695892333984375, 0.0007929801940917969, 0.08245849609375, 0.69775390625, 0.5546875, 0.0021457672119140625, 0.292236328125, 1.427734375, 0.037200927734375, 0.033050537109375, 0.00025200843811035156, 0.0005965232849121094, 0.006038665771484375], "tokens": [291, 320, 813, 301, 616, 1015, 6150, 26, 2232, 30, 4004, 1733, 32, 1001, 39939, 26, 681, 876, 291, 320, 291, 1015, 440, 440, 293, 291, 415, 308, 2661, 1534, 848, 225, 35, 27, 301, 616, 1015, 26, 2232, 32, 23017, 1035, 616, 436, 308, 1212, 2838, 280, 1932, 32, 23017, 922]}
{"line_number": 474, "line_type": "original", "code": "        addLeftExpr(first, NodeUtil.precedence(type), context);", "entropy": 0.86669921875, "is_bug_line": false, "sus_score": 0.07362101738323103, "per_token_entropy": [5.59765625, 0.5546875, 5.69921875, 1.9658203125, 0.10675048828125, 0.51416015625, 0.02935791015625, 0.06317138671875, 0.00098419189453125, 6.16312026977539e-05, 0.003955841064453125, 3.6954879760742188e-06, 0.0009245872497558594, 0.0694580078125, 0.054229736328125, 0.0667724609375, 0.00926971435546875], "tokens": [351, 1015, 3679, 6150, 26, 2232, 30, 4004, 1733, 32, 1001, 39939, 26, 681, 471, 1619, 293]}
{"line_number": 474, "line_type": "generated", "code": "\n        add(\"(\");\n        if (childCount > 1) {\n          add(first.getNext());\n        }\n        add(\")\");\n        break;\n\n      case Token.NEW:\n        Preconditions.checkState(childCount == 1);\n        add(\"", "entropy": 0.183837890625, "is_bug_line": false, "sus_score": 0.07362101738323103, "per_token_entropy": [0.0965576171875, 0.5537109375, 0.064697265625, 0.0037822723388671875, 0.002086639404296875, 0.147705078125, 2.017578125, 0.1156005859375, 0.6650390625, 0.0008592605590820312, 0.332275390625, 0.00716400146484375, 0.60498046875, 0.0304107666015625, 0.004024505615234375, 0.024566650390625, 0.50537109375, 0.7802734375, 0.48681640625, 0.0283966064453125, 0.00290679931640625, 0.173828125, 0.54443359375, 4.112720489501953e-05, 0.07415771484375, 0.380859375, 0.060333251953125, 0.01299285888671875, 0.03668212890625, 0.056671142578125, 0.00027680397033691406, 0.0293426513671875, 0.02423095703125, 0.00039315223693847656, 8.225440979003906e-06, 0.041717529296875, 0.003574371337890625, 0.1357421875, 0.5595703125, 8.022785186767578e-05, 6.020069122314453e-05, 0.0036144256591796875, 0.0016298294067382812, 0.1204833984375, 6.67572021484375e-06, 0.1959228515625, 0.0002923011779785156, 0.1842041015625, 0.09771728515625, 0.0538330078125, 0.25830078125, 0.0389404296875], "tokens": [291, 1015, 440, 440, 293, 291, 415, 308, 2661, 1534, 848, 225, 35, 27, 301, 616, 1015, 26, 2232, 32, 23017, 1035, 291, 320, 291, 1015, 440, 13372, 291, 1626, 45, 1687, 1135, 6512, 32, 11356, 44, 291, 40596, 32, 1553, 1078, 26, 2661, 1534, 610, 225, 35, 293, 291, 1015, 440]}
{"line_number": 475, "line_type": "original", "code": "        add(\"[\");", "entropy": 3.951171875, "is_bug_line": false, "sus_score": 0.07362101738323103, "per_token_entropy": [5.7421875, 0.92578125, 8.7734375, 0.364990234375], "tokens": [351, 1015, 9670, 724]}
{"line_number": 475, "line_type": "generated", "code": "\n        if (childCount > 0) {\n          add(first.getNext());\n          add(\")\");\n        }\n        break;\n\n      case Token.NEW:\n        Preconditions.checkState(childCount == 1);\n        add(\"new \");\n        addExpr", "entropy": 0.2335205078125, "is_bug_line": false, "sus_score": 0.07362101738323103, "per_token_entropy": [0.0712890625, 1.828125, 0.1041259765625, 0.83935546875, 0.000988006591796875, 0.38525390625, 0.00634765625, 1.150390625, 0.043548583984375, 0.0052337646484375, 0.018035888671875, 0.452392578125, 0.83642578125, 0.2420654296875, 0.011932373046875, 0.0021266937255859375, 0.04327392578125, 1.005859375, 0.9287109375, 0.8876953125, 0.1881103515625, 0.08416748046875, 5.6743621826171875e-05, 0.43017578125, 0.0477294921875, 0.0002639293670654297, 0.0236053466796875, 0.0252838134765625, 0.0004048347473144531, 8.344650268554688e-06, 0.045196533203125, 0.0030918121337890625, 0.13037109375, 0.57421875, 6.890296936035156e-05, 5.7697296142578125e-05, 0.0033931732177734375, 0.0015869140625, 0.12127685546875, 5.0067901611328125e-06, 0.262939453125, 0.0001271963119506836, 0.10406494140625, 0.0936279296875, 0.0220184326171875, 0.2607421875, 0.0411376953125, 0.0026378631591796875, 0.046295166015625, 0.0117340087890625, 0.0833740234375, 0.669921875], "tokens": [291, 415, 308, 2661, 1534, 848, 225, 34, 27, 301, 616, 1015, 26, 2232, 32, 23017, 1035, 616, 1015, 440, 13372, 291, 320, 291, 1626, 45, 1687, 1135, 6512, 32, 11356, 44, 291, 40596, 32, 1553, 1078, 26, 2661, 1534, 610, 225, 35, 293, 291, 1015, 440, 890, 7170, 291, 1015, 6150]}
{"line_number": 476, "line_type": "original", "code": "        add(first.getNext());", "entropy": 2.32421875, "is_bug_line": false, "sus_score": 0.07362101738323103, "per_token_entropy": [6.77734375, 0.371337890625, 4.36328125, 3.353515625, 0.074462890625, 0.419677734375, 0.90576171875], "tokens": [351, 1015, 26, 2232, 32, 23017, 1035]}
{"line_number": 476, "line_type": "generated", "code": "\n        add(\")\");\n        break;\n\n      case Token.NEW:\n        Preconditions.checkState(childCount == 1);\n        add(\"new \");\n        addExpr(first, NodeUtil.precedence(type));\n        break;\n\n      case Token.TYPE", "entropy": 0.07672119140625, "is_bug_line": false, "sus_score": 0.07362101738323103, "per_token_entropy": [0.04364013671875, 0.1849365234375, 0.018402099609375, 0.01282501220703125, 0.0223388671875, 0.05126953125, 0.00010478496551513672, 0.0203094482421875, 0.0224456787109375, 0.0003559589385986328, 5.245208740234375e-06, 0.042724609375, 0.003459930419921875, 0.11102294921875, 0.619140625, 5.5909156799316406e-05, 5.8531761169433594e-05, 0.0038604736328125, 0.001453399658203125, 0.12078857421875, 1.4662742614746094e-05, 0.12396240234375, 0.00013005733489990234, 0.1776123046875, 0.103515625, 0.02227783203125, 0.2293701171875, 0.0305633544921875, 0.0023193359375, 0.042266845703125, 0.01416778564453125, 0.08514404296875, 0.609375, 0.00823211669921875, 0.0124969482421875, 0.01971435546875, 0.03558349609375, 0.00017142295837402344, 7.271766662597656e-06, 0.001468658447265625, 4.76837158203125e-07, 0.001529693603515625, 0.187744140625, 0.0684814453125, 0.0180816650390625, 0.052459716796875, 4.184246063232422e-05, 0.0123138427734375, 0.0220794677734375, 0.0004813671112060547, 5.0067901611328125e-06, 0.8271484375], "tokens": [291, 1015, 440, 13372, 291, 1626, 45, 1687, 1135, 6512, 32, 11356, 44, 291, 40596, 32, 1553, 1078, 26, 2661, 1534, 610, 225, 35, 293, 291, 1015, 440, 890, 7170, 291, 1015, 6150, 26, 2232, 30, 4004, 1733, 32, 1001, 39939, 26, 681, 876, 291, 1626, 45, 1687, 1135, 6512, 32, 2319]}
{"line_number": 477, "line_type": "original", "code": "        add(\"]\");", "entropy": 4.875, "is_bug_line": false, "sus_score": 0.07362101738323103, "per_token_entropy": [7.40625, 4.3359375, 3.462890625, 4.296875], "tokens": [351, 1015, 440, 28915]}
{"line_number": 477, "line_type": "generated", "code": "\n        break;\n\n      case Token.NEW:\n        Preconditions.checkState(childCount == 1);\n        add(\"new \");\n        addExpr(first, NodeUtil.precedence(type));", "entropy": 0.07470703125, "is_bug_line": false, "sus_score": 0.07362101738323103, "per_token_entropy": [0.047027587890625, 0.028411865234375, 0.0002961158752441406, 0.031036376953125, 0.029937744140625, 0.00037026405334472656, 6.67572021484375e-06, 0.05047607421875, 0.003520965576171875, 0.1048583984375, 0.6064453125, 5.8770179748535156e-05, 5.9723854064941406e-05, 0.004241943359375, 0.001354217529296875, 0.10711669921875, 7.3909759521484375e-06, 0.1385498046875, 0.00011944770812988281, 0.235595703125, 0.10174560546875, 0.0183258056640625, 0.2235107421875, 0.03070068359375, 0.0023956298828125, 0.0457763671875, 0.00962066650390625, 0.08642578125, 0.72900390625, 0.00870513916015625, 0.0104522705078125, 0.037689208984375, 0.037811279296875, 0.0002689361572265625, 6.794929504394531e-06, 0.0015783309936523438, 5.960464477539062e-07, 0.0016336441040039062, 0.18505859375, 0.06866455078125], "tokens": [291, 1626, 45, 1687, 1135, 6512, 32, 11356, 44, 291, 40596, 32, 1553, 1078, 26, 2661, 1534, 610, 225, 35, 293, 291, 1015, 440, 890, 7170, 291, 1015, 6150, 26, 2232, 30, 4004, 1733, 32, 1001, 39939, 26, 681, 876]}
{"line_number": 478, "line_type": "original", "code": "        break;", "entropy": 3.427734375, "is_bug_line": false, "sus_score": 0.07362101738323103, "per_token_entropy": [7.9453125, 2.33203125, 0.0038661956787109375], "tokens": [351, 1626, 45]}
{"line_number": 478, "line_type": "generated", "code": "\n\n      case Token.NEW:\n        Preconditions.checkState(childCount == 1);\n        add(\"new \");\n        add(first);\n        add(\"(\");\n        addList(first.getNext());\n        add(\")\");\n        break;\n\n      case Token.", "entropy": 0.08953857421875, "is_bug_line": false, "sus_score": 0.07362101738323103, "per_token_entropy": [0.16162109375, 0.083251953125, 0.0005688667297363281, 2.0503997802734375e-05, 0.2373046875, 0.00811004638671875, 0.1282958984375, 0.70703125, 6.079673767089844e-05, 6.437301635742188e-05, 0.004795074462890625, 0.0019817352294921875, 0.107666015625, 9.179115295410156e-06, 0.1429443359375, 0.00019884109497070312, 0.3154296875, 0.12371826171875, 0.0187530517578125, 0.271728515625, 0.03131103515625, 0.002628326416015625, 0.055938720703125, 0.0081024169921875, 0.09979248046875, 0.7880859375, 0.023223876953125, 0.03375244140625, 0.01154327392578125, 0.5126953125, 0.043731689453125, 0.40576171875, 0.0003464221954345703, 0.0030384063720703125, 0.043487548828125, 0.045074462890625, 0.007595062255859375, 0.06048583984375, 0.0008497238159179688, 0.002010345458984375, 0.0121307373046875, 0.0014219284057617188, 0.0027256011962890625, 0.00016379356384277344, 0.003955841064453125, 0.0159912109375, 0.0097503662109375, 0.0006847381591796875, 0.0889892578125, 0.0283966064453125, 0.00047087669372558594, 5.245208740234375e-06], "tokens": [1687, 1135, 6512, 32, 11356, 44, 291, 40596, 32, 1553, 1078, 26, 2661, 1534, 610, 225, 35, 293, 291, 1015, 440, 890, 7170, 291, 1015, 26, 2232, 293, 291, 1015, 440, 440, 293, 291, 1015, 720, 26, 2232, 32, 23017, 1035, 291, 1015, 440, 13372, 291, 1626, 45, 1687, 1135, 6512, 32]}
