{"line_number": 397, "line_type": "original", "code": "          argList.removeChild(lastArg);", "entropy": 3.4765625, "is_bug_line": false, "sus_score": 0.6488856845230502, "per_token_entropy": [8.1015625, 11.109375, 0.03765869140625, 0.01305389404296875, 0.16015625, 0.0006866455078125, 10.9375, 0.9033203125, 0.040252685546875], "tokens": [2033, 1638, 720, 32, 28878, 26, 2135, 1765, 293]}
{"line_number": 397, "line_type": "generated", "code": "\n        compiler.reportCodeChange();\n      }\n      for (Node n : toReplaceWithZero) {\n        n.getFirstChild().setDouble(0);", "entropy": 0.1998291015625, "is_bug_line": false, "sus_score": 0.6488856845230502, "per_token_entropy": [0.1998291015625, 0.120849609375, 3.838539123535156e-05, 0.0008683204650878906, 0.06402587890625, 1.4781951904296875e-05, 0.007373809814453125, 0.1317138671875, 4.291534423828125e-05, 0.32470703125, 0.26416015625, 0.0007014274597167969, 0.10479736328125, 0.1409912109375, 0.004039764404296875, 0.00038552284240722656, 0.0005140304565429688, 6.318092346191406e-05, 4.1961669921875e-05, 0.00018918514251708984, 0.0003428459167480469, 0.381103515625, 0.8193359375, 0.0011243820190429688, 1.1494140625, 0.0159759521484375, 0.0006256103515625, 1.2294921875, 0.71044921875, 0.0458984375, 0.013458251953125, 0.66259765625], "tokens": [291, 8980, 32, 3734, 1227, 1791, 473, 397, 320, 397, 436, 308, 1212, 310, 499, 372, 9388, 1554, 8039, 27, 301, 291, 310, 32, 25657, 2931, 922, 470, 4075, 26, 34, 293]}
{"line_number": 398, "line_type": "original", "code": "          compiler.reportCodeChange();", "entropy": 2.033203125, "is_bug_line": false, "sus_score": 0.6488856845230502, "per_token_entropy": [8.7265625, 3.8984375, 0.0002574920654296875, 0.005275726318359375, 1.5888671875, 0.00035643577575683594, 0.01145172119140625], "tokens": [2033, 8980, 32, 3734, 1227, 1791, 473]}
{"line_number": 398, "line_type": "generated", "code": "\n      }\n      for (Node n : toReplaceWithZero) {\n        Node value = n.getLastChild();\n        Node newNumber = IR.number(0).srcref(value);\n        n.replaceChild(value, newNumber);\n      }", "entropy": 0.31201171875, "is_bug_line": false, "sus_score": 0.6488856845230502, "per_token_entropy": [0.05108642578125, 0.0008873939514160156, 0.428955078125, 0.334228515625, 0.0005860328674316406, 0.1925048828125, 0.1806640625, 0.004253387451171875, 0.0003910064697265625, 0.00038051605224609375, 0.00012159347534179688, 6.0439109802246094e-05, 0.00018405914306640625, 0.0003097057342529297, 0.01445770263671875, 0.97314453125, 1.8291015625, 0.2142333984375, 0.14404296875, 0.0016469955444335938, 1.2587890625, 0.0028247833251953125, 0.274658203125, 0.0302886962890625, 1.755859375, 2.0625, 1.0869140625, 0.37646484375, 0.6416015625, 0.0012598037719726562, 0.00632476806640625, 0.01311492919921875, 0.232177734375, 1.1123046875, 0.404541015625, 9.870529174804688e-05, 0.0103607177734375, 0.39501953125, 0.06304931640625, 0.039794921875, 0.626953125, 4.38690185546875e-05, 0.3203125, 0.007022857666015625, 0.00013697147369384766, 0.022216796875, 0.0009274482727050781, 0.00261688232421875, 2.3365020751953125e-05, 0.0030879974365234375, 1.09375, 4.8995018005371094e-05], "tokens": [397, 320, 397, 436, 308, 1212, 310, 499, 372, 9388, 1554, 8039, 27, 301, 291, 4004, 786, 280, 310, 32, 20197, 2931, 473, 291, 4004, 537, 1918, 280, 14095, 32, 2171, 26, 34, 547, 1617, 612, 26, 853, 293, 291, 310, 32, 3227, 2931, 26, 853, 30, 537, 1918, 293, 397, 320]}
{"line_number": 402, "line_type": "original", "code": "      }", "entropy": 1.564453125, "is_bug_line": false, "sus_score": 0.6488856845230502, "per_token_entropy": [2.28515625, 0.8447265625], "tokens": [647, 320]}
{"line_number": 402, "line_type": "generated", "code": "\n        compiler.reportCodeChange();\n      }\n    }\n\n    /**\n     * @return Whether it's possible to change the function signature to\n     *     remove unused parameters.\n     */\n    private boolean canChangeSignature(Node function) {\n      // TODO(john", "entropy": 0.41259765625, "is_bug_line": false, "sus_score": 0.6488856845230502, "per_token_entropy": [1.0244140625, 0.068359375, 5.14984130859375e-05, 0.0002963542938232422, 0.0088043212890625, 4.172325134277344e-05, 0.0009312629699707031, 0.0301513671875, 6.16312026977539e-05, 0.1412353515625, 0.00015473365783691406, 0.04827880859375, 0.2435302734375, 0.024017333984375, 0.0001010894775390625, 1.5390625, 0.2452392578125, 0.7509765625, 1.931640625, 0.892578125, 0.99853515625, 0.08673095703125, 1.078125, 0.1405029296875, 0.60693359375, 0.289306640625, 2.69921875, 0.779296875, 0.00042057037353515625, 0.69580078125, 0.41162109375, 0.712890625, 0.90185546875, 0.27392578125, 0.296142578125, 0.032623291015625, 0.0011548995971679688, 0.16845703125, 0.12213134765625, 0.00015532970428466797, 0.0058441162109375, 3.2186508178710938e-06, 0.0004458427429199219, 0.0025844573974609375, 0.1009521484375, 0.017852783203125, 0.00012946128845214844, 0.0223388671875, 1.396484375, 2.283203125, 0.0367431640625, 0.346923828125], "tokens": [291, 8980, 32, 3734, 1227, 1791, 473, 397, 320, 284, 320, 446, 1022, 275, 319, 477, 601, 14071, 561, 1182, 4195, 372, 1539, 322, 667, 8191, 372, 275, 319, 262, 3345, 15649, 3377, 32, 275, 569, 284, 945, 1905, 883, 1791, 7785, 26, 1212, 667, 27, 301, 397, 434, 4296, 26, 25172]}
{"line_number": 395, "line_type": "original", "code": "        Var var = fnScope.getVar(lastArg.getString());", "entropy": 1.833984375, "is_bug_line": false, "sus_score": 0.44172610429938614, "per_token_entropy": [5.265625, 7.8984375, 1.779296875, 0.634765625, 2.9140625, 0.0269622802734375, 0.00335693359375, 0.027557373046875, 0.08197021484375, 5.65625, 1.185546875, 0.16015625, 0.00594329833984375, 0.027008056640625], "tokens": [351, 7329, 773, 280, 2771, 5504, 32, 48086, 26, 2135, 1765, 32, 7069, 1035]}
{"line_number": 395, "line_type": "generated", "code": "\n    public void process() {\n      for (Node n : toRemove) {\n        Node parent = n.getParent();\n        Node argList = parent.getLastChild();\n        Node argToRemove = n.getNext();\n        parent.removeChild(n);\n        if", "entropy": 0.5048828125, "is_bug_line": false, "sus_score": 0.44172610429938614, "per_token_entropy": [0.2327880859375, 1.3515625, 0.01465606689453125, 1.658203125, 1.1923828125, 0.002838134765625, 0.0797119140625, 0.5283203125, 0.0031490325927734375, 0.0546875, 0.314208984375, 0.023162841796875, 0.022674560546875, 0.08453369140625, 0.0007119178771972656, 0.003509521484375, 0.042449951171875, 1.1728515625, 1.3935546875, 0.0127105712890625, 0.0183563232421875, 0.0005865097045898438, 0.0010051727294921875, 0.0030670166015625, 0.031341552734375, 1.591796875, 2.955078125, 1.419921875, 0.040191650390625, 1.6708984375, 0.0027141571044921875, 0.414794921875, 0.0016450881958007812, 0.10772705078125, 0.07623291015625, 1.78515625, 1.181640625, 0.513671875, 0.01727294921875, 0.58203125, 0.335693359375, 1.1640625, 0.01119232177734375, 0.1539306640625, 1.5400390625, 0.00020635128021240234, 0.03643798828125, 7.045269012451172e-05, 0.75048828125, 0.00894927978515625, 0.06500244140625, 1.576171875], "tokens": [284, 562, 763, 2164, 346, 301, 397, 436, 308, 1212, 310, 499, 372, 4913, 27, 301, 291, 4004, 2935, 280, 310, 32, 18789, 473, 291, 4004, 1638, 720, 280, 2935, 32, 20197, 2931, 473, 291, 4004, 1638, 33288, 280, 310, 32, 23017, 473, 291, 2935, 32, 28878, 26, 96, 293, 291, 415]}
{"line_number": 396, "line_type": "original", "code": "        if (!referenced.contains(var)) {", "entropy": 1.5849609375, "is_bug_line": false, "sus_score": 0.44172610429938614, "per_token_entropy": [3.98046875, 2.033203125, 0.96142578125, 6.515625, 0.1639404296875, 1.583984375, 0.019775390625, 0.32568359375, 0.201904296875, 0.062042236328125], "tokens": [351, 415, 1429, 36307, 32, 4752, 26, 869, 490, 301]}
{"line_number": 396, "line_type": "generated", "code": "\n      for (Node n : toRemove) {\n        NodeUtil.removeChild(n.getParent(), n);\n      }\n      for (Node n : toReplaceWithZero) {\n        NodeUtil.replaceChild(n.getParent(), n, IR.number", "entropy": 0.1864013671875, "is_bug_line": false, "sus_score": 0.44172610429938614, "per_token_entropy": [0.407470703125, 0.91748046875, 0.00365447998046875, 0.042633056640625, 0.2744140625, 0.0267791748046875, 0.023773193359375, 0.1126708984375, 0.0011234283447265625, 0.008087158203125, 0.050689697265625, 1.263671875, 0.822265625, 0.00024187564849853516, 0.68505859375, 0.0114288330078125, 0.0565185546875, 0.262939453125, 0.0034885406494140625, 0.004032135009765625, 0.0012073516845703125, 0.0034427642822265625, 0.7255859375, 0.0011606216430664062, 0.250244140625, 0.34423828125, 0.0006771087646484375, 0.0618896484375, 0.166015625, 0.004730224609375, 0.0008826255798339844, 0.0036144256591796875, 0.0003058910369873047, 9.465217590332031e-05, 0.00029850006103515625, 0.0005307197570800781, 0.016448974609375, 0.82861328125, 0.29150390625, 2.2411346435546875e-05, 0.1400146484375, 0.64990234375, 0.0160980224609375, 0.206787109375, 0.462646484375, 0.0153045654296875, 0.0074615478515625, 0.015228271484375, 0.02447509765625, 0.464599609375, 0.0008006095886230469, 0.014434814453125], "tokens": [397, 436, 308, 1212, 310, 499, 372, 4913, 27, 301, 291, 4004, 1733, 32, 28878, 26, 96, 32, 18789, 1026, 310, 293, 397, 320, 397, 436, 308, 1212, 310, 499, 372, 9388, 1554, 8039, 27, 301, 291, 4004, 1733, 32, 3227, 2931, 26, 96, 32, 18789, 1026, 310, 30, 14095, 32, 2171]}
{"line_number": 746, "line_type": "original", "code": "            assignedToUnknownValue = true;", "entropy": 2.533203125, "is_bug_line": false, "sus_score": 0.3849001794597505, "per_token_entropy": [11.234375, 7.98046875, 0.039794921875, 0.02508544921875, 0.0067291259765625, 0.346923828125, 0.53076171875, 0.096435546875], "tokens": [1468, 11012, 705, 5842, 882, 280, 861, 45]}
{"line_number": 746, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.3849001794597505, "per_token_entropy": [], "tokens": []}
{"line_number": 206, "line_type": "original", "code": "          traverseFunction(n, scope);", "entropy": 2.3828125, "is_bug_line": false, "sus_score": 0.32659863237109044, "per_token_entropy": [5.99609375, 6.86328125, 2.748046875, 1.55859375, 0.262451171875, 0.374755859375, 0.9228515625, 0.34326171875], "tokens": [2033, 29046, 2447, 26, 96, 30, 4576, 293]}
{"line_number": 206, "line_type": "generated", "code": "\n        }\n        break;\n\n      case Token.VAR:\n        for (Node child = n.getFirstChild();\n             child!= null;\n             child = child.getNext()) {\n          if (child.getType() == Token.NAME) {\n            var = scope", "entropy": 0.159912109375, "is_bug_line": false, "sus_score": 0.32659863237109044, "per_token_entropy": [0.1956787109375, 0.0010862350463867188, 0.316650390625, 0.09393310546875, 0.00032138824462890625, 0.403076171875, 0.1463623046875, 0.00472259521484375, 3.6716461181640625e-05, 0.75048828125, 0.0006537437438964844, 0.223388671875, 1.259765625, 0.005680084228515625, 0.0256195068359375, 0.64208984375, 0.0655517578125, 0.035125732421875, 0.0012788772583007812, 0.0048828125, 0.0006275177001953125, 0.0140228271484375, 1.2177734375, 0.002605438232421875, 0.0003459453582763672, 0.001361846923828125, 0.0082550048828125, 0.0266265869140625, 0.00042057037353515625, 0.0001823902130126953, 0.0007338523864746094, 5.519390106201172e-05, 9.655952453613281e-05, 0.00951385498046875, 0.00031375885009765625, 0.05303955078125, 0.95556640625, 0.07421875, 0.1258544921875, 0.0008497238159179688, 0.69580078125, 0.0004229545593261719, 0.11981201171875, 0.000598907470703125, 2.0384788513183594e-05, 0.128662109375, 0.044769287109375, 0.0004000663757324219, 0.00603485107421875, 0.63623046875, 0.0006666183471679688, 0.0113067626953125], "tokens": [291, 320, 291, 1626, 45, 1687, 1135, 6512, 32, 7416, 44, 291, 436, 308, 1212, 2838, 280, 310, 32, 25657, 2931, 473, 1802, 2838, 863, 744, 45, 1802, 2838, 280, 2838, 32, 23017, 1157, 301, 616, 415, 308, 2661, 32, 10272, 346, 610, 6512, 32, 2474, 27, 301, 324, 773, 280, 4576]}
{"line_number": 776, "line_type": "original", "code": "    for (Assign assign : assignsByVar.get(var)) {", "entropy": 1.2724609375, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [4.4375, 10.0546875, 0.09405517578125, 4.01953125, 0.1949462890625, 0.0260467529296875, 0.11468505859375, 0.0166778564453125, 0.019744873046875, 0.00493621826171875, 0.01983642578125, 0.0011053085327148438, 0.012237548828125, 0.016021728515625, 0.062042236328125], "tokens": [264, 436, 308, 9079, 5313, 499, 5313, 12986, 1881, 32, 371, 26, 869, 490, 301]}
{"line_number": 776, "line_type": "generated", "code": "\n              toRemove.isAssign() && toRemove.getLastChild().isGetProp(),\n          \"Unexpected node: %s\", toRemove);\n\n      if (toRemove.isVar()) {\n        // Remove the VAR node, which also removes the NAME node", "entropy": 0.6650390625, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [1.345703125, 0.49951171875, 0.0002332925796508789, 0.0089263916015625, 0.2027587890625, 1.642578125, 0.60546875, 0.73876953125, 1.05859375, 0.00011873245239257812, 0.01287841796875, 1.7041015625, 0.0004353523254394531, 0.09332275390625, 0.2271728515625, 2.05859375, 0.07568359375, 0.53125, 0.08349609375, 0.32470703125, 1.4072265625, 0.50146484375, 2.154296875, 0.4423828125, 0.00014722347259521484, 0.4453125, 0.444580078125, 0.0010137557983398438, 0.19873046875, 0.443359375, 0.8466796875, 0.089599609375, 0.55908203125, 4.2319297790527344e-05, 0.039703369140625, 0.04034423828125, 0.2900390625, 0.145263671875, 0.0003445148468017578, 0.028076171875, 1.0791015625, 2.080078125, 0.9580078125, 2.505859375, 0.88623046875, 1.9970703125, 2.20703125, 2.03515625, 0.07135009765625, 0.52685546875, 0.75927734375, 0.1865234375], "tokens": [1090, 372, 4913, 32, 297, 9079, 346, 962, 372, 4913, 32, 20197, 2931, 922, 297, 936, 6567, 1026, 616, 313, 10203, 1541, 44, 904, 101, 392, 372, 4913, 293, 1687, 415, 308, 452, 4913, 32, 297, 1881, 1157, 301, 291, 434, 6478, 322, 10244, 1541, 30, 1510, 2329, 20080, 322, 8912, 1541]}
{"line_number": 780, "line_type": "original", "code": "  }", "entropy": 2.203125, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [3.025390625, 1.3818359375], "tokens": [225, 320]}
{"line_number": 780, "line_type": "generated", "code": "\n      // Remove any type annotations\n      if (nameNode.hasChildren() && nameNode.getFirstChild().isType()) {\n        nameNode.removeChild(nameNode.getFirstChild());\n      }", "entropy": 0.5859375, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [0.83154296875, 1.3095703125, 2.1953125, 1.75390625, 3.095703125, 0.953125, 2.767578125, 1.3623046875, 0.06573486328125, 1.390625, 0.0020236968994140625, 0.029876708984375, 0.62451171875, 0.03369140625, 1.3359375, 0.09796142578125, 0.74951171875, 0.00013744831085205078, 0.0003409385681152344, 0.51904296875, 0.0001271963119506836, 0.0075531005859375, 0.1881103515625, 0.6162109375, 0.390869140625, 0.0003991127014160156, 0.004543304443359375, 1.009765625, 0.000286102294921875, 0.474365234375, 0.58740234375, 0.0168609619140625, 0.01422882080078125, 2.86102294921875e-05, 4.661083221435547e-05, 0.08038330078125, 1.1205673217773438e-05, 0.0009813308715820312, 0.9228515625, 0.00011932849884033203], "tokens": [397, 434, 6478, 1346, 827, 14695, 397, 415, 308, 426, 1212, 32, 2040, 7640, 346, 962, 636, 1212, 32, 25657, 2931, 922, 297, 620, 1157, 301, 291, 636, 1212, 32, 28878, 26, 426, 1212, 32, 25657, 2931, 1035, 397, 320]}
{"line_number": 805, "line_type": "original", "code": "      Var var = it.next();", "entropy": 1.9931640625, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [4.2421875, 7.29296875, 1.423828125, 0.459228515625, 2.501953125, 0.0017242431640625, 0.01465606689453125, 0.01165771484375], "tokens": [647, 7329, 773, 280, 561, 32, 1978, 473]}
{"line_number": 805, "line_type": "generated", "code": "\n        } else {\n          // If there are multiple variables declared, we need to replace the\n          // whole thing with an empty statement.\n          parent.replaceChild(toRemove, IR.empty());\n          compiler.reportCodeChange();\n        }\n      } else", "entropy": 0.497314453125, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [0.4453125, 0.00765228271484375, 0.275634765625, 0.183349609375, 0.10888671875, 0.6318359375, 1.5849609375, 1.5322265625, 0.480224609375, 0.312255859375, 1.876953125, 0.7998046875, 1.14453125, 0.9521484375, 1.884765625, 0.03955078125, 2.345703125, 1.015625, 0.1356201171875, 0.0007886886596679688, 0.93505859375, 2.00390625, 0.415771484375, 1.857421875, 1.291015625, 0.2841796875, 0.59619140625, 0.349853515625, 0.740234375, 0.00038743019104003906, 0.05999755859375, 2.956390380859375e-05, 0.00017964839935302734, 0.041351318359375, 4.315376281738281e-05, 0.0007996559143066406, 0.1488037109375, 0.0002282857894897461, 0.07183837890625, 0.54345703125, 0.038116455078125, 0.01690673828125, 1.9073486328125e-06, 0.00022804737091064453, 0.000675201416015625, 3.6954879760742188e-06, 0.00031447410583496094, 0.5712890625, 2.5153160095214844e-05, 0.10308837890625, 0.004383087158203125, 0.025177001953125], "tokens": [291, 320, 813, 301, 616, 434, 1670, 2017, 884, 4609, 4886, 17103, 30, 996, 1849, 372, 7084, 322, 616, 434, 9844, 7913, 623, 600, 3502, 7603, 32, 616, 2935, 32, 3227, 2931, 26, 452, 4913, 30, 14095, 32, 2951, 1035, 616, 8980, 32, 3734, 1227, 1791, 473, 291, 320, 397, 320, 813]}
{"line_number": 809, "line_type": "original", "code": "      for (Node exprCallNode : classDefiningCalls.get(var)) {", "entropy": 2.646484375, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [5.671875, 4.9140625, 0.018218994140625, 0.48095703125, 7.53125, 11.9921875, 0.7880859375, 0.2578125, 7.47265625, 2.404296875, 3.146484375, 0.89892578125, 1.3515625, 0.1004638671875, 0.00710296630859375, 0.48046875, 0.07080078125, 0.0305328369140625], "tokens": [647, 436, 308, 1212, 9810, 1853, 1212, 499, 443, 1350, 19068, 17838, 32, 371, 26, 869, 490, 301]}
{"line_number": 809, "line_type": "generated", "code": "\n        parent.replaceChild(toRemove, IR.var(nameNode.removeFirstChild()));\n        compiler.reportCodeChange();\n      } else {\n        parent.removeChild(toRemove);\n        compiler.reportCodeChange();\n      }\n    }\n  }", "entropy": 0.1986083984375, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [0.85400390625, 2.232421875, 0.001667022705078125, 0.07269287109375, 0.00041794776916503906, 0.0005002021789550781, 0.105712890625, 0.0001863241195678711, 0.0029773712158203125, 0.8095703125, 0.0005540847778320312, 0.783203125, 0.040435791015625, 0.93310546875, 0.00820159912109375, 0.1826171875, 0.373291015625, 0.054656982421875, 0.0006594657897949219, 0.1619873046875, 0.2076416015625, 0.06683349609375, 3.4570693969726562e-06, 0.0005502700805664062, 5.1856040954589844e-05, 2.384185791015625e-06, 0.0005803108215332031, 0.2281494140625, 0.00452423095703125, 0.0367431640625, 0.5908203125, 0.1214599609375, 1.337890625, 0.0003123283386230469, 0.035858154296875, 6.29425048828125e-05, 0.002597808837890625, 2.86102294921875e-06, 0.0014133453369140625, 0.077392578125, 0.0228271484375, 0.00015652179718017578, 0.0001615285873413086, 0.0015277862548828125, 2.491474151611328e-05, 0.0005412101745605469, 0.069580078125, 0.001617431640625, 0.486328125, 0.0011415481567382812, 0.407958984375, 0.001384735107421875], "tokens": [291, 2935, 32, 3227, 2931, 26, 452, 4913, 30, 14095, 32, 869, 26, 426, 1212, 32, 2546, 3472, 2931, 5073, 291, 8980, 32, 3734, 1227, 1791, 473, 397, 320, 813, 301, 291, 2935, 32, 28878, 26, 452, 4913, 293, 291, 8980, 32, 3734, 1227, 1791, 473, 397, 320, 284, 320, 334, 320]}
{"line_number": 817, "line_type": "original", "code": "      removeAllAssigns(var);", "entropy": 1.494140625, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [5.890625, 2.87890625, 3.06640625, 0.049713134765625, 0.00891876220703125, 0.01009368896484375, 0.041168212890625, 0.0055389404296875], "tokens": [647, 3345, 1934, 9079, 101, 26, 869, 293]}
{"line_number": 817, "line_type": "generated", "code": "\n\n    maybeUnreferenced.clear();\n    classDefiningCalls.clear();\n    assignsByVar.clear();\n    continuations.clear();\n  }\n\n  /**\n   * Removes any function arguments that were not referenced.\n   */\n  private void removeUnreferencedFunction", "entropy": 0.279296875, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [1.4833984375, 1.537109375, 0.0033931732177734375, 0.0004878044128417969, 0.056640625, 0.0306396484375, 7.808208465576172e-05, 0.83837890625, 1.12109375, 0.0022411346435546875, 0.0001081228256225586, 0.0011348724365234375, 0.00408172607421875, 0.0012712478637695312, 0.00010097026824951172, 1.3505859375, 1.3515625, 0.019378662109375, 0.007518768310546875, 0.00875091552734375, 0.0007367134094238281, 0.00010788440704345703, 0.421875, 1.1162109375, 1.3828277587890625e-05, 0.01409912109375, 0.0002663135528564453, 0.00014793872833251953, 0.60009765625, 0.00044798851013183594, 0.311279296875, 0.2320556640625, 0.0594482421875, 0.00017452239990234375, 0.96728515625, 0.5068359375, 0.619140625, 0.45361328125, 0.1845703125, 0.47216796875, 0.07427978515625, 0.05322265625, 0.2900390625, 0.1610107421875, 0.1346435546875, 0.006256103515625, 0.0155181884765625, 0.00780487060546875, 0.0013132095336914062, 0.0028533935546875, 0.0001424551010131836, 0.0008339881896972656], "tokens": [446, 8762, 1061, 36307, 32, 3815, 473, 284, 443, 1350, 19068, 17838, 32, 3815, 473, 284, 5313, 12986, 1881, 32, 3815, 473, 284, 11059, 993, 32, 3815, 473, 334, 320, 719, 1022, 664, 319, 24992, 1346, 667, 4209, 688, 4528, 646, 15167, 32, 664, 569, 334, 945, 763, 3345, 1061, 36307, 2447]}
{"line_number": 819, "line_type": "original", "code": "      compiler.addToDebugLog(\"Unreferenced var: \" + var.name);", "entropy": 1.931640625, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [8.1796875, 6.16015625, 0.00492095947265625, 6.59765625, 0.80126953125, 0.0169677734375, 0.92236328125, 2.8203125, 0.268798828125, 3.0078125, 2.419921875, 0.09832763671875, 0.059295654296875, 0.4267578125, 0.37890625, 0.40234375, 0.262939453125], "tokens": [647, 8980, 32, 23402, 3529, 1335, 440, 1061, 36307, 773, 44, 313, 474, 773, 32, 426, 293]}
{"line_number": 819, "line_type": "generated", "code": "\n  /**\n   * Removes unreferenced function arguments.\n   */\n  private void removeUnreferencedFunctionArgs() {\n    for (Iterator<Node> it = maybeUnreferencedFunctionArgs.iterator();\n         it.hasNext(); ) {\n      Node arg = it.", "entropy": 0.2568359375, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [0.351318359375, 0.572265625, 0.0755615234375, 0.0001990795135498047, 0.97021484375, 2.494140625, 0.03045654296875, 0.229248046875, 0.413330078125, 0.418701171875, 0.332275390625, 0.18505859375, 0.00833892822265625, 0.02581787109375, 0.0102386474609375, 0.00217437744140625, 0.00542449951171875, 0.0003032684326171875, 0.0030231475830078125, 0.00464630126953125, 0.2327880859375, 0.0016632080078125, 0.024078369140625, 0.7265625, 0.0009570121765136719, 0.87548828125, 0.0014238357543945312, 1.482421875, 0.0007891654968261719, 0.1458740234375, 0.002689361572265625, 0.54931640625, 0.023193359375, 0.0028209686279296875, 0.5400390625, 0.1693115234375, 0.00795745849609375, 0.03802490234375, 0.0008211135864257812, 0.44970703125, 0.00018835067749023438, 7.987022399902344e-06, 4.0531158447265625e-06, 0.0002906322479248047, 0.240966796875, 0.00023508071899414062, 0.0244293212890625, 0.054595947265625, 1.333984375, 0.28759765625, 0.0027446746826171875, 1.633167266845703e-05], "tokens": [334, 1022, 664, 319, 24992, 707, 36307, 667, 4209, 32, 664, 569, 334, 945, 763, 3345, 1061, 36307, 2447, 3080, 346, 301, 284, 436, 308, 5731, 46, 1212, 48, 561, 280, 8762, 1061, 36307, 2447, 3080, 32, 5162, 473, 276, 561, 32, 16421, 473, 829, 301, 397, 4004, 1638, 280, 561, 32]}
{"line_number": 820, "line_type": "original", "code": "      Node nameNode = var.nameNode;", "entropy": 1.6982421875, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [5.98046875, 3.69140625, 1.556640625, 0.04400634765625, 1.07421875, 1.634765625, 0.1766357421875, 2.705078125, 0.002788543701171875, 0.1258544921875], "tokens": [647, 4004, 636, 1212, 280, 773, 32, 426, 1212, 45]}
{"line_number": 820, "line_type": "generated", "code": "\n   * Removes any function arguments that were not referenced.\n   */\n  private void removeUnreferencedFunctionArgs() {\n    for (Iterator<Var> it = maybeUnreferenced.iterator(); it.hasNext(); ) {\n      Var var = it.next();", "entropy": 0.13623046875, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [0.439697265625, 0.10345458984375, 1.095703125, 0.46533203125, 0.62939453125, 0.430908203125, 0.2056884765625, 0.41650390625, 0.058685302734375, 0.042938232421875, 0.274169921875, 0.18212890625, 0.1749267578125, 0.026153564453125, 0.0266265869140625, 0.00661468505859375, 0.0017900466918945312, 0.004058837890625, 0.0002084970474243164, 0.0015048980712890625, 0.00235748291015625, 0.071044921875, 0.0020294189453125, 0.07940673828125, 0.93701171875, 0.000911712646484375, 0.355224609375, 0.0010204315185546875, 0.60888671875, 0.0027866363525390625, 0.0222930908203125, 0.0009222030639648438, 0.0985107421875, 0.00460052490234375, 0.0004639625549316406, 0.177734375, 0.0012655258178710938, 8.7738037109375e-05, 0.0129241943359375, 5.7220458984375e-06, 4.76837158203125e-07, 0.0001068115234375, 0.0670166015625, 0.00011157989501953125, 0.0100860595703125, 0.01294708251953125, 0.021087646484375, 0.0011348724365234375, 0.002323150634765625, 5.9604644775390625e-06, 1.3589859008789062e-05, 0.0001506805419921875], "tokens": [664, 319, 24992, 1346, 667, 4209, 688, 4528, 646, 15167, 32, 664, 569, 334, 945, 763, 3345, 1061, 36307, 2447, 3080, 346, 301, 284, 436, 308, 5731, 46, 1881, 48, 561, 280, 8762, 1061, 36307, 32, 5162, 473, 561, 32, 16421, 473, 829, 301, 397, 7329, 773, 280, 561, 32, 1978, 473]}
{"line_number": 821, "line_type": "original", "code": "      Node toRemove = nameNode.getParent();", "entropy": 2.392578125, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [4.6796875, 5.5390625, 3.376953125, 1.1533203125, 1.4814453125, 7.02734375, 0.2183837890625, 0.220703125, 0.12255859375, 0.107666015625], "tokens": [647, 4004, 372, 4913, 280, 636, 1212, 32, 18789, 473]}
{"line_number": 821, "line_type": "generated", "code": "\n   * set of nodes that are marked as referenced.\n   */\n  private void removeUnreferencedFunctionArgs() {\n    for (Node paramList : functionArgLists) {\n      Node function = paramList.getParent();\n      Preconditions.checkState(function.", "entropy": 0.552734375, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [0.65185546875, 0.0235748291015625, 1.52734375, 0.03912353515625, 2.236328125, 1.2421875, 1.224609375, 3.37109375, 0.7958984375, 0.77783203125, 0.7392578125, 0.984375, 0.70947265625, 0.041534423828125, 0.2919921875, 1.0029296875, 1.0625, 0.11737060546875, 0.0413818359375, 0.1822509765625, 0.030181884765625, 0.04742431640625, 0.0027065277099609375, 0.0626220703125, 1.0849609375, 0.0014257431030273438, 1.001953125, 1.357421875, 0.300048828125, 0.057281494140625, 0.84814453125, 1.7265625, 0.1708984375, 0.330078125, 0.00022590160369873047, 0.0228729248046875, 1.2177734375, 0.900390625, 0.58544921875, 0.2410888671875, 2.8252601623535156e-05, 0.00225067138671875, 0.00662994384765625, 0.1214599609375, 0.265625, 0.9052734375, 0.0002467632293701172, 0.0019073486328125, 0.09619140625, 0.0015935897827148438, 0.269775390625, 0.005161285400390625], "tokens": [664, 319, 739, 432, 5166, 688, 884, 15177, 619, 15167, 32, 664, 569, 334, 945, 763, 3345, 1061, 36307, 2447, 3080, 346, 301, 284, 436, 308, 1212, 4356, 720, 499, 667, 1765, 12981, 27, 301, 397, 4004, 667, 280, 4356, 720, 32, 18789, 473, 397, 40596, 32, 1553, 1078, 26, 1126, 32]}
{"line_number": 822, "line_type": "original", "code": "      Node parent = toRemove.getParent();", "entropy": 2.677734375, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [4.921875, 6.46484375, 3.5078125, 2.064453125, 6.921875, 0.1455078125, 0.042327880859375, 0.01134490966796875, 0.0211029052734375], "tokens": [647, 4004, 2935, 280, 372, 4913, 32, 18789, 473]}
{"line_number": 822, "line_type": "generated", "code": "\n   * state and restore it later.\n   */\n  private static class Continuation {\n    private final Node current;\n    private final Scope scope;\n    private final Scope parentScope;\n\n    Continuation(Node current, Scope scope, Scope parentScope) {\n     ", "entropy": 0.381591796875, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [0.439208984375, 0.08642578125, 1.8125, 0.82861328125, 1.9599609375, 0.03814697265625, 0.7421875, 0.2861328125, 0.2496337890625, 0.1328125, 0.028289794921875, 0.2340087890625, 0.364013671875, 0.22216796875, 0.0130615234375, 0.00015211105346679688, 0.126708984375, 0.09405517578125, 0.58837890625, 0.30615234375, 0.1807861328125, 2.10546875, 0.035125732421875, 0.05517578125, 0.0176849365234375, 0.01418304443359375, 0.331298828125, 0.300048828125, 0.0032024383544921875, 0.71630859375, 0.0987548828125, 0.1151123046875, 2.34375, 2.470703125, 0.330322265625, 0.0040130615234375, 1.0537109375, 0.56005859375, 1.2516975402832031e-05, 0.0027637481689453125, 0.037200927734375, 0.203857421875, 0.0033664703369140625, 0.028594970703125, 0.01531219482421875, 0.2132568359375, 0.0250396728515625, 0.0016536712646484375, 0.0061798095703125, 0.0009603500366210938, 0.0011081695556640625, 0.00849151611328125], "tokens": [664, 319, 1603, 461, 11309, 561, 6125, 32, 664, 569, 334, 945, 907, 443, 29765, 367, 301, 284, 945, 1158, 4004, 1550, 45, 284, 945, 1158, 22148, 4576, 45, 284, 945, 1158, 22148, 2935, 5504, 45, 446, 29765, 367, 26, 1212, 1550, 30, 22148, 4576, 30, 22148, 2935, 5504, 27, 301, 397]}
{"line_number": 824, "line_type": "original", "code": "      Preconditions.checkState(", "entropy": 2.841796875, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [6.3515625, 10.2578125, 0.01000213623046875, 0.061126708984375, 0.29931640625, 0.06695556640625], "tokens": [647, 40596, 32, 1553, 1078, 26]}
{"line_number": 824, "line_type": "generated", "code": "\n  private static class Continuation {\n    private final Node node;\n    private final Scope scope;\n\n    Continuation(Node node, Scope scope) {\n      this.node = node;\n      this.scope = scope;\n    }\n\n    void apply() {\n     ", "entropy": 0.114990234375, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [0.326904296875, 0.2161865234375, 0.391845703125, 0.2237548828125, 0.02935791015625, 0.0002224445343017578, 0.1336669921875, 0.07080078125, 0.564453125, 0.474853515625, 0.09881591796875, 0.74169921875, 0.0081329345703125, 0.0361328125, 0.02362060546875, 0.0160064697265625, 0.304931640625, 0.095947265625, 0.003269195556640625, 0.80224609375, 0.5478515625, 2.9921531677246094e-05, 0.0027008056640625, 0.012939453125, 0.09356689453125, 0.00457000732421875, 0.005001068115234375, 0.007537841796875, 0.0023345947265625, 0.0015010833740234375, 0.0037784576416015625, 0.1385498046875, 0.0003495216369628906, 0.004138946533203125, 0.00017893314361572266, 0.010986328125, 0.0013628005981445312, 0.0021190643310546875, 0.001155853271484375, 2.7298927307128906e-05, 5.412101745605469e-05, 8.296966552734375e-05, 0.0004851818084716797, 0.0005979537963867188, 0.01178741455078125, 0.00015676021575927734, 0.037384033203125, 0.428955078125, 0.01364898681640625, 0.00519561767578125, 0.00661468505859375, 0.072265625], "tokens": [334, 945, 907, 443, 29765, 367, 301, 284, 945, 1158, 4004, 1541, 45, 284, 945, 1158, 22148, 4576, 45, 446, 29765, 367, 26, 1212, 1541, 30, 22148, 4576, 27, 301, 397, 458, 32, 1251, 280, 1541, 45, 397, 458, 32, 3473, 280, 4576, 45, 284, 320, 446, 763, 4871, 346, 301, 397]}
{"line_number": 831, "line_type": "original", "code": "      if (toRemove.isParamList() &&", "entropy": 1.53515625, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [3.126953125, 2.587890625, 0.1551513671875, 5.328125, 0.58154296875, 0.30810546875, 0.509765625, 3.388671875, 0.0310516357421875, 0.75927734375, 0.11968994140625], "tokens": [647, 415, 308, 452, 4913, 32, 297, 3180, 720, 346, 962]}
{"line_number": 831, "line_type": "generated", "code": "\n    }\n\n    void apply() {\n      node.accept(this);\n    }", "entropy": 0.254150390625, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [0.483154296875, 0.02178955078125, 0.17919921875, 0.71728515625, 0.018218994140625, 0.00479888916015625, 0.005138397216796875, 0.1795654296875, 1.87890625, 0.05718994140625, 0.12274169921875, 0.0030879974365234375, 0.2142333984375, 0.061676025390625, 0.11810302734375, 0.000606536865234375], "tokens": [284, 320, 446, 763, 4871, 346, 301, 397, 1541, 32, 7494, 26, 578, 293, 284, 320]}
{"line_number": 866, "line_type": "original", "code": "    }", "entropy": 6.265625, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [3.49609375, 9.0390625], "tokens": [264, 320]}
{"line_number": 866, "line_type": "generated", "code": "\n    Assign(Node assignNode, Node nameNode, boolean isPropertyAssign) {\n      this.assignNode = assignNode;\n      this.nameNode = nameNode;\n      this.isPropertyAssign = isPropertyAssign;\n      this.mayHaveSecondary", "entropy": 0.0830078125, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [0.3388671875, 0.32666015625, 0.0030689239501953125, 0.0989990234375, 0.0787353515625, 0.06787109375, 0.131103515625, 0.310791015625, 0.037841796875, 0.01479339599609375, 0.1605224609375, 0.437255859375, 0.1273193359375, 0.00487518310546875, 0.00543975830078125, 1.1484375, 0.004817962646484375, 0.015777587890625, 0.153076171875, 0.062164306640625, 0.01387786865234375, 4.38690185546875e-05, 0.0006122589111328125, 0.005680084228515625, 1.3113021850585938e-06, 0.00042557716369628906, 0.0180206298828125, 0.01251220703125, 1.5854835510253906e-05, 0.01000213623046875, 0.00015306472778320312, 0.00018334388732910156, 0.0029201507568359375, 9.298324584960938e-06, 0.0006318092346191406, 0.0288848876953125, 0.01490020751953125, 1.4662742614746094e-05, 0.01319122314453125, 2.193450927734375e-05, 3.981590270996094e-05, 5.269050598144531e-05, 0.003143310546875, 2.0623207092285156e-05, 0.0009860992431640625, 0.0022754669189453125, 0.448486328125, 0.207275390625, 0.0004820823669433594, 0.0019483566284179688, 5.733966827392578e-05, 0.0016565322875976562], "tokens": [284, 17069, 26, 1212, 5313, 1212, 30, 4004, 636, 1212, 30, 1905, 438, 1653, 9079, 27, 301, 397, 458, 32, 5157, 1212, 280, 5313, 1212, 45, 397, 458, 32, 426, 1212, 280, 636, 1212, 45, 397, 458, 32, 297, 1653, 9079, 280, 438, 1653, 9079, 45, 397, 458, 32, 17302, 9037, 18095]}
{"line_number": 394, "line_type": "original", "code": "      while ((lastArg = argList.getLastChild()) != null) {", "entropy": 1.0322265625, "is_bug_line": false, "sus_score": 0.29814239699997197, "per_token_entropy": [2.421875, 5.703125, 4.17578125, 3.080078125, 0.25146484375, 0.06829833984375, 0.294921875, 0.03350830078125, 0.007022857666015625, 0.07318115234375, 0.00027632713317871094, 0.006877899169921875, 0.0290985107421875, 0.0165863037109375, 0.1162109375, 0.232177734375], "tokens": [647, 2218, 1833, 2135, 1765, 280, 1638, 720, 32, 20197, 2931, 1157, 863, 744, 27, 301]}
{"line_number": 394, "line_type": "generated", "code": "\n     */\n    public void modifyCallers() {\n      for (Node n : toRemove) {\n        NodeUtil.removeNode(n);\n      }\n      for (Node n : toReplaceWithZero) {\n        NodeUtil.replaceChild(n,", "entropy": 0.2919921875, "is_bug_line": false, "sus_score": 0.29814239699997197, "per_token_entropy": [0.499755859375, 0.51904296875, 0.01244354248046875, 0.5869140625, 0.01251983642578125, 2.11328125, 0.433837890625, 0.92724609375, 0.457763671875, 0.00360107421875, 0.09991455078125, 0.57275390625, 0.0016908645629882812, 0.063720703125, 0.375732421875, 0.01751708984375, 0.0170745849609375, 0.083251953125, 0.00043582916259765625, 0.0024204254150390625, 0.023040771484375, 0.908203125, 0.64990234375, 0.0001436471939086914, 1.8662109375, 0.07977294921875, 0.003017425537109375, 0.0301513671875, 0.043365478515625, 0.336669921875, 0.00022113323211669922, 0.1761474609375, 0.5908203125, 0.0005536079406738281, 0.09600830078125, 0.1719970703125, 0.0039825439453125, 0.0004916191101074219, 0.00027871131896972656, 9.417533874511719e-05, 4.887580871582031e-05, 0.000179290771484375, 0.00017881393432617188, 0.0121917724609375, 0.7919921875, 0.330078125, 1.8596649169921875e-05, 0.206298828125, 1.1953125, 0.044342041015625, 0.19970703125, 0.6181640625], "tokens": [275, 569, 284, 562, 763, 5351, 1853, 483, 346, 301, 397, 436, 308, 1212, 310, 499, 372, 4913, 27, 301, 291, 4004, 1733, 32, 2546, 1212, 26, 96, 293, 397, 320, 397, 436, 308, 1212, 310, 499, 372, 9388, 1554, 8039, 27, 301, 291, 4004, 1733, 32, 3227, 2931, 26, 96, 30]}
{"line_number": 403, "line_type": "original", "code": "    } else {", "entropy": 3.09375, "is_bug_line": false, "sus_score": 0.29814239699997197, "per_token_entropy": [4.75, 0.02972412109375, 7.2734375, 0.323974609375], "tokens": [264, 320, 813, 301]}
{"line_number": 403, "line_type": "generated", "code": "\n      }\n    }\n\n    /**\n     * @param function The function to check\n     * @return Whether we can change the function signature.\n     */\n    private boolean canChangeSignature(Node function) {\n      return compiler.getCodingConvention().isArrowFunction", "entropy": 0.445556640625, "is_bug_line": false, "sus_score": 0.29814239699997197, "per_token_entropy": [0.218505859375, 0.0104217529296875, 0.09124755859375, 0.00014328956604003906, 0.056304931640625, 0.2431640625, 0.0234527587890625, 0.00013458728790283203, 1.541015625, 1.45703125, 0.475341796875, 0.66650390625, 0.433349609375, 1.6416015625, 1.0380859375, 0.8251953125, 0.04644775390625, 0.0286407470703125, 0.004856109619140625, 0.50244140625, 1.2880859375, 0.158203125, 1.2802734375, 0.09259033203125, 0.5068359375, 0.495361328125, 1.3857421875, 0.45166015625, 0.087646484375, 0.001007080078125, 0.2401123046875, 0.0616455078125, 0.0002168416976928711, 0.01430511474609375, 3.4570693969726562e-06, 0.00070953369140625, 0.0026702880859375, 0.0008120536804199219, 0.0022125244140625, 0.00015175342559814453, 0.0384521484375, 1.291015625, 1.9638671875, 0.0016222000122070312, 1.193359375, 0.031005859375, 0.00997161865234375, 0.00228118896484375, 0.135009765625, 0.5458984375, 2.580078125, 0.01084136962890625], "tokens": [397, 320, 284, 320, 446, 1022, 275, 319, 477, 753, 667, 886, 667, 372, 1505, 275, 319, 477, 601, 14071, 996, 883, 1539, 322, 667, 8191, 32, 275, 569, 284, 945, 1905, 883, 1791, 7785, 26, 1212, 667, 27, 301, 397, 442, 8980, 32, 11640, 431, 299, 21748, 922, 297, 12513, 2447]}
