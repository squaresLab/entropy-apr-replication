{"line_number": 57, "line_type": "original", "code": "      Supplier<String> safeNameIdSupplier) {", "entropy": 1.59375, "is_bug_line": false, "sus_score": 0.10153461651336192, "per_token_entropy": [6.72265625, 7.25390625, 0.0394287109375, 0.0230255126953125, 0.0031871795654296875, 0.36962890625, 0.0110015869140625, 0.025482177734375, 0.023834228515625, 3.00390625, 0.04754638671875], "tokens": [647, 34591, 46, 652, 48, 10061, 558, 606, 17612, 27, 301]}
{"line_number": 57, "line_type": "generated", "code": "\n    private boolean isVarInlineForbidden(Var v) {\n      // TODO(johnlenz): if the variable is a parameter to a function\n      // or a local variable in a function, then it should not be inlined.\n      return false;\n   ", "entropy": 0.70068359375, "is_bug_line": false, "sus_score": 0.10153461651336192, "per_token_entropy": [0.475341796875, 0.85400390625, 0.46533203125, 0.05950927734375, 0.0304412841796875, 0.00710296630859375, 0.0015935897827148438, 0.006763458251953125, 0.0110015869140625, 0.215576171875, 0.00478363037109375, 0.0033397674560546875, 0.442138671875, 1.3720703125, 1.810546875, 0.07196044921875, 0.34228515625, 0.003437042236328125, 0.0024967193603515625, 0.11376953125, 4.6875, 1.1357421875, 0.95947265625, 0.52734375, 2.48828125, 1.1982421875, 1.3076171875, 0.3017578125, 0.194580078125, 1.0263671875, 0.002704620361328125, 2.4296875, 0.98046875, 1.408203125, 1.0908203125, 1.4091796875, 0.415283203125, 0.6357421875, 1.3916015625, 1.021484375, 0.9404296875, 1.3876953125, 0.393798828125, 0.049285888671875, 1.0400390625, 0.01229095458984375, 0.241943359375, 0.141845703125, 0.8076171875, 0.475341796875, 0.00597381591796875, 0.0236663818359375], "tokens": [284, 945, 1905, 438, 1881, 10144, 28654, 26, 1881, 354, 27, 301, 397, 434, 4296, 26, 25172, 1657, 108, 711, 415, 322, 2677, 438, 312, 3395, 372, 312, 667, 397, 434, 556, 312, 2196, 2677, 328, 312, 667, 30, 1615, 561, 1395, 646, 526, 328, 14145, 32, 397, 442, 901, 45, 284]}
{"line_number": 58, "line_type": "original", "code": "    this.compiler = compiler;", "entropy": 1.919921875, "is_bug_line": false, "sus_score": 0.10153461651336192, "per_token_entropy": [1.966796875, 9.203125, 0.01523590087890625, 1.123046875, 0.998046875, 0.104248046875, 0.0275421142578125], "tokens": [264, 458, 32, 10199, 280, 8980, 45]}
{"line_number": 58, "line_type": "generated", "code": "\n    private boolean isVarInlineForbidden(Var v) {\n      return false;\n    }\n\n    /**\n     * Returns whether the given variable is a candidate for inlining.\n     * We inline any variable that is only ever assigned to an object literal.\n     *", "entropy": 0.630859375, "is_bug_line": false, "sus_score": 0.10153461651336192, "per_token_entropy": [0.806640625, 0.91748046875, 0.62109375, 0.06927490234375, 0.034912109375, 0.00823974609375, 0.00127410888671875, 0.002689361572265625, 0.007251739501953125, 0.2340087890625, 0.002593994140625, 0.002117156982421875, 0.42529296875, 0.79345703125, 1.134765625, 0.01488494873046875, 0.08660888671875, 0.0015249252319335938, 0.4638671875, 0.398681640625, 0.059356689453125, 0.00023102760314941406, 1.6142578125, 0.623046875, 0.85595703125, 1.072265625, 1.4345703125, 0.89697265625, 1.6298828125, 1.03515625, 0.1201171875, 0.236572265625, 0.00310516357421875, 0.73388671875, 0.10321044921875, 0.61083984375, 2.845703125, 2.109375, 2.384765625, 1.2841796875, 0.395751953125, 0.59326171875, 1.7392578125, 0.27197265625, 0.2734375, 0.364990234375, 0.40478515625, 0.17724609375, 0.9248046875, 0.71875, 0.006473541259765625, 1.24609375], "tokens": [284, 945, 1905, 438, 1881, 10144, 28654, 26, 1881, 354, 27, 301, 397, 442, 901, 45, 284, 320, 446, 1022, 275, 319, 3759, 4946, 322, 2702, 2677, 438, 312, 15133, 436, 328, 22914, 32, 275, 319, 2688, 4447, 1346, 2677, 688, 438, 1755, 14503, 11012, 372, 600, 1300, 10652, 32, 275, 319]}
{"line_number": 59, "line_type": "original", "code": "    this.safeNameIdSupplier = safeNameIdSupplier;", "entropy": 1.5087890625, "is_bug_line": false, "sus_score": 0.10153461651336192, "per_token_entropy": [1.947265625, 9.703125, 1.7744140625, 3.681640625, 0.01213836669921875, 0.0158843994140625, 0.0611572265625, 0.1279296875, 2.2265625, 0.01216888427734375, 0.00689697265625, 0.004390716552734375, 0.0280303955078125], "tokens": [264, 458, 32, 4770, 558, 606, 17612, 280, 10061, 558, 606, 17612, 45]}
{"line_number": 59, "line_type": "generated", "code": "\n     */\n    private boolean isVarInlineForbidden(Var var) {\n      return staleVars.contains(var);\n    }\n\n    /**\n     * Determines whether the variable is a candidate for inlining.\n     *\n     * TODO(johnlenz): consider in", "entropy": 0.5166015625, "is_bug_line": false, "sus_score": 0.10153461651336192, "per_token_entropy": [0.6884765625, 0.9306640625, 0.1021728515625, 0.133544921875, 0.6083984375, 0.158447265625, 0.030242919921875, 0.0037288665771484375, 0.0008425712585449219, 0.0022182464599609375, 0.004947662353515625, 1.599609375, 0.0094146728515625, 0.002140045166015625, 0.457275390625, 0.8251953125, 0.59130859375, 1.6927719116210938e-05, 0.00244140625, 0.0008039474487304688, 9.1552734375e-05, 0.000457763671875, 0.498779296875, 0.039581298828125, 0.0015497207641601562, 0.2252197265625, 0.26318359375, 0.21728515625, 0.0009388923645019531, 1.29296875, 0.59716796875, 1.1064453125, 1.224609375, 0.9423828125, 1.673828125, 0.8916015625, 0.1064453125, 0.1929931640625, 0.0030765533447265625, 0.72314453125, 0.284912109375, 0.4453125, 1.2939453125, 0.01010894775390625, 3.357421875, 0.048553466796875, 0.475830078125, 0.0037479400634765625, 0.0026645660400390625, 0.050018310546875, 2.748046875, 2.001953125], "tokens": [275, 569, 284, 945, 1905, 438, 1881, 10144, 28654, 26, 1881, 773, 27, 301, 397, 442, 35639, 12034, 32, 4752, 26, 869, 293, 284, 320, 446, 1022, 275, 319, 34450, 4946, 322, 2677, 438, 312, 15133, 436, 328, 22914, 32, 275, 319, 275, 319, 4296, 26, 25172, 1657, 108, 711, 6295, 328]}
{"line_number": 60, "line_type": "original", "code": "  }", "entropy": 7.34375, "is_bug_line": false, "sus_score": 0.10153461651336192, "per_token_entropy": [5.66796875, 9.0234375], "tokens": [225, 320]}
{"line_number": 60, "line_type": "generated", "code": "\n     * then this object is not inlinable.\n     *\n     * @param n The root of the node tree to check.\n     * @return Whether the object is inlinable.\n     */\n    private boolean isInlinableObject(List<Reference>", "entropy": 0.529296875, "is_bug_line": false, "sus_score": 0.10153461651336192, "per_token_entropy": [0.445556640625, 0.0850830078125, 2.02734375, 2.37890625, 2.693359375, 0.7705078125, 1.484375, 1.1328125, 0.10589599609375, 0.004062652587890625, 0.3125, 0.36767578125, 1.37109375, 0.37646484375, 0.09320068359375, 0.4716796875, 0.2210693359375, 1.8916015625, 0.90673828125, 1.296875, 0.3291015625, 0.2415771484375, 1.484375, 0.053375244140625, 0.61474609375, 0.8505859375, 0.6708984375, 0.0173797607421875, 0.33935546875, 0.037200927734375, 0.04534912109375, 0.287841796875, 0.82275390625, 0.87744140625, 0.416259765625, 0.2548828125, 0.048370361328125, 0.0007867813110351562, 0.2239990234375, 0.0419921875, 0.00707244873046875, 0.020660400390625, 0.08770751953125, 0.01154327392578125, 0.4365234375, 0.0025959014892578125, 0.04205322265625, 0.007137298583984375, 0.78759765625, 0.006237030029296875, 0.00487518310546875, 0.0005965232849121094], "tokens": [275, 319, 1615, 458, 1300, 438, 646, 328, 1800, 444, 32, 275, 319, 275, 319, 477, 753, 310, 886, 3051, 432, 322, 1541, 4345, 372, 1505, 32, 275, 319, 477, 601, 14071, 322, 1300, 438, 328, 1800, 444, 32, 275, 569, 284, 945, 1905, 43349, 1800, 46479, 26, 720, 46, 3564, 48]}
{"line_number": 64, "line_type": "original", "code": "    ReferenceCollectingCallback callback = new ReferenceCollectingCallback(", "entropy": 1.3642578125, "is_bug_line": false, "sus_score": 0.10153461651336192, "per_token_entropy": [3.17578125, 7.71875, 3.330078125, 0.00023317337036132812, 0.00052642822265625, 0.55810546875, 0.853515625, 1.091796875, 0.039794921875, 0.0033969879150390625, 7.009506225585938e-05, 8.082389831542969e-05, 0.955078125], "tokens": [264, 9494, 7938, 299, 3296, 3309, 280, 537, 9494, 7938, 299, 3296, 26]}
{"line_number": 64, "line_type": "generated", "code": "\n    private void blacklistReferences(Node n) {\n        for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) {\n            blacklistReferences(c);\n        }\n    }\n\n    /**\n     * Determines whether the variable is a", "entropy": 0.3369140625, "is_bug_line": false, "sus_score": 0.10153461651336192, "per_token_entropy": [0.36279296875, 0.07464599609375, 0.323486328125, 0.50732421875, 0.5146484375, 0.1612548828125, 0.1595458984375, 0.357177734375, 0.331298828125, 0.01053619384765625, 1.7265625, 1.798828125, 0.014984130859375, 0.044708251953125, 0.64697265625, 0.0229949951171875, 0.007007598876953125, 0.0026340484619140625, 0.0016469955444335938, 0.0007491111755371094, 0.00955963134765625, 0.009002685546875, 0.0004992485046386719, 0.00168609619140625, 0.0026645660400390625, 0.0086212158203125, 0.0018739700317382812, 0.0017976760864257812, 0.0001989603042602539, 0.0002598762512207031, 0.0038909912109375, 0.01137542724609375, 0.172119140625, 0.66015625, 0.0017642974853515625, 0.002613067626953125, 0.00107574462890625, 0.0024585723876953125, 0.0753173828125, 0.00018167495727539062, 0.81884765625, 0.0033721923828125, 0.61962890625, 0.262451171875, 0.045074462890625, 0.0001919269561767578, 2.068359375, 0.6875, 0.87939453125, 1.21875, 1.2724609375, 1.599609375], "tokens": [284, 945, 763, 46422, 15661, 26, 1212, 310, 27, 301, 291, 436, 308, 1212, 281, 280, 310, 32, 25657, 2931, 473, 281, 863, 744, 45, 281, 280, 281, 32, 23017, 1157, 301, 324, 46422, 15661, 26, 85, 293, 291, 320, 284, 320, 446, 1022, 275, 319, 34450, 4946, 322, 2677, 438, 312]}
{"line_number": 66, "line_type": "original", "code": "    callback.process(externs, root);", "entropy": 2.30078125, "is_bug_line": false, "sus_score": 0.10153461651336192, "per_token_entropy": [4.18359375, 13.8359375, 0.052215576171875, 1.890625, 0.0770263671875, 2.646484375, 0.012481689453125, 0.01378631591796875, 0.152099609375, 0.1363525390625], "tokens": [264, 3309, 32, 2416, 26, 4318, 101, 30, 3051, 293]}
{"line_number": 66, "line_type": "generated", "code": "\n          });\n    }\n\n    /**\n     * Returns whether the given variable is a candidate for inlining.\n     * This is true if:\n     * - The variable is only ever assigned to an object literal\n     * - The variable is never read in its entirety", "entropy": 0.6845703125, "is_bug_line": false, "sus_score": 0.10153461651336192, "per_token_entropy": [2.205078125, 1.4208984375, 0.083984375, 0.003261566162109375, 0.12493896484375, 0.195068359375, 0.03692626953125, 0.0003268718719482422, 1.9072265625, 0.853515625, 0.634765625, 0.5419921875, 0.2861328125, 1.1865234375, 1.880859375, 0.84912109375, 0.12646484375, 0.216064453125, 0.002933502197265625, 0.54150390625, 0.06243896484375, 0.73291015625, 2.533203125, 1.0966796875, 1.193359375, 0.2347412109375, 2.5234375, 0.0225830078125, 0.00081634521484375, 1.8974609375, 0.60107421875, 0.09100341796875, 0.428955078125, 2.916015625, 0.33740234375, 0.403076171875, 0.351806640625, 1.048828125, 0.1793212890625, 0.051483154296875, 0.84423828125, 0.01441192626953125, 0.10284423828125, 0.121826171875, 0.320556640625, 0.164794921875, 0.51123046875, 2.158203125, 0.8056640625, 0.728515625, 0.0157318115234375, 0.00067138671875], "tokens": [616, 1122, 284, 320, 446, 1022, 275, 319, 3759, 4946, 322, 2702, 2677, 438, 312, 15133, 436, 328, 22914, 32, 275, 319, 1348, 438, 861, 415, 44, 275, 319, 429, 886, 2677, 438, 1755, 14503, 11012, 372, 600, 1300, 10652, 275, 319, 429, 886, 2677, 438, 7152, 1491, 328, 2819, 9449, 618]}
{"line_number": 67, "line_type": "original", "code": "  }", "entropy": 3.28515625, "is_bug_line": false, "sus_score": 0.10153461651336192, "per_token_entropy": [3.779296875, 2.7890625], "tokens": [225, 320]}
{"line_number": 67, "line_type": "generated", "code": "      public void visit(Node n) {\n          if (n.isName()) {\n            Var v = scope.getVar(n.getString());\n            if (v!= null) {\n              staleVars.add(v);\n            }\n          }\n        }", "entropy": 0.1568603515625, "is_bug_line": false, "sus_score": 0.10153461651336192, "per_token_entropy": [1.9326171875, 0.9375, 0.0831298828125, 0.010040283203125, 0.0002605915069580078, 0.00017440319061279297, 0.60546875, 0.140869140625, 0.041229248046875, 0.818359375, 0.32177734375, 0.09796142578125, 0.1800537109375, 0.036865234375, 0.294921875, 0.36279296875, 0.289306640625, 0.0011796951293945312, 0.0948486328125, 0.14208984375, 0.5517578125, 0.005092620849609375, 0.08489990234375, 0.00038170814514160156, 0.0721435546875, 0.01491546630859375, 0.007534027099609375, 0.001804351806640625, 0.005474090576171875, 0.0014333724975585938, 0.2242431640625, 0.036834716796875, 0.01517486572265625, 0.0576171875, 0.012054443359375, 0.0002772808074951172, 0.35302734375, 0.00482177734375, 0.034088134765625, 0.09039306640625, 0.0002560615539550781, 4.875659942626953e-05, 0.0032367706298828125, 0.00035262107849121094, 0.006145477294921875, 0.0001653432846069336, 0.03814697265625, 0.00018024444580078125, 0.023284912109375, 6.568431854248047e-05, 0.11517333984375, 0.00585174560546875], "tokens": [647, 562, 763, 7725, 26, 1212, 310, 27, 301, 616, 415, 308, 96, 32, 297, 558, 1157, 301, 324, 7329, 354, 280, 4576, 32, 48086, 26, 96, 32, 7069, 1035, 324, 415, 308, 104, 863, 744, 27, 301, 1090, 35639, 12034, 32, 669, 26, 104, 293, 324, 320, 616, 320, 291, 320]}
