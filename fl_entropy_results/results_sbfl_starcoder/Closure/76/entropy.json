{"line_number": 316, "line_type": "original", "code": "        return false;", "entropy": 2.724609375, "is_bug_line": false, "sus_score": 0.75, "per_token_entropy": [3.2578125, 4.171875, 3.443359375, 0.022674560546875], "tokens": [351, 442, 901, 45]}
{"line_number": 316, "line_type": "generated", "code": "\n\n      // All other operators\n      default:\n        for(Node child = n.getFirstChild(); child!= null;\n            child = child.getNext()) {\n          VariableLiveness state = isVariableReadBeforeKill(child, variable);\n          if (state ==", "entropy": 0.236083984375, "is_bug_line": false, "sus_score": 0.75, "per_token_entropy": [1.5859375, 0.69677734375, 2.896484375, 0.53955078125, 1.6083984375, 0.89892578125, 0.50244140625, 0.0018529891967773438, 0.0631103515625, 0.81005859375, 0.96923828125, 0.00855255126953125, 0.43310546875, 0.21240234375, 0.017181396484375, 0.0001506805419921875, 0.001979827880859375, 0.00032067298889160156, 0.004756927490234375, 0.1514892578125, 0.004199981689453125, 0.00347900390625, 0.007343292236328125, 0.08935546875, 0.0006318092346191406, 0.0021114349365234375, 0.0013265609741210938, 0.00035572052001953125, 0.0009446144104003906, 0.004791259765625, 0.002010345458984375, 0.1583251953125, 0.1256103515625, 0.00045037269592285156, 2.1696090698242188e-05, 0.028350830078125, 0.00446319580078125, 0.055938720703125, 0.0002244710922241211, 7.450580596923828e-05, 9.131431579589844e-05, 1.239776611328125e-05, 0.0006155967712402344, 0.078857421875, 0.0011987686157226562, 0.01422119140625, 0.0008645057678222656, 0.1519775390625, 0.0699462890625, 0.00508880615234375, 0.005706787109375, 0.05169677734375], "tokens": [1687, 434, 3367, 1604, 15568, 397, 1244, 44, 291, 436, 26, 1212, 2838, 280, 310, 32, 25657, 2931, 473, 2838, 863, 744, 45, 324, 2838, 280, 2838, 32, 23017, 1157, 301, 616, 9870, 62, 28597, 1603, 280, 438, 3818, 2230, 5658, 27875, 26, 2661, 30, 2677, 293, 616, 415, 308, 1293, 610]}
{"line_number": 352, "line_type": "original", "code": "        return VariableLiveness.KILL;", "entropy": 1.5869140625, "is_bug_line": false, "sus_score": 0.75, "per_token_entropy": [8.3125, 1.619140625, 0.2177734375, 0.0005331039428710938, 5.626678466796875e-05, 0.0015039443969726562, 2.5234375, 0.0218505859375], "tokens": [351, 442, 9870, 62, 28597, 32, 48995, 45]}
{"line_number": 352, "line_type": "generated", "code": "\n  // The current liveness of the variable\n  private enum VariableLiveness {\n    MAYBE_LIVE, // May be still live in the current expression tree.\n    READ, // Known there is a read left of it.\n    KILL,", "entropy": 0.189697265625, "is_bug_line": false, "sus_score": 0.75, "per_token_entropy": [2.060546875, 1.7744140625, 2.712890625, 1.74609375, 0.439453125, 9.918212890625e-05, 0.00036072731018066406, 0.044891357421875, 0.06671142578125, 0.058349609375, 0.2337646484375, 0.07843017578125, 0.10870361328125, 0.0250396728515625, 0.00974273681640625, 4.7206878662109375e-05, 0.006763458251953125, 0.0226593017578125, 0.319091796875, 0.00803375244140625, 0.0005025863647460938, 0.0005927085876464844, 5.340576171875e-05, 0.00394439697265625, 0.016876220703125, 0.01561737060546875, 0.0019683837890625, 0.0008387565612792969, 0.0015010833740234375, 0.0021305084228515625, 0.0004963874816894531, 0.0006351470947265625, 0.0020351409912109375, 0.0008664131164550781, 0.0017518997192382812, 0.007198333740234375, 0.050445556640625, 0.0017452239990234375, 0.00725555419921875, 0.00258636474609375, 0.0018129348754882812, 0.00030493736267089844, 0.0007886886596679688, 0.0014896392822265625, 0.011444091796875, 0.000789642333984375, 0.0004279613494873047, 0.0012388229370117188, 0.002532958984375, 0.004154205322265625, 4.374980926513672e-05, 0.005279541015625], "tokens": [334, 434, 886, 1550, 1024, 2465, 503, 432, 322, 2677, 334, 945, 3833, 9870, 62, 28597, 301, 284, 44491, 4657, 81, 1798, 2478, 30, 434, 10709, 526, 4204, 10912, 328, 322, 1550, 6101, 4345, 32, 284, 9628, 30, 434, 32926, 2017, 438, 312, 1491, 2841, 432, 561, 32, 284, 1224, 13142, 30]}
{"line_number": 315, "line_type": "original", "code": "      } else if (state == VariableLiveness.KILL) {", "entropy": 1.5517578125, "is_bug_line": false, "sus_score": 0.6123724356957946, "per_token_entropy": [4.828125, 6.07421875, 4.0703125, 0.4853515625, 0.040618896484375, 5.3984375, 0.1162109375, 0.09100341796875, 0.0021533966064453125, 6.020069122314453e-05, 0.0008287429809570312, 0.469482421875, 0.114501953125, 0.0238494873046875], "tokens": [647, 320, 813, 415, 308, 1293, 610, 9870, 62, 28597, 32, 48995, 27, 301]}
{"line_number": 315, "line_type": "generated", "code": "\n        return VariableLiveness.MAYBE_LIVE;\n\n      // Unary operators\n      case Token.NOT:\n      case Token.POS:\n      case Token.NEG:\n        return isVariableReadBeforeKill(n.getFirstChild(), variable);\n\n      // Binary operators", "entropy": 0.22802734375, "is_bug_line": false, "sus_score": 0.6123724356957946, "per_token_entropy": [0.5478515625, 1.0498046875, 0.320068359375, 0.0003960132598876953, 9.059906005859375e-05, 0.0005621910095214844, 0.185791015625, 7.82012939453125e-05, 0.00023674964904785156, 4.589557647705078e-05, 0.0034313201904296875, 0.465087890625, 0.43505859375, 3.140625, 0.751953125, 0.22119140625, 0.02923583984375, 0.00024175643920898438, 1.2755393981933594e-05, 0.177734375, 0.0003266334533691406, 0.8994140625, 0.0810546875, 0.0006561279296875, 2.9802322387695312e-05, 1.79296875, 0.00011110305786132812, 0.09136962890625, 0.0021820068359375, 2.8848648071289062e-05, 5.626678466796875e-05, 0.01340484619140625, 6.508827209472656e-05, 0.7705078125, 0.2188720703125, 0.0380859375, 0.0005006790161132812, 0.0005316734313964844, 9.071826934814453e-05, 1.1920928955078125e-05, 0.0012063980102539062, 0.046295166015625, 0.0002529621124267578, 0.00881195068359375, 0.0005426406860351562, 0.004154205322265625, 0.005924224853515625, 0.0007643699645996094, 0.07769775390625, 0.1212158203125, 0.273193359375, 0.07708740234375], "tokens": [291, 442, 9870, 62, 28597, 32, 44380, 81, 1798, 2478, 45, 1687, 434, 40309, 15568, 397, 1135, 6512, 32, 3908, 44, 397, 1135, 6512, 32, 8346, 44, 397, 1135, 6512, 32, 25531, 44, 291, 442, 438, 3818, 2230, 5658, 27875, 26, 96, 32, 25657, 2931, 1026, 2677, 293, 1687, 434, 13312, 15568]}
{"line_number": 230, "line_type": "original", "code": "        return;", "entropy": 4.28515625, "is_bug_line": false, "sus_score": 0.5163977794943222, "per_token_entropy": [7.29296875, 2.013671875, 3.552734375], "tokens": [351, 442, 45]}
{"line_number": 230, "line_type": "generated", "code": "\n   * @param n The node in the tree where the sub-tree starts.\n   * @param exprRoot The root of the sub-tree.\n   * @param var The variable to check.\n   * @return Whether the variable is live before n", "entropy": 0.4267578125, "is_bug_line": false, "sus_score": 0.5163977794943222, "per_token_entropy": [0.265625, 0.54443359375, 1.162109375, 0.0889892578125, 0.09429931640625, 0.85546875, 0.50537109375, 1.169921875, 0.2109375, 0.36181640625, 2.359375, 1.15625, 1.541015625, 0.0621337890625, 0.0298309326171875, 1.16796875, 0.1510009765625, 0.037322998046875, 0.01149749755859375, 0.005123138427734375, 0.0079803466796875, 0.053497314453125, 0.00411224365234375, 0.07086181640625, 0.2457275390625, 0.10015869140625, 0.0290985107421875, 0.1510009765625, 0.03192138671875, 0.005130767822265625, 0.350341796875, 0.0265960693359375, 0.0307464599609375, 0.0013685226440429688, 0.02728271484375, 0.353759765625, 0.405029296875, 0.12322998046875, 1.27734375, 0.77880859375, 0.79736328125, 0.0096893310546875, 0.8173828125, 0.02423095703125, 0.0108184814453125, 0.849609375, 0.68505859375, 0.203125, 0.1607666015625, 0.65234375, 1.4384765625, 0.69189453125], "tokens": [664, 319, 477, 753, 310, 886, 1541, 328, 322, 4345, 2154, 322, 1361, 31, 3242, 11187, 32, 664, 319, 477, 753, 9810, 4058, 886, 3051, 432, 322, 1361, 31, 3242, 32, 664, 319, 477, 753, 773, 886, 2677, 372, 1505, 32, 664, 319, 477, 601, 14071, 322, 2677, 438, 10912, 2670, 310]}
{"line_number": 314, "line_type": "original", "code": "        return true;", "entropy": 3.6796875, "is_bug_line": false, "sus_score": 0.5163977794943222, "per_token_entropy": [6.0234375, 1.4287109375, 7.25390625, 0.0116729736328125], "tokens": [351, 442, 861, 45]}
{"line_number": 314, "line_type": "generated", "code": "\n\n      case Token.HOOK:\n        // The condition is evaluated first, then the first branch or\n        // the second branch is evaluated.", "entropy": 0.576171875, "is_bug_line": false, "sus_score": 0.5163977794943222, "per_token_entropy": [0.83740234375, 0.59765625, 0.0004127025604248047, 5.936622619628906e-05, 0.003261566162109375, 0.0004341602325439453, 0.126708984375, 0.2548828125, 1.068359375, 0.58056640625, 0.802734375, 0.6767578125, 1.0126953125, 0.93603515625, 1.2861328125, 0.3720703125, 0.64306640625, 0.422607421875, 1.0302734375, 1.0732421875, 0.00047707557678222656, 0.350830078125, 0.1370849609375, 0.92041015625, 1.3671875, 0.41845703125, 0.64111328125], "tokens": [1687, 1135, 6512, 32, 29243, 44, 291, 434, 886, 3700, 438, 22423, 1932, 30, 1615, 322, 1932, 5573, 556, 291, 434, 322, 3100, 5573, 438, 22423, 32]}
{"line_number": 342, "line_type": "original", "code": "      if (NodeUtil.isLhs(n, n.getParent())) {", "entropy": 2.06640625, "is_bug_line": false, "sus_score": 0.5163977794943222, "per_token_entropy": [4.47265625, 1.3056640625, 0.1768798828125, 9.0546875, 0.00864410400390625, 0.00018787384033203125, 0.062408447265625, 5.52734375, 1.54296875, 2.12109375, 1.9453125, 3.390625, 3.2578125, 0.1781005859375, 1.5517578125, 0.5126953125, 0.011016845703125], "tokens": [647, 415, 308, 1212, 1733, 32, 297, 62, 3914, 26, 96, 30, 310, 32, 18789, 5156, 301]}
{"line_number": 342, "line_type": "generated", "code": "\n    if (v1 == VariableLiveness.READ && v2 == VariableLiveness.READ) {\n      return VariableLiveness.READ;\n    }\n    return VariableLiveness.MAYBE_LIVE;\n  }", "entropy": 0.1473388671875, "is_bug_line": false, "sus_score": 0.5163977794943222, "per_token_entropy": [0.36279296875, 0.5693359375, 0.1187744140625, 0.032806396484375, 0.020477294921875, 0.08056640625, 0.0999755859375, 0.0004723072052001953, 7.987022399902344e-06, 9.620189666748047e-05, 0.80419921875, 1.59765625, 0.1776123046875, 0.00945281982421875, 0.025634765625, 0.0014829635620117188, 0.00013720989227294922, 4.76837158203125e-07, 0.00021541118621826172, 0.228515625, 0.006259918212890625, 0.005641937255859375, 0.059844970703125, 0.03973388671875, 0.0281982421875, 0.00036263465881347656, 0.00019800662994384766, 0.00023984909057617188, 0.037445068359375, 0.001819610595703125, 0.07098388671875, 0.0269012451171875, 0.669921875, 1.2109375, 0.05670166015625, 0.00014472007751464844, 1.1920928955078125e-06, 0.00016641616821289062, 0.2286376953125, 1.3113021850585938e-05, 0.00014483928680419922, 2.8848648071289062e-05, 0.0031948089599609375, 0.04925537109375, 0.0074005126953125], "tokens": [284, 415, 308, 104, 35, 610, 9870, 62, 28597, 32, 4409, 962, 354, 36, 610, 9870, 62, 28597, 32, 4409, 27, 301, 397, 442, 9870, 62, 28597, 32, 4409, 45, 284, 320, 284, 442, 9870, 62, 28597, 32, 44380, 81, 1798, 2478, 45, 334, 320]}
{"line_number": 354, "line_type": "original", "code": "        return VariableLiveness.READ;", "entropy": 1.6494140625, "is_bug_line": false, "sus_score": 0.5163977794943222, "per_token_entropy": [7.2578125, 1.3193359375, 0.2069091796875, 0.0008053779602050781, 9.66787338256836e-05, 0.002178192138671875, 4.37890625, 0.029815673828125], "tokens": [351, 442, 9870, 62, 28597, 32, 4409, 45]}
{"line_number": 354, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5163977794943222, "per_token_entropy": [], "tokens": []}
{"line_number": 343, "line_type": "original", "code": "        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);", "entropy": 2.525390625, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [6.83984375, 10.390625, 0.00565338134765625, 0.005634307861328125, 0.04632568359375, 0.032989501953125, 9.7109375, 0.06549072265625, 3.5546875, 0.1986083984375, 0.1068115234375, 0.01611328125, 0.424072265625, 0.20947265625, 0.0005846023559570312, 11.0625, 0.2548828125], "tokens": [351, 40596, 32, 1553, 1078, 26, 96, 32, 18789, 922, 10272, 346, 610, 6512, 32, 25620, 293]}
{"line_number": 343, "line_type": "generated", "code": "\n    if (v1 == VariableLiveness.KILL &&\n        v2 == VariableLiveness.KILL) {\n      return VariableLiveness.KILL;\n    }\n    if (v1 == VariableLiveness.READ ||\n        v2 == VariableLiveness", "entropy": 0.11761474609375, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [0.12127685546875, 0.436767578125, 0.1461181640625, 0.045745849609375, 0.02313232421875, 0.04815673828125, 0.1334228515625, 0.00023889541625976562, 6.4373016357421875e-06, 9.775161743164062e-05, 0.5478515625, 0.5400390625, 1.3955078125, 0.01506805419921875, 0.007778167724609375, 0.01337432861328125, 0.0013599395751953125, 3.218650817871094e-05, 7.152557373046875e-07, 5.626678466796875e-05, 0.001590728759765625, 0.0159759521484375, 0.004116058349609375, 0.0882568359375, 0.0728759765625, 0.10247802734375, 0.0002167224884033203, 3.1948089599609375e-05, 0.0002161264419555664, 0.0261688232421875, 0.0025997161865234375, 0.038299560546875, 0.005603790283203125, 0.53173828125, 0.89208984375, 0.0408935546875, 0.00969696044921875, 0.007720947265625, 0.07086181640625, 0.006465911865234375, 0.0001385211944580078, 3.5762786865234375e-07, 7.355213165283203e-05, 0.409423828125, 0.1356201171875, 0.168212890625, 0.0009069442749023438, 0.00862884521484375, 0.0008897781372070312, 0.0005340576171875, 2.384185791015625e-05, 3.5762786865234375e-07], "tokens": [284, 415, 308, 104, 35, 610, 9870, 62, 28597, 32, 48995, 962, 291, 354, 36, 610, 9870, 62, 28597, 32, 48995, 27, 301, 397, 442, 9870, 62, 28597, 32, 48995, 45, 284, 320, 284, 415, 308, 104, 35, 610, 9870, 62, 28597, 32, 4409, 1276, 291, 354, 36, 610, 9870, 62, 28597]}
{"line_number": 347, "line_type": "original", "code": "        Node rhs = n.getNext();", "entropy": 2.740234375, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [5.79296875, 7.91015625, 2.36328125, 0.126708984375, 0.265869140625, 0.0113525390625, 5.25, 0.2010498046875], "tokens": [351, 4004, 9322, 280, 310, 32, 23017, 473]}
{"line_number": 347, "line_type": "generated", "code": "\n    } else {\n      return VariableLiveness.MAYBE_LIVE;\n    }\n  }", "entropy": 0.11236572265625, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [0.199951171875, 0.1165771484375, 0.83642578125, 0.56201171875, 0.049560546875, 0.1517333984375, 0.015960693359375, 0.00029206275939941406, 4.172325134277344e-06, 0.0006265640258789062, 0.00479888916015625, 4.7206878662109375e-05, 0.0004634857177734375, 9.775161743164062e-06, 0.004314422607421875, 0.08990478515625, 0.0021953582763671875, 0.0927734375, 0.007747650146484375], "tokens": [284, 320, 813, 301, 397, 442, 9870, 62, 28597, 32, 44380, 81, 1798, 2478, 45, 284, 320, 334, 320]}
{"line_number": 348, "line_type": "original", "code": "        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);", "entropy": 1.6845703125, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [6.5, 5.76171875, 0.007038116455078125, 0.00024127960205078125, 1.6953125, 0.18115234375, 3.064453125, 0.036529541015625, 0.011260986328125, 0.007598876953125, 0.0004878044128417969, 0.0193939208984375, 9.5390625, 0.029449462890625, 0.07867431640625, 0.017333984375], "tokens": [351, 9870, 62, 28597, 1603, 280, 438, 3818, 2230, 5658, 27875, 26, 14312, 30, 2677, 293]}
{"line_number": 348, "line_type": "generated", "code": "\n    }\n  }", "entropy": 0.52197265625, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [1.7509765625, 0.12176513671875, 0.20849609375, 0.005832672119140625], "tokens": [284, 320, 334, 320]}
{"line_number": 349, "line_type": "original", "code": "        if (state == VariableLiveness.READ) {", "entropy": 1.3505859375, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [5.4453125, 4.63671875, 0.119873046875, 3.50390625, 0.5634765625, 0.052215576171875, 0.0032291412353515625, 0.00010776519775390625, 0.001461029052734375, 1.80859375, 0.0380859375, 0.03240966796875], "tokens": [351, 415, 308, 1293, 610, 9870, 62, 28597, 32, 4409, 27, 301]}
{"line_number": 349, "line_type": "generated", "code": "\n    }\n  }", "entropy": 0.1199951171875, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [0.29052734375, 0.0823974609375, 0.098876953125, 0.00823211669921875], "tokens": [284, 320, 334, 320]}
{"line_number": 309, "line_type": "original", "code": "            if (!ControlFlowGraph.isEnteringNewCfgNode(sibling)) {", "entropy": 1.78125, "is_bug_line": true, "sus_score": 0.48507125007266594, "per_token_entropy": [10.1796875, 4.5078125, 3.48046875, 2.947265625, 8.320808410644531e-05, 0.0005645751953125, 0.0017843246459960938, 0.050537109375, 0.09698486328125, 1.3470649719238281e-05, 0.001689910888671875, 0.0033664703369140625, 0.0005006790161132812, 0.0026683807373046875, 8.890625, 0.07269287109375, 0.04290771484375], "tokens": [1468, 415, 1429, 2422, 4055, 3406, 32, 297, 6545, 299, 1812, 11812, 1212, 26, 43286, 490, 301]}
{"line_number": 309, "line_type": "generated", "code": "\n      case Token.HOOK:\n        // If current node is the condition, check each following\n        // branch, otherwise it is a conditional branch and the\n        // other branch can be ignored.\n        return isVariableReadBeforeKill(n.getFirstChild(), variable", "entropy": 0.1951904296875, "is_bug_line": true, "sus_score": 0.48507125007266594, "per_token_entropy": [0.58251953125, 0.900390625, 0.001789093017578125, 0.0002779960632324219, 0.8330078125, 0.00612640380859375, 0.421142578125, 1.099609375, 1.2646484375, 0.96923828125, 0.01044464111328125, 0.005535125732421875, 0.02362060546875, 0.042205810546875, 0.04229736328125, 0.081298828125, 0.05035400390625, 0.025115966796875, 0.0648193359375, 0.0006175041198730469, 0.00519561767578125, 0.0457763671875, 0.0033111572265625, 0.005054473876953125, 0.0013751983642578125, 0.0015592575073242188, 0.0024471282958984375, 0.0013589859008789062, 0.0033740997314453125, 0.00673675537109375, 0.0104827880859375, 0.0005512237548828125, 0.0011463165283203125, 0.0003714561462402344, 0.00119781494140625, 0.00025200843811035156, 0.0006175041198730469, 0.0033359527587890625, 0.478759765625, 2.224609375, 0.1778564453125, 0.013702392578125, 0.010772705078125, 0.004703521728515625, 0.0006532669067382812, 0.0256500244140625, 0.1982421875, 0.0016937255859375, 0.3603515625, 0.0002453327178955078, 0.12261962890625, 0.01212310791015625], "tokens": [397, 1135, 6512, 32, 29243, 44, 291, 434, 1670, 1550, 1541, 438, 322, 3700, 30, 1505, 2504, 2412, 291, 434, 5573, 30, 5878, 561, 438, 312, 21161, 5573, 461, 322, 291, 434, 1604, 5573, 883, 526, 10302, 32, 291, 442, 438, 3818, 2230, 5658, 27875, 26, 96, 32, 25657, 2931, 1026, 2677]}
{"line_number": 310, "line_type": "original", "code": "            state = isVariableReadBeforeKill(sibling, variable);", "entropy": 2.00390625, "is_bug_line": true, "sus_score": 0.48507125007266594, "per_token_entropy": [9.5546875, 7.53515625, 0.07965087890625, 0.62841796875, 0.0237579345703125, 0.0044708251953125, 0.0027675628662109375, 0.0001976490020751953, 0.0110015869140625, 7.69921875, 0.03778076171875, 0.470458984375, 0.01438140869140625], "tokens": [1468, 1603, 280, 438, 3818, 2230, 5658, 27875, 26, 43286, 30, 2677, 293]}
{"line_number": 310, "line_type": "generated", "code": "\n      case Token.HOOK:\n        Node condition = n.getFirstChild();\n        Node thenPart = condition.getNext();\n        Node elsePart = thenPart.getNext();\n        VariableLiveness state = isVariableReadBeforeKill(condition, variable);\n        if", "entropy": 0.237060546875, "is_bug_line": true, "sus_score": 0.48507125007266594, "per_token_entropy": [1.275390625, 0.58154296875, 0.0010347366333007812, 6.592273712158203e-05, 0.2305908203125, 0.005954742431640625, 0.396728515625, 1.0771484375, 1.130859375, 0.0850830078125, 0.044525146484375, 0.0166778564453125, 0.0211181640625, 0.00037360191345214844, 0.01332855224609375, 0.0823974609375, 1.1533203125, 0.97119140625, 0.73583984375, 0.007080078125, 0.24755859375, 0.0007481575012207031, 7.49826431274414e-05, 0.055328369140625, 0.059967041015625, 0.315673828125, 0.01708984375, 0.0014142990112304688, 0.00412750244140625, 0.049346923828125, 1.0728836059570312e-06, 0.006500244140625, 2.3484230041503906e-05, 0.0408935546875, 0.5224609375, 0.85498046875, 0.00026988983154296875, 8.344650268554688e-07, 1.189453125, 0.2127685546875, 0.169189453125, 0.0018634796142578125, 0.001827239990234375, 0.0007729530334472656, 0.00019550323486328125, 0.0014934539794921875, 0.546875, 0.0027866363525390625, 0.053802490234375, 0.0006127357482910156, 0.042938232421875, 0.0982666015625], "tokens": [397, 1135, 6512, 32, 29243, 44, 291, 4004, 3700, 280, 310, 32, 25657, 2931, 473, 291, 4004, 1615, 2639, 280, 3700, 32, 23017, 473, 291, 4004, 813, 2639, 280, 1615, 2639, 32, 23017, 473, 291, 9870, 62, 28597, 1603, 280, 438, 3818, 2230, 5658, 27875, 26, 4742, 30, 2677, 293, 291, 415]}
{"line_number": 313, "line_type": "original", "code": "      if (state == VariableLiveness.READ) {", "entropy": 1.08203125, "is_bug_line": true, "sus_score": 0.48507125007266594, "per_token_entropy": [4.50390625, 3.02734375, 0.2366943359375, 2.75390625, 0.0860595703125, 0.431640625, 0.002178192138671875, 1.8715858459472656e-05, 0.0007719993591308594, 1.8251953125, 0.0921630859375, 0.02313232421875], "tokens": [647, 415, 308, 1293, 610, 9870, 62, 28597, 32, 4409, 27, 301]}
{"line_number": 313, "line_type": "generated", "code": "\n        return VariableLiveness.MAYBE_LIVE;\n\n      case Token.HOOK:\n        // The first child is the condition, the second is the true\n        // branch and the third is the false branch.", "entropy": 0.44873046875, "is_bug_line": true, "sus_score": 0.48507125007266594, "per_token_entropy": [0.56494140625, 0.865234375, 0.58349609375, 0.0006394386291503906, 7.68899917602539e-05, 0.0007429122924804688, 0.56689453125, 4.9114227294921875e-05, 0.0001404285430908203, 4.303455352783203e-05, 0.00677490234375, 0.6533203125, 0.1656494140625, 0.0002474784851074219, 1.0013580322265625e-05, 0.0047149658203125, 0.0003452301025390625, 0.175537109375, 0.37451171875, 1.220703125, 1.9130859375, 1.9873046875, 0.61572265625, 0.200927734375, 0.2001953125, 0.9921875, 1.01171875, 0.1297607421875, 0.52685546875, 0.2391357421875, 2.146484375, 1.8837890625, 0.005687713623046875, 0.60302734375, 0.81201171875, 0.048583984375, 0.0282440185546875, 0.10089111328125, 0.01715087890625, 0.0241241455078125, 0.044464111328125, 0.1275634765625], "tokens": [291, 442, 9870, 62, 28597, 32, 44380, 81, 1798, 2478, 45, 1687, 1135, 6512, 32, 29243, 44, 291, 434, 886, 1932, 2838, 438, 322, 3700, 30, 322, 3100, 438, 322, 861, 291, 434, 5573, 461, 322, 10970, 438, 322, 901, 5573, 32]}
{"line_number": 341, "line_type": "original", "code": "    if (NodeUtil.isName(n) && variable.equals(n.getString())) {", "entropy": 1.1923828125, "is_bug_line": true, "sus_score": 0.48507125007266594, "per_token_entropy": [3.287109375, 0.58544921875, 0.09661865234375, 6.63671875, 0.00481414794921875, 0.00015604496002197266, 0.09503173828125, 6.17578125, 0.2001953125, 2.544921875, 1.6826171875, 0.431640625, 2.64453125, 0.0648193359375, 0.040008544921875, 0.005718231201171875, 0.347412109375, 0.00403594970703125, 0.08880615234375, 0.08966064453125, 0.0148162841796875], "tokens": [264, 415, 308, 1212, 1733, 32, 297, 558, 26, 96, 27, 962, 2677, 32, 3574, 26, 96, 32, 7069, 5156, 301]}
{"line_number": 341, "line_type": "generated", "code": "\n    return v1 == v2? v1 : VariableLiveness.MAYBE_LIVE;\n  }", "entropy": 0.204345703125, "is_bug_line": true, "sus_score": 0.48507125007266594, "per_token_entropy": [0.348388671875, 1.5029296875, 0.8837890625, 0.06097412109375, 0.49365234375, 0.43212890625, 0.0038928985595703125, 0.2340087890625, 0.0762939453125, 0.04681396484375, 0.07244873046875, 0.0257568359375, 0.0007138252258300781, 4.76837158203125e-07, 0.0015592575073242188, 0.2449951171875, 7.05718994140625e-05, 0.00021886825561523438, 6.42538070678711e-05, 0.008056640625, 0.055694580078125, 0.00504302978515625], "tokens": [284, 442, 354, 35, 610, 354, 36, 1018, 354, 35, 499, 9870, 62, 28597, 32, 44380, 81, 1798, 2478, 45, 334, 320]}
{"line_number": 358, "line_type": "original", "code": "    switch (n.getType()) {", "entropy": 1.6337890625, "is_bug_line": true, "sus_score": 0.48507125007266594, "per_token_entropy": [7.02734375, 5.03515625, 0.29833984375, 0.60986328125, 0.0074310302734375, 0.01399993896484375, 0.00199127197265625, 0.07794189453125], "tokens": [264, 3578, 308, 96, 32, 10272, 1157, 301]}
{"line_number": 358, "line_type": "generated", "code": "\n\n  /**\n   * Determine if the variable is read before it is assigned.\n   * @param n The node to check.\n   * @param variable The variable to check.\n   * @return True if the variable is read before it is assigned.\n   */", "entropy": 0.57568359375, "is_bug_line": true, "sus_score": 0.48507125007266594, "per_token_entropy": [1.10546875, 0.970703125, 0.1341552734375, 0.0010585784912109375, 3.94921875, 0.52001953125, 1.068359375, 1.3994140625, 0.54248046875, 2.19140625, 1.4208984375, 0.98193359375, 0.09613037109375, 1.3583984375, 0.87255859375, 0.181884765625, 0.38232421875, 1.2333984375, 0.317626953125, 1.322265625, 0.92919921875, 1.35546875, 0.82763671875, 1.494140625, 0.494873046875, 0.04254150390625, 0.058441162109375, 0.0051727294921875, 0.1038818359375, 0.1773681640625, 0.0655517578125, 0.326904296875, 0.4443359375, 0.401123046875, 0.255859375, 0.00830841064453125, 0.259033203125, 0.01461029052734375, 0.12493896484375, 1.1162109375, 0.06439208984375, 0.2218017578125, 0.0823974609375, 0.09429931640625, 0.2442626953125, 0.06585693359375, 0.1561279296875, 0.022552490234375, 0.0828857421875, 0.29345703125, 0.019805908203125, 0.03424072265625], "tokens": [719, 1022, 664, 319, 22022, 415, 322, 2677, 438, 1491, 2670, 561, 438, 11012, 32, 664, 319, 477, 753, 310, 886, 1541, 372, 1505, 32, 664, 319, 477, 753, 2677, 886, 2677, 372, 1505, 32, 664, 319, 477, 601, 2933, 415, 322, 2677, 438, 1491, 2670, 561, 438, 11012, 32, 664, 569]}
{"line_number": 215, "line_type": "original", "code": "        return; // Variable not dead.", "entropy": 4.4140625, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [5.70703125, 9.171875, 0.062255859375, 3.3046875, 9.3359375, 2.9140625, 4.0703125, 0.734375], "tokens": [351, 442, 45, 434, 9870, 646, 13521, 32]}
{"line_number": 215, "line_type": "generated", "code": "\n        c = c.getNext();\n      }\n    }\n  }", "entropy": 0.08074951171875, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [0.1729736328125, 0.50732421875, 0.0005259513854980469, 0.002094268798828125, 0.0002906322479248047, 0.00033283233642578125, 0.005115509033203125, 0.088134765625, 2.8133392333984375e-05, 0.0460205078125, 0.0003399848937988281, 0.2252197265625, 0.0012121200561523438], "tokens": [291, 281, 280, 281, 32, 23017, 473, 397, 320, 284, 320, 334, 320]}
{"line_number": 381, "line_type": "original", "code": "    return VariableLiveness.MAYBE_LIVE;", "entropy": 0.88330078125, "is_bug_line": false, "sus_score": 0.41602514716892186, "per_token_entropy": [8.5546875, 1.0771484375, 0.049285888671875, 0.0003864765167236328, 0.0001461505889892578, 0.0039520263671875, 0.0038013458251953125, 0.0001068115234375, 0.00013053417205810547, 2.0503997802734375e-05, 0.031280517578125], "tokens": [264, 442, 9870, 62, 28597, 32, 44380, 81, 1798, 2478, 45]}
{"line_number": 381, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.41602514716892186, "per_token_entropy": [], "tokens": []}
{"line_number": 293, "line_type": "original", "code": "      VariableLiveness state = VariableLiveness.MAYBE_LIVE;", "entropy": 1.091796875, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [5.37890625, 5.76171875, 0.032623291015625, 0.0001995563507080078, 1.5107421875, 0.113525390625, 0.83154296875, 0.001766204833984375, 6.592273712158203e-05, 0.0009493827819824219, 2.736328125, 0.0002627372741699219, 0.00011539459228515625, 3.337860107421875e-06, 0.01111602783203125], "tokens": [647, 9870, 62, 28597, 1603, 280, 9870, 62, 28597, 32, 44380, 81, 1798, 2478, 45]}
{"line_number": 293, "line_type": "generated", "code": "\n        return VariableLiveness.KILL;\n      } else {\n        return VariableLiveness.READ;\n      }\n    }\n\n    if (n.getType() == Token.HOOK) {\n      if (isVariableReadBeforeKill(n.getFirstChild(), variable", "entropy": 0.1837158203125, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [0.1453857421875, 0.3212890625, 0.1348876953125, 0.0012645721435546875, 6.0558319091796875e-05, 0.0008902549743652344, 0.00839996337890625, 0.0057830810546875, 0.10382080078125, 0.00292205810546875, 0.314453125, 0.084228515625, 0.5849609375, 0.0648193359375, 0.002838134765625, 4.470348358154297e-05, 3.933906555175781e-06, 2.872943878173828e-05, 0.005397796630859375, 0.000858306884765625, 0.008392333984375, 0.00428009033203125, 0.0643310546875, 0.001140594482421875, 0.479248046875, 1.3740234375, 0.148681640625, 0.5458984375, 0.040740966796875, 0.7802734375, 0.00714111328125, 0.10870361328125, 0.0005102157592773438, 7.665157318115234e-05, 0.828125, 0.069580078125, 0.002490997314453125, 0.148193359375, 1.865234375, 0.0863037109375, 0.439453125, 0.027679443359375, 0.039459228515625, 0.004886627197265625, 0.0002913475036621094, 0.006927490234375, 0.032257080078125, 0.0003795623779296875, 0.6337890625, 0.00015413761138916016, 0.0055999755859375, 0.01458740234375], "tokens": [291, 442, 9870, 62, 28597, 32, 48995, 45, 397, 320, 813, 301, 291, 442, 9870, 62, 28597, 32, 4409, 45, 397, 320, 284, 320, 446, 415, 308, 96, 32, 10272, 346, 610, 6512, 32, 29243, 27, 301, 397, 415, 308, 297, 3818, 2230, 5658, 27875, 26, 96, 32, 25657, 2931, 1026, 2677]}
{"line_number": 294, "line_type": "original", "code": "      switch (n.getParent().getType()) {", "entropy": 1.0341796875, "is_bug_line": true, "sus_score": 0.4082482904638631, "per_token_entropy": [5.1875, 2.87890625, 0.25146484375, 0.0670166015625, 0.002185821533203125, 0.1165771484375, 0.0009984970092773438, 1.822265625, 0.00278472900390625, 0.01279449462890625], "tokens": [647, 3578, 308, 96, 32, 18789, 922, 10272, 1157, 301]}
{"line_number": 294, "line_type": "generated", "code": "\n        case Token.HOOK:\n          // If current node is the condition, check each following\n          // branch, otherwise it is a conditional branch and the\n          // other branch can be ignored.\n\n        case Token.OR:\n        case Token.AND:\n          //", "entropy": 0.158203125, "is_bug_line": true, "sus_score": 0.4082482904638631, "per_token_entropy": [0.32177734375, 1.0615234375, 0.007785797119140625, 0.0010538101196289062, 1.8955078125, 0.004634857177734375, 0.5185546875, 0.69580078125, 0.61279296875, 0.46240234375, 0.00505828857421875, 0.004474639892578125, 0.016571044921875, 0.0350341796875, 0.029815673828125, 0.056976318359375, 0.0277252197265625, 0.03692626953125, 0.01751708984375, 0.0023746490478515625, 0.0038623809814453125, 0.0269317626953125, 0.0019121170043945312, 0.00359344482421875, 0.00145721435546875, 0.0016393661499023438, 0.001873016357421875, 0.001049041748046875, 0.004100799560546875, 0.007358551025390625, 0.005313873291015625, 0.0009226799011230469, 0.0010137557983398438, 0.00038909912109375, 0.0010766983032226562, 0.0001634359359741211, 0.0019159317016601562, 0.004863739013671875, 0.775390625, 0.8466796875, 0.0021457672119140625, 0.0003428459167480469, 0.53466796875, 0.0018720626831054688, 0.04559326171875, 0.0007271766662597656, 0.0010471343994140625, 2.574920654296875e-05, 0.0020313262939453125, 0.00037741661071777344, 0.08233642578125, 0.045806884765625], "tokens": [291, 1135, 6512, 32, 29243, 44, 616, 434, 1670, 1550, 1541, 438, 322, 3700, 30, 1505, 2504, 2412, 616, 434, 5573, 30, 5878, 561, 438, 312, 21161, 5573, 461, 322, 616, 434, 1604, 5573, 883, 526, 10302, 32, 584, 1135, 6512, 32, 758, 44, 291, 1135, 6512, 32, 3349, 44, 616, 434]}
{"line_number": 307, "line_type": "original", "code": "          for(Node sibling = n.getNext(); sibling != null;", "entropy": 1.7255859375, "is_bug_line": true, "sus_score": 0.4082482904638631, "per_token_entropy": [7.5859375, 2.076171875, 4.890625, 0.13037109375, 5.2890625, 0.2425537109375, 0.032867431640625, 0.00638580322265625, 1.2978515625, 0.05157470703125, 1.537109375, 0.057708740234375, 0.02960205078125, 0.93212890625], "tokens": [2033, 436, 26, 1212, 40560, 280, 310, 32, 23017, 473, 40560, 863, 744, 45]}
{"line_number": 307, "line_type": "generated", "code": "\n    for (Node c = n.getFirstChild(); c!= null; c = c.getNext()) {\n      VariableLiveness state = isVariableReadBeforeKill(c, variable);\n      if (state == VariableLiveness.READ) {\n        return", "entropy": 0.07586669921875, "is_bug_line": true, "sus_score": 0.4082482904638631, "per_token_entropy": [0.62255859375, 1.115234375, 0.01947021484375, 0.0404052734375, 0.1568603515625, 0.1319580078125, 0.007137298583984375, 0.0019378662109375, 0.007373809814453125, 0.0004911422729492188, 0.006961822509765625, 0.01346588134765625, 0.00391387939453125, 0.0028629302978515625, 0.54248046875, 0.02581787109375, 0.003662109375, 0.0023326873779296875, 0.0004444122314453125, 0.0011644363403320312, 0.0098876953125, 0.0028934478759765625, 0.056732177734375, 0.2227783203125, 0.0012063980102539062, 0.00013244152069091797, 0.03497314453125, 0.00597381591796875, 0.0241851806640625, 0.0003762245178222656, 0.00035190582275390625, 0.00021338462829589844, 3.5881996154785156e-05, 0.0009098052978515625, 0.0055694580078125, 0.0011301040649414062, 0.002765655517578125, 0.0014524459838867188, 0.072021484375, 0.0657958984375, 0.00540924072265625, 0.0081634521484375, 0.09619140625, 0.0260009765625, 2.5033950805664062e-06, 3.2186508178710938e-06, 2.586841583251953e-05, 0.50341796875, 0.06427001953125, 0.0036792755126953125, 0.012847900390625, 0.00875091552734375], "tokens": [284, 436, 308, 1212, 281, 280, 310, 32, 25657, 2931, 473, 281, 863, 744, 45, 281, 280, 281, 32, 23017, 1157, 301, 397, 9870, 62, 28597, 1603, 280, 438, 3818, 2230, 5658, 27875, 26, 85, 30, 2677, 293, 397, 415, 308, 1293, 610, 9870, 62, 28597, 32, 4409, 27, 301, 291, 442]}
