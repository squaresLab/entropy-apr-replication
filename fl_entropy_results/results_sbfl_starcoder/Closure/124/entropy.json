{"line_number": 155, "line_type": "original", "code": "          return false;", "entropy": 3.39453125, "is_bug_line": false, "sus_score": 0.4472135954999579, "per_token_entropy": [9.09375, 2.60546875, 1.8642578125, 0.016815185546875], "tokens": [2033, 442, 901, 45]}
{"line_number": 155, "line_type": "generated", "code": "\n   */\n  private boolean isSafeReplacement(Node node, Node assign) {\n    Node parent = node.getParent();\n    Node grandParent = parent.getParent();\n\n    // If the node is a function name, then it can't be replaced.\n    if", "entropy": 0.58642578125, "is_bug_line": false, "sus_score": 0.4472135954999579, "per_token_entropy": [0.39990234375, 0.07965087890625, 0.0101776123046875, 0.057403564453125, 0.1436767578125, 0.00323486328125, 0.004184722900390625, 0.0013885498046875, 0.001461029052734375, 0.0190277099609375, 0.72802734375, 0.01654052734375, 0.00240325927734375, 1.505859375, 0.0853271484375, 0.0007233619689941406, 0.0826416015625, 1.6298828125, 1.5439453125, 0.0543212890625, 0.1556396484375, 0.108642578125, 0.0037689208984375, 0.0033721923828125, 0.1722412109375, 1.8115234375, 0.92822265625, 1.048828125, 0.0198974609375, 0.1866455078125, 0.08251953125, 0.0012865066528320312, 0.0004775524139404297, 1.0478515625, 0.7412109375, 1.96875, 0.51318359375, 1.3017578125, 0.282958984375, 1.45703125, 2.484375, 1.5185546875, 0.291259765625, 1.07421875, 1.060546875, 2.091796875, 0.6796875, 0.49267578125, 1.3056640625, 0.80224609375, 0.08111572265625, 0.392333984375], "tokens": [664, 569, 334, 945, 1905, 438, 11691, 24230, 26, 1212, 1541, 30, 4004, 5313, 27, 301, 284, 4004, 2935, 280, 1541, 32, 18789, 473, 284, 4004, 33162, 4433, 280, 2935, 32, 18789, 473, 446, 434, 1670, 322, 1541, 438, 312, 667, 636, 30, 1615, 561, 883, 1330, 526, 14171, 32, 284, 415]}
{"line_number": 211, "line_type": "original", "code": "    Preconditions.checkArgument(node.isGetProp());", "entropy": 1.9755859375, "is_bug_line": false, "sus_score": 0.4472135954999579, "per_token_entropy": [6.83984375, 9.703125, 0.010223388671875, 0.062408447265625, 1.205078125, 0.0438232421875, 1.7021484375, 0.0972900390625, 0.2484130859375, 3.24609375, 0.00859832763671875, 0.53466796875], "tokens": [264, 40596, 32, 1553, 3484, 26, 1251, 32, 297, 936, 6567, 1035]}
{"line_number": 211, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.4472135954999579, "per_token_entropy": [], "tokens": []}
{"line_number": 213, "line_type": "original", "code": "      node = node.getFirstChild();", "entropy": 2.400390625, "is_bug_line": true, "sus_score": 0.4472135954999579, "per_token_entropy": [9.8359375, 5.77734375, 0.448486328125, 0.53173828125, 0.0125885009765625, 2.541015625, 0.0030803680419921875, 0.05133056640625], "tokens": [647, 1541, 280, 1541, 32, 25657, 2931, 473]}
{"line_number": 213, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": true, "sus_score": 0.4472135954999579, "per_token_entropy": [], "tokens": []}
{"line_number": 214, "line_type": "original", "code": "    if (node.isName()", "entropy": 1.8232421875, "is_bug_line": true, "sus_score": 0.4472135954999579, "per_token_entropy": [6.97265625, 3.21875, 0.1605224609375, 1.2392578125, 0.04071044921875, 0.422119140625, 1.630859375, 0.89892578125], "tokens": [264, 415, 308, 1251, 32, 297, 558, 346]}
{"line_number": 214, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": true, "sus_score": 0.4472135954999579, "per_token_entropy": [], "tokens": []}
{"line_number": 219, "line_type": "original", "code": "    return true;", "entropy": 2.392578125, "is_bug_line": false, "sus_score": 0.4472135954999579, "per_token_entropy": [7.78125, 0.94970703125, 0.83642578125, 0.005786895751953125], "tokens": [264, 442, 861, 45]}
{"line_number": 219, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.4472135954999579, "per_token_entropy": [], "tokens": []}
{"line_number": 55, "line_type": "original", "code": "      reportCodeChange();", "entropy": 2.25390625, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [2.876953125, 8.203125, 0.11962890625, 0.0033740997314453125, 0.0609130859375], "tokens": [647, 3639, 1227, 1791, 473]}
{"line_number": 55, "line_type": "generated", "code": "\n   *     will be called twice, once for the first expression (the assignment\n   *     statement) and once for the second expression (the value of the\n   *     assignment).\n   * @return Whether the expression was collapsed.\n   */\n  private boolean", "entropy": 0.611328125, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.6669921875, 0.177734375, 0.2413330078125, 1.994140625, 0.96533203125, 0.447021484375, 0.433349609375, 1.1005859375, 0.31689453125, 0.75634765625, 1.005859375, 2.06640625, 1.4609375, 2.240234375, 1.583984375, 2.515625, 1.1552734375, 0.0003631114959716797, 0.003925323486328125, 2.5234375, 0.47314453125, 0.036468505859375, 0.217041015625, 0.0184478759765625, 0.03125, 0.1241455078125, 0.6728515625, 0.10980224609375, 0.12176513671875, 2.18359375, 1.0439453125, 0.1937255859375, 0.037261962890625, 2.467632293701172e-05, 0.0027484893798828125, 0.09674072265625, 0.405517578125, 0.1383056640625, 0.2626953125, 0.349853515625, 0.0217437744140625, 0.25341796875, 0.54736328125, 1.06640625, 0.135009765625, 0.6904296875, 0.341552734375, 0.0355224609375, 0.0229034423828125, 0.006847381591796875, 0.040557861328125, 0.45654296875], "tokens": [664, 319, 262, 1098, 526, 3823, 19465, 30, 5049, 436, 322, 1932, 6101, 308, 1382, 13807, 664, 319, 262, 7603, 27, 461, 5049, 436, 322, 3100, 6101, 308, 1382, 786, 432, 322, 664, 319, 262, 13807, 547, 664, 319, 477, 601, 14071, 322, 6101, 1597, 32710, 32, 664, 569, 334, 945, 1905]}
{"line_number": 136, "line_type": "original", "code": "          if (next.isQualifiedName()) {", "entropy": 1.7568359375, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [7.0234375, 1.5419921875, 0.583984375, 1.5751953125, 0.09393310546875, 0.62548828125, 2.244140625, 2.103515625, 0.01898193359375], "tokens": [2033, 415, 308, 1978, 32, 297, 41340, 1157, 301]}
{"line_number": 136, "line_type": "generated", "code": "\n            // and the l-value of the expr assign is the same as the\n            // expression itself, then we can inline the r-value into the\n            // l-value.\n            exprParent.removeChild(expr);\n            expr.removeChild(assign);", "entropy": 0.5107421875, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.97998046875, 0.24609375, 0.6337890625, 1.2177734375, 1.9970703125, 0.013153076171875, 0.01165771484375, 0.98486328125, 0.0924072265625, 1.037109375, 0.2034912109375, 0.313720703125, 1.009765625, 0.08233642578125, 0.349853515625, 0.36279296875, 0.84423828125, 0.0029296875, 1.8017578125, 2.580078125, 0.08013916015625, 0.1654052734375, 0.425048828125, 0.130126953125, 1.818359375, 0.66650390625, 1.93359375, 0.00576019287109375, 0.005161285400390625, 1.2001953125, 0.479736328125, 0.1317138671875, 0.01171875, 2.068359375, 0.0006799697875976562, 0.0032558441162109375, 0.55615234375, 0.69580078125, 0.75830078125, 0.05975341796875, 0.0001766681671142578, 0.104736328125, 0.00014984607696533203, 0.012298583984375, 0.0008134841918945312, 0.0299835205078125, 0.283447265625, 0.0704345703125, 0.0095062255859375, 0.00018525123596191406, 0.06610107421875, 0.0024700164794921875], "tokens": [324, 434, 461, 322, 456, 31, 853, 432, 322, 9810, 5313, 438, 322, 2432, 619, 322, 324, 434, 6101, 8015, 30, 1615, 996, 883, 4447, 322, 540, 31, 853, 1991, 322, 324, 434, 456, 31, 853, 32, 324, 9810, 4433, 32, 28878, 26, 3385, 293, 324, 9810, 32, 28878, 26, 5157, 293]}
{"line_number": 137, "line_type": "original", "code": "            String nextName = next.getQualifiedName();", "entropy": 1.810546875, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [5.40234375, 9.2734375, 1.2294921875, 0.271484375, 0.1285400390625, 1.3095703125, 0.0208740234375, 0.46826171875, 0.0042266845703125, 0.004268646240234375], "tokens": [1468, 892, 2354, 558, 280, 2354, 32, 371, 41340, 473]}
{"line_number": 137, "line_type": "generated", "code": "\n            // the assign here.\n\n            // Verify the assignment doesn't change its own value.\n            if (!isSafeReplacement(next, assign)) {\n              return false;\n            }\n\n            exprParent.removeChild(expr);\n            expr.removeChild(assign);\n           ", "entropy": 0.06549072265625, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.341064453125, 0.80126953125, 0.2646484375, 0.419921875, 0.1488037109375, 0.03778076171875, 0.62939453125, 0.043792724609375, 0.039642333984375, 0.013031005859375, 0.035308837890625, 0.003864288330078125, 6.413459777832031e-05, 0.00431060791015625, 0.00411224365234375, 0.0012912750244140625, 0.001071929931640625, 0.006866455078125, 0.00966644287109375, 0.0160675048828125, 0.004657745361328125, 0.003604888916015625, 0.0004973411560058594, 0.0013217926025390625, 0.0003941059112548828, 0.099365234375, 0.0016260147094726562, 0.019256591796875, 0.00803375244140625, 0.0010766983032226562, 0.0241851806640625, 0.00539398193359375, 0.0004429817199707031, 5.8770179748535156e-05, 0.00128936767578125, 0.00013399124145507812, 0.03924560546875, 0.2108154296875, 0.01800537109375, 4.076957702636719e-05, 0.02362060546875, 8.285045623779297e-05, 0.0050811767578125, 0.00022530555725097656, 0.0084228515625, 0.07403564453125, 0.00550079345703125, 0.0032100677490234375, 4.279613494873047e-05, 0.00475311279296875, 0.0004832744598388672, 0.01812744140625], "tokens": [324, 434, 322, 5313, 2442, 32, 1064, 434, 12072, 322, 13807, 4163, 1330, 1539, 2819, 4369, 786, 32, 324, 415, 1429, 297, 11691, 24230, 26, 1978, 30, 5313, 490, 301, 1090, 442, 901, 45, 324, 320, 1064, 9810, 4433, 32, 28878, 26, 3385, 293, 324, 9810, 32, 28878, 26, 5157, 293, 324]}
{"line_number": 138, "line_type": "original", "code": "            if (value.isQualifiedName() &&", "entropy": 1.841796875, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [5.76171875, 0.30322265625, 1.2783203125, 3.765625, 0.293701171875, 0.4775390625, 2.298828125, 1.169921875, 1.2314453125], "tokens": [1468, 415, 308, 853, 32, 297, 41340, 346, 962]}
{"line_number": 138, "line_type": "generated", "code": "\n            if (!isSafeReplacement(next, assign)) {\n              return false;\n            }\n\n            exprParent.removeChild(expr);\n            expr.removeChild(assign);\n            parent.replaceChild(next, assign);\n            return true;\n          }\n          return false", "entropy": 0.0560302734375, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.63623046875, 0.66748046875, 0.12060546875, 0.028289794921875, 0.00359344482421875, 0.00421905517578125, 0.0010576248168945312, 0.10894775390625, 0.00399017333984375, 0.0299835205078125, 0.0142669677734375, 0.01233673095703125, 0.09307861328125, 0.0132293701171875, 0.0005707740783691406, 5.161762237548828e-05, 0.0038013458251953125, 0.000766754150390625, 0.2049560546875, 0.1978759765625, 0.0164337158203125, 4.017353057861328e-05, 0.034912109375, 9.453296661376953e-05, 0.003604888916015625, 0.00022149085998535156, 0.00725555419921875, 0.054168701171875, 0.004627227783203125, 0.002666473388671875, 3.886222839355469e-05, 0.0026378631591796875, 0.00040459632873535156, 0.0164337158203125, 0.03973388671875, 0.0003306865692138672, 0.00768280029296875, 3.933906555175781e-05, 5.0902366638183594e-05, 0.019134521484375, 0.0014562606811523438, 0.00252532958984375, 0.0011768341064453125, 0.045623779296875, 0.0301666259765625, 0.0013484954833984375, 0.0003914833068847656, 0.046142578125, 0.0002111196517944336, 0.37646484375, 0.052276611328125, 0.0006814002990722656], "tokens": [324, 415, 1429, 297, 11691, 24230, 26, 1978, 30, 5313, 490, 301, 1090, 442, 901, 45, 324, 320, 1064, 9810, 4433, 32, 28878, 26, 3385, 293, 324, 9810, 32, 28878, 26, 5157, 293, 324, 2935, 32, 3227, 2931, 26, 1978, 30, 5313, 293, 324, 442, 861, 45, 616, 320, 616, 442, 901]}
{"line_number": 145, "line_type": "original", "code": "              if (!isSafeReplacement(next, assign)) {", "entropy": 2.875, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [9.1171875, 4.00390625, 3.263671875, 3.078125, 3.865234375, 4.70703125, 0.100830078125, 0.90087890625, 0.23828125, 4.3828125, 0.81201171875, 0.038421630859375], "tokens": [2850, 415, 1429, 297, 11691, 24230, 26, 1978, 30, 5313, 490, 301]}
{"line_number": 145, "line_type": "generated", "code": "\n      }\n    }\n    return false;\n  }", "entropy": 0.1160888671875, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.1925048828125, 0.0167999267578125, 0.138427734375, 0.0008444786071777344, 0.5537109375, 0.095947265625, 0.0163116455078125, 0.0031337738037109375, 0.1409912109375, 0.0024700164794921875], "tokens": [397, 320, 284, 320, 284, 442, 901, 45, 334, 320]}
{"line_number": 149, "line_type": "original", "code": "              exprParent.removeChild(expr);", "entropy": 2.201171875, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [12.0, 3.6015625, 1.8623046875, 0.0013513565063476562, 0.1209716796875, 0.0002930164337158203, 0.01413726806640625, 0.002552032470703125], "tokens": [2850, 9810, 4433, 32, 28878, 26, 3385, 293]}
{"line_number": 149, "line_type": "generated", "code": "\n  }", "entropy": 0.171875, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.330322265625, 0.01331329345703125], "tokens": [334, 320]}
{"line_number": 150, "line_type": "original", "code": "              expr.removeChild(assign);", "entropy": 2.93359375, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [12.2890625, 6.1875, 0.8388671875, 1.056640625, 0.0010967254638671875, 0.145263671875, 0.01837158203125], "tokens": [2850, 9810, 32, 28878, 26, 5157, 293]}
{"line_number": 150, "line_type": "generated", "code": "\n\n  /**\n   * @return Whether the replacement is safe to do.\n   */\n  private boolean isSafeReplacement(Node next, Node assign) {\n    Node nextParent = next.getParent();\n    Node assignParent = assign.getParent();\n    if (next", "entropy": 0.44140625, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [1.369140625, 0.25244140625, 0.028961181640625, 0.00028634071350097656, 2.642578125, 0.73046875, 0.11016845703125, 0.69482421875, 1.25390625, 0.95947265625, 0.485595703125, 1.6435546875, 0.90869140625, 0.349365234375, 0.468017578125, 0.266357421875, 0.0024166107177734375, 0.038177490234375, 0.155029296875, 0.0006957054138183594, 0.0004055500030517578, 0.00029015541076660156, 0.0005693435668945312, 0.0128936767578125, 1.8330078125, 0.025146484375, 0.0025005340576171875, 0.465087890625, 0.0171966552734375, 0.00023162364959716797, 0.0179290771484375, 1.0791015625, 2.33203125, 1.001953125, 0.0166778564453125, 0.046600341796875, 0.004337310791015625, 0.00167083740234375, 0.0025234222412109375, 0.1468505859375, 1.0576171875, 0.279296875, 0.062255859375, 0.0033397674560546875, 0.002193450927734375, 0.0017042160034179688, 0.0030536651611328125, 0.0014705657958984375, 0.49755859375, 0.84033203125, 0.135986328125, 0.70556640625], "tokens": [719, 1022, 664, 319, 477, 601, 14071, 322, 15909, 438, 10061, 372, 745, 32, 664, 569, 334, 945, 1905, 438, 11691, 24230, 26, 1212, 2354, 30, 4004, 5313, 27, 301, 284, 4004, 2354, 4433, 280, 2354, 32, 18789, 473, 284, 4004, 5313, 4433, 280, 5313, 32, 18789, 473, 284, 415, 308, 1978]}
{"line_number": 151, "line_type": "original", "code": "              parent.replaceChild(next, assign);", "entropy": 2.419921875, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [12.1171875, 10.8046875, 0.06719970703125, 0.39453125, 0.0038299560546875, 0.0026302337646484375, 0.59326171875, 0.008270263671875, 0.2044677734375, 0.011962890625], "tokens": [2850, 2935, 32, 3227, 2931, 26, 1978, 30, 5313, 293]}
{"line_number": 151, "line_type": "generated", "code": "\n  /**\n   * Checks if the replacement of {@code oldNode} with {@code newNode} is safe.\n   *\n   * <p>This method is used to check if the replacement of {@code oldNode} with\n   * {@code newNode} is", "entropy": 0.533203125, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.5849609375, 0.826171875, 0.053863525390625, 0.0004417896270751953, 2.810546875, 1.0634765625, 0.93359375, 0.9912109375, 0.89794921875, 1.20703125, 0.014739990234375, 1.4345703125, 0.481689453125, 0.00804901123046875, 0.37158203125, 0.039276123046875, 0.0023288726806640625, 0.0211639404296875, 0.0099945068359375, 0.77392578125, 0.921875, 0.18994140625, 0.017242431640625, 0.14697265625, 1.083984375, 0.0018062591552734375, 0.7080078125, 0.01551055908203125, 0.008453369140625, 1.59375, 1.162109375, 1.62109375, 1.615234375, 0.337890625, 1.9912109375, 0.50341796875, 1.0703125, 0.295166015625, 0.18798828125, 0.51611328125, 0.00688934326171875, 0.1998291015625, 0.011077880859375, 0.00954437255859375, 0.198974609375, 0.005130767822265625, 9.489059448242188e-05, 0.01482391357421875, 0.0006384849548339844, 0.006153106689453125, 0.006855010986328125, 0.73876953125], "tokens": [334, 1022, 664, 319, 17279, 415, 322, 15909, 432, 3088, 687, 3610, 1212, 111, 623, 3088, 687, 33202, 111, 438, 10061, 32, 664, 319, 664, 319, 333, 98, 48, 2272, 1411, 438, 1654, 372, 1505, 415, 322, 15909, 432, 3088, 687, 3610, 1212, 111, 623, 664, 319, 3088, 687, 33202, 111, 438]}
{"line_number": 152, "line_type": "original", "code": "              return true;", "entropy": 4.05078125, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [10.59375, 3.849609375, 1.720703125, 0.036376953125], "tokens": [2850, 442, 861, 45]}
{"line_number": 152, "line_type": "generated", "code": "\n   * Collapses an assignment expression into the left side.\n   *\n   * @param expr The expression to collapse.\n   * @param exprParent The parent of the expression.\n   * @return Whether the expression was collapsed successfully.\n   */\n  private", "entropy": 0.4443359375, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.5556640625, 0.1201171875, 1.78515625, 0.2939453125, 0.0035762786865234375, 1.533203125, 1.58203125, 1.681640625, 1.3740234375, 1.462890625, 1.587890625, 1.109375, 1.2939453125, 0.456787109375, 0.044647216796875, 0.76611328125, 0.0007867813110351562, 0.740234375, 0.1463623046875, 0.2646484375, 0.37451171875, 1.009765625, 0.71875, 0.43896484375, 0.2437744140625, 0.1573486328125, 0.0142669677734375, 0.145751953125, 0.1595458984375, 0.44384765625, 0.00775909423828125, 0.0616455078125, 0.11163330078125, 0.216552734375, 0.259033203125, 0.117919921875, 0.438232421875, 0.048736572265625, 0.0245208740234375, 0.063720703125, 0.93896484375, 0.01445770263671875, 0.038299560546875, 0.10113525390625, 0.005126953125, 0.0176239013671875, 0.034576416015625, 0.005863189697265625, 0.031524658203125, 0.01519012451171875, 0.017181396484375, 0.03765869140625], "tokens": [664, 319, 2561, 3712, 1464, 600, 13807, 6101, 1991, 322, 2841, 5209, 32, 664, 319, 664, 319, 477, 753, 9810, 886, 6101, 372, 19742, 32, 664, 319, 477, 753, 9810, 4433, 886, 2935, 432, 322, 6101, 32, 664, 319, 477, 601, 14071, 322, 6101, 1597, 32710, 7504, 32, 664, 569, 334, 945]}
{"line_number": 208, "line_type": "original", "code": "    if (node.isName()) {", "entropy": 1.419921875, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [6.0625, 2.77734375, 0.1700439453125, 1.0830078125, 0.03509521484375, 0.52294921875, 1.5166015625, 0.50732421875, 0.109375], "tokens": [264, 415, 308, 1251, 32, 297, 558, 1157, 301]}
{"line_number": 208, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [], "tokens": []}
{"line_number": 58, "line_type": "original", "code": "      collapseAssign(rightValue, expr, exprParent);", "entropy": 1.8994140625, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [5.99609375, 3.046875, 0.0178375244140625, 5.46875, 5.60546875, 0.1036376953125, 0.475341796875, 0.45263671875, 0.218994140625, 0.35791015625, 0.0124664306640625, 1.0478515625], "tokens": [647, 19742, 9079, 26, 990, 882, 30, 9810, 30, 9810, 4433, 293]}
{"line_number": 58, "line_type": "generated", "code": "\n  private boolean collapseAssignEqualTo(Node expr, Node exprParent, Node value) {\n    Preconditions.checkState(NodeUtil.isExprAssign(expr));\n    Preconditions.checkState(exprParent.getNext() == expr);\n    Preconditions.checkState", "entropy": 0.2393798828125, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [1.29296875, 0.321044921875, 0.5244140625, 0.00115203857421875, 0.0006117820739746094, 0.0020618438720703125, 0.0053253173828125, 0.09893798828125, 0.0172882080078125, 0.0015478134155273438, 0.08807373046875, 0.007740020751953125, 0.0005154609680175781, 0.0001747608184814453, 0.6640625, 0.00495147705078125, 0.002349853515625, 0.0101776123046875, 0.192626953125, 0.385498046875, 0.000476837158203125, 0.0081939697265625, 1.6015625, 0.0051422119140625, 0.99267578125, 7.56978988647461e-05, 6.508827209472656e-05, 0.00081634521484375, 0.00833892822265625, 0.0045318603515625, 0.0014142990112304688, 0.00385284423828125, 0.1708984375, 0.322998046875, 0.416259765625, 0.00017213821411132812, 0.0020503997802734375, 0.301513671875, 0.016326904296875, 0.5927734375, 0.70703125, 0.09100341796875, 1.9140625, 0.05877685546875, 0.0433349609375, 0.007762908935546875, 0.0458984375, 0.7265625, 0.65478515625, 0.00013780593872070312, 0.002307891845703125, 0.1182861328125], "tokens": [334, 945, 1905, 19742, 9079, 10249, 26, 1212, 9810, 30, 4004, 9810, 4433, 30, 4004, 786, 27, 301, 284, 40596, 32, 1553, 1078, 26, 1212, 1733, 32, 297, 6150, 9079, 26, 3385, 876, 284, 40596, 32, 1553, 1078, 26, 3385, 4433, 32, 23017, 346, 610, 9810, 293, 284, 40596, 32, 1553, 1078]}
{"line_number": 175, "line_type": "original", "code": "            parent = next;", "entropy": 4.7578125, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [10.2109375, 7.9609375, 0.1807861328125, 3.21484375, 2.2265625], "tokens": [1468, 2935, 280, 2354, 45]}
{"line_number": 175, "line_type": "generated", "code": "\n  private boolean isNameAssignedTo(String name, Node node) {\n    switch (node.getType()) {\n      case Token.ASSIGN:\n        return isNameAssignedTo(name, node.getLastChild());\n\n      case Token.VAR:\n        if (", "entropy": 0.192138671875, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [0.52880859375, 0.0784912109375, 0.051605224609375, 0.004161834716796875, 0.007541656494140625, 0.004611968994140625, 0.0039520263671875, 0.0031280517578125, 0.01953125, 0.00948333740234375, 0.0021991729736328125, 0.0030059814453125, 0.472412109375, 0.00283050537109375, 0.0036563873291015625, 0.16943359375, 1.9013671875, 0.02813720703125, 0.0024738311767578125, 0.00021588802337646484, 0.0313720703125, 0.00022649765014648438, 0.02166748046875, 0.07598876953125, 0.0278472900390625, 0.0011119842529296875, 8.988380432128906e-05, 1.31640625, 0.0030670166015625, 0.16015625, 0.716796875, 0.252197265625, 0.07244873046875, 0.0126190185546875, 0.00555419921875, 0.02191162109375, 0.0265960693359375, 0.00014328956604003906, 0.0196990966796875, 0.0022106170654296875, 0.32421875, 0.0018796920776367188, 0.11712646484375, 0.71826171875, 0.01291656494140625, 0.00011599063873291016, 2.09808349609375e-05, 1.060546875, 0.0003750324249267578, 0.1304931640625, 1.4013671875, 0.1575927734375], "tokens": [334, 945, 1905, 438, 558, 28565, 705, 26, 652, 636, 30, 4004, 1541, 27, 301, 284, 3578, 308, 1251, 32, 10272, 1157, 301, 397, 1135, 6512, 32, 25620, 44, 291, 442, 438, 558, 28565, 705, 26, 426, 30, 1541, 32, 20197, 2931, 1035, 1687, 1135, 6512, 32, 7416, 44, 291, 415, 308]}
{"line_number": 176, "line_type": "original", "code": "            next = leftSide.getNext();", "entropy": 2.857421875, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [9.65625, 7.6328125, 0.2025146484375, 4.46875, 0.037322998046875, 0.2099609375, 0.6337890625, 0.0252685546875], "tokens": [1468, 2354, 280, 2841, 7427, 32, 23017, 473]}
{"line_number": 176, "line_type": "generated", "code": "\n  private boolean isNameAssignedTo(String name, Node node) {\n    return false;\n  }", "entropy": 0.23046875, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [0.845703125, 0.25, 0.0672607421875, 0.0083770751953125, 0.0176239013671875, 0.00978851318359375, 0.00635528564453125, 0.004169464111328125, 0.02239990234375, 0.011932373046875, 0.002933502197265625, 0.0031719207763671875, 0.60986328125, 0.0034999847412109375, 0.003719329833984375, 0.1748046875, 2.33984375, 0.403076171875, 0.003925323486328125, 0.048797607421875, 0.0014743804931640625], "tokens": [334, 945, 1905, 438, 558, 28565, 705, 26, 652, 636, 30, 4004, 1541, 27, 301, 284, 442, 901, 45, 334, 320]}
{"line_number": 177, "line_type": "original", "code": "            break;", "entropy": 4.9921875, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [9.671875, 5.28125, 0.0219573974609375], "tokens": [1468, 1626, 45]}
{"line_number": 177, "line_type": "generated", "code": "\n  }", "entropy": 0.381103515625, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [0.75390625, 0.00827789306640625], "tokens": [334, 320]}
{"line_number": 170, "line_type": "original", "code": "          Node leftSide = next.getFirstChild();", "entropy": 2.46875, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [10.078125, 4.18359375, 4.1875, 0.75244140625, 0.04071044921875, 4.6328125, 0.58203125, 0.1905517578125, 0.0015630722045898438, 0.040313720703125], "tokens": [2033, 4004, 2841, 7427, 280, 2354, 32, 25657, 2931, 473]}
{"line_number": 170, "line_type": "generated", "code": "\n  }\n\n  /**\n   * Returns whether the given name is assigned to in the given node.\n   */\n  private boolean isNameAssignedTo(String name, Node node) {\n    Node current = node;\n    while (current!= null) {\n      switch", "entropy": 0.357177734375, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [0.427001953125, 0.442138671875, 0.263916015625, 0.2318115234375, 0.033905029296875, 0.0004227161407470703, 2.11328125, 0.462890625, 0.60400390625, 0.94482421875, 0.3427734375, 0.404052734375, 0.343017578125, 0.087646484375, 0.9150390625, 0.40234375, 0.791015625, 1.1953125, 0.286865234375, 0.0193328857421875, 0.353271484375, 0.01062774658203125, 0.03411865234375, 0.1123046875, 0.0010328292846679688, 0.0021953582763671875, 0.0007381439208984375, 0.0003402233123779297, 0.0012149810791015625, 0.0084686279296875, 0.036285400390625, 0.0015697479248046875, 0.0010776519775390625, 0.837890625, 0.0017681121826171875, 0.00048089027404785156, 0.06182861328125, 1.8330078125, 2.4140625, 0.12078857421875, 0.019744873046875, 0.359375, 0.10552978515625, 0.173095703125, 0.036773681640625, 0.219482421875, 0.056427001953125, 0.00164031982421875, 0.065185546875, 0.0004978179931640625, 0.0291748046875, 1.3603515625], "tokens": [334, 320, 719, 1022, 664, 319, 3759, 4946, 322, 2702, 636, 438, 11012, 372, 328, 322, 2702, 1541, 32, 664, 569, 334, 945, 1905, 438, 558, 28565, 705, 26, 652, 636, 30, 4004, 1541, 27, 301, 284, 4004, 1550, 280, 1541, 45, 284, 2218, 308, 1700, 863, 744, 27, 301, 397, 3578]}
{"line_number": 171, "line_type": "original", "code": "          if (leftSide.isName() ||", "entropy": 2.21484375, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [9.03125, 2.138671875, 0.1287841796875, 3.06640625, 0.06573486328125, 0.0267791748046875, 0.470703125, 2.4375, 0.8056640625, 3.978515625], "tokens": [2033, 415, 308, 1873, 7427, 32, 297, 558, 346, 1276]}
{"line_number": 171, "line_type": "generated", "code": "\n  private boolean isNameAssignedTo(String name, Node replacement) {\n    if (name.equals(\"arguments\")) {\n      return false;\n    }\n    Node parent = replacement.getParent();\n    if (parent.isAssign()) {\n      Node left =", "entropy": 0.34521484375, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [1.2021484375, 1.1005859375, 0.1695556640625, 0.037628173828125, 0.04400634765625, 0.0073699951171875, 0.00157928466796875, 0.004116058349609375, 0.01468658447265625, 0.07574462890625, 0.004161834716796875, 0.0016422271728515625, 1.0185546875, 0.007511138916015625, 0.0030422210693359375, 0.07177734375, 2.14453125, 0.2462158203125, 1.2978515625, 0.0631103515625, 0.307373046875, 0.308349609375, 0.97705078125, 0.31689453125, 0.008880615234375, 0.0264434814453125, 0.386474609375, 0.34912109375, 0.0002796649932861328, 0.01329803466796875, 0.00035309791564941406, 0.91357421875, 1.3779296875, 1.359375, 0.048065185546875, 0.04010009765625, 0.16357421875, 0.012298583984375, 0.0086517333984375, 0.0950927734375, 0.77978515625, 0.07574462890625, 0.06268310546875, 0.386962890625, 0.1336669921875, 0.40576171875, 0.492919921875, 0.0007877349853515625, 0.071044921875, 0.455810546875, 0.484619140625, 0.377197265625], "tokens": [334, 945, 1905, 438, 558, 28565, 705, 26, 652, 636, 30, 4004, 15909, 27, 301, 284, 415, 308, 426, 32, 3574, 440, 8299, 2131, 301, 397, 442, 901, 45, 284, 320, 284, 4004, 2935, 280, 15909, 32, 18789, 473, 284, 415, 308, 2544, 32, 297, 9079, 1157, 301, 397, 4004, 2841, 280]}
