{"line_number": 187, "line_type": "original", "code": "      behavior.afterExitScope(t, new ReferenceMapWrapper(referenceMap));", "entropy": 2.283203125, "is_bug_line": false, "sus_score": 0.031686212526223896, "per_token_entropy": [7.42578125, 7.8046875, 0.0193939208984375, 1.296875, 2.9140625, 0.75537109375, 0.06341552734375, 0.58544921875, 0.01873779296875, 4.96875, 1.462890625, 1.21484375, 9.28125, 0.1453857421875, 0.6064453125, 0.002685546875, 0.2401123046875], "tokens": [647, 5853, 32, 5483, 8112, 5504, 26, 102, 30, 537, 9494, 1208, 4672, 26, 3576, 1208, 876]}
{"line_number": 187, "line_type": "generated", "code": "\n  }", "entropy": 0.1181640625, "is_bug_line": false, "sus_score": 0.031686212526223896, "per_token_entropy": [0.225830078125, 0.0104522705078125], "tokens": [334, 320]}
{"line_number": 110, "line_type": "original", "code": "    NodeTraversal.traverseRoots(", "entropy": 2.697265625, "is_bug_line": false, "sus_score": 0.02912346855536793, "per_token_entropy": [3.05859375, 5.46484375, 1.58203125, 0.0185394287109375, 0.0155181884765625, 8.6875, 0.05096435546875], "tokens": [264, 4004, 35699, 32, 33261, 46394, 26]}
{"line_number": 110, "line_type": "generated", "code": "\n  }\n\n  /**\n   * Add a reference to the given variable.\n   */\n  private void addReference(Var v, Reference ref) {\n    if (v.isGlobal()) {\n      behavior.addGlobalReference(v, ref);\n    }\n   ", "entropy": 0.38037109375, "is_bug_line": false, "sus_score": 0.02912346855536793, "per_token_entropy": [0.98046875, 0.08935546875, 0.3134765625, 0.3330078125, 0.0232086181640625, 0.0004253387451171875, 2.10546875, 0.4228515625, 0.3193359375, 0.42822265625, 0.279541015625, 0.94482421875, 0.0931396484375, 0.93798828125, 0.2724609375, 0.313232421875, 0.0025768280029296875, 0.37158203125, 0.04229736328125, 0.00040149688720703125, 0.00032806396484375, 0.0012674331665039062, 0.01442718505859375, 0.40966796875, 0.0005106925964355469, 0.00858306884765625, 1.080078125, 0.002105712890625, 0.0003151893615722656, 0.0279693603515625, 1.876953125, 0.759765625, 0.87939453125, 0.6123046875, 0.52490234375, 0.48486328125, 0.130859375, 0.0081329345703125, 0.0266265869140625, 1.2353515625, 0.0014314651489257812, 0.80712890625, 0.1055908203125, 0.0628662109375, 0.01145172119140625, 0.8701171875, 0.361083984375, 0.023468017578125, 0.037872314453125, 0.05047607421875, 0.00035953521728515625, 1.087890625], "tokens": [334, 320, 719, 1022, 664, 319, 2222, 312, 4121, 372, 322, 2702, 2677, 32, 664, 569, 334, 945, 763, 1015, 3564, 26, 1881, 354, 30, 9494, 2488, 27, 301, 284, 415, 308, 104, 32, 297, 4455, 1157, 301, 397, 5853, 32, 669, 4455, 3564, 26, 104, 30, 2488, 293, 284, 320, 284]}
{"line_number": 112, "line_type": "original", "code": "  }", "entropy": 1.2958984375, "is_bug_line": false, "sus_score": 0.02912346855536793, "per_token_entropy": [2.244140625, 0.347412109375], "tokens": [225, 320]}
{"line_number": 112, "line_type": "generated", "code": "\n  }\n\n  /**\n   * Adds a reference to the given variable in the current block.\n   */\n  private void addReference(Var var, Reference reference) {\n    ReferenceCollection collection = referenceMap.get(var);\n    if (collection == null)", "entropy": 0.312255859375, "is_bug_line": false, "sus_score": 0.02912346855536793, "per_token_entropy": [1.693359375, 0.056427001953125, 0.29248046875, 0.1910400390625, 0.024505615234375, 0.00039958953857421875, 2.04296875, 0.396240234375, 0.27978515625, 0.48779296875, 0.212646484375, 0.8232421875, 0.09185791015625, 2.576171875, 0.06793212890625, 0.8291015625, 0.947265625, 0.26220703125, 0.042816162109375, 0.1746826171875, 0.0022411346435546875, 0.1871337890625, 0.0308990478515625, 0.0006246566772460938, 0.0011911392211914062, 0.0019369125366210938, 0.0174713134765625, 0.97705078125, 0.00116729736328125, 0.005123138427734375, 1.1875, 0.00279998779296875, 0.00036835670471191406, 0.03497314453125, 1.0107421875, 0.015533447265625, 0.8291015625, 0.0269012451171875, 0.339111328125, 0.00018322467803955078, 0.00051116943359375, 0.004596710205078125, 0.000408172607421875, 0.00043582916259765625, 0.0006809234619140625, 0.0156402587890625, 0.01519775390625, 0.0006070137023925781, 0.0009584426879882812, 0.0254669189453125, 0.00018525123596191406, 0.0013532638549804688], "tokens": [334, 320, 719, 1022, 664, 319, 15450, 312, 4121, 372, 322, 2702, 2677, 328, 322, 1550, 2163, 32, 664, 569, 334, 945, 763, 1015, 3564, 26, 1881, 773, 30, 9494, 4121, 27, 301, 284, 9494, 2256, 4491, 280, 4121, 1208, 32, 371, 26, 869, 293, 284, 415, 308, 4170, 610, 744, 27]}
{"line_number": 184, "line_type": "original", "code": "      compiler.updateGlobalVarReferences(referenceMap, t.getScopeRoot());", "entropy": 2.7890625, "is_bug_line": false, "sus_score": 0.028759865427152538, "per_token_entropy": [5.03125, 6.4921875, 0.0128173828125, 10.2890625, 5.4453125, 3.70703125, 0.623046875, 0.256103515625, 1.564453125, 0.00905609130859375, 2.6640625, 2.044921875, 1.87890625, 0.12469482421875, 0.0037689208984375, 7.01171875, 0.24755859375], "tokens": [647, 8980, 32, 1877, 4455, 1881, 15661, 26, 3576, 1208, 30, 273, 32, 371, 5504, 4058, 1035]}
{"line_number": 184, "line_type": "generated", "code": "\n    }\n    return false;\n  }", "entropy": 0.102294921875, "is_bug_line": false, "sus_score": 0.028759865427152538, "per_token_entropy": [0.220458984375, 0.01459503173828125, 0.30224609375, 0.1763916015625, 0.058197021484375, 0.0005984306335449219, 0.045135498046875, 0.0009474754333496094], "tokens": [284, 320, 284, 442, 901, 45, 334, 320]}
{"line_number": 185, "line_type": "original", "code": "      behavior.afterExitScope(t, compiler.getGlobalVarReferences());", "entropy": 2.66015625, "is_bug_line": false, "sus_score": 0.028759865427152538, "per_token_entropy": [6.40625, 11.0546875, 0.0263519287109375, 1.404296875, 2.068359375, 0.323974609375, 0.059722900390625, 0.53857421875, 0.018157958984375, 11.3125, 1.2529296875, 3.92578125, 1.064453125, 0.321044921875, 0.1239013671875], "tokens": [647, 5853, 32, 5483, 8112, 5504, 26, 102, 30, 8980, 32, 33963, 1881, 15661, 1035]}
{"line_number": 185, "line_type": "generated", "code": "\n    return false;\n  }\n\n  /**\n   * Adds a reference to the given variable to the reference collection\n   * for the given node.\n   */\n  private void addReference(Var v, Reference r) {\n    ReferenceCollection rc = referenceMap.get", "entropy": 0.390625, "is_bug_line": false, "sus_score": 0.028759865427152538, "per_token_entropy": [0.171142578125, 0.394287109375, 0.0665283203125, 0.000545501708984375, 0.02630615234375, 0.0011434555053710938, 0.900390625, 0.368896484375, 0.04388427734375, 0.0007429122924804688, 1.3154296875, 0.407470703125, 0.4853515625, 0.4140625, 0.261474609375, 0.82861328125, 0.10845947265625, 1.3896484375, 0.12841796875, 2.296875, 1.2978515625, 0.81396484375, 0.0095367431640625, 0.67578125, 0.2841796875, 0.83203125, 1.2470703125, 0.1749267578125, 0.23388671875, 0.2254638671875, 0.0007634162902832031, 0.2257080078125, 0.078369140625, 0.0004930496215820312, 0.00033092498779296875, 0.0010700225830078125, 0.034149169921875, 0.464599609375, 0.00016045570373535156, 0.00653076171875, 1.072265625, 0.00024247169494628906, 0.00042629241943359375, 0.025970458984375, 0.82763671875, 0.0221405029296875, 1.9921875, 0.01280975341796875, 0.1416015625, 0.00018870830535888672, 8.52346420288086e-05, 0.005916595458984375], "tokens": [284, 442, 901, 45, 334, 320, 719, 1022, 664, 319, 15450, 312, 4121, 372, 322, 2702, 2677, 372, 322, 4121, 4491, 664, 319, 436, 322, 2702, 1541, 32, 664, 569, 334, 945, 763, 1015, 3564, 26, 1881, 354, 30, 9494, 540, 27, 301, 284, 9494, 2256, 7631, 280, 4121, 1208, 32, 371]}
{"line_number": 157, "line_type": "original", "code": "        addReference(v, new Reference(n, t, blockStack.peek()));", "entropy": 2.11328125, "is_bug_line": false, "sus_score": 0.028409549486356805, "per_token_entropy": [8.2421875, 9.7265625, 5.171875, 0.255615234375, 1.4931640625, 0.12457275390625, 3.984375, 0.6484375, 0.0791015625, 1.4736328125, 0.299560546875, 2.8828125, 2.298828125, 0.9140625, 0.138671875, 0.1171875, 0.017059326171875, 0.1728515625], "tokens": [351, 1015, 3564, 26, 104, 30, 537, 9494, 26, 96, 30, 273, 30, 2163, 3113, 32, 20124, 5073]}
{"line_number": 157, "line_type": "generated", "code": "\n  private boolean isBlockBoundary(Node n, Node parent) {\n    if (n.isScript()) {\n      return true;\n    }\n    if (n.isLabel()) {\n      return true;\n    }\n    if (n.isBlock()", "entropy": 0.293212890625, "is_bug_line": false, "sus_score": 0.028409549486356805, "per_token_entropy": [1.349609375, 0.21484375, 0.362060546875, 0.001209259033203125, 0.0021228790283203125, 0.00024068355560302734, 0.00229644775390625, 0.002593994140625, 0.06719970703125, 0.002048492431640625, 0.001583099365234375, 0.004241943359375, 0.0009226799011230469, 0.018157958984375, 0.2091064453125, 1.52734375, 0.08404541015625, 0.59375, 0.0701904296875, 0.244384765625, 1.9521484375, 0.256591796875, 0.03228759765625, 0.039337158203125, 0.333740234375, 0.35107421875, 9.226799011230469e-05, 0.036865234375, 0.0001163482666015625, 0.93017578125, 0.6767578125, 0.0648193359375, 0.4794921875, 0.0036945343017578125, 0.32763671875, 1.54296875, 0.1343994140625, 0.001277923583984375, 0.00565338134765625, 0.29345703125, 0.134521484375, 5.173683166503906e-05, 0.008941650390625, 4.7206878662109375e-05, 0.08306884765625, 0.2049560546875, 0.03656005859375, 0.308349609375, 0.004825592041015625, 0.183349609375, 1.34375, 0.7177734375], "tokens": [334, 945, 1905, 438, 2227, 19172, 26, 1212, 310, 30, 4004, 2935, 27, 301, 284, 415, 308, 96, 32, 297, 3206, 1157, 301, 397, 442, 861, 45, 284, 320, 284, 415, 308, 96, 32, 297, 2168, 1157, 301, 397, 442, 861, 45, 284, 320, 284, 415, 308, 96, 32, 297, 2227, 346]}
{"line_number": 241, "line_type": "original", "code": "    ReferenceCollection referenceInfo = referenceMap.get(v);", "entropy": 2.451171875, "is_bug_line": false, "sus_score": 0.028409549486356805, "per_token_entropy": [3.416015625, 2.52734375, 0.89599609375, 7.5234375, 2.68359375, 0.90966796875, 9.5390625, 2.646484375, 0.1622314453125, 0.0174560546875, 0.058197021484375, 1.4599609375, 0.0169677734375], "tokens": [264, 9494, 2256, 4121, 1120, 280, 4121, 1208, 32, 371, 26, 104, 293]}
{"line_number": 241, "line_type": "generated", "code": "\n    void add(Reference reference) {\n      references.add(reference);\n    }", "entropy": 0.2401123046875, "is_bug_line": false, "sus_score": 0.028409549486356805, "per_token_entropy": [0.6962890625, 2.64453125, 0.0185089111328125, 0.01861572265625, 0.0099029541015625, 0.4482421875, 0.0037975311279296875, 0.0170440673828125, 0.032562255859375, 0.09600830078125, 0.0002493858337402344, 0.0005121231079101562, 0.00018680095672607422, 0.0016918182373046875, 0.001800537109375, 0.0902099609375, 0.0005979537963867188], "tokens": [284, 763, 1015, 26, 3564, 4121, 27, 301, 397, 10647, 32, 669, 26, 3576, 293, 284, 320]}
{"line_number": 242, "line_type": "original", "code": "    if (referenceInfo == null) {", "entropy": 2.2734375, "is_bug_line": false, "sus_score": 0.028409549486356805, "per_token_entropy": [3.73828125, 6.85546875, 0.130859375, 3.14453125, 4.06640625, 2.3046875, 0.0225982666015625, 0.0343017578125, 0.17236328125], "tokens": [264, 415, 308, 3576, 1120, 610, 744, 27, 301]}
{"line_number": 242, "line_type": "generated", "code": "\n    @Override\n    public Iterator<Reference> iterator() {\n      return references.iterator();\n    }", "entropy": 0.1048583984375, "is_bug_line": false, "sus_score": 0.028409549486356805, "per_token_entropy": [0.452880859375, 1.3486328125, 0.00672149658203125, 0.020843505859375, 0.007167816162109375, 0.1279296875, 0.0010213851928710938, 0.00047278404235839844, 0.0001609325408935547, 0.0001798868179321289, 0.0002435445785522461, 0.0014009475708007812, 0.0260009765625, 0.0252685546875, 0.06903076171875, 0.002330780029296875, 0.0024967193603515625, 0.00034165382385253906, 0.004184722900390625, 0.0003147125244140625], "tokens": [284, 477, 1788, 284, 562, 14743, 46, 3564, 48, 10032, 346, 301, 397, 442, 10647, 32, 5162, 473, 284, 320]}
{"line_number": 243, "line_type": "original", "code": "      referenceInfo = new ReferenceCollection();", "entropy": 2.625, "is_bug_line": false, "sus_score": 0.028409549486356805, "per_token_entropy": [4.08203125, 9.5859375, 2.384765625, 1.9208984375, 1.041015625, 0.3857421875, 0.77294921875, 0.833984375], "tokens": [647, 4121, 1120, 280, 537, 9494, 2256, 473]}
{"line_number": 243, "line_type": "generated", "code": "\n    public Iterator<Reference> iterator() {\n      return references.iterator();\n    }\n\n    void add(Reference reference) {\n      references.add(reference);\n    }", "entropy": 0.08447265625, "is_bug_line": false, "sus_score": 0.028409549486356805, "per_token_entropy": [0.34765625, 0.01300048828125, 0.04632568359375, 0.0027790069580078125, 0.0011472702026367188, 0.00031638145446777344, 0.000484466552734375, 0.0009059906005859375, 0.00516510009765625, 0.12371826171875, 0.02813720703125, 0.06304931640625, 0.0037670135498046875, 0.0019550323486328125, 0.0007090568542480469, 0.0159912109375, 0.0002675056457519531, 0.1513671875, 1.408203125, 0.0225830078125, 0.015350341796875, 0.01367950439453125, 0.406982421875, 0.0044403076171875, 0.001010894775390625, 0.067626953125, 0.09906005859375, 0.0001055002212524414, 0.00022149085998535156, 7.462501525878906e-05, 0.001514434814453125, 0.0006241798400878906, 0.024627685546875, 0.0002429485321044922], "tokens": [284, 562, 14743, 46, 3564, 48, 10032, 346, 301, 397, 442, 10647, 32, 5162, 473, 284, 320, 446, 763, 1015, 26, 3564, 4121, 27, 301, 397, 10647, 32, 669, 26, 3576, 293, 284, 320]}
{"line_number": 244, "line_type": "original", "code": "      referenceMap.put(v, referenceInfo);", "entropy": 1.462890625, "is_bug_line": false, "sus_score": 0.028409549486356805, "per_token_entropy": [3.005859375, 7.99609375, 1.2041015625, 0.2020263671875, 1.6650390625, 0.052642822265625, 1.0927734375, 0.0169677734375, 0.7021484375, 0.138427734375, 0.0142364501953125], "tokens": [647, 4121, 1208, 32, 524, 26, 104, 30, 4121, 1120, 293]}
{"line_number": 244, "line_type": "generated", "code": "\n      return references.iterator();\n    }\n\n    public void add(Reference reference) {\n      references.add(reference);\n    }\n  }\n\n  /**\n   * A reference to a variable.\n   */\n  static class Reference {\n    private final Node node;\n   ", "entropy": 0.25341796875, "is_bug_line": false, "sus_score": 0.028409549486356805, "per_token_entropy": [0.60693359375, 0.10113525390625, 0.22509765625, 0.0043487548828125, 0.0025348663330078125, 0.0010547637939453125, 0.0693359375, 0.0001404285430908203, 0.1116943359375, 0.9130859375, 0.33984375, 0.0203399658203125, 0.01413726806640625, 0.01393890380859375, 0.41064453125, 0.00421905517578125, 0.00098419189453125, 0.25, 0.12261962890625, 0.0001188516616821289, 0.00024890899658203125, 8.90493392944336e-05, 0.0014467239379882812, 0.0009975433349609375, 0.06463623046875, 0.00037741661071777344, 0.7392578125, 0.0014209747314453125, 0.3486328125, 0.55078125, 0.064697265625, 0.00022792816162109375, 1.3017578125, 1.0263671875, 0.410888671875, 0.0943603515625, 0.3818359375, 0.5595703125, 0.6494140625, 0.138671875, 0.0025997161865234375, 0.10467529296875, 0.040618896484375, 0.0011444091796875, 0.061737060546875, 0.3349609375, 1.4541015625, 0.38525390625, 0.272705078125, 0.82373046875, 0.0018405914306640625, 0.140869140625], "tokens": [397, 442, 10647, 32, 5162, 473, 284, 320, 446, 562, 763, 1015, 26, 3564, 4121, 27, 301, 397, 10647, 32, 669, 26, 3576, 293, 284, 320, 334, 320, 719, 1022, 664, 319, 399, 4121, 372, 312, 2677, 32, 664, 569, 334, 907, 443, 9494, 301, 284, 945, 1158, 4004, 1541, 45, 284]}
{"line_number": 248, "line_type": "original", "code": "    referenceInfo.add(reference);", "entropy": 1.9521484375, "is_bug_line": false, "sus_score": 0.028409549486356805, "per_token_entropy": [2.412109375, 8.578125, 3.736328125, 0.02667236328125, 0.79296875, 0.0111846923828125, 0.050628662109375, 0.00589752197265625], "tokens": [264, 4121, 1120, 32, 669, 26, 3576, 293]}
{"line_number": 248, "line_type": "generated", "code": "\n    }\n  }\n\n  /**\n   * A reference to a variable.\n   */\n  static class Reference {\n    final Node node;\n    final int type;\n\n    Reference(Node node, int type) {\n      this.node = node;\n      this.type", "entropy": 0.291259765625, "is_bug_line": false, "sus_score": 0.028409549486356805, "per_token_entropy": [0.5068359375, 0.0010547637939453125, 0.317626953125, 0.0010347366333007812, 0.297119140625, 0.54541015625, 0.050933837890625, 0.0001780986785888672, 1.279296875, 0.89453125, 0.470947265625, 0.0830078125, 0.391357421875, 0.56689453125, 0.6474609375, 0.138671875, 0.0025463104248046875, 0.105712890625, 0.041656494140625, 0.0009069442749023438, 0.07965087890625, 0.3583984375, 1.357421875, 0.27197265625, 0.94091796875, 0.0016183853149414062, 0.1666259765625, 0.122314453125, 1.84765625, 1.7236328125, 0.0246124267578125, 0.79296875, 0.93017578125, 0.0033016204833984375, 0.01065826416015625, 0.056427001953125, 0.01320648193359375, 0.0158538818359375, 0.00579071044921875, 0.0008292198181152344, 0.0007576942443847656, 0.012542724609375, 0.04736328125, 6.914138793945312e-05, 0.00347900390625, 0.00044727325439453125, 0.0085296630859375, 0.002410888671875, 0.00531005859375, 0.00249481201171875, 2.0503997802734375e-05, 0.00010454654693603516], "tokens": [284, 320, 334, 320, 719, 1022, 664, 319, 399, 4121, 372, 312, 2677, 32, 664, 569, 334, 907, 443, 9494, 301, 284, 1158, 4004, 1541, 45, 284, 1158, 629, 827, 45, 446, 9494, 26, 1212, 1541, 30, 629, 827, 27, 301, 397, 458, 32, 1251, 280, 1541, 45, 397, 458, 32, 681]}
{"line_number": 249, "line_type": "original", "code": "  }", "entropy": 1.677734375, "is_bug_line": false, "sus_score": 0.028409549486356805, "per_token_entropy": [3.322265625, 0.03314208984375], "tokens": [225, 320]}
{"line_number": 249, "line_type": "generated", "code": "\n    }\n  }\n\n  /**\n   * A reference to a variable.\n   */\n  static class Reference {\n\n    final Node n;\n    final Node parent;\n\n    Reference(Node n, Node parent) {\n      this.n = n;\n      this.parent", "entropy": 0.30029296875, "is_bug_line": false, "sus_score": 0.028409549486356805, "per_token_entropy": [0.58349609375, 0.01201629638671875, 0.56298828125, 0.00189208984375, 0.44921875, 0.51220703125, 0.05419921875, 0.00018656253814697266, 1.2900390625, 0.81494140625, 0.451416015625, 0.09515380859375, 0.45166015625, 0.595703125, 0.66357421875, 0.138671875, 0.00298309326171875, 0.12298583984375, 0.05609130859375, 0.00125885009765625, 0.07342529296875, 1.265625, 1.529296875, 0.25537109375, 0.97314453125, 0.0018663406372070312, 0.253173828125, 0.11383056640625, 1.4609375, 0.428955078125, 0.0027179718017578125, 1.2177734375, 1.0126953125, 0.003597259521484375, 0.005573272705078125, 0.02203369140625, 0.02850341796875, 0.004688262939453125, 0.0013475418090820312, 0.004070281982421875, 0.0004506111145019531, 0.007144927978515625, 0.0709228515625, 8.249282836914062e-05, 0.0031795501708984375, 0.00041484832763671875, 0.01136016845703125, 0.0012998580932617188, 0.004241943359375, 0.00237274169921875, 3.552436828613281e-05, 6.437301635742188e-05], "tokens": [284, 320, 334, 320, 719, 1022, 664, 319, 399, 4121, 372, 312, 2677, 32, 664, 569, 334, 907, 443, 9494, 301, 446, 1158, 4004, 310, 45, 284, 1158, 4004, 2935, 45, 446, 9494, 26, 1212, 310, 30, 4004, 2935, 27, 301, 397, 458, 32, 96, 280, 310, 45, 397, 458, 32, 2544]}
{"line_number": 98, "line_type": "original", "code": "      Predicate<Var> varFilter) {", "entropy": 2.38671875, "is_bug_line": false, "sus_score": 0.02823912473624525, "per_token_entropy": [7.19921875, 11.1953125, 0.085693359375, 0.91943359375, 0.01336669921875, 0.97900390625, 0.0163421630859375, 0.94921875, 0.1343994140625], "tokens": [647, 23426, 46, 1881, 48, 773, 2348, 27, 301]}
{"line_number": 98, "line_type": "generated", "code": "\n  public void visit(NodeTraversal t, Node n, Node parent) {\n    switch (behavior) {\n      case BLOCK:\n        blockStack.push(new BasicBlock(n));\n        break;\n      case SCOPE:\n        blockStack.push(", "entropy": 0.283447265625, "is_bug_line": false, "sus_score": 0.02823912473624525, "per_token_entropy": [0.158935546875, 0.1361083984375, 0.09649658203125, 0.35595703125, 0.001453399658203125, 0.0019426345825195312, 0.28955078125, 0.0287933349609375, 0.00029349327087402344, 0.00679779052734375, 0.01235198974609375, 0.0120849609375, 0.06597900390625, 0.0060882568359375, 0.0003540515899658203, 0.049774169921875, 0.1920166015625, 0.9404296875, 0.0340576171875, 0.57177734375, 0.203369140625, 0.011383056640625, 0.128662109375, 0.0208740234375, 2.751953125, 0.289306640625, 0.09881591796875, 1.2978515625, 0.01013946533203125, 0.0024433135986328125, 0.2357177734375, 0.031646728515625, 1.6357421875, 0.096435546875, 0.00023818016052246094, 0.05548095703125, 0.2890625, 0.490966796875, 0.0531005859375, 0.1160888671875, 0.0011892318725585938, 0.26220703125, 0.023681640625, 2.267578125, 0.02117919921875, 0.0926513671875, 0.0628662109375, 1.189453125, 0.0005154609680175781, 0.001392364501953125, 0.03680419921875, 0.0017223358154296875], "tokens": [334, 562, 763, 7725, 26, 1212, 35699, 273, 30, 4004, 310, 30, 4004, 2935, 27, 301, 284, 3578, 308, 20502, 27, 301, 397, 1135, 20313, 44, 291, 2163, 3113, 32, 2018, 26, 890, 9261, 2227, 26, 96, 876, 291, 1626, 45, 397, 1135, 45318, 1304, 44, 291, 2163, 3113, 32, 2018, 26]}
{"line_number": 61, "line_type": "original", "code": "  private final Map<Var, ReferenceCollection> referenceMap =", "entropy": 2.44140625, "is_bug_line": false, "sus_score": 0.02823912473624525, "per_token_entropy": [4.73828125, 10.9296875, 0.51953125, 6.01953125, 0.040557861328125, 1.3955078125, 0.004032135009765625, 0.454833984375, 3.140625, 0.46630859375, 2.28125, 1.1044921875, 0.640625], "tokens": [225, 945, 1158, 3516, 46, 1881, 30, 9494, 2256, 48, 4121, 1208, 280]}
{"line_number": 61, "line_type": "generated", "code": "\n        compiler, this, externs, root);\n  }\n\n  /**\n   * Convenience method for running this pass over a tree with this\n   * class as a callback.\n   */\n  @Override\n  public void hotSwapScript(Node scriptRoot, Node original", "entropy": 0.12890625, "is_bug_line": false, "sus_score": 0.02823912473624525, "per_token_entropy": [0.68212890625, 0.107177734375, 0.002216339111328125, 0.84521484375, 0.001129150390625, 0.09759521484375, 7.152557373046875e-06, 0.006076812744140625, 0.01285552978515625, 0.007293701171875, 0.106201171875, 5.078315734863281e-05, 0.1024169921875, 0.556640625, 0.04864501953125, 0.0002758502960205078, 1.8076171875, 0.01560211181640625, 0.07666015625, 0.1627197265625, 0.05560302734375, 0.00589752197265625, 0.10858154296875, 0.09674072265625, 0.232666015625, 0.1041259765625, 0.03900146484375, 0.06365966796875, 0.0001399517059326172, 0.0062713623046875, 0.0069732666015625, 0.0017633438110351562, 0.0205230712890625, 0.372802734375, 0.2381591796875, 0.1427001953125, 0.022552490234375, 0.15771484375, 0.039947509765625, 0.0052337646484375, 0.0135345458984375, 0.04022216796875, 0.0132293701171875, 0.03948974609375, 0.0062103271484375, 0.00012993812561035156, 0.0028514862060546875, 0.00968170166015625, 0.0089111328125, 0.0110931396484375, 0.04632568359375, 0.1531982421875], "tokens": [291, 8980, 30, 458, 30, 12098, 101, 30, 3051, 293, 334, 320, 719, 1022, 664, 319, 46082, 1411, 436, 3974, 458, 3097, 2288, 312, 4345, 623, 458, 664, 319, 443, 619, 312, 3309, 32, 664, 569, 334, 477, 1788, 334, 562, 763, 14309, 13370, 3206, 26, 1212, 3261, 4058, 30, 4004, 4707]}
{"line_number": 67, "line_type": "original", "code": "  private final Deque<BasicBlock> blockStack = new ArrayDeque<BasicBlock>();", "entropy": 0.8037109375, "is_bug_line": false, "sus_score": 0.02823912473624525, "per_token_entropy": [3.615234375, 2.2890625, 1.8115234375, 0.482421875, 9.047985076904297e-05, 0.01026153564453125, 1.201171875, 0.12890625, 0.44677734375, 0.0213165283203125, 0.065185546875, 1.333984375, 0.0081329345703125, 0.00010800361633300781, 2.0859375, 0.1463623046875, 0.015289306640625], "tokens": [225, 945, 1158, 1513, 535, 46, 47269, 48, 2163, 3113, 280, 537, 2629, 40241, 46, 47269, 2923]}
{"line_number": 67, "line_type": "generated", "code": "\n\n  /**\n   * Returns the set of all variables that were referenced in the\n   * given scope.\n   */\n  public ImmutableSet<Var> getAllReferences(Node scope) {\n    Preconditions.checkState(scope.isScope());\n    return ImmutableSet.", "entropy": 0.6181640625, "is_bug_line": false, "sus_score": 0.02823912473624525, "per_token_entropy": [0.400390625, 0.402099609375, 0.053436279296875, 0.000560760498046875, 2.578125, 0.93505859375, 1.8271484375, 0.005462646484375, 1.3427734375, 0.80126953125, 0.99853515625, 1.1376953125, 0.81005859375, 1.31640625, 0.437255859375, 1.9208984375, 0.0006623268127441406, 1.4111328125, 1.291015625, 0.46435546875, 0.305419921875, 0.157958984375, 0.0850830078125, 0.9072265625, 1.0341796875, 0.00015091896057128906, 0.002208709716796875, 0.04241943359375, 0.0014181137084960938, 0.480712890625, 1.025390625, 0.218017578125, 0.4345703125, 1.146484375, 0.73046875, 0.0020618438720703125, 0.0914306640625, 0.61767578125, 0.0011043548583984375, 0.026611328125, 0.9853515625, 0.06011962890625, 1.529296875, 0.353515625, 0.1962890625, 1.0224609375, 0.368896484375, 0.2088623046875, 1.095703125, 0.8701171875, 0.0001537799835205078, 0.0301513671875], "tokens": [719, 1022, 664, 319, 3759, 322, 739, 432, 1169, 4886, 688, 4528, 15167, 328, 322, 664, 319, 2702, 4576, 32, 664, 569, 334, 562, 12932, 885, 46, 1881, 48, 16735, 15661, 26, 1212, 4576, 27, 301, 284, 40596, 32, 1553, 1078, 26, 3473, 32, 297, 5504, 1035, 284, 442, 12932, 885, 32]}
{"line_number": 99, "line_type": "original", "code": "    this.compiler = compiler;", "entropy": 2.55078125, "is_bug_line": false, "sus_score": 0.02823912473624525, "per_token_entropy": [3.169921875, 4.4921875, 0.03271484375, 4.49609375, 0.99755859375, 4.64453125, 0.0204315185546875], "tokens": [264, 458, 32, 10199, 280, 8980, 45]}
{"line_number": 99, "line_type": "generated", "code": "\n    switch (n.getType()) {\n      case Token.BLOCK:\n        // If we're visiting a block, push a new scope onto the stack.\n        blockStack.push(BasicBlock.fromBlock(n));\n        break;\n      case Token.", "entropy": 0.54248046875, "is_bug_line": false, "sus_score": 0.02823912473624525, "per_token_entropy": [0.54248046875, 1.751953125, 0.0467529296875, 0.25048828125, 0.0005064010620117188, 0.034698486328125, 0.0003299713134765625, 0.04364013671875, 0.378662109375, 0.044525146484375, 0.28564453125, 0.0107269287109375, 0.92626953125, 0.0021343231201171875, 0.2037353515625, 2.044921875, 3.14453125, 1.166015625, 1.5048828125, 2.291015625, 0.0012493133544921875, 0.1976318359375, 0.5673828125, 0.3603515625, 1.755859375, 1.8798828125, 0.28515625, 1.7802734375, 0.69140625, 0.1407470703125, 0.357421875, 0.47998046875, 0.089111328125, 0.5537109375, 0.0012454986572265625, 0.0008835792541503906, 0.08367919921875, 0.349853515625, 1.2529296875, 0.01053619384765625, 1.3798828125, 0.25927734375, 0.047393798828125, 0.13427734375, 0.0413818359375, 0.059478759765625, 0.2197265625, 0.000606536865234375, 0.515625, 0.032562255859375, 0.004482269287109375, 1.1205673217773438e-05], "tokens": [284, 3578, 308, 96, 32, 10272, 1157, 301, 397, 1135, 6512, 32, 10322, 44, 291, 434, 1670, 996, 4484, 7725, 299, 312, 2163, 30, 5840, 312, 537, 4576, 14807, 322, 4138, 32, 291, 2163, 3113, 32, 2018, 26, 47269, 32, 1070, 2227, 26, 96, 876, 291, 1626, 45, 397, 1135, 6512, 32]}
{"line_number": 100, "line_type": "original", "code": "    this.behavior = behavior;", "entropy": 3.119140625, "is_bug_line": false, "sus_score": 0.02823912473624525, "per_token_entropy": [2.890625, 6.12109375, 0.044403076171875, 3.24609375, 6.0390625, 2.4765625, 1.017578125], "tokens": [264, 458, 32, 20502, 280, 5853, 45]}
{"line_number": 100, "line_type": "generated", "code": "\n      Var v = t.getScope().getVar(n.getString());\n      if (v!= null && varFilter.apply(v)) {\n        ReferenceCollection refs = referenceMap.get(v);\n        if (refs == null) {\n          refs", "entropy": 0.161376953125, "is_bug_line": false, "sus_score": 0.02823912473624525, "per_token_entropy": [0.468505859375, 0.990234375, 0.7529296875, 0.01544189453125, 0.2235107421875, 0.0017795562744140625, 0.0300140380859375, 0.0070343017578125, 0.01380157470703125, 0.037689208984375, 0.1549072265625, 0.02947998046875, 0.007678985595703125, 0.0092926025390625, 0.0030994415283203125, 0.14208984375, 0.074462890625, 0.06402587890625, 0.12646484375, 0.2015380859375, 0.00019097328186035156, 0.222412109375, 0.1925048828125, 0.00033736228942871094, 0.0015764236450195312, 0.01473236083984375, 0.0018587112426757812, 0.005062103271484375, 0.06646728515625, 0.002689361572265625, 0.1622314453125, 1.25390625, 0.70068359375, 1.6708984375, 0.0238189697265625, 0.412841796875, 0.0004673004150390625, 0.0003249645233154297, 0.004302978515625, 0.000308990478515625, 0.0016126632690429688, 0.0003085136413574219, 0.02557373046875, 0.02642822265625, 0.0010166168212890625, 0.0038166046142578125, 0.0070037841796875, 0.0001881122589111328, 0.002429962158203125, 0.0006303787231445312, 0.0330810546875, 0.19580078125], "tokens": [397, 7329, 354, 280, 273, 32, 371, 5504, 922, 48086, 26, 96, 32, 7069, 1035, 397, 415, 308, 104, 863, 744, 962, 773, 2348, 32, 4699, 26, 104, 490, 301, 291, 9494, 2256, 29284, 280, 4121, 1208, 32, 371, 26, 104, 293, 291, 415, 308, 8046, 610, 744, 27, 301, 616, 29284]}
{"line_number": 101, "line_type": "original", "code": "    this.varFilter = varFilter;", "entropy": 1.8388671875, "is_bug_line": false, "sus_score": 0.02823912473624525, "per_token_entropy": [3.43359375, 5.125, 0.10028076171875, 3.76953125, 0.08380126953125, 3.04296875, 0.88427734375, 0.044158935546875, 0.055877685546875], "tokens": [264, 458, 32, 869, 2348, 280, 773, 2348, 45]}
{"line_number": 101, "line_type": "generated", "code": "\n      if (v!= null) {\n        ReferenceCollection collection = referenceMap.get(v);\n        if (collection == null) {\n          collection = new ReferenceCollection();\n          referenceMap.put(v, collection);\n        }\n        collection.add(", "entropy": 0.1925048828125, "is_bug_line": false, "sus_score": 0.02823912473624525, "per_token_entropy": [0.99560546875, 0.6064453125, 0.197265625, 0.97998046875, 0.54443359375, 0.0020732879638671875, 0.63525390625, 0.005779266357421875, 0.11334228515625, 1.353515625, 0.552734375, 1.5224609375, 0.04541015625, 0.409423828125, 0.00031113624572753906, 0.0004973411560058594, 0.0027446746826171875, 0.0004265308380126953, 0.00432586669921875, 0.0011930465698242188, 0.049224853515625, 0.0711669921875, 0.0020294189453125, 0.00420379638671875, 0.02899169921875, 0.00018489360809326172, 0.001621246337890625, 0.0007429122924804688, 0.0338134765625, 0.0791015625, 0.00016117095947265625, 0.18359375, 0.0278472900390625, 0.0032711029052734375, 0.407470703125, 0.01422882080078125, 0.02545166015625, 4.649162292480469e-06, 4.780292510986328e-05, 0.00019311904907226562, 0.00027871131896972656, 0.002368927001953125, 0.000995635986328125, 0.0005621910095214844, 0.00013875961303710938, 0.0239105224609375, 0.0006227493286132812, 0.173828125, 0.135498046875, 0.00023031234741210938, 0.11376953125, 0.65234375], "tokens": [397, 415, 308, 104, 863, 744, 27, 301, 291, 9494, 2256, 4491, 280, 4121, 1208, 32, 371, 26, 104, 293, 291, 415, 308, 4170, 610, 744, 27, 301, 616, 4491, 280, 537, 9494, 2256, 473, 616, 4121, 1208, 32, 524, 26, 104, 30, 4491, 293, 291, 320, 291, 4491, 32, 669, 26]}
{"line_number": 102, "line_type": "original", "code": "  }", "entropy": 1.98046875, "is_bug_line": false, "sus_score": 0.02823912473624525, "per_token_entropy": [3.353515625, 0.60791015625], "tokens": [225, 320]}
{"line_number": 102, "line_type": "generated", "code": "      } else {\n        v = t.getScope().getVar(n.getString());\n      }\n      if (v!= null && varFilter.apply(v)) {\n        ReferenceCollection refs = referenceMap.get(v);\n        if (refs ==", "entropy": 0.190673828125, "is_bug_line": false, "sus_score": 0.02823912473624525, "per_token_entropy": [1.5712890625, 0.222412109375, 0.2459716796875, 0.6923828125, 0.1475830078125, 0.359619140625, 0.00048804283142089844, 0.161376953125, 0.001132965087890625, 0.042388916015625, 0.004734039306640625, 0.022369384765625, 0.038970947265625, 0.0653076171875, 0.031097412109375, 0.004192352294921875, 0.00102996826171875, 0.0013227462768554688, 0.5498046875, 0.0003113746643066406, 0.51806640625, 0.1380615234375, 0.03851318359375, 0.039947509765625, 0.1304931640625, 0.0001550912857055664, 0.40478515625, 0.262939453125, 0.00037980079650878906, 0.0011472702026367188, 0.010833740234375, 0.0019359588623046875, 0.00197601318359375, 0.0748291015625, 0.0013494491577148438, 0.16943359375, 1.2578125, 0.62255859375, 1.5078125, 0.043792724609375, 0.463623046875, 0.0002543926239013672, 0.0002799034118652344, 0.0044403076171875, 0.00028228759765625, 0.0012340545654296875, 0.0003192424774169922, 0.016845703125, 0.0234375, 0.0009613037109375, 0.0035343170166015625, 0.007659912109375], "tokens": [647, 320, 813, 301, 291, 354, 280, 273, 32, 371, 5504, 922, 48086, 26, 96, 32, 7069, 1035, 397, 320, 397, 415, 308, 104, 863, 744, 962, 773, 2348, 32, 4699, 26, 104, 490, 301, 291, 9494, 2256, 29284, 280, 4121, 1208, 32, 371, 26, 104, 293, 291, 415, 308, 8046, 610]}
{"line_number": 149, "line_type": "original", "code": "    if (n.isName()) {", "entropy": 1.4697265625, "is_bug_line": false, "sus_score": 0.02823912473624525, "per_token_entropy": [4.32421875, 2.197265625, 0.1617431640625, 0.7578125, 0.032012939453125, 0.849609375, 4.375, 0.447021484375, 0.08453369140625], "tokens": [264, 415, 308, 96, 32, 297, 558, 1157, 301]}
{"line_number": 149, "line_type": "generated", "code": "\n      blockStack.push(new BasicBlock(blockStack.peek(), n));\n    }\n\n    return true;\n  }\n\n  /**\n   * Updates block stack.\n   */\n  @Override\n  public void visit(NodeTraversal t, Node n, Node parent", "entropy": 0.1431884765625, "is_bug_line": false, "sus_score": 0.02823912473624525, "per_token_entropy": [0.217041015625, 1.0302734375, 0.0007658004760742188, 0.0004277229309082031, 0.06646728515625, 0.0019741058349609375, 0.0242156982421875, 0.0024700164794921875, 1.9431114196777344e-05, 0.006053924560546875, 0.0474853515625, 0.0003399848937988281, 0.0007171630859375, 0.01245880126953125, 0.003025054931640625, 0.00588226318359375, 0.004558563232421875, 0.5048828125, 0.00911712646484375, 1.4716796875, 0.59130859375, 0.13134765625, 0.00027060508728027344, 0.01348114013671875, 0.0005664825439453125, 0.18505859375, 0.27880859375, 0.047027587890625, 0.00012063980102539062, 1.6591796875, 0.270263671875, 0.0046844482421875, 0.2080078125, 0.020263671875, 0.0141754150390625, 0.0033092498779296875, 0.058349609375, 0.00043487548828125, 0.0009446144104003906, 0.0015668869018554688, 0.0193939208984375, 0.046142578125, 0.0579833984375, 0.0104522705078125, 0.00012576580047607422, 0.031951904296875, 0.00022935867309570312, 0.148681640625, 0.10870361328125, 0.0043792724609375, 0.096923828125, 0.019744873046875], "tokens": [397, 2163, 3113, 32, 2018, 26, 890, 9261, 2227, 26, 1521, 3113, 32, 20124, 1026, 310, 876, 284, 320, 446, 442, 861, 45, 334, 320, 719, 1022, 664, 319, 19293, 2163, 4138, 32, 664, 569, 334, 477, 1788, 334, 562, 763, 7725, 26, 1212, 35699, 273, 30, 4004, 310, 30, 4004, 2935]}
{"line_number": 151, "line_type": "original", "code": "      if (n.getString().equals(\"arguments\")) {", "entropy": 1.51953125, "is_bug_line": false, "sus_score": 0.02823912473624525, "per_token_entropy": [3.6875, 1.7275390625, 0.0859375, 0.83203125, 0.037109375, 7.69140625, 0.177001953125, 0.2724609375, 0.1488037109375, 3.333984375, 0.2041015625, 0.0297698974609375], "tokens": [647, 415, 308, 96, 32, 7069, 922, 3574, 440, 8299, 2131, 301]}
{"line_number": 151, "line_type": "generated", "code": "\n    return true;\n  }\n\n  /**\n   * Updates block stack.\n   */\n  @Override\n  public void visit(NodeTraversal t, Node n, Node parent) {\n    // If node is a new basic block, put on basic block stack\n    if", "entropy": 0.1639404296875, "is_bug_line": false, "sus_score": 0.02823912473624525, "per_token_entropy": [0.416748046875, 0.54345703125, 0.168701171875, 0.0023746490478515625, 0.0567626953125, 0.0011320114135742188, 0.2342529296875, 0.25830078125, 0.050750732421875, 0.00024127960205078125, 1.6337890625, 0.302001953125, 0.004962921142578125, 0.227783203125, 0.0231170654296875, 0.0141754150390625, 0.00458526611328125, 0.08172607421875, 0.00042748451232910156, 0.0007853507995605469, 0.0037670135498046875, 0.0196990966796875, 0.045623779296875, 0.0706787109375, 0.0167694091796875, 0.000247955322265625, 0.033416748046875, 0.0003535747528076172, 0.126953125, 0.1455078125, 0.005504608154296875, 0.1051025390625, 0.018524169921875, 0.0093536376953125, 0.029205322265625, 0.385498046875, 1.6044921875, 0.92529296875, 0.29296875, 0.05596923828125, 0.18212890625, 0.0802001953125, 0.00791168212890625, 0.00042057037353515625, 0.008087158203125, 0.016937255859375, 0.006267547607421875, 0.01012420654296875, 0.0007257461547851562, 0.0005245208740234375, 0.264404296875, 0.0209197998046875], "tokens": [284, 442, 861, 45, 334, 320, 719, 1022, 664, 319, 19293, 2163, 4138, 32, 664, 569, 334, 477, 1788, 334, 562, 763, 7725, 26, 1212, 35699, 273, 30, 4004, 310, 30, 4004, 2935, 27, 301, 284, 434, 1670, 1541, 438, 312, 537, 6550, 2163, 30, 4162, 544, 6550, 2163, 4138, 284, 415]}
