{"line_number": 1275, "line_type": "original", "code": "    CompilerInput input = new CompilerInput(", "entropy": 1.8349609375, "is_bug_line": false, "sus_score": 0.19518001458970666, "per_token_entropy": [4.9296875, 7.48046875, 1.734375, 0.2176513671875, 0.031219482421875, 2.029296875, 0.03302001953125, 0.00032067298889160156, 0.0626220703125], "tokens": [264, 20209, 1612, 1509, 280, 537, 20209, 1612, 26]}
{"line_number": 1275, "line_type": "generated", "code": "\n          cb.append(jsRoot, true);\n          return cb.toString();\n        } finally {\n          stopTracer(tracer, \"toSource\");\n        }\n      }\n    });\n  }\n\n  /**\n   * Converts the AST back to js code.\n   */", "entropy": 0.3173828125, "is_bug_line": false, "sus_score": 0.19518001458970666, "per_token_entropy": [0.68212890625, 1.5029296875, 0.002437591552734375, 0.42724609375, 0.71533203125, 0.77880859375, 0.0139923095703125, 1.8017578125, 1.3642578125, 0.149169921875, 0.30810546875, 0.173095703125, 0.01490020751953125, 0.0006432533264160156, 0.257080078125, 0.007213592529296875, 0.0313720703125, 0.00016880035400390625, 0.00815582275390625, 0.00035858154296875, 0.01303863525390625, 0.05206298828125, 0.0002887248992919922, 0.0002123117446899414, 0.00011360645294189453, 0.00801849365234375, 0.0009293556213378906, 0.0032978057861328125, 0.0009546279907226562, 0.0022430419921875, 0.007701873779296875, 5.459785461425781e-05, 0.007663726806640625, 0.0014619827270507812, 0.13623046875, 0.08770751953125, 0.009002685546875, 0.0006213188171386719, 0.18603515625, 0.62353515625, 0.07464599609375, 0.0002541542053222656, 0.59033203125, 0.95751953125, 1.8701171875, 1.845703125, 0.04595947265625, 0.81591796875, 0.09454345703125, 0.34619140625, 0.1826171875, 0.301025390625], "tokens": [616, 6596, 32, 1689, 26, 754, 4058, 30, 861, 293, 616, 442, 6596, 32, 3108, 473, 291, 320, 8295, 301, 616, 4719, 24046, 26, 30209, 30, 313, 452, 2028, 724, 291, 320, 397, 320, 284, 1122, 334, 320, 719, 1022, 664, 319, 25337, 322, 16095, 1751, 372, 4060, 1340, 32, 664, 569]}
{"line_number": 1277, "line_type": "original", "code": "    inputsByName.put(input.getName(), input);", "entropy": 1.8154296875, "is_bug_line": false, "sus_score": 0.19518001458970666, "per_token_entropy": [6.35546875, 8.25, 2.609375, 0.630859375, 1.0029296875, 0.2744140625, 2.564453125, 0.054412841796875, 0.007434844970703125, 0.01490020751953125, 0.013641357421875, 0.005428314208984375], "tokens": [264, 7806, 9813, 32, 524, 26, 1131, 32, 5165, 1026, 1509, 293]}
{"line_number": 1277, "line_type": "generated", "code": "\n            cb.append(jsRoot.toSource(cb));\n          }\n          return cb.toString();\n        } finally {\n          stopTracer(tracer, \"toSource\");\n        }\n      }\n    });\n  }\n\n  /**\n   * Converts a subtree back to", "entropy": 0.2139892578125, "is_bug_line": false, "sus_score": 0.19518001458970666, "per_token_entropy": [0.41552734375, 1.2392578125, 0.0011110305786132812, 0.313232421875, 1.1806640625, 0.27685546875, 0.004688262939453125, 0.1875, 1.330078125, 0.006412506103515625, 0.146484375, 0.6181640625, 0.50244140625, 0.49365234375, 0.00019061565399169922, 0.1932373046875, 0.173095703125, 0.0118408203125, 0.0004215240478515625, 0.2000732421875, 0.003314971923828125, 0.029205322265625, 7.367134094238281e-05, 0.006744384765625, 0.0003402233123779297, 0.01131439208984375, 0.0474853515625, 0.000274658203125, 0.0001850128173828125, 9.72747802734375e-05, 0.009033203125, 0.0008258819580078125, 0.003261566162109375, 0.0007624626159667969, 0.0017251968383789062, 0.006694793701171875, 2.4080276489257812e-05, 0.004375457763671875, 0.00107574462890625, 0.1373291015625, 0.09716796875, 0.00788116455078125, 0.0005640983581542969, 0.1812744140625, 0.724609375, 0.0797119140625, 0.0003180503845214844, 0.630859375, 0.8310546875, 0.210205078125, 0.7783203125, 0.02667236328125], "tokens": [324, 6596, 32, 1689, 26, 754, 4058, 32, 452, 2028, 26, 2500, 876, 616, 320, 616, 442, 6596, 32, 3108, 473, 291, 320, 8295, 301, 616, 4719, 24046, 26, 30209, 30, 313, 452, 2028, 724, 291, 320, 397, 320, 284, 1122, 334, 320, 719, 1022, 664, 319, 25337, 312, 37255, 1751, 372]}
{"line_number": 1278, "line_type": "original", "code": "    return input.getAstRoot(this);", "entropy": 1.744140625, "is_bug_line": false, "sus_score": 0.19518001458970666, "per_token_entropy": [6.93359375, 2.466796875, 6.10546875, 0.058258056640625, 0.85986328125, 0.88427734375, 0.001617431640625, 0.0175018310546875, 0.10272216796875, 0.01056671142578125], "tokens": [264, 442, 1509, 32, 371, 19511, 4058, 26, 578, 293]}
{"line_number": 1278, "line_type": "generated", "code": "\n                scriptNode!= null;\n                scriptNode = scriptNode.getNext()) {\n              if (i++ > 0) {\n                cb.append(\"\\n\");\n              }\n              cb.append(scriptNode.toSource(this));\n            }\n          }", "entropy": 0.212646484375, "is_bug_line": false, "sus_score": 0.19518001458970666, "per_token_entropy": [0.67529296875, 0.2257080078125, 0.00017344951629638672, 0.0035419464111328125, 0.0008635520935058594, 0.0595703125, 0.278076171875, 0.07611083984375, 2.5033950805664062e-05, 0.001434326171875, 0.021942138671875, 0.00032520294189453125, 0.0004837512969970703, 0.00016939640045166016, 0.1610107421875, 0.07659912109375, 0.394287109375, 1.5478515625, 0.1312255859375, 0.32080078125, 0.51904296875, 0.3115234375, 0.0012760162353515625, 0.00983428955078125, 0.007476806640625, 0.013397216796875, 0.051910400390625, 0.030426025390625, 4.744529724121094e-05, 0.33056640625, 0.288818359375, 0.0002601146697998047, 0.2626953125, 0.03533935546875, 6.818771362304688e-05, 0.1343994140625, 1.0908203125, 0.0003209114074707031, 0.197998046875, 0.204345703125, 0.71826171875, 0.0006451606750488281, 0.24609375, 0.61572265625, 0.002361297607421875, 0.60205078125, 1.130859375, 0.120361328125, 0.06683349609375, 4.506111145019531e-05, 0.08392333984375, 0.001667022705078125], "tokens": [400, 3261, 1212, 863, 744, 45, 400, 3261, 1212, 280, 3261, 1212, 32, 23017, 1157, 301, 1090, 415, 308, 91, 1046, 848, 225, 34, 27, 301, 400, 6596, 32, 1689, 5528, 96, 724, 1090, 320, 1090, 6596, 32, 1689, 26, 1423, 1212, 32, 452, 2028, 26, 578, 876, 324, 320, 616, 320]}
{"line_number": 1888, "line_type": "original", "code": "      if (inputs.isEmpty()) {", "entropy": 1.7099609375, "is_bug_line": false, "sus_score": 0.1529438225803745, "per_token_entropy": [4.49609375, 3.91796875, 0.0634765625, 2.869140625, 0.44677734375, 1.81640625, 0.029388427734375, 0.03717041015625], "tokens": [647, 415, 308, 8075, 32, 6393, 1157, 301]}
{"line_number": 1888, "line_type": "generated", "code": "\n  }\n\n  /**\n   * Returns the AST root of the compiled JS.\n   */\n  public Node getRoot() {\n    return jsRoot;\n  }\n\n  /**\n   * Returns the JSCompiler pass configuration.\n   */\n  public CompilerPassConfig getPassConfig", "entropy": 0.6064453125, "is_bug_line": false, "sus_score": 0.1529438225803745, "per_token_entropy": [0.52783203125, 0.0992431640625, 0.27294921875, 0.376953125, 1.2021484375, 0.0012006759643554688, 1.7763671875, 0.86767578125, 2.572265625, 2.765625, 1.458984375, 0.12237548828125, 2.3671875, 0.81591796875, 0.81396484375, 0.4873046875, 0.66259765625, 0.017242431640625, 0.2734375, 0.063720703125, 0.002490997314453125, 0.951171875, 0.059295654296875, 0.00968170166015625, 0.06280517578125, 0.096923828125, 0.036865234375, 0.00043201446533203125, 0.006572723388671875, 0.056610107421875, 9.119510650634766e-05, 0.154052734375, 0.360595703125, 0.1795654296875, 0.0018892288208007812, 0.67578125, 0.40283203125, 2.505859375, 2.921875, 2.1171875, 1.3330078125, 0.71435546875, 0.083984375, 0.05926513671875, 0.00307464599609375, 0.330322265625, 0.51416015625, 0.15478515625, 0.205322265625, 0.002841949462890625, 0.0022640228271484375, 0.00010085105895996094], "tokens": [334, 320, 719, 1022, 664, 319, 3759, 322, 16095, 3051, 432, 322, 13831, 7750, 32, 664, 569, 334, 562, 4004, 622, 4058, 346, 301, 284, 442, 4060, 4058, 45, 334, 320, 719, 1022, 664, 319, 3759, 322, 7750, 8115, 3097, 3488, 32, 664, 569, 334, 562, 20209, 6129, 1063, 622, 6129, 1063]}
{"line_number": 1892, "line_type": "original", "code": "      return inputs.get(0).getAstRoot(this);", "entropy": 2.095703125, "is_bug_line": false, "sus_score": 0.1529438225803745, "per_token_entropy": [6.19921875, 0.1920166015625, 9.9765625, 0.040435791015625, 0.1539306640625, 0.0033721923828125, 0.01593017578125, 0.004360198974609375, 3.19921875, 4.22265625, 0.0158843994140625, 0.05194091796875, 0.0223388671875, 5.22265625], "tokens": [647, 442, 7806, 32, 371, 26, 34, 547, 371, 19511, 4058, 26, 578, 293]}
{"line_number": 1892, "line_type": "generated", "code": "\n    return errorManager;\n  }\n\n  @Override\n  public void setTypedScopeCreator(TypedScopeCreator typedScopeCreator) {\n    this.typedScopeCreator = typedScopeCreator;\n  }\n\n  @Override\n  public TypedScopeCreator getTypedScopeCreator()", "entropy": 0.199951171875, "is_bug_line": false, "sus_score": 0.1529438225803745, "per_token_entropy": [0.8291015625, 0.1968994140625, 0.323486328125, 0.00946044921875, 0.010406494140625, 0.037811279296875, 0.0005283355712890625, 0.1895751953125, 0.55078125, 0.01163482666015625, 0.0012302398681640625, 0.54296875, 1.4951171875, 0.99560546875, 1.2314453125, 0.47802734375, 0.038787841796875, 0.04449462890625, 0.016387939453125, 3.8743019104003906e-05, 0.00047206878662109375, 1.876953125, 0.00258636474609375, 0.00926971435546875, 0.0038967132568359375, 0.005069732666015625, 0.2498779296875, 0.2352294921875, 0.0005817413330078125, 0.006061553955078125, 0.0002161264419555664, 0.005115509033203125, 0.002124786376953125, 0.01177215576171875, 7.271766662597656e-06, 1.9073486328125e-06, 0.0013151168823242188, 0.117431640625, 0.0001214742660522461, 0.1090087890625, 0.30322265625, 0.005344390869140625, 0.0007843971252441406, 0.1412353515625, 0.2724609375, 6.115436553955078e-05, 0.0240325927734375, 0.003917694091796875, 3.170967102050781e-05, 1.7881393432617188e-05, 0.00016629695892333984, 0.004062652587890625], "tokens": [284, 442, 1048, 1572, 45, 334, 320, 719, 477, 1788, 334, 562, 763, 739, 11851, 5504, 11143, 26, 11851, 5504, 11143, 20639, 5504, 11143, 27, 301, 284, 458, 32, 19065, 5504, 11143, 280, 20639, 5504, 11143, 45, 334, 320, 719, 477, 1788, 334, 562, 21418, 5504, 11143, 622, 11851, 5504, 11143, 346]}
{"line_number": 1100, "line_type": "original", "code": "        interpreter = new ClosureReverseAbstractInterpreter(", "entropy": 2.974609375, "is_bug_line": false, "sus_score": 0.14433756729740646, "per_token_entropy": [3.052734375, 10.71875, 2.9375, 0.4052734375, 6.61328125, 2.7734375, 0.01422882080078125, 0.0031719207763671875, 0.2447509765625], "tokens": [351, 23804, 280, 537, 40531, 17696, 5584, 18636, 26]}
{"line_number": 1100, "line_type": "generated", "code": "\n      options.tracer.onParseStart();\n    }\n\n    for (SourceFile extern : externs) {\n      parseExternsFile(extern);\n    }\n\n    for (SourceFile input : inputs) {\n      parseJsFile(input);\n    }\n\n    //", "entropy": 0.35205078125, "is_bug_line": false, "sus_score": 0.14433756729740646, "per_token_entropy": [0.80810546875, 0.5263671875, 0.006763458251953125, 0.01145172119140625, 0.00547027587890625, 0.5185546875, 0.96044921875, 1.4267578125, 0.509765625, 0.484375, 0.0003566741943359375, 0.38525390625, 1.71484375, 0.0013189315795898438, 0.433349609375, 0.26513671875, 0.388671875, 0.7275390625, 0.10272216796875, 0.040802001953125, 0.0006685256958007812, 0.161865234375, 0.8984375, 0.80126953125, -0.0, 0.276123046875, 0.476806640625, 0.00559234619140625, 0.01244354248046875, 0.379638671875, 0.032440185546875, 6.115436553955078e-05, 0.364013671875, 0.5966796875, 0.0004832744598388672, 0.01062774658203125, 1.6884765625, 0.0224761962890625, 0.019989013671875, 0.00677490234375, 0.00016427040100097656, 0.06732177734375, 0.5263671875, 0.0916748046875, 0.0611572265625, 0.00809478759765625, 0.031707763671875, 0.5126953125, 0.040252685546875, 3.361701965332031e-05, 0.12030029296875, 1.7744140625], "tokens": [397, 2075, 32, 30209, 32, 267, 4480, 2130, 473, 284, 320, 446, 436, 308, 17900, 12098, 499, 12098, 101, 27, 301, 397, 3185, 571, 900, 101, 974, 26, 4318, 293, 284, 320, 446, 436, 308, 17900, 1509, 499, 7806, 27, 301, 397, 3185, 10535, 974, 26, 1131, 293, 284, 320, 446, 434]}
{"line_number": 1895, "line_type": "original", "code": "    List<CompilerInput> moduleInputs = module.getInputs();", "entropy": 2.35546875, "is_bug_line": false, "sus_score": 0.12674485010489558, "per_token_entropy": [1.3603515625, 9.28125, 0.01241302490234375, 3.705078125, 5.19140625, 0.003849029541015625, 3.876953125, 0.0833740234375, 0.0875244140625, 4.64453125, 2.75, 1.7705078125, 0.0261383056640625, 0.16357421875], "tokens": [264, 1682, 46, 8115, 1612, 48, 2297, 13719, 280, 2297, 32, 371, 13719, 473]}
{"line_number": 1895, "line_type": "generated", "code": "\n    return errorManager;\n  }\n\n  @Override\n  public void setTypedScopeCreator(TypedScopeCreator typedScopeCreator) {\n    this.typedScopeCreator = typedScopeCreator;\n  }\n\n  @Override\n  public TypedScopeCreator getTypedScopeCreator()", "entropy": 0.206298828125, "is_bug_line": false, "sus_score": 0.12674485010489558, "per_token_entropy": [0.41162109375, 0.3427734375, 0.70751953125, 0.0194091796875, 0.0198974609375, 0.040557861328125, 0.0006117820739746094, 0.2142333984375, 0.56298828125, 0.0169830322265625, 0.0010776519775390625, 0.5927734375, 1.4501953125, 1.0029296875, 1.6201171875, 0.415771484375, 0.0264892578125, 0.046905517578125, 0.0166168212890625, 3.4332275390625e-05, 0.00048065185546875, 1.8544921875, 0.002689361572265625, 0.00864410400390625, 0.003856658935546875, 0.004955291748046875, 0.06182861328125, 0.329833984375, 0.0005130767822265625, 0.007663726806640625, 0.0002434253692626953, 0.005283355712890625, 0.002040863037109375, 0.012451171875, 8.225440979003906e-06, 1.430511474609375e-06, 0.0013418197631835938, 0.10052490234375, 0.00011360645294189453, 0.132080078125, 0.288330078125, 0.005435943603515625, 0.0009021759033203125, 0.140625, 0.22998046875, 4.3272972106933594e-05, 0.01397705078125, 0.00554656982421875, 2.9921531677246094e-05, 1.9431114196777344e-05, 0.0001735687255859375, 0.005645751953125], "tokens": [284, 442, 1048, 1572, 45, 334, 320, 719, 477, 1788, 334, 562, 763, 739, 11851, 5504, 11143, 26, 11851, 5504, 11143, 20639, 5504, 11143, 27, 301, 284, 458, 32, 19065, 5504, 11143, 280, 20639, 5504, 11143, 45, 334, 320, 719, 477, 1788, 334, 562, 21418, 5504, 11143, 622, 11851, 5504, 11143, 346]}
{"line_number": 1896, "line_type": "original", "code": "    if (moduleInputs.size() > 0) {", "entropy": 1.86328125, "is_bug_line": false, "sus_score": 0.12674485010489558, "per_token_entropy": [2.833984375, 3.171875, 0.0228729248046875, 5.5234375, 8.34375, 0.55322265625, 2.099609375, 0.004802703857421875, 0.9619140625, 0.017730712890625, 0.560546875, 0.04132080078125, 0.077880859375], "tokens": [264, 415, 308, 1647, 13719, 32, 891, 346, 848, 225, 34, 27, 301]}
{"line_number": 1896, "line_type": "generated", "code": "\n  }", "entropy": 0.55517578125, "is_bug_line": false, "sus_score": 0.12674485010489558, "per_token_entropy": [0.7080078125, 0.402587890625], "tokens": [334, 320]}
{"line_number": 1897, "line_type": "original", "code": "      return moduleInputs.get(0).getAstRoot(this);", "entropy": 1.3251953125, "is_bug_line": false, "sus_score": 0.12674485010489558, "per_token_entropy": [8.109375, 1.8388671875, 3.6015625, 5.1484375, 0.21435546875, 0.031463623046875, 0.006999969482421875, 0.059600830078125, 0.258056640625, 0.1878662109375, 0.321533203125, 0.006252288818359375, 0.0201873779296875, 0.0253753662109375, 0.0391845703125], "tokens": [647, 442, 2297, 13719, 32, 371, 26, 34, 547, 371, 19511, 4058, 26, 578, 293]}
{"line_number": 1897, "line_type": "generated", "code": "\n\n  @Override\n  public void setTypedScopeCreator(TypedScopeCreator creator) {\n    this.typedScopeCreator = creator;\n  }\n\n  @Override\n  public TypedScopeCreator getTypedScopeCreator() {\n    return typedScopeCreator;\n  }\n\n  @", "entropy": 0.2115478515625, "is_bug_line": false, "sus_score": 0.12674485010489558, "per_token_entropy": [1.0419921875, 1.3515625, 0.0198822021484375, 0.005474090576171875, 0.53369140625, 1.48046875, 1.0927734375, 1.5947265625, 0.4140625, 0.0280914306640625, 0.046600341796875, 0.016448974609375, 3.3736228942871094e-05, 0.0003368854522705078, 0.429931640625, 0.004024505615234375, 0.01241302490234375, 0.0626220703125, 0.859375, 0.0006413459777832031, 0.1309814453125, 0.0017681121826171875, 0.006885528564453125, 0.003238677978515625, 0.0013418197631835938, 0.0019359588623046875, 0.0914306640625, 0.00021123886108398438, 0.17529296875, 0.267578125, 0.0039520263671875, 0.0006642341613769531, 0.07696533203125, 0.1865234375, 3.409385681152344e-05, 0.0182952880859375, 0.004848480224609375, 2.300739288330078e-05, 1.6808509826660156e-05, 0.00017118453979492188, 0.0091094970703125, 0.0007634162902832031, 0.01025390625, 0.26416015625, 0.09124755859375, 2.7418136596679688e-06, 2.5033950805664062e-06, 0.0079193115234375, 0.00577545166015625, 0.0011739730834960938, 0.247802734375, 0.392822265625], "tokens": [719, 477, 1788, 334, 562, 763, 739, 11851, 5504, 11143, 26, 11851, 5504, 11143, 21231, 27, 301, 284, 458, 32, 19065, 5504, 11143, 280, 21231, 45, 334, 320, 719, 477, 1788, 334, 562, 21418, 5504, 11143, 622, 11851, 5504, 11143, 346, 301, 284, 442, 20639, 5504, 11143, 45, 334, 320, 719, 477]}
{"line_number": 256, "line_type": "original", "code": "      options.setWarningLevel(", "entropy": 1.986328125, "is_bug_line": false, "sus_score": 0.11785113019775793, "per_token_entropy": [2.806640625, 7.46484375, 0.035888671875, 1.359375, 2.23046875, 0.0027618408203125, 0.00634765625], "tokens": [647, 2075, 32, 470, 5711, 2656, 26]}
{"line_number": 256, "line_type": "generated", "code": "\n      module.add(input);\n    }\n    module.setExtern(true);\n\n    JSModule[] modules = new JSModule[] { module };\n\n    initModules(externs, modules, options);\n  }\n\n  /**\n   * Initializes the instance state", "entropy": 0.36865234375, "is_bug_line": false, "sus_score": 0.11785113019775793, "per_token_entropy": [0.53955078125, 0.6240234375, 0.0218353271484375, 0.0276947021484375, 0.225341796875, 0.2232666015625, 0.4326171875, 0.09759521484375, 0.0001895427703857422, 0.52587890625, 1.9267578125, 0.2252197265625, 0.5302734375, 0.320556640625, 2.384185791015625e-07, 0.280029296875, 0.5380859375, 0.0028209686279296875, 1.6767578125, 2.412109375, 0.202880859375, 0.81298828125, 1.4501953125, 0.0190887451171875, 0.52880859375, 0.00020420551300048828, 4.76837158203125e-07, 0.271484375, 0.0014429092407226562, 0.335693359375, 0.01410675048828125, 0.79736328125, 0.78515625, 1.7412109375, 0.02508544921875, 0.52880859375, 0.00012767314910888672, 0.008026123046875, 0.1182861328125, 0.09466552734375, 0.03228759765625, 0.0496826171875, 0.0845947265625, 2.7418136596679688e-05, 0.119140625, 0.1416015625, 0.0287933349609375, 0.00034809112548828125, 0.2132568359375, 0.081298828125, 0.053985595703125, 0.007633209228515625], "tokens": [397, 2297, 32, 669, 26, 1131, 293, 284, 320, 284, 2297, 32, 470, 571, 900, 26, 1508, 293, 446, 7750, 2459, 1178, 7896, 280, 537, 7750, 2459, 1178, 301, 2297, 1472, 446, 3219, 12242, 26, 4318, 101, 30, 7896, 30, 2075, 293, 334, 320, 719, 1022, 664, 319, 21037, 322, 1980, 1603]}
{"line_number": 1887, "line_type": "original", "code": "    if (module == null) {", "entropy": 1.560546875, "is_bug_line": false, "sus_score": 0.10327955589886445, "per_token_entropy": [2.37890625, 3.126953125, 0.1494140625, 3.33203125, 3.251953125, 0.027374267578125, 0.1905517578125, 0.0244293212890625], "tokens": [264, 415, 308, 1647, 610, 744, 27, 301]}
{"line_number": 1887, "line_type": "generated", "code": "\n    }\n  }\n\n  /** Gets the DOT graph of the AST generated at the end of compilation. */\n  public String getAstDotGraph(String name) throws IOException {\n    if (name == null) {\n      return getAstDotGraph();\n    }", "entropy": 0.246337890625, "is_bug_line": false, "sus_score": 0.10327955589886445, "per_token_entropy": [0.66162109375, 0.5302734375, 0.180908203125, 0.0020751953125, 0.235107421875, 0.32470703125, 0.50537109375, 0.09576416015625, 0.2215576171875, 0.0298004150390625, 0.0374755859375, 0.061431884765625, 0.321044921875, 1.0400390625, 0.15673828125, 0.0113677978515625, 0.0128631591796875, 0.0007228851318359375, 0.039794921875, 0.03253173828125, 0.00424957275390625, 0.01436614990234375, 0.035736083984375, 0.0545654296875, 0.0599365234375, 0.456298828125, 0.59326171875, 0.0195770263671875, 0.0640869140625, 1.12890625, 1.826171875, 0.1339111328125, 0.05657958984375, 0.004459381103515625, 0.0099334716796875, 0.038848876953125, 1.009765625, 0.038299560546875, 1.4482421875, 0.697265625, 0.034454345703125, 0.165771484375, 0.00907135009765625, 0.02618408203125, 0.203857421875, 0.09588623046875, 0.0007753372192382812, 0.00012505054473876953, 0.00010323524475097656, 0.007572174072265625, 0.07305908203125, 7.76052474975586e-05], "tokens": [284, 320, 334, 320, 719, 1022, 7124, 322, 32763, 3996, 432, 322, 16095, 4723, 821, 322, 943, 432, 16260, 32, 569, 334, 562, 892, 622, 19511, 10025, 3406, 26, 652, 636, 27, 2571, 6291, 301, 284, 415, 308, 426, 610, 744, 27, 301, 397, 442, 622, 19511, 10025, 3406, 473, 284, 320]}
{"line_number": 318, "line_type": "original", "code": "    initModules(Lists.<JSSourceFile>newArrayList(externs),", "entropy": 1.2314453125, "is_bug_line": false, "sus_score": 0.10206207261596577, "per_token_entropy": [3.005859375, 2.740234375, 3.0703125, 2.11328125, 6.1171875, 0.373046875, 0.045257568359375, 0.0011949539184570312, 7.748603820800781e-06, 9.40561294555664e-05, 0.000331878662109375, 0.025665283203125, 1.9150390625, 0.1990966796875, 0.0028095245361328125, 0.0888671875], "tokens": [264, 3219, 12242, 26, 12981, 5700, 60, 1706, 703, 974, 48, 41668, 26, 4318, 101, 471]}
{"line_number": 318, "line_type": "generated", "code": "\n\n    if (options.prettyPrint) {\n      outputFormat = OutputFormat.PRETTY;\n    } else if (options.printInputDelimiter) {\n      outputFormat = OutputFormat.DELIMITER;\n    } else {\n      outputFormat = OutputFormat.", "entropy": 0.29931640625, "is_bug_line": false, "sus_score": 0.10206207261596577, "per_token_entropy": [1.7177734375, 1.6279296875, 0.139892578125, 0.12115478515625, 0.0009074211120605469, 2.443359375, 0.003543853759765625, 0.492431640625, 0.0012111663818359375, 0.041046142578125, 2.625, 2.103515625, 0.00799560546875, 0.243896484375, 0.042816162109375, 0.000835418701171875, 0.02288818359375, 1.3947486877441406e-05, 0.11712646484375, 0.11859130859375, 0.00011968612670898438, 0.55810546875, 0.59765625, 0.029693603515625, 0.02984619140625, 5.626678466796875e-05, 0.62255859375, 0.304443359375, 0.11859130859375, 0.005878448486328125, 0.00018918514251708984, 0.01194000244140625, 0.0211029052734375, 0.0004229545593261719, 0.00018525123596191406, 0.004428863525390625, 1.3232231140136719e-05, 0.00017726421356201172, 0.60595703125, 0.06427001953125, 0.043487548828125, 0.0258026123046875, 0.00014793872833251953, 0.25439453125, 0.322509765625, 0.006565093994140625, 0.0196075439453125, 3.3020973205566406e-05, 9.369850158691406e-05, 0.04400634765625, 1.5497207641601562e-06, 0.00021576881408691406], "tokens": [446, 415, 308, 2184, 32, 15917, 4014, 27, 301, 397, 1688, 2207, 280, 5582, 2207, 32, 2883, 35872, 45, 284, 320, 813, 415, 308, 2184, 32, 1216, 1612, 30208, 27, 301, 397, 1688, 2207, 280, 5582, 2207, 32, 852, 44854, 45, 284, 320, 813, 301, 397, 1688, 2207, 280, 5582, 2207, 32]}
{"line_number": 320, "line_type": "original", "code": "  }", "entropy": 2.8671875, "is_bug_line": false, "sus_score": 0.10206207261596577, "per_token_entropy": [1.611328125, 4.125], "tokens": [225, 320]}
{"line_number": 320, "line_type": "generated", "code": "\n\n  /**\n   * Initializes the instance state needed for a compile job.\n   */\n  public void init(\n      JSModule[] modules, CompilerOptions options) {\n    initModules(Lists.<JSSourceFile>newArrayList(),\n         Lists.<JSModule>newArrayList", "entropy": 0.301025390625, "is_bug_line": false, "sus_score": 0.10206207261596577, "per_token_entropy": [0.65771484375, 0.271728515625, 0.08624267578125, 0.0004177093505859375, 1.58984375, 0.271484375, 0.39990234375, 0.03436279296875, 0.336669921875, 0.052490234375, 0.10540771484375, 0.54833984375, 0.024261474609375, 0.8095703125, 0.126953125, 0.1878662109375, 0.042449951171875, 0.279052734375, 0.08843994140625, 0.03643798828125, 0.292724609375, 2.20703125, 1.978515625, 0.6396484375, 0.442138671875, 0.14013671875, 0.00458526611328125, 0.5458984375, 0.0151214599609375, 0.004856109619140625, 0.42919921875, 0.00424957275390625, 0.06256103515625, 0.41943359375, 0.332275390625, 0.006130218505859375, 0.8017578125, 0.1080322265625, 0.01244354248046875, 9.417533874511719e-06, 1.6689300537109375e-05, 6.556510925292969e-06, 0.00017404556274414062, 0.00621795654296875, 0.007244110107421875, 1.0556640625, 0.038299560546875, 0.1427001953125, 0.0012598037719726562, 0.0002655982971191406, 3.731250762939453e-05, 7.56978988647461e-05], "tokens": [719, 1022, 664, 319, 21037, 322, 1980, 1603, 5349, 436, 312, 8329, 3992, 32, 664, 569, 334, 562, 763, 3219, 26, 397, 7750, 2459, 1178, 7896, 30, 20209, 2031, 2075, 27, 301, 284, 3219, 12242, 26, 12981, 5700, 60, 1706, 703, 974, 48, 41668, 1026, 276, 25163, 5700, 4624, 2459, 48, 41668]}
{"line_number": 341, "line_type": "original", "code": "        this.moduleGraph = new JSModuleGraph(modules);", "entropy": 1.25390625, "is_bug_line": false, "sus_score": 0.10088665446106365, "per_token_entropy": [8.421875, 4.6640625, 0.01885986328125, 1.5087890625, 0.226318359375, 0.035491943359375, 0.53857421875, 0.03668212890625, 4.6133995056152344e-05, 8.928775787353516e-05, 0.12127685546875, 0.4921875, 0.2357177734375], "tokens": [351, 458, 32, 1647, 3406, 280, 537, 7750, 2459, 3406, 26, 3477, 293]}
{"line_number": 341, "line_type": "generated", "code": "\n\n  /**\n   * If a module has no inputs, then add an empty input so that the module\n   * will be considered a leaf module.\n   */\n  private void fillEmptyModules(List<JSModule> modules) {\n    for (JSModule module", "entropy": 0.6181640625, "is_bug_line": false, "sus_score": 0.10088665446106365, "per_token_entropy": [0.5791015625, 0.31103515625, 0.04119873046875, 0.00027370452880859375, 2.16796875, 1.6728515625, 0.55224609375, 2.158203125, 0.391357421875, 1.177734375, 0.2308349609375, 1.703125, 1.6650390625, 1.4833984375, 0.84033203125, 0.8115234375, 1.44140625, 0.220703125, 1.15234375, 0.401611328125, 0.492431640625, 0.0005092620849609375, 1.82421875, 1.2998046875, 1.6455078125, 2.427734375, 2.107421875, 1.1044921875, 0.453857421875, 0.1983642578125, 0.06298828125, 0.1488037109375, 0.0304412841796875, 0.4892578125, 0.00600433349609375, 0.00014913082122802734, 0.0006480216979980469, 0.0002868175506591797, 0.0125732421875, 0.0011653900146484375, 0.00048804283142089844, 1.430511474609375e-06, 3.159046173095703e-05, 0.008514404296875, 0.004306793212890625, 0.0011396408081054688, 0.14892578125, 0.304931640625, 0.00078582763671875, 0.179931640625, 3.0994415283203125e-06, 0.2066650390625], "tokens": [719, 1022, 664, 319, 1670, 312, 2297, 1401, 1289, 7806, 30, 1615, 1015, 600, 3502, 1509, 1259, 688, 322, 2297, 664, 319, 1098, 526, 11870, 312, 16521, 2297, 32, 664, 569, 334, 945, 763, 5318, 2766, 12242, 26, 720, 46, 4624, 2459, 48, 7896, 27, 301, 284, 436, 308, 4624, 2459, 2297]}
{"line_number": 348, "line_type": "original", "code": "      }", "entropy": 3.294921875, "is_bug_line": false, "sus_score": 0.10088665446106365, "per_token_entropy": [5.7734375, 0.81640625], "tokens": [647, 320]}
{"line_number": 348, "line_type": "generated", "code": "\n    }\n  }\n\n  /**\n   * If a module is empty, replace it with a module that contains the\n   * empty module as a dependency.\n   */\n  private void fillEmptyModules(List<JSModule> modules) {\n    for (int i", "entropy": 0.45263671875, "is_bug_line": false, "sus_score": 0.10088665446106365, "per_token_entropy": [0.349853515625, 0.007541656494140625, 0.150390625, 0.0003151893615722656, 0.06451416015625, 0.2406005859375, 0.03204345703125, 0.0002224445343017578, 1.40625, 1.4150390625, 0.142578125, 1.220703125, 0.6962890625, 0.1275634765625, 2.46875, 0.034576416015625, 0.04205322265625, 0.53173828125, 0.603515625, 0.8076171875, 0.50830078125, 2.08203125, 1.439453125, 0.0001989603042602539, 2.078125, 0.87939453125, 1.4091796875, 0.87744140625, 1.6689453125, 0.15625, 0.39501953125, 0.1048583984375, 0.00183868408203125, 0.022613525390625, 0.2763671875, 0.0004329681396484375, 1.811981201171875e-05, 5.3882598876953125e-05, 9.131431579589844e-05, 0.00487518310546875, 0.0001990795135498047, 0.00015842914581298828, 3.5762786865234375e-06, 1.5974044799804688e-05, 0.0037250518798828125, 0.0019664764404296875, 0.0012388229370117188, 0.067626953125, 0.72802734375, 0.00034499168395996094, 0.41650390625, 0.06427001953125], "tokens": [284, 320, 334, 320, 719, 1022, 664, 319, 1670, 312, 2297, 438, 3502, 30, 7084, 561, 623, 312, 2297, 688, 4304, 322, 664, 319, 3502, 2297, 619, 312, 8450, 32, 664, 569, 334, 945, 763, 5318, 2766, 12242, 26, 720, 46, 4624, 2459, 48, 7896, 27, 301, 284, 436, 308, 410, 595]}
{"line_number": 1942, "line_type": "original", "code": "    if (options == null) {", "entropy": 1.248046875, "is_bug_line": false, "sus_score": 0.08247860988423225, "per_token_entropy": [2.541015625, 3.0625, 0.058319091796875, 2.25, 1.95703125, 0.01116943359375, 0.055694580078125, 0.0506591796875], "tokens": [264, 415, 308, 2184, 610, 744, 27, 301]}
{"line_number": 1942, "line_type": "generated", "code": "\n    state.jsRoot = jsRoot;\n    state.externs = externs;\n    state.inputs = inputs;\n    state.modules = modules;\n    state.passConfigState = passConfigState.getState();\n    state.typeRegistry = type", "entropy": 0.0859375, "is_bug_line": false, "sus_score": 0.08247860988423225, "per_token_entropy": [0.273193359375, 0.30615234375, 0.000507354736328125, 0.52001953125, 0.0005068778991699219, 0.0007262229919433594, 0.1279296875, 0.0012187957763671875, 0.0074920654296875, 0.265625, 0.039886474609375, 6.115436553955078e-05, 0.280517578125, 0.00041222572326660156, 0.0012369155883789062, 0.1358642578125, 6.61611557006836e-05, 0.0211029052734375, 0.0232086181640625, 0.01016998291015625, 0.000522613525390625, 0.037811279296875, 0.00029969215393066406, 0.0161285400390625, 0.0013828277587890625, 0.016876220703125, 0.01190185546875, 0.0005006790161132812, 0.034271240234375, 0.00033545494079589844, 0.0372314453125, 0.00839996337890625, 0.051422119140625, 0.056915283203125, 0.0005497932434082031, 0.107421875, 0.00025582313537597656, 0.005855560302734375, 0.0007939338684082031, 0.254638671875, 0.0238189697265625, 0.035919189453125, 0.537109375, 0.9189453125, 0.0091705322265625, 0.052276611328125, 0.07025146484375, 5.841255187988281e-05, 0.05291748046875, 0.0002536773681640625, 0.0005974769592285156, 0.109130859375], "tokens": [284, 1603, 32, 754, 4058, 280, 4060, 4058, 45, 284, 1603, 32, 4318, 101, 280, 12098, 101, 45, 284, 1603, 32, 8075, 280, 7806, 45, 284, 1603, 32, 3477, 280, 7896, 45, 284, 1603, 32, 4617, 1063, 1078, 280, 3097, 1063, 1078, 32, 19702, 473, 284, 1603, 32, 681, 5378, 280, 827]}
{"line_number": 1945, "line_type": "original", "code": "    return errorManager;", "entropy": 4.23828125, "is_bug_line": false, "sus_score": 0.08247860988423225, "per_token_entropy": [1.498046875, 2.38671875, 13.8046875, 0.154296875, 3.337890625], "tokens": [264, 442, 1048, 1572, 45]}
{"line_number": 1945, "line_type": "generated", "code": "\n    state.modules = modules;\n    state.passConfigState = passConfig.getState();\n    state.typeRegistry = typeRegistry;\n    state.lifeCycleStage = lifeCycleStage;\n    return state;\n  }\n\n  /**\n   * Restores the", "entropy": 0.0977783203125, "is_bug_line": false, "sus_score": 0.08247860988423225, "per_token_entropy": [0.47802734375, 0.3203125, 0.00015985965728759766, 0.328857421875, 0.0005159378051757812, 0.080078125, 0.01373291015625, 0.0660400390625, 0.072265625, 3.8623809814453125e-05, 0.12188720703125, 0.0001538991928100586, 0.00395965576171875, 0.0007524490356445312, 0.327880859375, 0.0256805419921875, 0.611328125, 0.6142578125, 0.013031005859375, 0.031005859375, 0.0933837890625, 0.00011551380157470703, 0.049591064453125, 0.00029158592224121094, 0.0005350112915039062, 0.2216796875, 0.0207672119140625, 0.0191192626953125, 0.0298614501953125, 0.1434326171875, 0.0002570152282714844, 0.01406097412109375, 2.968311309814453e-05, 0.00029015541076660156, 0.0005059242248535156, 0.1202392578125, 0.00016701221466064453, 0.001682281494140625, 0.01343536376953125, 0.2059326171875, 0.01702880859375, 0.00040030479431152344, 0.00035119056701660156, 0.0037994384765625, 0.00022017955780029297, 0.0662841796875, 0.126220703125, 0.03558349609375, 0.00054931640625, 0.420654296875, 0.0007319450378417969, 0.3701171875], "tokens": [284, 1603, 32, 3477, 280, 7896, 45, 284, 1603, 32, 4617, 1063, 1078, 280, 3097, 1063, 32, 19702, 473, 284, 1603, 32, 681, 5378, 280, 827, 5378, 45, 284, 1603, 32, 20667, 16128, 9595, 280, 12535, 16128, 9595, 45, 284, 442, 1603, 45, 334, 320, 719, 1022, 664, 319, 13698, 6845, 322]}
{"line_number": 1865, "line_type": "original", "code": "      return input.getLine(lineNumber);", "entropy": 4.6015625, "is_bug_line": false, "sus_score": 0.07930515857181442, "per_token_entropy": [5.8515625, 0.1795654296875, 8.1171875, 0.166259765625, 12.765625, 9.34375, 3.517578125, 0.298095703125, 1.162109375], "tokens": [647, 442, 1509, 32, 42949, 26, 928, 1918, 293]}
{"line_number": 1865, "line_type": "generated", "code": "\n  }\n\n  /**\n   * Returns the {@link ErrorManager} instance that is used to track errors\n   * and warnings.\n   */\n  public ErrorManager getErrorManager() {\n    return errorManager;\n  }\n\n  @Override\n  String getPassName()", "entropy": 0.625, "is_bug_line": false, "sus_score": 0.07930515857181442, "per_token_entropy": [0.8828125, 0.0036106109619140625, 0.09173583984375, 2.41796875, 0.34375, 0.0005612373352050781, 1.484375, 0.80859375, 1.939453125, 0.1380615234375, 2.33984375, 0.1597900390625, 0.21826171875, 2.67578125, 2.64453125, 1.9716796875, 0.79296875, 0.669921875, 1.2529296875, 0.5693359375, 0.62109375, 0.01013946533203125, 0.59814453125, 0.0296173095703125, 0.367431640625, 0.078369140625, 0.06390380859375, 0.0101165771484375, 0.89208984375, 0.0183258056640625, 0.0002570152282714844, 0.001255035400390625, 0.0006308555603027344, 0.004138946533203125, 0.0021190643310546875, 0.0002894401550292969, 0.054840087890625, 0.004848480224609375, 0.00890350341796875, 2.9325485229492188e-05, 0.0005078315734863281, 0.0045318603515625, 4.4226646423339844e-05, 0.06976318359375, 1.97265625, 0.027099609375, 0.0036334991455078125, 3.28515625, 0.359130859375, 2.30078125, 0.1961669921875, 0.11688232421875], "tokens": [334, 320, 719, 1022, 664, 319, 3759, 322, 3088, 1204, 3081, 1572, 111, 1980, 688, 438, 1654, 372, 4562, 3878, 664, 319, 461, 11685, 32, 664, 569, 334, 562, 3081, 1572, 622, 924, 1572, 346, 301, 284, 442, 1048, 1572, 45, 334, 320, 719, 477, 1788, 334, 892, 622, 6129, 558, 346]}
{"line_number": 1854, "line_type": "original", "code": "      return inputsByName.get(sourceName).getSourceFile();", "entropy": 2.20703125, "is_bug_line": false, "sus_score": 0.07856742013183861, "per_token_entropy": [6.96875, 0.72216796875, 7.32421875, 2.6328125, 0.044708251953125, 0.37548828125, 0.0489501953125, 0.84228515625, 0.2607421875, 0.033203125, 2.048828125, 2.240234375, 5.15234375], "tokens": [647, 442, 7806, 9813, 32, 371, 26, 1855, 558, 547, 371, 17900, 473]}
{"line_number": 1854, "line_type": "generated", "code": "\n  }\n\n  public void setSourceMap(SourceMap sourceMap) {\n    this.sourceMap = sourceMap;\n  }\n\n  @Override\n  void maybeRecordNewError(JSError error) {\n    if (errorManager.hasHaltingErrors())", "entropy": 0.427978515625, "is_bug_line": false, "sus_score": 0.07856742013183861, "per_token_entropy": [0.3603515625, 0.052215576171875, 0.18505859375, 1.2333984375, 1.66796875, 0.9287109375, 0.382568359375, 0.03558349609375, 0.052001953125, 0.07708740234375, 0.00021827220916748047, 0.173095703125, 0.002658843994140625, 0.00450897216796875, 0.0020313262939453125, 0.03887939453125, 0.0743408203125, 0.0002856254577636719, 0.0004489421844482422, 8.440017700195312e-05, 0.0008015632629394531, 0.00884246826171875, 0.0008687973022460938, 0.003124237060546875, 0.46337890625, 0.00072479248046875, 0.26611328125, 1.3544921875, 0.039459228515625, 0.005062103271484375, 1.603515625, 1.9375, 1.62890625, 2.533203125, 1.5537109375, 0.03680419921875, 0.77001953125, 0.0002987384796142578, 0.03741455078125, 0.1314697265625, 0.003292083740234375, 0.082763671875, 0.9736328125, 0.24755859375, 0.9033203125, 1.1201171875, 0.5703125, 0.5439453125, 0.0118255615234375, 0.001399993896484375, 0.04620361328125, 0.1016845703125], "tokens": [334, 320, 719, 562, 763, 739, 2028, 1208, 26, 2028, 1208, 1914, 1208, 27, 301, 284, 458, 32, 1855, 1208, 280, 1914, 1208, 45, 334, 320, 719, 477, 1788, 334, 763, 8762, 3157, 1812, 924, 26, 60, 21887, 1048, 27, 301, 284, 415, 308, 731, 1572, 32, 2040, 36001, 1054, 7352, 1157]}
{"line_number": 1863, "line_type": "original", "code": "    SourceFile input = getSourceFileByName(sourceName);", "entropy": 1.7958984375, "is_bug_line": false, "sus_score": 0.0778498944161523, "per_token_entropy": [7.0703125, 4.66796875, 1.501953125, 4.9296875, 1.431640625, 1.4033203125, 0.0362548828125, 0.061767578125, 0.1494140625, 0.25, 0.04315185546875, 0.00417327880859375], "tokens": [264, 6374, 974, 1509, 280, 622, 17900, 9813, 26, 1855, 558, 293]}
{"line_number": 1863, "line_type": "generated", "code": "\n  private String getSourceName() {\n    return input.getName();\n  }\n\n  @Override\n  String getSourceName(Node n) {\n    return getSourceName();\n  }\n\n  @Override\n  String getSourceName(int index) {\n    return", "entropy": 0.677734375, "is_bug_line": false, "sus_score": 0.0778498944161523, "per_token_entropy": [0.61865234375, 2.166015625, 3.10546875, 0.8154296875, 1.9404296875, 0.89453125, 1.7099609375, 0.004825592041015625, 0.039276123046875, 0.62109375, 0.693359375, 0.457763671875, 0.53125, 0.006481170654296875, 0.042877197265625, 0.000316619873046875, 0.40771484375, 1.796875, 0.035919189453125, 0.0029296875, 2.16796875, 0.255615234375, 2.392578125, 0.92431640625, 0.9912109375, 0.354248046875, 0.12249755859375, 0.01020050048828125, 0.002704620361328125, 0.0277099609375, 0.91796875, 0.332763671875, 0.2481689453125, 0.01204681396484375, 0.013641357421875, 0.007106781005859375, 8.046627044677734e-05, 0.296875, 0.6484375, 0.006702423095703125, 0.001689910888671875, 1.51171875, 0.1654052734375, 1.970703125, 0.88232421875, 0.3349609375, 2.24609375, 2.263671875, 0.002841949462890625, 0.0009732246398925781, 0.00426483154296875, 0.2373046875], "tokens": [334, 945, 892, 622, 2028, 558, 346, 301, 284, 442, 1509, 32, 5165, 473, 334, 320, 719, 477, 1788, 334, 892, 622, 2028, 558, 26, 1212, 310, 27, 301, 284, 442, 622, 2028, 558, 473, 334, 320, 719, 477, 1788, 334, 892, 622, 2028, 558, 26, 410, 1650, 27, 301, 284, 442]}
{"line_number": 1864, "line_type": "original", "code": "    if (input != null) {", "entropy": 2.03125, "is_bug_line": false, "sus_score": 0.0778498944161523, "per_token_entropy": [5.6328125, 4.44921875, 0.1385498046875, 4.53125, 1.3515625, 0.01442718505859375, 0.1082763671875, 0.0288848876953125], "tokens": [264, 415, 308, 1131, 863, 744, 27, 301]}
{"line_number": 1864, "line_type": "generated", "code": "\n  private JSType getTypeOf(Node n) {\n    return getTypeOf(n, false);\n  }\n\n  private JSType getTypeOf(Node n, boolean useCachedType) {\n    if (n == null) {\n      return null;\n    }", "entropy": 0.486572265625, "is_bug_line": false, "sus_score": 0.0778498944161523, "per_token_entropy": [0.4443359375, 1.853515625, 2.978515625, 0.6318359375, 1.2529296875, 2.291015625, 0.6728515625, 0.73681640625, 0.172119140625, 0.09893798828125, 0.006969451904296875, 0.0249786376953125, 0.89990234375, 1.56640625, 1.0966796875, 0.11041259765625, 0.135986328125, 0.25146484375, 1.03515625, 0.08673095703125, 0.004058837890625, 6.842613220214844e-05, 0.1650390625, 0.4140625, 0.0142364501953125, 1.0728836059570312e-05, 0.007274627685546875, 0.0081024169921875, 0.128662109375, 0.041259765625, 0.005413055419921875, 0.00038170814514160156, 0.00908660888671875, 1.4560546875, 1.8642578125, 1.158203125, 0.057647705078125, 0.0006442070007324219, 0.038330078125, 1.45703125, 0.1575927734375, 0.89501953125, 0.515625, 0.005809783935546875, 0.05938720703125, 0.006683349609375, 0.0085906982421875, 0.11798095703125, 0.357421875, 0.0003387928009033203, 0.0018825531005859375, 6.377696990966797e-05], "tokens": [334, 945, 7750, 620, 622, 18496, 26, 1212, 310, 27, 301, 284, 442, 622, 18496, 26, 96, 30, 901, 293, 334, 320, 719, 945, 7750, 620, 622, 18496, 26, 1212, 310, 30, 1905, 793, 14540, 620, 27, 301, 284, 415, 308, 96, 610, 744, 27, 301, 397, 442, 744, 45, 284, 320]}
