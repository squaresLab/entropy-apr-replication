{"line_number": 115, "line_type": "original", "code": "            continue;", "entropy": 5.53125, "is_bug_line": true, "sus_score": 0.5773502691896258, "per_token_entropy": [9.0546875, 7.46875, 0.06463623046875], "tokens": [1468, 4036, 45]}
{"line_number": 115, "line_type": "generated", "code": "\n      for (Node n : problemNodes) {\n        if (n.isName() && n.getParent().isAssign()) {\n          continue;\n        }\n        Node newCall = new Node(Token.CALL, n);\n        newCall.addChildTo", "entropy": 0.412353515625, "is_bug_line": true, "sus_score": 0.5773502691896258, "per_token_entropy": [1.03125, 1.2890625, 0.003597259521484375, 0.0075225830078125, 0.236083984375, 0.018707275390625, 0.0248260498046875, 3.4332275390625e-05, 0.003448486328125, 0.007541656494140625, 0.09393310546875, 2.134765625, 0.2056884765625, 0.2147216796875, 0.047637939453125, 0.55712890625, 1.6826171875, 1.640625, 0.375, 0.73974609375, 0.005542755126953125, 0.394775390625, 0.06622314453125, 0.1314697265625, 0.54052734375, 0.1728515625, 0.01873779296875, 0.12646484375, 1.05078125, 0.0009050369262695312, 0.069580078125, 0.0005288124084472656, 0.47216796875, 0.92529296875, 1.9365234375, 0.73681640625, 0.16259765625, 1.076171875, 0.12445068359375, 0.00197601318359375, 0.2064208984375, 2.8133392333984375e-05, 0.009857177734375, 0.0233306884765625, 1.2666015625, 0.6689453125, 0.055328369140625, 0.578125, 0.001216888427734375, 0.001262664794921875, 0.274658203125, 0.0167236328125], "tokens": [397, 436, 308, 1212, 310, 499, 3708, 5909, 27, 301, 291, 415, 308, 96, 32, 297, 558, 346, 962, 310, 32, 18789, 922, 297, 9079, 1157, 301, 616, 4036, 45, 291, 320, 291, 4004, 537, 1853, 280, 537, 4004, 26, 1763, 32, 5038, 30, 310, 293, 291, 537, 1853, 32, 21545, 705]}
{"line_number": 102, "line_type": "original", "code": "      Node gramps = parent.getParent();", "entropy": 1.763671875, "is_bug_line": true, "sus_score": 0.3333333333333333, "per_token_entropy": [3.650390625, 1.8525390625, 7.62109375, 0.00021886825561523438, 0.037811279296875, 0.051422119140625, 2.90234375, 0.53857421875, 0.77001953125, 0.209228515625], "tokens": [647, 4004, 2914, 757, 101, 280, 2935, 32, 18789, 473]}
{"line_number": 102, "line_type": "generated", "code": "\n        NodeUtil.markFunctionsDeleted(n);\n      }\n    }\n  }", "entropy": 0.346923828125, "is_bug_line": true, "sus_score": 0.3333333333333333, "per_token_entropy": [0.52587890625, 1.7421875, 0.607421875, 0.0020999908447265625, 0.42822265625, 0.142822265625, 0.189697265625, 0.011444091796875, 0.271728515625, 0.41552734375, 0.671875, 0.003017425537109375, 0.316162109375, 0.0010356903076171875, 0.219970703125, 0.0010747909545898438], "tokens": [291, 4004, 1733, 32, 1826, 10905, 13576, 26, 96, 293, 397, 320, 284, 320, 334, 320]}
{"line_number": 103, "line_type": "original", "code": "      if (gramps.isCall() && parent == gramps.getFirstChild()) {", "entropy": 1.3427734375, "is_bug_line": true, "sus_score": 0.3333333333333333, "per_token_entropy": [2.447265625, 2.203125, 0.189208984375, 10.921875, 0.0016765594482421875, 0.0031642913818359375, 1.19140625, 0.896484375, 3.06640625, 0.38525390625, 0.133544921875, 3.50390625, 1.2626953125, 0.034149169921875, 1.8477439880371094e-05, 0.00010561943054199219, 0.1148681640625, 1.234375, 0.0007796287536621094, 0.5771484375, 0.0302886962890625], "tokens": [647, 415, 308, 771, 757, 101, 32, 297, 1853, 346, 962, 2935, 610, 2914, 757, 101, 32, 25657, 2931, 1157, 301]}
{"line_number": 103, "line_type": "generated", "code": "\n      }\n    }\n  }\n\n  private void protectSideEffects() {\n    if (problemNodes.isEmpty()) {\n      return;\n    }\n\n    // We want to protect the side-effect free code, so we'll\n    // add a statement to the start", "entropy": 0.671875, "is_bug_line": true, "sus_score": 0.3333333333333333, "per_token_entropy": [0.91748046875, 0.10113525390625, 0.2890625, 0.0037689208984375, 0.290283203125, 0.00189971923828125, 0.44580078125, 1.23046875, 0.0960693359375, 0.0245819091796875, 0.005359649658203125, 0.0004680156707763672, 0.00408935546875, 0.0012674331665039062, 0.070556640625, 1.775390625, 0.134521484375, 0.1190185546875, 0.00042366981506347656, 0.174072265625, 0.04766845703125, 0.01293182373046875, 0.017669677734375, 0.0328369140625, 0.014984130859375, 0.0014476776123046875, 0.00797271728515625, 0.000720977783203125, 0.416748046875, 1.6875, 2.8671875, 2.171875, 0.0772705078125, 1.671875, 1.1142578125, 1.46875, 0.28173828125, 0.1544189453125, 0.259521484375, 0.7470703125, 1.50390625, 1.6494140625, 0.892578125, 2.087890625, 1.3115234375, 0.0003943443298339844, 2.453125, 0.74658203125, 2.015625, 1.607421875, 0.70703125, 1.2216796875], "tokens": [397, 320, 284, 320, 334, 320, 719, 945, 763, 23809, 7427, 20126, 346, 301, 284, 415, 308, 14211, 5909, 32, 6393, 1157, 301, 397, 442, 45, 284, 320, 446, 434, 2688, 2637, 372, 23809, 322, 5209, 31, 7469, 3741, 1340, 30, 1259, 996, 4621, 284, 434, 1015, 312, 7603, 372, 322, 1477]}
{"line_number": 111, "line_type": "original", "code": "      if (n == parent.getLastChild()) {", "entropy": 1.388671875, "is_bug_line": true, "sus_score": 0.3333333333333333, "per_token_entropy": [4.578125, 2.63671875, 0.317626953125, 2.14453125, 3.306640625, 0.83203125, 0.04248046875, 0.951171875, 0.0004737377166748047, 0.4072265625, 0.05255126953125], "tokens": [647, 415, 308, 96, 610, 2935, 32, 20197, 2931, 1157, 301]}
{"line_number": 111, "line_type": "generated", "code": "\n   * @return The number of nodes protected.\n   */\n  private int protectSideEffects() {\n    int count = 0;\n    for (Node n : problemNodes) {\n      Node call = new Node(Token.CALL, n);\n      call", "entropy": 0.407470703125, "is_bug_line": true, "sus_score": 0.3333333333333333, "per_token_entropy": [0.389404296875, 0.85205078125, 0.82568359375, 1.755859375, 1.46875, 3.671875, 0.0257720947265625, 0.796875, 0.91357421875, 0.60498046875, 0.0966796875, 0.046661376953125, 0.045166015625, 0.248779296875, 0.290283203125, 0.0092010498046875, 0.006927490234375, 0.0016727447509765625, 0.01312255859375, 0.0008301734924316406, 0.0709228515625, 0.791015625, 0.443359375, 0.007595062255859375, 0.048797607421875, 0.00087738037109375, 0.0005278587341308594, 0.173095703125, 0.796875, 0.0022182464599609375, 0.005893707275390625, 0.254150390625, 0.01100921630859375, 0.0262908935546875, 8.571147918701172e-05, 0.0037479400634765625, 0.0017042160034179688, 0.069091796875, 1.162109375, 2.0234375, 0.450439453125, 0.62451171875, 0.006870269775390625, 0.0005712509155273438, 0.304931640625, 2.2649765014648438e-05, 0.0027008056640625, 0.038970947265625, 0.5888671875, 0.55908203125, 0.048980712890625, 0.60888671875], "tokens": [664, 319, 477, 601, 886, 1451, 432, 5166, 2522, 32, 664, 569, 334, 945, 629, 23809, 7427, 20126, 346, 301, 284, 629, 2385, 280, 225, 34, 45, 284, 436, 308, 1212, 310, 499, 3708, 5909, 27, 301, 397, 4004, 1476, 280, 537, 4004, 26, 1763, 32, 5038, 30, 310, 293, 397, 1476]}
{"line_number": 112, "line_type": "original", "code": "        for (Node an : parent.getAncestors()) {", "entropy": 1.9169921875, "is_bug_line": true, "sus_score": 0.3333333333333333, "per_token_entropy": [8.6796875, 2.685546875, 0.007282257080078125, 0.0255584716796875, 6.47265625, 0.484130859375, 4.69921875, 0.02947998046875, 1.5732421875, 0.2210693359375, 3.0994415283203125e-05, 0.0090789794921875, 0.0408935546875], "tokens": [351, 436, 308, 1212, 600, 499, 2935, 32, 371, 1045, 48023, 1157, 301]}
{"line_number": 112, "line_type": "generated", "code": "\n  private void protectSideEffects() {\n    for (Node n : problemNodes) {\n      Node call = new Node(Token.CALL, n);\n      call.addChildToFront(new Node(Token.NAME, CALL_NAME));\n      call.", "entropy": 0.29541015625, "is_bug_line": true, "sus_score": 0.3333333333333333, "per_token_entropy": [0.1484375, 0.29248046875, 0.06591796875, 0.00608062744140625, 0.005306243896484375, 0.0022487640380859375, 0.01898193359375, 0.001590728759765625, 0.102294921875, 1.7255859375, 0.00411224365234375, 0.00843048095703125, 0.1995849609375, 0.0259552001953125, 0.0175933837890625, 0.00010192394256591797, 0.0033283233642578125, 0.005096435546875, 0.08251953125, 0.82568359375, 1.9462890625, 0.5185546875, 0.6455078125, 0.00910186767578125, 0.0009908676147460938, 0.293212890625, 2.7298927307128906e-05, 0.0024852752685546875, 0.03955078125, 0.560546875, 0.53466796875, 0.0804443359375, 0.6064453125, 0.0006661415100097656, 0.1820068359375, 0.02008056640625, 0.7763671875, 0.0003991127014160156, 0.73095703125, 0.0245208740234375, 0.0013456344604492188, 0.08624267578125, 3.135204315185547e-05, 0.1258544921875, 0.014739990234375, 2.01171875, 0.216796875, 1.255859375, 0.27099609375, 0.057281494140625, 0.8056640625, 0.00041866302490234375], "tokens": [334, 945, 763, 23809, 7427, 20126, 346, 301, 284, 436, 308, 1212, 310, 499, 3708, 5909, 27, 301, 397, 4004, 1476, 280, 537, 4004, 26, 1763, 32, 5038, 30, 310, 293, 397, 1476, 32, 21545, 705, 10112, 26, 890, 4004, 26, 1763, 32, 2474, 30, 16084, 81, 2474, 876, 397, 1476, 32]}
{"line_number": 113, "line_type": "original", "code": "          int ancestorType = an.getType();", "entropy": 2.732421875, "is_bug_line": true, "sus_score": 0.3333333333333333, "per_token_entropy": [10.453125, 4.69921875, 3.50390625, 0.139892578125, 0.1810302734375, 5.53125, 0.06439208984375, 0.0258941650390625, 0.0014829635620117188], "tokens": [2033, 629, 39285, 620, 280, 600, 32, 10272, 473]}
{"line_number": 113, "line_type": "generated", "code": "\n    if (problemNodes.isEmpty()) {\n      return;\n    }\n\n    // Find the body of the current function.\n    Node body = null;\n    Node n = functionNode;\n    while (n!= null) {\n      if (n.isFunction())", "entropy": 0.496337890625, "is_bug_line": true, "sus_score": 0.3333333333333333, "per_token_entropy": [0.431640625, 1.4814453125, 0.244140625, 0.3935546875, 0.00188446044921875, 0.181640625, 0.0731201171875, 0.04107666015625, 0.192138671875, 0.0494384765625, 0.01383209228515625, 0.0028591156005859375, 0.00669097900390625, 0.0009794235229492188, 0.482666015625, 1.8037109375, 2.322265625, 0.389404296875, 3.3515625, 0.2357177734375, 0.19775390625, 2.935546875, 0.326171875, 0.7265625, 0.11370849609375, 0.10797119140625, 1.3837890625, 0.07177734375, 1.69921875, 0.0035419464111328125, 0.0477294921875, 0.34326171875, 0.75830078125, 0.0220794677734375, 2.029296875, 0.560546875, 0.82275390625, 0.03155517578125, 0.2359619140625, 0.14697265625, 0.183837890625, 0.08502197265625, 0.002635955810546875, 0.261474609375, 0.0006222724914550781, 0.0191192626953125, 0.344482421875, 0.01407623291015625, 0.093994140625, 0.003932952880859375, 0.417236328125, 0.1173095703125], "tokens": [284, 415, 308, 14211, 5909, 32, 6393, 1157, 301, 397, 442, 45, 284, 320, 446, 434, 7477, 322, 3361, 432, 322, 1550, 667, 32, 284, 4004, 3361, 280, 744, 45, 284, 4004, 310, 280, 667, 1212, 45, 284, 2218, 308, 96, 863, 744, 27, 301, 397, 415, 308, 96, 32, 39504, 1157]}
{"line_number": 114, "line_type": "original", "code": "          if (ancestorType == Token.COMMA)", "entropy": 2.92578125, "is_bug_line": true, "sus_score": 0.3333333333333333, "per_token_entropy": [8.921875, 3.603515625, 0.228271484375, 10.125, 0.6552734375, 0.92333984375, 0.00794219970703125, 0.0004398822784423828, 4.59375, 0.1883544921875], "tokens": [2033, 415, 308, 43570, 620, 610, 6512, 32, 47451, 27]}
{"line_number": 114, "line_type": "generated", "code": "\n    }\n  }", "entropy": 0.254638671875, "is_bug_line": true, "sus_score": 0.3333333333333333, "per_token_entropy": [0.884765625, 0.0867919921875, 0.04608154296875, 0.0007886886596679688], "tokens": [284, 320, 334, 320]}
{"line_number": 116, "line_type": "original", "code": "          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)", "entropy": 1.5283203125, "is_bug_line": true, "sus_score": 0.3333333333333333, "per_token_entropy": [5.7734375, 2.73828125, 0.2158203125, 10.8125, 2.748046875, 1.53125, 0.01285552978515625, 0.0007224082946777344, 3.869140625, 0.0002620220184326172, 0.004070281982421875, 0.5859375, 0.54150390625, 0.0058746337890625, 0.004566192626953125, 0.0025768280029296875, 8.809566497802734e-05, 0.082763671875, 0.10137939453125], "tokens": [2033, 415, 308, 43570, 620, 863, 6512, 32, 17793, 81, 6383, 962, 39285, 620, 863, 6512, 32, 10322, 27]}
{"line_number": 116, "line_type": "generated", "code": "\n        NodeUtil.insertBefore(n, new Node(Token.CALL, n.removeFirstChild()));\n      }\n      problemNodes.clear();\n    }\n  }\n\n  /**\n   * Add the extern function call to the top of the script.\n   */\n ", "entropy": 0.5673828125, "is_bug_line": true, "sus_score": 0.3333333333333333, "per_token_entropy": [0.7109375, 1.28125, 1.900390625, 0.0024890899658203125, 1.8193359375, 0.07489013671875, 0.1156005859375, 0.40087890625, 1.8154296875, 0.8037109375, 0.0216522216796875, 0.2098388671875, 4.398822784423828e-05, 0.76806640625, 0.0218505859375, 1.5380859375, 1.5, 0.6953125, 0.8212890625, 0.0008268356323242188, 0.326416015625, 0.45654296875, 0.0008492469787597656, 0.9423828125, 0.33935546875, 0.00023233890533447266, 0.0472412109375, 0.012176513671875, 0.0003604888916015625, 0.0535888671875, 0.00026798248291015625, 0.0207061767578125, 0.0005517005920410156, 0.11456298828125, 0.58349609375, 0.1236572265625, 0.0006461143493652344, 1.3359375, 0.86474609375, 1.763671875, 1.837890625, 1.2900390625, 0.96142578125, 0.23583984375, 1.6376953125, 0.1080322265625, 0.071533203125, 1.3173828125, 0.33251953125, 0.0266265869140625, 0.185302734375, 0.004985809326171875], "tokens": [291, 4004, 1733, 32, 31328, 26, 96, 30, 537, 4004, 26, 1763, 32, 5038, 30, 310, 32, 2546, 3472, 2931, 5073, 397, 320, 397, 3708, 5909, 32, 3815, 473, 284, 320, 334, 320, 719, 1022, 664, 319, 2222, 322, 12098, 667, 1476, 372, 322, 2663, 432, 322, 3261, 32, 664, 569, 334]}
{"line_number": 117, "line_type": "original", "code": "            return;", "entropy": 5.125, "is_bug_line": true, "sus_score": 0.3333333333333333, "per_token_entropy": [7.16796875, 6.875, 1.3349609375], "tokens": [1468, 442, 45]}
{"line_number": 117, "line_type": "generated", "code": "\n        Node newCall = IR.call(name, n).srcref(n);\n        n.getParent().replaceChild(n, newCall);\n      }\n      problemNodes.clear();\n    }\n  }\n\n  private void addExtern() {\n   ", "entropy": 0.1881103515625, "is_bug_line": true, "sus_score": 0.3333333333333333, "per_token_entropy": [0.2451171875, 0.94970703125, 2.171875, 0.57958984375, 0.0693359375, 0.3193359375, 0.0014810562133789062, 0.1435546875, 0.00261688232421875, 0.064453125, 0.144287109375, 0.1552734375, 0.337158203125, 0.062164306640625, 3.2067298889160156e-05, 0.05078125, 0.01520538330078125, 0.019561767578125, 0.2186279296875, 0.7451171875, 0.0001817941665649414, 0.3935546875, 0.0001163482666015625, 0.059539794921875, 0.0008907318115234375, 0.0006747245788574219, 0.004039764404296875, 0.0007853507995605469, 0.01026153564453125, 6.115436553955078e-05, 0.004383087158203125, 0.323486328125, 0.00191497802734375, 0.8525390625, 0.26806640625, 0.00016438961029052734, 0.07330322265625, 0.01438140869140625, 0.00027632713317871094, 0.059967041015625, 0.00030803680419921875, 0.0224151611328125, 0.0005784034729003906, 0.13134765625, 0.94970703125, 0.2227783203125, 0.01239013671875, 0.0007386207580566406, 1.1920928955078125e-07, 0.009124755859375, 0.0011072158813476562, 0.070068359375], "tokens": [291, 4004, 537, 1853, 280, 14095, 32, 1851, 26, 426, 30, 310, 547, 1617, 612, 26, 96, 293, 291, 310, 32, 18789, 922, 3227, 2931, 26, 96, 30, 537, 1853, 293, 397, 320, 397, 3708, 5909, 32, 3815, 473, 284, 320, 334, 320, 719, 945, 763, 1015, 571, 900, 346, 301, 284]}
{"line_number": 122, "line_type": "original", "code": "    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {", "entropy": 1.0009765625, "is_bug_line": true, "sus_score": 0.3333333333333333, "per_token_entropy": [3.357421875, 0.274658203125, 5.85546875, 1.5625, 0.1396484375, 3.970703125, 0.2509765625, 0.198974609375, 0.003025054931640625, 3.66796875, 0.0022373199462890625, 6.902217864990234e-05, 4.3984375, 0.0003764629364013672, 0.004154205322265625, 1.052734375, 0.87109375, 0.0083465576171875, 0.08319091796875, 0.00820159912109375, 0.0115203857421875, 0.0058135986328125, 2.586841583251953e-05, 0.11737060546875, 0.127685546875, 0.039337158203125], "tokens": [264, 320, 813, 415, 308, 2544, 32, 10272, 346, 863, 6512, 32, 17793, 81, 6383, 962, 2935, 32, 10272, 346, 863, 6512, 32, 10322, 27, 301]}
{"line_number": 122, "line_type": "generated", "code": "\n      }\n    }\n  }\n\n  private void addExtern() {\n    // TODO(johnlenz): this code is a duplicate of\n    // AddExterns.addExtern()\n    Node externs = compiler.getScriptNode().getSecond", "entropy": 0.67724609375, "is_bug_line": true, "sus_score": 0.3333333333333333, "per_token_entropy": [0.6953125, 0.2327880859375, 0.3994140625, 0.0025959014892578125, 0.06585693359375, 0.00048542022705078125, 0.167236328125, 0.94775390625, 0.1986083984375, 0.0102691650390625, 0.0008549690246582031, 1.1920928955078125e-07, 0.00966644287109375, 0.0012731552124023438, 0.06353759765625, 2.138671875, 2.390625, 0.063232421875, 0.112548828125, 0.0017900466918945312, 0.0002397298812866211, 0.0556640625, 3.166015625, 2.123046875, 1.1787109375, 2.193359375, 2.048828125, 0.16796875, 1.6240234375, 0.000797271728515625, 3.447265625, 0.19921875, 2.7418136596679688e-06, 0.1287841796875, 0.5263671875, 1.0615234375, 0.09619140625, 4.291534423828125e-06, 1.0927734375, 0.93701171875, 1.119140625, 1.1572265625, 0.07171630859375, 0.281982421875, 1.3310546875, 0.00012636184692382812, 0.642578125, 0.57666015625, 0.3427734375, 0.052520751953125, 1.2900390625, 0.81689453125], "tokens": [397, 320, 284, 320, 334, 320, 719, 945, 763, 1015, 571, 900, 346, 301, 284, 434, 4296, 26, 25172, 1657, 108, 711, 458, 1340, 438, 312, 12843, 432, 284, 434, 2222, 571, 900, 101, 32, 669, 571, 900, 346, 284, 4004, 12098, 101, 280, 8980, 32, 371, 3206, 1212, 922, 371, 5064]}
{"line_number": 141, "line_type": "original", "code": "        msg = \"Is there a missing '+' on the previous line?\";", "entropy": 2.38671875, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [7.06640625, 10.6015625, 0.09747314453125, 0.190673828125, 6.36328125, 0.257080078125, 0.0132598876953125, 6.40234375, 3.00390625, 0.63330078125, 0.74951171875, 0.2022705078125, 0.09747314453125, 0.087890625, 0.03216552734375], "tokens": [351, 3124, 280, 313, 1622, 2017, 312, 5816, 43563, 544, 322, 4552, 1628, 49, 866]}
{"line_number": 141, "line_type": "generated", "code": "  }", "entropy": 1.8994140625, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [2.287109375, 1.51171875], "tokens": [225, 320]}
{"line_number": 91, "line_type": "original", "code": "      return;", "entropy": 2.36328125, "is_bug_line": false, "sus_score": 0.18257418583505536, "per_token_entropy": [3.591796875, 3.494140625, 0.00585174560546875], "tokens": [647, 442, 45]}
{"line_number": 91, "line_type": "generated", "code": "\n        if (level == CheckLevel.ERROR) {\n          report(t, n, msg);\n        } else {\n          compiler.report(JSError.make(n, msg));\n        }\n      } else if (n.isAssign() || n", "entropy": 0.46044921875, "is_bug_line": false, "sus_score": 0.18257418583505536, "per_token_entropy": [1.7001953125, 1.658203125, 0.25439453125, 1.068359375, 0.72216796875, 0.0089569091796875, 0.00028133392333984375, 8.702278137207031e-05, 0.239501953125, 0.10260009765625, 0.0216217041015625, 0.2119140625, 1.78125, 0.410400390625, 0.4306640625, 0.02947998046875, 0.044891357421875, 0.033203125, 0.89599609375, 0.036895751953125, 0.176513671875, 0.00012254714965820312, 1.6435546875, 0.56396484375, 0.09136962890625, 1.9296875, 0.00013303756713867188, 0.15576171875, 1.3232421875, 0.62744140625, 0.056182861328125, 0.0006761550903320312, 0.0005593299865722656, 0.002506256103515625, 0.1353759765625, 0.0019683837890625, 1.1181640625, 0.06854248046875, 0.0712890625, 0.00023937225341796875, 0.251708984375, 0.007602691650390625, 0.267822265625, 0.493896484375, 0.119873046875, 0.4853515625, 0.00447845458984375, 0.37646484375, 1.609375, 1.212890625, 1.2421875, 0.250732421875], "tokens": [291, 415, 308, 2649, 610, 3456, 2656, 32, 2930, 27, 301, 616, 3639, 26, 102, 30, 310, 30, 3124, 293, 291, 320, 813, 301, 616, 8980, 32, 3734, 26, 60, 21887, 32, 2682, 26, 96, 30, 3124, 876, 291, 320, 397, 320, 813, 415, 308, 96, 32, 297, 9079, 346, 1276, 310]}
{"line_number": 143, "line_type": "original", "code": "        msg = \"The result of the '\" + Token.name(n.getType()).toLowerCase() +", "entropy": 2.197265625, "is_bug_line": false, "sus_score": 0.18257418583505536, "per_token_entropy": [6.62890625, 12.3203125, 0.1297607421875, 0.24853515625, 3.771484375, 2.22265625, 0.022216796875, 2.93359375, 4.24609375, 0.1290283203125, 6.80078125, 0.37255859375, 0.461181640625, 0.004791259765625, 0.60693359375, 0.013885498046875, 0.0181732177734375, 4.98828125, 0.0071868896484375, 0.08319091796875, 0.1474609375], "tokens": [351, 3124, 280, 313, 1318, 1056, 432, 322, 6113, 474, 6512, 32, 426, 26, 96, 32, 10272, 4251, 10493, 346, 474]}
{"line_number": 143, "line_type": "generated", "code": "\n  private void removeSyncs() {\n    NodeUtil.visitPostOrder(root, new NodeUtil.MatchShallow<Node>() {\n      @Override\n      public boolean match(Node node) {\n        return node.isCall() && node.getFirst", "entropy": 0.3505859375, "is_bug_line": false, "sus_score": 0.18257418583505536, "per_token_entropy": [0.54345703125, 0.231201171875, 0.2509765625, 0.390869140625, 0.75390625, 1.638671875, 0.1292724609375, 0.011962890625, 0.2015380859375, 0.57763671875, 1.7373046875, 0.0273895263671875, 0.6806640625, 0.1671142578125, 0.0059967041015625, 0.00421142578125, 1.1416015625, 0.0137939453125, 0.0855712890625, 0.490966796875, 0.01202392578125, 0.0015811920166015625, 0.9873046875, 0.8623046875, 0.066162109375, 1.2578125, 0.1796875, 0.2247314453125, 0.003314971923828125, 0.27099609375, 0.06329345703125, 0.0006856918334960938, 0.061737060546875, 0.01520538330078125, 0.059112548828125, 0.1591796875, 0.01265716552734375, 0.0020847320556640625, 1.30078125, 0.045623779296875, 0.0002472400665283203, 0.072265625, 1.0302734375, 0.2469482421875, 0.016510009765625, 0.54248046875, 0.5224609375, 0.09906005859375, 0.1995849609375, 0.44677734375, 0.0071258544921875, 0.375732421875], "tokens": [334, 945, 763, 3345, 4764, 101, 346, 301, 284, 4004, 1733, 32, 8275, 3160, 2871, 26, 2388, 30, 537, 4004, 1733, 32, 3665, 1189, 4568, 46, 1212, 6940, 301, 397, 477, 1788, 397, 562, 1905, 2530, 26, 1212, 1541, 27, 301, 291, 442, 1541, 32, 297, 1853, 346, 962, 1541, 32, 25657]}
{"line_number": 164, "line_type": "original", "code": "      addExtern();", "entropy": 2.876953125, "is_bug_line": false, "sus_score": 0.17407765595569785, "per_token_entropy": [3.734375, 9.0625, 1.4853515625, 4.971027374267578e-05, 0.1031494140625], "tokens": [647, 1015, 571, 900, 473]}
{"line_number": 164, "line_type": "generated", "code": "\n          expr.detach();\n          parent.replaceChild(n, expr);\n        }\n      }\n    }\n  }", "entropy": 0.2666015625, "is_bug_line": false, "sus_score": 0.17407765595569785, "per_token_entropy": [0.35888671875, 2.1328125, 0.06829833984375, 0.07275390625, 0.5087890625, 0.6455078125, 1.287109375, 0.00024771690368652344, 0.036590576171875, 0.00010120868682861328, 0.00018334388732910156, 0.0019483566284179688, 0.0003190040588378906, 0.0173492431640625, 0.0673828125, 0.76513671875, 0.0010509490966796875, 0.02764892578125, 0.0003445148468017578, 0.04107666015625, 0.00077056884765625, 0.097900390625, 0.002231597900390625], "tokens": [616, 9810, 32, 18723, 473, 616, 2935, 32, 3227, 2931, 26, 96, 30, 9810, 293, 291, 320, 397, 320, 284, 320, 334, 320]}
{"line_number": 165, "line_type": "original", "code": "      for (Node n : problemNodes) {", "entropy": 3.427734375, "is_bug_line": false, "sus_score": 0.17407765595569785, "per_token_entropy": [4.6640625, 5.546875, 0.029693603515625, 0.048553466796875, 4.24609375, 4.1484375, 15.5546875, 0.00560760498046875, 0.023101806640625, 0.017669677734375], "tokens": [647, 436, 308, 1212, 310, 499, 3708, 5909, 27, 301]}
{"line_number": 165, "line_type": "generated", "code": "\n          expr.detach();\n        }\n      }\n    }\n  }", "entropy": 0.29150390625, "is_bug_line": false, "sus_score": 0.17407765595569785, "per_token_entropy": [0.52392578125, 1.16796875, 0.072509765625, 0.1328125, 0.568359375, 1.158203125, 0.0035114288330078125, 0.027862548828125, 0.00032782554626464844, 0.0296783447265625, 0.0006666183471679688, 0.10076904296875, 0.002353668212890625], "tokens": [616, 9810, 32, 18723, 473, 291, 320, 397, 320, 284, 320, 334, 320]}
{"line_number": 166, "line_type": "original", "code": "        Node name = IR.name(PROTECTOR_FN).srcref(n);", "entropy": 0.91259765625, "is_bug_line": false, "sus_score": 0.17407765595569785, "per_token_entropy": [4.0234375, 3.646484375, 5.6640625, 0.041534423828125, 0.5908203125, 0.0003113746643066406, 0.0174560546875, 0.347900390625, 0.1593017578125, 0.00025653839111328125, 0.00021600723266601562, 0.0051116943359375, 0.09735107421875, 2.25390625, 0.1453857421875, 0.0001251697540283203, 0.00803375244140625, 0.316162109375, 0.0195770263671875], "tokens": [351, 4004, 636, 280, 14095, 32, 426, 26, 2383, 1713, 12829, 81, 8044, 547, 1617, 612, 26, 96, 293]}
{"line_number": 166, "line_type": "generated", "code": "\n          parent.removeChild(n);\n        }\n      }\n    }\n  }", "entropy": 0.331298828125, "is_bug_line": false, "sus_score": 0.17407765595569785, "per_token_entropy": [0.7724609375, 2.341796875, 0.013580322265625, 0.93603515625, 0.00623321533203125, 0.2095947265625, 0.0111236572265625, 0.52099609375, 0.0009551048278808594, 0.032470703125, 0.00033354759216308594, 0.0258636474609375, 0.0006628036499023438, 0.09246826171875, 0.0025882720947265625], "tokens": [616, 2935, 32, 28878, 26, 96, 293, 291, 320, 397, 320, 284, 320, 334, 320]}
{"line_number": 167, "line_type": "original", "code": "        name.putBooleanProp(Node.IS_CONSTANT_NAME, true);", "entropy": 0.82763671875, "is_bug_line": false, "sus_score": 0.17407765595569785, "per_token_entropy": [3.728515625, 7.609375, 0.63427734375, 1.474609375, 0.004268646240234375, 0.0027446746826171875, 0.01351165771484375, 0.01125335693359375, 1.9073486328125e-05, 0.5556640625, 0.00013899803161621094, 0.007427215576171875, 0.00045871734619140625, 0.0005397796630859375, 0.00182342529296875, 0.01898193359375, 0.00628662109375], "tokens": [351, 636, 32, 524, 4709, 6567, 26, 1212, 32, 1296, 81, 21170, 81, 2474, 30, 861, 293]}
{"line_number": 167, "line_type": "generated", "code": "\n      }\n    }\n  }", "entropy": 0.08587646484375, "is_bug_line": false, "sus_score": 0.17407765595569785, "per_token_entropy": [0.27392578125, 0.00360107421875, 0.08099365234375, 0.0011510848999023438, 0.152587890625, 0.0030040740966796875], "tokens": [397, 320, 284, 320, 334, 320]}
{"line_number": 168, "line_type": "original", "code": "        Node replacement = IR.call(name).srcref(n);", "entropy": 1.5458984375, "is_bug_line": false, "sus_score": 0.17407765595569785, "per_token_entropy": [4.5703125, 3.259765625, 3.990234375, 0.0726318359375, 1.2451171875, 0.0016183853149414062, 1.958984375, 0.1671142578125, 6.39453125, 1.2880859375, 0.06475830078125, 7.462501525878906e-05, 0.017059326171875, 0.11248779296875, 0.03692626953125], "tokens": [351, 4004, 15909, 280, 14095, 32, 1851, 26, 426, 547, 1617, 612, 26, 96, 293]}
{"line_number": 168, "line_type": "generated", "code": "\n    }\n  }", "entropy": 0.1490478515625, "is_bug_line": false, "sus_score": 0.17407765595569785, "per_token_entropy": [0.368408203125, 0.0199127197265625, 0.20263671875, 0.0052490234375], "tokens": [284, 320, 334, 320]}
{"line_number": 169, "line_type": "original", "code": "        replacement.putBooleanProp(Node.FREE_CALL, true);", "entropy": 1.728515625, "is_bug_line": false, "sus_score": 0.17407765595569785, "per_token_entropy": [7.25, 9.3359375, 0.1279296875, 5.6640625, 0.004962921142578125, 0.0068511962890625, 0.040924072265625, 0.03497314453125, 9.965896606445312e-05, 2.466796875, 0.00983428955078125, 0.482666015625, 0.1064453125, 0.385498046875, 0.006603240966796875], "tokens": [351, 15909, 32, 524, 4709, 6567, 26, 1212, 32, 18715, 81, 5038, 30, 861, 293]}
{"line_number": 169, "line_type": "generated", "code": "\n  }", "entropy": 0.293701171875, "is_bug_line": false, "sus_score": 0.17407765595569785, "per_token_entropy": [0.56640625, 0.02081298828125], "tokens": [334, 320]}
{"line_number": 170, "line_type": "original", "code": "        n.getParent().replaceChild(n, replacement);", "entropy": 1.640625, "is_bug_line": false, "sus_score": 0.17407765595569785, "per_token_entropy": [8.3671875, 5.51171875, 0.18701171875, 1.2216796875, 0.039703369140625, 0.95947265625, 0.011932373046875, 0.007228851318359375, 0.034759521484375, 0.015228271484375, 3.310546875, 0.025604248046875], "tokens": [351, 310, 32, 18789, 922, 3227, 2931, 26, 96, 30, 15909, 293]}
{"line_number": 170, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.17407765595569785, "per_token_entropy": [], "tokens": []}
{"line_number": 171, "line_type": "original", "code": "        replacement.addChildToBack(n);", "entropy": 2.45703125, "is_bug_line": false, "sus_score": 0.17407765595569785, "per_token_entropy": [8.484375, 9.28125, 0.2099609375, 2.095703125, 0.01190948486328125, 0.92724609375, 0.0164794921875, 0.294677734375, 0.78125], "tokens": [351, 15909, 32, 21545, 705, 2495, 26, 96, 293]}
{"line_number": 171, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.17407765595569785, "per_token_entropy": [], "tokens": []}
