{"line_number": 762, "line_type": "original", "code": "        return false;", "entropy": 2.263671875, "is_bug_line": false, "sus_score": 0.6666666666666666, "per_token_entropy": [7.83984375, 0.5068359375, 0.70166015625, 0.004726409912109375], "tokens": [351, 442, 901, 45]}
{"line_number": 762, "line_type": "generated", "code": "\n  }\n\n  /**\n   * Returns true if the current node has side effects.\n   *\n   * This is a recursive version of the may have side effects\n   * check; used to check if the current node or any of its\n   * descendants have side", "entropy": 0.42919921875, "is_bug_line": false, "sus_score": 0.6666666666666666, "per_token_entropy": [0.6669921875, 0.00926971435546875, 0.27734375, 0.44287109375, 0.0394287109375, 0.00016963481903076172, 0.70361328125, 0.292724609375, 0.0253448486328125, 0.51220703125, 1.015625, 0.0965576171875, 2.03125, 0.5419921875, 0.05828857421875, 0.3935546875, 0.1512451171875, 0.40234375, 0.12054443359375, 0.0014781951904296875, 0.87939453125, 0.3603515625, 0.1485595703125, 1.44921875, 0.273681640625, 0.0146636962890625, 0.175537109375, 0.5283203125, 0.005901336669921875, 0.0010423660278320312, 0.00743865966796875, 0.76123046875, 0.0019063949584960938, 0.00907135009765625, 0.196533203125, 0.10491943359375, 0.188232421875, 0.1722412109375, 2.205078125, 1.013671875, 0.60205078125, 0.0660400390625, 1.0732421875, 0.4912109375, 0.217041015625, 0.06939697265625, 1.330078125, 0.00018072128295898438, 1.0361328125, 0.194580078125, 0.8935546875, 0.0667724609375], "tokens": [334, 320, 719, 1022, 664, 319, 3759, 861, 415, 322, 1550, 1541, 1401, 5209, 15987, 32, 664, 319, 664, 319, 1348, 438, 312, 18581, 1503, 432, 322, 1631, 1159, 5209, 15987, 664, 319, 1505, 45, 1654, 372, 1505, 415, 322, 1550, 1541, 556, 1346, 432, 2819, 664, 319, 5585, 31884, 1159, 5209]}
{"line_number": 2465, "line_type": "original", "code": "        return true;", "entropy": 3.24609375, "is_bug_line": true, "sus_score": 0.5499719409228703, "per_token_entropy": [9.2265625, 1.470703125, 2.275390625, 0.01525115966796875], "tokens": [351, 442, 861, 45]}
{"line_number": 2465, "line_type": "generated", "code": "\n  /**\n   * Given the function, this returns the nth\n   * parameter or null if no such parameter exists.\n   */\n  static Node getParameterForFunction(Node function, int index) {\n    Preconditions.checkState(isFunction(function));\n    return", "entropy": 0.153076171875, "is_bug_line": true, "sus_score": 0.5499719409228703, "per_token_entropy": [0.64111328125, 0.88720703125, 0.10723876953125, 0.0008029937744140625, 1.46875, 0.54296875, 0.673828125, 0.2122802734375, 0.079345703125, 0.041229248046875, 0.1629638671875, 0.5263671875, 0.135986328125, 0.0003123283386230469, 1.220703125, 0.239990234375, 0.01294708251953125, 0.0015201568603515625, 0.01202392578125, 0.0013647079467773438, 0.020843505859375, 0.0021915435791015625, 0.0052032470703125, 0.014678955078125, 0.08941650390625, 0.0182342529296875, 0.1319580078125, 0.02618408203125, 0.0028324127197265625, 0.076416015625, 0.057373046875, 0.006740570068359375, 0.0020771026611328125, 0.01020050048828125, 0.00789642333984375, 0.00293731689453125, 0.0011148452758789062, 0.004329681396484375, 0.001434326171875, 0.0008792877197265625, 0.01537322998046875, 0.0298004150390625, 1.2636184692382812e-05, 0.003070831298828125, 0.00925445556640625, 0.0004291534423828125, 0.006496429443359375, 0.0020904541015625, 0.00011277198791503906, 0.0211181640625, 0.0634765625, 0.359375], "tokens": [334, 1022, 664, 319, 15273, 322, 667, 30, 458, 3217, 322, 46245, 664, 319, 3395, 556, 744, 415, 1289, 3751, 3395, 5375, 32, 664, 569, 334, 907, 4004, 622, 3012, 1562, 2447, 26, 1212, 667, 30, 629, 1650, 27, 301, 284, 40596, 32, 1553, 1078, 26, 39504, 26, 1126, 876, 284, 442]}
{"line_number": 2416, "line_type": "original", "code": "    return evaluatesToLocalValue(value, Predicates.<Node>alwaysFalse());", "entropy": 1.865234375, "is_bug_line": false, "sus_score": 0.30377412562192235, "per_token_entropy": [3.185546875, 5.43359375, 8.8984375, 0.098876953125, 0.01971435546875, 0.043243408203125, 0.08123779296875, 1.626953125, 8.4765625, 0.0013599395751953125, 0.77783203125, 0.0064544677734375, 0.0005350112915039062, 0.19384765625, 0.98388671875, 0.01165008544921875], "tokens": [264, 442, 43992, 40608, 882, 26, 853, 30, 14407, 29770, 5700, 1212, 48, 12149, 2700, 1035]}
{"line_number": 2416, "line_type": "generated", "code": "\n    }\n    return false;\n  }\n\n  /**\n   * @return Whether the CALL node has a local result.\n   */\n  static boolean callHasLocalResult(Node call) {\n    Node callTarget = call.getFirstChild();\n    if (isGet", "entropy": 0.3251953125, "is_bug_line": false, "sus_score": 0.30377412562192235, "per_token_entropy": [1.265625, 0.020843505859375, 0.1629638671875, 0.296630859375, 0.23095703125, 0.0004343986511230469, 0.0245819091796875, 0.0010738372802734375, 0.31884765625, 0.31787109375, 0.07086181640625, 0.00032782554626464844, 0.5615234375, 0.52197265625, 0.08685302734375, 0.338134765625, 1.2548828125, 0.28173828125, 1.080078125, 0.1656494140625, 0.47802734375, 0.230224609375, 0.6640625, 0.1708984375, 0.06689453125, 0.0016584396362304688, 0.32421875, 0.005695343017578125, 0.0052947998046875, 0.0007419586181640625, 0.00021159648895263672, 7.37905502319336e-05, 0.00063323974609375, 0.00197601318359375, 0.363525390625, 0.1549072265625, 0.0002067089080810547, 0.08526611328125, 1.6435546875, 1.951171875, 0.01727294921875, 0.01123809814453125, 0.046600341796875, 0.0016183853149414062, 0.00605010986328125, 0.00023865699768066406, 0.002777099609375, 0.097900390625, 0.90771484375, 0.436279296875, 0.744140625, 1.478515625], "tokens": [284, 320, 284, 442, 901, 45, 334, 320, 719, 1022, 664, 319, 477, 601, 14071, 322, 16084, 1541, 1401, 312, 2196, 1056, 32, 664, 569, 334, 907, 1905, 1476, 3993, 3325, 1394, 26, 1212, 1476, 27, 301, 284, 4004, 1476, 2922, 280, 1476, 32, 25657, 2931, 473, 284, 415, 308, 297, 936]}
{"line_number": 2425, "line_type": "original", "code": "    switch (value.getType()) {", "entropy": 1.498046875, "is_bug_line": false, "sus_score": 0.30377412562192235, "per_token_entropy": [6.140625, 5.5625, 0.05096435546875, 0.07366943359375, 0.003238677978515625, 0.0321044921875, 0.0005159378051757812, 0.123291015625], "tokens": [264, 3578, 308, 853, 32, 10272, 1157, 301]}
{"line_number": 2425, "line_type": "generated", "code": "\n      default:\n        return false;", "entropy": 0.2205810546875, "is_bug_line": false, "sus_score": 0.30377412562192235, "per_token_entropy": [0.420166015625, 0.57763671875, 0.00098419189453125, 0.023101806640625, 0.265380859375, 0.256103515625, 0.0009598731994628906], "tokens": [397, 1244, 44, 291, 442, 901, 45]}
{"line_number": 2450, "line_type": "original", "code": "        return locals.apply(value);", "entropy": 2.740234375, "is_bug_line": false, "sus_score": 0.28867513459481287, "per_token_entropy": [3.42578125, 6.95703125, 11.046875, 0.046173095703125, 0.015869140625, 0.002574920654296875, 0.3935546875, 0.040069580078125], "tokens": [351, 442, 28363, 32, 4699, 26, 853, 293]}
{"line_number": 2450, "line_type": "generated", "code": "      index--;\n    }\n    return sibling;\n  }\n\n  /**\n   * @return Whether the node is known to be a value that is not referenced\n   * elsewhere.\n   */\n  static boolean isImmutableValue(Node value) {\n    if (isName", "entropy": 0.328125, "is_bug_line": false, "sus_score": 0.28867513459481287, "per_token_entropy": [1.6982421875, 0.1981201171875, 0.08392333984375, 0.05059814453125, 0.0008492469787597656, 0.0802001953125, 0.052154541015625, 0.01482391357421875, 0.00737762451171875, 0.00450897216796875, 0.0010042190551757812, 0.174560546875, 0.28955078125, 0.05975341796875, 0.0006198883056640625, 1.400390625, 0.1827392578125, 0.310302734375, 0.467529296875, 1.1396484375, 0.3955078125, 1.2080078125, 0.0164031982421875, 0.2509765625, 0.41552734375, 0.54736328125, 0.06121826171875, 0.1470947265625, 0.383544921875, 0.32275390625, 0.0325927734375, 0.0009469985961914062, 0.8212890625, 0.15625, 0.044464111328125, 0.0272064208984375, 0.019500732421875, 0.255615234375, 0.01393890380859375, 0.271728515625, 0.32373046875, 0.0121002197265625, 0.0027008056640625, 0.0015478134155273438, 0.300537109375, 0.0022678375244140625, 0.0006165504455566406, 0.0450439453125, 1.6376953125, 0.06964111328125, 1.8330078125, 1.224609375], "tokens": [647, 1650, 10612, 284, 320, 284, 442, 40560, 45, 334, 320, 719, 1022, 664, 319, 477, 601, 14071, 322, 1541, 438, 8967, 372, 526, 312, 786, 688, 438, 646, 15167, 664, 319, 33289, 32, 664, 569, 334, 907, 1905, 438, 15027, 882, 26, 1212, 786, 27, 301, 284, 415, 308, 297, 558]}
{"line_number": 825, "line_type": "original", "code": "        return NodeUtil.constructorCallHasSideEffects(n, compiler);", "entropy": 2.3359375, "is_bug_line": false, "sus_score": 0.2721655269759087, "per_token_entropy": [5.15234375, 3.619140625, 4.61328125, 0.0008578300476074219, 0.0022487640380859375, 15.0625, 3.087890625, 0.1326904296875, 0.044036865234375, 0.043670654296875, 0.03192138671875, 0.7822265625, 0.8759765625, 1.2470703125, 0.327392578125], "tokens": [351, 442, 4004, 1733, 32, 9430, 1853, 3993, 7427, 20126, 26, 96, 30, 8980, 293]}
{"line_number": 825, "line_type": "generated", "code": "\n    }\n\n    return false;\n  }\n\n  /**\n   * @return Whether the given node is an assignment operator.\n   */\n  static boolean isAssignmentOp(Node n) {\n    return n.getType() == Token.ASSIGN;\n  }\n\n  /**\n  ", "entropy": 0.277587890625, "is_bug_line": false, "sus_score": 0.2721655269759087, "per_token_entropy": [0.76953125, 0.018798828125, 0.576171875, 0.2410888671875, 0.010528564453125, 0.0005688667297363281, 0.01383209228515625, 0.0006780624389648438, 0.240234375, 0.379638671875, 0.039825439453125, 0.0002162456512451172, 0.84619140625, 0.167724609375, 0.11407470703125, 0.34228515625, 2.251953125, 0.94140625, 0.732421875, 2.05859375, 0.349609375, 0.97998046875, 0.26953125, 0.01421356201171875, 0.039276123046875, 0.0019741058349609375, 0.277099609375, 0.007801055908203125, 0.00037407875061035156, 0.001590728759765625, 0.0006499290466308594, 0.0008349418640136719, 0.0015077590942382812, 0.04266357421875, 0.0005822181701660156, 0.0004792213439941406, 0.0229644775390625, 0.79638671875, 0.53515625, 0.040191650390625, 0.156005859375, 0.00251007080078125, 0.1025390625, 0.0003688335418701172, 8.177757263183594e-05, 0.0296630859375, 0.6435546875, 0.008331298828125, 0.0002987384796142578, 0.09814453125, 0.2354736328125, 0.0245208740234375], "tokens": [284, 320, 446, 442, 901, 45, 334, 320, 719, 1022, 664, 319, 477, 601, 14071, 322, 2702, 1541, 438, 600, 13807, 4134, 32, 664, 569, 334, 907, 1905, 438, 12589, 3397, 26, 1212, 310, 27, 301, 284, 442, 310, 32, 10272, 346, 610, 6512, 32, 25620, 45, 334, 320, 719, 1022, 664]}
{"line_number": 1462, "line_type": "original", "code": "    return node.getType() == Token.THIS;", "entropy": 2.517578125, "is_bug_line": false, "sus_score": 0.2668802563418119, "per_token_entropy": [5.30859375, 2.333984375, 6.5, 0.10870361328125, 1.5126953125, 0.006526947021484375, 0.005588531494140625, 0.001461029052734375, 0.0004737377166748047, 11.734375, 0.17431640625], "tokens": [264, 442, 1541, 32, 10272, 346, 610, 6512, 32, 25339, 45]}
{"line_number": 1462, "line_type": "generated", "code": "\n  }\n\n  /**\n   * Is this a RETURN node?\n   */\n  static boolean isReturn(Node n) {\n    return n.getType() == Token.RETURN;\n  }\n\n  /**\n   * Is this a VAR node?\n   */\n  static boolean", "entropy": 0.1661376953125, "is_bug_line": false, "sus_score": 0.2668802563418119, "per_token_entropy": [0.779296875, 0.167724609375, 0.054473876953125, 0.1063232421875, 0.0271453857421875, 0.0005407333374023438, 0.69921875, 0.306396484375, 0.83251953125, 2.65234375, 0.11273193359375, 0.032806396484375, 0.02783203125, 0.025543212890625, 0.008544921875, 0.01377105712890625, 0.0005841255187988281, 0.00016224384307861328, 0.0002944469451904297, 0.01666259765625, 0.00037360191345214844, 0.335693359375, 0.00028133392333984375, 0.0009675025939941406, 0.10601806640625, 0.0149688720703125, 0.0185089111328125, 0.0028972625732421875, 0.00612640380859375, 7.95125961303711e-05, 0.00011038780212402344, 0.00015425682067871094, 3.933906555175781e-06, 2.574920654296875e-05, 0.0020732879638671875, 0.00972747802734375, 0.00017392635345458984, 0.04107666015625, 0.038787841796875, 0.01525115966796875, 0.00020170211791992188, 0.384765625, 0.037841796875, 0.363037109375, 1.2646484375, 0.060516357421875, 0.034393310546875, 0.01451873779296875, 0.01123809814453125, 0.004161834716796875, 0.00830078125, 0.00045561790466308594], "tokens": [334, 320, 719, 1022, 664, 319, 3611, 458, 312, 18546, 1541, 49, 664, 569, 334, 907, 1905, 438, 2891, 26, 1212, 310, 27, 301, 284, 442, 310, 32, 10272, 346, 610, 6512, 32, 10934, 45, 334, 320, 719, 1022, 664, 319, 3611, 458, 312, 10244, 1541, 49, 664, 569, 334, 907, 1905]}
{"line_number": 692, "line_type": "original", "code": "      return false;", "entropy": 2.02734375, "is_bug_line": false, "sus_score": 0.24343224778007383, "per_token_entropy": [7.00390625, 0.68310546875, 0.418701171875, 0.003520965576171875], "tokens": [647, 442, 901, 45]}
{"line_number": 692, "line_type": "generated", "code": "\n    }\n\n    Node callee = callNode.getFirstChild();\n    if (callee.getType()!= Token.NAME) {\n      return true;\n    }\n\n    String name = callee.getString();\n    if (name == null) {\n      return true", "entropy": 0.210205078125, "is_bug_line": false, "sus_score": 0.24343224778007383, "per_token_entropy": [0.0521240234375, 0.001720428466796875, 0.0706787109375, 0.43359375, 1.333984375, 4.470348358154297e-05, 0.295166015625, 0.07281494140625, 1.6689300537109375e-05, 0.0013780593872070312, 0.0181884765625, 0.00028014183044433594, 0.0096588134765625, 0.36083984375, 0.591796875, 0.07684326171875, 0.0625, 0.04736328125, 0.330322265625, 0.0005135536193847656, 0.708984375, 0.0005202293395996094, 1.71661376953125e-05, 0.037200927734375, 0.039306640625, 0.0027923583984375, 0.057830810546875, 0.55224609375, 0.0872802734375, 0.00010442733764648438, 0.037994384765625, 0.00025916099548339844, 0.152587890625, 0.58349609375, 1.1396484375, 0.005939483642578125, 0.0157470703125, 4.76837158203125e-06, 3.802776336669922e-05, 0.0221099853515625, 0.0031871795654296875, 0.478759765625, 0.35986328125, 0.06903076171875, 0.5556640625, 1.4951171875, 0.283203125, 0.10028076171875, 0.003360748291015625, 0.01274871826171875, 0.268798828125, 0.09393310546875], "tokens": [284, 320, 446, 4004, 2182, 13369, 280, 1476, 1212, 32, 25657, 2931, 473, 284, 415, 308, 29203, 32, 10272, 346, 863, 6512, 32, 2474, 27, 301, 397, 442, 861, 45, 284, 320, 446, 892, 636, 280, 2182, 13369, 32, 7069, 473, 284, 415, 308, 426, 610, 744, 27, 301, 397, 442, 861]}
{"line_number": 701, "line_type": "original", "code": "    return true;", "entropy": 2.818359375, "is_bug_line": false, "sus_score": 0.24077170617153842, "per_token_entropy": [5.66015625, 1.7294921875, 3.876953125, 0.0087127685546875], "tokens": [264, 442, 861, 45]}
{"line_number": 701, "line_type": "generated", "code": "\n        return false;\n      }\n\n      if (name.equals(\"Object\") && callNode.getChildCount() > 1) {\n        Node secondArg = callNode.getSecondChild();\n        if (secondArg.getType() == Token.STRING)", "entropy": 0.357177734375, "is_bug_line": false, "sus_score": 0.24077170617153842, "per_token_entropy": [0.8857421875, 1.1689453125, 0.0330810546875, 0.0013866424560546875, 0.10955810546875, 0.005481719970703125, 0.67431640625, 0.671875, 0.244873046875, 0.7861328125, 0.18310546875, 0.15576171875, 0.0097503662109375, 2.107421875, 0.60107421875, 0.4287109375, 0.78271484375, 0.02008056640625, 0.01062774658203125, 0.78076171875, 0.0028133392333984375, 0.0004591941833496094, 1.310546875, 0.0010824203491210938, 0.33154296875, 0.10491943359375, 0.00061798095703125, 0.059326171875, 0.5908203125, 2.201171875, 1.3681640625, 0.093505859375, 0.09027099609375, 1.2636184692382812e-05, 8.106231689453125e-05, 0.63330078125, 0.0003516674041748047, 0.0023326873779296875, 0.00745391845703125, 0.10430908203125, 0.336669921875, 0.04339599609375, 0.108642578125, 7.152557373046875e-07, 0.056732177734375, 0.77783203125, 0.0007181167602539062, 0.05755615234375, 0.0006756782531738281, 1.52587890625e-05, 0.2364501953125, 0.391845703125], "tokens": [291, 442, 901, 45, 397, 320, 1687, 415, 308, 426, 32, 3574, 440, 959, 657, 962, 1476, 1212, 32, 24213, 1534, 346, 848, 225, 35, 27, 301, 291, 4004, 3100, 1765, 280, 1476, 1212, 32, 371, 5064, 2931, 473, 291, 415, 308, 3090, 1765, 32, 10272, 346, 610, 6512, 32, 5203, 27]}
{"line_number": 681, "line_type": "original", "code": "    return constructorCallHasSideEffects(callNode, null);", "entropy": 1.3388671875, "is_bug_line": false, "sus_score": 0.23904572186687875, "per_token_entropy": [4.1171875, 3.044921875, 6.2734375, 0.038330078125, 0.002323150634765625, 0.00020873546600341797, 0.0016679763793945312, 0.0174560546875, 0.10882568359375, 0.0025691986083984375, 1.1953125, 2.55859375, 0.04949951171875], "tokens": [264, 442, 4374, 1853, 3993, 7427, 20126, 26, 1851, 1212, 30, 744, 293]}
{"line_number": 681, "line_type": "generated", "code": "\n   */\n  static boolean functionCallHasSideEffects(\n      Node callNode, AbstractCompiler compiler) {\n    if (callNode.isNoSideEffectsCall()) {\n      return false;\n    }\n\n    if (callNode.getType()!= Token.CALL", "entropy": 0.1339111328125, "is_bug_line": false, "sus_score": 0.23904572186687875, "per_token_entropy": [0.51708984375, 0.201904296875, 0.0124359130859375, 0.05084228515625, 0.00160980224609375, 0.0022487640380859375, 0.0002472400665283203, 0.0003833770751953125, 0.00019562244415283203, 0.0008463859558105469, 0.003177642822265625, 0.15283203125, 0.0009694099426269531, 0.0004589557647705078, 0.0007624626159667969, 0.0013380050659179688, 0.042388916015625, 0.0020904541015625, 0.00037097930908203125, 0.0034694671630859375, 0.00626373291015625, 0.212646484375, 0.9423828125, 0.16357421875, 0.10113525390625, 0.003170013427734375, 0.035858154296875, 0.71435546875, 0.10113525390625, 0.0002307891845703125, 0.00012242794036865234, 0.0002880096435546875, 0.05474853515625, 0.0008463859558105469, 0.0028438568115234375, 0.01523590087890625, 0.001560211181640625, 3.361701965332031e-05, 0.0037364959716796875, 3.5881996154785156e-05, 0.188232421875, 1.6474609375, 0.07855224609375, 0.2841796875, 5.5909156799316406e-05, 0.003276824951171875, 0.47412109375, 0.0009527206420898438, 0.9267578125, 0.0012760162353515625, 7.867813110351562e-06, 0.005405426025390625], "tokens": [664, 569, 334, 907, 1905, 667, 1853, 3993, 7427, 20126, 26, 397, 4004, 1476, 1212, 30, 7400, 8115, 8980, 27, 301, 284, 415, 308, 1851, 1212, 32, 297, 2023, 7427, 20126, 1853, 1157, 301, 397, 442, 901, 45, 284, 320, 446, 415, 308, 1851, 1212, 32, 10272, 346, 863, 6512, 32, 5038]}
{"line_number": 695, "line_type": "original", "code": "    Node nameNode = callNode.getFirstChild();", "entropy": 0.8486328125, "is_bug_line": false, "sus_score": 0.23408229439226114, "per_token_entropy": [4.87890625, 2.556640625, 1.412109375, 0.083251953125, 0.03204345703125, 0.31640625, 0.00508880615234375, 0.0028095245361328125, 0.0243377685546875, 0.0008625984191894531, 0.0256805419921875], "tokens": [264, 4004, 636, 1212, 280, 1476, 1212, 32, 25657, 2931, 473]}
{"line_number": 695, "line_type": "generated", "code": "\n    if (nameNode.getType() == Token.NAME) {\n      if (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(nameNode.getString())) {\n        return false;\n      }\n\n      if (nameNode.getString", "entropy": 0.147705078125, "is_bug_line": false, "sus_score": 0.23408229439226114, "per_token_entropy": [0.1888427734375, 0.82373046875, 0.08270263671875, 0.7265625, 0.08544921875, 0.03143310546875, 0.0755615234375, 0.0005888938903808594, 0.0253143310546875, 0.0003731250762939453, 1.8477439880371094e-05, 0.048553466796875, 0.7138671875, 0.0015583038330078125, 0.0389404296875, 1.2490234375, 0.053009033203125, 0.87841796875, 8.630752563476562e-05, 6.103515625e-05, 0.001983642578125, 7.343292236328125e-05, 0.0003781318664550781, 0.0007271766662597656, 4.410743713378906e-06, 0.0200958251953125, 5.4836273193359375e-06, 6.67572021484375e-06, 5.960464477539062e-07, 4.410743713378906e-06, 0.0022869110107421875, 0.0018310546875, 0.001007080078125, 0.10809326171875, 0.0164947509765625, 0.000732421875, 0.0019025802612304688, 0.1832275390625, 0.00213623046875, 0.005657196044921875, 0.1278076171875, 0.00916290283203125, 0.00025010108947753906, 0.0174102783203125, 5.4955482482910156e-05, 0.385986328125, 0.3662109375, 0.1341552734375, 1.15234375, 0.00970458984375, 0.0107421875, 0.0963134765625], "tokens": [284, 415, 308, 426, 1212, 32, 10272, 346, 610, 6512, 32, 2474, 27, 301, 397, 415, 308, 26301, 30201, 81, 9842, 69, 81, 26510, 81, 22771, 4153, 1139, 4509, 69, 32, 4752, 26, 426, 1212, 32, 7069, 5156, 301, 291, 442, 901, 45, 397, 320, 1687, 415, 308, 426, 1212, 32, 7069]}
{"line_number": 696, "line_type": "original", "code": "    if (nameNode.getType() == Token.NAME &&", "entropy": 0.79638671875, "is_bug_line": false, "sus_score": 0.23408229439226114, "per_token_entropy": [4.97265625, 0.55126953125, 0.137451171875, 0.6533203125, 0.003993988037109375, 0.08746337890625, 0.77978515625, 0.001338958740234375, 0.338623046875, 0.002819061279296875, 0.0002512931823730469, 1.048828125, 1.775390625], "tokens": [264, 415, 308, 426, 1212, 32, 10272, 346, 610, 6512, 32, 2474, 962]}
{"line_number": 696, "line_type": "generated", "code": "\n        if (nameNode.getType() == Token.NAME) {\n          String name = nameNode.getString();\n          if (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name)) {\n            return false;\n          }\n\n         ", "entropy": 0.1873779296875, "is_bug_line": false, "sus_score": 0.23408229439226114, "per_token_entropy": [0.44482421875, 0.880859375, 0.16455078125, 0.66455078125, 0.0038890838623046875, 0.06048583984375, 0.787109375, 0.0012102127075195312, 0.271728515625, 0.00266265869140625, 0.00017321109771728516, 1.076171875, 0.47607421875, 0.0014553070068359375, 0.1748046875, 0.685546875, 0.468994140625, 0.01111602783203125, 0.01342010498046875, 0.0002015829086303711, 0.0005526542663574219, 0.005359649658203125, 0.004314422607421875, 0.2587890625, 0.2607421875, 0.153564453125, 1.8662109375, 5.328655242919922e-05, 5.602836608886719e-05, 0.0029296875, 8.428096771240234e-05, 0.0006856918334960938, 0.001468658447265625, 1.3113021850585938e-06, 0.0213165283203125, 4.76837158203125e-06, 6.079673767089844e-06, 2.7418136596679688e-06, 5.125999450683594e-06, 0.0055999755859375, 0.0017461776733398438, 0.0008606910705566406, 0.015167236328125, 0.191650390625, 0.0025577545166015625, 0.006805419921875, 0.2080078125, 0.0149688720703125, 0.00022649765014648438, 0.026885986328125, 0.00011920928955078125, 0.5029296875], "tokens": [291, 415, 308, 426, 1212, 32, 10272, 346, 610, 6512, 32, 2474, 27, 301, 616, 892, 636, 280, 636, 1212, 32, 7069, 473, 616, 415, 308, 26301, 30201, 81, 9842, 69, 81, 26510, 81, 22771, 4153, 1139, 4509, 69, 32, 4752, 26, 426, 490, 301, 324, 442, 901, 45, 616, 320, 5678]}
{"line_number": 796, "line_type": "original", "code": "    Preconditions.checkState(n.getType() == Token.CALL);", "entropy": 1.05078125, "is_bug_line": false, "sus_score": 0.23333333333333334, "per_token_entropy": [2.60546875, 7.5078125, 0.0028324127197265625, 0.0906982421875, 0.58544921875, 0.12493896484375, 1.580078125, 0.1282958984375, 1.3369140625, 0.00658416748046875, 0.1318359375, 0.02874755859375, 0.0005512237548828125, 1.3271484375, 0.30615234375], "tokens": [264, 40596, 32, 1553, 1078, 26, 96, 32, 10272, 346, 610, 6512, 32, 5038, 293]}
{"line_number": 796, "line_type": "generated", "code": "\n   */\n  static boolean canBeSideEffected(Node n, Set<String> knownConstants) {\n    if (n.isName()) {\n      return!knownConstants.contains(n.getString());\n    }\n\n    switch (n.getType())", "entropy": 0.215576171875, "is_bug_line": false, "sus_score": 0.23333333333333334, "per_token_entropy": [0.493408203125, 0.5107421875, 0.00812530517578125, 0.062286376953125, 0.0022449493408203125, 0.0032482147216796875, 0.0005693435668945312, 0.001178741455078125, 4.124641418457031e-05, 9.5367431640625e-07, 0.0028781890869140625, 0.036651611328125, 0.000942230224609375, 0.0003609657287597656, 0.08099365234375, 0.0025482177734375, 0.0010023117065429688, 7.43865966796875e-05, 0.0045166015625, 0.024810791015625, 0.007610321044921875, 0.00650787353515625, 0.2364501953125, 1.03515625, 0.1419677734375, 1.0693359375, 0.29248046875, 0.8466796875, 1.75390625, 0.2205810546875, 0.00597381591796875, 0.060821533203125, 1.2080078125, 0.5546875, 0.13525390625, 0.00138092041015625, 0.00029587745666503906, 0.0009598731994628906, 0.0007977485656738281, 0.042205810546875, 0.0001010894775390625, 0.01058197021484375, 0.1123046875, 0.06536865234375, 0.00015676021575927734, 0.751953125, 1.0927734375, 0.3134765625, 0.00313568115234375, 1.3232231140136719e-05, 0.0023860931396484375, 0.0001404285430908203], "tokens": [664, 569, 334, 907, 1905, 883, 1467, 7427, 33502, 1558, 26, 1212, 310, 30, 1756, 46, 652, 48, 8967, 5229, 27, 301, 284, 415, 308, 96, 32, 297, 558, 1157, 301, 397, 442, 653, 3737, 5229, 32, 4752, 26, 96, 32, 7069, 1035, 284, 320, 446, 3578, 308, 96, 32, 10272, 1157]}
{"line_number": 797, "line_type": "original", "code": "    return (n.getSideEffectFlags() & Node.FLAG_LOCAL_RESULTS) > 0;", "entropy": 2.556640625, "is_bug_line": false, "sus_score": 0.23333333333333334, "per_token_entropy": [2.84765625, 8.6796875, 6.09765625, 1.3818359375, 0.07806396484375, 4.9609375, 5.375, 1.330078125, 0.25634765625, 0.0200347900390625, 0.492431640625, 1.087890625, 0.1448974609375, 7.80859375, 4.220008850097656e-05, 4.8125, 0.296142578125, 9.0859375, 0.1943359375, 3.623046875, 0.0338134765625, 0.0016756057739257812, 0.158203125], "tokens": [264, 442, 308, 96, 32, 371, 7427, 5559, 4629, 346, 549, 4004, 32, 4694, 81, 11144, 81, 23763, 27, 848, 225, 34, 45]}
{"line_number": 797, "line_type": "generated", "code": "  }\n\n  static boolean canBeSideEffected(Node n, Set<String> knownConstants) {\n    switch (n.getType()) {\n      case Token.NAME:\n        // A variable definition.\n        return!knownConstants.contains(n.", "entropy": 0.2449951171875, "is_bug_line": false, "sus_score": 0.23333333333333334, "per_token_entropy": [1.3017578125, 0.33154296875, 0.50048828125, 0.73681640625, 0.01324462890625, 0.0227203369140625, 0.0020599365234375, 0.01531219482421875, 0.00020444393157958984, 4.5299530029296875e-06, 0.00653076171875, 0.0301513671875, 0.0022830963134765625, 0.0036296844482421875, 0.10125732421875, 0.0025424957275390625, 0.00209808349609375, 0.00015497207641601562, 0.00434112548828125, 0.0257568359375, 0.005268096923828125, 0.01043701171875, 0.190185546875, 1.81640625, 0.274169921875, 0.00304412841796875, 0.00013124942779541016, 0.0016717910766601562, 0.0002493858337402344, 0.0191192626953125, 0.0867919921875, 0.04498291015625, 0.00669097900390625, 6.878376007080078e-05, 2.3828125, 0.0011043548583984375, 0.1485595703125, 1.37109375, 0.95361328125, 0.33203125, 0.1832275390625, 0.1533203125, 0.09698486328125, 0.31787109375, 0.990234375, 0.1484375, 0.0020122528076171875, 0.0003612041473388672, 0.0017099380493164062, 0.00145721435546875, 0.09320068359375, 0.0002493858337402344], "tokens": [225, 320, 719, 907, 1905, 883, 1467, 7427, 33502, 1558, 26, 1212, 310, 30, 1756, 46, 652, 48, 8967, 5229, 27, 301, 284, 3578, 308, 96, 32, 10272, 1157, 301, 397, 1135, 6512, 32, 2474, 44, 291, 434, 399, 2677, 5644, 32, 291, 442, 653, 3737, 5229, 32, 4752, 26, 96, 32]}
{"line_number": 686, "line_type": "original", "code": "    if (callNode.getType() != Token.NEW) {", "entropy": 1.1142578125, "is_bug_line": false, "sus_score": 0.2309401076758503, "per_token_entropy": [5.9375, 2.28515625, 0.25732421875, 0.29638671875, 0.0045623779296875, 0.0650634765625, 1.2666015625, 0.0013513565063476562, 0.336669921875, 0.0016727447509765625, 2.777576446533203e-05, 5.04296875, 0.081298828125, 0.0283203125], "tokens": [264, 415, 308, 1851, 1212, 32, 10272, 346, 863, 6512, 32, 11356, 27, 301]}
{"line_number": 686, "line_type": "generated", "code": "\n      throw new IllegalStateException(\n          \"Expected CALL node, got \" + Token.name(callNode.getType()));\n    }\n\n    if (callNode.isNoSideEffectsCall()) {\n      return false;\n    }\n\n    Node target = callNode.getFirst", "entropy": 0.1334228515625, "is_bug_line": false, "sus_score": 0.2309401076758503, "per_token_entropy": [0.3759765625, 0.283203125, 0.0006504058837890625, 0.00864410400390625, 0.13818359375, 0.02716064453125, 0.00574493408203125, 0.055328369140625, 0.73828125, 0.5302734375, 0.012847900390625, 0.0028533935546875, 0.011688232421875, 0.001468658447265625, 0.018646240234375, 6.0677528381347656e-05, 0.00151824951171875, 0.00013315677642822266, 0.00444793701171875, 4.470348358154297e-05, 0.00022518634796142578, 0.0002617835998535156, 0.0032501220703125, 0.072021484375, 0.0045928955078125, 0.07342529296875, 0.82275390625, 0.028106689453125, 0.0765380859375, 0.002033233642578125, 0.0023860931396484375, 0.0384521484375, 0.01177215576171875, 0.00019466876983642578, 7.843971252441406e-05, 0.0005240440368652344, 0.03375244140625, 0.0003902912139892578, 0.002086639404296875, 0.01409149169921875, 0.0014133453369140625, 3.9696693420410156e-05, 0.0068817138671875, 4.2557716369628906e-05, 0.0579833984375, 0.548828125, 2.453125, 0.171142578125, 0.2213134765625, 0.004467010498046875, 0.0174560546875, 0.050628662109375], "tokens": [397, 1422, 537, 21665, 26, 616, 313, 7700, 16084, 1541, 30, 5424, 313, 474, 6512, 32, 426, 26, 1851, 1212, 32, 10272, 5073, 284, 320, 446, 415, 308, 1851, 1212, 32, 297, 2023, 7427, 20126, 1853, 1157, 301, 397, 442, 901, 45, 284, 320, 446, 4004, 1760, 280, 1476, 1212, 32, 25657]}
{"line_number": 691, "line_type": "original", "code": "    if (callNode.isNoSideEffectsCall()) {", "entropy": 1.53515625, "is_bug_line": false, "sus_score": 0.2309401076758503, "per_token_entropy": [5.76171875, 2.04296875, 0.1087646484375, 1.150390625, 0.01898193359375, 0.01080322265625, 1.736328125, 8.125, 0.185546875, 0.289794921875, 0.314208984375, 0.2044677734375, 0.0114898681640625], "tokens": [264, 415, 308, 1851, 1212, 32, 297, 2023, 7427, 20126, 1853, 1157, 301]}
{"line_number": 691, "line_type": "generated", "code": "\n      return false;\n    }\n\n    Node callee = callNode.getFirstChild();\n    switch (callee.getType()) {\n      case Token.NAME:\n        if (callee.getString().equals(\"eval\") ||\n            callee.getString().equals(\"Function", "entropy": 0.2337646484375, "is_bug_line": false, "sus_score": 0.2309401076758503, "per_token_entropy": [0.51513671875, 0.17724609375, 0.2318115234375, 0.0006074905395507812, 0.01959228515625, 0.00791168212890625, 0.07855224609375, 0.724609375, 1.1337890625, 5.3882598876953125e-05, 0.267822265625, 0.12744140625, 0.000209808349609375, 0.0002789497375488281, 0.0164031982421875, 0.00017261505126953125, 0.0099029541015625, 0.32177734375, 2.283203125, 0.01715087890625, 0.01181793212890625, 0.00014507770538330078, 0.004215240478515625, 0.0001245737075805664, 0.0017442703247070312, 0.06915283203125, 0.05487060546875, 0.0019502639770507812, 5.888938903808594e-05, 0.50634765625, 0.001056671142578125, 0.1224365234375, 1.0966796875, 0.0675048828125, 0.367431640625, 0.0060577392578125, 0.0716552734375, 0.015411376953125, 0.07989501953125, 0.0161285400390625, 0.6396484375, 1.3486328125, 0.88916015625, 0.09625244140625, 0.077392578125, 2.3126602172851562e-05, 0.00015842914581298828, 0.0012044906616210938, 0.0019254684448242188, 0.024322509765625, 0.0195159912109375, 0.6279296875], "tokens": [397, 442, 901, 45, 284, 320, 446, 4004, 2182, 13369, 280, 1476, 1212, 32, 25657, 2931, 473, 284, 3578, 308, 29203, 32, 10272, 1157, 301, 397, 1135, 6512, 32, 2474, 44, 291, 415, 308, 29203, 32, 7069, 922, 3574, 440, 6569, 657, 1276, 324, 2182, 13369, 32, 7069, 922, 3574, 440, 2447]}
{"line_number": 2531, "line_type": "original", "code": "    return false;", "entropy": 2.115234375, "is_bug_line": false, "sus_score": 0.19245008972987526, "per_token_entropy": [8.046875, 0.386474609375, 0.02056884765625, 0.003780364990234375], "tokens": [264, 442, 901, 45]}
{"line_number": 2531, "line_type": "generated", "code": "\n\n  /**\n   * Returns true if the given node represents a call or new operator.\n   */\n  private static boolean isCallOrNew(Node n) {\n    return isCall(n) || isNew(n);\n  }\n\n  /**\n   * Returns", "entropy": 0.377197265625, "is_bug_line": false, "sus_score": 0.19245008972987526, "per_token_entropy": [0.406982421875, 0.463623046875, 0.054962158203125, 0.0004010200500488281, 1.583984375, 0.67919921875, 0.317626953125, 0.41552734375, 1.8935546875, 0.82373046875, 1.3349609375, 0.404541015625, 2.09375, 1.984375, 0.387939453125, 1.859375, 0.38916015625, 0.01495361328125, 0.193115234375, 0.0058441162109375, 0.6640625, 0.00803375244140625, 0.004428863525390625, 0.0006060600280761719, 0.002895355224609375, 0.0007634162902832031, 4.971027374267578e-05, 0.0010862350463867188, 0.0003902912139892578, 0.7490234375, 0.0012445449829101562, 0.0004055500030517578, 0.037261962890625, 0.435791015625, 0.71435546875, 1.0029296875, 0.14990234375, 0.0007534027099609375, 0.0048980712890625, 0.017852783203125, 0.05743408203125, 0.0011510848999023438, 0.02178955078125, 0.0005197525024414062, 0.032257080078125, 0.01461029052734375, 0.0006480216979980469, 0.09368896484375, 0.12420654296875, 0.0257720947265625, 9.655952453613281e-05, 0.126220703125], "tokens": [719, 1022, 664, 319, 3759, 861, 415, 322, 2702, 1541, 10666, 312, 1476, 556, 537, 4134, 32, 664, 569, 334, 945, 907, 1905, 438, 1853, 1527, 1812, 26, 1212, 310, 27, 301, 284, 442, 438, 1853, 26, 96, 27, 1276, 438, 1812, 26, 96, 293, 334, 320, 719, 1022, 664, 319, 3759]}
{"line_number": 2452, "line_type": "original", "code": "        return isImmutableValue(value) || locals.apply(value);", "entropy": 1.8330078125, "is_bug_line": false, "sus_score": 0.18257418583505539, "per_token_entropy": [5.0859375, 0.2340087890625, 8.5, 2.9921875, 0.03533935546875, 0.0103607177734375, 5.12109375, 0.95947265625, 1.810546875, 2.54296875, 0.01580810546875, 0.005481719970703125, 0.0030918121337890625, 0.0184783935546875, 0.172607421875], "tokens": [351, 442, 438, 15027, 882, 26, 853, 27, 1276, 28363, 32, 4699, 26, 853, 293]}
{"line_number": 2452, "line_type": "generated", "code": "\n    return sibling;\n  }\n\n  /**\n   * Given the first child, this returns the nth\n   * child or null if no such child exists.\n   * This is like \"getChildAtIndex\" but returns null for non-existent indexes.\n   */\n  private", "entropy": 0.1485595703125, "is_bug_line": false, "sus_score": 0.18257418583505539, "per_token_entropy": [0.49072265625, 0.0904541015625, 0.031494140625, 0.0132598876953125, 0.00870513916015625, 0.0014553070068359375, 0.1893310546875, 0.353515625, 0.060028076171875, 0.0006456375122070312, 1.9287109375, 0.9921875, 0.388427734375, 1.3134765625, 0.1612548828125, 0.0277557373046875, 0.0196075439453125, 0.016357421875, 0.0253753662109375, 0.05487060546875, 0.00011146068572998047, 0.0386962890625, 0.029510498046875, 0.004291534423828125, 0.0015716552734375, 0.01103973388671875, 0.0013856887817382812, 0.0207061767578125, 0.008270263671875, 0.00713348388671875, 0.01331329345703125, 0.7412109375, 0.22900390625, 0.04339599609375, 0.0606689453125, 0.0269622802734375, 0.11907958984375, 0.0105743408203125, 0.0115814208984375, 0.00572967529296875, 0.0144805908203125, 0.0022563934326171875, 0.0024051666259765625, 0.0026645660400390625, 0.00011777877807617188, 0.004962921142578125, 0.00896453857421875, 0.004734039306640625, 0.001495361328125, 0.021942138671875, 0.004535675048828125, 0.1068115234375], "tokens": [284, 442, 40560, 45, 334, 320, 719, 1022, 664, 319, 15273, 322, 1932, 2838, 30, 458, 3217, 322, 46245, 664, 319, 2838, 556, 744, 415, 1289, 3751, 2838, 5375, 32, 664, 319, 1348, 438, 2124, 313, 24213, 29948, 20, 1273, 3217, 744, 436, 2979, 31, 29801, 17215, 32, 664, 569, 334, 945]}
{"line_number": 2458, "line_type": "original", "code": "        return callHasLocalResult(value)", "entropy": 2.142578125, "is_bug_line": false, "sus_score": 0.16666666666666666, "per_token_entropy": [5.53125, 1.4228515625, 4.54296875, 2.611328125, 0.1734619140625, 0.02618408203125, 0.06744384765625, 2.970703125, 1.9423828125], "tokens": [351, 442, 1476, 3993, 3325, 1394, 26, 853, 27]}
{"line_number": 2458, "line_type": "generated", "code": "\n   * This is like \"getChildAtIndex\" but returns null for non-existent indexes.\n   */\n  private static Node getNthArgument(Node function, int index) {\n    Node argument = function.getSecondChild();\n    while (index!= ", "entropy": 0.2103271484375, "is_bug_line": false, "sus_score": 0.16666666666666666, "per_token_entropy": [0.50439453125, 1.22265625, 0.677734375, 0.0631103515625, 0.07086181640625, 0.0240631103515625, 0.6904296875, 0.00608062744140625, 0.0179901123046875, 0.00984954833984375, 0.06805419921875, 0.01342010498046875, 0.0079803466796875, 0.0061187744140625, 0.00043129920959472656, 0.0158843994140625, 0.0127410888671875, 0.01424407958984375, 0.054962158203125, 0.057525634765625, 0.0231781005859375, 0.251708984375, 0.01485443115234375, 0.0223388671875, 0.00905609130859375, 0.08111572265625, 0.0008454322814941406, 0.52001953125, 0.013275146484375, 0.048614501953125, 0.346923828125, 0.038238525390625, 0.0027446746826171875, 0.0345458984375, 0.0100860595703125, 0.00643157958984375, 0.100830078125, 1.1513671875, 2.306640625, 0.0809326171875, 0.35693359375, 0.06829833984375, 1.1748046875, 0.0140838623046875, 0.00015532970428466797, 0.1644287109375, 0.0772705078125, 0.193115234375, 0.00771331787109375, 0.1402587890625, 0.1376953125, 0.0006308555603027344], "tokens": [664, 319, 1348, 438, 2124, 313, 24213, 29948, 20, 1273, 3217, 744, 436, 2979, 31, 29801, 17215, 32, 664, 569, 334, 945, 907, 4004, 622, 64, 349, 3484, 26, 1212, 667, 30, 629, 1650, 27, 301, 284, 4004, 2793, 280, 667, 32, 371, 5064, 2931, 473, 284, 2218, 308, 1055, 863, 225]}
{"line_number": 2526, "line_type": "original", "code": "    Node getNode = call.getFirstChild();", "entropy": 1.19921875, "is_bug_line": false, "sus_score": 0.16666666666666666, "per_token_entropy": [5.6484375, 3.017578125, 1.4580078125, 0.0867919921875, 0.214111328125, 0.051849365234375, 0.08306884765625, 0.0005621910095214844, 0.2362060546875], "tokens": [264, 4004, 40524, 280, 1476, 32, 25657, 2931, 473]}
{"line_number": 2526, "line_type": "generated", "code": "\n  private static boolean isCallOrNew(Node call) {\n    return isCall(call) || isNew(call);\n  }\n\n  private static boolean isCall(Node call) {\n    return call.getType() == Token.CALL;\n  }", "entropy": 0.2110595703125, "is_bug_line": false, "sus_score": 0.16666666666666666, "per_token_entropy": [0.8359375, 0.77587890625, 0.0269622802734375, 0.084228515625, 0.513671875, 1.150390625, 0.0941162109375, 0.004383087158203125, 0.0789794921875, 0.003582000732421875, 0.7841796875, 0.28125, 0.00505828857421875, 0.37158203125, 0.46826171875, 0.70263671875, 0.677734375, 0.1446533203125, 0.01067352294921875, 0.0109100341796875, 0.037078857421875, 0.03851318359375, 0.0009183883666992188, 0.01557159423828125, 0.0017881393432617188, 0.023834228515625, 0.01045989990234375, 0.0022716522216796875, 0.313720703125, 0.4521484375, 0.0069122314453125, 0.029022216796875, 0.094970703125, 0.7822265625, 0.1473388671875, 0.0005855560302734375, 0.3046875, 0.043121337890625, 0.0034809112548828125, 0.24609375, 0.1656494140625, 0.79052734375, 0.31103515625, 0.054412841796875, 0.0011920928955078125, 0.001434326171875, 0.0090789794921875, 6.866455078125e-05, 0.0003821849822998047, 0.05615234375, 0.0068359375, 0.0011157989501953125], "tokens": [334, 945, 907, 1905, 438, 1853, 1527, 1812, 26, 1212, 1476, 27, 301, 284, 442, 438, 1853, 26, 1851, 27, 1276, 438, 1812, 26, 1851, 293, 334, 320, 719, 945, 907, 1905, 438, 1853, 26, 1212, 1476, 27, 301, 284, 442, 1476, 32, 10272, 346, 610, 6512, 32, 5038, 45, 334, 320]}
{"line_number": 2527, "line_type": "original", "code": "    if (isGet(getNode)) {", "entropy": 1.6630859375, "is_bug_line": false, "sus_score": 0.16666666666666666, "per_token_entropy": [6.07421875, 2.306640625, 0.318603515625, 1.37109375, 1.8564453125, 1.3115234375, 0.99951171875, 0.65625, 0.07794189453125], "tokens": [264, 415, 308, 297, 936, 26, 17699, 490, 301]}
{"line_number": 2527, "line_type": "generated", "code": "\n\n  /**\n   * Given the call, this returns the function.\n   */\n  static Node getFunctionForCall(Node call) {\n    Preconditions.checkState(isCall(call));\n    Node getNode = call.getFirstChild();\n    return getNode.getLast", "entropy": 0.41552734375, "is_bug_line": false, "sus_score": 0.16666666666666666, "per_token_entropy": [0.75341796875, 0.416015625, 0.05810546875, 0.00042629241943359375, 1.2724609375, 0.79833984375, 2.60546875, 0.853515625, 0.1607666015625, 0.147705078125, 0.54150390625, 1.5224609375, 2.9765625, 0.044586181640625, 0.322021484375, 0.01195526123046875, 0.433349609375, 0.004726409912109375, 0.00865936279296875, 0.02081298828125, 0.043670654296875, 0.003437042236328125, 0.53173828125, 0.0008401870727539062, 0.0240478515625, 0.039276123046875, 0.0006861686706542969, 0.029052734375, 0.25830078125, 4.410743713378906e-05, 0.00019633769989013672, 0.04583740234375, 0.0011968612670898438, 0.031463623046875, 0.0007886886596679688, 1.09765625, 0.00018322467803955078, 0.08563232421875, 0.05914306640625, 1.677734375, 1.982421875, 0.0018939971923828125, 0.0099029541015625, 0.00028824806213378906, 0.0157470703125, 8.20159912109375e-05, 0.0209808349609375, 0.3076171875, 0.96630859375, 0.04248046875, 0.0254364013671875, 1.3564453125], "tokens": [719, 1022, 664, 319, 15273, 322, 1476, 30, 458, 3217, 322, 667, 32, 664, 569, 334, 907, 4004, 622, 2447, 1562, 1853, 26, 1212, 1476, 27, 301, 284, 40596, 32, 1553, 1078, 26, 297, 1853, 26, 1851, 876, 284, 4004, 40524, 280, 1476, 32, 25657, 2931, 473, 284, 442, 40524, 32, 20197]}
