{"line_number": 676, "line_type": "original", "code": "                        if (field == DateUtils.SEMI_MONTH) {", "entropy": 0.90869140625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [4.984375, 2.111328125, 0.1751708984375, 2.6015625, 0.11767578125, 1.6767578125, 0.0027294158935546875, 0.001628875732421875, 0.658203125, 0.002197265625, 9.40561294555664e-05, 0.0030231475830078125, 0.36572265625, 0.0218658447265625], "tokens": [6797, 415, 308, 1495, 610, 2821, 2755, 32, 807, 5891, 81, 22846, 27, 301]}
{"line_number": 676, "line_type": "generated", "code": "\n                    }\n                    break;\n                default:\n                    //All other fields are handled here\n                    offset = val.get(fields[i][0]);\n                    roundUp = offset >= 5;\n                    offsetSet = true;\n                    break;\n            }\n            if (", "entropy": 0.293212890625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.2880859375, 0.0176239013671875, 0.1417236328125, 0.0091552734375, 0.0033245086669921875, 0.830078125, 1.111328125, 0.012725830078125, 0.097900390625, 1.626953125, 1.5537109375, 0.018646240234375, 0.16259765625, 2.046875, 0.295166015625, 1.736328125, 0.08905029296875, 0.515625, 0.00904083251953125, 0.021331787109375, 0.0002338886260986328, 2.7418136596679688e-05, 0.0099029541015625, 0.02978515625, 1.71661376953125e-05, 0.00030922889709472656, 0.00041365623474121094, 0.00022971630096435547, 0.047271728515625, 0.04742431640625, 1.5595703125, 0.00032019615173339844, 0.00267791748046875, 0.1270751953125, 0.197021484375, 0.0697021484375, 0.52197265625, 0.7099609375, 0.05108642578125, 0.035064697265625, 0.00032639503479003906, 0.0004734992980957031, 0.01038360595703125, 0.002597808837890625, 0.398193359375, 0.018341064453125, 0.00322723388671875, 0.11883544921875, 0.0006842613220214844, 0.40478515625, 0.2127685546875, 0.084228515625], "tokens": [528, 320, 528, 1626, 45, 400, 1244, 44, 528, 434, 1934, 1604, 3829, 884, 13744, 2442, 528, 3401, 280, 909, 32, 371, 26, 4151, 77, 91, 1674, 34, 1989, 528, 7818, 1386, 280, 3401, 2377, 225, 39, 45, 528, 3401, 885, 280, 861, 45, 528, 1626, 45, 324, 320, 324, 415, 308]}
{"line_number": 689, "line_type": "original", "code": "                            val.add(fields[i][0], 1);", "entropy": 1.6943359375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [10.65625, 1.484375, 0.00331878662109375, 0.13671875, 0.005096435546875, 0.0123443603515625, 0.00064849853515625, 0.00045228004455566406, 0.00043773651123046875, 0.0016317367553710938, 0.0137176513671875, 6.65234375, 3.123046875, 1.6259765625], "tokens": [9316, 909, 32, 669, 26, 4151, 77, 91, 1674, 34, 614, 225, 35, 293]}
{"line_number": 689, "line_type": "generated", "code": "\n            }\n        }\n    }\n\n    /**\n     * <p>Sets the given calendar to the first day of the next month,\n     *  or the first day of <code>Calendar.DECEMBER</code> if the current\n     *  month", "entropy": 0.42138671875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.5498046875, 0.0030879974365234375, 0.10174560546875, 0.0022449493408203125, 0.25048828125, 0.01043701171875, 0.72900390625, 0.437744140625, 0.18310546875, 0.0008716583251953125, 0.96337890625, 0.062744140625, 0.0211334228515625, 1.7529296875, 0.6923828125, 1.205078125, 0.37353515625, 0.31396484375, 0.8603515625, 0.1795654296875, 1.6787109375, 0.369873046875, 0.09368896484375, 0.445556640625, 0.41162109375, 1.0888671875, 0.16162109375, 5.3048133850097656e-05, 1.0791015625, 1.791015625, 0.556640625, 0.61328125, 0.0046844482421875, 0.00571441650390625, 1.6484375, 0.273681640625, 0.00010919570922851562, 1.271484375, 0.004886627197265625, 0.1705322265625, 8.594989776611328e-05, 0.0002906322479248047, 0.0058135986328125, 0.00022339820861816406, 0.00904083251953125, 0.1536865234375, 0.044219970703125, 0.07989501953125, 0.408203125, 5.543231964111328e-05, 0.0159149169921875, 0.8251953125], "tokens": [324, 320, 291, 320, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 10527, 322, 2702, 14461, 372, 322, 1932, 5808, 432, 322, 2354, 6811, 30, 275, 319, 225, 556, 322, 1932, 5808, 432, 333, 687, 48, 9389, 32, 852, 1955, 6773, 377, 687, 48, 415, 322, 1550, 275, 319, 225, 6811]}
{"line_number": 437, "line_type": "original", "code": "        if (date == null) {", "entropy": 0.806640625, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [3.513671875, 1.802734375, 0.09283447265625, 0.8994140625, 0.06378173828125, 0.0010061264038085938, 0.002513885498046875, 0.07672119140625], "tokens": [351, 415, 308, 770, 610, 744, 27, 301]}
{"line_number": 437, "line_type": "generated", "code": "\n     * <p>For example, if you had the datetime of 28 Mar 2002\n     * 13:45:01.231, if this was passed with HOUR, it would return\n     *", "entropy": 0.054840087890625, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [1.353515625, 0.026092529296875, 0.83154296875, 0.06317138671875, 0.00800323486328125, 0.235595703125, 0.2437744140625, 0.00012695789337158203, 0.0008444786071777344, 0.0029354095458984375, 0.0011005401611328125, 0.00021958351135253906, 0.01824951171875, 0.0005006790161132812, 0.0033092498779296875, 0.031494140625, 0.0015993118286132812, 0.0013751983642578125, 0.00010383129119873047, 0.00014257431030273438, 0.0002796649932861328, 5.984306335449219e-05, 0.0013637542724609375, 0.0024890899658203125, 0.00014770030975341797, 0.0002319812774658203, 0.0005693435668945312, 0.00048804283142089844, 2.086162567138672e-05, 0.0004973411560058594, 0.00017964839935302734, 8.678436279296875e-05, 0.00010693073272705078, 7.593631744384766e-05, 0.00103759765625, 0.0003459453582763672, 2.0623207092285156e-05, 2.9087066650390625e-05, 0.003238677978515625, 0.0026836395263671875, 0.0005054473876953125, 0.0005526542663574219, 0.0008602142333984375, 6.496906280517578e-05, 0.006992340087890625, 5.507469177246094e-05, 0.001178741455078125, 0.0002340078353881836, 2.8371810913085938e-05, 0.0014314651489257812, 0.0012493133544921875, 4.4465065002441406e-05], "tokens": [275, 319, 333, 98, 48, 1562, 2280, 30, 415, 844, 5054, 322, 7138, 432, 225, 36, 42, 8359, 225, 36, 34, 34, 36, 275, 319, 225, 35, 37, 44, 38, 39, 44, 34, 35, 32, 36, 37, 35, 30, 415, 458, 1597, 5403, 623, 11551, 1263, 30, 561, 2268, 442, 275, 319]}
{"line_number": 440, "line_type": "original", "code": "        Calendar gval = Calendar.getInstance();", "entropy": 2.3515625, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [3.54296875, 14.9453125, 2.36328125, 0.040130615234375, 0.0141143798828125, 0.224365234375, 0.0024356842041015625, 0.0021419525146484375, 0.0210723876953125], "tokens": [351, 16600, 485, 695, 280, 16600, 32, 7426, 473]}
{"line_number": 440, "line_type": "generated", "code": "\n     * would return 1 April 2002 0:00:00.000.</p>\n     * \n     * <p>For a date in a timezone that handles the change to daylight\n     * saving time,", "entropy": 0.0132293701171875, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [0.38037109375, 0.0059967041015625, 0.006015777587890625, 0.0009002685546875, 0.005645751953125, 0.0221099853515625, 0.045257568359375, 0.00048089027404785156, 0.0014820098876953125, 9.930133819580078e-05, 0.0001424551010131836, 0.0020847320556640625, 0.00070953369140625, 0.001129150390625, 0.00733184814453125, 9.059906005859375e-06, 3.8504600524902344e-05, 9.97781753540039e-05, 8.356571197509766e-05, 6.520748138427734e-05, 0.00014328956604003906, 2.7060508728027344e-05, 1.1682510375976562e-05, 6.461143493652344e-05, 0.0306396484375, 0.0006656646728515625, 0.0011911392211914062, 0.0295867919921875, 0.0004711151123046875, 0.03424072265625, 3.039836883544922e-05, 0.082275390625, 0.0007276535034179688, 0.0001996755599975586, 0.0214996337890625, 0.0003333091735839844, 0.0002658367156982422, 0.0001920461654663086, 0.00011777877807617188, 0.00010144710540771484, 0.0002884864807128906, 0.0002872943878173828, 0.00010013580322265625, 0.00037097930908203125, 8.45193862915039e-05, 0.0006041526794433594, 4.076957702636719e-05, 0.0028228759765625, 2.1696090698242188e-05, 0.00014793872833251953, 2.396106719970703e-05, 0.0003521442413330078], "tokens": [275, 319, 2268, 442, 225, 35, 30468, 225, 36, 34, 34, 36, 225, 34, 44, 34, 34, 44, 34, 34, 32, 34, 34, 34, 1730, 98, 48, 275, 319, 5384, 319, 333, 98, 48, 1562, 312, 2340, 328, 312, 22158, 688, 13650, 322, 1539, 372, 5808, 2429, 275, 319, 17093, 1133, 30]}
{"line_number": 441, "line_type": "original", "code": "        gval.setTime(date);", "entropy": 1.2158203125, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [3.162109375, 4.890625, 0.07684326171875, 0.1119384765625, 1.4384765625, 0.015289306640625, 0.026092529296875, 0.00713348388671875], "tokens": [351, 485, 695, 32, 34500, 26, 770, 293]}
{"line_number": 441, "line_type": "generated", "code": "\n     * \n     * <p>For a date in a timezone that handles the change to daylight\n     * saving time, rounding to Calendar.HOUR_OF_DAY will behave as follows.\n     * Suppose daylight saving time begins at 02", "entropy": 0.042449951171875, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [0.61669921875, 0.006298065185546875, 0.947265625, 0.00012373924255371094, 0.497314453125, 0.00528717041015625, 0.001132965087890625, 0.06329345703125, 0.0016031265258789062, 0.0005612373352050781, 0.0003917217254638672, 0.00017726421356201172, 0.0001653432846069336, 0.0007004737854003906, 0.0005645751953125, 0.00018095970153808594, 0.0006761550903320312, 0.00012636184692382812, 0.0006818771362304688, 3.3736228942871094e-05, 0.0024929046630859375, 1.2516975402832031e-05, 9.500980377197266e-05, 2.7418136596679688e-05, 0.0009670257568359375, 0.0003695487976074219, 0.0004718303680419922, 0.04425048828125, 0.0002570152282714844, 0.00024306774139404297, 0.0024547576904296875, 1.4781951904296875e-05, 9.059906005859375e-06, 1.2159347534179688e-05, 0.00238037109375, 0.005161285400390625, 0.0001207590103149414, 0.0005297660827636719, 0.0005397796630859375, 0.0003800392150878906, 2.6464462280273438e-05, 0.00023567676544189453, 7.867813110351562e-05, 6.592273712158203e-05, 4.5299530029296875e-06, 2.6941299438476562e-05, 1.823902130126953e-05, 0.00213623046875, 5.53131103515625e-05, 0.0001519918441772461, 0.00018703937530517578, 0.0006122589111328125], "tokens": [275, 319, 5384, 319, 333, 98, 48, 1562, 312, 2340, 328, 312, 22158, 688, 13650, 322, 1539, 372, 5808, 2429, 275, 319, 17093, 1133, 30, 35396, 372, 16600, 32, 30540, 81, 2109, 81, 14318, 1098, 35197, 619, 11588, 32, 275, 319, 14644, 3605, 5808, 2429, 17093, 1133, 30694, 821, 225, 34, 36]}
{"line_number": 442, "line_type": "original", "code": "        modify(gval, field, true);", "entropy": 1.1875, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [3.9140625, 4.68359375, 0.025909423828125, 2.849609375, 0.005702972412109375, 0.005615234375, 0.301025390625, 0.00821685791015625, 0.0745849609375, 0.0035877227783203125], "tokens": [351, 5351, 26, 89, 695, 30, 1600, 30, 861, 293]}
{"line_number": 442, "line_type": "generated", "code": "\n     * @param date  the date to work with\n     * @param field  the field from <code>Calendar</code>\n     *  or <code>SEMI_MONTH</code>\n     * @return the rounded date (a different object", "entropy": 0.0633544921875, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [0.60107421875, 0.0273895263671875, 0.7880859375, 0.022003173828125, 0.181640625, 0.0103302001953125, 0.000652313232421875, 0.01258087158203125, 0.0032958984375, 0.0100250244140625, 0.00278472900390625, 0.08111572265625, 7.319450378417969e-05, 0.0008511543273925781, 0.0258941650390625, 0.0194091796875, 0.0160064697265625, 0.006134033203125, 0.00746917724609375, 0.0292205810546875, 0.04327392578125, 0.0005965232849121094, 5.316734313964844e-05, 0.01538848876953125, 0.0004987716674804688, 3.5762786865234375e-06, 0.0047454833984375, 0.0211334228515625, 0.00038123130798339844, 0.062255859375, 0.0018644332885742188, 0.011322021484375, 8.83340835571289e-05, 0.0006880760192871094, 0.00940704345703125, 2.5033950805664062e-06, 0.00012743473052978516, 8.821487426757812e-06, 0.00017511844635009766, 5.2094459533691406e-05, 0.006763458251953125, 0.007450103759765625, 0.0008101463317871094, 0.0017852783203125, 0.57275390625, 0.0111083984375, 0.0233612060546875, 0.0068359375, 0.63134765625, 0.00601959228515625, 0.006587982177734375, 0.000804901123046875], "tokens": [275, 319, 477, 753, 2340, 225, 322, 2340, 372, 1389, 623, 275, 319, 477, 753, 1600, 225, 322, 1600, 645, 333, 687, 48, 9389, 377, 687, 48, 275, 319, 225, 556, 333, 687, 48, 807, 5891, 81, 22846, 377, 687, 48, 275, 319, 477, 601, 322, 13116, 2340, 308, 83, 3449, 1300]}
{"line_number": 443, "line_type": "original", "code": "        return gval.getTime();", "entropy": 2.68359375, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [5.875, 7.83203125, 3.796875, 0.08172607421875, 1.125, 0.030731201171875, 0.033782958984375], "tokens": [351, 442, 485, 695, 32, 11957, 473]}
{"line_number": 443, "line_type": "generated", "code": "\n     * saving time, rounding to Calendar.HOUR_OF_DAY will behave as follows.\n     * Suppose daylight saving time begins at 02:00 on March 30. Rounding a \n     * date that crosses this time", "entropy": 0.025238037109375, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [0.6875, 0.042205810546875, 0.467529296875, 0.0006413459777832031, 0.0010271072387695312, 0.0005927085876464844, 0.0012073516845703125, 0.036224365234375, 0.0005311965942382812, 0.00186920166015625, 0.00506591796875, 3.5762786865234375e-05, 0.0002970695495605469, 0.00012099742889404297, 0.00351715087890625, 0.00652313232421875, 0.0012121200561523438, 0.0023193359375, 0.0019273757934570312, 0.016204833984375, 0.0007119178771972656, 0.0014963150024414062, 0.0003294944763183594, 0.0005955696105957031, 0.00011849403381347656, 0.0012521743774414062, 0.00015819072723388672, 0.004001617431640625, 0.0002465248107910156, 0.0007309913635253906, 0.00044536590576171875, 0.0011959075927734375, 0.00013685226440429688, 4.661083221435547e-05, 0.0001659393310546875, 0.0008072853088378906, 0.00148773193359375, 0.00033855438232421875, 0.00046825408935546875, 0.00017964839935302734, 0.001277923583984375, 0.00457763671875, 6.079673767089844e-05, 0.002017974853515625, 0.0093994140625, 8.64267349243164e-05, 0.0033168792724609375, 0.00021195411682128906, 0.00011098384857177734, 1.6689300537109375e-06, 9.226799011230469e-05, 8.916854858398438e-05], "tokens": [275, 319, 17093, 1133, 30, 35396, 372, 16600, 32, 30540, 81, 2109, 81, 14318, 1098, 35197, 619, 11588, 32, 275, 319, 14644, 3605, 5808, 2429, 17093, 1133, 30694, 821, 225, 34, 36, 44, 34, 34, 544, 29195, 225, 37, 34, 32, 23015, 299, 312, 5384, 319, 2340, 688, 46281, 1464, 458, 1133]}
{"line_number": 621, "line_type": "original", "code": "        if (val.get(Calendar.YEAR) > 280000000) {", "entropy": 0.60791015625, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [6.20703125, 1.53125, 0.08209228515625, 3.119140625, 0.0173797607421875, 0.1412353515625, 0.1163330078125, 0.11553955078125, 0.051055908203125, 2.76171875, 0.00222015380859375, 0.03790283203125, 0.0518798828125, 0.11529541015625, 0.006343841552734375, 0.0004649162292480469, 9.965896606445312e-05, 7.510185241699219e-06, 4.4345855712890625e-05, 0.00045418739318847656, 0.01030731201171875, 0.175537109375, 0.0177764892578125, 0.025634765625], "tokens": [351, 415, 308, 695, 32, 371, 26, 9389, 32, 23164, 27, 848, 225, 36, 42, 34, 34, 34, 34, 34, 34, 34, 27, 301]}
{"line_number": 621, "line_type": "generated", "code": "\n            throw new ArithmeticException(\"Calendar value too large for accurate calculations\");\n        }\n\n        if (field == Calendar.MILLISECOND) {\n            return;\n        }\n\n        // ----------------- Fix for LANG-59 ---------------------- START ---------------\n        // see http://issues", "entropy": 0.11859130859375, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [1.31640625, 0.61279296875, 0.0005240440368652344, 0.469970703125, 3.814697265625e-06, 0.00212860107421875, 0.01824951171875, 0.0003914833068847656, 0.00017261505126953125, 1.2159347534179688e-05, 0.00014090538024902344, 0.0016050338745117188, 0.00019741058349609375, 0.0014104843139648438, 0.11041259765625, 0.02252197265625, 1.3876953125, 0.69775390625, 0.0440673828125, 0.1353759765625, 0.01386260986328125, 0.077392578125, 0.0015268325805664062, 0.1851806640625, 6.67572021484375e-06, 0.02508544921875, 0.0012531280517578125, 0.01212310791015625, 0.04949951171875, 0.00247955322265625, 0.0046234130859375, 0.0004608631134033203, 0.1702880859375, 0.3837890625, 0.369873046875, 0.0119476318359375, 0.0005168914794921875, 0.0001628398895263672, 0.00023233890533447266, 0.00011408329010009766, 0.006290435791015625, 0.00222015380859375, 0.002674102783203125, 0.0084991455078125, 8.118152618408203e-05, 0.01001739501953125, 0.00223541259765625, 0.0015382766723632812, 0.003276824951171875, 0.00012433528900146484, 2.0742416381835938e-05, 0.00019252300262451172], "tokens": [324, 1422, 537, 47721, 984, 440, 9389, 786, 5133, 7622, 436, 26572, 29287, 724, 291, 320, 584, 415, 308, 1495, 610, 16600, 32, 32206, 23790, 27, 301, 324, 442, 45, 291, 320, 584, 434, 8583, 31, 7087, 436, 36297, 31, 39, 43, 8583, 6753, 15154, 46757, 291, 434, 2318, 1913, 555, 4476]}
{"line_number": 625, "line_type": "original", "code": "        if (field == Calendar.MILLISECOND) {", "entropy": 1.248046875, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [5.4609375, 3.240234375, 0.1053466796875, 2.1015625, 0.206787109375, 0.69677734375, 0.02520751953125, 1.564453125, 0.0001939535140991211, 0.283447265625, 0.039886474609375], "tokens": [351, 415, 308, 1495, 610, 16600, 32, 32206, 23790, 27, 301]}
{"line_number": 625, "line_type": "generated", "code": "\n                    break;\n                }\n            }\n        }\n        for (int i = 0; i < fields.length; i++) {\n            for (int j = 0; j < fields[i].length; j++) {\n                if (fields[", "entropy": 0.174560546875, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [0.6083984375, 0.82373046875, 0.0277252197265625, 0.07647705078125, 0.0135650634765625, 0.38916015625, 0.01511383056640625, 0.53369140625, 0.0498046875, 1.462890625, 2.087890625, 0.03125, 0.0145263671875, 0.06939697265625, 0.006450653076171875, 0.1351318359375, 0.00829315185546875, 0.0115814208984375, 0.0047607421875, 0.01512908935546875, 1.3935546875, 0.02252197265625, 8.165836334228516e-05, 0.02923583984375, 0.0011539459228515625, 0.0009832382202148438, 0.006519317626953125, 0.05401611328125, 0.49560546875, 0.0081024169921875, 0.0002932548522949219, 0.0018320083618164062, 0.0006422996520996094, 0.0054931640625, 0.0021533966064453125, 0.0011377334594726562, 0.0003228187561035156, 0.0011501312255859375, 0.00948333740234375, 0.000507354736328125, 0.00025582313537597656, 0.00029587745666503906, 5.4836273193359375e-06, 0.0130462646484375, 0.0010089874267578125, 0.0016231536865234375, 0.0016412734985351562, 0.0531005859375, 0.1876220703125, 0.06097412109375, 0.334716796875, 0.0017862319946289062], "tokens": [528, 1626, 45, 400, 320, 324, 320, 291, 320, 291, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 3829, 32, 1322, 45, 595, 1987, 301, 324, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 3829, 77, 91, 997, 1322, 45, 594, 1987, 301, 400, 415, 308, 4151, 77]}
{"line_number": 635, "line_type": "original", "code": "        Date date = val.getTime();", "entropy": 2.26953125, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [6.38671875, 7.08203125, 4.1640625, 0.1856689453125, 0.3310546875, 0.002696990966796875, 0.0009560585021972656, 0.0043182373046875], "tokens": [351, 2821, 2340, 280, 909, 32, 11957, 473]}
{"line_number": 635, "line_type": "generated", "code": "\n                            }\n                        } else {\n                            val.add(fields[i][0], 1);\n                        }\n                    }\n                    break;\n                }\n            }\n        }\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * <p>Rounds a date, leaving the", "entropy": 0.162353515625, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [0.2032470703125, 0.0090179443359375, 0.10986328125, 0.00518798828125, 0.0341796875, 0.0609130859375, 0.0570068359375, 0.66552734375, 2.181529998779297e-05, 0.0028285980224609375, 0.00015234947204589844, 0.328125, 0.006832122802734375, 0.00019025802612304688, 0.0011444091796875, 0.016815185546875, 0.0009279251098632812, 0.296142578125, 0.0005731582641601562, 0.00103759765625, 0.1973876953125, 0.004638671875, 0.0738525390625, 0.009521484375, 0.32080078125, 1.4404296875, 0.00022339820861816406, 0.037139892578125, 0.004405975341796875, 0.2958984375, 0.0027256011962890625, 0.290283203125, 0.0017795562744140625, 0.119384765625, 0.0017404556274414062, 0.6181640625, 0.4296875, 0.05584716796875, 0.0144500732421875, 0.053131103515625, 0.00582122802734375, 6.687641143798828e-05, 0.10711669921875, 0.00016605854034423828, 0.0012950897216796875, 1.0166015625, 0.0042266845703125, 0.99755859375, 0.0226287841796875, 0.460205078125, 0.060028076171875, 0.0013322830200195312], "tokens": [1014, 320, 715, 320, 813, 301, 1014, 909, 32, 669, 26, 4151, 77, 91, 1674, 34, 614, 225, 35, 293, 715, 320, 528, 320, 528, 1626, 45, 400, 320, 324, 320, 291, 320, 284, 320, 446, 434, 42510, 284, 1022, 275, 319, 333, 98, 48, 10238, 101, 312, 2340, 30, 26514, 322]}
{"line_number": 636, "line_type": "original", "code": "        long time = date.getTime();", "entropy": 3.177734375, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [7.484375, 8.375, 4.671875, 0.037200927734375, 4.70703125, 0.005519866943359375, 0.00016999244689941406, 0.1331787109375], "tokens": [351, 1946, 1133, 280, 2340, 32, 11957, 473]}
{"line_number": 636, "line_type": "generated", "code": "\n                        } else {\n                            // For all other cases, add one to the field and\n                            //  subtract one second, thus throwing away the\n                            //  milliseconds.\n                            val.add(fields[i][0], 1);\n                            val.add(", "entropy": 0.33984375, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [0.4892578125, 0.00933837890625, 0.028533935546875, 0.2119140625, 0.056732177734375, 1.158203125, 3.060546875, 0.455810546875, 0.058349609375, 1.08203125, 0.0185699462890625, 1.88671875, 0.058319091796875, 0.2900390625, 0.1070556640625, 0.3798828125, 0.83056640625, 0.31884765625, 0.0008549690246582031, 1.4736328125, 0.1962890625, 0.383544921875, 0.2464599609375, 0.445556640625, 1.318359375, 1.1796875, 0.1668701171875, 0.3447265625, 0.01229095458984375, 0.001209259033203125, 0.0064697265625, 0.53369140625, 0.2200927734375, 0.058013916015625, 0.14404296875, 1.4901161193847656e-05, 0.0182342529296875, 2.384185791015625e-05, 0.1949462890625, 0.0014295578002929688, 0.00014102458953857422, 0.0004820823669433594, 0.050384521484375, 0.0005116462707519531, 0.00841522216796875, 1.7881393432617188e-06, 0.0003421306610107422, 0.130615234375, 0.03253173828125, 0.00011813640594482422, 0.0001621246337890625, 0.00119781494140625], "tokens": [715, 320, 813, 301, 1014, 434, 2616, 1169, 1604, 6792, 30, 1015, 1591, 372, 322, 1600, 461, 1014, 434, 225, 27799, 1591, 3100, 30, 14966, 34177, 12008, 322, 1014, 434, 225, 18574, 32, 1014, 909, 32, 669, 26, 4151, 77, 91, 1674, 34, 614, 225, 35, 293, 1014, 909, 32, 669, 26]}
{"line_number": 637, "line_type": "original", "code": "        boolean done = false;", "entropy": 3.431640625, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [7.36328125, 10.375, 2.6796875, 0.027862548828125, 0.08050537109375, 0.061859130859375], "tokens": [351, 1905, 3390, 280, 901, 45]}
{"line_number": 637, "line_type": "generated", "code": "\n                        }\n                    }\n                    return;\n                }\n            }\n            //We add the field and test again\n            roundUp = val.get(fields[i][0]) == val.getActualMaximum(fields[i][0]);\n            val.add(", "entropy": 0.332275390625, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [0.2303466796875, 0.01024627685546875, 0.0712890625, 0.00899505615234375, 0.2109375, 0.3974609375, 0.00043654441833496094, 0.0179443359375, 0.0009255409240722656, 0.2274169921875, 0.0026092529296875, 0.47314453125, 0.64892578125, 1.798828125, 1.357421875, 1.8955078125, 1.3125, 1.666015625, 0.263427734375, 0.92724609375, 0.1263427734375, 1.255859375, 0.00020694732666015625, 0.01462554931640625, 0.7294921875, 0.0005583763122558594, 0.255615234375, 0.001834869384765625, 0.004108428955078125, 0.0007314682006835938, 8.90493392944336e-05, 0.0005335807800292969, 0.00879669189453125, 0.00487518310546875, 1.57421875, 0.58154296875, 4.5418739318847656e-05, 0.00022351741790771484, 0.01898193359375, 0.266357421875, 2.1457672119140625e-05, 0.001079559326171875, 2.0503997802734375e-05, 7.295608520507812e-05, 0.00010073184967041016, 0.000278472900390625, 0.00818634033203125, 0.2030029296875, 0.66552734375, 7.033348083496094e-06, 0.037841796875, 0.0001437664031982422], "tokens": [715, 320, 528, 320, 528, 442, 45, 400, 320, 324, 320, 324, 434, 3122, 1015, 322, 1600, 461, 894, 4056, 324, 7818, 1386, 280, 909, 32, 371, 26, 4151, 77, 91, 1674, 34, 1130, 610, 909, 32, 371, 11045, 12726, 26, 4151, 77, 91, 1674, 34, 1989, 324, 909, 32, 669, 26]}
{"line_number": 640, "line_type": "original", "code": "        int millisecs = val.get(Calendar.MILLISECOND);", "entropy": 1.447265625, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [7.2890625, 6.75390625, 5.859375, 0.057373046875, 0.1435546875, 0.08404541015625, 0.00199127197265625, 0.01800537109375, 0.018646240234375, 0.025665283203125, 0.006473541259765625, 0.0010786056518554688, 3.2901763916015625e-05, 0.01390838623046875], "tokens": [351, 629, 37003, 22447, 280, 909, 32, 371, 26, 9389, 32, 32206, 23790, 293]}
{"line_number": 640, "line_type": "generated", "code": "\n                        }\n                    }\n                    return;\n                }\n            }\n            //If we're here, it means that we haven't found\n            // the field in this run... let's check whether\n            //  we need to round up this field\n            int offset = ", "entropy": 0.437744140625, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [0.1868896484375, 0.0057525634765625, 0.0625, 0.01087188720703125, 0.2467041015625, 0.369873046875, 0.0003254413604736328, 0.018585205078125, 0.00012886524200439453, 0.09136962890625, 0.00027632713317871094, 0.5166015625, 0.59716796875, 1.14453125, 0.04345703125, 0.78662109375, 0.313232421875, 0.0770263671875, 0.0149078369140625, 0.2127685546875, 0.166259765625, 0.19970703125, 0.67138671875, 5.841255187988281e-06, 0.10626220703125, 0.481689453125, 0.00052642822265625, 1.28515625, 0.40478515625, 0.666015625, 0.62158203125, 1.3095703125, 1.333984375, 2.015625, 0.00021564960479736328, 0.76171875, 1.208984375, 0.2081298828125, 0.001995086669921875, 0.453125, 0.90966796875, 0.9375, 0.00035572052001953125, 0.00412750244140625, 0.201904296875, 0.81982421875, 0.031219482421875, 0.264892578125, 0.69775390625, 0.8935546875, 0.1424560546875, 1.263671875], "tokens": [715, 320, 528, 320, 528, 442, 45, 400, 320, 324, 320, 324, 434, 2797, 996, 4484, 2442, 30, 561, 6058, 688, 996, 14562, 1330, 2431, 324, 434, 322, 1600, 328, 458, 1420, 1179, 1207, 1182, 1505, 4946, 324, 434, 225, 996, 1849, 372, 7818, 973, 458, 1600, 324, 629, 3401, 280, 225]}
{"line_number": 641, "line_type": "original", "code": "        if (!round || millisecs < 500) {", "entropy": 1.947265625, "is_bug_line": true, "sus_score": 0.4082482904638631, "per_token_entropy": [6.91015625, 3.287109375, 3.666015625, 1.6318359375, 3.97265625, 5.8828125, 0.0157318115234375, 1.7978515625, 0.01678466796875, 0.02239990234375, 0.0006036758422851562, 0.002002716064453125, 0.03253173828125, 0.0245819091796875], "tokens": [351, 415, 1429, 1497, 1276, 37003, 22447, 333, 225, 39, 34, 34, 27, 301]}
{"line_number": 641, "line_type": "generated", "code": "\n                    }\n                    return;\n                }\n            }\n            //If we're here, it means that we haven't found\n            //  any fields that match, so we'll add to the next\n            //  one\n            roundUp = roundUp || val.get", "entropy": 0.368408203125, "is_bug_line": true, "sus_score": 0.4082482904638631, "per_token_entropy": [0.484619140625, 0.058807373046875, 0.58984375, 0.457763671875, 0.0005521774291992188, 0.0281829833984375, 0.00037741661071777344, 0.096923828125, 0.0009708404541015625, 0.60009765625, 0.458740234375, 1.2490234375, 0.033416748046875, 0.87548828125, 0.2440185546875, 0.06658935546875, 0.0165252685546875, 0.2069091796875, 0.178955078125, 0.1895751953125, 0.72119140625, 7.3909759521484375e-06, 0.104248046875, 0.5185546875, 0.0004546642303466797, 0.77294921875, 1.2548828125, 0.317138671875, 1.5224609375, 0.046905517578125, 0.347900390625, 0.053375244140625, 0.360107421875, 0.89794921875, 0.473388671875, 1.05078125, 0.462158203125, 0.45947265625, 0.16064453125, 0.0006737709045410156, 0.005138397216796875, 1.279296875, 0.40673828125, 0.591796875, 0.00018966197967529297, 0.01025390625, 0.90185546875, 0.12646484375, 0.05157470703125, 0.395751953125, 3.802776336669922e-05, 0.0184783935546875], "tokens": [528, 320, 528, 442, 45, 400, 320, 324, 320, 324, 434, 2797, 996, 4484, 2442, 30, 561, 6058, 688, 996, 14562, 1330, 2431, 324, 434, 225, 1346, 3829, 688, 2530, 30, 1259, 996, 4621, 1015, 372, 322, 2354, 324, 434, 225, 1591, 324, 7818, 1386, 280, 7818, 1386, 1276, 909, 32, 371]}
{"line_number": 649, "line_type": "original", "code": "        int seconds = val.get(Calendar.SECOND);", "entropy": 1.5029296875, "is_bug_line": true, "sus_score": 0.4082482904638631, "per_token_entropy": [4.79296875, 2.908203125, 10.1875, 0.09820556640625, 0.025299072265625, 0.001026153564453125, 9.78708267211914e-05, 0.000701904296875, 0.0021457672119140625, 0.0166015625, 6.937980651855469e-05, 0.0006132125854492188], "tokens": [351, 629, 6791, 280, 909, 32, 371, 26, 9389, 32, 23790, 293]}
{"line_number": 649, "line_type": "generated", "code": "\n            if (field == DateUtils.SEMI_MONTH) {\n                //For the semitmonths, we don't want to go past the end of the month\n                //  so we subtract the number of days that the next month has in order\n               ", "entropy": 0.319091796875, "is_bug_line": true, "sus_score": 0.4082482904638631, "per_token_entropy": [0.198974609375, 0.32666015625, 0.11016845703125, 0.281982421875, 0.002460479736328125, 0.496337890625, 0.00016236305236816406, 0.0008711814880371094, 0.0280609130859375, 7.271766662597656e-06, 5.9604644775390625e-06, 4.482269287109375e-05, 0.11383056640625, 0.00067901611328125, 0.0231781005859375, 0.5078125, 0.28125, 0.16064453125, 1.4501953125, 0.64208984375, 1.9794921875, 0.11627197265625, 0.0406494140625, 1.134765625, 1.0371208190917969e-05, 0.1123046875, 0.0005125999450683594, 1.0244140625, 0.1864013671875, 0.016876220703125, 0.158203125, 0.10894775390625, 0.004486083984375, 0.01068115234375, 0.042999267578125, 0.4091796875, 0.45263671875, 0.2783203125, 0.201171875, 0.3037109375, 0.6396484375, 0.2340087890625, 0.0033416748046875, 0.00215911865234375, 0.716796875, 0.8359375, 1.423828125, 0.446044921875, 0.244873046875, 0.5849609375, 0.0872802734375, 0.1597900390625], "tokens": [324, 415, 308, 1495, 610, 2821, 2755, 32, 807, 5891, 81, 22846, 27, 301, 400, 434, 1562, 322, 408, 911, 28407, 30, 996, 2800, 1330, 2637, 372, 1983, 11169, 322, 943, 432, 322, 6811, 400, 434, 225, 1259, 996, 27799, 322, 1451, 432, 6935, 688, 322, 2354, 6811, 1401, 328, 2532, 400]}
{"line_number": 650, "line_type": "original", "code": "        if (!done && (!round || seconds < 30)) {", "entropy": 1.39453125, "is_bug_line": true, "sus_score": 0.4082482904638631, "per_token_entropy": [5.1328125, 3.1875, 1.96484375, 4.265625, 0.368408203125, 1.716796875, 0.036895751953125, 0.022613525390625, 4.015625, 0.164306640625, 0.0011444091796875, 9.655952453613281e-06, 2.0742416381835938e-05, 0.0127105712890625, 0.02545166015625], "tokens": [351, 415, 1429, 5087, 962, 1429, 1497, 1276, 6791, 333, 225, 37, 34, 490, 301]}
{"line_number": 650, "line_type": "generated", "code": "\n                case DateUtils.SEMI_MONTH:\n                    //For the semitmonths, we don't want to go past the end of the month\n                    //  so we subtract the number of days that the month has in order to\n                    //  get the", "entropy": 0.33544921875, "is_bug_line": true, "sus_score": 0.4082482904638631, "per_token_entropy": [0.75927734375, 0.1842041015625, 0.9716796875, 0.0007719993591308594, 0.0005354881286621094, 0.181884765625, 1.7523765563964844e-05, 7.033348083496094e-06, 8.392333984375e-05, 0.004268646240234375, 0.08343505859375, 0.2430419921875, 0.12060546875, 0.1873779296875, 1.5751953125, 0.7763671875, 1.8720703125, 0.1356201171875, 0.04150390625, 0.8251953125, 1.0371208190917969e-05, 0.08416748046875, 0.0007023811340332031, 1.390625, 0.2076416015625, 0.007534027099609375, 0.10479736328125, 0.0830078125, 0.00493621826171875, 0.00787353515625, 0.031829833984375, 0.340087890625, 0.53759765625, 0.363037109375, 0.2183837890625, 0.20947265625, 0.90087890625, 0.445556640625, 0.002796173095703125, 0.0017366409301757812, 0.439697265625, 0.6630859375, 1.568359375, 0.01486968994140625, 0.83349609375, 0.300048828125, 0.0286407470703125, 0.130615234375, 0.0029354095458984375, 0.0009670257568359375, 0.0228424072265625, 0.52685546875], "tokens": [400, 1135, 2821, 2755, 32, 807, 5891, 81, 22846, 44, 528, 434, 1562, 322, 408, 911, 28407, 30, 996, 2800, 1330, 2637, 372, 1983, 11169, 322, 943, 432, 322, 6811, 528, 434, 225, 1259, 996, 27799, 322, 1451, 432, 6935, 688, 322, 6811, 1401, 328, 2532, 372, 528, 434, 225, 622, 322]}
{"line_number": 658, "line_type": "original", "code": "        int minutes = val.get(Calendar.MINUTE);", "entropy": 1.6953125, "is_bug_line": true, "sus_score": 0.4082482904638631, "per_token_entropy": [6.7734375, 5.3984375, 6.39453125, 1.6953125, 0.0271148681640625, 0.0014629364013671875, 0.00028228759765625, 0.001415252685546875, 0.003482818603515625, 0.0004436969757080078, 0.0079498291015625, 0.0355224609375], "tokens": [351, 629, 10135, 280, 909, 32, 371, 26, 9389, 32, 47229, 293]}
{"line_number": 658, "line_type": "generated", "code": "\n                        if (offset >= 15) {\n                            offset -= 15;\n                        } else {\n                            //Otherwise, we're in the upper half of the month and\n                            //  should subtract a month.\n                            offset = 15 - offset", "entropy": 0.2069091796875, "is_bug_line": true, "sus_score": 0.4082482904638631, "per_token_entropy": [0.1346435546875, 0.462646484375, 0.039947509765625, 0.0689697265625, 0.66943359375, 0.0033245086669921875, 0.0002014636993408203, 0.0006847381591796875, 0.0007753372192382812, 0.0067596435546875, 0.05712890625, 0.14013671875, 0.154052734375, 0.0004398822784423828, 5.710124969482422e-05, 7.510185241699219e-05, 0.00010645389556884766, 0.08172607421875, 0.04547119140625, 0.298095703125, 0.02490234375, 0.07403564453125, 0.286376953125, 0.6005859375, 0.0013399124145507812, 0.0116119384765625, 0.043548583984375, 0.533203125, 0.0109405517578125, 0.0010690689086914062, 0.8125, 0.0005502700805664062, 0.27685546875, 0.004123687744140625, 0.00580596923828125, 0.447265625, 0.1732177734375, 0.0007348060607910156, 0.00559234619140625, 0.56201171875, 1.494140625, 0.10809326171875, 0.2320556640625, 1.5888671875, 0.1632080078125, 0.1639404296875, 0.71630859375, 0.2393798828125, 0.00763702392578125, 0.001056671142578125, 0.004528045654296875, 0.00012159347534179688], "tokens": [715, 415, 308, 2881, 2377, 225, 35, 39, 27, 301, 1014, 3401, 5912, 225, 35, 39, 45, 715, 320, 813, 301, 1014, 434, 8381, 3767, 30, 996, 4484, 328, 322, 8342, 11214, 432, 322, 6811, 461, 1014, 434, 225, 1395, 27799, 312, 6811, 32, 1014, 3401, 280, 225, 35, 39, 429, 3401]}
{"line_number": 659, "line_type": "original", "code": "        if (!done && (!round || minutes < 30)) {", "entropy": 1.767578125, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [8.1328125, 3.615234375, 2.5859375, 4.5625, 0.7470703125, 0.6982421875, 0.0196990966796875, 0.017669677734375, 5.96484375, 0.1051025390625, 0.002071380615234375, 0.0020618438720703125, 0.00029468536376953125, 0.03692626953125, 0.03143310546875], "tokens": [351, 415, 1429, 5087, 962, 1429, 1497, 1276, 10135, 333, 225, 37, 34, 490, 301]}
{"line_number": 659, "line_type": "generated", "code": "\n                        } else {\n                            //Otherwise, we subtract 15 days and add a month.\n                            offset = 15 - offset;\n                            val.add(Calendar.DATE, -15);\n                            val.add(Calendar.MONTH, ", "entropy": 0.1947021484375, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [1.6357421875, 0.0225372314453125, 0.305419921875, 0.036346435546875, 0.29833984375, 0.110595703125, 0.5625, 0.0014791488647460938, 0.02178955078125, 0.0377197265625, 1.263671875, 0.515625, 7.367134094238281e-05, 0.08343505859375, 0.08575439453125, 0.10711669921875, 0.1815185546875, 0.673828125, 0.08404541015625, 1.5595703125, 0.1131591796875, 0.349365234375, 0.258056640625, 1.1123046875, 0.0002263784408569336, 0.0003986358642578125, 0.0158843994140625, 0.00012481212615966797, 0.21484375, 0.10986328125, 0.1732177734375, 2.968311309814453e-05, 0.0005445480346679688, 1.3709068298339844e-05, 0.01488494873046875, 0.00016510486602783203, 0.01418304443359375, 1.9788742065429688e-05, 0.051177978515625, 0.058502197265625, 6.330013275146484e-05, 0.00015461444854736328, 0.037689208984375, 0.0081329345703125, 0.00016415119171142578, 0.0008144378662109375, 3.7550926208496094e-05, 0.00215911865234375, 3.1113624572753906e-05, 0.00015914440155029297, 1.2159347534179688e-05, 0.002254486083984375], "tokens": [715, 320, 813, 301, 1014, 434, 8381, 3767, 30, 996, 27799, 225, 35, 39, 6935, 461, 1015, 312, 6811, 32, 1014, 3401, 280, 225, 35, 39, 429, 3401, 45, 1014, 909, 32, 669, 26, 9389, 32, 5241, 30, 429, 35, 39, 293, 1014, 909, 32, 669, 26, 9389, 32, 22846, 30, 225]}
{"line_number": 660, "line_type": "original", "code": "            time = time - (minutes * 60000L);", "entropy": 1.357421875, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [7.28515625, 9.5390625, 0.265380859375, 0.46630859375, 0.705078125, 0.381591796875, 2.228515625, 0.0226898193359375, 0.1551513671875, 0.01006317138671875, 7.259845733642578e-05, 0.269287109375, 4.184246063232422e-05, 0.00021839141845703125, 0.057647705078125, 0.336669921875], "tokens": [1468, 1133, 280, 1133, 429, 308, 18461, 319, 225, 40, 34, 34, 34, 34, 62, 293]}
{"line_number": 660, "line_type": "generated", "code": "\n                        } else {\n                            //Otherwise, we're in the upper half of the month and\n                            //  should round up.\n                            roundUp = true;\n                            offset = 15 - offset;", "entropy": 0.2059326171875, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [0.18359375, 0.080810546875, 0.337158203125, 0.018524169921875, 0.36181640625, 0.0701904296875, 0.41748046875, 0.0014200210571289062, 0.01450347900390625, 0.049560546875, 0.406982421875, 0.0152587890625, 0.0015001296997070312, 0.71435546875, 0.0006127357482910156, 0.184814453125, 0.004486083984375, 0.00894927978515625, 0.492431640625, 0.189697265625, 0.0029621124267578125, 0.00667572021484375, 0.4345703125, 1.1005859375, 0.299560546875, 0.55712890625, 0.5224609375, 0.1531982421875, 0.0006432533264160156, 0.00013935565948486328, 0.00106048583984375, 0.0006041526794433594, 0.68896484375, 0.27490234375, 0.744140625, 0.0016450881958007812, 0.00015306472778320312, 0.09454345703125, 0.005580902099609375, 8.45193862915039e-05, 0.0012979507446289062], "tokens": [715, 320, 813, 301, 1014, 434, 8381, 3767, 30, 996, 4484, 328, 322, 8342, 11214, 432, 322, 6811, 461, 1014, 434, 225, 1395, 7818, 973, 32, 1014, 7818, 1386, 280, 861, 45, 1014, 3401, 280, 225, 35, 39, 429, 3401, 45]}
{"line_number": 664, "line_type": "original", "code": "        if (date.getTime() != time) {", "entropy": 1.8994140625, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [5.7734375, 2.498046875, 0.38134765625, 5.828125, 0.276123046875, 1.3271484375, 0.0643310546875, 3.0859375, 1.5078125, 0.0997314453125, 0.046142578125], "tokens": [351, 415, 308, 770, 32, 11957, 346, 863, 1133, 27, 301]}
{"line_number": 664, "line_type": "generated", "code": "\n                    }\n                    break;\n                case DateUtils.WEEK_OF_MONTH:\n                    //If we're going to drop the DAY_OF_MONTH field's value,\n                    //  we want to do this our own way\n                    offset = val.get(", "entropy": 0.157958984375, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [0.351318359375, 0.01322174072265625, 0.265625, 0.025787353515625, 0.001949310302734375, 0.53271484375, 0.126220703125, 0.397705078125, 3.6716461181640625e-05, 0.0002818107604980469, 0.1900634765625, 0.00020551681518554688, 0.09991455078125, 8.225440979003906e-06, 0.681640625, 5.5789947509765625e-05, 0.079833984375, 1.0205078125, 0.91748046875, 1.033203125, 0.025604248046875, 0.6689453125, 0.00046825408935546875, 0.0082550048828125, 0.037567138671875, 0.376953125, 0.0011854171752929688, 6.723403930664062e-05, 6.854534149169922e-05, 0.0712890625, 0.058349609375, 0.00560760498046875, 0.0009212493896484375, 0.0136260986328125, 0.047332763671875, 0.0010671615600585938, 0.05120849609375, 0.01445770263671875, 0.002170562744140625, 0.00015091896057128906, 0.00684356689453125, 0.004459381103515625, 0.00368499755859375, 0.00034689903259277344, 5.6862831115722656e-05, 0.52880859375, 0.2890625, 0.00251007080078125, 0.21630859375, 0.00015795230865478516, 1.0371208190917969e-05, 0.037139892578125], "tokens": [528, 320, 528, 1626, 45, 400, 1135, 2821, 2755, 32, 39636, 81, 2109, 81, 22846, 44, 528, 434, 2797, 996, 4484, 6783, 372, 6278, 322, 37959, 81, 2109, 81, 22846, 1600, 1182, 786, 30, 528, 434, 225, 996, 2637, 372, 745, 458, 2992, 4369, 3352, 528, 3401, 280, 909, 32, 371, 26]}
{"line_number": 665, "line_type": "original", "code": "            date.setTime(time);", "entropy": 2.109375, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [4.7265625, 7.8203125, 1.0224609375, 0.1075439453125, 0.00807952880859375, 0.269287109375, 0.81005859375], "tokens": [1468, 2340, 32, 34500, 26, 1003, 293]}
{"line_number": 665, "line_type": "generated", "code": "\n                    break;\n            }\n            if (!offsetSet) {\n                //Get the offset from the last field\n                offset = val.get(fields[i][0]);\n                //Round up if the last field is greater than 10\n                roundUp =", "entropy": 0.32177734375, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [0.8212890625, 0.1446533203125, 0.0016336441040039062, 1.095703125, 0.007282257080078125, 0.58203125, 0.4619140625, 0.09051513671875, 0.0003998279571533203, 2.9802322387695312e-06, 0.003631591796875, 0.0036830902099609375, 0.0352783203125, 0.74462890625, 1.244140625, 0.035552978515625, 0.422607421875, 0.6708984375, 0.10980224609375, 1.8056640625, 0.4345703125, 0.53466796875, 0.040069580078125, 0.020172119140625, 0.0038433074951171875, 7.033348083496094e-06, 1.537799835205078e-05, 0.00238800048828125, 0.0006203651428222656, 9.775161743164062e-06, 6.520748138427734e-05, 8.559226989746094e-05, 0.022247314453125, 0.28125, 0.383056640625, 0.42529296875, 1.96484375, 0.57275390625, 0.52392578125, 0.44775390625, 0.50537109375, 0.08758544921875, 0.41650390625, 0.2783203125, 0.003692626953125, 0.40625, 0.09130859375, 0.6455078125, 0.21240234375, 0.14306640625, 5.7816505432128906e-05, 0.00617218017578125], "tokens": [528, 1626, 45, 324, 320, 324, 415, 1429, 2881, 885, 27, 301, 400, 434, 936, 322, 3401, 645, 322, 2401, 1600, 400, 3401, 280, 909, 32, 371, 26, 4151, 77, 91, 1674, 34, 1989, 400, 434, 10238, 973, 415, 322, 2401, 1600, 438, 10761, 2784, 225, 35, 34, 400, 7818, 1386, 280]}
