{"line_number": 167, "line_type": "original", "code": "        return getInstance(pattern, null, null);", "entropy": 1.986328125, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [3.84375, 5.46484375, 5.52734375, 0.260986328125, 0.441650390625, 0.00982666015625, 3.89453125, 0.01348114013671875, 0.377197265625, 0.0196075439453125], "tokens": [351, 442, 31637, 26, 5607, 30, 744, 30, 744, 293]}
{"line_number": 167, "line_type": "generated", "code": "\n            cInstanceCache.put(format, format);\n        }\n        return format;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * <p>Formats a millisecond value into a date/time string.</p>\n     * \n     * @param millis  the", "entropy": 0.1883544921875, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [0.5634765625, 0.51318359375, 0.0029754638671875, 0.000438690185546875, 0.002590179443359375, 0.0036907196044921875, 0.0090484619140625, 0.50244140625, 0.034149169921875, 0.150146484375, 0.00274658203125, 0.061187744140625, 0.00048065185546875, 0.1334228515625, 0.08111572265625, 0.07220458984375, 0.01558685302734375, 0.0904541015625, 0.0015459060668945312, 0.277099609375, 0.5546875, 0.026214599609375, 0.0229034423828125, 0.03216552734375, 0.01238250732421875, 3.7789344787597656e-05, 0.298828125, 5.626678466796875e-05, 0.00153350830078125, 2.8984375, 0.017486572265625, 0.9375, 0.0007767677307128906, 0.130126953125, 1.0078125, 0.302490234375, 0.0677490234375, 0.006626129150390625, 9.179115295410156e-06, 0.00513458251953125, 0.2078857421875, 1.4543533325195312e-05, 0.0006427764892578125, 0.0029773712158203125, 0.0002872943878173828, 0.09149169921875, 2.1219253540039062e-05, 0.13134765625, 0.00362396240234375, 0.03704833984375, 0.0233612060546875, 0.46044921875], "tokens": [324, 281, 1810, 2597, 32, 524, 26, 1643, 30, 2179, 293, 291, 320, 291, 442, 2179, 45, 284, 320, 446, 434, 42510, 284, 1022, 275, 319, 333, 98, 48, 19298, 312, 37003, 3090, 786, 1991, 312, 2340, 33, 1003, 802, 1730, 98, 48, 275, 319, 5384, 319, 477, 753, 42302, 225, 322]}
{"line_number": 980, "line_type": "original", "code": "        if (obj instanceof FastDateFormat == false) {", "entropy": 2.12109375, "is_bug_line": false, "sus_score": 0.2886751345948129, "per_token_entropy": [1.95703125, 5.00390625, 0.293212890625, 3.75, 0.63232421875, 2.828125, 0.01180267333984375, 8.796875, 0.0007476806640625, 0.021209716796875, 0.039642333984375], "tokens": [351, 415, 308, 2067, 5113, 15938, 15645, 610, 901, 27, 301]}
{"line_number": 980, "line_type": "generated", "code": "\n         * <p>Applies the rule to the specified date to produce a\n         * corresponding value.</p>\n         * \n         * @param date  the date to apply the rule to\n         * @return the value for the rule\n         */\n        public int", "entropy": 0.409912109375, "is_bug_line": false, "sus_score": 0.2886751345948129, "per_token_entropy": [1.5712890625, 0.54541015625, 0.208984375, 0.00018870830535888672, 0.00289154052734375, 1.2392578125, 0.001354217529296875, 0.20166015625, 0.0294189453125, 0.102783203125, 0.0982666015625, 0.8037109375, 0.68359375, 2.333984375, 0.7109375, 0.426025390625, 1.5634765625, 0.00016748905181884766, 3.6484375, 0.497314453125, 0.11395263671875, 0.0001609325408935547, 0.0012083053588867188, 0.11767578125, 0.003108978271484375, 0.1708984375, 0.00020301342010498047, 0.039642333984375, 0.006610870361328125, 0.1427001953125, 0.06640625, 0.0157470703125, 0.062042236328125, 0.1572265625, 0.129638671875, 0.05865478515625, 0.0121917724609375, 0.0196990966796875, 0.0165557861328125, 0.006145477294921875, 0.00067138671875, 0.1884765625, 0.031951904296875, 0.33056640625, 1.9736328125, 0.07464599609375, 0.75244140625, 0.093994140625, 0.0445556640625, 0.055206298828125, 1.1337890625, 0.82763671875], "tokens": [276, 319, 333, 98, 48, 1290, 6827, 322, 5750, 372, 322, 3191, 2340, 372, 13882, 312, 276, 319, 8435, 786, 1730, 98, 48, 276, 319, 13105, 319, 477, 753, 2340, 225, 322, 2340, 372, 4871, 322, 5750, 372, 276, 319, 477, 601, 322, 786, 436, 322, 5750, 276, 569, 291, 562, 629]}
{"line_number": 983, "line_type": "original", "code": "        FastDateFormat other = (FastDateFormat) obj;", "entropy": 1.8134765625, "is_bug_line": false, "sus_score": 0.2886751345948129, "per_token_entropy": [1.328125, 8.546875, 0.01451873779296875, 7.30859375, 2.287109375, 0.055084228515625, 0.00150299072265625, 0.00021219253540039062, 0.00142669677734375, 0.268310546875, 0.13525390625], "tokens": [351, 15938, 15645, 1604, 280, 308, 12200, 15645, 27, 2830, 45]}
{"line_number": 983, "line_type": "generated", "code": "\n         */\n        int estimateLength();\n\n        /**\n         * Formats the date.\n         * \n         * @param buf  the buffer\n         * @param calendar  the calendar", "entropy": 0.406982421875, "is_bug_line": false, "sus_score": 0.2886751345948129, "per_token_entropy": [1.17578125, 0.0609130859375, 0.0233306884765625, 0.46533203125, 0.0076141357421875, 0.0241241455078125, 0.0096435546875, 0.5771484375, 0.0204925537109375, 0.011810302734375, 0.0005321502685546875, 1.6513671875, 0.0008449554443359375, 0.646484375, 1.482421875, 2.18359375, 0.07440185546875, 0.0089263916015625, 0.07659912109375, 7.927417755126953e-05, 0.000881195068359375, 0.026947021484375, 1.1025390625, 0.08154296875, 0.094482421875, 1.439453125, 0.98291015625, 0.05584716796875, 0.00033545494079589844, 0.017852783203125, 1.423828125, 0.0338134765625, 0.015594482421875, 0.061187744140625], "tokens": [276, 569, 291, 629, 20772, 2380, 473, 584, 1022, 276, 319, 3720, 1966, 322, 2340, 32, 276, 319, 13105, 319, 477, 753, 4845, 225, 322, 3112, 276, 319, 477, 753, 14461, 225, 322, 14461]}
{"line_number": 984, "line_type": "original", "code": "        if (", "entropy": 4.09375, "is_bug_line": false, "sus_score": 0.2886751345948129, "per_token_entropy": [3.021484375, 9.1640625, 0.0966796875], "tokens": [351, 415, 308]}
{"line_number": 984, "line_type": "generated", "code": "\n        public int estimateLength();\n\n        /**\n         * Applies the rule to the specified date and appends the text to the buffer.\n         * \n         * @param date  the date to apply the rule to\n         * @param buffer  the buffer to append to", "entropy": 0.251953125, "is_bug_line": false, "sus_score": 0.2886751345948129, "per_token_entropy": [0.380615234375, 0.63037109375, 0.2200927734375, 0.01299285888671875, 0.0280303955078125, 0.0238189697265625, 0.6259765625, 0.0126953125, 0.00772857666015625, 0.0005626678466796875, 1.470703125, 0.0721435546875, 0.034515380859375, 0.11175537109375, 0.09173583984375, 0.904296875, 1.001953125, 0.796875, 0.141845703125, 0.0063018798828125, 0.0921630859375, 1.3662109375, 0.830078125, 0.2432861328125, 1.109375, 0.0174407958984375, 0.014434814453125, 0.0089111328125, 0.087158203125, 9.679794311523438e-05, 0.0008172988891601562, 0.00547027587890625, 0.73681640625, 0.07989501953125, 0.017913818359375, 0.0640869140625, 0.1256103515625, 0.256103515625, 0.2012939453125, 0.039703369140625, 0.0194854736328125, 0.040069580078125, 0.006687164306640625, 0.0001672506332397461, 0.005504608154296875, 0.434326171875, 0.0268402099609375, 0.048187255859375, 0.3916015625, 0.0621337890625, 0.0164947509765625, 0.1763916015625], "tokens": [291, 562, 629, 20772, 2380, 473, 584, 1022, 276, 319, 48912, 322, 5750, 372, 322, 3191, 2340, 461, 1123, 1494, 322, 1344, 372, 322, 3112, 32, 276, 319, 13105, 319, 477, 753, 2340, 225, 322, 2340, 372, 4871, 322, 5750, 372, 276, 319, 477, 753, 3112, 225, 322, 3112, 372, 5489, 372]}
{"line_number": 991, "line_type": "original", "code": "            return true;", "entropy": 2.84375, "is_bug_line": false, "sus_score": 0.2886751345948129, "per_token_entropy": [4.79296875, 2.515625, 3.916015625, 0.1492919921875], "tokens": [1468, 442, 861, 45]}
{"line_number": 991, "line_type": "generated", "code": "\n        */\n        void appendTo(StringBuffer buffer, Calendar calendar);\n    }\n\n    /**\n     * <p>Inner class defining a rule that outputs a constant\n     * unchanging string.</p>\n     */\n    private static class StringRule implements Rule {\n        /**", "entropy": 0.25341796875, "is_bug_line": false, "sus_score": 0.2886751345948129, "per_token_entropy": [0.9794921875, 0.193603515625, 0.036163330078125, 0.035797119140625, 0.1732177734375, 0.302978515625, 0.0007410049438476562, 0.2266845703125, 0.0003216266632080078, 0.0007166862487792969, 0.07958984375, 0.002948760986328125, 0.034576416015625, 0.273681640625, 0.004604339599609375, 0.80029296875, 0.2266845703125, 0.0161895751953125, 0.0005373954772949219, 0.29736328125, 0.00054168701171875, 0.003322601318359375, 0.334228515625, 0.00691986083984375, 0.253173828125, 0.31689453125, 1.220703125, 0.720703125, 1.22265625, 0.363525390625, 0.345458984375, 1.1513671875, 0.0005450248718261719, 0.66748046875, 0.1546630859375, 0.345703125, 0.1318359375, 0.00016760826110839844, 0.0010900497436523438, 0.011749267578125, 0.047210693359375, 0.007320404052734375, 0.0284271240234375, 0.1356201171875, 0.135498046875, 1.126953125, 0.0007152557373046875, 0.1461181640625, 0.002292633056640625, 0.0095672607421875, 0.058441162109375, 0.54052734375], "tokens": [291, 569, 291, 763, 5489, 705, 26, 35322, 3112, 30, 16600, 14461, 293, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 10893, 443, 20720, 312, 5750, 688, 10107, 312, 8082, 275, 319, 707, 45131, 802, 1730, 98, 48, 275, 569, 284, 945, 907, 443, 892, 3842, 4575, 13708, 301, 291, 1022]}
{"line_number": 547, "line_type": "original", "code": "            timeZone = TimeZone.getDefault();", "entropy": 2.197265625, "is_bug_line": false, "sus_score": 0.2773500981126146, "per_token_entropy": [5.5234375, 9.0859375, 0.345458984375, 1.857421875, 2.287109375, 0.00014150142669677734, 0.005359649658203125, 0.67041015625, 0.005825042724609375], "tokens": [1468, 1133, 6767, 280, 3717, 6767, 32, 13737, 473]}
{"line_number": 547, "line_type": "generated", "code": "\n        }\n\n        return rules;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * <p>Formats a date/time in the specified format.</p>\n     * \n     * @param obj  the date/time to format\n     * @return the formatted date/", "entropy": 0.240966796875, "is_bug_line": false, "sus_score": 0.2773500981126146, "per_token_entropy": [0.351318359375, 0.0012664794921875, 0.413818359375, 0.6220703125, 0.0013837814331054688, 0.0004134178161621094, 0.0102996826171875, 0.0009975433349609375, 0.1522216796875, 0.294189453125, 1.6142578125, 0.0162353515625, 0.05621337890625, 0.004993438720703125, 4.1604042053222656e-05, 0.08612060546875, 2.4557113647460938e-05, 0.0008525848388671875, 0.96728515625, 0.0076446533203125, 0.95556640625, 0.2998046875, 0.0009312629699707031, 1.12890625, 0.591796875, 1.482421875, 0.298828125, 0.63525390625, 3.933906555175781e-05, 0.0007867813110351562, 0.0074615478515625, 0.0007610321044921875, 0.070556640625, 6.139278411865234e-05, 0.064453125, 0.004364013671875, 0.2081298828125, 0.00896453857421875, 0.2216796875, 0.2474365234375, 0.49169921875, 0.001071929931640625, 0.107177734375, 0.00582122802734375, 0.6484375, 0.0005750656127929688, 0.0006456375122070312, 0.181640625, 0.0328369140625, 0.0264129638671875, 0.1416015625, 0.06121826171875], "tokens": [291, 320, 584, 442, 7019, 45, 284, 320, 446, 434, 42510, 284, 1022, 275, 319, 333, 98, 48, 19298, 312, 2340, 33, 1003, 328, 322, 3191, 2179, 1730, 98, 48, 275, 319, 5384, 319, 477, 753, 2830, 225, 322, 2340, 33, 1003, 372, 2179, 275, 319, 477, 601, 322, 14186, 2340, 33]}
{"line_number": 553, "line_type": "original", "code": "            locale = Locale.getDefault();", "entropy": 3.310546875, "is_bug_line": false, "sus_score": 0.2581988897471611, "per_token_entropy": [3.654296875, 14.1328125, 2.513671875, 2.6484375, 0.0179290771484375, 0.177978515625, 0.025421142578125], "tokens": [1468, 11259, 280, 23265, 32, 13737, 473]}
{"line_number": 553, "line_type": "generated", "code": "\n            }\n\n            char c = token.charAt(0);\n            if (c == '\\'') {\n                i++;\n                if (i >= length) {\n                    throw new IllegalArgumentException(\"Unmatched quotes in pattern\");\n                }\n                if (mPattern.charAt(", "entropy": 0.35400390625, "is_bug_line": false, "sus_score": 0.2581988897471611, "per_token_entropy": [0.201416015625, 0.058441162109375, 1.38671875, 1.048828125, 0.043212890625, 0.004230499267578125, 0.005626678466796875, 0.0085906982421875, 3.3020973205566406e-05, 3.921985626220703e-05, 0.005985260009765625, 9.524822235107422e-05, 0.84716796875, 0.5380859375, 0.157958984375, 0.05718994140625, 0.0931396484375, 1.4599609375, 8.308887481689453e-05, 0.0027256011962890625, 0.272216796875, 2.462890625, 0.0750732421875, 0.2435302734375, 1.25, 0.0218048095703125, 0.014617919921875, 0.80322265625, 0.016143798828125, 0.230712890625, 0.0011663436889648438, 0.035400390625, 0.402099609375, 0.05804443359375, 0.004878997802734375, 0.64404296875, 1.125, 0.2237548828125, 1.810546875, 0.08087158203125, 0.11431884765625, 0.470947265625, 0.030975341796875, 0.0016984939575195312, 0.234375, 0.849609375, 0.01114654541015625, 1.0009765625, 0.00048470497131347656, 0.00014448165893554688, 0.00010418891906738281, 0.0001996755599975586], "tokens": [324, 320, 1064, 1351, 281, 280, 2404, 32, 15611, 26, 34, 293, 324, 415, 308, 85, 610, 26271, 683, 301, 400, 595, 3334, 400, 415, 308, 91, 2377, 3104, 27, 301, 528, 1422, 537, 12137, 440, 1061, 16317, 22002, 328, 5257, 724, 400, 320, 400, 415, 308, 95, 5516, 32, 15611, 26]}
{"line_number": 539, "line_type": "original", "code": "        super();", "entropy": 5.12890625, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [1.5166015625, 10.9921875, 2.880859375], "tokens": [351, 2599, 473]}
{"line_number": 539, "line_type": "generated", "code": "\n        String[] shortWeekdays = symbols.getShortWeekdays();\n\n        int length = mPattern.length();\n        int[] indexRef = new int[1];\n        for (int i=0; i < length; i++) {\n            indexRef", "entropy": 0.1470947265625, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [0.5625, 0.0271453857421875, 0.002208709716796875, 0.0244598388671875, 4.696846008300781e-05, 7.49826431274414e-05, 0.0005517005920410156, 0.0030059814453125, 5.5670738220214844e-05, 3.0875205993652344e-05, 0.0008072853088378906, 1.0132789611816406e-05, 9.5367431640625e-07, 0.000431060791015625, 1.609375, 0.76611328125, 0.09564208984375, 0.00506591796875, 0.00353240966796875, 0.00025773048400878906, 0.0006275177001953125, 0.0005578994750976562, 0.0004627704620361328, 0.056060791015625, 0.2509765625, 0.08526611328125, 0.2763671875, 0.006908416748046875, 0.0003457069396972656, 0.024658203125, 6.341934204101562e-05, 0.036285400390625, 0.00226593017578125, 0.0002663135528564453, 0.37255859375, 1.16796875, 0.0257568359375, 0.004665374755859375, 0.024688720703125, 0.498291015625, 0.0007457733154296875, 0.408447265625, 0.0014295578002929688, 0.22802734375, 0.006763458251953125, 0.197265625, 0.404296875, 0.002689361572265625, 0.00039649009704589844, 0.03662109375, 0.42431640625, 0.0013875961303710938], "tokens": [291, 892, 1178, 4504, 11070, 6124, 280, 15455, 32, 371, 6872, 11070, 6124, 473, 584, 629, 3104, 280, 345, 5516, 32, 1322, 473, 291, 629, 1178, 1650, 2084, 280, 537, 629, 77, 35, 970, 291, 436, 308, 410, 595, 47, 34, 45, 595, 333, 3104, 45, 595, 1987, 301, 324, 1650, 2084]}
{"line_number": 540, "line_type": "original", "code": "        if (pattern == null) {", "entropy": 1.189453125, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [3.400390625, 2.130859375, 0.08148193359375, 2.396484375, 1.3515625, 0.00801849365234375, 0.1068115234375, 0.0428466796875], "tokens": [351, 415, 308, 5607, 610, 744, 27, 301]}
{"line_number": 540, "line_type": "generated", "code": "\n        String[] ampms = symbols.getAmPmStrings();", "entropy": 0.1942138671875, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [0.638671875, 0.97802734375, 0.1014404296875, 0.67578125, 0.005367279052734375, 0.0024261474609375, 0.120849609375, 0.0006546974182128906, 0.0001493692398071289, 0.0014333724975585938, 0.00016248226165771484, 2.4437904357910156e-05, 0.0005006790161132812], "tokens": [291, 892, 1178, 17501, 874, 280, 15455, 32, 371, 12880, 32364, 9634, 473]}
{"line_number": 543, "line_type": "original", "code": "        mPattern = pattern;", "entropy": 3.4765625, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [4.6484375, 4.6015625, 3.390625, 2.962890625, 3.345703125, 1.9140625], "tokens": [351, 345, 5516, 280, 5257, 45]}
{"line_number": 543, "line_type": "generated", "code": "\n\n        for (int i=0; i < length; i++) {\n            char c = mPattern.charAt(i);\n            <|mask:2|>\n        }\n\n        if (mQuoteCount > 0) {\n            throw new IllegalArgumentException(\"Unmatched", "entropy": 0.333740234375, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [1.3125, 2.12109375, 0.06744384765625, 0.006954193115234375, 0.0234222412109375, 0.50537109375, 0.329345703125, 0.325439453125, 0.004268646240234375, 0.61474609375, 0.0736083984375, 0.30078125, 0.1854248046875, 0.0027217864990234375, 0.0053558349609375, 0.11419677734375, 0.06256103515625, 0.14306640625, 0.0028514862060546875, 0.08251953125, 0.000576019287109375, 0.0007357597351074219, 1.1086463928222656e-05, 0.00015151500701904297, 0.00012052059173583984, 0.00125885009765625, 1.30078125, 1.17578125, 0.1400146484375, 0.10333251953125, 1.060546875, 0.03753662109375, 0.66552734375, 0.0048980712890625, 0.5615234375, 1.556640625, 0.1500244140625, 0.349609375, 1.8759765625, 0.019805908203125, 0.9599609375, 0.0049896240234375, 0.0031566619873046875, 0.02880859375, 0.0026092529296875, 0.0203094482421875, 0.04888916015625, 0.0173797607421875, 0.003780364990234375, 0.18701171875, 0.373779296875, 0.41552734375], "tokens": [584, 436, 308, 410, 595, 47, 34, 45, 595, 333, 3104, 45, 595, 1987, 301, 324, 1351, 281, 280, 345, 5516, 32, 15611, 26, 91, 293, 324, 39692, 3965, 44, 36, 28318, 291, 320, 584, 415, 308, 95, 17138, 1534, 848, 225, 34, 27, 301, 324, 1422, 537, 12137, 440, 1061, 16317]}
{"line_number": 545, "line_type": "original", "code": "        mTimeZoneForced = (timeZone != null);", "entropy": 2.44140625, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [3.6796875, 4.8046875, 7.328125, 6.70703125, 0.14208984375, 0.00563812255859375, 1.9267578125, 4.38671875, 0.0182952880859375, 0.08380126953125, 0.1744384765625, 0.038726806640625], "tokens": [351, 345, 26223, 1562, 3870, 280, 308, 1003, 6767, 863, 744, 293]}
{"line_number": 545, "line_type": "generated", "code": "\n        for (int i=0; i < length; i++) {\n            indexRef[0] = i;\n            char c = mPattern.charAt(i);\n\n            if (c == '\\'') {\n                String text = parseQuoteString(m", "entropy": 0.1998291015625, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [0.40625, 0.380615234375, 0.058990478515625, 0.016815185546875, 0.01483917236328125, 0.65576171875, 0.0017633438110351562, 0.27294921875, 0.003986358642578125, 0.1568603515625, 0.049346923828125, 0.158935546875, 0.479248046875, 0.0027408599853515625, 0.0016460418701171875, 0.053253173828125, 0.85986328125, 0.0072479248046875, 0.0003197193145751953, 0.00012373924255371094, 0.004489898681640625, 9.274482727050781e-05, 0.0006070137023925781, 0.0004284381866455078, 0.284423828125, 0.3623046875, 0.126953125, 0.004650115966796875, 0.07501220703125, 0.0010271072387695312, 0.0005841255187988281, 0.0006527900695800781, 0.00013697147369384766, 0.009796142578125, 0.00127410888671875, 0.5751953125, 0.671875, 0.072265625, 0.010040283203125, 0.1005859375, 0.2298583984375, 0.00014662742614746094, 0.0031280517578125, 0.09893798828125, 1.7548828125, 1.04296875, 0.01329803466796875, 0.1951904296875, 0.9921875, 0.1436767578125, 0.005573272705078125, 0.0264892578125], "tokens": [291, 436, 308, 410, 595, 47, 34, 45, 595, 333, 3104, 45, 595, 1987, 301, 324, 1650, 2084, 77, 34, 79, 280, 595, 45, 324, 1351, 281, 280, 345, 5516, 32, 15611, 26, 91, 293, 1064, 415, 308, 85, 610, 26271, 683, 301, 400, 892, 1344, 280, 3185, 17138, 652, 26, 95]}
{"line_number": 546, "line_type": "original", "code": "        if (timeZone == null) {", "entropy": 2.375, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [5.13671875, 3.0703125, 0.1240234375, 9.7421875, 0.342529296875, 2.267578125, 0.253173828125, 0.385986328125, 0.051727294921875], "tokens": [351, 415, 308, 1003, 6767, 610, 744, 27, 301]}
{"line_number": 546, "line_type": "generated", "code": "\n            if (cPatternChars[mPattern.charAt(i)] == 1) {\n                String token = parseToken(mPattern, i, indexRef);", "entropy": 0.357421875, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [0.2222900390625, 1.7001953125, 0.083984375, 1.298828125, 1.9580078125, 0.17724609375, 0.1900634765625, 0.91796875, 0.002880096435546875, 0.006847381591796875, 4.00543212890625e-05, 0.0001366138458251953, 0.005786895751953125, 0.0243072509765625, 1.3818359375, 0.83740234375, 0.368408203125, 0.0091400146484375, 0.0231781005859375, 0.2490234375, 1.8154296875, 0.1627197265625, 0.015960693359375, 0.32373046875, 0.00447845458984375, 0.004405975341796875, 0.02423095703125, 0.0006136894226074219, 0.00048089027404785156, 0.030792236328125, 0.00911712646484375, 0.036865234375, 2.1457672119140625e-05, 0.266357421875], "tokens": [324, 415, 308, 85, 5516, 16364, 77, 95, 5516, 32, 15611, 26, 91, 2177, 610, 225, 35, 27, 301, 400, 892, 2404, 280, 3185, 1763, 26, 95, 5516, 30, 595, 30, 1650, 2084, 293]}
{"line_number": 549, "line_type": "original", "code": "        mTimeZone = timeZone;", "entropy": 3.48828125, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [4.50390625, 8.2265625, 6.76171875, 0.9697265625, 3.890625, 0.0034160614013671875, 0.0731201171875], "tokens": [351, 345, 26223, 280, 1133, 6767, 45]}
{"line_number": 549, "line_type": "generated", "code": "\n        }\n\n        return rules;\n    }\n\n    /**\n     * <p>Parses a token from the specified string.</p>\n     * \n     * @param pattern  the pattern\n     * @param indexRef  a single element array containing the index,\n    ", "entropy": 0.2049560546875, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [0.65283203125, 0.0028076171875, 0.48193359375, 0.529296875, 0.0019245147705078125, 0.0002875328063964844, 0.0100250244140625, 0.0008330345153808594, 0.206787109375, 0.2139892578125, 0.0030269622802734375, 3.695487976074219e-05, 0.013427734375, 0.00010132789611816406, 0.0007925033569335938, 0.513671875, 4.00543212890625e-05, 0.4892578125, 0.02734375, 0.2437744140625, 0.0190887451171875, 1.33984375, 0.63134765625, 0.397216796875, 5.8650970458984375e-05, 0.0007319450378417969, 0.0032958984375, 0.0023899078369140625, 0.064208984375, 4.8041343688964844e-05, 0.012939453125, 0.0059967041015625, 0.03424072265625, 0.03839111328125, 0.080810546875, 0.0026874542236328125, 0.53564453125, 3.337860107421875e-06, 1.8358230590820312e-05, 0.0002956390380859375, 0.1529541015625, 0.0046539306640625, 0.045684814453125, 0.490234375, 0.3330078125, 0.02105712890625, 0.482177734375, 0.90673828125, 0.080078125, 0.040313720703125, 1.296875, 0.23974609375], "tokens": [291, 320, 584, 442, 7019, 45, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 926, 1464, 312, 2404, 645, 322, 3191, 802, 1730, 98, 48, 275, 319, 5384, 319, 477, 753, 5257, 225, 322, 5257, 275, 319, 477, 753, 1650, 2084, 225, 312, 3982, 1994, 1417, 6621, 322, 1650, 30, 275]}
{"line_number": 551, "line_type": "original", "code": "        mLocaleForced = (locale != null);", "entropy": 3.892578125, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [4.6875, 8.2421875, 10.0390625, 10.9453125, 1.4951171875, 0.1412353515625, 0.88671875, 5.69921875, 0.156982421875, 0.4501953125, 0.08233642578125], "tokens": [351, 345, 9467, 1562, 3870, 280, 308, 6921, 863, 744, 293]}
{"line_number": 551, "line_type": "generated", "code": "\n            if (tokenLen == 0) {\n                break;\n            }\n\n            char c = token.charAt(0);\n\n            if (c == 'G') {\n                // Era designator\n                rules.add(new TextField(Calendar.ERA,", "entropy": 0.273681640625, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [0.314453125, 0.2261962890625, 0.20849609375, 0.11669921875, 0.1544189453125, 0.051605224609375, 0.0011053085327148438, 0.073486328125, 0.0197906494140625, 0.0023899078369140625, 0.0716552734375, 1.4814453125, 0.00036072731018066406, 0.151611328125, 0.0005598068237304688, 0.83203125, 1.36328125, 0.07257080078125, 0.0071868896484375, 0.00511932373046875, 0.01094818115234375, 8.189678192138672e-05, 6.80685043334961e-05, 0.0166778564453125, 0.0001289844512939453, 0.462890625, 0.61181640625, 0.166259765625, 0.1597900390625, 0.08563232421875, 0.5400390625, 0.0140380859375, 0.301025390625, 0.0010528564453125, 0.1173095703125, 1.2744140625, 0.26904296875, 0.40869140625, 0.039337158203125, 0.0016298294067382812, 1.3349609375, 1.3798828125, 4.649162292480469e-05, 0.002506256103515625, 0.00042128562927246094, 0.199951171875, 0.90673828125, 0.02685546875, 0.7255859375, 0.00033855438232421875, 0.00021946430206298828, 0.0254058837890625], "tokens": [324, 415, 308, 1956, 5745, 610, 225, 34, 27, 301, 400, 1626, 45, 324, 320, 1064, 1351, 281, 280, 2404, 32, 15611, 26, 34, 293, 1064, 415, 308, 85, 610, 330, 57, 683, 301, 400, 434, 516, 1691, 6735, 717, 400, 7019, 32, 669, 26, 890, 28563, 26, 9389, 32, 26260, 30]}
{"line_number": 552, "line_type": "original", "code": "        if (locale == null) {", "entropy": 2.3671875, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [6.86328125, 2.669921875, 0.11065673828125, 7.8515625, 0.9970703125, 0.2198486328125, 0.177734375, 0.0540771484375], "tokens": [351, 415, 308, 6921, 610, 744, 27, 301]}
{"line_number": 552, "line_type": "generated", "code": "\n                throw new IllegalArgumentException(\"The pattern (\" + mPattern + \") contains a reserved character '\"+token+\"' that is not a quoted literal.\");\n            }\n            char c = token.charAt(0);\n\n            // handle quoted text\n            if (c == '\\'')", "entropy": 0.449462890625, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [0.307861328125, 1.3232421875, 0.1256103515625, 0.01177978515625, 0.67431640625, 0.324951171875, 0.042938232421875, 0.927734375, 0.16064453125, 0.398681640625, 0.0008878707885742188, 0.209228515625, 0.486083984375, 0.56005859375, 0.75537109375, 1.76171875, 0.06451416015625, 1.2177734375, 0.135009765625, 0.5595703125, 0.059539794921875, 0.3427734375, 0.09002685546875, 0.1300048828125, 0.41455078125, 2.421875, 0.705078125, 0.3681640625, 0.367919921875, 0.0018510818481445312, 1.5361328125, 0.57421875, 0.121826171875, 0.0027294158935546875, 0.002796173095703125, 0.0140380859375, 2.6941299438476562e-05, 8.821487426757812e-06, 0.004360198974609375, 0.00011610984802246094, 0.44140625, 1.275390625, 1.5517578125, 0.146728515625, 1.8505859375, 0.049530029296875, 0.08489990234375, 0.005306243896484375, 0.022491455078125, 0.03314208984375, 0.70361328125, 0.00016260147094726562], "tokens": [400, 1422, 537, 12137, 440, 1318, 5257, 2884, 474, 345, 5516, 474, 7788, 4304, 312, 5215, 5341, 330, 5115, 1956, 30038, 688, 438, 646, 312, 34210, 10652, 5368, 324, 320, 324, 1351, 281, 280, 2404, 32, 15611, 26, 34, 293, 1064, 434, 2887, 34210, 1344, 324, 415, 308, 85, 610, 26271, 683]}
{"line_number": 555, "line_type": "original", "code": "        mLocale = locale;", "entropy": 4.078125, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [3.9453125, 8.0078125, 9.203125, 0.8984375, 2.330078125, 0.08746337890625], "tokens": [351, 345, 9467, 280, 11259, 45]}
{"line_number": 555, "line_type": "generated", "code": "\n            }\n        }\n\n        return rules;\n    }\n\n    /**\n     * <p>Parses a token from the pattern.</p>\n     * \n     * @param pattern  the pattern\n     * @param indexRef  a single element array which is updated to", "entropy": 0.253662109375, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [1.2265625, 1.1162109375, 1.720703125, 0.0196380615234375, 0.5234375, 0.3662109375, 0.002872467041015625, 0.0007867813110351562, 0.00933074951171875, 0.0004973411560058594, 0.191162109375, 0.229248046875, 0.005603790283203125, 9.644031524658203e-05, 0.01293182373046875, 8.153915405273438e-05, 0.00101470947265625, 0.65771484375, 5.0187110900878906e-05, 0.5400390625, 0.04290771484375, 0.2086181640625, 0.031951904296875, 0.99072265625, 0.39208984375, 9.047985076904297e-05, 0.0004916191101074219, 0.0036830902099609375, 0.0008959770202636719, 0.0672607421875, 5.53131103515625e-05, 0.00795745849609375, 0.01434326171875, 0.005054473876953125, 0.0489501953125, 0.048828125, 0.002269744873046875, 0.68701171875, 4.410743713378906e-06, 2.0503997802734375e-05, 0.0005297660827636719, 0.139892578125, 0.003387451171875, 0.03790283203125, 0.66357421875, 0.2413330078125, 0.0157318115234375, 0.53857421875, 1.23828125, 0.463623046875, 0.2529296875, 0.422607421875], "tokens": [324, 320, 291, 320, 584, 442, 7019, 45, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 926, 1464, 312, 2404, 645, 322, 5257, 1730, 98, 48, 275, 319, 5384, 319, 477, 753, 5257, 225, 322, 5257, 275, 319, 477, 753, 1650, 2084, 225, 312, 3982, 1994, 1417, 1510, 438, 4459, 372]}
{"line_number": 556, "line_type": "original", "code": "    }", "entropy": 2.8046875, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [5.3515625, 0.256591796875], "tokens": [264, 320]}
{"line_number": 556, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [], "tokens": []}
{"line_number": 213, "line_type": "original", "code": "        FastDateFormat emptyFormat = new FastDateFormat(pattern, timeZone, locale);", "entropy": 1.048828125, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [2.921875, 1.9345703125, 0.006183624267578125, 9.2421875, 0.3359375, 0.148681640625, 0.277587890625, 0.053314208984375, 0.0177764892578125, 1.021484375, 0.94970703125, 0.158447265625, 0.322998046875, 0.00046825408935546875, 0.033111572265625, 0.0161590576171875, 0.392578125], "tokens": [351, 15938, 15645, 3502, 2207, 280, 537, 15938, 15645, 26, 5607, 30, 1133, 6767, 30, 11259, 293]}
{"line_number": 213, "line_type": "generated", "code": "\n     */\n    public static FastDateFormat getDateInstance(int style, TimeZone timeZone) {\n        return getDateInstance(style, timeZone, null);\n    }\n\n    /**\n     * <p>Gets a date formatter instance using the specified style,", "entropy": 0.047821044921875, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [0.70947265625, 0.67919921875, 0.016387939453125, 0.004611968994140625, 0.0006098747253417969, 0.2064208984375, 2.8252601623535156e-05, 0.0003800392150878906, 6.0677528381347656e-05, 1.5497207641601562e-06, 0.0004982948303222656, 0.005161285400390625, 0.0014982223510742188, 0.00045418739318847656, 0.00197601318359375, 1.6689300537109375e-06, 0.0001951456069946289, 1.7523765563964844e-05, 0.002086639404296875, 0.005809783935546875, 0.1583251953125, 0.1959228515625, 0.04888916015625, 0.0164031982421875, 0.00014972686767578125, 0.00115966796875, 0.0022373199462890625, 0.00018894672393798828, 0.0173492431640625, 2.86102294921875e-06, 0.000705718994140625, 0.0171051025390625, 0.00466156005859375, 0.07684326171875, 0.0006918907165527344, 0.08197021484375, 0.0872802734375, 0.0082550048828125, 2.5987625122070312e-05, 0.005756378173828125, 1.2159347534179688e-05, 0.0001157522201538086, 0.003047943115234375, 0.003208160400390625, 0.0153656005859375, 0.0061187744140625, 0.0010709762573242188, 0.0036182403564453125, 0.0020542144775390625, 0.0013895034790039062, 0.0236968994140625, 0.06719970703125], "tokens": [275, 569, 284, 562, 907, 15938, 15645, 622, 1547, 1810, 26, 410, 1418, 30, 3717, 6767, 1133, 6767, 27, 301, 291, 442, 622, 1547, 1810, 26, 1621, 30, 1133, 6767, 30, 744, 293, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 20931, 312, 2340, 14971, 1980, 1471, 322, 3191, 1418, 30]}
{"line_number": 214, "line_type": "original", "code": "        FastDateFormat format = (FastDateFormat) cInstanceCache.get(emptyFormat);", "entropy": 0.93994140625, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [3.923828125, 3.13671875, 0.01082611083984375, 1.8271484375, 0.0732421875, 1.9150390625, 0.037567138671875, 0.00022614002227783203, 0.0185699462890625, 0.4609375, 0.69873046875, 0.00730133056640625, 0.01751708984375, 0.018218994140625, 0.043670654296875, 4.66796875, 0.0269622802734375, 0.0318603515625], "tokens": [351, 15938, 15645, 2179, 280, 308, 12200, 15645, 27, 281, 1810, 2597, 32, 371, 26, 2951, 2207, 293]}
{"line_number": 214, "line_type": "generated", "code": "\n    public static FastDateFormat getDateInstance(int style, TimeZone timeZone) {\n        return getDateInstance(style, timeZone, null);\n    }\n\n    /**\n     * <p>Gets a date formatter instance using the specified style, time\n    ", "entropy": 0.08758544921875, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [0.5859375, 1.8251953125, 0.0098724365234375, 0.25048828125, 0.00015342235565185547, 0.0128021240234375, 0.0015554428100585938, 1.5616416931152344e-05, 0.0020084381103515625, 0.0050811767578125, 0.01470947265625, 0.002353668212890625, 0.007686614990234375, 3.123283386230469e-05, 0.00247955322265625, 0.0002315044403076172, 0.0135650634765625, 0.0274658203125, 0.08837890625, 0.40478515625, 0.191162109375, 0.02227783203125, 0.0003457069396972656, 0.0028629302978515625, 0.004734039306640625, 0.00038123130798339844, 0.03277587890625, 2.3484230041503906e-05, 0.0023975372314453125, 0.06768798828125, 0.006595611572265625, 0.08306884765625, 0.00356292724609375, 0.1710205078125, 0.1390380859375, 0.00969696044921875, 7.092952728271484e-05, 0.00806427001953125, 1.0728836059570312e-05, 0.00011289119720458984, 0.0036182403564453125, 0.0030384063720703125, 0.01258087158203125, 0.004589080810546875, 0.0013914108276367188, 0.0037250518798828125, 0.0017299652099609375, 0.0008177757263183594, 0.031585693359375, 0.07110595703125, 0.271240234375, 0.1505126953125], "tokens": [284, 562, 907, 15938, 15645, 622, 1547, 1810, 26, 410, 1418, 30, 3717, 6767, 1133, 6767, 27, 301, 291, 442, 622, 1547, 1810, 26, 1621, 30, 1133, 6767, 30, 744, 293, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 20931, 312, 2340, 14971, 1980, 1471, 322, 3191, 1418, 30, 1133, 275]}
{"line_number": 215, "line_type": "original", "code": "        if (format == null) {", "entropy": 1.7421875, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [5.1015625, 2.44140625, 0.06707763671875, 4.6953125, 1.1328125, 0.058624267578125, 0.054962158203125, 0.384765625], "tokens": [351, 415, 308, 1643, 610, 744, 27, 301]}
{"line_number": 215, "line_type": "generated", "code": "\n    public static FastDateFormat getDateInstance(int style, TimeZone timeZone) {\n        return getDateInstance(style, timeZone, null);\n    }\n\n    /**\n     * <p>Gets a date formatter instance using the specified style,\n     *", "entropy": 0.078125, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [0.7529296875, 0.474365234375, 0.0021839141845703125, 0.12139892578125, 8.71419906616211e-05, 0.0013561248779296875, 0.0003135204315185547, 4.172325134277344e-06, 0.0005955696105957031, 0.0032100677490234375, 0.0192413330078125, 0.0011377334594726562, 0.0018701553344726562, 5.9604644775390625e-06, 0.0013828277587890625, 4.482269287109375e-05, 0.01503753662109375, 0.01445770263671875, 0.09466552734375, 0.52392578125, 0.2216796875, 0.03759765625, 0.0003275871276855469, 0.00330352783203125, 0.005809783935546875, 0.0004925727844238281, 0.022857666015625, 5.0067901611328125e-06, 0.00203704833984375, 0.037628173828125, 0.004413604736328125, 0.040771484375, 0.0010843276977539062, 0.111328125, 0.1068115234375, 0.00637054443359375, 2.5510787963867188e-05, 0.005947113037109375, 6.556510925292969e-06, 8.475780487060547e-05, 0.0034027099609375, 0.00318145751953125, 0.0129547119140625, 0.005924224853515625, 0.0014133453369140625, 0.004062652587890625, 0.0016546249389648438, 0.0010194778442382812, 0.0254058837890625, 0.08172607421875, 1.2841796875, 1.8358230590820312e-05], "tokens": [284, 562, 907, 15938, 15645, 622, 1547, 1810, 26, 410, 1418, 30, 3717, 6767, 1133, 6767, 27, 301, 291, 442, 622, 1547, 1810, 26, 1621, 30, 1133, 6767, 30, 744, 293, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 20931, 312, 2340, 14971, 1980, 1471, 322, 3191, 1418, 30, 275, 319]}
{"line_number": 220, "line_type": "original", "code": "        return format;", "entropy": 5.078125, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [5.3125, 9.578125, 4.55859375, 0.8642578125], "tokens": [351, 442, 2179, 45]}
{"line_number": 220, "line_type": "generated", "code": "e zone and locale.</p>\n     * \n     * @param style  date style: FULL, LONG, MEDIUM, or SHORT\n     * @param timeZone  optional time zone, overrides time zone of\n     *  formatted date\n     * @param", "entropy": 0.0660400390625, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [2.580078125, 0.01525115966796875, 0.1649169921875, 0.04376220703125, 0.06842041015625, 0.0005893707275390625, 0.0033111572265625, 0.145751953125, 0.002117156982421875, 0.0860595703125, 0.00064849853515625, 0.1116943359375, 0.001621246337890625, 0.0190277099609375, 0.0185546875, 0.01009368896484375, 0.0015850067138671875, 0.0014715194702148438, 0.0003726482391357422, 0.00011205673217773438, 8.71419906616211e-05, 3.445148468017578e-05, 4.410743713378906e-05, 8.344650268554688e-07, 0.00830841064453125, 0.0029087066650390625, 0.0014095306396484375, 6.4373016357421875e-06, 0.0201416015625, 0.00027179718017578125, 0.0006871223449707031, 0.0005254745483398438, 0.0026454925537109375, 9.608268737792969e-05, 0.00708770751953125, 0.001293182373046875, 0.0007834434509277344, 0.00016927719116210938, 0.0021800994873046875, 0.0008244514465332031, 0.0015783309936523438, 0.00014102458953857422, 0.001953125, 0.0794677734375, 0.0007853507995605469, 0.0034122467041015625, 0.00023543834686279297, 0.0003445148468017578, 0.0210418701171875, 9.953975677490234e-05, 0.00018680095672607422, 0.0011053085327148438], "tokens": [87, 10790, 461, 11259, 1730, 98, 48, 275, 319, 5384, 319, 477, 753, 1418, 225, 2340, 1418, 44, 39398, 30, 27040, 30, 27513, 34252, 30, 556, 5312, 2426, 275, 319, 477, 753, 1133, 6767, 225, 5302, 1133, 10790, 30, 20006, 1133, 10790, 432, 275, 319, 225, 14186, 2340, 275, 319, 477, 753]}
