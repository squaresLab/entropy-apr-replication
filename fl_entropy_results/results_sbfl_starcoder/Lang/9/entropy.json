{"line_number": 260, "line_type": "original", "code": "        return date;", "entropy": 5.33203125, "is_bug_line": false, "sus_score": 0.4472135954999579, "per_token_entropy": [4.953125, 2.783203125, 11.9765625, 1.6103515625], "tokens": [351, 442, 2340, 45]}
{"line_number": 260, "line_type": "generated", "code": "\n                    }\n                    if(value.charAt(i)=='\\'') {\n                        ++i;\n                    }\n                }\n                regex.append(c);\n                break;\n            case '.':\n                if(i>0 && value.charAt(i-1)", "entropy": 0.27490234375, "is_bug_line": false, "sus_score": 0.4472135954999579, "per_token_entropy": [0.57666015625, 0.0302276611328125, 0.19091796875, 0.44287109375, 0.016998291015625, 0.02935791015625, 4.100799560546875e-05, 5.996227264404297e-05, 0.00017571449279785156, 0.0002014636993408203, 0.391357421875, 0.62255859375, 0.0225067138671875, 0.00489044189453125, 0.004276275634765625, 0.1090087890625, 2.203125, 0.0208587646484375, 0.002346038818359375, 0.587890625, 0.0018415451049804688, 0.40185546875, 0.0028839111328125, 0.513671875, 0.50537109375, 0.0006961822509765625, 0.000308990478515625, 1.3369140625, 0.031890869140625, 0.01204681396484375, 0.056640625, 0.026611328125, 0.0004279613494873047, 0.038970947265625, 0.2242431640625, 1.7744140625, 9.775161743164062e-06, 0.8427734375, 1.8671875, 0.16259765625, 0.1075439453125, 0.71435546875, 0.05267333984375, 0.06298828125, 0.1295166015625, 2.2649765014648438e-05, 0.0004317760467529297, 0.0009713172912597656, 0.0005850791931152344, 0.005428314208984375, 0.00010776519775390625, 0.166015625], "tokens": [528, 320, 528, 415, 26, 853, 32, 15611, 26, 91, 27, 10844, 6945, 683, 301, 715, 3311, 91, 45, 528, 320, 400, 320, 400, 9667, 32, 1689, 26, 85, 293, 400, 1626, 45, 324, 1135, 5608, 950, 400, 415, 26, 91, 48, 34, 962, 786, 32, 15611, 26, 91, 31, 35, 27]}
{"line_number": 282, "line_type": "original", "code": "        Calendar cal= Calendar.getInstance(timeZone, locale);", "entropy": 1.685546875, "is_bug_line": false, "sus_score": 0.44172610429938614, "per_token_entropy": [3.3203125, 10.8359375, 0.85546875, 0.30126953125, 0.474853515625, 0.007198333740234375, 0.0060272216796875, 0.3984375, 5.35546875, 0.018096923828125, 0.2958984375, 0.02569580078125, 0.008270263671875], "tokens": [351, 16600, 2182, 47, 16600, 32, 7426, 26, 1003, 6767, 30, 11259, 293]}
{"line_number": 282, "line_type": "generated", "code": "\n        }\n        return regex;\n    }\n\n    /**\n     * Add a strategy to the list.\n     * @param strategy The strategy to add\n     * @return The <code>FastDatePrinter</code> to allow method chaining\n     */\n    public FastDate", "entropy": 0.466552734375, "is_bug_line": false, "sus_score": 0.44172610429938614, "per_token_entropy": [0.2110595703125, 0.6728515625, 0.09246826171875, 0.01154327392578125, 0.0004911422729492188, 0.0021915435791015625, 0.04638671875, 0.0017423629760742188, 0.277099609375, 0.278564453125, 0.014984130859375, 6.151199340820312e-05, 2.86328125, 0.60791015625, 0.84423828125, 0.67431640625, 0.37060546875, 1.3740234375, 1.296875, 0.12335205078125, 0.002315521240234375, 0.40087890625, 0.005252838134765625, 0.338134765625, 0.283935546875, 0.24658203125, 0.461669921875, 0.0518798828125, 0.13427734375, 1.0341796875, 0.0025177001953125, 0.517578125, 1.39453125, 2.693359375, 0.002315521240234375, 0.0007171630859375, 1.5791015625, 0.085205078125, 0.6572265625, 0.01715087890625, 0.00025963783264160156, 0.0231170654296875, 1.42578125, 0.4375, 1.5537109375, 0.0229949951171875, 0.049163818359375, 0.06201171875, 0.004302978515625, 0.94482421875, 0.045928955078125, 0.0238494873046875], "tokens": [291, 320, 291, 442, 9667, 45, 284, 320, 446, 1022, 275, 319, 2222, 312, 13689, 372, 322, 1149, 32, 275, 319, 477, 753, 13689, 886, 13689, 372, 1015, 275, 319, 477, 601, 886, 333, 687, 48, 12200, 1547, 14384, 377, 687, 48, 372, 2608, 1411, 38009, 275, 569, 284, 562, 15938, 1547]}
{"line_number": 283, "line_type": "original", "code": "        cal.clear();", "entropy": 2.85546875, "is_bug_line": false, "sus_score": 0.44172610429938614, "per_token_entropy": [4.37890625, 7.265625, 0.15673828125, 2.470703125, 0.01311492919921875], "tokens": [351, 2182, 32, 3815, 473]}
{"line_number": 283, "line_type": "generated", "code": "\n        return regex;\n    }\n\n    /**\n     * Escape constant fields into regular expression\n     * @param regex The destination regex\n     * @param value The source field\n     * @return The <code>StringBuilder</code>\n     */\n    private static StringBuilder escape", "entropy": 0.11859130859375, "is_bug_line": false, "sus_score": 0.44172610429938614, "per_token_entropy": [0.4091796875, 0.0556640625, 0.00152587890625, 0.00350189208984375, 0.011962890625, 0.001346588134765625, 0.255615234375, 0.296630859375, 0.01349639892578125, 6.556510925292969e-05, 2.146484375, 0.0293426513671875, 0.33447265625, 0.07464599609375, 0.1046142578125, 0.7392578125, 0.01898193359375, 0.16748046875, 0.0006976127624511719, 0.026763916015625, 0.0033283233642578125, 0.373046875, 0.018280029296875, 0.080078125, 0.01425933837890625, 0.0161590576171875, 0.0005092620849609375, 0.0012044906616210938, 0.0194244384765625, 0.296875, 0.007808685302734375, 0.01253509521484375, 0.033660888671875, 0.011627197265625, 0.0019550323486328125, 0.00128936767578125, 0.413330078125, 0.00586700439453125, 0.034698486328125, 8.797645568847656e-05, 5.042552947998047e-05, 0.0048828125, 0.0004146099090576172, 3.421306610107422e-05, 0.0007004737854003906, 0.002716064453125, 0.02886962890625, 0.004573822021484375, 0.038116455078125, 0.03155517578125, 0.008636474609375, 0.009490966796875], "tokens": [291, 442, 9667, 45, 284, 320, 446, 1022, 275, 319, 516, 10946, 8082, 3829, 1991, 10605, 6101, 275, 319, 477, 753, 9667, 886, 8050, 9667, 275, 319, 477, 753, 786, 886, 1914, 1600, 275, 319, 477, 601, 886, 333, 687, 48, 20884, 377, 687, 48, 275, 569, 284, 945, 907, 9706, 15820]}
{"line_number": 285, "line_type": "original", "code": "        for(int i=0; i<strategies.length;) {", "entropy": 1.3642578125, "is_bug_line": false, "sus_score": 0.44172610429938614, "per_token_entropy": [6.21484375, 5.3125, 0.08026123046875, 1.1806640625, 0.05078125, 0.015380859375, 2.400390625, 0.07867431640625, 0.08599853515625, 0.037261962890625, 0.35546875, 0.0013370513916015625, 0.0080718994140625, 0.0010700225830078125, 5.99609375, 0.0151519775390625], "tokens": [351, 436, 26, 410, 595, 47, 34, 45, 595, 46, 466, 21412, 32, 1322, 21288, 301]}
{"line_number": 285, "line_type": "generated", "code": "\n    /**\n     * The strategy for parsing the year field.\n     */\n    private static class StrategyYear extends Strategy {\n        /**\n         * Constructs a new instance.\n         */\n        public StrategyYear() {\n            super(YEAR_MASK);\n        }\n\n        /**\n        ", "entropy": 0.52734375, "is_bug_line": false, "sus_score": 0.44172610429938614, "per_token_entropy": [0.69140625, 0.525390625, 0.037109375, 0.0001131296157836914, 3.10546875, 1.375, 1.4599609375, 0.421630859375, 1.5341796875, 2.009765625, 0.40283203125, 0.5107421875, 0.04254150390625, 0.2135009765625, 0.0145263671875, 0.52197265625, 0.0780029296875, 0.2249755859375, 1.4833984375, 0.45703125, 0.5341796875, 0.259033203125, 0.1878662109375, 0.30859375, 0.5576171875, 0.4111328125, 6.854534149169922e-05, 1.4501953125, 0.2890625, 0.1290283203125, 0.0384521484375, 0.64306640625, 0.006748199462890625, 0.428955078125, 0.002536773681640625, 0.9541015625, 0.0011949539184570312, 7.665157318115234e-05, 0.0146331787109375, 0.015716552734375, 0.049407958984375, 0.0254974365234375, 0.6875, 1.71484375, 0.31298828125, 2.064453125, 0.4931640625, 0.0279693603515625, 0.000995635986328125, 0.448974609375, 0.251220703125, 0.00782012939453125], "tokens": [284, 1022, 275, 319, 886, 13689, 436, 11708, 322, 4947, 1600, 32, 275, 569, 284, 945, 907, 443, 39243, 6617, 2026, 39243, 301, 291, 1022, 276, 319, 29799, 312, 537, 1980, 32, 276, 569, 291, 562, 39243, 6617, 346, 301, 324, 2599, 26, 23164, 81, 6961, 293, 291, 320, 584, 1022, 276]}
{"line_number": 286, "line_type": "original", "code": "            Strategy strategy= strategies[i++];", "entropy": 2.3515625, "is_bug_line": false, "sus_score": 0.44172610429938614, "per_token_entropy": [8.3125, 6.2421875, 0.262451171875, 0.6953125, 0.411865234375, 0.03143310546875, 0.385986328125, 2.46875], "tokens": [1468, 39243, 13689, 47, 35678, 77, 91, 31783]}
{"line_number": 286, "line_type": "generated", "code": "\n    /**\n     * A strategy for parsing a date/time field\n     */\n    static class Strategy {\n        /**\n         * The pattern to use\n         */\n        private final String pattern;\n        /**\n         * The date/time field to set\n         */\n        private final", "entropy": 0.669921875, "is_bug_line": false, "sus_score": 0.44172610429938614, "per_token_entropy": [0.7646484375, 0.55078125, 0.045379638671875, 0.0001360177993774414, 2.5234375, 0.314208984375, 0.8017578125, 0.1724853515625, 0.72802734375, 1.61328125, 1.53515625, 0.01557159423828125, 0.78564453125, 1.68359375, 0.21337890625, 0.0181427001953125, 1.900390625, 0.407958984375, 0.1304931640625, 0.1715087890625, 0.5703125, 0.61181640625, 0.611328125, 7.62939453125e-05, 1.2373046875, 2.54296875, 2.0, 1.078125, 1.904296875, 0.0020084381103515625, 0.0183868408203125, 0.168701171875, 0.6044921875, 0.6474609375, 0.31689453125, 0.01505279541015625, 0.215087890625, 0.014404296875, 0.0033054351806640625, 0.0003383159637451172, 0.162109375, 3.646484375, 1.419921875, 0.004375457763671875, 0.495361328125, 0.95947265625, 0.8125, 0.369140625, 0.0007390975952148438, 0.0030422210693359375, 0.0151824951171875, 0.019439697265625], "tokens": [284, 1022, 275, 319, 399, 13689, 436, 11708, 312, 2340, 33, 1003, 1600, 275, 569, 284, 907, 443, 39243, 301, 291, 1022, 276, 319, 886, 5257, 372, 793, 276, 569, 291, 945, 1158, 892, 5257, 45, 291, 1022, 276, 319, 886, 2340, 33, 1003, 1600, 372, 739, 276, 569, 291, 945, 1158]}
{"line_number": 287, "line_type": "original", "code": "            strategy.setCalendar(this, cal, matcher.group(i));", "entropy": 2.224609375, "is_bug_line": false, "sus_score": 0.44172610429938614, "per_token_entropy": [7.62890625, 5.4140625, 1.2421875, 1.7802734375, 3.27734375, 2.490234375, 6.16796875, 0.9814453125, 1.0751953125, 0.31005859375, 0.759765625, 1.4384765625, 0.2313232421875, 0.163330078125, 1.25390625, 1.39453125], "tokens": [1468, 13689, 32, 470, 9389, 26, 578, 30, 2182, 30, 20638, 32, 1363, 26, 91, 876]}
{"line_number": 287, "line_type": "generated", "code": "\n     * <p>\n     * <code>Strategy</code> is a strategy class used by the {@link DateFormatSymbols}\n     * class to parse the date format patterns.\n     * </p>\n     *\n     * @author <NAME>\n    ", "entropy": 0.6611328125, "is_bug_line": false, "sus_score": 0.44172610429938614, "per_token_entropy": [0.5517578125, 0.517578125, 2.90234375, 0.09149169921875, 0.023590087890625, 0.5703125, 0.0001709461212158203, 3.70703125, 0.4072265625, 0.060211181640625, 0.3173828125, 0.01165771484375, 0.0004811286926269531, 0.001129150390625, 1.669921875, 1.0341796875, 0.9013671875, 1.9912109375, 1.8740234375, 0.51171875, 1.306640625, 1.42578125, 0.01325225830078125, 2.029296875, 0.49658203125, 0.58447265625, 0.1253662109375, 0.869140625, 0.0014514923095703125, 0.70751953125, 0.07647705078125, 0.837890625, 1.1796875, 0.900390625, 1.6318359375, 1.58203125, 0.288330078125, 0.26318359375, 0.059356689453125, 0.4814453125, 0.0003039836883544922, 0.004749298095703125, 0.160888671875, 0.225830078125, 0.52734375, 0.039825439453125, 0.1531982421875, 0.96923828125, 0.151123046875, 0.0208740234375, 0.0087127685546875, 0.11041259765625], "tokens": [275, 319, 333, 98, 48, 275, 319, 333, 687, 48, 8089, 377, 687, 48, 438, 312, 13689, 443, 1654, 810, 322, 3088, 1204, 2821, 2207, 19898, 111, 275, 319, 443, 372, 3185, 322, 2340, 2179, 15103, 32, 275, 319, 576, 98, 48, 275, 319, 275, 319, 477, 2116, 333, 2474, 48, 275]}
{"line_number": 288, "line_type": "original", "code": "        }", "entropy": 5.328125, "is_bug_line": false, "sus_score": 0.44172610429938614, "per_token_entropy": [6.04296875, 4.6171875], "tokens": [351, 320]}
{"line_number": 288, "line_type": "generated", "code": "\n     */\n    static class KeyValue {\n        private final String key;\n        private final String value;\n\n        KeyValue(String key, String value) {\n            this.key= key;\n            this.value= value;\n        }\n\n        /**\n         * @", "entropy": 0.219482421875, "is_bug_line": false, "sus_score": 0.44172610429938614, "per_token_entropy": [0.231201171875, 0.4248046875, 0.0118865966796875, 2.005859375, 0.148681640625, 1.677734375, 0.073974609375, 0.1119384765625, 0.225830078125, 0.83837890625, 0.59521484375, 0.25830078125, 0.076171875, 0.0271759033203125, 0.050689697265625, 0.006511688232421875, 0.035888671875, 0.267333984375, 0.052581787109375, 0.0016469955444335938, 0.470703125, 1.208984375, 1.2159347534179688e-05, 0.003231048583984375, 0.07513427734375, 0.03399658203125, 0.0070953369140625, 0.00763702392578125, 0.005573272705078125, 0.01499176025390625, 0.0016050338745117188, 0.01103973388671875, 0.3310546875, 0.0001798868179321289, 0.00209808349609375, 0.053436279296875, 0.04266357421875, 0.0240020751953125, 0.0017452239990234375, 0.0017871856689453125, 3.826618194580078e-05, 5.4836273193359375e-05, 0.00411224365234375, 0.009674072265625, 0.002658843994140625, 0.006931304931640625, 0.00022041797637939453, 0.144775390625, 1.115234375, 0.033935546875, 0.00010216236114501953, 0.6787109375], "tokens": [275, 569, 284, 907, 443, 3891, 882, 301, 291, 945, 1158, 892, 1202, 45, 291, 945, 1158, 892, 786, 45, 584, 3891, 882, 26, 652, 1202, 30, 892, 786, 27, 301, 324, 458, 32, 678, 47, 1202, 45, 324, 458, 32, 853, 47, 786, 45, 291, 320, 584, 1022, 276, 319, 477]}
{"line_number": 289, "line_type": "original", "code": "        pos.setIndex(offset+matcher.end());", "entropy": 2.259765625, "is_bug_line": false, "sus_score": 0.44172610429938614, "per_token_entropy": [6.8984375, 16.125, 1.41015625, 0.06396484375, 9.071826934814453e-05, 0.005641937255859375, 0.77978515625, 0.6767578125, 0.9951171875, 0.00594329833984375, 0.050018310546875, 0.11749267578125], "tokens": [351, 3400, 32, 470, 1284, 26, 2881, 29, 16937, 32, 416, 1035]}
{"line_number": 289, "line_type": "generated", "code": "\n    private static class KeyValue {\n        /**\n         * The key\n         */\n        private final String key;\n        /**\n         * The value\n         */\n        private final String value;\n\n        /**\n         * Create a new KeyValue\n         * @param key The key\n        ", "entropy": 0.300048828125, "is_bug_line": false, "sus_score": 0.44172610429938614, "per_token_entropy": [0.2352294921875, 0.51416015625, 0.10211181640625, 0.193603515625, 1.8857421875, 0.06732177734375, 0.12078857421875, 0.248779296875, 1.4169921875, 1.7431640625, 8.296966552734375e-05, 0.62060546875, 0.6064453125, 0.294921875, 0.0009179115295410156, 0.0280914306640625, 0.250244140625, 0.74365234375, 0.341064453125, 0.0294952392578125, 0.00457763671875, 0.151123046875, 0.0013513565063476562, 0.00628662109375, 0.00025534629821777344, 0.0118408203125, 0.0875244140625, 0.03472900390625, 0.0001251697540283203, 0.0016307830810546875, 0.0028057098388671875, 0.035614013671875, 0.2232666015625, 0.01540374755859375, 0.0007772445678710938, 0.4482421875, 0.0809326171875, 0.00494384765625, 0.0018329620361328125, 1.1591796875, 0.09442138671875, 0.08502197265625, 2.294921875, 0.211669921875, 0.84814453125, 0.0193939208984375, 0.02685546875, 0.0001214742660522461, 0.024322509765625, 0.1312255859375, 0.0772705078125, 0.06951904296875], "tokens": [284, 945, 907, 443, 3891, 882, 301, 291, 1022, 276, 319, 886, 1202, 276, 569, 291, 945, 1158, 892, 1202, 45, 291, 1022, 276, 319, 886, 786, 276, 569, 291, 945, 1158, 892, 786, 45, 584, 1022, 276, 319, 2648, 312, 537, 3891, 882, 276, 319, 477, 753, 1202, 886, 1202, 276]}
{"line_number": 290, "line_type": "original", "code": "        return cal.getTime();", "entropy": 3.6484375, "is_bug_line": false, "sus_score": 0.44172610429938614, "per_token_entropy": [3.841796875, 10.375, 6.859375, 0.7626953125, 0.0273590087890625, 0.0230560302734375], "tokens": [351, 442, 2182, 32, 11957, 473]}
{"line_number": 290, "line_type": "generated", "code": "\n    }\n\n    /**\n     * A strategy for parsing a field\n     */\n    private static abstract class Strategy {\n        /** The calendar field */\n        private final int calendarField;\n        /** The strftime pattern */\n        private final String pattern;\n        /** The strftime", "entropy": 0.493408203125, "is_bug_line": false, "sus_score": 0.44172610429938614, "per_token_entropy": [0.87353515625, 0.01421356201171875, 0.365478515625, 0.138427734375, 0.01397705078125, 0.001033782958984375, 0.80908203125, 0.8076171875, 1.328125, 0.320556640625, 0.6220703125, 1.021484375, 0.83349609375, 0.056640625, 0.00807952880859375, 0.13623046875, 0.35791015625, 0.814453125, 0.001331329345703125, 0.0022563934326171875, 0.1500244140625, 0.89208984375, 0.48095703125, 1.24609375, 2.03125, 0.301025390625, 0.59033203125, 0.034149169921875, 0.30078125, 0.359130859375, 0.027069091796875, 0.20361328125, 0.001850128173828125, 0.00445556640625, 0.463623046875, 0.0178680419921875, 0.108154296875, 4.0625, 0.364013671875, 1.78515625, 0.2205810546875, 0.01029205322265625, 0.0126495361328125, 0.061279296875, 0.05938720703125, 0.46435546875, 0.0222625732421875, 0.386962890625, 0.018463134765625, 0.2293701171875, 2.0625, 0.155029296875], "tokens": [284, 320, 446, 1022, 275, 319, 399, 13689, 436, 11708, 312, 1600, 275, 569, 284, 945, 907, 5547, 443, 39243, 301, 291, 1022, 886, 14461, 1600, 569, 291, 945, 1158, 629, 14461, 1176, 45, 291, 1022, 886, 596, 17845, 5257, 569, 291, 945, 1158, 892, 5257, 45, 291, 1022, 886, 596, 17845]}
{"line_number": 250, "line_type": "original", "code": "        Date date= parse(source, new ParsePosition(0));", "entropy": 1.9052734375, "is_bug_line": false, "sus_score": 0.4364357804719848, "per_token_entropy": [3.353515625, 6.88671875, 5.1171875, 0.281982421875, 2.896484375, 1.00390625, 2.896484375, 1.2392578125, 2.765625, 0.060546875, 1.7881393432617188e-05, 0.0027008056640625, 0.135986328125, 0.0296630859375], "tokens": [351, 2821, 2340, 47, 3185, 26, 1855, 30, 537, 8661, 2731, 26, 34, 876]}
{"line_number": 250, "line_type": "generated", "code": "\n     */\n    private void appendPattern(StringBuilder regex, String value) {\n        for(int i=0; i<value.length(); ++i) {\n            char ch= value.charAt(i);\n            switch(ch) {\n                case '.", "entropy": 0.2056884765625, "is_bug_line": false, "sus_score": 0.4364357804719848, "per_token_entropy": [0.399658203125, 0.1180419921875, 0.019378662109375, 0.34423828125, 0.474365234375, 1.1728515625, 1.4326171875, 0.0625, 0.1749267578125, 0.004993438720703125, 0.0012874603271484375, 0.5859375, 0.0158843994140625, 0.039581298828125, 0.006847381591796875, 0.044403076171875, 1.5712890625, 0.277587890625, 0.0863037109375, 0.06036376953125, 0.00447845458984375, 0.06573486328125, 0.03106689453125, 0.13671875, 0.0294952392578125, 0.01763916015625, 9.739398956298828e-05, 0.00012886524200439453, 0.0046234130859375, 0.98193359375, 0.0007338523864746094, 0.00815582275390625, 0.001949310302734375, 0.0180511474609375, 0.04638671875, 0.334716796875, 0.0176849365234375, 0.060791015625, 4.303455352783203e-05, 3.1828880310058594e-05, 6.186962127685547e-05, 0.00011563301086425781, 0.00054168701171875, 0.056915283203125, 0.69482421875, 0.05975341796875, 0.004169464111328125, 0.005397796630859375, 0.0024890899658203125, 0.337158203125, 0.045166015625, 0.8359375], "tokens": [275, 569, 284, 945, 763, 5489, 5516, 26, 20884, 9667, 30, 892, 786, 27, 301, 291, 436, 26, 410, 595, 47, 34, 45, 595, 46, 853, 32, 1322, 473, 3311, 91, 27, 301, 324, 1351, 663, 47, 786, 32, 15611, 26, 91, 293, 324, 3578, 26, 380, 27, 301, 400, 1135, 5608]}
{"line_number": 251, "line_type": "original", "code": "        if(date==null) {", "entropy": 2.306640625, "is_bug_line": false, "sus_score": 0.4364357804719848, "per_token_entropy": [3.0859375, 2.17578125, 0.9736328125, 7.0, 4.17578125, 0.59423828125, 0.33056640625, 0.123046875], "tokens": [351, 415, 26, 770, 379, 1693, 27, 301]}
{"line_number": 251, "line_type": "generated", "code": "\n     */\n    private static void appendPattern(StringBuilder regex, String value, boolean unquote) {\n        if(value==null) {\n            throw new IllegalArgumentException(\"Value must not be null\");\n        }\n        int i= 0;\n        int length=", "entropy": 0.32666015625, "is_bug_line": false, "sus_score": 0.4364357804719848, "per_token_entropy": [0.4814453125, 0.1900634765625, 0.018951416015625, 0.36181640625, 0.98974609375, 0.04779052734375, 1.185546875, 1.33984375, 0.0229949951171875, 0.1302490234375, 0.002803802490234375, 0.000881195068359375, 0.15869140625, 0.007015228271484375, 0.0141754150390625, 0.0416259765625, 0.01299285888671875, 0.0030994415283203125, 0.021392822265625, 0.0073699951171875, 0.055694580078125, 1.8779296875, 0.2210693359375, 0.275146484375, 0.83544921875, 0.024871826171875, 0.0982666015625, 0.0095367431640625, 0.0284423828125, 1.2099609375, 0.0025920867919921875, 0.313720703125, 0.0760498046875, 1.521484375, 0.25634765625, 0.005828857421875, 0.0008544921875, 0.00545501708984375, 0.03094482421875, 0.01404571533203125, 0.004413604736328125, 0.122802734375, 0.6220703125, 2.212890625, 0.234619140625, 0.884765625, 0.0019273757934570312, 0.05078125, 0.0254669189453125, 0.151611328125, 0.75439453125, 0.0169525146484375], "tokens": [275, 569, 284, 945, 907, 763, 5489, 5516, 26, 20884, 9667, 30, 892, 786, 30, 1905, 707, 7345, 27, 301, 291, 415, 26, 853, 379, 1693, 27, 301, 324, 1422, 537, 12137, 440, 882, 2298, 646, 526, 744, 724, 291, 320, 291, 629, 595, 47, 225, 34, 45, 291, 629, 3104, 47]}
{"line_number": 276, "line_type": "original", "code": "        int offset= pos.getIndex();", "entropy": 3.478515625, "is_bug_line": false, "sus_score": 0.43133109281375365, "per_token_entropy": [5.4375, 8.6953125, 4.61328125, 0.1488037109375, 7.2734375, 1.3125, 0.12359619140625, 0.219482421875], "tokens": [351, 629, 3401, 47, 3400, 32, 27829, 473]}
{"line_number": 276, "line_type": "generated", "code": "\n            }\n            regex.append(c);\n        }\n        return regex;\n    }\n\n    /**\n     * Escape constant fields into regular expression\n     * @param regex The destination regex\n     * @param value The source field\n     * @return The <code>", "entropy": 0.1339111328125, "is_bug_line": false, "sus_score": 0.43133109281375365, "per_token_entropy": [0.8525390625, 0.242919921875, 0.1292724609375, 0.00972747802734375, 0.0011091232299804688, 0.00010824203491210938, 0.1654052734375, 0.0041961669921875, 0.0008864402770996094, 0.01267242431640625, 0.00063323974609375, 0.0272369384765625, 0.005794525146484375, 0.0003025531768798828, 0.0011720657348632812, 0.00827789306640625, 0.0008449554443359375, 0.197265625, 0.1949462890625, 0.01221466064453125, 9.40561294555664e-05, 2.26953125, 0.036865234375, 0.33251953125, 0.06280517578125, 0.0975341796875, 0.6943359375, 0.021636962890625, 0.1856689453125, 0.0011415481567382812, 0.037322998046875, 0.004070281982421875, 0.44677734375, 0.0180511474609375, 0.10321044921875, 0.01554107666015625, 0.01560211181640625, 0.0004992485046386719, 0.001964569091796875, 0.0222930908203125, 0.311767578125, 0.007663726806640625, 0.0146484375, 0.033660888671875, 0.011016845703125, 0.0016736984252929688, 0.0019588470458984375, 0.301513671875, 0.006252288818359375, 0.040283203125, 0.0006351470947265625, 9.202957153320312e-05], "tokens": [324, 320, 324, 9667, 32, 1689, 26, 85, 293, 291, 320, 291, 442, 9667, 45, 284, 320, 446, 1022, 275, 319, 516, 10946, 8082, 3829, 1991, 10605, 6101, 275, 319, 477, 753, 9667, 886, 8050, 9667, 275, 319, 477, 753, 786, 886, 1914, 1600, 275, 319, 477, 601, 886, 333, 687, 48]}
{"line_number": 277, "line_type": "original", "code": "        Matcher matcher= parsePattern.matcher(source.substring(offset));", "entropy": 2.23828125, "is_bug_line": false, "sus_score": 0.43133109281375365, "per_token_entropy": [5.84765625, 12.8515625, 1.3642578125, 0.293701171875, 5.27734375, 0.0782470703125, 0.023101806640625, 0.0006227493286132812, 0.092529296875, 3.009765625, 3.330078125, 0.3232421875, 0.0032901763916015625, 0.82666015625, 0.247802734375], "tokens": [351, 33128, 20638, 47, 3185, 5516, 32, 16937, 26, 1855, 32, 8723, 26, 2881, 876]}
{"line_number": 277, "line_type": "generated", "code": "\n            }\n            regex.append(c);\n        }\n        return regex;\n    }\n\n    /**\n     * Escape constant fields into regular expression\n     * @param regex The destination regex\n     * @param value The source field\n     * @return The <code>", "entropy": 0.13427734375, "is_bug_line": false, "sus_score": 0.43133109281375365, "per_token_entropy": [0.8623046875, 0.27490234375, 0.133544921875, 0.009063720703125, 0.00109100341796875, 9.763240814208984e-05, 0.1468505859375, 0.0033321380615234375, 0.000736236572265625, 0.01226043701171875, 0.0005712509155273438, 0.0269317626953125, 0.005443572998046875, 0.00025653839111328125, 0.0009670257568359375, 0.006610870361328125, 0.0007920265197753906, 0.1773681640625, 0.18994140625, 0.0118560791015625, 7.724761962890625e-05, 2.259765625, 0.03680419921875, 0.3046875, 0.061798095703125, 0.099609375, 0.78515625, 0.02142333984375, 0.1805419921875, 0.0009937286376953125, 0.029083251953125, 0.004032135009765625, 0.409912109375, 0.016998291015625, 0.09014892578125, 0.0153045654296875, 0.014892578125, 0.0005984306335449219, 0.0016727447509765625, 0.0226287841796875, 0.31494140625, 0.00792694091796875, 0.01531219482421875, 0.03619384765625, 0.01068115234375, 0.0018625259399414062, 0.001651763916015625, 0.32666015625, 0.006389617919921875, 0.040283203125, 0.0004699230194091797, 8.71419906616211e-05], "tokens": [324, 320, 324, 9667, 32, 1689, 26, 85, 293, 291, 320, 291, 442, 9667, 45, 284, 320, 446, 1022, 275, 319, 516, 10946, 8082, 3829, 1991, 10605, 6101, 275, 319, 477, 753, 9667, 886, 8050, 9667, 275, 319, 477, 753, 786, 886, 1914, 1600, 275, 319, 477, 601, 886, 333, 687, 48]}
{"line_number": 278, "line_type": "original", "code": "        if(!matcher.lookingAt()) {", "entropy": 2.529296875, "is_bug_line": false, "sus_score": 0.43133109281375365, "per_token_entropy": [5.92578125, 4.734375, 3.5546875, 5.67578125, 0.037689208984375, 2.58203125, 0.00015354156494140625, 0.1365966796875, 0.1146240234375], "tokens": [351, 415, 3836, 16937, 32, 44535, 1076, 1157, 301]}
{"line_number": 278, "line_type": "generated", "code": "\n                break;\n            default:\n                break;\n            }\n            regex.append(c);\n        }\n        return regex;\n    }\n\n    /**\n     * Add a strategy to the chain.\n     * @param strategy The strategy to add\n     */\n    public void add", "entropy": 0.32568359375, "is_bug_line": false, "sus_score": 0.43133109281375365, "per_token_entropy": [0.82568359375, 0.3701171875, 0.0012388229370117188, 0.0443115234375, 1.2861328125, 0.00714874267578125, 0.0811767578125, 0.4189453125, 0.0006046295166015625, 0.0249176025390625, 0.005096435546875, 0.082275390625, 0.00962066650390625, 0.0014019012451171875, 0.00011479854583740234, 0.2197265625, 0.004302978515625, 0.001163482666015625, 0.014892578125, 0.0008587837219238281, 0.03607177734375, 0.005359649658203125, 0.0002887248992919922, 0.00124359130859375, 0.00856781005859375, 0.0009965896606445312, 0.2159423828125, 0.212646484375, 0.01190948486328125, 6.949901580810547e-05, 3.0078125, 0.60498046875, 0.84619140625, 0.69287109375, 0.35498046875, 2.205078125, 0.8076171875, 0.11029052734375, 0.0030040740966796875, 0.345703125, 0.00836944580078125, 0.2318115234375, 0.354736328125, 0.250244140625, 0.314208984375, 0.149169921875, 0.45458984375, 0.64013671875, 0.00481414794921875, 1.5810546875, 0.0662841796875, 0.0035533905029296875], "tokens": [400, 1626, 45, 324, 1244, 44, 400, 1626, 45, 324, 320, 324, 9667, 32, 1689, 26, 85, 293, 291, 320, 291, 442, 9667, 45, 284, 320, 446, 1022, 275, 319, 2222, 312, 13689, 372, 322, 8241, 32, 275, 319, 477, 753, 13689, 886, 13689, 372, 1015, 275, 569, 284, 562, 763, 1015]}
{"line_number": 379, "line_type": "original", "code": "                Calendar c = Calendar.getInstance(locale);", "entropy": 1.958984375, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [8.015625, 8.6484375, 1.5, 0.458251953125, 0.64697265625, 0.00559234619140625, 0.002475738525390625, 0.1986083984375, 0.0989990234375, 0.0234832763671875], "tokens": [2071, 16600, 281, 280, 16600, 32, 7426, 26, 6921, 293]}
{"line_number": 379, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Copy the short values into the key / value pairs\n     * @param fieldKeyValues The field key / value pairs\n     * @param index The index into the key / value pairs\n     * @param shortValues The short values\n    ", "entropy": 0.47998046875, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [0.4013671875, 0.08856201171875, 0.1298828125, 0.642578125, 0.0066375732421875, 0.00040149688720703125, 0.53662109375, 1.4150390625, 2.744140625, 0.64892578125, 0.62158203125, 0.168701171875, 1.2197265625, 1.306640625, 0.03656005859375, 0.75732421875, 0.5146484375, 0.014862060546875, 0.031036376953125, 0.0012664794921875, 0.70166015625, 0.0318603515625, 0.0018968582153320312, 0.10919189453125, 2.359375, 0.1807861328125, 0.1466064453125, 0.05517578125, 0.229248046875, 0.29248046875, 8.082389831542969e-05, 0.00018095970153808594, 0.004741668701171875, 2.869140625, 0.0733642578125, 0.9892578125, 1.12109375, 0.2489013671875, 1.205078125, 0.1307373046875, 0.015594482421875, 0.2587890625, 0.460693359375, 7.140636444091797e-05, 0.0004291534423828125, 0.0013427734375, 0.32177734375, 0.05792236328125, 0.032562255859375, 0.79150390625, 0.272216796875, 0.70947265625], "tokens": [284, 320, 446, 1022, 275, 319, 2389, 322, 4504, 2078, 1991, 322, 1202, 517, 786, 11847, 275, 319, 477, 753, 1600, 953, 3354, 886, 1600, 1202, 517, 786, 11847, 275, 319, 477, 753, 1650, 886, 1650, 1991, 322, 1202, 517, 786, 11847, 275, 319, 477, 753, 4504, 3354, 886, 4504, 2078, 275]}
{"line_number": 381, "line_type": "original", "code": "                String[] shortEras = toArray(c.getDisplayNames(Calendar.ERA, Calendar.SHORT, locale));", "entropy": 0.6279296875, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [8.4375, 4.2109375, 0.321044921875, 1.2548828125, 0.302001953125, 0.00263214111328125, 0.10369873046875, 0.90478515625, 0.0008454322814941406, 0.0078582763671875, 0.071044921875, 0.004772186279296875, 0.00824737548828125, 6.794929504394531e-06, 0.003383636474609375, 0.00872802734375, 0.004589080810546875, 8.559226989746094e-05, 0.0011625289916992188, 0.00893402099609375, 0.0010433197021484375, 0.004352569580078125, 0.0014200210571289062, 0.03228759765625, 0.005138397216796875], "tokens": [2071, 892, 1178, 4504, 55, 12792, 280, 372, 1261, 26, 85, 32, 47104, 4109, 26, 9389, 32, 26260, 30, 16600, 32, 15456, 30, 11259, 876]}
{"line_number": 381, "line_type": "generated", "code": "\n\n    /**\n     * Copy key / value pairs from an array\n     * @param fieldKeyValues The array to copy into\n     * @param from The array to copy from\n     * @param shortValues The optional allowable short names for a field\n     * @", "entropy": 0.41357421875, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [1.2294921875, 0.46142578125, 0.009307861328125, 0.0002899169921875, 0.86083984375, 2.330078125, 0.2802734375, 0.08331298828125, 0.02703857421875, 1.0556640625, 2.5703125, 0.130126953125, 0.84228515625, 0.007183074951171875, 0.015716552734375, 0.0007123947143554688, 1.3798828125, 0.0633544921875, 0.0019159317016601562, 0.151123046875, 0.96630859375, 0.29052734375, 0.69677734375, 0.814453125, 0.0224151611328125, 5.316734313964844e-05, 0.00010263919830322266, 0.002017974853515625, 2.486328125, 0.4462890625, 1.0595703125, 0.1680908203125, 0.033203125, 0.30810546875, 0.038787841796875, 0.00037479400634765625, 0.0010137557983398438, 0.1724853515625, 1.0986328125, 0.11090087890625, 0.455078125, 0.342529296875, 0.371337890625, 0.0001513957977294922, 0.004367828369140625, 0.011749267578125, 0.017852783203125, 0.01201629638671875, 0.0012121200561523438, 0.0252838134765625, 0.035247802734375, 0.0011625289916992188], "tokens": [446, 1022, 275, 319, 2389, 1202, 517, 786, 11847, 645, 600, 1417, 275, 319, 477, 753, 1600, 953, 3354, 886, 1417, 372, 1933, 1991, 275, 319, 477, 753, 645, 886, 1417, 372, 1933, 645, 275, 319, 477, 753, 4504, 3354, 886, 5302, 2608, 444, 4504, 4467, 436, 312, 1600, 275, 319, 477]}
{"line_number": 382, "line_type": "original", "code": "                String[] longEras = toArray(c.getDisplayNames(Calendar.ERA, Calendar.LONG, locale));", "entropy": 0.85693359375, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [7.80859375, 7.3828125, 0.29150390625, 0.9970703125, 3.21875, 0.0145263671875, 0.1571044921875, 1.2353515625, 0.0016689300537109375, 0.01514434814453125, 0.09375, 0.007373809814453125, 0.01219940185546875, 1.7404556274414062e-05, 0.00408935546875, 0.0207061767578125, 0.0022125244140625, 0.00019800662994384766, 0.0030193328857421875, 0.0254058837890625, 0.0002923011779785156, 0.0036029815673828125, 0.0071563720703125, 0.10369873046875, 0.0174407958984375], "tokens": [2071, 892, 1178, 1946, 55, 12792, 280, 372, 1261, 26, 85, 32, 47104, 4109, 26, 9389, 32, 26260, 30, 16600, 32, 10129, 30, 11259, 876]}
{"line_number": 382, "line_type": "generated", "code": "\n     * Copy key / value pairs into the array\n     * @param fieldKeyValues The array to copy into\n     * @param offset The offset into the array to start copying\n     * @param longValues The long names for the field\n     * @param short", "entropy": 0.434814453125, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [0.94091796875, 0.28857421875, 0.440185546875, 1.9345703125, 0.29296875, 0.0875244140625, 0.022430419921875, 1.2294921875, 2.064453125, 0.98193359375, 0.35546875, 0.019989013671875, 0.028533935546875, 0.0011501312255859375, 1.041015625, 0.051239013671875, 0.0014896392822265625, 0.0908203125, 0.45361328125, 0.489990234375, 0.92626953125, 0.385498046875, 0.029022216796875, 0.0001533031463623047, 0.0001876354217529297, 0.0016689300537109375, 2.23046875, 0.086181640625, 0.424560546875, 0.94677734375, 0.07135009765625, 0.1072998046875, 0.3818359375, 0.63232421875, 0.393798828125, 0.5615234375, 0.00011730194091796875, 0.0008664131164550781, 0.0011920928955078125, 1.037109375, 0.11590576171875, 0.060577392578125, 1.087890625, 0.6328125, 0.87158203125, 0.31689453125, 0.386474609375, 0.075927734375, 0.000453948974609375, 0.0005888938903808594, 0.0235748291015625, 0.002285003662109375], "tokens": [275, 319, 2389, 1202, 517, 786, 11847, 1991, 322, 1417, 275, 319, 477, 753, 1600, 953, 3354, 886, 1417, 372, 1933, 1991, 275, 319, 477, 753, 3401, 886, 3401, 1991, 322, 1417, 372, 1477, 19402, 275, 319, 477, 753, 1946, 3354, 886, 1946, 4467, 436, 322, 1600, 275, 319, 477, 753, 4504]}
{"line_number": 383, "line_type": "original", "code": "                fieldKeyValues= createKeyValues(longEras, shortEras);", "entropy": 1.5986328125, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [7.51171875, 7.5546875, 0.86572265625, 0.0040283203125, 0.80224609375, 0.72705078125, 0.011688232421875, 0.0003771781921386719, 0.026336669921875, 3.07421875, 6.0078125, 0.022735595703125, 0.02813720703125, 0.51171875, 0.0024585723876953125, 0.00151824951171875, 0.016357421875], "tokens": [2071, 1600, 953, 3354, 47, 1487, 953, 3354, 26, 3222, 55, 12792, 30, 4504, 55, 12792, 293]}
{"line_number": 383, "line_type": "generated", "code": "\n     * @param values The array of values to count\n     * @return The count of valid values\n     */\n    private static int count(String[] values) {\n        int count= 0;\n        if(values!=null) {\n            for(String", "entropy": 0.190673828125, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [0.525390625, 0.6416015625, 0.055023193359375, 0.006847381591796875, 0.66162109375, 0.2490234375, 0.4736328125, 0.75439453125, 0.33203125, 0.9052734375, 0.96337890625, 0.12286376953125, 0.00643157958984375, 0.0004754066467285156, 0.002925872802734375, 0.08770751953125, 0.435791015625, 0.11181640625, 0.419677734375, 0.0802001953125, 0.54541015625, 0.006275177001953125, 0.006656646728515625, 0.11846923828125, 0.00250244140625, 0.023223876953125, 0.0003466606140136719, 0.00446319580078125, 0.050537109375, 0.047210693359375, 0.0011463165283203125, 0.0030670166015625, 0.0024871826171875, 0.05841064453125, 0.296630859375, 0.313720703125, 0.250732421875, 0.31201171875, 0.0001710653305053711, 0.0015468597412109375, 0.02313232421875, 0.472412109375, 0.0758056640625, 0.007198333740234375, 0.0850830078125, 0.0142669677734375, 0.02001953125, 0.0031833648681640625, 0.0231170654296875, 0.0701904296875, 0.04730224609375, 0.192138671875], "tokens": [275, 319, 477, 753, 2078, 886, 1417, 432, 2078, 372, 2385, 275, 319, 477, 601, 886, 2385, 432, 2080, 2078, 275, 569, 284, 945, 907, 629, 2385, 26, 652, 1178, 2078, 27, 301, 291, 629, 2385, 47, 225, 34, 45, 291, 415, 26, 2810, 6901, 1693, 27, 301, 324, 436, 26, 652]}
{"line_number": 384, "line_type": "original", "code": "                break;", "entropy": 5.19921875, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [6.55859375, 9.015625, 0.0292816162109375], "tokens": [2071, 1626, 45]}
{"line_number": 384, "line_type": "generated", "code": "        return 0;", "entropy": 0.77978515625, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [1.958984375, 0.7470703125, 1.15234375, 0.008575439453125, 0.03173828125], "tokens": [351, 442, 225, 34, 45]}
{"line_number": 406, "line_type": "original", "code": "        String[] eras = new String[era.size()]; // assume no gaps in entry values", "entropy": 2.599609375, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [4.72265625, 4.65625, 1.1201171875, 4.19921875, 0.00542449951171875, 0.1611328125, 0.3681640625, 0.00180816650390625, 0.04693603515625, 5.70703125, 2.4765625, 1.1884765625, 0.03240966796875, 5.52734375, 4.859375, 2.296875, 4.08203125, 0.0006151199340820312, 1.4736328125, 9.328125, 2.349609375], "tokens": [351, 892, 1178, 5097, 302, 280, 537, 892, 77, 3002, 32, 891, 22086, 434, 10014, 1289, 485, 7333, 328, 3414, 2078]}
{"line_number": 406, "line_type": "generated", "code": "\n        if(values!=null) {\n            for(String value : values) {\n                if(value.length()>0) {\n                    fieldKeyValues[offset++]= new KeyValue(value, value);\n                }\n            }\n        }\n        return offset", "entropy": 0.064208984375, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [0.06805419921875, 0.24951171875, 0.026214599609375, 0.0093231201171875, 0.127685546875, 0.0017271041870117188, 0.0089111328125, 0.0013971328735351562, 0.0194244384765625, 0.11376953125, 0.0226287841796875, 0.1005859375, 0.042388916015625, 0.01861572265625, 0.0013513565063476562, 0.0008077621459960938, 0.0005998611450195312, 0.023590087890625, 0.77685546875, 0.01071929931640625, 0.007549285888671875, 0.03594970703125, 0.0011930465698242188, 0.03662109375, 0.0004687309265136719, 0.0014657974243164062, 0.001331329345703125, 0.031158447265625, 0.07220458984375, 0.00038552284240722656, 3.635883331298828e-05, 0.0018835067749023438, 0.0037555694580078125, 0.3115234375, 0.0190887451171875, 0.07830810546875, 0.01421356201171875, 0.0001068115234375, 0.0199737548828125, 0.07861328125, 0.1683349609375, 0.65283203125, 0.142822265625, 0.0174102783203125, 0.0002689361572265625, 0.005458831787109375, 9.202957153320312e-05, 0.00275421142578125, 0.00018727779388427734, 0.0077056884765625, 0.0015764236450195312, 0.00016307830810546875], "tokens": [291, 415, 26, 2810, 6901, 1693, 27, 301, 324, 436, 26, 652, 786, 499, 2078, 27, 301, 400, 415, 26, 853, 32, 1322, 15365, 34, 27, 301, 528, 1600, 953, 3354, 77, 2881, 1046, 7770, 537, 3891, 882, 26, 853, 30, 786, 293, 400, 320, 324, 320, 291, 320, 291, 442, 3401]}
{"line_number": 407, "line_type": "original", "code": "        for(Map.Entry<String, Integer> me : era.entrySet()) {", "entropy": 1.4072265625, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [8.1171875, 3.982421875, 0.09442138671875, 6.05078125, 0.002655029296875, 0.00011909008026123047, 0.0657958984375, 0.07659912109375, 0.001216888427734375, 0.282958984375, 0.0009121894836425781, 0.0743408203125, 0.0975341796875, 6.3046875, 0.08642578125, 0.0096435546875, 0.0091094970703125, 0.07568359375], "tokens": [351, 436, 26, 1208, 32, 2711, 46, 652, 30, 4401, 48, 597, 499, 34666, 32, 24351, 1157, 301]}
{"line_number": 407, "line_type": "generated", "code": "\n                fieldKeyValues[offset]= new KeyValue(value, value);\n                ++offset;\n            }\n        }\n        return offset;\n    }\n\n    /**\n     * Get the long and short names for a field value\n     * @param field The field of interest", "entropy": 0.354248046875, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [0.69921875, 0.693359375, 0.0011987686157226562, 9.179115295410156e-05, 0.0030803680419921875, 0.131591796875, 2.1796875, 0.09222412109375, 0.01033782958984375, 0.00011897087097167969, 0.022735595703125, 0.9619140625, 0.09521484375, 0.57421875, 0.18896484375, 0.2489013671875, 0.328125, 0.0017719268798828125, 0.0002760887145996094, 0.10205078125, 0.0015201568603515625, 0.029541015625, 0.02288818359375, 0.00811767578125, 0.0020351409912109375, 0.00026297569274902344, 0.0004832744598388672, 0.01934814453125, 0.003833770751953125, 0.60888671875, 0.295654296875, 0.029693603515625, 0.00028896331787109375, 1.3310546875, 0.329833984375, 3.16015625, 1.623046875, 0.212158203125, 0.98291015625, 0.482177734375, 0.298583984375, 0.5849609375, 1.337890625, 0.2242431640625, 0.011627197265625, 0.008636474609375, 0.00565338134765625, 0.061767578125, 0.047149658203125, 0.1058349609375, 0.249755859375, 0.01355743408203125], "tokens": [400, 1600, 953, 3354, 77, 2881, 7770, 537, 3891, 882, 26, 853, 30, 786, 293, 400, 3311, 2881, 45, 324, 320, 291, 320, 291, 442, 3401, 45, 284, 320, 446, 1022, 275, 319, 1390, 322, 1946, 461, 4504, 4467, 436, 312, 1600, 786, 275, 319, 477, 753, 1600, 886, 1600, 432, 10219]}
