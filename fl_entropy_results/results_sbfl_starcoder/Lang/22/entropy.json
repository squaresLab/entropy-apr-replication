{"line_number": 216, "line_type": "original", "code": "            throw new ArithmeticException(\"The denominator must not be zero\");", "entropy": 1.52734375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [4.5546875, 8.2421875, 0.006160736083984375, 0.26025390625, 0.0001672506332397461, 0.359619140625, 2.068359375, 4.3046875, 0.014404296875, 0.01123046875, 0.0026092529296875, 0.0134735107421875, 0.0218658447265625], "tokens": [1468, 1422, 537, 47721, 984, 440, 1318, 39920, 2298, 646, 526, 5934, 724]}
{"line_number": 216, "line_type": "generated", "code": "\n        int numer1 = 1;  // the previous\n        int denom1 = 0;  // the previous\n        int n0 = 1;\n        int n1 = 0;\n        int a = (int) (value * 1", "entropy": 0.189697265625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.484375, 0.4033203125, 0.0723876953125, 0.00901031494140625, 0.00762176513671875, 0.059112548828125, 0.0025615692138671875, 0.00010764598846435547, 0.192138671875, 0.00044345855712890625, 0.005687713623046875, 0.0204925537109375, 0.0171966552734375, 0.0025615692138671875, 0.0012845993041992188, 0.00013899803161621094, 0.0011301040649414062, 0.0008039474487304688, 0.003780364990234375, 1.609325408935547e-05, 0.01165771484375, 0.01177215576171875, 0.0002849102020263672, 0.002017974853515625, 0.259033203125, 0.2286376953125, 1.31640625, 0.4140625, 0.59912109375, 0.01235198974609375, 0.330810546875, 0.00882720947265625, 1.01953125, 0.00989532470703125, 0.3125, 0.0005059242248535156, 0.00681304931640625, 0.1611328125, 0.029022216796875, 0.0003986358642578125, 0.10076904296875, 0.0960693359375, 0.316650390625, 0.42236328125, 0.325439453125, 0.00091552734375, 0.0197906494140625, 1.212890625, 0.029510498046875, 0.01508331298828125, 1.033203125, 0.278564453125], "tokens": [291, 629, 37538, 35, 280, 225, 35, 45, 225, 434, 322, 4552, 291, 629, 24257, 35, 280, 225, 34, 45, 225, 434, 322, 4552, 291, 629, 310, 34, 280, 225, 35, 45, 291, 629, 310, 35, 280, 225, 34, 45, 291, 629, 312, 280, 308, 410, 27, 308, 853, 319, 225, 35]}
{"line_number": 223, "line_type": "original", "code": "            numerator/=2; denominator/=2;", "entropy": 2.845703125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [4.90625, 6.5859375, 0.0421142578125, 7.296875, 2.37109375, 0.08062744140625, 5.4140625, 1.7373046875, 0.00264739990234375, 0.01812744140625], "tokens": [1468, 1929, 11290, 44603, 36, 45, 39920, 44603, 36, 45]}
{"line_number": 223, "line_type": "generated", "code": "\n        int n = 25;\n        do {\n            a2 = (int) (value / x1);\n            x1 = value - a1 * x1;\n            numer2 = a1 * numer1 + numer0;\n            denom2", "entropy": 0.2332763671875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.442138671875, 1.7314453125, 1.869140625, 0.3623046875, 0.039306640625, 0.58740234375, 0.150390625, 0.00803375244140625, 0.86865234375, 1.42578125, 0.037567138671875, 0.1326904296875, 0.27294921875, 0.02142333984375, 0.0035724639892578125, 0.005466461181640625, 0.003803253173828125, 0.0714111328125, 0.10321044921875, 0.2039794921875, 0.3583984375, 0.02105712890625, 1.430511474609375e-05, 0.02166748046875, 0.0423583984375, 0.7900390625, 3.826618194580078e-05, 0.004955291748046875, 0.430419921875, 0.703125, 0.053497314453125, 0.386962890625, 0.31494140625, 0.0012950897216796875, 8.344650268554688e-07, 0.0006957054138183594, 0.322021484375, 0.0058441162109375, 0.01404571533203125, 0.004085540771484375, 0.10516357421875, 0.06103515625, 0.0380859375, 0.0008754730224609375, 0.0002532005310058594, 0.0023555755615234375, 0.0011425018310546875, 1.0728836059570312e-06, 0.00013518333435058594, 0.00980377197265625, 0.099853515625, 1.5974044799804688e-05], "tokens": [291, 629, 310, 280, 225, 36, 39, 45, 291, 745, 301, 324, 312, 36, 280, 308, 410, 27, 308, 853, 517, 816, 35, 293, 324, 816, 35, 280, 786, 429, 312, 35, 319, 816, 35, 45, 324, 37538, 36, 280, 312, 35, 319, 37538, 35, 474, 37538, 34, 45, 324, 24257, 36]}
{"line_number": 226, "line_type": "original", "code": "            if (numerator==Integer.MIN_VALUE ||", "entropy": 1.9140625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [4.51953125, 2.349609375, 0.14013671875, 4.578125, 5.70703125, 1.9111328125, 1.552734375, 0.0006775856018066406, 0.0369873046875, 4.696846008300781e-05, 0.0003426074981689453, 2.16796875], "tokens": [1468, 415, 308, 1516, 11290, 379, 3061, 32, 4683, 81, 5975, 1276]}
{"line_number": 226, "line_type": "generated", "code": "\n        for (int i = 0; i < 25 && denom2!= 1; i++) {\n            a2 = (int) (x1 / y1);\n            x2 = y1;\n            y2 = x1 -", "entropy": 0.1842041015625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.410400390625, 1.8916015625, 0.11767578125, 0.005893707275390625, 0.0562744140625, 0.350341796875, 0.0204010009765625, 1.1884765625, 0.021636962890625, 0.093994140625, 0.2025146484375, 0.260498046875, 0.039398193359375, 0.0017185211181640625, 0.60107421875, 0.429443359375, 0.0006284713745117188, 0.6083984375, 0.08099365234375, 1.1689453125, 0.38427734375, 0.10540771484375, 0.004169464111328125, 0.03076171875, 0.10260009765625, 0.333740234375, 0.02569580078125, 0.002407073974609375, 0.00754547119140625, 0.0047607421875, 0.05255126953125, 0.00893402099609375, 0.53955078125, 0.044342041015625, 0.0140533447265625, 0.0287933349609375, 2.8848648071289062e-05, 0.004718780517578125, 0.037506103515625, 0.248046875, 0.00010216236114501953, 0.00032067298889160156, 0.007598876953125, 9.5367431640625e-06, 0.0005125999450683594, 0.004421234130859375, 0.0002205371856689453, 0.000171661376953125, 0.0006108283996582031, 0.0308074951171875, 1.1920928955078125e-07, 0.001312255859375], "tokens": [291, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 225, 36, 39, 962, 24257, 36, 863, 225, 35, 45, 595, 1987, 301, 324, 312, 36, 280, 308, 410, 27, 308, 106, 35, 517, 533, 35, 293, 324, 816, 36, 280, 533, 35, 45, 324, 533, 36, 280, 816, 35, 429]}
{"line_number": 228, "line_type": "original", "code": "                throw new ArithmeticException(\"overflow: can't negate\");", "entropy": 2.66796875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [7.2578125, 5.49609375, 0.005764007568359375, 0.1015625, 0.00017118453979492188, 0.32568359375, 10.5, 5.32421875, 0.8173828125, 0.08209228515625, 4.078125, 0.001567840576171875, 0.68408203125], "tokens": [2071, 1422, 537, 47721, 984, 440, 9642, 44, 883, 1330, 7528, 332, 724]}
{"line_number": 228, "line_type": "generated", "code": "\n        // check for special cases\n        if (a1 == 0) {\n            return new Fraction(sign * numer1, denom1);\n        }\n        if (wholeNumber!= 0) {\n            return new Fraction(sign * wholeNumber * numer", "entropy": 0.29443359375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.64892578125, 1.5966796875, 0.9736328125, 0.0037841796875, 1.0986328125, 0.35400390625, 0.91796875, 0.08819580078125, 0.037689208984375, 1.0673828125, 0.0033855438232421875, 0.271240234375, 0.10662841796875, 0.0009832382202148438, 0.0287933349609375, 0.017059326171875, 0.1083984375, 0.92431640625, 0.23388671875, 0.0003483295440673828, 0.050537109375, 0.91064453125, 0.1722412109375, 0.185302734375, 1.0185546875, 0.02685546875, 0.0211029052734375, 0.00084686279296875, 0.1907958984375, 0.040008544921875, 0.0005502700805664062, 0.27099609375, 0.60888671875, 0.0158538818359375, 1.3369140625, 1.621246337890625e-05, 0.6123046875, 0.06884765625, 5.352497100830078e-05, 0.023162841796875, 0.00555419921875, 0.0615234375, 0.1275634765625, 0.024658203125, 0.0003464221954345703, 0.052520751953125, 0.1787109375, 0.018585205078125, 0.55419921875, 1.3113021850585938e-06, 0.1986083984375, 0.054290771484375], "tokens": [291, 434, 1505, 436, 7456, 6792, 291, 415, 308, 83, 35, 610, 225, 34, 27, 301, 324, 442, 537, 40823, 26, 1333, 319, 37538, 35, 30, 24257, 35, 293, 291, 320, 291, 415, 308, 34647, 1918, 863, 225, 34, 27, 301, 324, 442, 537, 40823, 26, 1333, 319, 9844, 1918, 319, 37538]}
{"line_number": 230, "line_type": "original", "code": "            numerator = -numerator;", "entropy": 2.45703125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [5.55078125, 6.62109375, 0.068359375, 1.39453125, 5.015625, 0.475830078125, 0.341796875, 0.1922607421875], "tokens": [1468, 1929, 11290, 280, 429, 1516, 11290, 45]}
{"line_number": 230, "line_type": "generated", "code": "\n        while (delta1 > delta2 && denom2 <= 10000) {\n            a2 = (int) (a1 * y1 / y2 + a2);\n            x2 = x1 - a1 * x2", "entropy": 0.1961669921875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.392333984375, 1.8857421875, 0.3876953125, 0.306640625, 0.262451171875, 0.0797119140625, 0.303466796875, 0.00011599063873291016, 0.9443359375, 0.07476806640625, 0.015777587890625, 0.177734375, 0.260498046875, 0.00371551513671875, 0.00020933151245117188, 0.00302886962890625, 0.0003561973571777344, 0.001697540283203125, 0.116943359375, 0.0254364013671875, 0.421630859375, 1.0693359375, 0.0072021484375, 0.00214385986328125, 0.01006317138671875, 0.003009796142578125, 0.0810546875, 0.006839752197265625, 1.3857421875, 5.960464477539062e-07, 0.1907958984375, 0.0140533447265625, 0.00030541419982910156, 0.1124267578125, 0.0291290283203125, 1.430511474609375e-06, 0.448974609375, 0.290771484375, 0.1468505859375, 0.0013942718505859375, 0.10565185546875, 0.1162109375, 0.00772857666015625, 0.00037860870361328125, 0.14794921875, 1.5497207641601562e-06, 0.0021228790283203125, 0.322265625, 0.00991058349609375, 0.0225677490234375, 5.519390106201172e-05, 3.0994415283203125e-06], "tokens": [291, 2218, 308, 6558, 35, 848, 7715, 36, 962, 24257, 36, 2511, 225, 35, 34, 34, 34, 34, 27, 301, 324, 312, 36, 280, 308, 410, 27, 308, 83, 35, 319, 533, 35, 517, 533, 36, 474, 312, 36, 293, 324, 816, 36, 280, 816, 35, 429, 312, 35, 319, 816, 36]}
{"line_number": 231, "line_type": "original", "code": "            denominator = -denominator;", "entropy": 3.703125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [4.9765625, 8.640625, 4.125, 6.76953125, 0.79931640625, 0.1151123046875, 0.4912109375], "tokens": [1468, 39920, 280, 429, 29805, 9693, 45]}
{"line_number": 231, "line_type": "generated", "code": "\n            a2 = (int) (1 / y1);\n            x2 = 1 / y1 - a2;\n            y2 = y1 - a1 * x2;\n            delta2 = delta1;\n            delta1 = Math.", "entropy": 0.171142578125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.41259765625, 1.6796875, 0.11370849609375, 0.00507354736328125, 0.021575927734375, 0.007305145263671875, 0.07958984375, 0.0236053466796875, 1.1396484375, 0.404541015625, 0.030364990234375, 0.1929931640625, 0.01873779296875, 0.1148681640625, 0.397216796875, 0.0001266002655029297, 0.00113677978515625, 0.0992431640625, 0.0015478134155273438, 0.0278167724609375, 0.049591064453125, 0.391845703125, 1.1328125, 0.0018644332885742188, 4.8279762268066406e-05, 0.0015087127685546875, 0.12078857421875, 0.0171356201171875, 6.0439109802246094e-05, 0.0009222030639648438, 0.205810546875, 9.059906005859375e-06, 0.02447509765625, 0.035003662109375, 0.72509765625, 0.01910400390625, 0.0005674362182617188, 0.09442138671875, 0.0008664131164550781, 0.214599609375, 0.40625, 0.5625, 0.0011606216430664062, 0.057952880859375, 1.9073486328125e-06, 4.363059997558594e-05, 0.0253448486328125, 0.0012664794921875, 6.23464584350586e-05, 0.0001342296600341797, 0.0360107421875, 0.00039577484130859375], "tokens": [324, 312, 36, 280, 308, 410, 27, 308, 35, 517, 533, 35, 293, 324, 816, 36, 280, 225, 35, 517, 533, 35, 429, 312, 36, 45, 324, 533, 36, 280, 533, 35, 429, 312, 35, 319, 816, 36, 45, 324, 7715, 36, 280, 7715, 35, 45, 324, 7715, 35, 280, 4175, 32]}
{"line_number": 475, "line_type": "original", "code": "        if (numerator == 0) {", "entropy": 0.6240234375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [3.791015625, 1.021484375, 0.047607421875, 0.26171875, 0.0001207590103149414, 0.93115234375, 0.04730224609375, 9.071826934814453e-05, 0.08587646484375, 0.0535888671875], "tokens": [351, 415, 308, 1516, 11290, 610, 225, 34, 27, 301]}
{"line_number": 475, "line_type": "generated", "code": "\n     * \n     * <p>The returned fraction is not reduced.</p>\n     *\n     * @return a new fraction instance, with the opposite signed numerator\n     */\n    public Fraction abs() {\n        return numerator < 0? negate()", "entropy": 0.218505859375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [1.1220703125, 0.03558349609375, 1.3955078125, 0.0003638267517089844, 0.0504150390625, 0.017486572265625, 0.00736236572265625, 0.260009765625, 0.017120361328125, 0.0015106201171875, 0.005130767822265625, 0.0157318115234375, 0.00986480712890625, 0.00571441650390625, 0.0005273818969726562, 0.0016460418701171875, 0.04608154296875, 0.0009441375732421875, 0.10284423828125, 0.00015735626220703125, 0.0028743743896484375, 0.00655364990234375, 0.529296875, 0.00576019287109375, 0.0136871337890625, 0.0147705078125, 1.2236328125, 1.103515625, 0.235595703125, 1.890625, 0.165771484375, 0.266845703125, 8.404254913330078e-05, 0.420654296875, 0.119873046875, 0.050994873046875, 0.01593017578125, 0.0021991729736328125, 0.0606689453125, 0.007244110107421875, 0.0192108154296875, 0.10003662109375, 0.927734375, 0.72900390625, 3.4570693969726562e-06, 0.269775390625, 0.0021419525146484375, 1.5735626220703125e-05, 0.0078582763671875, 0.0662841796875, 5.4836273193359375e-06, 0.0016870498657226562], "tokens": [275, 319, 5384, 319, 333, 98, 48, 1318, 4717, 18795, 438, 646, 22974, 1730, 98, 48, 275, 319, 275, 319, 477, 601, 312, 537, 18795, 1980, 30, 623, 322, 30519, 11280, 1929, 11290, 275, 569, 284, 562, 40823, 11366, 346, 301, 291, 442, 1929, 11290, 333, 225, 34, 1018, 7528, 332, 346]}
{"line_number": 476, "line_type": "original", "code": "            return equals(ZERO) ? this : ZERO;", "entropy": 2.9140625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [6.7734375, 1.6396484375, 8.875, 0.06591796875, 0.60205078125, 0.076904296875, 0.06982421875, 0.400146484375, 0.037200927734375, 11.0625, 2.453125], "tokens": [1468, 442, 12423, 26, 13977, 27, 1018, 458, 499, 20024, 45]}
{"line_number": 476, "line_type": "generated", "code": "\n     *\n     * @return a new fraction instance, with the same numerator but\n     *         an absolute value of the denominator\n     */\n    public Fraction abs() {\n        if (numerator >= 0) {\n            return this;\n        } else {", "entropy": 0.1876220703125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.50390625, 0.275146484375, 0.97216796875, 0.0005192756652832031, 0.892578125, 0.00559234619140625, 0.33056640625, 0.01152801513671875, 0.043914794921875, 0.06402587890625, 0.63330078125, 0.94970703125, 0.0288848876953125, 0.271240234375, 0.280029296875, 1.9431114196777344e-05, 0.60107421875, 0.603515625, 0.0001308917999267578, 0.30224609375, 0.018402099609375, 0.06390380859375, 0.94189453125, 0.211181640625, 0.3349609375, 0.012298583984375, 0.0582275390625, 0.06689453125, 0.0280609130859375, 0.01105499267578125, 0.0012292861938476562, 0.01788330078125, 0.0030765533447265625, 0.007732391357421875, 0.10589599609375, 0.466796875, 0.00902557373046875, 0.02752685546875, 2.2649765014648438e-06, 0.1656494140625, 0.0016813278198242188, 1.2159347534179688e-05, 0.00798797607421875, 0.0006604194641113281, 0.0163421630859375, 0.0048980712890625, 0.00811767578125, 0.0001590251922607422, 0.026580810546875, 0.00012993812561035156, 0.330078125, 0.04071044921875], "tokens": [275, 319, 275, 319, 477, 601, 312, 537, 18795, 1980, 30, 623, 322, 2432, 1929, 11290, 1273, 275, 319, 263, 600, 7976, 786, 432, 322, 39920, 275, 569, 284, 562, 40823, 11366, 346, 301, 291, 415, 308, 1516, 11290, 2377, 225, 34, 27, 301, 324, 442, 458, 45, 291, 320, 813, 301]}
{"line_number": 478, "line_type": "original", "code": "        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);", "entropy": 1.111328125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [5.1015625, 5.92578125, 4.96484375, 0.140869140625, 2.076171875, 0.0015964508056640625, 0.0653076171875, 0.00017178058624267578, 0.0201873779296875, 1.173828125, 0.03802490234375, 0.0002818107604980469, 0.0015897750854492188, 0.0537109375, 0.00556182861328125, 0.0019445419311523438, 0.427734375, 0.006771087646484375], "tokens": [351, 629, 43422, 280, 48299, 5240, 6775, 22306, 26, 5717, 32, 3596, 26, 1516, 11290, 471, 39920, 293]}
{"line_number": 478, "line_type": "generated", "code": "\n     * @return a new fraction instance with the same numerator, but\n     *         an absolute value numerator\n     */\n    public Fraction abs() {\n        if (numerator >= 0) {\n            return this;\n        }\n        return negate();", "entropy": 0.17236328125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.099609375, 0.171630859375, 0.310302734375, 0.005733489990234375, 0.299560546875, 0.0204925537109375, 0.0301971435546875, 0.05517578125, 0.998046875, 0.09735107421875, 0.035980224609375, 0.402099609375, 2.86102294921875e-05, 0.2587890625, 0.63330078125, 0.4609375, 0.0002627372741699219, 0.1236572265625, 0.408203125, 0.10296630859375, 0.51220703125, 0.68994140625, 0.00028634071350097656, 0.302001953125, 0.060302734375, 0.0330810546875, 0.014862060546875, 0.0020427703857421875, 0.0091552734375, 0.00464630126953125, 0.007190704345703125, 0.0810546875, 0.5478515625, 0.015533447265625, 0.057373046875, 2.765655517578125e-05, 0.62890625, 0.001995086669921875, 1.0848045349121094e-05, 0.01025390625, 0.00079345703125, 0.004940032958984375, 0.0034942626953125, 0.0254974365234375, 0.0002913475036621094, 0.0159454345703125, 7.49826431274414e-05, 0.98486328125, 0.0928955078125, 0.337890625, 8.58306884765625e-06, 0.0011091232299804688], "tokens": [275, 319, 477, 601, 312, 537, 18795, 1980, 623, 322, 2432, 1929, 11290, 30, 1273, 275, 319, 263, 600, 7976, 786, 1929, 11290, 275, 569, 284, 562, 40823, 11366, 346, 301, 291, 415, 308, 1516, 11290, 2377, 225, 34, 27, 301, 324, 442, 458, 45, 291, 320, 291, 442, 7528, 332, 473]}
{"line_number": 479, "line_type": "original", "code": "        if (gcd == 1) {", "entropy": 1.84375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [2.5234375, 2.2890625, 0.0693359375, 10.2421875, 0.9921875, 0.07318115234375, 0.077880859375, 0.2435302734375, 0.08905029296875], "tokens": [351, 415, 308, 46060, 610, 225, 35, 27, 301]}
{"line_number": 479, "line_type": "generated", "code": "\n     * @return a new fraction instance with the same numerator, but\n     *         the opposite sign of the denominator\n     */\n    public Fraction abs() {\n        return (numerator >= 0? this : negate());\n    }\n\n    /**\n     *", "entropy": 0.200927734375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [1.3037109375, 0.4296875, 0.107177734375, 0.00856781005859375, 0.3330078125, 0.0181427001953125, 0.0312347412109375, 0.0689697265625, 1.0302734375, 0.0928955078125, 0.0254974365234375, 0.302001953125, 3.123283386230469e-05, 0.25927734375, 0.59228515625, 0.442626953125, 0.00061798095703125, 0.11956787109375, 1.6064453125, 0.445068359375, 0.1209716796875, 0.07244873046875, 0.005645751953125, 0.0004436969757080078, 0.057891845703125, 0.070556640625, 0.0517578125, 0.01374053955078125, 0.0014429092407226562, 0.033966064453125, 0.00368499755859375, 0.01244354248046875, 0.1380615234375, 0.8876953125, 0.41357421875, 0.037872314453125, 1.1801719665527344e-05, 0.34423828125, 0.0022029876708984375, 7.152557373046875e-06, 0.24658203125, 0.0027713775634765625, 0.0042572021484375, 0.263671875, 2.8848648071289062e-05, 0.003475189208984375, 0.0286865234375, 9.047985076904297e-05, 0.15234375, 0.2479248046875, 0.0079193115234375, 2.1219253540039062e-05], "tokens": [275, 319, 477, 601, 312, 537, 18795, 1980, 623, 322, 2432, 1929, 11290, 30, 1273, 275, 319, 263, 322, 30519, 2596, 432, 322, 39920, 275, 569, 284, 562, 40823, 11366, 346, 301, 291, 442, 308, 1516, 11290, 2377, 225, 34, 1018, 458, 499, 7528, 332, 1035, 284, 320, 446, 1022, 275, 319]}
{"line_number": 480, "line_type": "original", "code": "            return this;", "entropy": 4.390625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [5.7890625, 7.26171875, 2.33203125, 2.1796875], "tokens": [1468, 442, 458, 45]}
{"line_number": 480, "line_type": "generated", "code": "\n     */\n    public Fraction abs() {\n        return (numerator >= 0? this : negate());\n    }\n\n    /**\n     * <p>Gets a fraction that is the fraction multiplied by the specified\n     * multiplier.</p>\n     *\n    ", "entropy": 0.19140625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.470458984375, 0.0816650390625, 0.0184783935546875, 0.01229095458984375, 0.0022411346435546875, 0.0164031982421875, 0.0032100677490234375, 0.0137176513671875, 0.1627197265625, 0.67041015625, 0.300048828125, 0.032196044921875, 1.1444091796875e-05, 0.3603515625, 0.00365447998046875, 1.1563301086425781e-05, 0.27978515625, 0.003902435302734375, 0.00469970703125, 0.463623046875, 5.0902366638183594e-05, 0.004077911376953125, 0.02984619140625, 4.7087669372558594e-05, 0.1209716796875, 0.181884765625, 0.01053619384765625, 2.753734588623047e-05, 0.058868408203125, 7.665157318115234e-05, 0.0004515647888183594, 0.72509765625, 0.215087890625, 0.0132904052734375, 0.45068359375, 0.01155853271484375, 0.1033935546875, 0.904296875, 1.021484375, 7.748603820800781e-05, 0.0019025802612304688, 0.00885772705078125, 0.53955078125, 0.483154296875, 1.2993812561035156e-05, 1.4462890625, 0.10784912109375, 0.00010657310485839844, 0.0014581680297851562, 0.00724029541015625, 8.738040924072266e-05, 0.6025390625], "tokens": [275, 569, 284, 562, 40823, 11366, 346, 301, 291, 442, 308, 1516, 11290, 2377, 225, 34, 1018, 458, 499, 7528, 332, 1035, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 20931, 312, 18795, 688, 438, 322, 18795, 12044, 3032, 810, 322, 3191, 275, 319, 30266, 1730, 98, 48, 275, 319, 275]}
{"line_number": 482, "line_type": "original", "code": "        return Fraction.getFraction(numerator / gcd, denominator / gcd);", "entropy": 1.5546875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [6.9375, 0.81884765625, 7.15625, 0.034149169921875, 2.3828125, 0.1790771484375, 0.10113525390625, 0.58837890625, 0.000461578369140625, 5.51953125, 0.96484375, 0.022613525390625, 0.09637451171875, 0.045745849609375, 0.00861358642578125, 0.0192413330078125], "tokens": [351, 442, 40823, 32, 371, 20709, 26, 1516, 11290, 517, 43422, 30, 39920, 517, 43422, 293]}
{"line_number": 482, "line_type": "generated", "code": "\n\n    // Arithmetic\n    //-------------------------------------------------------------------\n\n    /**\n     * <p>Adds the value of this fraction to another, returning the result in reduced form.</p>\n     *\n     * @param fraction  the fraction to add, must not be <code>null", "entropy": 0.15234375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.51806640625, 1.421875, 1.685546875, 0.3017578125, 0.003360748291015625, 0.019073486328125, 0.005329132080078125, 0.2861328125, 0.02276611328125, 0.020111083984375, 3.123283386230469e-05, 0.01471710205078125, 1.7762184143066406e-05, 0.0003783702850341797, 0.263427734375, 0.35302734375, 0.023895263671875, 8.893013000488281e-05, 0.2467041015625, 0.0011196136474609375, 0.00659942626953125, 0.08026123046875, 0.0009512901306152344, 0.08770751953125, 0.0022068023681640625, 0.0019931793212890625, 0.219482421875, 0.66064453125, 0.067138671875, 0.0576171875, 1.3709068298339844e-05, 0.0038547515869140625, 0.007511138916015625, 4.5180320739746094e-05, 0.41943359375, 3.314018249511719e-05, 0.1041259765625, 0.0003910064697265625, 0.0704345703125, 0.04290771484375, 0.054931640625, 0.029296875, 0.00044918060302734375, 0.0236358642578125, 0.01268768310546875, 0.25146484375, 0.025115966796875, 3.0994415283203125e-06, 0.50146484375, 0.0001875162124633789, 1.7881393432617188e-06, 7.665157318115234e-05], "tokens": [446, 434, 47721, 284, 434, 2657, 1559, 446, 1022, 275, 319, 333, 98, 48, 34048, 322, 786, 432, 458, 18795, 372, 4674, 30, 14116, 322, 1056, 328, 22974, 2234, 1730, 98, 48, 275, 319, 275, 319, 477, 753, 18795, 225, 322, 18795, 372, 1015, 30, 2298, 646, 526, 333, 687, 48, 1693]}
{"line_number": 591, "line_type": "original", "code": "        if (u>0) { u=-u; } // make u negative", "entropy": 1.767578125, "is_bug_line": false, "sus_score": 0.47140452079103173, "per_token_entropy": [3.640625, 7.1640625, 0.028228759765625, 10.546875, 1.423828125, 1.8056640625, 0.90478515625, 0.07318115234375, 1.767578125, 0.409912109375, 0.0203399658203125, 0.0234832763671875, 0.07293701171875, 0.3037109375, 0.487548828125, 0.128662109375, 1.240234375], "tokens": [351, 415, 308, 103, 48, 34, 27, 301, 1044, 6593, 103, 45, 320, 434, 1930, 1044, 11003]}
{"line_number": 591, "line_type": "generated", "code": "\n            m > Integer.MAX_VALUE) {\n            throw new ArithmeticException(\"Multiplication overflow\");\n        }\n        return (int)m;\n    }\n\n    /** \n     * Add two integers, checking for overflow.\n     * \n     * @param x an add", "entropy": 0.11859130859375, "is_bug_line": false, "sus_score": 0.47140452079103173, "per_token_entropy": [0.74658203125, 0.0672607421875, 0.01140594482421875, 0.00945281982421875, 4.649162292480469e-05, 0.00012993812561035156, 0.00010704994201660156, 0.00012671947479248047, 0.050811767578125, 0.034454345703125, 0.1248779296875, 0.058990478515625, 0.0017938613891601562, 0.0142059326171875, 1.537799835205078e-05, 0.349853515625, 1.16796875, 9.822845458984375e-05, 0.01751708984375, 0.300048828125, 0.0198974609375, 0.00018668174743652344, 0.03466796875, 0.0006351470947265625, 0.00737762451171875, 2.5510787963867188e-05, 0.0012483596801757812, 0.1512451171875, 0.0006504058837890625, 0.0153045654296875, 0.0008339881896972656, 0.2498779296875, 0.050262451171875, 1.4033203125, 4.112720489501953e-05, 1.1513671875, 0.002262115478515625, 0.0078277587890625, 0.0013637542724609375, 0.0013217926025390625, 0.00010502338409423828, 0.00012803077697753906, 0.00075531005859375, 0.00858306884765625, 0.00016450881958007812, 0.0736083984375, 0.0001226663589477539, 0.00014734268188476562, 0.0002646446228027344, 0.004619598388671875, 0.02459716796875, 0.000652313232421875], "tokens": [324, 345, 848, 4401, 32, 3459, 81, 5975, 27, 301, 324, 1422, 537, 47721, 984, 440, 11005, 1280, 9973, 724, 291, 320, 291, 442, 308, 410, 27, 95, 45, 284, 320, 446, 1022, 5384, 319, 2222, 3134, 18670, 30, 11056, 436, 9973, 32, 275, 319, 5384, 319, 477, 753, 816, 600, 1015]}
{"line_number": 592, "line_type": "original", "code": "        if (v>0) { v=-v; } // make v negative", "entropy": 1.732421875, "is_bug_line": false, "sus_score": 0.47140452079103173, "per_token_entropy": [4.42578125, 6.72265625, 0.2071533203125, 9.9140625, 2.576171875, 0.263671875, 0.054229736328125, 0.12646484375, 1.416015625, 0.8310546875, 0.148193359375, 0.0396728515625, 0.0865478515625, 0.603515625, 0.81005859375, 1.15234375, 0.07379150390625], "tokens": [351, 415, 308, 104, 48, 34, 27, 301, 354, 6593, 104, 45, 320, 434, 1930, 354, 11003]}
{"line_number": 592, "line_type": "generated", "code": "\n            throw new ArithmeticException(\"overflow: mul\");\n        }\n        return (int)m;\n    }\n\n    /**\n     * <p>Adds two fractions.  The fraction returned is the fraction whose value\n     * is <code>(this + addend", "entropy": 0.331787109375, "is_bug_line": false, "sus_score": 0.47140452079103173, "per_token_entropy": [0.1602783203125, 0.10150146484375, 0.0026092529296875, 0.00852203369140625, 1.1682510375976562e-05, 0.1920166015625, 1.4521484375, 0.014007568359375, 0.078857421875, 0.2415771484375, 0.06964111328125, 0.0004949569702148438, 0.0367431640625, 0.0003304481506347656, 0.004322052001953125, 7.271766662597656e-06, 0.0009555816650390625, 0.182373046875, 0.00023746490478515625, 0.0153350830078125, 0.0006160736083984375, 0.240966796875, 0.0445556640625, 0.3955078125, 4.470348358154297e-05, 0.79150390625, 0.0007505416870117188, 0.007045745849609375, 0.58740234375, 0.458740234375, 0.79541015625, 3.5762786865234375e-07, 0.88720703125, 0.6025390625, 0.42236328125, 0.45849609375, 1.8515625, 0.537109375, 1.1708984375, 0.94384765625, 0.2236328125, 0.73193359375, 0.59423828125, 1.1444091796875e-05, 0.0013856887817382812, 0.128662109375, 0.032623291015625, 0.0911865234375, 0.00966644287109375, 1.0751953125, 1.59765625, 9.107589721679688e-05], "tokens": [324, 1422, 537, 47721, 984, 440, 9642, 44, 17476, 724, 291, 320, 291, 442, 308, 410, 27, 95, 45, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 34048, 3134, 4937, 3543, 32, 225, 886, 18795, 4717, 438, 322, 18795, 13696, 786, 275, 319, 438, 333, 687, 1563, 578, 474, 1015, 416]}
{"line_number": 594, "line_type": "original", "code": "        int k=0;", "entropy": 3.728515625, "is_bug_line": false, "sus_score": 0.47140452079103173, "per_token_entropy": [5.29296875, 5.484375, 7.59375, 3.154296875, 0.7421875, 0.1065673828125], "tokens": [351, 629, 831, 47, 34, 45]}
{"line_number": 594, "line_type": "generated", "code": "\n        return (int)m;\n    }\n\n    /**\n     * Multiply two long integers, checking for overflow.\n     * \n     * @param x a factor\n     * @param y a factor\n     * @return the product <code>x*y</code", "entropy": 0.08245849609375, "is_bug_line": false, "sus_score": 0.47140452079103173, "per_token_entropy": [0.043731689453125, 0.0133514404296875, 0.059051513671875, 0.00152587890625, 0.00782012939453125, 0.23583984375, 0.0280303955078125, 0.052215576171875, 0.00072479248046875, 0.1976318359375, 0.041107177734375, 0.401611328125, 6.771087646484375e-05, 1.517578125, 0.65283203125, 0.1884765625, 0.3779296875, 0.0033626556396484375, 0.0005717277526855469, 7.081031799316406e-05, 0.0006914138793945312, 0.03778076171875, 0.020263671875, 0.0010747909545898438, 0.2724609375, 3.4809112548828125e-05, 0.00102996826171875, 0.0007557868957519531, 0.0343017578125, 0.02874755859375, 0.0245361328125, 0.0120391845703125, 3.2186508178710938e-06, 0.00017523765563964844, 4.661083221435547e-05, 0.0004029273986816406, 0.001033782958984375, 0.001285552978515625, 0.002399444580078125, 0.0001646280288696289, 0.0003542900085449219, 0.004486083984375, 0.0013322830200195312, 0.0005540847778320312, 0.01016998291015625, 0.0012941360473632812, 0.0003685951232910156, 0.0005183219909667969, 0.005962371826171875, 0.0002334117889404297, 0.0002238750457763672, 0.0005345344543457031], "tokens": [291, 442, 308, 410, 27, 95, 45, 284, 320, 446, 1022, 275, 319, 44155, 3134, 1946, 18670, 30, 11056, 436, 9973, 32, 275, 319, 5384, 319, 477, 753, 816, 312, 10365, 275, 319, 477, 753, 533, 312, 10365, 275, 319, 477, 601, 322, 4054, 333, 687, 48, 106, 28, 107, 377, 687]}
{"line_number": 595, "line_type": "original", "code": "        while ((u&1)==0 && (v&1)==0 && k<31) { // while u and v are both even...", "entropy": 0.9130859375, "is_bug_line": false, "sus_score": 0.47140452079103173, "per_token_entropy": [4.375, 4.93359375, 1.9921875, 3.19921875, 0.96533203125, 0.0814208984375, 0.08197021484375, 0.03167724609375, 2.478515625, 0.88037109375, 0.0258026123046875, 0.006725311279296875, 0.0016107559204101562, 0.0080108642578125, 0.0035686492919921875, 1.7783203125, 0.39453125, 1.6318359375, 0.12030029296875, 0.04327392578125, 0.04400634765625, 0.030364990234375, 0.794921875, 0.5126953125, 0.11883544921875, 0.2064208984375, 0.0250396728515625, 0.1796875, 2.4609375, 0.01145172119140625, 0.89208984375], "tokens": [351, 2218, 1833, 103, 24, 35, 19162, 34, 962, 308, 104, 24, 35, 19162, 34, 962, 831, 46, 37, 35, 27, 301, 434, 2218, 1044, 461, 354, 884, 4335, 4444, 1179]}
{"line_number": 595, "line_type": "generated", "code": "\n    }\n\n    /**\n     * <p>Adds two numbers, checking for overflow.</p>\n     *\n     * @param x a number to be added\n     * @param y a number to be added\n     * @return the sum <code>x+", "entropy": 0.1475830078125, "is_bug_line": false, "sus_score": 0.47140452079103173, "per_token_entropy": [0.24072265625, 0.1689453125, 0.3125, 0.056304931640625, 0.365234375, 7.641315460205078e-05, 1.482421875, 0.002506256103515625, 0.0117034912109375, 0.69921875, 0.25244140625, 0.42138671875, 0.62939453125, 0.035980224609375, 2.968311309814453e-05, 0.0180511474609375, 0.556640625, 0.00042510032653808594, 0.0014467239379882812, 0.019378662109375, 0.0007138252258300781, 0.4814453125, 6.115436553955078e-05, 0.1195068359375, 0.0031585693359375, 0.07476806640625, 0.27587890625, 0.3095703125, 0.2127685546875, 0.2489013671875, 0.00010800361633300781, 0.10711669921875, 5.0067901611328125e-06, 2.9325485229492188e-05, 0.00015282630920410156, 0.0009565353393554688, 0.01338958740234375, 0.00013053417205810547, 0.00011217594146728516, 3.647804260253906e-05, 7.319450378417969e-05, 0.03424072265625, 0.00013208389282226562, 0.0053863525390625, 0.0030269622802734375, 0.0037631988525390625, 0.453125, 0.040191650390625, 0.003681182861328125, 8.320808410644531e-05, 0.0020503997802734375, 0.005313873291015625], "tokens": [284, 320, 446, 1022, 275, 319, 333, 98, 48, 34048, 3134, 7515, 30, 11056, 436, 9973, 1730, 98, 48, 275, 319, 275, 319, 477, 753, 816, 312, 1451, 372, 526, 3640, 275, 319, 477, 753, 533, 312, 1451, 372, 526, 3640, 275, 319, 477, 601, 322, 3632, 333, 687, 48, 106, 29]}
{"line_number": 598, "line_type": "original", "code": "        if (k==31) {", "entropy": 2.3984375, "is_bug_line": false, "sus_score": 0.47140452079103173, "per_token_entropy": [3.388671875, 2.732421875, 0.2239990234375, 6.6484375, 1.595703125, 6.16015625, 0.468017578125, 0.315673828125, 0.056640625], "tokens": [351, 415, 308, 93, 379, 37, 35, 27, 301]}
{"line_number": 598, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.47140452079103173, "per_token_entropy": [], "tokens": []}
{"line_number": 603, "line_type": "original", "code": "        int t = ((u&1)==1) ? v : -(u/2)/*B3*/;", "entropy": 2.263671875, "is_bug_line": false, "sus_score": 0.47140452079103173, "per_token_entropy": [5.0546875, 5.45703125, 6.1640625, 0.15771484375, 4.125, 3.806640625, 0.396240234375, 4.1015625, 2.939453125, 0.70654296875, 1.107421875, 0.01316070556640625, 1.150390625, 0.138671875, 3.37890625, 1.009765625, 0.48046875, 0.045379638671875, 1.7763671875, 3.869140625, 2.447265625, 2.98046875, 0.75634765625], "tokens": [351, 629, 273, 280, 1833, 103, 24, 35, 19162, 35, 27, 1018, 354, 499, 25298, 103, 33, 36, 27, 1109, 52, 37, 35202]}
{"line_number": 603, "line_type": "generated", "code": "\n     */\n    private static long mulPosAndCheck(int x, int y) {\n        long m = ((long)x)*((long)y);\n        if (m > Integer.MAX_VALUE) {\n            throw new ArithmeticException(\"overflow:", "entropy": 0.08782958984375, "is_bug_line": false, "sus_score": 0.47140452079103173, "per_token_entropy": [0.204833984375, 0.55078125, 0.033294677734375, 0.0706787109375, 0.0192413330078125, 0.52587890625, 0.00421905517578125, 1.650390625, 0.0008478164672851562, 9.262561798095703e-05, 0.0007472038269042969, 0.21923828125, 0.0014781951904296875, 0.0005211830139160156, 0.019439697265625, 8.869171142578125e-05, 0.003032684326171875, 0.01152801513671875, 0.0301361083984375, 0.218994140625, 0.10418701171875, 0.001102447509765625, 0.1383056640625, 0.00147247314453125, 0.0008573532104492188, 0.00360870361328125, 0.004947662353515625, 0.004322052001953125, 6.127357482910156e-05, 0.0002663135528564453, 0.0001468658447265625, 0.00016546249389648438, 0.0152435302734375, 0.004024505615234375, 0.0013818740844726562, 0.00809478759765625, 0.60400390625, 0.036102294921875, 9.119510650634766e-05, 4.1961669921875e-05, 1.9073486328125e-06, 7.987022399902344e-06, 0.004253387451171875, 0.0016851425170898438, 0.0194549560546875, 0.010162353515625, 0.00013828277587890625, 0.0010280609130859375, 2.1338462829589844e-05, 0.0005655288696289062, 0.035247802734375, 0.0013303756713867188], "tokens": [275, 569, 284, 945, 907, 1946, 17476, 2996, 2185, 2140, 26, 410, 816, 30, 629, 533, 27, 301, 291, 1946, 345, 280, 1833, 3222, 27, 106, 4586, 1162, 3222, 27, 107, 293, 291, 415, 308, 95, 848, 4401, 32, 3459, 81, 5975, 27, 301, 324, 1422, 537, 47721, 984, 440, 9642, 44]}
{"line_number": 609, "line_type": "original", "code": "            while ((t&1)==0) { // while t is even..", "entropy": 2.359375, "is_bug_line": false, "sus_score": 0.47140452079103173, "per_token_entropy": [4.8828125, 8.4765625, 3.078125, 11.046875, 3.17578125, 1.111328125, 0.35302734375, 0.04595947265625, 0.80322265625, 0.04107666015625, 1.1220703125, 0.243896484375, 2.392578125, 0.07513427734375, 0.0017232894897460938, 0.9111328125], "tokens": [1468, 2218, 1833, 102, 24, 35, 19162, 34, 27, 301, 434, 2218, 273, 438, 4444, 497]}
{"line_number": 609, "line_type": "generated", "code": "\n        if (m > Integer.MAX_VALUE) {\n            throw new ArithmeticException(\"overflow: mulPos\");\n        }\n        return (int)m;\n    }\n\n    /**\n     *  Multiply two long integers, checking for overflow.\n     * \n     *", "entropy": 0.1165771484375, "is_bug_line": false, "sus_score": 0.47140452079103173, "per_token_entropy": [0.2066650390625, 0.0285186767578125, 0.0031604766845703125, 0.006336212158203125, 0.0771484375, 0.0158538818359375, 9.882450103759766e-05, 4.374980926513672e-05, 1.8835067749023438e-05, 1.9669532775878906e-05, 0.00605010986328125, 0.00386810302734375, 0.034332275390625, 0.0106201171875, 0.00021326541900634766, 0.0045166015625, 1.1801719665527344e-05, 0.0005812644958496094, 0.03460693359375, 0.00246429443359375, 0.0020198822021484375, 0.42578125, 0.09075927734375, 0.00496673583984375, 0.0004515647888183594, 0.01335906982421875, 0.0010290145874023438, 0.0006947517395019531, 2.8014183044433594e-05, 0.00017082691192626953, 0.0233306884765625, 0.0018444061279296875, 0.0149993896484375, 0.0014371871948242188, 0.5732421875, 0.1326904296875, 0.2021484375, 8.428096771240234e-05, 0.66845703125, 1.1416015625, 1.0859375, 1.001953125, 0.1297607421875, 0.00780487060546875, 0.0006518363952636719, 0.00013256072998046875, 0.000423431396484375, 0.01520538330078125, 0.021453857421875, 0.0016870498657226562, 0.0615234375, 8.20159912109375e-05], "tokens": [291, 415, 308, 95, 848, 4401, 32, 3459, 81, 5975, 27, 301, 324, 1422, 537, 47721, 984, 440, 9642, 44, 17476, 2996, 724, 291, 320, 291, 442, 308, 410, 27, 95, 45, 284, 320, 446, 1022, 275, 319, 225, 44155, 3134, 1946, 18670, 30, 11056, 436, 9973, 32, 275, 319, 5384, 319]}
{"line_number": 613, "line_type": "original", "code": "            if (t>0) {", "entropy": 2.779296875, "is_bug_line": false, "sus_score": 0.47140452079103173, "per_token_entropy": [6.1640625, 4.3984375, 0.158203125, 7.0859375, 3.107421875, 1.1826171875, 0.0721435546875, 0.06689453125], "tokens": [1468, 415, 308, 102, 48, 34, 27, 301]}
{"line_number": 613, "line_type": "generated", "code": "\n    }\n\n    /**\n     *  Add two integers, checking for overflow.\n     * \n     * @param x an addend\n     * @param y an addend\n     * @return the sum <code>x+y</code>\n     * @throws", "entropy": 0.0787353515625, "is_bug_line": false, "sus_score": 0.47140452079103173, "per_token_entropy": [0.157958984375, 0.04669189453125, 0.560546875, 0.14453125, 0.2152099609375, 0.00012755393981933594, 0.494873046875, 1.873046875, 0.004756927490234375, 0.38671875, 0.0025043487548828125, 0.002803802490234375, 0.00023639202117919922, 0.000415802001953125, 0.0014667510986328125, 0.017333984375, 0.0003650188446044922, 0.08038330078125, 5.602836608886719e-05, 0.0100860595703125, 0.0004849433898925781, 0.00815582275390625, 0.029693603515625, 0.0009002685546875, 0.01239776611328125, 0.0040435791015625, 2.5033950805664062e-06, 2.4318695068359375e-05, 8.7738037109375e-05, 0.0002548694610595703, 0.0017480850219726562, 7.319450378417969e-05, 0.0004420280456542969, 0.0015926361083984375, 4.971027374267578e-05, 0.0002655982971191406, 0.0005507469177246094, 0.0004210472106933594, 0.020843505859375, 0.0020885467529296875, 0.000431060791015625, 8.249282836914062e-05, 0.0003120899200439453, 0.0014133453369140625, 0.00015461444854736328, 0.0001266002655029297, 4.4226646423339844e-05, 0.0005526542663574219, 0.0027561187744140625, 0.0007061958312988281, 0.00020754337310791016, 0.0013151168823242188], "tokens": [284, 320, 446, 1022, 275, 319, 225, 2222, 3134, 18670, 30, 11056, 436, 9973, 32, 275, 319, 5384, 319, 477, 753, 816, 600, 1015, 416, 275, 319, 477, 753, 533, 600, 1015, 416, 275, 319, 477, 601, 322, 3632, 333, 687, 48, 106, 29, 107, 377, 687, 48, 275, 319, 477, 5117]}
{"line_number": 614, "line_type": "original", "code": "                u = -t;", "entropy": 4.23828125, "is_bug_line": false, "sus_score": 0.47140452079103173, "per_token_entropy": [8.4765625, 10.03125, 0.55419921875, 2.892578125, 3.34375, 0.145263671875], "tokens": [2071, 1044, 280, 429, 102, 45]}
{"line_number": 614, "line_type": "generated", "code": "\n\n    /**\n     *  Add two integers, checking for overflow.\n     * \n     * @param x an addend\n     * @param y an addend\n     * @return the sum <code>x+y</code>\n     * @throws ArithmeticException", "entropy": 0.1199951171875, "is_bug_line": false, "sus_score": 0.47140452079103173, "per_token_entropy": [2.056640625, 0.5341796875, 0.1336669921875, 0.00018656253814697266, 0.69189453125, 1.83984375, 0.008514404296875, 0.71923828125, 0.002628326416015625, 0.00366973876953125, 0.0003020763397216797, 0.0005779266357421875, 0.0017633438110351562, 0.0208282470703125, 0.0004451274871826172, 0.094970703125, 4.9114227294921875e-05, 0.01343536376953125, 0.000682830810546875, 0.0159454345703125, 0.0389404296875, 0.0010747909545898438, 0.0100860595703125, 0.00426483154296875, 3.4570693969726562e-06, 2.6702880859375e-05, 0.0001424551010131836, 0.0003046989440917969, 0.0018329620361328125, 8.571147918701172e-05, 0.0005006790161132812, 0.0015716552734375, 5.733966827392578e-05, 0.0002448558807373047, 0.0008392333984375, 0.0005621910095214844, 0.0239410400390625, 0.003406524658203125, 0.0006170272827148438, 9.012222290039062e-05, 0.000354766845703125, 0.0015287399291992188, 0.00017273426055908203, 0.00012040138244628906, 0.0001329183578491211, 0.0007281303405761719, 0.002803802490234375, 0.0011072158813476562, 0.0002593994140625, 0.001617431640625, 0.0026073455810546875, 5.1140785217285156e-05], "tokens": [446, 1022, 275, 319, 225, 2222, 3134, 18670, 30, 11056, 436, 9973, 32, 275, 319, 5384, 319, 477, 753, 816, 600, 1015, 416, 275, 319, 477, 753, 533, 600, 1015, 416, 275, 319, 477, 601, 322, 3632, 333, 687, 48, 106, 29, 107, 377, 687, 48, 275, 319, 477, 5117, 47721, 984]}
