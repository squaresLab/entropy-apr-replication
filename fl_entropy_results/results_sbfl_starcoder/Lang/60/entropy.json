{"line_number": 1672, "line_type": "original", "code": "        char[] thisBuf = buffer;", "entropy": 1.2802734375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [2.080078125, 6.390625, 0.7685546875, 0.341064453125, 0.060638427734375, 0.01080322265625, 0.5634765625, 0.0251312255859375], "tokens": [351, 1351, 1178, 458, 7346, 280, 3112, 45]}
{"line_number": 1672, "line_type": "generated", "code": "\n     * @return the first index of the character, or -1 if not found\n     */\n    public int indexOf(char ch, int startIndex) {\n        if (startIndex < 0) {\n            startIndex = 0;\n        }\n        if (startIndex", "entropy": 0.074462890625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.98095703125, 0.29833984375, 0.00379180908203125, 0.004634857177734375, 0.005237579345703125, 0.065185546875, 0.0005011558532714844, 0.0008420944213867188, 0.0001742839813232422, 0.002288818359375, 0.00820159912109375, 0.00887298583984375, 0.0022029876708984375, 2.9802322387695312e-05, 0.000843048095703125, 0.0027313232421875, 0.00018143653869628906, 0.1002197265625, 0.12158203125, 0.004856109619140625, 0.00439453125, 0.0005006790161132812, 1.4781951904296875e-05, 0.0002601146697998047, 0.0211944580078125, 9.584426879882812e-05, 9.715557098388672e-05, 0.0002758502960205078, 0.00013554096221923828, 0.0006279945373535156, 0.0247039794921875, 0.437744140625, 0.64990234375, 0.01568603515625, 0.158935546875, 0.065673828125, 0.00299072265625, 1.8596649169921875e-05, 0.12103271484375, 0.0016584396362304688, 0.0299835205078125, 0.00853729248046875, 0.021514892578125, 0.00319671630859375, 1.5497207641601562e-06, 0.00010597705841064453, 0.150634765625, 0.00019979476928710938, 0.22412109375, 0.261962890625, 0.0011730194091796875, 0.053375244140625], "tokens": [275, 319, 477, 601, 322, 1932, 1650, 432, 322, 5341, 30, 556, 429, 35, 415, 646, 2431, 275, 569, 284, 562, 629, 40635, 26, 1594, 663, 30, 629, 23529, 27, 301, 291, 415, 308, 42335, 333, 225, 34, 27, 301, 324, 23529, 280, 225, 34, 45, 291, 320, 291, 415, 308, 42335]}
{"line_number": 1673, "line_type": "original", "code": "        for (int i = 0; i < thisBuf.length; i++) {", "entropy": 0.7900390625, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [3.228515625, 1.8427734375, 0.08636474609375, 0.032073974609375, 0.00809478759765625, 0.0037555694580078125, 6.26171875, 0.018951416015625, 0.10858154296875, 0.1943359375, 0.157958984375, 2.087890625, 0.51904296875, 0.099609375, 0.004215240478515625, 0.1453857421875, 0.0947265625, 0.02325439453125, 0.09381103515625], "tokens": [351, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 458, 7346, 32, 1322, 45, 595, 1987, 301]}
{"line_number": 1673, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Searches the string builder to find the first reference to the specified string.\n     * \n     * @param str  the string to find\n     * @return the first index of the string, or -1 if not found\n    ", "entropy": 0.07330322265625, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [1.6103515625, 0.251953125, 0.2398681640625, 0.0802001953125, 0.004058837890625, 4.553794860839844e-05, 0.00583648681640625, 1.1920928955078125e-07, 7.998943328857422e-05, 0.0101470947265625, 0.04595947265625, 0.0002923011779785156, 0.0087890625, 0.0004265308380126953, 0.0008029937744140625, 0.072265625, 0.00624847412109375, 0.0185394287109375, 0.0215301513671875, 0.00667572021484375, 0.0938720703125, 0.0256195068359375, 0.0036449432373046875, 8.344650268554688e-06, 0.1553955078125, 5.364418029785156e-06, 0.0010004043579101562, 0.00011432170867919922, 0.000911712646484375, 0.00586700439453125, 0.0007843971252441406, 0.039398193359375, 0.039520263671875, 0.00708770751953125, 0.65625, 4.291534423828125e-06, 5.137920379638672e-05, 0.0298919677734375, 0.00324249267578125, 0.2073974609375, 0.0002532005310058594, 0.02294921875, 0.0010013580322265625, 0.067626953125, 0.0034427642822265625, 0.0087738037109375, 0.001560211181640625, 4.0531158447265625e-06, 0.0004718303680419922, 0.0008211135864257812, 0.00012183189392089844, 0.05120849609375], "tokens": [284, 320, 446, 1022, 275, 319, 358, 1928, 2907, 322, 802, 4906, 372, 2290, 322, 1932, 4121, 372, 322, 3191, 802, 32, 275, 319, 5384, 319, 477, 753, 596, 225, 322, 802, 372, 2290, 275, 319, 477, 601, 322, 1932, 1650, 432, 322, 802, 30, 556, 429, 35, 415, 646, 2431, 275]}
{"line_number": 1674, "line_type": "original", "code": "            if (thisBuf[i] == ch) {", "entropy": 1.0712890625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [6.58984375, 1.5615234375, 0.048614501953125, 3.4375, 0.07940673828125, 0.062744140625, 0.73486328125, 0.049285888671875, 0.034454345703125, 0.0401611328125, 0.0135650634765625, 0.2080078125], "tokens": [1468, 415, 308, 578, 7346, 77, 91, 79, 610, 663, 27, 301]}
{"line_number": 1674, "line_type": "generated", "code": "\n    public int indexOf(char ch, int startIndex) {\n        if (startIndex < 0) {\n            startIndex = 0;\n        }\n        if (startIndex >= size) {\n            return -1;\n        }\n        char[] thisBuf = buffer;", "entropy": 0.08758544921875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.65869140625, 0.86572265625, 0.0017795562744140625, 7.486343383789062e-05, 0.001617431640625, 0.03167724609375, 0.0016355514526367188, 0.0022449493408203125, 0.0005955696105957031, 0.0003082752227783203, 0.0013370513916015625, 0.06817626953125, 0.1883544921875, 0.73828125, 0.01425933837890625, 0.093017578125, 0.023712158203125, 0.0019741058349609375, 6.9141387939453125e-06, 0.1014404296875, 0.0017366409301757812, 0.024749755859375, 0.01367950439453125, 0.0262908935546875, 0.0021686553955078125, 1.5497207641601562e-06, 0.00010251998901367188, 0.09722900390625, 7.62939453125e-05, 0.1058349609375, 0.71630859375, 0.0007066726684570312, 0.0184783935546875, 0.1107177734375, 0.061431884765625, 0.01021575927734375, 0.0006957054138183594, 0.01036834716796875, 0.0061187744140625, 0.01593017578125, 0.00043272972106933594, 0.0003211498260498047, 0.00726318359375, 3.933906555175781e-05, 0.0894775390625, 0.3642578125, 0.022613525390625, 0.04779052734375, 0.001224517822265625, 0.00022685527801513672, 0.0027923583984375, 0.0012960433959960938], "tokens": [284, 562, 629, 40635, 26, 1594, 663, 30, 629, 23529, 27, 301, 291, 415, 308, 42335, 333, 225, 34, 27, 301, 324, 23529, 280, 225, 34, 45, 291, 320, 291, 415, 308, 42335, 2377, 1334, 27, 301, 324, 442, 429, 35, 45, 291, 320, 291, 1351, 1178, 458, 7346, 280, 3112, 45]}
{"line_number": 1675, "line_type": "original", "code": "                return true;", "entropy": 5.10546875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [8.171875, 1.7802734375, 10.46875, 0.00672149658203125], "tokens": [2071, 442, 861, 45]}
{"line_number": 1675, "line_type": "generated", "code": "\n        return -1;\n    }\n\n    /**\n     * Searches the string builder to find the first reference to the specified string.\n     * \n     * @param str  the string to find, null returns -1\n     * @return the first index of", "entropy": 0.05596923828125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.85986328125, 0.46923828125, 0.049774169921875, 0.0004286766052246094, 0.001804351806640625, 0.01335906982421875, 3.790855407714844e-05, 0.047271728515625, 0.0980224609375, 0.000274658203125, 9.119510650634766e-05, 0.0028476715087890625, 1.1920928955078125e-07, 0.00010371208190917969, 0.008026123046875, 0.033172607421875, 0.000370025634765625, 0.006351470947265625, 0.0003631114959716797, 0.0005507469177246094, 0.119384765625, 0.00537872314453125, 0.0112762451171875, 0.02276611328125, 0.00745391845703125, 0.058807373046875, 0.0186309814453125, 0.0027942657470703125, 3.2186508178710938e-06, 0.110595703125, 2.7418136596679688e-06, 0.0004930496215820312, 6.341934204101562e-05, 0.001010894775390625, 0.00505828857421875, 0.0007700920104980469, 0.036346435546875, 0.0308685302734375, 0.006328582763671875, 0.61865234375, 0.00589752197265625, 0.0711669921875, 0.0039215087890625, 7.855892181396484e-05, 0.00212860107421875, 7.62939453125e-06, 3.457069396972656e-05, 0.0044097900390625, 0.001373291015625, 0.1566162109375, 0.0003421306610107422, 0.015472412109375], "tokens": [291, 442, 429, 35, 45, 284, 320, 446, 1022, 275, 319, 358, 1928, 2907, 322, 802, 4906, 372, 2290, 322, 1932, 4121, 372, 322, 3191, 802, 32, 275, 319, 5384, 319, 477, 753, 596, 225, 322, 802, 372, 2290, 30, 744, 3217, 429, 35, 275, 319, 477, 601, 322, 1932, 1650, 432]}
{"line_number": 1202, "line_type": "original", "code": "        int len = (str == null ? 0 : str.length());", "entropy": 1.166015625, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [4.55078125, 3.1953125, 2.802734375, 0.08184814453125, 2.943359375, 5.00390625, 0.0218353271484375, 0.0004265308380126953, 0.00421905517578125, 0.01174163818359375, 0.0005364418029785156, 0.0011205673217773438, 0.018585205078125, 0.0011806488037109375, 0.0007338523864746094, 0.023773193359375], "tokens": [351, 629, 2069, 280, 308, 466, 610, 744, 1018, 225, 34, 499, 596, 32, 1322, 1035]}
{"line_number": 1202, "line_type": "generated", "code": "\n    private void deleteImpl(int startIndex, int endIndex, int removeLen, String insertStr, int insertLen) {\n        int len = size;\n        int newSize = len - removeLen + insertLen;\n        if (newSize == ", "entropy": 0.211181640625, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [0.1429443359375, 0.54248046875, 0.14208984375, 0.0249481201171875, 0.0014820098876953125, 0.0094146728515625, 0.039794921875, 0.0012607574462890625, 0.00016629695892333984, 0.0031147003173828125, 0.0002491474151611328, 5.602836608886719e-06, 0.0003848075866699219, 0.0072174072265625, 0.007232666015625, 0.0002510547637939453, 0.6142578125, 0.320068359375, 0.009735107421875, 0.0018720626831054688, 0.011962890625, 0.027740478515625, 0.0012063980102539062, 0.0020771026611328125, 0.0117950439453125, 0.07171630859375, 0.2344970703125, 1.4736328125, 1.7158203125, 0.024169921875, 0.65234375, 0.1375732421875, 0.212646484375, 1.751953125, 0.431396484375, 0.0303955078125, 0.020294189453125, 0.0950927734375, 0.0740966796875, 0.0218658447265625, 3.2186508178710938e-06, 0.09417724609375, 0.0070037841796875, 8.20159912109375e-05, 0.003910064697265625, 0.1851806640625, 0.384033203125, 0.004638671875, 0.38037109375, 8.106231689453125e-05, 0.91943359375, 0.13671875], "tokens": [284, 945, 763, 3066, 3482, 26, 410, 23529, 30, 629, 943, 1284, 30, 629, 3345, 5745, 30, 892, 5551, 2007, 30, 629, 5551, 5745, 27, 301, 291, 629, 2069, 280, 1334, 45, 291, 629, 537, 1250, 280, 2069, 429, 3345, 5745, 474, 5551, 5745, 45, 291, 415, 308, 890, 1250, 610, 225]}
{"line_number": 1203, "line_type": "original", "code": "        if (len > 0) {", "entropy": 1.45703125, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [4.55859375, 0.7705078125, 0.0616455078125, 5.75390625, 1.646484375, 0.0589599609375, 0.003391265869140625, 0.183349609375, 0.07879638671875], "tokens": [351, 415, 308, 1657, 848, 225, 34, 27, 301]}
{"line_number": 1203, "line_type": "generated", "code": "\n        if (insertStr == null) {\n            if (startIndex < endIndex) {\n                System.arraycopy(buffer, endIndex, buffer, startIndex, size - endIndex);\n            }\n            size -= removeLen;\n        } else {\n            if (", "entropy": 0.177001953125, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [0.262939453125, 0.8623046875, 0.045379638671875, 0.64599609375, 0.378173828125, 0.397705078125, 0.00423431396484375, 0.08984375, 0.0017337799072265625, 0.099365234375, 1.0625, 0.046844482421875, 0.9697265625, 0.89501953125, 0.239501953125, 0.00012993812561035156, 0.069091796875, 0.00038743019104003906, 0.0726318359375, 0.5322265625, 0.00289154052734375, 7.128715515136719e-05, 0.002506256103515625, 0.00449371337890625, 0.00011360645294189453, 0.027557373046875, 1.9073486328125e-06, 0.0005702972412109375, 0.01149749755859375, 2.1696090698242188e-05, 0.00045943260192871094, 0.00010657310485839844, 0.09814453125, 0.001605987548828125, 0.004451751708984375, 7.987022399902344e-06, 0.0032520294189453125, 1.033203125, 9.894371032714844e-05, 0.253173828125, 0.1490478515625, 0.030792236328125, 0.009979248046875, 1.5497207641601562e-06, 0.0010519027709960938, 0.1500244140625, 0.0010890960693359375, 0.004352569580078125, 0.3408203125, 0.04351806640625, 0.327392578125, 0.0247650146484375], "tokens": [291, 415, 308, 3215, 2007, 610, 744, 27, 301, 324, 415, 308, 42335, 333, 943, 1284, 27, 301, 400, 1171, 32, 40863, 26, 2668, 30, 943, 1284, 30, 3112, 30, 23529, 30, 1334, 429, 943, 1284, 293, 324, 320, 324, 1334, 5912, 3345, 5745, 45, 291, 320, 813, 301, 324, 415, 308]}
{"line_number": 1204, "line_type": "original", "code": "            int index = indexOf(str, 0);", "entropy": 1.8623046875, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [6.27734375, 2.642578125, 3.982421875, 0.084228515625, 4.15234375, 0.1845703125, 1.8828125, 0.0301055908203125, 1.1953125, 0.0025482177734375, 0.05499267578125], "tokens": [1468, 629, 1650, 280, 40635, 26, 466, 30, 225, 34, 293]}
{"line_number": 1204, "line_type": "generated", "code": "\n        if (insertLen > 0) {\n            if (startIndex < endIndex) {\n                if (endIndex <= size) {\n                    System.arraycopy(buffer, endIndex, buffer, startIndex + insertLen, size - endIndex);\n                }", "entropy": 0.26708984375, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [0.1806640625, 0.6396484375, 0.014251708984375, 1.0146484375, 0.8359375, 1.2568359375, 0.045074462890625, 0.0010137557983398438, 0.282958984375, 0.0026645660400390625, 0.09967041015625, 1.0361328125, 0.0268707275390625, 1.728515625, 1.0390625, 0.7783203125, 0.00125885009765625, 0.05096435546875, 0.0005283355712890625, 0.05267333984375, 1.443359375, 0.04364013671875, 0.95263671875, 0.0007076263427734375, 0.97314453125, 0.32861328125, 0.0225982666015625, 0.0007386207580566406, 0.1092529296875, 0.427978515625, 0.005817413330078125, 7.95125961303711e-05, 0.005035400390625, 0.0042724609375, 0.00020051002502441406, 0.13232421875, 1.1324882507324219e-05, 0.00110626220703125, 0.0178070068359375, 2.0742416381835938e-05, 0.0082855224609375, 0.07177734375, 0.00257110595703125, 0.00012743473052978516, 0.0003528594970703125, 0.076904296875, 0.0006051063537597656, 0.0016384124755859375, 1.7881393432617188e-06, 0.0013418197631835938, 0.1595458984375, 0.0006036758422851562], "tokens": [291, 415, 308, 3215, 5745, 848, 225, 34, 27, 301, 324, 415, 308, 42335, 333, 943, 1284, 27, 301, 400, 415, 308, 416, 1284, 2511, 1334, 27, 301, 528, 1171, 32, 40863, 26, 2668, 30, 943, 1284, 30, 3112, 30, 23529, 474, 5551, 5745, 30, 1334, 429, 943, 1284, 293, 400, 320]}
{"line_number": 1205, "line_type": "original", "code": "            if (index >= 0) {", "entropy": 2.056640625, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [4.9765625, 1.4541015625, 0.021575927734375, 5.4609375, 3.966796875, 1.955078125, 0.00353240966796875, 0.45654296875, 0.2225341796875], "tokens": [1468, 415, 308, 1055, 2377, 225, 34, 27, 301]}
{"line_number": 1205, "line_type": "generated", "code": "\n            System.arraycopy(buffer, endIndex, buffer, startIndex + insertLen, size - endIndex);", "entropy": 0.109619140625, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [0.298583984375, 1.525390625, 0.002765655517578125, 0.00016260147094726562, 0.00659942626953125, 0.006622314453125, 0.00032210350036621094, 0.287109375, 0.00014102458953857422, 0.00220489501953125, 0.01419830322265625, 3.5643577575683594e-05, 0.0021820068359375, 0.1434326171875, 0.0026340484619140625, 0.00010478496551513672, 0.0007686614990234375, 0.11285400390625, 0.0009069442749023438, 0.0030117034912109375, 6.67572021484375e-06, 0.0017547607421875], "tokens": [324, 1171, 32, 40863, 26, 2668, 30, 943, 1284, 30, 3112, 30, 23529, 474, 5551, 5745, 30, 1334, 429, 943, 1284, 293]}
{"line_number": 1206, "line_type": "original", "code": "                deleteImpl(index, index + len, len);", "entropy": 1.609375, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [6.32421875, 6.25390625, 0.1297607421875, 0.022247314453125, 3.7265625, 0.2490234375, 0.18798828125, 0.05078125, 1.8720703125, 0.07373046875, 0.400390625, 0.024993896484375], "tokens": [2071, 3066, 3482, 26, 1055, 30, 1650, 474, 2069, 30, 2069, 293]}
{"line_number": 1206, "line_type": "generated", "code": "\n        }\n        if (insertLen > 0) {", "entropy": 0.267333984375, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [0.86376953125, 0.018585205078125, 0.681640625, 1.0146484375, 0.004978179931640625, 0.09954833984375, 0.31787109375, 0.142578125, 0.0091400146484375, 0.00016796588897705078, 0.048736572265625, 0.0069580078125], "tokens": [291, 320, 291, 415, 308, 3215, 5745, 848, 225, 34, 27, 301]}
{"line_number": 1209, "line_type": "original", "code": "        return this;", "entropy": 2.345703125, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [4.03515625, 5.09765625, 0.247314453125, 0.002376556396484375], "tokens": [351, 442, 458, 45]}
{"line_number": 1209, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Internal method to delete a range without validation.\n     *\n     * @param startIndex  the start index, must be valid\n     * @param endIndex  the end index (exclusive), must be valid\n     * @param removeLen", "entropy": 0.0660400390625, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [1.2587890625, 0.0087432861328125, 0.1302490234375, 0.6669921875, 0.0012445449829101562, 4.756450653076172e-05, 0.57275390625, 0.0270843505859375, 0.065673828125, 0.1539306640625, 0.0625, 0.061126708984375, 0.203857421875, 0.004215240478515625, 0.0204315185546875, 0.003017425537109375, 0.00038695335388183594, 0.0703125, 4.208087921142578e-05, 0.0005249977111816406, 0.0004248619079589844, 0.00661468505859375, 0.0021648406982421875, 0.0007944107055664062, 0.0004711151123046875, 7.963180541992188e-05, 0.0036907196044921875, 0.0018682479858398438, 6.890296936035156e-05, 0.00043010711669921875, 0.00348663330078125, 2.086162567138672e-05, 1.633167266845703e-05, 4.267692565917969e-05, 0.027740478515625, 4.0531158447265625e-05, 0.0008502006530761719, 5.9604644775390625e-06, 0.0017604827880859375, 4.9114227294921875e-05, 0.004199981689453125, 0.004795074462890625, 0.0006651878356933594, 0.00041294097900390625, 2.6345252990722656e-05, 0.00026726722717285156, 0.0021228790283203125, 0.0005230903625488281, 0.0003018379211425781, 0.0009150505065917969, 0.046051025390625, 0.0099945068359375], "tokens": [284, 320, 446, 1022, 275, 319, 11540, 1411, 372, 3066, 312, 2155, 2876, 6850, 32, 275, 319, 275, 319, 477, 753, 23529, 225, 322, 1477, 1650, 30, 2298, 526, 2080, 275, 319, 477, 753, 943, 1284, 225, 322, 943, 1650, 308, 29882, 471, 2298, 526, 2080, 275, 319, 477, 753, 3345, 5745]}
{"line_number": 1761, "line_type": "original", "code": "        startIndex = (startIndex < 0 ? 0 : startIndex);", "entropy": 0.54150390625, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [2.2109375, 5.12890625, 0.0184783935546875, 0.08343505859375, 0.0008378028869628906, 0.007724761962890625, 0.00385284423828125, 0.00011420249938964844, 0.00789642333984375, 0.0011034011840820312, 1.7881393432617188e-05, 0.0010766983032226562, 0.0086517333984375, 0.1064453125], "tokens": [351, 23529, 280, 308, 42335, 333, 225, 34, 1018, 225, 34, 499, 23529, 293]}
{"line_number": 1761, "line_type": "generated", "code": "\n     * @param matcher  the matcher to use, null returns -1\n     * @param startIndex  the index to start at, invalid index rounded to edge\n     * @return the first index matched, or -1 if not found\n     */\n    public int", "entropy": 0.01678466796875, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [0.3828125, 0.00853729248046875, 0.0305633544921875, 0.0049896240234375, 0.059539794921875, 0.0021343231201171875, 0.0010557174682617188, 0.0004565715789794922, 0.00047898292541503906, 0.0012922286987304688, 0.0067596435546875, 0.0014657974243164062, 0.0014019012451171875, 8.14199447631836e-05, 2.1696090698242188e-05, 0.0015230178833007812, 5.829334259033203e-05, 6.496906280517578e-05, 0.00612640380859375, 0.0004787445068359375, 0.00774383544921875, 0.0031681060791015625, 0.006298065185546875, 0.0008020401000976562, 0.0015211105346679688, 0.00569915771484375, 0.0059051513671875, 0.041717529296875, 0.0045318603515625, 0.0160369873046875, 0.0003006458282470703, 0.01190948486328125, 0.0036830902099609375, 3.802776336669922e-05, 0.00010144710540771484, 0.0005316734313964844, 0.004154205322265625, 0.00957489013671875, 0.0025539398193359375, 0.03826904296875, 0.0009336471557617188, 0.0011930465698242188, 0.00018537044525146484, 6.914138793945312e-05, 0.0013980865478515625, 0.006732940673828125, 0.0008597373962402344, 0.0254974365234375, 0.147216796875, 0.01102447509765625, 0.003215789794921875, 0.0003018379211425781], "tokens": [275, 319, 477, 753, 20638, 225, 322, 20638, 372, 793, 30, 744, 3217, 429, 35, 275, 319, 477, 753, 23529, 225, 322, 1650, 372, 1477, 821, 30, 5535, 1650, 13116, 372, 6731, 275, 319, 477, 601, 322, 1932, 1650, 14995, 30, 556, 429, 35, 415, 646, 2431, 275, 569, 284, 562, 629]}
{"line_number": 1762, "line_type": "original", "code": "        if (str == null || startIndex >= size) {", "entropy": 1.6171875, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [3.53515625, 2.19140625, 0.0261077880859375, 4.3984375, 1.2998046875, 0.00787353515625, 1.28515625, 3.837890625, 1.935546875, 0.2802734375, 0.44140625, 0.1715087890625], "tokens": [351, 415, 308, 466, 610, 744, 1276, 23529, 2377, 1334, 27, 301]}
{"line_number": 1762, "line_type": "generated", "code": "\n            return -1;\n        }\n        int len = size;\n        if (len == 0) {\n            return -1;\n        }\n        if (startIndex >= len) {\n            return -1;\n        }\n        if (matcher.isMatchAll", "entropy": 0.2481689453125, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [1.357421875, 0.038970947265625, 0.031463623046875, 0.0004067420959472656, 0.0029582977294921875, 0.045135498046875, 0.026763916015625, 0.1048583984375, 0.64892578125, 0.43603515625, 0.0159912109375, 0.35107421875, 0.11712646484375, 0.033843994140625, 1.1640625, 0.0029354095458984375, 0.40283203125, 0.1409912109375, 0.0009374618530273438, 0.0135498046875, 0.09429931640625, 0.0015439987182617188, 0.068115234375, 0.016998291015625, 0.178466796875, 0.0007610321044921875, 0.0007786750793457031, 0.00940704345703125, 0.0002321004867553711, 0.0609130859375, 1.4443359375, 0.005489349365234375, 0.93505859375, 0.389892578125, 0.06378173828125, 0.00859832763671875, 0.00101470947265625, 0.021087646484375, 0.1888427734375, 0.07257080078125, 0.0006914138793945312, 0.001331329345703125, 0.01036834716796875, 0.0001398324966430664, 0.0843505859375, 1.478515625, 0.00402069091796875, 0.27587890625, 0.25634765625, 0.0004241466522216797, 1.7646484375, 0.53076171875], "tokens": [324, 442, 429, 35, 45, 291, 320, 291, 629, 2069, 280, 1334, 45, 291, 415, 308, 1657, 610, 225, 34, 27, 301, 324, 442, 429, 35, 45, 291, 320, 291, 415, 308, 42335, 2377, 2069, 27, 301, 324, 442, 429, 35, 45, 291, 320, 291, 415, 308, 16937, 32, 297, 3665, 1934]}
{"line_number": 1765, "line_type": "original", "code": "        int strLen = str.length();", "entropy": 1.6298828125, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [5.5, 1.28515625, 2.662109375, 0.77880859375, 0.047760009765625, 3.767578125, 0.61328125, 0.0030879974365234375, 0.013427734375], "tokens": [351, 629, 596, 5745, 280, 596, 32, 1322, 473]}
{"line_number": 1765, "line_type": "generated", "code": "\n    public int indexOf(StrMatcher matcher, int startIndex) {\n        if (matcher == null || startIndex >= size) {\n            return -1;\n        }\n        if (startIndex < 0) {\n            startIndex = 0;\n        }\n        int end", "entropy": 0.1260986328125, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [0.07940673828125, 0.05670166015625, 0.0008840560913085938, 3.147125244140625e-05, 0.00046944618225097656, 0.00786590576171875, 1.0728836059570312e-05, 2.300739288330078e-05, 0.00017404556274414062, 0.0005555152893066406, 9.512901306152344e-05, 0.00038051605224609375, 0.04229736328125, 0.049468994140625, 0.65380859375, 0.0025577545166015625, 0.151611328125, 0.007167816162109375, 0.00208282470703125, 0.28662109375, 0.28857421875, 0.02264404296875, 0.0020294189453125, 0.03948974609375, 0.0009784698486328125, 0.004695892333984375, 0.00041294097900390625, 0.0003483295440673828, 0.00039005279541015625, 7.259845733642578e-05, 0.004467010498046875, 2.002716064453125e-05, 0.2205810546875, 1.2841796875, 0.00681304931640625, 0.392822265625, 0.0029754638671875, 0.0012483596801757812, 7.104873657226562e-05, 0.0015897750854492188, 0.0002703666687011719, 0.00682830810546875, 0.002422332763671875, 0.004344940185546875, 0.0006427764892578125, 6.556510925292969e-06, 7.832050323486328e-05, 0.01026153564453125, 2.3484230041503906e-05, 0.10211181640625, 1.5107421875, 1.3046875], "tokens": [284, 562, 629, 40635, 26, 2007, 11945, 20638, 30, 629, 23529, 27, 301, 291, 415, 308, 16937, 610, 744, 1276, 23529, 2377, 1334, 27, 301, 324, 442, 429, 35, 45, 291, 320, 291, 415, 308, 42335, 333, 225, 34, 27, 301, 324, 23529, 280, 225, 34, 45, 291, 320, 291, 629, 943]}
{"line_number": 1766, "line_type": "original", "code": "        if (strLen == 1) {", "entropy": 2.158203125, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [5.69921875, 1.71875, 0.01097869873046875, 6.42578125, 2.76171875, 0.1058349609375, 0.0033206939697265625, 4.6640625, 0.1510009765625, 0.03607177734375], "tokens": [351, 415, 308, 466, 5745, 610, 225, 35, 27, 301]}
{"line_number": 1766, "line_type": "generated", "code": "\n        return indexOf(matcher, startIndex, size);\n    }\n\n    /**\n     * Searches the string builder using the matcher to find the first match\n     * searching between the two specified indices.\n     * <p>\n     * Matchers can be used to", "entropy": 0.1524658203125, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [0.873046875, 0.9638671875, 0.50927734375, 0.0291900634765625, 0.1241455078125, 0.50146484375, 0.017425537109375, 0.59326171875, 0.24755859375, 0.0380859375, 0.03399658203125, 0.0011768341064453125, 0.08441162109375, 0.01373291015625, 0.0055999755859375, 1.7523765563964844e-05, 0.008453369140625, 1.1920928955078125e-07, 9.000301361083984e-05, 0.006717681884765625, 0.08404541015625, 0.002227783203125, 0.035308837890625, 0.0016260147094726562, 0.00363922119140625, 0.0025653839111328125, 0.00197601318359375, 0.02386474609375, 0.018798828125, 0.9169921875, 0.320556640625, 1.9073486328125e-05, 0.1510009765625, 1.05078125, 0.00426483154296875, 0.80126953125, 0.06085205078125, 0.323974609375, 0.01114654541015625, 0.0074462890625, 1.0251998901367188e-05, 0.036163330078125, 0.0005097389221191406, 4.1604042053222656e-05, 0.00022983551025390625, 2.753734588623047e-05, 0.01407623291015625, 6.198883056640625e-06, 3.147125244140625e-05, 6.794929504394531e-06, 7.343292236328125e-05, 2.193450927734375e-05], "tokens": [291, 442, 40635, 26, 16937, 30, 23529, 30, 1334, 293, 284, 320, 446, 1022, 275, 319, 358, 1928, 2907, 322, 802, 4906, 1471, 322, 20638, 372, 2290, 322, 1932, 2530, 275, 319, 20286, 3733, 322, 3134, 3191, 10193, 32, 275, 319, 333, 98, 48, 275, 319, 12253, 483, 883, 526, 1654, 372]}
{"line_number": 1769, "line_type": "original", "code": "        if (strLen == 0) {", "entropy": 1.6376953125, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [4.15625, 3.71875, 0.033416748046875, 4.22265625, 0.80517578125, 1.33984375, 0.004032135009765625, 1.9775390625, 0.08349609375, 0.033355712890625], "tokens": [351, 415, 308, 466, 5745, 610, 225, 34, 27, 301]}
{"line_number": 1769, "line_type": "generated", "code": "\n        }\n        char[] thisBuf = buffer;\n        int len = size;\n        for (int i = startIndex; i < len; i++) {\n            if (matcher.isMatch(thisBuf, i)) {\n                return i;\n            }\n       ", "entropy": 0.1533203125, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [0.2061767578125, 0.27587890625, 0.09356689453125, 1.298828125, 0.006805419921875, 0.330078125, 0.001209259033203125, 0.0003008842468261719, 0.002140045166015625, 0.0008039474487304688, 0.047088623046875, 0.75146484375, 1.154296875, 0.005901336669921875, 0.343505859375, 0.13525390625, 0.07574462890625, 1.052734375, 0.0477294921875, 0.0059051513671875, 0.002628326416015625, 0.00020933151245117188, 0.016387939453125, 0.0501708984375, 0.004283905029296875, 0.001461029052734375, 0.010589599609375, 0.006183624267578125, 0.0228118896484375, 0.01055145263671875, 0.0018854141235351562, 0.09246826171875, 0.1165771484375, 0.0019350051879882812, 0.00824737548828125, 0.0004458427429199219, 0.046966552734375, 0.003520965576171875, 0.0009822845458984375, 0.0023097991943359375, 0.00024962425231933594, 0.35302734375, 0.0152587890625, 1.201171875, 0.00664520263671875, 0.0271148681640625, 0.0008306503295898438, 0.0009918212890625, 0.002109527587890625, 0.081787109375, 0.00023794174194335938, 0.045928955078125], "tokens": [291, 320, 291, 1351, 1178, 458, 7346, 280, 3112, 45, 291, 629, 2069, 280, 1334, 45, 291, 436, 308, 410, 595, 280, 23529, 45, 595, 333, 2069, 45, 595, 1987, 301, 324, 415, 308, 16937, 32, 297, 3665, 26, 578, 7346, 30, 595, 490, 301, 400, 442, 595, 45, 324, 320, 291]}
{"line_number": 1772, "line_type": "original", "code": "        if (strLen > size) {", "entropy": 2.44921875, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [3.701171875, 2.64453125, 0.0421142578125, 5.37109375, 1.716796875, 4.1328125, 4.1875, 0.1539306640625, 0.10076904296875], "tokens": [351, 415, 308, 466, 5745, 848, 1334, 27, 301]}
{"line_number": 1772, "line_type": "generated", "code": "\n        return -1;\n    }\n\n    /**\n     * Searches the string builder to find the last reference to the specified character.\n     * \n     * @param ch  the character to find\n     * @return the last index of the character, or -", "entropy": 0.078369140625, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [0.5927734375, 0.9111328125, 0.0697021484375, 0.0008053779602050781, 0.0009889602661132812, 0.06304931640625, 0.00162506103515625, 0.1561279296875, 0.2218017578125, 0.00594329833984375, 4.4345855712890625e-05, 0.10784912109375, 3.6954879760742188e-06, 6.973743438720703e-05, 0.01800537109375, 0.021759033203125, 0.002288818359375, 0.48779296875, 0.004985809326171875, 0.0031185150146484375, 0.1495361328125, 0.32666015625, 0.004978179931640625, 0.057281494140625, 0.11297607421875, 0.11236572265625, 0.008392333984375, 0.0031280517578125, 8.225440979003906e-06, 0.314453125, 6.67572021484375e-06, 0.0008549690246582031, 0.00018775463104248047, 0.0008006095886230469, 0.0103302001953125, 0.022308349609375, 0.019012451171875, 0.0016183853149414062, 0.0313720703125, 0.125732421875, 3.5762786865234375e-06, 5.3882598876953125e-05, 0.001247406005859375, 0.010772705078125, 0.0665283203125, 0.0005354881286621094, 0.0087127685546875, 0.0014772415161132812, 0.0019130706787109375, 0.006656646728515625, 0.00472259521484375, 0.0012149810791015625], "tokens": [291, 442, 429, 35, 45, 284, 320, 446, 1022, 275, 319, 358, 1928, 2907, 322, 802, 4906, 372, 2290, 322, 2401, 4121, 372, 322, 3191, 5341, 32, 275, 319, 5384, 319, 477, 753, 663, 225, 322, 5341, 372, 2290, 275, 319, 477, 601, 322, 2401, 1650, 432, 322, 5341, 30, 556, 429]}
{"line_number": 1775, "line_type": "original", "code": "        char[] thisBuf = buffer;", "entropy": 1.591796875, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [4.98046875, 6.421875, 0.91552734375, 0.373291015625, 0.0036830902099609375, 0.0018568038940429688, 0.03314208984375, 0.0036296844482421875], "tokens": [351, 1351, 1178, 458, 7346, 280, 3112, 45]}
{"line_number": 1775, "line_type": "generated", "code": "\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * Searches the string builder to find the last reference to the specified character.\n     * \n     * @param ch  the character to find\n     * @return the last index of the", "entropy": 0.05401611328125, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [0.08856201171875, 0.035430908203125, 0.06561279296875, 0.00013196468353271484, 0.018524169921875, 0.0007987022399902344, 0.0010156631469726562, 0.00010824203491210938, 0.0012559890747070312, 0.04217529296875, 0.0007653236389160156, 0.207275390625, 0.1429443359375, 0.0099945068359375, 5.7578086853027344e-05, 0.08160400390625, 3.4570693969726562e-06, 0.00011837482452392578, 0.01512908935546875, 0.02886962890625, 0.00292205810546875, 0.488037109375, 0.004093170166015625, 0.00457000732421875, 0.1795654296875, 0.2178955078125, 0.0035152435302734375, 0.050018310546875, 0.070068359375, 0.253173828125, 0.00946807861328125, 0.0029754638671875, 1.2755393981933594e-05, 0.329833984375, 6.9141387939453125e-06, 0.0012645721435546875, 0.000652313232421875, 0.0014524459838867188, 0.01097869873046875, 0.018096923828125, 0.054718017578125, 0.0023937225341796875, 0.03558349609375, 0.1170654296875, 4.0531158447265625e-06, 3.2067298889160156e-05, 0.0011730194091796875, 0.0231475830078125, 0.1640625, 0.0006871223449707031, 0.01422882080078125, 0.00722503662109375], "tokens": [324, 320, 291, 320, 291, 442, 429, 35, 45, 284, 320, 446, 1022, 275, 319, 358, 1928, 2907, 322, 802, 4906, 372, 2290, 322, 2401, 4121, 372, 322, 3191, 5341, 32, 275, 319, 5384, 319, 477, 753, 663, 225, 322, 5341, 372, 2290, 275, 319, 477, 601, 322, 2401, 1650, 432, 322]}
{"line_number": 1776, "line_type": "original", "code": "        int len = size - strLen + 1;", "entropy": 2.365234375, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [3.21875, 9.5234375, 5.14453125, 0.62060546875, 1.1064453125, 3.330078125, 4.21875, 0.427978515625, 0.77490234375, 0.0035076141357421875, 0.0007462501525878906, 0.0205535888671875], "tokens": [351, 629, 2069, 280, 1334, 429, 596, 5745, 474, 225, 35, 45]}
{"line_number": 1776, "line_type": "generated", "code": "\n        }\n        return -1;\n    }\n\n    /**\n     * Searches the string builder to find the last reference to the specified character.\n     * \n     * @param ch  the character to find\n     * @return the last index of the character,", "entropy": 0.0533447265625, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [0.12548828125, 0.0194854736328125, 0.01282501220703125, 0.0007238388061523438, 0.000629425048828125, 9.250640869140625e-05, 0.0008311271667480469, 0.0218963623046875, 0.0008249282836914062, 0.213134765625, 0.122802734375, 0.00986480712890625, 6.031990051269531e-05, 0.07965087890625, 4.0531158447265625e-06, 0.00010800361633300781, 0.0135345458984375, 0.023651123046875, 0.00250244140625, 0.472412109375, 0.003978729248046875, 0.00408172607421875, 0.19140625, 0.2242431640625, 0.00342559814453125, 0.044525146484375, 0.064697265625, 0.271728515625, 0.00939178466796875, 0.003185272216796875, 1.0609626770019531e-05, 0.37353515625, 6.67572021484375e-06, 0.001308441162109375, 0.0006079673767089844, 0.0019931793212890625, 0.011077880859375, 0.0147857666015625, 0.056243896484375, 0.0025119781494140625, 0.03472900390625, 0.133544921875, 4.5299530029296875e-06, 2.968311309814453e-05, 0.0013093948364257812, 0.02203369140625, 0.13916015625, 0.0007119178771972656, 0.0162353515625, 0.006744384765625, 0.006683349609375, 0.00809478759765625], "tokens": [291, 320, 291, 442, 429, 35, 45, 284, 320, 446, 1022, 275, 319, 358, 1928, 2907, 322, 802, 4906, 372, 2290, 322, 2401, 4121, 372, 322, 3191, 5341, 32, 275, 319, 5384, 319, 477, 753, 663, 225, 322, 5341, 372, 2290, 275, 319, 477, 601, 322, 2401, 1650, 432, 322, 5341, 30]}
{"line_number": 1778, "line_type": "original", "code": "        for (int i = startIndex; i < len; i++) {", "entropy": 0.455810546875, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [3.7109375, 1.9423828125, 0.051727294921875, 0.01812744140625, 0.172607421875, 0.00583648681640625, 0.43115234375, 0.082275390625, 0.01148223876953125, 0.054901123046875, 0.276611328125, 0.0167388916015625, 0.00952911376953125, 0.007373809814453125, 0.042449951171875], "tokens": [351, 436, 308, 410, 595, 280, 23529, 45, 595, 333, 2069, 45, 595, 1987, 301]}
{"line_number": 1778, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Searches the string builder for the last reference to the specified character.\n     * \n     * @param ch  the character to find\n     * @return the last index of the character, or -1 if not found\n     */", "entropy": 0.1107177734375, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [0.6904296875, 0.218994140625, 0.268798828125, 0.08062744140625, 0.01389312744140625, 8.165836334228516e-05, 0.06884765625, 3.337860107421875e-06, 0.00010514259338378906, 0.011627197265625, 0.01739501953125, 0.002567291259765625, 1.4873046875, 0.169921875, 0.49853515625, 0.67822265625, 0.00641632080078125, 0.1771240234375, 0.07879638671875, 0.22119140625, 0.016387939453125, 0.00402069091796875, 9.059906005859375e-06, 0.498779296875, 8.463859558105469e-06, 0.001010894775390625, 0.0006542205810546875, 0.0021514892578125, 0.01316070556640625, 0.015655517578125, 0.06329345703125, 0.002941131591796875, 0.058502197265625, 0.09246826171875, 3.5762786865234375e-06, 2.8133392333984375e-05, 0.0011730194091796875, 0.03216552734375, 0.1328125, 0.0007543563842773438, 0.017364501953125, 0.008392333984375, 0.006954193115234375, 0.00878143310546875, 0.039093017578125, 0.003910064697265625, 5.638599395751953e-05, 0.0008516311645507812, 0.0022220611572265625, 0.00017559528350830078, 0.00472259521484375, 0.03924560546875], "tokens": [284, 320, 446, 1022, 275, 319, 358, 1928, 2907, 322, 802, 4906, 436, 322, 2401, 4121, 372, 322, 3191, 5341, 32, 275, 319, 5384, 319, 477, 753, 663, 225, 322, 5341, 372, 2290, 275, 319, 477, 601, 322, 2401, 1650, 432, 322, 5341, 30, 556, 429, 35, 415, 646, 2431, 275, 569]}
{"line_number": 1779, "line_type": "original", "code": "            for (int j = 0; j < strLen; j++) {", "entropy": 0.8125, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [7.46484375, 3.197265625, 0.04180908203125, 0.0276336669921875, 1.49609375, 0.00982666015625, 0.26513671875, 0.1446533203125, 0.07293701171875, 0.043670654296875, 0.0021762847900390625, 0.521484375, 0.300048828125, 0.032012939453125, 0.03271484375, 0.00899505615234375, 0.1485595703125], "tokens": [1468, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 596, 5745, 45, 594, 1987, 301]}
{"line_number": 1779, "line_type": "generated", "code": "\n    /**\n     * Searches the string builder to find the last reference to the specified character.\n     * \n     * @param ch  the character to find\n     * @return the last index of the character, or -1 if not found\n     */\n   ", "entropy": 0.06976318359375, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [0.775390625, 0.170166015625, 0.0284423828125, 9.357929229736328e-05, 0.198974609375, 8.106231689453125e-06, 9.524822235107422e-05, 0.01983642578125, 0.0243377685546875, 0.0023040771484375, 0.55810546875, 0.006473541259765625, 0.005794525146484375, 0.196533203125, 0.33349609375, 0.00499725341796875, 0.058258056640625, 0.08294677734375, 0.281494140625, 0.01079559326171875, 0.0038242340087890625, 2.2530555725097656e-05, 0.331298828125, 1.1920928955078125e-05, 0.0011730194091796875, 0.0007052421569824219, 0.0022716522216796875, 0.01142120361328125, 0.01312255859375, 0.058837890625, 0.002086639404296875, 0.041473388671875, 0.1025390625, 5.125999450683594e-06, 3.24249267578125e-05, 0.001293182373046875, 0.024322509765625, 0.157958984375, 0.0006008148193359375, 0.01393890380859375, 0.006732940673828125, 0.005340576171875, 0.0069580078125, 0.026458740234375, 0.0037670135498046875, 6.759166717529297e-05, 0.0006947517395019531, 0.0015363693237304688, 0.0001634359359741211, 0.004367828369140625, 0.038665771484375, 0.007068634033203125], "tokens": [284, 1022, 275, 319, 358, 1928, 2907, 322, 802, 4906, 372, 2290, 322, 2401, 4121, 372, 322, 3191, 5341, 32, 275, 319, 5384, 319, 477, 753, 663, 225, 322, 5341, 372, 2290, 275, 319, 477, 601, 322, 2401, 1650, 432, 322, 5341, 30, 556, 429, 35, 415, 646, 2431, 275, 569, 284]}
{"line_number": 1780, "line_type": "original", "code": "                if (str.charAt(j) != thisBuf[i + j]) {", "entropy": 1.3173828125, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [9.09375, 2.43359375, 0.071533203125, 2.943359375, 1.615234375, 2.576171875, 0.01105499267578125, 2.25390625, 0.06573486328125, 0.4306640625, 1.46875, 0.036895751953125, 0.00493621826171875, 0.1993408203125, 0.2998046875, 0.0089874267578125, 0.037689208984375, 0.1734619140625], "tokens": [2071, 415, 308, 466, 32, 15611, 26, 92, 27, 863, 458, 7346, 77, 91, 474, 594, 1130, 301]}
{"line_number": 1780, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [], "tokens": []}
