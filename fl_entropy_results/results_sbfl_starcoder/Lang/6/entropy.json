{"line_number": 108, "line_type": "original", "code": "        CharSequenceTranslator[] newArray = new CharSequenceTranslator[translators.length + 1];", "entropy": 0.85791015625, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [5.54296875, 11.078125, 0.0182342529296875, 0.0816650390625, 0.07952880859375, 0.0005292892456054688, 0.0192413330078125, 0.0307159423828125, 0.0013532638549804688, 7.963180541992188e-05, 0.058563232421875, 0.1527099609375, 0.000492095947265625, 5.1856040954589844e-05, 0.00745391845703125, 0.002712249755859375, 0.052825927734375, 0.0105743408203125, 0.01055145263671875, 0.00202178955078125], "tokens": [351, 36629, 23257, 1178, 537, 1261, 280, 537, 36629, 23257, 77, 1545, 94, 4044, 32, 1322, 474, 225, 35, 970]}
{"line_number": 108, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [], "tokens": []}
{"line_number": 109, "line_type": "original", "code": "        newArray[0] = this;", "entropy": 1.6015625, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [5.8125, 6.8359375, 1.580078125, 0.0093994140625, 0.005245208740234375, 0.01236724853515625, 0.0007519721984863281, 0.0308380126953125, 0.1280517578125], "tokens": [351, 537, 1261, 77, 34, 79, 280, 458, 45]}
{"line_number": 109, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [], "tokens": []}
{"line_number": 110, "line_type": "original", "code": "        System.arraycopy(translators, 0, newArray, 1, translators.length);", "entropy": 0.64794921875, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [5.87890625, 7.7578125, 0.01342010498046875, 0.6005859375, 0.0237884521484375, 1.1884765625, 0.0036525726318359375, 7.319450378417969e-05, 0.004817962646484375, 0.006381988525390625, 0.00836181640625, 0.0004057884216308594, 0.008148193359375, 0.01503753662109375, 0.00109100341796875, 0.00487518310546875, 0.01020050048828125, 0.0005364418029785156, 0.017669677734375, 1.621246337890625e-05, 6.198883056640625e-06, 0.0004949569702148438, 0.0010576248168945312, 0.00791168212890625], "tokens": [351, 1171, 32, 40863, 26, 1545, 94, 4044, 30, 225, 34, 30, 537, 1261, 30, 225, 35, 30, 1630, 94, 4044, 32, 1322, 293]}
{"line_number": 110, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [], "tokens": []}
{"line_number": 111, "line_type": "original", "code": "        return new AggregateTranslator(newArray);", "entropy": 1.1708984375, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [5.55859375, 2.73046875, 0.396728515625, 0.408203125, 0.00040793418884277344, 0.174072265625, 1.2041015625, 0.051544189453125, 0.01139068603515625], "tokens": [351, 442, 537, 33882, 23257, 26, 890, 1261, 293]}
{"line_number": 111, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [], "tokens": []}
{"line_number": 32, "line_type": "original", "code": "public abstract class CharSequenceTranslator {", "entropy": 2.037109375, "is_bug_line": false, "sus_score": 0.22941573387056174, "per_token_entropy": [6.70703125, 1.55859375, 1.841796875, 1.099609375, 0.0015897750854492188, 1.021484375], "tokens": [923, 5547, 443, 36629, 23257, 301]}
{"line_number": 32, "line_type": "generated", "code": "\n     * <p>\n     * This method is used to escape a <code>String</code> using the\n     * specified {@link CharacterEscaper}. The <code>String</code>\n     * <code>s</code> is escaped using", "entropy": 0.496337890625, "is_bug_line": false, "sus_score": 0.22941573387056174, "per_token_entropy": [0.92724609375, 0.145751953125, 0.9287109375, 0.1986083984375, 0.004253387451171875, 1.2451171875, 0.00040602684020996094, 1.798828125, 0.4013671875, 0.63916015625, 2.123046875, 0.35400390625, 0.054779052734375, 1.078125, 1.06640625, 0.02203369140625, 0.0029582977294921875, 0.0650634765625, 0.001132965087890625, 4.5418739318847656e-05, 0.0391845703125, 0.265869140625, 0.21484375, 1.2197265625, 0.001132965087890625, 1.6767578125, 1.255859375, 0.1904296875, 1.25, 0.278564453125, 0.48974609375, 0.054107666015625, 1.259765625, 0.87255859375, 0.0008416175842285156, 0.001049041748046875, 0.671875, 0.0018396377563476562, 4.172325134277344e-06, 0.00037288665771484375, 0.83837890625, 0.00014460086822509766, 0.90185546875, 0.00827789306640625, 0.0017366409301757812, 0.916015625, 0.000518798828125, 4.38690185546875e-05, 0.00013744831085205078, 0.019012451171875, 1.2998046875, 1.0263671875], "tokens": [275, 319, 333, 98, 48, 275, 319, 1348, 1411, 438, 1654, 372, 15820, 312, 333, 687, 48, 652, 377, 687, 48, 1471, 322, 275, 319, 3191, 3088, 1204, 15041, 24866, 5874, 4009, 886, 333, 687, 48, 652, 377, 687, 48, 275, 319, 333, 687, 48, 101, 377, 687, 48, 438, 31253, 1471]}
{"line_number": 94, "line_type": "original", "code": "            for (int pt = 0; pt < consumed; pt++) {", "entropy": 2.017578125, "is_bug_line": false, "sus_score": 0.1796053020267749, "per_token_entropy": [7.39453125, 4.671875, 0.09771728515625, 0.281005859375, 8.7578125, 1.4345703125, 0.7197265625, 0.01558685302734375, 0.230224609375, 0.12744140625, 0.0377197265625, 8.234375, 0.054901123046875, 0.105224609375, 0.0755615234375, 0.053466796875], "tokens": [1468, 436, 308, 410, 9222, 280, 225, 34, 45, 9222, 333, 30647, 45, 9222, 1987, 301]}
{"line_number": 94, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.1796053020267749, "per_token_entropy": [], "tokens": []}
{"line_number": 95, "line_type": "original", "code": "                pos += Character.charCount(Character.codePointAt(input, pos));", "entropy": 1.3515625, "is_bug_line": true, "sus_score": 0.1796053020267749, "per_token_entropy": [9.5625, 10.2109375, 0.55908203125, 1.4833984375, 0.00725555419921875, 0.06939697265625, 0.0006079673767089844, 0.0033092498779296875, 2.267578125, 0.00925445556640625, 0.0137176513671875, 0.00021386146545410156, 0.0038890838623046875, 0.00775146484375, 0.049652099609375, 0.0020694732666015625, 0.044647216796875, 0.033203125], "tokens": [2071, 3400, 1454, 15041, 32, 1594, 1534, 26, 6881, 32, 687, 1943, 1076, 26, 1131, 30, 3400, 876]}
{"line_number": 95, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": true, "sus_score": 0.1796053020267749, "per_token_entropy": [], "tokens": []}
{"line_number": 54, "line_type": "original", "code": "        if (input == null) {", "entropy": 1.849609375, "is_bug_line": false, "sus_score": 0.16666666666666666, "per_token_entropy": [4.0859375, 2.7578125, 0.224365234375, 7.19140625, 0.0845947265625, 0.0017213821411132812, 0.1014404296875, 0.348876953125], "tokens": [351, 415, 308, 1131, 610, 744, 27, 301]}
{"line_number": 54, "line_type": "generated", "code": "\n     * @param translators CharSequenceTranslator array of translators to merge with this one\n     * @return CharSequenceTranslator merge of this translator and the others\n     * @throws IllegalArgumentException if translators array is null\n     */\n    public final CharSequenceTranslator with", "entropy": 0.2486572265625, "is_bug_line": false, "sus_score": 0.16666666666666666, "per_token_entropy": [0.5791015625, 0.27392578125, 0.2034912109375, 0.0137786865234375, 0.703125, 0.006710052490234375, 3.4570693969726562e-06, 0.015960693359375, 0.37890625, 0.057159423828125, 0.0013723373413085938, 0.208251953125, 0.0002257823944091797, 3.337860107421875e-06, 0.2069091796875, 0.194580078125, 0.266357421875, 0.57763671875, 0.1805419921875, 0.2181396484375, 0.01424407958984375, 0.001560211181640625, 0.01519775390625, 0.033935546875, 0.00994873046875, 1.9189453125, 0.002529144287109375, 0.02423095703125, 0.23876953125, 0.41455078125, 0.294189453125, 1.3974609375, 0.041595458984375, 1.55078125, 0.017120361328125, 0.3447265625, 0.138427734375, 0.0288848876953125, 0.37451171875, 0.00021851062774658203, 3.5762786865234375e-07, 0.6220703125, 0.3486328125, 0.0123138427734375, 0.55859375, 0.2227783203125, 0.0280914306640625, 0.028778076171875, 0.1019287109375, 0.035308837890625, 0.00012087821960449219, 0.023101806640625], "tokens": [275, 319, 477, 753, 1630, 94, 4044, 36629, 23257, 1417, 432, 1630, 94, 4044, 372, 3991, 623, 458, 1591, 275, 319, 477, 601, 36629, 23257, 3991, 432, 458, 36647, 461, 322, 10714, 275, 319, 477, 5117, 12137, 415, 1630, 94, 4044, 1417, 438, 744, 275, 569, 284, 562, 1158, 36629, 23257, 623]}
{"line_number": 58, "line_type": "original", "code": "            StringWriter writer = new StringWriter(input.length() * 2);", "entropy": 1.24609375, "is_bug_line": false, "sus_score": 0.16666666666666666, "per_token_entropy": [7.0, 8.5625, 3.1875, 0.93505859375, 0.08251953125, 0.0180206298828125, 0.003631591796875, 3.552436828613281e-05, 0.529296875, 0.50830078125, 0.043701171875, 0.003452301025390625, 0.164306640625, 0.1260986328125, 0.016571044921875, 0.011627197265625, 0.0008091926574707031], "tokens": [1468, 892, 3976, 7272, 280, 537, 892, 3976, 26, 1131, 32, 1322, 346, 319, 225, 36, 293]}
{"line_number": 58, "line_type": "generated", "code": "\n        return new AggregateTranslator(this, translators);\n    }\n\n    /**\n     * <p>Escapes the characters in a CharSequence using HTML entities.</p>\n     *\n     * <p>For example, the character sequence <code>\"bread\"</", "entropy": 0.243896484375, "is_bug_line": false, "sus_score": 0.16666666666666666, "per_token_entropy": [0.21630859375, 0.62451171875, 0.036712646484375, 0.033599853515625, 0.0009121894836425781, 0.01605224609375, 0.050933837890625, 0.0172882080078125, 0.123291015625, 2.3484230041503906e-05, 0.00011348724365234375, 0.005664825439453125, 0.08197021484375, 0.0010938644409179688, 0.55224609375, 0.2059326171875, 0.033477783203125, 0.00037026405334472656, 1.71875, 0.00620269775390625, 0.004474639892578125, 0.94091796875, 3.790855407714844e-05, 0.85546875, 0.1285400390625, 0.0025997161865234375, 1.5735626220703125e-05, 0.2939453125, 0.01084136962890625, 1.267578125, 0.00446319580078125, 1.09375, 4.1961669921875e-05, 0.002124786376953125, 0.04864501953125, 0.0034942626953125, 0.66259765625, 0.0012655258178710938, 0.067626953125, 0.0250396728515625, 0.00386810302734375, 0.3046875, 0.012908935546875, 0.3779296875, 0.3173828125, 1.2998046875, 0.1109619140625, 0.408935546875, 0.191650390625, 0.0264739990234375, 0.28662109375, 0.1981201171875], "tokens": [291, 442, 537, 33882, 23257, 26, 578, 30, 1630, 94, 4044, 293, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 24866, 10247, 322, 7125, 328, 312, 36629, 1471, 5780, 11740, 1730, 98, 48, 275, 319, 275, 319, 333, 98, 48, 1562, 2280, 30, 322, 5341, 6613, 333, 687, 5844, 45494, 14296]}
{"line_number": 59, "line_type": "original", "code": "            translate(input, writer);", "entropy": 2.666015625, "is_bug_line": false, "sus_score": 0.16666666666666666, "per_token_entropy": [6.11328125, 8.2578125, 0.2169189453125, 0.6015625, 0.046295166015625, 3.39453125, 0.032196044921875], "tokens": [1468, 8778, 26, 1131, 30, 7272, 293]}
{"line_number": 59, "line_type": "generated", "code": "\n        newArray[0] = this;\n        System.arraycopy(translators, 0, newArray, 1, translators.length);\n        return new AggregateTranslator(newArray);\n    }\n\n    /**\n     * <p>\n    ", "entropy": 0.11077880859375, "is_bug_line": false, "sus_score": 0.16666666666666666, "per_token_entropy": [0.1597900390625, 1.0810546875, 5.066394805908203e-05, 0.0006213188171386719, 0.1680908203125, 0.007228851318359375, 0.0002491474151611328, 0.0008883476257324219, 0.001987457275390625, 0.1082763671875, 0.1439208984375, 0.0008945465087890625, 2.586841583251953e-05, 0.0007152557373046875, 0.005279541015625, 4.374980926513672e-05, 2.288818359375e-05, 0.0007262229919433594, 0.0019683837890625, 0.00018095970153808594, 0.00039768218994140625, 0.0021114349365234375, 2.562999725341797e-05, 0.0003502368927001953, 0.0016412734985351562, 0.0014629364013671875, 0.0003898143768310547, 0.0057373046875, 6.794929504394531e-06, 2.7894973754882812e-05, 0.00010573863983154297, 0.00039315223693847656, 0.00225830078125, 0.08319091796875, 0.010650634765625, 0.00949859619140625, 0.002338409423828125, 0.0008740425109863281, 0.002017974853515625, 0.0007119178771972656, 2.2411346435546875e-05, 0.0021038055419921875, 0.032928466796875, 0.0003714561462402344, 0.56494140625, 0.15234375, 0.0137939453125, 0.00030732154846191406, 1.8740234375, 0.006969451904296875, 0.004444122314453125, 1.3037109375], "tokens": [291, 537, 1261, 77, 34, 79, 280, 458, 45, 291, 1171, 32, 40863, 26, 1545, 94, 4044, 30, 225, 34, 30, 537, 1261, 30, 225, 35, 30, 1630, 94, 4044, 32, 1322, 293, 291, 442, 537, 33882, 23257, 26, 890, 1261, 293, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 275]}
{"line_number": 76, "line_type": "original", "code": "        if (out == null) {", "entropy": 1.5029296875, "is_bug_line": false, "sus_score": 0.16222142113076254, "per_token_entropy": [4.3671875, 3.158203125, 0.1051025390625, 4.078125, 0.0740966796875, 0.002017974853515625, 0.008941650390625, 0.233642578125], "tokens": [351, 415, 308, 541, 610, 744, 27, 301]}
{"line_number": 76, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.16222142113076254, "per_token_entropy": [], "tokens": []}
{"line_number": 79, "line_type": "original", "code": "        if (input == null) {", "entropy": 1.4580078125, "is_bug_line": false, "sus_score": 0.16222142113076254, "per_token_entropy": [4.94140625, 3.01171875, 0.1414794921875, 2.859375, 0.5888671875, 0.005863189697265625, 0.036590576171875, 0.080322265625], "tokens": [351, 415, 308, 1131, 610, 744, 27, 301]}
{"line_number": 79, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.16222142113076254, "per_token_entropy": [], "tokens": []}
{"line_number": 82, "line_type": "original", "code": "        int pos = 0;", "entropy": 1.3203125, "is_bug_line": false, "sus_score": 0.16222142113076254, "per_token_entropy": [5.11328125, 3.400390625, 0.322265625, 0.3662109375, 0.004550933837890625, 8.726119995117188e-05, 0.035858154296875], "tokens": [351, 629, 3400, 280, 225, 34, 45]}
{"line_number": 82, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.16222142113076254, "per_token_entropy": [], "tokens": []}
{"line_number": 83, "line_type": "original", "code": "        int len = input.length();", "entropy": 1.330078125, "is_bug_line": false, "sus_score": 0.16222142113076254, "per_token_entropy": [5.09375, 4.35546875, 0.75390625, 0.25146484375, 0.1712646484375, 0.010040283203125, 0.00231170654296875, 0.00432586669921875], "tokens": [351, 629, 2069, 280, 1509, 32, 1322, 473]}
{"line_number": 83, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.16222142113076254, "per_token_entropy": [], "tokens": []}
{"line_number": 84, "line_type": "original", "code": "        while (pos < len) {", "entropy": 1.46484375, "is_bug_line": false, "sus_score": 0.16222142113076254, "per_token_entropy": [4.1484375, 6.82421875, 0.08734130859375, 0.32666015625, 0.14892578125, 0.0618896484375, 0.08795166015625, 0.033935546875], "tokens": [351, 2218, 308, 966, 333, 2069, 27, 301]}
{"line_number": 84, "line_type": "generated", "code": "\n    /**\n     * <p>Returns an upper case hexadecimal <code>String</code> for the given\n     * character.</p>\n     *\n     * @param codepoint The codepoint to convert.\n     * @param prefix The prefix to append before", "entropy": 0.2130126953125, "is_bug_line": false, "sus_score": 0.16222142113076254, "per_token_entropy": [0.8642578125, 0.199462890625, 0.044403076171875, 0.0031948089599609375, 0.470703125, 0.0012140274047851562, 0.003692626953125, 0.93310546875, 0.7392578125, 0.077392578125, 0.00027060508728027344, 0.192626953125, 0.027191162109375, 8.881092071533203e-05, 0.00022327899932861328, 0.0005440711975097656, 0.00029349327087402344, 0.0003905296325683594, 0.00012624263763427734, 0.0011262893676757812, 0.626953125, 0.0033931732177734375, 0.0985107421875, 0.0002646446228027344, 0.1134033203125, 0.68408203125, 0.0001455545425415039, 0.0010242462158203125, 0.005428314208984375, 0.0005078315734863281, 0.045806884765625, 0.0009784698486328125, 0.130615234375, 0.004375457763671875, 0.1539306640625, 0.01727294921875, 0.01552581787109375, 0.0426025390625, 0.0014390945434570312, 0.0010423660278320312, 0.0013065338134765625, 0.0080108642578125, 0.004547119140625, 0.0005278587341308594, 0.0014371871948242188, 1.314453125, 1.669921875, 0.5615234375, 0.125732421875, 0.1966552734375, 0.64892578125, 1.0419921875], "tokens": [284, 1022, 275, 319, 333, 98, 48, 6970, 600, 8342, 1135, 28148, 333, 687, 48, 652, 377, 687, 48, 436, 322, 2702, 275, 319, 5341, 1730, 98, 48, 275, 319, 275, 319, 477, 753, 1340, 1493, 886, 1340, 1493, 372, 4483, 32, 275, 319, 477, 753, 5202, 886, 5202, 372, 5489, 2670]}
{"line_number": 85, "line_type": "original", "code": "            int consumed = translate(input, pos, out);", "entropy": 1.130859375, "is_bug_line": false, "sus_score": 0.16222142113076254, "per_token_entropy": [8.046875, 3.1875, 0.044921875, 0.345458984375, 0.8212890625, 0.2132568359375, 0.1937255859375, 0.048553466796875, 0.39306640625, 0.01209259033203125, 0.2388916015625, 0.026641845703125], "tokens": [1468, 629, 30647, 280, 8778, 26, 1131, 30, 3400, 30, 963, 293]}
{"line_number": 85, "line_type": "generated", "code": "\n    /**\n     * <p>Returns an upper case hexadecimal <code>String</code> for the given\n     * character.</p>\n     *\n     * @param codepoint The codepoint to convert.\n     * @return An upper case hexadecimal <code", "entropy": 0.140869140625, "is_bug_line": false, "sus_score": 0.16222142113076254, "per_token_entropy": [1.169921875, 0.4619140625, 0.2283935546875, 0.004863739013671875, 0.89892578125, 0.00330352783203125, 0.003803253173828125, 0.8876953125, 0.9619140625, 0.0867919921875, 0.0002598762512207031, 0.186279296875, 0.024932861328125, 0.0001246929168701172, 0.00022363662719726562, 0.0004742145538330078, 0.0003223419189453125, 8.761882781982422e-05, 0.00014019012451171875, 0.0012407302856445312, 0.66357421875, 0.0031948089599609375, 0.09539794921875, 0.00026154518127441406, 0.126220703125, 0.77880859375, 0.00018036365509033203, 0.0010461807250976562, 0.0053863525390625, 0.0008296966552734375, 0.042633056640625, 0.0012559890747070312, 0.0831298828125, 0.005794525146484375, 0.1839599609375, 0.030426025390625, 0.0178070068359375, 0.050811767578125, 0.0017385482788085938, 0.0015163421630859375, 0.0015954971313476562, 0.00807952880859375, 0.00403594970703125, 0.0008530616760253906, 0.0014066696166992188, 0.267578125, 0.0220794677734375, 0.0015516281127929688, 0.00011491775512695312, 0.0002040863037109375, 0.0005855560302734375, 3.218650817871094e-05], "tokens": [284, 1022, 275, 319, 333, 98, 48, 6970, 600, 8342, 1135, 28148, 333, 687, 48, 652, 377, 687, 48, 436, 322, 2702, 275, 319, 5341, 1730, 98, 48, 275, 319, 275, 319, 477, 753, 1340, 1493, 886, 1340, 1493, 372, 4483, 32, 275, 319, 477, 601, 2244, 8342, 1135, 28148, 333, 687]}
{"line_number": 86, "line_type": "original", "code": "            if (consumed == 0) {", "entropy": 1.72265625, "is_bug_line": false, "sus_score": 0.16222142113076254, "per_token_entropy": [7.2890625, 2.205078125, 0.2027587890625, 4.58984375, 0.59423828125, 0.07159423828125, 0.40576171875, 0.08380126953125, 0.06427001953125], "tokens": [1468, 415, 308, 43718, 610, 225, 34, 27, 301]}
{"line_number": 86, "line_type": "generated", "code": "\n    /**\n     * <p>Escapes the characters in a <code>String</code> using HTML entities.\n     *\n     * <p>For example:\n     * <table border=\"1\" summary=\"Escaping examples\">\n     *  <", "entropy": 0.272216796875, "is_bug_line": false, "sus_score": 0.16222142113076254, "per_token_entropy": [0.93603515625, 0.277099609375, 0.0482177734375, 0.00433349609375, 0.5341796875, 0.0015916824340820312, 0.005062103271484375, 1.5859375, 0.00011229515075683594, 0.34033203125, 0.1651611328125, 0.002162933349609375, 7.95125961303711e-05, 0.0867919921875, 6.246566772460938e-05, 4.9591064453125e-05, 0.013427734375, 3.0994415283203125e-05, 1.1801719665527344e-05, 0.028564453125, 0.36572265625, 0.95556640625, 0.0059051513671875, 0.341552734375, 0.006763458251953125, 0.0010175704956054688, 1.0908203125, 0.0009565353393554688, 0.85986328125, 0.038726806640625, 0.003582000732421875, 0.1754150390625, 0.05804443359375, 0.44140625, 0.26904296875, 0.0002532005310058594, 0.06005859375, 0.2073974609375, 0.23876953125, 0.0166168212890625, 0.002971649169921875, 0.56005859375, 1.1162109375, 0.0343017578125, 0.2432861328125, 0.02557373046875, 1.9833984375, 0.03533935546875, 0.0009098052978515625, 0.01454925537109375, 0.97314453125, 0.00042438507080078125], "tokens": [284, 1022, 275, 319, 333, 98, 48, 24866, 10247, 322, 7125, 328, 312, 333, 687, 48, 652, 377, 687, 48, 1471, 5780, 11740, 32, 275, 319, 275, 319, 333, 98, 48, 1562, 2280, 44, 275, 319, 333, 1274, 3168, 347, 35, 20, 8822, 347, 24866, 40971, 8272, 413, 275, 319, 225, 333]}
