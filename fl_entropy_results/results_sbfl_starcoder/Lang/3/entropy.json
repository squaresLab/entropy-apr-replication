{"line_number": 494, "line_type": "original", "code": "                dec = str.substring(decPos + 1);", "entropy": 1.470703125, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [3.9609375, 8.96875, 0.231201171875, 2.974609375, 0.1456298828125, 0.018707275390625, 0.0017070770263671875, 0.3603515625, 0.0007114410400390625, 0.040008544921875, 0.004932403564453125, 0.007205963134765625, 2.41015625], "tokens": [2071, 5973, 280, 596, 32, 8723, 26, 6114, 2996, 474, 225, 35, 293]}
{"line_number": 494, "line_type": "generated", "code": "\n                    }\n                    return createDouble(numeric);\n                case 'd' :\n                case 'D' :\n                    try {\n                        final Double d = NumberUtils.createDouble(numeric);\n                        if (!(d.isInfinite() || (d.floatValue()", "entropy": 0.07781982421875, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [0.444580078125, 0.007717132568359375, 0.1781005859375, 1.1904296875, 0.1546630859375, 0.57861328125, 5.4836273193359375e-05, 0.56396484375, 0.24951171875, 0.0360107421875, 0.003231048583984375, 5.2094459533691406e-05, 0.0002416372299194336, 0.00021064281463623047, 8.702278137207031e-05, 0.0007104873657226562, 0.00012612342834472656, 3.6954879760742188e-06, 2.1457672119140625e-06, 0.00022733211517333984, 7.05718994140625e-05, 0.054962158203125, 0.19384765625, 0.0008435249328613281, 0.014556884765625, 0.046722412109375, 0.053924560546875, 0.0019521713256835938, 0.0072479248046875, 0.078125, 4.410743713378906e-05, 0.0002161264419555664, 6.115436553955078e-05, 0.0081787109375, 0.00012636184692382812, 0.0018548965454101562, 0.0023822784423828125, 0.01351165771484375, 0.01165771484375, 0.02777099609375, 0.0023212432861328125, 0.00040602684020996094, 8.83340835571289e-05, 2.9802322387695312e-06, 0.0002219676971435547, 0.004871368408203125, 0.0043487548828125, 0.001739501953125, 0.0005321502685546875, 0.106689453125, 1.1920928955078125e-07, 0.00026607513427734375], "tokens": [528, 320, 528, 442, 1487, 4075, 26, 10125, 293, 400, 1135, 330, 86, 25, 499, 400, 1135, 330, 54, 25, 499, 528, 1596, 301, 715, 1158, 6934, 343, 280, 5104, 2755, 32, 1297, 4075, 26, 10125, 293, 715, 415, 11007, 86, 32, 28823, 11949, 346, 1276, 308, 86, 32, 1808, 882, 346]}
{"line_number": 573, "line_type": "original", "code": "            exp = null;", "entropy": 2.70703125, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [5.92578125, 5.6796875, 0.226806640625, 1.6884765625, 0.010650634765625], "tokens": [1468, 2910, 280, 744, 45]}
{"line_number": 573, "line_type": "generated", "code": "\n        }\n        for (int i = str.length() - 1; i >= 0; i--) {\n            if (str.charAt(i)!= '0') {\n                return false;\n            }\n        }\n        return true;\n    }", "entropy": 0.0430908203125, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [0.3017578125, 0.0633544921875, 0.150146484375, 0.467041015625, 0.01215362548828125, 0.0701904296875, 0.01666259765625, 0.00836181640625, 0.08099365234375, 0.0007677078247070312, 0.00014448165893554688, 0.004528045654296875, 0.0004038810729980469, 0.0019817352294921875, 0.00011789798736572266, 0.006137847900390625, 0.0002472400665283203, 0.09796142578125, 0.006572723388671875, 0.00011050701141357422, 0.00650787353515625, 0.01220703125, 0.0019626617431640625, 0.00830078125, 0.05377197265625, 0.1585693359375, 0.043121337890625, 0.005718231201171875, 7.104873657226562e-05, 4.553794860839844e-05, 4.565715789794922e-05, 0.0007567405700683594, 0.0003018379211425781, 0.0299072265625, 0.01097869873046875, 3.24249267578125e-05, 0.0092926025390625, 0.00457000732421875, 0.0435791015625, 0.00972747802734375, 0.0004050731658935547, 0.0017375946044921875, 0.09796142578125, 0.0003447532653808594, 0.168701171875, 0.00047779083251953125, 0.02752685546875, 0.0019435882568359375, 0.197509765625, 0.0004558563232421875, 0.050750732421875, 0.0023651123046875], "tokens": [291, 320, 291, 436, 308, 410, 595, 280, 596, 32, 1322, 346, 429, 225, 35, 45, 595, 2377, 225, 34, 45, 595, 15353, 301, 324, 415, 308, 466, 32, 15611, 26, 91, 27, 863, 330, 34, 683, 301, 400, 442, 901, 45, 324, 320, 291, 320, 291, 442, 861, 45, 284, 320]}
{"line_number": 594, "line_type": "original", "code": "                if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {", "entropy": 0.9892578125, "is_bug_line": true, "sus_score": 0.5, "per_token_entropy": [6.94140625, 5.8515625, 7.27734375, 5.70703125, 0.36279296875, 0.19140625, 0.00027441978454589844, 0.00806427001953125, 0.11822509765625, 0.119140625, 0.026580810546875, 0.02752685546875, 0.018829345703125, 0.0003685951232910156, 0.00681304931640625, 0.0016326904296875, 0.00424957275390625, 7.331371307373047e-05, 0.0183563232421875, 0.0005679130554199219, 0.62109375, 0.0330810546875, 0.2291259765625, 0.024627685546875, 0.00290679931640625, 0.0005984306335449219, 0.043548583984375, 0.0701904296875], "tokens": [2071, 415, 11007, 88, 32, 28823, 11949, 346, 1276, 308, 88, 32, 1808, 882, 346, 610, 225, 34, 32, 34, 56, 962, 653, 464, 76, 14641, 2610, 301]}
{"line_number": 594, "line_type": "generated", "code": "\n            return null;\n        }\n        try {\n            return Float.valueOf(str.trim());\n        } catch (final NumberFormatException nfe) { // NOPMD\n            final String numeric = parseNumber(str);\n            try {\n                return Float.valueOf", "entropy": 0.2724609375, "is_bug_line": true, "sus_score": 0.5, "per_token_entropy": [0.26025390625, 0.10400390625, 0.048919677734375, 0.01611328125, 0.09307861328125, 0.0019474029541015625, 0.10595703125, 2.01953125, 0.01560211181640625, 0.211669921875, 0.10736083984375, 0.344482421875, 0.0021228790283203125, 0.0285491943359375, 0.00324249267578125, 0.0146331787109375, 0.91015625, 0.0009465217590332031, 0.01358795166015625, 0.0784912109375, 0.0006957054138183594, 0.004734039306640625, 0.007659912109375, 0.003875732421875, 0.0259552001953125, 8.940696716308594e-06, 0.0672607421875, 0.00015866756439208984, 0.002208709716796875, 0.0020542144775390625, 0.58447265625, 0.0004832744598388672, 0.00012612342834472656, 1.0371208190917969e-05, 0.06365966796875, 0.370849609375, 0.302978515625, 1.1669921875, 0.01139068603515625, 3.162109375, 0.51318359375, 0.60888671875, 0.00400543212890625, 1.333984375, 0.1641845703125, 1.0029296875, 0.0019130706787109375, 0.1031494140625, 0.0994873046875, 0.1783447265625, 0.00040268898010253906, 0.0017976760864257812], "tokens": [324, 442, 744, 45, 291, 320, 291, 1596, 301, 324, 442, 8174, 32, 9162, 26, 466, 32, 5464, 1035, 291, 320, 2368, 308, 3220, 5104, 25944, 310, 1225, 27, 301, 434, 489, 1952, 5108, 324, 1158, 892, 12738, 280, 3185, 1918, 26, 466, 293, 324, 1596, 301, 400, 442, 8174, 32, 9162]}
{"line_number": 595, "line_type": "original", "code": "                    return f;", "entropy": 4.296875, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [9.0, 2.19140625, 5.78125, 0.2181396484375], "tokens": [4696, 442, 296, 45]}
{"line_number": 595, "line_type": "generated", "code": "\n        }\n        try {\n            return Float.valueOf(str);\n        } catch (final NumberFormatException nfe) {\n            final String stripped = stripChars(str, DECIMAL_POINT);\n            if (stripped.length() > 0 && stripped", "entropy": 0.374755859375, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [0.260986328125, 0.0657958984375, 0.179931640625, 1.857421875, 0.01093292236328125, 0.1197509765625, 0.1241455078125, 0.312255859375, 0.00485992431640625, 0.05352783203125, 0.004543304443359375, 0.0213775634765625, 0.5546875, 0.15283203125, 0.0005116462707519531, 0.005580902099609375, 0.010467529296875, 0.006671905517578125, 0.017578125, 3.790855407714844e-05, 0.0654296875, 0.00024890899658203125, 0.003482818603515625, 0.002063751220703125, 0.68701171875, 0.5126953125, 0.376220703125, 2.546875, 0.0207061767578125, 0.2313232421875, 0.400390625, 0.256591796875, 0.006282806396484375, 0.1407470703125, 0.90869140625, 0.001064300537109375, 0.0032863616943359375, 1.3623046875, 0.9560546875, 0.04974365234375, 1.294921875, 0.0977783203125, 0.1309814453125, 4.76837158203125e-07, 0.0113067626953125, 0.7470703125, 0.00038361549377441406, 1.1689453125, 0.467529296875, 0.01125335693359375, 0.99169921875, 2.263671875], "tokens": [291, 320, 291, 1596, 301, 324, 442, 8174, 32, 9162, 26, 466, 293, 291, 320, 2368, 308, 3220, 5104, 25944, 310, 1225, 27, 301, 324, 1158, 892, 42701, 280, 16469, 16364, 26, 466, 30, 24308, 24037, 81, 9864, 293, 324, 415, 308, 2758, 7993, 32, 1322, 346, 848, 225, 34, 962, 42701]}
{"line_number": 492, "line_type": "original", "code": "                dec = str.substring(decPos + 1, expPos);", "entropy": 1.2001953125, "is_bug_line": false, "sus_score": 0.4472135954999579, "per_token_entropy": [4.6328125, 6.84375, 0.2147216796875, 2.501953125, 0.270751953125, 0.0276336669921875, 0.003032684326171875, 1.35546875, 0.0009264945983886719, 0.04248046875, 0.0269622802734375, 0.0152587890625, 0.54541015625, 2.65234375, 0.0014333724975585938, 0.0721435546875], "tokens": [2071, 5973, 280, 596, 32, 8723, 26, 6114, 2996, 474, 225, 35, 30, 2910, 2996, 293]}
{"line_number": 492, "line_type": "generated", "code": "\n                    } catch (final NumberFormatException nfe) { // NOPMD\n                        // ignore the bad number\n                    }\n                    break;\n                case 'd' :\n                case 'D' :\n                    try {\n                        final Double d = NumberUtils.createDouble(", "entropy": 0.1102294921875, "is_bug_line": false, "sus_score": 0.4472135954999579, "per_token_entropy": [0.1640625, 0.00386810302734375, 0.248046875, 0.01776123046875, 0.00455474853515625, 0.0011730194091796875, 5.614757537841797e-05, 0.031036376953125, 2.5033950805664062e-05, 0.004352569580078125, 0.0074310302734375, 0.391845703125, 0.00019919872283935547, 0.0001112222671508789, 4.863739013671875e-05, 0.048828125, 0.15185546875, 0.86328125, 0.084228515625, 0.08685302734375, 1.0810546875, 0.245361328125, 0.00019359588623046875, 0.253173828125, 1.765625, 0.00016307830810546875, 0.041259765625, 0.00220489501953125, 4.172325134277344e-05, 0.00032329559326171875, 0.00040531158447265625, 0.0001322031021118164, 0.0008616447448730469, 6.67572021484375e-05, 2.2649765014648438e-06, 1.6689300537109375e-06, 0.00023448467254638672, 8.726119995117188e-05, 0.028228759765625, 0.019989013671875, 0.0007457733154296875, 0.0195770263671875, 0.038543701171875, 0.030914306640625, 0.004665374755859375, 0.0113677978515625, 0.071533203125, 3.826618194580078e-05, 0.0001659393310546875, 6.556510925292969e-05, 0.0035343170166015625, 6.377696990966797e-05], "tokens": [528, 320, 2368, 308, 3220, 5104, 25944, 310, 1225, 27, 301, 434, 489, 1952, 5108, 715, 434, 5079, 322, 6658, 1451, 528, 320, 528, 1626, 45, 400, 1135, 330, 86, 25, 499, 400, 1135, 330, 54, 25, 499, 528, 1596, 301, 715, 1158, 6934, 343, 280, 5104, 2755, 32, 1297, 4075, 26]}
{"line_number": 496, "line_type": "original", "code": "            mant = str.substring(0, decPos);", "entropy": 1.408203125, "is_bug_line": false, "sus_score": 0.4472135954999579, "per_token_entropy": [5.9609375, 6.6640625, 0.0034313201904296875, 0.02947998046875, 0.90087890625, 0.2861328125, 0.0377197265625, 0.0002467632293701172, 0.001972198486328125, 0.0002079010009765625, 4.26171875, 0.0022296905517578125, 0.156005859375], "tokens": [1468, 345, 692, 280, 596, 32, 8723, 26, 34, 30, 5973, 2996, 293]}
{"line_number": 496, "line_type": "generated", "code": "\n                    return createBigDecimal(numeric);\n                case 'd' :\n                case 'D' :\n                    try {\n                        final Double d = NumberUtils.createDouble(numeric);\n                        if (!(d.isInfinite() || (d.floatValue() == ", "entropy": 0.096923828125, "is_bug_line": false, "sus_score": 0.4472135954999579, "per_token_entropy": [0.2646484375, 1.318359375, 0.259033203125, 0.90478515625, 0.002391815185546875, 0.54296875, 0.8505859375, 0.29638671875, 0.003505706787109375, 5.042552947998047e-05, 0.00015211105346679688, 0.00021064281463623047, 0.0001074075698852539, 0.0009446144104003906, 9.381771087646484e-05, 3.2186508178710938e-06, 1.5497207641601562e-06, 0.00022721290588378906, 4.8160552978515625e-05, 0.2242431640625, 0.041748046875, 0.0006046295166015625, 0.008331298828125, 0.035736083984375, 0.0445556640625, 0.0034809112548828125, 0.00666046142578125, 0.065673828125, 3.075599670410156e-05, 0.00019943714141845703, 5.984306335449219e-05, 0.00605010986328125, 6.389617919921875e-05, 0.001255035400390625, 0.00269317626953125, 0.0162506103515625, 0.0080718994140625, 0.018157958984375, 0.0023956298828125, 0.000553131103515625, 7.772445678710938e-05, 3.6954879760742188e-06, 8.7738037109375e-05, 0.006591796875, 0.002979278564453125, 0.0015344619750976562, 0.0003986358642578125, 0.092041015625, 1.1920928955078125e-07, 0.00023615360260009766, 9.679794311523438e-05, 0.002025604248046875], "tokens": [528, 442, 1487, 20827, 26, 10125, 293, 400, 1135, 330, 86, 25, 499, 400, 1135, 330, 54, 25, 499, 528, 1596, 301, 715, 1158, 6934, 343, 280, 5104, 2755, 32, 1297, 4075, 26, 10125, 293, 715, 415, 11007, 86, 32, 28823, 11949, 346, 1276, 308, 86, 32, 1808, 882, 346, 610, 225]}
{"line_number": 497, "line_type": "original", "code": "            numDecimals = dec.length(); // gets number of digits past the decimal to ensure no loss of precision for floating point numbers.", "entropy": 3.205078125, "is_bug_line": false, "sus_score": 0.4472135954999579, "per_token_entropy": [8.1875, 13.140625, 0.0001621246337890625, 0.0012636184692382812, 0.1168212890625, 3.619140625, 2.798828125, 0.01018524169921875, 0.155517578125, 2.66796875, 9.6953125, 3.53515625, 0.0016069412231445312, 2.162109375, 5.4453125, 1.359375, 0.043060302734375, 6.609375, 6.515625, 4.19140625, 4.875, 0.036102294921875, 0.049346923828125, 5.484375, 4.19140625, 0.215087890625, 2.080078125, 2.541015625], "tokens": [1468, 1929, 7697, 101, 280, 5973, 32, 1322, 473, 434, 8561, 1451, 432, 16105, 11169, 322, 10245, 372, 7279, 1289, 7699, 432, 12485, 436, 15394, 2260, 7515, 32]}
{"line_number": 497, "line_type": "generated", "code": "\n                case 'd' :\n                case 'D' :\n                    try {\n                        final Double d = NumberUtils.createDouble(numeric);\n                        if (!(d.isInfinite() || (d.floatValue() == 0.0D &&!all", "entropy": 0.0201263427734375, "is_bug_line": false, "sus_score": 0.4472135954999579, "per_token_entropy": [0.1390380859375, 0.040557861328125, 0.00021898746490478516, 0.0011930465698242188, 0.0004067420959472656, 0.0003056526184082031, 0.0014657974243164062, 4.553794860839844e-05, 2.6226043701171875e-06, 1.1920928955078125e-06, 0.0003991127014160156, 7.069110870361328e-05, 0.03912353515625, 0.0672607421875, 0.000484466552734375, 0.005046844482421875, 0.07537841796875, 0.02899169921875, 0.0014581680297851562, 0.01093292236328125, 0.06207275390625, 2.1457672119140625e-05, 0.0002052783966064453, 3.933906555175781e-05, 0.004955291748046875, 4.5299530029296875e-05, 0.001674652099609375, 0.0006914138793945312, 0.0078125, 0.00875091552734375, 0.024078369140625, 0.001895904541015625, 0.0004296302795410156, 7.343292236328125e-05, 3.337860107421875e-06, 9.131431579589844e-05, 0.005825042724609375, 0.00267791748046875, 0.0016164779663085938, 1.2159347534179688e-05, 0.05450439453125, 1.1920928955078125e-07, 0.00016260147094726562, 5.638599395751953e-05, 0.002315521240234375, 2.288818359375e-05, 0.0010776519775390625, 0.00034880638122558594, 0.4501953125, 0.0015325546264648438, 0.0003063678741455078, 0.0005602836608886719], "tokens": [400, 1135, 330, 86, 25, 499, 400, 1135, 330, 54, 25, 499, 528, 1596, 301, 715, 1158, 6934, 343, 280, 5104, 2755, 32, 1297, 4075, 26, 10125, 293, 715, 415, 11007, 86, 32, 28823, 11949, 346, 1276, 308, 86, 32, 1808, 882, 346, 610, 225, 34, 32, 34, 54, 962, 653, 464]}
{"line_number": 570, "line_type": "original", "code": "        if (expPos > -1 && expPos < str.length() - 1) {", "entropy": 1.2431640625, "is_bug_line": false, "sus_score": 0.4472135954999579, "per_token_entropy": [5.85546875, 0.66845703125, 0.039093017578125, 10.578125, 1.7236328125, 2.966796875, 0.353515625, 0.002895355224609375, 1.16015625, 0.419189453125, 0.04736328125, 0.76220703125, 0.312744140625, 0.12335205078125, 0.00458526611328125, 0.344482421875, 0.2001953125, 0.056915283203125, 0.00801849365234375, 0.3388671875, 0.14697265625], "tokens": [351, 415, 308, 2832, 2996, 848, 429, 35, 962, 2910, 2996, 333, 596, 32, 1322, 346, 429, 225, 35, 27, 301]}
{"line_number": 570, "line_type": "generated", "code": "\n    private static boolean isAllZeros(final String str) {\n        if (str == null) {\n            return true;\n        }\n        for (int i = str.length() - 1; i >= 0; i--) {\n            if", "entropy": 0.050994873046875, "is_bug_line": false, "sus_score": 0.4472135954999579, "per_token_entropy": [0.75390625, 0.1270751953125, 0.113037109375, 0.011505126953125, 0.00766754150390625, 0.0977783203125, 0.00145721435546875, -0.0, 0.02374267578125, 0.33349609375, 0.0008349418640136719, 0.016998291015625, 0.01088714599609375, 0.050262451171875, 0.062469482421875, 0.1356201171875, 0.01419830322265625, 0.031982421875, 0.00995635986328125, 0.00048160552978515625, 0.10150146484375, 0.01322174072265625, 0.026275634765625, 0.001129150390625, 0.03192138671875, 0.0027713775634765625, 0.00481414794921875, 0.0001691579818725586, 0.08807373046875, 0.26611328125, 0.010528564453125, 0.041259765625, 0.0097808837890625, 0.0081939697265625, 0.0447998046875, 0.0001844167709350586, 0.00011098384857177734, 0.006744384765625, 0.0004417896270751953, 0.0028533935546875, 5.4001808166503906e-05, 0.0036487579345703125, 0.00018405914306640625, 0.04229736328125, 0.01541900634765625, 8.058547973632812e-05, 0.00888824462890625, 0.01560211181640625, 0.0011034011840820312, 0.0025634765625, 0.03057861328125, 0.06817626953125], "tokens": [284, 945, 907, 1905, 438, 1934, 76, 14641, 26, 3220, 892, 596, 27, 301, 291, 415, 308, 466, 610, 744, 27, 301, 324, 442, 861, 45, 291, 320, 291, 436, 308, 410, 595, 280, 596, 32, 1322, 346, 429, 225, 35, 45, 595, 2377, 225, 34, 45, 595, 15353, 301, 324, 415]}
{"line_number": 571, "line_type": "original", "code": "            exp = str.substring(expPos + 1, str.length());", "entropy": 1.224609375, "is_bug_line": false, "sus_score": 0.4472135954999579, "per_token_entropy": [6.7109375, 6.734375, 0.41259765625, 3.4765625, 0.591796875, 0.62939453125, 0.00632476806640625, 0.1644287109375, 0.0207061767578125, 0.07305908203125, 0.007709503173828125, 0.0169525146484375, 1.4453125, 0.349609375, 0.01995849609375, 0.0025119781494140625, 0.144775390625], "tokens": [1468, 2910, 280, 596, 32, 8723, 26, 2832, 2996, 474, 225, 35, 30, 596, 32, 1322, 1035]}
{"line_number": 571, "line_type": "generated", "code": "\n    }\n\n    /**\n     * <p>Utility method for {@link #createNumber(java.lang.String)}.</p>\n     *\n     * <p>Returns <code>true</code> if s is <code>null</code>.</", "entropy": 0.08648681640625, "is_bug_line": false, "sus_score": 0.4472135954999579, "per_token_entropy": [0.386474609375, 0.0026760101318359375, 0.51708984375, 0.15185546875, 0.0161285400390625, 0.0001571178436279297, 0.0792236328125, 0.0005249977111816406, 0.002658843994140625, 0.822265625, 0.0010662078857421875, 0.01174163818359375, 0.019866943359375, 5.6862831115722656e-05, 0.0023441314697265625, 0.0038394927978515625, 0.00336456298828125, 0.0002256631851196289, 0.017425537109375, 0.0001404285430908203, 8.296966552734375e-05, 8.285045623779297e-05, 0.0003058910369873047, 0.0362548828125, 0.0024318695068359375, 0.00013887882232666016, 0.0002168416976928711, 0.002960205078125, 0.0008955001831054688, 0.368408203125, 0.00013828277587890625, 0.0183258056640625, 0.0014944076538085938, 0.006397247314453125, 0.423828125, 0.11578369140625, 0.0010080337524414062, 0.006740570068359375, 0.03155517578125, 0.0005106925964355469, 0.00029277801513671875, 9.524822235107422e-05, 0.0027942657470703125, 0.1348876953125, 0.064453125, 0.97509765625, 0.0036907196044921875, 0.002407073974609375, 0.0018672943115234375, 0.0009813308715820312, 9.059906005859375e-06, 0.251953125], "tokens": [284, 320, 446, 1022, 275, 319, 333, 98, 48, 11330, 1411, 436, 3088, 1204, 588, 1297, 1918, 26, 1859, 32, 1581, 32, 652, 4370, 1730, 98, 48, 275, 319, 275, 319, 333, 98, 48, 6970, 333, 687, 48, 1508, 377, 687, 48, 415, 309, 438, 333, 687, 48, 1693, 377, 687, 12689]}
{"line_number": 575, "line_type": "original", "code": "        if (dec == null && exp == null) { // no decimal point and no exponent", "entropy": 2.23046875, "is_bug_line": false, "sus_score": 0.4472135954999579, "per_token_entropy": [4.19140625, 1.0908203125, 0.0251922607421875, 14.2578125, 4.015625, 2.873046875, 1.3974609375, 1.7255859375, 0.2242431640625, 0.00286865234375, 0.344482421875, 0.25390625, 3.583984375, 5.43359375, 0.56103515625, 1.6474609375, 0.349853515625, 0.370361328125, 0.032989501953125], "tokens": [351, 415, 308, 6114, 610, 744, 962, 2910, 610, 744, 27, 301, 434, 1289, 10245, 2260, 461, 1289, 19715]}
{"line_number": 575, "line_type": "generated", "code": "\n            if (str.charAt(i)!= '0') {\n                return false;\n            }\n        }\n        return true;\n    }", "entropy": 0.037109375, "is_bug_line": false, "sus_score": 0.4472135954999579, "per_token_entropy": [0.2998046875, 0.1282958984375, 0.0240478515625, 0.01788330078125, 0.00023376941680908203, 6.699562072753906e-05, 0.00017917156219482422, 0.0013561248779296875, 0.00048732757568359375, 0.032257080078125, 0.0163421630859375, 0.00011038780212402344, 0.0248565673828125, 0.01538848876953125, 0.044525146484375, 0.0167694091796875, 0.00041556358337402344, 0.0002741813659667969, 0.007404327392578125, 7.665157318115234e-05, 0.0506591796875, 0.0005726814270019531, 0.03387451171875, 0.002155303955078125, 0.2705078125, 0.00018072128295898438, 0.047271728515625, 0.0028362274169921875], "tokens": [324, 415, 308, 466, 32, 15611, 26, 91, 27, 863, 330, 34, 683, 301, 400, 442, 901, 45, 324, 320, 291, 320, 291, 442, 861, 45, 284, 320]}
{"line_number": 591, "line_type": "original", "code": "        final boolean allZeros = isAllZeros(mant) && isAllZeros(exp);", "entropy": 0.939453125, "is_bug_line": false, "sus_score": 0.4472135954999579, "per_token_entropy": [3.8359375, 4.1796875, 3.048828125, 0.37841796875, 0.01332855224609375, 0.00014984607696533203, 0.027435302734375, 0.03192138671875, 0.0008406639099121094, 0.0002409219741821289, 1.1920928955078125e-07, 0.01043701171875, 4.8828125, 1.3173828125, 2.669921875, 0.250732421875, 0.79931640625, 0.01422882080078125, 0.0013895034790039062, 8.344650268554688e-07, 0.0035343170166015625, 0.11700439453125, 0.0206756591796875], "tokens": [351, 1158, 1905, 1169, 76, 14641, 280, 438, 1934, 76, 14641, 26, 95, 692, 27, 962, 438, 1934, 76, 14641, 26, 2832, 293]}
{"line_number": 591, "line_type": "generated", "code": "\n     */\n    public static Float createFloat(final String str) {\n        if (str == null) {\n            return null;\n        }\n        return new Float(str);\n    }\n\n    /**\n     * <p>Convert a <code>String</code", "entropy": 0.067138671875, "is_bug_line": false, "sus_score": 0.4472135954999579, "per_token_entropy": [0.513671875, 0.115478515625, 0.01380157470703125, 0.328369140625, 0.004642486572265625, 0.08502197265625, 0.024139404296875, 1.2159347534179688e-05, 0.0369873046875, 0.16650390625, 0.0009937286376953125, 0.001232147216796875, 0.007965087890625, 0.20458984375, 0.11224365234375, 0.06610107421875, 0.006557464599609375, 0.043975830078125, 0.0005369186401367188, 0.0008606910705566406, 0.0061798095703125, 0.002044677734375, 0.01204681396484375, 0.00200653076171875, 0.0010862350463867188, 0.0005869865417480469, 0.0017328262329101562, 0.00026035308837890625, 0.054290771484375, 0.51025390625, 0.75439453125, 0.002414703369140625, 0.0025177001953125, 0.030181884765625, 0.120849609375, 0.047698974609375, 0.0014123916625976562, 0.0911865234375, 0.09814453125, 0.004962921142578125, 2.5987625122070312e-05, 0.004016876220703125, 5.257129669189453e-05, 0.0001506805419921875, 0.00411224365234375, 0.00038695335388183594, 0.0007352828979492188, 1.0371208190917969e-05, 2.9802322387695312e-06, 0.004364013671875, 0.00027942657470703125, 4.887580871582031e-06], "tokens": [275, 569, 284, 562, 907, 8174, 1487, 3670, 26, 3220, 892, 596, 27, 301, 291, 415, 308, 466, 610, 744, 27, 301, 324, 442, 744, 45, 291, 320, 291, 442, 537, 8174, 26, 466, 293, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 6720, 312, 333, 687, 48, 652, 377, 687]}
{"line_number": 593, "line_type": "original", "code": "                final Float f = createFloat(str);", "entropy": 1.52734375, "is_bug_line": true, "sus_score": 0.4472135954999579, "per_token_entropy": [8.4609375, 3.431640625, 0.33447265625, 0.0989990234375, 0.008087158203125, 1.6572265625, 0.1846923828125, 0.140380859375, 0.05133056640625, 0.908203125], "tokens": [2071, 1158, 8174, 296, 280, 1487, 3670, 26, 466, 293]}
{"line_number": 593, "line_type": "generated", "code": "\n        if (str == null) {\n            return null;\n        }\n        return Float.valueOf(str);\n    }\n\n    /**\n     * <p>Convert a <code>String</code> to a <code>Double</code>.</p>\n    ", "entropy": 0.057403564453125, "is_bug_line": true, "sus_score": 0.4472135954999579, "per_token_entropy": [0.183349609375, 0.59326171875, 0.0194549560546875, 0.0706787109375, 0.003330230712890625, 0.0012559890747070312, 0.00971221923828125, 0.007137298583984375, 0.028900146484375, 0.01313018798828125, 0.0019407272338867188, 0.0008740425109863281, 0.0021076202392578125, 5.0902366638183594e-05, 0.07598876953125, 0.4814453125, 0.467529296875, 0.014251708984375, 0.016632080078125, 0.0015850067138671875, 0.01464080810546875, 0.5009765625, 0.0714111328125, 0.0019683837890625, 0.07757568359375, 0.0836181640625, 0.00347900390625, 3.6597251892089844e-05, 0.003902435302734375, 6.246566772460938e-05, 0.00012934207916259766, 0.00434112548828125, 0.0006966590881347656, 0.0010290145874023438, 9.775161743164062e-06, 2.9802322387695312e-06, 0.0034580230712890625, 0.00031256675720214844, 3.4570693969726562e-06, 6.723403930664062e-05, 0.00091552734375, 0.01422119140625, 0.00025343894958496094, 6.949901580810547e-05, 5.519390106201172e-05, 0.1865234375, 0.002048492431640625, 5.4836273193359375e-06, 0.0186614990234375, 3.993511199951172e-05, 0.00011909008026123047, 0.0013294219970703125], "tokens": [291, 415, 308, 466, 610, 744, 27, 301, 324, 442, 744, 45, 291, 320, 291, 442, 8174, 32, 9162, 26, 466, 293, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 6720, 312, 333, 687, 48, 652, 377, 687, 48, 372, 312, 333, 687, 48, 4075, 377, 687, 12689, 98, 48, 275]}
{"line_number": 488, "line_type": "original", "code": "            if (expPos > -1) { // there is an exponent", "entropy": 1.74609375, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [8.6484375, 3.427734375, 0.21435546875, 4.41796875, 1.556640625, 0.75244140625, 0.163818359375, 0.0031719207763671875, 0.7734375, 0.1529541015625, 2.50390625, 3.42578125, 0.139892578125, 0.007511138916015625, 0.0009083747863769531], "tokens": [1468, 415, 308, 2832, 2996, 848, 429, 35, 27, 301, 434, 2017, 438, 600, 19715]}
{"line_number": 488, "line_type": "generated", "code": "\n                            return f;\n                        }\n                    } catch (final NumberFormatException nfe) { // NOPMD\n                        // ignore the badness\n                    }\n                    throw new NumberFormatException(str + \" is not a valid number.\");\n                case 'd' :\n                case", "entropy": 0.113525390625, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [0.384521484375, 0.1531982421875, 0.15966796875, 0.01264190673828125, 0.09283447265625, 0.002033233642578125, 0.145751953125, 0.0027923583984375, 0.052886962890625, 0.0090179443359375, 0.0012845993041992188, 0.0016145706176757812, 5.364418029785156e-05, 0.053466796875, 1.4424324035644531e-05, 0.00229644775390625, 0.0091094970703125, 0.381591796875, 6.842613220214844e-05, 7.975101470947266e-05, 6.783008575439453e-05, 0.030914306640625, 0.0127105712890625, 1.640625, 0.227294921875, 0.1431884765625, 2.11328125, 0.00946807861328125, 6.771087646484375e-05, 0.0303497314453125, 0.10369873046875, 0.00011360645294189453, 0.0004954338073730469, 0.0006818771362304688, 0.0017042160034179688, 0.033905029296875, 0.0017271041870117188, 0.0018329620361328125, 0.0007643699645996094, 0.0001697540283203125, 2.384185791015625e-05, 6.866455078125e-05, 0.065673828125, 0.0004143714904785156, 0.0172882080078125, 0.0014781951904296875, 2.682209014892578e-05, 0.0001800060272216797, 0.000213623046875, 9.66787338256836e-05, 0.0006666183471679688, 7.140636444091797e-05], "tokens": [1014, 442, 296, 45, 715, 320, 528, 320, 2368, 308, 3220, 5104, 25944, 310, 1225, 27, 301, 434, 489, 1952, 5108, 715, 434, 5079, 322, 6658, 4321, 528, 320, 528, 1422, 537, 5104, 25944, 26, 466, 474, 313, 438, 646, 312, 2080, 1451, 5368, 400, 1135, 330, 86, 25, 499, 400, 1135]}
{"line_number": 489, "line_type": "original", "code": "                if (expPos < decPos || expPos > str.length()) { // prevents double exponent causing IOOBE", "entropy": 1.3828125, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [6.67578125, 4.140625, 0.413330078125, 3.568359375, 1.48828125, 3.369140625, 5.10546875, 0.0036449432373046875, 1.75390625, 1.31640625, 0.1239013671875, 0.9267578125, 0.309814453125, 0.0128173828125, 0.038116455078125, 0.85302734375, 0.07196044921875, 2.15625, 2.080078125, 0.039794921875, 0.006618499755859375, 0.0258331298828125, 0.070556640625, 0.0001633167266845703, 0.0009407997131347656], "tokens": [2071, 415, 308, 2832, 2996, 333, 5973, 2996, 1276, 2910, 2996, 848, 596, 32, 1322, 1157, 301, 434, 29047, 2064, 19715, 19707, 4393, 4384, 55]}
{"line_number": 489, "line_type": "generated", "code": "\n                            throw new NumberFormatException(str + \" is not a valid number.\");\n                        }\n                        return f;\n                    } catch (final NumberFormatException nfe) {\n                        throw new NumberFormatException(str + \" is not a valid number.\");\n                    }\n                case '", "entropy": 0.0919189453125, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [0.300048828125, 0.75927734375, 0.0022830963134765625, 0.014984130859375, 0.0025844573974609375, 0.06451416015625, 0.043426513671875, 0.0211181640625, 0.0130462646484375, 0.0135040283203125, 0.0029163360595703125, 0.00023949146270751953, 0.00040841102600097656, 0.0014705657958984375, 0.0029239654541015625, 0.04510498046875, 0.0003101825714111328, 0.3544921875, 0.37548828125, 0.1971435546875, 0.003879547119140625, 0.06353759765625, 0.0006022453308105469, 0.0296630859375, 0.01470947265625, 0.0012569427490234375, 0.002460479736328125, 0.00014293193817138672, 0.0168304443359375, 3.0994415283203125e-05, 0.0052032470703125, 0.0063018798828125, 0.95556640625, 1.087890625, 0.002716064453125, 0.001773834228515625, 0.0004258155822753906, 0.01279449462890625, 0.131103515625, 0.043060302734375, 0.0025959014892578125, 0.0017375946044921875, 0.00022113323211669922, 2.0742416381835938e-05, 0.0001703500747680664, 0.0194549560546875, 0.0264129638671875, 0.06427001953125, 0.00030541419982910156, 0.0684814453125, 0.0031890869140625, 5.14984130859375e-05], "tokens": [1014, 1422, 537, 5104, 25944, 26, 466, 474, 313, 438, 646, 312, 2080, 1451, 5368, 715, 320, 715, 442, 296, 45, 528, 320, 2368, 308, 3220, 5104, 25944, 310, 1225, 27, 301, 715, 1422, 537, 5104, 25944, 26, 466, 474, 313, 438, 646, 312, 2080, 1451, 5368, 528, 320, 400, 1135, 330]}
{"line_number": 509, "line_type": "original", "code": "        if (!Character.isDigit(lastChar) && lastChar != '.') {", "entropy": 1.0703125, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [6.3046875, 3.1796875, 2.884765625, 3.2265625, 0.00432586669921875, 0.0013484954833984375, 0.05035400390625, 0.0011110305786132812, 0.6591796875, 0.0192413330078125, 0.8427734375, 0.2734375, 0.472900390625, 0.00048732757568359375, 0.004669189453125, 0.220703125, 0.047119140625], "tokens": [351, 415, 1429, 6881, 32, 297, 21530, 26, 2135, 2659, 27, 962, 2401, 2659, 863, 41723, 301]}
{"line_number": 509, "line_type": "generated", "code": "\n                    } catch (final NumberFormatException nfe) { // NOPMD\n                        // ignore the bad number\n                    }\n                    throw new NumberFormatException(str + \" is not a valid number.\");\n                default :\n                    if (expPos > -1) {\n                       ", "entropy": 0.126708984375, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.10223388671875, 0.007511138916015625, 0.08917236328125, 0.00798797607421875, 0.0120086669921875, 0.005619049072265625, 8.285045623779297e-05, 0.174560546875, 0.0005793571472167969, 0.002613067626953125, 0.0017566680908203125, 0.2061767578125, 0.0007038116455078125, 7.510185241699219e-06, 9.894371032714844e-06, 0.03668212890625, 0.2413330078125, 0.224365234375, 0.00518798828125, 0.0026111602783203125, 0.0005898475646972656, 0.056732177734375, 0.001102447509765625, 0.38623046875, 1.955078125, 0.004608154296875, 0.0021533966064453125, 0.00022161006927490234, 0.016845703125, 0.040069580078125, 0.0138397216796875, 0.0021152496337890625, 0.0009140968322753906, 0.00015079975128173828, 5.7697296142578125e-05, 7.534027099609375e-05, 0.001079559326171875, 0.001220703125, 0.1702880859375, 0.70263671875, 0.032958984375, 0.06610107421875, 0.374267578125, 0.01448822021484375, 0.135498046875, 0.054962158203125, 0.044769287109375, 0.002960205078125, 0.0030918121337890625, 1.1435546875, 0.0020351409912109375, 0.233642578125], "tokens": [528, 320, 2368, 308, 3220, 5104, 25944, 310, 1225, 27, 301, 434, 489, 1952, 5108, 715, 434, 5079, 322, 6658, 1451, 528, 320, 528, 1422, 537, 5104, 25944, 26, 466, 474, 313, 438, 646, 312, 2080, 1451, 5368, 400, 1244, 499, 528, 415, 308, 2832, 2996, 848, 429, 35, 27, 301, 715]}
{"line_number": 621, "line_type": "original", "code": "        if (str == null) {", "entropy": 0.59130859375, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [3.50390625, 0.60302734375, 0.09765625, 0.13427734375, 0.19482421875, 0.000881195068359375, 0.00403594970703125, 0.1900634765625], "tokens": [351, 415, 308, 466, 610, 744, 27, 301]}
{"line_number": 621, "line_type": "generated", "code": "\n        try {\n            return Integer.decode(str);\n        } catch (final NumberFormatException nfe) { // NOPMD\n            // ignore the bad number\n        }", "entropy": 0.1734619140625, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [1.0830078125, 2.419921875, 0.033721923828125, 0.1170654296875, 0.1376953125, 0.330322265625, 0.0015392303466796875, 0.09039306640625, 0.00370025634765625, 0.0084381103515625, 0.0196380615234375, 0.0223541259765625, 0.0006694793701171875, 0.0196533203125, 0.006580352783203125, 0.03656005859375, 0.0002999305725097656, 1.2874603271484375e-05, 0.1148681640625, 0.00023365020751953125, 0.00241851806640625, 0.019805908203125, 0.3447265625, 0.0013837814331054688, 0.0002789497375488281, 5.1021575927734375e-05, 0.219482421875, 0.2335205078125, 0.25830078125, 0.302978515625, 0.0160369873046875, 0.01438140869140625, 0.037750244140625, 0.001697540283203125], "tokens": [291, 1596, 301, 324, 442, 4401, 32, 5460, 26, 466, 293, 291, 320, 2368, 308, 3220, 5104, 25944, 310, 1225, 27, 301, 434, 489, 1952, 5108, 324, 434, 5079, 322, 6658, 1451, 291, 320]}
{"line_number": 624, "line_type": "original", "code": "        for (int i = str.length() - 1; i >= 0; i--) {", "entropy": 0.681640625, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [2.982421875, 5.87109375, 0.0280914306640625, 0.4384765625, 0.00262451171875, 0.004405975341796875, 4.03125, 0.00893402099609375, 0.027313232421875, 0.0126495361328125, 0.0002777576446533203, 0.003383636474609375, 0.0001850128173828125, 0.01116180419921875, 0.00027108192443847656, 1.4228515625, 0.001857757568359375, 0.0003376007080078125, 0.0169677734375, 0.0230560302734375, 0.006420135498046875, 0.10601806640625], "tokens": [351, 436, 308, 410, 595, 280, 596, 32, 1322, 346, 429, 225, 35, 45, 595, 2377, 225, 34, 45, 595, 15353, 301]}
{"line_number": 624, "line_type": "generated", "code": "\n     */\n    public static Integer createInteger(final String str) {\n        if (str == null) {\n            return null;\n        }\n        return Integer.decode(str);\n    }\n\n    /**\n     * <p>Convert a <code>String</", "entropy": 0.060577392578125, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [1.078125, 0.1572265625, 0.040557861328125, 0.057281494140625, 0.0002837181091308594, 0.0257415771484375, 0.0003635883331298828, 0.0009531974792480469, 0.0008993148803710938, 0.06842041015625, 0.00013172626495361328, 0.00038123130798339844, 0.0010576248168945312, 0.04840087890625, 0.10089111328125, 0.065673828125, 0.0034694671630859375, 0.01233673095703125, 0.0004978179931640625, 0.00014913082122802734, 0.000698089599609375, 0.002910614013671875, 0.007610321044921875, 0.00011718273162841797, 0.0001723766326904297, 0.0003190040588378906, 0.004993438720703125, 0.00066375732421875, 0.306884765625, 0.685546875, 0.1885986328125, 0.0015001296997070312, 0.045654296875, 0.000415802001953125, 0.0012121200561523438, 0.01424407958984375, 0.10577392578125, 0.003582000732421875, 0.0877685546875, 0.0099639892578125, 0.009521484375, 0.00016057491302490234, 0.00466156005859375, 2.4080276489257812e-05, 7.62939453125e-05, 0.004009246826171875, 0.00045990943908691406, 0.0003058910369873047, 7.867813110351562e-06, 4.172325134277344e-06, 0.00021123886108398438, 0.00012385845184326172], "tokens": [275, 569, 284, 562, 907, 4401, 1487, 3061, 26, 3220, 892, 596, 27, 301, 291, 415, 308, 466, 610, 744, 27, 301, 324, 442, 744, 45, 291, 320, 291, 442, 4401, 32, 5460, 26, 466, 293, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 6720, 312, 333, 687, 48, 652, 377]}
{"line_number": 625, "line_type": "original", "code": "            if (str.charAt(i) != '0') {", "entropy": 1.6376953125, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [7.1171875, 2.0, 0.08502197265625, 0.1650390625, 2.400390625, 2.66015625, 0.00630950927734375, 2.318359375, 0.055938720703125, 4.4140625, 0.337158203125, 0.8916015625, 0.2130126953125, 0.26123046875], "tokens": [1468, 415, 308, 466, 32, 15611, 26, 91, 27, 863, 330, 34, 683, 301]}
{"line_number": 625, "line_type": "generated", "code": "\n    public static Integer createInteger(final String str) {\n        if (str == null) {\n            return null;\n        }\n        return Integer.decode(str);\n    }\n\n    /**\n     * <p>Convert a <code>String</code>", "entropy": 0.058319091796875, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.5439453125, 0.5625, 0.00330352783203125, 0.10125732421875, 0.0015096664428710938, 0.005733489990234375, 0.00396728515625, 0.051544189453125, 0.0007996559143066406, 0.00200653076171875, 0.0026149749755859375, 0.050079345703125, 0.244873046875, 0.2132568359375, 0.004638671875, 0.0198211669921875, 0.0012645721435546875, 0.00023162364959716797, 0.0009794235229492188, 0.01001739501953125, 0.021270751953125, 0.00042438507080078125, 0.00037980079650878906, 0.0006175041198730469, 0.00982666015625, 0.0008440017700195312, 0.1798095703125, 0.2412109375, 0.14697265625, 0.0034637451171875, 0.181396484375, 0.0008015632629394531, 0.0016946792602539062, 0.020233154296875, 0.12200927734375, 0.00588226318359375, 0.2147216796875, 0.0301971435546875, 0.0157928466796875, 9.882450103759766e-05, 0.0052642822265625, 2.765655517578125e-05, 6.127357482910156e-05, 0.003833770751953125, 0.0005745887756347656, 0.0003561973571777344, 1.4185905456542969e-05, 4.5299530029296875e-06, 0.00027871131896972656, 0.00011098384857177734, 1.239776611328125e-05, 5.364418029785156e-06], "tokens": [284, 562, 907, 4401, 1487, 3061, 26, 3220, 892, 596, 27, 301, 291, 415, 308, 466, 610, 744, 27, 301, 324, 442, 744, 45, 291, 320, 291, 442, 4401, 32, 5460, 26, 466, 293, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 6720, 312, 333, 687, 48, 652, 377, 687, 48]}
{"line_number": 626, "line_type": "original", "code": "                return false;", "entropy": 5.73046875, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [8.1640625, 1.486328125, 13.15625, 0.1085205078125], "tokens": [2071, 442, 901, 45]}
{"line_number": 626, "line_type": "generated", "code": "\n        return Integer.decode(str);\n    }\n\n    /**\n     * <p>Convert a <code>String</code> to a <code>Long</code>, handling\n     * hex and octal notations.</p>\n     *\n     * <", "entropy": 0.06988525390625, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.8994140625, 1.21484375, 0.8603515625, 0.00218963623046875, 0.286865234375, 0.0021209716796875, 0.0019588470458984375, 0.016448974609375, 0.104736328125, 0.002010345458984375, 0.053955078125, 0.00986480712890625, 0.00794219970703125, 0.0003795623779296875, 0.004070281982421875, 2.09808349609375e-05, 5.328655242919922e-05, 0.00238800048828125, 0.00037860870361328125, 0.0001685619354248047, 8.58306884765625e-06, 2.1457672119140625e-06, 0.00015270709991455078, 6.914138793945312e-05, 5.245208740234375e-06, 4.172325134277344e-06, 3.0040740966796875e-05, 0.0016927719116210938, 0.00014591217041015625, 7.748603820800781e-06, 1.5139579772949219e-05, 0.0005121231079101562, 9.179115295410156e-05, 5.125999450683594e-06, 0.0009646415710449219, 0.00013446807861328125, 0.001155853271484375, 6.794929504394531e-06, 0.00024116039276123047, 0.01265716552734375, 8.726119995117188e-05, 1.1920928955078125e-06, 0.0006313323974609375, 7.164478302001953e-05, 0.0027923583984375, 1.895427703857422e-05, 0.00010526180267333984, 0.004001617431640625, 8.463859558105469e-06, 0.136474609375, 2.9206275939941406e-05, 0.0010671615600585938], "tokens": [291, 442, 4401, 32, 5460, 26, 466, 293, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 6720, 312, 333, 687, 48, 652, 377, 687, 48, 372, 312, 333, 687, 48, 3952, 377, 687, 2717, 9933, 275, 319, 9960, 461, 20515, 279, 646, 993, 1730, 98, 48, 275, 319, 275, 319, 333]}
{"line_number": 643, "line_type": "original", "code": "        if (str == null) {", "entropy": 1.080078125, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [6.08984375, 2.2734375, 0.032684326171875, 0.092041015625, 0.0282745361328125, 0.0019626617431640625, 0.007778167724609375, 0.11090087890625], "tokens": [351, 415, 308, 466, 610, 744, 27, 301]}
{"line_number": 643, "line_type": "generated", "code": "\n        return null;\n    }\n\n    /**\n     * <p>Convert a <code>String</code> to a <code>BigInteger</code>.</p>\n     * \n     * <p>Returns <code>null</code> if the string is", "entropy": 0.061004638671875, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.626953125, 0.1348876953125, 0.07470703125, 0.0013599395751953125, 0.06231689453125, 0.00272369384765625, 0.2274169921875, 0.06915283203125, 0.0230560302734375, 0.00027251243591308594, 0.022064208984375, 2.372264862060547e-05, 0.0004677772521972656, 0.0182342529296875, 0.0017290115356445312, 0.0029754638671875, 2.5153160095214844e-05, 7.033348083496094e-06, 0.002063751220703125, 0.00010097026824951172, 6.079673767089844e-06, 1.9550323486328125e-05, 0.0015249252319335938, 0.004009246826171875, 0.0006732940673828125, 7.152557373046875e-05, 0.00015497207641601562, 0.66796875, 0.00391387939453125, 4.3392181396484375e-05, 0.49560546875, 5.9604644775390625e-05, 0.0005202293395996094, 0.0230865478515625, 6.23464584350586e-05, 0.65087890625, 4.851818084716797e-05, 0.0032672882080078125, 0.0019407272338867188, 0.0057525634765625, 0.038970947265625, 0.0004858970642089844, 0.0002913475036621094, 3.2186508178710938e-06, 0.0001628398895263672, 0.00012767314910888672, 5.7816505432128906e-05, 4.649162292480469e-06, 2.384185791015625e-05, 0.00013518333435058594, 0.001007080078125, 0.0001302957534790039], "tokens": [291, 442, 744, 45, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 6720, 312, 333, 687, 48, 652, 377, 687, 48, 372, 312, 333, 687, 48, 21541, 377, 687, 12689, 98, 48, 275, 319, 5384, 319, 333, 98, 48, 6970, 333, 687, 48, 1693, 377, 687, 48, 415, 322, 802, 438]}
{"line_number": 646, "line_type": "original", "code": "        return Float.valueOf(str);", "entropy": 2.2421875, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [5.2421875, 2.8359375, 9.21875, 0.0140838623046875, 0.0279693603515625, 0.00890350341796875, 0.10137939453125, 0.49462890625], "tokens": [351, 442, 8174, 32, 9162, 26, 466, 293]}
{"line_number": 646, "line_type": "generated", "code": "\n    }\n\n    /**\n     * <p>Convert a <code>String</code> to a <code>Short</code>, handling\n     * hex notation (like <code>'0xFF'</code>).</p>\n     *\n     * <p>", "entropy": 0.1640625, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.3359375, 0.0033855438232421875, 0.13427734375, 0.0799560546875, 0.0204925537109375, 0.00011336803436279297, 0.0207366943359375, 2.6106834411621094e-05, 0.0005908012390136719, 0.0374755859375, 0.002117156982421875, 0.00487518310546875, 2.658367156982422e-05, 1.33514404296875e-05, 0.004581451416015625, 5.7816505432128906e-05, 1.1324882507324219e-05, 2.1219253540039062e-05, 0.0023651123046875, 0.0024871826171875, 0.0012331008911132812, 7.140636444091797e-05, 0.00029015541076660156, 1.1591796875, 5.638599395751953e-05, 3.9577484130859375e-05, 0.546875, 0.004505157470703125, 0.01204681396484375, 3.62396240234375e-05, 0.002826690673828125, 1.1318359375, 1.650390625, 0.552734375, 0.0036869049072265625, 2.2172927856445312e-05, 1.1875, 0.0292816162109375, 0.0294952392578125, 5.698204040527344e-05, 1.0728836059570312e-05, 1.017578125, 0.0200347900390625, 2.968311309814453e-05, 0.0003669261932373047, 0.0224151611328125, 1.0132789611816406e-05, 0.50732421875, 2.0503997802734375e-05, 0.0011987686157226562, 0.00011515617370605469, 0.001277923583984375], "tokens": [284, 320, 446, 1022, 275, 319, 333, 98, 48, 6720, 312, 333, 687, 48, 652, 377, 687, 48, 372, 312, 333, 687, 48, 6872, 377, 687, 2717, 9933, 275, 319, 9960, 27627, 308, 6228, 333, 687, 6457, 34, 4769, 14679, 687, 48, 20160, 98, 48, 275, 319, 275, 319, 333, 98, 48]}
