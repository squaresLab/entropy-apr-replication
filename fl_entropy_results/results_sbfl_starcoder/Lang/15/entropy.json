{"line_number": 612, "line_type": "original", "code": "            ParameterizedType parameterizedOwnerType = (ParameterizedType) ownerType;", "entropy": 1.638671875, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [3.75, 12.8359375, 0.01526641845703125, 0.006694793701171875, 1.3525390625, 0.00174713134765625, 4.71484375, 0.02752685546875, 0.08953857421875, 1.4990234375, 0.1534423828125, 0.00028061866760253906, 0.0055389404296875, 1.7412109375, 0.00662994384765625, 0.011138916015625], "tokens": [1468, 10901, 1191, 620, 3395, 1191, 6444, 620, 280, 308, 33624, 620, 27, 7423, 620, 45]}
{"line_number": 612, "line_type": "generated", "code": "\n                return null;\n            }\n\n            // convert wrapper type to primitive type\n            cls = ClassUtils.primitiveToWrapper(cls);\n        } else if (toClass.isPrimitive()) {\n            // convert primitive type to wrapper type\n            toClass = ClassUtils", "entropy": 0.192626953125, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.64501953125, 0.353759765625, 0.69873046875, 0.00038933753967285156, 0.035614013671875, 0.00054168701171875, 0.62646484375, 0.12353515625, 2.24609375, 0.42041015625, 1.322265625, 0.0006661415100097656, 0.364990234375, 0.139404296875, 0.2958984375, 0.05133056640625, 1.52587890625e-05, 0.56689453125, 0.0134429931640625, 0.0055694580078125, 0.09564208984375, 9.906291961669922e-05, 0.0003314018249511719, 0.0004019737243652344, 8.845329284667969e-05, 0.00010001659393310547, 0.1650390625, 0.00038909912109375, 0.441650390625, 0.0193939208984375, 0.0008268356323242188, 0.0010633468627929688, 3.5762786865234375e-07, 2.765655517578125e-05, 1.430511474609375e-06, 3.337860107421875e-06, 0.0008349418640136719, 0.00042057037353515625, 0.031494140625, 0.05169677734375, 0.1357421875, 0.466796875, 0.045623779296875, 0.09405517578125, 0.32373046875, 0.022186279296875, 0.0222320556640625, 0.186767578125, 4.8041343688964844e-05, 3.254413604736328e-05, 0.0010499954223632812, 2.562999725341797e-05], "tokens": [400, 442, 744, 45, 324, 320, 1064, 434, 4483, 7767, 827, 372, 17148, 827, 324, 9011, 280, 1709, 2755, 32, 19697, 705, 4672, 26, 6933, 293, 291, 320, 813, 415, 308, 452, 1339, 32, 297, 12216, 1157, 301, 324, 434, 4483, 17148, 827, 372, 7767, 827, 324, 372, 1339, 280, 1709, 2755]}
{"line_number": 613, "line_type": "original", "code": "            typeVarAssigns = getTypeArguments(parameterizedOwnerType,", "entropy": 2.330078125, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [4.6171875, 6.83984375, 0.221435546875, 0.0006475448608398438, 0.004058837890625, 1.1708984375, 4.3203125, 0.5263671875, 0.127685546875, 7.5703125, 0.00531768798828125, 7.1796875, 0.005260467529296875, 0.0301361083984375], "tokens": [1468, 827, 1881, 9079, 101, 280, 24115, 8555, 26, 5609, 1191, 6444, 620, 30]}
{"line_number": 613, "line_type": "generated", "code": "\n                } else {\n                    // target class is not a primitive. Therefore, the\n                    // only type argument that can be harvested is the\n                    // wrapper type of the source class.", "entropy": 0.37744140625, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.79052734375, 0.68896484375, 0.359130859375, 0.04345703125, 0.134521484375, 0.10772705078125, 0.900390625, 0.2239990234375, 0.033538818359375, 0.9345703125, 0.255615234375, 0.005115509033203125, 0.7294921875, 1.2001953125, 0.1431884765625, 0.1591796875, 1.654296875, 0.0030155181884765625, 1.384765625, 0.216796875, 0.0484619140625, 0.407470703125, 0.607421875, 0.0469970703125, 0.74658203125, 1.239776611328125e-05, 4.5299530029296875e-06, 0.267578125, 0.33447265625, 0.13671875, 0.0986328125, 0.51025390625, 0.06353759765625, 0.0653076171875, 0.194580078125, 0.0977783203125, 0.50927734375, 0.237548828125], "tokens": [400, 320, 813, 301, 528, 434, 1760, 443, 438, 646, 312, 17148, 32, 20750, 30, 322, 528, 434, 1755, 827, 2793, 688, 883, 526, 10926, 104, 5174, 438, 322, 528, 434, 7767, 827, 432, 322, 1914, 443, 32]}
{"line_number": 615, "line_type": "original", "code": "        } else {", "entropy": 2.447265625, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [5.140625, 0.64453125, 1.978515625, 2.02734375], "tokens": [351, 320, 813, 301]}
{"line_number": 615, "line_type": "generated", "code": "\n            // target class is primitive, but subject is not. This means that\n            // we'll have to pull the type arguments from the subject.\n            return getTypeArguments(toClass, cls, subtypeVarAssigns);\n        }\n\n        // both classes are reference", "entropy": 0.62939453125, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.201171875, 0.1903076171875, 2.162109375, 0.12164306640625, 0.0439453125, 0.9013671875, 0.248046875, 1.29296875, 1.8603515625, 1.2822265625, 0.0677490234375, 0.2880859375, 2.123046875, 0.62744140625, 0.666015625, 0.41845703125, 0.0175933837890625, 1.2890625, 1.3125, 0.54736328125, 0.01326751708984375, 3.53515625, 1.1103515625, 0.1715087890625, 0.05938720703125, 0.06524658203125, 0.10211181640625, 1.05078125, 1.4404296875, 0.55419921875, 1.1337890625, 0.045318603515625, 0.0100555419921875, 0.25048828125, 1.15234375, 0.0003046989440917969, 0.037750244140625, 0.9677734375, 0.12115478515625, 0.08807373046875, 2.181529998779297e-05, 2.8371810913085938e-05, 9.655952453613281e-06, 0.0097808837890625, 0.119384765625, 0.0009489059448242188, 0.638671875, 0.22021484375, 2.63671875, 0.220947265625, 0.007022857666015625, 1.294921875], "tokens": [324, 434, 1760, 443, 438, 17148, 30, 1273, 5383, 438, 646, 32, 1348, 6058, 688, 324, 434, 996, 4621, 1159, 372, 5083, 322, 827, 4209, 645, 322, 5383, 32, 324, 442, 24115, 8555, 26, 452, 1339, 30, 9011, 30, 36991, 1881, 9079, 101, 293, 291, 320, 584, 434, 4335, 6015, 884, 4121]}
{"line_number": 676, "line_type": "original", "code": "            return typeVarAssigns;", "entropy": 1.7041015625, "is_bug_line": false, "sus_score": 0.8164965809277261, "per_token_entropy": [6.46484375, 1.6943359375, 3.57421875, 0.1578369140625, 0.00360107421875, 0.004268646240234375, 0.0277557373046875], "tokens": [1468, 442, 827, 1881, 9079, 101, 45]}
{"line_number": 676, "line_type": "generated", "code": "\n\n        return null;\n    }\n\n    /**\n     * <p> Tries to determine the type arguments of a class/interface based on a\n     * super type's type arguments. This method is the inverse of\n     * {@link #getTypeArguments(Type,", "entropy": 0.1357421875, "is_bug_line": false, "sus_score": 0.8164965809277261, "per_token_entropy": [0.96923828125, 1.052734375, 0.623046875, 0.0020351409912109375, 0.035430908203125, 0.003292083740234375, 0.316162109375, 0.07269287109375, 0.0165252685546875, 0.0003352165222167969, 0.04339599609375, 7.319450378417969e-05, 0.00019407272338867188, 2.076171875, 0.0006299018859863281, 0.0001456737518310547, 0.012664794921875, 0.002838134765625, 0.02264404296875, 0.0035495758056640625, 0.00033736228942871094, 0.3837890625, 0.07940673828125, 0.06146240234375, 0.00026869773864746094, 0.002166748046875, 0.00957489013671875, 0.037994384765625, 0.033050537109375, 2.7060508728027344e-05, 0.0184326171875, 0.525390625, 0.1964111328125, 0.0011224746704101562, 0.0025806427001953125, 0.0158538818359375, 0.11480712890625, 0.0016412734985351562, 0.005542755126953125, 0.005268096923828125, 0.0287017822265625, 0.00043964385986328125, 0.08355712890625, 6.389617919921875e-05, 0.0020751953125, 0.0001112222671508789, 0.01444244384765625, 0.007198333740234375, 0.0006346702575683594, 0.0116119384765625, 0.162109375, 0.00022721290588378906], "tokens": [584, 442, 744, 45, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 394, 3064, 372, 9921, 322, 827, 4209, 432, 312, 443, 33, 3337, 4122, 544, 312, 275, 319, 2599, 827, 1182, 827, 4209, 32, 1348, 1411, 438, 322, 19385, 432, 275, 319, 3088, 1204, 588, 10272, 8555, 26, 620, 30]}
{"line_number": 88, "line_type": "original", "code": "            return isAssignable(type, (GenericArrayType) toType, typeVarAssigns);", "entropy": 1.0390625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [7.4375, 2.0546875, 2.466796875, 0.05120849609375, 0.08709716796875, 0.705078125, 0.0516357421875, 2.0625, 1.98828125, 4.267692565917969e-05, 0.0019140243530273438, 0.0390625, 2.5, 0.1915283203125, 0.0660400390625, 0.001216888427734375, 0.00010573863983154297, 0.00089263916015625, 0.021453857421875], "tokens": [1468, 442, 438, 29296, 26, 681, 30, 308, 4007, 35085, 27, 372, 620, 30, 827, 1881, 9079, 101, 293]}
{"line_number": 88, "line_type": "generated", "code": "\n\n        // *\n        if (type instanceof TypeVariable<?>) {\n            return isAssignable(getBounds((TypeVariable<?>) type), toClass, null);\n        }\n        // */\n\n        if (type instanceof WildcardType) {\n            return isAssignable(", "entropy": 0.1737060546875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.8037109375, 0.951171875, 0.49853515625, 0.056884765625, 0.108642578125, 0.0022640228271484375, 0.0291748046875, 0.0023288726806640625, 0.716796875, 0.00010466575622558594, 0.034393310546875, 1.2636184692382812e-05, 0.0006875991821289062, 0.039794921875, 0.587890625, 0.092529296875, 0.022216796875, 0.157958984375, 0.60693359375, 0.1092529296875, 0.79541015625, 0.00010943412780761719, 2.5153160095214844e-05, 0.0005373954772949219, 0.0002014636993408203, 0.009368896484375, 0.24365234375, 0.032989501953125, 4.494190216064453e-05, 0.88134765625, 0.37060546875, 0.0070037841796875, 0.00569915771484375, 0.00010848045349121094, 0.1802978515625, 0.01180267333984375, 0.00982666015625, 0.09039306640625, 0.87158203125, 0.003444671630859375, 0.01885986328125, 0.0002880096435546875, 0.4404296875, 1.1086463928222656e-05, 3.5762786865234375e-07, 0.0027942657470703125, 0.00036454200744628906, 0.02716064453125, 0.1636962890625, 0.01207733154296875, 5.078315734863281e-05, 0.0293121337890625], "tokens": [584, 434, 319, 291, 415, 308, 681, 5113, 2768, 3818, 1888, 5103, 301, 324, 442, 438, 29296, 26, 371, 8285, 1162, 620, 3818, 1888, 5103, 827, 471, 372, 1339, 30, 744, 293, 291, 320, 291, 434, 569, 584, 415, 308, 681, 5113, 624, 14435, 620, 27, 301, 324, 442, 438, 29296, 26]}
{"line_number": 121, "line_type": "original", "code": "            return false;", "entropy": 2.578125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [7.30078125, 2.33203125, 0.6591796875, 0.0214385986328125], "tokens": [1468, 442, 901, 45]}
{"line_number": 121, "line_type": "generated", "code": "\n     * <p> Checks if the subject type may be implicitly cast to the target type\n     * following the Java generics rules. </p>\n     *\n     * @param type the subject type to be assigned to the target type\n     * @param to", "entropy": 0.0836181640625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [1.01953125, 0.1741943359375, 0.1314697265625, 0.001834869384765625, 0.00022780895233154297, 0.56640625, 0.0085601806640625, 0.034332275390625, 0.1285400390625, 0.11651611328125, 0.08587646484375, 0.0004048347473144531, 0.06915283203125, 0.0034427642822265625, 0.00726318359375, 0.0052947998046875, 0.08062744140625, 1.4501953125, 0.04791259765625, 0.00014531612396240234, 0.00927734375, 0.000507354736328125, 0.003437042236328125, 0.0007319450378417969, 3.337860107421875e-06, 0.0005278587341308594, 0.019683837890625, 0.0540771484375, 3.838539123535156e-05, 0.0008878707885742188, 0.0390625, 0.0011539459228515625, 0.061614990234375, 0.00021755695343017578, 0.0308990478515625, 0.0028820037841796875, 0.040252685546875, 0.00861358642578125, 0.005649566650390625, 0.0014123916625976562, 0.057464599609375, 0.0003151893615722656, 0.006969451904296875, 0.0004627704620361328, 0.00022709369659423828, 0.005168914794921875, 0.004669189453125, 0.0094146728515625, 2.7894973754882812e-05, 0.0008778572082519531, 0.0006742477416992188, 0.048858642578125], "tokens": [275, 319, 333, 98, 48, 17279, 415, 322, 5383, 827, 1631, 526, 32296, 9936, 372, 322, 1760, 827, 275, 319, 2412, 322, 4949, 1797, 1316, 7019, 32, 576, 98, 48, 275, 319, 275, 319, 477, 753, 827, 322, 5383, 827, 372, 526, 11012, 372, 322, 1760, 827, 275, 319, 477, 753, 372]}
{"line_number": 134, "line_type": "original", "code": "        if (type instanceof ParameterizedType) {", "entropy": 0.9970703125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [5.3828125, 0.7197265625, 0.15966796875, 0.7099609375, 0.09710693359375, 2.865234375, 0.0011682510375976562, 2.9802322387695312e-06, 0.02496337890625, 0.01096343994140625], "tokens": [351, 415, 308, 681, 5113, 10901, 1191, 620, 27, 301]}
{"line_number": 134, "line_type": "generated", "code": "\n            // only have to compare the raw type to the parameterized type\n            return isAssignable(getRawType(type), toParameterizedType, typeVarAssigns);\n        }\n\n        if (type instanceof WildcardType) {\n            return isAssignable(type,", "entropy": 0.1561279296875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.89306640625, 0.6171875, 0.45556640625, 0.329345703125, 0.00011324882507324219, 0.062103271484375, 0.05426025390625, 0.0101318359375, 0.0797119140625, 0.0075836181640625, 0.0023899078369140625, 0.035919189453125, 0.0002636909484863281, 0.05792236328125, 0.0191192626953125, 0.06903076171875, 0.01641845703125, 9.083747863769531e-05, 0.0023975372314453125, 0.031402587890625, 1.1444091796875e-05, 0.5576171875, 0.0033416748046875, 0.003879547119140625, 0.38525390625, 0.02508544921875, 2.562999725341797e-05, 0.26513671875, 0.025634765625, 3.7550926208496094e-05, 4.291534423828125e-06, 7.987022399902344e-06, 0.0013484954833984375, 0.021392822265625, 0.0014057159423828125, 0.1416015625, 1.6435546875, 0.054107666015625, 0.209228515625, 0.0184783935546875, 1.265625, 1.609325408935547e-05, 1.7881393432617188e-06, 0.0139007568359375, 0.0002149343490600586, 0.01654052734375, 0.266357421875, 0.285888671875, 0.0002789497375488281, 0.0819091796875, 0.0860595703125, 0.00021350383758544922], "tokens": [324, 434, 1755, 1159, 372, 8868, 322, 5081, 827, 372, 322, 3395, 1191, 827, 324, 442, 438, 29296, 26, 44898, 620, 26, 681, 471, 372, 33624, 620, 30, 827, 1881, 9079, 101, 293, 291, 320, 584, 415, 308, 681, 5113, 624, 14435, 620, 27, 301, 324, 442, 438, 29296, 26, 681, 30]}
{"line_number": 136, "line_type": "original", "code": "            return isAssignable(getRawType((ParameterizedType) type), toClass);", "entropy": 1.7802734375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [6.19140625, 0.482177734375, 3.349609375, 0.07318115234375, 0.053802490234375, 7.29296875, 0.00394439697265625, 4.26953125, 2.970703125, 5.125999450683594e-06, 0.0014858245849609375, 0.51806640625, 0.0221710205078125, 2.73046875, 0.1422119140625, 0.38134765625], "tokens": [1468, 442, 438, 29296, 26, 44898, 620, 1162, 33624, 620, 27, 827, 471, 372, 1339, 293]}
{"line_number": 136, "line_type": "generated", "code": "\n\n        // all types are assignable to themselves\n        if (type.equals(toParameterizedType)) {\n            return true;\n        }\n\n        if (type instanceof Class<?>) {\n            // just comparing two classes\n            return ClassUtils.isAssignable((Class<?>)", "entropy": 0.131103515625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [1.365234375, 0.5537109375, 0.79736328125, 0.0201263427734375, 0.00409698486328125, 0.00013017654418945312, 0.00014793872833251953, 0.004062652587890625, 0.021453857421875, 0.00638580322265625, 0.0024700164794921875, 1.1015625, 0.1322021484375, 0.0009136199951171875, 6.139278411865234e-05, 0.0008420944213867188, 0.0005087852478027344, 2.9802322387695312e-06, 0.003177642822265625, 0.0008268356323242188, 0.01751708984375, 0.0015459060668945312, 0.00019466876983642578, 0.0004162788391113281, 0.005298614501953125, 5.710124969482422e-05, 0.0406494140625, 0.54248046875, 0.025360107421875, 0.0760498046875, 0.003658294677734375, 0.1256103515625, 0.0958251953125, 5.352497100830078e-05, 0.00035071372985839844, 0.04803466796875, 0.257080078125, 0.73046875, 0.020416259765625, 0.00495147705078125, 0.0234222412109375, 0.21142578125, 0.037872314453125, 0.52783203125, 0.001842498779296875, 0.004344940185546875, 8.654594421386719e-05, 1.5497207641601562e-05, 0.003086090087890625, 6.282329559326172e-05, 0.0007719993591308594, 1.609325408935547e-05], "tokens": [584, 434, 1169, 3738, 884, 45113, 372, 21953, 291, 415, 308, 681, 32, 3574, 26, 452, 33624, 620, 490, 301, 324, 442, 861, 45, 291, 320, 584, 415, 308, 681, 5113, 1709, 1888, 5103, 301, 324, 434, 2258, 31374, 3134, 6015, 324, 442, 1709, 2755, 32, 297, 29296, 1162, 1339, 1888, 5103]}
{"line_number": 140, "line_type": "original", "code": "        if (type instanceof TypeVariable<?>) {", "entropy": 0.7939453125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [4.484375, 1.158203125, 0.0936279296875, 0.47509765625, 0.323486328125, 1.3017578125, 0.0004680156707763672, 0.0943603515625, 2.9087066650390625e-05, 0.00621795654296875], "tokens": [351, 415, 308, 681, 5113, 2768, 3818, 1888, 5103, 301]}
{"line_number": 140, "line_type": "generated", "code": "\n        // all types are assignable to themselves\n        if (type.equals(toParameterizedType)) {\n            return true;\n        }\n\n        if (type instanceof Class<?>) {\n            // just comparing two classes\n            return isAssignable((Class<?>) type, to", "entropy": 0.1356201171875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.89794921875, 0.472412109375, 1.212890625, 0.0179901123046875, 0.0026454925537109375, 7.474422454833984e-05, 0.0001398324966430664, 0.00128173828125, 0.0105438232421875, 0.00577545166015625, 0.0021305084228515625, 0.473388671875, 0.1123046875, 0.0004189014434814453, 6.29425048828125e-05, 0.0076751708984375, 0.00014925003051757812, 4.0531158447265625e-06, 0.004833221435546875, 0.0005478858947753906, 0.004940032958984375, 0.0019273757934570312, 0.00014841556549072266, 0.0001558065414428711, 0.0026760101318359375, 7.772445678710938e-05, 0.11773681640625, 1.3740234375, 0.057373046875, 0.1651611328125, 0.00391387939453125, 0.10430908203125, 0.08660888671875, 6.473064422607422e-05, 0.0004286766052246094, 0.01312255859375, 0.1640625, 0.419189453125, 0.01207733154296875, 0.006793975830078125, 0.0223541259765625, 0.0712890625, 0.038116455078125, 0.6982421875, 0.0022869110107421875, 0.1790771484375, 0.00196075439453125, 0.0003044605255126953, 1.1801719665527344e-05, 0.003154754638671875, 9.238719940185547e-05, 0.275634765625], "tokens": [291, 434, 1169, 3738, 884, 45113, 372, 21953, 291, 415, 308, 681, 32, 3574, 26, 452, 33624, 620, 490, 301, 324, 442, 861, 45, 291, 320, 584, 415, 308, 681, 5113, 1709, 1888, 5103, 301, 324, 434, 2258, 31374, 3134, 6015, 324, 442, 438, 29296, 1162, 1339, 1888, 5103, 827, 30, 372]}
{"line_number": 154, "line_type": "original", "code": "        if (type instanceof GenericArrayType) {", "entropy": 1.6240234375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [4.5, 3.1171875, 0.158203125, 1.044921875, 0.623046875, 4.7578125, 0.00049591064453125, 0.32177734375, 0.095458984375], "tokens": [351, 415, 308, 681, 5113, 12671, 35085, 27, 301]}
{"line_number": 154, "line_type": "generated", "code": "\n            return false;\n        }\n\n        // check that each type argument is assignable\n        for (Map.Entry<TypeVariable<?>, Type> entry : fromTypeVarAssigns.entrySet()) {\n            TypeVariable<?> fromTypeVar = entry.getKey();\n           ", "entropy": 0.18212890625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.1572265625, 0.13427734375, 0.00695037841796875, 0.00211334228515625, 0.0330810546875, 0.0003323554992675781, 0.0648193359375, 0.135986328125, 0.7578125, 1.72265625, 0.68505859375, 0.071533203125, 0.1329345703125, 0.309326171875, 0.297119140625, 0.1826171875, 0.1717529296875, 0.0028476715087890625, 0.77099609375, 3.6597251892089844e-05, 3.0040740966796875e-05, 0.004932403564453125, 0.0003046989440917969, 0.00014472007751464844, 0.0017261505126953125, 0.00029730796813964844, 0.0009737014770507812, 6.949901580810547e-05, 0.2294921875, 0.011260986328125, 0.63427734375, 6.794929504394531e-06, 3.159046173095703e-05, 0.002780914306640625, 5.543231964111328e-05, 0.0266571044921875, 0.0013132095336914062, 0.0019989013671875, 0.0035152435302734375, 0.0723876953125, 0.438720703125, 0.896484375, 0.0067596435546875, 1.212890625, 0.0828857421875, 0.182861328125, 0.0013217926025390625, 0.0012426376342773438, 0.0003993511199951172, 7.808208465576172e-05, 0.00022339820861816406, 0.016815185546875], "tokens": [324, 442, 901, 45, 291, 320, 584, 434, 1505, 688, 2504, 827, 2793, 438, 45113, 291, 436, 308, 1208, 32, 2711, 46, 620, 3818, 1888, 2717, 2768, 48, 3414, 499, 645, 620, 1881, 9079, 101, 32, 24351, 1157, 301, 324, 2768, 3818, 11674, 645, 620, 1881, 280, 3414, 32, 11728, 473, 324]}
{"line_number": 155, "line_type": "original", "code": "            return toClass.equals(Object.class)", "entropy": 1.775390625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [5.1640625, 1.8818359375, 4.46484375, 0.1314697265625, 0.08203125, 4.95703125, 0.00435638427734375, 1.8828125, 0.008056640625, 0.0006613731384277344, 0.95263671875], "tokens": [1468, 442, 372, 1339, 32, 3574, 26, 959, 32, 823, 27]}
{"line_number": 155, "line_type": "generated", "code": "\n        }\n\n        // check each type argument\n        for (Map.Entry<TypeVariable<?>, Type> entry : fromTypeVarAssigns.entrySet()) {\n            // check that each type argument is assignable\n            if (!isAssignable(entry.getValue(), getType", "entropy": 0.262939453125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.2607421875, 0.1636962890625, 0.1337890625, 0.1771240234375, 0.6865234375, 1.8720703125, 0.12066650390625, 0.045135498046875, 0.440673828125, 0.08929443359375, 0.003864288330078125, 1.236328125, 3.3020973205566406e-05, 2.5153160095214844e-05, 0.0066070556640625, 0.0003082752227783203, 0.0001608133316040039, 0.0025119781494140625, 0.0003712177276611328, 0.001068115234375, 8.535385131835938e-05, 0.25146484375, 0.01016998291015625, 0.4091796875, 6.556510925292969e-06, 0.00011420249938964844, 0.00020432472229003906, 1.8477439880371094e-05, 0.0181884765625, 0.0012388229370117188, 0.00225830078125, 0.00408935546875, 0.133544921875, 1.0185546875, 2.158203125, 1.2587890625, 0.67431640625, 0.135986328125, 0.176025390625, 0.3837890625, 0.1182861328125, 0.403076171875, 0.393798828125, 0.10577392578125, 0.006290435791015625, 0.0009860992431640625, 0.012420654296875, 0.1597900390625, 0.00033736228942871094, 0.0171661376953125, 0.00017654895782470703, 0.57958984375], "tokens": [291, 320, 584, 434, 1505, 2504, 827, 2793, 291, 436, 308, 1208, 32, 2711, 46, 620, 3818, 1888, 2717, 2768, 48, 3414, 499, 645, 620, 1881, 9079, 101, 32, 24351, 1157, 301, 324, 434, 1505, 688, 2504, 827, 2793, 438, 45113, 324, 415, 1429, 297, 29296, 26, 3038, 32, 6682, 1026, 24115]}
{"line_number": 193, "line_type": "original", "code": "            return true;", "entropy": 3.74609375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [3.544921875, 5.6875, 5.75, 0.005741119384765625], "tokens": [1468, 442, 861, 45]}
{"line_number": 193, "line_type": "generated", "code": "\n            }\n        } while (result instanceof TypeVariable<?>);\n        return result;\n    }\n\n    /**\n     * <p>\n     * Gets all type arguments for the given class.\n     * </p>\n     *\n     * @param type the {@code Type", "entropy": 0.317626953125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.122802734375, 0.0015087127685546875, 0.3134765625, 0.0004417896270751953, 0.1280517578125, 0.030792236328125, 0.00666046142578125, 0.00408935546875, 4.1365623474121094e-05, 3.6954879760742188e-06, 0.09893798828125, 1.15625, 0.474609375, 0.006366729736328125, 0.01264190673828125, 0.037200927734375, 0.037872314453125, 0.004680633544921875, 0.33349609375, 0.350341796875, 0.018402099609375, 0.00034689903259277344, 0.200439453125, 0.0002980232238769531, 0.00022399425506591797, 1.93359375, 3.910064697265625e-05, 1.5927734375, 1.326171875, 1.0673828125, 0.0540771484375, 0.41064453125, 0.75146484375, 0.050689697265625, 0.61376953125, 1.2314453125, 0.54443359375, 0.00043773651123046875, 0.0174102783203125, 0.00019359588623046875, 0.0010690689086914062, 0.00072479248046875, 0.0009036064147949219, 0.252685546875, 0.0008511543273925781, 0.5166015625, 0.00431060791015625, 0.0850830078125, 0.3017578125, 1.9482421875, 0.193115234375, 0.274169921875], "tokens": [324, 320, 291, 320, 2218, 308, 1267, 5113, 2768, 3818, 11674, 293, 291, 442, 1056, 45, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 275, 319, 7124, 1169, 827, 4209, 436, 322, 2702, 443, 32, 275, 319, 576, 98, 48, 275, 319, 275, 319, 477, 753, 827, 322, 3088, 687, 2768]}
{"line_number": 211, "line_type": "original", "code": "            return true;", "entropy": 3.05078125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [3.380859375, 6.94140625, 1.8740234375, 0.00757598876953125], "tokens": [1468, 442, 861, 45]}
{"line_number": 211, "line_type": "generated", "code": "\n    /**\n     * <p> Checks if the subject type may be implicitly cast to the target\n     * wildcard type following the Java generics rules. </p>\n     *\n     * @param type the subject type to be assigned to the target type\n     *", "entropy": 0.09539794921875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [1.3515625, 1.46484375, 0.01904296875, 0.0003895759582519531, 0.0311279296875, 0.0002741813659667969, 6.747245788574219e-05, 0.36083984375, 0.00507354736328125, 0.013153076171875, 0.218505859375, 0.07366943359375, 0.047698974609375, 0.0009918212890625, 0.01421356201171875, 0.0007467269897460938, 0.0011281967163085938, 0.01503753662109375, 0.00914764404296875, 0.1788330078125, 0.000141143798828125, 1.015625, 0.005329132080078125, 0.0101165771484375, 0.0005421638488769531, 0.003414154052734375, 0.0003325939178466797, 0.0003337860107421875, 0.0006313323974609375, 0.002101898193359375, 0.010986328125, 3.5643577575683594e-05, 0.0002027750015258789, 0.003864288330078125, 0.000392913818359375, 0.0093536376953125, 0.001331329345703125, 0.0144195556640625, 0.0012464523315429688, 0.017242431640625, 0.006500244140625, 0.00601959228515625, 0.000720977783203125, 0.01171875, 0.00017178058624267578, 0.003650665283203125, 0.0002608299255371094, 0.00031447410583496094, 0.001911163330078125, 0.020904541015625, 0.003192901611328125, 5.4717063903808594e-05], "tokens": [284, 1022, 275, 319, 333, 98, 48, 17279, 415, 322, 5383, 827, 1631, 526, 32296, 9936, 372, 322, 1760, 275, 319, 24748, 827, 2412, 322, 4949, 1797, 1316, 7019, 32, 576, 98, 48, 275, 319, 275, 319, 477, 753, 827, 322, 5383, 827, 372, 526, 11012, 372, 322, 1760, 827, 275, 319]}
{"line_number": 262, "line_type": "original", "code": "        if (type == null) {", "entropy": 1.9921875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [5.3203125, 4.265625, 0.1639404296875, 1.47265625, 3.828125, 0.44970703125, 0.36328125, 0.07373046875], "tokens": [351, 415, 308, 681, 610, 744, 27, 301]}
{"line_number": 262, "line_type": "generated", "code": "\n            return false;\n        }\n\n        return false;\n    }\n\n    /**\n     * <p> Checks if the subject type may be implicitly cast to the target\n     * wildcard type following the Java generics rules. </p>\n     *\n     * @param type", "entropy": 0.11846923828125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.65673828125, 0.13134765625, 0.324462890625, 0.0017156600952148438, 0.04052734375, 0.0005636215209960938, 0.2205810546875, 1.3369140625, 0.05328369140625, 0.0014009475708007812, 0.044586181640625, 0.0022296905517578125, 0.265625, 0.15869140625, 0.00954437255859375, 0.0012769699096679688, 0.0811767578125, 0.00022983551025390625, 0.00012290477752685547, 0.9609375, 0.00701141357421875, 0.0235595703125, 0.11529541015625, 0.021392822265625, 0.02545166015625, 0.0014238357543945312, 0.0263671875, 0.0015840530395507812, 0.004810333251953125, 0.08306884765625, 0.0195770263671875, 0.3046875, 6.282329559326172e-05, 1.05859375, 0.0028324127197265625, 0.045806884765625, 0.0017194747924804688, 0.0284271240234375, 0.001392364501953125, 2.1457672119140625e-06, 0.002227783203125, 0.018341064453125, 0.0103759765625, 0.00011491775512695312, 0.00031185150146484375, 0.0034084320068359375, 9.85860824584961e-05, 0.00984954833984375, 0.00670623779296875, 0.0235748291015625, 0.0008106231689453125, 0.019989013671875], "tokens": [324, 442, 901, 45, 291, 320, 584, 442, 901, 45, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 17279, 415, 322, 5383, 827, 1631, 526, 32296, 9936, 372, 322, 1760, 275, 319, 24748, 827, 2412, 322, 4949, 1797, 1316, 7019, 32, 576, 98, 48, 275, 319, 275, 319, 477, 753, 827]}
{"line_number": 268, "line_type": "original", "code": "        if (toGenericArrayType == null) {", "entropy": 1.5419921875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [4.640625, 2.6796875, 0.21142578125, 2.35546875, 1.5966796875, 0.0011539459228515625, 2.818359375, 0.68603515625, 0.35498046875, 0.08001708984375], "tokens": [351, 415, 308, 452, 4007, 35085, 610, 744, 27, 301]}
{"line_number": 268, "line_type": "generated", "code": "\n                return false;\n            }\n\n            // check the actual type arguments\n            return isAssignable(type.getRawType(), toGenericArrayType, typeVarAssigns);\n        }\n\n        return false;\n    }\n\n    /**\n     * <p>\n     * Checks if the", "entropy": 0.275146484375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [1.3740234375, 0.1068115234375, 0.02423095703125, 0.0016126632690429688, 0.064453125, 0.005786895751953125, 0.191650390625, 0.490478515625, 2.150390625, 0.5654296875, 0.7998046875, 0.0712890625, 0.0726318359375, 0.29296875, 0.810546875, 0.033416748046875, 0.0003170967102050781, 0.404296875, 1.130859375, 0.422119140625, 0.24267578125, 7.033348083496094e-06, 0.0002503395080566406, 0.10784912109375, 0.01064300537109375, 0.001514434814453125, 0.0631103515625, 0.01250457763671875, 5.2928924560546875e-05, 2.9802322387695312e-06, 5.9604644775390625e-05, 0.291259765625, 0.062744140625, 0.0006618499755859375, 0.19140625, 1.0234375, 0.031646728515625, 0.0041046142578125, 0.05975341796875, 0.0038852691650390625, 0.31640625, 0.173583984375, 0.01058197021484375, 0.0011053085327148438, 0.10626220703125, 0.000263214111328125, 0.00012624263763427734, 1.759765625, 2.5510787963867188e-05, 0.73779296875, 0.0168914794921875, 0.07281494140625], "tokens": [400, 442, 901, 45, 324, 320, 1064, 434, 1505, 322, 4648, 827, 4209, 324, 442, 438, 29296, 26, 681, 32, 44898, 620, 1026, 372, 4007, 35085, 30, 827, 1881, 9079, 101, 293, 291, 320, 584, 442, 901, 45, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 275, 319, 17279, 415, 322]}
{"line_number": 273, "line_type": "original", "code": "        if (toGenericArrayType.equals(type)) {", "entropy": 1.4111328125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [6.453125, 2.41015625, 0.0806884765625, 2.841796875, 1.46875, 0.0009474754333496094, 1.6494140625, 0.6904296875, 0.003086090087890625, 1.158203125, 0.104248046875, 0.070556640625], "tokens": [351, 415, 308, 452, 4007, 35085, 32, 3574, 26, 681, 490, 301]}
{"line_number": 273, "line_type": "generated", "code": "\n        return false;\n    }\n\n    /**\n     * <p> Checks if the subject type may be implicitly cast to the target\n     * wildcard type following the Java generics rules. </p>\n     *\n     * @param type the subject type to be assigned", "entropy": 0.1048583984375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [1.1240234375, 0.57275390625, 0.1954345703125, 0.001262664794921875, 0.08978271484375, 0.0009684562683105469, 0.354736328125, 0.1822509765625, 0.00791168212890625, 0.0012502670288085938, 0.10784912109375, 0.0002123117446899414, 0.00011491775512695312, 1.087890625, 0.006603240966796875, 0.031585693359375, 0.093505859375, 0.03704833984375, 0.0216827392578125, 0.0011243820190429688, 0.028961181640625, 0.00214385986328125, 0.004016876220703125, 0.06488037109375, 0.0170135498046875, 0.280029296875, 4.5299530029296875e-05, 0.896484375, 0.0029087066650390625, 0.036590576171875, 0.00229644775390625, 0.0292510986328125, 0.0014047622680664062, 1.1920928955078125e-06, 0.0023403167724609375, 0.0111846923828125, 0.010467529296875, 7.450580596923828e-05, 0.0001926422119140625, 0.0035858154296875, 5.602836608886719e-05, 0.01006317138671875, 0.01166534423828125, 0.0184173583984375, 0.0006818771362304688, 0.034820556640625, 0.0177001953125, 0.0045318603515625, 0.0003840923309326172, 0.034912109375, 0.00020182132720947266, 0.006946563720703125], "tokens": [291, 442, 901, 45, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 17279, 415, 322, 5383, 827, 1631, 526, 32296, 9936, 372, 322, 1760, 275, 319, 24748, 827, 2412, 322, 4949, 1797, 1316, 7019, 32, 576, 98, 48, 275, 319, 275, 319, 477, 753, 827, 322, 5383, 827, 372, 526, 11012]}
{"line_number": 274, "line_type": "original", "code": "            return true;", "entropy": 2.662109375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [7.6015625, 1.1474609375, 1.873046875, 0.028167724609375], "tokens": [1468, 442, 861, 45]}
{"line_number": 274, "line_type": "generated", "code": "\n    }\n\n    /**\n     * <p> Gets the implicit upper bounds of a type variable. </p>\n     *\n     * @param typeVariable the type variable to examine, not null\n     * @return an unmodifiable set of implicit upper bounds for this", "entropy": 0.282958984375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.1556396484375, 0.0036106109619140625, 0.1900634765625, 0.189453125, 0.00959014892578125, 0.0005521774291992188, 0.13623046875, 0.0003075599670410156, 0.00011277198791503906, 1.7568359375, 0.1346435546875, 0.108154296875, 0.6181640625, 0.18603515625, 0.54052734375, 0.65625, 0.060546875, 0.057159423828125, 0.0965576171875, 0.0755615234375, 1.6450881958007812e-05, 0.00022125244140625, 0.01357269287109375, 0.0006022453308105469, 0.03759765625, 0.0005898475646972656, 0.385986328125, 0.002716064453125, 0.44921875, 0.38427734375, 0.111083984375, 0.0775146484375, 0.0016918182373046875, 0.091064453125, 1.6318359375, 0.257080078125, 0.4775390625, 0.5751953125, 0.03271484375, 0.0001895427703857422, 0.0005679130554199219, 0.0033740997314453125, 1.029296875, 1.1982421875, 0.00067138671875, 0.5537109375, 0.0187225341796875, 0.59521484375, 0.2294921875, 0.044158935546875, 0.040374755859375, 1.4951171875], "tokens": [284, 320, 446, 1022, 275, 319, 333, 98, 48, 7124, 322, 10353, 8342, 11615, 432, 312, 827, 2677, 32, 576, 98, 48, 275, 319, 275, 319, 477, 753, 827, 3818, 322, 827, 2677, 372, 43200, 30, 646, 744, 275, 319, 477, 601, 600, 707, 30411, 739, 432, 10353, 8342, 11615, 436, 458]}
{"line_number": 277, "line_type": "original", "code": "        Type toComponentType = toGenericArrayType.getGenericComponentType();", "entropy": 0.87744140625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [5.22265625, 4.921875, 0.9775390625, 0.06951904296875, 0.0279693603515625, 0.1695556640625, 0.0017948150634765625, 0.0017442703247070312, 0.01409149169921875, 0.0008058547973632812, 0.0002567768096923828, 2.6941299438476562e-05, 0.0019235610961914062], "tokens": [351, 2768, 372, 39764, 280, 372, 4007, 35085, 32, 371, 4007, 39764, 473]}
{"line_number": 277, "line_type": "generated", "code": "\n     * <p>\n     * Checks if the subject type may be implicitly cast to the target\n     * parameterized type following the Java generics rules.\n     * </p>\n     *\n     * @param type the subject type to be assigned to the target", "entropy": 0.181396484375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.52978515625, 0.244873046875, 0.2412109375, 0.001148223876953125, 0.0003616809844970703, 1.544921875, 0.00019025802612304688, 1.2216796875, 0.032135009765625, 0.09014892578125, 0.2861328125, 0.1671142578125, 0.08978271484375, 0.0020351409912109375, 0.0400390625, 0.004497528076171875, 0.006908416748046875, 0.09454345703125, 0.0347900390625, 1.01953125, 0.00045943260192871094, 2.91796875, 0.0036468505859375, 0.004001617431640625, 0.0997314453125, 0.002437591552734375, 0.004833221435546875, 0.00215911865234375, 1.6689300537109375e-06, 0.0024280548095703125, 0.0201416015625, 0.184326171875, 0.0021381378173828125, 0.02001953125, 0.00016295909881591797, 0.0013027191162109375, 0.0184326171875, 0.0018310546875, 0.07958984375, 0.0005197525024414062, 0.042022705078125, 0.00470733642578125, 0.0275421142578125, 0.04180908203125, 0.007007598876953125, 0.0007300376892089844, 0.18603515625, 0.000244140625, 0.00897216796875, 0.0002815723419189453, 0.0004410743713378906, 0.093017578125], "tokens": [275, 319, 333, 98, 48, 275, 319, 17279, 415, 322, 5383, 827, 1631, 526, 32296, 9936, 372, 322, 1760, 275, 319, 3395, 1191, 827, 2412, 322, 4949, 1797, 1316, 7019, 32, 275, 319, 576, 98, 48, 275, 319, 275, 319, 477, 753, 827, 322, 5383, 827, 372, 526, 11012, 372, 322, 1760]}
{"line_number": 279, "line_type": "original", "code": "        if (type instanceof Class<?>) {", "entropy": 1.208984375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [4.37109375, 1.5888671875, 0.1275634765625, 0.6787109375, 1.111328125, 2.83203125, 0.1417236328125, 0.0030364990234375, 0.0267333984375], "tokens": [351, 415, 308, 681, 5113, 1709, 1888, 5103, 301]}
{"line_number": 279, "line_type": "generated", "code": "\n     *\n     * @param type the subject type to be assigned to the target type\n     * @param toWildcardType the target wildcard type\n     * @param typeVarAssigns a map with type variables\n     * @return true if <code>type</", "entropy": 0.03289794921875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.322998046875, 0.035400390625, 0.5419921875, 0.0004622936248779297, 0.0215301513671875, 0.002628326416015625, 0.0236663818359375, 0.03204345703125, 0.00942230224609375, 0.00055694580078125, 0.04681396484375, 0.00018978118896484375, 0.006610870361328125, 0.00033092498779296875, 0.0014934539794921875, 0.0146026611328125, 0.041595458984375, 0.035400390625, 7.593631744384766e-05, 0.0006427764892578125, 0.0024662017822265625, 0.0181732177734375, 0.006374359130859375, 0.0004413127899169922, 0.0032253265380859375, 0.01161956787109375, 0.050323486328125, 0.002780914306640625, 0.06640625, 0.000858306884765625, 0.0007052421569824219, 0.2132568359375, 0.0076141357421875, 0.0004203319549560547, 5.4836273193359375e-06, 0.0001347064971923828, 0.05767822265625, 0.003490447998046875, 0.0015392303466796875, 0.002010345458984375, 0.015838623046875, 0.042999267578125, 0.0009083747863769531, 0.0020198822021484375, 0.01580810546875, 0.03277587890625, 0.002593994140625, 0.005802154541015625, 0.0010662078857421875, 1.6808509826660156e-05, 0.002315521240234375, 0.0001342296600341797], "tokens": [275, 319, 275, 319, 477, 753, 827, 322, 5383, 827, 372, 526, 11012, 372, 322, 1760, 827, 275, 319, 477, 753, 372, 35277, 620, 322, 1760, 24748, 827, 275, 319, 477, 753, 827, 1881, 9079, 101, 312, 1992, 623, 827, 4886, 275, 319, 477, 601, 861, 415, 333, 687, 48, 681, 377]}
{"line_number": 280, "line_type": "original", "code": "            Class<?> cls = (Class<?>) type;", "entropy": 1.630859375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [7.60546875, 6.77734375, 0.0672607421875, 0.84814453125, 0.1219482421875, 2.017578125, 0.0948486328125, 0.0182342529296875, 0.00039076805114746094, 0.351318359375, 0.0361328125], "tokens": [1468, 1709, 11674, 9011, 280, 308, 1339, 1888, 5103, 827, 45]}
{"line_number": 280, "line_type": "generated", "code": "\n     * @param type the subject type to be assigned to the target type\n     * @param toWildcardType the target wildcard type\n     * @param typeVarAssigns a map with type variables\n     * @return true if <code>type</code>", "entropy": 0.029754638671875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.453125, 0.189697265625, 0.132568359375, 0.007965087890625, 0.0194091796875, 0.022430419921875, 0.00872802734375, 0.0005497932434082031, 0.048980712890625, 0.00016415119171142578, 0.006214141845703125, 0.0003669261932373047, 0.001544952392578125, 0.0179290771484375, 0.046417236328125, 0.01715087890625, 0.00010025501251220703, 0.000850677490234375, 0.00518798828125, 0.01467132568359375, 0.00763702392578125, 0.0004565715789794922, 0.002071380615234375, 0.014801025390625, 0.051055908203125, 0.00275421142578125, 0.045989990234375, 0.0009126663208007812, 0.000621795654296875, 0.228759765625, 0.01114654541015625, 0.0004444122314453125, 3.933906555175781e-06, 0.00013828277587890625, 0.059722900390625, 0.003986358642578125, 0.0014696121215820312, 0.002132415771484375, 0.0175628662109375, 0.0248870849609375, 0.00107574462890625, 0.001659393310546875, 0.01934814453125, 0.041595458984375, 0.0025272369384765625, 0.005153656005859375, 0.0013532638549804688, 1.5020370483398438e-05, 0.003093719482421875, 0.00012874603271484375, 0.00016701221466064453, 0.00014603137969970703], "tokens": [275, 319, 477, 753, 827, 322, 5383, 827, 372, 526, 11012, 372, 322, 1760, 827, 275, 319, 477, 753, 372, 35277, 620, 322, 1760, 24748, 827, 275, 319, 477, 753, 827, 1881, 9079, 101, 312, 1992, 623, 827, 4886, 275, 319, 477, 601, 861, 415, 333, 687, 48, 681, 377, 687, 48]}
{"line_number": 283, "line_type": "original", "code": "            return cls.isArray()", "entropy": 3.3828125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [4.21484375, 2.302734375, 9.25, 0.268310546875, 4.19921875, 0.05865478515625], "tokens": [1468, 442, 9011, 32, 15436, 346]}
{"line_number": 283, "line_type": "generated", "code": "\n     * @return true if <code>type</code> is assignable to\n     * <code>toWildcardType</code>.\n     */\n    private static boolean isAssignable(Type type, WildcardType toWildcardType,\n            Map<TypeVariable<?", "entropy": 0.02825927734375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.356689453125, 0.345458984375, 0.01422882080078125, 0.00815582275390625, 0.03619384765625, 0.003963470458984375, 0.0080413818359375, 0.00109100341796875, 1.8596649169921875e-05, 0.0032749176025390625, 0.0002040863037109375, 8.249282836914062e-05, 0.00016224384307861328, 0.00556182861328125, 0.0128936767578125, 0.00014865398406982422, 0.1434326171875, 0.000698089599609375, 0.01218414306640625, 0.00025725364685058594, 0.0004506111145019531, 0.0633544921875, 0.056488037109375, 0.000972747802734375, 0.0011806488037109375, 0.0007266998291015625, 0.023345947265625, 0.107177734375, 0.0194244384765625, 0.0189056396484375, 0.0247802734375, 0.0023021697998046875, 0.002262115478515625, 0.00098419189453125, 0.00019979476928710938, 0.005382537841796875, 0.0089874267578125, 0.0018930435180664062, 0.00011241436004638672, 0.0199737548828125, 0.00010085105895996094, 1.1920928955078125e-07, 0.00022554397583007812, 1.990795135498047e-05, 4.506111145019531e-05, 0.007358551025390625, 0.1446533203125, 0.0052032470703125, 0.00038123130798339844, 0.000118255615234375, 8.940696716308594e-06, 0.00010406970977783203], "tokens": [275, 319, 477, 601, 861, 415, 333, 687, 48, 681, 377, 687, 48, 438, 45113, 372, 275, 319, 333, 687, 48, 452, 35277, 620, 377, 687, 4503, 275, 569, 284, 945, 907, 1905, 438, 29296, 26, 620, 827, 30, 624, 14435, 620, 372, 35277, 620, 30, 324, 3516, 46, 620, 3818, 1888]}
