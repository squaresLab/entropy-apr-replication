{"line_number": 642, "line_type": "original", "code": "                rule = selectNumberRule(Calendar.MILLISECOND, tokenLen);", "entropy": 0.98779296875, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [5.56640625, 5.35546875, 0.2220458984375, 2.4296875, 0.2117919921875, 0.0079193115234375, 0.00510406494140625, 0.052886962890625, 0.064208984375, 0.814453125, 2.9206275939941406e-05, 0.0022430419921875, 0.047454833984375, 0.0096893310546875, 0.031982421875], "tokens": [2071, 5750, 280, 2192, 1918, 3842, 26, 9389, 32, 32206, 23790, 30, 2404, 5745, 293]}
{"line_number": 642, "line_type": "generated", "code": "\n            }\n\n            rules.add(rule);\n        }\n\n        return (Rule[]) rules.toArray(new Rule[rules.size()]);\n    }", "entropy": 0.2369384765625, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.25244140625, 0.0036373138427734375, 0.316162109375, 1.189453125, 0.08880615234375, 0.164794921875, 0.049713134765625, 0.030120849609375, 0.0024566650390625, 0.51220703125, 0.00788116455078125, 0.46533203125, 1.0185546875, 1.5166015625, 0.301025390625, 0.062408447265625, 0.408447265625, 0.00569915771484375, 7.37905502319336e-05, 0.006744384765625, 0.114990234375, 0.0003504753112792969, 0.0073699951171875, 0.02703857421875, 0.0006747245788574219, 5.0067901611328125e-06, 0.0011091232299804688, 0.312255859375, 0.006534576416015625], "tokens": [324, 320, 1064, 7019, 32, 669, 26, 5275, 293, 291, 320, 584, 442, 308, 3842, 9795, 7019, 32, 14320, 26, 890, 13708, 77, 7004, 32, 891, 36642, 284, 320]}
{"line_number": 643, "line_type": "original", "code": "                break;", "entropy": 4.08984375, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [5.63671875, 6.609375, 0.01934814453125], "tokens": [2071, 1626, 45]}
{"line_number": 643, "line_type": "generated", "code": "\n            rules.add(rule);\n        }", "entropy": 0.3291015625, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.466064453125, 1.5400390625, 0.06048583984375, 0.11767578125, 0.045196533203125, 0.040374755859375, 0.0032958984375, 0.681640625, 0.005840301513671875], "tokens": [324, 7019, 32, 669, 26, 5275, 293, 291, 320]}
{"line_number": 872, "line_type": "original", "code": "            calendar = (Calendar) calendar.clone();", "entropy": 2.34765625, "is_bug_line": true, "sus_score": 1.0, "per_token_entropy": [7.66796875, 7.51171875, 4.515625, 2.525390625, 0.188232421875, 0.004268646240234375, 1.0537109375, 0.0138397216796875, 0.0001442432403564453, 0.0023975372314453125], "tokens": [1468, 14461, 280, 308, 9389, 27, 14461, 32, 6358, 473]}
{"line_number": 872, "line_type": "generated", "code": "\n    /**\n     * <p>Gets the time zone used by this formatter.</p>\n     * \n     * @return the time zone\n     */\n    public TimeZone getTimeZone() {\n        return mTimeZone;\n    }\n\n    /**\n     * <p>Gets", "entropy": 0.0908203125, "is_bug_line": true, "sus_score": 1.0, "per_token_entropy": [0.71630859375, 0.1199951171875, 0.011474609375, 0.00038242340087890625, 0.06005859375, 0.00014638900756835938, 0.0035533905029296875, 0.4208984375, 0.0283966064453125, 0.116455078125, 0.002246856689453125, 0.30126953125, 0.048187255859375, 0.02545166015625, 0.023406982421875, 0.12493896484375, 0.0001996755599975586, 0.0003952980041503906, 0.0025653839111328125, 8.809566497802734e-05, 0.039215087890625, 6.723403930664062e-05, 0.0303802490234375, 0.010467529296875, 0.0145721435546875, 0.01404571533203125, 0.002689361572265625, 0.86328125, 0.109619140625, 0.0094451904296875, 0.01251983642578125, 0.0152130126953125, 2.7418136596679688e-05, 0.00025844573974609375, 0.0005249977111816406, 0.0028705596923828125, 0.0026950836181640625, 0.01540374755859375, 0.0192413330078125, 0.035919189453125, 0.0033721923828125, 0.01140594482421875, 0.0130462646484375, 6.42538070678711e-05, 0.67822265625, 0.129638671875, 0.002197265625, 8.308887481689453e-05, 0.0209808349609375, 5.0902366638183594e-05, 0.0015048980712890625, 0.65576171875], "tokens": [284, 1022, 275, 319, 333, 98, 48, 20931, 322, 1133, 10790, 1654, 810, 458, 14971, 1730, 98, 48, 275, 319, 5384, 319, 477, 601, 322, 1133, 10790, 275, 569, 284, 562, 3717, 6767, 622, 26223, 346, 301, 291, 442, 345, 26223, 45, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 20931]}
{"line_number": 873, "line_type": "original", "code": "            calendar.setTimeZone(mTimeZone);", "entropy": 2.103515625, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [7.234375, 8.2890625, 0.34814453125, 0.498046875, 1.9951171875, 0.04559326171875, 0.423095703125, 0.06646728515625, 0.03948974609375], "tokens": [1468, 14461, 32, 470, 26223, 26, 95, 26223, 293]}
{"line_number": 873, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [], "tokens": []}
{"line_number": 182, "line_type": "original", "code": "        return getInstance(pattern, timeZone, null);", "entropy": 1.7353515625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [4.37890625, 2.34375, 0.60400390625, 0.13623046875, 3.517578125, 0.037353515625, 2.509765625, 0.00203704833984375, 0.039398193359375, 5.5078125, 0.01424407958984375], "tokens": [351, 442, 31637, 26, 5607, 30, 1133, 6767, 30, 744, 293]}
{"line_number": 182, "line_type": "generated", "code": "\n    }\n\n    /**\n     * <p>Gets a time formatter instance using the specified style in the\n     * default time zone and locale.</p>\n     * \n     * @param style  time style: FULL, LONG, MEDIUM, or SHORT\n    ", "entropy": 0.050750732421875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [1.521484375, 0.0738525390625, 0.09906005859375, 0.14013671875, 0.004726409912109375, 0.0007457733154296875, 0.01092529296875, 1.1086463928222656e-05, 8.571147918701172e-05, 0.00638580322265625, 0.0062255859375, 0.51025390625, 0.007965087890625, 0.0008478164672851562, 0.0010166168212890625, 0.0002472400665283203, 0.002628326416015625, 0.004852294921875, 0.10107421875, 0.0251312255859375, 0.0006451606750488281, 1.4901161193847656e-05, 0.007709503173828125, 0.019775390625, 0.00016379356384277344, 0.00272369384765625, 0.002300262451171875, 0.00919342041015625, 2.777576446533203e-05, 0.00015354156494140625, 0.0019588470458984375, 7.271766662597656e-06, 0.0152435302734375, 8.928775787353516e-05, 0.025787353515625, 0.00024044513702392578, 0.00026035308837890625, 0.0031890869140625, 0.00957489013671875, 0.0007901191711425781, 0.00021195411682128906, 4.947185516357422e-05, 9.21487808227539e-05, 0.00037980079650878906, 6.99758529663086e-05, 0.00039124488830566406, 1.430511474609375e-06, 0.004718780517578125, 0.0014028549194335938, 0.0024280548095703125, 5.602836608886719e-06, 0.010894775390625], "tokens": [284, 320, 446, 1022, 275, 319, 333, 98, 48, 20931, 312, 1133, 14971, 1980, 1471, 322, 3191, 1418, 328, 322, 275, 319, 1244, 1133, 10790, 461, 11259, 1730, 98, 48, 275, 319, 5384, 319, 477, 753, 1418, 225, 1133, 1418, 44, 39398, 30, 27040, 30, 27513, 34252, 30, 556, 5312, 2426, 275]}
{"line_number": 738, "line_type": "original", "code": "                    if (i + 1 < length && pattern.charAt(i + 1) == '\\'') {", "entropy": 1.259765625, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [9.6953125, 1.6435546875, 0.059112548828125, 8.21875, 5.1484375, 0.1617431640625, 0.1744384765625, 0.43896484375, 1.44140625, 0.7822265625, 0.350830078125, 0.0350341796875, 0.0025043487548828125, 0.0005059242248535156, 0.0042724609375, 0.0238800048828125, 0.0021381378173828125, 0.00033736228942871094, 0.0007872581481933594, 0.021453857421875, 0.65087890625, 0.0020542144775390625, 0.11981201171875], "tokens": [4696, 415, 308, 91, 474, 225, 35, 333, 3104, 962, 5257, 32, 15611, 26, 91, 474, 225, 35, 27, 610, 26271, 683, 301]}
{"line_number": 738, "line_type": "generated", "code": "\n    }\n\n    /**\n     * <p>Formats a millisecond value.</p>\n     * \n     * @param value  the millisecond value to format\n     * @param toAppendTo  the buffer to append to\n     * @param pos  the position", "entropy": 0.14111328125, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.5166015625, 1.3984375, 0.3857421875, 0.21630859375, 0.0038909912109375, 0.00020134449005126953, 0.10321044921875, 6.341934204101562e-05, 0.002620697021484375, 0.18896484375, 0.2332763671875, 0.1644287109375, 0.00021016597747802734, 0.29931640625, 1.3251953125, 0.00015425682067871094, 0.0009441375732421875, 0.00620269775390625, 0.0012998580932617188, 0.07025146484375, 9.489059448242188e-05, 0.0086669921875, 0.0036945343017578125, 0.994140625, 0.0161285400390625, 0.0535888671875, 0.1610107421875, 0.0036258697509765625, 0.0018072128295898438, 0.5068359375, 0.0296478271484375, 0.04315185546875, 0.0004284381866455078, 0.00014126300811767578, 0.1234130859375, 0.22607421875, 3.814697265625e-06, 3.123283386230469e-05, 0.0008730888366699219, 0.0066680908203125, 0.007190704345703125, 0.003116607666015625, 0.0011301040649414062, 0.0009527206420898438, 0.006595611572265625, 0.0032863616943359375, 0.00188446044921875, 0.03326416015625, 0.1495361328125, 0.010772705078125, 0.00751495361328125, 0.0161285400390625], "tokens": [284, 320, 446, 1022, 275, 319, 333, 98, 48, 19298, 312, 37003, 3090, 786, 1730, 98, 48, 275, 319, 5384, 319, 477, 753, 786, 225, 322, 37003, 3090, 786, 372, 2179, 275, 319, 477, 753, 372, 6551, 705, 225, 322, 3112, 372, 5489, 372, 275, 319, 477, 753, 3400, 225, 322, 2747]}
{"line_number": 743, "line_type": "original", "code": "                        inLiteral = !inLiteral;", "entropy": 3.9765625, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [9.5703125, 9.5, 7.61328125, 0.043182373046875, 4.8515625, 0.14794921875, 0.0020084381103515625, 0.0771484375], "tokens": [6797, 328, 8208, 280, 653, 266, 8208, 45]}
{"line_number": 743, "line_type": "generated", "code": "\n        } else if (obj instanceof Long) {\n            return format(((Long) obj).longValue(), toAppendTo);\n        } else {\n            throw new IllegalArgumentException(\"Unknown class: \" + \n                                               obj.getClass().getName());\n        }\n    }\n\n    /**", "entropy": 0.10296630859375, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.29736328125, 0.00485992431640625, 0.0166015625, 0.06048583984375, 0.0028629302978515625, 0.00232696533203125, 0.016387939453125, 0.0085601806640625, 0.047332763671875, 0.0004544258117675781, 0.294677734375, 0.499755859375, 0.0070037841796875, 0.045562744140625, 0.00201416015625, 0.00015878677368164062, 0.0198822021484375, 0.00392913818359375, 0.000133514404296875, 0.0025005340576171875, 0.0007910728454589844, 1.1682510375976562e-05, 9.02414321899414e-05, 0.004085540771484375, 0.022430419921875, 0.0002570152282714844, 0.1676025390625, 0.1435546875, 0.06927490234375, 0.0833740234375, 0.00228118896484375, 0.12249755859375, 0.2373046875, 0.31884765625, 0.37939453125, 0.0024433135986328125, 0.00457763671875, 0.0232086181640625, 1.6279296875, 0.268310546875, 0.01580810546875, 9.524822235107422e-05, 8.344650268554688e-06, 0.1629638671875, 0.00017786026000976562, 0.003314971923828125, 0.005764007568359375, 0.0004000663757324219, 0.1180419921875, 0.0011053085327148438, 0.147216796875, 0.0897216796875], "tokens": [291, 320, 813, 415, 308, 2067, 5113, 6359, 27, 301, 324, 442, 2179, 7728, 3952, 27, 2830, 547, 41976, 1026, 372, 6551, 705, 293, 291, 320, 813, 301, 324, 1422, 537, 12137, 440, 5842, 443, 44, 313, 474, 225, 16329, 2830, 32, 9700, 922, 5165, 1035, 291, 320, 284, 320, 446, 1022]}
{"line_number": 639, "line_type": "original", "code": "                rule = selectNumberRule(Calendar.SECOND, tokenLen);", "entropy": 1.171875, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [4.44140625, 6.30078125, 0.384765625, 2.19140625, 1.5390625, 0.0237884521484375, 0.0107574462890625, 0.047271728515625, 0.11224365234375, 1.2607421875, 0.0028934478759765625, 0.03802490234375, 0.006938934326171875, 0.05194091796875], "tokens": [2071, 5750, 280, 2192, 1918, 3842, 26, 9389, 32, 23790, 30, 2404, 5745, 293]}
{"line_number": 639, "line_type": "generated", "code": "\n                break;\n            case'': // whitespace\n                rule = WhitespaceRule.INSTANCE;\n                break;\n            case 'u': // Unicode category (category)\n                rule = new UnicodeCategoryRule(token.substring(1));\n                break;\n            case '", "entropy": 0.353759765625, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [0.1640625, 0.01352691650390625, 0.0010499954223632812, 0.03704833984375, 0.65185546875, 0.9638671875, 1.46875, 0.1822509765625, 1.19921875, 0.108642578125, 0.269775390625, 0.0003185272216796875, 0.486572265625, 6.318092346191406e-06, 0.026123046875, 6.461143493652344e-05, 0.09161376953125, 0.003570556640625, 0.06842041015625, 0.01009368896484375, 0.00034618377685546875, 0.023040771484375, 0.392333984375, 0.59375, 0.79052734375, 0.0002803802490234375, 0.044708251953125, 2.41015625, 2.0390625, 0.810546875, 2.0546875, 0.0188140869140625, 0.284423828125, 0.63720703125, 0.0014524459838867188, 0.2408447265625, 0.12841796875, 0.10516357421875, 0.000701904296875, 0.047607421875, 0.82177734375, 0.1964111328125, 0.0063018798828125, 9.453296661376953e-05, 0.0084381103515625, 0.0660400390625, 0.150390625, 0.003612518310546875, 0.0006814002990722656, 0.0499267578125, 0.623046875, 0.0894775390625], "tokens": [400, 1626, 45, 324, 1135, 330, 14589, 434, 19782, 400, 5750, 280, 2619, 12616, 3842, 32, 12452, 45, 400, 1626, 45, 324, 1135, 330, 103, 950, 434, 23174, 6215, 308, 3153, 27, 400, 5750, 280, 537, 23174, 4220, 3842, 26, 1956, 32, 8723, 26, 35, 876, 400, 1626, 45, 324, 1135, 330]}
{"line_number": 640, "line_type": "original", "code": "                break;", "entropy": 2.154296875, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [4.9375, 1.5263671875, 0.0018758773803710938], "tokens": [2071, 1626, 45]}
{"line_number": 640, "line_type": "generated", "code": "\n            default:\n                throw new IllegalArgumentException(\"Illegal pattern component: \" + token);\n            }\n\n            rules.add(rule);\n        }\n\n        return new RuleSet(rules.toArray(new Rule[rules.size()]));\n    }", "entropy": 0.1517333984375, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [0.2039794921875, 0.436767578125, 0.0012540817260742188, 0.1546630859375, 0.1817626953125, 0.0222625732421875, 0.1572265625, 0.07318115234375, 0.05340576171875, 0.0031948089599609375, 0.00165557861328125, 0.001346588134765625, 0.0188140869140625, 0.007678985595703125, 0.37060546875, 0.0140838623046875, 0.054901123046875, 0.0019664764404296875, 0.208740234375, 0.85107421875, 0.0986328125, 0.1341552734375, 0.057647705078125, 0.02984619140625, 0.0027256011962890625, 0.278076171875, 0.0035839080810546875, 0.49267578125, 0.78466796875, 0.9560546875, 0.471435546875, 0.089111328125, 0.01226043701171875, 0.0304718017578125, 0.417236328125, 0.0150604248046875, 0.002140045166015625, 0.05926513671875, 0.035736083984375, 0.0116729736328125, 0.032470703125, 0.00017964839935302734, 4.410743713378906e-06, 0.21240234375, 0.0010471343994140625, 0.08258056640625, 0.0026950836181640625], "tokens": [324, 1244, 44, 400, 1422, 537, 12137, 440, 15095, 5257, 2577, 44, 313, 474, 2404, 293, 324, 320, 1064, 7019, 32, 669, 26, 5275, 293, 291, 320, 584, 442, 537, 13708, 885, 26, 7004, 32, 14320, 26, 890, 13708, 77, 7004, 32, 891, 7662, 876, 284, 320]}
{"line_number": 633, "line_type": "original", "code": "                rule = selectNumberRule(Calendar.HOUR_OF_DAY, tokenLen);", "entropy": 1.107421875, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [5.578125, 3.275390625, 0.023773193359375, 3.294921875, 5.2734375, 0.01100921630859375, 0.005298614501953125, 0.02264404296875, 0.005290985107421875, 1.5126953125, 0.74169921875, 0.00032711029052734375, 1.728534698486328e-05, 0.0003342628479003906, 0.0009250640869140625, 0.047576904296875, 0.01149749755859375, 0.1346435546875], "tokens": [2071, 5750, 280, 2192, 1918, 3842, 26, 9389, 32, 30540, 81, 2109, 81, 14318, 30, 2404, 5745, 293]}
{"line_number": 633, "line_type": "generated", "code": "\n                break;\n            case 'X': // reserved for ISO time\n                rule = Iso8601Rule.ISO8601_HOURS;\n                break;\n            case 'x': // reserved for ISO time\n                rule = Iso8", "entropy": 0.1768798828125, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [0.1187744140625, 0.043731689453125, 0.00048351287841796875, 0.0217437744140625, 0.379638671875, 0.6162109375, 2.623046875, 0.00018072128295898438, 0.054718017578125, 0.69140625, 0.005405426025390625, 1.6689453125, 0.2393798828125, 0.2313232421875, 0.42529296875, 0.00032138824462890625, 0.420166015625, 7.092952728271484e-05, 0.00798797607421875, 0.0001558065414428711, 0.00015020370483398438, 5.4836273193359375e-06, 0.65576171875, 0.0014429092407226562, 0.19580078125, 0.51318359375, 2.86102294921875e-05, 1.0251998901367188e-05, 1.4901161193847656e-05, 0.003017425537109375, 0.056488037109375, 0.003246307373046875, 0.00875091552734375, 0.040313720703125, 0.01436614990234375, 0.0001049041748046875, 0.01454925537109375, 0.0472412109375, 0.0007266998291015625, 0.0018777847290039062, 8.845329284667969e-05, 0.0016002655029296875, 0.0006494522094726562, 0.0006823539733886719, 0.0016269683837890625, 0.01055145263671875, 0.0631103515625, 0.00789642333984375, 9.250640869140625e-05, 0.002964019775390625, 2.0265579223632812e-06, 1.430511474609375e-06], "tokens": [400, 1626, 45, 324, 1135, 330, 74, 950, 434, 5215, 436, 19687, 1133, 400, 5750, 280, 439, 762, 42, 40, 34, 35, 3842, 32, 14859, 42, 40, 34, 35, 81, 30540, 69, 45, 400, 1626, 45, 324, 1135, 330, 106, 950, 434, 5215, 436, 19687, 1133, 400, 5750, 280, 439, 762, 42]}
{"line_number": 634, "line_type": "original", "code": "                break;", "entropy": 2.978515625, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [3.8515625, 5.0859375, 0.0007472038269042969], "tokens": [2071, 1626, 45]}
{"line_number": 634, "line_type": "generated", "code": "\n                if (sub.length() == 1) {\n                    rule = new CharacterLiteral(sub.charAt(0));\n                } else {\n                    rule = new StringLiteral(sub);\n                }\n                break;\n            case '[': // character class\n                String", "entropy": 0.1766357421875, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [0.258056640625, 0.4755859375, 0.0638427734375, 0.0272674560546875, 2.0623207092285156e-05, 0.040435791015625, 0.0004258155822753906, 0.007091522216796875, 0.0001506805419921875, 0.071044921875, 0.00276947021484375, 0.0007076263427734375, 0.050506591796875, 0.250732421875, 0.0003058910369873047, 0.11627197265625, 0.0906982421875, 0.034637451171875, 0.28369140625, 0.0149993896484375, 0.002452850341796875, 1.52587890625e-05, 6.318092346191406e-06, 0.00036263465881347656, 0.00395965576171875, 0.0216827392578125, 0.0005540847778320312, 0.01290130615234375, 0.010223388671875, 0.0186614990234375, 0.092041015625, 0.0001188516616821289, 0.007038116455078125, 0.0015382766723632812, 0.0011548995971679688, 0.01105499267578125, 0.01454925537109375, 0.01129913330078125, 0.006977081298828125, 0.0008382797241210938, 0.0189208984375, 0.0018548965454101562, 0.0001995563507080078, 0.084228515625, 0.638671875, 1.6328125, 5.924701690673828e-05, 0.025848388671875, 2.576171875, 1.03125, 0.099365234375, 1.072265625], "tokens": [400, 415, 308, 1113, 32, 1322, 346, 610, 225, 35, 27, 301, 528, 5750, 280, 537, 15041, 8208, 26, 1113, 32, 15611, 26, 34, 876, 400, 320, 813, 301, 528, 5750, 280, 537, 892, 8208, 26, 1113, 293, 400, 320, 400, 1626, 45, 324, 1135, 35075, 44, 434, 5341, 443, 400, 892]}
{"line_number": 636, "line_type": "original", "code": "                rule = selectNumberRule(Calendar.MINUTE, tokenLen);", "entropy": 1.330078125, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [5.41796875, 6.8046875, 0.11029052734375, 2.83984375, 1.01171875, 0.0230255126953125, 0.01349639892578125, 0.0282440185546875, 0.1168212890625, 2.080078125, 0.00814056396484375, 0.06317138671875, 0.006038665771484375, 0.09423828125], "tokens": [2071, 5750, 280, 2192, 1918, 3842, 26, 9389, 32, 47229, 30, 2404, 5745, 293]}
{"line_number": 636, "line_type": "generated", "code": "\n                } else {\n                    rule = new StringLiteral(sub);", "entropy": 0.049285888671875, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [0.130859375, 0.004016876220703125, 0.1358642578125, 0.0246429443359375, 0.089599609375, 0.18115234375, 0.0008149147033691406, 0.0170745849609375, 0.0022029876708984375, 0.002498626708984375, 0.00858306884765625, 0.0237274169921875, 0.0196990966796875], "tokens": [400, 320, 813, 301, 528, 5750, 280, 537, 892, 8208, 26, 1113, 293]}
{"line_number": 637, "line_type": "original", "code": "                break;", "entropy": 3.6328125, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [3.6953125, 7.1953125, 0.0081329345703125], "tokens": [2071, 1626, 45]}
{"line_number": 637, "line_type": "generated", "code": "\n                }\n                break;\n            case '(': // nested pattern\n                rule = new NestedField(token.substring(1, tokenLen - 1));\n                break;\n            default:\n                throw new IllegalArgumentException(\"Illegal pattern component: \" + token);\n            }", "entropy": 0.2568359375, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [0.6162109375, 0.00954437255859375, 0.02850341796875, 0.003849029541015625, 0.0002872943878173828, 0.06402587890625, 0.49951171875, 1.1865234375, 1.587890625, 0.0137481689453125, 0.44921875, 2.234375, 0.130126953125, 1.00390625, 0.0007987022399902344, 0.1248779296875, 1.1044921875, 0.55712890625, 0.0221405029296875, 1.1748046875, 0.268798828125, 0.002323150634765625, 4.172325134277344e-05, 0.004215240478515625, 0.0303955078125, 0.008544921875, 0.281494140625, 0.03173828125, 0.020416259765625, 0.0019159317016601562, 0.35009765625, 0.01554107666015625, 0.0056304931640625, 0.0002040863037109375, 0.0858154296875, 0.3955078125, 0.001468658447265625, 0.2568359375, 0.1959228515625, 0.0221710205078125, 0.0919189453125, 0.056304931640625, 0.060394287109375, 0.0034332275390625, 0.002567291259765625, 0.0007486343383789062, 0.016082763671875, 0.00911712646484375, 0.2451171875, 0.0183563232421875, 0.061981201171875, 0.002864837646484375], "tokens": [400, 320, 400, 1626, 45, 324, 1135, 330, 16487, 434, 11815, 5257, 400, 5750, 280, 537, 31954, 1176, 26, 1956, 32, 8723, 26, 35, 30, 2404, 5745, 429, 225, 35, 876, 400, 1626, 45, 324, 1244, 44, 400, 1422, 537, 12137, 440, 15095, 5257, 2577, 44, 313, 474, 2404, 293, 324, 320]}
{"line_number": 621, "line_type": "original", "code": "                    rule = TwoDigitMonthField.INSTANCE;", "entropy": 1.9345703125, "is_bug_line": false, "sus_score": 0.2581988897471611, "per_token_entropy": [5.7421875, 1.3310546875, 0.322509765625, 7.765625, 0.032379150390625, 3.93359375, 0.044921875, 0.0133514404296875, 0.1439208984375, 0.01322174072265625], "tokens": [4696, 5750, 280, 16510, 21530, 7357, 1176, 32, 12452, 45]}
{"line_number": 621, "line_type": "generated", "code": "\n                } else {\n                    rule = new TimeZoneNameRule(mTimeZone, mTimeZoneForced, mLocale, TimeZone.SHORT);", "entropy": 0.0172882080078125, "is_bug_line": false, "sus_score": 0.2581988897471611, "per_token_entropy": [0.1041259765625, 0.0017137527465820312, 0.00792694091796875, 0.1937255859375, 0.05126953125, 0.06976318359375, 0.00023937225341796875, 0.0271148681640625, 0.0002562999725341797, 1.1682510375976562e-05, 0.0005135536193847656, 2.7298927307128906e-05, 4.363059997558594e-05, 0.0017910003662109375, 0.00022268295288085938, 0.00017261505126953125, 0.0015630722045898438, 0.0004012584686279297, 0.00020432472229003906, 2.6226043701171875e-06, 0.0005402565002441406, 0.00113677978515625, 4.3272972106933594e-05, 0.030731201171875, 0.0038166046142578125, 2.2649765014648438e-06, 6.914138793945312e-05, 0.0030765533447265625, 0.001026153564453125], "tokens": [400, 320, 813, 301, 528, 5750, 280, 537, 3717, 6767, 558, 3842, 26, 95, 26223, 30, 345, 26223, 1562, 3870, 30, 345, 9467, 30, 3717, 6767, 32, 15456, 293]}
{"line_number": 627, "line_type": "original", "code": "                rule = selectNumberRule(Calendar.DAY_OF_MONTH, tokenLen);", "entropy": 1.3994140625, "is_bug_line": false, "sus_score": 0.2581988897471611, "per_token_entropy": [5.703125, 6.1796875, 0.055877685546875, 2.841796875, 0.79931640625, 0.00028514862060546875, 0.0024051666259765625, 0.01230621337890625, 0.0010633468627929688, 6.62890625, 1.33514404296875e-05, 4.8995018005371094e-05, 1.7881393432617188e-05, 2.904296875, 0.0021228790283203125, 0.048583984375, 0.00121307373046875, 0.01221466064453125], "tokens": [2071, 5750, 280, 2192, 1918, 3842, 26, 9389, 32, 14318, 81, 2109, 81, 22846, 30, 2404, 5745, 293]}
{"line_number": 627, "line_type": "generated", "code": "\n                } else {\n                    rule = new TimeZoneRule(mTimeZone, mLocale);\n                }\n                break;\n            case '\\'': // literal text\n                String sub = token.substring(1);\n                if (sub.length() == 1) {", "entropy": 0.164306640625, "is_bug_line": false, "sus_score": 0.2581988897471611, "per_token_entropy": [0.51513671875, 0.0033473968505859375, 0.044097900390625, 0.34033203125, 0.61328125, 0.6435546875, 0.00043129920959472656, 0.1114501953125, 0.01531982421875, 0.0014162063598632812, 0.7236328125, 0.09625244140625, 0.57958984375, 0.468994140625, 0.15380859375, 0.09429931640625, 0.51806640625, 0.15869140625, 0.01227569580078125, 0.0003185272216796875, 0.004852294921875, 0.0010480880737304688, 0.0005388259887695312, 0.0462646484375, 0.78076171875, 0.0189971923828125, 3.445148468017578e-05, 0.0168609619140625, 1.0400390625, 0.00814056396484375, 0.17724609375, 0.1983642578125, 0.03985595703125, 0.0034313201904296875, 0.12384033203125, 0.004001617431640625, 0.0007023811340332031, 9.5367431640625e-06, 0.0001933574676513672, 0.58984375, 0.03277587890625, 0.1273193359375, 0.00835418701171875, 0.058197021484375, 5.364418029785156e-06, 0.0155181884765625, 8.26120376586914e-05, 0.007198333740234375, 6.723403930664062e-05, 0.14697265625, 0.0015707015991210938, 0.0008091926574707031], "tokens": [400, 320, 813, 301, 528, 5750, 280, 537, 3717, 6767, 3842, 26, 95, 26223, 30, 345, 9467, 293, 400, 320, 400, 1626, 45, 324, 1135, 26271, 950, 434, 10652, 1344, 400, 892, 1361, 280, 2404, 32, 8723, 26, 35, 293, 400, 415, 308, 1113, 32, 1322, 346, 610, 225, 35, 27, 301]}
{"line_number": 628, "line_type": "original", "code": "                break;", "entropy": 3.283203125, "is_bug_line": false, "sus_score": 0.2581988897471611, "per_token_entropy": [4.7265625, 5.12109375, 0.0026569366455078125], "tokens": [2071, 1626, 45]}
{"line_number": 628, "line_type": "generated", "code": "\n                } else if (tokenLen == 2) {\n                    rule = TimeZoneNumberRule.INSTANCE_COLON;\n                } else {\n                    throw new IllegalArgumentException(\"Illegal pattern component: \" + token);\n                }\n                break;\n            default:\n                throw", "entropy": 0.11822509765625, "is_bug_line": false, "sus_score": 0.2581988897471611, "per_token_entropy": [0.102783203125, 0.004535675048828125, 0.00614166259765625, 0.5048828125, 0.004241943359375, 0.0025768280029296875, 0.002452850341796875, 0.01476287841796875, 0.00020694732666015625, 0.0028839111328125, 0.003749847412109375, 0.00017273426055908203, 0.0298309326171875, 0.056060791015625, 0.00032019615173339844, 0.058258056640625, 1.7404556274414062e-05, 0.0011844635009765625, 3.6716461181640625e-05, 0.0002263784408569336, 0.0136566162109375, 0.07318115234375, 0.27734375, 0.00021517276763916016, 0.0002491474151611328, 0.64404296875, 0.0005731582641601562, 0.0240325927734375, 0.2174072265625, 0.0618896484375, 1.0498046875, 0.04071044921875, 0.0306854248046875, 0.0479736328125, 1.654296875, 0.03240966796875, 0.004169464111328125, 0.01739501953125, 0.0986328125, 0.00479888916015625, 0.01953125, 0.012725830078125, 0.0163116455078125, 0.00030517578125, 0.0189666748046875, 0.0015974044799804688, 0.003047943115234375, 0.1380615234375, 0.66455078125, 0.0009965896606445312, 0.0596923828125, 0.1220703125], "tokens": [400, 320, 813, 415, 308, 1956, 5745, 610, 225, 36, 27, 301, 528, 5750, 280, 3717, 6767, 1918, 3842, 32, 12452, 81, 4050, 567, 45, 400, 320, 813, 301, 528, 1422, 537, 12137, 440, 15095, 5257, 2577, 44, 313, 474, 2404, 293, 400, 320, 400, 1626, 45, 324, 1244, 44, 400, 1422]}
{"line_number": 620, "line_type": "original", "code": "                } else if (tokenLen == 2) {", "entropy": 1.078125, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [5.36328125, 0.3291015625, 0.134521484375, 2.1328125, 0.007717132568359375, 0.0215606689453125, 0.004161834716796875, 0.055267333984375, 0.0010023117065429688, 4.828125, 0.054534912109375, 0.008941650390625], "tokens": [2071, 320, 813, 415, 308, 1956, 5745, 610, 225, 36, 27, 301]}
{"line_number": 620, "line_type": "generated", "code": "\n                    rule = TimeZoneNameRule.getRule(token, mLocale);\n                } else {\n                    rule = new TimeZoneNameRule(mLocale);\n                }\n                break;\n            case '\\'': // quoted text\n                String sub = token.substring(", "entropy": 0.2135009765625, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [0.176025390625, 0.2479248046875, 0.001689910888671875, 1.029296875, 0.0018320083618164062, 0.006786346435546875, 0.0046539306640625, 0.1666259765625, 1.31640625, 0.001834869384765625, 0.035003662109375, 0.8662109375, 0.245361328125, 0.255859375, 0.020111083984375, 0.427490234375, 0.1654052734375, 0.00107574462890625, 0.021942138671875, 0.0305328369140625, 0.1690673828125, 0.6279296875, 0.0003273487091064453, 0.69140625, 0.10345458984375, 0.0006031990051269531, 0.39599609375, 0.00018596649169921875, 0.0107879638671875, 1.0576171875, 0.06280517578125, 0.8349609375, 0.02325439453125, 0.00013399124145507812, 0.02020263671875, 0.007701873779296875, 0.0009150505065917969, 0.07867431640625, 0.168212890625, 0.07958984375, 2.5510787963867188e-05, 0.01629638671875, 1.1201171875, 0.14697265625, 0.08502197265625, 0.167724609375, 0.0543212890625, 0.0104217529296875, 0.144287109375, 0.0037860870361328125, 0.00041985511779785156, 1.1086463928222656e-05], "tokens": [528, 5750, 280, 3717, 6767, 558, 3842, 32, 371, 3842, 26, 1956, 30, 345, 9467, 293, 400, 320, 813, 301, 528, 5750, 280, 537, 3717, 6767, 558, 3842, 26, 95, 9467, 293, 400, 320, 400, 1626, 45, 324, 1135, 26271, 950, 434, 34210, 1344, 400, 892, 1361, 280, 2404, 32, 8723, 26]}
{"line_number": 549, "line_type": "original", "code": "            locale = Locale.getDefault();", "entropy": 3.296875, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [3.646484375, 14.234375, 2.3046875, 2.62890625, 0.0212860107421875, 0.2161865234375, 0.02679443359375], "tokens": [1468, 11259, 280, 23265, 32, 13737, 473]}
{"line_number": 549, "line_type": "generated", "code": "\n            } else if (\"G\".equals(token)) {\n                rules.add(new TextField(AmPmStrings, 0, 0));\n            } else if (\"y\".equals(token)) {\n                addRule(rules, parseYRule(", "entropy": 0.37353515625, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [0.1925048828125, 0.061187744140625, 0.9140625, 0.1373291015625, 0.67822265625, 0.05328369140625, 0.0026645660400390625, 0.022735595703125, 0.00010597705841064453, 0.00017845630645751953, 0.1273193359375, 0.002841949462890625, 0.2393798828125, 0.9345703125, 0.00011551380157470703, 0.004100799560546875, 0.0003325939178466797, 0.370361328125, 0.3291015625, 0.047149658203125, 2.57421875, 5.364418029785156e-06, 0.000492095947265625, 0.12939453125, 0.54541015625, 2.021484375, 0.58642578125, 0.57373046875, 0.62353515625, 0.5146484375, 0.60595703125, 0.01325225830078125, 0.01206207275390625, 0.0195465087890625, 0.0302276611328125, 0.250732421875, 0.0008916854858398438, 8.392333984375e-05, 0.0006608963012695312, 5.328655242919922e-05, 0.224609375, 0.0006399154663085938, 0.1253662109375, 2.4296875, 0.209716796875, 0.032012939453125, 0.0088653564453125, 0.00031280517578125, 2.076171875, 0.841796875, 0.48583984375, 0.36328125], "tokens": [324, 320, 813, 415, 2884, 57, 2296, 3574, 26, 1956, 490, 301, 400, 7019, 32, 669, 26, 890, 28563, 26, 12880, 32364, 9634, 30, 225, 34, 30, 225, 34, 876, 324, 320, 813, 415, 2884, 107, 2296, 3574, 26, 1956, 490, 301, 400, 1015, 3842, 26, 7004, 30, 3185, 75, 3842, 26]}
{"line_number": 618, "line_type": "original", "code": "                } else if (tokenLen == 3) {", "entropy": 1.234375, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [4.1640625, 5.56640625, 1.080078125, 1.541015625, 0.0273284912109375, 0.34814453125, 0.0132293701171875, 0.236083984375, 0.0030059814453125, 1.751953125, 0.058746337890625, 0.0198822021484375], "tokens": [2071, 320, 813, 415, 308, 1956, 5745, 610, 225, 37, 27, 301]}
{"line_number": 618, "line_type": "generated", "code": "\n            case '\\'': // escape for text\n                String sub = token.substring(1);\n                if (sub.length() == 0) {\n                    throw new IllegalArgumentException(\"No escaped character\");\n                }\n                rule = new CharacterLiteral(sub.charAt(", "entropy": 0.1671142578125, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [0.53564453125, 0.56640625, 0.6064453125, 0.00021064281463623047, 0.130859375, 0.244384765625, 0.68359375, 0.004657745361328125, 0.044586181640625, 0.09027099609375, 0.1158447265625, 0.0102996826171875, 0.056915283203125, 0.0058135986328125, 0.0007653236389160156, 1.1801719665527344e-05, 0.00032782554626464844, 0.10174560546875, 0.0305023193359375, 0.11944580078125, 0.006443023681640625, 0.01064300537109375, 2.7418136596679688e-06, 0.003963470458984375, 0.0009617805480957031, 0.036407470703125, 0.00018656253814697266, 0.5830078125, 0.006725311279296875, 0.00154876708984375, 0.05712890625, 0.0452880859375, 0.0209808349609375, 0.0045623779296875, 0.032958984375, 1.8115234375, 1.6845703125, 0.18505859375, 0.09112548828125, 0.003391265869140625, 0.0002923011779785156, 0.04840087890625, 0.4208984375, 0.00020051002502441406, 0.02362060546875, 0.1737060546875, 0.040802001953125, 0.034637451171875, 0.006313323974609375, 0.0007805824279785156, 6.651878356933594e-05, 1.4781951904296875e-05], "tokens": [324, 1135, 26271, 950, 434, 15820, 436, 1344, 400, 892, 1361, 280, 2404, 32, 8723, 26, 35, 293, 400, 415, 308, 1113, 32, 1322, 346, 610, 225, 34, 27, 301, 528, 1422, 537, 12137, 440, 2023, 31253, 5341, 724, 400, 320, 400, 5750, 280, 537, 15041, 8208, 26, 1113, 32, 15611, 26]}
{"line_number": 610, "line_type": "original", "code": "                    rule = selectNumberRule(Calendar.YEAR, tokenLen);", "entropy": 2.123046875, "is_bug_line": false, "sus_score": 0.22941573387056174, "per_token_entropy": [7.3671875, 1.0556640625, 0.0106353759765625, 5.6875, 7.25390625, 0.004405975341796875, 0.0033817291259765625, 0.0086212158203125, 0.00653839111328125, 8.25, 0.00975799560546875, 0.0372314453125, 0.0031528472900390625, 0.03271484375], "tokens": [4696, 5750, 280, 2192, 1918, 3842, 26, 9389, 32, 23164, 30, 2404, 5745, 293]}
{"line_number": 610, "line_type": "generated", "code": "\n                rule = new TextField(Calendar.AM_PM, AmPmStrings);\n                break;\n            case 'k': // hour in day (1..24)\n                rule = new TwentyFourHourField(selectNumberRule(Calendar.HOUR_", "entropy": 0.05511474609375, "is_bug_line": false, "sus_score": 0.22941573387056174, "per_token_entropy": [0.1707763671875, 0.88330078125, 0.0031070709228515625, 0.0401611328125, 0.0296783447265625, 0.0004699230194091797, 0.005138397216796875, 0.001033782958984375, 0.04046630859375, 2.956390380859375e-05, 0.0002301931381225586, 0.0026721954345703125, 0.0655517578125, 0.00021266937255859375, 0.0001430511474609375, 0.002655029296875, 0.016357421875, 0.0052642822265625, 0.0002512931823730469, 0.046875, 0.0545654296875, 0.00667572021484375, 0.14013671875, 0.0001074075698852539, 0.0192108154296875, 0.006999969482421875, 0.0293121337890625, 0.0010423660278320312, 0.0025653839111328125, 0.004131317138671875, 0.003856658935546875, 0.00021827220916748047, 0.001712799072265625, 0.000591278076171875, 0.402099609375, 0.032470703125, 0.00025844573974609375, 0.65087890625, 0.1400146484375, 0.0003898143768310547, 0.0025539398193359375, 0.00011134147644042969, 0.0007357597351074219, 0.0008153915405273438, 0.04571533203125, 6.473064422607422e-05, 0.00011861324310302734, 0.00042557716369628906, 0.0010814666748046875, 0.0003104209899902344, 6.854534149169922e-05, 0.0023632049560546875], "tokens": [400, 5750, 280, 537, 28563, 26, 9389, 32, 2210, 81, 7453, 30, 21469, 32364, 9634, 293, 400, 1626, 45, 324, 1135, 330, 93, 950, 434, 12021, 328, 5808, 308, 35, 497, 36, 38, 27, 400, 5750, 280, 537, 12038, 25570, 19630, 14415, 1176, 26, 1613, 1918, 3842, 26, 9389, 32, 30540, 81]}
{"line_number": 773, "line_type": "original", "code": "            return new PaddedNumberField(field, padding);", "entropy": 2.431640625, "is_bug_line": false, "sus_score": 0.22941573387056174, "per_token_entropy": [7.203125, 1.822265625, 4.2734375, 9.9453125, 0.193359375, 0.92138671875, 0.0176239013671875, 0.1180419921875, 1.2255859375, 0.341796875, 0.98583984375, 2.1328125], "tokens": [1468, 442, 537, 447, 11043, 1918, 1176, 26, 1495, 30, 3714, 293]}
{"line_number": 773, "line_type": "generated", "code": "\n    }\n\n    /**\n     * <p>Formats a <code>Calendar</code> object.</p>\n     * \n     * @param cal  the calendar to format\n     * @return the formatted string\n     */\n    public String format(Calendar cal) {", "entropy": 0.0210723876953125, "is_bug_line": false, "sus_score": 0.22941573387056174, "per_token_entropy": [0.1566162109375, 0.016326904296875, 0.053985595703125, 0.012298583984375, 0.0008845329284667969, 0.0005598068237304688, 0.02032470703125, 1.3232231140136719e-05, 0.0004608631134033203, 0.00899505615234375, 0.0011425018310546875, 0.01220703125, 5.602836608886719e-05, 3.6597251892089844e-05, 0.005695343017578125, 8.0108642578125e-05, 2.384185791015625e-07, 0.000980377197265625, 0.0011053085327148438, 0.0236968994140625, 2.8967857360839844e-05, 0.00020778179168701172, 0.0015592575073242188, 5.030632019042969e-05, 0.01404571533203125, 3.409385681152344e-05, 0.0034465789794921875, 0.00039768218994140625, 0.57470703125, 0.002361297607421875, 0.0037593841552734375, 0.0240478515625, 0.004917144775390625, 0.0031909942626953125, 0.003528594970703125, 1.0609626770019531e-05, 9.512901306152344e-05, 0.050140380859375, 0.0023784637451171875, 0.0007724761962890625, 0.01068115234375, 0.001125335693359375, 0.057464599609375, 0.00255584716796875, 0.00949859619140625, 0.00333404541015625, 7.331371307373047e-05, 4.6372413635253906e-05, 0.0010271072387695312, 0.00444793701171875, 0.0001481771469116211, 0.0003771781921386719], "tokens": [284, 320, 446, 1022, 275, 319, 333, 98, 48, 19298, 312, 333, 687, 48, 9389, 377, 687, 48, 1300, 1730, 98, 48, 275, 319, 5384, 319, 477, 753, 2182, 225, 322, 14461, 372, 2179, 275, 319, 477, 601, 322, 14186, 802, 275, 569, 284, 562, 892, 2179, 26, 9389, 2182, 27, 301]}
