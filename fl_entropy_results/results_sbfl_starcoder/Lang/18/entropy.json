{"line_number": 492, "line_type": "original", "code": "                rule = new TextField(Calendar.ERA, ERAs);", "entropy": 1.2802734375, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [4.4296875, 4.1640625, 0.095458984375, 1.1171875, 4.56640625, 0.0058441162109375, 0.004711151123046875, 0.015838623046875, 2.16796875, 0.0047607421875, 0.057861328125, 0.00021207332611083984, 0.0046234130859375], "tokens": [2071, 5750, 280, 537, 28563, 26, 9389, 32, 26260, 30, 32376, 1465, 293]}
{"line_number": 492, "line_type": "generated", "code": "\n            case 'W': // week in month (number)\n                rule = selectNumberRule(Calendar.WEEK_OF_MONTH, tokenLen);\n                break;\n            case 'a': // am/pm marker (text)\n                rule = new TextField(", "entropy": 0.0335693359375, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.49267578125, 0.134765625, 0.1346435546875, 0.326171875, 0.0002963542938232422, 0.004680633544921875, 0.00018525123596191406, 0.0015230178833007812, 0.0007658004760742188, 0.0042266845703125, 0.000514984130859375, 0.0003311634063720703, 0.041229248046875, 0.00848388671875, 0.00023317337036132812, 0.00388336181640625, 7.49826431274414e-05, 0.00029349327087402344, 0.00012814998626708984, 0.011810302734375, 0.00010514259338378906, 3.814697265625e-06, 1.1920928955078125e-06, 8.821487426757812e-06, 7.772445678710938e-05, 0.00013577938079833984, 0.00014483928680419922, 0.0006699562072753906, 1.2159347534179688e-05, 0.00023257732391357422, 0.003978729248046875, 0.000377655029296875, 0.0004878044128417969, 0.28759765625, 0.023529052734375, 0.005481719970703125, 0.00629425048828125, 6.663799285888672e-05, 0.01143646240234375, 0.017425537109375, 0.0004837512969970703, 3.5762786865234375e-07, 0.044647216796875, 0.00014078617095947266, 8.213520050048828e-05, 2.872943878173828e-05, 0.1490478515625, 0.0097808837890625, 0.0001093149185180664, 0.00128173828125, 0.0146331787109375, 0.0001596212387084961], "tokens": [324, 1135, 330, 73, 950, 434, 8209, 328, 6811, 308, 2171, 27, 400, 5750, 280, 2192, 1918, 3842, 26, 9389, 32, 39636, 81, 2109, 81, 22846, 30, 2404, 5745, 293, 400, 1626, 45, 324, 1135, 330, 83, 950, 434, 3860, 33, 4911, 10029, 308, 878, 27, 400, 5750, 280, 537, 28563, 26]}
{"line_number": 493, "line_type": "original", "code": "                break;", "entropy": 1.87109375, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [4.69140625, 0.9208984375, 0.0013494491577148438], "tokens": [2071, 1626, 45]}
{"line_number": 493, "line_type": "generated", "code": "\n                rule = selectNumberRule(Calendar.WEEK_OF_MONTH, tokenLen);\n                break;\n            case 'a': // am/pm marker (text)\n                rule = new TextField(Calendar.AM_PM, AmPmStrings);\n                break", "entropy": 0.0162811279296875, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.22265625, 0.16015625, 0.0005812644958496094, 0.061309814453125, 0.0021572113037109375, 0.0003571510314941406, 0.00048828125, 0.006511688232421875, 0.00022590160369873047, 2.6106834411621094e-05, 2.6226043701171875e-06, 1.0967254638671875e-05, 4.3392181396484375e-05, 0.001041412353515625, 0.00024962425231933594, 0.003482818603515625, 0.00031375885009765625, 0.0009694099426269531, 0.093505859375, 0.001438140869140625, 0.001438140869140625, 0.08612060546875, 0.0087890625, 0.0017919540405273438, 0.0010852813720703125, 5.14984130859375e-05, 0.0050048828125, 0.00708770751953125, 0.0005741119384765625, 2.384185791015625e-07, 0.0296783447265625, 0.00011086463928222656, 6.663799285888672e-05, 2.5272369384765625e-05, 0.071533203125, 0.0034236907958984375, 6.580352783203125e-05, 0.0003674030303955078, 0.004756927490234375, 3.147125244140625e-05, 0.0009188652038574219, 3.4332275390625e-05, 0.01318359375, 6.318092346191406e-06, 0.0001665353775024414, 0.0006837844848632812, 0.02618408203125, 6.794929504394531e-06, 1.2278556823730469e-05, 0.0006518363952636719, 0.02691650390625, 0.0005745887756347656], "tokens": [400, 5750, 280, 2192, 1918, 3842, 26, 9389, 32, 39636, 81, 2109, 81, 22846, 30, 2404, 5745, 293, 400, 1626, 45, 324, 1135, 330, 83, 950, 434, 3860, 33, 4911, 10029, 308, 878, 27, 400, 5750, 280, 537, 28563, 26, 9389, 32, 2210, 81, 7453, 30, 21469, 32364, 9634, 293, 400, 1626]}
{"line_number": 556, "line_type": "original", "code": "                    rule = new TimeZoneNameRule(mTimeZone, mLocale, TimeZone.LONG);", "entropy": 1.3681640625, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [8.796875, 10.421875, 0.424072265625, 1.4501953125, 2.41796875, 2.17578125, 0.09033203125, 0.000484466552734375, 0.012237548828125, 0.10406494140625, 0.01300811767578125, 0.004901885986328125, 0.0198211669921875, 9.28640365600586e-05, 0.0517578125, 0.1361083984375, 0.00031065940856933594, 0.0016603469848632812, 1.220703125, 0.0224151611328125], "tokens": [4696, 5750, 280, 537, 3717, 6767, 558, 3842, 26, 95, 26223, 30, 345, 9467, 30, 3717, 6767, 32, 10129, 293]}
{"line_number": 556, "line_type": "generated", "code": "\n                }\n            }\n\n            // If the character is not a letter, it's the end of the pattern.\n            indexRef[0] = i;\n            return buf.toString();\n        }\n\n        // This wasn't a run of the same character, so", "entropy": 0.3857421875, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [1.0537109375, 1.6064453125, 0.734375, 0.1409912109375, 0.72216796875, 1.962890625, 1.384765625, 1.0361328125, 0.4423828125, 0.070068359375, 0.71533203125, 1.5966796875, 0.380615234375, 0.146240234375, 0.6474609375, 0.055908203125, 0.413818359375, 0.265869140625, 0.0003814697265625, 0.06036376953125, 0.289306640625, 0.1312255859375, 0.1771240234375, 0.810546875, 0.00022661685943603516, 2.6226043701171875e-06, 0.0004589557647705078, 0.0011930465698242188, 0.05047607421875, 0.01142120361328125, 0.57861328125, 0.70458984375, 0.020843505859375, 0.0123748779296875, 6.604194641113281e-05, 0.0006756782531738281, 0.010833740234375, 0.10211181640625, 0.0011835098266601562, 0.681640625, 0.1715087890625, 0.45654296875, 1.5869140625, 1.1920928955078125e-07, 0.004154205322265625, 0.483154296875, 2.6226043701171875e-06, 0.03704833984375, 0.00039768218994140625, 0.0195770263671875, 0.268798828125, 0.0095977783203125], "tokens": [400, 320, 324, 320, 1064, 434, 1670, 322, 5341, 438, 646, 312, 11692, 30, 561, 1182, 322, 943, 432, 322, 5257, 32, 324, 1650, 2084, 77, 34, 79, 280, 595, 45, 324, 442, 4845, 32, 3108, 473, 291, 320, 584, 434, 1348, 16974, 1330, 312, 1420, 432, 322, 2432, 5341, 30, 1259]}
{"line_number": 696, "line_type": "original", "code": "        return format(new Date(millis));", "entropy": 2.34375, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [4.69140625, 0.474853515625, 6.16015625, 0.1617431640625, 4.0546875, 0.6748046875, 0.07598876953125, 0.05218505859375, 4.75], "tokens": [351, 442, 2179, 26, 890, 2821, 26, 36916, 876]}
{"line_number": 696, "line_type": "generated", "code": "\n    }\n\n    /**\n     * <p>Formats a {@code Calendar} object into the\n     * supplied {@code StringBuffer}.</p>\n     *\n     * @param calendar  the calendar to format\n     * @param buf  the buffer to format into\n    ", "entropy": 0.00888824462890625, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.1138916015625, 0.0027561187744140625, 0.01885986328125, 0.00981903076171875, 0.0006365776062011719, 3.457069396972656e-05, 0.0253753662109375, 1.633167266845703e-05, 0.0002288818359375, 0.0107269287109375, 0.0038661956787109375, 0.004100799560546875, 0.0008587837219238281, 0.00176239013671875, 0.0004642009735107422, 0.0166015625, 0.023223876953125, 0.0015573501586914062, 0.1160888671875, 1.3828277587890625e-05, 0.0030155181884765625, 0.0007767677307128906, 0.00010347366333007812, 0.0005826950073242188, 0.0013074874877929688, 0.01548004150390625, 2.9921531677246094e-05, 0.00016117095947265625, 0.00039076805114746094, 3.4809112548828125e-05, 0.005519866943359375, 2.8848648071289062e-05, 0.0011692047119140625, 0.00022101402282714844, 0.01389312744140625, 0.007633209228515625, 0.0009326934814453125, 0.003803253173828125, 0.003177642822265625, 0.0022525787353515625, 0.01233673095703125, 5.364418029785156e-06, 5.805492401123047e-05, 0.000545501708984375, 0.0015020370483398438, 0.002979278564453125, 0.00027561187744140625, 0.0165557861328125, 0.0003345012664794922, 0.01422882080078125, 0.0011758804321289062, 0.00087738037109375], "tokens": [284, 320, 446, 1022, 275, 319, 333, 98, 48, 19298, 312, 3088, 687, 16600, 111, 1300, 1991, 322, 275, 319, 13798, 3088, 687, 21933, 111, 1730, 98, 48, 275, 319, 275, 319, 477, 753, 14461, 225, 322, 14461, 372, 2179, 275, 319, 477, 753, 4845, 225, 322, 3112, 372, 2179, 1991, 275]}
{"line_number": 409, "line_type": "original", "code": "        TimeZoneDisplayKey key = new TimeZoneDisplayKey(tz, daylight, style, locale);", "entropy": 1.0146484375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [6.30859375, 6.32421875, 0.0247344970703125, 5.046875, 0.33984375, 0.27978515625, 0.0491943359375, 0.1492919921875, 0.004184722900390625, 2.300739288330078e-05, 0.00040531158447265625, 2.110004425048828e-05, 0.05133056640625, 2.087890625, 0.016143798828125, 1.171875, 0.000606536865234375, 0.05853271484375, 0.251220703125, 0.074951171875, 0.06292724609375, 0.027557373046875], "tokens": [351, 3717, 6767, 3933, 953, 1202, 280, 537, 3717, 6767, 3933, 953, 26, 10185, 30, 5808, 2429, 30, 1418, 30, 11259, 293]}
{"line_number": 409, "line_type": "generated", "code": "\n     * <p>This method is called from within the constructor, you normally\n     * do not need to call this method directly.</p>\n     *\n     * @return the list of Rules parsed from the pattern\n     */\n    List<Rule> parsePattern", "entropy": 0.406494140625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.07464599609375, 0.2020263671875, 1.6025390625, 0.07281494140625, 0.040313720703125, 0.986328125, 0.25048828125, 0.74072265625, 0.62158203125, 1.3662109375, 0.8671875, 0.6494140625, 0.01355743408203125, 1.849609375, 0.666015625, 0.311767578125, 0.07537841796875, 7.295608520507812e-05, 1.09765625, 0.00038123130798339844, 0.62548828125, 0.0009617805480957031, 0.0266265869140625, 1.015625, 0.1866455078125, 0.45556640625, 0.24169921875, 0.00015485286712646484, 0.0014591217041015625, 0.11895751953125, 0.0203094482421875, 0.1517333984375, 0.00023162364959716797, 0.0290985107421875, 0.06878662109375, 1.2763671875, 0.724609375, 0.0008053779602050781, 1.1630859375, 1.0224609375, 0.1279296875, 0.0013666152954101562, 0.0161285400390625, 0.09368896484375, 0.5234375, 0.00627899169921875, 1.7529296875, 0.0033740997314453125, 0.0018911361694335938, 0.0008025169372558594, 0.00017464160919189453, 6.794929504394531e-06], "tokens": [275, 319, 333, 98, 48, 2272, 1411, 438, 3823, 645, 4797, 322, 4374, 30, 844, 20165, 275, 319, 745, 646, 1849, 372, 1476, 458, 1411, 7029, 1730, 98, 48, 275, 319, 275, 319, 477, 601, 322, 1149, 432, 27988, 8436, 645, 322, 5257, 275, 569, 284, 1682, 46, 3842, 48, 3185, 5516]}
{"line_number": 410, "line_type": "original", "code": "        String value = cTimeZoneDisplayCache.get(key);", "entropy": 2.3515625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [5.0390625, 3.78125, 7.9609375, 0.327392578125, 6.92578125, 6.0546875, 0.218505859375, 0.0271148681640625, 0.00811004638671875, 0.048553466796875, 0.0164337158203125, 0.138427734375, 0.008544921875], "tokens": [351, 892, 786, 280, 281, 26223, 3933, 2597, 32, 371, 26, 678, 293]}
{"line_number": 410, "line_type": "generated", "code": "\n     * @return a List of Rules\n     */\n    protected List<Rule> parsePattern() {\n        List<Rule> rules = new ArrayList<Rule>();\n        String[] tokens = mPattern.split(\"'\");\n\n        char[] current = null;\n        for", "entropy": 0.3623046875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.1876220703125, 0.259765625, 0.1832275390625, 0.08551025390625, 0.5693359375, 0.446533203125, 0.0280609130859375, 0.77490234375, 0.77001953125, 0.1905517578125, 0.00504302978515625, 1.455078125, 0.151611328125, 0.0057830810546875, 0.0008568763732910156, 0.00034928321838378906, 0.00029277801513671875, 1.0848045349121094e-05, 0.021087646484375, 0.0110015869140625, 0.1082763671875, 0.47216796875, 0.004058837890625, 0.002918243408203125, 0.0011873245239257812, 0.01947021484375, 0.40625, 0.007686614990234375, 0.03875732421875, 0.041473388671875, 0.001918792724609375, 0.50390625, 0.71923828125, 2.125, 0.47216796875, 1.2841796875, 0.0027179718017578125, 0.2071533203125, 0.0015420913696289062, 0.002384185791015625, 0.002765655517578125, 0.34619140625, 0.1341552734375, 0.79150390625, 1.8427734375, 0.673828125, 0.99267578125, 0.50048828125, 0.91357421875, 0.0007877349853515625, 0.1160888671875, 0.96435546875], "tokens": [275, 319, 477, 601, 312, 1682, 432, 27988, 275, 569, 284, 2522, 1682, 46, 3842, 48, 3185, 5516, 346, 301, 291, 1682, 46, 3842, 48, 7019, 280, 537, 5059, 46, 3842, 2923, 291, 892, 1178, 7937, 280, 345, 5516, 32, 2998, 440, 24706, 584, 1351, 1178, 1550, 280, 744, 45, 291, 436]}
{"line_number": 411, "line_type": "original", "code": "        if (value == null) {", "entropy": 1.8095703125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [2.79296875, 2.421875, 0.1737060546875, 7.65234375, 0.8408203125, 0.2235107421875, 0.1231689453125, 0.2489013671875], "tokens": [351, 415, 308, 853, 610, 744, 27, 301]}
{"line_number": 411, "line_type": "generated", "code": "\n     * @throws NullPointerException if pattern is null\n     */\n    protected List<Rule> parsePattern() {\n        List<Rule> rulesList = new ArrayList<Rule>();\n        String[] patternParts = mPattern.split(\"'\");\n        int patternPartsLength =", "entropy": 0.358154296875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.58349609375, 1.1171875, 0.019866943359375, 0.1790771484375, 0.466064453125, 0.01837158203125, 0.81103515625, 0.282470703125, 0.019744873046875, 0.179931640625, 0.270263671875, 0.006710052490234375, 1.1689453125, 0.1905517578125, 0.005218505859375, 0.0012025833129882812, 0.00044083595275878906, 0.0002472400665283203, 1.3709068298339844e-05, 0.03302001953125, 0.00798797607421875, 0.1141357421875, 0.88623046875, 0.00452423095703125, 0.0032806396484375, 0.0010919570922851562, 0.0209503173828125, 1.087890625, 0.005352020263671875, 0.00992584228515625, 0.0439453125, 0.050262451171875, 0.002597808837890625, 0.5556640625, 0.611328125, 1.4951171875, 0.444091796875, 1.6162109375, 1.1884765625, 0.007595062255859375, 0.12164306640625, 0.0017375946044921875, 0.00148773193359375, 0.0013399124145507812, 0.400146484375, 0.18505859375, 0.619140625, 1.314453125, 1.4091796875, 0.384765625, 0.666015625, 0.003948211669921875], "tokens": [275, 319, 477, 5117, 23224, 415, 5257, 438, 744, 275, 569, 284, 2522, 1682, 46, 3842, 48, 3185, 5516, 346, 301, 291, 1682, 46, 3842, 48, 7019, 720, 280, 537, 5059, 46, 3842, 2923, 291, 892, 1178, 5257, 12321, 280, 345, 5516, 32, 2998, 440, 24706, 291, 629, 5257, 12321, 2380, 280]}
{"line_number": 413, "line_type": "original", "code": "            value = tz.getDisplayName(daylight, style, locale);", "entropy": 2.111328125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [8.1328125, 10.1875, 0.591796875, 8.953125, 2.279296875, 0.5888671875, 0.01390838623046875, 0.0953369140625, 0.59326171875, 0.003143310546875, 0.022552490234375, 0.052581787109375, 0.043853759765625, 0.07025146484375, 0.03570556640625], "tokens": [1468, 786, 280, 25932, 32, 371, 12566, 26, 3368, 2429, 30, 1418, 30, 11259, 293]}
{"line_number": 413, "line_type": "generated", "code": "\n    private List<Rule> parsePattern() {\n        List<Rule> rulesList = new ArrayList<Rule>();\n        StringBuffer buf = new StringBuffer();\n        int length = mPattern.length();\n        int[] indexRef = new int[1];\n        for", "entropy": 0.214599609375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.476806640625, 0.42578125, 0.261962890625, 0.01934814453125, 0.0015134811401367188, 0.00119781494140625, 0.0005488395690917969, 5.53131103515625e-05, 0.0215606689453125, 0.0595703125, 0.1456298828125, 0.5263671875, 0.00719451904296875, 0.004474639892578125, 0.0011882781982421875, 0.02227783203125, 1.1328125, 0.00714111328125, 0.0110321044921875, 0.039154052734375, 0.07220458984375, 0.0028629302978515625, 0.48583984375, 0.59375, 1.818359375, 0.191650390625, 0.002689361572265625, 0.0018291473388671875, 0.0004897117614746094, 0.2021484375, 0.2376708984375, 0.51953125, 1.302734375, 0.049530029296875, 0.0062713623046875, 0.00037741661071777344, 0.0005030632019042969, 0.00019550323486328125, 0.0004367828369140625, 0.1318359375, 0.51806640625, 0.213623046875, 0.5927734375, 0.033905029296875, 0.0014801025390625, 0.0535888671875, 7.474422454833984e-05, 0.156982421875, 0.029998779296875, 0.0009031295776367188, 0.406982421875, 0.362548828125], "tokens": [284, 945, 1682, 46, 3842, 48, 3185, 5516, 346, 301, 291, 1682, 46, 3842, 48, 7019, 720, 280, 537, 5059, 46, 3842, 2923, 291, 21933, 4845, 280, 537, 21933, 473, 291, 629, 3104, 280, 345, 5516, 32, 1322, 473, 291, 629, 1178, 1650, 2084, 280, 537, 629, 77, 35, 970, 291, 436]}
{"line_number": 414, "line_type": "original", "code": "            String prior = cTimeZoneDisplayCache.putIfAbsent(key, value);", "entropy": 2.138671875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [6.90234375, 3.1796875, 10.0546875, 1.2666015625, 6.69140625, 4.859375, 0.09033203125, 0.08697509765625, 0.0181427001953125, 1.474609375, 0.78076171875, 0.0028667449951171875, 0.1455078125, 0.228759765625, 0.018585205078125, 0.52392578125, 0.0221405029296875], "tokens": [1468, 892, 9553, 280, 281, 26223, 3933, 2597, 32, 524, 2797, 28772, 26, 678, 30, 786, 293]}
{"line_number": 414, "line_type": "generated", "code": "\n        return parsePattern(mPattern);\n    }\n\n    /**\n     * <p>Returns a list of Rules given a pattern.</p>\n     *\n     * @param pattern  the pattern to parse\n     * @return a {@code List} of Rule objects", "entropy": 0.1455078125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.332763671875, 1.56640625, 1.1953125, 0.005908966064453125, 0.226806640625, 0.290771484375, 0.0027446746826171875, 0.5341796875, 0.061126708984375, 0.0025539398193359375, 0.1986083984375, 0.154296875, 0.005367279052734375, 0.00015485286712646484, 0.030364990234375, 1.3709068298339844e-05, 0.0008511543273925781, 0.319580078125, 0.01010894775390625, 0.046539306640625, 0.00014579296112060547, 0.051300048828125, 0.01285552978515625, 0.001369476318359375, 0.008544921875, 0.08099365234375, 6.830692291259766e-05, 0.0004420280456542969, 0.002197265625, 0.00036406517028808594, 0.05718994140625, 0.00010764598846435547, 0.032440185546875, 0.0765380859375, 0.005031585693359375, 0.10693359375, 0.49853515625, 0.00408172607421875, 0.292236328125, 0.206787109375, 1.068359375, 0.0002658367156982422, 0.00041556358337402344, 0.004703521728515625, 0.022857666015625, 0.039154052734375, 0.0031280517578125, 0.001316070556640625, 0.00021696090698242188, 0.0006699562072753906, 0.0026760101318359375, 0.0006518363952636719], "tokens": [291, 442, 3185, 5516, 26, 95, 5516, 293, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 6970, 312, 1149, 432, 27988, 2702, 312, 5257, 1730, 98, 48, 275, 319, 275, 319, 477, 753, 5257, 225, 322, 5257, 372, 3185, 275, 319, 477, 601, 312, 3088, 687, 1682, 111, 432, 13708, 4684]}
{"line_number": 415, "line_type": "original", "code": "            if (prior != null) {", "entropy": 2.9296875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [5.57421875, 2.29296875, 0.125732421875, 14.5703125, 0.59912109375, 0.023681640625, 0.0264892578125, 0.2254638671875], "tokens": [1468, 415, 308, 20621, 863, 744, 27, 301]}
{"line_number": 415, "line_type": "generated", "code": "\n        return parsePattern(mPattern, symbols);\n    }\n\n    /**\n     * <p>Returns a list of Rules given a pattern and set of symbols.</p>\n     *\n     * @param pattern  the pattern\n     * @param symbols  {@link", "entropy": 0.1939697265625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.332275390625, 2.16015625, 0.640625, 0.0014314651489257812, 0.0253143310546875, 0.363037109375, 0.0008482933044433594, 0.078857421875, 0.1336669921875, 0.231689453125, 0.05072021484375, 0.000858306884765625, 0.1820068359375, 0.161376953125, 0.00447845458984375, 0.00016963481903076172, 0.0273284912109375, 9.775161743164062e-06, 0.0007042884826660156, 0.271240234375, 0.01215362548828125, 0.05682373046875, 0.00015735626220703125, 0.06011962890625, 0.0098419189453125, 0.00344085693359375, 0.00823211669921875, 0.314453125, 0.2037353515625, 0.0005655288696289062, 0.457763671875, 0.0215911865234375, 2.8014183044433594e-05, 0.00023281574249267578, 0.0008258819580078125, 0.0004963874816894531, 0.09796142578125, 0.0006389617919921875, 0.050018310546875, 0.0701904296875, 0.0021953582763671875, 0.0295867919921875, 0.373779296875, 0.00493621826171875, 1.06640625, 7.867813110351562e-06, 3.5881996154785156e-05, 0.0014543533325195312, 0.291015625, 0.01226806640625, 2.04296875, 0.2288818359375], "tokens": [291, 442, 3185, 5516, 26, 95, 5516, 30, 15455, 293, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 6970, 312, 1149, 432, 27988, 2702, 312, 5257, 461, 739, 432, 15455, 1730, 98, 48, 275, 319, 275, 319, 477, 753, 5257, 225, 322, 5257, 275, 319, 477, 753, 15455, 225, 3088, 1204]}
{"line_number": 419, "line_type": "original", "code": "        return value;", "entropy": 4.21484375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [2.15625, 4.2265625, 10.3359375, 0.1414794921875], "tokens": [351, 442, 786, 45]}
{"line_number": 419, "line_type": "generated", "code": "\n        String[] shortMonths = symbols.getShortMonths();\n        String[] weekdays = symbols.getWeekdays();\n        String[] shortWeekdays = symbols.getShortWeekdays();", "entropy": 0.045501708984375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.54052734375, 0.2269287109375, 0.004608154296875, 0.007617950439453125, 0.0002371072769165039, 0.0012350082397460938, 0.0157928466796875, 0.00010454654693603516, 0.0008559226989746094, 9.78708267211914e-05, 3.2186508178710938e-06, 0.00021278858184814453, 0.6181640625, 0.01016998291015625, 0.00017249584197998047, 0.04559326171875, 0.0005359649658203125, 0.00020134449005126953, 0.0007505416870117188, 0.00011706352233886719, 3.9458274841308594e-05, 0.00023412704467773438, 7.748603820800781e-06, 1.5616416931152344e-05, 0.25048828125, 0.0010290145874023438, 0.0001233816146850586, 0.0025539398193359375, 1.8596649169921875e-05, 4.0650367736816406e-05, 0.00033354759216308594, 0.0003387928009033203, 3.0040740966796875e-05, 9.775161743164062e-06, 0.0001983642578125, 5.7220458984375e-06, 9.5367431640625e-07, 0.0001004934310913086], "tokens": [291, 892, 1178, 4504, 34042, 280, 15455, 32, 371, 6872, 34042, 473, 291, 892, 1178, 8209, 6124, 280, 15455, 32, 371, 11070, 6124, 473, 291, 892, 1178, 4504, 11070, 6124, 280, 15455, 32, 371, 6872, 11070, 6124, 473]}
{"line_number": 555, "line_type": "original", "code": "                if (tokenLen >= 4) {", "entropy": 1.6689453125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [4.2734375, 1.9765625, 0.1287841796875, 6.9453125, 0.373046875, 2.416015625, 0.11383056640625, 0.1602783203125, 0.2958984375, 0.00829315185546875], "tokens": [2071, 415, 308, 1956, 5745, 2377, 225, 38, 27, 301]}
{"line_number": 555, "line_type": "generated", "code": "\n            if (i + 1 < length) {\n                char peek = pattern.charAt(i + 1);\n                if (peek == c) {\n                    buf.append(c);\n                    i++;\n                }\n            }", "entropy": 0.174072265625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.382568359375, 1.6201171875, 0.1412353515625, 0.732421875, 0.040435791015625, 0.061065673828125, 0.047821044921875, 0.71484375, 0.0352783203125, 1.3349609375, 0.0020503997802734375, 0.0216217041015625, 0.08935546875, 0.4169921875, 0.0011577606201171875, 0.0004723072052001953, 3.2901763916015625e-05, 5.984306335449219e-05, 0.0002143383026123047, 0.0018472671508789062, 0.0113983154296875, 0.0005097389221191406, 5.9604644775390625e-05, 0.0005273818969726562, 0.09466552734375, 0.133056640625, 0.12152099609375, 0.31103515625, 0.07684326171875, 0.2265625, 0.310791015625, 0.001171112060546875, 0.0374755859375, 0.218994140625, 0.00011038780212402344, 0.00024819374084472656, 0.0003333091735839844, 0.55712890625, 0.0008120536804199219, 0.0298614501953125, 0.07318115234375, 0.0247955322265625, 0.05950927734375, 0.0008544921875, 0.06829833984375, 0.0009737014770507812], "tokens": [324, 415, 308, 91, 474, 225, 35, 333, 3104, 27, 301, 400, 1351, 28474, 280, 5257, 32, 15611, 26, 91, 474, 225, 35, 293, 400, 415, 308, 20124, 610, 281, 27, 301, 528, 4845, 32, 1689, 26, 85, 293, 528, 595, 3334, 400, 320, 324, 320]}
{"line_number": 558, "line_type": "original", "code": "                    rule = new TimeZoneNameRule(mTimeZone, mLocale, TimeZone.SHORT);", "entropy": 1.24609375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [5.484375, 10.921875, 0.27197265625, 0.45947265625, 2.2265625, 2.40234375, 0.162841796875, 0.0015583038330078125, 0.01436614990234375, 0.12237548828125, 0.0251007080078125, 0.008453369140625, 0.0233306884765625, 0.0001481771469116211, 0.062164306640625, 0.1982421875, 0.0005545616149902344, 0.002185821533203125, 2.513671875, 0.01328277587890625], "tokens": [4696, 5750, 280, 537, 3717, 6767, 558, 3842, 26, 95, 26223, 30, 345, 9467, 30, 3717, 6767, 32, 15456, 293]}
{"line_number": 558, "line_type": "generated", "code": "\n                    buf.append(peek);\n                    i++;\n                } else {\n                    break;\n                }\n            }\n        } else {\n            // This token is not special, just extract and return it.\n            while (i < length) {\n                char peek = pattern", "entropy": 0.2257080078125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.459716796875, 0.76416015625, 0.00016951560974121094, 0.00038695335388183594, 0.0005064010620117188, 0.53955078125, 0.0006589889526367188, 0.29736328125, 0.042388916015625, 0.1517333984375, 0.07061767578125, 0.0038814544677734375, 0.04937744140625, 0.033355712890625, 0.034698486328125, 0.01073455810546875, 0.0003159046173095703, 0.00473785400390625, 0.00724029541015625, 0.005523681640625, 0.00031256675720214844, 0.2142333984375, 0.0010766983032226562, 0.04248046875, 0.0321044921875, 0.10186767578125, 0.0675048828125, 0.30078125, 2.345703125, 0.11053466796875, 0.049896240234375, 0.59814453125, 0.55517578125, 0.33251953125, 1.724609375, 0.73486328125, 0.09014892578125, 0.09051513671875, 0.02691650390625, 0.08526611328125, 0.286376953125, 0.00582122802734375, 0.0016603469848632812, 0.035797119140625, 0.005096435546875, 0.3408203125, 5.9485435485839844e-05, 0.037017822265625, 0.09637451171875, 0.9462890625, 0.00011742115020751953, 2.5987625122070312e-05], "tokens": [528, 4845, 32, 1689, 26, 20124, 293, 528, 595, 3334, 400, 320, 813, 301, 528, 1626, 45, 400, 320, 324, 320, 291, 320, 813, 301, 324, 434, 1348, 2404, 438, 646, 7456, 30, 2258, 6571, 461, 442, 561, 32, 324, 2218, 308, 91, 333, 3104, 27, 301, 400, 1351, 28474, 280, 5257]}
{"line_number": 560, "line_type": "original", "code": "                break;", "entropy": 3.8828125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [3.32421875, 8.3203125, 0.0027313232421875], "tokens": [2071, 1626, 45]}
{"line_number": 560, "line_type": "generated", "code": "\n                } else {\n                    break;\n                }\n            }\n        } else {\n            // This character is not a pattern character, so it terminates the\n            // pattern.\n            buf.setLength(0);\n            indexRef[0] = i;\n       ", "entropy": 0.1959228515625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.1353759765625, 0.0016193389892578125, 0.040313720703125, 0.11376953125, 0.03436279296875, 0.0159149169921875, 0.0007600784301757812, 0.00732421875, 0.0022144317626953125, 0.0112762451171875, 0.0004405975341796875, 0.404052734375, 0.0014638900756835938, 0.0606689453125, 0.02667236328125, 0.06915283203125, 0.059600830078125, 0.194091796875, 1.1259765625, 0.00807952880859375, 0.0022258758544921875, 0.340576171875, 0.896484375, 0.53369140625, 0.32958984375, 0.133544921875, 0.1285400390625, 0.6787109375, 3.814697265625e-06, 0.642578125, 0.019134521484375, 0.0012226104736328125, 1.279296875, 0.04510498046875, 0.1903076171875, 0.12445068359375, 0.0029010772705078125, 0.399658203125, 6.270408630371094e-05, 0.002407073974609375, 0.0014095306396484375, 3.0517578125e-05, 0.22314453125, 1.1396484375, 2.1696090698242188e-05, 2.1457672119140625e-06, 0.00018334388732910156, 0.0012731552124023438, 0.052886962890625, 0.0027256011962890625, 0.2548828125, 0.449462890625], "tokens": [400, 320, 813, 301, 528, 1626, 45, 400, 320, 324, 320, 291, 320, 813, 301, 324, 434, 1348, 5341, 438, 646, 312, 5257, 5341, 30, 1259, 561, 9262, 1196, 322, 324, 434, 5257, 32, 324, 4845, 32, 470, 2380, 26, 34, 293, 324, 1650, 2084, 77, 34, 79, 280, 595, 45, 291]}
{"line_number": 498, "line_type": "original", "code": "                    rule = TwoDigitYearField.INSTANCE;", "entropy": 1.58203125, "is_bug_line": true, "sus_score": 0.5773502691896258, "per_token_entropy": [7.02734375, 4.0078125, 0.03662109375, 4.26171875, 0.019439697265625, 0.286865234375, 0.0012903213500976562, 0.01404571533203125, 0.1363525390625, 0.031219482421875], "tokens": [4696, 5750, 280, 16510, 21530, 6617, 1176, 32, 12452, 45]}
{"line_number": 498, "line_type": "generated", "code": "\n            case 'z': // time zone (text)\n                rule = new TimeZoneNameRule(mLocale, mTimeZone);\n                break;\n            case '\\'': // escape for text\n                String sub = token.substring(1);\n                if (sub.", "entropy": 0.22998046875, "is_bug_line": true, "sus_score": 0.5773502691896258, "per_token_entropy": [0.34228515625, 1.0009765625, 0.50537109375, 0.84716796875, 0.004573822021484375, 0.034942626953125, 0.25732421875, 0.0007281303405761719, 0.0009403228759765625, 0.0021686553955078125, 0.0003600120544433594, 0.1744384765625, 0.75634765625, 0.00060272216796875, 0.4189453125, 0.10382080078125, 0.0008006095886230469, 0.1436767578125, 0.0008111000061035156, 0.220458984375, 1.26171875, 0.6611328125, 0.82958984375, 0.88232421875, 0.51171875, 0.85546875, 0.0158233642578125, 0.036468505859375, 0.0004935264587402344, 0.08587646484375, 0.1292724609375, 0.28564453125, 2.777576446533203e-05, 0.01464080810546875, 0.9716796875, 0.140625, 0.004421234130859375, 0.039642333984375, 0.1229248046875, 0.0592041015625, 0.010040283203125, 0.046234130859375, 0.004627227783203125, 0.0008053779602050781, 9.5367431640625e-06, 0.00010883808135986328, 0.07208251953125, 0.0281219482421875, 0.046478271484375, 0.0024356842041015625, 0.0245208740234375, 3.4570693969726562e-06], "tokens": [324, 1135, 330, 108, 950, 434, 1133, 10790, 308, 878, 27, 400, 5750, 280, 537, 3717, 6767, 558, 3842, 26, 95, 9467, 30, 345, 26223, 293, 400, 1626, 45, 324, 1135, 26271, 950, 434, 15820, 436, 1344, 400, 892, 1361, 280, 2404, 32, 8723, 26, 35, 293, 400, 415, 308, 1113, 32]}
{"line_number": 500, "line_type": "original", "code": "                break;", "entropy": 2.291015625, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [6.8359375, 0.034332275390625, 0.003650665283203125], "tokens": [2071, 1626, 45]}
{"line_number": 500, "line_type": "generated", "code": "\n            case 'K': // hour in am/pm (0..11)\n                rule = new TwelveHourField(selectNumberRule(Calendar.HOUR, tokenLen));\n                break;\n            case 'z': // time zone (text)", "entropy": 0.060821533203125, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [0.27685546875, 0.1671142578125, 0.294189453125, 0.04156494140625, 0.0001475811004638672, 0.016143798828125, 0.006092071533203125, 0.017974853515625, 0.0033397674560546875, 4.601478576660156e-05, 4.9591064453125e-05, 0.000125885009765625, 1.9073486328125e-06, 2.2292137145996094e-05, 4.291534423828125e-06, 5.0067901611328125e-06, 4.279613494873047e-05, 0.040740966796875, 0.02056884765625, 0.0004858970642089844, 0.759765625, 0.50146484375, 0.0225677490234375, 3.337860107421875e-06, 0.000949859619140625, 0.0008969306945800781, 0.00025081634521484375, 0.01120758056640625, 3.314018249511719e-05, 1.1920928955078125e-06, 8.463859558105469e-05, 0.0005974769592285156, 0.0001150369644165039, 0.0002110004425048828, 0.0005469322204589844, 0.0017423629760742188, 0.0002574920654296875, 0.020172119140625, 0.3515625, 0.01837158203125, 0.0017919540405273438, 0.2376708984375, 0.1707763671875, 0.10174560546875, 0.0303497314453125, 0.0007381439208984375, 0.0047760009765625, 0.0357666015625, 0.0005903244018554688, 0.0010433197021484375, 0.0007901191711425781, 0.0002799034118652344], "tokens": [324, 1135, 330, 61, 950, 434, 12021, 328, 3860, 33, 4911, 308, 34, 497, 35, 35, 27, 400, 5750, 280, 537, 12038, 342, 587, 14415, 1176, 26, 1613, 1918, 3842, 26, 9389, 32, 30540, 30, 2404, 5745, 876, 400, 1626, 45, 324, 1135, 330, 108, 950, 434, 1133, 10790, 308, 878, 27]}
{"line_number": 503, "line_type": "original", "code": "                    rule = new TextField(Calendar.MONTH, months);", "entropy": 2.150390625, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [7.390625, 2.94921875, 0.78515625, 0.274658203125, 7.1640625, 0.0082244873046875, 0.007007598876953125, 0.0022754669189453125, 5.4140625, 0.00447845458984375, 1.7802734375, 0.0240936279296875], "tokens": [4696, 5750, 280, 537, 28563, 26, 9389, 32, 22846, 30, 17723, 293]}
{"line_number": 503, "line_type": "generated", "code": "\n                break;\n            case 'z': // time zone (text)\n                rule = new TimeZoneNameRule(mTimeZone, mLocale, mLenient);\n                break;\n            case '\\'': // escape for text\n                String sub = token.substring(", "entropy": 0.1961669921875, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [0.0880126953125, 0.025634765625, 0.0004036426544189453, 0.062408447265625, 0.14697265625, 0.054229736328125, 0.03582763671875, 0.0006718635559082031, 0.004215240478515625, 0.044158935546875, 0.0008983612060546875, 0.001026153564453125, 0.0006861686706542969, 0.000240325927734375, 0.0709228515625, 0.44970703125, 0.0002751350402832031, 0.247314453125, 0.17578125, 0.0010824203491210938, 0.027557373046875, 0.0017185211181640625, 0.2003173828125, 1.1103515625, 0.8544921875, 0.474609375, 0.42578125, 0.06683349609375, 1.1171875, 1.419921875, 0.955078125, 0.002368927001953125, 0.5478515625, 0.0131378173828125, 0.037353515625, 0.0002262592315673828, 0.0263671875, 0.144287109375, 0.063232421875, 2.6941299438476562e-05, 0.01209259033203125, 0.85546875, 0.11962890625, 0.005573272705078125, 0.02764892578125, 0.1387939453125, 0.07025146484375, 0.00775909423828125, 0.061309814453125, 0.0036296844482421875, 0.0007786750793457031, 6.079673767089844e-06], "tokens": [400, 1626, 45, 324, 1135, 330, 108, 950, 434, 1133, 10790, 308, 878, 27, 400, 5750, 280, 537, 3717, 6767, 558, 3842, 26, 95, 26223, 30, 345, 9467, 30, 345, 5745, 1606, 293, 400, 1626, 45, 324, 1135, 26271, 950, 434, 15820, 436, 1344, 400, 892, 1361, 280, 2404, 32, 8723, 26]}
{"line_number": 546, "line_type": "original", "code": "                rule = new TextField(Calendar.AM_PM, AmPmStrings);", "entropy": 2.0625, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [7.76171875, 7.28125, 0.436279296875, 1.2236328125, 3.48046875, 0.05694580078125, 0.025299072265625, 0.021820068359375, 2.751953125, 0.006381988525390625, 0.0010042190551757812, 0.05279541015625, 5.15625, 8.618831634521484e-05, 3.568359375, 1.1728515625], "tokens": [2071, 5750, 280, 537, 28563, 26, 9389, 32, 2210, 81, 7453, 30, 21469, 32364, 9634, 293]}
{"line_number": 546, "line_type": "generated", "code": "\n\n        int index = indexRef[0];\n        int len = pattern.length();\n\n        while (index < len) {\n            char c = pattern.charAt(index);\n            if (c >= 'A' && c <= 'Z' || c >=", "entropy": 0.243896484375, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [0.92724609375, 1.1357421875, 0.91943359375, 0.004718780517578125, 0.06817626953125, 0.0014982223510742188, 0.0003352165222167969, 0.02557373046875, 0.055694580078125, 0.363037109375, 1.1591796875, 1.0595703125, 0.004993438720703125, 0.0015277862548828125, 7.772445678710938e-05, 1.800060272216797e-05, 0.00020802021026611328, 0.3349609375, 0.59375, 0.0168914794921875, 0.018798828125, 0.335693359375, 0.007091522216796875, 0.3935546875, 0.0006270408630371094, 0.02386474609375, 0.00547027587890625, 0.7265625, 0.0015707015991210938, 0.00019097328186035156, 2.0384788513183594e-05, 4.887580871582031e-06, 3.8743019104003906e-05, 7.677078247070312e-05, 0.8798828125, 0.64501953125, 0.1888427734375, 0.332763671875, 0.247802734375, 1.6220703125, 0.047027587890625, 0.34912109375, 0.004840850830078125, 0.0012731552124023438, 0.0006856918334960938, 0.0004372596740722656, 0.0004987716674804688, 0.00399017333984375, 0.003902435302734375, 0.01995849609375, 0.144775390625, 0.0032787322998046875], "tokens": [584, 629, 1650, 280, 1650, 2084, 77, 34, 970, 291, 629, 2069, 280, 5257, 32, 1322, 473, 584, 2218, 308, 1055, 333, 2069, 27, 301, 324, 1351, 281, 280, 5257, 32, 15611, 26, 1055, 293, 324, 415, 308, 85, 2377, 330, 51, 25, 962, 281, 2511, 330, 76, 25, 1276, 281, 2377]}
{"line_number": 547, "line_type": "original", "code": "                break;", "entropy": 4.36328125, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [7.49609375, 5.578125, 0.01910400390625], "tokens": [2071, 1626, 45]}
{"line_number": 547, "line_type": "generated", "code": "\n        for (; i < pattern.length(); i++) {\n            char c = pattern.charAt(i);\n            if (c == '\\'') {\n                i++;\n                buf.append(pattern.charAt(i));\n            } else if (c == '[", "entropy": 0.185546875, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [0.380615234375, 1.8125, 0.133056640625, 0.0128326416015625, 0.1287841796875, 0.01163482666015625, 0.0020046234130859375, 3.325939178466797e-05, 0.0226287841796875, 0.138916015625, 0.0259552001953125, 0.0014753341674804688, 0.02947998046875, 0.006992340087890625, 0.47119140625, 0.0006666183471679688, 0.00015091896057128906, 2.1457672119140625e-05, 6.318092346191406e-06, 4.220008850097656e-05, 8.475780487060547e-05, 0.0010385513305664062, 0.359130859375, 0.14453125, 0.149658203125, 0.036376953125, 0.210205078125, 0.63671875, 0.00238800048828125, 0.0027294158935546875, 0.1630859375, 1.173828125, 0.52490234375, 0.043975830078125, 0.57373046875, 8.678436279296875e-05, 0.00016379356384277344, 0.002166748046875, 0.437255859375, 0.0004341602325439453, 0.06109619140625, 3.2067298889160156e-05, 4.4345855712890625e-05, 0.0013704299926757812, 0.2159423828125, 0.0008463859558105469, 0.050750732421875, 0.109375, 0.12200927734375, 0.1942138671875, 0.408935546875, 0.841796875], "tokens": [291, 436, 23031, 595, 333, 5257, 32, 1322, 473, 595, 1987, 301, 324, 1351, 281, 280, 5257, 32, 15611, 26, 91, 293, 324, 415, 308, 85, 610, 26271, 683, 301, 400, 595, 3334, 400, 4845, 32, 1689, 26, 5607, 32, 15611, 26, 91, 876, 324, 320, 813, 415, 308, 85, 610, 13198]}
{"line_number": 509, "line_type": "original", "code": "                    rule = UnpaddedMonthField.INSTANCE;", "entropy": 2.216796875, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [6.64453125, 2.453125, 0.1795654296875, 7.00390625, 1.9140625, 3.66796875, 0.00978851318359375, 0.031829833984375, 0.2254638671875, 0.044525146484375], "tokens": [4696, 5750, 280, 1683, 34294, 7357, 1176, 32, 12452, 45]}
{"line_number": 509, "line_type": "generated", "code": "\n                }\n                break;\n            case '\\'': // quoted text\n                String sub = token.substring(1, tokenLen - 1);\n                if (sub.length() == 1) {\n                    rule = new CharacterLiteral(sub.charAt(0", "entropy": 0.08892822265625, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [0.0682373046875, 0.0004782676696777344, 0.01071929931640625, 0.004764556884765625, 0.0006260871887207031, 0.047760009765625, 0.1544189453125, 0.15185546875, 3.409385681152344e-05, 0.021759033203125, 1.291015625, 0.3056640625, 0.06500244140625, 0.1224365234375, 0.0672607421875, 0.00936126708984375, 0.0889892578125, 0.002597808837890625, 0.0003542900085449219, 9.775161743164062e-06, 0.00020766258239746094, 0.576171875, 0.004848480224609375, 0.0288543701171875, 0.055450439453125, 0.0182037353515625, 0.0003120899200439453, 0.0084686279296875, 0.038787841796875, 0.327880859375, 0.16796875, 0.1566162109375, 7.62939453125e-06, 0.0159759521484375, 0.00014674663543701172, 0.0058135986328125, 7.736682891845703e-05, 0.00876617431640625, 0.001010894775390625, 0.000827789306640625, 0.1256103515625, 0.27294921875, 0.0001456737518310547, 0.03582763671875, 0.041473388671875, 0.1331787109375, 0.173095703125, 0.00957489013671875, 0.00235748291015625, 2.8967857360839844e-05, 5.9604644775390625e-06, 0.00017273426055908203], "tokens": [400, 320, 400, 1626, 45, 324, 1135, 26271, 950, 434, 34210, 1344, 400, 892, 1361, 280, 2404, 32, 8723, 26, 35, 30, 2404, 5745, 429, 225, 35, 293, 400, 415, 308, 1113, 32, 1322, 346, 610, 225, 35, 27, 301, 528, 5750, 280, 537, 15041, 8208, 26, 1113, 32, 15611, 26, 34]}
{"line_number": 511, "line_type": "original", "code": "                break;", "entropy": 2.583984375, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [6.640625, 1.109375, 0.00518798828125], "tokens": [2071, 1626, 45]}
{"line_number": 511, "line_type": "generated", "code": "\n            case '\\'': // escape for text\n                String sub = token.substring(1);\n                if (sub.length() == 1) {\n                    rule = new CharacterLiteral(sub.charAt(0));\n                } else {\n                    rule = new String", "entropy": 0.09503173828125, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [0.16748046875, 0.37060546875, 0.17236328125, 0.00010728836059570312, 0.06866455078125, 0.57958984375, 0.52001953125, 0.005733489990234375, 0.03741455078125, 0.067626953125, 0.054901123046875, 0.0054168701171875, 0.061676025390625, 0.0028839111328125, 0.0005545616149902344, 6.67572021484375e-06, 0.00018084049224853516, 0.0699462890625, 0.017333984375, 0.07403564453125, 0.0038509368896484375, 0.019989013671875, 3.2186508178710938e-06, 0.005573272705078125, 0.0003592967987060547, 0.00667572021484375, 7.069110870361328e-05, 1.13671875, 0.00079345703125, 0.0007219314575195312, 0.03765869140625, 0.56689453125, 0.0001800060272216797, 0.032379150390625, 0.06689453125, 0.09075927734375, 0.1856689453125, 0.01215362548828125, 0.0023670196533203125, 1.0848045349121094e-05, 5.9604644775390625e-06, 0.0003883838653564453, 0.0010242462158203125, 0.0232086181640625, 0.0003955364227294922, 0.00771331787109375, 0.012847900390625, 0.00955963134765625, 0.415283203125, 0.0004038810729980469, 0.0175323486328125, 0.006893157958984375], "tokens": [324, 1135, 26271, 950, 434, 15820, 436, 1344, 400, 892, 1361, 280, 2404, 32, 8723, 26, 35, 293, 400, 415, 308, 1113, 32, 1322, 346, 610, 225, 35, 27, 301, 528, 5750, 280, 537, 15041, 8208, 26, 1113, 32, 15611, 26, 34, 876, 400, 320, 813, 301, 528, 5750, 280, 537, 892]}
