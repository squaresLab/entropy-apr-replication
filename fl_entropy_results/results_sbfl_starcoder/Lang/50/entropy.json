{"line_number": 620, "line_type": "original", "code": "                    rule = new TextField(Calendar.MONTH, months);", "entropy": 2.169921875, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [7.36328125, 2.91015625, 0.78515625, 0.2427978515625, 7.203125, 0.0093994140625, 0.006839752197265625, 0.0046844482421875, 5.73828125, 0.004512786865234375, 1.7314453125, 0.0238189697265625], "tokens": [4696, 5750, 280, 537, 28563, 26, 9389, 32, 22846, 30, 17723, 293]}
{"line_number": 620, "line_type": "generated", "code": "\n                break;\n            case 'z': // time zone (text)\n                rule = TimeZoneNameRule.getRule(token, mLocale);\n                if (rule == null) {\n                    throw new IllegalArgumentException(\"Illegal pattern component: \" + token);\n               ", "entropy": 0.1612548828125, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.0833740234375, 0.0283660888671875, 0.0004458427429199219, 0.0693359375, 0.16064453125, 0.0679931640625, 0.030975341796875, 0.0007042884826660156, 0.004314422607421875, 0.0450439453125, 0.0009150505065917969, 0.0008606910705566406, 0.0006489753723144531, 0.00025773048400878906, 0.0750732421875, 0.47119140625, 0.00031113624572753906, 1.65625, 0.0005464553833007812, 0.10394287109375, 0.0006461143493652344, 0.01342010498046875, 0.9326171875, 0.001323699951171875, 0.0150146484375, 0.96044921875, 0.21630859375, 0.145263671875, 0.02703857421875, 0.29931640625, 0.0341796875, 1.4609375, 0.00681304931640625, 0.00533294677734375, 0.0673828125, 0.00011038780212402344, 0.0025653839111328125, 0.0027923583984375, 0.0477294921875, 0.3203125, 0.018890380859375, 0.01568603515625, 0.102783203125, 0.71337890625, 0.06494140625, 0.0242919921875, 0.029022216796875, 0.016204833984375, 0.00423431396484375, 0.0197906494140625, 0.006458282470703125, 0.00775909423828125], "tokens": [400, 1626, 45, 324, 1135, 330, 108, 950, 434, 1133, 10790, 308, 878, 27, 400, 5750, 280, 3717, 6767, 558, 3842, 32, 371, 3842, 26, 1956, 30, 345, 9467, 293, 400, 415, 308, 5275, 610, 744, 27, 301, 528, 1422, 537, 12137, 440, 15095, 5257, 2577, 44, 313, 474, 2404, 293, 400]}
{"line_number": 234, "line_type": "original", "code": "        return getDateInstance(style, null, null);", "entropy": 1.67578125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [5.26953125, 1.048828125, 2.4765625, 1.9228515625, 0.0478515625, 0.2015380859375, 0.59228515625, 0.016815185546875, 3.857421875, 0.01143646240234375, 3.880859375, 0.78662109375], "tokens": [351, 442, 622, 1547, 1810, 26, 1621, 30, 744, 30, 744, 293]}
{"line_number": 234, "line_type": "generated", "code": "\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * <p>Gets a time formatter instance using the specified style in the\n     * default time zone and locale.</p>\n     * \n     * @param style  time style: FULL, LONG, MEDIUM, or", "entropy": 0.0228424072265625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.378662109375, 0.0012788772583007812, 0.194580078125, 0.2066650390625, 0.0013208389282226562, 0.00868988037109375, 0.0015192031860351562, 0.001983642578125, 1.7404556274414062e-05, 0.006290435791015625, 5.364418029785156e-06, 1.811981201171875e-05, 0.0029468536376953125, 0.01454925537109375, 0.00273895263671875, 0.0010652542114257812, 0.0006766319274902344, 0.0010824203491210938, 0.00023818016052246094, 0.01021575927734375, 0.00707244873046875, 0.07061767578125, 0.02227783203125, 0.002227783203125, 4.172325134277344e-06, 0.004985809326171875, 0.1806640625, 0.00011086463928222656, 0.005359649658203125, 0.002960205078125, 0.004241943359375, 2.4437904357910156e-05, 0.00013685226440429688, 0.001766204833984375, 1.3470649719238281e-05, 0.01204681396484375, 9.5367431640625e-06, 0.00560760498046875, 0.00010192394256591797, 0.00012421607971191406, 0.001911163330078125, 0.014739990234375, 0.0006589889526367188, 0.00011610984802246094, 9.679794311523438e-05, 0.00012004375457763672, 0.00030040740966796875, 0.0004563331604003906, 0.0034008026123046875, 1.1920928955078125e-07, 0.0096588134765625, 0.0008516311645507812], "tokens": [284, 320, 446, 434, 42510, 284, 1022, 275, 319, 333, 98, 48, 20931, 312, 1133, 14971, 1980, 1471, 322, 3191, 1418, 328, 322, 275, 319, 1244, 1133, 10790, 461, 11259, 1730, 98, 48, 275, 319, 5384, 319, 477, 753, 1418, 225, 1133, 1418, 44, 39398, 30, 27040, 30, 27513, 34252, 30, 556]}
{"line_number": 293, "line_type": "original", "code": "                locale = Locale.getDefault();", "entropy": 2.5625, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [6.94140625, 5.96484375, 3.572265625, 1.2587890625, 0.0633544921875, 0.03582763671875, 0.10089111328125], "tokens": [2071, 11259, 280, 23265, 32, 13737, 473]}
{"line_number": 293, "line_type": "generated", "code": "\n     * @param timeZone  optional time zone, overrides time zone of\n     *  formatted date\n     * @return a localized standard time formatter\n     * @throws IllegalArgumentException if the Locale has no time\n     *  pattern defined\n     * @since 2.", "entropy": 0.041656494140625, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [0.380126953125, 0.0672607421875, 0.01343536376953125, 0.1817626953125, 0.0168304443359375, 0.00012004375457763672, 0.019866943359375, 0.004947662353515625, 0.0018482208251953125, 0.00013315677642822266, 0.00356292724609375, 0.007171630859375, 0.01155853271484375, 8.416175842285156e-05, 0.0017232894897460938, 0.1463623046875, 0.0002613067626953125, 0.0077667236328125, 0.00020515918731689453, 0.810546875, 0.2265625, 0.0049285888671875, 0.00072479248046875, 0.006984710693359375, 0.0032787322998046875, 0.0015659332275390625, 0.00136566162109375, 0.06304931640625, 0.0012903213500976562, 0.01226043701171875, 0.0035228729248046875, 0.0003857612609863281, 0.0129241943359375, 0.0007338523864746094, 0.0001214742660522461, 0.00010287761688232422, 0.000823974609375, 8.976459503173828e-05, 0.00010013580322265625, 0.0141143798828125, 0.002506256103515625, 6.80685043334961e-05, 0.00162506103515625, 0.0001226663589477539, 8.058547973632812e-05, 0.0252227783203125, 0.101806640625, 0.0006265640258789062, 0.0023441314697265625, 8.821487426757812e-05, 0.0012426376342773438, 9.548664093017578e-05], "tokens": [275, 319, 477, 753, 1133, 6767, 225, 5302, 1133, 10790, 30, 20006, 1133, 10790, 432, 275, 319, 225, 14186, 2340, 275, 319, 477, 601, 312, 23617, 6216, 1133, 14971, 275, 319, 477, 5117, 12137, 415, 322, 23265, 1401, 1289, 1133, 275, 319, 225, 5257, 3417, 275, 319, 477, 8119, 225, 36, 32]}
{"line_number": 408, "line_type": "original", "code": "        return getDateTimeInstance(dateStyle, timeStyle, null, null);", "entropy": 0.99853515625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [6.2734375, 1.7900390625, 1.205078125, 0.066162109375, 0.04962158203125, 0.0239105224609375, 0.1854248046875, 0.00036835670471191406, 0.0017766952514648438, 0.022705078125, 0.0001417398452758789, 0.013336181640625, 2.990234375, 0.00875091552734375, 3.2265625, 0.11639404296875], "tokens": [351, 442, 622, 4852, 1810, 26, 770, 2275, 30, 1133, 2275, 30, 744, 30, 744, 293]}
{"line_number": 408, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [], "tokens": []}
{"line_number": 425, "line_type": "original", "code": "        return getDateTimeInstance(dateStyle, timeStyle, null, locale);", "entropy": 1.3076171875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [6.00390625, 6.32421875, 3.185546875, 0.1470947265625, 0.08001708984375, 0.07275390625, 0.471435546875, 0.00585174560546875, 0.00395965576171875, 0.0248870849609375, 0.0003273487091064453, 0.0081634521484375, 4.3515625, 0.0231170654296875, 0.171875, 0.04669189453125], "tokens": [351, 442, 622, 4852, 1810, 26, 770, 2275, 30, 1133, 2275, 30, 744, 30, 11259, 293]}
{"line_number": 425, "line_type": "generated", "code": "\n            } catch (ClassCastException ex) {\n                throw new IllegalArgumentException(\"No date pattern for locale: \" + locale);\n            }\n        }\n        return format;\n    }\n    \n    //-----------------------------------------------------------------------\n    /**\n     * <p>Gets a date/time formatter instance using", "entropy": 0.1226806640625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.67236328125, 0.0189666748046875, 0.052490234375, 0.003673553466796875, 0.06707763671875, 0.00012087821960449219, 0.0074005126953125, 0.0007977485656738281, 0.0009975433349609375, 0.0182952880859375, 0.0110321044921875, 0.00012040138244628906, 0.0035839080810546875, 0.046722412109375, 0.0026073455810546875, 0.021514892578125, 1.46875, 0.0013685226440429688, 0.00208282470703125, 0.0013446807861328125, 0.002685546875, 0.001438140869140625, 0.0009570121765136719, 0.0033283233642578125, 0.00827789306640625, 0.0002593994140625, 0.269287109375, 0.0006256103515625, 0.05908203125, 0.0030231475830078125, 0.004833221435546875, 3.552436828613281e-05, 0.017913818359375, 0.0009760856628417969, 1.8349609375, 0.30224609375, 0.05181884765625, 0.032958984375, 0.035797119140625, 0.0165252685546875, 3.135204315185547e-05, 0.06158447265625, 2.1457672119140625e-05, 0.0010662078857421875, 0.122802734375, 0.11944580078125, 0.6240234375, 0.2091064453125, 6.42538070678711e-05, 0.01678466796875, 0.04486083984375, 0.129150390625], "tokens": [324, 320, 2368, 308, 1339, 36932, 538, 27, 301, 400, 1422, 537, 12137, 440, 2023, 2340, 5257, 436, 11259, 44, 313, 474, 11259, 293, 324, 320, 291, 320, 291, 442, 2179, 45, 284, 320, 2170, 434, 42510, 284, 1022, 275, 319, 333, 98, 48, 20931, 312, 2340, 33, 1003, 14971, 1980, 1471]}
{"line_number": 461, "line_type": "original", "code": "        Object key = new Pair(new Integer(dateStyle), new Integer(timeStyle));", "entropy": 1.15234375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [4.76171875, 6.6015625, 0.36083984375, 0.098388671875, 0.1424560546875, 2.29296875, 0.00751495361328125, 2.775390625, 2.72265625, 0.00545501708984375, 1.974609375, 0.00766754150390625, 0.01397705078125, 0.099609375, 0.012908935546875, 0.00037407875061035156, 0.0028438568115234375, 2.3245811462402344e-05, 0.01175689697265625], "tokens": [351, 2194, 1202, 280, 537, 16588, 26, 890, 4401, 26, 770, 2275, 471, 537, 4401, 26, 1003, 2275, 876]}
{"line_number": 461, "line_type": "generated", "code": "\n    /**\n     * <p>Gets a date/time formatter instance using the specified pattern\n     * and time zone in the default locale.</p>\n     * \n     * @param pattern  the pattern describing the date and time format\n     * @param timeZone", "entropy": 0.232666015625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.810546875, 0.7392578125, 0.047515869140625, 9.09566879272461e-05, 0.0968017578125, 0.00015366077423095703, 0.002941131591796875, 0.476318359375, 0.75048828125, 0.68115234375, 0.4482421875, 0.00027108192443847656, 0.0285491943359375, 0.1275634765625, 0.1751708984375, 0.2139892578125, 0.071533203125, 1.255859375, 1.3486328125, 0.0013933181762695312, 0.294921875, 0.83740234375, 0.0013828277587890625, 0.93212890625, 0.0021114349365234375, 0.025665283203125, 0.0013942718505859375, 0.0933837890625, 2.658367156982422e-05, 0.0007004737854003906, 0.023223876953125, 0.00018274784088134766, 0.08154296875, 5.614757537841797e-05, 0.34130859375, 0.0018215179443359375, 0.00646209716796875, 0.0196075439453125, 0.62841796875, 0.04156494140625, 0.849609375, 0.0007147789001464844, 0.054931640625, 0.245361328125, 0.0017261505126953125, 0.0150909423828125, 0.25537109375, 1.2636184692382812e-05, 0.0093536376953125, 0.046661376953125, 0.01255035400390625, 0.0006313323974609375], "tokens": [284, 1022, 275, 319, 333, 98, 48, 20931, 312, 2340, 33, 1003, 14971, 1980, 1471, 322, 3191, 5257, 275, 319, 461, 1133, 10790, 328, 322, 1244, 11259, 1730, 98, 48, 275, 319, 5384, 319, 477, 753, 5257, 225, 322, 5257, 22376, 322, 2340, 461, 1133, 2179, 275, 319, 477, 753, 1133, 6767]}
{"line_number": 462, "line_type": "original", "code": "        if (timeZone != null) {", "entropy": 1.28125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [3.939453125, 2.30078125, 0.058074951171875, 3.509765625, 0.055572509765625, 1.3349609375, 0.005527496337890625, 0.085693359375, 0.240234375], "tokens": [351, 415, 308, 1003, 6767, 863, 744, 27, 301]}
{"line_number": 462, "line_type": "generated", "code": "\n     * @param locale  the locale to use\n     * @return the default pattern\n     * @since 2.1\n     */\n    public static String getDefaultPattern(Locale locale) {\n        if (locale == null) {\n            locale = Locale.getDefault", "entropy": 0.240478515625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.393798828125, 0.17919921875, 1.603515625, 1.111328125, 0.927734375, 0.1929931640625, 0.2386474609375, 0.12445068359375, 0.22021484375, 0.08465576171875, 0.260009765625, 0.01113128662109375, 0.0012874603271484375, 0.091796875, 0.07452392578125, 0.265869140625, 0.27294921875, 0.2330322265625, 1.3486328125, 0.00988006591796875, 0.416748046875, 0.0100860595703125, 0.2203369140625, 0.003131866455078125, 0.69921875, 0.024444580078125, 0.01470184326171875, 0.0193023681640625, 0.68212890625, 0.07183837890625, 0.3828125, 0.5341796875, 0.0005064010620117188, 0.0309600830078125, 0.00653076171875, 2.3365020751953125e-05, 0.00399017333984375, 0.0222015380859375, 0.1494140625, 1.3232421875, 0.00888824462890625, 0.02532958984375, 0.107666015625, 0.0020542144775390625, 0.00362396240234375, 0.0014543533325195312, 0.0338134765625, 0.0616455078125, 0.0001379251480102539, 0.0037860870361328125, 0.00016951560974121094, 0.0005774497985839844], "tokens": [275, 319, 477, 753, 11259, 225, 322, 11259, 372, 793, 275, 319, 477, 601, 322, 1244, 5257, 275, 319, 477, 8119, 225, 36, 32, 35, 275, 569, 284, 562, 907, 892, 23937, 5516, 26, 9467, 11259, 27, 301, 291, 415, 308, 6921, 610, 744, 27, 301, 324, 11259, 280, 23265, 32, 13737]}
{"line_number": 465, "line_type": "original", "code": "        if (locale != null) {", "entropy": 1.52734375, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [3.927734375, 3.37109375, 0.07281494140625, 1.3095703125, 3.140625, 0.0210723876953125, 0.04022216796875, 0.332275390625], "tokens": [351, 415, 308, 6921, 863, 744, 27, 301]}
{"line_number": 465, "line_type": "generated", "code": "\n    public static String getPattern() {\n        return FastDateFormat.DEFAULT_PATTERN;\n    }\n\n    /**\n     * <p>Sets the default pattern.</p>\n     * \n     * @param pattern  the pattern, not null\n     * @throws IllegalArgumentException if", "entropy": 0.255126953125, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [0.62158203125, 0.70068359375, 0.42626953125, 0.496337890625, 1.0009765625, 0.1427001953125, 0.1318359375, 0.05078125, 0.10858154296875, 0.126220703125, 2.20703125, 0.04364013671875, 0.01166534423828125, 0.79150390625, 0.031951904296875, 0.028717041015625, 0.01751708984375, 0.0498046875, 0.0015468597412109375, 0.5263671875, 0.2587890625, 0.00565338134765625, 4.374980926513672e-05, 0.04083251953125, 3.826618194580078e-05, 0.0011396408081054688, 1.44140625, 0.0210418701171875, 0.01113128662109375, 0.0222625732421875, 0.168212890625, 0.0003077983856201172, 0.00039458274841308594, 0.004688262939453125, 0.00634765625, 0.056915283203125, 0.00013148784637451172, 0.1812744140625, 0.01268768310546875, 0.01361846923828125, 0.080322265625, 0.1295166015625, 0.66748046875, 0.65283203125, 1.28125, 0.05743408203125, 0.00759124755859375, 0.362548828125, 0.00986480712890625, 0.13232421875, 0.09246826171875, 0.02764892578125], "tokens": [284, 562, 907, 892, 622, 5516, 346, 301, 291, 442, 15938, 15645, 32, 5807, 81, 21589, 45, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 10527, 322, 1244, 5257, 1730, 98, 48, 275, 319, 5384, 319, 477, 753, 5257, 225, 322, 5257, 30, 646, 744, 275, 319, 477, 5117, 12137, 415]}
{"line_number": 466, "line_type": "original", "code": "            key = new Pair(key, locale);", "entropy": 2.142578125, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [6.12109375, 9.734375, 0.0162200927734375, 1.1865234375, 1.939453125, 0.0853271484375, 1.490234375, 0.01000213623046875, 0.8271484375, 0.01080322265625], "tokens": [1468, 1202, 280, 537, 16588, 26, 678, 30, 11259, 293]}
{"line_number": 466, "line_type": "generated", "code": "\n        return DEFAULT_PATTERN;\n    }\n\n    /**\n     * <p>Gets the default time zone.</p>\n     * \n     * @return the default time zone\n     */\n    private static synchronized TimeZone getDefaultTimeZone() {\n        return DEFAULT_TIME_ZONE", "entropy": 0.1861572265625, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [0.7626953125, 0.658203125, 2.09375, 0.0121612548828125, 0.081787109375, 0.03118896484375, 0.060028076171875, 0.0009140968322753906, 0.390869140625, 0.41455078125, 0.00811767578125, 0.00013363361358642578, 0.07305908203125, 9.834766387939453e-05, 0.001861572265625, 1.0224609375, 0.151611328125, 0.720703125, 0.53369140625, 0.00487518310546875, 0.0794677734375, 2.300739288330078e-05, 0.00013017654418945312, 0.0018205642700195312, 0.0035228729248046875, 0.0290069580078125, 7.581710815429688e-05, 0.007289886474609375, 0.0023136138916015625, 0.01322174072265625, 0.05859375, 0.09844970703125, 0.003173828125, 0.07403564453125, 0.03924560546875, 0.002086639404296875, 0.07574462890625, 0.0024623870849609375, 0.16796875, 0.0080108642578125, 5.245208740234375e-06, 0.006679534912109375, 0.013916015625, 0.0012664794921875, 0.001499176025390625, 0.6396484375, 0.428466796875, 0.68115234375, 0.0008802413940429688, 0.00508880615234375, 0.2132568359375, 0.00013327598571777344], "tokens": [291, 442, 4040, 81, 21589, 45, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 20931, 322, 1244, 1133, 10790, 1730, 98, 48, 275, 319, 5384, 319, 477, 601, 322, 1244, 1133, 10790, 275, 569, 284, 945, 907, 13436, 3717, 6767, 23937, 26223, 346, 301, 291, 442, 4040, 81, 4804, 81, 27368]}
{"line_number": 469, "line_type": "original", "code": "        FastDateFormat format = (FastDateFormat) cDateTimeInstanceCache.get(key);", "entropy": 0.96337890625, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [3.22265625, 6.31640625, 0.00836944580078125, 1.630859375, 0.0703125, 4.0546875, 0.032257080078125, 3.528594970703125e-05, 0.003086090087890625, 0.3916015625, 1.36328125, 0.0694580078125, 0.0011425018310546875, 0.00672149658203125, 0.01342010498046875, 0.00553131103515625, 0.1539306640625, 0.00716400146484375], "tokens": [351, 15938, 15645, 2179, 280, 308, 12200, 15645, 27, 281, 4852, 1810, 2597, 32, 371, 26, 678, 293]}
{"line_number": 469, "line_type": "generated", "code": "\n        return cDefaultPattern;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * <p>Formats a millisecond value into the specified format.</p>\n     * \n     * @param millis  milliseconds to format\n     * @param format  the format string\n     *", "entropy": 0.292724609375, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [0.1785888671875, 0.0887451171875, 0.00888824462890625, 0.00020766258239746094, 0.0003352165222167969, 0.006076812744140625, 0.033721923828125, 0.0005526542663574219, 0.36083984375, 0.98388671875, 0.082763671875, 0.02386474609375, 0.06451416015625, 0.00600433349609375, 5.173683166503906e-05, 0.09967041015625, 0.00014483928680419922, 0.004207611083984375, 1.33203125, 0.074462890625, 0.27783203125, 0.00030493736267089844, 0.12200927734375, 1.2724609375, 1.5791015625, 0.61328125, 0.8369140625, 0.35302734375, 1.9788742065429688e-05, 0.0008449554443359375, 0.00814056396484375, 0.0006566047668457031, 0.06536865234375, 3.24249267578125e-05, 0.191162109375, 0.005504608154296875, 0.228271484375, 0.019073486328125, 1.4091796875, 0.27685546875, 0.035369873046875, 1.6748046875, 0.0004000663757324219, 0.00021970272064208984, 0.21337890625, 0.8583984375, 0.035736083984375, 0.1453857421875, 0.487060546875, 0.13330078125, 1.0341796875, 0.0006761550903320312], "tokens": [291, 442, 281, 2044, 5516, 45, 284, 320, 446, 434, 42510, 284, 1022, 275, 319, 333, 98, 48, 19298, 312, 37003, 3090, 786, 1991, 322, 3191, 2179, 1730, 98, 48, 275, 319, 5384, 319, 477, 753, 42302, 225, 18574, 372, 2179, 275, 319, 477, 753, 2179, 225, 322, 2179, 802, 275, 319]}
{"line_number": 470, "line_type": "original", "code": "        if (format == null) {", "entropy": 1.2490234375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [3.888671875, 1.298828125, 0.01904296875, 3.916015625, 0.70166015625, 0.0189361572265625, 0.10394287109375, 0.044097900390625], "tokens": [351, 415, 308, 1643, 610, 744, 27, 301]}
{"line_number": 470, "line_type": "generated", "code": "\n    /**\n     * <p>Gets a pattern formatter instance using the specified pattern\n     * in the default locale.</p>\n     * \n     * @param pattern  the pattern specification\n     * @return a pattern formatter\n     */\n    public static synchronized FastDateFormat getInstance", "entropy": 0.28271484375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.5283203125, 0.71826171875, 0.034515380859375, 0.00021445751190185547, 0.1400146484375, 0.00037789344787597656, 0.00484466552734375, 0.966796875, 1.3642578125, 0.5703125, 1.13671875, 0.5966796875, 0.304931640625, 0.2066650390625, 0.12408447265625, 0.06005859375, 0.9912109375, 0.00032448768615722656, 1.3681640625, 0.0037689208984375, 0.039154052734375, 0.136474609375, 0.10491943359375, 2.276897430419922e-05, 0.0006318092346191406, 0.00797271728515625, 0.0002593994140625, 0.044342041015625, 9.238719940185547e-05, 0.1259765625, 0.0122222900390625, 0.0016469955444335938, 0.0165863037109375, 0.36767578125, 0.0258331298828125, 1.1044921875, 0.34716796875, 0.0002911090850830078, 0.003246307373046875, 0.0545654296875, 0.13671875, 0.58154296875, 0.07745361328125, 0.2880859375, 0.7412109375, 0.0198516845703125, 0.035125732421875, 0.0008702278137207031, 0.88330078125, 0.005153656005859375, 0.0009698867797851562, 0.40869140625], "tokens": [284, 1022, 275, 319, 333, 98, 48, 20931, 312, 5257, 14971, 1980, 1471, 322, 3191, 5257, 275, 319, 328, 322, 1244, 11259, 1730, 98, 48, 275, 319, 5384, 319, 477, 753, 5257, 225, 322, 5257, 14224, 275, 319, 477, 601, 312, 5257, 14971, 275, 569, 284, 562, 907, 13436, 15938, 15645, 31637]}
{"line_number": 471, "line_type": "original", "code": "            if (locale == null) {", "entropy": 1.421875, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [6.3125, 2.474609375, 0.06903076171875, 2.005859375, 0.3525390625, 0.006847381591796875, 0.019500732421875, 0.1376953125], "tokens": [1468, 415, 308, 6921, 610, 744, 27, 301]}
{"line_number": 471, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [], "tokens": []}
{"line_number": 472, "line_type": "original", "code": "                locale = Locale.getDefault();", "entropy": 2.708984375, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [9.453125, 7.6953125, 0.7197265625, 0.9091796875, 0.0186004638671875, 0.09259033203125, 0.0816650390625], "tokens": [2071, 11259, 280, 23265, 32, 13737, 473]}
{"line_number": 472, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [], "tokens": []}
{"line_number": 475, "line_type": "original", "code": "                SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getDateTimeInstance(dateStyle, timeStyle,", "entropy": 1.294921875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [8.2734375, 7.72265625, 1.3818359375, 0.89697265625, 3.0703125, 0.0117950439453125, 0.005908966064453125, 0.6201171875, 0.000629425048828125, 0.0794677734375, 2.89453125, 0.006214141845703125, 2.3365020751953125e-05, 0.18798828125, 0.64599609375, 0.0009889602661132812, 0.005771636962890625, 0.054412841796875, 3.2901763916015625e-05, 0.05010986328125], "tokens": [2071, 27221, 14971, 280, 308, 41099, 27, 2821, 2207, 32, 371, 4852, 1810, 26, 770, 2275, 30, 1133, 2275, 30]}
{"line_number": 475, "line_type": "generated", "code": "\n    /**\n     * <p>Constructs a new FastDateFormat.</p>\n     * \n     * @param pattern  the pattern describing the date and time format\n     * @param timeZone  the time zone to use, may be null\n     * @param", "entropy": 0.233154296875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [1.2685546875, 2.37890625, 0.04644775390625, 0.00021028518676757812, 0.09637451171875, 7.390975952148438e-05, 0.006099700927734375, 0.32080078125, 0.2452392578125, 0.04388427734375, 0.85595703125, 1.4755859375, 0.005306243896484375, 0.65087890625, 3.325939178466797e-05, 0.0010662078857421875, 0.03826904296875, 0.080322265625, 0.06689453125, 0.0002397298812866211, 0.246337890625, 0.00537109375, 0.036346435546875, 0.019134521484375, 0.2578125, 0.034881591796875, 1.4873046875, 0.003025054931640625, 0.04827880859375, 0.384765625, 0.00214385986328125, 0.007781982421875, 0.0789794921875, 0.041778564453125, 0.01032257080078125, 0.0277099609375, 0.04351806640625, 0.0013628005981445312, 0.007476806640625, 0.1278076171875, 0.062469482421875, 0.10040283203125, 0.414306640625, 0.0054473876953125, 0.2330322265625, 0.428955078125, 0.0006694793701171875, 0.38525390625, 0.01523590087890625, 0.01444244384765625, 0.0024166107177734375, 0.00539398193359375], "tokens": [284, 1022, 275, 319, 333, 98, 48, 13614, 101, 312, 537, 15938, 15645, 1730, 98, 48, 275, 319, 5384, 319, 477, 753, 5257, 225, 322, 5257, 22376, 322, 2340, 461, 1133, 2179, 275, 319, 477, 753, 1133, 6767, 225, 322, 1133, 10790, 372, 793, 30, 1631, 526, 744, 275, 319, 477, 753]}
{"line_number": 477, "line_type": "original", "code": "                String pattern = formatter.toPattern();", "entropy": 3.72265625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [9.9140625, 6.92578125, 0.099853515625, 4.453125, 12.03125, 0.0115509033203125, 0.00333404541015625, 0.00374603271484375, 0.046478271484375], "tokens": [2071, 892, 5257, 280, 14971, 32, 452, 5516, 473]}
{"line_number": 477, "line_type": "generated", "code": "\n     * \n     * @param pattern  the pattern for the date format\n     * @param timeZone  the time zone to use, may be null\n     * @param locale  the locale to use, may be null\n     * @throws IllegalArgumentException if the pattern", "entropy": 0.1798095703125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.1824951171875, 0.403564453125, 0.7373046875, 0.006927490234375, 0.080078125, 0.01861572265625, 0.0228271484375, 0.0226287841796875, 0.28564453125, 0.03326416015625, 2.083984375, 1.0009765625, 0.056671142578125, 0.2147216796875, 0.220458984375, 0.023468017578125, 0.003597259521484375, 0.0289764404296875, 0.060302734375, 0.0004761219024658203, 0.0100555419921875, 0.2119140625, 0.06719970703125, 0.053802490234375, 0.6201171875, 0.0100555419921875, 0.56591796875, 0.7421875, 0.0010890960693359375, 0.33349609375, 0.02862548828125, 0.00830078125, 0.00345611572265625, 0.0053863525390625, 0.001453399658203125, 0.00797271728515625, 0.03668212890625, 0.0096282958984375, 0.0208282470703125, 0.0019435882568359375, 0.01457977294921875, 0.00344085693359375, 0.0221710205078125, 0.0018186569213867188, 0.0265960693359375, 0.7333984375, 0.03411865234375, 0.09771728515625, 0.0635986328125, 0.01397705078125, 0.052825927734375, 0.058990478515625], "tokens": [275, 319, 5384, 319, 477, 753, 5257, 225, 322, 5257, 436, 322, 2340, 2179, 275, 319, 477, 753, 1133, 6767, 225, 322, 1133, 10790, 372, 793, 30, 1631, 526, 744, 275, 319, 477, 753, 11259, 225, 322, 11259, 372, 793, 30, 1631, 526, 744, 275, 319, 477, 5117, 12137, 415, 322, 5257]}
{"line_number": 478, "line_type": "original", "code": "                format = getInstance(pattern, timeZone, locale);", "entropy": 3.138671875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [8.84375, 5.23828125, 12.296875, 6.24609375, 0.133056640625, 0.057373046875, 0.65771484375, 3.48046875, 0.004207611083984375, 0.56396484375, 0.0034770965576171875, 0.11627197265625], "tokens": [2071, 2179, 280, 31637, 26, 5607, 30, 1133, 6767, 30, 11259, 293]}
{"line_number": 478, "line_type": "generated", "code": "\n     * @param timeZone  optional time zone\n     * @param locale  optional locale\n     * @throws IllegalArgumentException if the pattern is invalid\n     */\n    public FastDateFormat(String pattern, TimeZone timeZone, Locale locale) {\n        this(pattern,", "entropy": 0.154541015625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.30224609375, 0.305419921875, 0.0672607421875, 0.275390625, 0.46142578125, 0.007160186767578125, 0.01395416259765625, 1.4208984375, 0.060699462890625, 0.0008382797241210938, 0.6728515625, 0.245361328125, 0.0103302001953125, 0.10284423828125, 0.0012598037719726562, 0.005107879638671875, 0.0604248046875, 0.0007224082946777344, 0.089599609375, 0.7412109375, 0.01389312744140625, 0.306640625, 0.08380126953125, 0.0182952880859375, 0.0911865234375, 0.31982421875, 0.050445556640625, 0.031646728515625, 0.039581298828125, 0.1180419921875, 0.00798797607421875, 0.398681640625, 0.0076904296875, 7.176399230957031e-05, 0.00231170654296875, 0.04595947265625, 0.00019621849060058594, 0.0017175674438476562, 0.0032939910888671875, 2.7418136596679688e-06, 0.0007495880126953125, 1.3113021850585938e-06, 0.0005826950073242188, 0.003448486328125, 2.1696090698242188e-05, 0.003208160400390625, 0.014312744140625, 0.10101318359375, 0.8486328125, 0.47412109375, 0.1834716796875, 0.0241851806640625], "tokens": [275, 319, 477, 753, 1133, 6767, 225, 5302, 1133, 10790, 275, 319, 477, 753, 11259, 225, 5302, 11259, 275, 319, 477, 5117, 12137, 415, 322, 5257, 438, 5535, 275, 569, 284, 562, 15938, 15645, 26, 652, 5257, 30, 3717, 6767, 1133, 6767, 30, 23265, 11259, 27, 301, 291, 458, 26, 5607, 30]}
{"line_number": 479, "line_type": "original", "code": "                cDateTimeInstanceCache.put(key, format);", "entropy": 1.7265625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [8.0390625, 4.55859375, 4.70703125, 0.07843017578125, 0.00905609130859375, 0.360595703125, 0.94921875, 0.0225372314453125, 0.043731689453125, 0.004474639892578125, 1.9140625, 0.0273284912109375], "tokens": [2071, 281, 4852, 1810, 2597, 32, 524, 26, 678, 30, 2179, 293]}
{"line_number": 479, "line_type": "generated", "code": "\n     * @param timeZone  the time zone to use, may be null\n     * @param locale  the locale to use, may be null\n     * @throws IllegalArgumentException if the pattern is invalid\n     */\n    public FastDateFormat(String pattern, TimeZone", "entropy": 0.1297607421875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.300537109375, 0.2047119140625, 0.040985107421875, 0.07763671875, 0.047393798828125, 0.00021851062774658203, 0.0178375244140625, 1.1767578125, 0.08203125, 0.05657958984375, 0.328369140625, 0.01226806640625, 0.288818359375, 0.95654296875, 0.0010843276977539062, 0.38623046875, 0.12188720703125, 0.0272064208984375, 0.0038967132568359375, 0.0150299072265625, 0.0013980865478515625, 0.006351470947265625, 0.045318603515625, 0.01239013671875, 0.0294952392578125, 0.00147247314453125, 0.015838623046875, 0.00399017333984375, 0.01372528076171875, 0.0019588470458984375, 0.283935546875, 0.693359375, 0.02099609375, 0.0721435546875, 0.0740966796875, 0.0139617919921875, 0.10174560546875, 0.055023193359375, 0.0243682861328125, 0.028472900390625, 0.02923583984375, 0.1080322265625, 0.006351470947265625, 0.89111328125, 0.01090240478515625, 2.7418136596679688e-05, 0.0016298294067382812, 0.05047607421875, 6.16312026977539e-05, 0.0002008676528930664, 0.0024585723876953125, 2.384185791015625e-06], "tokens": [275, 319, 477, 753, 1133, 6767, 225, 322, 1133, 10790, 372, 793, 30, 1631, 526, 744, 275, 319, 477, 753, 11259, 225, 322, 11259, 372, 793, 30, 1631, 526, 744, 275, 319, 477, 5117, 12137, 415, 322, 5257, 438, 5535, 275, 569, 284, 562, 15938, 15645, 26, 652, 5257, 30, 3717, 6767]}
{"line_number": 483, "line_type": "original", "code": "            }", "entropy": 9.3984375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [7.390625, 11.40625], "tokens": [1468, 320]}
{"line_number": 483, "line_type": "generated", "code": "\n     */\n    public FastDateFormat(String pattern, TimeZone timeZone, Locale locale) {\n        super();\n        if (pattern == null) {\n            pattern = getDefaultPattern();\n        }\n        if (timeZone == null) {\n            timeZone = Time", "entropy": 0.1270751953125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.330810546875, 0.41845703125, 0.029571533203125, 0.8154296875, 0.0092620849609375, 3.838539123535156e-05, 0.0012388229370117188, 0.04010009765625, 5.435943603515625e-05, 0.0002378225326538086, 0.005462646484375, 4.410743713378906e-06, 0.00048732757568359375, 2.5033950805664062e-06, 0.001010894775390625, 0.00843048095703125, 7.367134094238281e-05, 0.004638671875, 0.00823211669921875, 0.149169921875, 1.0732421875, 0.2218017578125, 0.2098388671875, 0.62255859375, 0.00897216796875, 0.05291748046875, 0.006744384765625, 0.00016796588897705078, 0.0220184326171875, 0.000827789306640625, 0.0230865478515625, 0.2322998046875, 0.0003402233123779297, 0.0015993118286132812, 0.00016605854034423828, 0.0004296302795410156, 0.025665283203125, 0.0003719329833984375, 0.18603515625, 0.56640625, 0.0151214599609375, 0.8037109375, 2.384185791015625e-06, 0.07562255859375, 0.0009531974792480469, 0.0089874267578125, 0.00046515464782714844, 0.0250396728515625, 0.134521484375, 3.7550926208496094e-05, 0.0008664131164550781, 0.464111328125], "tokens": [275, 569, 284, 562, 15938, 15645, 26, 652, 5257, 30, 3717, 6767, 1133, 6767, 30, 23265, 11259, 27, 301, 291, 2599, 473, 291, 415, 308, 5607, 610, 744, 27, 301, 324, 5257, 280, 23937, 5516, 473, 291, 320, 291, 415, 308, 1003, 6767, 610, 744, 27, 301, 324, 1133, 6767, 280, 3717]}
{"line_number": 485, "line_type": "original", "code": "        return format;", "entropy": 4.4765625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [4.0859375, 7.70703125, 5.49609375, 0.62451171875], "tokens": [351, 442, 2179, 45]}
{"line_number": 485, "line_type": "generated", "code": "\n     */\n    private FastDateFormat(String pattern, TimeZone timeZone, Locale locale) {\n        super();\n        if (pattern == null) {\n            pattern = getDefaultPattern();\n        }\n        if (locale == null) {\n            locale = Locale.getDefault", "entropy": 0.13720703125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.3564453125, 0.1292724609375, 0.0099334716796875, 1.748046875, 0.0019683837890625, 5.2094459533691406e-05, 0.0004858970642089844, 0.0872802734375, 0.0001252889633178711, 0.00023281574249267578, 0.0086517333984375, 8.344650268554688e-06, 0.0020008087158203125, 1.7881393432617188e-06, 0.0001748800277709961, 0.00823974609375, 4.291534423828125e-05, 0.0270538330078125, 0.02801513671875, 0.1529541015625, 0.7646484375, 0.17822265625, 0.38623046875, 0.6357421875, 0.0260467529296875, 0.07611083984375, 0.0228729248046875, 0.00021028518676757812, 0.049041748046875, 0.001079559326171875, 0.023651123046875, 0.34765625, 0.00032591819763183594, 0.0019817352294921875, 0.00013756752014160156, 0.0003457069396972656, 0.0292205810546875, 0.0005950927734375, 0.356689453125, 0.912109375, 0.060455322265625, 0.6416015625, 0.0104522705078125, 8.761882781982422e-05, 0.0026874542236328125, 0.0004725456237792969, 0.02264404296875, 0.00855255126953125, 0.00019681453704833984, 0.0110931396484375, 0.0004036426544189453, 0.0018444061279296875], "tokens": [275, 569, 284, 945, 15938, 15645, 26, 652, 5257, 30, 3717, 6767, 1133, 6767, 30, 23265, 11259, 27, 301, 291, 2599, 473, 291, 415, 308, 5607, 610, 744, 27, 301, 324, 5257, 280, 23937, 5516, 473, 291, 320, 291, 415, 308, 6921, 610, 744, 27, 301, 324, 11259, 280, 23265, 32, 13737]}
{"line_number": 672, "line_type": "original", "code": "                if (tokenLen >= 4) {", "entropy": 1.6748046875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [4.21484375, 2.005859375, 0.12939453125, 7.1171875, 0.298828125, 2.40234375, 0.1158447265625, 0.1595458984375, 0.298095703125, 0.00757598876953125], "tokens": [2071, 415, 308, 1956, 5745, 2377, 225, 38, 27, 301]}
{"line_number": 672, "line_type": "generated", "code": "\n            while (i + 1 &lt; length && pattern.charAt(i + 1) == c) {\n                i++;\n                buf.append(c);\n            }\n        } else {\n            // This will identify token as text.\n            while", "entropy": 0.212890625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.36865234375, 1.5595703125, 0.16552734375, 0.12249755859375, 0.09912109375, 0.0016679763793945312, 0.0018568038940429688, 0.2137451171875, 0.006961822509765625, 0.10693359375, 0.0123138427734375, 0.958984375, 0.089599609375, 0.0004782676696777344, 0.00010216236114501953, 0.0008420944213867188, 0.03985595703125, 0.0208587646484375, 0.0003674030303955078, 2.574920654296875e-05, 0.00021708011627197266, 0.0013036727905273438, 0.0009927749633789062, 0.005245208740234375, 0.0055084228515625, 0.0212554931640625, 1.0625, 0.0230560302734375, 0.4365234375, 0.013580322265625, 1.9073486328125e-05, 6.937980651855469e-05, 8.213520050048828e-05, 0.003925323486328125, 0.00017559528350830078, 0.0266876220703125, 0.0001901388168334961, 0.6318359375, 0.014984130859375, 0.038787841796875, 0.0340576171875, 0.042327880859375, 0.034210205078125, 0.1966552734375, 1.0634765625, 0.2451171875, 0.045928955078125, 1.140625, 0.72265625, 0.005138397216796875, 0.212890625, 1.2685546875], "tokens": [324, 2218, 308, 91, 474, 225, 35, 549, 2159, 45, 3104, 962, 5257, 32, 15611, 26, 91, 474, 225, 35, 27, 610, 281, 27, 301, 400, 595, 3334, 400, 4845, 32, 1689, 26, 85, 293, 324, 320, 291, 320, 813, 301, 324, 434, 1348, 1098, 12411, 2404, 619, 1344, 32, 324, 2218]}
{"line_number": 675, "line_type": "original", "code": "                    rule = new TimeZoneNameRule(mTimeZone, mTimeZoneForced, mLocale, TimeZone.SHORT);", "entropy": 1.01171875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [5.4765625, 11.1015625, 0.264892578125, 0.46484375, 2.314453125, 2.416015625, 0.151611328125, 0.0015096664428710938, 0.01557159423828125, 0.1282958984375, 0.0137939453125, 0.006427764892578125, 0.026031494140625, 0.004558563232421875, 0.00310516357421875, 3.3736228942871094e-05, 0.00910186767578125, 0.02685546875, 0.00023865699768066406, 0.071533203125, 0.1468505859375, 0.0006613731384277344, 0.002567291259765625, 2.61328125, 0.0138092041015625], "tokens": [4696, 5750, 280, 537, 3717, 6767, 558, 3842, 26, 95, 26223, 30, 345, 26223, 1562, 3870, 30, 345, 9467, 30, 3717, 6767, 32, 15456, 293]}
{"line_number": 675, "line_type": "generated", "code": "\n                } else {\n                    break;\n                }\n            }\n        } else {\n            // This will identify token as text.\n            buf.append('\\'');\n\n            boolean inLiteral = false;\n\n            for (; i < length; i++) {\n                c = pattern", "entropy": 0.18701171875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [1.166015625, 0.00553131103515625, 0.1383056640625, 0.26025390625, 0.0440673828125, 0.01117706298828125, 0.00034165382385253906, 0.006412506103515625, 0.001918792724609375, 0.482177734375, 0.0011835098266601562, 0.42578125, 0.0015916824340820312, 0.0345458984375, 0.03924560546875, 0.10821533203125, 0.141357421875, 0.367919921875, 1.244140625, 0.196533203125, 0.08099365234375, 1.318359375, 0.564453125, 0.007843017578125, 0.269287109375, 0.50927734375, 0.0211944580078125, 0.028900146484375, 0.158203125, 0.0160064697265625, 0.001735687255859375, 0.53369140625, 0.30126953125, 0.023956298828125, 0.062469482421875, 0.00015056133270263672, 0.0007843971252441406, 0.0013971328735351562, 0.2347412109375, 0.248291015625, 0.1329345703125, 0.005573272705078125, 0.0005445480346679688, 0.0264129638671875, 0.0073699951171875, 0.299560546875, 0.00678253173828125, 0.00011873245239257812, 0.0148162841796875, 0.17236328125, 0.00016987323760986328, 3.933906555175781e-05], "tokens": [400, 320, 813, 301, 528, 1626, 45, 400, 320, 324, 320, 291, 320, 813, 301, 324, 434, 1348, 1098, 12411, 2404, 619, 1344, 32, 324, 4845, 32, 1689, 463, 6945, 895, 1064, 1905, 328, 8208, 280, 901, 45, 1064, 436, 23031, 595, 333, 3104, 45, 595, 1987, 301, 400, 281, 280, 5257]}
