{"line_number": 174, "line_type": "original", "code": "            return;", "entropy": 5.21484375, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [6.28125, 2.849609375, 6.51953125], "tokens": [1468, 442, 45]}
{"line_number": 174, "line_type": "generated", "code": "\n     * \n     * @param object\n     *            the object to create a <code>hashCode</code> for\n     * @param prime\n     *            a prime number to be used in the calculation of the hash code\n     * @param multiplier\n     *           ", "entropy": 0.138427734375, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.7138671875, 0.31591796875, 0.89892578125, 0.001987457275390625, 0.193359375, 0.09820556640625, 0.387939453125, 0.0127716064453125, 6.306171417236328e-05, 0.006778717041015625, 0.3876953125, 0.062164306640625, 0.001361846923828125, 0.00818634033203125, 0.016387939453125, 0.1629638671875, 0.0007872581481933594, 3.325939178466797e-05, 0.0260009765625, 0.0002199411392211914, 3.039836883544922e-05, 5.245208740234375e-06, 0.0030727386474609375, 0.0250244140625, 0.0005035400390625, 0.0018396377563476562, 0.0447998046875, 0.80859375, 0.0154876708984375, 1.609325408935547e-05, 0.0025234222412109375, 0.19140625, 0.09881591796875, 0.0253448486328125, 0.1907958984375, 0.099609375, 0.005588531494140625, 0.006122589111328125, 0.281005859375, 0.56494140625, 0.65869140625, 0.0010986328125, 0.599609375, 0.007312774658203125, 0.12841796875, 4.3511390686035156e-05, 0.002002716064453125, 0.0042266845703125, 0.1297607421875, 0.000926971435546875, 9.655952453613281e-06, 0.00038933753967285156], "tokens": [275, 319, 5384, 319, 477, 753, 1300, 275, 319, 1468, 322, 1300, 372, 1487, 312, 333, 687, 48, 14948, 377, 687, 48, 436, 275, 319, 477, 753, 16853, 275, 319, 1468, 312, 16853, 1451, 372, 526, 1654, 328, 322, 17686, 432, 322, 3677, 1340, 275, 319, 477, 753, 30266, 275, 319, 1468]}
{"line_number": 400, "line_type": "original", "code": "        return reflectionHashCode(17, 37, object, false, null, null);", "entropy": 0.77294921875, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [4.0, 6.984375, 2.578125, 0.0026760101318359375, 0.03955078125, 0.422607421875, 0.0019741058349609375, 0.00039458274841308594, 0.0029201507568359375, 0.00019419193267822266, 0.0006842613220214844, 0.001377105712890625, 0.033233642578125, 0.0305328369140625, 0.94873046875, 0.0059356689453125, 0.040283203125, 0.19677734375, 0.1595458984375, 0.00728607177734375], "tokens": [351, 442, 26158, 14947, 26, 35, 41, 30, 225, 37, 41, 30, 1300, 30, 901, 30, 744, 30, 744, 293]}
{"line_number": 400, "line_type": "generated", "code": "\n     * throw a security exception if run under a security manager, if the permissions are not set up correctly. It is\n     * also not as efficient as testing explicitly.\n     * </p>\n     * \n     * <p>\n     * If the TestTrans", "entropy": 0.049530029296875, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [1.337890625, 0.04833984375, 0.0394287109375, 0.0029144287109375, 0.0022411346435546875, 0.0003528594970703125, 0.001956939697265625, 0.0017309188842773438, 0.0009670257568359375, 0.002658843994140625, 0.0011072158813476562, 0.000995635986328125, 0.0018815994262695312, 0.0020008087158203125, 0.00399017333984375, 0.0115814208984375, 6.365776062011719e-05, 0.000835418701171875, 0.00710296630859375, 0.0001634359359741211, 0.00485992431640625, 0.00504302978515625, 0.024688720703125, 0.008056640625, 0.057952880859375, 0.0001246929168701172, 0.0005235671997070312, 0.00010132789611816406, 0.0007176399230957031, 0.00096893310546875, 0.00014793872833251953, 2.944469451904297e-05, 5.7697296142578125e-05, 0.00119781494140625, 0.01458740234375, 0.003078460693359375, 0.0087127685546875, 0.0003612041473388672, 0.0007224082946777344, 0.00879669189453125, 0.00011169910430908203, 0.00672149658203125, 8.988380432128906e-05, 0.0192413330078125, 0.28564453125, 0.00057220458984375, 0.004192352294921875, 0.0002186298370361328, 0.61279296875, 0.0012159347534179688, 0.035430908203125, 0.00116729736328125], "tokens": [275, 319, 1422, 312, 7663, 3756, 415, 1420, 1531, 312, 7663, 7884, 30, 415, 322, 4227, 884, 646, 739, 973, 8464, 32, 2030, 438, 275, 319, 2329, 646, 619, 17457, 619, 6325, 13413, 32, 275, 319, 576, 98, 48, 275, 319, 5384, 319, 333, 98, 48, 275, 319, 1670, 322, 2108, 1776]}
{"line_number": 137, "line_type": "original", "code": "        return REGISTRY.get();", "entropy": 3.041015625, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [5.640625, 5.8515625, 10.921875, 0.0004405975341796875, 0.00012004375457763672, 0.0219268798828125, 1.0830078125, 0.8134765625], "tokens": [351, 442, 11752, 23195, 75, 32, 371, 473]}
{"line_number": 137, "line_type": "generated", "code": "\n                    } catch (IllegalAccessException e) {\n                        // this can't happen. Would get a Security exception instead\n                        // throw a runtime exception in case the impossible happens.\n                        throw new InternalError(\"Unexpected IllegalAccessException\");\n                    }\n                }\n            }\n        }", "entropy": 0.08502197265625, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [0.449951171875, 0.0031337738037109375, 0.275146484375, 0.005725860595703125, 0.0014677047729492188, 0.00022172927856445312, 0.231201171875, 0.00157928466796875, 0.00786590576171875, 0.1414794921875, 0.340087890625, 0.262939453125, 0.001018524169921875, 0.0034198760986328125, 0.017913818359375, 0.0069122314453125, 0.145751953125, 0.00487518310546875, 0.0007405281066894531, 0.08612060546875, 0.0017118453979492188, 0.004840850830078125, 0.0057830810546875, 0.030517578125, 0.01561737060546875, 0.0013332366943359375, 0.2978515625, 0.00031638145446777344, 0.0004062652587890625, 0.00954437255859375, 4.398822784423828e-05, 0.00426483154296875, 0.0282745361328125, 0.00916290283203125, 0.01116943359375, 0.00044345855712890625, 0.0015544891357421875, 0.033355712890625, 0.0003960132598876953, 0.052093505859375, 0.014129638671875, 0.0017137527465820312, 0.00012922286987304688, 0.13671875, 0.025665283203125, 0.00020694732666015625, 0.0168914794921875, 0.0006642341613769531, 0.049407958984375, 0.00023746490478515625, 1.6748046875, 0.00365447998046875], "tokens": [528, 320, 2368, 308, 15095, 27154, 484, 27, 301, 715, 434, 458, 883, 1330, 7292, 32, 20683, 622, 312, 7337, 3756, 4174, 715, 434, 1422, 312, 6091, 3756, 328, 1135, 322, 26639, 11183, 32, 715, 1422, 537, 11540, 924, 440, 10203, 8956, 27154, 724, 528, 320, 400, 320, 324, 320, 291, 320]}
{"line_number": 152, "line_type": "original", "code": "        return getRegistry().contains(new IDKey(value));", "entropy": 1.263671875, "is_bug_line": true, "sus_score": 0.35355339059327373, "per_token_entropy": [5.26171875, 3.109375, 3.95703125, 0.548828125, 0.2001953125, 2.28515625, 0.0185394287109375, 0.21728515625, 0.037109375, 0.00046563148498535156, 0.0259246826171875, 0.6591796875, 0.10693359375], "tokens": [351, 442, 622, 5378, 922, 4752, 26, 890, 2484, 953, 26, 853, 876]}
{"line_number": 152, "line_type": "generated", "code": "\n     * Returns the hash code value for the specified object.\n     * </p>\n     * \n     * @param obj\n     *            the object for which to calculate the hash code\n     * @return hash code value for the specified object.\n     * @see", "entropy": 0.3369140625, "is_bug_line": true, "sus_score": 0.35355339059327373, "per_token_entropy": [0.84716796875, 0.0251007080078125, 2.123046875, 1.2333984375, 0.07696533203125, 0.214111328125, 0.935546875, 0.02886962890625, 0.0283203125, 0.5234375, 0.01030731201171875, 0.1982421875, 0.2548828125, 0.018463134765625, 0.199951171875, 0.00018858909606933594, 0.005550384521484375, 0.09759521484375, 0.00130462646484375, 0.40234375, 0.00011730194091796875, 0.9296875, 0.016021728515625, 1.29296875, 0.046051025390625, 0.00011336803436279297, 0.002826690673828125, 0.0706787109375, 0.034759521484375, 0.486083984375, 0.0018453598022460938, 0.006916046142578125, 1.251953125, 0.335693359375, 0.0012922286987304688, 0.08465576171875, 0.017791748046875, 0.0003516674041748047, 0.00543212890625, 0.350830078125, 1.7099609375, 0.041748046875, 0.74169921875, 0.0015544891357421875, 0.408203125, 0.4404296875, 0.00010907649993896484, 0.82421875, 0.00714111328125, 0.5048828125, 0.047088623046875, 0.634765625], "tokens": [275, 319, 3759, 322, 3677, 1340, 786, 436, 322, 3191, 1300, 32, 275, 319, 576, 98, 48, 275, 319, 5384, 319, 477, 753, 2830, 275, 319, 1468, 322, 1300, 436, 1510, 372, 9169, 322, 3677, 1340, 275, 319, 477, 601, 3677, 1340, 786, 436, 322, 3191, 1300, 32, 275, 319, 477, 2970]}
{"line_number": 173, "line_type": "original", "code": "        if (isRegistered(object)) {", "entropy": 1.35546875, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [3.888671875, 3.083984375, 0.12017822265625, 3.84765625, 0.0029582977294921875, 0.012420654296875, 0.9072265625, 0.01441192626953125, 0.320556640625], "tokens": [351, 415, 308, 297, 17527, 26, 1473, 490, 301]}
{"line_number": 173, "line_type": "generated", "code": "\n     * </p>\n     * \n     * @param object\n     *            the object to create a <code>hashCode</code> for\n     * @param initialNonZeroOddNumber\n     *            a non-zero, odd number used as the initial value", "entropy": 0.09478759765625, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [0.490966796875, 0.10943603515625, 0.22802734375, 0.00858306884765625, 0.0020809173583984375, 0.04107666015625, 0.0026302337646484375, 0.03729248046875, 0.0011320114135742188, 0.38916015625, 0.08709716796875, 0.453125, 0.017181396484375, 5.6862831115722656e-05, 0.0066070556640625, 0.390380859375, 0.0557861328125, 0.0014867782592773438, 0.01067352294921875, 0.01360321044921875, 0.1527099609375, 0.0007147789001464844, 3.528594970703125e-05, 0.028411865234375, 0.00023877620697021484, 4.0411949157714844e-05, 5.125999450683594e-06, 0.0024738311767578125, 0.084228515625, 0.00036334991455078125, 0.0021495819091796875, 0.03924560546875, 1.216796875, 0.0048065185546875, 0.0006427764892578125, 0.0007352828979492188, 0.0020122528076171875, 0.0048370361328125, 7.092952728271484e-05, 0.01177215576171875, 0.06488037109375, 0.0283050537109375, 0.358154296875, 6.783008575439453e-05, 0.01148223876953125, 9.894371032714844e-06, 0.013427734375, 0.417236328125, 0.07177734375, 0.0203857421875, 0.036407470703125, 0.00829315185546875], "tokens": [275, 319, 576, 98, 48, 275, 319, 5384, 319, 477, 753, 1300, 275, 319, 1468, 322, 1300, 372, 1487, 312, 333, 687, 48, 14948, 377, 687, 48, 436, 275, 319, 477, 753, 2815, 3910, 8039, 40324, 1918, 275, 319, 1468, 312, 2979, 31, 6158, 30, 17859, 1451, 1654, 619, 322, 2815, 786]}
{"line_number": 177, "line_type": "original", "code": "            register(object);", "entropy": 2.841796875, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [2.599609375, 10.21875, 0.05999755859375, 1.2978515625, 0.0367431640625], "tokens": [1468, 3909, 26, 1473, 293]}
{"line_number": 177, "line_type": "generated", "code": "\n     * @param multiplierNonZeroOddNumber\n     *            a non-zero, odd number used as the multiplier\n     * @param useTransients\n     *            whether to use transient fields\n     * @param excludeFields\n     *            Collection of String field names", "entropy": 0.09112548828125, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [1.08984375, 0.05743408203125, 0.1259765625, 0.0142822265625, 0.053314208984375, 0.007755279541015625, 3.457069396972656e-05, 0.0005898475646972656, 0.0005936622619628906, 0.00460052490234375, 4.9114227294921875e-05, 0.0015811920166015625, 0.0017023086547851562, 0.000507354736328125, 0.0006222724914550781, 0.00011348724365234375, 0.00025725364685058594, 1.8715858459472656e-05, 0.0005035400390625, 0.0141448974609375, 0.0004119873046875, 0.0007777214050292969, 0.003662109375, 0.89013671875, 0.0037097930908203125, 0.00927734375, 0.5458984375, 1.283203125, 0.00809478759765625, 7.748603820800781e-06, 0.007457733154296875, 3.8504600524902344e-05, 0.0007066726684570312, 0.038818359375, 0.0020122528076171875, 0.1282958984375, 0.0038909912109375, 0.0002892017364501953, 0.11871337890625, 0.00045418739318847656, 0.0016298294067382812, 0.06787109375, 0.0946044921875, 0.0035572052001953125, 0.00734710693359375, 3.445148468017578e-05, 0.0011835098266601562, 0.1134033203125, 0.0005121231079101562, 0.026519775390625, 0.0030040740966796875, 0.0003452301025390625], "tokens": [275, 319, 477, 753, 30266, 3910, 8039, 40324, 1918, 275, 319, 1468, 312, 2979, 31, 6158, 30, 17859, 1451, 1654, 619, 322, 30266, 275, 319, 477, 753, 793, 1776, 9092, 275, 319, 1468, 4946, 372, 793, 30183, 3829, 275, 319, 477, 753, 11246, 4140, 275, 319, 1468, 7376, 432, 892, 1600, 4467]}
{"line_number": 178, "line_type": "original", "code": "            Field[] fields = clazz.getDeclaredFields();", "entropy": 1.5302734375, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [1.89453125, 11.59375, 1.6123046875, 0.034942626953125, 0.050933837890625, 0.09808349609375, 0.004634857177734375, 0.0022602081298828125, 0.00044846534729003906, 0.013214111328125], "tokens": [1468, 5692, 1178, 3829, 280, 16503, 32, 36868, 4140, 473]}
{"line_number": 178, "line_type": "generated", "code": "            a non-zero, odd number used as the multiplier\n     * @param useTransients\n     *            whether to use transient fields\n     * @param excludeFields", "entropy": 0.16015625, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [1.888671875, 0.0745849609375, 0.017669677734375, 0.0062408447265625, 0.0013294219970703125, 0.0005474090576171875, 1.6570091247558594e-05, 0.00028634071350097656, 0.039764404296875, 0.0010557174682617188, 0.00864410400390625, 0.006626129150390625, 0.381103515625, 0.012725830078125, 0.0242462158203125, 0.5908203125, 0.8486328125, 0.004428863525390625, 6.198883056640625e-06, 0.95166015625, 6.115436553955078e-05, 0.0006260871887207031, 0.0186920166015625, 0.0038928985595703125, 0.1571044921875, 0.0035800933837890625, 0.0002732276916503906, 0.07904052734375, 0.0005159378051757812, 0.001399993896484375, 0.0556640625, 0.10198974609375, 0.0025634765625], "tokens": [1468, 312, 2979, 31, 6158, 30, 17859, 1451, 1654, 619, 322, 30266, 275, 319, 477, 753, 793, 1776, 9092, 275, 319, 1468, 4946, 372, 793, 30183, 3829, 275, 319, 477, 753, 11246, 4140]}
{"line_number": 179, "line_type": "original", "code": "            AccessibleObject.setAccessible(fields, true);", "entropy": 1.2021484375, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [4.234375, 7.81640625, 1.0693359375, 0.0009851455688476562, 0.004657745361328125, 2.7179718017578125e-05, 0.0030689239501953125, 0.043243408203125, 0.0021686553955078125, 0.021087646484375, 0.033355712890625], "tokens": [1468, 8258, 1478, 959, 32, 45215, 26, 4151, 30, 861, 293]}
{"line_number": 179, "line_type": "generated", "code": "\n     * @return the calculated hash code\n     * @since 2.0\n     */\n    public static int reflectionHashCode(final int initialNonZeroOddNumber, final int multiplierNonZeroOddNumber) {\n        return reflectionHashCode(null, initialNonZero", "entropy": 0.2076416015625, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [1.029296875, 0.6806640625, 0.08245849609375, 0.22412109375, 1.0126953125, 1.38671875, 0.1053466796875, 0.0341796875, 0.073974609375, 0.38232421875, 0.0227508544921875, 0.42333984375, 0.0021190643310546875, 0.156005859375, 0.0011644363403320312, 0.95458984375, 0.11322021484375, 0.0826416015625, 0.0294647216796875, 0.71142578125, 0.6640625, 0.01389312744140625, 0.0020751953125, 0.0027179718017578125, 0.00850677490234375, 0.599609375, 0.177978515625, 0.00010943412780761719, 2.396106719970703e-05, 2.384185791015625e-06, 5.4836273193359375e-06, 4.649162292480469e-06, 0.0030918121337890625, 0.1029052734375, 0.0024967193603515625, 5.8770179748535156e-05, 9.28640365600586e-05, 4.887580871582031e-06, 3.8623809814453125e-05, 1.33514404296875e-05, 0.033599853515625, 0.012298583984375, 0.12255859375, 0.865234375, 0.0312347412109375, 0.00010704994201660156, 0.00304412841796875, 0.52734375, 0.0002295970916748047, 0.11810302734375, 4.887580871582031e-06, 4.410743713378906e-06], "tokens": [275, 319, 477, 601, 322, 16453, 3677, 1340, 275, 319, 477, 8119, 225, 36, 32, 34, 275, 569, 284, 562, 907, 629, 26158, 14947, 26, 3220, 629, 2815, 3910, 8039, 40324, 1918, 30, 1158, 629, 30266, 3910, 8039, 40324, 1918, 27, 301, 291, 442, 26158, 14947, 26, 1693, 30, 2815, 3910, 8039]}
{"line_number": 180, "line_type": "original", "code": "            for (Field field : fields) {", "entropy": 1.6669921875, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [1.93359375, 5.01953125, 1.33984375, 3.2109375, 0.029266357421875, 0.005413055419921875, 3.2578125, 0.032867431640625, 0.17236328125], "tokens": [1468, 436, 308, 1176, 1600, 499, 3829, 27, 301]}
{"line_number": 180, "line_type": "generated", "code": "        * @param excludeFields", "entropy": 0.68359375, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [1.8642578125, 0.888671875, 0.2437744140625, 0.8486328125, 0.2349853515625, 0.019805908203125], "tokens": [351, 319, 477, 753, 11246, 4140]}
{"line_number": 181, "line_type": "original", "code": "                if (!ArrayUtils.contains(excludeFields, field.getName())", "entropy": 1.7900390625, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [5.453125, 1.7490234375, 4.91015625, 7.390625, 0.01010894775390625, 0.00727081298828125, 2.740234375, 0.0654296875, 0.58642578125, 0.0386962890625, 0.00930023193359375, 0.990234375, 0.0232696533203125, 0.018829345703125, 2.85546875], "tokens": [2071, 415, 1429, 1261, 2755, 32, 4752, 26, 10444, 4140, 30, 1600, 32, 5165, 1157]}
{"line_number": 181, "line_type": "generated", "code": "\n     * @return the hash code\n     * @throws IllegalArgumentException\n     *             if the Object is <code>null</code>\n     */\n    public static int reflectionHashCode(int initialNonZeroOddNumber, int multiplierNonZeroOddNumber, Object object)", "entropy": 0.09930419921875, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [0.3447265625, 0.09344482421875, 0.025543212890625, 0.1751708984375, 0.9033203125, 0.1448974609375, 0.03326416015625, 0.349365234375, 0.06109619140625, 0.013824462890625, 0.76953125, 0.1121826171875, 0.006336212158203125, 7.545948028564453e-05, 0.001735687255859375, 0.007526397705078125, 0.0026950836181640625, 0.35107421875, 0.0224151611328125, 0.057159423828125, 0.00033283233642578125, 5.7220458984375e-06, 0.00046896934509277344, 0.0002524852752685547, 2.7060508728027344e-05, 0.0018377304077148438, 0.01094818115234375, 0.7333984375, 0.0207366943359375, 0.51611328125, 0.0271453857421875, 0.007110595703125, 0.0016870498657226562, 0.001880645751953125, 0.006595611572265625, 0.30859375, 8.07046890258789e-05, 4.76837158203125e-06, 2.0265579223632812e-06, 5.125999450683594e-06, 2.384185791015625e-06, 0.002315521240234375, 0.002285003662109375, 1.1205673217773438e-05, 9.34600830078125e-05, 1.9073486328125e-06, 2.3245811462402344e-05, 5.066394805908203e-05, 0.0003230571746826172, 0.031005859375, 0.005718231201171875, 0.01145172119140625], "tokens": [275, 319, 477, 601, 322, 3677, 1340, 275, 319, 477, 5117, 12137, 275, 319, 2407, 415, 322, 2194, 438, 333, 687, 48, 1693, 377, 687, 48, 275, 569, 284, 562, 907, 629, 26158, 14947, 26, 410, 2815, 3910, 8039, 40324, 1918, 30, 629, 30266, 3910, 8039, 40324, 1918, 30, 2194, 1300, 27]}
{"line_number": 186, "line_type": "original", "code": "                        Object fieldValue = field.get(object);", "entropy": 2.345703125, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [8.703125, 5.875, 11.03125, 0.07470703125, 0.042938232421875, 0.0455322265625, 0.0006642341613769531, 0.0008335113525390625, 0.006122589111328125, 0.0289459228515625, 0.005573272705078125], "tokens": [6797, 2194, 1600, 882, 280, 1600, 32, 371, 26, 1473, 293]}
{"line_number": 186, "line_type": "generated", "code": "\n    }", "entropy": 0.6728515625, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [1.236328125, 0.1094970703125], "tokens": [284, 320]}
{"line_number": 187, "line_type": "original", "code": "                        builder.append(fieldValue);", "entropy": 2.19921875, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [10.8984375, 3.462890625, 0.030914306640625, 0.08172607421875, 0.87841796875, 2.20703125, 0.003509521484375, 0.035003662109375], "tokens": [6797, 4906, 32, 1689, 26, 1495, 882, 293]}
{"line_number": 187, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [], "tokens": []}
{"line_number": 192, "line_type": "original", "code": "                    }", "entropy": 7.14453125, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [10.109375, 4.1796875], "tokens": [4696, 320]}
{"line_number": 192, "line_type": "generated", "code": "    /**\n     * <p>\n     * This method uses reflection to build a valid hash code.\n     * </p>\n     * \n     * <p>\n     * It uses <code>AccessibleObject.setAccessible</code> to gain access to private fields", "entropy": 0.068115234375, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [2.42578125, 0.73486328125, 0.0880126953125, 0.00033783912658691406, 0.016265869140625, 0.0004813671112060547, 0.000331878662109375, 0.002208709716796875, 7.152557373046875e-06, 0.015960693359375, 0.0007381439208984375, 0.0028018951416015625, 8.64267349243164e-05, 2.276897430419922e-05, 0.0005726814270019531, 0.0004911422729492188, 0.006011962890625, 0.0011968612670898438, 0.0011262893676757812, 0.157470703125, 0.027435302734375, 4.291534423828125e-05, 0.004787445068359375, 7.390975952148438e-05, 0.0003275871276855469, 0.005413055419921875, 4.2319297790527344e-05, 0.0318603515625, 3.4928321838378906e-05, 0.0027484893798828125, 0.0019931793212890625, 4.7206878662109375e-05, 0.0013074874877929688, 8.463859558105469e-06, 0.003429412841796875, 8.45193862915039e-05, 0.0028629302978515625, 0.00014281272888183594, 7.37905502319336e-05, 0.00021255016326904297, 8.940696716308594e-06, 6.0439109802246094e-05, 0.0007371902465820312, 3.314018249511719e-05, 5.960464477539062e-07, 2.5153160095214844e-05, 0.0005197525024414062, 0.00019741058349609375, 5.364418029785156e-06, 0.0003063678741455078, 0.00010538101196289062, 0.0008020401000976562], "tokens": [264, 1022, 275, 319, 333, 98, 48, 275, 319, 1348, 1411, 5251, 26158, 372, 1968, 312, 2080, 3677, 1340, 32, 275, 319, 576, 98, 48, 275, 319, 5384, 319, 333, 98, 48, 275, 319, 2030, 5251, 333, 687, 48, 20822, 959, 32, 45215, 377, 687, 48, 372, 19287, 2857, 372, 945, 3829]}
{"line_number": 196, "line_type": "original", "code": "            unregister(object);", "entropy": 4.09375, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [7.01953125, 13.1953125, 0.1168212890625, 0.1025390625, 0.0280914306640625], "tokens": [1468, 40610, 26, 1473, 293]}
{"line_number": 196, "line_type": "generated", "code": "\n     * <p>\n     * It uses <code>AccessibleObject.setAccessible</code> to gain access to private fields. This means that it will\n     * throw a security exception if run under a security manager, if the permissions are not set up correctly", "entropy": 0.053375244140625, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [0.442626953125, 0.174560546875, 0.71533203125, 0.03814697265625, 0.00048351287841796875, 0.00911712646484375, 0.00012958049774169922, 1.3359375, 0.0007538795471191406, 0.005901336669921875, 0.0003304481506347656, 0.00015485286712646484, 0.0004572868347167969, 8.821487426757812e-06, 8.881092071533203e-05, 0.0008749961853027344, 5.424022674560547e-05, 6.318092346191406e-06, 7.367134094238281e-05, 0.0010623931884765625, 0.0004055500030517578, 2.3484230041503906e-05, 0.0004992485046386719, 0.0006051063537597656, 0.0015716552734375, 0.02337646484375, 0.004791259765625, 0.001922607421875, 0.0003314018249511719, 3.8504600524902344e-05, 0.0018568038940429688, 0.007266998291015625, 7.522106170654297e-05, 0.0002409219741821289, 2.491474151611328e-05, 0.00218963623046875, 1.8477439880371094e-05, 0.00016176700592041016, 0.0004096031188964844, 4.6372413635253906e-05, 0.00025081634521484375, 0.00010883808135986328, 0.00015878677368164062, 0.000728607177734375, 0.0001285076141357422, 0.00012993812561035156, 0.0008301734924316406, 7.987022399902344e-06, 3.063678741455078e-05, 0.0005488395690917969, 6.67572021484375e-06, 0.0001690387725830078], "tokens": [275, 319, 333, 98, 48, 275, 319, 2030, 5251, 333, 687, 48, 20822, 959, 32, 45215, 377, 687, 48, 372, 19287, 2857, 372, 945, 3829, 32, 1348, 6058, 688, 561, 1098, 275, 319, 1422, 312, 7663, 3756, 415, 1420, 1531, 312, 7663, 7884, 30, 415, 322, 4227, 884, 646, 739, 973, 8464]}
{"line_number": 197, "line_type": "original", "code": "        }", "entropy": 5.69140625, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [4.1328125, 7.25], "tokens": [351, 320]}
{"line_number": 197, "line_type": "generated", "code": "\n     * <p>\n     * Transient members will be not be used, as they are likely derived fields, and not part of the value of the\n     * <code>Object</code>.\n     * </p>\n     * \n     * <p>", "entropy": 0.089111328125, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [1.05078125, 0.0162811279296875, 1.7021484375, 0.158203125, 0.003307342529296875, 0.039825439453125, 0.0004646778106689453, 1.10546875, 0.0003838539123535156, 0.0008158683776855469, 0.000476837158203125, 0.01409149169921875, 0.401611328125, 0.0005555152893066406, 0.0011129379272460938, 0.006954193115234375, 0.001232147216796875, 0.00012111663818359375, 0.00014889240264892578, 0.0018835067749023438, 0.00018978118896484375, 0.00013148784637451172, 0.00028204917907714844, 0.000881195068359375, 0.00030803680419921875, 0.00022804737091064453, 4.410743713378906e-05, 0.00014328956604003906, 0.0010204315185546875, 0.000308990478515625, 0.0003330707550048828, 0.0183868408203125, 0.00015151500701904297, 0.01324462890625, 0.00011134147644042969, 7.987022399902344e-06, 0.00104522705078125, 0.0002435445785522461, 5.602836608886719e-06, 0.0019741058349609375, 0.037750244140625, 0.0003998279571533203, 0.00934600830078125, 0.00012803077697753906, 0.0017185211181640625, 0.0168914794921875, 0.0001512765884399414, 0.018646240234375, 0.00011169910430908203, 0.0035247802734375, 0.0004248619079589844, 0.00021374225616455078], "tokens": [275, 319, 333, 98, 48, 275, 319, 3556, 1606, 8999, 1098, 526, 646, 526, 1654, 30, 619, 2953, 884, 11353, 12005, 3829, 30, 461, 646, 1742, 432, 322, 786, 432, 322, 275, 319, 333, 687, 48, 959, 377, 687, 4503, 275, 319, 576, 98, 48, 275, 319, 5384, 319, 333, 98, 48]}
{"line_number": 198, "line_type": "original", "code": "    }", "entropy": 4.078125, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [3.123046875, 5.03515625], "tokens": [264, 320]}
{"line_number": 198, "line_type": "generated", "code": "\n     * throw a security exception if run under a security manager, if the permissions are not set up correctly. It is\n     * also not as efficient as testing explicitly.\n     * </p>\n     * \n     * <p>\n     * If the TestTrans", "entropy": 0.0254669189453125, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [0.919921875, 0.0179443359375, 0.0159912109375, 0.001068115234375, 0.002262115478515625, 6.61611557006836e-05, 0.000812530517578125, 0.0010232925415039062, 0.0004570484161376953, 0.0010118484497070312, 0.0005831718444824219, 0.0007276535034179688, 0.0012502670288085938, 0.0008716583251953125, 0.0017652511596679688, 0.0108795166015625, 3.135204315185547e-05, 0.0004527568817138672, 0.007843017578125, 0.00012743473052978516, 0.0031280517578125, 0.003810882568359375, 0.01430511474609375, 0.002674102783203125, 0.101318359375, 0.00027489662170410156, 0.0004603862762451172, 0.0003104209899902344, 0.0012559890747070312, 0.0007700920104980469, 0.000244140625, 1.800060272216797e-05, 6.532669067382812e-05, 0.0011882781982421875, 0.019287109375, 0.0007109642028808594, 0.00670623779296875, 0.00041604042053222656, 0.0014238357543945312, 0.00800323486328125, 8.83340835571289e-05, 0.00978851318359375, 3.218650817871094e-05, 0.006519317626953125, 0.002361297607421875, 0.00023663043975830078, 0.0020122528076171875, 3.5643577575683594e-05, 0.046722412109375, 0.021026611328125, 0.021331787109375, 0.06292724609375], "tokens": [275, 319, 1422, 312, 7663, 3756, 415, 1420, 1531, 312, 7663, 7884, 30, 415, 322, 4227, 884, 646, 739, 973, 8464, 32, 2030, 438, 275, 319, 2329, 646, 619, 17457, 619, 6325, 13413, 32, 275, 319, 576, 98, 48, 275, 319, 5384, 319, 333, 98, 48, 275, 319, 1670, 322, 2108, 1776]}
{"line_number": 360, "line_type": "original", "code": "        Class<?> clazz = object.getClass();", "entropy": 1.263671875, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [4.9375, 6.01171875, 0.21875, 0.184814453125, 0.005611419677734375, 0.0089874267578125, 0.0017852783203125, 0.0008502006530761719, 0.0075225830078125], "tokens": [351, 1709, 11674, 16503, 280, 1300, 32, 9700, 473]}
{"line_number": 360, "line_type": "generated", "code": "\n     * </p>\n     * \n     * <p>\n     * It uses <code>AccessibleObject.setAccessible</code> to gain access to private fields. This means that it will\n     * throw a security exception if run under a security manager, if", "entropy": 0.007965087890625, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [0.10223388671875, 0.007213592529296875, 0.223388671875, 0.0020389556884765625, 0.001956939697265625, 0.020782470703125, 8.308887481689453e-05, 0.01439666748046875, 0.00010192394256591797, 0.008270263671875, 0.0013914108276367188, 0.00023686885833740234, 0.00684356689453125, 6.592273712158203e-05, 0.0147705078125, 7.331371307373047e-05, 0.0009708404541015625, 0.00019633769989013672, 2.6464462280273438e-05, 0.00011920928955078125, 1.3709068298339844e-05, 2.5987625122070312e-05, 0.0002613067626953125, 1.3113021850585938e-05, 2.205371856689453e-05, 8.821487426757812e-06, 0.0002498626708984375, 1.5854835510253906e-05, 4.553794860839844e-05, 7.259845733642578e-05, 4.8995018005371094e-05, 0.0004608631134033203, 0.0030059814453125, 0.0013275146484375, 0.00010251998901367188, 2.8371810913085938e-05, 9.775161743164062e-06, 0.00046372413635253906, 0.00164794921875, 2.5391578674316406e-05, 5.7220458984375e-05, 1.5497207641601562e-05, 0.00028586387634277344, 1.239776611328125e-05, 0.0001074075698852539, 9.250640869140625e-05, 2.4437904357910156e-05, 0.0001302957534790039, 2.396106719970703e-05, 1.5974044799804688e-05, 0.000255584716796875, 5.3048133850097656e-05], "tokens": [275, 319, 576, 98, 48, 275, 319, 5384, 319, 333, 98, 48, 275, 319, 2030, 5251, 333, 687, 48, 20822, 959, 32, 45215, 377, 687, 48, 372, 19287, 2857, 372, 945, 3829, 32, 1348, 6058, 688, 561, 1098, 275, 319, 1422, 312, 7663, 3756, 415, 1420, 1531, 312, 7663, 7884, 30, 415]}
{"line_number": 361, "line_type": "original", "code": "        reflectionAppend(object, clazz, builder, testTransients, excludeFields);", "entropy": 1.0595703125, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [5.390625, 7.015625, 0.74462890625, 0.0116424560546875, 0.1138916015625, 0.00385284423828125, 3.4140625, 0.003528594970703125, 0.01415252685546875, 0.04400634765625, 1.0869140625, 0.00033473968505859375, 1.1920928955078125e-07, 0.08172607421875, 0.06317138671875, 0.0014371871948242188, 0.0213165283203125], "tokens": [351, 26158, 6551, 26, 1473, 30, 16503, 30, 4906, 30, 894, 1776, 9092, 30, 11246, 4140, 293]}
{"line_number": 361, "line_type": "generated", "code": "\n     * <p>\n     * It uses <code>AccessibleObject.setAccessible</code> to gain access to private fields. This means that it will\n     * throw a security exception if run under a security manager, if the permissions are not set up correctly", "entropy": 0.0188446044921875, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [0.07244873046875, 0.00386810302734375, 0.7841796875, 0.033447265625, 0.0011396408081054688, 0.008270263671875, 7.939338684082031e-05, 0.062255859375, 0.00044918060302734375, 0.0014371871948242188, 0.00041604042053222656, 3.349781036376953e-05, 0.00015819072723388672, 1.1444091796875e-05, 2.5987625122070312e-05, 0.00013124942779541016, 1.1920928955078125e-05, 1.1205673217773438e-05, 1.1682510375976562e-05, 0.0001741647720336914, 2.372264862060547e-05, 5.412101745605469e-05, 9.894371032714844e-05, 9.751319885253906e-05, 0.00032830238342285156, 0.005283355712890625, 0.0009412765502929688, 8.666515350341797e-05, 4.8279762268066406e-05, 1.239776611328125e-05, 0.0004982948303222656, 0.0022754669189453125, 3.8623809814453125e-05, 8.928775787353516e-05, 1.52587890625e-05, 0.0002512931823730469, 1.6689300537109375e-05, 5.984306335449219e-05, 0.00010764598846435547, 1.4781951904296875e-05, 6.330013275146484e-05, 2.1576881408691406e-05, 1.0013580322265625e-05, 0.00025653839111328125, 5.173683166503906e-05, 3.719329833984375e-05, 0.00021088123321533203, 5.602836608886719e-06, 2.9802322387695312e-05, 0.00010323524475097656, 2.2649765014648438e-06, 4.398822784423828e-05], "tokens": [275, 319, 333, 98, 48, 275, 319, 2030, 5251, 333, 687, 48, 20822, 959, 32, 45215, 377, 687, 48, 372, 19287, 2857, 372, 945, 3829, 32, 1348, 6058, 688, 561, 1098, 275, 319, 1422, 312, 7663, 3756, 415, 1420, 1531, 312, 7663, 7884, 30, 415, 322, 4227, 884, 646, 739, 973, 8464]}
{"line_number": 362, "line_type": "original", "code": "        while (clazz.getSuperclass() != null && clazz != reflectUpToClass) {", "entropy": 0.9580078125, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [5.1640625, 7.671875, 0.0880126953125, 0.32568359375, 4.375, 0.0384521484375, 0.00017535686492919922, 0.0023956298828125, 0.0008873939514160156, 3.993511199951172e-05, 0.0194091796875, 0.54931640625, 0.07769775390625, 0.00478363037109375, 0.58203125, 0.00020766258239746094, 9.143352508544922e-05, 1.9073486328125e-05, 0.0291748046875, 0.2293701171875], "tokens": [351, 2218, 308, 20966, 32, 371, 11069, 823, 346, 863, 744, 962, 16503, 863, 10225, 1386, 705, 1339, 27, 301]}
{"line_number": 362, "line_type": "generated", "code": "\n     * <p>\n     * It uses <code>AccessibleObject.setAccessible</code> to gain access to private fields. This means that it will\n     * throw a security exception if run under a security manager, if the permissions are not set up correctly", "entropy": 0.0163421630859375, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [0.133544921875, 0.01065826416015625, 0.54345703125, 0.024749755859375, 0.0005922317504882812, 0.0081024169921875, 0.00011038780212402344, 0.11602783203125, 0.0003788471221923828, 0.0011415481567382812, 0.0002741813659667969, 2.6702880859375e-05, 9.548664093017578e-05, 1.3232231140136719e-05, 2.3126602172851562e-05, 8.308887481689453e-05, 1.1444091796875e-05, 1.1324882507324219e-05, 8.940696716308594e-06, 0.00012493133544921875, 1.728534698486328e-05, 5.900859832763672e-05, 5.9604644775390625e-05, 6.92605972290039e-05, 0.00022709369659423828, 0.0043487548828125, 0.0009002685546875, 6.771087646484375e-05, 3.910064697265625e-05, 1.0013580322265625e-05, 0.00044465065002441406, 0.00257110595703125, 6.449222564697266e-05, 0.0001398324966430664, 1.4781951904296875e-05, 0.00019216537475585938, 1.621246337890625e-05, 5.042552947998047e-05, 7.033348083496094e-05, 9.179115295410156e-06, 2.872943878173828e-05, 2.7418136596679688e-05, 6.556510925292969e-06, 0.0002238750457763672, 4.1961669921875e-05, 3.123283386230469e-05, 0.00016069412231445312, 5.602836608886719e-06, 2.3365020751953125e-05, 9.59634780883789e-05, 1.6689300537109375e-06, 3.612041473388672e-05], "tokens": [275, 319, 333, 98, 48, 275, 319, 2030, 5251, 333, 687, 48, 20822, 959, 32, 45215, 377, 687, 48, 372, 19287, 2857, 372, 945, 3829, 32, 1348, 6058, 688, 561, 1098, 275, 319, 1422, 312, 7663, 3756, 415, 1420, 1531, 312, 7663, 7884, 30, 415, 322, 4227, 884, 646, 739, 973, 8464]}
{"line_number": 363, "line_type": "original", "code": "            clazz = clazz.getSuperclass();", "entropy": 2.8359375, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [8.109375, 12.875, 0.197021484375, 4.26953125, 0.0011720657348632812, 0.0009937286376953125, 0.0002505779266357422, 0.0027618408203125, 0.06622314453125], "tokens": [1468, 16503, 280, 16503, 32, 371, 11069, 823, 473]}
{"line_number": 363, "line_type": "generated", "code": "\n     * It uses <code>AccessibleObject.setAccessible</code> to gain access to private fields. This means that it will\n     * throw a security exception if run under a security manager, if the permissions are not set up correctly. It is\n     *", "entropy": 0.01367950439453125, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [0.2110595703125, 0.00424957275390625, 0.4677734375, 0.00109100341796875, 0.00328826904296875, 0.0007948875427246094, 9.381771087646484e-05, 0.00025725364685058594, 2.110004425048828e-05, 4.398822784423828e-05, 0.0002319812774658203, 1.3709068298339844e-05, 5.269050598144531e-05, 1.9311904907226562e-05, 0.0003380775451660156, 5.3048133850097656e-05, 0.00023233890533447266, 0.0001341104507446289, 0.00023567676544189453, 0.00019812583923339844, 0.0031566619873046875, 0.0020084381103515625, 0.0002238750457763672, 0.00011265277862548828, 2.7179718017578125e-05, 0.000823974609375, 0.0074005126953125, 7.045269012451172e-05, 0.0004279613494873047, 3.0159950256347656e-05, 0.0003924369812011719, 2.1338462829589844e-05, 6.246566772460938e-05, 0.00013959407806396484, 1.5974044799804688e-05, 5.900859832763672e-05, 3.516674041748047e-05, 2.2292137145996094e-05, 0.00040793418884277344, 8.094310760498047e-05, 7.152557373046875e-05, 0.00028014183044433594, 7.033348083496094e-06, 1.7642974853515625e-05, 0.00018262863159179688, 2.6226043701171875e-06, 6.127357482910156e-05, 0.0004634857177734375, 0.0023021697998046875, 0.0007190704345703125, 0.0017185211181640625, 4.7326087951660156e-05], "tokens": [275, 319, 2030, 5251, 333, 687, 48, 20822, 959, 32, 45215, 377, 687, 48, 372, 19287, 2857, 372, 945, 3829, 32, 1348, 6058, 688, 561, 1098, 275, 319, 1422, 312, 7663, 3756, 415, 1420, 1531, 312, 7663, 7884, 30, 415, 322, 4227, 884, 646, 739, 973, 8464, 32, 2030, 438, 275, 319]}
{"line_number": 364, "line_type": "original", "code": "            reflectionAppend(object, clazz, builder, testTransients, excludeFields);", "entropy": 1.94140625, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [7.89453125, 18.359375, 0.7802734375, 0.19091796875, 0.119140625, 0.01049041748046875, 3.99609375, 0.0030078887939453125, 0.03033447265625, 0.051483154296875, 1.345703125, 0.0006060600280761719, 5.960464477539062e-07, 0.06439208984375, 0.12152099609375, 0.0012874603271484375, 0.02606201171875], "tokens": [1468, 26158, 6551, 26, 1473, 30, 16503, 30, 4906, 30, 894, 1776, 9092, 30, 11246, 4140, 293]}
{"line_number": 364, "line_type": "generated", "code": "\n     * throw a security exception if run under a security manager, if the permissions are not set up correctly. It is\n     * also not as efficient as testing explicitly.\n     * </p>\n     * \n     * <p>\n     * If the TestTrans", "entropy": 0.018951416015625, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [0.3837890625, 0.00482177734375, 0.012847900390625, 0.0016155242919921875, 0.0011768341064453125, 6.854534149169922e-05, 0.0005512237548828125, 0.00048041343688964844, 0.0003361701965332031, 0.0005040168762207031, 0.0006031990051269531, 0.0002779960632324219, 0.0011587142944335938, 0.0007457733154296875, 0.0012311935424804688, 0.0031299591064453125, 2.5510787963867188e-05, 0.00033020973205566406, 0.0038967132568359375, 9.167194366455078e-05, 0.0018682479858398438, 0.0028324127197265625, 0.0155029296875, 0.004467010498046875, 0.032928466796875, 0.00016641616821289062, 0.00028634071350097656, 9.822845458984375e-05, 0.0003745555877685547, 0.00022983551025390625, 7.426738739013672e-05, 1.430511474609375e-05, 4.780292510986328e-05, 0.00038123130798339844, 0.01291656494140625, 0.0010042190551757812, 0.00421142578125, 0.0002884864807128906, 0.0005512237548828125, 0.004497528076171875, 4.7326087951660156e-05, 0.004852294921875, 4.00543212890625e-05, 0.00946807861328125, 0.00101470947265625, 0.0002598762512207031, 0.00630950927734375, 6.890296936035156e-05, 0.427490234375, 0.0011224746704101562, 0.0301361083984375, 0.004306793212890625], "tokens": [275, 319, 1422, 312, 7663, 3756, 415, 1420, 1531, 312, 7663, 7884, 30, 415, 322, 4227, 884, 646, 739, 973, 8464, 32, 2030, 438, 275, 319, 2329, 646, 619, 17457, 619, 6325, 13413, 32, 275, 319, 576, 98, 48, 275, 319, 5384, 319, 333, 98, 48, 275, 319, 1670, 322, 2108, 1776]}
