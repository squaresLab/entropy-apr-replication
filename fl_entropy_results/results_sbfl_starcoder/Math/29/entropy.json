{"line_number": 361, "line_type": "original", "code": "        OpenMapRealVector res = new OpenMapRealVector(this);", "entropy": 0.9306640625, "is_bug_line": false, "sus_score": 0.6666666666666666, "per_token_entropy": [4.5234375, 3.173828125, 0.220703125, 0.011993408203125, 0.0010814666748046875, 4.83203125, 0.033172607421875, 0.43359375, 0.00390625, 0.0009560585021972656, 0.0004439353942871094, 0.0012073516845703125, 0.0220489501953125, 0.54052734375, 0.158447265625], "tokens": [351, 3927, 1208, 6877, 2863, 736, 280, 537, 3927, 1208, 6877, 2863, 26, 578, 293]}
{"line_number": 361, "line_type": "generated", "code": "\n     */\n    public double getL1Distance(OpenMapRealVector v) {\n        checkVectorDimensions(v.getDimension());\n        double sum = 0;\n        Iterator iter = entries.iterator();\n        while (iter.hasNext()) {\n            iter", "entropy": 0.0986328125, "is_bug_line": false, "sus_score": 0.6666666666666666, "per_token_entropy": [0.302001953125, 0.08587646484375, 0.03369140625, 0.07281494140625, 0.01271820068359375, 0.07647705078125, 0.40869140625, 0.00839996337890625, 0.00909423828125, 0.0010366439819335938, 0.041290283203125, 0.000560760498046875, 6.890296936035156e-05, 9.5367431640625e-07, 0.00016701221466064453, 0.0032176971435546875, 0.0156707763671875, 0.07659912109375, 0.1658935546875, 0.0011463165283203125, 0.0006575584411621094, 0.0012903213500976562, 0.0019178390502929688, 0.0038604736328125, 0.0037384033203125, 2.276897430419922e-05, 0.0012559890747070312, 0.1204833984375, 0.77490234375, 0.716796875, 0.013397216796875, 0.0028400421142578125, 0.00033736228942871094, 0.346923828125, 0.048492431640625, 0.68408203125, 0.08673095703125, 0.11749267578125, 0.2064208984375, 0.0002371072769165039, 0.0184173583984375, 0.0013799667358398438, 0.01552581787109375, 0.255859375, 0.33984375, 0.0007967948913574219, 0.00011181831359863281, 0.0004794597625732422, 0.0022296905517578125, 0.00156402587890625, 0.0338134765625, 0.01293182373046875], "tokens": [275, 569, 284, 562, 2064, 622, 62, 35, 8457, 26, 2961, 1208, 6877, 2863, 354, 27, 301, 291, 1505, 2863, 16485, 26, 104, 32, 371, 9883, 1035, 291, 2064, 3632, 280, 225, 34, 45, 291, 14743, 3850, 280, 8036, 32, 5162, 473, 291, 2218, 308, 1731, 32, 16421, 1157, 301, 324, 3850]}
{"line_number": 362, "line_type": "original", "code": "        Iterator iter = entries.iterator();", "entropy": 1.421875, "is_bug_line": false, "sus_score": 0.6666666666666666, "per_token_entropy": [5.75, 4.60546875, 0.276611328125, 0.140869140625, 0.580078125, 0.0022945404052734375, 0.01238250732421875, 0.007801055908203125], "tokens": [351, 14743, 3850, 280, 8036, 32, 5162, 473]}
{"line_number": 362, "line_type": "generated", "code": "\n    public double getL1Distance(OpenMapRealVector v) {\n        checkVectorDimensions(v.getDimension());\n        boolean thisIsSmaller  = entries.size() < v.entries.size();\n        Iterator iter = thisIsSmaller", "entropy": 0.0721435546875, "is_bug_line": false, "sus_score": 0.6666666666666666, "per_token_entropy": [0.133544921875, 0.109375, 0.01456451416015625, 0.0555419921875, 0.475341796875, 0.00754547119140625, 0.0113525390625, 0.0015106201171875, 0.06591796875, 0.0009431838989257812, 0.00011479854583740234, 2.384185791015625e-06, 0.0002503395080566406, 0.003620147705078125, 0.0364990234375, 0.1051025390625, 0.2122802734375, 0.0014028549194335938, 0.0007295608520507812, 0.0019044876098632812, 0.0014944076538085938, 0.004138946533203125, 0.006214141845703125, 4.9948692321777344e-05, 0.00156402587890625, 0.1251220703125, 1.45703125, 0.0235137939453125, 0.0038928985595703125, 0.00782012939453125, 0.0007925033569335938, 0.36376953125, 1.919269561767578e-05, 0.047088623046875, 0.00019669532775878906, 0.0002484321594238281, 0.00012540817260742188, 0.005771636962890625, 0.0014791488647460938, 0.0001347064971923828, 0.0038166046142578125, 0.00015366077423095703, 0.0009331703186035156, 0.0003066062927246094, 0.007640838623046875, 0.40625, 0.027587890625, 0.01134490966796875, 0.002685546875, 0.0012292861938476562, 3.5881996154785156e-05, 5.245208740234375e-06], "tokens": [284, 562, 2064, 622, 62, 35, 8457, 26, 2961, 1208, 6877, 2863, 354, 27, 301, 291, 1505, 2863, 16485, 26, 104, 32, 371, 9883, 1035, 291, 1905, 458, 1622, 12470, 265, 225, 280, 8036, 32, 891, 346, 333, 354, 32, 9150, 32, 891, 473, 291, 14743, 3850, 280, 458, 1622, 12470, 265]}
{"line_number": 363, "line_type": "original", "code": "        while (iter.hasNext()) {", "entropy": 1.484375, "is_bug_line": true, "sus_score": 0.6666666666666666, "per_token_entropy": [4.93359375, 5.58984375, 0.366943359375, 0.369873046875, 0.385986328125, 0.05841064453125, 0.08526611328125, 0.08685302734375], "tokens": [351, 2218, 308, 1731, 32, 16421, 1157, 301]}
{"line_number": 363, "line_type": "generated", "code": "\n        return Math.sqrt(getNorm(OrderOfMagnitude.EXPONENT) * getNorm(OrderOfMagnitude.EXPONENT) +\n                         v.getNorm(OrderOfMagnitude.EXPONENT) * v.getNorm(OrderOfMagnitude.EXP", "entropy": 0.312744140625, "is_bug_line": true, "sus_score": 0.6666666666666666, "per_token_entropy": [0.23876953125, 1.5390625, 0.55712890625, 0.275146484375, 0.038848876953125, 0.063720703125, 1.5634765625, 1.703125, 1.0986328125, 2.755859375, 0.1956787109375, 0.103759765625, 0.012298583984375, 2.03515625, 0.0145263671875, 0.6318359375, 0.5234375, 0.349853515625, 0.0019702911376953125, 0.006015777587890625, 0.01160430908203125, 4.673004150390625e-05, 9.608268737792969e-05, 0.0012063980102539062, 0.00203704833984375, 1.6927719116210938e-05, 0.033660888671875, 0.7177734375, 1.587890625, 0.08184814453125, 0.003574371337890625, 0.003574371337890625, 0.0005764961242675781, 0.01010894775390625, 0.0008802413940429688, 3.5762786865234375e-05, 2.5033950805664062e-05, 4.6253204345703125e-05, 0.0002841949462890625, 9.894371032714844e-06, 0.008941650390625, 0.0762939453125, 0.008697509765625, 5.8650970458984375e-05, 0.0003752708435058594, 3.7550926208496094e-05, 0.0008668899536132812, 0.0003788471221923828, 0.00024187564849853516, 1.2755393981933594e-05, 1.0728836059570312e-05, 0.00014507770538330078], "tokens": [291, 442, 4175, 32, 8663, 26, 371, 14373, 26, 2871, 1419, 45416, 32, 12275, 15284, 27, 319, 622, 14373, 26, 2871, 1419, 45416, 32, 12275, 15284, 27, 474, 656, 354, 32, 371, 14373, 26, 2871, 1419, 45416, 32, 12275, 15284, 27, 319, 354, 32, 371, 14373, 26, 2871, 1419, 45416, 32, 12275]}
{"line_number": 364, "line_type": "original", "code": "            iter.advance();", "entropy": 1.986328125, "is_bug_line": false, "sus_score": 0.6666666666666666, "per_token_entropy": [6.83984375, 2.73828125, 0.1474609375, 0.1551513671875, 0.04656982421875], "tokens": [1468, 3850, 32, 22545, 473]}
{"line_number": 364, "line_type": "generated", "code": "\n        double d = 0d;\n        while(iter.hasNext()) {\n            iter.advance();\n            double delta = v.getEntry(iter.key()) - iter.value();\n            d += delta * delta;\n        }\n        return Math.sqrt", "entropy": 0.1563720703125, "is_bug_line": false, "sus_score": 0.6666666666666666, "per_token_entropy": [0.09735107421875, 0.31640625, 1.3642578125, 0.10565185546875, 0.00933074951171875, 0.00029349327087402344, 1.337890625, 0.03546142578125, 0.059967041015625, 0.15673828125, 0.91748046875, 0.003963470458984375, 0.0003535747528076172, 0.002277374267578125, 0.006763458251953125, 0.0167999267578125, 0.111083984375, 0.023345947265625, 0.0001456737518310547, 0.0010128021240234375, 0.0024509429931640625, 0.088623046875, 0.84765625, 0.7197265625, 0.0110931396484375, 0.97607421875, 0.00041294097900390625, 0.120361328125, 0.0022296905517578125, 0.0023651123046875, 0.0002884864807128906, 0.00925445556640625, 0.01169586181640625, 0.006805419921875, 0.00408172607421875, 7.140636444091797e-05, 0.0004973411560058594, 0.001338958740234375, 0.08184814453125, 0.0606689453125, 0.0129547119140625, 0.024169921875, 0.018157958984375, 0.0006113052368164062, 0.0008144378662109375, 0.0200958251953125, 0.0012598037719726562, 0.04498291015625, 0.060028076171875, 0.427978515625, 0.003101348876953125, 0.0006890296936035156], "tokens": [291, 2064, 343, 280, 225, 34, 86, 45, 291, 2218, 26, 1731, 32, 16421, 1157, 301, 324, 3850, 32, 22545, 473, 324, 2064, 7715, 280, 354, 32, 48895, 26, 1731, 32, 678, 1157, 429, 3850, 32, 853, 473, 324, 343, 1454, 7715, 319, 7715, 45, 291, 320, 291, 442, 4175, 32, 8663]}
{"line_number": 365, "line_type": "original", "code": "            res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));", "entropy": 1.1103515625, "is_bug_line": false, "sus_score": 0.6666666666666666, "per_token_entropy": [5.58984375, 1.1923828125, 9.2578125, 3.0625, 0.1912841796875, 0.034088134765625, 0.8154296875, 0.00887298583984375, 0.032379150390625, 0.066650390625, 0.40283203125, 0.00021159648895263672, 0.025909423828125, 0.52685546875, 2.12109375, 1.8671875, 0.0291290283203125, 0.1905517578125, 0.0016775131225585938, 0.0170745849609375, 0.0002067089080810547, 0.0017375946044921875, 0.0947265625], "tokens": [1468, 736, 32, 470, 2711, 26, 1731, 32, 678, 1026, 3850, 32, 853, 346, 319, 354, 32, 48895, 26, 1731, 32, 678, 5073]}
{"line_number": 365, "line_type": "generated", "code": "\n        return FastMath.sqrt(res);\n    }\n\n    /**\n     * Optimized method to compute distance.\n     *\n     * @param v Vector to compute distance to.\n     * @return the distance from {@code this} and {@code v}.\n    ", "entropy": 0.0775146484375, "is_bug_line": false, "sus_score": 0.6666666666666666, "per_token_entropy": [0.191162109375, 0.419677734375, 1.6357421875, 0.0004551410675048828, 6.854534149169922e-05, 0.00446319580078125, 0.0081329345703125, 0.033233642578125, 0.0187225341796875, 0.0251617431640625, 0.0005769729614257812, 0.0609130859375, 0.0235443115234375, 0.736328125, 9.322166442871094e-05, 0.491455078125, 0.0004911422729492188, 0.0031604766845703125, 0.00476837158203125, 0.0197906494140625, 0.1910400390625, 0.0226287841796875, 0.007904052734375, 0.00021147727966308594, 0.02740478515625, 0.00010573863983154297, 0.003604888916015625, 0.0014505386352539062, 0.0036907196044921875, 0.00722503662109375, 0.0003325939178466797, 0.0010662078857421875, 0.00238800048828125, 0.0013132095336914062, 0.002857208251953125, 0.0007886886596679688, 4.601478576660156e-05, 0.0008935928344726562, 0.0230712890625, 0.005645751953125, 0.0030765533447265625, 0.00237274169921875, 0.0100860595703125, 0.00012671947479248047, 0.0005750656127929688, 0.0001647472381591797, 0.0247955322265625, 0.0008420944213867188, 2.2172927856445312e-05, 0.0005502700805664062, 0.003726959228515625, 0.0013742446899414062], "tokens": [291, 442, 15938, 5717, 32, 8663, 26, 575, 293, 284, 320, 446, 1022, 275, 319, 22994, 1191, 1411, 372, 7596, 7291, 32, 275, 319, 275, 319, 477, 753, 354, 4107, 372, 7596, 7291, 372, 32, 275, 319, 477, 601, 322, 7291, 645, 3088, 687, 458, 111, 461, 3088, 687, 354, 4009, 275]}
{"line_number": 374, "line_type": "original", "code": "        return res;", "entropy": 3.6015625, "is_bug_line": true, "sus_score": 0.6666666666666666, "per_token_entropy": [2.75, 8.5625, 3.078125, 0.0176544189453125], "tokens": [351, 442, 736, 45]}
{"line_number": 374, "line_type": "generated", "code": "\n        }\n        return Math.sqrt(res);\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public OpenMapRealVector mapAdd(RealVector v) {\n        checkVectorDimensions(v.getDimension());\n        OpenMapRealVector res =", "entropy": 0.114990234375, "is_bug_line": true, "sus_score": 0.6666666666666666, "per_token_entropy": [0.96826171875, 0.0258026123046875, 0.0704345703125, 0.054229736328125, 0.406982421875, 0.0022754669189453125, 0.001068115234375, 0.0007038116455078125, 0.0008068084716796875, 0.0018863677978515625, 0.045074462890625, 0.0015172958374023438, 0.19873046875, 0.022064208984375, 0.98583984375, 9.131431579589844e-05, 0.00027561187744140625, 0.0015916824340820312, 0.0087890625, 0.0037975311279296875, 0.0004458427429199219, 0.00506591796875, 0.0129547119140625, 1.4228515625, 0.001522064208984375, 0.00360870361328125, 0.00743865966796875, 0.23876953125, 0.833984375, 0.00197601318359375, 0.2176513671875, 0.038238525390625, 0.0153961181640625, 0.00647735595703125, 0.01407623291015625, 0.01351165771484375, 0.176025390625, 0.0016584396362304688, 0.00041866302490234375, 0.0005140304565429688, 0.0004019737243652344, 0.0062713623046875, 4.3392181396484375e-05, 1.8358230590820312e-05, 0.0007805824279785156, 0.0165863037109375, 0.0416259765625, 1.7404556274414062e-05, 5.233287811279297e-05, 4.780292510986328e-05, 0.0960693359375, 0.005626678466796875], "tokens": [291, 320, 291, 442, 4175, 32, 8663, 26, 575, 293, 284, 320, 446, 1022, 3088, 18446, 111, 569, 284, 477, 1788, 284, 562, 3927, 1208, 6877, 2863, 1992, 1103, 26, 6877, 2863, 354, 27, 301, 291, 1505, 2863, 16485, 26, 104, 32, 371, 9883, 1035, 291, 3927, 1208, 6877, 2863, 736, 280]}
{"line_number": 360, "line_type": "original", "code": "        checkVectorDimensions(v.getDimension());", "entropy": 0.875, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [3.802734375, 4.90234375, 0.0092315673828125, 0.00167083740234375, 0.0017404556274414062, 0.0023250579833984375, 0.0218353271484375, 0.0011453628540039062, 0.00029206275939941406, 0.00962066650390625], "tokens": [351, 1505, 2863, 16485, 26, 104, 32, 371, 9883, 1035]}
{"line_number": 360, "line_type": "generated", "code": "\n     */\n    public double getL1Distance(OpenMapRealVector v) {\n        checkVectorDimensions(v.getDimension());\n        double distance = 0;\n        Iterator iter = entries.iterator();\n        while (iter.hasNext()) {\n            iter", "entropy": 0.1312255859375, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [0.61328125, 0.1329345703125, 0.0162506103515625, 0.1051025390625, 0.00988006591796875, 0.07965087890625, 0.41943359375, 0.008392333984375, 0.0091094970703125, 0.0010366439819335938, 0.04034423828125, 0.0005087852478027344, 5.614757537841797e-05, 8.344650268554688e-07, 0.00015115737915039062, 0.003086090087890625, 0.01995849609375, 0.09075927734375, 0.2113037109375, 0.0016260147094726562, 0.0013151168823242188, 0.002716064453125, 0.0020294189453125, 0.007472991943359375, 0.0046234130859375, 2.2530555725097656e-05, 0.0015172958374023438, 0.07470703125, 0.8203125, 1.529296875, 0.06378173828125, 0.002895355224609375, 0.00022208690643310547, 0.5087890625, 0.047760009765625, 0.69091796875, 0.11328125, 0.1134033203125, 0.19873046875, 0.00019681453704833984, 0.0160064697265625, 0.0017337799072265625, 0.01201629638671875, 0.393798828125, 0.38720703125, 0.0007042884826660156, 0.00011610984802246094, 0.0004019737243652344, 0.0027141571044921875, 0.0014753341674804688, 0.05413818359375, 0.0081634521484375], "tokens": [275, 569, 284, 562, 2064, 622, 62, 35, 8457, 26, 2961, 1208, 6877, 2863, 354, 27, 301, 291, 1505, 2863, 16485, 26, 104, 32, 371, 9883, 1035, 291, 2064, 7291, 280, 225, 34, 45, 291, 14743, 3850, 280, 8036, 32, 5162, 473, 291, 2218, 308, 1731, 32, 16421, 1157, 301, 324, 3850]}
{"line_number": 592, "line_type": "original", "code": "            entries.remove(index);", "entropy": 2.443359375, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [6.0703125, 5.6796875, 0.1824951171875, 3.3671875, 0.295654296875, 1.423828125, 0.0960693359375], "tokens": [1468, 8036, 32, 2546, 26, 1055, 293]}
{"line_number": 592, "line_type": "generated", "code": "\n        return subtract((OpenMapRealVector) v);\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public OpenMapRealVector subtractFromEntry(int index, double value) {\n        checkIndex(index);\n        if (!isDefaultValue(value", "entropy": 0.1756591796875, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [0.75, 0.5732421875, 1.11328125, 0.56591796875, 0.01113128662109375, 0.0003695487976074219, 0.00027370452880859375, 0.0004353523254394531, 0.0024929046630859375, 0.06781005859375, 0.0108642578125, 0.0780029296875, 0.0013303756713867188, 0.086669921875, 0.01548004150390625, 0.5537109375, 5.4717063903808594e-05, 0.0002015829086303711, 0.0027008056640625, 0.007617950439453125, 0.0016527175903320312, 0.00039458274841308594, 0.0019779205322265625, 0.0093994140625, 0.266357421875, 0.00021016597747802734, 0.000843048095703125, 0.00054931640625, 0.185302734375, 1.1083984375, 0.67724609375, 0.0002694129943847656, 0.004337310791015625, 0.00542449951171875, 5.4001808166503906e-05, 0.0294342041015625, 0.369140625, 0.0014514923095703125, 0.0100250244140625, 0.0141754150390625, 0.328125, 0.00298309326171875, 0.00042819976806640625, 0.00011539459228515625, 0.00023376941680908203, 0.035125732421875, 1.451171875, 0.74560546875, 0.0267333984375, 0.00533294677734375, 0.0005383491516113281, 0.00689697265625], "tokens": [291, 442, 27799, 1162, 2961, 1208, 6877, 2863, 27, 354, 293, 284, 320, 446, 1022, 3088, 18446, 111, 569, 284, 477, 1788, 284, 562, 3927, 1208, 6877, 2863, 27799, 1792, 2711, 26, 410, 1650, 30, 2064, 786, 27, 301, 291, 1505, 1284, 26, 1055, 293, 291, 415, 1429, 297, 20035, 26, 853]}
{"line_number": 179, "line_type": "original", "code": "    public OpenMapRealVector(OpenMapRealVector v) {", "entropy": 1.1806640625, "is_bug_line": false, "sus_score": 0.42008402520840293, "per_token_entropy": [4.42578125, 6.94921875, 0.63818359375, 0.01160430908203125, 0.000659942626953125, 0.00201416015625, 2.767578125, 1.251953125, 0.086669921875, 0.004413604736328125, 0.0208740234375, 0.028045654296875, 0.0135650634765625, 0.326904296875], "tokens": [264, 562, 3927, 1208, 6877, 2863, 26, 2961, 1208, 6877, 2863, 354, 27, 301]}
{"line_number": 179, "line_type": "generated", "code": "\n        } else {\n            return new OpenMapRealVector(this).add(v);\n        }\n    }\n\n    /**\n     * Add a vector.\n     *\n     * @param v Vector to add.\n     * @return a new vector instance.\n     */", "entropy": 0.168701171875, "is_bug_line": false, "sus_score": 0.42008402520840293, "per_token_entropy": [0.22265625, 0.1640625, 0.3701171875, 0.2091064453125, 0.050506591796875, 0.430908203125, 1.072265625, 0.211181640625, 0.00489044189453125, 0.002086639404296875, 0.0001277923583984375, 0.012420654296875, 0.2127685546875, 0.0274658203125, 0.1925048828125, 0.036163330078125, 0.0032329559326171875, 0.0029773712158203125, 0.1195068359375, 0.0007476806640625, 0.1085205078125, 0.0004825592041015625, 0.11834716796875, 0.0251922607421875, 0.264404296875, 3.1113624572753906e-05, 0.8037109375, 1.0322265625, 0.15087890625, 0.517578125, 0.05194091796875, 0.0002963542938232422, 0.2200927734375, 5.519390106201172e-05, 0.012481689453125, 0.0004031658172607422, 0.002685546875, 0.20556640625, 0.0030670166015625, 0.2469482421875, 0.056304931640625, 0.00881195068359375, 0.001560211181640625, 0.0012311935424804688, 0.0010137557983398438, 0.12249755859375, 0.061248779296875, 0.136474609375, 0.174560546875, 1.0, 0.008758544921875, 0.0889892578125], "tokens": [291, 320, 813, 301, 324, 442, 537, 3927, 1208, 6877, 2863, 26, 578, 547, 669, 26, 104, 293, 291, 320, 284, 320, 446, 1022, 275, 319, 2222, 312, 4026, 32, 275, 319, 275, 319, 477, 753, 354, 4107, 372, 1015, 32, 275, 319, 477, 601, 312, 537, 4026, 1980, 32, 275, 569]}
{"line_number": 180, "line_type": "original", "code": "        virtualSize = v.getDimension();", "entropy": 2.06640625, "is_bug_line": false, "sus_score": 0.42008402520840293, "per_token_entropy": [3.9921875, 13.953125, 0.0791015625, 0.07080078125, 0.471435546875, 0.0012807846069335938, 0.0031452178955078125, 0.00019657611846923828, 0.021881103515625], "tokens": [351, 3501, 1250, 280, 354, 32, 371, 9883, 473]}
{"line_number": 180, "line_type": "generated", "code": "\n            return new OpenMapRealVector(this).add(v);\n        }\n    }\n\n    /**\n     * Add a vector.\n     *\n     * @param v Vector to be added.\n     * @return a new vector instance with the instance values added to", "entropy": 0.25, "is_bug_line": false, "sus_score": 0.42008402520840293, "per_token_entropy": [0.352294921875, 1.0283203125, 0.58642578125, 0.2037353515625, 0.0027484893798828125, 0.002597808837890625, 5.328655242919922e-05, 0.0180206298828125, 0.25146484375, 0.66015625, 1.103515625, 0.240478515625, 0.0073394775390625, 0.009490966796875, 0.0276336669921875, 0.0004024505615234375, 0.01448822021484375, 0.00019669532775878906, 0.10009765625, 0.030303955078125, 0.370849609375, 4.756450653076172e-05, 0.875, 0.955078125, 0.156005859375, 0.5859375, 0.0556640625, 0.0003516674041748047, 0.2169189453125, 3.3020973205566406e-05, 0.0127410888671875, 0.0004227161407470703, 0.002941131591796875, 0.2335205078125, 0.00321197509765625, 1.4443359375, 0.0001844167709350586, 0.1663818359375, 0.008697509765625, 0.002197265625, 0.0015773773193359375, 0.001056671142578125, 0.1568603515625, 0.06463623046875, 0.14697265625, 0.1337890625, 0.96044921875, 0.5380859375, 0.779296875, 0.1925048828125, 0.0755615234375, 0.2177734375], "tokens": [324, 442, 537, 3927, 1208, 6877, 2863, 26, 578, 547, 669, 26, 104, 293, 291, 320, 284, 320, 446, 1022, 275, 319, 2222, 312, 4026, 32, 275, 319, 275, 319, 477, 753, 354, 4107, 372, 526, 3640, 32, 275, 319, 477, 601, 312, 537, 4026, 1980, 623, 322, 1980, 2078, 3640, 372]}
{"line_number": 181, "line_type": "original", "code": "        entries = new OpenIntToDoubleHashMap(v.getEntries());", "entropy": 1.630859375, "is_bug_line": false, "sus_score": 0.42008402520840293, "per_token_entropy": [4.3515625, 8.609375, 0.36865234375, 0.6044921875, 0.08123779296875, 0.006656646728515625, 0.0006480216979980469, 0.0007982254028320312, 0.07928466796875, 3.724609375, 0.09564208984375, 0.392822265625, 4.4609375, 0.055145263671875], "tokens": [351, 8036, 280, 537, 3927, 1428, 40609, 8254, 26, 104, 32, 371, 9915, 1035]}
{"line_number": 181, "line_type": "generated", "code": "\n        }\n    }\n\n    /**\n     * Add another vector.\n     *\n     * @param v Vector to add.\n     * @return a new vector instance.\n     */\n    public OpenMapRealVector add(OpenMapRealVector v) {\n        checkVector", "entropy": 0.1451416015625, "is_bug_line": false, "sus_score": 0.42008402520840293, "per_token_entropy": [0.056243896484375, 0.0030364990234375, 0.0247955322265625, 0.00028514862060546875, 0.1072998046875, 0.049285888671875, 0.363525390625, 6.842613220214844e-05, 0.94140625, 1.244140625, 0.1253662109375, 0.33544921875, 0.0797119140625, 0.0003216266632080078, 0.25, 3.1948089599609375e-05, 0.0105743408203125, 0.0005812644958496094, 0.00421142578125, 0.2027587890625, 0.0017833709716796875, 0.146240234375, 0.1488037109375, 0.01251983642578125, 0.0012559890747070312, 0.00171661376953125, 0.00174713134765625, 0.1619873046875, 0.09869384765625, 0.14892578125, 0.1439208984375, 0.82666015625, 0.0117950439453125, 0.1270751953125, 0.005229949951171875, 0.64111328125, 0.08935546875, 0.0005025863647460938, 0.00010764598846435547, 7.867813110351562e-06, 0.0015687942504882812, 0.0006046295166015625, 0.007129669189453125, 2.4437904357910156e-05, 1.3828277587890625e-05, 0.0001271963119506836, 2.491474151611328e-05, 0.0004611015319824219, 0.004665374755859375, 0.0654296875, 1.0966796875, 0.00152587890625], "tokens": [291, 320, 284, 320, 446, 1022, 275, 319, 2222, 4674, 4026, 32, 275, 319, 275, 319, 477, 753, 354, 4107, 372, 1015, 32, 275, 319, 477, 601, 312, 537, 4026, 1980, 32, 275, 569, 284, 562, 3927, 1208, 6877, 2863, 1015, 26, 2961, 1208, 6877, 2863, 354, 27, 301, 291, 1505, 2863]}
{"line_number": 182, "line_type": "original", "code": "        epsilon = v.epsilon;", "entropy": 3.458984375, "is_bug_line": false, "sus_score": 0.42008402520840293, "per_token_entropy": [4.58203125, 10.9375, 0.051910400390625, 4.4453125, 0.01004791259765625, 4.16015625, 0.03564453125], "tokens": [351, 23477, 280, 354, 32, 20094, 45]}
{"line_number": 182, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Add a vector.\n     *\n     * @param v Vector to add.\n     * @return a new vector instance with the instance values added to the\n     * argument vector.\n     */\n    public OpenMapRealVector add(Open", "entropy": 0.2509765625, "is_bug_line": false, "sus_score": 0.42008402520840293, "per_token_entropy": [0.1453857421875, 0.040771484375, 0.08892822265625, 0.035736083984375, 0.32080078125, 3.6716461181640625e-05, 0.93212890625, 1.142578125, 0.1768798828125, 0.53515625, 0.052520751953125, 0.0003178119659423828, 0.221923828125, 3.1948089599609375e-05, 0.01568603515625, 0.0005574226379394531, 0.003078460693359375, 0.2276611328125, 0.0035114288330078125, 0.29541015625, 0.07806396484375, 0.0086822509765625, 0.0015382766723632812, 0.00122833251953125, 0.0018367767333984375, 0.2066650390625, 0.06536865234375, 0.1767578125, 0.150146484375, 1.0908203125, 0.386474609375, 1.162109375, 0.2420654296875, 0.09295654296875, 0.2236328125, 0.6123046875, 0.62060546875, 0.0001976490020751953, 0.59375, 1.1220703125, 1.0009765625, 0.051513671875, 0.2103271484375, 0.00980377197265625, 0.60107421875, 0.08636474609375, 0.00055694580078125, 7.700920104980469e-05, 8.58306884765625e-06, 0.0012645721435546875, 0.000457763671875, 0.0079345703125], "tokens": [284, 320, 446, 1022, 275, 319, 2222, 312, 4026, 32, 275, 319, 275, 319, 477, 753, 354, 4107, 372, 1015, 32, 275, 319, 477, 601, 312, 537, 4026, 1980, 623, 322, 1980, 2078, 3640, 372, 322, 275, 319, 2793, 4026, 32, 275, 569, 284, 562, 3927, 1208, 6877, 2863, 1015, 26, 2961]}
{"line_number": 183, "line_type": "original", "code": "    }", "entropy": 3.5546875, "is_bug_line": false, "sus_score": 0.42008402520840293, "per_token_entropy": [3.40625, 3.705078125], "tokens": [264, 320]}
{"line_number": 183, "line_type": "generated", "code": "\n\n    /**\n     * Add a vector.\n     *\n     * @param v Vector to add.\n     * @return a new vector instance.\n     */\n    public OpenMapRealVector add(OpenMapRealVector v) {\n        checkVectorDimensions(v.", "entropy": 0.172119140625, "is_bug_line": false, "sus_score": 0.42008402520840293, "per_token_entropy": [0.50048828125, 0.033050537109375, 0.450927734375, 5.5789947509765625e-05, 1.0615234375, 1.046875, 0.20556640625, 0.5693359375, 0.05841064453125, 0.00046515464782714844, 0.21875, 3.457069396972656e-05, 0.0146636962890625, 0.000843048095703125, 0.004520416259765625, 0.2489013671875, 0.003360748291015625, 0.375, 0.0762939453125, 0.007640838623046875, 0.002132415771484375, 0.0009794235229492188, 0.002468109130859375, 0.209228515625, 0.05926513671875, 0.2005615234375, 0.1356201171875, 1.0341796875, 0.00893402099609375, 0.109619140625, 0.00472259521484375, 0.59912109375, 0.08526611328125, 0.000652313232421875, 9.34600830078125e-05, 1.0848045349121094e-05, 0.0041656494140625, 0.0006589889526367188, 0.006374359130859375, 3.8743019104003906e-05, 1.2874603271484375e-05, 5.9723854064941406e-05, 2.86102294921875e-05, 0.0005140304565429688, 0.005352020263671875, 0.054534912109375, 1.53515625, 0.002227783203125, 0.00023686885833740234, 0.00032711029052734375, 0.00027441978454589844, 0.0168914794921875], "tokens": [446, 1022, 275, 319, 2222, 312, 4026, 32, 275, 319, 275, 319, 477, 753, 354, 4107, 372, 1015, 32, 275, 319, 477, 601, 312, 537, 4026, 1980, 32, 275, 569, 284, 562, 3927, 1208, 6877, 2863, 1015, 26, 2961, 1208, 6877, 2863, 354, 27, 301, 291, 1505, 2863, 16485, 26, 104, 32]}
{"line_number": 591, "line_type": "original", "code": "        } else if (entries.containsKey(index)) {", "entropy": 2.005859375, "is_bug_line": false, "sus_score": 0.42008402520840293, "per_token_entropy": [3.490234375, 6.38671875, 3.27734375, 0.841796875, 0.0235443115234375, 6.4296875, 0.39404296875, 2.42578125, 0.0110321044921875, 0.56591796875, 0.07391357421875, 0.1533203125], "tokens": [351, 320, 813, 415, 308, 9150, 32, 15943, 26, 1055, 490, 301]}
{"line_number": 591, "line_type": "generated", "code": "\n        OpenMapRealVector res = copy();\n        Iterator iter = v.getEntries().iterator();\n        while (iter.hasNext()) {\n            iter.advance();\n            int key = iter.key();\n            if (entries.containsKey(key)) {\n               ", "entropy": 0.11358642578125, "is_bug_line": false, "sus_score": 0.42008402520840293, "per_token_entropy": [0.115478515625, 1.8193359375, 0.0004892349243164062, 0.0007834434509277344, 0.000705718994140625, 1.232421875, 0.0460205078125, 0.7412109375, 0.007843017578125, 0.0467529296875, 0.79248046875, 0.02294921875, 0.00429534912109375, 0.051361083984375, 5.1856040954589844e-05, 0.1578369140625, 0.03271484375, 0.0067291259765625, 0.00209808349609375, 0.0005536079406738281, 0.005550384521484375, 0.007076263427734375, 0.0008497238159179688, 0.00022125244140625, 4.971027374267578e-05, 9.5367431640625e-05, 0.0002682209014892578, 0.0003571510314941406, 0.012786865234375, 0.01458740234375, 0.0009908676147460938, 0.0005550384521484375, 0.00016832351684570312, 0.00981903076171875, 0.359619140625, 0.02679443359375, 0.0014400482177734375, 0.00251007080078125, 2.4557113647460938e-05, 0.00171661376953125, 0.0018930435180664062, 0.012725830078125, 0.098388671875, 0.0240478515625, 0.2310791015625, 0.00013577938079833984, 0.0007796287536621094, 0.00015044212341308594, 0.000537872314453125, 0.0014142990112304688, 0.000560760498046875, 0.006809234619140625], "tokens": [291, 3927, 1208, 6877, 2863, 736, 280, 1933, 473, 291, 14743, 3850, 280, 354, 32, 371, 9915, 922, 5162, 473, 291, 2218, 308, 1731, 32, 16421, 1157, 301, 324, 3850, 32, 22545, 473, 324, 629, 1202, 280, 3850, 32, 678, 473, 324, 415, 308, 9150, 32, 15943, 26, 678, 490, 301, 400]}
{"line_number": 343, "line_type": "original", "code": "        OpenMapRealVector res = new OpenMapRealVector(this);", "entropy": 0.91748046875, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [4.41796875, 6.3046875, 0.2333984375, 0.012420654296875, 0.0029506683349609375, 0.53369140625, 0.016021728515625, 0.03326416015625, 0.002193450927734375, 0.0009541511535644531, 0.00018656253814697266, 5.245208740234375e-05, 0.01183319091796875, 0.65185546875, 1.541015625], "tokens": [351, 3927, 1208, 6877, 2863, 736, 280, 537, 3927, 1208, 6877, 2863, 26, 578, 293]}
{"line_number": 343, "line_type": "generated", "code": "\n            }\n        }\n        return res;\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public OpenMapRealVector mapAddToSelf(double d) {\n        Iterator iter = entries.iterator();\n        while (iter.hasNext()) {\n            iter.", "entropy": 0.07562255859375, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [0.12017822265625, 0.0027751922607421875, 0.11322021484375, 0.00040411949157714844, 0.08673095703125, 0.0228424072265625, 0.0004119873046875, 0.0010356903076171875, 0.09881591796875, 0.0003676414489746094, 0.132080078125, 0.021026611328125, 0.578125, 0.0002301931381225586, 0.000591278076171875, 0.005016326904296875, 0.00597381591796875, 0.004467010498046875, 0.0005922317504882812, 0.00453948974609375, 0.0212249755859375, 0.30615234375, 0.005413055419921875, 0.0008153915405273438, 0.00699615478515625, 0.1573486328125, 0.90478515625, 0.01201629638671875, 6.592273712158203e-05, 0.5322265625, 0.06634521484375, 0.0012254714965820312, 0.005828857421875, 0.047637939453125, 0.4521484375, 0.0181884765625, 0.0012845993041992188, 0.00826263427734375, 0.0002086162567138672, 0.01541900634765625, 0.000705718994140625, 0.012176513671875, 0.01555633544921875, 0.116455078125, 0.0003604888916015625, 0.0001329183578491211, 0.0006203651428222656, 0.0010385513305664062, 0.00109100341796875, 0.01959228515625, 0.003009796142578125, 3.409385681152344e-05], "tokens": [324, 320, 291, 320, 291, 442, 736, 45, 284, 320, 446, 1022, 3088, 18446, 111, 569, 284, 477, 1788, 284, 562, 3927, 1208, 6877, 2863, 1992, 29202, 8171, 26, 2627, 343, 27, 301, 291, 14743, 3850, 280, 8036, 32, 5162, 473, 291, 2218, 308, 1731, 32, 16421, 1157, 301, 324, 3850, 32]}
{"line_number": 349, "line_type": "original", "code": "        Iterator iter = entries.iterator();", "entropy": 2.18359375, "is_bug_line": true, "sus_score": 0.4082482904638631, "per_token_entropy": [6.953125, 6.37109375, 3.982421875, 0.0201568603515625, 0.08563232421875, 0.0026397705078125, 0.029998779296875, 0.0165252685546875], "tokens": [351, 14743, 3850, 280, 8036, 32, 5162, 473]}
{"line_number": 349, "line_type": "generated", "code": "\n    public double getEntry(int index) {\n        checkIndex(index);\n        return entries.get(index);\n    }\n\n    /**\n     * {@inheritDoc}\n     *\n     * @throws org.apache.commons.math3.exception.NumberIs", "entropy": 0.2452392578125, "is_bug_line": true, "sus_score": 0.4082482904638631, "per_token_entropy": [0.06292724609375, 0.79150390625, 0.91259765625, 0.190673828125, 1.1494140625, 0.0015106201171875, 0.053436279296875, 0.002391815185546875, 0.003662109375, 0.0540771484375, 0.074951171875, 0.381103515625, 0.005153656005859375, 0.002521514892578125, 7.82012939453125e-05, 0.0007696151733398438, 0.04852294921875, 0.323486328125, 0.0208740234375, 0.0008769035339355469, 0.0303192138671875, 0.005992889404296875, 0.0037670135498046875, 0.010223388671875, 0.0369873046875, 0.00028514862060546875, 0.214599609375, 0.02117919921875, 0.9267578125, 0.00013148784637451172, 1.78515625, 0.00299835205078125, 0.0016727447509765625, 0.00872802734375, 0.03485107421875, 0.669921875, 0.0047760009765625, 0.396240234375, 0.798828125, 1.0087890625, 2.5987625122070312e-05, 0.00463104248046875, 9.179115295410156e-06, 0.0009531974792480469, 2.384185791015625e-07, 0.0002694129943847656, 0.00533294677734375, 2.5033950805664062e-06, 0.042572021484375, 5.698204040527344e-05, 2.65234375, 4.0650367736816406e-05], "tokens": [284, 562, 2064, 622, 2711, 26, 410, 1650, 27, 301, 291, 1505, 1284, 26, 1055, 293, 291, 442, 8036, 32, 371, 26, 1055, 293, 284, 320, 446, 1022, 275, 319, 3088, 18446, 111, 275, 319, 275, 319, 477, 5117, 1086, 32, 2104, 32, 8369, 32, 3812, 37, 32, 3893, 32, 1918, 1622]}
{"line_number": 350, "line_type": "original", "code": "        while (iter.hasNext()) {", "entropy": 1.279296875, "is_bug_line": true, "sus_score": 0.4082482904638631, "per_token_entropy": [4.90234375, 4.6328125, 0.28466796875, 0.29833984375, 0.0149078369140625, 0.037567138671875, 0.0291290283203125, 0.034759521484375], "tokens": [351, 2218, 308, 1731, 32, 16421, 1157, 301]}
{"line_number": 350, "line_type": "generated", "code": "\n    public double getL1Norm() {\n        double sum = 0;\n        for (Iterator iter = entries.iterator(); iter.hasNext();) {\n            iter.advance();\n            sum += FastMath.abs(iter.value());\n        }\n       ", "entropy": 0.172607421875, "is_bug_line": true, "sus_score": 0.4082482904638631, "per_token_entropy": [0.1524658203125, 0.135498046875, 0.72509765625, 0.18994140625, 1.0283203125, 0.0113677978515625, 0.10760498046875, 0.0011272430419921875, 0.09063720703125, 0.1107177734375, 0.2022705078125, 0.466796875, 0.013031005859375, 0.00518035888671875, 0.0034923553466796875, 0.57080078125, 0.1318359375, 1.38671875, 0.1982421875, 0.81494140625, 0.63427734375, 0.006557464599609375, 0.03485107421875, 0.0023250579833984375, 0.292236328125, 0.02496337890625, 0.005878448486328125, 0.0006546974182128906, 0.00337982177734375, 0.00527191162109375, 0.50244140625, 0.006381988525390625, 0.07672119140625, 0.07550048828125, 0.000579833984375, 0.0007066726684570312, 0.0018310546875, 0.054901123046875, 0.231689453125, 0.00244903564453125, 0.56884765625, 0.0002491474151611328, 3.886222839355469e-05, 4.4226646423339844e-05, 0.0010290145874023438, 0.00441741943359375, 0.0008740425109863281, 0.0061187744140625, 0.01026153564453125, 0.0186767578125, 0.0021305084228515625, 0.05511474609375], "tokens": [284, 562, 2064, 622, 62, 35, 14373, 346, 301, 291, 2064, 3632, 280, 225, 34, 45, 291, 436, 308, 5731, 3850, 280, 8036, 32, 5162, 473, 3850, 32, 16421, 473, 27, 301, 324, 3850, 32, 22545, 473, 324, 3632, 1454, 15938, 5717, 32, 3596, 26, 1731, 32, 853, 1035, 291, 320, 291]}
{"line_number": 351, "line_type": "original", "code": "            iter.advance();", "entropy": 3.54296875, "is_bug_line": true, "sus_score": 0.4082482904638631, "per_token_entropy": [6.875, 9.1640625, 0.931640625, 0.701171875, 0.04132080078125], "tokens": [1468, 3850, 32, 22545, 473]}
{"line_number": 351, "line_type": "generated", "code": "\n        return entries.size();\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public double getEntry(int index) {\n        checkIndex(index);\n        return entries.get(index);\n    }\n\n    /** {@inheritDoc} */\n    @Override", "entropy": 0.058074951171875, "is_bug_line": true, "sus_score": 0.4082482904638631, "per_token_entropy": [0.1722412109375, 0.0421142578125, 0.31591796875, 0.0071868896484375, 0.1932373046875, 0.01349639892578125, 0.06573486328125, 0.0007505416870117188, 0.06268310546875, 0.0163726806640625, 0.342529296875, 0.00015473365783691406, 0.0004658699035644531, 0.002410888671875, 0.00792694091796875, 0.0037021636962890625, 0.0004062652587890625, 0.0013608932495117188, 0.0097503662109375, 0.298095703125, 0.041046142578125, 0.29248046875, 0.00025343894958496094, 0.0215606689453125, 0.0025005340576171875, 0.0007505416870117188, 0.0268096923828125, 0.0716552734375, 0.18701171875, 0.00824737548828125, 0.00215911865234375, 9.036064147949219e-05, 0.0008020401000976562, 0.1710205078125, 0.21875, 0.0174713134765625, 0.00041174888610839844, 0.0125885009765625, 0.004421234130859375, 0.0029315948486328125, 0.00887298583984375, 0.007137298583984375, 6.413459777832031e-05, 0.0316162109375, 0.02215576171875, 0.300537109375, 0.0001823902130126953, 0.0002484321594238281, 0.00365447998046875, 0.0012226104736328125, 0.00432586669921875, 0.0007686614990234375], "tokens": [291, 442, 8036, 32, 891, 473, 284, 320, 446, 1022, 3088, 18446, 111, 569, 284, 477, 1788, 284, 562, 2064, 622, 2711, 26, 410, 1650, 27, 301, 291, 1505, 1284, 26, 1055, 293, 291, 442, 8036, 32, 371, 26, 1055, 293, 284, 320, 446, 1022, 3088, 18446, 111, 569, 284, 477, 1788]}
{"line_number": 352, "line_type": "original", "code": "            res.setEntry(iter.key(), iter.value() / v.getEntry(iter.key()));", "entropy": 0.9287109375, "is_bug_line": true, "sus_score": 0.4082482904638631, "per_token_entropy": [7.01953125, 5.41015625, 0.73388671875, 0.87353515625, 0.09295654296875, 0.0178375244140625, 2.767578125, 0.01314544677734375, 0.020294189453125, 0.78662109375, 0.1571044921875, 0.005260467529296875, 0.01450347900390625, 1.6796875, 1.5693359375, 0.11590576171875, 0.056671142578125, 0.007904052734375, 0.0004930496215820312, 0.007457733154296875, 0.00023448467254638672, 0.0065155029296875, 0.008880615234375], "tokens": [1468, 736, 32, 470, 2711, 26, 1731, 32, 678, 1026, 3850, 32, 853, 346, 517, 354, 32, 48895, 26, 1731, 32, 678, 5073]}
{"line_number": 352, "line_type": "generated", "code": "\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public double getEntry(int index) {\n        checkIndex(index);\n        return entries.get(index);\n    }\n\n    /**\n     * Get the entries array.\n     *\n     * @return", "entropy": 0.242431640625, "is_bug_line": true, "sus_score": 0.4082482904638631, "per_token_entropy": [0.2235107421875, 0.04132080078125, 0.10089111328125, 0.039825439453125, 0.451904296875, 0.0002701282501220703, 0.000499725341796875, 0.003265380859375, 0.01274871826171875, 0.004383087158203125, 0.0004944801330566406, 0.00634765625, 0.014495849609375, 0.513671875, 0.056884765625, 0.51123046875, 0.00024628639221191406, 0.04302978515625, 0.002994537353515625, 0.0008635520935058594, 0.048187255859375, 0.048248291015625, 0.2490234375, 0.0104522705078125, 0.0034637451171875, 0.00022399425506591797, 0.0013513565063476562, 0.06671142578125, 0.39404296875, 0.038116455078125, 0.001270294189453125, 0.040679931640625, 0.007198333740234375, 0.019500732421875, 0.0296173095703125, 0.1904296875, 0.00018537044525146484, 0.054656982421875, 0.040985107421875, 1.4609375, 0.0001480579376220703, 1.396484375, 0.76953125, 1.1611328125, 2.556640625, 0.32177734375, 0.447021484375, 0.00525665283203125, 1.10546875, 0.0006318092346191406, 0.10797119140625, 0.004192352294921875], "tokens": [284, 320, 446, 1022, 3088, 18446, 111, 569, 284, 477, 1788, 284, 562, 2064, 622, 2711, 26, 410, 1650, 27, 301, 291, 1505, 1284, 26, 1055, 293, 291, 442, 8036, 32, 371, 26, 1055, 293, 284, 320, 446, 1022, 275, 319, 1390, 322, 8036, 1417, 32, 275, 319, 275, 319, 477, 601]}
{"line_number": 354, "line_type": "original", "code": "        return res;", "entropy": 2.58984375, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [5.51171875, 1.8173828125, 2.998046875, 0.0335693359375], "tokens": [351, 442, 736, 45]}
{"line_number": 354, "line_type": "generated", "code": "\n    /**\n     * Get the entry at the specified index.\n     *\n     * @param index Entry index.\n     * @return the entry at the specified index.\n     * @throws OutOfRangeException if the specified index is invalid.\n     */\n    @", "entropy": 0.2264404296875, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [0.580078125, 0.1416015625, 0.65771484375, 0.00013947486877441406, 1.7880859375, 0.74169921875, 0.378173828125, 0.134033203125, 0.11273193359375, 0.024078369140625, 0.01096343994140625, 0.06988525390625, 0.08526611328125, 0.0016956329345703125, 0.1751708984375, 7.975101470947266e-05, 0.0217742919921875, 0.004352569580078125, 0.01203155517578125, 0.66552734375, 0.0034351348876953125, 0.07012939453125, 0.0010156631469726562, 0.00041222572326660156, 0.0011129379272460938, 0.0027904510498046875, 0.345947265625, 0.09765625, 0.04986572265625, 0.2880859375, 0.003734588623046875, 0.0036411285400390625, 0.004154205322265625, 0.0017461776733398438, 0.041717529296875, 0.005340576171875, 0.05133056640625, 0.50048828125, 0.0003597736358642578, 0.02227783203125, 0.00043129920959472656, 0.03167724609375, 1.1611328125, 0.59521484375, 0.041168212890625, 0.45849609375, 0.810546875, 0.12078857421875, 0.0018711090087890625, 0.138671875, 0.0123748779296875, 1.2978515625], "tokens": [284, 1022, 275, 319, 1390, 322, 3414, 821, 322, 3191, 1650, 32, 275, 319, 275, 319, 477, 753, 1650, 13925, 1650, 32, 275, 319, 477, 601, 322, 3414, 821, 322, 3191, 1650, 32, 275, 319, 477, 5117, 4306, 1419, 3198, 984, 415, 322, 3191, 1650, 438, 5535, 32, 275, 569, 284, 477]}
{"line_number": 208, "line_type": "original", "code": "        return entries;", "entropy": 4.359375, "is_bug_line": false, "sus_score": 0.408248290463863, "per_token_entropy": [3.59765625, 0.067138671875, 11.8828125, 1.892578125], "tokens": [351, 442, 8036, 45]}
{"line_number": 208, "line_type": "generated", "code": "\n        return res;\n    }\n\n    /**\n     * {@inheritDoc}\n     *\n     * @throws DimensionMismatchException if {@code v}'s dimension\n     * is not equal to the dimension of {@code this} vector\n     */\n    @Override\n    public RealVector", "entropy": 0.2283935546875, "is_bug_line": false, "sus_score": 0.408248290463863, "per_token_entropy": [0.1134033203125, 0.043060302734375, 0.00960540771484375, 0.007205963134765625, 0.032928466796875, 0.0008139610290527344, 0.363525390625, 0.039642333984375, 0.84423828125, 8.940696716308594e-05, 1.4248046875, 0.003986358642578125, 0.0018129348754882812, 0.00365447998046875, 0.33056640625, 0.305908203125, 0.00867462158203125, 0.45654296875, 0.5830078125, 2.16796875, 0.001491546630859375, 5.7220458984375e-06, 0.1051025390625, 0.385009765625, 0.0019063949584960938, 0.05914306640625, 1.1513671875, 0.003643035888671875, 0.11102294921875, 0.310546875, 0.0007610321044921875, 0.3203125, 0.072998046875, 0.5185546875, 0.0017614364624023438, 0.1378173828125, 0.3974609375, 0.007465362548828125, 0.5908203125, 0.0008587837219238281, 0.0008478164672851562, 0.21142578125, 0.018341064453125, 0.4228515625, 0.142822265625, 0.0178680419921875, 0.03179931640625, 0.0004208087921142578, 0.006015777587890625, 0.01259613037109375, 0.0706787109375, 0.0214996337890625], "tokens": [291, 442, 736, 45, 284, 320, 446, 1022, 275, 319, 3088, 18446, 111, 275, 319, 275, 319, 477, 5117, 17417, 31102, 984, 415, 3088, 687, 354, 8129, 101, 8742, 275, 319, 438, 646, 5040, 372, 322, 8742, 432, 3088, 687, 458, 111, 4026, 275, 569, 284, 477, 1788, 284, 562, 11443, 2863]}
