{"line_number": 152, "line_type": "original", "code": "        MathUtils.checkNotNull(rhs);", "entropy": 4.52734375, "is_bug_line": true, "sus_score": 0.22360679774997896, "per_token_entropy": [4.74609375, 12.71875, 9.625, 0.04437255859375, 8.6875, 0.005596160888671875, 0.10101318359375, 0.2763671875], "tokens": [351, 4175, 2755, 32, 42698, 26, 14312, 293]}
{"line_number": 152, "line_type": "generated", "code": "\n     * <code>rhs</code> is infinite (positive or negative),\n     * {@link #ZERO} is returned.</li>\n     * <li>If this is infinite (positive or negative) and\n     * <code>rhs</code>", "entropy": 0.12261962890625, "is_bug_line": true, "sus_score": 0.22360679774997896, "per_token_entropy": [0.72021484375, 0.0051422119140625, 0.91845703125, 0.054779052734375, 0.00212860107421875, 0.034820556640625, 0.0034122467041015625, 0.0004825592041015625, 0.00030159950256347656, 0.0062255859375, 0.0265960693359375, 0.467529296875, 0.66357421875, 0.0049896240234375, 0.00022017955780029297, 0.11474609375, 0.74072265625, 0.0002321004867553711, 0.1046142578125, 0.0009794235229492188, 0.0211181640625, 0.0166778564453125, 0.001392364501953125, 0.01010894775390625, 0.0025310516357421875, 0.169921875, 0.00078582763671875, 0.0179901123046875, 0.1181640625, 0.00044918060302734375, 0.1246337890625, 0.00507354736328125, 0.0019292831420898438, 0.0045166015625, 0.484619140625, 0.0018320083618164062, 0.0005421638488769531, 0.50244140625, 0.005657196044921875, 0.0002956390380859375, 0.0001125335693359375, 0.09613037109375, 0.0222930908203125, 0.87646484375, 0.0012922286987304688, 0.011383056640625, 0.00041294097900390625, 9.21487808227539e-05, 0.00707244873046875, 0.0006551742553710938, 2.1457672119140625e-06, 0.00011467933654785156], "tokens": [275, 319, 333, 687, 48, 14312, 377, 687, 48, 438, 20280, 308, 18502, 556, 11003, 471, 275, 319, 3088, 1204, 588, 13977, 111, 438, 4717, 1730, 374, 48, 275, 319, 333, 374, 48, 2797, 458, 438, 20280, 308, 18502, 556, 11003, 27, 461, 275, 319, 333, 687, 48, 14312, 377, 687, 48]}
{"line_number": 153, "line_type": "original", "code": "        return createComplex(real + rhs.getReal(),", "entropy": 1.6708984375, "is_bug_line": true, "sus_score": 0.22360679774997896, "per_token_entropy": [2.791015625, 5.59375, 1.44140625, 0.79443359375, 0.07275390625, 2.857421875, 4.1171875, 1.4951171875, 0.06317138671875, 0.1136474609375, 0.6083984375, 0.105224609375], "tokens": [351, 442, 1487, 12267, 26, 4543, 474, 9322, 32, 371, 6877, 1026]}
{"line_number": 153, "line_type": "generated", "code": "\n     *  {@link #NaN} is returned.</li>\n     * <li>If neither this nor <code>rhs</code> is infinite and the result\n     *  of the division is infinite, the result of the division is\n     * ", "entropy": 0.257080078125, "is_bug_line": true, "sus_score": 0.22360679774997896, "per_token_entropy": [0.99365234375, 0.013214111328125, 0.58984375, 0.87353515625, 0.00635528564453125, 0.0491943359375, 0.97705078125, 0.007251739501953125, 0.0093536376953125, 0.0053863525390625, 0.2288818359375, 0.0033969879150390625, 0.046234130859375, 0.11846923828125, 0.00267791748046875, 0.281982421875, 0.01491546630859375, 0.0014019012451171875, 0.002361297607421875, 1.65234375, 0.076904296875, 0.0011281967163085938, 0.0002942085266113281, 0.0002911090850830078, 6.270408630371094e-05, 0.00255584716796875, 0.0012502670288085938, 0.0011167526245117188, 4.398822784423828e-05, 0.1444091796875, 0.18359375, 0.412841796875, 0.748046875, 0.0240631103515625, 0.171142578125, 7.796287536621094e-05, 0.1138916015625, 1.296875, 0.09039306640625, 0.078125, 0.01145172119140625, 1.09765625, 0.359619140625, 0.271484375, 0.21923828125, 0.564453125, 0.08660888671875, 0.0035495758056640625, 0.37158203125, 1.130859375, 3.3736228942871094e-05, 0.0225067138671875], "tokens": [275, 319, 225, 3088, 1204, 588, 11126, 111, 438, 4717, 1730, 374, 48, 275, 319, 333, 374, 48, 2797, 25209, 458, 12356, 333, 687, 48, 14312, 377, 687, 48, 438, 20280, 461, 322, 1056, 275, 319, 225, 432, 322, 20654, 438, 20280, 30, 322, 1056, 432, 322, 20654, 438, 275, 319, 225]}
{"line_number": 319, "line_type": "original", "code": "        return isNaN;", "entropy": 3.09765625, "is_bug_line": false, "sus_score": 0.20412414523193154, "per_token_entropy": [2.40625, 3.638671875, 5.828125, 3.087890625, 0.5341796875], "tokens": [351, 442, 438, 11126, 45]}
{"line_number": 319, "line_type": "generated", "code": "\n            Double.isInfinite(rhs.real) || Double.isInfinite(rhs.imaginary)) {\n            return INF;\n        }\n        return new Complex(real * rhs.real - imaginary * rhs.imaginary,\n                          real * rhs.", "entropy": 0.1165771484375, "is_bug_line": false, "sus_score": 0.20412414523193154, "per_token_entropy": [1.216796875, 0.1807861328125, 9.97781753540039e-05, 0.0017070770263671875, 4.291534423828125e-06, 0.000530242919921875, 0.00955963134765625, 0.00043964385986328125, 0.10626220703125, 0.0033702850341796875, 0.01070404052734375, 0.2152099609375, 5.257129669189453e-05, 0.0018110275268554688, 3.981590270996094e-05, 0.00044035911560058594, 0.00759124755859375, 4.1604042053222656e-05, 0.0009303092956542969, 3.1113624572753906e-05, 0.0611572265625, 0.01215362548828125, 0.15185546875, 0.03448486328125, 0.8271484375, 0.0026607513427734375, 0.036865234375, 0.0006389617919921875, 0.61328125, 1.1689453125, 0.0804443359375, 0.0018062591552734375, 0.029693603515625, 0.2320556640625, 0.01480865478515625, 0.0009222030639648438, 0.000324249267578125, 0.005229949951171875, 0.0069122314453125, 0.0009813308715820312, 6.9141387939453125e-06, 0.0007638931274414062, 0.003032684326171875, 8.404254913330078e-05, 0.00015354156494140625, 4.649162292480469e-06, 0.002239227294921875, 0.9423828125, 0.075927734375, 0.0003914833068847656, 0.0004291534423828125, 3.600120544433594e-05], "tokens": [324, 6934, 32, 28823, 11949, 26, 14312, 32, 4543, 27, 1276, 6934, 32, 28823, 11949, 26, 14312, 32, 17792, 3172, 490, 301, 324, 442, 47257, 45, 291, 320, 291, 442, 537, 19915, 26, 4543, 319, 9322, 32, 4543, 429, 17463, 3172, 319, 9322, 32, 17792, 3172, 30, 3775, 4011, 319, 9322, 32]}
{"line_number": 997, "line_type": "original", "code": "        return new Complex(realPart, imaginaryPart);", "entropy": 1.3974609375, "is_bug_line": false, "sus_score": 0.11952286093343936, "per_token_entropy": [5.98828125, 1.4208984375, 3.568359375, 0.63037109375, 0.81298828125, 0.314208984375, 3.859375, 0.039215087890625, 0.0281219482421875, 0.0007958412170410156, 0.00458526611328125, 0.09210205078125], "tokens": [351, 442, 537, 19915, 26, 4543, 2639, 30, 17463, 3172, 2639, 293]}
{"line_number": 997, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.11952286093343936, "per_token_entropy": [], "tokens": []}
{"line_number": 308, "line_type": "original", "code": "        return real;", "entropy": 3.541015625, "is_bug_line": false, "sus_score": 0.09853292781642932, "per_token_entropy": [3.6484375, 0.84326171875, 7.765625, 1.9052734375], "tokens": [351, 442, 4011, 45]}
{"line_number": 308, "line_type": "generated", "code": "\n     * @param rhs right hand side complex number\n     * @return <code>this * rhs</code>\n     * @throws NullArgumentException if <code>rhs</code> is <code>null</code>\n     */\n    public Complex multiply(", "entropy": 0.156494140625, "is_bug_line": false, "sus_score": 0.09853292781642932, "per_token_entropy": [0.87255859375, 0.2322998046875, 0.263427734375, 0.0186004638671875, 0.1754150390625, 1.7744140625, 0.79443359375, 0.005645751953125, 0.3193359375, 0.01068878173828125, 0.1702880859375, 0.00033783912658691406, 0.004909515380859375, 0.0022525787353515625, 0.474609375, 0.01690673828125, 0.052886962890625, 0.002300262451171875, 0.054290771484375, 0.0083770751953125, 0.0005640983581542969, 3.1948089599609375e-05, 0.005741119384765625, 0.016082763671875, 0.9169921875, 0.1329345703125, 0.482177734375, 0.459716796875, 0.00437164306640625, 0.0038776397705078125, 0.0288848876953125, 3.159046173095703e-05, 1.4901161193847656e-05, 0.0217742919921875, 0.069091796875, 4.172325134277344e-05, 4.673004150390625e-05, 0.00012350082397460938, 0.176025390625, 0.0020771026611328125, 2.944469451904297e-05, 0.0008416175842285156, 0.0009260177612304688, 0.00110626220703125, 0.01337432861328125, 0.0411376953125, 0.297119140625, 0.023834228515625, 0.046539306640625, 0.032806396484375, 0.11151123046875, 0.0006237030029296875], "tokens": [275, 319, 477, 753, 9322, 2091, 4091, 5209, 8640, 1451, 275, 319, 477, 601, 333, 687, 48, 578, 319, 9322, 377, 687, 48, 275, 319, 477, 5117, 9282, 8308, 415, 333, 687, 48, 14312, 377, 687, 48, 438, 333, 687, 48, 1693, 377, 687, 48, 275, 569, 284, 562, 19915, 22213, 26]}
{"line_number": 299, "line_type": "original", "code": "        return imaginary;", "entropy": 4.75, "is_bug_line": false, "sus_score": 0.09805806756909202, "per_token_entropy": [2.4921875, 10.1953125, 8.8359375, 0.00681304931640625, 2.212890625], "tokens": [351, 442, 17463, 3172, 45]}
{"line_number": 299, "line_type": "generated", "code": "    infinite parts and if the result exceeds the range of\n     * double precision floating point numbers.\n     *\n     * @param rhs Complex number to be multiplied by this\n     * @return <code>this * rhs</code>\n     */\n    public Complex", "entropy": 0.337158203125, "is_bug_line": false, "sus_score": 0.09805806756909202, "per_token_entropy": [1.642578125, 1.3046875, 0.00316619873046875, 0.3720703125, 0.3857421875, 0.486572265625, 0.268310546875, 1.19140625, 0.4443359375, 1.7177734375, 0.09515380859375, 0.52783203125, 0.006511688232421875, 0.29638671875, 0.6240234375, 0.1849365234375, 0.023162841796875, 0.010894775390625, 0.053558349609375, 0.06036376953125, 0.003810882568359375, 1.0703125, 0.001178741455078125, 0.053497314453125, 0.0023288726806640625, 0.430908203125, 1.041015625, 0.01280975341796875, 0.127197265625, 1.4296875, 0.0128173828125, 0.00036072731018066406, 0.3095703125, 0.032745361328125, 1.0478515625, 0.00021064281463623047, 0.006511688232421875, 0.0021610260009765625, 0.986328125, 0.00737762451171875, 0.0152130126953125, 0.001377105712890625, 0.0240478515625, 0.01226806640625, 0.0004634857177734375, 1.9073486328125e-05, 0.010101318359375, 0.00476837158203125, 1.126953125, 0.019989013671875, 0.0311126708984375, 0.01007080078125], "tokens": [264, 20280, 8710, 461, 415, 322, 1056, 35308, 322, 2155, 432, 275, 319, 2064, 12485, 15394, 2260, 7515, 32, 275, 319, 275, 319, 477, 753, 9322, 19915, 1451, 372, 526, 12044, 3032, 810, 458, 275, 319, 477, 601, 333, 687, 48, 578, 319, 9322, 377, 687, 48, 275, 569, 284, 562, 19915]}
{"line_number": 90, "line_type": "original", "code": "        super();", "entropy": 6.57421875, "is_bug_line": false, "sus_score": 0.0778498944161523, "per_token_entropy": [4.61328125, 11.0078125, 4.1015625], "tokens": [351, 2599, 473]}
{"line_number": 90, "line_type": "generated", "code": "\n     * @param  c number to be added\n     * @return <code>this + c</code>\n     */\n    public Complex add(Complex c) {\n        if (c.isNaN) {\n            return this;\n        }\n        if (isNaN", "entropy": 0.1619873046875, "is_bug_line": false, "sus_score": 0.0778498944161523, "per_token_entropy": [0.2371826171875, 0.016754150390625, 0.1810302734375, 0.0026798248291015625, 0.97314453125, 0.1177978515625, 0.9931640625, 0.0003247261047363281, 0.11212158203125, 0.00016868114471435547, 0.05206298828125, 0.00018489360809326172, 0.0004057884216308594, 0.00017976760864257812, 0.478759765625, 0.08551025390625, 0.00292205810546875, 0.0008358955383300781, 0.0222625732421875, 0.00273895263671875, 0.00014281272888183594, 2.288818359375e-05, 0.005588531494140625, 0.0183563232421875, 0.2044677734375, 0.0146026611328125, 0.0362548828125, 0.004978179931640625, 0.00298309326171875, 0.000255584716796875, 0.1170654296875, 0.0010309219360351562, 0.01383209228515625, 0.0139312744140625, 0.138916015625, 1.46875, 0.01442718505859375, 0.38232421875, 0.0965576171875, 0.0439453125, 0.11114501953125, 0.001697540283203125, 0.006389617919921875, 0.01995849609375, 0.277587890625, 0.0217132568359375, 0.0026607513427734375, 0.0003027915954589844, 0.55810546875, 1.3642578125, 0.002597808837890625, 0.200439453125], "tokens": [275, 319, 477, 753, 225, 281, 1451, 372, 526, 3640, 275, 319, 477, 601, 333, 687, 48, 578, 474, 281, 377, 687, 48, 275, 569, 284, 562, 19915, 1015, 26, 12267, 281, 27, 301, 291, 415, 308, 85, 32, 26821, 27, 301, 324, 442, 458, 45, 291, 320, 291, 415, 308, 26821]}
{"line_number": 91, "line_type": "original", "code": "        this.real = real;", "entropy": 2.58984375, "is_bug_line": false, "sus_score": 0.0778498944161523, "per_token_entropy": [6.3828125, 2.7421875, 1.2373046875, 1.7001953125, 2.75, 0.62744140625, 2.6875], "tokens": [351, 458, 32, 4543, 280, 4011, 45]}
{"line_number": 91, "line_type": "generated", "code": "\n     * Returns <code>NaN</code> if either (or both) input is <code>NaN</code>.</p>\n     *\n     * @param  c number to be added\n     * @return <code>this + c</code>", "entropy": 0.1678466796875, "is_bug_line": false, "sus_score": 0.0778498944161523, "per_token_entropy": [0.295166015625, 0.0044708251953125, 0.97509765625, 0.00972747802734375, 0.0011386871337890625, 6.663799285888672e-05, 0.049560546875, 0.00629425048828125, 7.331371307373047e-05, 0.00014495849609375, 0.3798828125, 0.01268768310546875, 0.61962890625, 0.1279296875, 4.124641418457031e-05, 0.00010120868682861328, 0.76513671875, 1.1630859375, 0.049346923828125, 0.00014030933380126953, 9.179115295410156e-06, 9.751319885253906e-05, 0.00011706352233886719, 1.239776611328125e-05, 1.58203125, 0.0011987686157226562, 0.00470733642578125, 0.0260772705078125, 0.00011348724365234375, 0.1898193359375, 2.002716064453125e-05, 0.0022602081298828125, 0.0008502006530761719, 0.8369140625, 0.1119384765625, 1.173828125, 0.0002732276916503906, 0.146728515625, 0.00013375282287597656, 0.033905029296875, 4.565715789794922e-05, 7.915496826171875e-05, 7.95125961303711e-05, 0.12890625, 0.00853729248046875, 0.0045166015625, 0.0017728805541992188, 0.0087738037109375, 0.00189971923828125, 6.222724914550781e-05, 1.1324882507324219e-05, 0.0012598037719726562], "tokens": [275, 319, 3759, 333, 687, 48, 11126, 377, 687, 48, 415, 3154, 308, 271, 4335, 27, 1509, 438, 333, 687, 48, 11126, 377, 687, 12689, 98, 48, 275, 319, 275, 319, 477, 753, 225, 281, 1451, 372, 526, 3640, 275, 319, 477, 601, 333, 687, 48, 578, 474, 281, 377, 687, 48]}
{"line_number": 92, "line_type": "original", "code": "        this.imaginary = imaginary;", "entropy": 4.7578125, "is_bug_line": false, "sus_score": 0.0778498944161523, "per_token_entropy": [2.654296875, 1.9150390625, 14.4296875, 10.4375, 0.0005807876586914062, 2.064453125, 10.453125, 0.003673553466796875, 0.8515625], "tokens": [351, 458, 32, 17792, 3172, 280, 17463, 3172, 45]}
{"line_number": 92, "line_type": "generated", "code": "     * returns <code>NaN + NaN i</code></p>\n     *\n     * @param rhs the addend\n     * @return <code>this + rhs</code>\n     */\n    public Complex add(Complex rhs) {\n        return new", "entropy": 0.223876953125, "is_bug_line": false, "sus_score": 0.0778498944161523, "per_token_entropy": [2.662109375, 0.487060546875, 1.431640625, 0.3427734375, 0.0006742477416992188, 1.3113021850585938e-05, 0.01255035400390625, 0.302490234375, 0.0043487548828125, 0.16748046875, 0.0078125, 9.906291961669922e-05, 1.29296875, 0.003177642822265625, 0.0216217041015625, 0.07611083984375, 0.0005359649658203125, 0.470458984375, 0.00010669231414794922, 0.00740814208984375, 0.0009675025939941406, 0.03814697265625, 0.84765625, 0.47509765625, 0.00010025501251220703, 0.00435638427734375, 3.075599670410156e-05, 0.00020825862884521484, 8.630752563476562e-05, 0.51123046875, 0.0006151199340820312, 0.00785064697265625, 0.0001538991928100586, 0.0011644363403320312, 0.0032634735107421875, 0.0005040168762207031, 2.5153160095214844e-05, 0.003475189208984375, 0.0179595947265625, 0.19580078125, 0.012603759765625, 0.03131103515625, 0.00487518310546875, 0.0026378631591796875, 0.00011622905731201172, 0.099609375, 0.00013720989227294922, 0.0024662017822265625, 0.01221466064453125, 0.201904296875, 1.6806640625, 0.1883544921875], "tokens": [262, 319, 3217, 333, 687, 48, 11126, 474, 21644, 595, 377, 687, 855, 98, 48, 275, 319, 275, 319, 477, 753, 9322, 322, 1015, 416, 275, 319, 477, 601, 333, 687, 48, 578, 474, 9322, 377, 687, 48, 275, 569, 284, 562, 19915, 1015, 26, 12267, 9322, 27, 301, 291, 442, 537]}
{"line_number": 94, "line_type": "original", "code": "        isNaN = Double.isNaN(real) || Double.isNaN(imaginary);", "entropy": 1.796875, "is_bug_line": false, "sus_score": 0.0778498944161523, "per_token_entropy": [4.359375, 13.421875, 3.935546875, 2.8828125, 4.5234375, 0.00023937225341796875, 0.02020263671875, 0.0004291534423828125, 1.20703125, 0.0806884765625, 0.0179595947265625, 0.09332275390625, 0.00017499923706054688, 0.0035381317138671875, 0.0002720355987548828, 0.0217742919921875, 0.0002970695495605469, 1.7705078125], "tokens": [351, 438, 11126, 280, 6934, 32, 26821, 26, 4543, 27, 1276, 6934, 32, 26821, 26, 17792, 3172, 293]}
{"line_number": 94, "line_type": "generated", "code": "part of an add operation.\n     * </p>\n     *\n     * @param rhs the addend\n     * @return <code>this + rhs</code>\n     */\n    public Complex add(Complex rhs) {\n        if (isNaN || rhs.", "entropy": 0.146484375, "is_bug_line": false, "sus_score": 0.0778498944161523, "per_token_entropy": [1.2890625, 0.22265625, 0.66552734375, 0.340087890625, 0.374267578125, 0.488525390625, 0.09649658203125, 0.045867919921875, 0.63818359375, 0.027557373046875, 0.0114898681640625, 0.012237548828125, 5.602836608886719e-05, 0.329345703125, 1.0609626770019531e-05, 0.0032444000244140625, 0.00029778480529785156, 0.0258026123046875, 0.7509765625, 0.3427734375, 4.875659942626953e-05, 0.00499725341796875, 1.9788742065429688e-05, 8.320808410644531e-05, 4.0411949157714844e-05, 0.73193359375, 0.001560211181640625, 0.0129241943359375, 0.00010383129119873047, 0.0028171539306640625, 0.003208160400390625, 0.00021457672119140625, 1.0251998901367188e-05, 0.00344085693359375, 0.0028476715087890625, 0.27734375, 0.003997802734375, 0.03326416015625, 0.007251739501953125, 0.002132415771484375, 8.702278137207031e-05, 0.11505126953125, 7.164478302001953e-05, 0.002132415771484375, 0.00748443603515625, 0.184814453125, 0.3486328125, 0.005458831787109375, 0.170654296875, 0.024169921875, 0.004192352294921875, 0.0009202957153320312], "tokens": [2050, 432, 600, 1015, 4212, 32, 275, 319, 576, 98, 48, 275, 319, 275, 319, 477, 753, 9322, 322, 1015, 416, 275, 319, 477, 601, 333, 687, 48, 578, 474, 9322, 377, 687, 48, 275, 569, 284, 562, 19915, 1015, 26, 12267, 9322, 27, 301, 291, 415, 308, 26821, 1276, 9322, 32]}
{"line_number": 95, "line_type": "original", "code": "        isInfinite = !isNaN &&", "entropy": 3.244140625, "is_bug_line": false, "sus_score": 0.0778498944161523, "per_token_entropy": [5.83203125, 6.70703125, 0.89697265625, 1.1298828125, 7.30078125, 0.77978515625, 0.061920166015625], "tokens": [351, 438, 39524, 280, 653, 26821, 962]}
{"line_number": 95, "line_type": "generated", "code": "\n     * @param rhs The complex number to add.\n     * @return <code>this + rhs</code>\n     */\n    public Complex add(Complex rhs) {\n        if (isNaN || rhs.isNaN()) {\n            return NaN;\n        }\n\n       ", "entropy": 0.1536865234375, "is_bug_line": false, "sus_score": 0.0778498944161523, "per_token_entropy": [0.128173828125, 0.0036411285400390625, 0.94091796875, 0.0037746429443359375, 0.028411865234375, 1.9072265625, 0.1771240234375, 0.0098876953125, 0.0012922286987304688, 0.720703125, 0.454345703125, 0.00434112548828125, 0.0002918243408203125, 0.0008950233459472656, 0.0002689361572265625, 0.34716796875, 0.003086090087890625, 0.0259552001953125, 0.00015878677368164062, 0.00634765625, 0.003444671630859375, 0.000850677490234375, 1.3113021850585938e-05, 0.278564453125, 0.04681396484375, 0.1427001953125, 0.0119476318359375, 0.035614013671875, 0.007266998291015625, 0.001804351806640625, 0.00010919570922851562, 0.125732421875, 0.00012886524200439453, 0.00266265869140625, 0.01082611083984375, 0.15234375, 0.58935546875, 0.00875091552734375, 0.1297607421875, 0.0226287841796875, 0.0031604766845703125, 0.0008234977722167969, 5.447864532470703e-05, 0.828125, 0.0009474754333496094, 0.00795745849609375, 0.04827880859375, 0.0286102294921875, 0.00034356117248535156, 0.0187835693359375, 0.000888824462890625, 0.72021484375], "tokens": [275, 319, 477, 753, 9322, 886, 8640, 1451, 372, 1015, 32, 275, 319, 477, 601, 333, 687, 48, 578, 474, 9322, 377, 687, 48, 275, 569, 284, 562, 19915, 1015, 26, 12267, 9322, 27, 301, 291, 415, 308, 26821, 1276, 9322, 32, 26821, 1157, 301, 324, 442, 21644, 45, 291, 320, 584]}
{"line_number": 97, "line_type": "original", "code": "    }", "entropy": 3.125, "is_bug_line": false, "sus_score": 0.0778498944161523, "per_token_entropy": [2.447265625, 3.80078125], "tokens": [264, 320]}
{"line_number": 97, "line_type": "generated", "code": "\n    public Complex add(Complex rhs) {\n        if (rhs == null) {\n            return this;\n        }\n\n        if (isNaN || rhs.isNaN) {\n            return NaN;\n        }\n\n        if (isInfinite() || rhs.isInfinite()) {", "entropy": 0.20849609375, "is_bug_line": false, "sus_score": 0.0778498944161523, "per_token_entropy": [2.251953125, 0.87841796875, 0.01180267333984375, 0.0309600830078125, 0.00018680095672607422, 0.1336669921875, 0.0002789497375488281, 0.00595855712890625, 0.0211944580078125, 0.2342529296875, 0.71240234375, 0.00719451904296875, 0.80517578125, 0.1619873046875, 0.362548828125, 0.003726959228515625, 0.0032215118408203125, 0.01442718505859375, 0.0948486328125, 0.01019287109375, 0.33056640625, 0.01439666748046875, 0.0008835792541503906, 0.4423828125, 1.025390625, 0.00968170166015625, 0.158447265625, 0.11639404296875, 0.003070831298828125, 1.9431114196777344e-05, 9.238719940185547e-05, 0.591796875, 0.0009760856628417969, 0.0114593505859375, 0.1275634765625, 0.042236328125, 0.0003147125244140625, 0.0084075927734375, 0.0009031295776367188, 0.14111328125, 0.71337890625, 0.0118865966796875, 0.07135009765625, 0.00010502338409423828, 0.359375, 0.8984375, 0.001613616943359375, 4.017353057861328e-05, 0.0007262229919433594, 2.7418136596679688e-06, 0.017974853515625, 0.0005216598510742188], "tokens": [284, 562, 19915, 1015, 26, 12267, 9322, 27, 301, 291, 415, 308, 14312, 610, 744, 27, 301, 324, 442, 458, 45, 291, 320, 584, 415, 308, 26821, 1276, 9322, 32, 26821, 27, 301, 324, 442, 21644, 45, 291, 320, 584, 415, 308, 28823, 11949, 346, 1276, 9322, 32, 28823, 11949, 1157, 301]}
