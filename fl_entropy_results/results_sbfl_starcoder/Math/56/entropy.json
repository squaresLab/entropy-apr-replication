{"line_number": 222, "line_type": "original", "code": "        final int[] indices = new int[dimension];", "entropy": 1.6875, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [4.90625, 5.8203125, 0.04296875, 4.48046875, 1.0244140625, 0.045257568359375, 1.8828125, 0.002368927001953125, 0.04632568359375, 0.28466796875, 0.02239990234375], "tokens": [351, 1158, 629, 1178, 10193, 280, 537, 629, 77, 11694, 970]}
{"line_number": 222, "line_type": "generated", "code": "\n        return count;\n    }", "entropy": 0.09912109375, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.513671875, 0.0513916015625, 0.0100250244140625, 0.00719451904296875, 0.01226806640625, 0.00024211406707763672], "tokens": [291, 442, 2385, 45, 284, 320]}
{"line_number": 224, "line_type": "original", "code": "        int count = 0;", "entropy": 1.416015625, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [4.92578125, 3.16015625, 0.998046875, 0.321533203125, 0.38427734375, 0.0767822265625, 0.044677734375], "tokens": [351, 629, 2385, 280, 225, 34, 45]}
{"line_number": 224, "line_type": "generated", "code": "\n\n    /**\n     * Get the size of the multidimensional counter.\n     *\n     * @return the size.\n     */\n    public int getSize() {\n        return totalSize;\n    }\n\n    /**\n     * Get the size of a specific dimension.", "entropy": 0.2283935546875, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.9248046875, 0.10107421875, 0.0202789306640625, 0.00042819976806640625, 0.97802734375, 0.12335205078125, 0.92724609375, 0.17626953125, 0.5810546875, 1.66796875, 0.00708770751953125, 0.01099395751953125, 0.0037631988525390625, 0.11370849609375, 0.7626953125, 0.051910400390625, 0.00045299530029296875, 0.14697265625, 0.0010585784912109375, 0.0167236328125, 0.01436614990234375, 0.06781005859375, 0.328125, 0.263916015625, 0.0019359588623046875, 0.0190582275390625, 0.0029277801513671875, 0.0032024383544921875, 0.1639404296875, 0.0304107666015625, 0.00154876708984375, 0.0023040771484375, 0.0009021759033203125, 0.004970550537109375, 0.001041412353515625, 0.0175018310546875, 2.0742416381835938e-05, 0.005016326904296875, 0.01229095458984375, 0.0004563331604003906, 0.41015625, 0.062255859375, 0.0126800537109375, 0.0008463859558105469, 0.86376953125, 0.1142578125, 0.53271484375, 0.140625, 0.81494140625, 1.0927734375, 0.035919189453125, 0.2391357421875], "tokens": [446, 1022, 275, 319, 1390, 322, 1334, 432, 322, 10151, 314, 39786, 279, 7022, 32, 275, 319, 275, 319, 477, 601, 322, 1334, 32, 275, 569, 284, 562, 629, 622, 1250, 346, 301, 291, 442, 3380, 1250, 45, 284, 320, 446, 1022, 275, 319, 1390, 322, 1334, 432, 312, 2818, 8742, 32]}
{"line_number": 225, "line_type": "original", "code": "        for (int i = 0; i < last; i++) {", "entropy": 0.78076171875, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [4.1640625, 3.8515625, 0.013458251953125, 0.01549530029296875, 0.1494140625, 0.0092315673828125, 0.177490234375, 0.041351318359375, 0.018798828125, 0.003231048583984375, 0.0192413330078125, 3.90625, 0.045440673828125, 0.055145263671875, 0.004638671875, 0.0197296142578125], "tokens": [351, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 2401, 45, 595, 1987, 301]}
{"line_number": 225, "line_type": "generated", "code": "\n    /**\n     * Get the size of the {@code i}-th dimension.\n     *\n     * @param i Dimension index.\n     * @return the size of the {@code i}-th dimension.\n     * @throws OutOfRangeException if {@code", "entropy": 0.2205810546875, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.6318359375, 0.278564453125, 0.07025146484375, 0.0009551048278808594, 1.49609375, 0.141845703125, 0.92529296875, 0.191162109375, 0.53564453125, 1.802734375, 0.0037364959716796875, 0.509765625, 0.311279296875, 0.0248260498046875, 0.0283660888671875, 0.176025390625, 0.006237030029296875, 0.0003490447998046875, 0.06982421875, 0.00030994415283203125, 0.005542755126953125, 0.031768798828125, 0.023162841796875, 1.001953125, 0.70068359375, 0.0777587890625, 0.003223419189453125, 0.0004467964172363281, 0.0016298294067382812, 0.005046844482421875, 0.0936279296875, 0.136962890625, 0.58837890625, 0.14208984375, 0.53466796875, 0.0004496574401855469, 0.001567840576171875, 0.005199432373046875, 0.0027179718017578125, 0.00931549072265625, 0.025115966796875, 0.00200653076171875, 0.353271484375, 0.0025177001953125, 0.007266998291015625, 0.41552734375, 0.00011336803436279297, 0.00042939186096191406, 0.0001957416534423828, 0.0166473388671875, 0.07464599609375, 0.0004363059997558594], "tokens": [284, 1022, 275, 319, 1390, 322, 1334, 432, 322, 3088, 687, 595, 11915, 349, 8742, 32, 275, 319, 275, 319, 477, 753, 595, 17417, 1650, 32, 275, 319, 477, 601, 322, 1334, 432, 322, 3088, 687, 595, 11915, 349, 8742, 32, 275, 319, 477, 5117, 4306, 1419, 3198, 984, 415, 3088, 687]}
{"line_number": 226, "line_type": "original", "code": "            int idx = 0;", "entropy": 2.05078125, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [6.265625, 4.375, 2.7421875, 0.0504150390625, 0.332763671875, 0.55712890625, 0.03509521484375], "tokens": [1468, 629, 5417, 280, 225, 34, 45]}
{"line_number": 226, "line_type": "generated", "code": "\n     * Increment the counter at the given position.\n     *\n     * @param c Indices in multidimensional counter.\n     * @throws DimensionMismatchException if the size of {@code c}\n     * does not match the size of the array given", "entropy": 0.18994140625, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.703125, 0.1915283203125, 1.771484375, 0.61669921875, 1.318359375, 0.498779296875, 0.6181640625, 0.564453125, 1.6494140625, 0.16943359375, 0.1029052734375, 0.03363037109375, 0.1866455078125, 0.0008368492126464844, 0.03961181640625, 0.004673004150390625, 0.35595703125, 0.2205810546875, 0.0004050731658935547, 0.150146484375, 0.090087890625, 0.0004572868347167969, 0.0007381439208984375, 0.0013971328735351562, 0.0038242340087890625, 0.024993896484375, 0.018951416015625, 0.1826171875, 0.01031494140625, 0.20458984375, 0.04754638671875, 0.0002593994140625, 5.829334259033203e-05, 0.0033359527587890625, 0.021575927734375, 0.012176513671875, 0.0003437995910644531, 0.005962371826171875, 0.00018215179443359375, 0.005046844482421875, 0.0004417896270751953, 0.022064208984375, 0.00014138221740722656, 0.003337860107421875, 0.0002243518829345703, 0.0016412734985351562, 0.0021839141845703125, 0.005649566650390625, 0.0006966590881347656, 0.0016326904296875, 0.0044097900390625, 0.0009646415710449219], "tokens": [275, 319, 29494, 322, 7022, 821, 322, 2702, 2747, 32, 275, 319, 275, 319, 477, 753, 281, 20261, 1343, 328, 10151, 314, 39786, 279, 7022, 32, 275, 319, 477, 5117, 17417, 31102, 984, 415, 322, 1334, 432, 3088, 687, 281, 111, 275, 319, 1957, 646, 2530, 322, 1334, 432, 322, 1417, 2702]}
{"line_number": 227, "line_type": "original", "code": "            final int offset = uniCounterOffset[i];", "entropy": 2.326171875, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [7.09375, 9.5078125, 0.46142578125, 6.00390625, 0.35302734375, 1.443359375, 0.004413604736328125, 0.03076171875, 0.0230712890625, 0.476806640625, 0.182861328125], "tokens": [1468, 1158, 629, 3401, 280, 29607, 6477, 3457, 77, 91, 970]}
{"line_number": 227, "line_type": "generated", "code": "\n     *\n     * @return the total number of elements.\n     */\n    public int getSize() {\n        return totalSize;\n    }\n\n    /**\n     * Get the size of a dimension.\n     *\n     * @param dim Dimension.\n     * @return", "entropy": 0.197021484375, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.1485595703125, 0.1317138671875, 0.45263671875, 0.0015630722045898438, 0.023162841796875, 0.0018835067749023438, 0.09722900390625, 0.308837890625, 0.138916015625, 0.025787353515625, 0.039886474609375, 0.105224609375, 0.0474853515625, 0.0226898193359375, 0.0108489990234375, 0.0079345703125, 0.33154296875, 0.13720703125, 0.00441741943359375, 0.005779266357421875, 0.0020198822021484375, 0.041839599609375, 0.002597808837890625, 0.021697998046875, 5.042552947998047e-05, 0.0166778564453125, 0.0302276611328125, 0.0003170967102050781, 0.253662109375, 0.0831298828125, 0.0141143798828125, 0.0008358955383300781, 0.93798828125, 0.12841796875, 0.86474609375, 0.149658203125, 1.0400390625, 1.0009765625, 0.0718994140625, 0.2113037109375, 0.0001366138458251953, 0.0285186767578125, 2.014636993408203e-05, 0.0033473968505859375, 0.014251708984375, 2.029296875, 0.98095703125, 0.256103515625, 0.01111602783203125, 0.0001138448715209961, 0.0017271041870117188, 0.0035190582275390625], "tokens": [275, 319, 275, 319, 477, 601, 322, 3380, 1451, 432, 4702, 32, 275, 569, 284, 562, 629, 622, 1250, 346, 301, 291, 442, 3380, 1250, 45, 284, 320, 446, 1022, 275, 319, 1390, 322, 1334, 432, 312, 8742, 32, 275, 319, 275, 319, 477, 753, 4406, 17417, 32, 275, 319, 477, 601]}
{"line_number": 228, "line_type": "original", "code": "            while (count <= index) {", "entropy": 2.33203125, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [5.9140625, 8.2421875, 0.08172607421875, 0.50537109375, 3.44140625, 0.280517578125, 0.08935546875, 0.0955810546875], "tokens": [1468, 2218, 308, 998, 2511, 1650, 27, 301]}
{"line_number": 228, "line_type": "generated", "code": "\n     * @return the total number of elements.\n     */\n    public int getSize() {\n        return totalSize;\n    }\n\n    /**\n     * Get the size of a dimension.\n     *\n     * @param d Dimension.\n     * @return the size", "entropy": 0.197021484375, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.37646484375, 0.085205078125, 0.1510009765625, 0.007232666015625, 0.10748291015625, 0.27197265625, 0.10968017578125, 0.02056884765625, 0.045928955078125, 0.11737060546875, 0.034576416015625, 0.031341552734375, 0.040924072265625, 0.00920867919921875, 0.378173828125, 0.1231689453125, 0.0044708251953125, 0.006557464599609375, 0.002880096435546875, 0.0504150390625, 0.0029087066650390625, 0.013885498046875, 5.698204040527344e-05, 0.0197906494140625, 0.05224609375, 0.00033783912658691406, 0.252685546875, 0.0765380859375, 0.01396942138671875, 0.00103759765625, 1.0830078125, 0.151611328125, 0.88330078125, 0.15087890625, 1.02734375, 1.05078125, 0.0653076171875, 0.00814056396484375, 7.009506225585938e-05, 0.306640625, 0.0003986358642578125, 0.01023101806640625, 0.0166473388671875, 1.9111328125, 0.79052734375, 0.2088623046875, 0.00909423828125, 8.296966552734375e-05, 0.0016622543334960938, 0.004177093505859375, 0.043212890625, 0.11297607421875], "tokens": [275, 319, 477, 601, 322, 3380, 1451, 432, 4702, 32, 275, 569, 284, 562, 629, 622, 1250, 346, 301, 291, 442, 3380, 1250, 45, 284, 320, 446, 1022, 275, 319, 1390, 322, 1334, 432, 312, 8742, 32, 275, 319, 275, 319, 477, 753, 343, 17417, 32, 275, 319, 477, 601, 322, 1334]}
{"line_number": 229, "line_type": "original", "code": "                count += offset;", "entropy": 3.869140625, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [8.109375, 6.8203125, 0.7421875, 2.228515625, 1.4501953125], "tokens": [2071, 2385, 1454, 3401, 45]}
{"line_number": 229, "line_type": "generated", "code": "\n     */\n    public int getSize() {\n        return totalSize;\n    }\n\n    /**\n     * Get the number of elements for the given dimension.\n     *\n     * @param dimension Dimension.\n     * @return the size of the unidimensional counter", "entropy": 0.261474609375, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.494384765625, 0.07196044921875, 0.0128631591796875, 0.01197052001953125, 0.12841796875, 0.047943115234375, 0.0016422271728515625, 0.004215240478515625, 0.0027866363525390625, 0.09283447265625, 0.004848480224609375, 0.0159759521484375, 6.699562072753906e-05, 0.024810791015625, 0.09588623046875, 0.0003082752227783203, 0.2315673828125, 0.0640869140625, 0.01479339599609375, 0.0004925727844238281, 0.96240234375, 0.1422119140625, 1.59375, 0.00933074951171875, 0.5, 1.658203125, 0.7099609375, 1.095703125, 0.1419677734375, 0.0565185546875, 0.011016845703125, 7.236003875732422e-05, 0.028076171875, 0.00014078617095947266, 0.0038509368896484375, 0.0216827392578125, 1.2080078125, 1.2958984375, 0.263916015625, 0.0152587890625, 0.00018215179443359375, 0.0014972686767578125, 0.0052947998046875, 0.045166015625, 0.86474609375, 0.1890869140625, 0.1114501953125, 1.2880859375, 0.0008063316345214844, 0.0082855224609375, 0.0184478759765625, 0.0251922607421875], "tokens": [275, 569, 284, 562, 629, 622, 1250, 346, 301, 291, 442, 3380, 1250, 45, 284, 320, 446, 1022, 275, 319, 1390, 322, 1451, 432, 4702, 436, 322, 2702, 8742, 32, 275, 319, 275, 319, 477, 753, 8742, 17417, 32, 275, 319, 477, 601, 322, 1334, 432, 322, 707, 314, 39786, 279, 7022]}
{"line_number": 230, "line_type": "original", "code": "                ++idx;", "entropy": 5.42578125, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [9.6875, 8.734375, 3.248046875, 0.0316162109375], "tokens": [2071, 3311, 2875, 45]}
{"line_number": 230, "line_type": "generated", "code": "\n    public int getSize() {\n        return totalSize;\n    }\n\n    /**\n     * Get the number of elements for the given dimension.\n     *\n     * @param dimension Dimension.\n     * @return the number of elements for the given dimension.\n     *", "entropy": 0.265625, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.30078125, 0.361572265625, 0.099609375, 0.0517578125, 0.0032939910888671875, 0.0090484619140625, 0.0104217529296875, 0.1287841796875, 0.006740570068359375, 0.028564453125, 0.0002256631851196289, 0.059417724609375, 0.1312255859375, 0.00112152099609375, 0.244873046875, 0.06109619140625, 0.01326751708984375, 0.00063323974609375, 0.84619140625, 0.12286376953125, 1.423828125, 0.008392333984375, 0.4912109375, 1.65625, 0.76416015625, 1.1845703125, 0.10198974609375, 0.05389404296875, 0.002796173095703125, 5.829334259033203e-05, 0.030731201171875, 0.00010251998901367188, 0.004611968994140625, 0.023529052734375, 1.3330078125, 1.392578125, 0.258056640625, 0.007495880126953125, 0.00020599365234375, 0.0018329620361328125, 0.005588531494140625, 0.044525146484375, 0.89404296875, 0.0066070556640625, 0.0836181640625, 0.84912109375, 0.28955078125, 0.1956787109375, 0.04278564453125, 0.036651611328125, 0.00395965576171875, 0.1429443359375], "tokens": [284, 562, 629, 622, 1250, 346, 301, 291, 442, 3380, 1250, 45, 284, 320, 446, 1022, 275, 319, 1390, 322, 1451, 432, 4702, 436, 322, 2702, 8742, 32, 275, 319, 275, 319, 477, 753, 8742, 17417, 32, 275, 319, 477, 601, 322, 1451, 432, 4702, 436, 322, 2702, 8742, 32, 275, 319]}
{"line_number": 232, "line_type": "original", "code": "            --idx;", "entropy": 4.93359375, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [8.5546875, 5.78125, 5.328125, 0.069580078125], "tokens": [1468, 769, 2875, 45]}
{"line_number": 232, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Get the size of the specified dimension.\n     *\n     * @param dim the dimension.\n     * @return the size of the specified dimension.\n     * @throws OutOfRangeException if {@code dim} is not between\n    ", "entropy": 0.2186279296875, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.151611328125, 0.134765625, 0.2313232421875, 0.05938720703125, 0.0155792236328125, 0.0003657341003417969, 0.9521484375, 0.11981201171875, 1.220703125, 0.150634765625, 0.72900390625, 1.6123046875, 0.02374267578125, 0.02886962890625, 0.0024566650390625, 2.8014183044433594e-05, 0.0231781005859375, 9.620189666748047e-05, 0.003444671630859375, 0.022674560546875, 1.880859375, 0.84375, 0.1124267578125, 0.2724609375, 0.003780364990234375, 0.0001035928726196289, 0.00395965576171875, 0.00664520263671875, 0.0234222412109375, 0.1575927734375, 0.2685546875, 0.1143798828125, 0.64208984375, 0.01214599609375, 0.0228729248046875, 0.0021114349365234375, 0.1033935546875, 0.0020904541015625, 0.00485992431640625, 0.2298583984375, 0.00018513202667236328, 0.0003876686096191406, 0.00029206275939941406, 0.014801025390625, 0.12274169921875, 0.0008912086486816406, 0.041839599609375, 0.084716796875, 0.07257080078125, 0.2880859375, 0.387939453125, 0.160400390625], "tokens": [284, 320, 446, 1022, 275, 319, 1390, 322, 1334, 432, 322, 3191, 8742, 32, 275, 319, 275, 319, 477, 753, 4406, 322, 8742, 32, 275, 319, 477, 601, 322, 1334, 432, 322, 3191, 8742, 32, 275, 319, 477, 5117, 4306, 1419, 3198, 984, 415, 3088, 687, 4406, 111, 438, 646, 3733, 275]}
{"line_number": 233, "line_type": "original", "code": "            count -= offset;", "entropy": 4.1796875, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [8.890625, 3.845703125, 5.28515625, 2.568359375, 0.32373046875], "tokens": [1468, 2385, 5912, 3401, 45]}
{"line_number": 233, "line_type": "generated", "code": "\n    /**\n     * Get the number of elements in the dimension {@code i}.\n     *\n     * @param i Dimension.\n     * @return the size of the unidimensional counter for dimension {@code i}.\n     */\n    public int getSize(", "entropy": 0.33935546875, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.69482421875, 0.346923828125, 0.051177978515625, 0.0006866455078125, 1.1494140625, 0.096435546875, 1.3193359375, 0.00899505615234375, 0.52392578125, 0.79345703125, 0.671875, 2.60546875, 0.386962890625, 0.0014553070068359375, 0.8828125, 0.0194244384765625, 0.00279998779296875, 0.0002658367156982422, 0.036102294921875, 0.0003123283386230469, 0.00428009033203125, 0.0736083984375, 0.0244293212890625, 0.84619140625, 0.410888671875, 0.003948211669921875, 0.0003306865692138672, 0.0009374618530273438, 0.007068634033203125, 0.0552978515625, 0.55810546875, 0.08209228515625, 0.453857421875, 1.544921875, 0.000782012939453125, 0.00682830810546875, 0.0283355712890625, 0.033294677734375, 1.8017578125, 0.45703125, 0.1580810546875, 0.0009212493896484375, 0.0053253173828125, 0.0285797119140625, 0.001445770263671875, 0.79150390625, 0.01129913330078125, 0.0270538330078125, 0.0030040740966796875, 0.03472900390625, 0.58984375, 0.00940704345703125], "tokens": [284, 1022, 275, 319, 1390, 322, 1451, 432, 4702, 328, 322, 8742, 3088, 687, 595, 4009, 275, 319, 275, 319, 477, 753, 595, 17417, 32, 275, 319, 477, 601, 322, 1334, 432, 322, 707, 314, 39786, 279, 7022, 436, 8742, 3088, 687, 595, 4009, 275, 569, 284, 562, 629, 622, 1250, 26]}
{"line_number": 234, "line_type": "original", "code": "            indices[i] = idx;", "entropy": 1.9931640625, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [7.15625, 5.43359375, 0.066650390625, 0.8779296875, 0.05224609375, 0.06658935546875, 2.091796875, 0.2008056640625], "tokens": [1468, 10193, 77, 91, 79, 280, 5417, 45]}
{"line_number": 234, "line_type": "generated", "code": "\n    /**\n     * Get the size of the multidimensional counter for a given dimension.\n     *\n     * @param dimension the dimension.\n     * @return the size of the dimension.\n     * @throws OutOfRangeException if {@code dimension}", "entropy": 0.35546875, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [1.4951171875, 0.83642578125, 0.0626220703125, 0.0009732246398925781, 1.18359375, 0.1318359375, 1.7353515625, 0.150390625, 0.75146484375, 3.03125, 0.00817108154296875, 0.0087738037109375, 0.0036754608154296875, 0.14794921875, 1.3974609375, 1.2021484375, 0.44873046875, 0.1170654296875, 0.038543701171875, 0.0033283233642578125, 8.797645568847656e-05, 0.058685302734375, 0.00015103816986083984, 0.00719451904296875, 0.0271453857421875, 1.16796875, 0.59423828125, 0.1307373046875, 0.243896484375, 0.00467681884765625, 0.0002751350402832031, 0.004241943359375, 0.01428985595703125, 0.0242767333984375, 0.2052001953125, 0.479736328125, 0.126220703125, 1.630859375, 0.08758544921875, 0.0031185150146484375, 0.1749267578125, 0.002170562744140625, 0.00650787353515625, 0.377685546875, 0.0004658699035644531, 0.0003418922424316406, 0.0005273818969726562, 0.017730712890625, 0.23828125, 0.0013599395751953125, 0.03802490234375, 0.065673828125], "tokens": [284, 1022, 275, 319, 1390, 322, 1334, 432, 322, 10151, 314, 39786, 279, 7022, 436, 312, 2702, 8742, 32, 275, 319, 275, 319, 477, 753, 8742, 322, 8742, 32, 275, 319, 477, 601, 322, 1334, 432, 322, 8742, 32, 275, 319, 477, 5117, 4306, 1419, 3198, 984, 415, 3088, 687, 8742, 111]}
{"line_number": 237, "line_type": "original", "code": "        int idx = 1;", "entropy": 1.6787109375, "is_bug_line": true, "sus_score": 1.0, "per_token_entropy": [1.861328125, 3.029296875, 6.0859375, 0.058563232421875, 0.443115234375, 0.2330322265625, 0.037567138671875], "tokens": [351, 629, 5417, 280, 225, 35, 45]}
{"line_number": 237, "line_type": "generated", "code": "        */\n    public int[] getSizes() {\n        return size;\n    }\n\n    /**\n     * Get the offset of the unidimensional counter for each dimension.\n     *\n     * @return the offsets of the unidimensional counter in each dimension", "entropy": 0.332275390625, "is_bug_line": true, "sus_score": 1.0, "per_token_entropy": [1.8681640625, 1.3984375, 0.018798828125, 0.01053619384765625, 0.009002685546875, 0.00885772705078125, 0.00675201416015625, 0.81982421875, 0.00616455078125, 0.007144927978515625, 0.07513427734375, 0.07806396484375, 0.243896484375, 0.1976318359375, 0.07781982421875, 0.0015888214111328125, 0.375244140625, 0.07000732421875, 0.03997802734375, 0.0005340576171875, 0.85205078125, 0.1597900390625, 2.06640625, 1.1181640625, 0.81689453125, 1.5244140625, 0.001678466796875, 0.0213470458984375, 0.01074981689453125, 0.156005859375, 1.6748046875, 0.75390625, 0.451416015625, 0.0814208984375, 0.031890869140625, 0.0009288787841796875, 0.08984375, 0.0005974769592285156, 0.032867431640625, 0.0035915374755859375, 0.061676025390625, 0.7001953125, 0.57177734375, 0.038177490234375, 0.1614990234375, 0.00095367431640625, 0.0080718994140625, 0.011260986328125, 0.0684814453125, 0.4443359375, 0.011688232421875, 0.04266357421875], "tokens": [351, 569, 284, 562, 629, 1178, 622, 16315, 346, 301, 291, 442, 1334, 45, 284, 320, 446, 1022, 275, 319, 1390, 322, 3401, 432, 322, 707, 314, 39786, 279, 7022, 436, 2504, 8742, 32, 275, 319, 275, 319, 477, 601, 322, 21025, 432, 322, 707, 314, 39786, 279, 7022, 328, 2504, 8742]}
{"line_number": 238, "line_type": "original", "code": "        while (count < index) {", "entropy": 2.029296875, "is_bug_line": true, "sus_score": 1.0, "per_token_entropy": [3.478515625, 8.3515625, 0.034912109375, 0.413330078125, 1.9638671875, 1.8017578125, 0.10870361328125, 0.08453369140625], "tokens": [351, 2218, 308, 998, 333, 1650, 27, 301]}
{"line_number": 238, "line_type": "generated", "code": "\n        return size[i];", "entropy": 0.57568359375, "is_bug_line": true, "sus_score": 1.0, "per_token_entropy": [1.748046875, 0.271484375, 0.1290283203125, 0.2802734375, 0.9609375, 0.0657958984375], "tokens": [291, 442, 1334, 77, 91, 970]}
{"line_number": 239, "line_type": "original", "code": "            count += idx;", "entropy": 4.4453125, "is_bug_line": true, "sus_score": 1.0, "per_token_entropy": [7.0703125, 7.609375, 0.480712890625, 5.55078125, 1.5146484375], "tokens": [1468, 2385, 1454, 5417, 45]}
{"line_number": 239, "line_type": "generated", "code": "\n        return size;\n    }\n\n    /**\n     * Get the number of elements in the multidimensional counter.\n     *\n     * @return the number of elements in the multidimensional counter.\n     */\n    public int getCount() {\n        return", "entropy": 0.2447509765625, "is_bug_line": true, "sus_score": 1.0, "per_token_entropy": [0.2435302734375, 0.1209716796875, 0.2362060546875, 0.128662109375, 0.050689697265625, 0.0018701553344726562, 0.421142578125, 0.08160400390625, 0.02655029296875, 0.00045943260192871094, 0.87158203125, 0.16552734375, 1.5380859375, 0.01189422607421875, 1.1005859375, 0.2880859375, 0.64990234375, 0.7431640625, 0.0030536651611328125, 0.00643157958984375, 0.0014200210571289062, 0.047332763671875, 1.3994140625, 0.01142120361328125, 0.0005784034729003906, 0.06829833984375, 0.0007762908935546875, 0.02069091796875, 0.4150390625, 0.042266845703125, 0.490966796875, 0.009063720703125, 0.21923828125, 1.072265625, 0.07843017578125, 0.06719970703125, 0.002483367919921875, 0.0040740966796875, 0.0011768341064453125, 0.009674072265625, 0.029998779296875, 0.0030460357666015625, 0.059417724609375, 0.01678466796875, 0.0300445556640625, 0.29443359375, 0.312744140625, 1.1064453125, 0.048065185546875, 0.004856109619140625, 0.1339111328125, 0.036712646484375], "tokens": [291, 442, 1334, 45, 284, 320, 446, 1022, 275, 319, 1390, 322, 1451, 432, 4702, 328, 322, 10151, 314, 39786, 279, 7022, 32, 275, 319, 275, 319, 477, 601, 322, 1451, 432, 4702, 328, 322, 10151, 314, 39786, 279, 7022, 32, 275, 569, 284, 562, 629, 622, 1534, 346, 301, 291, 442]}
{"line_number": 240, "line_type": "original", "code": "            ++idx;", "entropy": 4.11328125, "is_bug_line": true, "sus_score": 1.0, "per_token_entropy": [7.921875, 5.6171875, 2.875, 0.036376953125], "tokens": [1468, 3311, 2875, 45]}
{"line_number": 240, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Get the offset between two multidimensional counter slots in a given dimension.\n     *\n     * @param dimension Dimension.\n     * @return the offset between two multidimensional counter slots.\n     * @throws OutOf", "entropy": 0.347412109375, "is_bug_line": true, "sus_score": 1.0, "per_token_entropy": [0.164306640625, 0.043670654296875, 0.37939453125, 0.06536865234375, 0.03045654296875, 8.225440979003906e-05, 0.80810546875, 0.1578369140625, 2.494140625, 1.7041015625, 1.4267578125, 1.65234375, 0.004314422607421875, 0.005023956298828125, 0.00315093994140625, 0.37353515625, 0.2437744140625, 0.85986328125, 1.05859375, 0.890625, 0.2022705078125, 0.0225982666015625, 0.002223968505859375, 0.000537872314453125, 0.09088134765625, 7.152557373046875e-05, 0.0303955078125, 0.0162506103515625, 0.71630859375, 0.94677734375, 0.2353515625, 0.00473785400390625, 0.0001354217529296875, 0.0015649795532226562, 0.00518798828125, 0.0411376953125, 0.3740234375, 0.76220703125, 0.1884765625, 0.463623046875, 0.001556396484375, 0.004749298095703125, 0.001117706298828125, 0.03277587890625, 0.0301971435546875, 1.0888671875, 0.003658294677734375, 0.219482421875, 0.005786895751953125, 0.009063720703125, 0.1954345703125, 0.0007686614990234375], "tokens": [284, 320, 446, 1022, 275, 319, 1390, 322, 3401, 3733, 3134, 10151, 314, 39786, 279, 7022, 20508, 328, 312, 2702, 8742, 32, 275, 319, 275, 319, 477, 753, 8742, 17417, 32, 275, 319, 477, 601, 322, 3401, 3733, 3134, 10151, 314, 39786, 279, 7022, 20508, 32, 275, 319, 477, 5117, 4306, 1419]}
{"line_number": 242, "line_type": "original", "code": "        --idx;", "entropy": 4.86328125, "is_bug_line": true, "sus_score": 1.0, "per_token_entropy": [5.46875, 9.3515625, 4.578125, 0.05621337890625], "tokens": [351, 769, 2875, 45]}
{"line_number": 242, "line_type": "generated", "code": "\n    /**\n     * Get the total number of elements in the given dimension.\n     *\n     * @param i Dimension.\n     * @return the size of the multidimensional counter in the given dimension.\n     */\n    public int getSize(int i", "entropy": 0.292724609375, "is_bug_line": true, "sus_score": 1.0, "per_token_entropy": [0.50830078125, 0.2203369140625, 0.04461669921875, 0.00043487548828125, 1.1923828125, 0.1160888671875, 2.66015625, 0.0980224609375, 0.00853729248046875, 0.423828125, 0.962890625, 0.63427734375, 1.8408203125, 0.10894775390625, 0.03436279296875, 0.003887176513671875, 0.0002703666687011719, 0.038360595703125, 0.00022900104522705078, 0.006443023681640625, 0.0645751953125, 1.7890625, 0.4658203125, 0.360595703125, 0.00399017333984375, 0.00018584728240966797, 0.0010843276977539062, 0.004329681396484375, 0.050140380859375, 0.90771484375, 0.09246826171875, 0.054473876953125, 0.324951171875, 0.001811981201171875, 0.004058837890625, 0.0009632110595703125, 0.01172637939453125, 0.1336669921875, 0.256103515625, 0.54931640625, 0.14794921875, 0.014862060546875, 0.0011167526245117188, 0.84375, 0.00534820556640625, 0.01491546630859375, 0.003864288330078125, 0.01259613037109375, 0.1383056640625, 0.00411224365234375, 0.054412841796875, 0.00153350830078125], "tokens": [284, 1022, 275, 319, 1390, 322, 3380, 1451, 432, 4702, 328, 322, 2702, 8742, 32, 275, 319, 275, 319, 477, 753, 595, 17417, 32, 275, 319, 477, 601, 322, 1334, 432, 322, 10151, 314, 39786, 279, 7022, 328, 322, 2702, 8742, 32, 275, 569, 284, 562, 629, 622, 1250, 26, 410, 595]}
{"line_number": 243, "line_type": "original", "code": "        indices[last] = idx;", "entropy": 2.044921875, "is_bug_line": true, "sus_score": 1.0, "per_token_entropy": [3.81640625, 8.9765625, 0.425048828125, 1.6318359375, 0.1043701171875, 0.0732421875, 1.1982421875, 0.1319580078125], "tokens": [351, 10193, 77, 2135, 79, 280, 5417, 45]}
{"line_number": 243, "line_type": "generated", "code": "\n     */\n    public int getCount(int idx) {\n        return uniCounter[idx];\n    }\n\n    /**\n     * Get the number of multidimensional counter slots in the last dimension.\n     *\n     * @return the size of the multid", "entropy": 0.441162109375, "is_bug_line": true, "sus_score": 1.0, "per_token_entropy": [0.84814453125, 0.9501953125, 0.345458984375, 0.8427734375, 1.62109375, 0.88427734375, 1.29296875, 0.458984375, 0.341796875, 3.12109375, 0.385498046875, 0.40087890625, 0.1439208984375, 0.61376953125, 1.638671875, 0.08331298828125, 0.720703125, 0.01751708984375, 0.10919189453125, 0.05224609375, 0.0017719268798828125, 0.33447265625, 0.10174560546875, 0.279541015625, 0.0002429485321044922, 1.125, 0.1898193359375, 1.95703125, 0.008636474609375, 1.376953125, 0.0025959014892578125, 0.00360107421875, 0.003215789794921875, 0.198974609375, 0.1590576171875, 0.389892578125, 0.7392578125, 0.70166015625, 0.0882568359375, 0.017578125, 0.003208160400390625, 0.000457763671875, 0.053314208984375, 0.0012969970703125, 0.00479888916015625, 0.0017900466918945312, 0.0175933837890625, 0.2359619140625, 0.009002685546875, 0.006061553955078125, 0.0523681640625, 0.0011959075927734375], "tokens": [275, 569, 284, 562, 629, 622, 1534, 26, 410, 5417, 27, 301, 291, 442, 29607, 6477, 77, 2875, 970, 284, 320, 446, 1022, 275, 319, 1390, 322, 1451, 432, 10151, 314, 39786, 279, 7022, 20508, 328, 322, 2401, 8742, 32, 275, 319, 275, 319, 477, 601, 322, 1334, 432, 322, 10151, 314]}
{"line_number": 245, "line_type": "original", "code": "        return indices;", "entropy": 3.673828125, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [5.3671875, 1.353515625, 6.7578125, 1.2158203125], "tokens": [351, 442, 10193, 45]}
{"line_number": 245, "line_type": "generated", "code": "\n    public int size() {\n        return totalSize;\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public boolean isEmpty() {\n        return totalSize == 0;\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    public boolean contains(", "entropy": 0.2005615234375, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.5302734375, 0.626953125, 1.2578125, 1.548828125, 0.006412506103515625, 0.011383056640625, 0.0677490234375, 0.0216064453125, 0.421630859375, 0.0020580291748046875, 0.2083740234375, 0.0158233642578125, 0.0009751319885253906, 0.272216796875, 0.0258026123046875, 0.0215301513671875, 0.0001552104949951172, 0.57275390625, 0.001064300537109375, 0.0008940696716308594, 0.00269317626953125, 0.2103271484375, 0.5205078125, 0.302734375, 1.1669921875, 0.309326171875, 0.0016574859619140625, 0.002559661865234375, 0.0101318359375, 0.0075531005859375, 0.27099609375, 0.0004858970642089844, 0.045135498046875, 0.0024700164794921875, 0.00011491775512695312, 0.003658294677734375, 0.00811004638671875, 0.0019779205322265625, 0.155029296875, 0.0160675048828125, 0.01345062255859375, 0.00189971923828125, 0.489013671875, 0.0008397102355957031, 0.00042176246643066406, 0.0036907196044921875, 0.297119140625, 0.2939453125, 0.10101318359375, 0.431640625, 0.006496429443359375, 0.135009765625], "tokens": [284, 562, 629, 1334, 346, 301, 291, 442, 3380, 1250, 45, 284, 320, 446, 1022, 275, 319, 3088, 18446, 111, 275, 569, 284, 562, 1905, 29073, 346, 301, 291, 442, 3380, 1250, 610, 225, 34, 45, 284, 320, 446, 1022, 275, 319, 3088, 18446, 111, 275, 569, 284, 562, 1905, 4304, 26]}
{"line_number": 281, "line_type": "original", "code": "        return totalSize;", "entropy": 2.125, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [5.2578125, 1.2919921875, 3.900390625, 0.016937255859375, 0.159423828125], "tokens": [351, 442, 3380, 1250, 45]}
{"line_number": 281, "line_type": "generated", "code": "\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public int hashCode() {\n        final int prime = 31;\n        int result = 1;\n        result = prime * result + Arrays.hashCode(size);\n        result = prime *", "entropy": 0.1640625, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [1.572265625, 0.3291015625, 0.0750732421875, 0.00037026405334472656, 0.96630859375, 0.0069122314453125, 0.001056671142578125, 0.00550079345703125, 0.2196044921875, 0.01016998291015625, 0.0298309326171875, 0.0008525848388671875, 0.00763702392578125, 0.006793975830078125, 0.9287109375, 0.0772705078125, 0.0035877227783203125, 0.0037288665771484375, 0.08251953125, 0.8740234375, 0.083984375, 0.1422119140625, 0.00156402587890625, 0.0011510848999023438, 0.006061553955078125, 0.0011892318725585938, 0.0002377033233642578, 0.00927734375, 0.019012451171875, 0.0167694091796875, 0.0003542900085449219, 0.01641845703125, 0.00653839111328125, 0.004825592041015625, 0.157470703125, 0.273681640625, 0.0029735565185546875, 0.04986572265625, 0.0011157989501953125, 0.0014467239379882812, 0.02935791015625, 0.9921875, 0.0033664703369140625, 0.0016689300537109375, 0.01061248779296875, 0.58740234375, 0.0013141632080078125, 0.2015380859375, 0.69873046875, 0.00015938282012939453, 0.0019254684448242188, 0.0017309188842773438], "tokens": [284, 1022, 275, 319, 3088, 18446, 111, 275, 569, 284, 477, 1788, 284, 562, 629, 17772, 346, 301, 291, 1158, 629, 16853, 280, 225, 37, 35, 45, 291, 629, 1056, 280, 225, 35, 45, 291, 1056, 280, 16853, 319, 1056, 474, 14473, 32, 14948, 26, 891, 293, 291, 1056, 280, 16853, 319]}
{"line_number": 196, "line_type": "original", "code": "        return new Iterator();", "entropy": 3.462890625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [5.9921875, 1.1328125, 2.94921875, 5.26953125, 1.97265625], "tokens": [351, 442, 537, 14743, 473]}
{"line_number": 196, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Get the number of slots in the given dimension.\n     *\n     * @param dim Dimension.\n     * @return the number of slots.\n     * @throws OutOfRangeException if {@code dim} is not between\n     *", "entropy": 0.211669921875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.10205078125, 0.0013971328735351562, 0.28125, 0.017974853515625, 0.0097198486328125, 8.14199447631836e-05, 0.5693359375, 0.2352294921875, 1.9609375, 0.004421234130859375, 1.7744140625, 0.42529296875, 1.115234375, 1.728515625, 0.01522064208984375, 0.08251953125, 0.007358551025390625, 3.921985626220703e-05, 0.036712646484375, 0.00017714500427246094, 0.004016876220703125, 0.0027141571044921875, 0.2607421875, 0.185791015625, 0.26220703125, 0.007419586181640625, 0.0001207590103149414, 0.0015611648559570312, 0.0114898681640625, 0.109375, 0.23681640625, 0.00405120849609375, 0.029937744140625, 0.468505859375, 0.0016155242919921875, 0.009979248046875, 0.0014505386352539062, 0.00592041015625, 0.14697265625, 5.0067901611328125e-05, 0.0001462697982788086, 0.00015997886657714844, 0.01044464111328125, 0.0570068359375, 0.0003428459167480469, 0.062744140625, 0.0211639404296875, 0.0355224609375, 0.358642578125, 0.15625, 0.189208984375, 2.384185791015625e-05], "tokens": [284, 320, 446, 1022, 275, 319, 1390, 322, 1451, 432, 20508, 328, 322, 2702, 8742, 32, 275, 319, 275, 319, 477, 753, 4406, 17417, 32, 275, 319, 477, 601, 322, 1451, 432, 20508, 32, 275, 319, 477, 5117, 4306, 1419, 3198, 984, 415, 3088, 687, 4406, 111, 438, 646, 3733, 275, 319]}
{"line_number": 205, "line_type": "original", "code": "        return dimension;", "entropy": 4.30078125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [3.330078125, 4.078125, 8.7578125, 1.0322265625], "tokens": [351, 442, 8742, 45]}
{"line_number": 205, "line_type": "generated", "code": "    }\n\n    /**\n     * Get the size of the specified dimension.\n     *\n     * @param dimension Dimension.\n     * @return the size of the specified dimension.\n     * @throws OutOfRangeException if {@code dimension} is not between\n     *", "entropy": 0.2318115234375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [1.568359375, 0.2354736328125, 0.71826171875, 0.08953857421875, 0.0140533447265625, 0.0024585723876953125, 0.65087890625, 0.1220703125, 0.6875, 0.282470703125, 0.6123046875, 2.462890625, 0.02545166015625, 0.076904296875, 0.007106781005859375, 0.00012767314910888672, 0.025177001953125, 6.008148193359375e-05, 0.0028743743896484375, 0.005985260009765625, 0.8583984375, 0.5751953125, 0.26171875, 0.01358795166015625, 0.00024259090423583984, 0.0010442733764648438, 0.00809478759765625, 0.0721435546875, 0.12298583984375, 0.5458984375, 0.0604248046875, 0.497314453125, 0.009429931640625, 0.017059326171875, 0.037689208984375, 0.020660400390625, 0.0020198822021484375, 0.006114959716796875, 0.1900634765625, 5.710124969482422e-05, 0.00018966197967529297, 0.00014650821685791016, 0.01030731201171875, 0.11248779296875, 0.0005822181701660156, 0.031097412109375, 0.0394287109375, 0.0765380859375, 0.3984375, 0.461669921875, 0.033905029296875, 0.0001519918441772461], "tokens": [264, 320, 446, 1022, 275, 319, 1390, 322, 1334, 432, 322, 3191, 8742, 32, 275, 319, 275, 319, 477, 753, 8742, 17417, 32, 275, 319, 477, 601, 322, 1334, 432, 322, 3191, 8742, 32, 275, 319, 477, 5117, 4306, 1419, 3198, 984, 415, 3088, 687, 8742, 111, 438, 646, 3733, 275, 319]}
