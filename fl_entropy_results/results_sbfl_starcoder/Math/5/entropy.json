{"line_number": 305, "line_type": "original", "code": "            return NaN;", "entropy": 3.66015625, "is_bug_line": true, "sus_score": 1.0, "per_token_entropy": [6.765625, 2.64453125, 4.98828125, 0.2403564453125], "tokens": [1468, 442, 21644, 45]}
{"line_number": 305, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": true, "sus_score": 1.0, "per_token_entropy": [], "tokens": []}
{"line_number": 1228, "line_type": "original", "code": "        return \"(\" + real + \", \" + imaginary + \")\";", "entropy": 0.56591796875, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [4.57421875, 0.92236328125, 0.5615234375, 0.0115966796875, 0.54345703125, 0.025299072265625, 0.6494140625, 0.0005488395690917969, 0.00787353515625, 0.0037326812744140625, 0.0012607574462890625, 0.0047454833984375, 0.0482177734375], "tokens": [351, 442, 31063, 474, 4011, 474, 3003, 313, 474, 17463, 3172, 474, 34348]}
{"line_number": 1228, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [], "tokens": []}
{"line_number": 304, "line_type": "original", "code": "        if (real == 0.0 && imaginary == 0.0) {", "entropy": 0.68408203125, "is_bug_line": false, "sus_score": 0.4472135954999579, "per_token_entropy": [5.3125, 1.7451171875, 0.15234375, 2.515625, 0.6513671875, 1.06640625, 0.034759521484375, 0.60546875, 0.030487060546875, 0.56787109375, 0.045013427734375, 0.0021457672119140625, 0.0728759765625, 0.01085662841796875, 0.0026264190673828125, 0.007568359375, 0.0005702972412109375, 0.1328125, 0.04437255859375], "tokens": [351, 415, 308, 4543, 610, 225, 34, 32, 34, 962, 17463, 3172, 610, 225, 34, 32, 34, 27, 301]}
{"line_number": 304, "line_type": "generated", "code": "\n\n    /**\n     * Get a hashCode for the complex number.\n     * Any {@code NaN} value in real or imaginary part produces the same\n     * hash code.\n     *\n     * @return a hash code value for this object.\n     */\n    @", "entropy": 0.1571044921875, "is_bug_line": false, "sus_score": 0.4472135954999579, "per_token_entropy": [0.96728515625, 0.1014404296875, 0.1258544921875, 0.00019073486328125, 1.13671875, 0.21240234375, 0.06573486328125, 0.00016820430755615234, 0.11175537109375, 0.0283050537109375, 0.02679443359375, 0.033935546875, 0.1712646484375, 0.0005965232849121094, 0.6748046875, 0.5439453125, 0.00016629695892333984, 0.1650390625, 0.0457763671875, 0.10504150390625, 0.452880859375, 0.009552001953125, 0.01412200927734375, 0.00011622905731201172, 2.2649765014648438e-06, 0.478271484375, 0.24755859375, 0.92431640625, 0.09185791015625, 0.233154296875, 0.00011134147644042969, 0.006130218505859375, 0.03192138671875, 0.69140625, 0.0038509368896484375, 0.0048828125, 0.08282470703125, 8.893013000488281e-05, 0.0202178955078125, 0.0006222724914550781, 0.11260986328125, 0.002437591552734375, 0.004486083984375, 0.0028839111328125, 0.0005488395690917969, 0.0009531974792480469, 0.0323486328125, 0.1561279296875, 0.0008425712585449219, 0.0347900390625, 0.00772857666015625, 0.0072174072265625], "tokens": [446, 1022, 275, 319, 1390, 312, 17772, 436, 322, 8640, 1451, 32, 275, 319, 6204, 3088, 687, 21644, 111, 786, 328, 4011, 556, 17463, 3172, 1742, 20640, 322, 2432, 275, 319, 3677, 1340, 32, 275, 319, 275, 319, 477, 601, 312, 3677, 1340, 786, 436, 458, 1300, 32, 275, 569, 284, 477]}
{"line_number": 300, "line_type": "original", "code": "        if (isNaN) {", "entropy": 2.3359375, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [4.90625, 4.91796875, 0.1944580078125, 3.44921875, 0.52783203125, 0.01800537109375], "tokens": [351, 415, 308, 26821, 27, 301]}
{"line_number": 300, "line_type": "generated", "code": "\n        }\n        return false;\n    }\n\n    /**\n     * Get a hashCode for the complex number.\n     * @return a hash code value for this object.\n     */\n    @Override\n    public int hashCode() {\n        if (isNaN) {\n            return ", "entropy": 0.0849609375, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [0.1387939453125, 0.10546875, 0.1688232421875, 0.004299163818359375, 0.0022525787353515625, 0.0006251335144042969, 0.04315185546875, 0.0022983551025390625, 0.10870361328125, 0.0312347412109375, 0.057708740234375, 8.881092071533203e-05, 0.63037109375, 0.0933837890625, 0.071533203125, 0.0001596212387084961, 0.0865478515625, 0.0263519287109375, 0.0233154296875, 0.03131103515625, 0.180419921875, 0.0005578994750976562, 1.7060546875, 0.003631591796875, 0.0249176025390625, 0.0076446533203125, 0.01210784912109375, 0.006298065185546875, 0.0010004043579101562, 0.000888824462890625, 0.0263824462890625, 0.044586181640625, 0.0089111328125, 0.03717041015625, 0.006496429443359375, 0.005664825439453125, 4.601478576660156e-05, 0.002552032470703125, 0.0002911090850830078, 0.0008168220520019531, 0.0001010894775390625, 0.0283203125, 0.006099700927734375, 0.040313720703125, 0.40673828125, 0.1002197265625, 0.00447845458984375, 0.03863525390625, 0.00753021240234375, 0.011077880859375, 0.057342529296875, 0.01373291015625], "tokens": [291, 320, 291, 442, 901, 45, 284, 320, 446, 1022, 275, 319, 1390, 312, 17772, 436, 322, 8640, 1451, 32, 275, 319, 477, 601, 312, 3677, 1340, 786, 436, 458, 1300, 32, 275, 569, 284, 477, 1788, 284, 562, 629, 17772, 346, 301, 291, 415, 308, 26821, 27, 301, 324, 442, 225]}
{"line_number": 348, "line_type": "original", "code": "                return (real == c.real) && (imaginary == c.imaginary);", "entropy": 0.95556640625, "is_bug_line": false, "sus_score": 0.1543033499620919, "per_token_entropy": [9.0859375, 1.759765625, 3.28515625, 0.849609375, 0.404296875, 1.767578125, 0.2410888671875, 0.1103515625, 0.1849365234375, 0.093505859375, 0.297607421875, 0.0062713623046875, 0.00023686885833740234, 0.006378173828125, 0.00579833984375, 0.00011432170867919922, 0.0051116943359375, 8.416175842285156e-05, 0.049713134765625], "tokens": [2071, 442, 308, 4543, 610, 281, 32, 4543, 27, 962, 308, 17792, 3172, 610, 281, 32, 17792, 3172, 293]}
{"line_number": 348, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.1543033499620919, "per_token_entropy": [], "tokens": []}
{"line_number": 344, "line_type": "original", "code": "            Complex c = (Complex)other;", "entropy": 3.130859375, "is_bug_line": false, "sus_score": 0.14907119849998599, "per_token_entropy": [6.5546875, 7.54296875, 1.9912109375, 0.1455078125, 6.3046875, 0.0472412109375, 0.058319091796875, 4.82421875, 0.7099609375], "tokens": [1468, 19915, 281, 280, 308, 12267, 27, 2455, 45]}
{"line_number": 344, "line_type": "generated", "code": "\n     */\n    public boolean isNaN() {\n        return isNaN;\n    }\n\n    /**\n     * Checks whether either or both parts of this complex number is\n     * infinite.\n     *\n     * @return {@code true} if either or both parts of this", "entropy": 0.07525634765625, "is_bug_line": false, "sus_score": 0.14907119849998599, "per_token_entropy": [0.69873046875, 0.07232666015625, 0.0206451416015625, 0.0623779296875, 0.006683349609375, 0.0013933181762695312, 0.00020885467529296875, 0.05029296875, 0.0084686279296875, 0.12066650390625, 0.01499176025390625, 0.032867431640625, 0.0002944469451904297, 0.0148773193359375, 0.07586669921875, 0.0005784034729003906, 0.0732421875, 0.00847625732421875, 0.024993896484375, 5.984306335449219e-05, 0.2457275390625, 0.0299530029296875, 0.451416015625, 0.05810546875, 0.000370025634765625, 0.0026111602783203125, 0.0002942085266113281, 0.019775390625, 0.005756378173828125, 0.0025272369384765625, 0.07232666015625, 0.60986328125, 5.328655242919922e-05, 0.035797119140625, 0.047882080078125, 0.034881591796875, 3.552436828613281e-05, 0.266845703125, 5.817413330078125e-05, 0.0046539306640625, 0.001094818115234375, 0.479736328125, 0.0001666545867919922, 0.002460479736328125, 0.0002944469451904297, 0.01357269287109375, 0.14453125, 0.07330322265625, 0.0007877349853515625, 0.007579803466796875, 0.0013742446899414062, 0.01044464111328125], "tokens": [275, 569, 284, 562, 1905, 438, 11126, 346, 301, 291, 442, 438, 11126, 45, 284, 320, 446, 1022, 275, 319, 17279, 4946, 3154, 556, 4335, 8710, 432, 458, 8640, 1451, 438, 275, 319, 20280, 32, 275, 319, 275, 319, 477, 601, 3088, 687, 861, 111, 415, 3154, 556, 4335, 8710, 432, 458]}
{"line_number": 345, "line_type": "original", "code": "            if (c.isNaN) {", "entropy": 2.298828125, "is_bug_line": false, "sus_score": 0.14907119849998599, "per_token_entropy": [7.5078125, 3.662109375, 0.1773681640625, 5.6640625, 0.54443359375, 0.4619140625, 0.235595703125, 0.1319580078125], "tokens": [1468, 415, 308, 85, 32, 26821, 27, 301]}
{"line_number": 345, "line_type": "generated", "code": "\n    /**\n     * Returns a {@code String} representation of this complex number.\n     *\n     * @return a string representation of this complex number.\n     */\n    @Override\n    public String toString() {\n        if (isNaN) {\n            return \"NaN\";", "entropy": 0.168212890625, "is_bug_line": false, "sus_score": 0.14907119849998599, "per_token_entropy": [0.63427734375, 1.6474609375, 0.134033203125, 0.0005421638488769531, 1.8203125, 0.18798828125, 0.63916015625, 0.08258056640625, 0.71337890625, 0.0009851455688476562, 0.09368896484375, 0.000881195068359375, 0.0060577392578125, 0.082763671875, 0.00254058837890625, 0.005817413330078125, 0.00669097900390625, 0.001232147216796875, 0.419189453125, 8.821487426757812e-05, 0.0850830078125, 0.0058746337890625, 0.12890625, 0.1781005859375, 0.004150390625, 0.0012693405151367188, 0.04132080078125, 0.01197052001953125, 0.00797271728515625, 0.330078125, 0.0035247802734375, 0.060821533203125, 0.1956787109375, 0.07196044921875, 0.0002608299255371094, 0.023895263671875, 0.003101348876953125, 0.005641937255859375, 0.0008568763732910156, 0.052520751953125, 0.0576171875, 0.246337890625, 0.54541015625, 0.0127105712890625, 0.0091094970703125, 0.0462646484375, 0.00582122802734375, 0.018585205078125, 0.002002716064453125, 0.046356201171875, 0.007511138916015625, 0.0562744140625], "tokens": [284, 1022, 275, 319, 3759, 312, 3088, 687, 892, 111, 10293, 432, 458, 8640, 1451, 32, 275, 319, 275, 319, 477, 601, 312, 802, 10293, 432, 458, 8640, 1451, 32, 275, 569, 284, 477, 1788, 284, 562, 892, 11345, 346, 301, 291, 415, 308, 26821, 27, 301, 324, 442, 313, 11126, 866]}
{"line_number": 343, "line_type": "original", "code": "        if (other instanceof Complex){", "entropy": 3.951171875, "is_bug_line": false, "sus_score": 0.14586499149789456, "per_token_entropy": [1.26171875, 10.109375, 0.65966796875, 6.8828125, 3.6875, 0.0161895751953125, 5.04296875], "tokens": [351, 415, 308, 2455, 5113, 19915, 1511]}
{"line_number": 343, "line_type": "generated", "code": "        {@code NaN}.\n     */\n    public boolean isNaN() {\n        return isNaN;\n    }\n\n    /**\n     * Checks whether either or both parts of this complex number is\n     * infinite.\n     *\n     * @return true if either or both parts", "entropy": 0.11651611328125, "is_bug_line": false, "sus_score": 0.14586499149789456, "per_token_entropy": [1.2734375, 0.5615234375, 0.00211334228515625, 0.032958984375, 0.58544921875, 0.050140380859375, 0.017181396484375, 0.00897979736328125, 0.06072998046875, 0.0040130615234375, 0.001190185546875, 0.00022792816162109375, 0.004871368408203125, 0.0035495758056640625, 0.06536865234375, 0.0034503936767578125, 0.00809478759765625, 0.0001500844955444336, 0.00849151611328125, 0.024932861328125, 0.0007491111755371094, 0.06317138671875, 0.007022857666015625, 0.0228729248046875, 0.00010979175567626953, 0.23583984375, 0.0311737060546875, 0.3505859375, 0.05364990234375, 0.0003275871276855469, 0.0025463104248046875, 0.0003490447998046875, 0.021331787109375, 0.00627899169921875, 0.003406524658203125, 0.058837890625, 1.1259765625, 0.0001844167709350586, 0.029052734375, 0.054412841796875, 0.033416748046875, 2.872943878173828e-05, 0.28369140625, 0.00010609626770019531, 0.00370025634765625, 0.0010738372802734375, 0.9248046875, 0.00260162353515625, 0.01180267333984375, 0.007694244384765625, 0.0007634162902832031, 0.002597808837890625], "tokens": [351, 3088, 687, 21644, 4009, 275, 569, 284, 562, 1905, 438, 11126, 346, 301, 291, 442, 438, 11126, 45, 284, 320, 446, 1022, 275, 319, 17279, 4946, 3154, 556, 4335, 8710, 432, 458, 8640, 1451, 438, 275, 319, 20280, 32, 275, 319, 275, 319, 477, 601, 861, 415, 3154, 556, 4335, 8710]}
{"line_number": 340, "line_type": "original", "code": "        if (this == other) {", "entropy": 2.470703125, "is_bug_line": false, "sus_score": 0.1259881576697424, "per_token_entropy": [2.1484375, 11.6015625, 1.140625, 2.00390625, 1.158203125, 1.533203125, 0.12176513671875, 0.06109619140625], "tokens": [351, 415, 308, 578, 610, 1604, 27, 301]}
{"line_number": 340, "line_type": "generated", "code": "     * infinite.\n     *\n     * @return {@code true} if either (or both) real and imaginary parts are\n     * infinite, {@code false} otherwise.\n     */\n    public boolean isInfinite() {\n        return isInfinite;\n    }", "entropy": 0.2081298828125, "is_bug_line": false, "sus_score": 0.1259881576697424, "per_token_entropy": [2.4921875, 0.47216796875, 1.3994140625, 0.2763671875, 0.4609375, 0.0005884170532226562, 0.720703125, 0.00012814998626708984, 0.01287078857421875, 0.0038204193115234375, 0.052703857421875, 0.000789642333984375, 0.002307891845703125, 0.0003867149353027344, 0.03900146484375, 0.07330322265625, 0.2978515625, 0.01425933837890625, 6.794929504394531e-06, 0.0009126663208007812, 0.06402587890625, 0.1090087890625, 0.0158538818359375, 2.6226043701171875e-06, 0.23486328125, 1.646484375, 0.60693359375, 7.700920104980469e-05, 0.0268707275390625, 0.6240234375, 0.0017538070678710938, 0.0008993148803710938, 0.0035991668701171875, 0.00018930435180664062, 0.07501220703125, 0.4052734375, 0.01110076904296875, 0.03765869140625, 0.0091400146484375, 0.051361083984375, 0.005207061767578125, 0.006221771240234375, 0.0009393692016601562, 0.01727294921875, 0.00524139404296875, 0.1455078125, 0.030364990234375, 0.34130859375, 0.0004062652587890625, 0.0136871337890625, 0.00782012939453125, 0.0001844167709350586], "tokens": [262, 319, 20280, 32, 275, 319, 275, 319, 477, 601, 3088, 687, 861, 111, 415, 3154, 308, 271, 4335, 27, 4011, 461, 17463, 3172, 8710, 884, 275, 319, 20280, 30, 3088, 687, 901, 111, 5878, 32, 275, 569, 284, 562, 1905, 438, 39524, 346, 301, 291, 442, 438, 39524, 45, 284, 320]}
{"line_number": 98, "line_type": "original", "code": "    public Complex(double real, double imaginary) {", "entropy": 2.369140625, "is_bug_line": false, "sus_score": 0.06851887098275317, "per_token_entropy": [6.1875, 14.28125, 1.1015625, 5.91796875, 0.33154296875, 0.09613037109375, 0.228271484375, 0.029144287109375, 0.0011453628540039062, 0.0031757354736328125, 0.053131103515625, 0.206298828125], "tokens": [264, 562, 19915, 26, 2627, 4011, 30, 2064, 17463, 3172, 27, 301]}
{"line_number": 98, "line_type": "generated", "code": "\n     * any of the real or imaginary parts, {@link #NaN} is returned;\n     * if both arguments have a {@code NaN} value in the real and imaginary\n     * parts, {@link #NaN} is returned.\n     * <", "entropy": 0.2266845703125, "is_bug_line": false, "sus_score": 0.06851887098275317, "per_token_entropy": [0.166259765625, 0.0005469322204589844, 0.344482421875, 0.269775390625, 0.04742431640625, 0.0206298828125, 0.0254058837890625, 0.0005135536193847656, -0.0, 0.058258056640625, 0.025238037109375, 1.2626953125, 0.80859375, 0.187255859375, 0.0133209228515625, 0.0018634796142578125, 0.01024627685546875, 0.08074951171875, 0.2347412109375, 0.01103973388671875, 0.00017714500427246094, 0.61767578125, 1.380859375, 0.67724609375, 0.0067138671875, 1.041015625, 0.0166778564453125, 0.00012195110321044922, 0.0022296905517578125, 0.0004546642303466797, 0.002780914306640625, 0.28857421875, 0.884765625, 0.012939453125, 1.40234375, 0.06512451171875, 3.5762786865234375e-07, 0.036041259765625, 4.875659942626953e-05, 0.001499176025390625, 0.0003094673156738281, 0.24609375, 0.1468505859375, 0.0021419525146484375, 0.002559661865234375, 0.00118255615234375, 0.003269195556640625, 0.0002906322479248047, 0.1094970703125, 0.0251922607421875, 0.00041604042053222656, 1.2470703125], "tokens": [275, 319, 1346, 432, 322, 4011, 556, 17463, 3172, 8710, 30, 3088, 1204, 588, 11126, 111, 438, 4717, 45, 275, 319, 415, 4335, 4209, 1159, 312, 3088, 687, 21644, 111, 786, 328, 322, 4011, 461, 17463, 3172, 275, 319, 8710, 30, 3088, 1204, 588, 11126, 111, 438, 4717, 32, 275, 319, 333]}
{"line_number": 99, "line_type": "original", "code": "        this.real = real;", "entropy": 4.59765625, "is_bug_line": false, "sus_score": 0.06851887098275317, "per_token_entropy": [3.845703125, 16.734375, 1.4970703125, 3.412109375, 2.65234375, 1.95703125, 2.080078125], "tokens": [351, 458, 32, 4543, 280, 4011, 45]}
{"line_number": 99, "line_type": "generated", "code": "\n     * values are returned in the parts of the result corresponding to\n     * {@code Infinity} values in the arguments.\n     *\n     * @param  addend Value to be added to this {@code Complex}.\n     * @return {@code this + add", "entropy": 0.188232421875, "is_bug_line": false, "sus_score": 0.06851887098275317, "per_token_entropy": [1.0068359375, 0.007305145263671875, 1.0966796875, 0.039398193359375, 0.61669921875, 0.0055389404296875, 0.128173828125, 0.8818359375, 1.4901161193847656e-05, 0.0011882781982421875, 0.0010824203491210938, 1.8193359375, 2.0623207092285156e-05, 0.05181884765625, 1.1920928955078125e-05, 0.19287109375, 0.000553131103515625, 1.0, 0.00041866302490234375, 0.148681640625, 0.036376953125, 0.0019855499267578125, 1.509765625, 0.0025482177734375, 0.023345947265625, 0.0005688667297363281, 0.40576171875, 0.0001304149627685547, 0.00943756103515625, 0.000682830810546875, 0.47314453125, 0.0016574859619140625, 3.7550926208496094e-05, 0.1654052734375, 7.748603820800781e-06, 0.00021660327911376953, 0.0019121170043945312, 0.00496673583984375, 0.0243988037109375, 0.0305938720703125, 5.805492401123047e-05, 0.000823974609375, 0.078369140625, 0.00203704833984375, 1.4185905456542969e-05, 4.2319297790527344e-05, 4.756450653076172e-05, 0.00826263427734375, 5.8531761169433594e-05, 0.0022068023681640625, 0.006938934326171875, 0.0002593994140625], "tokens": [275, 319, 2078, 884, 4717, 328, 322, 8710, 432, 322, 1056, 8435, 372, 275, 319, 3088, 687, 39222, 111, 2078, 328, 322, 4209, 32, 275, 319, 275, 319, 477, 753, 225, 1015, 416, 3846, 372, 526, 3640, 372, 458, 3088, 687, 19915, 4009, 275, 319, 477, 601, 3088, 687, 458, 474, 1015]}
{"line_number": 100, "line_type": "original", "code": "        this.imaginary = imaginary;", "entropy": 3.271484375, "is_bug_line": false, "sus_score": 0.06851887098275317, "per_token_entropy": [3.623046875, 13.1875, 0.57958984375, 5.85546875, 8.046627044677734e-05, 4.28515625, 1.279296875, 0.0029506683349609375, 0.61865234375], "tokens": [351, 458, 32, 17792, 3172, 280, 17463, 3172, 45]}
{"line_number": 100, "line_type": "generated", "code": "\n     * according to the rules for {@link #add(Complex)}.\n     *\n     * @param  addend Value to be added to this {@code Complex}.\n     * @return {@code this + addend}.\n     */\n    public Complex add(Complex", "entropy": 0.07598876953125, "is_bug_line": false, "sus_score": 0.06851887098275317, "per_token_entropy": [0.451904296875, 0.006656646728515625, 0.00396728515625, 5.5789947509765625e-05, 0.007114410400390625, 0.0034847259521484375, 0.006481170654296875, 0.41455078125, 0.1002197265625, 0.475830078125, 0.04656982421875, 0.033966064453125, 0.20947265625, 0.431884765625, 0.01898193359375, 0.0007739067077636719, 0.2445068359375, 7.069110870361328e-05, 0.00992584228515625, 0.0013303756713867188, 0.61572265625, 0.0018415451049804688, 3.24249267578125e-05, 0.1483154296875, 1.621246337890625e-05, 0.00023627281188964844, 0.001735687255859375, 0.0008287429809570312, 0.02557373046875, 0.016510009765625, 7.68899917602539e-05, 0.0008978843688964844, 0.111572265625, 0.00223541259765625, 1.9431114196777344e-05, 3.075599670410156e-05, 5.352497100830078e-05, 0.014617919921875, 4.887580871582031e-05, 0.004245758056640625, 0.01363372802734375, 0.0004184246063232422, 1.5854835510253906e-05, 0.1334228515625, 0.0300750732421875, 0.19873046875, 0.00988006591796875, 0.04058837890625, 0.0040283203125, 0.0011491775512695312, 0.00031375885009765625, 0.10699462890625], "tokens": [275, 319, 9267, 372, 322, 7019, 436, 3088, 1204, 588, 669, 26, 12267, 31842, 275, 319, 275, 319, 477, 753, 225, 1015, 416, 3846, 372, 526, 3640, 372, 458, 3088, 687, 19915, 4009, 275, 319, 477, 601, 3088, 687, 458, 474, 1015, 416, 4009, 275, 569, 284, 562, 19915, 1015, 26, 12267]}
{"line_number": 102, "line_type": "original", "code": "        isNaN = Double.isNaN(real) || Double.isNaN(imaginary);", "entropy": 1.072265625, "is_bug_line": false, "sus_score": 0.06851887098275317, "per_token_entropy": [5.15234375, 6.41015625, 0.52294921875, 0.03570556640625, 5.38671875, 0.00014722347259521484, 0.0014400482177734375, 0.00034618377685546875, 0.238037109375, 0.0266265869140625, 0.01425933837890625, 0.057220458984375, 8.559226989746094e-05, 0.0011358261108398438, 0.00023746490478515625, 0.0223236083984375, 0.00036644935607910156, 1.419921875], "tokens": [351, 438, 11126, 280, 6934, 32, 26821, 26, 4543, 27, 1276, 6934, 32, 26821, 26, 17792, 3172, 293]}
{"line_number": 102, "line_type": "generated", "code": "\n     * @param addend Value to be added to this {@code Complex}.\n     * @return {@code this + addend}.\n     */\n    public Complex add(Complex addend) {\n        if (isNaN || addend.isNaN()) {\n            return", "entropy": 0.07513427734375, "is_bug_line": false, "sus_score": 0.06851887098275317, "per_token_entropy": [0.17822265625, 0.0284271240234375, 0.0753173828125, 0.0046539306640625, 0.9423828125, 2.2530555725097656e-05, 0.343994140625, 8.225440979003906e-06, 0.00022399425506591797, 0.001567840576171875, 0.00341796875, 0.0465087890625, 0.0148468017578125, 0.0001462697982788086, 0.0011272430419921875, 0.061553955078125, 0.0030059814453125, 8.118152618408203e-05, 0.0017061233520507812, 0.00010573863983154297, 0.0012645721435546875, 4.6253204345703125e-05, 0.001220703125, 0.011749267578125, 0.00037550926208496094, 7.748603820800781e-06, 0.256591796875, 0.0382080078125, 0.1146240234375, 0.01096343994140625, 0.033966064453125, 0.00983428955078125, 0.0032596588134765625, 0.00035572052001953125, 0.1424560546875, 0.0008244514465332031, 8.344650268554688e-07, 0.0007376670837402344, 0.01096343994140625, 0.12078857421875, 0.5400390625, 0.006801605224609375, 0.091064453125, 0.01332855224609375, 0.0232696533203125, 2.384185791015625e-07, 0.0013599395751953125, 0.00012099742889404297, 0.73486328125, 0.0011014938354492188, 0.005687713623046875, 0.0252532958984375], "tokens": [275, 319, 477, 753, 1015, 416, 3846, 372, 526, 3640, 372, 458, 3088, 687, 19915, 4009, 275, 319, 477, 601, 3088, 687, 458, 474, 1015, 416, 4009, 275, 569, 284, 562, 19915, 1015, 26, 12267, 1015, 416, 27, 301, 291, 415, 308, 26821, 1276, 1015, 416, 32, 26821, 1157, 301, 324, 442]}
{"line_number": 103, "line_type": "original", "code": "        isInfinite = !isNaN &&", "entropy": 3.505859375, "is_bug_line": false, "sus_score": 0.06851887098275317, "per_token_entropy": [5.1875, 5.9765625, 1.7724609375, 2.23828125, 8.1640625, 1.1484375, 0.061553955078125], "tokens": [351, 438, 39524, 280, 653, 26821, 962]}
{"line_number": 103, "line_type": "generated", "code": "\n     * @return {@code this + addend}", "entropy": 0.033233642578125, "is_bug_line": false, "sus_score": 0.06851887098275317, "per_token_entropy": [0.08306884765625, 0.086669921875, 0.00516510009765625, 0.0002084970474243164, 0.0072021484375, 6.258487701416016e-05, 0.005115509033203125, 0.006317138671875, 0.0004887580871582031, 9.059906005859375e-06, 0.1715087890625], "tokens": [275, 319, 477, 601, 3088, 687, 458, 474, 1015, 416, 111]}
{"line_number": 105, "line_type": "original", "code": "    }", "entropy": 2.2109375, "is_bug_line": false, "sus_score": 0.06851887098275317, "per_token_entropy": [3.60546875, 0.81591796875], "tokens": [264, 320]}
{"line_number": 105, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.06851887098275317, "per_token_entropy": [], "tokens": []}
