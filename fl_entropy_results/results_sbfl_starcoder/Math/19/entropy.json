{"line_number": 246, "line_type": "original", "code": "        this(0);", "entropy": 2.404296875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [2.373046875, 0.80078125, 0.354736328125, 6.625, 1.87109375], "tokens": [351, 458, 26, 34, 293]}
{"line_number": 246, "line_type": "generated", "code": "\n    }\n\n    /**\n     * @param lambda Population size.\n     * @param inputSigma Initial search volume; sigma of offspring objective variables.\n     * @param maxIterations Maximal number of iterations.\n     * @param stopFitness Whether to stop if", "entropy": 0.048004150390625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.98486328125, 0.428466796875, 0.1837158203125, 0.07891845703125, 0.0186309814453125, 0.0007672309875488281, 0.22607421875, 0.007137298583984375, 0.112548828125, 0.00798797607421875, 4.744529724121094e-05, 0.00046181678771972656, 0.0019044876098632812, 0.026519775390625, 0.00402069091796875, 0.0004513263702392578, 0.000682830810546875, 0.1070556640625, 0.0008378028869628906, 0.0020904541015625, 0.00037479400634765625, 0.0001024007797241211, 0.004459381103515625, 0.0008287429809570312, 0.00017464160919189453, 0.0004076957702636719, 2.396106719970703e-05, 7.259845733642578e-05, 0.0021266937255859375, 0.004070281982421875, 0.1102294921875, 0.0109100341796875, 0.0019254684448242188, 0.0013446807861328125, 0.10504150390625, 0.0025806427001953125, 0.007122039794921875, 0.0002315044403076172, 7.343292236328125e-05, 0.0002422332763671875, 0.001094818115234375, 0.00312042236328125, 0.0225982666015625, 0.0011625289916992188, 0.0001971721649169922, 0.00026154518127441406, 0.008819580078125, 0.0004706382751464844, 0.00962066650390625, 0.0005559921264648438, 0.0002994537353515625, 0.0016927719116210938], "tokens": [284, 320, 446, 1022, 275, 319, 477, 753, 9254, 13088, 3899, 1334, 32, 275, 319, 477, 753, 1509, 28326, 5768, 3233, 6864, 45, 16355, 432, 2126, 3393, 25110, 4886, 32, 275, 319, 477, 753, 1769, 31219, 7462, 2977, 1451, 432, 17576, 32, 275, 319, 477, 753, 4719, 48599, 14071, 372, 4719, 415]}
{"line_number": 247, "line_type": "original", "code": "    }", "entropy": 3.357421875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [2.58984375, 4.125], "tokens": [264, 320]}
{"line_number": 247, "line_type": "generated", "code": "\n     * @param stopFitness Whether to stop if objective function value is smaller than\n     * {@code stopFitness}.\n     * @param isActiveCMA Chooses the covariance matrix update method.\n     * @param diagonalOnly Number of initial iterations, where the", "entropy": 0.03094482421875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [1.1259765625, 0.18310546875, 0.005321502685546875, 0.0024929046630859375, 0.08428955078125, 0.0090179443359375, 0.0300140380859375, 0.0008845329284667969, 0.0005002021789550781, 0.0032176971435546875, 0.0087432861328125, 0.0008406639099121094, 0.0018825531005859375, 0.0018939971923828125, 0.004177093505859375, 0.00951385498046875, 0.00971221923828125, 0.0007238388061523438, 0.0173492431640625, 0.0008211135864257812, 0.0005631446838378906, 0.00043010711669921875, 0.004482269287109375, 0.047332763671875, 0.0009064674377441406, 0.0002053976058959961, 0.0002605915069580078, 0.011566162109375, 8.606910705566406e-05, 5.7697296142578125e-05, 0.0189208984375, 3.4570693969726562e-06, 1.704692840576172e-05, 0.0012483596801757812, 0.0005478858947753906, 6.0677528381347656e-05, 0.0003554821014404297, 0.0003230571746826172, 0.005390167236328125, 0.00907135009765625, 0.00020265579223632812, 0.0005016326904296875, 0.00016808509826660156, 0.0013685226440429688, 3.170967102050781e-05, 0.001415252685546875, 6.496906280517578e-05, 0.0012845993041992188, 0.0002722740173339844, 0.001026153564453125, 0.00010979175567626953, 0.0002124309539794922], "tokens": [275, 319, 477, 753, 4719, 48599, 14071, 372, 4719, 415, 25110, 667, 786, 438, 14763, 2784, 275, 319, 3088, 687, 4719, 48599, 4009, 275, 319, 477, 753, 36511, 53, 1400, 1884, 604, 1464, 322, 40204, 5045, 1974, 1411, 32, 275, 319, 477, 753, 27601, 4495, 5104, 432, 2815, 17576, 30, 2154, 322]}
{"line_number": 253, "line_type": "original", "code": "        this(lambda, null, DEFAULT_MAXITERATIONS, DEFAULT_STOPFITNESS,", "entropy": 1.8125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [3.06640625, 13.6875, 4.3515625, 0.0577392578125, 0.0127410888671875, 7.8671875, 0.039703369140625, 3.2421875, 0.0004227161407470703, 0.11279296875, 0.0013265609741210938, 0.0002493858337402344, 0.004364013671875, 0.149169921875, 0.0010900497436523438, 0.0021724700927734375, 0.0008006095886230469, 0.0157623291015625], "tokens": [351, 458, 26, 5962, 30, 744, 30, 4040, 81, 3459, 10812, 19419, 30, 4040, 81, 15707, 43781, 30]}
{"line_number": 253, "line_type": "generated", "code": "         * @param random Random generator.\n     * @param generateStatistics Whether statistic data is collected.\n     * @param valueChecker Value checker.\n     * @deprecated Use {@link #CMAESOptimizer(int, double[], int, double, boolean,", "entropy": 0.2705078125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [2.78125, 1.0673828125, 1.6025390625, 0.0215606689453125, 0.267333984375, 0.032318115234375, 0.0012464523315429688, 0.0032596588134765625, 0.248291015625, 0.0026645660400390625, 0.006622314453125, 0.004032135009765625, 0.0280303955078125, 0.00012934207916259766, 0.00222015380859375, 0.0037078857421875, 0.0001876354217529297, 0.001453399658203125, 0.0011501312255859375, 0.0018415451049804688, 0.0203704833984375, 0.056671142578125, 0.0013418197631835938, 0.0308837890625, 0.4150390625, 0.008514404296875, 1.47265625, 0.043731689453125, 0.4697265625, 0.232177734375, 1.40625, 0.0206756591796875, 0.56640625, 1.607421875, 0.4658203125, 0.0153350830078125, 0.299072265625, 0.019256591796875, 0.00010013580322265625, 0.0012073516845703125, 0.000858306884765625, 0.004177093505859375, 0.0921630859375, 0.01076507568359375, 0.408935546875, 0.0445556640625, 0.06787109375, 0.0023822784423828125, 0.04461669921875, 0.01538848876953125, 0.139404296875, 0.0030994415283203125], "tokens": [263, 319, 477, 753, 3995, 9500, 9750, 32, 275, 319, 477, 753, 4450, 13487, 14071, 33179, 706, 438, 21588, 32, 275, 319, 477, 753, 786, 14003, 3846, 26664, 32, 275, 319, 477, 15040, 4417, 3088, 1204, 588, 53, 1400, 940, 29248, 26, 410, 30, 2064, 10012, 629, 30, 2064, 30, 1905, 30]}
{"line_number": 256, "line_type": "original", "code": "    }", "entropy": 4.16796875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [3.439453125, 4.89453125], "tokens": [264, 320]}
{"line_number": 256, "line_type": "generated", "code": "\n     */\n    public CMAESOptimizer(int lambda, double[] inputSigma,\n                          int maxIterations, double stopFitness,\n                          boolean isActiveCMA, int diagonalOnly, int checkFeasableCount,\n                          RandomGenerator random, boolean generateStatistics,", "entropy": 0.0281829833984375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.51513671875, 0.5234375, 0.0302276611328125, 0.16845703125, 0.0009241104125976562, 2.9802322387695312e-06, 0.00013315677642822266, 2.2649765014648438e-05, 0.0014142990112304688, 0.028778076171875, 0.0002205371856689453, 0.00018608570098876953, 0.03192138671875, 0.0007967948913574219, 0.0002951622009277344, 2.86102294921875e-06, 0.00010514259338378906, 0.0672607421875, 0.0008392333984375, 2.8967857360839844e-05, 1.3589859008789062e-05, 1.6689300537109375e-05, 0.00469970703125, 0.00025391578674316406, 2.2530555725097656e-05, 2.8371810913085938e-05, 0.00862884521484375, 0.0007109642028808594, 4.5180320739746094e-05, 2.0265579223632812e-06, 2.1457672119140625e-06, 1.7642974853515625e-05, 0.009368896484375, 6.198883056640625e-05, 1.3113021850585938e-06, 3.254413604736328e-05, 0.022064208984375, 1.9550323486328125e-05, 2.9802322387695312e-06, 1.3113021850585938e-06, 2.384185791015625e-07, 2.2649765014648438e-06, 9.143352508544922e-05, 0.00894927978515625, 0.0011262893676757812, 0.00019276142120361328, 2.9206275939941406e-05, 0.0008063316345214844, 0.0143280029296875, 0.00012791156768798828, 1.6927719116210938e-05, 0.0240631103515625], "tokens": [275, 569, 284, 562, 390, 1400, 940, 29248, 26, 410, 9254, 30, 2064, 1178, 1509, 28326, 30, 3775, 629, 1769, 31219, 30, 2064, 4719, 48599, 30, 3775, 1905, 36511, 53, 1400, 30, 629, 27601, 4495, 30, 629, 1505, 9008, 302, 444, 1534, 30, 3775, 9500, 4815, 3995, 30, 1905, 4450, 13487, 30]}
{"line_number": 570, "line_type": "original", "code": "            lambda = 4 + (int) (3. * Math.log(dimension));", "entropy": 1.16015625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [4.84375, 5.76171875, 0.84765625, 1.947265625, 1.833984375, 0.0439453125, 1.578125, 0.44677734375, 0.10595703125, 0.48583984375, 0.0176849365234375, 3.64453125, 0.060577392578125, 0.150146484375, 0.00418853759765625, 0.11773681640625, 0.0018177032470703125, 0.078125, 0.0704345703125], "tokens": [1468, 9254, 280, 225, 38, 474, 308, 410, 27, 308, 37, 32, 319, 4175, 32, 751, 26, 11694, 876]}
{"line_number": 570, "line_type": "generated", "code": "\n        // initialize dynamic (internal) strategy parameters and constants\n        cc = (4. + mueff / dimension) /\n                (dimension + 4. + 2. * mueff / dimension);\n        cs = (mueff + 2.)", "entropy": 0.151123046875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.5244140625, 1.1259765625, 1.251953125, 1.0576171875, 0.5361328125, 0.006206512451171875, 0.04241943359375, 0.41552734375, 0.111083984375, 0.1748046875, 0.0011453628540039062, 0.1815185546875, 1.7421875, 0.0858154296875, 0.105712890625, 0.0114288330078125, 0.07525634765625, 0.006938934326171875, 0.012603759765625, 7.867813110351562e-06, 0.0114288330078125, 0.0160675048828125, 0.0038738250732421875, 0.0023975372314453125, 0.2275390625, 0.0004086494445800781, 0.002277374267578125, 0.0003666877746582031, 0.0002168416976928711, 0.0004017353057861328, 0.01131439208984375, 0.003238677978515625, 0.033294677734375, 0.002376556396484375, 0.0041656494140625, 0.0009031295776367188, 0.001407623291015625, 4.172325134277344e-06, 0.0002830028533935547, 0.0016431808471679688, 0.0011997222900390625, 0.0249481201171875, 0.0279083251953125, 0.0005574226379394531, 0.002887725830078125, 0.0010080337524414062, -0.0, 0.0005316734313964844, 0.0001895427703857422, 4.458427429199219e-05, 0.0016870498657226562, 0.00618743896484375], "tokens": [291, 434, 7379, 7094, 308, 3259, 27, 13689, 3377, 461, 12388, 291, 10639, 280, 308, 38, 32, 474, 35813, 486, 517, 8742, 27, 517, 400, 308, 11694, 474, 225, 38, 32, 474, 225, 36, 32, 319, 35813, 486, 517, 8742, 293, 291, 9101, 280, 308, 95, 340, 486, 474, 225, 36, 7447]}
{"line_number": 535, "line_type": "original", "code": "                boundaries = new double[2][];", "entropy": 2.009765625, "is_bug_line": false, "sus_score": 0.4472135954999579, "per_token_entropy": [7.20703125, 5.52734375, 1.21484375, 0.269775390625, 0.0869140625, 0.763671875, 0.07098388671875, 0.0212860107421875, 2.939453125], "tokens": [2071, 28116, 280, 537, 2064, 77, 36, 1674, 970]}
{"line_number": 535, "line_type": "generated", "code": "\n        // initialize recombination weights\n        double[] weights = new double[dimension];\n        for (int i = 0; i < weights.length; i++) {\n            weights[i] = 1.0;\n        }\n        // initialize step", "entropy": 0.4287109375, "is_bug_line": false, "sus_score": 0.4472135954999579, "per_token_entropy": [0.264404296875, 1.2470703125, 0.6640625, 2.791015625, 0.210205078125, 0.00022470951080322266, 0.30419921875, 0.204345703125, 1.705078125, 1.9453125, 1.2734375, 0.1268310546875, 0.0809326171875, 0.0038433074951171875, 0.0169677734375, 1.048828125, 0.0411376953125, 0.051239013671875, 0.71240234375, 0.00899505615234375, 0.0027751922607421875, 0.1317138671875, 0.0203704833984375, 0.01959228515625, 0.0012645721435546875, 0.0029697418212890625, 0.015869140625, 0.004840850830078125, 0.3271484375, 0.0007796287536621094, 0.00014412403106689453, 0.033050537109375, 0.165771484375, 0.0117340087890625, 0.00887298583984375, 0.0215911865234375, 0.2255859375, 0.0002868175506591797, 0.001964569091796875, 0.00146484375, 0.0025119781494140625, 1.2548828125, 0.10107421875, 0.376708984375, 0.80712890625, 1.21484375, 0.11529541015625, 0.0006308555603027344, 0.263427734375, 1.9384765625, 0.619140625, 1.90234375], "tokens": [291, 434, 7379, 316, 20858, 367, 11229, 291, 2064, 1178, 11229, 280, 537, 2064, 77, 11694, 970, 291, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 11229, 32, 1322, 45, 595, 1987, 301, 324, 11229, 77, 91, 79, 280, 225, 35, 32, 34, 45, 291, 320, 291, 434, 7379, 3111]}
{"line_number": 536, "line_type": "original", "code": "                boundaries[0] = lB;", "entropy": 2.232421875, "is_bug_line": false, "sus_score": 0.4472135954999579, "per_token_entropy": [6.9375, 8.15625, 0.8515625, 0.1568603515625, 0.021148681640625, 0.048309326171875, 3.791015625, 0.002010345458984375, 0.13134765625], "tokens": [2071, 28116, 77, 34, 79, 280, 456, 52, 45]}
{"line_number": 536, "line_type": "generated", "code": "\n        stopTolUpX = 1e3 * sigma;\n        stopTolX = 1e-11 * sigma;\n        stopTolFun = 1e-12;\n        stopTolHistFun = 1e", "entropy": 0.153076171875, "is_bug_line": false, "sus_score": 0.4472135954999579, "per_token_entropy": [0.336181640625, 0.86279296875, 0.6806640625, 1.3589859008789062e-05, 0.50146484375, 1.0341796875, 0.1378173828125, 0.6611328125, 0.09930419921875, 0.17236328125, 1.03515625, 0.337646484375, 1.1279296875, 0.12200927734375, 0.06207275390625, 0.0244903564453125, 0.0013875961303710938, 5.233287811279297e-05, 0.0155792236328125, 0.049346923828125, 0.0296630859375, 0.0078582763671875, 0.04010009765625, 0.0121917724609375, 0.1416015625, 0.0269012451171875, 0.004840850830078125, 0.0030155181884765625, 0.0018873214721679688, 0.07470703125, 0.023956298828125, 0.0011692047119140625, 5.710124969482422e-05, 0.0006151199340820312, 0.0012912750244140625, 0.01215362548828125, 0.005397796630859375, 0.022430419921875, 0.0015192031860351562, 0.06414794921875, 0.06256103515625, 0.1348876953125, 0.008697509765625, 0.00527191162109375, 0.0002758502960205078, 3.0994415283203125e-06, 0.004131317138671875, 0.00020694732666015625, 0.00024318695068359375, 0.0020656585693359375, 0.0013828277587890625, 0.0007562637329101562], "tokens": [291, 4719, 70, 362, 1386, 74, 280, 225, 35, 87, 37, 319, 16355, 45, 291, 4719, 70, 362, 74, 280, 225, 35, 87, 31, 35, 35, 319, 16355, 45, 291, 4719, 70, 362, 11591, 280, 225, 35, 87, 31, 35, 36, 45, 291, 4719, 70, 362, 21012, 11591, 280, 225, 35, 87]}
{"line_number": 537, "line_type": "original", "code": "                boundaries[1] = uB;", "entropy": 2.462890625, "is_bug_line": true, "sus_score": 0.4472135954999579, "per_token_entropy": [7.21875, 8.9140625, 1.9208984375, 0.29833984375, 0.052581787109375, 0.05230712890625, 3.578125, 0.0034923553466796875, 0.1268310546875], "tokens": [2071, 28116, 77, 35, 79, 280, 1044, 52, 45]}
{"line_number": 537, "line_type": "generated", "code": "\n        // initialize step-size control parameters\n        cc = (4.0 + mu) / (dimension + 4.0 + 2.0 * mu);\n        cs = (mu + 2.0) / (dimension + mu + ", "entropy": 0.161376953125, "is_bug_line": true, "sus_score": 0.4472135954999579, "per_token_entropy": [1.029296875, 0.300048828125, 0.6875, 1.66796875, 0.05157470703125, 0.006237030029296875, 0.342041015625, 0.10693359375, 0.35498046875, 1.255859375, 0.0645751953125, 0.249267578125, 0.04541015625, 0.53857421875, 0.46923828125, 0.052032470703125, 0.336181640625, 0.029754638671875, 7.748603820800781e-05, 0.0008707046508789062, 0.2203369140625, 0.0010023117065429688, 0.00933837890625, 0.0032711029052734375, 0.0128326416015625, 0.01151275634765625, 0.0019092559814453125, 0.003078460693359375, 0.0019550323486328125, 0.0087890625, 0.000690460205078125, 0.0186920166015625, 0.003047943115234375, 0.0582275390625, 0.08258056640625, 0.243408203125, 0.00112152099609375, 0.02569580078125, 0.007755279541015625, 0.0195770263671875, 3.159046173095703e-05, 0.0010786056518554688, 0.059112548828125, 1.5497207641601562e-05, 0.0014495849609375, 0.0008778572082519531, 0.0012845993041992188, 0.00534820556640625, 1.990795135498047e-05, 0.00152587890625, 6.449222564697266e-05, 0.0002644062042236328], "tokens": [291, 434, 7379, 3111, 31, 891, 3498, 3377, 291, 10639, 280, 308, 38, 32, 34, 474, 11768, 27, 517, 308, 11694, 474, 225, 38, 32, 34, 474, 225, 36, 32, 34, 319, 11768, 293, 291, 9101, 280, 308, 6974, 474, 225, 36, 32, 34, 27, 517, 308, 11694, 474, 11768, 474, 225]}
{"line_number": 514, "line_type": "original", "code": "                hasFiniteBounds = true;", "entropy": 3.099609375, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [7.796875, 12.0859375, 0.60009765625, 0.035919189453125, 0.204833984375, 0.91650390625, 0.06201171875], "tokens": [2071, 1401, 40643, 8285, 280, 861, 45]}
{"line_number": 514, "line_type": "generated", "code": "\n     * Checks dimensions and values of boundaries and inputSigma if defined.\n     */\n    private void checkParameters() {\n        final double[] init = getStartPoint();\n        final double[] lB = getLowerBound();\n        final double[] uB = get", "entropy": 0.1971435546875, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.9736328125, 0.2286376953125, 3.216796875, 1.609375, 0.456298828125, 0.08648681640625, 0.0139923095703125, 1.3662109375, 0.20263671875, 0.0863037109375, 0.0020503997802734375, 0.06866455078125, 0.0222015380859375, 0.02532958984375, 0.197998046875, 0.16162109375, 0.09002685546875, 0.062164306640625, 0.05010986328125, 0.242919921875, 0.068115234375, 0.6728515625, 0.01520538330078125, 0.047149658203125, 0.1710205078125, 0.0095062255859375, 0.0012140274047851562, 0.0217132568359375, 0.000858306884765625, 0.0034046173095703125, 0.0005202293395996094, 3.0994415283203125e-06, 0.006000518798828125, 0.0163421630859375, 0.02618408203125, 0.00244140625, 0.00067901611328125, 0.00865936279296875, 0.0002532005310058594, 0.0007352828979492188, 0.0021457672119140625, 0.0002694129943847656, 0.0005526542663574219, 0.0007281303405761719, 0.0014820098876953125, 0.0012845993041992188, 0.01009368896484375, 0.00015211105346679688, 0.00010645389556884766, 1.5497207641601562e-06, 2.3603439331054688e-05, 0.00013828277587890625], "tokens": [275, 319, 17279, 13135, 461, 2078, 432, 28116, 461, 1509, 28326, 415, 3417, 32, 275, 569, 284, 945, 763, 1505, 3675, 346, 301, 291, 1158, 2064, 1178, 3219, 280, 622, 2130, 1943, 473, 291, 1158, 2064, 1178, 456, 52, 280, 622, 6724, 4716, 473, 291, 1158, 2064, 1178, 1044, 52, 280, 622]}
{"line_number": 515, "line_type": "original", "code": "                break;", "entropy": 6.078125, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [7.453125, 9.8515625, 0.92578125], "tokens": [2071, 1626, 45]}
{"line_number": 515, "line_type": "generated", "code": "\n     */\n    private void initDynamicParameters() {\n        // Initialize the dynamic search parameters.\n        cs = 0.5E-6;\n        damps = 0.3;\n        lambda = 0.0;\n        sigma = 0", "entropy": 0.67724609375, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.5556640625, 0.409423828125, 0.03082275390625, 0.08697509765625, 0.0760498046875, 0.779296875, 1.1357421875, 1.6005859375, 0.2646484375, 0.01287841796875, 0.152099609375, 1.0078125, 2.357421875, 1.6171875, 1.40234375, 0.96533203125, 0.2880859375, 0.69482421875, 0.1466064453125, 2.54296875, 0.0941162109375, 0.81103515625, 0.9453125, 0.150634765625, 0.974609375, 1.4501953125, 0.250244140625, 0.73095703125, 0.06927490234375, 0.274169921875, 0.39306640625, 0.0026702880859375, 0.0019435882568359375, 0.003147125244140625, 0.104736328125, 0.841796875, 0.004276275634765625, 2.21875, 1.0068359375, 0.1455078125, 3.02734375, 0.0204010009765625, 0.69970703125, 0.98291015625, 0.209228515625, 1.033203125, 0.28271484375, 0.1746826171875, 1.265625, 0.0484619140625, 0.300048828125, 0.5703125], "tokens": [275, 569, 284, 945, 763, 3219, 7183, 3675, 346, 301, 291, 434, 8958, 322, 7094, 3233, 3377, 32, 291, 9101, 280, 225, 34, 32, 39, 55, 31, 40, 45, 291, 343, 757, 101, 280, 225, 34, 32, 37, 45, 291, 9254, 280, 225, 34, 32, 34, 45, 291, 16355, 280, 225, 34]}
{"line_number": 521, "line_type": "original", "code": "            for (int i = 0; i < lB.length; i++) {", "entropy": 0.787109375, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [3.1171875, 5.84375, 0.212158203125, 0.11907958984375, 0.226806640625, 0.051483154296875, 0.1103515625, 0.1549072265625, 0.01552581787109375, 0.0251922607421875, 0.0117034912109375, 3.8046875, 0.96142578125, 0.01102447509765625, 0.0026912689208984375, 0.05181884765625, 0.18408203125, 0.01285552978515625, 0.037109375], "tokens": [1468, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 456, 52, 32, 1322, 45, 595, 1987, 301]}
{"line_number": 521, "line_type": "generated", "code": "\n            if (lambda < 4 + dimension / 2) {\n                lambda = 4 + dimension / 2;\n            }\n        }\n        mu = (int) (lambda / 2);\n        mueff = 1 / (mu * mu", "entropy": 0.29736328125, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.99951171875, 0.81689453125, 0.0640869140625, 0.08331298828125, 0.765625, 0.498779296875, 0.400634765625, 0.1900634765625, 0.11920166015625, 0.034088134765625, 0.0030765533447265625, 0.0819091796875, 0.343505859375, 0.013885498046875, 0.060272216796875, 0.15283203125, 0.0027904510498046875, 0.0055389404296875, 0.00034236907958984375, 0.00095367431640625, 0.01422119140625, 0.01064300537109375, 0.0006046295166015625, 6.449222564697266e-05, 0.01010894775390625, 0.228515625, 0.0013790130615234375, 0.71044921875, 0.033355712890625, 0.6845703125, 1.3798828125, 0.0228271484375, 0.58447265625, 0.008544921875, 0.01861572265625, 0.33056640625, 0.016448974609375, 0.04766845703125, 0.002410888671875, 0.00037169456481933594, 0.13916015625, 0.45556640625, 0.87841796875, 1.7762184143066406e-05, 0.0011587142944335938, 0.5205078125, 0.10699462890625, 0.76416015625, 1.3408203125, 1.751953125, 0.1297607421875, 0.62548828125], "tokens": [324, 415, 308, 5962, 333, 225, 38, 474, 8742, 517, 225, 36, 27, 301, 400, 9254, 280, 225, 38, 474, 8742, 517, 225, 36, 45, 324, 320, 291, 320, 291, 11768, 280, 308, 410, 27, 308, 5962, 517, 225, 36, 293, 291, 35813, 486, 280, 225, 35, 517, 308, 6974, 319, 11768]}
{"line_number": 522, "line_type": "original", "code": "                if (Double.isInfinite(lB[i]) ||", "entropy": 1.8115234375, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [7.0625, 1.373046875, 0.0438232421875, 7.3046875, 0.0019989013671875, 0.3193359375, 0.0007886886596679688, 0.0029048919677734375, 5.31640625, 2.142578125, 0.25341796875, 0.2159423828125, 0.5732421875, 0.748046875], "tokens": [2071, 415, 308, 4075, 32, 28823, 11949, 26, 94, 52, 77, 91, 1130, 1276]}
{"line_number": 522, "line_type": "generated", "code": "\n        if (mu <= 0) {\n            mu = (int) (lambda / 2);\n        }\n        if (mu > lambda) {\n            throw new OutOfRangeException(mu, 0, lambda);\n        }", "entropy": 0.2197265625, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.257568359375, 1.0576171875, 0.043487548828125, 0.6748046875, 0.392578125, 0.0302734375, 0.014678955078125, 0.09979248046875, 0.00453948974609375, 0.058380126953125, 0.10601806640625, 0.0016508102416992188, 1.3603515625, 0.0128631591796875, 0.0308990478515625, 0.1639404296875, 0.0261077880859375, 0.302978515625, 0.005218505859375, 0.0011281967163085938, 0.7119140625, 0.223876953125, 0.0004718303680419922, 1.111328125, 0.2021484375, 0.0207977294921875, 0.470458984375, 0.7255859375, 0.0269317626953125, 0.1580810546875, 0.001346588134765625, 0.0092010498046875, 1.556640625, 0.01143646240234375, 0.392333984375, 9.894371032714844e-05, 0.00020325183868408203, 0.0001093149185180664, 0.00872039794921875, 0.04388427734375, 0.0044097900390625, 0.07666015625, 0.08856201171875, 0.005645751953125, 0.01216888427734375, 0.0157318115234375, 0.0227813720703125, 0.001354217529296875], "tokens": [291, 415, 308, 6974, 2511, 225, 34, 27, 301, 324, 11768, 280, 308, 410, 27, 308, 5962, 517, 225, 36, 293, 291, 320, 291, 415, 308, 6974, 848, 9254, 27, 301, 324, 1422, 537, 4306, 1419, 3198, 984, 26, 6974, 30, 225, 34, 30, 9254, 293, 291, 320]}
{"line_number": 529, "line_type": "original", "code": "            if (hasInfiniteBounds) {", "entropy": 2.029296875, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [4.88671875, 3.244140625, 0.1602783203125, 6.29296875, 1.2763671875, 0.100830078125, 0.1990966796875, 0.07855224609375], "tokens": [1468, 415, 308, 2040, 39524, 8285, 27, 301]}
{"line_number": 529, "line_type": "generated", "code": "\n        // initialize mu\n        double mu = 0.0;\n        if (diagonalOnly) {\n            mu = (diagonalOnly == 1)? 1.0 : 0.0;\n        } else {\n            mu = Math.max(", "entropy": 0.5498046875, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.306640625, 0.474365234375, 0.89892578125, 1.451171875, 0.3818359375, 0.91357421875, 1.38671875, 0.44482421875, 1.6982421875, 0.94580078125, 0.156982421875, 0.88427734375, 0.316162109375, 0.1834716796875, 0.83447265625, 0.06439208984375, 2.021484375, 0.09625244140625, 0.101318359375, 0.00937652587890625, 0.040435791015625, 0.300048828125, 0.0257415771484375, 2.611328125, 1.529296875, 0.2401123046875, 1.3056640625, 0.9033203125, 0.4189453125, 0.1307373046875, 0.020721435546875, 0.51513671875, 0.2403564453125, 0.346435546875, 0.04656982421875, 0.4794921875, 0.53662109375, 0.91357421875, 0.0144805908203125, 0.244384765625, 0.0273284912109375, 0.161865234375, 0.0006628036499023438, 0.28857421875, 0.2086181640625, 0.04815673828125, 0.38525390625, 0.01971435546875, 1.162109375, 0.03289794921875, 1.7998046875, 0.0195770263671875], "tokens": [291, 434, 7379, 11768, 291, 2064, 11768, 280, 225, 34, 32, 34, 45, 291, 415, 308, 34692, 4495, 27, 301, 324, 11768, 280, 308, 34692, 4495, 610, 225, 35, 27, 1018, 225, 35, 32, 34, 499, 225, 34, 32, 34, 45, 291, 320, 813, 301, 324, 11768, 280, 4175, 32, 1449, 26]}
{"line_number": 358, "line_type": "original", "code": "        isMinimize = getGoalType().equals(GoalType.MINIMIZE);", "entropy": 1.8662109375, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [4.44140625, 10.125, 4.79296875, 0.14892578125, 0.82861328125, 3.56640625, 3.962890625, 0.0102081298828125, 0.190185546875, 5.48828125, 0.0008392333984375, 0.01165771484375, 9.822845458984375e-05, 0.0004398822784423828, 0.0023651123046875, 0.00011813640594482422, 0.0005445480346679688, 0.01255035400390625], "tokens": [351, 438, 2928, 12178, 280, 622, 17357, 620, 922, 3574, 26, 17357, 620, 32, 4683, 2331, 8484, 293]}
{"line_number": 358, "line_type": "generated", "code": "\n                xmean = xold.add(bestArx.scalarMultiply(mu / lambda));\n                // Update evolution path\n                // Eq. (3) in [Hansen2009]\n                RealMatrix c = xold.subtract(", "entropy": 0.5166015625, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [0.30029296875, 1.234375, 0.008544921875, 0.05084228515625, 1.78125, 0.06634521484375, 0.0117950439453125, 0.1026611328125, 0.0400390625, 0.92724609375, 0.004993438720703125, 0.00039505958557128906, 0.0253753662109375, 0.1551513671875, 0.0005698204040527344, 0.1690673828125, 1.1171875, 1.1025390625, 0.537109375, 0.439453125, 0.7236328125, 0.5400390625, 1.7353515625, 0.61376953125, 0.2783203125, 0.358642578125, 2.162109375, 0.89794921875, 0.009552001953125, 0.007236480712890625, 1.548828125, 0.3095703125, 1.109375, 1.2109375, 0.455322265625, 0.0155181884765625, 0.0015277862548828125, 0.744140625, 1.2636184692382812e-05, 0.024749755859375, 0.0189208984375, 0.219482421875, 0.197998046875, 0.78125, 0.01245880126953125, 1.7548828125, 0.470458984375, 1.27734375, 1.26953125, 0.00415802001953125, 0.049652099609375, 0.0002498626708984375], "tokens": [400, 816, 6009, 280, 816, 1455, 32, 669, 26, 8773, 3421, 106, 32, 13049, 27732, 26, 6974, 517, 9254, 876, 400, 434, 4000, 34173, 1519, 400, 434, 21819, 32, 308, 37, 27, 328, 428, 58, 693, 272, 36, 34, 34, 43, 79, 400, 11443, 4161, 281, 280, 816, 1455, 32, 25330, 26]}
{"line_number": 359, "line_type": "original", "code": "        final FitnessFunction fitfun = new FitnessFunction();", "entropy": 2.3046875, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [5.5, 5.74609375, 8.4609375, 0.037872314453125, 0.59130859375, 2.328125, 0.238525390625, 0.63330078125, 1.3642578125, 0.1126708984375, 0.0006504058837890625, 0.0238037109375, 4.9140625], "tokens": [351, 1158, 506, 25812, 2447, 8157, 6381, 280, 537, 506, 25812, 2447, 473]}
{"line_number": 359, "line_type": "generated", "code": "\n                // Generate and evaluate (mu-lambda) offspring\n                arz = randn1(dimension, mu - lambda);\n                arx = zeros(dimension, mu - lambda);\n                for (int k = 0; k < mu - lambda", "entropy": 0.28173828125, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [0.220458984375, 0.260498046875, 3.12109375, 1.2841796875, 0.0738525390625, 3.7890625, 0.417236328125, 0.37939453125, 0.20703125, 0.1031494140625, 0.479248046875, 0.00038313865661621094, 0.5224609375, 1.162109375, 0.0897216796875, 0.0184173583984375, 0.0567626953125, 0.0007190704345703125, 0.11236572265625, 0.0010366439819335938, 0.002376556396484375, 0.0011577606201171875, 0.09716796875, 0.346923828125, 0.0015735626220703125, 0.0061798095703125, 0.1195068359375, 0.31103515625, 0.00446319580078125, 0.0126495361328125, 0.061614990234375, 0.0002636909484863281, 0.0003681182861328125, 0.0012578964233398438, 0.006679534912109375, 0.11566162109375, 0.0009388923645019531, 0.00047469139099121094, 0.0416259765625, 0.8935546875, 0.0008096694946289062, 0.0004260540008544922, 0.061004638671875, 0.0017547607421875, 0.1407470703125, 0.0009417533874511719, 0.003223419189453125, 0.001163482666015625, 0.0005311965942382812, 0.09686279296875, 0.0267333984375, 0.001071929931640625], "tokens": [400, 434, 10945, 461, 13396, 308, 6974, 31, 5962, 27, 2126, 3393, 400, 2099, 108, 280, 10477, 96, 35, 26, 11694, 30, 11768, 429, 9254, 293, 400, 2099, 106, 280, 22483, 26, 11694, 30, 11768, 429, 9254, 293, 400, 436, 308, 410, 831, 280, 225, 34, 45, 831, 333, 11768, 429, 9254]}
{"line_number": 360, "line_type": "original", "code": "        final double[] guess = fitfun.encode(getStartPoint());", "entropy": 2.93359375, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [4.59765625, 6.375, 1.1123046875, 1.650390625, 7.1171875, 0.76123046875, 4.34375, 0.006134033203125, 0.004352569580078125, 9.796875, 0.361572265625, 4.77734375, 0.0009851455688476562, 0.1553955078125], "tokens": [351, 1158, 2064, 1178, 11089, 280, 8157, 6381, 32, 4434, 26, 31862, 1943, 1035]}
{"line_number": 360, "line_type": "generated", "code": "\n                // Update evolution path\n                RealMatrix artmp = bestArx.subtract(xold);\n                RealMatrix artmp2 = times(artmp, artmp);\n                RealMatrix c = times(weights, artmp2);\n                RealMatrix c", "entropy": 0.5458984375, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [0.277099609375, 0.2398681640625, 1.9658203125, 0.61962890625, 0.44677734375, 0.359375, 1.5146484375, 0.01097869873046875, 2.9296875, 0.00556182861328125, 0.061492919921875, 1.64453125, 0.00046896934509277344, 0.486328125, 0.008209228515625, 0.05438232421875, 0.0017347335815429688, 0.0740966796875, 0.02337646484375, 0.1614990234375, 0.6376953125, 0.8662109375, 0.00859832763671875, 1.3662109375, 0.0008902549743652344, 0.10540771484375, 0.005229949951171875, 1.0087890625, 0.039703369140625, 1.18359375, 0.0021209716796875, 0.08746337890625, 0.70361328125, 0.00018227100372314453, 0.69677734375, 0.32275390625, 0.755859375, 0.004390716552734375, 1.966796875, 0.2322998046875, 1.7958984375, 0.03607177734375, 1.31640625, 0.2529296875, 0.450927734375, 3.695487976074219e-05, 0.1104736328125, 0.8681640625, 0.291015625, 0.72509765625, 0.00550079345703125, 1.638671875], "tokens": [400, 434, 4000, 34173, 1519, 400, 11443, 4161, 5549, 317, 280, 5273, 3421, 106, 32, 25330, 26, 106, 1455, 293, 400, 11443, 4161, 5549, 317, 36, 280, 6496, 26, 502, 317, 30, 5549, 317, 293, 400, 11443, 4161, 281, 280, 6496, 26, 9582, 30, 5549, 317, 36, 293, 400, 11443, 4161, 281]}
{"line_number": 362, "line_type": "original", "code": "        dimension = guess.length;", "entropy": 3.328125, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [5.9453125, 12.3125, 0.40234375, 4.57421875, 0.0322265625, 0.00045108795166015625, 0.0306243896484375], "tokens": [351, 8742, 280, 11089, 32, 1322, 45]}
{"line_number": 362, "line_type": "generated", "code": "\n                // Update covariance matrix C\n                if (hsig) {\n                    // rank-one update\n                    RealMatrix delta = xmean.subtract(xold);\n                    RealMatrix deltaZ = zmean.subtract(zold);\n                    RealMatrix deltaZdelta", "entropy": 0.494384765625, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [0.2113037109375, 0.248779296875, 2.00390625, 1.2041015625, 0.005313873291015625, 0.196044921875, 0.2457275390625, 1.4892578125, 0.27197265625, 0.65185546875, 8.106231689453125e-06, 0.37939453125, 0.03424072265625, 0.20556640625, 1.1357421875, 3.349609375, 0.09130859375, 0.018035888671875, 0.0289306640625, 1.349609375, 1.3720703125, 0.01029205322265625, 1.84375, 0.11358642578125, 0.5908203125, 0.1856689453125, 0.0031528472900390625, 0.0032176971435546875, 0.0002739429473876953, 0.02783203125, 0.0001266002655029297, 0.06866455078125, 0.1676025390625, 0.712890625, 0.01165008544921875, 1.03125, 1.1162109375, 0.0248870849609375, 0.5302734375, 0.00033736228942871094, 0.0002574920654296875, 0.0005898475646972656, 0.00018858909606933594, 1.021484375, 0.07073974609375, 0.007534027099609375, 0.045867919921875, 0.814453125, 0.01007080078125, 1.083984375, 0.63671875, 1.080078125], "tokens": [400, 434, 4000, 40204, 5045, 390, 400, 415, 308, 3914, 365, 27, 301, 528, 434, 11263, 31, 658, 1974, 528, 11443, 4161, 7715, 280, 816, 6009, 32, 25330, 26, 106, 1455, 293, 528, 11443, 4161, 7715, 76, 280, 1288, 6009, 32, 25330, 26, 108, 1455, 293, 528, 11443, 4161, 7715, 76, 6558]}
{"line_number": 363, "line_type": "original", "code": "        initializeCMA(guess);", "entropy": 3.853515625, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [5.46875, 12.046875, 2.25390625, 1.474609375, 1.244140625, 3.689453125, 0.787109375], "tokens": [351, 7379, 53, 1400, 26, 23796, 293]}
{"line_number": 363, "line_type": "generated", "code": "\n                    // Eq. (2)\n                    RealMatrix a = zmean.subtract(xold).scalarMultiply(1.0 / sigma);\n                    // Eq. (3)\n                    RealMatrix b = xold.subtract(xmean).scalarMultiply(", "entropy": 0.3818359375, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [0.2452392578125, 0.841796875, 1.876953125, 0.0108489990234375, 0.01401519775390625, 0.36328125, 0.274658203125, 0.42529296875, 1.1767578125, 0.0231170654296875, 3.49609375, 0.8154296875, 2.787109375, 0.004894256591796875, 0.01404571533203125, 0.1986083984375, 0.002017974853515625, 0.308837890625, 0.1751708984375, 0.99609375, 0.1690673828125, 0.0015344619750976562, 0.08148193359375, 0.36376953125, 0.4765625, 0.21533203125, 0.2626953125, 0.059417724609375, 0.2364501953125, 0.1845703125, 0.64501953125, 0.035797119140625, 0.003047943115234375, 0.0019779205322265625, 0.06927490234375, 0.0214691162109375, 0.04248046875, 0.30712890625, 0.005016326904296875, 0.912109375, 0.0138702392578125, 0.67626953125, 0.81787109375, 0.004337310791015625, 0.01800537109375, 0.0004992485046386719, 0.04327392578125, 0.019622802734375, 0.0677490234375, 0.00881195068359375, 3.743171691894531e-05, 0.03948974609375], "tokens": [528, 434, 21819, 32, 308, 36, 27, 528, 11443, 4161, 312, 280, 1288, 6009, 32, 25330, 26, 106, 1455, 547, 13049, 27732, 26, 35, 32, 34, 517, 16355, 293, 528, 434, 21819, 32, 308, 37, 27, 528, 11443, 4161, 323, 280, 816, 1455, 32, 25330, 26, 106, 6009, 547, 13049, 27732, 26]}
{"line_number": 364, "line_type": "original", "code": "        iterations = 0;", "entropy": 3.421875, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [5.52734375, 11.5078125, 2.0078125, 0.7392578125, 0.716796875, 0.0256195068359375], "tokens": [351, 17576, 280, 225, 34, 45]}
{"line_number": 364, "line_type": "generated", "code": "\n                } else {\n                    updateCovariance(hsig, bestArx, arz, arindex, xold, diagD);", "entropy": 0.160400390625, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [0.2489013671875, 0.54833984375, 0.16650390625, 0.0489501953125, 0.06683349609375, 0.2734375, 0.2076416015625, 0.005062103271484375, 0.78857421875, 0.033843994140625, 1.1682510375976562e-05, 0.02569580078125, 0.36572265625, 0.0023326873779296875, 0.0104827880859375, 0.0382080078125, 0.26708984375, 0.064208984375, 0.005336761474609375, 0.01898193359375, 0.0004897117614746094, 0.044891357421875, 0.0728759765625, 0.0020923614501953125, 0.46240234375, 0.65234375, 0.0070648193359375, 0.06549072265625], "tokens": [400, 320, 813, 301, 528, 1974, 2235, 17965, 26, 3914, 365, 30, 5273, 3421, 106, 30, 2099, 108, 30, 2099, 1055, 30, 816, 1455, 30, 15534, 54, 293]}
{"line_number": 365, "line_type": "original", "code": "        double bestValue = fitfun.value(guess);", "entropy": 2.09375, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [5.25, 6.109375, 4.6875, 1.6982421875, 0.369384765625, 2.0390625, 0.0017986297607421875, 0.0025501251220703125, 0.07275390625, 0.00669097900390625, 4.8671875, 0.0193023681640625], "tokens": [351, 2064, 5273, 882, 280, 8157, 6381, 32, 853, 26, 23796, 293]}
{"line_number": 365, "line_type": "generated", "code": "\n                    updateCovariance(hsig, bestArx, arz, arindex, xold);", "entropy": 0.1263427734375, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [0.654296875, 0.49365234375, 0.1724853515625, 0.002368927001953125, 0.39404296875, 0.04705810546875, 1.2516975402832031e-05, 0.0272979736328125, 0.329345703125, 0.001964569091796875, 0.01087188720703125, 0.040069580078125, 0.1695556640625, 0.04559326171875, 0.00475311279296875, 0.01363372802734375, 0.00018203258514404297, 0.028533935546875, 0.051300048828125, 0.00136566162109375, 0.1668701171875], "tokens": [528, 1974, 2235, 17965, 26, 3914, 365, 30, 5273, 3421, 106, 30, 2099, 108, 30, 2099, 1055, 30, 816, 1455, 293]}
{"line_number": 561, "line_type": "original", "code": "    }", "entropy": 1.7216796875, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [2.904296875, 0.53857421875], "tokens": [264, 320]}
{"line_number": 561, "line_type": "generated", "code": "\n        // initialize covariance matrix\n        C = new Array2DRowRealMatrix(dimension, dimension);\n        for (int i = 0; i < dimension; i++) {\n            C.setEntry(i, i, 1.);\n        }\n\n       ", "entropy": 0.303955078125, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [1.48828125, 0.46826171875, 0.9501953125, 1.6337890625, 0.0116119384765625, 0.365478515625, 1.4033203125, 0.07293701171875, 1.69921875, 0.5361328125, 0.006298065185546875, 3.62396240234375e-05, 0.00010836124420166016, 0.0004954338073730469, 1.990795135498047e-05, 0.01018524169921875, 0.2203369140625, 0.00870513916015625, 0.019744873046875, 0.12255859375, 0.2802734375, 1.173828125, 0.0027065277099609375, 0.006427764892578125, 0.149658203125, 0.002777099609375, 0.0006809234619140625, 0.0034942626953125, 0.0067138671875, 0.0016622543334960938, 0.002010345458984375, 0.138671875, 0.003078460693359375, 0.1131591796875, 0.00628662109375, 0.00418853759765625, 0.021148681640625, 0.77587890625, 0.01018524169921875, 0.004428863525390625, 0.0408935546875, 0.0007038116455078125, 0.00261688232421875, 0.00033283233642578125, 0.018585205078125, 0.0005288124084472656, 1.2138671875, 0.03753662109375, 1.16796875, 0.154296875, 0.000957489013671875, 1.4443359375], "tokens": [291, 434, 7379, 40204, 5045, 291, 390, 280, 537, 2629, 36, 54, 2352, 6877, 4161, 26, 11694, 30, 8742, 293, 291, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 8742, 45, 595, 1987, 301, 324, 390, 32, 470, 2711, 26, 91, 30, 595, 30, 225, 35, 37546, 291, 320, 584]}
