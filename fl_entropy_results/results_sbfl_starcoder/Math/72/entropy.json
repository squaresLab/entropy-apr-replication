{"line_number": 115, "line_type": "original", "code": "            setResult(yMin, 0);", "entropy": 1.9423828125, "is_bug_line": true, "sus_score": 1.0, "per_token_entropy": [7.38671875, 8.0546875, 0.22998046875, 0.0291748046875, 1.9052734375, 1.6259765625, 0.01215362548828125, 0.156982421875, 0.01131439208984375, 0.01076507568359375], "tokens": [1468, 739, 1394, 26, 107, 2928, 30, 225, 34, 293]}
{"line_number": 115, "line_type": "generated", "code": "\n        throws MaxIterationsExceededException, FunctionEvaluationException {\n\n        clearResult();\n        verifyInterval(min, max);\n\n        // return the first endpoint if it is good enough\n        double yMin = f.value(min);\n        if (Math.abs(", "entropy": 0.135009765625, "is_bug_line": true, "sus_score": 1.0, "per_token_entropy": [0.334228515625, 0.66259765625, 0.0281219482421875, 1.1205673217773438e-05, 4.5299530029296875e-06, 5.364418029785156e-06, 0.00966644287109375, 0.0283966064453125, 8.344650268554688e-06, 2.384185791015625e-06, 0.0325927734375, 0.56640625, 0.6728515625, 0.0003108978271484375, 0.0004100799560546875, 0.1334228515625, 0.108154296875, 1.6826171875, 0.0034618377685546875, 0.00897216796875, 0.0004737377166748047, 0.0060272216796875, 0.0142059326171875, 0.26318359375, 0.5869140625, 1.0966796875, 0.08721923828125, 0.394775390625, 0.014801025390625, 0.01409912109375, 0.0023632049560546875, 0.0010499954223632812, 0.01328277587890625, 0.0005407333374023438, 0.0167388916015625, 0.110595703125, 0.0440673828125, 0.0231475830078125, 0.0025691986083984375, 0.00933837890625, 0.00010597705841064453, 0.0004737377166748047, 2.3484230041503906e-05, 0.00033354759216308594, 0.00010526180267333984, 0.020965576171875, 0.01194000244140625, 0.0008592605590820312, 0.01453399658203125, 0.0004963874816894531, 6.282329559326172e-05, 2.5153160095214844e-05], "tokens": [291, 2571, 7462, 31219, 28741, 984, 30, 4540, 19637, 984, 301, 584, 4233, 1394, 473, 291, 6144, 5757, 26, 887, 30, 1769, 293, 584, 434, 442, 322, 1932, 6998, 415, 561, 438, 4644, 8448, 291, 2064, 533, 2928, 280, 296, 32, 853, 26, 887, 293, 291, 415, 308, 5717, 32, 3596, 26]}
{"line_number": 116, "line_type": "original", "code": "            return result;", "entropy": 5.29296875, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [5.16015625, 12.828125, 3.16015625, 0.01727294921875], "tokens": [1468, 442, 1056, 45]}
{"line_number": 116, "line_type": "generated", "code": "\n                FunctionEvaluationException {\n\n        clearResult();\n        verifyInterval(min, max);\n        double initial = getInitialPoint(min, max);\n        return solve(f, min, max, initial);\n\n    }\n\n    /**\n     * Find a zero in the", "entropy": 0.372802734375, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [2.322265625, 0.02099609375, 0.00035572052001953125, 0.00011289119720458984, 0.10382080078125, 0.4638671875, 0.68359375, 0.00034308433532714844, 0.0003211498260498047, 0.1357421875, 0.1195068359375, 1.6875, 0.0034236907958984375, 0.0093536376953125, 0.0005159378051757812, 0.00615692138671875, 0.018280029296875, 1.7353515625, 1.740234375, 1.6982421875, 0.0999755859375, 2.673828125, 0.59375, 0.49267578125, 0.0121917724609375, 1.173828125, 0.00531768798828125, 0.03118896484375, 0.2330322265625, 0.45458984375, 0.1263427734375, 0.00702667236328125, 0.002704620361328125, 0.0013303756713867188, 0.0001380443572998047, 0.0015249252319335938, 0.00013124942779541016, 0.017181396484375, 0.0002593994140625, 0.0012273788452148438, 0.0027408599853515625, 0.58984375, 0.0013370513916015625, 0.294921875, 0.06304931640625, 0.06829833984375, 3.731250762939453e-05, 1.09375, 0.0528564453125, 0.01198577880859375, 0.455322265625, 0.083251953125], "tokens": [400, 4540, 19637, 984, 301, 584, 4233, 1394, 473, 291, 6144, 5757, 26, 887, 30, 1769, 293, 291, 2064, 2815, 280, 622, 4678, 1943, 26, 887, 30, 1769, 293, 291, 442, 10932, 26, 88, 30, 1847, 30, 1769, 30, 2815, 293, 446, 320, 446, 1022, 275, 319, 7477, 312, 5934, 328, 322]}
{"line_number": 184, "line_type": "original", "code": "                setResult(max, 0);", "entropy": 3.001953125, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [6.78125, 5.33203125, 0.06396484375, 0.0164794921875, 10.46875, 1.78515625, 2.349609375, 0.10894775390625, 0.1170654296875], "tokens": [2071, 739, 1394, 26, 1449, 30, 225, 34, 293]}
{"line_number": 184, "line_type": "generated", "code": "\n            // compute the new approximation for the root\n            final double delta2 = delta;\n            delta = (x1 - x0) / 2;\n            final double xm = x0 + delta;\n            final double ym = f.value(", "entropy": 0.38232421875, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.295166015625, 0.9013671875, 2.13671875, 0.375732421875, 0.68408203125, 0.82275390625, 0.83056640625, 0.06005859375, 0.032623291015625, 0.23193359375, 1.029296875, 0.0216827392578125, 1.4736328125, 0.269775390625, 0.052886962890625, 1.1689453125, 0.40673828125, 0.10711669921875, 0.34228515625, 0.0157623291015625, 1.0908203125, 0.196044921875, 0.86767578125, 0.68798828125, 0.00437164306640625, 0.2890625, 0.059539794921875, 0.27197265625, 0.08306884765625, 0.00963592529296875, 1.3681640625, 0.2249755859375, 0.7587890625, 0.0013456344604492188, 0.5166015625, 0.71435546875, 0.01824951171875, 0.01316070556640625, 0.44140625, 0.019317626953125, 0.0245361328125, 0.01227569580078125, 0.396240234375, 0.1932373046875, 0.0014286041259765625, 0.322021484375, 0.005733489990234375, 0.005428314208984375, 0.0252227783203125, 6.341934204101562e-05, 0.00020182132720947266, 0.00011050701141357422], "tokens": [324, 434, 7596, 322, 537, 39431, 436, 322, 3051, 324, 1158, 2064, 7715, 36, 280, 7715, 45, 324, 7715, 280, 308, 106, 35, 429, 816, 34, 27, 517, 225, 36, 45, 324, 1158, 2064, 816, 95, 280, 816, 34, 474, 7715, 45, 324, 1158, 2064, 533, 95, 280, 296, 32, 853, 26]}
{"line_number": 185, "line_type": "original", "code": "                ret = max;", "entropy": 3.740234375, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [3.673828125, 7.01171875, 0.09625244140625, 7.65234375, 0.262939453125], "tokens": [2071, 2152, 280, 1769, 45]}
{"line_number": 185, "line_type": "generated", "code": "\n                x2 = x1;\n                y2 = y1;\n            }\n            double delta2 = 2 * delta;\n            double xm = 0.5 * (x2 + x1);\n            double fm = f.value(xm", "entropy": 0.3046875, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.7919921875, 1.17578125, 0.83447265625, 0.02545166015625, 0.01253509521484375, 0.1588134765625, 0.01334381103515625, 0.06439208984375, 0.18359375, 0.0005545616149902344, 0.0010204315185546875, 0.005245208740234375, 0.00033545494079589844, 0.0005950927734375, 0.7880859375, 0.0009331703186035156, 1.4765625, 1.12890625, 1.111328125, 0.246337890625, 0.027374267578125, 1.494140625, 0.0450439453125, 0.2548828125, 0.96484375, 0.0010805130004882812, 0.1248779296875, 0.291748046875, 1.056640625, 1.3603515625, 0.07098388671875, 0.5341796875, 0.0030841827392578125, 0.020599365234375, 0.0018262863159179688, 0.0027637481689453125, 0.00998687744140625, 0.0015544891357421875, 0.291748046875, 0.105224609375, 0.007411956787109375, 0.10333251953125, 0.1358642578125, 0.0338134765625, 0.1236572265625, 0.7138671875, 0.01056671142578125, 0.027130126953125, 0.00012671947479248047, 0.00018739700317382812, 0.0002090930938720703, 0.0021724700927734375], "tokens": [400, 816, 36, 280, 816, 35, 45, 400, 533, 36, 280, 533, 35, 45, 324, 320, 324, 2064, 7715, 36, 280, 225, 36, 319, 7715, 45, 324, 2064, 816, 95, 280, 225, 34, 32, 39, 319, 308, 106, 36, 474, 816, 35, 293, 324, 2064, 28923, 280, 296, 32, 853, 26, 18974]}
{"line_number": 102, "line_type": "original", "code": "        clearResult();", "entropy": 3.830078125, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [4.22265625, 10.9921875, 0.103759765625, 0.0052337646484375], "tokens": [351, 4233, 1394, 473]}
{"line_number": 102, "line_type": "generated", "code": "\n     * @param f function to solve.\n     * @param min the lower bound for the interval.\n     * @param max the upper bound for the interval.\n     * @return the value where the function is zero\n     * @throws MaxIterationsExceededException", "entropy": 0.052276611328125, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [0.2568359375, 0.01195526123046875, 1.1259765625, 0.004512786865234375, 0.05908203125, 0.129638671875, 0.004276275634765625, 0.010162353515625, 0.08074951171875, 0.03387451171875, 0.0001176595687866211, 0.00029349327087402344, 0.000339508056640625, 0.10247802734375, 0.198974609375, 0.00948333740234375, 0.0024356842041015625, 0.0112152099609375, 0.0005402565002441406, 0.0082855224609375, 0.0196685791015625, 0.0029582977294921875, 2.9087066650390625e-05, 5.042552947998047e-05, 0.00021910667419433594, 0.315185546875, 0.0008587837219238281, 0.0007066726684570312, 0.0003662109375, 0.00020706653594970703, 2.6345252990722656e-05, 0.00019228458404541016, 0.012237548828125, 0.0333251953125, 0.00025844573974609375, 0.004283905029296875, 0.04815673828125, 0.054351806640625, 0.0193634033203125, 0.00138092041015625, 0.00418853759765625, 0.002056121826171875, 0.0003228187561035156, 0.0004494190216064453, 0.1180419921875, 0.0025806427001953125, 0.0016994476318359375, 0.0126495361328125, 0.01197052001953125, 2.110004425048828e-05, 3.8504600524902344e-05, 2.5987625122070312e-05], "tokens": [275, 319, 477, 753, 296, 667, 372, 10932, 32, 275, 319, 477, 753, 1847, 322, 7216, 5085, 436, 322, 7898, 32, 275, 319, 477, 753, 1769, 322, 8342, 5085, 436, 322, 7898, 32, 275, 319, 477, 601, 322, 786, 2154, 322, 667, 438, 5934, 275, 319, 477, 5117, 7462, 31219, 28741, 984]}
{"line_number": 103, "line_type": "original", "code": "        verifySequence(min, initial, max);", "entropy": 2.466796875, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [4.51953125, 10.59375, 4.27734375, 0.04510498046875, 1.341796875, 0.043182373046875, 3.16015625, 0.01485443115234375, 0.290283203125, 0.39013671875], "tokens": [351, 6144, 5897, 26, 887, 30, 2815, 30, 1769, 293]}
{"line_number": 103, "line_type": "generated", "code": "\n     * @param f function to solve.\n     * @param min the lower bound for the interval.\n     * @param max the upper bound for the interval.\n     * @return the value where the function is zero\n     * @throws MaxIterationsExceededException", "entropy": 0.05181884765625, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [0.4951171875, 0.08258056640625, 0.357666015625, 0.0107269287109375, 0.0721435546875, 0.09906005859375, 0.004337310791015625, 0.0105133056640625, 0.08447265625, 0.0207366943359375, 0.00014126300811767578, 0.0004711151123046875, 0.0006818771362304688, 0.14794921875, 0.269287109375, 0.0111541748046875, 0.002658843994140625, 0.01198577880859375, 0.0006213188171386719, 0.00881195068359375, 0.0196685791015625, 0.003147125244140625, 3.719329833984375e-05, 0.00011050701141357422, 0.00031375885009765625, 0.60546875, 0.0009813308715820312, 0.0007801055908203125, 0.00038814544677734375, 0.00020837783813476562, 2.8014183044433594e-05, 0.00022864341735839844, 0.0137176513671875, 0.0231475830078125, 0.0003554821014404297, 0.00665283203125, 0.08428955078125, 0.06781005859375, 0.02227783203125, 0.001598358154296875, 0.00399017333984375, 0.002109527587890625, 0.0003180503845214844, 0.0004227161407470703, 0.11279296875, 0.003124237060546875, 0.0020732879638671875, 0.0138702392578125, 0.01390838623046875, 1.9550323486328125e-05, 3.4928321838378906e-05, 3.266334533691406e-05], "tokens": [275, 319, 477, 753, 296, 667, 372, 10932, 32, 275, 319, 477, 753, 1847, 322, 7216, 5085, 436, 322, 7898, 32, 275, 319, 477, 753, 1769, 322, 8342, 5085, 436, 322, 7898, 32, 275, 319, 477, 601, 322, 786, 2154, 322, 667, 438, 5934, 275, 319, 477, 5117, 7462, 31219, 28741, 984]}
{"line_number": 106, "line_type": "original", "code": "        double yInitial = f.value(initial);", "entropy": 1.12109375, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [4.03515625, 3.626953125, 1.19140625, 3.259765625, 0.026702880859375, 0.1280517578125, 0.00958251953125, 0.00511932373046875, 0.004283905029296875, 0.040924072265625, 0.0113067626953125], "tokens": [351, 2064, 533, 4678, 280, 296, 32, 853, 26, 4332, 293]}
{"line_number": 106, "line_type": "generated", "code": "\n     * @return the value where the function is zero\n     * @throws MaxIterationsExceededException if the maximum iteration count\n     * is exceeded\n     * @throws FunctionEvaluationException if an error occurs evaluating\n     * the function\n     * @throws IllegalArgumentException if the function", "entropy": 0.119140625, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [0.1285400390625, 0.03533935546875, 0.01213836669921875, 0.1072998046875, 0.112548828125, 0.055511474609375, 0.00623321533203125, 0.01043701171875, 0.004634857177734375, 0.00067138671875, 0.0009207725524902344, 0.271240234375, 0.00920867919921875, 0.0030155181884765625, 0.0214996337890625, 0.039520263671875, 6.556510925292969e-05, 9.894371032714844e-05, 3.719329833984375e-05, 1.044921875, 0.02978515625, 0.0291900634765625, 0.2255859375, 0.06842041015625, 0.4326171875, 7.462501525878906e-05, 0.03515625, 0.0003936290740966797, 0.1591796875, 0.007205963134765625, 0.0003733634948730469, 0.0020732879638671875, 0.00586700439453125, 0.0001233816146850586, 0.00019824504852294922, 0.0109405517578125, 0.0704345703125, 0.0008425712585449219, 0.0026950836181640625, 0.04925537109375, 0.11541748046875, 0.00020766258239746094, 0.80224609375, 0.0019350051879882812, 0.051666259765625, 0.2257080078125, 0.0015926361083984375, 0.022186279296875, 0.03277587890625, 0.0160675048828125, 0.6669921875, 1.2626953125], "tokens": [275, 319, 477, 601, 322, 786, 2154, 322, 667, 438, 5934, 275, 319, 477, 5117, 7462, 31219, 28741, 984, 415, 322, 7091, 13330, 2385, 275, 319, 438, 31793, 275, 319, 477, 5117, 4540, 19637, 984, 415, 600, 1048, 12984, 38680, 275, 319, 322, 667, 275, 319, 477, 5117, 12137, 415, 322, 667]}
{"line_number": 107, "line_type": "original", "code": "        if (Math.abs(yInitial) <= functionValueAccuracy) {", "entropy": 0.74267578125, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [2.966796875, 2.17578125, 0.1806640625, 1.2626953125, 0.00257110595703125, 0.14404296875, 0.0032711029052734375, 0.5791015625, 4.01171875, 0.01007080078125, 0.1490478515625, 0.11505126953125, 0.0170440673828125, 0.00128173828125, 0.031036376953125, 0.2357177734375], "tokens": [351, 415, 308, 5717, 32, 3596, 26, 107, 4678, 27, 2511, 667, 882, 26201, 27, 301]}
{"line_number": 107, "line_type": "generated", "code": "\n     * @throws MaxIterationsExceededException if the maximum iteration count\n     * is exceeded\n     * @throws FunctionEvaluationException if an error occurs evaluating\n     *  the function\n     * @throws IllegalArgumentException if the function has the same sign at\n     *  the endpoints", "entropy": 0.1873779296875, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [0.73486328125, 0.3466796875, 0.0110015869140625, 0.035003662109375, 0.041259765625, 7.367134094238281e-05, 0.00010919570922851562, 3.993511199951172e-05, 0.86767578125, 0.0305938720703125, 0.0296783447265625, 0.381591796875, 0.054412841796875, 0.5810546875, 0.0003108978271484375, 0.03875732421875, 0.0004215240478515625, 0.2076416015625, 0.0114898681640625, 0.00048065185546875, 0.0026569366455078125, 0.0045166015625, 0.0001188516616821289, 0.00020682811737060547, 0.0124664306640625, 0.09368896484375, 0.0007462501525878906, 0.0034332275390625, 0.058502197265625, 0.11590576171875, 0.00012350082397460938, 0.64501953125, 0.0005106925964355469, 0.0011606216430664062, 0.1412353515625, 0.262939453125, 0.0011501312255859375, 0.0300445556640625, 0.032989501953125, 0.01470184326171875, 0.666015625, 1.1162109375, 0.87158203125, 0.06689453125, 0.0013303756713867188, 0.11273193359375, 0.1278076171875, 0.2286376953125, 0.0007138252258300781, 0.615234375, 0.32861328125, 0.80810546875], "tokens": [275, 319, 477, 5117, 7462, 31219, 28741, 984, 415, 322, 7091, 13330, 2385, 275, 319, 438, 31793, 275, 319, 477, 5117, 4540, 19637, 984, 415, 600, 1048, 12984, 38680, 275, 319, 225, 322, 667, 275, 319, 477, 5117, 12137, 415, 322, 667, 1401, 322, 2432, 2596, 821, 275, 319, 225, 322, 17532]}
{"line_number": 113, "line_type": "original", "code": "        double yMin = f.value(min);", "entropy": 1.01953125, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [6.69921875, 2.4296875, 1.4169921875, 0.4736328125, 0.0645751953125, 0.1114501953125, 0.01092529296875, 0.0017309188842773438, 0.00044465065002441406, 0.00678253173828125, 0.00415802001953125], "tokens": [351, 2064, 533, 2928, 280, 296, 32, 853, 26, 887, 293]}
{"line_number": 113, "line_type": "generated", "code": "\n    public double solve(final UnivariateRealFunction f, final double min, final double max)\n        throws MaxIterationsExceededException, FunctionEvaluationException {\n\n        clearResult();\n        verifySequence(min, max);\n\n        double yMin = f.value(", "entropy": 0.125244140625, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [0.07366943359375, 0.32568359375, 0.0082244873046875, 0.003986358642578125, 0.00710296630859375, 0.34521484375, 0.004283905029296875, 1.7881393432617188e-06, 3.886222839355469e-05, 4.8279762268066406e-05, 0.0007429122924804688, 0.00032067298889160156, 1.0908203125, 0.0012044906616210938, 0.0013475418090820312, 0.00011134147644042969, 0.77734375, 0.00019466876983642578, 0.000202178955078125, 0.0022430419921875, 0.080078125, 0.0001951456069946289, 0.00812530517578125, 6.9141387939453125e-06, 3.933906555175781e-06, 4.5299530029296875e-06, 0.0021953582763671875, 0.0058746337890625, 4.017353057861328e-05, 3.0994415283203125e-06, 0.0233306884765625, 0.358154296875, 0.359619140625, 0.00021731853485107422, 0.00017559528350830078, 0.1312255859375, 0.11724853515625, 0.7255859375, 0.0006542205810546875, 0.0008716583251953125, 0.00011420249938964844, 0.035736083984375, 0.00267791748046875, 0.2110595703125, 1.4716796875, 0.2318115234375, 0.05609130859375, 0.0267486572265625, 0.0178375244140625, 0.00014162063598632812, 0.0004036426544189453, 2.2411346435546875e-05], "tokens": [284, 562, 2064, 10932, 26, 3220, 1683, 27623, 6877, 2447, 296, 30, 1158, 2064, 1847, 30, 1158, 2064, 1769, 27, 291, 2571, 7462, 31219, 28741, 984, 30, 4540, 19637, 984, 301, 584, 4233, 1394, 473, 291, 6144, 5897, 26, 887, 30, 1769, 293, 584, 2064, 533, 2928, 280, 296, 32, 853, 26]}
{"line_number": 114, "line_type": "original", "code": "        if (Math.abs(yMin) <= functionValueAccuracy) {", "entropy": 1.0830078125, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [6.2421875, 7.3984375, 0.04278564453125, 1.4736328125, 0.004268646240234375, 0.260009765625, 0.0028057098388671875, 0.337158203125, 1.2255859375, 0.0364990234375, 0.1553955078125, 0.053558349609375, 0.0023212432861328125, 0.0003368854522705078, 0.0633544921875, 0.0308837890625], "tokens": [351, 415, 308, 5717, 32, 3596, 26, 107, 2928, 27, 2511, 667, 882, 26201, 27, 301]}
{"line_number": 114, "line_type": "generated", "code": "\n        final double min, final double max)\n        throws MaxIterationsExceededException, FunctionEvaluationException {\n\n        clearResult();\n        verifyInterval(min, max);\n\n        // return the first endpoint if it is good enough\n        double yMin = f.value(", "entropy": 0.127685546875, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [0.93115234375, 0.24267578125, 0.0023899078369140625, 0.01104736328125, 0.0007739067077636719, 0.07080078125, 0.0001806020736694336, 0.006267547607421875, 0.0195159912109375, 0.2275390625, 0.002193450927734375, 0.00714874267578125, 6.318092346191406e-06, 4.172325134277344e-06, 3.2186508178710938e-06, 0.0027103424072265625, 0.019500732421875, 2.956390380859375e-05, 1.430511474609375e-06, 0.0179443359375, 0.48486328125, 0.359619140625, 0.00019025802612304688, 0.00021660327911376953, 0.1690673828125, 0.12188720703125, 1.478515625, 0.003353118896484375, 0.007373809814453125, 0.00043487548828125, 0.004009246826171875, 0.01367950439453125, 0.20849609375, 0.60400390625, 0.94775390625, 0.0882568359375, 0.350341796875, 0.0183563232421875, 0.015716552734375, 0.0018949508666992188, 0.0011234283447265625, 0.0113677978515625, 0.0005335807800292969, 0.028289794921875, 0.08636474609375, 0.040679931640625, 0.0235443115234375, 0.002544403076171875, 0.007106781005859375, 0.00010037422180175781, 0.0004048347473144531, 4.0531158447265625e-05], "tokens": [291, 1158, 2064, 1847, 30, 1158, 2064, 1769, 27, 291, 2571, 7462, 31219, 28741, 984, 30, 4540, 19637, 984, 301, 584, 4233, 1394, 473, 291, 6144, 5757, 26, 887, 30, 1769, 293, 584, 434, 442, 322, 1932, 6998, 415, 561, 438, 4644, 8448, 291, 2064, 533, 2928, 280, 296, 32, 853, 26]}
{"line_number": 180, "line_type": "original", "code": "            if (Math.abs(yMin) <= functionValueAccuracy) {", "entropy": 1.474609375, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [6.0625, 1.474609375, 0.08538818359375, 0.437744140625, 0.003894805908203125, 0.010467529296875, 0.001239776611328125, 2.044921875, 12.53125, 0.1285400390625, 0.1563720703125, 0.074951171875, 0.002532958984375, 0.0002903938293457031, 0.46337890625, 0.12310791015625], "tokens": [1468, 415, 308, 5717, 32, 3596, 26, 107, 2928, 27, 2511, 667, 882, 26201, 27, 301]}
{"line_number": 180, "line_type": "generated", "code": "\n        double delta2 = x2 - x0;", "entropy": 0.48828125, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [0.307861328125, 1.3525390625, 1.6533203125, 0.54150390625, 0.0491943359375, 0.849609375, 0.288818359375, 0.005298614501953125, 0.003734588623046875, 0.317626953125, 0.0016164779663085938], "tokens": [291, 2064, 7715, 36, 280, 816, 36, 429, 816, 34, 45]}
{"line_number": 183, "line_type": "original", "code": "            } else if (Math.abs(yMax) <= functionValueAccuracy) {", "entropy": 1.2578125, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [6.92578125, 6.359375, 1.2275390625, 1.26953125, 0.09423828125, 1.54296875, 0.0174407958984375, 0.0233612060546875, 0.0045928955078125, 0.7451171875, 3.498046875, 0.10491943359375, 0.4130859375, 0.11163330078125, 0.003566741943359375, 0.00040984153747558594, 0.2130126953125, 0.078369140625], "tokens": [1468, 320, 813, 415, 308, 5717, 32, 3596, 26, 107, 2708, 27, 2511, 667, 882, 26201, 27, 301]}
{"line_number": 183, "line_type": "generated", "code": "\n        while (i < getIterationCount()) {\n            // compute the new point\n            final double newDelta = (x1 + x0) / 2;\n            final double newX = x0 + newDelta;\n            final double newY = f", "entropy": 0.50732421875, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [0.29296875, 0.53271484375, 0.42822265625, 0.9443359375, 0.1854248046875, 0.72802734375, 0.5341796875, 0.2236328125, 0.365966796875, 0.0740966796875, 0.5244140625, 1.205078125, 2.404296875, 0.302490234375, 0.8359375, 1.7197265625, 0.39208984375, 1.111328125, 0.0263671875, 3.283203125, 0.411376953125, 0.09375, 1.1875, 0.3720703125, 0.71533203125, 0.93115234375, 0.00658416748046875, 1.1376953125, 0.130859375, 0.3115234375, 0.0031147003173828125, 0.00030612945556640625, 0.888671875, 0.11163330078125, 0.254638671875, 0.0016345977783203125, 1.0146484375, 0.1875, 0.03857421875, 0.638671875, 0.79052734375, 0.08935546875, 0.41748046875, 2.384185791015625e-06, 0.151611328125, 0.095458984375, 0.06890869140625, 0.0008106231689453125, 0.2073974609375, 0.00485992431640625, 0.00365447998046875, 0.00940704345703125], "tokens": [291, 2218, 308, 91, 333, 622, 21863, 1534, 1157, 301, 324, 434, 7596, 322, 537, 2260, 324, 1158, 2064, 537, 9189, 280, 308, 106, 35, 474, 816, 34, 27, 517, 225, 36, 45, 324, 1158, 2064, 537, 74, 280, 816, 34, 474, 537, 9189, 45, 324, 1158, 2064, 537, 75, 280, 296]}
{"line_number": 247, "line_type": "original", "code": "                setResult(x1, i);", "entropy": 1.4560546875, "is_bug_line": false, "sus_score": 0.10540925533894598, "per_token_entropy": [7.19140625, 4.56640625, 0.060089111328125, 0.0139007568359375, 0.03485107421875, 0.043914794921875, 1.046875, 0.07745361328125, 0.06744384765625], "tokens": [2071, 739, 1394, 26, 106, 35, 30, 595, 293]}
{"line_number": 247, "line_type": "generated", "code": "\n            x0 = x1;\n            y0 = y1;\n            x1 = x1 + delta;\n            y1 = f.value(x1);\n            i++;\n        }\n\n        throw new MaxIterationsExceededException();\n\n    }\n\n    /**\n    ", "entropy": 0.2091064453125, "is_bug_line": false, "sus_score": 0.10540925533894598, "per_token_entropy": [0.25341796875, 1.2353515625, 0.4609375, 0.014434814453125, 0.049072265625, 0.060333251953125, 0.0034122467041015625, 0.0152130126953125, 0.230224609375, 0.0007319450378417969, 0.0003802776336669922, 0.00044989585876464844, 0.0004680156707763672, 0.00016701221466064453, 0.1268310546875, 1.091796875, 0.07867431640625, 1.470703125, 0.06060791015625, 0.0560302734375, 0.061248779296875, 0.0015420913696289062, 0.00027489662170410156, 0.054107666015625, 0.2408447265625, 0.0033512115478515625, 0.0015430450439453125, 0.0958251953125, 0.0014553070068359375, 0.005641937255859375, 0.0016222000122070312, 0.0031108856201171875, 0.0015993118286132812, 0.002765655517578125, 0.28662109375, 1.1767578125, 0.2431640625, 0.11962890625, 0.0010967254638671875, 0.7392578125, 0.1961669921875, 0.0091094970703125, 0.0197906494140625, 0.0005950927734375, 3.123283386230469e-05, 8.380413055419922e-05, 0.483154296875, 0.73193359375, 0.0035266876220703125, 0.861328125, 0.1402587890625, 0.18017578125], "tokens": [324, 816, 34, 280, 816, 35, 45, 324, 533, 34, 280, 533, 35, 45, 324, 816, 35, 280, 816, 35, 474, 7715, 45, 324, 533, 35, 280, 296, 32, 853, 26, 106, 35, 293, 324, 595, 3334, 291, 320, 584, 1422, 537, 7462, 31219, 28741, 984, 473, 446, 320, 446, 1022, 275]}
{"line_number": 248, "line_type": "original", "code": "                return result;", "entropy": 4.359375, "is_bug_line": false, "sus_score": 0.10540925533894598, "per_token_entropy": [7.14453125, 8.8515625, 1.427734375, 0.00685882568359375], "tokens": [2071, 442, 1056, 45]}
{"line_number": 248, "line_type": "generated", "code": "\n            // Compute new X1, Y1\n            x2 = x1;\n            y2 = y1;\n            x1 += delta;\n            y1 = f.value(x1);\n            ++i;\n        }\n\n        throw new MaxIterationsExceeded", "entropy": 0.196533203125, "is_bug_line": false, "sus_score": 0.10540925533894598, "per_token_entropy": [0.501953125, 0.467529296875, 0.453857421875, 0.25341796875, 0.17724609375, 0.6435546875, 0.57568359375, 0.038726806640625, 0.0006613731384277344, 0.705078125, 0.525390625, 0.83056640625, 0.0230865478515625, 0.0255279541015625, 0.0296478271484375, 0.028350830078125, 0.025665283203125, 0.5078125, 0.0006814002990722656, 0.00015079975128173828, 0.0018186569213867188, 0.0007619857788085938, 0.00016188621520996094, 0.11541748046875, 1.2685546875, 0.03253173828125, 0.1741943359375, 0.002056121826171875, 0.00023126602172851562, 0.0863037109375, 0.454833984375, 0.00089263916015625, 0.0020732879638671875, 0.060516357421875, 0.0013017654418945312, 0.004344940185546875, 0.0009775161743164062, 0.0015859603881835938, 0.0008673667907714844, 0.0025539398193359375, 0.304931640625, 0.66015625, 0.007686614990234375, 0.0055694580078125, 0.2132568359375, 0.0013933181762695312, 0.783203125, 0.1922607421875, 0.00855255126953125, 0.018096923828125, 0.0004367828369140625, 3.5643577575683594e-05], "tokens": [324, 434, 12836, 537, 1593, 35, 30, 1410, 35, 324, 816, 36, 280, 816, 35, 45, 324, 533, 36, 280, 533, 35, 45, 324, 816, 35, 1454, 7715, 45, 324, 533, 35, 280, 296, 32, 853, 26, 106, 35, 293, 324, 3311, 91, 45, 291, 320, 584, 1422, 537, 7462, 31219, 28741]}
{"line_number": 236, "line_type": "original", "code": "                x0 = x1;", "entropy": 3.546875, "is_bug_line": false, "sus_score": 0.09284766908852593, "per_token_entropy": [6.453125, 6.296875, 1.0859375, 10.4375, 0.031280517578125, 0.5107421875, 0.0053253173828125], "tokens": [2071, 816, 34, 280, 816, 35, 45]}
{"line_number": 236, "line_type": "generated", "code": "\n                        p >= Math.abs(0.5 * p1)) {\n                    // Inverse quadratic interpolation failed,\n                    // use bisection.\n                    delta = 0.5 * dx;\n                    oldDelta = delta;\n                } else if (", "entropy": 0.08819580078125, "is_bug_line": false, "sus_score": 0.09284766908852593, "per_token_entropy": [0.5888671875, 0.297607421875, 0.25439453125, 0.2154541015625, 0.00011551380157470703, 0.001739501953125, 0.0033321380615234375, 0.057861328125, 2.7418136596679688e-06, 0.0003941059112548828, 0.0377197265625, 0.230712890625, 0.0017414093017578125, 0.11083984375, 0.04217529296875, 0.0254974365234375, 0.103515625, 0.329833984375, 0.0252838134765625, 0.0005936622619628906, 7.68899917602539e-05, 0.004245758056640625, 0.327392578125, 0.245361328125, 0.1845703125, 0.00101470947265625, 0.30615234375, 0.012603759765625, 0.00011360645294189453, 1.3113021850585938e-06, 0.270751953125, 0.01023101806640625, 0.051544189453125, 0.0009522438049316406, 0.0026874542236328125, 6.604194641113281e-05, 9.894371032714844e-06, 4.38690185546875e-05, 0.0008754730224609375, 0.001712799072265625, 0.00014030933380126953, 0.0126800537109375, 0.00846099853515625, 0.00031447410583496094, 0.0017366409301757812, 0.0029354095458984375, 0.0001609325408935547, 0.006931304931640625, 0.00015306472778320312, 0.013336181640625, 0.71923828125, 0.07275390625], "tokens": [715, 298, 2377, 4175, 32, 3596, 26, 34, 32, 39, 319, 298, 35, 490, 301, 528, 434, 701, 3565, 28624, 689, 23334, 3803, 30, 528, 434, 793, 323, 1125, 382, 32, 528, 7715, 280, 225, 34, 32, 39, 319, 12211, 45, 528, 3610, 9189, 280, 7715, 45, 400, 320, 813, 415, 308]}
{"line_number": 237, "line_type": "original", "code": "                x1 = x2;", "entropy": 2.611328125, "is_bug_line": false, "sus_score": 0.09284766908852593, "per_token_entropy": [7.78125, 5.87890625, 2.056640625, 0.5546875, 0.07073974609375, 1.8427734375, 0.0904541015625], "tokens": [2071, 816, 35, 280, 816, 36, 45]}
{"line_number": 237, "line_type": "generated", "code": "\n                    // Inverse quadratic interpolation failed,\n                    // use bisection.\n                    delta = 0.5 * dx;\n                    oldDelta = delta;\n                } else {\n                    // Newton-Raphson step.\n                    delta = p / p", "entropy": 0.12249755859375, "is_bug_line": false, "sus_score": 0.09284766908852593, "per_token_entropy": [0.04541015625, 0.2034912109375, 0.80126953125, 0.0625, 0.0015382766723632812, 7.605552673339844e-05, 0.0027408599853515625, 0.4296875, 0.150634765625, 0.173828125, 0.0020122528076171875, 0.42822265625, 0.01120758056640625, 0.00011539459228515625, 8.344650268554688e-07, 0.302734375, 0.007720947265625, 0.071533203125, 0.0011234283447265625, 0.0027370452880859375, 6.365776062011719e-05, 7.748603820800781e-06, 5.0187110900878906e-05, 0.0011348724365234375, 0.0018482208251953125, 0.00017333030700683594, 0.0166015625, 0.00765228271484375, 0.0003154277801513672, 0.0021266937255859375, 0.002277374267578125, 0.0001583099365234375, 0.01100921630859375, 0.0003173351287841797, 0.0155487060546875, 0.176513671875, 0.030517578125, 0.33740234375, 2.439453125, 0.0218658447265625, 0.07635498046875, 0.0013227462768554688, 0.00762176513671875, 0.00014650821685791016, 0.037841796875, 0.322998046875, 0.010223388671875, 0.11773681640625, 0.01319122314453125, 0.00743865966796875, 0.00978851318359375, 0.0019445419311523438], "tokens": [528, 434, 701, 3565, 28624, 689, 23334, 3803, 30, 528, 434, 793, 323, 1125, 382, 32, 528, 7715, 280, 225, 34, 32, 39, 319, 12211, 45, 528, 3610, 9189, 280, 7715, 45, 400, 320, 813, 301, 528, 434, 3136, 937, 31, 68, 2158, 1155, 3111, 32, 528, 7715, 280, 298, 517, 298]}
{"line_number": 238, "line_type": "original", "code": "                x2 = x0;", "entropy": 2.228515625, "is_bug_line": false, "sus_score": 0.09284766908852593, "per_token_entropy": [7.79296875, 6.38671875, 0.5732421875, 0.044219970703125, 0.1507568359375, 0.62939453125, 0.024261474609375], "tokens": [2071, 816, 36, 280, 816, 34, 45]}
{"line_number": 238, "line_type": "generated", "code": "\n                    // closer to the lower bound.\n                    delta = 0.5 * dx;\n                    oldDelta = delta;\n                } else {\n                    double dx1 = dx + p / p1;\n                    if (dx > 0.0) {\n                       ", "entropy": 0.306884765625, "is_bug_line": false, "sus_score": 0.09284766908852593, "per_token_entropy": [0.10552978515625, 0.055450439453125, 1.3515625, 0.00804901123046875, 1.2041015625, 1.96875, 0.339599609375, 1.7177734375, 0.32275390625, 0.58056640625, 0.003993988037109375, 0.1837158203125, 0.00060272216796875, 1.5139579772949219e-05, 0.00020444393157958984, 0.0009899139404296875, 0.2257080078125, 0.006412506103515625, 0.0177001953125, 0.01294708251953125, 0.00019812583923339844, 0.0013113021850585938, 0.005321502685546875, 0.00030350685119628906, 0.0155792236328125, 0.0002624988555908203, 0.0254058837890625, 0.07025146484375, 0.039093017578125, 1.5703125, 1.1083984375, 0.336181640625, 0.0192718505859375, 0.6962890625, 0.79052734375, 0.04595947265625, 0.02325439453125, 0.00214385986328125, 3.5762786865234375e-06, 0.0007672309875488281, 0.0531005859375, 0.330078125, 0.4814453125, 0.578125, 0.5703125, 0.0005526542663574219, 0.00022268295288085938, 0.916015625, 8.225440979003906e-06, 0.158935546875, 0.002155303955078125, 0.0152435302734375], "tokens": [528, 434, 30682, 372, 322, 7216, 5085, 32, 528, 7715, 280, 225, 34, 32, 39, 319, 12211, 45, 528, 3610, 9189, 280, 7715, 45, 400, 320, 813, 301, 528, 2064, 12211, 35, 280, 12211, 474, 298, 517, 298, 35, 45, 528, 415, 308, 4582, 848, 225, 34, 32, 34, 27, 301, 715]}
{"line_number": 239, "line_type": "original", "code": "                y0 = y1;", "entropy": 2.748046875, "is_bug_line": false, "sus_score": 0.09284766908852593, "per_token_entropy": [8.515625, 7.484375, 1.8310546875, 0.1253662109375, 0.044097900390625, 1.2255859375, 0.01202392578125], "tokens": [2071, 533, 34, 280, 533, 35, 45]}
{"line_number": 239, "line_type": "generated", "code": "\n                    delta = 0.5 * dx;\n                    oldDelta = delta;\n                } else {\n                    // Accept the step.\n                    oldDelta = delta;\n                    delta = p / p1;\n                }\n            }\n            double x = x1 + delta", "entropy": 0.1416015625, "is_bug_line": false, "sus_score": 0.09284766908852593, "per_token_entropy": [0.050445556640625, 0.306640625, 0.0098876953125, 0.12457275390625, 0.00031447410583496094, 2.9802322387695312e-05, 0.00024580955505371094, 0.0012645721435546875, 0.06011962890625, 0.002475738525390625, 0.0168914794921875, 0.00916290283203125, 0.0002206563949584961, 0.0017271041870117188, 0.00505828857421875, 0.00025916099548339844, 0.01708984375, 0.0002446174621582031, 0.0166778564453125, 0.08184814453125, 0.0245361328125, 0.509765625, 1.2001953125, 0.26220703125, 0.392578125, 0.70654296875, 0.031982421875, 0.41162109375, 0.00017058849334716797, 0.00045871734619140625, 0.474365234375, 9.59634780883789e-05, 0.018402099609375, 0.300537109375, 0.006832122802734375, 0.01119232177734375, 0.0012531280517578125, 0.0012617111206054688, 1.430511474609375e-06, 0.0011129379272460938, 0.34521484375, 0.00010526180267333984, 0.030609130859375, 0.00029921531677246094, 0.344970703125, 0.97412109375, 0.160400390625, 0.322265625, 0.11004638671875, 0.0119781494140625, 0.0039005279541015625, 0.0008196830749511719], "tokens": [528, 7715, 280, 225, 34, 32, 39, 319, 12211, 45, 528, 3610, 9189, 280, 7715, 45, 400, 320, 813, 301, 528, 434, 16217, 322, 3111, 32, 528, 3610, 9189, 280, 7715, 45, 528, 7715, 280, 298, 517, 298, 35, 45, 400, 320, 324, 320, 324, 2064, 816, 280, 816, 35, 474, 7715]}
{"line_number": 240, "line_type": "original", "code": "                y1 = y2;", "entropy": 2.599609375, "is_bug_line": false, "sus_score": 0.09284766908852593, "per_token_entropy": [7.95703125, 8.1171875, 1.46484375, 0.01505279541015625, 0.1580810546875, 0.4765625, 0.0079498291015625], "tokens": [2071, 533, 35, 280, 533, 36, 45]}
{"line_number": 240, "line_type": "generated", "code": "\n                    delta = 0.5 * dx;\n                    oldDelta = delta;\n                } else {\n                    // inverse quadratic interpolation\n                    // is on the right track,\n                    // use this as the next approximation\n                    // for the root\n                    delta = p /", "entropy": 0.239990234375, "is_bug_line": false, "sus_score": 0.09284766908852593, "per_token_entropy": [0.051055908203125, 0.09637451171875, 0.001926422119140625, 0.003116607666015625, 8.726119995117188e-05, 2.7894973754882812e-05, 9.191036224365234e-05, 0.001842498779296875, 0.0023555755615234375, 0.0004458427429199219, 0.0205078125, 0.00934600830078125, 0.00039577484130859375, 0.0022792816162109375, 0.003559112548828125, 0.0001996755599975586, 0.0213165283203125, 0.00013065338134765625, 0.01024627685546875, 0.050445556640625, 0.0177764892578125, 0.1846923828125, 1.673828125, 0.0013828277587890625, 0.00025391578674316406, 0.004058837890625, 0.361328125, 0.3369140625, 0.0738525390625, 1.373046875, 0.70751953125, 0.1021728515625, 0.004184722900390625, 0.10040283203125, 2.1328125, 0.0229644775390625, 1.626953125, 0.0872802734375, 0.5693359375, 0.28515625, 0.04925537109375, 0.39697265625, 0.359619140625, 0.6572265625, 0.18115234375, 0.00864410400390625, 0.004817962646484375, 0.33935546875, 0.4951171875, 0.00604248046875, 0.01221466064453125, 0.020751953125], "tokens": [528, 7715, 280, 225, 34, 32, 39, 319, 12211, 45, 528, 3610, 9189, 280, 7715, 45, 400, 320, 813, 301, 528, 434, 19385, 28624, 689, 23334, 528, 434, 438, 544, 322, 2091, 4562, 30, 528, 434, 793, 458, 619, 322, 2354, 39431, 528, 434, 436, 322, 3051, 528, 7715, 280, 298, 517]}
{"line_number": 241, "line_type": "original", "code": "                y2 = y0;", "entropy": 2.447265625, "is_bug_line": false, "sus_score": 0.09284766908852593, "per_token_entropy": [6.78515625, 6.73046875, 1.185546875, 0.01012420654296875, 0.80712890625, 1.58203125, 0.0251007080078125], "tokens": [2071, 533, 36, 280, 533, 34, 45]}
{"line_number": 241, "line_type": "generated", "code": "\n                } else {\n                    // inverse quadratic interpolation\n                    // is on track, narrow in\n                    delta = p / p1;\n                    oldDelta = delta;\n                }\n            }\n            double x = x1 + delta;\n            y2 = f.value", "entropy": 0.303955078125, "is_bug_line": false, "sus_score": 0.09284766908852593, "per_token_entropy": [0.127197265625, 0.00047969818115234375, 0.03155517578125, 0.047027587890625, 0.01300048828125, 0.1893310546875, 1.2197265625, 0.0013074874877929688, 0.0002734661102294922, 0.004573822021484375, 0.361572265625, 0.5263671875, 0.1468505859375, 1.234375, 0.62646484375, 0.355224609375, 2.96875, 0.2347412109375, 0.4384765625, 0.290771484375, 0.00548553466796875, 0.014129638671875, 0.0031280517578125, 0.0026454925537109375, 1.430511474609375e-06, 0.002471923828125, 0.17333984375, 0.400634765625, 0.0005860328674316406, 0.0009198188781738281, 0.01561737060546875, 0.0004208087921142578, 0.767578125, 0.0002903938293457031, 0.04913330078125, 0.0005850791931152344, 0.29736328125, 0.95556640625, 0.2022705078125, 0.4453125, 0.0936279296875, 0.007781982421875, 0.0029201507568359375, 0.00107574462890625, 0.00040221214294433594, 0.2178955078125, 1.5634765625, 0.7197265625, 0.0011091232299804688, 1.033203125, 0.0025234222412109375, 0.005596160888671875], "tokens": [400, 320, 813, 301, 528, 434, 19385, 28624, 689, 23334, 528, 434, 438, 544, 4562, 30, 32820, 328, 528, 7715, 280, 298, 517, 298, 35, 45, 528, 3610, 9189, 280, 7715, 45, 400, 320, 324, 320, 324, 2064, 816, 280, 816, 35, 474, 7715, 45, 324, 533, 36, 280, 296, 32, 853]}
{"line_number": 193, "line_type": "original", "code": "            ret = solve(f, min, yMin, max, yMax, min, yMin);", "entropy": 1.64453125, "is_bug_line": false, "sus_score": 0.09128709291752768, "per_token_entropy": [4.7421875, 5.6015625, 0.053802490234375, 4.11328125, 1.103515625, 0.0821533203125, 0.0093841552734375, 3.400390625, 0.1221923828125, 7.6796875, 1.3037109375, 0.26513671875, 0.06134033203125, 0.1607666015625, 0.06341552734375, 0.0012311935424804688, 1.7939453125, 4.19140625, 0.6708984375, 0.53466796875, 0.05181884765625, 0.1929931640625], "tokens": [1468, 2152, 280, 10932, 26, 88, 30, 1847, 30, 533, 2928, 30, 1769, 30, 533, 2708, 30, 1847, 30, 533, 2928, 293]}
{"line_number": 193, "line_type": "generated", "code": "\n            else {\n                // use the last interval\n                x0 = x1;\n                y0 = y1;\n            }\n\n            // try to guess the root of the derivative\n            double d = estimateDerivative(x0, x1, y0,", "entropy": 0.5703125, "is_bug_line": false, "sus_score": 0.09128709291752768, "per_token_entropy": [0.70849609375, 2.423828125, 0.351318359375, 0.0712890625, 0.137939453125, 1.28515625, 0.6865234375, 1.10546875, 2.17578125, 1.3486328125, 0.226318359375, 0.454345703125, 0.0018777847290039062, 0.002964019775390625, 0.08209228515625, 0.0004954338073730469, 0.0041961669921875, 0.266845703125, 0.0005159378051757812, 0.00015926361083984375, 0.00016891956329345703, 0.0003247261047363281, 9.298324584960938e-05, 0.053924560546875, 0.00029659271240234375, 0.360107421875, 0.7109375, 2.08984375, 0.62158203125, 2.193359375, 0.350341796875, 0.416015625, 0.775390625, 0.1339111328125, 1.2890625, 0.56298828125, 0.80126953125, 1.197265625, 0.78955078125, 2.767578125, 0.017120361328125, 0.0025920867919921875, 0.034210205078125, 1.1240234375, 0.3515625, 0.06463623046875, 0.5771484375, 0.279052734375, 0.196533203125, 0.43505859375, 0.0931396484375, 0.0267333984375], "tokens": [324, 813, 301, 400, 434, 793, 322, 2401, 7898, 400, 816, 34, 280, 816, 35, 45, 400, 533, 34, 280, 533, 35, 45, 324, 320, 1064, 434, 1596, 372, 11089, 322, 3051, 432, 322, 27640, 324, 2064, 343, 280, 20772, 30970, 1353, 26, 106, 34, 30, 816, 35, 30, 533, 34, 30]}
