{"line_number": 709, "line_type": "original", "code": "        double sum = 0;", "entropy": 0.83642578125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [3.693359375, 1.5498046875, 0.58984375, 0.00839996337890625, 0.0048370361328125, 6.401538848876953e-05, 0.0083770751953125], "tokens": [351, 2064, 3632, 280, 225, 34, 45]}
{"line_number": 709, "line_type": "generated", "code": "\n     * @param v vector with which distance should be computed\n     * @return the distance between instance and v\n     * @exception IllegalArgumentException if v is not the same size as this\n     */\n    public double getDistance(ArrayRealVector v)\n        throws IllegalArgumentException", "entropy": 0.05169677734375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.239990234375, 0.0601806640625, 0.20654296875, 0.00714111328125, 0.0030498504638671875, 0.306884765625, 0.252685546875, 0.00010263919830322266, 0.043670654296875, 0.015838623046875, 2.8967857360839844e-05, 0.0030994415283203125, 0.08721923828125, 0.00042724609375, 0.0020580291748046875, 0.00933837890625, 0.315185546875, 0.00569915771484375, 0.0009174346923828125, 0.496826171875, 0.0010042190551757812, 0.003963470458984375, 0.09716796875, 0.00818634033203125, 0.0009717941284179688, 0.032318115234375, 0.050048828125, 0.006206512451171875, 0.013336181640625, 0.0004935264587402344, 0.022552490234375, 0.0080108642578125, 0.00011110305786132812, 0.002002716064453125, 0.01207733154296875, 0.041961669921875, 0.0755615234375, 0.1253662109375, 0.035369873046875, 0.01311492919921875, 0.0026187896728515625, 0.010162353515625, 0.0011529922485351562, 0.0008101463317871094, 0.0081024169921875, 4.7087669372558594e-05, 4.76837158203125e-07, 0.00016176700592041016, 0.0020160675048828125, 0.054229736328125, 0.00019609928131103516, 0.0016012191772460938], "tokens": [275, 319, 477, 753, 354, 4026, 623, 1510, 7291, 1395, 526, 15279, 275, 319, 477, 601, 322, 7291, 3733, 1980, 461, 354, 275, 319, 477, 3893, 12137, 415, 354, 438, 646, 322, 2432, 1334, 619, 458, 275, 569, 284, 562, 2064, 622, 8457, 26, 1261, 6877, 2863, 354, 27, 291, 2571, 12137]}
{"line_number": 710, "line_type": "original", "code": "        for (double a : data) {", "entropy": 1.4560546875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [2.724609375, 4.05078125, 0.030517578125, 4.02734375, 1.1435546875, 0.1463623046875, 0.8662109375, 0.0113677978515625, 0.1015625], "tokens": [351, 436, 308, 2627, 312, 499, 706, 27, 301]}
{"line_number": 710, "line_type": "generated", "code": "\n     * @return the distance between instance and v\n     * @exception IllegalArgumentException if v is not the same size as this\n     */\n    public double getDistance(ArrayRealVector v)\n        throws IllegalArgumentException {\n        return getDistance(v.data);\n    }", "entropy": 0.0966796875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.90185546875, 0.31884765625, 0.028289794921875, 0.051849365234375, 0.9091796875, 0.01107025146484375, 0.020050048828125, 1.3935546875, 0.0019378662109375, 0.0095672607421875, 0.2498779296875, 0.031463623046875, 0.00173187255859375, 0.08282470703125, 0.0745849609375, 0.0108795166015625, 0.03411865234375, 0.001190185546875, 0.0298614501953125, 0.01107025146484375, 0.0002887248992919922, 0.0061187744140625, 0.01708984375, 0.046173095703125, 0.1787109375, 0.1051025390625, 0.050933837890625, 0.01499176025390625, 0.0032958984375, 0.011688232421875, 0.000965118408203125, 0.0007486343383789062, 0.0082550048828125, 8.392333984375e-05, 3.5762786865234375e-07, 0.0002200603485107422, 0.0028514862060546875, 0.05389404296875, 0.0002980232238769531, 0.001506805419921875, 0.0086669921875, 0.08404541015625, 0.13916015625, 0.080322265625, 0.0006690025329589844, 0.0010786056518554688, 0.0010738372802734375, 0.0005588531494140625, 0.0081024169921875, 0.0017900466918945312, 0.0237884521484375, 0.00113677978515625], "tokens": [275, 319, 477, 601, 322, 7291, 3733, 1980, 461, 354, 275, 319, 477, 3893, 12137, 415, 354, 438, 646, 322, 2432, 1334, 619, 458, 275, 569, 284, 562, 2064, 622, 8457, 26, 1261, 6877, 2863, 354, 27, 291, 2571, 12137, 301, 291, 442, 622, 8457, 26, 104, 32, 605, 293, 284, 320]}
{"line_number": 711, "line_type": "original", "code": "            sum += Math.abs(a);", "entropy": 2.580078125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [6.3828125, 4.3671875, 0.07952880859375, 3.6640625, 0.010833740234375, 0.1446533203125, 0.0213165283203125, 3.060546875, 5.4921875], "tokens": [1468, 3632, 1454, 4175, 32, 3596, 26, 83, 293]}
{"line_number": 711, "line_type": "generated", "code": "\n     */\n    public double getDistance(ArrayRealVector v)\n        throws IllegalArgumentException {\n        return getDistance(v.data);\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public RealVector unitVector() {\n        final double norm = getNorm", "entropy": 0.1302490234375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.48291015625, 0.4111328125, 0.03125, 0.0194854736328125, 0.0031604766845703125, 0.01910400390625, 0.002597808837890625, 0.0009455680847167969, 0.0087890625, 8.916854858398438e-05, 3.5762786865234375e-07, 0.00023829936981201172, 0.002628326416015625, 0.1270751953125, 0.0002658367156982422, 0.0028839111328125, 0.0087432861328125, 0.0838623046875, 0.37060546875, 0.319580078125, 0.002079010009765625, 0.0025157928466796875, 0.0013380050659179688, 0.000518798828125, 0.0084686279296875, 0.00167083740234375, 0.0208282470703125, 0.0008225440979003906, 0.293701171875, 0.031158447265625, 0.73486328125, 0.0001652240753173828, 0.0008654594421386719, 0.002685546875, 0.01116943359375, 0.436279296875, 0.0017576217651367188, 0.00853729248046875, 0.0394287109375, 0.467041015625, 0.01410675048828125, 0.71875, 0.10870361328125, 0.01273345947265625, 0.410400390625, 0.07135009765625, 1.185546875, 0.07525634765625, 0.1607666015625, 0.020843505859375, 0.021453857421875, 0.01212310791015625], "tokens": [275, 569, 284, 562, 2064, 622, 8457, 26, 1261, 6877, 2863, 354, 27, 291, 2571, 12137, 301, 291, 442, 622, 8457, 26, 104, 32, 605, 293, 284, 320, 446, 1022, 3088, 18446, 111, 569, 284, 477, 1788, 284, 562, 11443, 2863, 4201, 2863, 346, 301, 291, 1158, 2064, 9807, 280, 622, 14373]}
{"line_number": 713, "line_type": "original", "code": "        return sum;", "entropy": 3.96875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [5.296875, 1.5673828125, 8.8046875, 0.2093505859375], "tokens": [351, 442, 3632, 45]}
{"line_number": 713, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Distance between two vectors.\n     * <p>This method computes the distance consistent with the\n     * L<sub>1</sub> norm, i.e. the sum of the absolute values\n     * of elements differences.</", "entropy": 0.10711669921875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.888671875, 0.15087890625, 0.2099609375, 0.0155487060546875, 0.1923828125, 4.6253204345703125e-05, 0.4052734375, 0.007305145263671875, 0.0299835205078125, 0.050506591796875, 0.0096588134765625, 0.007720947265625, 0.0002416372299194336, 0.12384033203125, 0.0005359649658203125, 0.0006203651428222656, 0.01450347900390625, 0.0006198883056640625, 0.005725860595703125, 0.0017080307006835938, 0.0019397735595703125, 0.0241241455078125, 0.0015134811401367188, 0.0023975372314453125, 0.036285400390625, 0.0002644062042236328, 0.00873565673828125, 0.0031280517578125, 0.0007104873657226562, 0.20654296875, 0.489013671875, 0.00034809112548828125, 0.0029010772705078125, 0.001651763916015625, 0.0005788803100585938, 0.480712890625, 0.0119781494140625, 2.276897430419922e-05, 9.250640869140625e-05, 0.0027332305908203125, 0.04058837890625, 0.02618408203125, 0.0005064010620117188, 0.1270751953125, 0.1273193359375, 0.63037109375, 0.83935546875, 0.00033974647521972656, 0.002254486083984375, 0.2388916015625, 0.0164947509765625, 0.13134765625], "tokens": [284, 320, 446, 1022, 275, 319, 26911, 3733, 3134, 16540, 32, 275, 319, 333, 98, 48, 2272, 1411, 35560, 322, 7291, 14488, 623, 322, 275, 319, 498, 46, 1113, 48, 35, 377, 1113, 48, 9807, 30, 595, 32, 87, 32, 322, 3632, 432, 322, 7976, 2078, 275, 319, 432, 4702, 21005, 1730]}
{"line_number": 719, "line_type": "original", "code": "        double max = 0;", "entropy": 1.8984375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [6.01953125, 0.9794921875, 6.05859375, 0.11126708984375, 0.07745361328125, 0.0011606216430664062, 0.041046142578125], "tokens": [351, 2064, 1769, 280, 225, 34, 45]}
{"line_number": 719, "line_type": "generated", "code": "\n        double sum = 0;\n        for (int i = 0; i < data.length; ++i) {\n            final double delta = data[i] - v.data[i];\n            sum += delta * delta;\n        }\n       ", "entropy": 0.04638671875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.049560546875, 1.294921875, 0.09271240234375, 0.0025424957275390625, 0.0022258758544921875, 3.981590270996094e-05, 0.007183074951171875, 0.0308380126953125, 0.0565185546875, 0.0011730194091796875, 0.0013246536254882812, 0.0027828216552734375, 0.00091552734375, 0.0005774497985839844, 8.356571197509766e-05, 0.00437164306640625, 0.0008406639099121094, 0.00397491455078125, 0.0293121337890625, 0.00013768672943115234, 0.0005240440368652344, 0.00083160400390625, 0.1990966796875, 0.0001246929168701172, 0.0009984970092773438, 0.007061004638671875, 0.025970458984375, 0.162109375, 0.0009465217590332031, 0.0134735107421875, 0.0007109642028808594, 0.01044464111328125, 9.930133819580078e-05, 0.00013244152069091797, 0.0007014274597167969, 0.00033473968505859375, 0.0011234283447265625, 0.00344085693359375, 0.355224609375, 0.0002791881561279297, 0.00011467933654785156, 0.0002522468566894531, 0.01983642578125, 0.0026302337646484375, 0.0014295578002929688, 0.0025768280029296875, 0.0005445480346679688, 0.00011265277862548828, 0.00045180320739746094, 0.006351470947265625, 0.0003635883331298828, 0.0123443603515625], "tokens": [291, 2064, 3632, 280, 225, 34, 45, 291, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 706, 32, 1322, 45, 3311, 91, 27, 301, 324, 1158, 2064, 7715, 280, 706, 77, 91, 79, 429, 354, 32, 605, 77, 91, 970, 324, 3632, 1454, 7715, 319, 7715, 45, 291, 320, 291]}
{"line_number": 720, "line_type": "original", "code": "        for (double a : data) {", "entropy": 1.25, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [4.640625, 3.49609375, 0.0124359130859375, 2.349609375, 0.122314453125, 0.062744140625, 0.47998046875, 0.005767822265625, 0.08111572265625], "tokens": [351, 436, 308, 2627, 312, 499, 706, 27, 301]}
{"line_number": 720, "line_type": "generated", "code": "\n    }", "entropy": 0.60546875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.673828125, 0.53759765625], "tokens": [284, 320]}
{"line_number": 721, "line_type": "original", "code": "            max += Math.max(max, Math.abs(a));", "entropy": 2.001953125, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [8.1171875, 3.35546875, 4.8203125, 0.147705078125, 0.00930023193359375, 4.55859375, 0.006443023681640625, 7.58984375, 0.03912353515625, 0.242431640625, 0.01345062255859375, 0.002269744873046875, 0.004764556884765625, 0.9296875, 0.188232421875], "tokens": [1468, 1769, 1454, 4175, 32, 1449, 26, 1449, 30, 4175, 32, 3596, 26, 83, 876]}
{"line_number": 721, "line_type": "generated", "code": "\n    /**\n     * Distance between two vectors.\n     * <p>This method computes the distance consistent with the\n     * L<sub>1</sub> norm, i.e. the sum of the absolute values of\n     * elements differences.</p>", "entropy": 0.1221923828125, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [1.2666015625, 0.146484375, 0.289306640625, 3.147125244140625e-05, 1.0419921875, 0.0212860107421875, 0.28076171875, 0.041046142578125, 0.09429931640625, 0.00858306884765625, 0.00025153160095214844, 0.051422119140625, 0.0011692047119140625, 0.0014801025390625, 0.039947509765625, 0.001789093017578125, 0.045501708984375, 0.0040435791015625, 0.0138092041015625, 0.08636474609375, 0.0011301040649414062, 0.0030841827392578125, 0.1351318359375, 0.00020051002502441406, 0.0118865966796875, 0.003978729248046875, 0.002197265625, 0.1741943359375, 0.045440673828125, 0.0003426074981689453, 0.00012171268463134766, 0.000782012939453125, 0.0007338523864746094, 0.5068359375, 0.01739501953125, 2.002716064453125e-05, 0.00015544891357421875, 0.00247955322265625, 0.0295867919921875, 0.028289794921875, 0.0005354881286621094, 0.10845947265625, 0.235595703125, 0.59423828125, 0.4326171875, 0.338134765625, 4.5299530029296875e-06, 0.10992431640625, 0.0115509033203125, 0.12451171875, 0.00035381317138671875, 0.0004611015319824219], "tokens": [284, 1022, 275, 319, 26911, 3733, 3134, 16540, 32, 275, 319, 333, 98, 48, 2272, 1411, 35560, 322, 7291, 14488, 623, 322, 275, 319, 498, 46, 1113, 48, 35, 377, 1113, 48, 9807, 30, 595, 32, 87, 32, 322, 3632, 432, 322, 7976, 2078, 432, 275, 319, 4702, 21005, 1730, 98, 48]}
{"line_number": 723, "line_type": "original", "code": "        return max;", "entropy": 2.8984375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [6.56640625, 0.7802734375, 4.07421875, 0.171875], "tokens": [351, 442, 1769, 45]}
{"line_number": 723, "line_type": "generated", "code": "\n    public double getL1Distance(ArrayRealVector v)\n        throws IllegalArgumentException {\n        checkVectorDimensions(v);\n        double sum = 0;\n        for (int i = 0; i < data.length; ++i) {\n            final", "entropy": 0.0867919921875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.413818359375, 0.385498046875, 0.484375, 0.04376220703125, 0.046417236328125, 0.0135650634765625, 3.7789344787597656e-05, 0.0012102127075195312, 0.439697265625, 2.2292137145996094e-05, 7.152557373046875e-07, 0.0007548332214355469, 0.002773284912109375, 0.19873046875, 0.0003814697265625, 0.01079559326171875, 0.01079559326171875, 0.061737060546875, 0.1671142578125, 0.0027637481689453125, 0.0011157989501953125, 0.008056640625, 0.0009469985961914062, 1.10546875, 0.0294189453125, 0.06793212890625, 0.187744140625, 0.0011873245239257812, 0.0008902549743652344, 2.586841583251953e-05, 0.0036945343017578125, 0.004978179931640625, 0.0026721954345703125, 0.00241851806640625, 0.0035266876220703125, 0.0005326271057128906, 0.0003724098205566406, 0.0002522468566894531, 3.8743019104003906e-05, 0.002529144287109375, 0.0005464553833007812, 0.00060272216796875, 0.0068206787109375, 2.8967857360839844e-05, 0.00023615360260009766, 0.00037288665771484375, 0.129150390625, 0.0001264810562133789, 0.0006918907165527344, 0.0008969306945800781, 0.01186370849609375, 0.650390625], "tokens": [284, 562, 2064, 622, 62, 35, 8457, 26, 1261, 6877, 2863, 354, 27, 291, 2571, 12137, 301, 291, 1505, 2863, 16485, 26, 104, 293, 291, 2064, 3632, 280, 225, 34, 45, 291, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 706, 32, 1322, 45, 3311, 91, 27, 301, 324, 1158]}
{"line_number": 699, "line_type": "original", "code": "        double sum = 0;", "entropy": 1.9091796875, "is_bug_line": false, "sus_score": 0.20412414523193154, "per_token_entropy": [3.353515625, 5.8828125, 3.84765625, 0.06512451171875, 0.1341552734375, 0.0031452178955078125, 0.0770263671875], "tokens": [351, 2064, 3632, 280, 225, 34, 45]}
{"line_number": 699, "line_type": "generated", "code": "\n            sum += delta * delta;\n        }\n        return Math.sqrt(sum);\n    }\n\n    /**\n     * Compute the distance between this vector and another one.\n     * @param v vector to which distance should be computed\n     * @return the distance between", "entropy": 0.09527587890625, "is_bug_line": false, "sus_score": 0.20412414523193154, "per_token_entropy": [0.2100830078125, 0.045867919921875, 0.00384521484375, 0.010589599609375, 0.001750946044921875, 0.0001691579818725586, 0.0006632804870605469, 0.08160400390625, 0.0011644363403320312, 0.0186767578125, 0.0006222724914550781, 0.0038318634033203125, 3.0994415283203125e-06, 0.00010144710540771484, 6.651878356933594e-05, 4.017353057861328e-05, 9.274482727050781e-05, 0.00727081298828125, 6.747245788574219e-05, 0.0272674560546875, 0.00283050537109375, 0.10821533203125, 1.9669532775878906e-05, 0.456298828125, 0.019927978515625, 0.72900390625, 0.2305908203125, 0.284423828125, 0.050567626953125, 0.0032596588134765625, 0.321044921875, 0.85009765625, 0.0108489990234375, 0.0071563720703125, 8.749961853027344e-05, 0.11492919921875, 0.0009183883666992188, 0.002307891845703125, 0.09716796875, 0.50146484375, 0.275634765625, 0.0261383056640625, 0.155517578125, 0.0033206939697265625, 0.04632568359375, 0.0222320556640625, 8.106231689453125e-05, 0.0010328292846679688, 0.002964019775390625, 0.20068359375, 0.00693511962890625, 0.006618499755859375], "tokens": [324, 3632, 1454, 7715, 319, 7715, 45, 291, 320, 291, 442, 4175, 32, 8663, 26, 1036, 293, 284, 320, 446, 1022, 275, 319, 12836, 322, 7291, 3733, 458, 4026, 461, 4674, 1591, 32, 275, 319, 477, 753, 354, 4026, 372, 1510, 7291, 1395, 526, 15279, 275, 319, 477, 601, 322, 7291, 3733]}
{"line_number": 700, "line_type": "original", "code": "        for (double a : data) {", "entropy": 1.4921875, "is_bug_line": false, "sus_score": 0.20412414523193154, "per_token_entropy": [5.73046875, 4.98828125, 0.046142578125, 1.5400390625, 0.32470703125, 0.0313720703125, 0.6884765625, 0.0111541748046875, 0.0712890625], "tokens": [351, 436, 308, 2627, 312, 499, 706, 27, 301]}
{"line_number": 700, "line_type": "generated", "code": "\n        }\n        return Math.sqrt(sum);\n    }\n\n    /**\n     * Compute the distance between this vector and another one.\n     * @param v vector to which distance should be computed\n     * @return the distance between this vector and v\n     * @", "entropy": 0.13427734375, "is_bug_line": false, "sus_score": 0.20412414523193154, "per_token_entropy": [0.50634765625, 0.3251953125, 0.07843017578125, 0.009613037109375, 0.0130615234375, 1.0609626770019531e-05, 0.00044655799865722656, 0.0004229545593261719, 0.00019443035125732422, 0.0009684562683105469, 0.053375244140625, 0.0002741813659667969, 0.038421630859375, 0.0030670166015625, 0.11761474609375, 1.52587890625e-05, 0.45947265625, 0.021942138671875, 0.73681640625, 0.163330078125, 0.3115234375, 0.045562744140625, 0.003093719482421875, 0.277587890625, 0.87158203125, 0.0109100341796875, 0.008697509765625, 7.963180541992188e-05, 0.11102294921875, 0.0010137557983398438, 0.0023899078369140625, 0.1153564453125, 0.46533203125, 0.30322265625, 0.03338623046875, 0.125244140625, 0.0035953521728515625, 0.053863525390625, 0.0223541259765625, 8.845329284667969e-05, 0.0013895034790039062, 0.0046844482421875, 0.271484375, 0.00621795654296875, 0.0088653564453125, 0.88525390625, 0.35986328125, 0.005176544189453125, 0.0806884765625, 0.04522705078125, 0.01763916015625, 0.0006012916564941406], "tokens": [291, 320, 291, 442, 4175, 32, 8663, 26, 1036, 293, 284, 320, 446, 1022, 275, 319, 12836, 322, 7291, 3733, 458, 4026, 461, 4674, 1591, 32, 275, 319, 477, 753, 354, 4026, 372, 1510, 7291, 1395, 526, 15279, 275, 319, 477, 601, 322, 7291, 3733, 458, 4026, 461, 354, 275, 319, 477]}
{"line_number": 701, "line_type": "original", "code": "            sum += a * a;", "entropy": 1.7568359375, "is_bug_line": false, "sus_score": 0.20412414523193154, "per_token_entropy": [5.58203125, 1.470703125, 0.4306640625, 3.89453125, 0.5048828125, 0.0867919921875, 0.3251953125], "tokens": [1468, 3632, 1454, 312, 319, 312, 45]}
{"line_number": 701, "line_type": "generated", "code": "\n        return Math.sqrt(sum);\n    }\n\n    /**\n     * Compute the distance between this vector and another vector.\n     * @param v vector to which distance should be computed\n     * @return the distance between the two vectors\n     * @exception IllegalArgumentException if", "entropy": 0.1346435546875, "is_bug_line": false, "sus_score": 0.20412414523193154, "per_token_entropy": [0.1580810546875, 0.0157470703125, 0.018310546875, 0.0007863044738769531, 0.0006647109985351562, 0.0002359151840209961, 0.0003268718719482422, 0.0009307861328125, 0.021270751953125, 0.00013339519500732422, 0.0286865234375, 0.0037441253662109375, 0.09332275390625, 2.9206275939941406e-05, 0.45849609375, 0.0227203369140625, 0.64306640625, 0.1671142578125, 0.324951171875, 0.0435791015625, 0.0033054351806640625, 0.383544921875, 1.0859375, 0.09637451171875, 0.0113983154296875, 0.0001176595687866211, 0.12353515625, 0.0009369850158691406, 0.0020275115966796875, 0.12060546875, 0.301513671875, 0.35693359375, 0.06646728515625, 0.1602783203125, 0.0008959770202636719, 0.060699462890625, 0.014678955078125, 8.177757263183594e-05, 0.0012197494506835938, 0.0041351318359375, 0.30322265625, 0.00504302978515625, 0.01409149169921875, 1.6591796875, 0.0252838134765625, 0.0076446533203125, 0.115234375, 0.016387939453125, 0.0011920928955078125, 0.01354217529296875, 0.04144287109375, 0.00632476806640625], "tokens": [291, 442, 4175, 32, 8663, 26, 1036, 293, 284, 320, 446, 1022, 275, 319, 12836, 322, 7291, 3733, 458, 4026, 461, 4674, 4026, 32, 275, 319, 477, 753, 354, 4026, 372, 1510, 7291, 1395, 526, 15279, 275, 319, 477, 601, 322, 7291, 3733, 322, 3134, 16540, 275, 319, 477, 3893, 12137, 415]}
{"line_number": 703, "line_type": "original", "code": "        return Math.sqrt(sum);", "entropy": 1.0556640625, "is_bug_line": false, "sus_score": 0.20412414523193154, "per_token_entropy": [6.5078125, 1.3037109375, 0.37890625, 0.00494384765625, 0.0640869140625, 0.0025882720947265625, 0.1556396484375, 0.02703857421875], "tokens": [351, 442, 4175, 32, 8663, 26, 1036, 293]}
{"line_number": 703, "line_type": "generated", "code": "\n\n    /**\n     * Compute the distance between two vectors.\n     * @param v vector to which distance should be computed\n     * @return the distance between instance and v\n     * @exception IllegalArgumentException if v is not the same size as this\n     */\n    public double", "entropy": 0.1351318359375, "is_bug_line": false, "sus_score": 0.20412414523193154, "per_token_entropy": [0.52197265625, 0.0183563232421875, 0.394775390625, 4.8041343688964844e-05, 0.67041015625, 0.0229034423828125, 0.603515625, 0.240234375, 1.65625, 0.09442138671875, 0.01348876953125, 0.01309967041015625, 0.00012552738189697266, 0.08087158203125, 0.0006899833679199219, 0.002391815185546875, 0.1536865234375, 0.78662109375, 0.2431640625, 0.056243896484375, 0.057342529296875, 0.002063751220703125, 0.05712890625, 0.01132965087890625, 0.00013828277587890625, 0.0010843276977539062, 0.0035800933837890625, 0.11614990234375, 0.00519561767578125, 0.003662109375, 0.93212890625, 0.00124359130859375, 0.0073089599609375, 0.0175628662109375, 0.017364501953125, 0.0004343986511230469, 0.00873565673828125, 0.02655029296875, 0.00478363037109375, 0.0225982666015625, 0.0012006759643554688, 0.0179901123046875, 0.00624847412109375, 9.703636169433594e-05, 0.001758575439453125, 0.00518035888671875, 0.028411865234375, 0.050872802734375, 0.0293426513671875, 0.003574371337890625, 0.010894775390625, 0.001728057861328125], "tokens": [446, 1022, 275, 319, 12836, 322, 7291, 3733, 3134, 16540, 32, 275, 319, 477, 753, 354, 4026, 372, 1510, 7291, 1395, 526, 15279, 275, 319, 477, 601, 322, 7291, 3733, 1980, 461, 354, 275, 319, 477, 3893, 12137, 415, 354, 438, 646, 322, 2432, 1334, 619, 458, 275, 569, 284, 562, 2064]}
{"line_number": 82, "line_type": "original", "code": "    public ArrayRealVector(double[] d) {", "entropy": 1.4189453125, "is_bug_line": false, "sus_score": 0.06375767130633382, "per_token_entropy": [5.546875, 8.546875, 0.0252227783203125, 0.0001341104507446289, 3.4570693969726562e-06, 0.002368927001953125, 0.96826171875, 0.1746826171875, 0.083251953125, 0.10382080078125, 0.1544189453125], "tokens": [264, 562, 2629, 6877, 2863, 26, 2627, 1178, 343, 27, 301]}
{"line_number": 82, "line_type": "generated", "code": "\n        for (int i = 0; i < d.length; ++i) {\n            data[i] = d[i].doubleValue();\n        }\n    }\n\n    /**\n     * Construct a vector from part of a array.\n     * @param", "entropy": 0.052032470703125, "is_bug_line": false, "sus_score": 0.06375767130633382, "per_token_entropy": [0.12310791015625, 0.0640869140625, 0.0426025390625, 0.0023326873779296875, 0.006855010986328125, 0.01486968994140625, 0.12255859375, 4.410743713378906e-06, 0.03729248046875, 0.0009398460388183594, 0.08062744140625, 0.35595703125, 0.0003898143768310547, 0.00058746337890625, 0.0036220550537109375, 0.36279296875, 0.0016450881958007812, 0.00531768798828125, 0.0239410400390625, 0.035888671875, 0.05438232421875, 0.0004227161407470703, 0.0004761219024658203, 0.00030493736267089844, 0.0012359619140625, 0.029510498046875, 0.0018606185913085938, 0.0002837181091308594, 0.397216796875, 0.011871337890625, 0.0008001327514648438, 0.021484375, 0.0011110305786132812, 0.080810546875, 0.0017709732055664062, 0.10882568359375, 0.00423431396484375, 0.014984130859375, 4.7206878662109375e-05, 0.079833984375, 0.011383056640625, 0.006008148193359375, 0.036102294921875, 0.156005859375, 0.0003943443298339844, 0.31005859375, 0.046051025390625, 0.0246429443359375, 0.002010345458984375, 5.7220458984375e-06, 0.014923095703125, 9.059906005859375e-05], "tokens": [291, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 343, 32, 1322, 45, 3311, 91, 27, 301, 324, 706, 77, 91, 79, 280, 343, 77, 91, 997, 46952, 473, 291, 320, 284, 320, 446, 1022, 275, 319, 12968, 312, 4026, 645, 1742, 432, 312, 1417, 32, 275, 319, 477, 753]}
{"line_number": 83, "line_type": "original", "code": "        data = d.clone();", "entropy": 3.072265625, "is_bug_line": false, "sus_score": 0.06375767130633382, "per_token_entropy": [4.30859375, 5.4296875, 8.875, 2.171875, 0.5244140625, 0.0821533203125, 0.10186767578125], "tokens": [351, 706, 280, 343, 32, 6358, 473]}
{"line_number": 83, "line_type": "generated", "code": "\n        }\n    }\n\n    /**\n     * Construct a vector from part of a array.\n     * @param d array of Doubles.\n     * @param pos position of first entry\n     * @param size number of entries to copy\n     */\n    public ArrayReal", "entropy": 0.0237884521484375, "is_bug_line": false, "sus_score": 0.06375767130633382, "per_token_entropy": [0.2471923828125, 0.0010433197021484375, 0.0272064208984375, 0.00016808509826660156, 0.04449462890625, 0.001888275146484375, 0.0072479248046875, 5.602836608886719e-05, 0.08416748046875, 0.00823211669921875, 0.004695892333984375, 0.01285552978515625, 0.11358642578125, 0.00020635128021240234, 0.22802734375, 0.0235443115234375, 0.0111083984375, 0.0010242462158203125, 8.702278137207031e-06, 0.00836944580078125, 5.125999450683594e-05, 0.016845703125, 0.0052032470703125, 0.0014057159423828125, 0.10943603515625, 0.00489044189453125, 0.19091796875, 0.0004367828369140625, 9.751319885253906e-05, 4.76837158203125e-05, 3.695487976074219e-05, 6.61611557006836e-05, 0.0029582977294921875, 0.00022792816162109375, 0.001964569091796875, 0.0005812644958496094, 0.03973388671875, 9.59634780883789e-05, 0.00027441978454589844, 4.2557716369628906e-05, 0.0002808570861816406, 0.003887176513671875, 0.00014150142669677734, 0.003875732421875, 0.000217437744140625, 0.0008172988891601562, 0.005130767822265625, 0.017608642578125, 0.0032367706298828125, 0.0011606216430664062, 0.0001417398452758789, 1.1920928955078125e-06], "tokens": [291, 320, 284, 320, 446, 1022, 275, 319, 12968, 312, 4026, 645, 1742, 432, 312, 1417, 32, 275, 319, 477, 753, 343, 1417, 432, 6934, 101, 32, 275, 319, 477, 753, 3400, 2747, 432, 1932, 3414, 275, 319, 477, 753, 1334, 1451, 432, 8036, 372, 1933, 275, 569, 284, 562, 2629, 6877]}
{"line_number": 84, "line_type": "original", "code": "    }", "entropy": 2.3203125, "is_bug_line": false, "sus_score": 0.06375767130633382, "per_token_entropy": [4.54296875, 0.09661865234375], "tokens": [264, 320]}
{"line_number": 84, "line_type": "generated", "code": "\n\n    /**\n     * Construct a vector from part of a array.\n     * @param d array of Doubles.\n     * @param pos position of first entry\n     * @param size number of entries to copy\n     */\n    public ArrayRealVector(Double[]", "entropy": 0.025909423828125, "is_bug_line": false, "sus_score": 0.06375767130633382, "per_token_entropy": [0.38134765625, 0.0028362274169921875, 0.0117950439453125, 7.593631744384766e-05, 0.1983642578125, 0.0077362060546875, 0.00890350341796875, 0.00859832763671875, 0.1055908203125, 0.00019097328186035156, 0.1934814453125, 0.0269622802734375, 0.0112762451171875, 0.0012636184692382812, 6.556510925292969e-06, 0.01324462890625, 6.67572021484375e-05, 0.0174407958984375, 0.0044403076171875, 0.0010967254638671875, 0.0806884765625, 0.005603790283203125, 0.19091796875, 0.0005183219909667969, 0.00011730194091796875, 3.3855438232421875e-05, 3.62396240234375e-05, 5.7697296142578125e-05, 0.001728057861328125, 0.00019979476928710938, 0.0013532638549804688, 0.0005354881286621094, 0.02020263671875, 0.00011169910430908203, 0.0006108283996582031, 3.7789344787597656e-05, 0.0002987384796142578, 0.0029964447021484375, 1.728534698486328e-05, 0.0036945343017578125, 0.0002015829086303711, 0.00067138671875, 0.0026035308837890625, 0.0240020751953125, 0.002628326416015625, 0.0010833740234375, 0.0001367330551147461, 3.5762786865234375e-07, 1.9073486328125e-06, 1.5020370483398438e-05, 0.0111083984375, 0.0002428293228149414], "tokens": [446, 1022, 275, 319, 12968, 312, 4026, 645, 1742, 432, 312, 1417, 32, 275, 319, 477, 753, 343, 1417, 432, 6934, 101, 32, 275, 319, 477, 753, 3400, 2747, 432, 1932, 3414, 275, 319, 477, 753, 1334, 1451, 432, 8036, 372, 1933, 275, 569, 284, 562, 2629, 6877, 2863, 26, 4075, 1178]}
