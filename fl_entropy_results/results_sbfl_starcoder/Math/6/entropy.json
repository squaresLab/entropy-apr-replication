{"line_number": 168, "line_type": "original", "code": "        this(rel, abs, lineRel, lineAbs, null);", "entropy": 2.33984375, "is_bug_line": false, "sus_score": 0.1336306209562122, "per_token_entropy": [2.943359375, 8.7421875, 10.546875, 4.515625, 0.09521484375, 0.09674072265625, 0.1932373046875, 1.8203125, 0.245361328125, 0.0054168701171875, 0.01134490966796875, 0.0006251335144042969, 0.306396484375, 5.4140625, 0.1580810546875], "tokens": [351, 458, 26, 2808, 30, 11366, 30, 1628, 3689, 30, 1628, 14246, 30, 744, 293]}
{"line_number": 168, "line_type": "generated", "code": "\n            if (checker.converged(iter,\n                                  x,\n                                  new PointValuePair(x, fVal))) {\n                return new PointValuePair(x, fVal);\n            }", "entropy": 0.234619140625, "is_bug_line": false, "sus_score": 0.1336306209562122, "per_token_entropy": [1.0458984375, 0.8310546875, 0.10919189453125, 0.6259765625, 0.0049591064453125, 0.005313873291015625, 0.0001348257064819336, 0.0011997222900390625, 0.007293701171875, 0.00051116943359375, 1.6142578125, 1.0849609375, 0.0625, 0.1632080078125, 1.6396484375, 0.1422119140625, 0.0003783702850341797, 0.0008707046508789062, 0.16845703125, 0.15087890625, 0.0662841796875, 0.01959228515625, 0.400390625, 0.025390625, 0.12457275390625, 0.307861328125, 0.0042572021484375, 0.0026092529296875, 5.364418029785156e-06, 0.0001933574676513672, 0.00856781005859375, 0.002094268798828125, 0.044921875, 0.0024566650390625, 0.00019752979278564453, 0.0129547119140625, 0.0009918212890625], "tokens": [324, 415, 308, 17099, 32, 32620, 3886, 26, 1731, 30, 6619, 816, 30, 6619, 537, 6431, 14782, 26, 106, 30, 296, 1402, 2610, 301, 400, 442, 537, 6431, 14782, 26, 106, 30, 296, 1402, 293, 324, 320]}
{"line_number": 169, "line_type": "original", "code": "    }", "entropy": 2.826171875, "is_bug_line": false, "sus_score": 0.1336306209562122, "per_token_entropy": [3.6796875, 1.9716796875], "tokens": [264, 320]}
{"line_number": 169, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.1336306209562122, "per_token_entropy": [], "tokens": []}
{"line_number": 249, "line_type": "original", "code": "                double t = 2 * (fX + fX2 - 2 * fVal);", "entropy": 1.353515625, "is_bug_line": false, "sus_score": 0.1336306209562122, "per_token_entropy": [9.1328125, 4.609375, 2.712890625, 0.322998046875, 0.395263671875, 1.5263671875, 0.927734375, 1.0166015625, 0.1795654296875, 0.1917724609375, 4.96484375, 0.11920166015625, 1.9296875, 0.0291900634765625, 0.176025390625, 0.06756591796875, 0.00246429443359375, 0.0100860595703125, 0.007411956787109375, 0.00368499755859375, 0.08941650390625], "tokens": [2071, 2064, 273, 280, 225, 36, 319, 308, 88, 74, 474, 296, 74, 36, 429, 225, 36, 319, 296, 1402, 293]}
{"line_number": 249, "line_type": "generated", "code": "\n     * Compute the objective function value at a point.\n     *\n     * @param p Point at which the objective function must be evaluated.\n     * @return the objective function value at the specified point.\n     */\n    private double computeObjectiveValue(double[]", "entropy": 0.197998046875, "is_bug_line": false, "sus_score": 0.1336306209562122, "per_token_entropy": [0.71923828125, 0.06964111328125, 1.0087890625, 0.2156982421875, 0.319091796875, 0.0955810546875, 0.1124267578125, 0.77734375, 0.56201171875, 0.13037109375, 0.04449462890625, 0.166259765625, 0.0018663406372070312, 0.237548828125, 6.270408630371094e-05, 0.005466461181640625, 0.002780914306640625, 1.8623046875, 0.0367431640625, 0.305908203125, 0.00014066696166992188, 0.28076171875, 0.1646728515625, 0.00780487060546875, 0.1861572265625, 0.0007905960083007812, 0.50830078125, 0.0017824172973632812, 0.0011882781982421875, 0.0036106109619140625, 0.003826141357421875, 0.003971099853515625, 0.10748291015625, 0.29248046875, 0.0035076141357421875, 0.0203857421875, 0.2252197265625, 0.5517578125, 0.1470947265625, 0.0016012191772460938, 0.01129913330078125, 0.0292510986328125, 0.2666015625, 0.043243408203125, 0.35986328125, 0.0218658447265625, 0.00250244140625, 3.325939178466797e-05, 4.38690185546875e-05, 0.0008211135864257812, 0.365478515625, 0.00815582275390625], "tokens": [275, 319, 12836, 322, 25110, 667, 786, 821, 312, 2260, 32, 275, 319, 275, 319, 477, 753, 298, 6431, 821, 1510, 322, 25110, 667, 2298, 526, 22423, 32, 275, 319, 477, 601, 322, 25110, 667, 786, 821, 322, 3191, 2260, 32, 275, 569, 284, 945, 2064, 7596, 33312, 882, 26, 2627, 1178]}
{"line_number": 250, "line_type": "original", "code": "                double temp = fX - fVal - delta;", "entropy": 4.171875, "is_bug_line": false, "sus_score": 0.1336306209562122, "per_token_entropy": [7.6796875, 13.171875, 12.6171875, 2.958984375, 5.40234375, 0.37109375, 0.68505859375, 0.0240325927734375, 1.220703125, 5.58984375, 0.1307373046875, 0.20458984375], "tokens": [2071, 2064, 1779, 280, 296, 74, 429, 296, 1402, 429, 7715, 45]}
{"line_number": 250, "line_type": "generated", "code": "\n     * direction.\n     */\n    private class LineSearch {\n        /**\n         * Search for a local minimum along the specified direction.\n         *\n         * @param p Starting point.\n         * @param d Direction.\n         * @return the point at which the", "entropy": 0.330810546875, "is_bug_line": false, "sus_score": 0.1336306209562122, "per_token_entropy": [0.5078125, 0.005519866943359375, 0.37890625, 0.630859375, 0.62939453125, 0.372314453125, 0.017364501953125, 0.14404296875, 0.2357177734375, 0.475341796875, 0.7255859375, 0.10760498046875, 0.400390625, 0.021575927734375, 0.412841796875, 4.947185516357422e-05, 2.2265625, 0.234375, 0.8076171875, 1.8330078125, 0.07568359375, 0.66796875, 0.8564453125, 1.373046875, 0.1461181640625, 0.10699462890625, 0.031463623046875, 0.0005273818969726562, 0.04022216796875, 7.963180541992188e-05, 0.0045623779296875, 0.0012235641479492188, 0.85888671875, 0.29345703125, 0.01763916015625, 0.1309814453125, 0.005252838134765625, 1.7642974853515625e-05, 0.0002162456512451172, 0.0005054473876953125, 0.0911865234375, 0.213623046875, 0.06146240234375, 0.0024204254150390625, 0.0013751983642578125, 0.02044677734375, 0.0236053466796875, 0.64208984375, 1.23046875, 0.12646484375, 0.0026035308837890625, 0.01497650146484375], "tokens": [275, 319, 6983, 32, 275, 569, 284, 945, 443, 7064, 3192, 301, 291, 1022, 276, 319, 7422, 436, 312, 2196, 9340, 7947, 322, 3191, 6983, 32, 276, 319, 276, 319, 477, 753, 298, 23569, 2260, 32, 276, 319, 477, 753, 343, 17391, 32, 276, 319, 477, 601, 322, 2260, 821, 1510, 322]}
{"line_number": 251, "line_type": "original", "code": "                t *= temp * temp;", "entropy": 4.7421875, "is_bug_line": false, "sus_score": 0.1336306209562122, "per_token_entropy": [10.171875, 9.734375, 7.48828125, 4.4609375, 1.236328125, 0.016693115234375, 0.0712890625], "tokens": [2071, 273, 10439, 1779, 319, 1779, 45]}
{"line_number": 251, "line_type": "generated", "code": "\n     *\n     * @version $Id$\n     */\n    private class LineSearch {\n        /**\n         * The initial point.\n         */\n        private final double[] startPoint;\n        /**\n         * The direction.\n         */\n        private final double[] direction;\n       ", "entropy": 0.358154296875, "is_bug_line": false, "sus_score": 0.1336306209562122, "per_token_entropy": [0.231201171875, 1.3955078125, 0.8447265625, 0.2049560546875, 0.26416015625, 0.484130859375, 0.0137481689453125, 0.042205810546875, 1.142578125, 0.126220703125, 0.313232421875, 0.01416778564453125, 0.149658203125, 0.349365234375, 0.486328125, 0.7958984375, 0.113037109375, 0.64208984375, 0.022796630859375, 0.32080078125, 5.900859832763672e-05, 2.30859375, 1.5732421875, 1.2470703125, 0.239501953125, 0.10760498046875, 0.004589080810546875, 0.005886077880859375, 0.018035888671875, 0.206298828125, 0.0389404296875, 0.005191802978515625, 1.693359375, 0.36767578125, 0.0009703636169433594, 0.8154296875, 0.0004944801330566406, 0.0017414093017578125, 8.058547973632812e-05, 0.2880859375, 0.93359375, 0.30224609375, 0.004100799560546875, 0.0009136199951171875, 0.0006809234619140625, 0.00039577484130859375, 0.0083770751953125, 0.1251220703125, 0.0038852691650390625, 0.07696533203125, 0.0004112720489501953, 0.287353515625], "tokens": [275, 319, 275, 319, 477, 1648, 398, 606, 22, 275, 569, 284, 945, 443, 7064, 3192, 301, 291, 1022, 276, 319, 886, 2815, 2260, 32, 276, 569, 291, 945, 1158, 2064, 1178, 1477, 1943, 45, 291, 1022, 276, 319, 886, 6983, 32, 276, 569, 291, 945, 1158, 2064, 1178, 6983, 45, 291]}
{"line_number": 252, "line_type": "original", "code": "                temp = fX - fX2;", "entropy": 2.953125, "is_bug_line": false, "sus_score": 0.1336306209562122, "per_token_entropy": [10.3671875, 11.765625, 0.462646484375, 1.873046875, 0.24853515625, 0.391845703125, 0.02685546875, 3.84375, 0.0487060546875, 0.50048828125], "tokens": [2071, 1779, 280, 296, 74, 429, 296, 74, 36, 45]}
{"line_number": 252, "line_type": "generated", "code": "\n    private class LineSearch {\n\n        /**\n         * The initial point.\n         */\n        private final double[] point;\n\n        /**\n         * The initial direction.\n         */\n        private final double[] direction;\n\n        /**\n         * The minimum value.\n         */\n        private", "entropy": 0.363037109375, "is_bug_line": false, "sus_score": 0.1336306209562122, "per_token_entropy": [0.2119140625, 0.1729736328125, 0.40087890625, 0.486328125, 0.6982421875, 0.21240234375, 0.86865234375, 0.0443115234375, 0.29541015625, 3.62396240234375e-05, 2.498046875, 1.626953125, 1.265625, 0.25537109375, 0.00649261474609375, 0.00263214111328125, 0.023468017578125, 0.0186004638671875, 0.1380615234375, 0.04229736328125, 0.004924774169921875, 1.541015625, 0.00905609130859375, 0.05255126953125, 0.000911712646484375, 0.0014486312866210938, 2.086162567138672e-05, 0.29736328125, 0.69970703125, 0.117919921875, 0.11669921875, 0.00205230712890625, 0.0012340545654296875, 0.0014801025390625, 0.0003693103790283203, 0.0056915283203125, 0.059906005859375, 0.006710052490234375, 0.09326171875, 0.0001964569091796875, 0.030364990234375, 0.003566741943359375, 0.004547119140625, 0.0007143020629882812, 1.142578125, 2.73046875, 1.6533203125, 0.99462890625, 0.006244659423828125, 0.0034275054931640625, 0.01548004150390625, 0.00867462158203125], "tokens": [284, 945, 443, 7064, 3192, 301, 584, 1022, 276, 319, 886, 2815, 2260, 32, 276, 569, 291, 945, 1158, 2064, 1178, 2260, 45, 584, 1022, 276, 319, 886, 2815, 6983, 32, 276, 569, 291, 945, 1158, 2064, 1178, 6983, 45, 584, 1022, 276, 319, 886, 9340, 786, 32, 276, 569, 291, 945]}
{"line_number": 253, "line_type": "original", "code": "                t -= delta * temp * temp;", "entropy": 3.583984375, "is_bug_line": false, "sus_score": 0.1336306209562122, "per_token_entropy": [9.5234375, 8.9921875, 7.25, 1.7001953125, 2.5703125, 0.55712890625, 1.2392578125, 0.07354736328125, 0.330810546875], "tokens": [2071, 273, 5912, 7715, 319, 1779, 319, 1779, 45]}
{"line_number": 253, "line_type": "generated", "code": "\n\n        /**\n         * Construct a line search.\n         *\n         * @param n Number of variables.\n         * @param f Objective function.\n         * @param goal Goal type.\n         * @param maxEval Maximum number of evaluations.\n         * @param", "entropy": 0.4541015625, "is_bug_line": false, "sus_score": 0.1336306209562122, "per_token_entropy": [0.677734375, 0.348388671875, 0.13720703125, 0.00010180473327636719, 3.03515625, 0.5146484375, 0.2091064453125, 0.049407958984375, 1.25, 0.0240478515625, 0.826171875, 0.03515625, 0.0016307830810546875, 0.007556915283203125, 0.0026607513427734375, 2.939453125, 0.168701171875, 0.00042510032653808594, 0.360595703125, 0.3818359375, 0.006927490234375, 0.5966796875, 0.0028553009033203125, 0.00698089599609375, 1.77734375, 0.3720703125, 0.0023403167724609375, 0.09246826171875, 0.0037822723388671875, 0.39208984375, 0.0033588409423828125, 0.00658416748046875, 1.1826171875, 1.97265625, 0.814453125, 0.2281494140625, 0.006683349609375, 0.55615234375, 0.0014352798461914062, 0.01617431640625, 2.23828125, 0.75146484375, 0.0198211669921875, 0.056060791015625, 0.000797271728515625, 0.355712890625, 2.7060508728027344e-05, 0.62646484375, 0.0062408447265625, 0.5234375, 0.00414276123046875, 0.020782470703125], "tokens": [584, 1022, 276, 319, 12968, 312, 1628, 3233, 32, 276, 319, 276, 319, 477, 753, 310, 5104, 432, 4886, 32, 276, 319, 477, 753, 296, 36212, 667, 32, 276, 319, 477, 753, 12260, 42010, 827, 32, 276, 319, 477, 753, 1769, 14066, 18690, 1451, 432, 6130, 993, 32, 276, 319, 477, 753]}
{"line_number": 255, "line_type": "original", "code": "                if (t < 0.0) {", "entropy": 2.0078125, "is_bug_line": false, "sus_score": 0.1336306209562122, "per_token_entropy": [6.55078125, 2.255859375, 2.826171875, 6.17578125, 1.314453125, 0.35546875, 0.09912109375, 1.6318359375, 0.374755859375, 0.3974609375, 0.10162353515625], "tokens": [2071, 415, 308, 102, 333, 225, 34, 32, 34, 27, 301]}
{"line_number": 255, "line_type": "generated", "code": "\n         *\n         * @param x Point at which the function must be evaluated.\n         * @param p Direction at which the function must be evaluated.\n         * @return the value of the objective function at the specified point.\n         */\n        @Override\n        protected", "entropy": 0.445068359375, "is_bug_line": false, "sus_score": 0.1336306209562122, "per_token_entropy": [0.6611328125, 0.6005859375, 2.828125, 0.10284423828125, 0.14404296875, 0.156494140625, 0.97509765625, 1.3818359375, 0.422119140625, 0.00650787353515625, 0.424072265625, 1.3544921875, 1.015625, 0.01157379150390625, 0.1002197265625, 0.01540374755859375, 0.063232421875, 0.0252227783203125, 0.01068878173828125, 1.259765625, 0.64404296875, 2.31640625, 2.046875, 0.0019931793212890625, 0.08160400390625, 0.060394287109375, 0.01496124267578125, 0.0013132095336914062, 0.032928466796875, 0.004367828369140625, 0.015472412109375, 0.057525634765625, 0.021636962890625, 0.1275634765625, 1.1181640625, 0.60009765625, 0.298583984375, 0.09686279296875, 0.93603515625, 0.0125732421875, 0.34814453125, 0.81640625, 0.505859375, 0.1739501953125, 0.2391357421875, 0.1077880859375, 0.27392578125, 0.0513916015625, 0.314453125, 0.0026950836181640625, 0.046356201171875, 0.2135009765625], "tokens": [276, 319, 276, 319, 477, 753, 816, 6431, 821, 1510, 322, 667, 2298, 526, 22423, 32, 276, 319, 477, 753, 298, 17391, 821, 1510, 322, 667, 2298, 526, 22423, 32, 276, 319, 477, 601, 322, 786, 432, 322, 25110, 667, 821, 322, 3191, 2260, 32, 276, 569, 291, 477, 1788, 291, 2522]}
{"line_number": 213, "line_type": "original", "code": "                    delta = fX2 - fVal;", "entropy": 1.6689453125, "is_bug_line": false, "sus_score": 0.1091089451179962, "per_token_entropy": [5.90625, 6.74609375, 0.02783203125, 1.6806640625, 0.744140625, 1.3369140625, 0.001556396484375, 0.00872039794921875, 0.1519775390625, 0.081787109375], "tokens": [4696, 7715, 280, 296, 74, 36, 429, 296, 1402, 45]}
{"line_number": 213, "line_type": "generated", "code": "\n                    final double[] result1 = result[1];\n                    for (int i = 0; i < lastInd; i++) {\n                        direc[i] = result1[i];\n                    }\n\n                    // swap\n                    final double[] temp1 =", "entropy": 0.471435546875, "is_bug_line": false, "sus_score": 0.1091089451179962, "per_token_entropy": [0.241943359375, 2.087890625, 0.19287109375, 0.833984375, 3.6015625, 2.267578125, 0.0263824462890625, 1.03125, 0.004802703857421875, 0.0526123046875, 0.06085205078125, 0.10040283203125, 1.0068359375, 0.0012750625610351562, 0.0010862350463867188, 0.22412109375, 0.00965118408203125, 0.044219970703125, 0.006870269775390625, 0.0010223388671875, 0.0010290145874023438, 0.05181884765625, 0.7578125, 6.198883056640625e-06, 0.0189361572265625, 0.038330078125, 0.0033721923828125, 0.0014638900756835938, 0.0226898193359375, 0.1573486328125, 1.9073486328125e-06, 0.00052642822265625, 0.04180908203125, 0.25634765625, 0.004535675048828125, 0.375, 0.007534027099609375, 0.00922393798828125, 0.01419830322265625, 0.07281494140625, 0.0894775390625, 0.0001195669174194336, 1.66015625, 2.107421875, 2.94921875, 1.0947265625, 0.69287109375, 0.00640106201171875, 0.030548095703125, 1.341796875, 0.91015625, 0.005207061767578125], "tokens": [528, 1158, 2064, 1178, 1056, 35, 280, 1056, 77, 35, 970, 528, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 2401, 6429, 45, 595, 1987, 301, 715, 15397, 85, 77, 91, 79, 280, 1056, 35, 77, 91, 970, 528, 320, 3688, 434, 12947, 528, 1158, 2064, 1178, 1779, 35, 280]}
{"line_number": 214, "line_type": "original", "code": "                    bigInd = i;", "entropy": 2.025390625, "is_bug_line": true, "sus_score": 0.1091089451179962, "per_token_entropy": [6.73046875, 0.83056640625, 0.0002808570861816406, 0.0136566162109375, 4.48046875, 0.10357666015625], "tokens": [4696, 6524, 6429, 280, 595, 45]}
{"line_number": 214, "line_type": "generated", "code": "\n                } else {\n                    final double[] d2 = new double[n];\n                    for (int i = 0; i < n; i++) {\n                        d2[i] = direc[i][bigInd];\n                    }\n\n                    final Un", "entropy": 0.248291015625, "is_bug_line": true, "sus_score": 0.1091089451179962, "per_token_entropy": [0.39599609375, 0.0004603862762451172, 1.501953125, 0.050750732421875, 0.0958251953125, 1.3935546875, 0.80126953125, 1.1552734375, 1.71484375, 1.23828125, 0.0122528076171875, 0.424072265625, 0.011077880859375, 0.001537322998046875, 0.00583648681640625, 0.005767822265625, 0.0771484375, 0.276123046875, 0.0007419586181640625, 0.0004336833953857422, 0.10003662109375, 0.0010738372802734375, 0.0011816024780273438, 0.0001838207244873047, 0.00034880638122558594, 0.0002810955047607422, 0.006542205810546875, 0.00530242919921875, 0.0032062530517578125, 0.010101318359375, 0.0008254051208496094, 0.0016021728515625, 0.007480621337890625, 0.07513427734375, 0.0087432861328125, 9.429454803466797e-05, 0.00021767616271972656, 4.756450653076172e-05, 0.0003228187561035156, 1.5966796875, -0.0, 0.00038242340087890625, 0.1065673828125, 0.01262664794921875, 0.2476806640625, 1.7642974853515625e-05, 0.27099609375, 0.040863037109375, 3.2901763916015625e-05, 0.44873046875, 0.36328125, 0.443603515625], "tokens": [400, 320, 813, 301, 528, 1158, 2064, 1178, 343, 36, 280, 537, 2064, 77, 96, 970, 528, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 310, 45, 595, 1987, 301, 715, 343, 36, 77, 91, 79, 280, 15397, 85, 77, 91, 1674, 7380, 6429, 970, 528, 320, 3688, 1158, 1683]}
{"line_number": 226, "line_type": "original", "code": "                if (checker != null) {", "entropy": 2.232421875, "is_bug_line": false, "sus_score": 0.1091089451179962, "per_token_entropy": [7.69921875, 2.720703125, 0.1424560546875, 5.21875, 1.5439453125, 0.0021648406982421875, 0.12030029296875, 0.412841796875], "tokens": [2071, 415, 308, 17099, 863, 744, 27, 301]}
{"line_number": 226, "line_type": "generated", "code": "\n     * @param alpha Line search result.\n     * @return a 2-element array containing the new point and direction.\n     */\n    private double[][] newPointAndDirection(final double[] p,\n                                           final double[] d,\n                                           final double alpha", "entropy": 0.28662109375, "is_bug_line": false, "sus_score": 0.1091089451179962, "per_token_entropy": [0.315673828125, 0.07513427734375, 0.022216796875, 0.0280914306640625, 0.1282958984375, 2.330078125, 0.240478515625, 1.939453125, 0.18310546875, 0.2015380859375, 0.0096282958984375, 0.0253753662109375, 0.00799560546875, 1.162109375, 2.765625, 0.019073486328125, 0.27392578125, 0.0374755859375, 0.14892578125, 0.2261962890625, 0.28564453125, 0.11639404296875, 0.0286865234375, 0.362548828125, 1.201171875, 0.57275390625, 0.0908203125, 0.155029296875, 0.04437255859375, 0.447998046875, 0.0501708984375, 0.0032939910888671875, 0.002685546875, 7.104873657226562e-05, 5.6624412536621094e-05, 3.0517578125e-05, 0.0017423629760742188, 0.54443359375, 0.0022182464599609375, 0.0183258056640625, 0.00966644287109375, 0.0009102821350097656, 0.7275390625, 0.0029850006103515625, 0.0005025863647460938, 0.0007281303405761719, 0.0007901191711425781, 0.00018167495727539062, 0.07977294921875, 0.013153076171875, 0.0003941059112548828, 0.00189971923828125], "tokens": [275, 319, 477, 753, 7377, 7064, 3233, 1056, 32, 275, 319, 477, 601, 312, 225, 36, 31, 2543, 1417, 6621, 322, 537, 2260, 461, 6983, 32, 275, 569, 284, 945, 2064, 11336, 537, 1943, 2185, 5222, 26, 3220, 2064, 1178, 298, 30, 12928, 1158, 2064, 1178, 343, 30, 12928, 1158, 2064, 7377]}
{"line_number": 232, "line_type": "original", "code": "                    return (fVal < fX) ? current : previous;", "entropy": 1.982421875, "is_bug_line": false, "sus_score": 0.1091089451179962, "per_token_entropy": [6.5390625, 9.7421875, 3.48828125, 3.333984375, 0.132080078125, 3.447265625, 0.0880126953125, 0.077880859375, 0.321533203125, 0.04644775390625, 0.472412109375, 0.0090789794921875, 0.0145721435546875, 0.0311279296875], "tokens": [4696, 442, 308, 88, 1402, 333, 296, 74, 27, 1018, 1550, 499, 4552, 45]}
{"line_number": 232, "line_type": "generated", "code": "\n                                            double optimum) {\n        double[] x2 = new double[p.length];\n        for (int i = 0; i < p.length; i++) {\n            x2[i] = p[i] + optimum *", "entropy": 0.197509765625, "is_bug_line": false, "sus_score": 0.1091089451179962, "per_token_entropy": [0.74072265625, 0.2247314453125, 0.06787109375, 9.262561798095703e-05, 0.01296234130859375, 0.0438232421875, 0.448486328125, 1.78125, 0.75390625, 1.3662109375, 1.84375, 0.01407623291015625, 0.763671875, 0.004638671875, 0.002338409423828125, 0.82666015625, 0.0001766681671142578, 0.0002887248992919922, 0.0019102096557617188, 0.09625244140625, 0.47021484375, 0.00251007080078125, 0.00035691261291503906, 0.0728759765625, 0.0005002021789550781, 0.0025501251220703125, 0.00019943714141845703, 0.0014371871948242188, 0.0005340576171875, 0.003971099853515625, 0.2237548828125, 8.463859558105469e-06, 1.5020370483398438e-05, 0.000865936279296875, 0.1307373046875, 0.0021190643310546875, 0.0026607513427734375, 0.03704833984375, 0.01532745361328125, 1.6927719116210938e-05, 4.4345855712890625e-05, 2.8967857360839844e-05, 2.1219253540039062e-05, 0.0003762245178222656, 0.024749755859375, 4.875659942626953e-05, 3.743171691894531e-05, 0.0003085136413574219, 0.006259918212890625, 0.282470703125, 2.5033950805664062e-06, 0.0006251335144042969], "tokens": [3391, 2064, 2919, 3085, 27, 301, 291, 2064, 1178, 816, 36, 280, 537, 2064, 77, 98, 32, 1322, 970, 291, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 298, 32, 1322, 45, 595, 1987, 301, 324, 816, 36, 77, 91, 79, 280, 298, 77, 91, 79, 474, 2919, 3085, 319]}
{"line_number": 238, "line_type": "original", "code": "            final double[] d = new double[n];", "entropy": 1.6240234375, "is_bug_line": false, "sus_score": 0.1091089451179962, "per_token_entropy": [1.84375, 4.96484375, 0.0521240234375, 2.42578125, 3.009765625, 3.759765625, 1.630859375, 0.05224609375, 0.0257568359375, 0.087158203125, 0.01103973388671875], "tokens": [1468, 1158, 2064, 1178, 343, 280, 537, 2064, 77, 96, 970]}
{"line_number": 238, "line_type": "generated", "code": "\n            nP[i] = p[i] + nD[i];\n        }\n\n        return new double[][] {nP, nD};\n    }", "entropy": 0.09521484375, "is_bug_line": false, "sus_score": 0.1091089451179962, "per_token_entropy": [0.334228515625, 0.12274169921875, 0.027679443359375, 0.00023865699768066406, 0.00022983551025390625, 9.930133819580078e-05, 0.0009388923645019531, 0.053863525390625, 0.00022971630096435547, 0.00015175342559814453, 0.0010709762573242188, 0.061767578125, 0.1287841796875, 0.00015413761138916016, 6.663799285888672e-05, 0.00011324882507324219, 0.01055908203125, 0.119873046875, 0.00041413307189941406, 0.85693359375, 0.230712890625, 0.00732421875, 0.0006766319274902344, 0.003734588623046875, 0.1942138671875, 0.8310546875, 0.003192901611328125, 0.01385498046875, 1.8477439880371094e-05, 0.0027523040771484375, 0.036376953125, 0.0023059844970703125], "tokens": [324, 310, 66, 77, 91, 79, 280, 298, 77, 91, 79, 474, 310, 54, 77, 91, 970, 291, 320, 584, 442, 537, 2064, 11336, 301, 25319, 30, 310, 54, 1255, 284, 320]}
{"line_number": 239, "line_type": "original", "code": "            final double[] x2 = new double[n];", "entropy": 1.28515625, "is_bug_line": false, "sus_score": 0.1091089451179962, "per_token_entropy": [3.923828125, 4.75390625, 0.1865234375, 1.68359375, 2.400390625, 1.6083984375, 0.0516357421875, 0.74609375, 0.009307861328125, 0.008697509765625, 0.0300750732421875, 0.0200042724609375], "tokens": [1468, 1158, 2064, 1178, 816, 36, 280, 537, 2064, 77, 96, 970]}
{"line_number": 239, "line_type": "generated", "code": "\n        }\n        return new double[][] {nP, nD};\n    }", "entropy": 0.10833740234375, "is_bug_line": false, "sus_score": 0.1091089451179962, "per_token_entropy": [0.189697265625, 0.0023326873779296875, 0.5263671875, 0.0677490234375, 0.00783538818359375, 0.0006475448608398438, 0.0041046142578125, 0.2015380859375, 0.5517578125, 0.003246307373046875, 0.0114593505859375, 2.2292137145996094e-05, 0.0020160675048828125, 0.053741455078125, 0.002429962158203125], "tokens": [291, 320, 291, 442, 537, 2064, 11336, 301, 25319, 30, 310, 54, 1255, 284, 320]}
{"line_number": 240, "line_type": "original", "code": "            for (int i = 0; i < n; i++) {", "entropy": 0.55859375, "is_bug_line": false, "sus_score": 0.1091089451179962, "per_token_entropy": [4.87890625, 3.693359375, 0.01505279541015625, 0.0159759521484375, 0.07342529296875, 0.006053924560546875, 0.026275634765625, 0.00627899169921875, 0.00426483154296875, 0.0009579658508300781, 0.005603790283203125, 0.12396240234375, 0.0178985595703125, 0.0237579345703125, 0.006809234619140625, 0.0421142578125], "tokens": [1468, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 310, 45, 595, 1987, 301]}
{"line_number": 240, "line_type": "generated", "code": "\n        return new double[][] {nP, nD};\n    }", "entropy": 0.144775390625, "is_bug_line": false, "sus_score": 0.1091089451179962, "per_token_entropy": [0.406494140625, 0.384765625, 0.01425933837890625, 0.0025081634521484375, 0.00835418701171875, 0.373046875, 0.5703125, 0.005123138427734375, 0.06494140625, 0.0001862049102783203, 0.005977630615234375, 0.042236328125, 0.00372314453125], "tokens": [291, 442, 537, 2064, 11336, 301, 25319, 30, 310, 54, 1255, 284, 320]}
{"line_number": 241, "line_type": "original", "code": "                d[i] = x[i] - x1[i];", "entropy": 1.203125, "is_bug_line": false, "sus_score": 0.1091089451179962, "per_token_entropy": [8.5859375, 3.345703125, 0.66259765625, 0.4365234375, 0.00333404541015625, 0.4130859375, 3.50390625, 0.900390625, 0.01264190673828125, 0.07080078125, 0.172607421875, 0.697265625, 0.396484375, 0.0017108917236328125, 0.0008749961853027344, 0.043212890625], "tokens": [2071, 343, 77, 91, 79, 280, 816, 77, 91, 79, 429, 816, 35, 77, 91, 970]}
{"line_number": 241, "line_type": "generated", "code": "\n        return new double[][] {nP, nD};\n    }", "entropy": 0.1212158203125, "is_bug_line": false, "sus_score": 0.1091089451179962, "per_token_entropy": [0.191650390625, 0.368408203125, 0.0226898193359375, 0.00270843505859375, 0.00983428955078125, 0.36962890625, 0.50146484375, 0.00484466552734375, 0.062225341796875, 0.00021398067474365234, 0.005401611328125, 0.0350341796875, 0.00188446044921875], "tokens": [291, 442, 537, 2064, 11336, 301, 25319, 30, 310, 54, 1255, 284, 320]}
{"line_number": 242, "line_type": "original", "code": "                x2[i] = 2 * x[i] - x1[i];", "entropy": 1.486328125, "is_bug_line": false, "sus_score": 0.1091089451179962, "per_token_entropy": [8.2890625, 5.2734375, 3.517578125, 2.083984375, 0.1151123046875, 0.011474609375, 0.0745849609375, 4.21875, 2.458984375, 0.12548828125, 0.66943359375, 0.67236328125, 0.00876617431640625, 0.00981903076171875, 0.0018796920776367188, 0.175048828125, 0.0738525390625, 0.0010995864868164062, 0.0006957054138183594, 1.939453125], "tokens": [2071, 816, 36, 77, 91, 79, 280, 225, 36, 319, 816, 77, 91, 79, 429, 816, 35, 77, 91, 970]}
{"line_number": 242, "line_type": "generated", "code": "\n        return result;\n    }", "entropy": 0.1820068359375, "is_bug_line": false, "sus_score": 0.1091089451179962, "per_token_entropy": [0.366943359375, 0.68115234375, 0.02056884765625, 0.003936767578125, 0.01812744140625, 0.0013608932495117188], "tokens": [291, 442, 1056, 45, 284, 320]}
{"line_number": 245, "line_type": "original", "code": "            x1 = x.clone();", "entropy": 2.298828125, "is_bug_line": false, "sus_score": 0.1091089451179962, "per_token_entropy": [6.94921875, 5.65625, 2.681640625, 0.1197509765625, 0.630859375, 2.330078125, 0.012115478515625, 0.004856109619140625], "tokens": [1468, 816, 35, 280, 816, 32, 6358, 473]}
{"line_number": 245, "line_type": "generated", "code": "\n        return result;\n    }\n\n    /**\n     * Compute the objective function value at a point.\n     *\n     * @param point Point at which to compute the value.\n     * @return the objective function value at the specified point.\n     */\n    private double", "entropy": 0.22119140625, "is_bug_line": false, "sus_score": 0.1091089451179962, "per_token_entropy": [0.18017578125, 0.2095947265625, 0.0180206298828125, 0.005275726318359375, 0.04833984375, 0.0015745162963867188, 1.2138671875, 0.13818359375, 0.058349609375, 1.2159347534179688e-05, 0.5888671875, 0.147705078125, 0.305908203125, 0.10101318359375, 0.10955810546875, 0.88623046875, 0.546875, 0.108154296875, 0.04229736328125, 0.1009521484375, 0.0006709098815917969, 0.143798828125, 4.875659942626953e-05, 0.00534820556640625, 0.0021648406982421875, 0.876953125, 0.01910400390625, 0.261474609375, 0.00012981891632080078, 1.32421875, 0.1490478515625, 0.01265716552734375, 1.197265625, 0.1195068359375, 0.0026378631591796875, 0.0031833648681640625, 0.003711700439453125, 0.0028476715087890625, 0.224365234375, 0.53125, 0.006565093994140625, 0.0081329345703125, 0.4970703125, 0.2073974609375, 0.32958984375, 0.0032367706298828125, 0.014495849609375, 0.00981903076171875, 0.222412109375, 0.01042938232421875, 0.48828125, 0.01319122314453125], "tokens": [291, 442, 1056, 45, 284, 320, 446, 1022, 275, 319, 12836, 322, 25110, 667, 786, 821, 312, 2260, 32, 275, 319, 275, 319, 477, 753, 2260, 6431, 821, 1510, 372, 7596, 322, 786, 32, 275, 319, 477, 601, 322, 25110, 667, 786, 821, 322, 3191, 2260, 32, 275, 569, 284, 945, 2064]}
{"line_number": 246, "line_type": "original", "code": "            fX2 = computeObjectiveValue(x2);", "entropy": 2.330078125, "is_bug_line": false, "sus_score": 0.1091089451179962, "per_token_entropy": [7.77734375, 6.0234375, 1.6435546875, 1.9091796875, 0.06005859375, 9.3125, 0.04638671875, 0.00653076171875, 0.01611328125, 0.3740234375, 0.720703125, 0.0557861328125], "tokens": [1468, 296, 74, 36, 280, 7596, 33312, 882, 26, 106, 36, 293]}
{"line_number": 246, "line_type": "generated", "code": "\n    }", "entropy": 0.1473388671875, "is_bug_line": false, "sus_score": 0.1091089451179962, "per_token_entropy": [0.2464599609375, 0.04815673828125], "tokens": [284, 320]}
{"line_number": 248, "line_type": "original", "code": "            if (fX > fX2) {", "entropy": 1.4287109375, "is_bug_line": false, "sus_score": 0.1091089451179962, "per_token_entropy": [7.05859375, 2.40625, 0.138916015625, 1.4775390625, 0.53515625, 2.84375, 0.0276947021484375, 1.1640625, 0.005382537841796875, 0.0311126708984375, 0.0236663818359375], "tokens": [1468, 415, 308, 88, 74, 848, 296, 74, 36, 27, 301]}
{"line_number": 248, "line_type": "generated", "code": "\n    /**\n     * Compute the objective function value.\n     *\n     * @param x Point at which the objective function must be computed.\n     * @return the objective function value at the specified point.\n     */\n    private double computeObjectiveValue(double[] x", "entropy": 0.18798828125, "is_bug_line": false, "sus_score": 0.1091089451179962, "per_token_entropy": [0.6669921875, 0.3291015625, 0.0743408203125, 2.4437904357910156e-05, 1.197265625, 0.24560546875, 0.31787109375, 0.1104736328125, 0.07952880859375, 0.52783203125, 0.135009765625, 0.0008425712585449219, 0.157470703125, 0.00016880035400390625, 0.005947113037109375, 0.006732940673828125, 1.048828125, 0.0682373046875, 0.12213134765625, 0.00023567676544189453, 0.396484375, 0.128173828125, 0.00963592529296875, 0.134521484375, 0.0005025863647460938, 1.0361328125, 0.0012521743774414062, 0.0007882118225097656, 0.002948760986328125, 0.0032672882080078125, 0.0026912689208984375, 0.07818603515625, 0.299072265625, 0.0034942626953125, 0.036224365234375, 0.697265625, 0.78125, 0.052398681640625, 0.0020885467529296875, 0.0059967041015625, 0.01025390625, 0.2073974609375, 0.006603240966796875, 0.44384765625, 0.01331329345703125, 0.0019140243530273438, 3.8623809814453125e-05, 6.079673767089844e-05, 0.0005502700805664062, 0.3115234375, 0.007007598876953125, 0.0005898475646972656], "tokens": [284, 1022, 275, 319, 12836, 322, 25110, 667, 786, 32, 275, 319, 275, 319, 477, 753, 816, 6431, 821, 1510, 322, 25110, 667, 2298, 526, 15279, 32, 275, 319, 477, 601, 322, 25110, 667, 786, 821, 322, 3191, 2260, 32, 275, 569, 284, 945, 2064, 7596, 33312, 882, 26, 2627, 1178, 816]}
{"line_number": 267, "line_type": "original", "code": "        }", "entropy": 4.93359375, "is_bug_line": false, "sus_score": 0.1091089451179962, "per_token_entropy": [2.107421875, 7.76171875], "tokens": [351, 320]}
{"line_number": 267, "line_type": "generated", "code": "\n         */\n        private static final boolean AUTOMATIC_BRACKETING = true;\n\n        /**\n         * Direction to search along.\n         */\n        private final double[] direction;\n\n        /**\n         * Build a line search.\n         *\n         * @param", "entropy": 0.30126953125, "is_bug_line": false, "sus_score": 0.1091089451179962, "per_token_entropy": [0.62939453125, 0.19384765625, 0.03997802734375, 0.0550537109375, 0.421142578125, 0.0021228790283203125, 0.892578125, 0.97314453125, 0.0011310577392578125, 0.0160675048828125, 0.00034689903259277344, 1.3113021850585938e-05, 0.2193603515625, 0.26171875, 0.00879669189453125, 0.004375457763671875, 0.07110595703125, 0.414306640625, 0.0289764404296875, 0.85107421875, 0.03485107421875, 0.0572509765625, 1.9550323486328125e-05, 1.625, 1.8701171875, 0.71240234375, 0.07366943359375, 0.0343017578125, 0.09735107421875, 0.00966644287109375, 0.00226593017578125, 0.01360321044921875, 0.10693359375, 0.130615234375, 0.005218505859375, 0.58984375, 0.00481414794921875, 0.5166015625, 0.00893402099609375, 0.0058746337890625, 0.00011610984802246094, 2.37109375, 0.458984375, 0.43408203125, 0.0440673828125, 1.3076171875, 0.008636474609375, 0.014190673828125, 0.038909912109375, 0.0002541542053222656, 0.00371551513671875, 0.00036025047302246094], "tokens": [276, 569, 291, 945, 907, 1158, 1905, 399, 1068, 5650, 722, 1102, 81, 45376, 1218, 1392, 280, 861, 45, 584, 1022, 276, 319, 17391, 372, 3233, 7947, 32, 276, 569, 291, 945, 1158, 2064, 1178, 6983, 45, 584, 1022, 276, 319, 5238, 312, 1628, 3233, 32, 276, 319, 276, 319, 477, 753]}
