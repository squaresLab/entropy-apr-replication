{"line_number": 236, "line_type": "original", "code": "              for (int i = 0; i < scale.length; ++i) {", "entropy": 0.67333984375, "is_bug_line": false, "sus_score": 0.14586499149789456, "per_token_entropy": [8.2734375, 2.7109375, 0.00563812255859375, 0.01837158203125, 0.61328125, 0.00218963623046875, 0.017364501953125, 0.002178192138671875, 0.002910614013671875, 0.0033435821533203125, 0.0100250244140625, 1.0302734375, 0.0143280029296875, 0.0012903213500976562, 0.003849029541015625, 0.0187225341796875, 0.0005559921264648438, 0.0028438568115234375, 0.064453125], "tokens": [2850, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 5247, 32, 1322, 45, 3311, 91, 27, 301]}
{"line_number": 236, "line_type": "generated", "code": "\n      // update the state\n      for (int j = 0; j < y0.length; ++j) {\n        y[j] = yTmp[j];\n      }\n      interpolator.storeTime(stepStart);\n      interpolator.", "entropy": 0.236328125, "is_bug_line": false, "sus_score": 0.14586499149789456, "per_token_entropy": [0.476318359375, 0.51220703125, 1.248046875, 0.552734375, 1.6337890625, 0.7626953125, 0.70068359375, 0.0015192031860351562, 0.005016326904296875, 0.3642578125, 0.0002875328063964844, 0.0032501220703125, 0.0001493692398071289, 0.0010251998901367188, 0.0004177093505859375, 0.002105712890625, 0.08892822265625, 0.2276611328125, 0.0005817413330078125, 8.344650268554688e-06, 0.0007233619689941406, 0.0022411346435546875, 6.508827209472656e-05, 0.0007681846618652344, 0.0022869110107421875, 0.0772705078125, 0.02099609375, 0.043243408203125, 0.00044345855712890625, 0.00014603137969970703, 0.25048828125, 0.0088958740234375, 0.0016231536865234375, 5.733966827392578e-05, 0.0004622936248779297, 0.0015668869018554688, 0.054718017578125, 0.0010232925415039062, 0.91845703125, 0.9912109375, 2.2649765014648438e-06, 0.0006108283996582031, 0.0043792724609375, 1.11328125, 0.06072998046875, 0.046630859375, 0.00336456298828125, 1.0537109375, 0.369384765625, 0.67724609375, 1.4066696166992188e-05, 0.0005831718444824219], "tokens": [397, 434, 1974, 322, 1603, 397, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 533, 34, 32, 1322, 45, 3311, 92, 27, 301, 291, 533, 77, 92, 79, 280, 533, 15770, 77, 92, 970, 397, 320, 397, 14399, 717, 32, 2157, 1043, 26, 2997, 2130, 293, 397, 14399, 717, 32]}
{"line_number": 237, "line_type": "original", "code": "                scale[i] = scalAbsoluteTolerance + scalRelativeTolerance * FastMath.abs(y[i]);", "entropy": 1.2529296875, "is_bug_line": false, "sus_score": 0.14586499149789456, "per_token_entropy": [9.6015625, 8.828125, 0.83544921875, 0.4091796875, 0.0013523101806640625, 0.060638427734375, 7.5546875, 0.29833984375, 0.003692626953125, 0.33056640625, 0.152587890625, 0.0016870498657226562, 0.0037899017333984375, 0.016998291015625, 0.03680419921875, 8.14199447631836e-05, 0.0012083053588867188, 0.0192413330078125, 0.003894805908203125, 0.09600830078125, 0.5322265625, 0.01119232177734375, 0.0258636474609375], "tokens": [2071, 5247, 77, 91, 79, 280, 5892, 12043, 26265, 474, 5892, 11777, 26265, 319, 15938, 5717, 32, 3596, 26, 107, 77, 91, 1989]}
{"line_number": 237, "line_type": "generated", "code": "\n\n      // update state and time\n      for (int j = 0; j < y0.length; ++j) {\n        y[j] = yTmp[j];\n      }\n      stepStart += stepSize;\n      interpolator.storeTime", "entropy": 0.210205078125, "is_bug_line": false, "sus_score": 0.14586499149789456, "per_token_entropy": [0.70703125, 0.35693359375, 1.47265625, 2.1796875, 1.1630859375, 0.87451171875, 0.0836181640625, 1.5712890625, 0.0009012222290039062, 0.0072174072265625, 0.2734375, 0.0004296302795410156, 0.001972198486328125, 3.516674041748047e-05, 0.0005040168762207031, 0.0003638267517089844, 0.0006055831909179688, 0.088134765625, 0.227294921875, 0.0002455711364746094, 5.0067901611328125e-06, 0.0003871917724609375, 0.00249481201171875, 3.1113624572753906e-05, 0.0007915496826171875, 0.002735137939453125, 0.071533203125, 0.014373779296875, 0.03680419921875, 0.0006437301635742188, 0.0001900196075439453, 0.2197265625, 0.00847625732421875, 0.0011568069458007812, 5.9485435485839844e-05, 0.00030517578125, 0.0008382797241210938, 0.03277587890625, 0.0006480216979980469, 0.38134765625, 0.188232421875, 0.0216217041015625, 0.09442138671875, 0.157958984375, 0.00010275840759277344, 0.000476837158203125, 0.5048828125, 0.1710205078125, 2.9802322387695312e-06, 0.0002524852752685547, 0.0005702972412109375, 0.005001068115234375], "tokens": [1687, 434, 1974, 1603, 461, 1133, 397, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 533, 34, 32, 1322, 45, 3311, 92, 27, 301, 291, 533, 77, 92, 79, 280, 533, 15770, 77, 92, 970, 397, 320, 397, 3111, 2130, 1454, 3111, 1250, 45, 397, 14399, 717, 32, 2157, 1043]}
{"line_number": 115, "line_type": "original", "code": "    super(name, minStep, maxStep, scalAbsoluteTolerance, scalRelativeTolerance);", "entropy": 0.9541015625, "is_bug_line": false, "sus_score": 0.13608276348795434, "per_token_entropy": [2.62109375, 7.66015625, 3.283203125, 1.078125, 0.077392578125, 0.22705078125, 0.0004703998565673828, 0.0072479248046875, 0.01427459716796875, 8.0108642578125e-05, 0.043212890625, 2.9296875, 0.005970001220703125, 0.0004756450653076172, 0.00803375244140625, 0.1441650390625, 0.001194000244140625, 0.0001863241195678711, 0.022613525390625], "tokens": [264, 2599, 26, 426, 30, 1847, 3533, 30, 1769, 3533, 30, 5892, 12043, 26265, 30, 5892, 11777, 26265, 293]}
{"line_number": 115, "line_type": "generated", "code": "\n    setMinReduction(0.2);\n    setMaxGrowth(10.0);\n\n  }\n\n  /** {@inheritDoc} */\n  @Override\n  public final boolean isFSAL() {\n    return fsal;\n  }\n\n  /** Get the time", "entropy": 0.20654296875, "is_bug_line": false, "sus_score": 0.13608276348795434, "per_token_entropy": [0.5751953125, 0.06878662109375, 0.317138671875, 0.0031528472900390625, 0.004528045654296875, 0.02569580078125, 0.001972198486328125, 0.021270751953125, 0.0034389495849609375, 0.0802001953125, 0.0013303756713867188, 7.426738739013672e-05, 2.1457672119140625e-06, 1.1920928955078125e-07, 0.0005068778991699219, 0.0029544830322265625, 0.0011110305786132812, 0.0036983489990234375, 0.00013577938079833984, 0.0005021095275878906, 0.19384765625, 0.00301361083984375, 0.2213134765625, 0.1376953125, 1.8134765625, 0.0011043548583984375, 0.000629425048828125, 0.003177642822265625, 0.043548583984375, 0.11181640625, 0.0219573974609375, 0.01415252685546875, 0.533203125, 2.05859375, 1.6845703125, 0.29296875, 0.2117919921875, 0.0003714561462402344, 0.0141754150390625, 0.00054168701171875, 0.0290374755859375, 0.0026531219482421875, 0.0012216567993164062, 1.0371208190917969e-05, 0.0007214546203613281, 0.006458282470703125, 0.0004630088806152344, 0.06781005859375, 0.020111083984375, 0.63427734375, 0.03240966796875, 1.4716796875], "tokens": [284, 739, 2928, 35802, 26, 34, 32, 36, 293, 284, 739, 2708, 25537, 349, 26, 35, 34, 32, 34, 293, 719, 320, 719, 1022, 3088, 18446, 111, 569, 334, 477, 1788, 334, 562, 1158, 1905, 438, 6883, 726, 346, 301, 284, 442, 5980, 279, 45, 334, 320, 719, 1022, 1390, 322, 1133]}
{"line_number": 117, "line_type": "original", "code": "    this.fsal      = fsal;", "entropy": 1.1845703125, "is_bug_line": false, "sus_score": 0.13608276348795434, "per_token_entropy": [5.703125, 2.876953125, 0.041412353515625, 2.609375, 0.007122039794921875, 0.54296875, 0.0006566047668457031, 0.04510498046875, 0.0004124641418457031, 0.015380859375], "tokens": [264, 458, 32, 2548, 279, 647, 280, 5980, 279, 45]}
{"line_number": 117, "line_type": "generated", "code": "\n  }\n\n  /** Build a Runge-Kutta integrator with the given Butcher array.\n   * @param name name of the method\n   * @param fsal indicate that the method is an <i>fsal</i>\n   *", "entropy": 0.0736083984375, "is_bug_line": false, "sus_score": 0.13608276348795434, "per_token_entropy": [0.360595703125, 0.024139404296875, 0.2001953125, 0.1385498046875, 1.939453125, 0.1728515625, 0.02325439453125, 3.349781036376953e-05, 0.00614166259765625, 0.0003349781036376953, 0.0005216598510742188, 8.463859558105469e-06, 0.00572967529296875, 0.00017321109771728516, 0.05694580078125, 0.0025043487548828125, 0.0023937225341796875, 0.0292205810546875, 1.5497207641601562e-06, 0.1263427734375, 0.06488037109375, 0.0147552490234375, 0.0003495216369628906, 0.16845703125, 0.00026106834411621094, 0.130859375, 0.0007624626159667969, 0.00010609626770019531, 1.4543533325195312e-05, 0.00017130374908447266, 0.0010595321655273438, 0.00012958049774169922, 0.0001647472381591797, 0.0003170967102050781, 0.3291015625, 1.239776611328125e-05, 0.0128936767578125, 0.0012073516845703125, 0.000110626220703125, 0.0006966590881347656, 0.0001169443130493164, 0.0015287399291992188, 0.00372314453125, 0.00037217140197753906, 1.3113021850585938e-06, 9.930133819580078e-05, 9.059906005859375e-06, 0.00020885467529296875, 0.0011196136474609375, 0.0011873245239257812, 0.0034084320068359375, 0.00019884109497070312], "tokens": [334, 320, 719, 1022, 5238, 312, 4489, 300, 31, 61, 303, 1349, 5845, 717, 623, 322, 2702, 7141, 18672, 1417, 32, 664, 319, 477, 753, 636, 636, 432, 322, 1411, 664, 319, 477, 753, 5980, 279, 14190, 688, 322, 1411, 438, 600, 333, 91, 48, 2548, 279, 377, 91, 48, 664, 319]}
{"line_number": 118, "line_type": "original", "code": "    this.c         = c;", "entropy": 1.7470703125, "is_bug_line": false, "sus_score": 0.13608276348795434, "per_token_entropy": [5.34375, 3.029296875, 0.03472900390625, 2.775390625, 1.638671875, 0.0009508132934570312, 0.9365234375, 0.215087890625], "tokens": [264, 458, 32, 85, 263, 280, 281, 45]}
{"line_number": 118, "line_type": "generated", "code": "\n  }\n\n  /** Build a Runge-Kutta integrator with the given Butcher array.\n   * @param name name of the method\n   * @param fsal indicate that the method is an <i>fsal</i>\n   *", "entropy": 0.0869140625, "is_bug_line": false, "sus_score": 0.13608276348795434, "per_token_entropy": [0.4228515625, 0.4482421875, 0.1829833984375, 0.1312255859375, 2.037109375, 0.1961669921875, 0.0284423828125, 3.0875205993652344e-05, 0.006076812744140625, 0.000335693359375, 0.0004565715789794922, 8.344650268554688e-06, 0.00611114501953125, 0.0001518726348876953, 0.06689453125, 0.0027313232421875, 0.00254058837890625, 0.0309295654296875, 9.5367431640625e-07, 0.2220458984375, 0.0645751953125, 0.015655517578125, 0.00042557716369628906, 0.1934814453125, 0.00026917457580566406, 0.17431640625, 0.0008535385131835938, 0.0001004934310913086, 1.5497207641601562e-05, 0.00016748905181884766, 0.0010118484497070312, 0.0003514289855957031, 0.00017547607421875, 0.00014591217041015625, 0.25048828125, 1.1205673217773438e-05, 0.01477813720703125, 0.0019474029541015625, 0.00012123584747314453, 0.0006031990051269531, 0.00012445449829101562, 0.0016117095947265625, 0.00439453125, 0.00038170814514160156, 1.1920928955078125e-06, 9.500980377197266e-05, 8.821487426757812e-06, 0.00020062923431396484, 0.001316070556640625, 0.0011339187622070312, 0.003246307373046875, 0.0003559589385986328], "tokens": [334, 320, 719, 1022, 5238, 312, 4489, 300, 31, 61, 303, 1349, 5845, 717, 623, 322, 2702, 7141, 18672, 1417, 32, 664, 319, 477, 753, 636, 636, 432, 322, 1411, 664, 319, 477, 753, 5980, 279, 14190, 688, 322, 1411, 438, 600, 333, 91, 48, 2548, 279, 377, 91, 48, 664, 319]}
{"line_number": 119, "line_type": "original", "code": "    this.a         = a;", "entropy": 2.1171875, "is_bug_line": false, "sus_score": 0.13608276348795434, "per_token_entropy": [6.5703125, 6.98046875, 0.0163421630859375, 2.078125, 0.7294921875, 0.0002796649932861328, 0.49951171875, 0.061553955078125], "tokens": [264, 458, 32, 83, 263, 280, 312, 45]}
{"line_number": 119, "line_type": "generated", "code": "\n\n  /** Get the propagation weights for the high order method.\n   * @return propagation weights for the high order method\n   */\n  public double[] getB() {\n    return b;\n  }\n\n  /** Set the propagation weights for the high order method.\n  ", "entropy": 0.1998291015625, "is_bug_line": false, "sus_score": 0.13608276348795434, "per_token_entropy": [0.6826171875, 0.10357666015625, 1.134765625, 0.037628173828125, 1.9814453125, 0.1319580078125, 0.69091796875, 0.064453125, 0.042144775390625, 0.01056671142578125, 0.016815185546875, 0.7880859375, 0.026885986328125, 0.0014028549194335938, 0.1077880859375, 0.00635528564453125, 0.1319580078125, 0.0059967041015625, 0.349853515625, 0.00553131103515625, 0.00257110595703125, 0.0005884170532226562, 0.0008816719055175781, 0.06268310546875, 0.025604248046875, 0.0223846435546875, 0.27783203125, 0.022125244140625, 0.0016603469848632812, 0.0015668869018554688, 0.7841796875, 0.045166015625, 0.0027446746826171875, 0.043609619140625, 0.006183624267578125, 0.333251953125, 0.63525390625, 0.007232666015625, 0.0003628730773925781, 0.3701171875, 0.0074920654296875, 1.212890625, 0.0081939697265625, 0.156005859375, 0.008331298828125, 0.018585205078125, 0.0007929801940917969, 0.0008978843688964844, 0.000514984130859375, 0.0002987384796142578, 0.0051727294921875, 0.00743865966796875], "tokens": [719, 1022, 1390, 322, 36905, 11229, 436, 322, 3857, 2532, 1411, 32, 664, 319, 477, 601, 36905, 11229, 436, 322, 3857, 2532, 1411, 664, 569, 334, 562, 2064, 1178, 622, 52, 346, 301, 284, 442, 323, 45, 334, 320, 719, 1022, 1756, 322, 36905, 11229, 436, 322, 3857, 2532, 1411, 32, 664]}
{"line_number": 120, "line_type": "original", "code": "    this.b         = b;", "entropy": 2.96875, "is_bug_line": false, "sus_score": 0.13608276348795434, "per_token_entropy": [6.2265625, 10.0625, 0.08709716796875, 2.958984375, 2.703125, 0.0010499954223632812, 1.609375, 0.0997314453125], "tokens": [264, 458, 32, 84, 263, 280, 323, 45]}
{"line_number": 120, "line_type": "generated", "code": "\n  /** Get the order of the method.\n   * @return order of the method\n   */\n  public int getOrder() {\n    return c.length - 1;\n  }\n\n  /** Set the safety factor for stepsize control.\n   * @param", "entropy": 0.2135009765625, "is_bug_line": false, "sus_score": 0.13608276348795434, "per_token_entropy": [0.2122802734375, 0.1490478515625, 1.2451171875, 0.0491943359375, 2.51171875, 0.01451873779296875, 0.0032100677490234375, 0.0985107421875, 0.343505859375, 0.0301971435546875, 0.001834869384765625, 0.055328369140625, 0.0006346702575683594, 0.1217041015625, 0.0194244384765625, 0.00024378299713134766, 0.0035266876220703125, 0.0183868408203125, 0.030242919921875, 0.0079803466796875, 0.40234375, 0.1900634765625, 0.0026073455810546875, 0.0012722015380859375, 0.004425048828125, 0.00284576416015625, 0.112060546875, 0.053955078125, 0.73681640625, 0.04132080078125, 9.167194366455078e-05, 1.0517578125, 0.029876708984375, 0.00372314453125, 0.0038013458251953125, 0.021087646484375, 0.0006937980651855469, 0.615234375, 0.049835205078125, 1.3662109375, 0.023834228515625, 0.21826171875, 0.061431884765625, 0.82763671875, 0.046539306640625, 0.02838134765625, 0.0219573974609375, 0.037689208984375, 0.02215576171875, 0.0003135204315185547, 0.208251953125, 0.001407623291015625], "tokens": [334, 1022, 1390, 322, 2532, 432, 322, 1411, 32, 664, 319, 477, 601, 2532, 432, 322, 1411, 664, 569, 334, 562, 629, 622, 2871, 346, 301, 284, 442, 281, 32, 1322, 429, 225, 35, 45, 334, 320, 719, 1022, 1756, 322, 26160, 10365, 436, 3111, 891, 3498, 32, 664, 319, 477, 753]}
{"line_number": 121, "line_type": "original", "code": "    this.prototype = prototype;", "entropy": 3.447265625, "is_bug_line": false, "sus_score": 0.13608276348795434, "per_token_entropy": [3.1640625, 7.109375, 5.796875, 4.2734375, 3.3125, 0.311767578125, 0.1624755859375], "tokens": [264, 458, 32, 3889, 280, 21666, 45]}
{"line_number": 121, "line_type": "generated", "code": "\n   * @return order of the method\n   */\n  public int getOrder() {\n    return b.length;\n  }\n\n  /** Get the number of functions evaluations.\n   * @return number of functions evaluations\n   */\n  public int getEvaluations", "entropy": 0.203857421875, "is_bug_line": false, "sus_score": 0.13608276348795434, "per_token_entropy": [0.27197265625, 0.17236328125, 0.1951904296875, 0.0016508102416992188, 0.251708984375, 0.013580322265625, 0.0005745887756347656, 0.005077362060546875, 0.12115478515625, 0.02197265625, 0.0148162841796875, 0.56982421875, 0.22998046875, 0.00426483154296875, 0.001026153564453125, 0.005832672119140625, 0.009796142578125, 0.29150390625, 0.08544921875, 1.896484375, 0.05181884765625, 4.494190216064453e-05, 0.24853515625, 0.06829833984375, 0.005336761474609375, 0.2315673828125, 0.107421875, 0.81884765625, 0.04583740234375, 1.9140625, 0.0025463104248046875, 0.42724609375, 0.4453125, 4.649162292480469e-06, 0.37744140625, 0.4091796875, 0.006305694580078125, 0.1734619140625, 0.0013532638549804688, 0.0009560585021972656, 0.00032138824462890625, 0.40234375, 0.0210113525390625, 1.1682510375976562e-05, 0.08203125, 0.044342041015625, 0.01043701171875, 0.05859375, 0.37744140625, 0.08709716796875, 0.0142974853515625, 6.67572021484375e-06], "tokens": [664, 319, 477, 601, 2532, 432, 322, 1411, 664, 569, 334, 562, 629, 622, 2871, 346, 301, 284, 442, 323, 32, 1322, 45, 334, 320, 719, 1022, 1390, 322, 1451, 432, 4442, 6130, 993, 32, 664, 319, 477, 601, 1451, 432, 4442, 6130, 993, 664, 569, 334, 562, 629, 622, 10491, 993]}
{"line_number": 123, "line_type": "original", "code": "    exp = -1.0 / getOrder();", "entropy": 1.8037109375, "is_bug_line": false, "sus_score": 0.13608276348795434, "per_token_entropy": [5.01171875, 14.1171875, 0.1632080078125, 0.3935546875, 0.052978515625, 0.0165863037109375, 0.00032401084899902344, 0.00850677490234375, 0.071533203125, 0.0019702911376953125, 0.01190948486328125], "tokens": [264, 2910, 280, 429, 35, 32, 34, 517, 622, 2871, 473]}
{"line_number": 123, "line_type": "generated", "code": "\n  public int getOrder() {\n    return c.length - 1;\n  }\n\n  /** Get the error weights array.\n   * @return array of weights\n   */\n  public double[] getErrorWeights() {\n    return a[getOrder()];\n  }", "entropy": 0.26025390625, "is_bug_line": false, "sus_score": 0.13608276348795434, "per_token_entropy": [0.4033203125, 0.5576171875, 0.095703125, 0.004791259765625, 0.0008015632629394531, 0.0036945343017578125, 0.008331298828125, 0.17724609375, 0.058258056640625, 0.58544921875, 0.033172607421875, 0.0001310110092163086, 0.47216796875, 0.029296875, 0.0054168701171875, 0.00772857666015625, 0.040924072265625, 0.0025730133056640625, 0.37109375, 0.0521240234375, 0.8837890625, 0.040863037109375, 2.1484375, 0.74169921875, 0.267578125, 0.3212890625, 0.0303192138671875, 0.0002073049545288086, 0.1885986328125, 0.0207366943359375, 1.40234375, 0.033935546875, 0.1947021484375, 0.77099609375, 0.047210693359375, 0.55078125, 0.450927734375, 0.0396728515625, 0.01407623291015625, 0.048614501953125, 0.373046875, 0.004241943359375, 0.00322723388671875, 0.004039764404296875, 0.203857421875, 0.2283935546875, 0.478271484375, 0.0019474029541015625, 1.0517578125, 0.06353759765625, 0.00897216796875, 0.0001995563507080078], "tokens": [334, 562, 629, 622, 2871, 346, 301, 284, 442, 281, 32, 1322, 429, 225, 35, 45, 334, 320, 719, 1022, 1390, 322, 1048, 11229, 1417, 32, 664, 319, 477, 601, 1417, 432, 11229, 664, 569, 334, 562, 2064, 1178, 622, 924, 21640, 346, 301, 284, 442, 312, 77, 48330, 22086, 334, 320]}
{"line_number": 126, "line_type": "original", "code": "    setSafety(0.9);", "entropy": 1.97265625, "is_bug_line": false, "sus_score": 0.13608276348795434, "per_token_entropy": [4.63671875, 9.1484375, 1.0625, 0.1510009765625, 0.43310546875, 0.01258087158203125, 0.0166778564453125, 0.31982421875], "tokens": [264, 739, 44798, 26, 34, 32, 43, 293]}
{"line_number": 126, "line_type": "generated", "code": "\n   * @return safety factor for stepsize control\n   */\n  public double getSafety() {\n    return safety;\n  }\n\n  /** Set the safety factor for stepsize control.\n   * @param factor safety factor for stepsize control\n   */\n  public void", "entropy": 0.067626953125, "is_bug_line": false, "sus_score": 0.13608276348795434, "per_token_entropy": [0.0732421875, 0.0227813720703125, 0.069580078125, 0.01268768310546875, 0.01102447509765625, 0.004299163818359375, 0.2042236328125, 0.01288604736328125, 0.0022029876708984375, 0.0005779266357421875, 0.047607421875, 0.0277099609375, 0.009429931640625, 0.034912109375, 0.0193634033203125, 0.32763671875, 0.0003871917724609375, 0.00106048583984375, 0.0037136077880859375, 0.060394287109375, 0.0026073455810546875, 0.006992340087890625, 0.001155853271484375, 0.01493072509765625, 0.0006165504455566406, 0.0286407470703125, 0.0029506683349609375, 0.0694580078125, 0.0027828216552734375, 0.0015001296997070312, 0.0018310546875, 0.0081787109375, 0.0013685226440429688, 0.00055694580078125, 0.00028395652770996094, 0.01134490966796875, 1.2099609375, 0.0010919570922851562, 0.1661376953125, 0.0013980865478515625, 0.262939453125, 0.2427978515625, 0.0005159378051757812, 0.0880126953125, 0.003192901611328125, 0.0006470680236816406, 0.0007410049438476562, 0.228759765625, 0.1407470703125, 0.007328033447265625, 0.05926513671875, 0.003826141357421875], "tokens": [664, 319, 477, 601, 26160, 10365, 436, 3111, 891, 3498, 664, 569, 334, 562, 2064, 43597, 21732, 346, 301, 284, 442, 26160, 45, 334, 320, 719, 1022, 1756, 322, 26160, 10365, 436, 3111, 891, 3498, 32, 664, 319, 477, 753, 10365, 26160, 10365, 436, 3111, 891, 3498, 664, 569, 334, 562, 763]}
{"line_number": 127, "line_type": "original", "code": "    setMinReduction(0.2);", "entropy": 1.7705078125, "is_bug_line": false, "sus_score": 0.13608276348795434, "per_token_entropy": [3.974609375, 7.29296875, 3.095703125, 0.0682373046875, 0.218505859375, 0.88720703125, 0.04400634765625, 0.1864013671875, 0.17333984375], "tokens": [264, 739, 2928, 35802, 26, 34, 32, 36, 293]}
{"line_number": 127, "line_type": "generated", "code": "\n   */\n  public double getSafety() {\n    return safety;\n  }\n\n  /** Set the safety factor for stepsize control.\n   * @param factor safety factor (should be smaller than 1.0 and larger\n   * than or equal to 0", "entropy": 0.1571044921875, "is_bug_line": false, "sus_score": 0.13608276348795434, "per_token_entropy": [0.353759765625, 0.01303863525390625, 0.00778961181640625, 0.0299224853515625, 0.0173492431640625, 0.57080078125, 0.00019299983978271484, 0.001087188720703125, 0.0036640167236328125, 0.09381103515625, 0.0029125213623046875, 0.006214141845703125, 0.0025348663330078125, 0.03472900390625, 0.0005908012390136719, 0.0750732421875, 0.004161834716796875, 0.09271240234375, 0.00333404541015625, 0.0013818740844726562, 0.001987457275390625, 0.0232391357421875, 0.0013256072998046875, 0.0007066726684570312, 0.00016379356384277344, 0.00838470458984375, 0.022674560546875, 0.00022542476654052734, 0.0221405029296875, 0.0011014938354492188, 0.246337890625, 0.1986083984375, 0.00090789794921875, 0.7001953125, 0.57177734375, 0.01113128662109375, 0.6630859375, 0.1878662109375, 0.053558349609375, 0.0107879638671875, 1.0439453125, 0.00018024444580078125, 1.203125, 0.6396484375, 0.58154296875, 5.340576171875e-05, 0.00550079345703125, 0.263671875, 0.05511474609375, 0.01190948486328125, 0.283447265625, 0.042449951171875], "tokens": [664, 569, 334, 562, 2064, 43597, 21732, 346, 301, 284, 442, 26160, 45, 334, 320, 719, 1022, 1756, 322, 26160, 10365, 436, 3111, 891, 3498, 32, 664, 319, 477, 753, 10365, 26160, 10365, 308, 3163, 526, 14763, 2784, 225, 35, 32, 34, 461, 14324, 664, 319, 2784, 556, 5040, 372, 225, 34]}
{"line_number": 128, "line_type": "original", "code": "    setMaxGrowth(10.0);", "entropy": 1.7958984375, "is_bug_line": false, "sus_score": 0.13608276348795434, "per_token_entropy": [4.828125, 9.265625, 4.57421875, 0.00146484375, 0.0003192424774169922, 0.2724609375, 0.67919921875, 0.0196533203125, 0.041107177734375, 0.0016870498657226562, 0.06146240234375], "tokens": [264, 739, 2708, 25537, 349, 26, 35, 34, 32, 34, 293]}
{"line_number": 128, "line_type": "generated", "code": "\n  public double getSafety() {\n    return safety;\n  }\n\n  /** Set the safety factor for stepsize control.\n   * @param factor safety factor\n   */", "entropy": 0.09356689453125, "is_bug_line": false, "sus_score": 0.13608276348795434, "per_token_entropy": [0.52490234375, 0.22216796875, 0.021697998046875, 0.452880859375, 0.00012767314910888672, 0.0016412734985351562, 0.0233154296875, 0.390380859375, 0.004375457763671875, 0.00908660888671875, 0.0015554428100585938, 0.061309814453125, 0.0012426376342773438, 0.314697265625, 0.00841522216796875, 0.0751953125, 0.003200531005859375, 0.0012302398681640625, 0.00215911865234375, 0.01800537109375, 0.0010309219360351562, 0.0006022453308105469, 0.0001366138458251953, 0.00974273681640625, 0.012359619140625, 0.00011777877807617188, 0.0306396484375, 0.0010004043579101562, 0.2275390625, 0.28369140625, 0.0008845329284667969, 0.2470703125, 0.1346435546875], "tokens": [334, 562, 2064, 43597, 21732, 346, 301, 284, 442, 26160, 45, 334, 320, 719, 1022, 1756, 322, 26160, 10365, 436, 3111, 891, 3498, 32, 664, 319, 477, 753, 10365, 26160, 10365, 664, 569]}
{"line_number": 130, "line_type": "original", "code": "  }", "entropy": 0.94677734375, "is_bug_line": false, "sus_score": 0.13608276348795434, "per_token_entropy": [1.8505859375, 0.043121337890625], "tokens": [225, 320]}
{"line_number": 130, "line_type": "generated", "code": "\n  }\n\n  /** Set the safety factor for stepsize control.\n   * @param factor safety factor\n   */\n  public void setSafety(final double factor) {\n    safety = factor;", "entropy": 0.1197509765625, "is_bug_line": false, "sus_score": 0.13608276348795434, "per_token_entropy": [0.393798828125, 0.982421875, 0.07183837890625, 0.004322052001953125, 0.1739501953125, 0.0038776397705078125, 0.0014276504516601562, 0.0014047622680664062, 0.016937255859375, 0.0009822845458984375, 0.0006432533264160156, 0.0001329183578491211, 0.01053619384765625, 0.00865936279296875, 8.428096771240234e-05, 0.040252685546875, 0.0009121894836425781, 0.2880859375, 0.37353515625, 0.0007724761962890625, 0.27734375, 0.140625, 0.02081298828125, 0.020965576171875, 0.0026035308837890625, 0.0009312629699707031, 7.18832015991211e-05, 0.0010728836059570312, 0.0826416015625, 0.00014007091522216797, 0.00022304058074951172, 3.910064697265625e-05, 0.003932952880859375, 0.2073974609375, 0.6435546875, 0.0077056884765625, 0.7587890625, 0.008575439453125], "tokens": [334, 320, 719, 1022, 1756, 322, 26160, 10365, 436, 3111, 891, 3498, 32, 664, 319, 477, 753, 10365, 26160, 10365, 664, 569, 334, 562, 763, 739, 44798, 26, 3220, 2064, 10365, 27, 301, 284, 26160, 280, 10365, 45]}
{"line_number": 233, "line_type": "original", "code": "        if (firstTime) {", "entropy": 1.828125, "is_bug_line": false, "sus_score": 0.13018891098082389, "per_token_entropy": [3.951171875, 4.5703125, 0.132080078125, 3.45703125, 0.00927734375, 0.623046875, 0.052978515625], "tokens": [351, 415, 308, 2232, 1043, 27, 301]}
{"line_number": 233, "line_type": "generated", "code": "\n        }\n\n      }\n\n      // accept step\n      stepStart += stepSize;\n      for (int j = 0; j < y0.length; ++j) {\n        y[j] = yTmp[j];\n      }\n\n      // update the", "entropy": 0.27978515625, "is_bug_line": false, "sus_score": 0.13018891098082389, "per_token_entropy": [0.55908203125, 0.01141357421875, 0.568359375, 0.00977325439453125, 0.111328125, 0.22607421875, 1.7861328125, 0.82080078125, 1.087890625, 1.87890625, 1.427734375, 0.29541015625, 0.146484375, 0.00013959407806396484, 0.0006833076477050781, 0.280029296875, 0.6982421875, 0.0004794597625732422, 0.0016956329345703125, 0.082763671875, 0.0004229545593261719, 0.00036406517028808594, 0.0002371072769165039, 0.00039386749267578125, 0.00028324127197265625, 0.0006914138793945312, 0.0235748291015625, 0.2427978515625, 0.0003826618194580078, 1.0132789611816406e-05, 0.0002548694610595703, 0.0025806427001953125, 3.2782554626464844e-05, 0.0005474090576171875, 0.002040863037109375, 0.0158233642578125, 0.009490966796875, 0.0204620361328125, 0.0002894401550292969, 0.00019669532775878906, 0.174560546875, 0.004634857177734375, 0.00037670135498046875, 2.753734588623047e-05, 5.829334259033203e-05, 0.0007815361022949219, 0.0570068359375, 0.0006175041198730469, 0.400634765625, 0.650390625, 1.9873046875, 0.95458984375], "tokens": [291, 320, 1687, 320, 1687, 434, 5514, 3111, 397, 3111, 2130, 1454, 3111, 1250, 45, 397, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 533, 34, 32, 1322, 45, 3311, 92, 27, 301, 291, 533, 77, 92, 79, 280, 533, 15770, 77, 92, 970, 397, 320, 1687, 434, 1974, 322]}
{"line_number": 234, "line_type": "original", "code": "          final double[] scale = new double[mainSetDimension];", "entropy": 2.177734375, "is_bug_line": false, "sus_score": 0.13018891098082389, "per_token_entropy": [6.7109375, 5.66796875, 0.12188720703125, 1.7001953125, 2.37109375, 0.66796875, 1.181640625, 0.007419586181640625, 0.021331787109375, 9.4375, 0.1278076171875, 0.1651611328125, 0.1304931640625], "tokens": [2033, 1158, 2064, 1178, 5247, 280, 537, 2064, 77, 1831, 885, 9883, 970]}
{"line_number": 234, "line_type": "generated", "code": "\n      }\n\n      // accept step, and update state\n      for (int j = 0; j < y0.length; ++j) {\n        y[j] = yTmp[j];\n      }\n      interpolator.storeTime(stepStart", "entropy": 0.269775390625, "is_bug_line": false, "sus_score": 0.13018891098082389, "per_token_entropy": [1.8056640625, 0.0054779052734375, 0.10467529296875, 0.262451171875, 1.5712890625, 0.794921875, 0.7080078125, 2.1484375, 0.5810546875, 1.2080078125, 0.378173828125, 1.490234375, 0.0006976127624511719, 0.0013914108276367188, 0.14404296875, 0.00038814544677734375, 0.0001285076141357422, 6.914138793945312e-05, 0.00040721893310546875, 0.00022125244140625, 0.0006399154663085938, 0.00806427001953125, 0.1815185546875, 0.00025343894958496094, 1.0609626770019531e-05, 0.00019109249114990234, 0.0025272369384765625, 3.540515899658203e-05, 0.0005221366882324219, 0.002368927001953125, 0.020904541015625, 0.01113128662109375, 0.033172607421875, 0.00016117095947265625, 0.00020444393157958984, 0.358154296875, 0.006946563720703125, 0.0009355545043945312, 3.2782554626464844e-05, 6.783008575439453e-05, 0.0014314651489257812, 0.07635498046875, 0.0005445480346679688, 0.465087890625, 0.64990234375, 1.430511474609375e-06, 0.0003542900085449219, 0.006259918212890625, 0.91259765625, 0.034576416015625, 0.04931640625, 0.0032444000244140625], "tokens": [397, 320, 1687, 434, 5514, 3111, 30, 461, 1974, 1603, 397, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 533, 34, 32, 1322, 45, 3311, 92, 27, 301, 291, 533, 77, 92, 79, 280, 533, 15770, 77, 92, 970, 397, 320, 397, 14399, 717, 32, 2157, 1043, 26, 2997, 2130]}
{"line_number": 235, "line_type": "original", "code": "          if (vecAbsoluteTolerance == null) {", "entropy": 0.953125, "is_bug_line": false, "sus_score": 0.13018891098082389, "per_token_entropy": [4.0390625, 1.4326171875, 0.247802734375, 1.4853515625, 0.1951904296875, 0.0006480216979980469, 1.716796875, 0.01149749755859375, 0.37109375, 0.035064697265625], "tokens": [2033, 415, 308, 3137, 12043, 26265, 610, 744, 27, 301]}
{"line_number": 235, "line_type": "generated", "code": "\n      }\n\n      // accept the step\n      isLastStep = update(interpolator, stepStart, stepSize, y, yTmp, yDotK[0], forward);\n      stepStart += stepSize;\n\n      // prepare next step\n      for (int", "entropy": 0.4404296875, "is_bug_line": false, "sus_score": 0.13018891098082389, "per_token_entropy": [1.306640625, 0.1171875, 0.224609375, 0.241943359375, 1.8681640625, 0.8447265625, 0.042816162109375, 0.50244140625, 1.41015625, 0.004688262939453125, 0.004825592041015625, 0.04315185546875, 1.166015625, 1.4365234375, 2.189453125, 1.3113021850585938e-06, 0.12548828125, 0.72021484375, 0.29833984375, 0.037109375, 0.55029296875, 0.11834716796875, 0.1832275390625, 0.3486328125, 0.26416015625, 0.0806884765625, 0.357666015625, 0.0797119140625, 0.278564453125, 0.0052642822265625, 0.08453369140625, 0.53076171875, 0.6796875, 0.3232421875, 1.2958984375, 0.176513671875, 0.60693359375, 0.25, 0.005947113037109375, 0.318115234375, 0.05792236328125, 0.0003027915954589844, 0.0003261566162109375, 1.0712890625, 0.2587890625, 0.7509765625, 0.1832275390625, 0.0743408203125, 0.08441162109375, 1.3017578125, 0.001224517822265625, 0.0010423660278320312], "tokens": [397, 320, 1687, 434, 5514, 322, 3111, 397, 438, 3267, 3533, 280, 1974, 26, 19537, 717, 30, 3111, 2130, 30, 3111, 1250, 30, 533, 30, 533, 15770, 30, 533, 10025, 61, 77, 34, 614, 7386, 293, 397, 3111, 2130, 1454, 3111, 1250, 45, 1687, 434, 11656, 2354, 3111, 397, 436, 308, 410]}
{"line_number": 244, "line_type": "original", "code": "          hNew = initializeStep(forward, getOrder(), scale,", "entropy": 2.71875, "is_bug_line": false, "sus_score": 0.13018891098082389, "per_token_entropy": [4.6796875, 3.46875, 0.12115478515625, 0.15576171875, 7.54296875, 0.01556396484375, 0.0157928466796875, 2.703125, 0.07672119140625, 7.46484375, 4.640625, 0.27978515625, 5.95703125, 0.93603515625], "tokens": [2033, 420, 1812, 280, 7379, 3533, 26, 7543, 30, 622, 2871, 1026, 5247, 30]}
{"line_number": 244, "line_type": "generated", "code": "\n      // evaluate step handlers\n      for (final EventHandler handler : getEventHandlers()) {\n        if (handler.g(stepStart) <= 0) {\n          handler.actionPerformed(new ActionEvent(this, ActionEvent.ACTION_PERFORMED", "entropy": 0.4189453125, "is_bug_line": false, "sus_score": 0.13018891098082389, "per_token_entropy": [1.0419921875, 1.4365234375, 2.890625, 0.83056640625, 0.376708984375, 0.642578125, 1.6875, 0.00498199462890625, 1.3330078125, 0.8740234375, 0.09747314453125, 0.025787353515625, 1.421875, 0.77685546875, 0.0009374618530273438, 0.01337432861328125, 0.006046295166015625, 0.13330078125, 0.91259765625, 0.20751953125, 0.1680908203125, 0.00685882568359375, 1.4755859375, 0.006198883056640625, 0.51611328125, 0.0078582763671875, 1.1220703125, 0.413330078125, 0.442626953125, 0.000888824462890625, 0.5517578125, 0.002628326416015625, 0.035675048828125, 0.697265625, 0.0070648193359375, 0.94775390625, 0.059295654296875, 0.022369384765625, 0.156005859375, 0.00321197509765625, 0.0002288818359375, 0.005718231201171875, 0.039764404296875, 0.006206512451171875, 0.367919921875, 0.00025582313537597656, 0.00010478496551513672, 0.0007729530334472656, 3.504753112792969e-05, 4.291534423828125e-06, 0.0007991790771484375, 2.3365020751953125e-05], "tokens": [397, 434, 13396, 3111, 15098, 397, 436, 308, 3220, 26939, 4899, 499, 622, 1151, 15556, 1157, 301, 291, 415, 308, 4531, 32, 89, 26, 2997, 2130, 27, 2511, 225, 34, 27, 301, 616, 4899, 32, 1141, 15754, 26, 890, 5245, 1151, 26, 578, 30, 5245, 1151, 32, 8750, 81, 3687, 7321, 14253]}
{"line_number": 246, "line_type": "original", "code": "          firstTime = false;", "entropy": 1.8154296875, "is_bug_line": false, "sus_score": 0.13018891098082389, "per_token_entropy": [5.2265625, 5.546875, 0.0007433891296386719, 0.0270233154296875, 0.060028076171875, 0.026123046875], "tokens": [2033, 1932, 1043, 280, 901, 45]}
{"line_number": 246, "line_type": "generated", "code": "\n        // update step handlers\n        interpolator.setInterpolatedTime(stepStart);\n        for (final EventHandler handler : eventHandlers) {\n          handler.g(stepStart, yTmp);\n        }\n\n        // update the step handlers time and state\n        for", "entropy": 0.630859375, "is_bug_line": false, "sus_score": 0.13018891098082389, "per_token_entropy": [0.796875, 0.64111328125, 3.2109375, 1.1708984375, 1.4716796875, 0.71826171875, 2.923828125, 0.0003447532653808594, 0.0053253173828125, 1.0439453125, 0.01302337646484375, 0.00154876708984375, 0.41357421875, 0.0017290115356445312, 0.144775390625, 0.001575469970703125, 0.00725555419921875, 0.09027099609375, 0.65380859375, 0.004306793212890625, 0.87353515625, 0.83251953125, 0.1751708984375, 0.014312744140625, 0.9560546875, 0.0190582275390625, 0.017120361328125, 0.00302886962890625, 0.10162353515625, 0.44091796875, 0.00048160552978515625, 1.658203125, 0.1949462890625, 0.438720703125, 0.0105743408203125, 0.01558685302734375, 0.197509765625, 1.6904296875, 0.3037109375, 0.1224365234375, 0.0007791519165039062, 1.3857421875, 0.36572265625, 1.033203125, 0.962890625, 1.236328125, 1.8623046875, 0.65087890625, 1.80078125, 0.1422119140625, 0.447509765625, 1.5498046875], "tokens": [291, 434, 1974, 3111, 15098, 291, 14399, 717, 32, 470, 19520, 733, 1043, 26, 2997, 2130, 293, 291, 436, 308, 3220, 26939, 4899, 499, 1692, 15556, 27, 301, 616, 4899, 32, 89, 26, 2997, 2130, 30, 533, 15770, 293, 291, 320, 584, 434, 1974, 322, 3111, 15098, 1133, 461, 1603, 291, 436]}
{"line_number": 249, "line_type": "original", "code": "        stepSize = hNew;", "entropy": 1.8525390625, "is_bug_line": true, "sus_score": 0.13018891098082389, "per_token_entropy": [7.17578125, 4.2109375, 0.348388671875, 0.054534912109375, 1.162109375, 0.006839752197265625, 0.00768280029296875], "tokens": [351, 3111, 1250, 280, 420, 1812, 45]}
{"line_number": 249, "line_type": "generated", "code": "\n\n          hNew = initializeStep(forward, getOrder(), scale,\n                                stepStart, y, yDotK[0], yTmp, yDotK[1]);\n\n      }\n\n      isLastStep = false;\n\n    } while (t.stopIntegration", "entropy": 0.32568359375, "is_bug_line": true, "sus_score": 0.13018891098082389, "per_token_entropy": [0.25341796875, 2.29296875, 0.004360198974609375, 0.01413726806640625, 0.314697265625, 0.0017766952514648438, 0.001079559326171875, 0.01305389404296875, 0.0002522468566894531, 0.0406494140625, 0.001129150390625, 0.00525665283203125, 0.619140625, 0.00952911376953125, 0.11431884765625, 0.038482666015625, 0.00045037269592285156, 0.006717681884765625, 0.0030765533447265625, 0.052276611328125, 0.0019292831420898438, 0.002960205078125, 0.042724609375, 0.0007505416870117188, 0.032440185546875, 0.00010192394256591797, 0.012115478515625, 0.001255035400390625, 0.00018656253814697266, 0.00260162353515625, 0.0003273487091064453, 0.01091766357421875, 0.002346038818359375, 0.00452423095703125, 0.0009069442749023438, 0.33837890625, 0.001163482666015625, 1.19140625, 1.6044921875, 0.009490966796875, 0.0022411346435546875, 0.005405426025390625, 1.9619140625, 0.0030364990234375, 0.336181640625, 0.00518035888671875, 0.034881591796875, 1.3662109375, 1.0048828125, 0.352294921875, 3.23828125, 1.583984375], "tokens": [5678, 420, 1812, 280, 7379, 3533, 26, 7543, 30, 622, 2871, 1026, 5247, 30, 1378, 3111, 2130, 30, 533, 30, 533, 10025, 61, 77, 34, 614, 533, 15770, 30, 533, 10025, 61, 77, 35, 1989, 1687, 320, 1687, 438, 3267, 3533, 280, 901, 45, 446, 320, 2218, 308, 102, 32, 4048, 13034]}
{"line_number": 252, "line_type": "original", "code": "        for (int k = 1; k < stages; ++k) {", "entropy": 0.71875, "is_bug_line": true, "sus_score": 0.13018891098082389, "per_token_entropy": [6.15234375, 2.591796875, 0.00411224365234375, 0.0203704833984375, 2.93359375, 0.04962158203125, 0.01377105712890625, 0.269775390625, 0.0028591156005859375, 0.001918792724609375, 0.01238250732421875, 0.0462646484375, 0.0640869140625, 0.0237274169921875, 0.0006198883056640625, 0.00213623046875, 0.0295257568359375], "tokens": [351, 436, 308, 410, 831, 280, 225, 35, 45, 831, 333, 31416, 45, 3311, 93, 27, 301]}
{"line_number": 252, "line_type": "generated", "code": "\n              computeDerivatives(stepStart, y, yDotK[0]);\n          }\n\n          // estimate the starting value of the next step\n          final double[] scale = new double[mainSetDimension];\n          if (vecAbsoluteTolerance == null) {\n             ", "entropy": 0.29931640625, "is_bug_line": true, "sus_score": 0.13018891098082389, "per_token_entropy": [0.9921875, 1.2275390625, 0.004596710205078125, 4.5418739318847656e-05, 0.0035381317138671875, 0.032012939453125, 0.0013179779052734375, 0.2509765625, 0.011260986328125, 0.2115478515625, 0.00669097900390625, 0.00031280517578125, 0.0238037109375, 0.00086212158203125, 0.625, 0.00036787986755371094, 0.5654296875, 0.0006985664367675781, 0.365234375, 1.01171875, 1.78515625, 0.408935546875, 2.79296875, 0.9111328125, 0.0784912109375, 0.0264434814453125, 0.2496337890625, 0.01165771484375, 0.2225341796875, 2.146484375, 0.0657958984375, 0.57666015625, 0.37451171875, 0.03240966796875, 0.072021484375, 0.0002300739288330078, 0.00020134449005126953, 0.1119384765625, 0.0003113746643066406, 5.221366882324219e-05, 0.0007271766662597656, 0.0256195068359375, 0.1729736328125, 0.0007867813110351562, 0.00531005859375, 0.0003540515899658203, 5.9604644775390625e-05, 0.00379180908203125, 0.00019800662994384766, 0.0010166168212890625, 0.0012712478637695312, 0.157958984375], "tokens": [1090, 7596, 30970, 11118, 26, 2997, 2130, 30, 533, 30, 533, 10025, 61, 77, 34, 1989, 616, 320, 5678, 434, 20772, 322, 8049, 786, 432, 322, 2354, 3111, 616, 1158, 2064, 1178, 5247, 280, 537, 2064, 77, 1831, 885, 9883, 970, 616, 415, 308, 3137, 12043, 26265, 610, 744, 27, 301, 1090]}
{"line_number": 254, "line_type": "original", "code": "          for (int j = 0; j < y0.length; ++j) {", "entropy": 0.353515625, "is_bug_line": false, "sus_score": 0.13018891098082389, "per_token_entropy": [4.5859375, 1.0, 0.0044403076171875, 0.1422119140625, 0.41015625, 0.0013256072998046875, 0.0122528076171875, 0.04010009765625, 0.00391387939453125, 0.0006918907165527344, 0.00553131103515625, 0.529296875, 0.3154296875, 0.0035533905029296875, 8.666515350341797e-05, 0.0017499923706054688, 0.002254486083984375, 8.26120376586914e-05, 0.0012178421020507812, 0.00972747802734375], "tokens": [2033, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 533, 34, 32, 1322, 45, 3311, 92, 27, 301]}
{"line_number": 254, "line_type": "generated", "code": "\n          for (int j = 0; j < y0.length; ++j) {\n            double sum = yDotK[stages - 1][j];\n            for (int l = 0; l < stages - 1; ++", "entropy": 0.1973876953125, "is_bug_line": false, "sus_score": 0.13018891098082389, "per_token_entropy": [0.39697265625, 1.1455078125, 0.004917144775390625, 0.03692626953125, 0.407470703125, 0.0013294219970703125, 0.0098419189453125, 0.028411865234375, 0.005817413330078125, 0.0006666183471679688, 0.006526947021484375, 0.427734375, 0.318359375, 0.003040313720703125, 6.0677528381347656e-05, 0.002422332763671875, 0.001068115234375, 9.167194366455078e-05, 0.0009484291076660156, 0.00411224365234375, 0.094482421875, 0.568359375, 0.01276397705078125, 0.60888671875, 1.8486328125, 0.1939697265625, 0.315673828125, 0.001667022705078125, 1.0615234375, 0.260498046875, 0.00872039794921875, 0.0008325576782226562, 0.0014753341674804688, 0.002166748046875, 0.09490966796875, 0.0186614990234375, 0.0297393798828125, 0.0007910728454589844, 0.0009927749633789062, 0.5390625, 0.0001634359359741211, 0.4755859375, 1.2138671875, 0.0010852813720703125, 0.0010633468627929688, 0.0023288726806640625, 0.055999755859375, 0.036468505859375, 0.0029277801513671875, 0.0039825439453125, 0.0016374588012695312, 0.003993988037109375], "tokens": [616, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 533, 34, 32, 1322, 45, 3311, 92, 27, 301, 324, 2064, 3632, 280, 533, 10025, 61, 77, 35242, 429, 225, 35, 1674, 92, 970, 324, 436, 308, 410, 456, 280, 225, 34, 45, 456, 333, 31416, 429, 225, 35, 45, 3311]}
