{"line_number": 63, "line_type": "original", "code": "        throws NonPositiveDefiniteMatrixException {", "entropy": 2.0859375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [3.203125, 13.4296875, 0.69775390625, 0.041290283203125, 0.0008597373962402344, 1.7523765563964844e-05, 0.0005865097045898438, 0.0004439353942871094, 1.3955078125], "tokens": [351, 2571, 12495, 17991, 48979, 659, 4161, 984, 301]}
{"line_number": 63, "line_type": "generated", "code": "                // ignore small elements\n                loop = false;\n\n            } else {\n\n                // check remaining diagonal elements\n                for (int i = r + 1; i < order; ++i) {\n                    int ii  = index[i];\n                    int irr", "entropy": 0.368408203125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [1.388671875, 0.62255859375, 2.396484375, 0.61572265625, 1.9853515625, 1.1318359375, 0.442626953125, 0.00769805908203125, 0.1295166015625, 0.0003845691680908203, 1.0947265625, 0.004314422607421875, 0.03125, 0.0438232421875, 0.4609375, 0.478271484375, 1.73828125, 1.7734375, 0.6875, 0.0225372314453125, 0.101318359375, 0.2298583984375, 0.0006132125854492188, 0.0009126663208007812, 0.10833740234375, 0.0003895759582519531, 0.0501708984375, 0.06341552734375, 0.0004863739013671875, 2.7179718017578125e-05, 0.0008921623229980469, 0.00045490264892578125, 0.0003604888916015625, 0.0005125999450683594, 0.0006861686706542969, 0.0027408599853515625, 5.9604644775390625e-06, 0.0005216598510742188, 0.006603240966796875, 0.25, 0.4375, 0.1441650390625, 0.51220703125, 1.0728836059570312e-06, 0.0024318695068359375, 5.745887756347656e-05, 0.00799560546875, 0.0007510185241699219, 0.0667724609375, 0.339599609375, 0.68408203125, 1.0859375], "tokens": [2071, 434, 5079, 5532, 4702, 400, 5258, 280, 901, 45, 1064, 320, 813, 301, 2110, 434, 1505, 11459, 27601, 4702, 400, 436, 308, 410, 595, 280, 540, 474, 225, 35, 45, 595, 333, 2532, 45, 3311, 91, 27, 301, 528, 629, 12367, 225, 280, 1650, 77, 91, 970, 528, 629, 7683, 100]}
{"line_number": 65, "line_type": "original", "code": "        final int order = matrix.getRowDimension();", "entropy": 1.6826171875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [3.74609375, 5.0625, 1.234375, 4.31640625, 0.29248046875, 1.294921875, 0.0032749176025390625, 0.87109375, 0.0001958608627319336, 0.0085296630859375], "tokens": [351, 1158, 629, 2532, 280, 5045, 32, 30093, 9883, 473]}
{"line_number": 65, "line_type": "generated", "code": "\n                loop = false;\n            } else {\n\n                // check upper triangular elements\n                for (int i = r + 1; i < order; ++i) {\n                    int ii = index[i];\n                    double sum = 0.0;", "entropy": 0.306640625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.44921875, 0.7705078125, 0.00786590576171875, 0.0085296630859375, 0.0006089210510253906, 1.2666015625, 0.0007066726684570312, 0.2744140625, 0.03125, 0.7353515625, 0.292724609375, 1.8291015625, 2.591796875, 0.467529296875, 0.0014200210571289062, 0.2415771484375, 0.182861328125, 0.345947265625, 0.000774383544921875, 0.00044536590576171875, 0.44482421875, 0.0012025833129882812, 0.1610107421875, 0.041290283203125, 0.0006632804870605469, 3.5762786865234375e-05, 0.0013113021850585938, 0.0004353523254394531, 0.0003185272216796875, 0.0009160041809082031, 0.0007948875427246094, 0.0027675628662109375, 0.0006060600280761719, 0.0006031990051269531, 0.002140045166015625, 0.129150390625, 0.5556640625, 0.188232421875, 0.7705078125, 0.005603790283203125, 4.303455352783203e-05, 0.00878143310546875, 0.0009927749633789062, 0.09759521484375, 0.53515625, 1.296875, 0.0272674560546875, 1.08203125, 0.007343292236328125, 1.060546875, 0.0005273818969726562, 0.0206756591796875], "tokens": [400, 5258, 280, 901, 45, 324, 320, 813, 301, 2110, 434, 1505, 8342, 3934, 5089, 4702, 400, 436, 308, 410, 595, 280, 540, 474, 225, 35, 45, 595, 333, 2532, 45, 3311, 91, 27, 301, 528, 629, 12367, 280, 1650, 77, 91, 970, 528, 2064, 3632, 280, 225, 34, 32, 34, 45]}
{"line_number": 66, "line_type": "original", "code": "        final double[][] c = matrix.getData();", "entropy": 1.7451171875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [4.890625, 5.31640625, 1.3427734375, 1.0986328125, 2.30078125, 0.390625, 2.017578125, 0.01245880126953125, 0.072265625, 0.01332855224609375], "tokens": [351, 1158, 2064, 11336, 281, 280, 5045, 32, 11576, 473]}
{"line_number": 66, "line_type": "generated", "code": "\n            } else {\n\n                // compute the upper triangular matrix B\n                for (int i = r + 1; i < order; ++i) {\n                    int ii = index[i];\n                    double sum = c[ii][ir];\n                    for", "entropy": 0.392822265625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [1.15625, 0.005596160888671875, 0.06353759765625, 0.0246124267578125, 0.7685546875, 0.352294921875, 2.373046875, 1.0087890625, 2.990234375, 0.287109375, 0.0025386810302734375, 0.828125, 1.6767578125, 1.048828125, 1.0908203125, 0.0018644332885742188, 0.0007510185241699219, 0.4228515625, 0.0011625289916992188, 0.181396484375, 0.279296875, 0.0006256103515625, 2.4199485778808594e-05, 0.0019664764404296875, 0.0005173683166503906, 0.00038909912109375, 0.0009050369262695312, 0.0006809234619140625, 0.006122589111328125, 0.00039958953857421875, 0.0005645751953125, 0.004177093505859375, 0.12322998046875, 0.57568359375, 0.33447265625, 0.53662109375, 0.00403594970703125, 5.137920379638672e-05, 0.005718231201171875, 0.001125335693359375, 0.07867431640625, 0.64599609375, 2.248046875, 0.0254974365234375, 0.388671875, 0.00024509429931640625, 0.03839111328125, 7.510185241699219e-05, 0.157470703125, 0.48583984375, 0.043701171875, 0.1427001953125], "tokens": [324, 320, 813, 301, 2110, 434, 7596, 322, 8342, 3934, 5089, 5045, 551, 400, 436, 308, 410, 595, 280, 540, 474, 225, 35, 45, 595, 333, 2532, 45, 3311, 91, 27, 301, 528, 629, 12367, 280, 1650, 77, 91, 970, 528, 2064, 3632, 280, 281, 77, 3643, 1674, 476, 970, 528, 436]}
{"line_number": 67, "line_type": "original", "code": "        final double[][] b = new double[order][order];", "entropy": 1.6298828125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [5.359375, 8.9375, 0.71728515625, 2.009765625, 2.349609375, 0.11871337890625, 0.1912841796875, 0.003749847412109375, 0.0009403228759765625, 0.60400390625, 0.572265625, 0.193603515625, 0.12548828125], "tokens": [351, 1158, 2064, 11336, 323, 280, 537, 2064, 77, 1174, 1674, 1174, 970]}
{"line_number": 67, "line_type": "generated", "code": "\n            } else {\n                // update upper part of the matrix\n                for (int i = r + 1; i < order; ++i) {\n                    int ii = index[i];\n                    double cr = c[ir][ii];\n                    double ci", "entropy": 0.3779296875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.426513671875, 0.001491546630859375, 0.1749267578125, 0.034088134765625, 0.732421875, 0.861328125, 2.048828125, 2.58984375, 1.80078125, 0.9990234375, 0.321533203125, 0.74072265625, 0.255859375, 0.65966796875, 0.0018625259399414062, 0.0005025863647460938, 0.53515625, 0.0007824897766113281, 0.0389404296875, 0.03790283203125, 0.0005259513854980469, 1.0371208190917969e-05, 0.001308441162109375, 0.0003876686096191406, 0.00035643577575683594, 0.0006437301635742188, 0.0005397796630859375, 0.0028057098388671875, 0.00032520294189453125, 0.0005688667297363281, 0.002857208251953125, 0.1357421875, 0.3505859375, 0.3056640625, 0.8642578125, 0.0027675628662109375, 4.9948692321777344e-05, 0.005462646484375, 0.0009765625, 0.0889892578125, 0.6708984375, 2.029296875, 0.1409912109375, 0.038818359375, 0.00010037422180175781, 0.158447265625, 0.0014142990112304688, 0.63623046875, 0.200927734375, 0.0482177734375, 0.9853515625, 0.7236328125], "tokens": [324, 320, 813, 301, 400, 434, 1974, 8342, 1742, 432, 322, 5045, 400, 436, 308, 410, 595, 280, 540, 474, 225, 35, 45, 595, 333, 2532, 45, 3311, 91, 27, 301, 528, 629, 12367, 280, 1650, 77, 91, 970, 528, 2064, 5564, 280, 281, 77, 476, 1674, 3643, 970, 528, 2064, 13915]}
{"line_number": 69, "line_type": "original", "code": "        int[] swap  = new int[order];", "entropy": 1.755859375, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [5.359375, 2.359375, 4.59375, 2.544921875, 4.31640625, 0.0007839202880859375, 0.02862548828125, 0.003940582275390625, 0.00736236572265625, 0.0115814208984375, 0.0806884765625], "tokens": [351, 629, 1178, 12947, 225, 280, 537, 629, 77, 1174, 970]}
{"line_number": 69, "line_type": "generated", "code": "\n                // update lower part of the matrix\n                for (int i = r + 1; i < order; ++i) {\n                    int ii = index[i];\n                    double cii = c[ii][ii];\n                    double cr = c[", "entropy": 0.350341796875, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [0.298095703125, 0.395263671875, 1.998046875, 2.26171875, 0.716796875, 0.58740234375, 0.349609375, 1.1181640625, 0.298095703125, 0.66650390625, 0.0021457672119140625, 0.0008301734924316406, 0.68359375, 0.0009775161743164062, 0.1488037109375, 0.180419921875, 0.0005970001220703125, 5.2809715270996094e-05, 0.001667022705078125, 0.0006184577941894531, 0.000499725341796875, 0.0010433197021484375, 0.00070953369140625, 0.0035762786865234375, 0.00037980079650878906, 0.0007367134094238281, 0.003398895263671875, 0.112060546875, 0.48291015625, 0.29736328125, 0.75439453125, 0.004558563232421875, 6.377696990966797e-05, 0.004329681396484375, 0.0012884140014648438, 0.0753173828125, 0.5859375, 2.421875, 0.101806640625, 0.0859375, 0.0245819091796875, 0.0001010894775390625, 0.0176239013671875, 0.0007457733154296875, 0.72509765625, 0.028900146484375, 0.05145263671875, 0.2401123046875, 2.232421875, 0.2279052734375, 0.01494598388671875, 0.00014495849609375], "tokens": [400, 434, 1974, 7216, 1742, 432, 322, 5045, 400, 436, 308, 410, 595, 280, 540, 474, 225, 35, 45, 595, 333, 2532, 45, 3311, 91, 27, 301, 528, 629, 12367, 280, 1650, 77, 91, 970, 528, 2064, 281, 3643, 280, 281, 77, 3643, 1674, 3643, 970, 528, 2064, 5564, 280, 281, 77]}
{"line_number": 70, "line_type": "original", "code": "        int[] index = new int[order];", "entropy": 1.544921875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [4.8359375, 2.796875, 5.203125, 1.671875, 0.7666015625, 0.1270751953125, 0.001529693603515625, 0.00452423095703125, 0.0225830078125, 0.0201416015625], "tokens": [351, 629, 1178, 1650, 280, 537, 629, 77, 1174, 970]}
{"line_number": 70, "line_type": "generated", "code": "\n                // compute the Cholesky factor of the (r + 1) x (r + 1) matrix\n                double s = FastMath.sqrt(c[ir][ir] - FastMath.pow(c[swap[r]], ", "entropy": 0.525390625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.26171875, 0.41357421875, 1.63671875, 1.1728515625, 2.6953125, 6.747245788574219e-05, 0.0010766983032226562, 2.06640625, 1.814453125, 0.397705078125, 2.4140625, 0.1993408203125, 0.962890625, 0.0059967041015625, 0.0007181167602539062, 0.41259765625, 0.36376953125, 0.156494140625, 0.0009822845458984375, 0.0026397705078125, 0.0005679130554199219, 3.6835670471191406e-05, 0.0012912750244140625, 1.5390625, 0.501953125, 1.5703125, 2.291015625, 0.09576416015625, 0.5302734375, 1.7881393432617188e-05, 3.7670135498046875e-05, 0.00118255615234375, 0.0025424957275390625, 0.01468658447265625, 0.0002663135528564453, 0.055816650390625, 0.00019538402557373047, 0.0011091232299804688, 0.0126495361328125, 0.0006818771362304688, 1.365234375, 9.441375732421875e-05, 7.152557373046875e-05, 1.4658203125, 0.0016965866088867188, 0.10986328125, 0.0053253173828125, 1.6708984375, 0.00974273681640625, 0.0501708984375, 1.0029296875, 0.041351318359375], "tokens": [400, 434, 7596, 322, 32186, 1882, 7643, 10365, 432, 322, 308, 100, 474, 225, 35, 27, 816, 308, 100, 474, 225, 35, 27, 5045, 400, 2064, 309, 280, 15938, 5717, 32, 8663, 26, 85, 77, 476, 1674, 476, 79, 429, 15938, 5717, 32, 7527, 26, 85, 77, 10415, 77, 100, 6137, 225]}
{"line_number": 71, "line_type": "original", "code": "        for (int i = 0; i < order; ++i) {", "entropy": 0.822265625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [8.0390625, 2.076171875, 0.00586700439453125, 0.006305694580078125, 0.53759765625, 0.0026760101318359375, 0.6513671875, 0.0027790069580078125, 0.0038852691650390625, 0.0024127960205078125, 0.0482177734375, 2.275390625, 0.01560211181640625, 0.0283966064453125, 0.0006403923034667969, 0.006744384765625, 0.270263671875], "tokens": [351, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 2532, 45, 3311, 91, 27, 301]}
{"line_number": 71, "line_type": "generated", "code": "\n                for (int i = r + 1; i < order; ++i) {\n                    int ii = index[i];\n                    double cr = c[ir][ii];\n                    double ci = 0;\n                    for (int j = r;", "entropy": 0.291748046875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [1.1533203125, 2.0625, 0.0037899017333984375, 0.0024394989013671875, 0.62109375, 0.00206756591796875, 0.68017578125, 0.257568359375, 0.0009031295776367188, 8.690357208251953e-05, 0.0019779205322265625, 0.0010662078857421875, 0.0007085800170898438, 0.0027904510498046875, 0.0011205673217773438, 0.00799560546875, 0.0005664825439453125, 0.0011548995971679688, 0.008880615234375, 0.08306884765625, 0.62060546875, 0.1676025390625, 0.7421875, 0.004627227783203125, 5.328655242919922e-05, 0.004993438720703125, 0.00229644775390625, 0.10302734375, 0.426513671875, 2.525390625, 0.152587890625, 0.06585693359375, 0.00022470951080322266, 0.273193359375, 0.0019330978393554688, 0.29638671875, 0.1458740234375, 0.04571533203125, 1.05078125, 0.54345703125, 0.005092620849609375, 1.5107421875, 0.007312774658203125, 0.5888671875, 0.112060546875, 0.238525390625, 0.0011224746704101562, 0.001651763916015625, 0.27734375, 0.0015001296997070312, 0.31005859375, 0.049072265625], "tokens": [400, 436, 308, 410, 595, 280, 540, 474, 225, 35, 45, 595, 333, 2532, 45, 3311, 91, 27, 301, 528, 629, 12367, 280, 1650, 77, 91, 970, 528, 2064, 5564, 280, 281, 77, 476, 1674, 3643, 970, 528, 2064, 13915, 280, 225, 34, 45, 528, 436, 308, 410, 594, 280, 540, 45]}
{"line_number": 72, "line_type": "original", "code": "            index[i] = i;", "entropy": 2.375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [5.37890625, 4.6953125, 0.01412200927734375, 6.43359375, 0.036834716796875, 0.10430908203125, 2.291015625, 0.050750732421875], "tokens": [1468, 1650, 77, 91, 79, 280, 595, 45]}
{"line_number": 72, "line_type": "generated", "code": "\n\n                // update the rank\n                ++r;\n\n                // update the remaining part of the matrix\n                for (int i = r; i < order; ++i) {\n                    int ii = index[i];\n                    double[] bi = b[ii];\n                   ", "entropy": 0.41552734375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.91796875, 0.3798828125, 0.98193359375, 0.69921875, 2.576171875, 0.4619140625, 0.2408447265625, 0.00547027587890625, 0.00014829635620117188, 0.79736328125, 0.271240234375, 1.7861328125, 0.264404296875, 2.322265625, 0.53759765625, 0.060821533203125, 0.0167236328125, 0.248779296875, 0.1734619140625, 0.39697265625, 0.003749847412109375, 0.0070648193359375, 0.52294921875, 0.0013036727905273438, 0.030303955078125, 0.01239776611328125, 0.0004730224609375, 0.00025916099548339844, 0.0006709098815917969, 0.0010461807250976562, 0.00323486328125, 1.823902130126953e-05, 0.0008482933044433594, 0.0048675537109375, 0.292724609375, 1.3896484375, 0.206298828125, 0.59912109375, 0.002162933349609375, 4.8995018005371094e-05, 0.0007748603820800781, 0.0010499954223632812, 0.279052734375, 0.91259765625, 2.712890625, 0.8232421875, 0.1055908203125, 0.0217742919921875, 0.00021255016326904297, 0.404052734375, 0.00418853759765625, 0.1331787109375], "tokens": [2110, 434, 1974, 322, 11263, 400, 3311, 100, 45, 2110, 434, 1974, 322, 11459, 1742, 432, 322, 5045, 400, 436, 308, 410, 595, 280, 540, 45, 595, 333, 2532, 45, 3311, 91, 27, 301, 528, 629, 12367, 280, 1650, 77, 91, 970, 528, 2064, 1178, 10789, 280, 323, 77, 3643, 970, 528]}
{"line_number": 75, "line_type": "original", "code": "        int r = 0;", "entropy": 3.685546875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [5.73828125, 5.71875, 7.50390625, 2.947265625, 3.3984375, 0.27734375, 0.20751953125], "tokens": [351, 629, 540, 280, 225, 34, 45]}
{"line_number": 75, "line_type": "generated", "code": "\n                    final int ii = index[i];\n                    b[i][r] = inverse * c[ii][ir];\n                    for (int j = r + 1; j < order; ++j) {\n                        b[i][j] =", "entropy": 0.191650390625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.10345458984375, 1.9423828125, 0.1434326171875, 0.1793212890625, 0.58349609375, 0.01409912109375, 0.00014102458953857422, 0.00615692138671875, 0.0026493072509765625, 0.11138916015625, 1.5166015625, 0.000255584716796875, 0.5576171875, 0.004543304443359375, 0.0237274169921875, 0.0012950897216796875, 0.0428466796875, 1.546875, 0.007656097412109375, 0.0307159423828125, 0.00020205974578857422, 0.08441162109375, 4.088878631591797e-05, 0.00426483154296875, 0.0249786376953125, 0.18408203125, 0.64111328125, 0.0011119842529296875, 0.0011701583862304688, 0.06396484375, 0.0016164779663085938, 0.1942138671875, 0.122802734375, 0.0004596710205078125, 3.8623809814453125e-05, 0.001834869384765625, 0.005092620849609375, 0.275146484375, 0.0704345703125, 0.0014553070068359375, 0.001560211181640625, 0.0008864402770996094, 0.00122833251953125, 0.002666473388671875, 0.43115234375, 0.787109375, 0.00011587142944335938, 0.05914306640625, 9.548664093017578e-05, 0.0005335807800292969, 0.0001348257064819336, 0.186767578125], "tokens": [528, 1158, 629, 12367, 280, 1650, 77, 91, 970, 528, 323, 77, 91, 1674, 100, 79, 280, 19385, 319, 281, 77, 3643, 1674, 476, 970, 528, 436, 308, 410, 594, 280, 540, 474, 225, 35, 45, 594, 333, 2532, 45, 3311, 92, 27, 301, 715, 323, 77, 91, 1674, 92, 79, 280]}
{"line_number": 76, "line_type": "original", "code": "        for (boolean loop = true; loop;) {", "entropy": 2.466796875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [4.828125, 4.05859375, 0.0084686279296875, 13.3046875, 3.685546875, 0.36376953125, 0.08038330078125, 0.134033203125, 0.07952880859375, 0.4619140625, 0.1337890625], "tokens": [351, 436, 308, 4398, 5258, 280, 861, 45, 5258, 21288, 301]}
{"line_number": 76, "line_type": "generated", "code": "\n                    b[ii][r] = c[ii][ir] * inverse;\n                }\n                for (int j = r + 1; j < order; ++j) {\n                    final int jj = index[j];", "entropy": 0.197021484375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.765625, 1.01953125, 0.00017321109771728516, 1.0986328125, 0.00153350830078125, 0.03515625, 0.0005674362182617188, 0.026214599609375, 0.41748046875, 0.0005803108215332031, 0.0222015380859375, 4.8279762268066406e-05, 0.01074981689453125, 0.06292724609375, 0.004901885986328125, 0.0013904571533203125, 0.0025997161865234375, 0.8359375, 0.0009775161743164062, 1.814453125, 1.44921875, 0.000980377197265625, 0.00060272216796875, 0.7197265625, 0.00136566162109375, 0.078125, 0.0869140625, 0.00023996829986572266, 0.0003147125244140625, 0.0008435249328613281, 0.0007939338684082031, 0.00286865234375, 0.001621246337890625, 0.0007166862487792969, 0.00044727325439453125, 0.0007343292236328125, 0.0007748603820800781, 0.0021305084228515625, 0.06097412109375, 0.26806640625, 0.14306640625, 0.1964111328125, 0.1126708984375, 0.0012912750244140625, 3.7550926208496094e-05, 0.0012197494506835938, 0.00027871131896972656], "tokens": [528, 323, 77, 3643, 1674, 100, 79, 280, 281, 77, 3643, 1674, 476, 79, 319, 19385, 45, 400, 320, 400, 436, 308, 410, 594, 280, 540, 474, 225, 35, 45, 594, 333, 2532, 45, 3311, 92, 27, 301, 528, 1158, 629, 25062, 280, 1650, 77, 92, 970]}
{"line_number": 79, "line_type": "original", "code": "            swap[r] = r;", "entropy": 2.9296875, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [6.3203125, 12.875, 0.034332275390625, 1.919921875, 0.0234527587890625, 0.036590576171875, 2.060546875, 0.1678466796875], "tokens": [1468, 12947, 77, 100, 79, 280, 540, 45]}
{"line_number": 79, "line_type": "generated", "code": "\n                }\n\n                ++r;\n            }\n        }\n\n        // build the root matrix\n        final double[][] rootData = new double[order][order];\n        for (int i = 0; i < order; ++i) {\n            final int ii =", "entropy": 0.2474365234375, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [0.7255859375, 0.0011186599731445312, 0.25927734375, 1.001953125, 0.003475189208984375, 0.00016748905181884766, 0.60302734375, 0.0002084970474243164, 0.386474609375, 0.00015997886657714844, 0.05792236328125, 0.68212890625, 1.2607421875, 0.400146484375, 1.0341796875, 0.40087890625, 0.440673828125, 1.283203125, 0.75927734375, 0.109619140625, 1.1865234375, 0.1439208984375, 0.0170440673828125, 0.0526123046875, 0.0008692741394042969, 0.0002968311309814453, 0.0518798828125, 0.0063018798828125, 0.0242767333984375, 0.007598876953125, 0.03424072265625, 0.10791015625, 0.0009551048278808594, 0.004795074462890625, 0.061187744140625, 0.0023555755615234375, 0.0305633544921875, 0.0016145706176757812, 0.0022525787353515625, 0.0013208389282226562, 0.005817413330078125, 0.144287109375, 0.002666473388671875, 0.0178680419921875, 0.0005240440368652344, 0.0009021759033203125, 0.0008840560913085938, 0.0206756591796875, 1.404296875, 0.0245208740234375, 0.059173583984375, 0.03680419921875], "tokens": [400, 320, 2110, 3311, 100, 45, 324, 320, 291, 320, 584, 434, 1968, 322, 3051, 5045, 291, 1158, 2064, 11336, 3051, 750, 280, 537, 2064, 77, 1174, 1674, 1174, 970, 291, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 2532, 45, 3311, 91, 27, 301, 324, 1158, 629, 12367, 280]}
{"line_number": 80, "line_type": "original", "code": "            for (int i = r + 1; i < order; ++i) {", "entropy": 1.052734375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [9.4296875, 4.0625, 0.00792694091796875, 0.00414276123046875, 4.50390625, 0.028900146484375, 0.83544921875, 0.9130859375, 0.0016889572143554688, 0.024749755859375, 0.00740814208984375, 0.0103302001953125, 0.00748443603515625, 0.07781982421875, 0.03826904296875, 0.007354736328125, 0.000705718994140625, 0.0102386474609375, 0.02154541015625], "tokens": [1468, 436, 308, 410, 595, 280, 540, 474, 225, 35, 45, 595, 333, 2532, 45, 3311, 91, 27, 301]}
{"line_number": 80, "line_type": "generated", "code": "\n                        final int ij = index[j];\n                        c[ii][ij] -= e * b[i][j];\n                        c[ij][ii] = c[ii][ij];\n                    }\n                }\n\n                // go to next row\n                ++r", "entropy": 0.238037109375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.0391845703125, 1.37890625, 0.1807861328125, 0.9345703125, 0.11529541015625, 0.1005859375, 0.0007004737854003906, 0.11895751953125, 0.0025577545166015625, 0.05596923828125, 1.021484375, 0.00014221668243408203, 0.2181396484375, 0.0004069805145263672, 0.02728271484375, 0.00025272369384765625, 0.0311737060546875, 0.13037109375, 0.0008234977722167969, 0.76318359375, 4.7206878662109375e-05, 0.59130859375, 9.608268737792969e-05, 0.0003857612609863281, 0.019439697265625, 0.6533203125, 0.10089111328125, 2.288818359375e-05, 0.0027561187744140625, 3.5643577575683594e-05, 0.06304931640625, 6.914138793945312e-05, 1.23046875, 0.022735595703125, 0.00010836124420166016, 0.0036945343017578125, 9.179115295410156e-06, 5.9604644775390625e-05, 0.0013151168823242188, 0.377685546875, 0.0018739700317382812, 0.17578125, 0.0002467632293701172, 0.289306640625, 0.69677734375, 1.857421875, 0.034759521484375, 0.12890625, 0.84765625, 0.060333251953125, 0.095947265625, 0.001453399658203125], "tokens": [715, 1158, 629, 45270, 280, 1650, 77, 92, 970, 715, 281, 77, 3643, 1674, 5793, 79, 5912, 484, 319, 323, 77, 91, 1674, 92, 970, 715, 281, 77, 5793, 1674, 3643, 79, 280, 281, 77, 3643, 1674, 5793, 970, 528, 320, 400, 320, 2110, 434, 1983, 372, 2354, 2698, 400, 3311, 100]}
{"line_number": 81, "line_type": "original", "code": "                int ii  = index[i];", "entropy": 2.3515625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [8.515625, 4.77734375, 2.923828125, 4.80078125, 0.0021572113037109375, 0.10205078125, 0.0019588470458984375, 0.0148162841796875, 0.01340484619140625], "tokens": [2071, 629, 12367, 225, 280, 1650, 77, 91, 970]}
{"line_number": 81, "line_type": "generated", "code": "\n                        c[ii][ij] -= e * c[ij][ir];\n                    }\n                }\n\n                // prepare next iteration\n                ++r;\n                loop = r < order;\n            }\n        }\n\n        // build the root matrix\n        root = MatrixUtils.", "entropy": 0.265869140625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.0304718017578125, 0.388671875, 0.00013518333435058594, 0.51611328125, 0.00031828880310058594, 0.01544189453125, 0.00020253658294677734, 0.03411865234375, 0.1202392578125, 0.0006871223449707031, 0.45556640625, 4.0531158447265625e-05, 0.46533203125, 3.8623809814453125e-05, 0.1201171875, 0.00469207763671875, 0.395263671875, 0.000293731689453125, 0.12353515625, 9.34600830078125e-05, 0.2122802734375, 0.65869140625, 2.16796875, 0.63330078125, 0.258544921875, 0.03973388671875, 0.13623046875, 0.0036602020263671875, 4.7326087951660156e-05, 0.84716796875, 0.30029296875, 0.0087890625, 0.65576171875, 0.0192718505859375, 0.0008702278137207031, 0.00983428955078125, 0.352783203125, 5.316734313964844e-05, 0.2462158203125, 4.863739013671875e-05, 0.034027099609375, 0.5576171875, 1.0341796875, 0.43408203125, 0.8212890625, 0.361083984375, 0.232177734375, 0.841796875, 0.043731689453125, 0.2371826171875, 6.842613220214844e-05, 0.0002448558807373047], "tokens": [715, 281, 77, 3643, 1674, 5793, 79, 5912, 484, 319, 281, 77, 5793, 1674, 476, 970, 528, 320, 400, 320, 2110, 434, 11656, 2354, 13330, 400, 3311, 100, 45, 400, 5258, 280, 540, 333, 2532, 45, 324, 320, 291, 320, 584, 434, 1968, 322, 3051, 5045, 291, 3051, 280, 9320, 2755, 32]}
{"line_number": 82, "line_type": "original", "code": "                int isi = index[swap[i]];", "entropy": 2.244140625, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [7.96484375, 7.29296875, 4.60546875, 1.4072265625, 0.05816650390625, 0.2998046875, 0.0014219284057617188, 2.771484375, 0.0014591217041015625, 0.270751953125, 0.00868988037109375], "tokens": [2071, 629, 438, 91, 280, 1650, 77, 10415, 77, 91, 19730]}
{"line_number": 82, "line_type": "generated", "code": "\n                        c[ij][ij] -= f * f;\n                        c[ii][ij] = f;\n                    }\n                }\n\n                // go to next column\n                ++r;\n            }\n        }\n\n        // build the root matrix\n        root = MatrixUtils.", "entropy": 0.27978515625, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [0.033966064453125, 0.2098388671875, 6.151199340820312e-05, 0.54248046875, 0.0007276535034179688, 0.335205078125, 0.00017642974853515625, 0.02557373046875, 0.1407470703125, 0.0018939971923828125, 0.0153350830078125, 0.0021820068359375, 0.55517578125, 0.10528564453125, 1.2636184692382812e-05, 0.364013671875, 0.0012121200561523438, 0.005023956298828125, 0.00028967857360839844, 0.09246826171875, 0.3779296875, 0.006595611572265625, 0.464111328125, 0.00016558170318603516, 0.1517333984375, 0.00010704994201660156, 0.235595703125, 0.5966796875, 2.107421875, 0.037994384765625, 0.21875, 2.001953125, 0.0521240234375, 0.1148681640625, 0.0025634765625, 4.684925079345703e-05, 0.450927734375, 9.763240814208984e-05, 0.318603515625, 5.9485435485839844e-05, 0.035003662109375, 0.439697265625, 1.263671875, 0.56103515625, 0.72216796875, 0.37744140625, 0.248779296875, 0.8486328125, 0.0643310546875, 0.427001953125, 6.794929504394531e-05, 0.0003383159637451172], "tokens": [715, 281, 77, 5793, 1674, 5793, 79, 5912, 296, 319, 296, 45, 715, 281, 77, 3643, 1674, 5793, 79, 280, 296, 45, 528, 320, 400, 320, 2110, 434, 1983, 372, 2354, 2623, 400, 3311, 100, 45, 324, 320, 291, 320, 584, 434, 1968, 322, 3051, 5045, 291, 3051, 280, 9320, 2755, 32]}
{"line_number": 83, "line_type": "original", "code": "                if (c[ii][ii] > c[isi][isi]) {", "entropy": 2.318359375, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [6.828125, 4.515625, 0.056365966796875, 3.029296875, 0.004222869873046875, 3.33984375, 0.0005412101745605469, 2.515625, 0.0080413818359375, 2.537109375, 2.900390625, 0.0008759498596191406, 13.5234375, 0.000469207763671875, 0.0258026123046875, 0.09130859375, 0.03729248046875], "tokens": [2071, 415, 308, 85, 77, 3643, 1674, 3643, 79, 848, 281, 77, 11518, 1674, 11518, 1130, 301]}
{"line_number": 83, "line_type": "generated", "code": "\n                    }\n                }\n\n                // next iteration\n                ++r;\n            }\n        }\n\n        // build the root matrix\n        final RealMatrix bMatrix = MatrixUtils.createRealMatrix(b);\n        final RealMatrix identity = MatrixUtils.createRealIdentityMatrix(", "entropy": 0.3505859375, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [1.3486328125, 0.006134033203125, 0.1666259765625, 0.0014390945434570312, 0.35498046875, 0.59375, 2.26953125, 0.72900390625, 0.06500244140625, 0.09161376953125, 0.0021457672119140625, 7.462501525878906e-05, 0.329833984375, 0.0003821849822998047, 0.2279052734375, 0.0004525184631347656, 0.070556640625, 0.380615234375, 1.103515625, 0.3994140625, 0.69677734375, 0.36279296875, 0.2301025390625, 1.3515625, 0.9619140625, 0.0006651878356933594, 1.4345703125, 0.63427734375, 0.01071929931640625, 0.276611328125, 6.008148193359375e-05, 0.0004267692565917969, 6.198883056640625e-05, 0.0005388259887695312, 0.0006499290466308594, 0.0005955696105957031, 0.04473876953125, 0.03411865234375, 0.049896240234375, 1.3212890625, 0.53759765625, 0.0389404296875, 1.873046875, 0.129638671875, 0.0869140625, 1.823902130126953e-05, 0.00013303756713867188, 0.0008411407470703125, 0.002178192138671875, 0.016448974609375, 0.0007467269897460938, 0.00019025802612304688], "tokens": [528, 320, 400, 320, 2110, 434, 2354, 13330, 400, 3311, 100, 45, 324, 320, 291, 320, 584, 434, 1968, 322, 3051, 5045, 291, 1158, 11443, 4161, 323, 4161, 280, 9320, 2755, 32, 1297, 6877, 4161, 26, 84, 293, 291, 1158, 11443, 4161, 10625, 280, 9320, 2755, 32, 1297, 6877, 6729, 4161, 26]}
{"line_number": 84, "line_type": "original", "code": "                    swap[r] = i;", "entropy": 2.716796875, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [3.66015625, 11.3671875, 0.0592041015625, 4.453125, 0.10546875, 0.114013671875, 1.9150390625, 0.0672607421875], "tokens": [4696, 12947, 77, 100, 79, 280, 595, 45]}
{"line_number": 84, "line_type": "generated", "code": "\n                    }\n                }\n\n                // increment the rank\n                ++r;\n            }\n        }\n\n        // build the root matrix\n        root = MatrixUtils.createRealMatrix(b);\n\n        // set the rank\n        rank = r;\n    }\n\n    /**\n     * Get", "entropy": 0.271240234375, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [0.1290283203125, 0.00037741661071777344, 0.2249755859375, 0.0002751350402832031, 0.27099609375, 0.58642578125, 1.4833984375, 0.75927734375, 0.111083984375, 0.453857421875, 0.0601806640625, 0.004665374755859375, 0.0001552104949951172, 0.489990234375, 0.0006113052368164062, 0.303955078125, 0.00013208389282226562, 0.043731689453125, 0.380126953125, 0.9423828125, 0.1881103515625, 0.673828125, 0.400146484375, 0.2020263671875, 0.8544921875, 0.04217529296875, 0.479736328125, 8.07046890258789e-05, 0.0003612041473388672, 0.00035190582275390625, 0.0005588531494140625, 0.0048065185546875, 0.0009160041809082031, 0.6328125, 0.345458984375, 0.7861328125, 0.0858154296875, 1.3212890625, 0.125732421875, 0.07684326171875, 0.1873779296875, 0.099609375, 0.002132415771484375, 0.109375, 0.00879669189453125, 0.364013671875, 0.0003116130828857422, 0.1737060546875, 0.013916015625, 0.02349853515625, 2.0265579223632812e-05, 0.6494140625], "tokens": [528, 320, 400, 320, 2110, 434, 11885, 322, 11263, 400, 3311, 100, 45, 324, 320, 291, 320, 584, 434, 1968, 322, 3051, 5045, 291, 3051, 280, 9320, 2755, 32, 1297, 6877, 4161, 26, 84, 293, 584, 434, 739, 322, 11263, 291, 11263, 280, 540, 45, 284, 320, 446, 1022, 275, 319, 1390]}
{"line_number": 90, "line_type": "original", "code": "            if (swap[r] != r) {", "entropy": 1.4716796875, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [6.98046875, 2.685546875, 0.29443359375, 4.9453125, 0.1138916015625, 0.1759033203125, 0.07794189453125, 0.822265625, 0.0435791015625, 0.0252685546875, 0.028594970703125], "tokens": [1468, 415, 308, 10415, 77, 100, 79, 863, 540, 27, 301]}
{"line_number": 90, "line_type": "generated", "code": "\n        }\n\n        // build the root matrix\n        root = MatrixUtils.createRealMatrix(order, order);\n        for (int i = 0; i < order; ++i) {\n            int ii = index[i];\n            root.setEntry", "entropy": 0.20361328125, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [0.7861328125, 0.0804443359375, 0.0736083984375, 0.488037109375, 1.28515625, 0.5126953125, 0.7216796875, 0.402587890625, 0.24072265625, 0.9921875, 0.03753662109375, 0.56103515625, 0.00010228157043457031, 0.0004940032958984375, 0.0003647804260253906, 0.0006256103515625, 0.00893402099609375, 0.0009179115295410156, 0.64404296875, 0.0240631103515625, 0.15380859375, 0.01300048828125, 0.039215087890625, 0.07525634765625, 0.001224517822265625, 0.0029754638671875, 0.032073974609375, 0.0014362335205078125, 0.029510498046875, 0.0009737014770507812, 0.002197265625, 0.0006966590881347656, 0.0036258697509765625, 0.060546875, 0.0026988983154296875, 0.017822265625, 0.0004382133483886719, 0.0010919570922851562, 0.001407623291015625, 0.01526641845703125, 1.9755859375, 0.095703125, 0.0576171875, 0.005954742431640625, 5.0902366638183594e-05, 0.0023174285888671875, 0.00034427642822265625, 0.005992889404296875, 1.09375, 0.00136566162109375, 0.0105438232421875, 0.019989013671875], "tokens": [291, 320, 584, 434, 1968, 322, 3051, 5045, 291, 3051, 280, 9320, 2755, 32, 1297, 6877, 4161, 26, 1174, 30, 2532, 293, 291, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 2532, 45, 3311, 91, 27, 301, 324, 629, 12367, 280, 1650, 77, 91, 970, 324, 3051, 32, 470, 2711]}
{"line_number": 91, "line_type": "original", "code": "                int tmp = index[r];", "entropy": 1.80078125, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [7.81640625, 4.5390625, 1.1533203125, 0.16259765625, 0.1395263671875, 0.00214385986328125, 0.2493896484375, 0.34423828125], "tokens": [2071, 629, 3691, 280, 1650, 77, 100, 970]}
{"line_number": 91, "line_type": "generated", "code": "\n        // build the permutated Cholesky root matrix\n        root = MatrixUtils.createRealMatrix(order, order);\n        for (int i = 0; i < order; ++i) {\n            for (int j = 0;", "entropy": 0.214599609375, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [0.392333984375, 0.603515625, 1.6328125, 0.450927734375, 1.6318359375, 0.0718994140625, 0.0028839111328125, 0.417236328125, 3.552436828613281e-05, 0.0003364086151123047, 0.030120849609375, 1.748046875, 0.1973876953125, 0.84326171875, 0.03424072265625, 0.6015625, 0.00011026859283447266, 0.000701904296875, 0.0005731582641601562, 0.0005431175231933594, 0.01103973388671875, 0.001251220703125, 0.31494140625, 0.015960693359375, 0.1865234375, 0.017669677734375, 0.0523681640625, 0.08013916015625, 0.00118255615234375, 0.004730224609375, 0.033111572265625, 0.001922607421875, 0.034515380859375, 0.0006127357482910156, 0.002025604248046875, 0.0007905960083007812, 0.0029277801513671875, 0.058868408203125, 0.0021190643310546875, 0.01253509521484375, 0.0005106925964355469, 0.0010099411010742188, 0.0011444091796875, 0.0186920166015625, 1.3759765625, 0.00046896934509277344, 0.00032782554626464844, 0.01085662841796875, 0.0005440711975097656, 0.244873046875, 0.00016772747039794922, 0.004291534423828125], "tokens": [291, 434, 1968, 322, 1292, 2278, 733, 32186, 1882, 7643, 3051, 5045, 291, 3051, 280, 9320, 2755, 32, 1297, 6877, 4161, 26, 1174, 30, 2532, 293, 291, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 2532, 45, 3311, 91, 27, 301, 324, 436, 308, 410, 594, 280, 225, 34, 45]}
{"line_number": 92, "line_type": "original", "code": "                index[r] = index[swap[r]];", "entropy": 1.2255859375, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [7.20703125, 3.71484375, 0.279052734375, 1.2666015625, 0.052154541015625, 0.03973388671875, 0.226318359375, 0.00101470947265625, 1.8916015625, 0.0009570121765136719, 0.006671905517578125, 0.0278167724609375], "tokens": [2071, 1650, 77, 100, 79, 280, 1650, 77, 10415, 77, 100, 19730]}
{"line_number": 92, "line_type": "generated", "code": "\n        // copy the result in a matrix\n        final double[][] a = new double[order][order];\n        for (int i = 0; i < order; ++i) {\n            for (int j = 0; j < order; ++", "entropy": 0.38623046875, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [0.22412109375, 0.56884765625, 2.435546875, 0.8603515625, 2.326171875, 2.001953125, 1.236328125, 1.994140625, 0.67822265625, 1.6337890625, 0.55224609375, 0.2314453125, 2.416015625, 0.06646728515625, 0.08660888671875, 0.001125335693359375, 0.00022494792938232422, 0.0848388671875, 0.0158233642578125, 0.02276611328125, 0.0231475830078125, 0.043975830078125, 0.0716552734375, 0.0016565322875976562, 0.00229644775390625, 0.0294036865234375, 0.0012216567993164062, 0.0419921875, 0.00208282470703125, 0.0019016265869140625, 0.0013408660888671875, 0.00449371337890625, 0.13232421875, 0.0022678375244140625, 0.009765625, 0.0004246234893798828, 0.0009202957153320312, 0.0007781982421875, 0.01247406005859375, 0.85986328125, 0.00037479400634765625, 0.00016045570373535156, 0.004199981689453125, 0.0003757476806640625, 0.1890869140625, 0.0001285076141357422, 0.002227783203125, 0.001338958740234375, 0.486328125, 0.7041015625, 0.005344390869140625, 0.0005002021789550781], "tokens": [291, 434, 1933, 322, 1056, 328, 312, 5045, 291, 1158, 2064, 11336, 312, 280, 537, 2064, 77, 1174, 1674, 1174, 970, 291, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 2532, 45, 3311, 91, 27, 301, 324, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 2532, 45, 3311]}
{"line_number": 93, "line_type": "original", "code": "                index[swap[r]] = tmp;", "entropy": 2.50390625, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [7.83203125, 5.36328125, 0.5029296875, 4.51953125, 0.033477783203125, 0.90771484375, 0.482177734375, 0.0963134765625, 5.27734375, 0.03839111328125], "tokens": [2071, 1650, 77, 10415, 77, 100, 3212, 280, 3691, 45]}
{"line_number": 93, "line_type": "generated", "code": "\n        for (int i = 0; i < order; ++i) {\n            for (int j = 0; j < i; ++j) {\n                b[i][j] = 0.0;\n            }\n        }\n       ", "entropy": 0.1785888671875, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [0.35888671875, 1.98828125, 0.00943756103515625, 0.0137481689453125, 0.0758056640625, 0.0027713775634765625, 0.1842041015625, 0.0220184326171875, 0.003932952880859375, 0.0016527175903320312, 0.004688262939453125, 0.376708984375, 0.0119476318359375, 0.016876220703125, 0.0008196830749511719, 0.0015497207641601562, 0.0016002655029296875, 0.03436279296875, 0.9697265625, 0.0009579658508300781, 0.0004477500915527344, 0.0124664306640625, 0.0006117820739746094, 0.30908203125, 0.00072479248046875, 0.0006136894226074219, 0.0024204254150390625, 0.06060791015625, 0.5986328125, 0.0177764892578125, 0.004150390625, 0.0006017684936523438, 0.0013055801391601562, 0.000946044921875, 0.00836944580078125, 0.2327880859375, 5.7816505432128906e-05, 0.1904296875, 0.0001659393310546875, 0.0006923675537109375, 0.00015044212341308594, 0.0304412841796875, 0.5029296875, 0.0019474029541015625, 1.529296875, 0.004184722900390625, 0.0081939697265625, 0.0215911865234375, 0.00023889541625976562, 0.177001953125, 0.00113677978515625, 1.486328125], "tokens": [291, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 2532, 45, 3311, 91, 27, 301, 324, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 595, 45, 3311, 92, 27, 301, 400, 323, 77, 91, 1674, 92, 79, 280, 225, 34, 32, 34, 45, 324, 320, 291, 320, 291]}
{"line_number": 97, "line_type": "original", "code": "            int ir = index[r];", "entropy": 2.564453125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [4.546875, 5.55859375, 4.703125, 0.1075439453125, 0.022064208984375, 0.0005054473876953125, 5.46484375, 0.119384765625], "tokens": [1468, 629, 7683, 280, 1650, 77, 100, 970]}
{"line_number": 97, "line_type": "generated", "code": "\n                root.setEntry(i, j, b[i][j]);\n            }\n        }\n    }\n\n    /**\n     * Get the root matrix.\n     *\n     * @return Root matrix.\n     */\n    public RealMatrix getRoot() {\n        return", "entropy": 0.136962890625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.11065673828125, 0.1766357421875, 0.0027256011962890625, 0.0287933349609375, 0.0003428459167480469, 0.0013027191162109375, 0.0211029052734375, 0.0007038116455078125, 0.01442718505859375, 0.0007596015930175781, 0.09307861328125, 0.0007939338684082031, 0.149658203125, 0.0022830963134765625, 0.07000732421875, 0.03521728515625, 0.18505859375, 7.903575897216797e-05, 0.01654052734375, 0.00018107891082763672, 0.599609375, 0.0024623870849609375, 0.208251953125, 0.056427001953125, 0.110595703125, 3.7670135498046875e-05, 0.64111328125, 0.06817626953125, 1.16796875, 0.5712890625, 0.5087890625, 0.03619384765625, 0.001922607421875, 0.462646484375, 0.0004944801330566406, 0.0288238525390625, 0.0013217926025390625, 1.03515625, 0.03857421875, 0.0863037109375, 0.006404876708984375, 0.06109619140625, 0.0021686553955078125, 0.0167083740234375, 0.005741119384765625, 3.337860107421875e-06, 0.00775909423828125, 0.0016088485717773438, 0.446044921875, 0.0038700103759765625, 0.0279388427734375, 0.005035400390625], "tokens": [400, 3051, 32, 470, 2711, 26, 91, 30, 594, 30, 323, 77, 91, 1674, 92, 1989, 324, 320, 291, 320, 284, 320, 446, 1022, 275, 319, 1390, 322, 3051, 5045, 32, 275, 319, 275, 319, 477, 601, 14741, 5045, 32, 275, 569, 284, 562, 11443, 4161, 622, 4058, 346, 301, 291, 442]}
