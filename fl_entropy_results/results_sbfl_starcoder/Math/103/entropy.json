{"line_number": 109, "line_type": "original", "code": "            return 0.5 * (1.0 + Erf.erf((x - mean) /", "entropy": 0.94921875, "is_bug_line": true, "sus_score": 0.35355339059327373, "per_token_entropy": [5.08984375, 3.205078125, 2.2265625, 0.477294921875, 0.304443359375, 1.2451171875, 0.369384765625, 0.72021484375, 1.2080078125, 0.4267578125, 0.018280029296875, 0.13134765625, 3.765625, 0.2474365234375, 0.0035305023193359375, 0.00211334228515625, 0.0059661865234375, 1.2705078125, 0.466552734375, 0.09820556640625, 0.36474609375, 0.049468994140625, 0.133544921875], "tokens": [1468, 442, 225, 34, 32, 39, 319, 308, 35, 32, 34, 474, 516, 4918, 32, 265, 88, 1162, 106, 429, 5651, 27, 517]}
{"line_number": 109, "line_type": "generated", "code": "\n    /**\n     * Access the domain value upper bound, based on <code>p</code>, used to\n     * bracket a CDF root.  This method is used by\n     * {@link #inverseCumulativeProbability(double)} to find critical values", "entropy": 0.04205322265625, "is_bug_line": true, "sus_score": 0.35355339059327373, "per_token_entropy": [1.6494140625, 0.315673828125, 0.08038330078125, 0.00039958953857421875, 0.0869140625, 0.0007839202880859375, 0.011688232421875, 0.006626129150390625, 0.003696441650390625, 6.0558319091796875e-05, 0.0006985664367675781, 1.4662742614746094e-05, 3.612041473388672e-05, 0.00014460086822509766, 8.249282836914062e-05, 0.0002884864807128906, 8.475780487060547e-05, 3.3020973205566406e-05, 1.4662742614746094e-05, 9.66787338256836e-05, 6.914138793945312e-05, 9.262561798095703e-05, 0.00461578369140625, 1.895427703857422e-05, 0.00012969970703125, 4.875659942626953e-05, 0.00022685527801513672, 1.1920928955078125e-06, 1.33514404296875e-05, 3.0040740966796875e-05, 0.006103515625, 0.0004940032958984375, 0.0003533363342285156, 9.09566879272461e-05, 0.00018596649169921875, 0.0001246929168701172, 0.00804901123046875, 6.771087646484375e-05, 0.0006461143493652344, 3.814697265625e-06, 0.0001569986343383789, 0.00021278858184814453, 3.7789344787597656e-05, 0.00016248226165771484, 7.891654968261719e-05, 0.00010967254638671875, 0.0003151893615722656, 0.00315093994140625, 0.00017392635345458984, 1.1920928955078125e-05, 0.002429962158203125, 0.0023822784423828125], "tokens": [284, 1022, 275, 319, 8258, 322, 5880, 786, 8342, 5085, 30, 4122, 544, 333, 687, 48, 98, 377, 687, 2717, 1654, 372, 275, 319, 33828, 312, 390, 3698, 3051, 32, 225, 1348, 1411, 438, 1654, 810, 275, 319, 3088, 1204, 588, 18139, 53, 10318, 35567, 26, 2627, 4370, 372, 2290, 18896, 2078]}
{"line_number": 50, "line_type": "original", "code": "        super();", "entropy": 4.47265625, "is_bug_line": false, "sus_score": 0.22360679774997896, "per_token_entropy": [2.431640625, 5.50390625, 5.48828125], "tokens": [351, 2599, 473]}
{"line_number": 50, "line_type": "generated", "code": "\n     * @return probability density\n     */\n    public double density(double x) {\n        double dev = x - mean;\n        return Math.exp(-0.5 * dev * dev / standardDeviation / standardDeviation) /\n               standardDeviation", "entropy": 0.3115234375, "is_bug_line": false, "sus_score": 0.22360679774997896, "per_token_entropy": [1.109375, 0.159423828125, 2.466796875, 0.7802734375, 1.0185546875, 0.0770263671875, 1.0087890625, 0.29541015625, 0.117919921875, 0.1888427734375, 0.005084991455078125, 0.6455078125, 0.0017271041870117188, 0.0155792236328125, 0.0026397705078125, 0.1356201171875, 0.0280609130859375, 0.345703125, 0.59619140625, 0.9716796875, 0.02911376953125, 0.1058349609375, 0.00749969482421875, 0.061431884765625, 0.024078369140625, 0.1114501953125, 0.358642578125, 0.16357421875, 0.0008349418640136719, 0.01024627685546875, 0.15869140625, 0.4892578125, 8.225440979003906e-06, 2.86102294921875e-06, 0.029510498046875, 0.2978515625, 0.0202789306640625, 0.0007171630859375, 0.0771484375, 0.1470947265625, 3.933906555175781e-06, 1.1920928955078125e-07, 1.0244140625, 0.01275634765625, 2.0265579223632812e-06, -0.0, 0.0302886962890625, 1.01171875, 1.7509765625, 0.310302734375, 1.6927719116210938e-05, 2.384185791015625e-07], "tokens": [275, 319, 477, 601, 16356, 19324, 275, 569, 284, 562, 2064, 19324, 26, 2627, 816, 27, 301, 291, 2064, 5684, 280, 816, 429, 5651, 45, 291, 442, 4175, 32, 2832, 3736, 34, 32, 39, 319, 5684, 319, 5684, 517, 6216, 685, 17029, 517, 6216, 685, 17029, 27, 517, 3083, 6216, 685, 17029]}
{"line_number": 39, "line_type": "original", "code": "    private double mean = 0;", "entropy": 1.5908203125, "is_bug_line": false, "sus_score": 0.22360679774997896, "per_token_entropy": [2.57421875, 5.8984375, 0.333740234375, 1.8642578125, 1.4482421875, 0.1650390625, 0.0093536376953125, 0.436279296875], "tokens": [264, 945, 2064, 5651, 280, 225, 34, 45]}
{"line_number": 39, "line_type": "generated", "code": "\n     * Computes the probability density function of this distribution.\n     *\n     * @param x the value at which the PDF is evaluated.\n     * @return the value of the probability density function at x.\n     * @since 2.0\n     */\n   ", "entropy": 0.30517578125, "is_bug_line": false, "sus_score": 0.22360679774997896, "per_token_entropy": [1.29296875, 0.30615234375, 1.634765625, 0.2421875, 0.4697265625, 0.0635986328125, 0.0487060546875, 0.9462890625, 0.73095703125, 0.01108551025390625, 0.1204833984375, 0.0687255859375, 0.058746337890625, 1.1865234375, 0.00032401084899902344, 0.0474853515625, 0.00814056396484375, 0.00112152099609375, 0.282958984375, 1.595703125, 0.0249481201171875, 8.380413055419922e-05, 0.0163421630859375, 0.501953125, 0.045013427734375, 0.08648681640625, 0.342041015625, 0.0145111083984375, 0.020751953125, 0.006748199462890625, 0.002414703369140625, 0.279296875, 0.0858154296875, 0.0011148452758789062, 0.54052734375, 0.405517578125, 0.001811981201171875, 0.0146331787109375, 0.003879547119140625, 0.306396484375, 0.16357421875, 0.050262451171875, 1.0458984375, 0.194580078125, 1.8603515625, 0.0159759521484375, 0.4072265625, 0.0002079010009765625, 0.130859375, 0.04583740234375, 0.0855712890625, 0.059112548828125], "tokens": [275, 319, 41932, 322, 16356, 19324, 667, 432, 458, 7433, 32, 275, 319, 275, 319, 477, 753, 816, 322, 786, 821, 1510, 322, 15341, 438, 22423, 32, 275, 319, 477, 601, 322, 786, 432, 322, 16356, 19324, 667, 821, 816, 32, 275, 319, 477, 8119, 225, 36, 32, 34, 275, 569, 284]}
{"line_number": 42, "line_type": "original", "code": "    private double standardDeviation = 1;", "entropy": 0.99609375, "is_bug_line": false, "sus_score": 0.22360679774997896, "per_token_entropy": [2.251953125, 5.390625, 0.319580078125, 0.3857421875, 0.007598876953125, 0.00011074542999267578, 0.365234375, 0.061859130859375, 0.150146484375, 1.029296875], "tokens": [264, 945, 2064, 6216, 685, 17029, 280, 225, 35, 45]}
{"line_number": 42, "line_type": "generated", "code": "\n     * Computes the probability density function of this distribution.\n     * @param x the point at which the PDF is evaluated\n     * @return the value of the PDF at <code>x</code>\n     */\n    public double probabilityDensity(double x)", "entropy": 0.266357421875, "is_bug_line": false, "sus_score": 0.22360679774997896, "per_token_entropy": [1.2744140625, 0.29443359375, 1.509765625, 0.24658203125, 0.443359375, 0.06158447265625, 0.05609130859375, 0.9365234375, 0.74609375, 0.01142120361328125, 0.103271484375, 0.0709228515625, 0.056732177734375, 0.65380859375, 0.0618896484375, 0.00086212158203125, 0.6142578125, 0.285888671875, 0.00136566162109375, 0.00019407272338867188, 0.0034694671630859375, 1.11328125, 0.029022216796875, 0.031646728515625, 0.2357177734375, 0.031280517578125, 0.00749969482421875, 0.005329132080078125, 0.1756591796875, 0.025115966796875, 0.004974365234375, 0.60986328125, 1.1455078125, 0.060455322265625, 0.454345703125, 0.01071929931640625, 5.614757537841797e-05, 0.0002161264419555664, 9.85860824584961e-05, 0.0013370513916015625, 0.043853759765625, 0.037750244140625, 0.384765625, 0.07037353515625, 0.142578125, 0.005504608154296875, 1.1005859375, 0.5947265625, 0.00714111328125, 0.025543212890625, 0.0001500844955444336, 0.0673828125], "tokens": [275, 319, 41932, 322, 16356, 19324, 667, 432, 458, 7433, 32, 275, 319, 477, 753, 816, 322, 2260, 821, 1510, 322, 15341, 438, 22423, 275, 319, 477, 601, 322, 786, 432, 322, 15341, 821, 333, 687, 48, 106, 377, 687, 48, 275, 569, 284, 562, 2064, 16356, 25508, 26, 2627, 816, 27]}
{"line_number": 51, "line_type": "original", "code": "        setMean(mean);", "entropy": 1.4580078125, "is_bug_line": false, "sus_score": 0.22360679774997896, "per_token_entropy": [2.44140625, 4.52734375, 0.7822265625, 0.38623046875, 0.58251953125, 0.0318603515625], "tokens": [351, 739, 17081, 26, 6009, 293]}
{"line_number": 51, "line_type": "generated", "code": "\n     * Compute the probability density function for the standard normal\n     * distribution.\n     * @param x the point at which the PDF is evaluated.\n     * @return the value of the probability density function at x.\n     */\n    public double density(double x", "entropy": 0.3115234375, "is_bug_line": false, "sus_score": 0.22360679774997896, "per_token_entropy": [1.171875, 0.184814453125, 2.80078125, 0.34814453125, 0.58056640625, 0.0723876953125, 0.171875, 0.314208984375, 0.41015625, 0.7314453125, 0.038238525390625, 0.08349609375, 0.0002770423889160156, 0.0034637451171875, 0.63818359375, 0.1839599609375, 0.0789794921875, 1.115234375, 0.054718017578125, 0.0029087066650390625, 0.755859375, 0.37548828125, 0.0182952880859375, 0.0002613067626953125, 0.035400390625, 0.75341796875, 0.062103271484375, 0.061309814453125, 1.8779296875, 0.0325927734375, 0.07025146484375, 0.012725830078125, 0.00914764404296875, 0.35546875, 0.028411865234375, 0.01074981689453125, 0.285400390625, 0.453125, 0.006816864013671875, 0.0474853515625, 0.05804443359375, 0.7412109375, 0.143310546875, 0.0712890625, 0.26171875, 0.081298828125, 0.2822265625, 0.00830841064453125, 0.291748046875, 0.0006833076477050781, 0.028717041015625, 0.00039649009704589844], "tokens": [275, 319, 12836, 322, 16356, 19324, 667, 436, 322, 6216, 4302, 275, 319, 7433, 32, 275, 319, 477, 753, 816, 322, 2260, 821, 1510, 322, 15341, 438, 22423, 32, 275, 319, 477, 601, 322, 786, 432, 322, 16356, 19324, 667, 821, 816, 32, 275, 569, 284, 562, 2064, 19324, 26, 2627, 816]}
{"line_number": 52, "line_type": "original", "code": "        setStandardDeviation(sd);", "entropy": 1.779296875, "is_bug_line": false, "sus_score": 0.22360679774997896, "per_token_entropy": [3.0703125, 8.3671875, 2.083984375, 0.0028533935546875, 0.002414703369140625, 0.045074462890625, 0.5478515625, 0.1123046875], "tokens": [351, 739, 8090, 685, 17029, 26, 2713, 293]}
{"line_number": 52, "line_type": "generated", "code": "\n     * @param x the value at which the CDF is evaluated.\n     * @return the value of the CDF at <code>x</code>\n     */\n    public double cumulativeProbability(double x) {", "entropy": 0.2491455078125, "is_bug_line": false, "sus_score": 0.22360679774997896, "per_token_entropy": [0.465087890625, 0.53759765625, 0.77490234375, 0.05755615234375, 0.004734039306640625, 0.25048828125, 0.61279296875, 0.249267578125, 0.0004897117614746094, 0.008575439453125, 0.9287109375, 0.0034923553466796875, 0.003307342529296875, 0.00356292724609375, 0.41796875, 0.057830810546875, 0.0482177734375, 0.00396728515625, 0.014862060546875, 0.640625, 1.783203125, 0.005977630615234375, 0.039031982421875, 0.40185546875, 0.005512237548828125, 0.361328125, 0.41845703125, 0.003337860107421875, 0.00012981891632080078, 0.0009703636169433594, 0.00017511844635009766, 1.823902130126953e-05, 1.52734375, 0.051239013671875, 0.99462890625, 0.0814208984375, 0.09393310546875, 0.01416015625, 0.0269927978515625, 0.00115966796875, 0.00186920166015625, 0.05804443359375, 0.00025081634521484375, 0.08477783203125, 0.16796875], "tokens": [275, 319, 477, 753, 816, 322, 786, 821, 1510, 322, 390, 3698, 438, 22423, 32, 275, 319, 477, 601, 322, 786, 432, 322, 390, 3698, 821, 333, 687, 48, 106, 377, 687, 48, 275, 569, 284, 562, 2064, 41008, 35567, 26, 2627, 816, 27, 301]}
{"line_number": 53, "line_type": "original", "code": "    }", "entropy": 1.6533203125, "is_bug_line": false, "sus_score": 0.22360679774997896, "per_token_entropy": [2.1953125, 1.111328125], "tokens": [264, 320]}
{"line_number": 53, "line_type": "generated", "code": "\n     */\n    public double cumulativeProbability(double x) {\n        double ret;\n        double a = (x - mean) / standardDeviation;\n        double c = 0.5 * Erf.erfc(-a / Math.sqrt(2", "entropy": 0.289794921875, "is_bug_line": false, "sus_score": 0.22360679774997896, "per_token_entropy": [0.70751953125, 0.331787109375, 0.065185546875, 0.07421875, 0.01029205322265625, 0.0263671875, 0.0011339187622070312, 0.001995086669921875, 0.05633544921875, 0.0004203319549560547, 0.1116943359375, 0.25244140625, 0.422607421875, 0.90283203125, 1.7568359375, 0.041778564453125, 0.59912109375, 1.0810546875, 1.798828125, 0.12744140625, 0.2254638671875, 0.01275634765625, 0.01171875, 0.11334228515625, 0.0264129638671875, 0.0017271041870117188, 0.054901123046875, 1.2874603271484375e-05, 1.1920928955078125e-07, 0.00843048095703125, 0.254150390625, 1.4482421875, 2.046875, 0.2308349609375, 0.5595703125, 0.059661865234375, 0.0094451904296875, 0.5205078125, 0.05499267578125, 0.373291015625, 0.0003418922424316406, 5.352497100830078e-05, 0.00081634521484375, 0.033660888671875, 0.2178955078125, 0.068359375, 0.2100830078125, 0.045074462890625, 0.00022852420806884766, 0.11077880859375, 6.866455078125e-05, 0.002536773681640625], "tokens": [275, 569, 284, 562, 2064, 41008, 35567, 26, 2627, 816, 27, 301, 291, 2064, 2152, 45, 291, 2064, 312, 280, 308, 106, 429, 5651, 27, 517, 6216, 685, 17029, 45, 291, 2064, 281, 280, 225, 34, 32, 39, 319, 516, 4918, 32, 265, 3499, 3736, 83, 517, 4175, 32, 8663, 26, 36]}
{"line_number": 76, "line_type": "original", "code": "        this.mean = mean;", "entropy": 2.955078125, "is_bug_line": false, "sus_score": 0.22360679774997896, "per_token_entropy": [3.4140625, 6.19140625, 0.34716796875, 8.75, 1.09765625, 0.71142578125, 0.1802978515625], "tokens": [351, 458, 32, 6009, 280, 5651, 45]}
{"line_number": 76, "line_type": "generated", "code": "\n     */\n    public double inverseCumulativeProbability(double p) throws MathException {\n        if (p < 0.0 || p > 1.0) {\n            throw new IllegalArgumentException(\n                \"Probability p must be between 0 and 1", "entropy": 0.1568603515625, "is_bug_line": false, "sus_score": 0.22360679774997896, "per_token_entropy": [1.037109375, 0.0562744140625, 0.07672119140625, 0.0173187255859375, 0.0015401840209960938, 0.00792694091796875, 0.0020751953125, 0.00016736984252929688, 0.0001246929168701172, 0.0017042160034179688, 0.55029296875, 0.0003371238708496094, 0.006015777587890625, 0.334228515625, 0.003910064697265625, 2.0265579223632812e-06, 0.211181640625, 0.382080078125, 0.41357421875, 0.056121826171875, 0.005859375, 0.3623046875, 0.000720977783203125, 0.00017821788787841797, 0.1265869140625, 0.01380157470703125, 0.0019893646240234375, 0.060150146484375, 0.0006117820739746094, 0.0006318092346191406, 6.854534149169922e-05, 0.0013360977172851562, 0.00012683868408203125, 0.09033203125, 0.0232086181640625, 0.0285797119140625, 0.0013303756713867188, 0.3896484375, 0.6083984375, 0.5166015625, 0.83203125, 0.019927978515625, 0.26513671875, 0.75341796875, 0.034820556640625, 0.00386810302734375, 0.8388671875, 0.0008625984191894531, 2.753734588623047e-05, 0.01329803466796875, 1.3709068298339844e-05, 3.421306610107422e-05], "tokens": [275, 569, 284, 562, 2064, 19385, 53, 10318, 35567, 26, 2627, 298, 27, 2571, 4175, 984, 301, 291, 415, 308, 98, 333, 225, 34, 32, 34, 1276, 298, 848, 225, 35, 32, 34, 27, 301, 324, 1422, 537, 12137, 26, 400, 313, 35567, 298, 2298, 526, 3733, 225, 34, 461, 225, 35]}
{"line_number": 77, "line_type": "original", "code": "    }", "entropy": 4.23828125, "is_bug_line": false, "sus_score": 0.22360679774997896, "per_token_entropy": [3.28515625, 5.19140625], "tokens": [264, 320]}
{"line_number": 77, "line_type": "generated", "code": "\n    public double inverseCumulativeProbability(final double p) throws MathException {\n        if (p < 0.0 || p > 1.0) {\n            throw MathRuntimeException.createIllegalArgumentException(\n                    LocalizedFormats.INVALID_PROBABILITY,", "entropy": 0.1719970703125, "is_bug_line": false, "sus_score": 0.22360679774997896, "per_token_entropy": [1.1611328125, 0.1263427734375, 0.0033512115478515625, 0.00948333740234375, 0.0017423629760742188, 0.0002884864807128906, 0.00017309188842773438, 0.0029163360595703125, 0.78466796875, 0.00164031982421875, 0.0014810562133789062, 0.00489044189453125, 0.732421875, 0.03271484375, 5.125999450683594e-06, 0.1951904296875, 0.403564453125, 0.360107421875, 0.037078857421875, 0.004283905029296875, 0.4912109375, 0.0005702972412109375, 0.00014126300811767578, 0.1483154296875, 0.012969970703125, 0.0011987686157226562, 0.0462646484375, 0.0007014274597167969, 0.00048279762268066406, 7.426738739013672e-05, 0.0009660720825195312, 7.748603820800781e-05, 0.06024169921875, 0.0275421142578125, 0.025421142578125, 0.0012149810791015625, 1.4208984375, 0.5439453125, 0.001850128173828125, 0.003925323486328125, 0.011932373046875, 0.00214385986328125, 1.0078125, 0.267822265625, 0.0008521080017089844, 0.01201629638671875, 2.86102294921875e-05, 0.9150390625, 7.152557373046875e-07, 0.058013916015625, 0.00030875205993652344, 0.0186309814453125], "tokens": [284, 562, 2064, 19385, 53, 10318, 35567, 26, 3220, 2064, 298, 27, 2571, 4175, 984, 301, 291, 415, 308, 98, 333, 225, 34, 32, 34, 1276, 298, 848, 225, 35, 32, 34, 27, 301, 324, 1422, 4175, 19304, 32, 1297, 25907, 26, 528, 7089, 1191, 19298, 32, 8606, 81, 39123, 4928, 30]}
{"line_number": 93, "line_type": "original", "code": "        if (sd <= 0.0) {", "entropy": 1.8056640625, "is_bug_line": false, "sus_score": 0.22360679774997896, "per_token_entropy": [2.951171875, 2.25390625, 0.42919921875, 10.859375, 1.4521484375, 0.00812530517578125, 0.0006890296936035156, 1.599609375, 0.00031876564025878906, 0.12103271484375, 0.177978515625], "tokens": [351, 415, 308, 2713, 2511, 225, 34, 32, 34, 27, 301]}
{"line_number": 93, "line_type": "generated", "code": "\n     * @param p the desired probability for the critical value\n     * @return domain value lower bound, i.e. <code>-infinity</code>\n     */\n    protected double getDomainLowerBound(double p) {\n        return Double.NEGATIVE_", "entropy": 0.19140625, "is_bug_line": false, "sus_score": 0.22360679774997896, "per_token_entropy": [0.82763671875, 0.2078857421875, 0.421142578125, 0.06866455078125, 0.0005354881286621094, 0.032623291015625, 0.06427001953125, 0.004314422607421875, 0.428955078125, 0.006534576416015625, 0.5888671875, 0.0006709098815917969, 0.005584716796875, 0.0006723403930664062, 0.002704620361328125, 0.060791015625, 0.08245849609375, 0.00817108154296875, 0.2027587890625, 0.0008406639099121094, 0.0061492919921875, 0.218994140625, 0.0038051605224609375, 0.0017309188842773438, 0.05316162109375, 1.9619140625, 0.0020542144775390625, 0.64794921875, 0.471923828125, 0.00014257431030273438, 0.0010538101196289062, 0.1591796875, 0.054046630859375, 1.4541015625, 0.116943359375, 0.32177734375, 0.01087188720703125, 0.0015707015991210938, 0.1243896484375, 0.00121307373046875, 0.001247406005859375, 0.00019156932830810547, 0.53662109375, 3.743171691894531e-05, 0.00980377197265625, 0.054168701171875, 0.191650390625, 0.43115234375, 0.0994873046875, 0.00013518333435058594, 0.0007047653198242188, 2.5033950805664062e-06], "tokens": [275, 319, 477, 753, 298, 322, 10848, 16356, 436, 322, 18896, 786, 275, 319, 477, 601, 5880, 786, 7216, 5085, 30, 595, 32, 87, 32, 333, 687, 13119, 36295, 377, 687, 48, 275, 569, 284, 2522, 2064, 622, 5041, 6724, 4716, 26, 2627, 298, 27, 301, 291, 442, 6934, 32, 43518, 81]}
{"line_number": 97, "line_type": "original", "code": "        standardDeviation = sd;", "entropy": 2.84375, "is_bug_line": false, "sus_score": 0.22360679774997896, "per_token_entropy": [3.916015625, 11.7578125, 0.12384033203125, 0.0004379749298095703, 2.91796875, 1.0576171875, 0.1385498046875], "tokens": [351, 6216, 685, 17029, 280, 16711, 45]}
{"line_number": 97, "line_type": "generated", "code": "\n    }\n    \n    /**\n     * Access the domain value upper bound, based on <code>p</code>, used to\n     * bracket a CDF root.  This method is used by\n     * {@link #inverseCumulativeProbability(double)} to find", "entropy": 0.09759521484375, "is_bug_line": false, "sus_score": 0.22360679774997896, "per_token_entropy": [1.0302734375, 1.9541015625, 0.9365234375, 0.043243408203125, 0.031707763671875, 0.00013899803161621094, 0.9912109375, 0.0032367706298828125, 0.045196533203125, 0.00047779083251953125, 0.00597381591796875, 0.00017833709716796875, 0.0008616447448730469, 1.8477439880371094e-05, 1.0013580322265625e-05, 5.245208740234375e-05, 0.00011730194091796875, 0.0002353191375732422, 0.0001251697540283203, 1.7523765563964844e-05, 1.4662742614746094e-05, 0.0001366138458251953, 2.586841583251953e-05, 3.552436828613281e-05, 0.00485992431640625, 6.794929504394531e-06, 0.00010216236114501953, 1.3589859008789062e-05, 0.00010478496551513672, 3.5762786865234375e-07, 8.463859558105469e-06, 2.014636993408203e-05, 0.00978851318359375, 0.0005035400390625, 0.0001710653305053711, 4.982948303222656e-05, 0.00013518333435058594, 0.0001246929168701172, 0.0115814208984375, 0.00023102760314941406, 0.0005373954772949219, 2.1457672119140625e-06, 0.00014340877532958984, 0.00023698806762695312, 3.516674041748047e-05, 7.355213165283203e-05, 2.6941299438476562e-05, 0.00010693073272705078, 0.000263214111328125, 0.00200653076171875, 0.00012886524200439453, 1.049041748046875e-05], "tokens": [284, 320, 2170, 1022, 275, 319, 8258, 322, 5880, 786, 8342, 5085, 30, 4122, 544, 333, 687, 48, 98, 377, 687, 2717, 1654, 372, 275, 319, 33828, 312, 390, 3698, 3051, 32, 225, 1348, 1411, 438, 1654, 810, 275, 319, 3088, 1204, 588, 18139, 53, 10318, 35567, 26, 2627, 4370, 372, 2290]}
{"line_number": 98, "line_type": "original", "code": "    }", "entropy": 1.484375, "is_bug_line": false, "sus_score": 0.22360679774997896, "per_token_entropy": [2.876953125, 0.09130859375], "tokens": [264, 320]}
{"line_number": 98, "line_type": "generated", "code": "\n        return Double.NEGATIVE_INFINITY;\n    }\n    \n    /**\n     * Access the domain value upper bound, based on <code>p</code>, used to\n     * bracket a CDF root.  This method is used by\n     * {@link #inverse", "entropy": 0.07635498046875, "is_bug_line": false, "sus_score": 0.22360679774997896, "per_token_entropy": [1.2080078125, 0.6279296875, 1.5029296875, 0.00029277801513671875, 0.0076904296875, 1.5616416931152344e-05, 3.3020973205566406e-05, 0.0087738037109375, 0.10968017578125, 0.0011844635009765625, 0.441650390625, 0.0031681060791015625, 0.0087127685546875, 0.00017917156219482422, 0.0176849365234375, 9.894371032714844e-05, 0.000827789306640625, 0.0047607421875, 0.00262451171875, 4.279613494873047e-05, 0.00023949146270751953, 1.633167266845703e-05, 1.3470649719238281e-05, 6.723403930664062e-05, 0.00020265579223632812, 0.0001703500747680664, 3.337860107421875e-05, 2.9921531677246094e-05, 5.0067901611328125e-06, 4.7206878662109375e-05, 5.328655242919922e-05, 5.221366882324219e-05, 0.005001068115234375, 5.066394805908203e-05, 0.0001010894775390625, 1.5139579772949219e-05, 0.000179290771484375, 5.960464477539062e-07, 9.5367431640625e-06, 1.430511474609375e-05, 0.004230499267578125, 0.0004036426544189453, 0.00015163421630859375, 6.151199340820312e-05, 0.00015151500701904297, 0.0001348257064819336, 0.012115478515625, 0.00017881393432617188, 0.0003871917724609375, 2.6226043701171875e-06, 0.00010585784912109375, 0.0002391338348388672], "tokens": [291, 442, 6934, 32, 43518, 81, 36069, 45, 284, 320, 2170, 1022, 275, 319, 8258, 322, 5880, 786, 8342, 5085, 30, 4122, 544, 333, 687, 48, 98, 377, 687, 2717, 1654, 372, 275, 319, 33828, 312, 390, 3698, 3051, 32, 225, 1348, 1411, 438, 1654, 810, 275, 319, 3088, 1204, 588, 18139]}
