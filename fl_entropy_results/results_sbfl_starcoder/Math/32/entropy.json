{"line_number": 135, "line_type": "original", "code": "            final BSPTree<Euclidean2D> tree = getTree(false);", "entropy": 1.99609375, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [9.6796875, 13.3671875, 7.8203125, 0.09619140625, 0.98974609375, 0.0018548965454101562, 0.0001595020294189453, 0.007236480712890625, 0.0016756057739257812, 0.038848876953125, 0.09918212890625, 0.5517578125, 0.1712646484375, 0.1610107421875, 0.034912109375, 0.88134765625, 0.0504150390625], "tokens": [1468, 1158, 38099, 3350, 46, 55, 34986, 36, 54, 48, 4345, 280, 622, 3350, 26, 1870, 293]}
{"line_number": 135, "line_type": "generated", "code": "\n     * each loop being an array of vertices. The first vertex of each loop\n     * is the same than the last one.\n     * </p>\n     * @return the vertices of the polygon\n     */\n    public Vector2D[][] getVertices() {", "entropy": 0.36767578125, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.64501953125, 0.0011682510375976562, 0.351806640625, 0.278564453125, 0.484375, 0.10791015625, 0.047515869140625, 0.0171966552734375, 0.2379150390625, 1.349609375, 1.025390625, 0.57177734375, 0.4189453125, 0.10821533203125, 0.3623046875, 0.08197021484375, 1.5205078125, 2.288818359375e-05, 1.208984375, 0.30712890625, 0.68603515625, 0.98583984375, 0.005359649658203125, 0.01021575927734375, 0.46044921875, 1.24609375, 1.8173828125, 0.00330352783203125, 0.9697265625, 0.0004506111145019531, 0.0233001708984375, 0.10223388671875, 0.0006532669067382812, 0.6826171875, 0.004009246826171875, 1.5732421875, 0.3330078125, 0.243408203125, 0.037261962890625, 0.132080078125, 0.293212890625, 0.252197265625, 0.01331329345703125, 0.10955810546875, 0.0086212158203125, 9.894371032714844e-06, 3.5762786865234375e-07, 0.0007543563842773438, 0.00012052059173583984, 0.0002694129943847656, 0.001102447509765625, 0.00250244140625], "tokens": [275, 319, 2504, 5258, 3998, 600, 1417, 432, 13228, 32, 886, 1932, 9228, 432, 2504, 5258, 275, 319, 438, 322, 2432, 2784, 322, 2401, 1591, 32, 275, 319, 576, 98, 48, 275, 319, 477, 601, 322, 13228, 432, 322, 20389, 275, 569, 284, 562, 4107, 36, 54, 11336, 622, 15743, 346, 301]}
{"line_number": 136, "line_type": "original", "code": "            if ((Boolean) tree.getAttribute()) {", "entropy": 2.75390625, "is_bug_line": true, "sus_score": 1.0, "per_token_entropy": [7.2578125, 2.3671875, 6.1015625, 5.37890625, 0.033599853515625, 5.8359375, 0.0628662109375, 0.0765380859375, 0.2193603515625, 0.193115234375], "tokens": [1468, 415, 1833, 4709, 27, 4345, 32, 11378, 1157, 301]}
{"line_number": 136, "line_type": "generated", "code": "\n     * @return vertices of the polygon\n     */\n    public Vector2D[][] getVertices() {\n\n        final BSPTree<Euclidean2D> tree = getTree(false);\n\n        final List<Vector2D[]> loops = new ArrayList<>();\n\n        for", "entropy": 0.239501953125, "is_bug_line": true, "sus_score": 1.0, "per_token_entropy": [0.281494140625, 0.0188446044921875, 0.35888671875, 0.00970458984375, 0.95947265625, 0.1473388671875, 0.0487060546875, 0.181640625, 0.471923828125, 0.190673828125, 0.0226287841796875, 0.1749267578125, 0.0179443359375, 1.33514404296875e-05, 9.5367431640625e-07, 0.0009446144104003906, 0.00016391277313232422, 0.00030684471130371094, 0.0017213821411132812, 0.008819580078125, 1.5166015625, 0.5166015625, 0.203125, 0.00016021728515625, 0.003604888916015625, 0.00018548965454101562, 4.172325134277344e-06, 0.00038433074951171875, 1.5616416931152344e-05, 0.0013799667358398438, 0.02862548828125, 0.02081298828125, 0.00820159912109375, 0.00937652587890625, 0.01026153564453125, 0.1641845703125, 0.0020732879638671875, 0.953125, 0.75048828125, 0.56298828125, 0.0017786026000976562, 0.353515625, 0.00032520294189453125, 5.960464477539062e-07, 0.6220703125, 1.2744140625, 0.1773681640625, 0.01204681396484375, 0.0018177032470703125, 0.251953125, 0.40966796875, 1.697265625], "tokens": [275, 319, 477, 601, 13228, 432, 322, 20389, 275, 569, 284, 562, 4107, 36, 54, 11336, 622, 15743, 346, 301, 584, 1158, 38099, 3350, 46, 55, 34986, 36, 54, 48, 4345, 280, 622, 3350, 26, 1870, 293, 584, 1158, 1682, 46, 2863, 36, 54, 16434, 23737, 280, 537, 5059, 6981, 584, 436]}
{"line_number": 330, "line_type": "original", "code": "                return null;", "entropy": 3.736328125, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [5.96484375, 5.80078125, 3.12890625, 0.051483154296875], "tokens": [2071, 442, 744, 45]}
{"line_number": 330, "line_type": "generated", "code": "\n            super(null, null, null);\n            sortingKey = new OrderedTuple(start.getX() + dx, start.getY() + dy);\n        }\n\n        /** {@inheritDoc} */\n        public int compareTo(final ComparableSegment other) {\n           ", "entropy": 0.12469482421875, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.9404296875, 0.771484375, 0.04876708984375, 0.80859375, 0.0029354095458984375, 0.0592041015625, 0.01528167724609375, 0.07562255859375, 0.0036602020263671875, 0.3994140625, 0.1368408203125, 1.4781951904296875e-05, 0.0035552978515625, 0.1292724609375, 0.00046372413635253906, 3.5643577575683594e-05, 0.01453399658203125, 0.1119384765625, 0.0148162841796875, 0.001270294189453125, 0.337646484375, 0.1199951171875, 0.0181427001953125, 0.004604339599609375, 0.0124359130859375, 0.00017940998077392578, 0.0028533935546875, 0.001529693603515625, 0.0017032623291015625, 0.0034389495849609375, 0.0010652542114257812, 0.14794921875, 0.005023956298828125, 0.043914794921875, 0.09246826171875, 0.779296875, 0.0015630722045898438, 0.01316070556640625, 0.040679931640625, 0.01238250732421875, 0.69482421875, 0.0723876953125, 0.00693511962890625, 2.002716064453125e-05, 0.0008301734924316406, 0.02587890625, 0.0024929046630859375, 0.0007114410400390625, 0.373046875, 0.005401611328125, 0.000614166259765625, 0.12225341796875], "tokens": [324, 2599, 26, 1693, 30, 744, 30, 744, 293, 324, 22311, 953, 280, 537, 24603, 8924, 26, 1366, 32, 18817, 346, 474, 12211, 30, 1477, 32, 20431, 346, 474, 13196, 293, 291, 320, 584, 1022, 3088, 18446, 111, 569, 291, 562, 629, 8868, 705, 26, 3220, 40409, 7707, 1604, 27, 301, 324]}
{"line_number": 50, "line_type": "original", "code": "        super();", "entropy": 4.578125, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [5.1953125, 4.59765625, 3.94140625], "tokens": [351, 2599, 473]}
{"line_number": 50, "line_type": "generated", "code": "\n    /** Build a rectangular box.\n     * @param xMin low bound along the x direction\n     * @param xMax high bound along the x direction\n     * @param yMin low bound along the y direction\n     * @param yMax high bound", "entropy": 0.10882568359375, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [1.2314453125, 0.06640625, 0.57470703125, 0.053375244140625, 1.669921875, 0.0026035308837890625, 0.71630859375, 0.283935546875, 0.01189422607421875, 0.002597808837890625, 0.2303466796875, 0.0010404586791992188, 0.54541015625, 0.1849365234375, 0.004650115966796875, 0.00926971435546875, 0.01708984375, 0.0042877197265625, 0.005672454833984375, 0.00482940673828125, 0.0028171539306640625, 1.9073486328125e-06, 6.842613220214844e-05, 4.887580871582031e-06, 0.0157012939453125, 0.00010788440704345703, 0.00011944770812988281, 0.00024127960205078125, 2.3365020751953125e-05, 3.814697265625e-06, 0.0030670166015625, 0.0001201629638671875, 0.0016269683837890625, 0.00131988525390625, 0.00019168853759765625, 0.00017333030700683594, 0.0021800994873046875, 0.00852203369140625, 0.00017976760864257812, 7.450580596923828e-05, 1.4185905456542969e-05, 1.9550323486328125e-05, 0.0021800994873046875, 7.200241088867188e-05, 0.0011453628540039062, 9.548664093017578e-05, 0.00017750263214111328, 0.00025582313537597656, 6.282329559326172e-05, 6.866455078125e-05, 1.4901161193847656e-05, 1.5616416931152344e-05], "tokens": [284, 1022, 5238, 312, 7582, 5089, 4376, 32, 275, 319, 477, 753, 816, 2928, 7461, 5085, 7947, 322, 816, 6983, 275, 319, 477, 753, 816, 2708, 3857, 5085, 7947, 322, 816, 6983, 275, 319, 477, 753, 533, 2928, 7461, 5085, 7947, 322, 533, 6983, 275, 319, 477, 753, 533, 2708, 3857, 5085]}
{"line_number": 51, "line_type": "original", "code": "    }", "entropy": 3.29296875, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [2.66015625, 3.92578125], "tokens": [264, 320]}
{"line_number": 51, "line_type": "generated", "code": "\n\n    /** Build a polygons set from a collection of loops.\n     * <p>The loops are provided as a collection of {@link Vector2D}\n     * arrays. Each loop is considered to be closed, i.e. the first and\n    ", "entropy": 0.48046875, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [0.40966796875, 0.0418701171875, 0.74951171875, 0.09130859375, 1.79296875, 0.0202484130859375, 0.1708984375, 0.121337890625, 0.68798828125, 1.5576171875, 0.0034427642822265625, 0.82861328125, 0.1907958984375, 0.09857177734375, 0.0005087852478027344, 0.1729736328125, 0.001895904541015625, 0.0008611679077148438, 0.76806640625, 1.2734375, 0.65234375, 0.931640625, 0.007762908935546875, 0.63818359375, 0.1396484375, 0.0099029541015625, 1.52734375, 0.0226898193359375, 0.48486328125, 0.0120697021484375, 4.887580871582031e-06, 0.87646484375, 0.261962890625, 1.0728836059570312e-05, 0.334228515625, 0.5546875, 0.2281494140625, 1.1640625, 0.76416015625, 1.462890625, 1.5068359375, 0.382080078125, 0.31591796875, 1.2255859375, 1.26171875, 0.0012969970703125, 0.002246856689453125, 0.009552001953125, 0.2177734375, 0.330810546875, 0.58251953125, 0.096923828125], "tokens": [446, 1022, 5238, 312, 10214, 27155, 739, 645, 312, 4491, 432, 23737, 32, 275, 319, 333, 98, 48, 1318, 23737, 884, 3943, 619, 312, 4491, 432, 3088, 1204, 4107, 36, 54, 111, 275, 319, 12051, 32, 11072, 5258, 438, 11870, 372, 526, 8777, 30, 595, 32, 87, 32, 322, 1932, 461, 275]}
{"line_number": 132, "line_type": "original", "code": "        final Vector2D[][] v = getVertices();", "entropy": 1.8662109375, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [7.75390625, 4.1171875, 2.01171875, 0.00537109375, 0.0010213851928710938, 2.904296875, 0.931640625, 0.08660888671875, 1.6962890625, 0.92138671875, 0.10028076171875], "tokens": [351, 1158, 4107, 36, 54, 11336, 354, 280, 622, 15743, 473]}
{"line_number": 132, "line_type": "generated", "code": "\n\n    /** Check if the instance is a single point.\n     * @return true if the instance is a point\n     */\n    public boolean isPoint() {\n        return getTree(false).getSize() == 1;\n    }\n\n    /** Get the single point", "entropy": 0.35595703125, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.62744140625, 0.037109375, 2.40234375, 0.240234375, 0.229248046875, 0.0288848876953125, 1.0966796875, 0.94140625, 2.751953125, 0.4052734375, 0.083984375, 0.047393798828125, 0.015777587890625, 0.211669921875, 0.00890350341796875, 0.73974609375, 0.04449462890625, 0.10821533203125, 0.03265380859375, 0.450927734375, 0.04071044921875, 0.78125, 0.13720703125, 0.07318115234375, 0.0025043487548828125, 0.1439208984375, 0.0213470458984375, 0.004955291748046875, 0.2239990234375, 0.0020904541015625, 0.0009489059448242188, 0.055572509765625, 0.40234375, 0.89990234375, 1.2451171875, 0.005115509033203125, 0.04815673828125, 0.002471923828125, 0.6318359375, 3.0040740966796875e-05, 0.0097503662109375, 0.008544921875, 0.1796875, 0.05096435546875, 0.0157012939453125, 0.00014984607696533203, 0.2430419921875, 0.01117706298828125, 0.66552734375, 0.3037109375, 1.701171875, 0.09228515625], "tokens": [446, 1022, 3456, 415, 322, 1980, 438, 312, 3982, 2260, 32, 275, 319, 477, 601, 861, 415, 322, 1980, 438, 312, 2260, 275, 569, 284, 562, 1905, 438, 1943, 346, 301, 291, 442, 622, 3350, 26, 1870, 547, 24619, 346, 610, 225, 35, 45, 284, 320, 446, 1022, 1390, 322, 3982, 2260]}
{"line_number": 134, "line_type": "original", "code": "        if (v.length == 0) {", "entropy": 1.140625, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [3.345703125, 2.978515625, 0.76171875, 1.44921875, 2.80859375, 0.318359375, 0.2587890625, 0.00760650634765625, 0.421875, 0.0836181640625, 0.116455078125], "tokens": [351, 415, 308, 104, 32, 1322, 610, 225, 34, 27, 301]}
{"line_number": 134, "line_type": "generated", "code": "\n     * @return vertices of the polygon\n     */\n    public Vector2D[][] getVertices() {\n        final BSPTree<Euclidean2D> tree = getTree(false);\n        final List<Vector2D> vertices = new ArrayList<Vector2", "entropy": 0.184814453125, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.36474609375, 0.00370025634765625, 0.544921875, 0.0146331787109375, 1.138671875, 0.342041015625, 0.0380859375, 0.1416015625, 0.546875, 0.220703125, 0.0191192626953125, 0.261962890625, 0.0187530517578125, 2.6345252990722656e-05, 1.5497207641601562e-06, 0.003780364990234375, 0.00024819374084472656, 0.0005469322204589844, 0.00202178955078125, 0.010467529296875, 0.4462890625, 0.52685546875, 0.08416748046875, 8.296966552734375e-05, 0.0017576217651367188, 7.426738739013672e-05, 3.933906555175781e-06, 0.0001595020294189453, 9.059906005859375e-06, 0.0007624626159667969, 0.038177490234375, 0.0219573974609375, 0.0169830322265625, 0.0182952880859375, 0.00970458984375, 0.1981201171875, 0.0028018951416015625, 0.2119140625, 0.365966796875, 0.921875, 0.004055023193359375, 0.73583984375, 0.0005955696105957031, 8.344650268554688e-07, 0.471923828125, 0.83251953125, 0.11407470703125, 0.048065185546875, 0.00649261474609375, 0.857421875, 0.0005488395690917969, 4.76837158203125e-07], "tokens": [275, 319, 477, 601, 13228, 432, 322, 20389, 275, 569, 284, 562, 4107, 36, 54, 11336, 622, 15743, 346, 301, 291, 1158, 38099, 3350, 46, 55, 34986, 36, 54, 48, 4345, 280, 622, 3350, 26, 1870, 293, 291, 1158, 1682, 46, 2863, 36, 54, 48, 13228, 280, 537, 5059, 46, 2863, 36]}
{"line_number": 151, "line_type": "original", "code": "            double sum  = 0;", "entropy": 3.71875, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [10.15625, 8.5234375, 4.50390625, 5.5546875, 0.08734130859375, 0.83349609375, 0.01270294189453125, 0.0771484375], "tokens": [1468, 2064, 3632, 225, 280, 225, 34, 45]}
{"line_number": 151, "line_type": "generated", "code": "\n     * boundary of the area. Open loops on the other hand can represent\n     * a wide variety of shapes, including non-convex shapes, as long as\n     * they do not represent discontinuities across the region boundary.\n     * In particular,", "entropy": 0.794921875, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.38720703125, 0.003955841064453125, 2.3828125, 0.485107421875, 0.3125, 0.56396484375, 1.91015625, 0.9541015625, 0.2626953125, 2.912109375, 0.00276947021484375, 0.08966064453125, 0.01256561279296875, 1.21875, 1.2744140625, 0.050750732421875, 1.2159347534179688e-05, 1.41796875, 2.22265625, 0.08905029296875, 0.0017938613891601562, 0.125732421875, 0.9951171875, 1.3974609375, 2.484375, 0.24365234375, 0.505859375, 3.2067298889160156e-05, 0.293701171875, 2.51953125, 2.412109375, 0.361572265625, 0.50146484375, 0.01678466796875, 1.4662742614746094e-05, 0.45556640625, 0.50390625, 0.045074462890625, 0.865234375, 1.603515625, 0.9951171875, 0.046112060546875, 0.95703125, 0.68310546875, 1.0986328125, 0.12255859375, 0.85205078125, 0.0152587890625, 0.0020427703857421875, 3.01171875, 1.3349609375, 0.326904296875], "tokens": [275, 319, 14563, 432, 322, 5951, 32, 3927, 23737, 544, 322, 1604, 4091, 883, 4042, 275, 319, 312, 16264, 26846, 432, 24195, 30, 6237, 2979, 31, 6081, 327, 24195, 30, 619, 1946, 619, 275, 319, 2953, 745, 646, 4042, 1214, 18037, 2105, 10160, 322, 6699, 14563, 32, 275, 319, 701, 8409, 30]}
{"line_number": 152, "line_type": "original", "code": "            double sumX = 0;", "entropy": 2.3984375, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [8.7734375, 8.453125, 1.1025390625, 0.779296875, 0.06463623046875, 0.004436492919921875, 0.0003604888916015625, 0.01593017578125], "tokens": [1468, 2064, 3632, 74, 280, 225, 34, 45]}
{"line_number": 152, "line_type": "generated", "code": "\n     * @return a deep copy of the vertices array\n     */\n    public Vector2D[][] getVertices() {\n\n        // we build the vertices array by extracting the vertices of each loop\n        // in the BSP tree and ignoring the open loops at the boundaries\n       ", "entropy": 0.84619140625, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.134765625, 0.00782012939453125, 0.093994140625, 0.019439697265625, 2.17578125, 2.392578125, 0.0242156982421875, 0.01369476318359375, 0.0250701904296875, 0.5634765625, 1.3759765625, 0.57177734375, 0.22900390625, 0.0275726318359375, 0.150390625, 0.01971435546875, 1.9550323486328125e-05, 1.1920928955078125e-06, 0.001224517822265625, 0.00023126602172851562, 0.0004711151123046875, 0.0035762786865234375, 0.01387786865234375, 1.3095703125, 1.18359375, 1.439453125, 2.640625, 0.802734375, 0.72900390625, 0.8798828125, 1.2138671875, 3.734375, 0.76171875, 1.1572265625, 1.4326171875, 1.6259765625, 0.70654296875, 0.290771484375, 0.4287109375, 1.2255859375, 0.51904296875, 2.46484375, 0.0797119140625, 1.466796875, 2.58984375, 0.34912109375, 1.5615234375, 0.65966796875, 2.6796875, 0.13427734375, 1.3095703125, 0.7705078125], "tokens": [275, 319, 477, 601, 312, 11086, 1933, 432, 322, 13228, 1417, 275, 569, 284, 562, 4107, 36, 54, 11336, 622, 15743, 346, 301, 584, 434, 996, 1968, 322, 13228, 1417, 810, 42487, 322, 13228, 432, 2504, 5258, 291, 434, 328, 322, 38099, 4345, 461, 31949, 322, 2156, 23737, 821, 322, 28116, 291]}
{"line_number": 153, "line_type": "original", "code": "            double sumY = 0;", "entropy": 2.701171875, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [7.23828125, 9.5390625, 3.4609375, 1.23046875, 0.0645751953125, 0.0089874267578125, 0.00014078617095947266, 0.0665283203125], "tokens": [1468, 2064, 3632, 75, 280, 225, 34, 45]}
{"line_number": 153, "line_type": "generated", "code": "\n     */\n    public Vector2D[][] getVertices() {\n        final BSPTree<Euclidean2D> tree = getTree(false);\n        final BSPTree<Euclidean2D>.Node node = tree.getFirst();\n        if (node == null", "entropy": 0.2159423828125, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.372802734375, 0.1514892578125, 0.03070068359375, 0.1824951171875, 0.0218505859375, 2.8371810913085938e-05, 1.6689300537109375e-06, 0.0013284683227539062, 0.0003070831298828125, 0.0003592967987060547, 0.0030364990234375, 0.01342010498046875, 0.61474609375, 0.78173828125, 0.1463623046875, 0.00020563602447509766, 0.0023441314697265625, 0.00012814998626708984, 2.8848648071289062e-05, 0.00019371509552001953, 2.86102294921875e-06, 0.0006470680236816406, 0.0452880859375, 0.029052734375, 0.01531982421875, 0.013580322265625, 0.00846099853515625, 0.174560546875, 0.003963470458984375, 0.188232421875, 0.55859375, 1.73046875, 0.05145263671875, 0.96484375, 0.0002357959747314453, 7.62939453125e-06, 0.0031986236572265625, 1.6689300537109375e-06, 1.0126953125, 0.137451171875, 1.01953125, 0.0201263427734375, 0.3759765625, 0.0006899833679199219, 0.45068359375, 0.445068359375, 0.211669921875, 1.2529296875, 0.05914306640625, 0.007480621337890625, 0.12200927734375, 0.001827239990234375], "tokens": [275, 569, 284, 562, 4107, 36, 54, 11336, 622, 15743, 346, 301, 291, 1158, 38099, 3350, 46, 55, 34986, 36, 54, 48, 4345, 280, 622, 3350, 26, 1870, 293, 291, 1158, 38099, 3350, 46, 55, 34986, 36, 54, 4503, 1212, 1541, 280, 4345, 32, 25657, 473, 291, 415, 308, 1251, 610, 744]}
{"line_number": 155, "line_type": "original", "code": "            for (Vector2D[] loop : v) {", "entropy": 1.4423828125, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [5.82421875, 4.31640625, 0.03460693359375, 4.17578125, 0.002277374267578125, 0.00022840499877929688, 0.029296875, 0.1243896484375, 0.01554107666015625, 2.5234375, 0.0245513916015625, 0.238525390625], "tokens": [1468, 436, 308, 2863, 36, 54, 1178, 5258, 499, 354, 27, 301]}
{"line_number": 155, "line_type": "generated", "code": "\n     */\n    public Vector2D[][] getVertices() {\n        return getTree(false).getVertices();\n    }", "entropy": 0.2379150390625, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.49267578125, 0.096435546875, 0.0230255126953125, 0.267578125, 0.01885986328125, 4.2438507080078125e-05, 2.384185791015625e-06, 0.002643585205078125, 0.0003364086151123047, 0.0005755424499511719, 0.0030460357666015625, 0.0169525146484375, 0.67578125, 1.9208984375, 1.0, 0.63037109375, 0.0213470458984375, 0.29638671875, 0.0027751922607421875, 0.0531005859375, 0.0272064208984375, 0.02984619140625, 0.129638671875, 0.00229644775390625], "tokens": [275, 569, 284, 562, 4107, 36, 54, 11336, 622, 15743, 346, 301, 291, 442, 622, 3350, 26, 1870, 547, 371, 15743, 473, 284, 320]}
{"line_number": 156, "line_type": "original", "code": "                double x1 = loop[loop.length - 1].getX();", "entropy": 1.0546875, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [9.1875, 5.1328125, 0.84765625, 0.1563720703125, 0.07958984375, 1.1962890625, 0.04034423828125, 0.12091064453125, 0.0019626617431640625, 0.00038170814514160156, 0.004730224609375, 0.003459930419921875, 0.0052032470703125, 0.0018949508666992188, 0.07745361328125, 0.0171966552734375], "tokens": [2071, 2064, 816, 35, 280, 5258, 77, 5837, 32, 1322, 429, 225, 35, 997, 18817, 473]}
{"line_number": 156, "line_type": "generated", "code": "\n    public Vector2D[][] getVertices() {", "entropy": 0.09423828125, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.28662109375, 0.60400390625, 0.01495361328125, 6.723403930664062e-05, 3.0994415283203125e-06, 0.0012617111206054688, 0.0004010200500488281, 0.000637054443359375, 0.006221771240234375, 0.0281524658203125], "tokens": [284, 562, 4107, 36, 54, 11336, 622, 15743, 346, 301]}
{"line_number": 157, "line_type": "original", "code": "                double y1 = loop[loop.length - 1].getY();", "entropy": 1.541015625, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [8.6640625, 4.609375, 6.01171875, 0.92578125, 0.26416015625, 3.673828125, 0.14453125, 0.27001953125, 0.00998687744140625, 0.0010404586791992188, 0.007110595703125, 0.00321197509765625, 0.0151214599609375, 0.005237579345703125, 0.0219879150390625, 0.0300140380859375], "tokens": [2071, 2064, 533, 35, 280, 5258, 77, 5837, 32, 1322, 429, 225, 35, 997, 20431, 473]}
{"line_number": 157, "line_type": "generated", "code": "\n        final BSPTree<Euclidean2D> tree = getTree(false);\n        final List<BSPTree<Euclidean2D>> children = tree.getRegions();\n        final List<Vector2D> vertices = new ArrayList<Vector2D", "entropy": 0.278564453125, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.29248046875, 1.095703125, 0.52587890625, 0.0002665519714355469, 0.008392333984375, 0.0002301931381225586, 0.0002073049545288086, 0.0006093978881835938, 5.245208740234375e-06, 0.0008802413940429688, 0.05145263671875, 0.034149169921875, 0.0220794677734375, 0.0177154541015625, 0.01387786865234375, 0.1588134765625, 0.005817413330078125, 0.1729736328125, 0.466796875, 0.9541015625, 0.005451202392578125, 1.833984375, 0.00447845458984375, 0.1453857421875, 0.0001436471939086914, 3.2782554626464844e-05, 0.000621795654296875, 4.291534423828125e-06, 0.118896484375, 1.6806640625, 0.0665283203125, 0.54345703125, 0.0010957717895507812, 0.82373046875, 0.44140625, 0.0264129638671875, 0.434814453125, 0.28955078125, 0.998046875, 0.003582000732421875, 0.33544921875, 0.0014295578002929688, 7.62939453125e-06, 0.76416015625, 1.109375, 0.223388671875, 0.0265045166015625, 0.0026226043701171875, 0.77783203125, 0.0009007453918457031, 3.2186508178710938e-06, 0.00010752677917480469], "tokens": [291, 1158, 38099, 3350, 46, 55, 34986, 36, 54, 48, 4345, 280, 622, 3350, 26, 1870, 293, 291, 1158, 1682, 46, 26841, 3350, 46, 55, 34986, 36, 54, 2005, 5713, 280, 4345, 32, 371, 22590, 473, 291, 1158, 1682, 46, 2863, 36, 54, 48, 13228, 280, 537, 5059, 46, 2863, 36, 54]}
{"line_number": 158, "line_type": "original", "code": "                for (final Vector2D point : loop) {", "entropy": 1.8994140625, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [6.01171875, 4.2421875, 0.0026073455810546875, 0.5615234375, 4.08203125, 0.0033435821533203125, 4.851818084716797e-05, 3.720703125, 0.01611328125, 3.75390625, 0.2410888671875, 0.1685791015625], "tokens": [2071, 436, 308, 3220, 4107, 36, 54, 2260, 499, 5258, 27, 301]}
{"line_number": 158, "line_type": "generated", "code": "\n            final BSPTree<Euclidean2D> tree = getTree(false);\n            if (tree == null) {\n                vertices = new Vector2D[0][];\n            } else {\n                final List<Vector2D> list = new ArrayList", "entropy": 0.2354736328125, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.3232421875, 1.220703125, 0.36962890625, 0.0005521774291992188, 0.01251220703125, 0.0005011558532714844, 0.00016808509826660156, 0.0010833740234375, 5.245208740234375e-06, 0.0005922317504882812, 0.0546875, 0.06256103515625, 0.032745361328125, 0.0128173828125, 0.023193359375, 0.2220458984375, 0.00611114501953125, 0.1317138671875, 1.5576171875, 0.39111328125, 0.10009765625, 0.49072265625, 0.0007123947143554688, 0.0289459228515625, 0.0031795501708984375, 0.043182373046875, 0.54052734375, 0.0179290771484375, 0.0653076171875, 0.0014324188232421875, 9.334087371826172e-05, 5.602836608886719e-06, 0.0723876953125, 0.00862884521484375, 0.0053253173828125, 1.419921875, 0.1739501953125, 0.00103759765625, 0.0112762451171875, 0.04705810546875, 0.08953857421875, 0.60302734375, 1.2861328125, 0.004795074462890625, 0.54052734375, 0.0012235641479492188, 2.86102294921875e-06, 0.268798828125, 1.865234375, 0.044525146484375, 0.0726318359375, 0.01239776611328125], "tokens": [324, 1158, 38099, 3350, 46, 55, 34986, 36, 54, 48, 4345, 280, 622, 3350, 26, 1870, 293, 324, 415, 308, 3242, 610, 744, 27, 301, 400, 13228, 280, 537, 4107, 36, 54, 77, 34, 1674, 970, 324, 320, 813, 301, 400, 1158, 1682, 46, 2863, 36, 54, 48, 1149, 280, 537, 5059]}
{"line_number": 159, "line_type": "original", "code": "                    final double x0 = x1;", "entropy": 2.39453125, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [6.78515625, 1.9853515625, 3.705078125, 1.7080078125, 1.705078125, 0.08013916015625, 2.869140625, 2.62109375, 0.09442138671875], "tokens": [4696, 1158, 2064, 816, 34, 280, 816, 35, 45]}
{"line_number": 159, "line_type": "generated", "code": "\n                // the instance covers the whole space\n                vertices = new Vector2D[0][0];\n            } else {\n                // we have to build the vertices\n                final BSPTree<Euclidean2D> tree = getTree(false);\n                final BSP", "entropy": 0.3583984375, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.505859375, 1.1796875, 0.68701171875, 0.50048828125, 0.43310546875, 0.021087646484375, 0.0025234222412109375, 0.03350830078125, 0.1839599609375, 0.501953125, 0.0357666015625, 0.122314453125, 0.0029201507568359375, 0.00016033649444580078, 5.0067901611328125e-06, 0.195068359375, 0.2205810546875, 0.00489044189453125, 0.2783203125, 0.0007495880126953125, 0.22607421875, 0.00022208690643310547, 0.00711822509765625, 0.0168609619140625, 0.1785888671875, 0.935546875, 1.365234375, 1.9267578125, 0.79736328125, 1.5947265625, 0.08465576171875, 1.1201171875, 1.8173828125, 0.76416015625, 0.33740234375, 0.0006299018859863281, 0.0265960693359375, 0.000667572021484375, 5.5909156799316406e-05, 0.0005054473876953125, 2.6464462280273438e-05, 0.0009279251098632812, 0.06280517578125, 0.044525146484375, 0.049591064453125, 0.01091766357421875, 0.0096282958984375, 0.285888671875, 0.037811279296875, 0.17236328125, 0.470703125, 1.3896484375], "tokens": [400, 434, 322, 1980, 31256, 322, 9844, 5122, 400, 13228, 280, 537, 4107, 36, 54, 77, 34, 1674, 34, 970, 324, 320, 813, 301, 400, 434, 996, 1159, 372, 1968, 322, 13228, 400, 1158, 38099, 3350, 46, 55, 34986, 36, 54, 48, 4345, 280, 622, 3350, 26, 1870, 293, 400, 1158, 38099]}
{"line_number": 160, "line_type": "original", "code": "                    final double y0 = y1;", "entropy": 2.82421875, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [6.48046875, 2.591796875, 3.45703125, 5.81640625, 1.962890625, 0.078369140625, 3.654296875, 1.119140625, 0.260009765625], "tokens": [4696, 1158, 2064, 533, 34, 280, 533, 35, 45]}
{"line_number": 160, "line_type": "generated", "code": "\n            } else {\n                final BSPTree<Euclidean2D> tree = getTree(false);\n                final BSPTree<Euclidean2D> minus = ((BSPTree.LeafNode<Euclidean2D>) tree.getCut()).getMinus", "entropy": 0.23046875, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.3759765625, 0.0011348724365234375, 0.0297698974609375, 0.01434326171875, 0.07366943359375, 0.955078125, 0.355224609375, 0.0013551712036132812, 0.0462646484375, 0.0008525848388671875, 0.0001035928726196289, 0.0005202293395996094, 1.895427703857422e-05, 0.0011930465698242188, 0.0958251953125, 0.040618896484375, 0.0557861328125, 0.009063720703125, 0.0107269287109375, 0.190673828125, 0.053680419921875, 0.1295166015625, 0.5693359375, 0.9267578125, 0.040008544921875, 0.405029296875, 0.0004794597625732422, 8.940696716308594e-06, 0.0027141571044921875, 8.344650268554688e-07, 0.214111328125, 0.53271484375, 0.336669921875, 2.1796875, 1.486328125, 0.07257080078125, 0.71435546875, 0.548828125, 0.1585693359375, 0.3291015625, 0.0010576248168945312, 2.777576446533203e-05, 0.0003647804260253906, 0.0006327629089355469, 0.005756378173828125, 0.05926513671875, 0.148681640625, 0.32568359375, 0.0004780292510986328, 0.251708984375, 0.1011962890625, 0.1341552734375], "tokens": [324, 320, 813, 301, 400, 1158, 38099, 3350, 46, 55, 34986, 36, 54, 48, 4345, 280, 622, 3350, 26, 1870, 293, 400, 1158, 38099, 3350, 46, 55, 34986, 36, 54, 48, 25897, 280, 1833, 26841, 3350, 32, 17203, 1212, 46, 55, 34986, 36, 54, 5103, 4345, 32, 11640, 303, 4251, 371, 20732]}
{"line_number": 161, "line_type": "original", "code": "                    x1 = point.getX();", "entropy": 2.736328125, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [7.30078125, 8.5703125, 3.765625, 0.269287109375, 1.833984375, 0.105224609375, 0.015167236328125, 0.0305023193359375], "tokens": [4696, 816, 35, 280, 2260, 32, 18817, 473]}
{"line_number": 161, "line_type": "generated", "code": "\n            }\n        }\n        return vertices;\n    }\n\n    /** Get the number of loops of the polygon.\n     * @return number of loops of the polygon\n     */\n    public int getNbLoops() {\n        return getVertices().length;\n    }\n\n   ", "entropy": 0.2122802734375, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.95703125, 0.00467681884765625, 0.0310211181640625, 0.00018298625946044922, 0.1171875, 0.0087432861328125, 0.0011539459228515625, 0.0231781005859375, 0.040771484375, 0.0011987686157226562, 0.28369140625, 0.028045654296875, 1.0458984375, 0.345947265625, 2.478515625, 0.0031986236572265625, 0.62890625, 0.9228515625, 0.0726318359375, 0.63671875, 0.583984375, 0.042388916015625, 0.005130767822265625, 0.447265625, 0.028076171875, 0.1151123046875, 0.0007467269897460938, 0.039215087890625, 0.53955078125, 0.0063018798828125, 0.0227813720703125, 0.31689453125, 0.2254638671875, 0.001804351806640625, 0.01363372802734375, 0.0030040740966796875, 0.03759765625, 0.63427734375, 0.056396484375, 2.384185791015625e-07, 0.0009207725524902344, 0.0004734992980957031, 0.017364501953125, 0.13330078125, 0.036712646484375, 0.0156707763671875, 0.0017566680908203125, 5.745887756347656e-05, 0.0025234222412109375, 0.003154754638671875, 2.5510787963867188e-05, 0.0736083984375], "tokens": [324, 320, 291, 320, 291, 442, 13228, 45, 284, 320, 446, 1022, 1390, 322, 1451, 432, 23737, 432, 322, 20389, 32, 275, 319, 477, 601, 1451, 432, 23737, 432, 322, 20389, 275, 569, 284, 562, 629, 622, 21593, 1773, 4156, 346, 301, 291, 442, 622, 15743, 922, 1322, 45, 284, 320, 446]}
{"line_number": 162, "line_type": "original", "code": "                    y1 = point.getY();", "entropy": 3.1171875, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [6.4296875, 10.953125, 3.75390625, 0.273681640625, 3.267578125, 0.12371826171875, 0.06744384765625, 0.067626953125], "tokens": [4696, 533, 35, 280, 2260, 32, 20431, 473]}
{"line_number": 162, "line_type": "generated", "code": "\n                final BSPTree<Euclidean2D> tree = getTree(false);\n                final BSPTree<Euclidean2D> minus = tree.getMinus();\n                final BSPTree<Euclidean2D> plus  = tree.getPlus();", "entropy": 0.1531982421875, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.54150390625, 0.78955078125, 0.58154296875, 0.00197601318359375, 0.078125, 0.00110626220703125, 0.00011098384857177734, 0.0013113021850585938, 1.1682510375976562e-05, 0.0020294189453125, 0.169189453125, 0.08148193359375, 0.07965087890625, 0.01168060302734375, 0.01334381103515625, 0.2076416015625, 0.063232421875, 0.2164306640625, 0.4072265625, 1.0791015625, 0.0274810791015625, 0.39013671875, 0.0006022453308105469, 1.8596649169921875e-05, 0.006732940673828125, 2.0265579223632812e-06, 0.241943359375, 0.75390625, 0.4013671875, 1.1728515625, 0.0413818359375, 0.2086181640625, 0.118408203125, 0.01078033447265625, 0.056915283203125, 0.1290283203125, 0.03363037109375, 2.1696090698242188e-05, 0.0007443428039550781, 1.4185905456542969e-05, 1.2516975402832031e-05, 0.000339508056640625, 2.6226043701171875e-06, 0.0004222393035888672, 0.0003902912139892578, 0.02886962890625, 8.344650268554688e-07, 0.00140380859375, 2.0384788513183594e-05, 0.00580596923828125, 8.022785186767578e-05, 0.00894927978515625], "tokens": [400, 1158, 38099, 3350, 46, 55, 34986, 36, 54, 48, 4345, 280, 622, 3350, 26, 1870, 293, 400, 1158, 38099, 3350, 46, 55, 34986, 36, 54, 48, 25897, 280, 4345, 32, 371, 20732, 473, 400, 1158, 38099, 3350, 46, 55, 34986, 36, 54, 48, 10952, 225, 280, 4345, 32, 371, 12167, 473]}
{"line_number": 163, "line_type": "original", "code": "                    final double factor = x0 * y1 - y0 * x1;", "entropy": 1.4345703125, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [6.28125, 1.001953125, 4.4765625, 4.12890625, 0.2401123046875, 4.3125, 0.9970703125, 0.221435546875, 0.1226806640625, 0.0089263916015625, 0.036224365234375, 2.52734375, 0.00020575523376464844, 0.0005588531494140625, 0.0016937255859375, 0.0003769397735595703, 0.025299072265625], "tokens": [4696, 1158, 2064, 10365, 280, 816, 34, 319, 533, 35, 429, 533, 34, 319, 816, 35, 45]}
{"line_number": 163, "line_type": "generated", "code": "\n                final BSPTree<Euclidean2D> tree = getTree(false);\n                final BSPTree<Euclidean2D>.Node root = tree.getCut();\n                final BSPTree<Euclidean2D>.Node[] nodes = new BSPTree", "entropy": 0.269775390625, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.5146484375, 0.83740234375, 0.974609375, 0.0020008087158203125, 0.1689453125, 0.0011320114135742188, 8.440017700195312e-05, 0.0013475418090820312, 5.7220458984375e-06, 0.00655364990234375, 0.1075439453125, 0.07037353515625, 0.1112060546875, 0.01349639892578125, 0.01320648193359375, 0.185546875, 0.0770263671875, 0.21875, 0.40478515625, 0.75927734375, 0.009063720703125, 0.89501953125, 0.0007185935974121094, 1.5616416931152344e-05, 0.0026187896728515625, 1.0728836059570312e-06, 0.7919921875, 0.450439453125, 1.20703125, 0.09429931640625, 0.546875, 0.0013818740844726562, 0.56689453125, 0.0002963542938232422, 0.07147216796875, 0.3515625, 0.51123046875, 0.89501953125, 0.0005445480346679688, 0.159912109375, 0.00011217594146728516, 1.33514404296875e-05, 0.00010335445404052734, 1.5497207641601562e-06, 0.01090240478515625, 0.04052734375, 0.487060546875, 1.4326171875, 0.049896240234375, 0.97216796875, 0.0044403076171875, 1.1920928955078125e-06], "tokens": [400, 1158, 38099, 3350, 46, 55, 34986, 36, 54, 48, 4345, 280, 622, 3350, 26, 1870, 293, 400, 1158, 38099, 3350, 46, 55, 34986, 36, 54, 4503, 1212, 3051, 280, 4345, 32, 11640, 303, 473, 400, 1158, 38099, 3350, 46, 55, 34986, 36, 54, 4503, 1212, 1178, 5166, 280, 537, 38099, 3350]}
{"line_number": 164, "line_type": "original", "code": "                    sum  += factor;", "entropy": 5.97265625, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [5.703125, 13.3203125, 6.2734375, 3.6484375, 0.96142578125, 5.9296875], "tokens": [4696, 3632, 225, 1454, 10365, 45]}
{"line_number": 164, "line_type": "generated", "code": "\n                getTree(false).visit(visitor);\n\n                vertices = visitor.getVertices();\n\n            }\n        }\n        return vertices;\n    }\n\n    /** Get the vertices of the polygon.\n     * <p>The polygon boundary can be represented as an array of", "entropy": 0.2452392578125, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.359375, 0.33642578125, 0.0120849609375, 0.0156707763671875, 0.15478515625, 0.0011873245239257812, 0.05377197265625, 0.0137786865234375, 0.04632568359375, 0.0257720947265625, 0.470947265625, 2.173828125, 0.052032470703125, 0.109375, 0.0008692741394042969, 0.5322265625, 0.16015625, 0.0361328125, 0.80419921875, 9.894371032714844e-05, 0.037078857421875, 0.00021600723266601562, 0.58154296875, 0.0087890625, 0.001377105712890625, 0.090576171875, 0.0426025390625, 0.0022945404052734375, 0.251953125, 0.0257415771484375, 0.9990234375, 0.348388671875, 1.9580078125, 0.171142578125, 0.2266845703125, 0.79150390625, 0.841796875, 0.06890869140625, 0.0026073455810546875, 0.2724609375, 0.0003871917724609375, 0.0009288787841796875, 0.43701171875, 0.1846923828125, 0.006412506103515625, 0.0040283203125, 0.0013418197631835938, 0.0008697509765625, 0.0017032623291015625, 0.0256500244140625, 0.0071258544921875, 0.0011682510375976562], "tokens": [400, 622, 3350, 26, 1870, 547, 8275, 26, 18498, 293, 2110, 13228, 280, 16957, 32, 371, 15743, 473, 1064, 320, 291, 320, 291, 442, 13228, 45, 284, 320, 446, 1022, 1390, 322, 13228, 432, 322, 20389, 32, 275, 319, 333, 98, 48, 1318, 20389, 14563, 883, 526, 17718, 619, 600, 1417, 432]}
{"line_number": 165, "line_type": "original", "code": "                    sumX += factor * (x0 + x1);", "entropy": 1.521484375, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [6.26171875, 11.171875, 1.0849609375, 0.43896484375, 0.1475830078125, 0.004913330078125, 0.0160980224609375, 0.63134765625, 0.0096588134765625, 0.0029697418212890625, 0.0011720657348632812, 0.00029659271240234375, 0.00711822509765625], "tokens": [4696, 3632, 74, 1454, 10365, 319, 308, 106, 34, 474, 816, 35, 293]}
{"line_number": 165, "line_type": "generated", "code": "\n\n                // build the loops from the segments\n                final Vector2D[] loop = visitor.loops.get(0);\n                final Vector2D[][] loops = new Vector2D[visitor.loops.size()][];\n                int index = 0;", "entropy": 0.488525390625, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [1.650390625, 0.62255859375, 2.255859375, 0.289794921875, 0.349853515625, 1.0517578125, 0.21044921875, 0.98583984375, 0.5009765625, 0.958984375, 1.3486328125, 0.0039215087890625, 6.4849853515625e-05, 0.65283203125, 2.80859375, 0.82080078125, 0.450439453125, 0.00036334991455078125, 1.548828125, 0.33056640625, 0.861328125, 0.053924560546875, 0.1492919921875, 0.1180419921875, 0.1614990234375, 0.580078125, 0.86181640625, 0.0002269744873046875, 8.249282836914062e-05, 0.9453125, 0.6318359375, 0.1907958984375, 0.11444091796875, 0.0008149147033691406, 1.3113021850585938e-05, 3.1113624572753906e-05, 0.01800537109375, 0.049835205078125, 8.7738037109375e-05, 0.080810546875, 0.0079193115234375, 0.0004982948303222656, 0.01001739501953125, 0.09234619140625, 0.08917236328125, 0.294677734375, 1.08984375, 1.7353515625, 0.177001953125, 0.04815673828125, 0.20751953125, 0.0002071857452392578], "tokens": [2110, 434, 1968, 322, 23737, 645, 322, 17136, 400, 1158, 4107, 36, 54, 1178, 5258, 280, 16957, 32, 35721, 32, 371, 26, 34, 293, 400, 1158, 4107, 36, 54, 11336, 23737, 280, 537, 4107, 36, 54, 77, 18498, 32, 35721, 32, 891, 346, 1674, 970, 400, 629, 1650, 280, 225, 34, 45]}
