{"line_number": 402, "line_type": "original", "code": "                            tmp = 0.1;", "entropy": 3.068359375, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [9.4140625, 6.7421875, 1.6220703125, 1.388671875, 1.119140625, 0.82080078125, 2.123046875, 1.310546875], "tokens": [9316, 3691, 280, 225, 34, 32, 35, 45]}
{"line_number": 402, "line_type": "generated", "code": "\n                }\n                if (delta <= 2.2204e-16 * xNorm) {\n                    throw new OptimizationException(LocalizedFormats.TOO_SMALL_PARAMETERS_RELATIVE_TOLERANCE,\n                            parRelativeTolerance);\n                }", "entropy": 0.0936279296875, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [0.10211181640625, 0.007415771484375, 0.387451171875, 0.060760498046875, 0.304443359375, 0.367431640625, 0.039031982421875, 0.284423828125, 0.228271484375, 0.0112762451171875, 0.003284454345703125, 0.00036716461181640625, 0.0004069805145263672, 0.0005946159362792969, 0.003650665283203125, 0.0004570484161376953, 0.0011224746704101562, 0.0019092559814453125, 0.065185546875, 0.046112060546875, 8.237361907958984e-05, 0.007274627685546875, 0.00720977783203125, 0.032318115234375, 0.1715087890625, 0.0006580352783203125, 0.016448974609375, 8.64267349243164e-05, 0.006565093994140625, 0.0209808349609375, 9.5367431640625e-06, 0.00035071372985839844, 0.472412109375, 0.0001112222671508789, 0.0019435882568359375, 2.205371856689453e-05, 0.82275390625, 0.00039076805114746094, 0.00368499755859375, 8.940696716308594e-06, 0.00019037723541259766, 0.01528167724609375, 0.00015115737915039062, 0.0006542205810546875, 0.01187896728515625, 0.045135498046875, 0.061309814453125, 0.0008983612060546875, 5.221366882324219e-05, 0.41943359375, 0.82373046875, 0.00643157958984375], "tokens": [400, 320, 400, 415, 308, 6558, 2511, 225, 36, 32, 36, 36, 34, 38, 87, 31, 35, 40, 319, 816, 14373, 27, 301, 528, 1422, 537, 41916, 984, 26, 24225, 19298, 32, 35775, 81, 18820, 81, 34004, 81, 16477, 13829, 81, 1407, 10062, 6307, 30, 1014, 880, 11777, 26265, 293, 400, 320]}
{"line_number": 627, "line_type": "original", "code": "            } else if (fp < 0) {", "entropy": 2.529296875, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [2.677734375, 12.625, 5.66015625, 1.7763671875, 0.083740234375, 3.888671875, 0.9853515625, 0.014862060546875, 0.0003612041473388672, 0.038543701171875, 0.05999755859375], "tokens": [1468, 320, 813, 415, 308, 4426, 333, 225, 34, 27, 301]}
{"line_number": 627, "line_type": "generated", "code": "\n            double d = lmDiag[j];\n            double qtbpj = 0;\n            for (int k = j; k < solvedCols; ++k) {\n                if (diag[permutation[k]]!= 0) {\n                    break;", "entropy": 0.269775390625, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [0.30224609375, 0.1138916015625, 0.603515625, 0.64892578125, 1.2431640625, 0.64111328125, 0.00044727325439453125, 0.279296875, 0.032684326171875, 0.55419921875, 0.64013671875, 1.5791015625, 1.431640625, 0.004489898681640625, 0.0064849853515625, 0.935546875, 0.0004010200500488281, 0.0777587890625, 0.418701171875, 0.0831298828125, 0.0010671615600585938, 0.0004572868347167969, 0.06292724609375, 0.0002894401550292969, 0.063720703125, 0.004730224609375, 0.0011949539184570312, 0.005218505859375, 0.0173797607421875, 0.0122833251953125, 0.0150909423828125, 0.0045166015625, 5.793571472167969e-05, 0.0013475418090820312, 0.004833221435546875, 0.02581787109375, 1.30078125, 0.04425048828125, 0.93505859375, 0.487548828125, 0.6826171875, 0.00021541118621826172, 0.00012040138244628906, 0.00099945068359375, 0.041961669921875, 0.003070831298828125, 1.3828277587890625e-05, 0.01898193359375, 0.0158843994140625, 0.0268707275390625, 0.6494140625, 0.00046324729919433594], "tokens": [324, 2064, 343, 280, 30780, 26244, 77, 92, 970, 324, 2064, 2678, 7163, 25287, 280, 225, 34, 45, 324, 436, 308, 410, 831, 280, 594, 45, 831, 333, 19479, 19911, 45, 3311, 93, 27, 301, 400, 415, 308, 13006, 77, 40237, 77, 93, 3212, 863, 225, 34, 27, 301, 528, 1626, 45]}
{"line_number": 628, "line_type": "original", "code": "                paru = Math.min(paru, lmPar);", "entropy": 2.11328125, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [5.3828125, 10.828125, 4.96484375, 0.137451171875, 2.2109375, 0.00182342529296875, 1.0908203125, 0.01123809814453125, 0.048614501953125, 0.0005960464477539062, 0.0017347335815429688, 2.333984375, 0.2291259765625, 2.3515625], "tokens": [2071, 880, 103, 280, 4175, 32, 887, 26, 568, 103, 30, 30780, 926, 293]}
{"line_number": 628, "line_type": "generated", "code": "\n            double d = 1.0 / dpj;\n            lmDiag[j] = d;\n            work[j] *= d;\n\n            //  the transformations to eliminate the row of d modify only a\n            //  single element of (q transpose", "entropy": 0.248291015625, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [0.8037109375, 0.88232421875, 1.8076171875, 1.7197265625, 0.279541015625, 0.25537109375, 1.3056640625, 0.019012451171875, 1.0986328125, 0.06964111328125, 1.609325408935547e-05, 0.004543304443359375, 0.04351806640625, 0.2890625, 0.0153045654296875, 0.0006313323974609375, 0.1417236328125, 0.0013103485107421875, 0.041259765625, 0.87451171875, 0.0255584716796875, 0.51416015625, 0.15625, 0.0007781982421875, 0.045379638671875, 0.0007929801940917969, 0.2548828125, 0.006397247314453125, 0.0008611679077148438, 0.06280517578125, 0.005279541015625, 0.308349609375, 0.26904296875, 0.0058135986328125, 1.1086463928222656e-05, 0.0017461776733398438, 5.042552947998047e-05, 0.00330352783203125, 0.0013217926025390625, 0.00034308433532714844, 0.52783203125, 0.005489349365234375, 0.0027942657470703125, 0.0136871337890625, 0.00019180774688720703, 0.84814453125, 0.0123291015625, 0.0004520416259765625, 7.87973403930664e-05, 0.028533935546875, 0.0762939453125, 0.078369140625], "tokens": [324, 2064, 343, 280, 225, 35, 32, 34, 517, 11339, 92, 45, 324, 30780, 26244, 77, 92, 79, 280, 343, 45, 324, 1389, 77, 92, 79, 10439, 343, 45, 1064, 434, 225, 322, 34816, 372, 40533, 322, 2698, 432, 343, 5351, 1755, 312, 324, 434, 225, 3982, 1994, 432, 308, 99, 27224]}
{"line_number": 605, "line_type": "original", "code": "            for (int j = 0; j < solvedCols; ++j) {", "entropy": 0.50732421875, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [4.8203125, 3.056640625, 0.0458984375, 0.0169219970703125, 0.3359375, 0.01247406005859375, 0.027984619140625, 0.00838470458984375, 0.0077667236328125, 0.002582550048828125, 0.027099609375, 0.55615234375, 0.06451416015625, 0.0035457611083984375, 0.014434814453125, 0.0003192424774169922, 0.004497528076171875, 0.1256103515625], "tokens": [1468, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 19479, 19911, 45, 3311, 92, 27, 301]}
{"line_number": 605, "line_type": "generated", "code": "\n     */\n    private void determineLMDirection(final double[] qy, final double[] diag,\n                                     final double[] lmDiag, final double[] lmDir) {\n\n        // copy r and (q transpose)*b to preserve input and initialize s.", "entropy": 0.149169921875, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [0.53076171875, 0.36376953125, 0.0175628662109375, 0.215087890625, 0.02679443359375, 0.0198822021484375, 0.003757476806640625, 0.00015544891357421875, 6.890296936035156e-05, 0.00727081298828125, 0.548828125, 0.09210205078125, 0.03582763671875, 0.00128936767578125, 0.00040793418884277344, 0.0006380081176757812, 0.61767578125, 0.0008897781372070312, 0.0034236907958984375, 0.048248291015625, 0.0017337799072265625, 0.93896484375, 0.04693603515625, 0.0016307830810546875, 0.0023403167724609375, 0.0164337158203125, 0.025146484375, 0.051361083984375, 0.11383056640625, 0.0022029876708984375, 0.00125885009765625, 0.06866455078125, 0.001300811767578125, 0.005329132080078125, 0.0308074951171875, 0.54052734375, 0.56591796875, 1.36328125, 0.6953125, 0.1851806640625, 0.043304443359375, 0.0004963874816894531, 0.0231170654296875, 0.0059967041015625, 0.0004603862762451172, 0.047119140625, 0.0079345703125, 0.088623046875, 0.00490570068359375, 0.0017652511596679688, 0.004791259765625, 0.331298828125], "tokens": [275, 569, 284, 945, 763, 9921, 62, 5108, 2721, 26, 3220, 2064, 1178, 2678, 107, 30, 1158, 2064, 1178, 15534, 30, 9474, 1158, 2064, 1178, 30780, 26244, 30, 1158, 2064, 1178, 30780, 2976, 27, 301, 584, 434, 1933, 540, 461, 308, 99, 27224, 4586, 84, 372, 24070, 1509, 461, 7379, 309, 32]}
{"line_number": 606, "line_type": "original", "code": "                int pj = permutation[j];", "entropy": 2.38671875, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [8.9765625, 2.25, 7.58984375, 0.1435546875, 0.055755615234375, 0.006961822509765625, 0.05133056640625, 0.01451873779296875], "tokens": [2071, 629, 46704, 280, 38151, 77, 92, 970]}
{"line_number": 606, "line_type": "generated", "code": "\n     */\n    private void determineLMDirection(final double[] qy,\n                                     final double[] diag,\n                                     final double[] lmDiag,\n                                     final double[] work) {\n\n        final int n = qy.length;\n        double sum;\n        for", "entropy": 0.292236328125, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [0.45458984375, 0.1024169921875, 0.01264190673828125, 0.208251953125, 0.035247802734375, 0.034698486328125, 0.0054931640625, 0.00025844573974609375, 9.250640869140625e-05, 0.00732421875, 0.56201171875, 0.089599609375, 0.0321044921875, 0.0016260147094726562, 0.00038909912109375, 0.0006542205810546875, 1.67578125, 0.044219970703125, 0.00101470947265625, 0.0035839080810546875, 0.04986572265625, 0.0006570816040039062, 0.1888427734375, 0.0494384765625, 0.0012216567993164062, 0.0025959014892578125, 0.01175689697265625, 0.0273284912109375, 0.0003440380096435547, 0.0755615234375, 0.034149169921875, 0.000545501708984375, 0.0011844635009765625, 0.0062103271484375, 0.017333984375, 0.0188446044921875, 0.475830078125, 1.7978515625, 0.1927490234375, 0.48291015625, 0.53857421875, 0.445556640625, 0.00101470947265625, 0.0007834434509277344, 9.465217590332031e-05, 0.03033447265625, 0.438720703125, 2.208984375, 1.78125, 0.923828125, 0.91552734375, 1.2021484375], "tokens": [275, 569, 284, 945, 763, 9921, 62, 5108, 2721, 26, 3220, 2064, 1178, 2678, 107, 30, 9474, 1158, 2064, 1178, 15534, 30, 9474, 1158, 2064, 1178, 30780, 26244, 30, 9474, 1158, 2064, 1178, 1389, 27, 301, 584, 1158, 629, 310, 280, 2678, 107, 32, 1322, 45, 291, 2064, 3632, 45, 291, 436]}
{"line_number": 607, "line_type": "original", "code": "                work1[pj] = work3[pj] * diag[pj] / dxNorm;", "entropy": 1.63671875, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [8.546875, 5.203125, 1.216796875, 0.181884765625, 3.4453125, 0.0181121826171875, 0.88037109375, 1.91796875, 2.029296875, 0.0031375885009765625, 0.07855224609375, 0.4111328125, 2.3046875, 2.58203125, 0.009124755859375, 0.01375579833984375, 2.990234375, 0.9345703125, 1.5263671875, 0.0027618408203125, 0.07080078125], "tokens": [2071, 1389, 35, 77, 25287, 79, 280, 1389, 37, 77, 25287, 79, 319, 15534, 77, 25287, 79, 517, 12211, 14373, 45]}
{"line_number": 607, "line_type": "generated", "code": "\n    private void determineLMDirection(final double[] qy, final double[] diag,\n                                     final double[] lmDiag, final double[] work) {\n\n        // copy r and (q transpose)*b to preserve input and initialize s.\n        for (", "entropy": 0.1951904296875, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [0.444580078125, 0.482666015625, 0.03582763671875, 0.0650634765625, 0.007171630859375, 0.0004241466522216797, 8.666515350341797e-05, 0.00922393798828125, 0.6572265625, 0.077880859375, 0.0303802490234375, 0.0029888153076171875, 0.0005173683166503906, 0.0007877349853515625, 0.70361328125, 0.0007877349853515625, 0.0040740966796875, 0.023040771484375, 0.0010347366333007812, 1.16015625, 0.061920166015625, 0.000980377197265625, 0.0016031265258789062, 0.00820159912109375, 0.039459228515625, 0.0003674030303955078, 0.1270751953125, 0.0007414817810058594, 0.0008349418640136719, 0.01334381103515625, 0.016998291015625, 0.0245208740234375, 0.64892578125, 0.6025390625, 1.2587890625, 0.49951171875, 0.185302734375, 0.0323486328125, 0.000484466552734375, 0.0219573974609375, 0.0064239501953125, 0.0003974437713623047, 0.05291748046875, 0.00847625732421875, 0.11053466796875, 0.00444793701171875, 0.001758575439453125, 0.00966644287109375, 0.71240234375, 0.048980712890625, 1.9375, 0.001346588134765625], "tokens": [284, 945, 763, 9921, 62, 5108, 2721, 26, 3220, 2064, 1178, 2678, 107, 30, 1158, 2064, 1178, 15534, 30, 9474, 1158, 2064, 1178, 30780, 26244, 30, 1158, 2064, 1178, 1389, 27, 301, 584, 434, 1933, 540, 461, 308, 99, 27224, 4586, 84, 372, 24070, 1509, 461, 7379, 309, 32, 291, 436, 308]}
{"line_number": 609, "line_type": "original", "code": "            for (int j = 0; j < solvedCols; ++j) {", "entropy": 0.634765625, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [8.625, 2.021484375, 0.00496673583984375, 0.0050811767578125, 0.399658203125, 0.00986480712890625, 0.0178680419921875, 0.01043701171875, 0.0077667236328125, 0.0004949569702148438, 0.0039825439453125, 0.189453125, 0.043487548828125, 0.003231048583984375, 0.01397705078125, 0.00011706352233886719, 0.0016450881958007812, 0.0643310546875], "tokens": [1468, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 19479, 19911, 45, 3311, 92, 27, 301]}
{"line_number": 609, "line_type": "generated", "code": "\n        // copy r and (q transpose)*b to preserve input and initialize s.\n        // in particular, save the diagonal elements of r in x.\n\n        for (int j = 0; j < solvedCols; ++j) {\n            work[", "entropy": 0.152099609375, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [0.1597900390625, 0.9501953125, 1.59375, 0.416015625, 0.1405029296875, 0.0247344970703125, 0.0004420280456542969, 0.024810791015625, 0.005840301513671875, 0.00044465065002441406, 0.039459228515625, 0.006420135498046875, 0.0770263671875, 0.003681182861328125, 0.0021305084228515625, 0.01262664794921875, 0.50732421875, 0.038238525390625, 0.1441650390625, 0.0067138671875, 0.0302581787109375, 5.805492401123047e-05, 0.0028133392333984375, 0.0016202926635742188, 0.00975799560546875, 0.0054473876953125, 1.3589859008789062e-05, 0.0007219314575195312, 0.097412109375, 0.005706787109375, 0.06005859375, 1.2880859375, 0.72021484375, 0.0025348663330078125, 0.0011720657348632812, 0.08587646484375, 0.0033245086669921875, 0.00656890869140625, 0.00751495361328125, 0.005573272705078125, 0.00025963783264160156, 0.0017337799072265625, 0.2357177734375, 0.07537841796875, 0.0014295578002929688, 0.0127716064453125, 6.794929504394531e-05, 0.000888824462890625, 0.005615234375, 0.034423828125, 1.01953125, 0.0296630859375], "tokens": [291, 434, 1933, 540, 461, 308, 99, 27224, 4586, 84, 372, 24070, 1509, 461, 7379, 309, 32, 291, 434, 328, 8409, 30, 4131, 322, 27601, 4702, 432, 540, 328, 816, 32, 584, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 19479, 19911, 45, 3311, 92, 27, 301, 324, 1389, 77]}
{"line_number": 610, "line_type": "original", "code": "                int pj = permutation[j];", "entropy": 2.68359375, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [9.078125, 3.283203125, 7.359375, 0.1396484375, 0.51171875, 0.0026226043701171875, 1.0859375, 0.005886077880859375], "tokens": [2071, 629, 46704, 280, 38151, 77, 92, 970]}
{"line_number": 610, "line_type": "generated", "code": "\n        // copy R and Qty to preserve input and initialize s\n        for (int j = 0; j < solvedCols; ++j) {\n            for (int i = j + 1; i < solvedCols; ++i) {\n               ", "entropy": 0.177490234375, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [0.2529296875, 0.72412109375, 1.169921875, 1.1171875, 0.2900390625, 0.12139892578125, 0.1390380859375, 0.65380859375, 0.051361083984375, 0.3671875, 0.0043487548828125, 0.0025177001953125, 0.2462158203125, 0.199462890625, 0.74560546875, 0.0023365020751953125, 0.0009832382202148438, 0.0743408203125, 0.00749969482421875, 0.01141357421875, 0.0121612548828125, 0.005893707275390625, 0.00027561187744140625, 0.003589630126953125, 0.2266845703125, 0.1260986328125, 0.0016269683837890625, 0.006870269775390625, 7.37905502319336e-05, 0.0009007453918457031, 0.003986358642578125, 0.03228759765625, 0.91015625, 0.0003514289855957031, 0.0002727508544921875, 0.0279388427734375, 0.0004730224609375, 0.1827392578125, 1.3564453125, 0.0006008148193359375, 0.0008025169372558594, 0.002361297607421875, 0.0003037452697753906, 0.01555633544921875, 0.0134735107421875, 0.090576171875, 0.0005044937133789062, 0.00020062923431396484, 5.6743621826171875e-05, 0.0010156631469726562, 0.00148773193359375, 0.0157012939453125], "tokens": [291, 434, 1933, 559, 461, 1910, 618, 372, 24070, 1509, 461, 7379, 309, 291, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 19479, 19911, 45, 3311, 92, 27, 301, 324, 436, 308, 410, 595, 280, 594, 474, 225, 35, 45, 595, 333, 19479, 19911, 45, 3311, 91, 27, 301, 400]}
{"line_number": 611, "line_type": "original", "code": "                work1[pj] /= work2[j];", "entropy": 2.9453125, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [9.109375, 3.916015625, 2.50390625, 1.080078125, 5.84765625, 0.01337432861328125, 6.0859375, 3.02734375, 1.25, 0.0229644775390625, 2.474609375, 0.0251312255859375], "tokens": [2071, 1389, 35, 77, 25287, 79, 14374, 1389, 36, 77, 92, 970]}
{"line_number": 611, "line_type": "generated", "code": "\n        for (int j = 0; j < solvedCols; ++j) {\n            lmDiag[j] = diag[j];\n            work[j] = qy[j];\n        }\n\n        // eliminate the diagonal matrix d using a G", "entropy": 0.0985107421875, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [0.142822265625, 0.7490234375, 0.0026416778564453125, 0.0011720657348632812, 0.138427734375, 0.009307861328125, 0.0138092041015625, 0.01093292236328125, 0.004302978515625, 0.00033664703369140625, 0.00264739990234375, 0.1700439453125, 0.1243896484375, 0.0016012191772460938, 0.00708770751953125, 7.37905502319336e-05, 0.0009398460388183594, 0.0059051513671875, 0.043304443359375, 0.93359375, 0.076904296875, 0.00026988983154296875, 0.03717041015625, 0.0001747608184814453, 0.0014934539794921875, 0.01480865478515625, 0.002040863037109375, 0.357177734375, 0.012786865234375, 0.487060546875, 0.384033203125, 0.0006303787231445312, 0.005615234375, 0.0011796951293945312, 0.02020263671875, 0.05670166015625, 0.00018405914306640625, 0.00015246868133544922, 0.0447998046875, 0.012603759765625, 0.0282745361328125, 0.0003085136413574219, 0.1763916015625, 0.162353515625, 0.2822265625, 0.0006093978881835938, 0.454345703125, 0.004405975341796875, 0.013519287109375, 0.00031280517578125, 0.0005679130554199219, 0.1175537109375], "tokens": [291, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 19479, 19911, 45, 3311, 92, 27, 301, 324, 30780, 26244, 77, 92, 79, 280, 15534, 77, 92, 970, 324, 1389, 77, 92, 79, 280, 2678, 107, 77, 92, 970, 291, 320, 584, 434, 40533, 322, 27601, 5045, 343, 1471, 312, 570]}
{"line_number": 612, "line_type": "original", "code": "                double tmp = work1[pj];", "entropy": 3.0546875, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [9.3203125, 2.890625, 3.822265625, 1.3642578125, 4.1171875, 2.740234375, 0.019744873046875, 3.046875, 0.1673583984375], "tokens": [2071, 2064, 3691, 280, 1389, 35, 77, 25287, 970]}
{"line_number": 612, "line_type": "generated", "code": "\n        for (int j = 0; j < solvedCols; ++j) {\n            lmDiag[j] = diag[j];\n        }\n\n        // eliminate the diagonal matrix d using a Givens rotation\n        for (int j = 0", "entropy": 0.1177978515625, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [0.1524658203125, 0.64013671875, 0.003978729248046875, 0.0016050338745117188, 0.1453857421875, 0.006099700927734375, 0.0122833251953125, 0.006267547607421875, 0.003543853759765625, 0.0002999305725097656, 0.001800537109375, 0.1737060546875, 0.11224365234375, 0.00135040283203125, 0.008026123046875, 6.401538848876953e-05, 0.0012960433959960938, 0.004329681396484375, 0.04150390625, 0.5458984375, 0.2666015625, 0.0003330707550048828, 0.0312347412109375, 0.00014674663543701172, 0.0018529891967773438, 0.0167694091796875, 0.002857208251953125, 0.401611328125, 0.00699615478515625, 0.69140625, 0.0003724098205566406, 0.8359375, 0.38330078125, 0.48388671875, 0.0001506805419921875, 0.66650390625, 0.007335662841796875, 0.00540924072265625, 0.0006794929504394531, 0.000759124755859375, 0.211669921875, 0.0023632049560546875, 3.0994415283203125e-06, 0.0199432373046875, 0.055511474609375, 0.0223846435546875, 0.0002818107604980469, 0.0005702972412109375, 0.1339111328125, 0.0010728836059570312, 0.003879547119140625, 0.0066375732421875], "tokens": [291, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 19479, 19911, 45, 3311, 92, 27, 301, 324, 30780, 26244, 77, 92, 79, 280, 15534, 77, 92, 970, 291, 320, 584, 434, 40533, 322, 27601, 5045, 343, 1471, 312, 570, 387, 1229, 11410, 291, 436, 308, 410, 594, 280, 225, 34]}
{"line_number": 613, "line_type": "original", "code": "                for (int i = j + 1; i < solvedCols; ++i) {", "entropy": 0.70947265625, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [8.25, 4.21875, 0.004032135009765625, 0.00528717041015625, 0.50439453125, 0.004550933837890625, 0.228515625, 0.54345703125, 0.0026073455810546875, 0.00141143798828125, 0.0038547515869140625, 0.001995086669921875, 0.004547119140625, 0.024871826171875, 0.3681640625, 0.0012102127075195312, 0.005985260009765625, 0.00019490718841552734, 0.0055389404296875, 0.01161956787109375], "tokens": [2071, 436, 308, 410, 595, 280, 594, 474, 225, 35, 45, 595, 333, 19479, 19911, 45, 3311, 91, 27, 301]}
{"line_number": 613, "line_type": "generated", "code": "\n            lmDiag[j] = diag[j];\n        }\n        for (int j = 0; j < solvedCols; ++j) {\n            work[j] = qy[j];\n        }\n\n        // eliminate the diagonal matrix d using", "entropy": 0.12939453125, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [0.09027099609375, 0.4052734375, 0.335205078125, 0.0005407333374023438, 0.07232666015625, 0.00035881996154785156, 0.0057220458984375, 0.02239990234375, 0.00302886962890625, 0.55078125, 0.0147552490234375, 1.2041015625, 0.0037364959716796875, 0.52880859375, 0.4716796875, 0.0010595321655273438, 0.0002989768981933594, 0.05047607421875, 0.00725555419921875, 0.028411865234375, 0.00394439697265625, 0.02227783203125, 0.00038051605224609375, 0.00989532470703125, 0.273681640625, 0.328125, 0.0018415451049804688, 0.0033512115478515625, 4.649162292480469e-06, 0.0006031990051269531, 0.0014896392822265625, 0.097412109375, 0.71923828125, 0.0010700225830078125, 0.01041412353515625, 0.0022296905517578125, 0.003509521484375, 0.2093505859375, 0.00014925003051757812, 0.0002090930938720703, 0.056732177734375, 0.022369384765625, 0.0394287109375, 0.0002841949462890625, 0.07958984375, 0.0828857421875, 0.50146484375, 0.00018322467803955078, 0.445556640625, 0.00572967529296875, 0.00853729248046875, 0.0002727508544921875], "tokens": [324, 30780, 26244, 77, 92, 79, 280, 15534, 77, 92, 970, 291, 320, 291, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 19479, 19911, 45, 3311, 92, 27, 301, 324, 1389, 77, 92, 79, 280, 2678, 107, 77, 92, 970, 291, 320, 584, 434, 40533, 322, 27601, 5045, 343, 1471]}
{"line_number": 614, "line_type": "original", "code": "                    work1[permutation[i]] -= jacobian[i][pj] * tmp;", "entropy": 2.943359375, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [8.7421875, 3.236328125, 6.55078125, 0.008636474609375, 6.734375, 0.0012712478637695312, 4.38671875, 0.030853271484375, 3.375, 10.2890625, 3.603515625, 0.224853515625, 0.43994140625, 0.143798828125, 2.6484375, 0.09002685546875, 0.0142974853515625, 5.04296875, 0.336181640625], "tokens": [4696, 1389, 35, 77, 40237, 77, 91, 3212, 5912, 594, 30495, 77, 91, 1674, 25287, 79, 319, 3691, 45]}
{"line_number": 614, "line_type": "generated", "code": "\n            lmDiag[j] = diag[pj];\n        }\n\n        // eliminate the diagonal matrix d using a Givens rotation\n        for (int j = 0; j < solvedCols; ++j) {\n            double s = 0;\n           ", "entropy": 0.1470947265625, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [1.380859375, 0.22705078125, 0.1199951171875, 0.0003256797790527344, 0.33544921875, 0.0003325939178466797, 0.005397796630859375, 0.04388427734375, 0.0027713775634765625, 0.0248870849609375, 0.037567138671875, 0.33984375, 0.0002758502960205078, 0.42236328125, 0.189697265625, 0.478271484375, 0.0002294778823852539, 0.64306640625, 0.006053924560546875, 0.00916290283203125, 0.0010366439819335938, 0.0007266998291015625, 0.194580078125, 0.002300262451171875, 3.337860107421875e-06, 0.020111083984375, 0.0221710205078125, 0.019073486328125, 0.00016450881958007812, 0.00032520294189453125, 0.0908203125, 0.0012540817260742188, 0.00753021240234375, 0.01605224609375, 0.00112152099609375, 0.000980377197265625, 0.0003600120544433594, 0.0244140625, 0.0221710205078125, 0.1895751953125, 0.005199432373046875, 3.540515899658203e-05, 0.00013554096221923828, 0.0012607574462890625, 0.65185546875, 0.62255859375, 1.04296875, 0.0867919921875, 0.0439453125, 0.0006861686706542969, 0.2293701171875, 0.08233642578125], "tokens": [324, 30780, 26244, 77, 92, 79, 280, 15534, 77, 25287, 970, 291, 320, 584, 434, 40533, 322, 27601, 5045, 343, 1471, 312, 570, 387, 1229, 11410, 291, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 19479, 19911, 45, 3311, 92, 27, 301, 324, 2064, 309, 280, 225, 34, 45, 324]}
{"line_number": 617, "line_type": "original", "code": "            sum2 = 0;", "entropy": 2.767578125, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [3.2734375, 8.40625, 2.1328125, 2.837890625, 2.41796875, 0.01313018798828125, 0.291259765625], "tokens": [1468, 3632, 36, 280, 225, 34, 45]}
{"line_number": 617, "line_type": "generated", "code": "\n            lmDiag[j] = diag[pj];\n            work[j] = qy[pj];\n        }\n\n        // eliminate the diagonal matrix d using a Givens rotation\n        for (int j = 0; j < solvedCols; ++", "entropy": 0.0792236328125, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [0.19677734375, 0.1229248046875, 0.59765625, 0.00018584728240966797, 0.38232421875, 0.00041556358337402344, 0.005481719970703125, 0.0252838134765625, 0.0006437301635742188, 0.1064453125, 0.06695556640625, 0.241943359375, 0.350341796875, 0.0008997917175292969, 0.0650634765625, 0.00024437904357910156, 0.0161895751953125, 0.055908203125, 0.00032782554626464844, 0.00015282630920410156, 0.0191497802734375, 0.0284423828125, 0.09283447265625, 0.00018453598022460938, 0.25439453125, 0.1805419921875, 0.329345703125, 0.00025177001953125, 0.38134765625, 0.00640106201171875, 0.0192108154296875, 0.0004131793975830078, 0.0006098747253417969, 0.1470947265625, 0.0044708251953125, 3.337860107421875e-06, 0.0233306884765625, 0.024627685546875, 0.03826904296875, 0.00035309791564941406, 0.00026035308837890625, 0.10272216796875, 0.0011501312255859375, 0.003635406494140625, 0.00799560546875, 0.0006895065307617188, 0.001499176025390625, 0.0002474784851074219, 0.01180267333984375, 0.00423431396484375, 0.1939697265625, 0.0055084228515625], "tokens": [324, 30780, 26244, 77, 92, 79, 280, 15534, 77, 25287, 970, 324, 1389, 77, 92, 79, 280, 2678, 107, 77, 25287, 970, 291, 320, 584, 434, 40533, 322, 27601, 5045, 343, 1471, 312, 570, 387, 1229, 11410, 291, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 19479, 19911, 45, 3311]}
{"line_number": 618, "line_type": "original", "code": "            for (int j = 0; j < solvedCols; ++j) {", "entropy": 0.8173828125, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [3.14453125, 6.2890625, 0.005096435546875, 0.0035648345947265625, 3.513671875, 1.328125, 0.027587890625, 0.0222320556640625, 0.0035381317138671875, 0.0017242431640625, 0.01073455810546875, 0.2548828125, 0.03436279296875, 0.005321502685546875, 0.00962066650390625, 0.0006303787231445312, 0.006649017333984375, 0.052001953125], "tokens": [1468, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 19479, 19911, 45, 3311, 92, 27, 301]}
{"line_number": 618, "line_type": "generated", "code": "\n            lmDiag[j] = diag[pj];", "entropy": 0.177734375, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [0.4580078125, 0.71728515625, 0.0908203125, 0.0011234283447265625, 0.0172271728515625, 0.0008296966552734375, 0.004093170166015625, 0.2244873046875, 0.331787109375, 0.0531005859375, 0.05621337890625], "tokens": [324, 30780, 26244, 77, 92, 79, 280, 15534, 77, 25287, 970]}
{"line_number": 619, "line_type": "original", "code": "                double s = work1[permutation[j]];", "entropy": 2.541015625, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [7.33203125, 5.30859375, 0.470703125, 0.058319091796875, 3.25390625, 5.23828125, 0.01453399658203125, 5.44140625, 0.0022449493408203125, 0.032012939453125, 0.8076171875], "tokens": [2071, 2064, 309, 280, 1389, 35, 77, 40237, 77, 92, 19730]}
{"line_number": 619, "line_type": "generated", "code": "\n            lmDiag[j] = diag[pj];\n        }\n\n        // eliminate the diagonal matrix d using a Givens rotation\n        for (int j = 0; j < solvedCols; ++j) {\n            int pj = permutation[j];", "entropy": 0.1226806640625, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [1.203125, 0.347900390625, 0.01526641845703125, 0.001617431640625, 0.0072174072265625, 0.0030727386474609375, 0.0247039794921875, 0.365966796875, 0.265625, 0.1480712890625, 0.052276611328125, 0.17431640625, 0.0003464221954345703, 0.20654296875, 0.0751953125, 0.3779296875, 0.0005583763122558594, 0.4697265625, 0.0092010498046875, 0.01088714599609375, 0.0007758140563964844, 0.0009555816650390625, 0.11810302734375, 0.004405975341796875, 3.5762786865234375e-06, 0.0229034423828125, 0.02880859375, 0.040496826171875, 0.0005779266357421875, 0.0004589557647705078, 0.2025146484375, 0.0024662017822265625, 0.006622314453125, 0.0105743408203125, 0.0013914108276367188, 0.0019626617431640625, 0.0004725456237792969, 0.0152587890625, 0.0050811767578125, 0.166259765625, 0.00811004638671875, 0.0001055002212524414, 0.00046825408935546875, 0.0041351318359375, 0.58349609375, 0.93798828125, 0.418212890625, 0.013336181640625, 0.0169830322265625, 0.00016736984252929688, 0.0009584426879882812, 0.00482177734375], "tokens": [324, 30780, 26244, 77, 92, 79, 280, 15534, 77, 25287, 970, 291, 320, 584, 434, 40533, 322, 27601, 5045, 343, 1471, 312, 570, 387, 1229, 11410, 291, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 19479, 19911, 45, 3311, 92, 27, 301, 324, 629, 46704, 280, 38151, 77, 92, 970]}
{"line_number": 620, "line_type": "original", "code": "                sum2 += s * s;", "entropy": 2.65625, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [8.59375, 5.03125, 2.6484375, 3.71875, 0.91943359375, 0.09918212890625, 0.21826171875, 0.018096923828125], "tokens": [2071, 3632, 36, 1454, 309, 319, 309, 45]}
{"line_number": 620, "line_type": "generated", "code": "\n\n        // eliminate the diagonal matrix d using a Givens rotation\n        for (int j = 0; j < solvedCols; ++j) {\n            int pj = permutation[j];\n            double delta = lmDiag[j];\n            if (delta", "entropy": 0.18212890625, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [0.76416015625, 0.1021728515625, 0.69921875, 0.0004982948303222656, 0.4990234375, 0.007686614990234375, 0.0097808837890625, 0.0006709098815917969, 0.0010585784912109375, 0.12005615234375, 0.0042266845703125, 2.9802322387695312e-06, 0.019866943359375, 0.033416748046875, 0.0469970703125, 0.0004570484161376953, 0.00104522705078125, 0.1549072265625, 0.0022907257080078125, 0.00988006591796875, 0.01377105712890625, 0.0027141571044921875, 0.0014486312866210938, 0.00057220458984375, 0.0201568603515625, 0.006130218505859375, 0.2000732421875, 0.0102081298828125, 0.00010979175567626953, 0.0005207061767578125, 0.004497528076171875, 0.59375, 0.9208984375, 0.150146484375, 0.0157012939453125, 0.0184783935546875, 0.00030684471130371094, 0.003475189208984375, 0.003917694091796875, 0.12005615234375, 0.53125, 1.955078125, 0.1689453125, 0.092529296875, 0.81787109375, 0.0002148151397705078, 0.09259033203125, 0.1304931640625, 0.1923828125, 0.49462890625, 0.007659912109375, 0.42431640625], "tokens": [584, 434, 40533, 322, 27601, 5045, 343, 1471, 312, 570, 387, 1229, 11410, 291, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 19479, 19911, 45, 3311, 92, 27, 301, 324, 629, 46704, 280, 38151, 77, 92, 970, 324, 2064, 7715, 280, 30780, 26244, 77, 92, 970, 324, 415, 308, 6558]}
{"line_number": 622, "line_type": "original", "code": "            double correction = fp / (delta * sum2);", "entropy": 3.638671875, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [6.140625, 1.9873046875, 10.359375, 0.1903076171875, 13.3203125, 0.201416015625, 5.421875, 1.3076171875, 0.6748046875, 3.9921875, 0.052459716796875, 0.005741119384765625], "tokens": [1468, 2064, 25683, 280, 11828, 517, 308, 6558, 319, 3632, 36, 293]}
{"line_number": 622, "line_type": "generated", "code": "\n        for (int j = 0; j < solvedCols; ++j) {\n            double s = 0;\n            for (int i = j; i < solvedCols; ++i) {\n                double g = work[i] + s", "entropy": 0.189453125, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [0.802734375, 0.436767578125, 0.001117706298828125, 0.00388336181640625, 0.255859375, 0.003925323486328125, 0.0169219970703125, 0.0179595947265625, 0.003429412841796875, 0.00211334228515625, 0.0009598731994628906, 0.02398681640625, 0.006938934326171875, 0.1392822265625, 0.01020050048828125, 0.0001125335693359375, 0.0006284713745117188, 0.00481414794921875, 0.2135009765625, 1.1953125, 1.017578125, 0.1103515625, 0.425537109375, 0.005279541015625, 0.268798828125, 0.033660888671875, 1.021484375, 0.0010652542114257812, 0.0006690025329589844, 0.186767578125, 0.001617431640625, 0.187744140625, 0.3994140625, 0.0015554428100585938, 0.0028667449951171875, 0.0007867813110351562, 0.00539398193359375, 0.0087738037109375, 0.0016956329345703125, 0.00020933151245117188, 0.0019054412841796875, 0.0024890899658203125, 0.0166168212890625, 0.26513671875, 1.1279296875, 0.08099365234375, 0.5576171875, 0.00656890869140625, 0.001338958740234375, 0.377685546875, 0.515625, 0.07525634765625], "tokens": [291, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 19479, 19911, 45, 3311, 92, 27, 301, 324, 2064, 309, 280, 225, 34, 45, 324, 436, 308, 410, 595, 280, 594, 45, 595, 333, 19479, 19911, 45, 3311, 91, 27, 301, 400, 2064, 485, 280, 1389, 77, 91, 79, 474, 309]}
{"line_number": 625, "line_type": "original", "code": "            if (fp > 0) {", "entropy": 2.822265625, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [3.046875, 10.2109375, 0.034027099609375, 11.7109375, 0.352294921875, 0.01412200927734375, 0.0005669593811035156, 0.00881195068359375, 0.02197265625], "tokens": [1468, 415, 308, 4426, 848, 225, 34, 27, 301]}
{"line_number": 625, "line_type": "generated", "code": "\n                double dStar = 0;\n                for (int k = j; k < solvedCols; ++k) {\n                    dStar += lmDir[k] * diag[k];\n                }\n                if (Math.abs(dStar) <", "entropy": 0.2257080078125, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [0.984375, 0.10369873046875, 0.52490234375, 1.6865234375, 0.2149658203125, 0.75048828125, 0.06939697265625, 0.11883544921875, 0.357666015625, 0.57568359375, 0.0028400421142578125, 0.005939483642578125, 0.111572265625, 0.0005550384521484375, 0.11065673828125, 0.01311492919921875, 0.00872802734375, 0.0028934478759765625, 0.0019159317016601562, 0.0121612548828125, 0.0295867919921875, 0.004833221435546875, 0.00013053417205810547, 0.002544403076171875, 0.019256591796875, 0.09027099609375, 0.288330078125, 0.00093841552734375, 0.495849609375, 0.09844970703125, 0.297607421875, 0.00040984153747558594, 0.0038547515869140625, 0.0024566650390625, 0.00127410888671875, 0.55517578125, 0.0640869140625, 0.146484375, 0.01023101806640625, 0.033599853515625, 0.0007181167602539062, 1.5517578125, 1.306640625, 0.06292724609375, 0.50439453125, 0.0002067089080810547, 0.003047943115234375, 0.00014781951904296875, 0.0204925537109375, 0.00011277198791503906, 0.0023899078369140625, 0.478515625], "tokens": [400, 2064, 343, 9024, 280, 225, 34, 45, 400, 436, 308, 410, 831, 280, 594, 45, 831, 333, 19479, 19911, 45, 3311, 93, 27, 301, 528, 343, 9024, 1454, 30780, 2976, 77, 93, 79, 319, 15534, 77, 93, 970, 400, 320, 400, 415, 308, 5717, 32, 3596, 26, 86, 9024, 27, 333]}
{"line_number": 632, "line_type": "original", "code": "            lmPar = Math.max(parl, lmPar + correction);", "entropy": 1.90234375, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [4.25390625, 1.798828125, 4.69140625, 0.10003662109375, 1.4970703125, 0.002590179443359375, 0.3046875, 0.0037517547607421875, 5.73828125, 0.1492919921875, 0.0712890625, 0.42822265625, 0.08392333984375, 6.2578125, 4.875, 0.1805419921875], "tokens": [1468, 30780, 926, 280, 4175, 32, 1449, 26, 568, 94, 30, 30780, 926, 474, 25683, 293]}
{"line_number": 632, "line_type": "generated", "code": "\n\n            // The transformations to eliminate the row of d modify only a\n            // single element of (q transpose)*b beyond the first n, which\n            // is initially zero.\n            double delta = work[j];\n            for (int i = j + ", "entropy": 0.1322021484375, "is_bug_line": false, "sus_score": 0.3086066999241838, "per_token_entropy": [0.7919921875, 0.053802490234375, 1.064453125, 0.002269744873046875, 2.849102020263672e-05, 0.001857757568359375, 9.59634780883789e-05, 0.004825592041015625, 0.0020904541015625, 0.0005540847778320312, 0.1414794921875, 0.0020389556884765625, 0.00782012939453125, 0.017730712890625, 0.0007081031799316406, 0.00556182861328125, 0.00038313865661621094, 0.00014841556549072266, 0.035888671875, 0.1287841796875, 0.11541748046875, 0.02716064453125, 0.08978271484375, 0.274658203125, 4.220008850097656e-05, 0.0002770423889160156, 0.00013911724090576172, 0.0232696533203125, 0.2174072265625, 0.140869140625, 0.0027313232421875, 1.2040138244628906e-05, 0.000492095947265625, 0.00878143310546875, 0.0006818771362304688, 0.56982421875, 0.49609375, 0.427001953125, 0.036895751953125, 0.75, 0.0007448196411132812, 0.0157012939453125, 0.018157958984375, 0.1634521484375, 0.34521484375, 0.0005483627319335938, 0.0003886222839355469, 0.53662109375, 0.001987457275390625, 0.0103912353515625, 0.337158203125, 0.00042939186096191406], "tokens": [1064, 434, 886, 34816, 372, 40533, 322, 2698, 432, 343, 5351, 1755, 312, 324, 434, 3982, 1994, 432, 308, 99, 27224, 4586, 84, 21861, 322, 1932, 310, 30, 1510, 324, 434, 438, 26302, 5934, 32, 324, 2064, 7715, 280, 1389, 77, 92, 970, 324, 436, 308, 410, 595, 280, 594, 474, 225]}
{"line_number": 530, "line_type": "original", "code": "            for (int j = 0; j < solvedCols; ++j) {", "entropy": 0.36962890625, "is_bug_line": false, "sus_score": 0.29488391230979427, "per_token_entropy": [4.78515625, 1.4990234375, 0.00504302978515625, 0.023651123046875, 0.1541748046875, 0.00431060791015625, 0.0237274169921875, 0.002338409423828125, 0.001247406005859375, 0.0005450248718261719, 0.0033435821533203125, 0.1090087890625, 0.018707275390625, 0.002735137939453125, 0.00531768798828125, 0.0001952648162841797, 0.0018596649169921875, 0.0100555419921875], "tokens": [1468, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 19479, 19911, 45, 3311, 92, 27, 301]}
{"line_number": 530, "line_type": "generated", "code": "\n            // generate the next point to be tested\n            for (int j = 0; j < solvedCols; ++j) {\n                int pj = permutation[j];\n                work1[pj] = sPar * diag[pj];\n                work2", "entropy": 0.31201171875, "is_bug_line": false, "sus_score": 0.29488391230979427, "per_token_entropy": [0.361083984375, 2.5078125, 3.220703125, 0.1351318359375, 1.6640625, 2.123046875, 0.3369140625, 0.62451171875, 0.57861328125, 0.00594329833984375, 0.20751953125, 0.0005145072937011719, 0.0257568359375, 0.02764892578125, 0.001312255859375, 0.01525115966796875, 0.0019969940185546875, 0.0005393028259277344, 0.00023233890533447266, 0.001056671142578125, 0.06439208984375, 0.01056671142578125, 0.0006265640258789062, 0.0030155181884765625, 8.130073547363281e-05, 0.0006585121154785156, 0.0014333724975585938, 0.00876617431640625, 0.46435546875, 0.002872467041015625, 0.00038433074951171875, 0.0012063980102539062, 0.00018346309661865234, 0.0005693435668945312, 0.0005383491516113281, 0.003307342529296875, 0.2232666015625, 0.162841796875, 2.86102294921875e-05, 0.0128021240234375, 8.046627044677734e-05, 0.0157318115234375, 0.345947265625, 0.00047326087951660156, 0.0157470703125, 0.1788330078125, 0.57177734375, 0.0009026527404785156, 0.61083984375, 1.3671875, 0.2242431640625, 0.08880615234375], "tokens": [324, 434, 4450, 322, 2354, 2260, 372, 526, 10114, 324, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 19479, 19911, 45, 3311, 92, 27, 301, 400, 629, 46704, 280, 38151, 77, 92, 970, 400, 1389, 35, 77, 25287, 79, 280, 309, 926, 319, 15534, 77, 25287, 970, 400, 1389, 36]}
{"line_number": 531, "line_type": "original", "code": "                int pj = permutation[j];", "entropy": 1.771484375, "is_bug_line": false, "sus_score": 0.29488391230979427, "per_token_entropy": [9.0, 5.15234375, 0.01348114013671875, 0.0018100738525390625, 0.002902984619140625, 0.0005564689636230469, 0.0003304481506347656, 0.001491546630859375], "tokens": [2071, 629, 46704, 280, 38151, 77, 92, 970]}
{"line_number": 531, "line_type": "generated", "code": "\n                work1[pj] = sPar * diag[pj];\n            }\n            for (int j = 0; j < solvedCols; ++j) {\n                int pj = permutation[j];\n                double sum = 0;\n                for (", "entropy": 0.08062744140625, "is_bug_line": false, "sus_score": 0.29488391230979427, "per_token_entropy": [0.03704833984375, 0.2420654296875, 0.12890625, 6.67572021484375e-05, 0.248291015625, 0.0005407333374023438, 0.0987548828125, 0.50634765625, 0.0005059242248535156, 0.0247955322265625, 0.033660888671875, 0.2083740234375, 0.0020294189453125, 0.498291015625, 0.2408447265625, 4.8279762268066406e-05, 0.229736328125, 0.458740234375, 0.0004353523254394531, 0.0001380443572998047, 0.1689453125, 0.002384185791015625, 0.26904296875, 0.0008797645568847656, 0.0010499954223632812, 0.0006456375122070312, 0.0035858154296875, 0.154052734375, 0.00592803955078125, 0.00431060791015625, 0.0006394386291503906, 5.1975250244140625e-05, 0.00022709369659423828, 0.00046825408935546875, 0.032470703125, 0.1226806640625, 0.0015230178833007812, 0.00035691261291503906, 0.0003962516784667969, 3.981590270996094e-05, 0.0006923675537109375, 0.00036406517028808594, 0.0047149658203125, 0.2017822265625, 0.21875, 0.00689697265625, 0.0093841552734375, 7.3909759521484375e-06, 0.0023040771484375, 0.006160736083984375, 0.01169586181640625, 0.00018739700317382812], "tokens": [400, 1389, 35, 77, 25287, 79, 280, 309, 926, 319, 15534, 77, 25287, 970, 324, 320, 324, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 19479, 19911, 45, 3311, 92, 27, 301, 400, 629, 46704, 280, 38151, 77, 92, 970, 400, 2064, 3632, 280, 225, 34, 45, 400, 436, 308]}
