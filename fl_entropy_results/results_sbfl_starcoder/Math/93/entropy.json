{"line_number": 350, "line_type": "original", "code": "        return factorials[n];", "entropy": 2.201171875, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [4.33984375, 6.03515625, 6.6015625, 0.004413604736328125, 0.39794921875, 0.078125, 0.031829833984375, 0.1258544921875], "tokens": [351, 442, 10365, 564, 101, 77, 96, 970]}
{"line_number": 350, "line_type": "generated", "code": "\n        }\n        return logSum;\n    }\n\n    /**\n     * Returns n!. Shorthand for <code>n</code> <a\n     * href=\"http://mathworld.wolfram.com/Factorial.html\"> Factorial</a", "entropy": 0.087890625, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.11962890625, 0.0181884765625, 0.06512451171875, 0.016815185546875, 0.0236968994140625, 0.00018465518951416016, 0.005626678466796875, 0.052978515625, 0.0021419525146484375, 0.8056640625, 0.0838623046875, 0.0924072265625, 0.0003859996795654297, 0.463134765625, 1.73046875, 0.6474609375, 0.234619140625, 0.0012083053588867188, 0.0011262893676757812, 0.02801513671875, 0.004009246826171875, 0.00116729736328125, 0.0098419189453125, 0.007083892822265625, 0.0009455680847167969, 0.0028839111328125, 0.006275177001953125, 0.000408172607421875, 0.0031337738037109375, 6.99758529663086e-05, 0.0004303455352783203, 0.0016355514526367188, 0.00024890899658203125, 6.4849853515625e-05, 0.0022373199462890625, 9.942054748535156e-05, 2.110004425048828e-05, 0.00012958049774169922, 2.7418136596679688e-06, 5.6743621826171875e-05, 0.0002015829086303711, 5.5909156799316406e-05, 0.0002968311309814453, 0.08428955078125, 0.00026106834411621094, 0.0013589859008789062, 1.3828277587890625e-05, 0.00036144256591796875, 0.04779052734375, 0.0003879070281982422, 0.0009455680847167969, 0.00011527538299560547], "tokens": [291, 320, 291, 442, 1245, 4934, 45, 284, 320, 446, 1022, 275, 319, 3759, 310, 17649, 2415, 34967, 436, 333, 687, 48, 96, 377, 687, 48, 333, 83, 275, 319, 976, 347, 525, 555, 3812, 5860, 32, 105, 362, 43579, 32, 508, 33, 9168, 564, 32, 916, 413, 38344, 564, 377, 83]}
{"line_number": 345, "line_type": "original", "code": "        long result = Math.round(factorialDouble(n));", "entropy": 1.7822265625, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [5.1875, 8.359375, 0.87939453125, 0.057464599609375, 3.96875, 0.237060546875, 1.1396484375, 0.037445068359375, 2.8046875, 0.001575469970703125, 1.9052734375, 0.0723876953125, 0.08160400390625, 0.2191162109375], "tokens": [351, 1946, 1056, 280, 4175, 32, 1497, 26, 9410, 564, 4075, 26, 96, 876]}
{"line_number": 345, "line_type": "generated", "code": "\n            throw new IllegalArgumentException(\"must have n >= 0 for n!\");\n        }\n        double result = 0;\n        for (int i = 2; i <= n; ++i) {\n            result += Math.log(i);\n        }\n       ", "entropy": 0.117919921875, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [0.41845703125, 0.06427001953125, 0.0035076141357421875, 0.00930023193359375, 0.08770751953125, 0.05584716796875, 0.002254486083984375, 0.003345489501953125, 0.01027679443359375, 0.0030956268310546875, 0.0011148452758789062, 0.07318115234375, 0.1336669921875, 0.020263671875, 0.1083984375, 0.0009016990661621094, 0.282470703125, 0.9755859375, 0.55615234375, 0.0238037109375, 0.135498046875, 0.003444671630859375, 1.07421875, 0.198974609375, 0.286376953125, 0.06414794921875, 0.033477783203125, 0.10186767578125, 0.00568389892578125, 0.06304931640625, 0.1419677734375, 0.0029277801513671875, 0.003231048583984375, 0.01371002197265625, 0.0017299652099609375, 0.0034694671630859375, 0.54296875, 0.0007691383361816406, 0.0032405853271484375, 0.019805908203125, 0.276611328125, 0.02520751953125, 0.0264739990234375, 0.07159423828125, 0.0035037994384765625, 0.00013625621795654297, 0.0091705322265625, 0.0025157928466796875, 0.004627227783203125, 0.0673828125, 0.00023889541625976562, 0.1116943359375], "tokens": [324, 1422, 537, 12137, 440, 12172, 1159, 310, 2377, 225, 34, 436, 310, 9311, 291, 320, 291, 2064, 1056, 280, 225, 34, 45, 291, 436, 308, 410, 595, 280, 225, 36, 45, 595, 2511, 310, 45, 3311, 91, 27, 301, 324, 1056, 1454, 4175, 32, 751, 26, 91, 293, 291, 320, 291]}
{"line_number": 346, "line_type": "original", "code": "        if (result == Long.MAX_VALUE) {", "entropy": 1.8095703125, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [6.13671875, 3.59765625, 0.1112060546875, 3.2890625, 2.51953125, 5.30859375, 0.0005092620849609375, 0.4775390625, 0.0005741119384765625, 0.000904083251953125, 0.18115234375, 0.09942626953125], "tokens": [351, 415, 308, 1267, 610, 6359, 32, 3459, 81, 5975, 27, 301]}
{"line_number": 346, "line_type": "generated", "code": "\n        }\n        return Math.log(factorials[n]);\n    }\n\n    /**\n     * Returns the greatest common divisor of <code>a</code> and <code>b</code>.\n     * \n     * @param a first argument\n     *", "entropy": 0.28271484375, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [0.5576171875, 0.56591796875, 0.1842041015625, 0.97314453125, 1.484375, 0.1290283203125, 0.06488037109375, 0.08673095703125, 0.366943359375, 0.0006394386291503906, 0.26318359375, 0.0115966796875, 0.007904052734375, 0.1055908203125, 0.181884765625, 0.00623321533203125, 0.90185546875, 0.087646484375, 0.0889892578125, 0.0006990432739257812, 0.4970703125, 0.59228515625, 2.1328125, 0.05413818359375, 0.11932373046875, 0.20166015625, 0.76806640625, 0.0330810546875, 0.0023784637451171875, 0.51904296875, 0.0250091552734375, 0.0007195472717285156, 0.01617431640625, 0.0116729736328125, 0.31689453125, 0.0006527900695800781, 0.0001239776611328125, 0.0088043212890625, 0.002811431884765625, 0.0007357597351074219, 0.405517578125, 0.025726318359375, 0.0008344650268554688, 0.888671875, 0.0002510547637939453, 0.10113525390625, 0.01800537109375, 0.016571044921875, 0.9755859375, 0.75244140625, 0.1470947265625, 7.3909759521484375e-06], "tokens": [291, 320, 291, 442, 4175, 32, 751, 26, 9410, 564, 101, 77, 96, 1989, 284, 320, 446, 1022, 275, 319, 3759, 322, 48299, 4942, 33482, 432, 333, 687, 48, 83, 377, 687, 48, 461, 333, 687, 48, 84, 377, 687, 4503, 275, 319, 5384, 319, 477, 753, 312, 1932, 2793, 275, 319]}
{"line_number": 374, "line_type": "original", "code": "        if (n < 0) {", "entropy": 1.8798828125, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [4.1171875, 2.224609375, 0.26171875, 9.6875, 0.4130859375, 0.0626220703125, 0.03424072265625, 0.06842041015625, 0.049652099609375], "tokens": [351, 415, 308, 96, 333, 225, 34, 27, 301]}
{"line_number": 374, "line_type": "generated", "code": "\n        int k = 0;\n        while ((u & 1) == 0 && (v & 1) == 0) {\n            u = u >> 1;\n            v = v >> 1;\n            k++;\n        }\n       ", "entropy": 0.1785888671875, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [1.4375, 1.3916015625, 0.72802734375, 0.141845703125, 0.00859832763671875, 0.1905517578125, 0.0011034011840820312, 0.27880859375, 0.935546875, 0.469970703125, 0.00018107891082763672, 0.06219482421875, 0.001605987548828125, 0.0012979507446289062, 0.0167694091796875, 2.0265579223632812e-06, 0.000301361083984375, 1.5497207641601562e-05, 0.10406494140625, 0.0008754730224609375, 0.0013914108276367188, 0.0001245737075805664, 0.00010824203491210938, 4.76837158203125e-05, 0.0013828277587890625, 6.473064422607422e-05, 0.00010097026824951172, 2.682209014892578e-05, 0.8544921875, 0.01082611083984375, 0.266845703125, 0.63916015625, 1.0498046875, 0.004180908203125, 0.030303955078125, 0.000606536865234375, 3.635883331298828e-05, 0.0004088878631591797, 0.0261383056640625, 0.0006594657897949219, 0.0011501312255859375, 0.00010561943054199219, 0.0003161430358886719, 3.5762786865234375e-05, 6.794929504394531e-06, 6.151199340820312e-05, 0.01146697998046875, 0.02777099609375, 0.2308349609375, 0.08197021484375, 0.001590728759765625, 0.277099609375], "tokens": [291, 629, 831, 280, 225, 34, 45, 291, 2218, 1833, 103, 549, 225, 35, 27, 610, 225, 34, 962, 308, 104, 549, 225, 35, 27, 610, 225, 34, 27, 301, 324, 1044, 280, 1044, 3776, 225, 35, 45, 324, 354, 280, 354, 3776, 225, 35, 45, 324, 831, 3334, 291, 320, 291]}
{"line_number": 377, "line_type": "original", "code": "        return Math.floor(Math.exp(factorialLog(n)) + 0.5);", "entropy": 2.630859375, "is_bug_line": true, "sus_score": 0.5773502691896258, "per_token_entropy": [3.44921875, 7.140625, 5.31640625, 0.2047119140625, 7.6328125, 1.7685546875, 1.9853515625, 0.01343536376953125, 7.68359375, 0.039215087890625, 6.31640625, 0.00048470497131347656, 0.009429931640625, 0.12127685546875, 6.8359375, 4.66796875, 2.51953125, 0.884765625, 1.1201171875, 0.02435302734375, 0.04266357421875, 0.11181640625], "tokens": [351, 442, 4175, 32, 9121, 26, 5717, 32, 2832, 26, 9410, 564, 1335, 26, 96, 490, 474, 225, 34, 32, 39, 293]}
{"line_number": 377, "line_type": "generated", "code": "\n        } else {\n            u = -u;", "entropy": 0.170166015625, "is_bug_line": true, "sus_score": 0.5773502691896258, "per_token_entropy": [0.342529296875, 0.00551605224609375, 0.10455322265625, 0.012939453125, 1.1826171875, 0.049102783203125, 0.00016021728515625, 0.003597259521484375, 0.0002751350402832031, 0.0005860328674316406], "tokens": [291, 320, 813, 301, 324, 1044, 280, 429, 103, 45]}
{"line_number": 394, "line_type": "original", "code": "        if (n < 0) {", "entropy": 2.515625, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [2.724609375, 5.234375, 0.2078857421875, 12.5, 1.6669921875, 0.175048828125, 0.032684326171875, 0.040283203125, 0.05743408203125], "tokens": [351, 415, 308, 96, 333, 225, 34, 27, 301]}
{"line_number": 394, "line_type": "generated", "code": "\n            // one is odd.\n        int t = ((u & 1) == 1)? v : -(u / 2)/* B3 */;\n        // t negative: u was odd, v may be even (t replaces v)\n       ", "entropy": 0.16015625, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [1.126953125, 0.373291015625, 1.0810546875, 0.026519775390625, 0.2259521484375, 0.0022258758544921875, 1.4140625, 0.0248260498046875, 0.005680084228515625, 0.00807952880859375, 0.12298583984375, 0.04229736328125, 0.002719879150390625, 0.0007572174072265625, 1.7881393432617188e-06, 0.00014734268188476562, 0.002960205078125, 3.135204315185547e-05, 0.0516357421875, 0.06524658203125, 0.0005784034729003906, 0.0006427764892578125, 0.0009450912475585938, 0.00446319580078125, 0.002040863037109375, 0.015899658203125, 0.0005207061767578125, 7.033348083496094e-06, 0.00707244873046875, 1.05859375, 0.0631103515625, 0.0005736351013183594, 0.0933837890625, 0.319580078125, 0.62548828125, 0.015289306640625, 0.0305328369140625, 0.060028076171875, 0.0031299591064453125, 0.00238800048828125, 0.0109710693359375, 0.00010132789611816406, 0.0083465576171875, 1.2734375, 0.001689910888671875, 0.0043182373046875, 0.01085662841796875, 0.046173095703125, 0.00719451904296875, 0.01050567626953125, 0.06866455078125, 0.00582122802734375], "tokens": [324, 434, 1591, 438, 17859, 32, 291, 629, 273, 280, 1833, 103, 549, 225, 35, 27, 610, 225, 35, 27, 1018, 354, 499, 25298, 103, 517, 225, 36, 27, 1109, 551, 37, 12822, 291, 434, 273, 11003, 44, 1044, 1597, 17859, 30, 354, 1631, 526, 4444, 308, 102, 30598, 354, 27, 291]}
{"line_number": 397, "line_type": "original", "code": "        double logSum = 0;", "entropy": 3.046875, "is_bug_line": true, "sus_score": 0.5773502691896258, "per_token_entropy": [4.70703125, 9.0859375, 6.78125, 2.294921875, 0.06005859375, 0.6640625, 0.018280029296875, 0.76318359375], "tokens": [351, 2064, 1245, 4934, 280, 225, 34, 45]}
{"line_number": 397, "line_type": "generated", "code": "\n        do {\n            /* assert u<0 && v<0; */\n            while ((t & 1) == 0) { // while t is even do\n                t /= 2; // replace t by t/2\n            } // end while", "entropy": 0.15576171875, "is_bug_line": true, "sus_score": 0.5773502691896258, "per_token_entropy": [0.082275390625, 1.0703125, 0.0296630859375, 0.491943359375, 0.87548828125, 0.2100830078125, 0.108642578125, 0.0145416259765625, 0.01309967041015625, 0.01239013671875, 0.0015668869018554688, 0.00063323974609375, 0.0007262229919433594, 0.10882568359375, 0.0006976127624511719, 0.030517578125, 0.77783203125, 0.0102386474609375, 0.09625244140625, 0.006984710693359375, 7.069110870361328e-05, -0.0, 1.621246337890625e-05, 0.000301361083984375, 2.1457672119140625e-06, 2.4437904357910156e-05, 0.0006475448608398438, 0.03509521484375, 0.08587646484375, 0.1873779296875, 0.0003502368927001953, 0.0008945465087890625, 0.0021114349365234375, 0.6337890625, 0.00838470458984375, 0.007476806640625, 0.0038280487060546875, 0.0003662109375, 5.9604644775390625e-06, 0.001316070556640625, 0.3740234375, 1.0185546875, 0.0002808570861816406, 1.013671875, 0.07794189453125, 0.0015840530395507812, 1.3470649719238281e-05, 0.0033473968505859375, 0.00293731689453125, 0.1253662109375, 0.53662109375, 0.03564453125], "tokens": [291, 745, 301, 324, 1257, 1201, 1044, 46, 34, 962, 354, 46, 34, 45, 569, 324, 2218, 1833, 102, 549, 225, 35, 27, 610, 225, 34, 27, 301, 434, 2218, 273, 438, 4444, 745, 400, 273, 14374, 225, 36, 45, 434, 7084, 273, 810, 273, 33, 36, 324, 320, 434, 943, 2218]}
{"line_number": 398, "line_type": "original", "code": "        for (int i = 2; i <= n; i++) {", "entropy": 1.5400390625, "is_bug_line": true, "sus_score": 0.5773502691896258, "per_token_entropy": [6.34375, 4.203125, 0.06475830078125, 0.02490234375, 0.009613037109375, 0.04632568359375, 0.1070556640625, 7.40625, 0.4853515625, 0.06903076171875, 0.25244140625, 5.39453125, 0.04986572265625, 0.110107421875, 0.0299835205078125, 0.039764404296875], "tokens": [351, 436, 308, 410, 595, 280, 225, 36, 45, 595, 2511, 310, 45, 595, 1987, 301]}
{"line_number": 398, "line_type": "generated", "code": "\n            t = Math.abs(t);\n            int r = u % v;\n            while (r!= 0) {\n                // B4/B3: cast out twos from t.\n                t /= 2;\n                r /= 2", "entropy": 0.33154296875, "is_bug_line": true, "sus_score": 0.5773502691896258, "per_token_entropy": [0.53076171875, 1.578125, 0.1986083984375, 0.72216796875, 0.01432037353515625, 0.63671875, 0.01029205322265625, 0.282958984375, 0.0377197265625, 0.5732421875, 0.85595703125, 0.265625, 0.0728759765625, 1.12109375, 0.425048828125, 0.24853515625, 0.00835418701171875, 0.1597900390625, 0.356201171875, 0.0113677978515625, 0.0007390975952148438, 0.0024204254150390625, 0.00022590160369873047, 5.7220458984375e-06, 0.0009441375732421875, 0.009246826171875, 0.11981201171875, 1.19140625, 2.212890625, 0.06549072265625, 0.47998046875, 0.001918792724609375, 0.3154296875, 0.21484375, 2.5625, 0.013885498046875, 0.069580078125, 4.76837158203125e-07, 0.00011420249938964844, 0.07379150390625, 0.2802734375, 0.01274871826171875, 0.65625, 0.33837890625, 7.224082946777344e-05, 1.9073486328125e-06, 0.00018978118896484375, 0.01959228515625, 0.12548828125, 0.349365234375, 8.308887481689453e-05, 2.5033950805664062e-06], "tokens": [324, 273, 280, 4175, 32, 3596, 26, 102, 293, 324, 629, 540, 280, 1044, 904, 354, 45, 324, 2218, 308, 100, 863, 225, 34, 27, 301, 400, 434, 551, 38, 33, 52, 37, 44, 9936, 963, 8206, 500, 645, 273, 32, 400, 273, 14374, 225, 36, 45, 400, 540, 14374, 225, 36]}
{"line_number": 399, "line_type": "original", "code": "            logSum += Math.log((double)i);", "entropy": 2.796875, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [6.19921875, 11.6015625, 3.62109375, 0.740234375, 1.0771484375, 0.0277099609375, 0.20361328125, 3.037109375, 0.56982421875, 0.0670166015625, 5.91796875, 0.496826171875], "tokens": [1468, 1245, 4934, 1454, 4175, 32, 751, 1162, 2627, 27, 91, 293]}
{"line_number": 399, "line_type": "generated", "code": "\n        } while ((t & 1) == 0); // while t is even do...\n        return -t; // gcd is u+v, since u and v were both odd.\n    }", "entropy": 0.25732421875, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [0.7939453125, 0.06329345703125, 0.039764404296875, 0.65234375, 0.279052734375, 0.1470947265625, 0.0010900497436523438, 3.5762786865234375e-07, 3.0875205993652344e-05, 0.0010328292846679688, 2.5153160095214844e-05, 2.300739288330078e-05, 0.00232696533203125, 0.024993896484375, 0.474853515625, 0.0002484321594238281, 0.00202178955078125, 0.005107879638671875, 0.343017578125, 2.044921875, 0.380859375, 0.47021484375, 0.0234832763671875, 0.0001811981201171875, 0.1055908203125, 0.061309814453125, 0.2509765625, 0.0006866455078125, 1.8046875, 0.2489013671875, 4.00543212890625e-05, 0.00054168701171875, 0.73046875, 0.33447265625, 0.022918701171875, 0.0034961700439453125, 0.6513671875, 0.3515625, 0.248779296875, 0.194091796875, 0.0404052734375, 0.0017452239990234375], "tokens": [291, 320, 2218, 1833, 102, 549, 225, 35, 27, 610, 225, 34, 293, 434, 2218, 273, 438, 4444, 745, 2417, 291, 442, 429, 102, 45, 434, 43422, 438, 1044, 29, 104, 30, 4558, 1044, 461, 354, 4528, 4335, 17859, 32, 284, 320]}
{"line_number": 401, "line_type": "original", "code": "        return logSum;", "entropy": 8.3359375, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [4.2109375, 13.7421875, 19.265625, 3.787109375, 0.67431640625], "tokens": [351, 442, 1245, 4934, 45]}
{"line_number": 401, "line_type": "generated", "code": "\n            // B5: replace u with t (which is non-negative)\n            // B6: replace v with u (which is non-negative)\n            t = (v - t) / 2; // t negative: u was odd,", "entropy": 0.245849609375, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [0.33740234375, 0.72900390625, 0.01297760009765625, 0.002155303955078125, 0.25927734375, 0.72900390625, 0.0217132568359375, 0.0279693603515625, 0.68212890625, 0.2015380859375, 0.484375, 0.0118408203125, 0.64111328125, 0.086669921875, 0.006366729736328125, 0.007427215576171875, 0.0048675537109375, 0.671875, 0.32470703125, 0.00013339519500732422, 0.1002197265625, 0.1810302734375, 6.103515625e-05, 2.5033950805664062e-05, 2.267578125, 0.0751953125, 0.0004138946533203125, 0.0423583984375, 0.4208984375, 0.0002321004867553711, 0.017333984375, 0.0004184246063232422, 0.04815673828125, 0.634765625, 0.0001837015151977539, 0.1407470703125, 0.26318359375, 0.033294677734375, 0.006378173828125, 0.0019378662109375, 0.0008130073547363281, 0.0139617919921875, 8.344650268554688e-07, 0.00978851318359375, 0.483642578125, 1.10546875, 0.59619140625, 0.11651611328125, 0.3935546875, 0.01480865478515625, 0.5693359375, 0.0005512237548828125], "tokens": [324, 434, 551, 39, 44, 7084, 1044, 623, 273, 308, 7900, 438, 2979, 31, 15272, 27, 324, 434, 551, 40, 44, 7084, 354, 623, 1044, 308, 7900, 438, 2979, 31, 15272, 27, 324, 273, 280, 308, 104, 429, 273, 27, 517, 225, 36, 45, 434, 273, 11003, 44, 1044, 1597, 17859, 30]}
