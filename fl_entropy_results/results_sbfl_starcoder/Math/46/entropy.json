{"line_number": 260, "line_type": "original", "code": "            return isZero ? NaN : INF;", "entropy": 4.37890625, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [6.1328125, 9.3984375, 13.53125, 2.521484375, 1.490234375, 5.5078125, 0.015838623046875, 0.78857421875, 0.0252532958984375], "tokens": [1468, 442, 438, 8039, 1018, 21644, 499, 47257, 45]}
{"line_number": 260, "line_type": "generated", "code": "\n     * numbers are considered to be equal.\n     * <p>\n     * Note that if the real and imaginary parts of two complex numbers\n     * are numerically equal, but the complex numbers are not equal\n     * (because one is NaN and the", "entropy": 0.2413330078125, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [0.86181640625, 0.00669097900390625, 0.442138671875, 0.0003657341003417969, 0.006195068359375, 0.006534576416015625, 3.600120544433594e-05, 0.0004684925079345703, 0.189697265625, 0.2509765625, 0.0010547637939453125, 0.1441650390625, 0.1259765625, 0.01654052734375, 0.007724761962890625, 0.00013840198516845703, 1.2451171875, 0.00783538818359375, 0.494384765625, 0.258056640625, 0.357666015625, 0.169189453125, 0.0003287792205810547, -0.0, 0.015716552734375, 0.11572265625, 0.124267578125, 0.1458740234375, 0.0031375885009765625, 0.1849365234375, 0.0004029273986816406, 0.043487548828125, 0.353271484375, 1.4781951904296875e-05, 0.115234375, 0.51318359375, 0.0933837890625, 0.003276824951171875, 2.244140625, 0.0772705078125, 0.035247802734375, 0.48974609375, 0.619140625, 0.05108642578125, 0.00022137165069580078, 0.400634765625, 0.98779296875, 0.08551025390625, 0.1680908203125, 0.8974609375, 0.0262908935546875, 0.1605224609375], "tokens": [275, 319, 7515, 884, 11870, 372, 526, 5040, 32, 275, 319, 333, 98, 48, 275, 319, 5830, 688, 415, 322, 4011, 461, 17463, 3172, 8710, 432, 3134, 8640, 7515, 275, 319, 884, 12738, 1247, 5040, 30, 1273, 322, 8640, 7515, 884, 646, 5040, 275, 319, 308, 26208, 1591, 438, 21644, 461, 322]}
{"line_number": 1183, "line_type": "original", "code": "        return \"(\" + real + \", \" + imaginary + \")\";", "entropy": 0.51123046875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [4.2421875, 0.84130859375, 0.3701171875, 0.0099029541015625, 0.59521484375, 0.0186767578125, 0.51806640625, 0.00046253204345703125, 0.006443023681640625, 0.0027141571044921875, 0.0010242462158203125, 0.0043792724609375, 0.0389404296875], "tokens": [351, 442, 31063, 474, 4011, 474, 3003, 313, 474, 17463, 3172, 474, 34348]}
{"line_number": 1183, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [], "tokens": []}
{"line_number": 587, "line_type": "original", "code": "        return this.add(I).divide(I.subtract(this)).log()", "entropy": 1.9755859375, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [3.884765625, 1.669921875, 2.2890625, 0.002132415771484375, 4.2265625, 0.0007200241088867188, 3.294921875, 0.019378662109375, 9.546875, 0.0004074573516845703, 2.388671875, 3.85546875, 2.470703125, 0.00010228157043457031, 0.00836181640625, 0.383056640625, 0.036346435546875, 1.486328125], "tokens": [351, 442, 458, 32, 669, 26, 59, 547, 23987, 26, 59, 32, 25330, 26, 578, 3427, 751, 346]}
{"line_number": 587, "line_type": "generated", "code": "\n     * where the (real) functions on the right-hand side are\n     * {@link java.lang.Math#sin}, {@link java.lang.Math#cos},\n     * {@link MathUtils#cosh} and {@link MathUtils", "entropy": 0.06451416015625, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [0.60302734375, 0.1217041015625, 1.0029296875, 0.034027099609375, 0.427001953125, 0.000110626220703125, 0.00016069412231445312, 0.0167388916015625, 0.00180816650390625, 0.00033545494079589844, 0.0014886856079101562, 0.0003991127014160156, 7.867813110351562e-06, 0.0003650188446044922, 0.0028514862060546875, 0.007152557373046875, 0.00021541118621826172, 0.01047515869140625, 0.0009522438049316406, 0.161376953125, 4.5299530029296875e-06, 1.6570091247558594e-05, 2.777576446533203e-05, 4.8995018005371094e-05, 0.00028395652770996094, 0.50341796875, 0.305419921875, 0.0222320556640625, 2.6226043701171875e-05, 0.0203094482421875, 2.384185791015625e-07, 0.0002868175506591797, 1.3113021850585938e-06, 3.409385681152344e-05, 2.002716064453125e-05, 0.041046142578125, 0.01039886474609375, 0.013580322265625, 3.814697265625e-05, 0.0155181884765625, 0.0001481771469116211, 0.019500732421875, 0.0006580352783203125, 3.695487976074219e-05, 0.0027179718017578125, 2.6226043701171875e-06, 0.0025005340576171875, 0.0028285980224609375, 0.0006918907165527344, 2.09808349609375e-05, 0.0012960433959960938, 8.761882781982422e-05], "tokens": [275, 319, 2154, 322, 308, 4543, 27, 4442, 544, 322, 2091, 31, 4668, 5209, 884, 275, 319, 3088, 1204, 1383, 32, 1581, 32, 5717, 21, 7102, 835, 3088, 1204, 1383, 32, 1581, 32, 5717, 21, 4952, 835, 275, 319, 3088, 1204, 4175, 2755, 21, 331, 615, 111, 461, 3088, 1204, 4175, 2755]}
{"line_number": 258, "line_type": "original", "code": "        if (divisor.isZero) {", "entropy": 1.953125, "is_bug_line": false, "sus_score": 0.3651483716701107, "per_token_entropy": [2.51171875, 1.7109375, 0.47314453125, 8.6953125, 0.0258331298828125, 0.5439453125, 3.310546875, 0.11712646484375, 1.951171875, 0.18994140625], "tokens": [351, 415, 308, 507, 22306, 32, 297, 8039, 27, 301]}
{"line_number": 258, "line_type": "generated", "code": "\n     * <p>\n     * If both the real and imaginary parts of two Complex objects are\n     * exactly the same, and neither is {@link Double#NaN}, the two\n     * Complex objects are considered to be equal.\n     * <p>", "entropy": 0.224853515625, "is_bug_line": false, "sus_score": 0.3651483716701107, "per_token_entropy": [0.78466796875, 0.07830810546875, 1.380859375, 0.1800537109375, 0.01348876953125, 0.0281524658203125, 7.259845733642578e-05, 0.359375, 0.72216796875, 0.02294921875, 0.002803802490234375, 0.00396728515625, 0.0003426074981689453, -0.0, 0.126708984375, 0.005207061767578125, 0.00371551513671875, 0.1270751953125, 0.2486572265625, 1.5634765625, 0.3115234375, 3.910064697265625e-05, 0.1905517578125, 0.00157928466796875, 5.364418029785156e-06, 0.423828125, 0.0003159046173095703, 1.119140625, 0.0975341796875, 0.212890625, 1.064453125, 0.6689453125, 0.0001596212387084961, 0.004001617431640625, 0.0706787109375, 0.0013456344604492188, 0.005535125732421875, 0.966796875, 1.6689300537109375e-05, 0.0007266998291015625, 0.00838470458984375, 0.00026702880859375, 0.00323486328125, 0.005756378173828125, 2.2649765014648438e-05, 0.0001971721649169922, 0.028564453125, 0.07135009765625, 0.00032520294189453125, 0.76953125, 0.01580810546875, 0.0005950927734375], "tokens": [275, 319, 333, 98, 48, 275, 319, 1670, 4335, 322, 4011, 461, 17463, 3172, 8710, 432, 3134, 19915, 4684, 884, 275, 319, 11114, 322, 2432, 30, 461, 25209, 438, 3088, 1204, 6934, 21, 11126, 835, 322, 3134, 275, 319, 19915, 4684, 884, 11870, 372, 526, 5040, 32, 275, 319, 333, 98, 48]}
{"line_number": 583, "line_type": "original", "code": "        if (isNaN) {", "entropy": 0.9609375, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [2.88671875, 2.25390625, 0.08160400390625, 0.2484130859375, 0.267822265625, 0.027069091796875], "tokens": [351, 415, 308, 26821, 27, 301]}
{"line_number": 583, "line_type": "generated", "code": "\n     * Compute the\n     * <a href=\"http://mathworld.wolfram.com/HyperbolicCosine.html\" TARGET=\"_top\">\n     * hyperbolic cosine</a>\n     * of this complex number.\n     *", "entropy": 0.0731201171875, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [1.6640625, 0.083984375, 0.1910400390625, 0.0020961761474609375, 0.08770751953125, 0.0015420913696289062, 0.0009860992431640625, 0.0004374980926513672, 0.0033321380615234375, 0.00725555419921875, 0.000766754150390625, 9.453296661376953e-05, 0.0015211105346679688, 1.0848045349121094e-05, 1.7881393432617188e-06, 0.00016367435455322266, 5.125999450683594e-06, 2.7418136596679688e-06, 0.00018584728240966797, 1.633167266845703e-05, 0.0002682209014892578, 0.445556640625, 5.4836273193359375e-06, 1.430511474609375e-05, 0.302001953125, 9.5367431640625e-07, 0.0002765655517578125, 1.6808509826660156e-05, 0.0055084228515625, 0.2021484375, 0.003887176513671875, 0.0009288787841796875, 0.00024580955505371094, 0.00908660888671875, 6.520748138427734e-05, 0.0006799697875976562, 3.838539123535156e-05, -0.0, 0.0001386404037475586, 2.0265579223632812e-06, 0.00989532470703125, 3.933906555175781e-05, 0.0005183219909667969, 0.76123046875, 0.000823974609375, 0.0037860870361328125, 0.004100799560546875, 0.0019350051879882812, 2.7060508728027344e-05, 0.0013647079467773438, 0.0033092498779296875, 0.0001220703125], "tokens": [275, 319, 12836, 322, 275, 319, 333, 83, 976, 347, 525, 555, 3812, 5860, 32, 105, 362, 43579, 32, 508, 33, 20562, 84, 2073, 18015, 482, 32, 916, 20, 21207, 5617, 1393, 413, 275, 319, 15223, 84, 2073, 10712, 482, 377, 83, 48, 275, 319, 432, 458, 8640, 1451, 32, 275, 319]}
{"line_number": 253, "line_type": "original", "code": "        MathUtils.checkNotNull(divisor);", "entropy": 3.09765625, "is_bug_line": false, "sus_score": 0.34299717028501764, "per_token_entropy": [3.267578125, 9.0546875, 1.37890625, 0.0006952285766601562, 10.296875, 0.002140045166015625, 0.282958984375, 0.0003826618194580078, 3.595703125], "tokens": [351, 4175, 2755, 32, 42698, 26, 507, 22306, 293]}
{"line_number": 253, "line_type": "generated", "code": "\n            imaginary / divisor);\n    }\n\n    /**\n     * Returns a {@code Complex} whose value is {@code (this - subtrahend)}.\n     *\n     * @param  subtrahend Value to be subtracted from this {@code Complex", "entropy": 0.186767578125, "is_bug_line": false, "sus_score": 0.34299717028501764, "per_token_entropy": [1.708984375, 0.1824951171875, 9.608268737792969e-05, 0.007312774658203125, 0.0014123916625976562, 0.0675048828125, 0.08685302734375, 0.002933502197265625, 0.2137451171875, 0.0300750732421875, 0.0177459716796875, 0.00013649463653564453, 0.294189453125, 0.37841796875, 0.0170440673828125, 0.005306243896484375, 0.00036263465881347656, 0.0051727294921875, 0.0005922317504882812, 0.0026378631591796875, 0.0004725456237792969, 1.5205078125, 0.0002655982971191406, 0.38525390625, 0.07940673828125, 2.353515625, 0.890625, 2.5153160095214844e-05, 2.7418136596679688e-06, 8.928775787353516e-05, 0.1949462890625, 0.0015430450439453125, 7.43865966796875e-05, 0.740234375, 1.3113021850585938e-05, 0.0140380859375, 0.0003876686096191406, 0.475341796875, 0.00043892860412597656, 3.325939178466797e-05, 3.814697265625e-06, 5.841255187988281e-06, 0.0029087066650390625, 1.2040138244628906e-05, 1.8358230590820312e-05, 0.0003342628479003906, 0.00022649765014648438, 0.00043487548828125, 0.0185699462890625, 0.0064697265625, 0.0002777576446533203, 0.003810882568359375], "tokens": [324, 17463, 3172, 517, 33482, 293, 284, 320, 446, 1022, 275, 319, 3759, 312, 3088, 687, 19915, 111, 13696, 786, 438, 3088, 687, 308, 578, 429, 1361, 359, 2371, 416, 31842, 275, 319, 275, 319, 477, 753, 225, 1361, 359, 2371, 416, 3846, 372, 526, 27799, 318, 645, 458, 3088, 687, 19915]}
{"line_number": 254, "line_type": "original", "code": "        if (isNaN || divisor.isNaN) {", "entropy": 1.978515625, "is_bug_line": false, "sus_score": 0.34299717028501764, "per_token_entropy": [4.62109375, 2.9453125, 0.1043701171875, 1.7236328125, 0.257568359375, 3.98046875, 3.6640625, 0.0086212158203125, 2.408203125, 0.061004638671875], "tokens": [351, 415, 308, 26821, 1276, 33482, 32, 26821, 27, 301]}
{"line_number": 254, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Returns a {@code Complex} whose value is\n     * <pre>\n     *    <code>\n     *      this<sup>n</sup> = exp(n&theta;)\n     *    </code>\n     *", "entropy": 0.277587890625, "is_bug_line": false, "sus_score": 0.34299717028501764, "per_token_entropy": [0.47607421875, 0.720703125, 0.37841796875, 0.03900146484375, 0.0197906494140625, 0.00013434886932373047, 0.37744140625, 0.35205078125, 0.0206756591796875, 0.0079345703125, 0.0004546642303466797, 0.005584716796875, 0.0006670951843261719, 0.003002166748046875, 0.000476837158203125, 0.703125, 0.0012302398681640625, 0.271240234375, 1.3017578125, 0.011474609375, 0.0008487701416015625, 2.3365020751953125e-05, 0.5166015625, 0.205322265625, 0.0023059844970703125, 0.0261383056640625, 0.13916015625, 0.00011968612670898438, 1.869140625, 0.44677734375, 0.09033203125, 0.005825042724609375, 0.0176239013671875, 1.03515625, 0.00021791458129882812, 0.00043654441833496094, 0.0228424072265625, 0.79248046875, 0.7646484375, 0.0190582275390625, 0.95751953125, 0.4091796875, 1.478515625, 0.00875091552734375, 0.728515625, 6.413459777832031e-05, 0.0252838134765625, 0.0012159347534179688, 0.0003681182861328125, 0.171142578125, 0.00017189979553222656, 0.0009455680847167969], "tokens": [284, 320, 446, 1022, 275, 319, 3759, 312, 3088, 687, 19915, 111, 13696, 786, 438, 275, 319, 333, 1001, 48, 275, 319, 264, 333, 687, 48, 275, 319, 647, 458, 46, 5540, 48, 96, 377, 5540, 48, 280, 2910, 26, 96, 24, 10753, 21288, 275, 319, 264, 576, 687, 48, 275, 319]}
{"line_number": 329, "line_type": "original", "code": "                return isNaN;", "entropy": 1.947265625, "is_bug_line": false, "sus_score": 0.2886751345948129, "per_token_entropy": [8.453125, 0.60400390625, 0.62890625, 0.0011997222900390625, 0.047637939453125], "tokens": [2071, 442, 438, 11126, 45]}
{"line_number": 329, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Checks whether either or both parts of this complex number is infinite.\n     *\n     * @return {@code true} if either or both parts of this complex number is\n     * infinite; {@code false} otherwise.\n     */\n   ", "entropy": 0.127197265625, "is_bug_line": false, "sus_score": 0.2886751345948129, "per_token_entropy": [0.32861328125, 0.0015192031860351562, 0.050140380859375, 0.004547119140625, 0.00693511962890625, 0.0001304149627685547, 0.21630859375, 0.0338134765625, 0.9052734375, 0.1763916015625, 0.0003681182861328125, 0.0038776397705078125, 0.000438690185546875, 0.0181732177734375, 0.006725311279296875, 0.0025615692138671875, 0.06597900390625, 1.32421875, 0.82373046875, 0.00212860107421875, 6.008148193359375e-05, 0.401123046875, 8.26120376586914e-05, 0.0190277099609375, 0.0026760101318359375, 0.52978515625, 0.00020420551300048828, 0.006511688232421875, 0.0003361701965332031, 0.0242462158203125, 0.1488037109375, 0.058197021484375, 0.0007700920104980469, 0.00797271728515625, 0.001201629638671875, 0.0178985595703125, 0.018341064453125, 0.056854248046875, 0.59423828125, 0.379150390625, 4.553794860839844e-05, 0.08575439453125, 0.11444091796875, 0.00106048583984375, 0.00018608570098876953, 0.0013036727905273438, 0.0010814666748046875, 0.0309295654296875, 0.09893798828125, 0.0038814544677734375, 0.0352783203125, 0.003963470458984375], "tokens": [284, 320, 446, 1022, 275, 319, 17279, 4946, 3154, 556, 4335, 8710, 432, 458, 8640, 1451, 438, 20280, 32, 275, 319, 275, 319, 477, 601, 3088, 687, 861, 111, 415, 3154, 556, 4335, 8710, 432, 458, 8640, 1451, 438, 275, 319, 20280, 45, 3088, 687, 901, 111, 5878, 32, 275, 569, 284]}
{"line_number": 430, "line_type": "original", "code": "            return INF;", "entropy": 5.2734375, "is_bug_line": false, "sus_score": 0.2672612419124244, "per_token_entropy": [7.94140625, 3.2265625, 9.8515625, 0.0753173828125], "tokens": [1468, 442, 47257, 45]}
{"line_number": 430, "line_type": "generated", "code": "\n     * </pre>\n     * Returns {@code NaN} if either {@code this} or {@code subtrahend} has a\n     * {@code NaN} value.\n     * <br/>\n     * Returns {@link #INF} if neither {@", "entropy": 0.136962890625, "is_bug_line": false, "sus_score": 0.2672612419124244, "per_token_entropy": [0.373291015625, 0.03485107421875, 0.1519775390625, 0.00020503997802734375, 0.00972747802734375, 0.00390625, 0.0003292560577392578, 1.1357421875, 0.006031036376953125, 0.58984375, 0.00244140625, 5.328655242919922e-05, 0.03924560546875, 0.03656005859375, 0.267333984375, 7.712841033935547e-05, 0.0102691650390625, 0.0003421306610107422, 0.043609619140625, 0.0159912109375, 0.00015079975128173828, 0.0028781890869140625, 0.00015652179718017578, 8.702278137207031e-06, 8.118152618408203e-05, 9.500980377197266e-05, 0.04302978515625, 0.75390625, 0.0292510986328125, 6.866455078125e-05, 0.0631103515625, 5.1975250244140625e-05, 0.002582550048828125, 0.0004436969757080078, 0.908203125, 0.513671875, 0.028656005859375, 0.00023603439331054688, 1.251953125, 0.1676025390625, 0.0170745849609375, 0.0024242401123046875, 1.52587890625e-05, 0.10247802734375, 0.374755859375, 0.09588623046875, 0.00452423095703125, 0.01401519775390625, 0.00043845176696777344, 0.005062103271484375, 0.008575439453125, 0.0126495361328125], "tokens": [275, 319, 576, 1001, 48, 275, 319, 3759, 3088, 687, 21644, 111, 415, 3154, 3088, 687, 458, 111, 556, 3088, 687, 1361, 359, 2371, 416, 111, 1401, 312, 275, 319, 3088, 687, 21644, 111, 786, 32, 275, 319, 333, 839, 2039, 275, 319, 3759, 3088, 1204, 588, 10192, 111, 415, 25209, 3088]}
{"line_number": 276, "line_type": "original", "code": "            double q = d / c;", "entropy": 2.814453125, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [6.06640625, 4.68359375, 7.96484375, 0.54833984375, 2.216796875, 0.7578125, 0.1839599609375, 0.10137939453125], "tokens": [1468, 2064, 2678, 280, 343, 517, 281, 45]}
{"line_number": 276, "line_type": "generated", "code": "\n        if (other instanceof Complex) {\n            final Complex rhs = (Complex) other;\n            return (real == rhs.real) && (imaginary == rhs.imaginary);\n        }\n        return false;\n    }\n\n    /**\n     * Get a hashCode", "entropy": 0.1385498046875, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [0.1416015625, 0.055023193359375, 0.08734130859375, 0.0290679931640625, 0.236328125, 0.019317626953125, 0.06610107421875, 0.003925323486328125, 0.06341552734375, 0.58349609375, 0.005374908447265625, 0.467041015625, 0.002239227294921875, 0.0016393661499023438, 8.785724639892578e-05, 0.0017023086547851562, 0.016448974609375, 0.0002263784408569336, 0.061065673828125, 1.505859375, 0.66552734375, 0.136474609375, 0.0158538818359375, 0.0016565322875976562, 8.130073547363281e-05, 0.4677734375, 0.08837890625, 0.050933837890625, 0.7138671875, 0.001178741455078125, 0.0003082752227783203, 0.0078125, 0.0015773773193359375, 5.0067901611328125e-05, 0.0013151168823242188, 2.47955322265625e-05, 0.00647735595703125, 0.0245208740234375, 0.00015306472778320312, 0.2451171875, 0.00833892822265625, 0.0019397735595703125, 0.0002713203430175781, 0.164794921875, 0.0035533905029296875, 0.1097412109375, 0.04266357421875, 0.01342010498046875, 4.8279762268066406e-05, 0.9345703125, 0.093994140625, 0.05157470703125], "tokens": [291, 415, 308, 2455, 5113, 19915, 27, 301, 324, 1158, 19915, 9322, 280, 308, 12267, 27, 1604, 45, 324, 442, 308, 4543, 610, 9322, 32, 4543, 27, 962, 308, 17792, 3172, 610, 9322, 32, 17792, 3172, 293, 291, 320, 291, 442, 901, 45, 284, 320, 446, 1022, 275, 319, 1390, 312, 17772]}
{"line_number": 277, "line_type": "original", "code": "            double denominator = d * q + c;", "entropy": 3.12890625, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [4.5625, 4.3203125, 12.28125, 0.06591796875, 3.650390625, 1.5849609375, 4.36328125, 0.044097900390625, 0.32080078125, 0.0909423828125], "tokens": [1468, 2064, 39920, 280, 343, 319, 2678, 474, 281, 45]}
{"line_number": 277, "line_type": "generated", "code": "\n            return ((real == other.real) && (imaginary == other.imaginary)) ||\n                   ((real == other.imaginary) && (imaginary == other.real));\n        }\n        return false;\n    }\n\n    /**\n     * Returns {@", "entropy": 0.19921875, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [0.292236328125, 0.6181640625, 1.6630859375, 0.57177734375, 0.07037353515625, 0.9208984375, 0.070556640625, 0.325439453125, 0.2391357421875, 0.0743408203125, 0.80517578125, 0.0086822509765625, 0.0013380050659179688, 0.0179901123046875, 0.01444244384765625, 0.0002715587615966797, 0.0057830810546875, 0.0003204345703125, 0.77587890625, 0.2464599609375, 0.480712890625, 0.07879638671875, 0.295654296875, 0.1448974609375, 0.11181640625, 0.0026493072509765625, 0.7041015625, 1.3232231140136719e-05, 0.0121612548828125, 0.00186920166015625, 0.04022216796875, 0.0021266937255859375, 5.125999450683594e-06, 0.01153564453125, 0.093505859375, 0.00021696090698242188, 0.005443572998046875, 0.046600341796875, 0.1744384765625, 0.0014314651489257812, 0.09161376953125, 0.0109710693359375, 0.0028667449951171875, 0.00024271011352539062, 0.0285186767578125, 0.0020503997802734375, 0.09344482421875, 0.039306640625, 0.0159454345703125, 7.152557373046875e-05, 0.9365234375, 0.204345703125], "tokens": [324, 442, 1833, 4543, 610, 1604, 32, 4543, 27, 962, 308, 17792, 3172, 610, 1604, 32, 17792, 3172, 490, 1276, 4511, 1833, 4543, 610, 1604, 32, 17792, 3172, 27, 962, 308, 17792, 3172, 610, 1604, 32, 4543, 876, 291, 320, 291, 442, 901, 45, 284, 320, 446, 1022, 275, 319, 3759, 3088]}
{"line_number": 278, "line_type": "original", "code": "            return createComplex((imaginary * q + real) / denominator,", "entropy": 2.6328125, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [4.484375, 0.311767578125, 11.625, 0.37451171875, 4.23828125, 5.921875, 0.0015535354614257812, 2.787109375, 8.234375, 1.255859375, 0.023834228515625, 0.06298828125, 0.019744873046875, 0.052947998046875, 0.09136962890625], "tokens": [1468, 442, 1487, 12267, 1162, 17792, 3172, 319, 2678, 474, 4011, 27, 517, 39920, 30]}
{"line_number": 278, "line_type": "generated", "code": "\n            return (real == c.real) && (imaginary == c.imaginary);\n        }\n        return false;\n    }\n\n    /**\n     * Get a hashCode for the complex number.\n     * Any {@code NaN} value in real or imaginary", "entropy": 0.126220703125, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [0.34619140625, 0.312255859375, 0.6845703125, 0.412841796875, 0.04095458984375, 0.004878997802734375, 0.000736236572265625, 0.484619140625, 0.2349853515625, 0.04705810546875, 0.376220703125, 0.006237030029296875, 0.0013532638549804688, 0.01441192626953125, 0.004344940185546875, 0.000110626220703125, 0.0033817291259765625, 9.715557098388672e-05, 0.017181396484375, 0.07659912109375, 0.00223541259765625, 0.10406494140625, 0.0102386474609375, 0.00270843505859375, 0.0002579689025878906, 0.02764892578125, 0.0020732879638671875, 0.0911865234375, 0.04205322265625, 0.01552581787109375, 5.829334259033203e-05, 0.9765625, 0.098876953125, 0.052734375, 0.00011730194091796875, 0.136474609375, 0.044586181640625, 0.035491943359375, 0.038238525390625, 0.08489990234375, 0.00035691261291503906, 0.2313232421875, 0.80078125, 0.0015287399291992188, 0.51904296875, 0.02264404296875, 0.08154296875, 0.04876708984375, 0.004222869873046875, 0.01544952392578125, 0.00015413761138916016, 1.7881393432617188e-06], "tokens": [324, 442, 308, 4543, 610, 281, 32, 4543, 27, 962, 308, 17792, 3172, 610, 281, 32, 17792, 3172, 293, 291, 320, 291, 442, 901, 45, 284, 320, 446, 1022, 275, 319, 1390, 312, 17772, 436, 322, 8640, 1451, 32, 275, 319, 6204, 3088, 687, 21644, 111, 786, 328, 4011, 556, 17463, 3172]}
{"line_number": 122, "line_type": "original", "code": "            return Double.POSITIVE_INFINITY;", "entropy": 3.01953125, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [7.58984375, 2.36328125, 8.609375, 0.08642578125, 5.28125, 0.0008645057678222656, 0.0013780593872070312, 0.22802734375], "tokens": [1468, 442, 6934, 32, 42270, 81, 36069, 45]}
{"line_number": 122, "line_type": "generated", "code": "\n     * @param  addend Value to be added to this {@code Complex}.\n     * @return {@code this + addend}.\n     */\n    public Complex add(double addend) {\n        if (isNaN) {\n            return NaN;\n        }", "entropy": 0.064208984375, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [0.58740234375, 0.181396484375, 0.85302734375, 0.01349639892578125, 0.26806640625, 0.0009169578552246094, 8.20159912109375e-05, 0.0032024383544921875, 0.0014314651489257812, 8.96453857421875e-05, 0.0014438629150390625, 0.0006656646728515625, 0.0034503936767578125, 0.0219573974609375, 0.00021398067474365234, 0.0008912086486816406, 0.0750732421875, 0.00444793701171875, 0.00015938282012939453, 0.0010890960693359375, 0.0020008087158203125, 0.036773681640625, 3.457069396972656e-05, 0.0007262229919433594, 6.711483001708984e-05, 0.00044155120849609375, 0.00010192394256591797, 0.165771484375, 0.0281219482421875, 0.363037109375, 0.03277587890625, 0.00907135009765625, 0.0016012191772460938, 0.00016558170318603516, 0.00023818016052246094, 0.035736083984375, 0.0006651878356933594, 3.4570693969726562e-06, 0.0008611679077148438, 0.0099945068359375, 0.054168701171875, 0.283203125, 0.0010395050048828125, 0.004550933837890625, 0.1705322265625, 0.0005269050598144531, 0.0079803466796875, 0.0017271041870117188, 0.066650390625, 0.0002999305725097656, 0.041259765625, 0.0001323223114013672], "tokens": [275, 319, 477, 753, 225, 1015, 416, 3846, 372, 526, 3640, 372, 458, 3088, 687, 19915, 4009, 275, 319, 477, 601, 3088, 687, 458, 474, 1015, 416, 4009, 275, 569, 284, 562, 19915, 1015, 26, 2627, 1015, 416, 27, 301, 291, 415, 308, 26821, 27, 301, 324, 442, 21644, 45, 291, 320]}
{"line_number": 263, "line_type": "original", "code": "        if (divisor.isInfinite() && !isInfinite()) {", "entropy": 2.16015625, "is_bug_line": false, "sus_score": 0.20412414523193154, "per_token_entropy": [2.7734375, 7.71484375, 0.60009765625, 11.1484375, 0.0242767333984375, 1.18359375, 4.1171875, 0.001293182373046875, 1.748046875, 0.422607421875, 1.2587890625, 1.1513671875, 0.00010514259338378906, 0.0928955078125, 0.1820068359375], "tokens": [351, 415, 308, 507, 22306, 32, 28823, 11949, 346, 962, 653, 28823, 11949, 1157, 301]}
{"line_number": 263, "line_type": "generated", "code": "\n     * to {@code NaN}, the complex number is equal to a\n     * {@code NaN} value.\n     * <p>\n     * Note that if the real and imaginary parts of two complex numbers\n     * are both zero, this method may return", "entropy": 0.227294921875, "is_bug_line": false, "sus_score": 0.20412414523193154, "per_token_entropy": [0.6484375, 0.05523681640625, 0.1976318359375, 0.00862884521484375, 0.00141143798828125, 1.3369140625, 0.006198883056640625, 0.011566162109375, 0.2259521484375, 0.10516357421875, 0.0008492469787597656, 0.0231781005859375, 0.0003056526184082031, 0.326904296875, 1.76953125, 3.457069396972656e-05, 0.034820556640625, 0.0082244873046875, 0.0711669921875, 0.373779296875, 0.041839599609375, 0.00553131103515625, 0.439453125, 0.0008382797241210938, 0.140625, 0.0272979736328125, 0.0203094482421875, 0.0037097930908203125, 5.233287811279297e-05, 0.09661865234375, 0.0098876953125, 0.498291015625, 0.06591796875, 0.20166015625, 0.2137451171875, 0.0001723766326904297, -0.0, 0.021148681640625, 0.298095703125, 0.521484375, 0.1070556640625, 0.0013666152954101562, 0.270263671875, 1.1563301086425781e-05, 0.0119781494140625, 1.4384765625, 1.2255859375, 0.0018968582153320312, 0.2413330078125, 0.0003590583801269531, 0.56982421875, 0.1385498046875], "tokens": [275, 319, 372, 3088, 687, 21644, 835, 322, 8640, 1451, 438, 5040, 372, 312, 275, 319, 3088, 687, 21644, 111, 786, 32, 275, 319, 333, 98, 48, 275, 319, 5830, 688, 415, 322, 4011, 461, 17463, 3172, 8710, 432, 3134, 8640, 7515, 275, 319, 884, 4335, 5934, 30, 458, 1411, 1631, 442]}
{"line_number": 267, "line_type": "original", "code": "        final double c = divisor.getReal();", "entropy": 2.1875, "is_bug_line": false, "sus_score": 0.20412414523193154, "per_token_entropy": [2.79296875, 6.65625, 1.013671875, 5.45703125, 0.67724609375, 4.15625, 0.007205963134765625, 0.04962158203125, 1.0029296875, 0.061492919921875], "tokens": [351, 1158, 2064, 281, 280, 33482, 32, 371, 6877, 473]}
{"line_number": 267, "line_type": "generated", "code": "\n     * @return {@code true} if, and only if, {@code other} is a\n     * {@code Complex} object that has the same real and imaginary\n     * values as this Complex object.\n     */\n    public boolean equals(Object other", "entropy": 0.181396484375, "is_bug_line": false, "sus_score": 0.20412414523193154, "per_token_entropy": [0.509765625, 0.1158447265625, 0.0214080810546875, 0.004764556884765625, 0.272705078125, 0.0007119178771972656, 0.0006589889526367188, 0.00018918514251708984, 0.020538330078125, 1.3056640625, 0.00608062744140625, 3.4332275390625e-05, 5.161762237548828e-05, 3.993511199951172e-05, 1.3466796875, 3.5881996154785156e-05, 0.04840087890625, 0.001384735107421875, 0.01230621337890625, 0.0146484375, 0.10906982421875, 7.367134094238281e-05, 0.55126953125, 0.0047149658203125, 0.0024852752685546875, 0.0118408203125, 0.8486328125, 0.0660400390625, 0.08087158203125, 0.054779052734375, 0.0002567768096923828, 0.7080078125, 0.007671356201171875, 0.00034809112548828125, 2.384185791015625e-07, 0.6953125, 5.459785461425781e-05, 1.0546875, 0.003421783447265625, 0.01139068603515625, 0.479736328125, 0.034210205078125, 0.00974273681640625, 0.03375244140625, 0.10650634765625, 0.01323699951171875, 0.78759765625, 0.003932952880859375, 0.0007138252258300781, 0.00659942626953125, 0.056884765625, 0.0012187957763671875], "tokens": [275, 319, 477, 601, 3088, 687, 861, 111, 415, 30, 461, 1755, 415, 30, 3088, 687, 1604, 111, 438, 312, 275, 319, 3088, 687, 19915, 111, 1300, 688, 1401, 322, 2432, 4011, 461, 17463, 3172, 275, 319, 2078, 619, 458, 19915, 1300, 32, 275, 569, 284, 562, 1905, 12423, 26, 959, 1604]}
{"line_number": 268, "line_type": "original", "code": "        final double d = divisor.getImaginary();", "entropy": 3.857421875, "is_bug_line": false, "sus_score": 0.20412414523193154, "per_token_entropy": [3.056640625, 18.015625, 1.4755859375, 6.73046875, 0.227294921875, 5.859375, 0.058807373046875, 0.38671875, 6.6015625, 0.00013458728790283203, 0.03375244140625], "tokens": [351, 1158, 2064, 343, 280, 33482, 32, 371, 42364, 3172, 473]}
{"line_number": 268, "line_type": "generated", "code": "\n     */\n    public boolean equals(Object other) {\n        if (this == other) {\n            return true;\n        }\n        if (other instanceof Complex) {\n            Complex c = (Complex) other;\n            if (c.isNaN) {\n                return", "entropy": 0.138916015625, "is_bug_line": false, "sus_score": 0.20412414523193154, "per_token_entropy": [0.9248046875, 0.2322998046875, 0.019073486328125, 0.83740234375, 0.0034084320068359375, 0.0009140968322753906, 0.003948211669921875, 0.0499267578125, 0.001331329345703125, 0.011322021484375, 0.00695037841796875, 0.1575927734375, 0.048583984375, 0.0226287841796875, 0.08148193359375, 0.007755279541015625, 0.00017833709716796875, 0.020263671875, 0.0074462890625, 0.01499176025390625, 0.01132965087890625, 0.0009512901306152344, 0.0004792213439941406, 0.0048370361328125, 0.0003323554992675781, 0.381591796875, 0.00922393798828125, 0.04052734375, 0.037322998046875, 0.468505859375, 0.00846099853515625, 0.0175628662109375, 0.0027294158935546875, 0.08392333984375, 0.8427734375, 1.1875, 0.0098114013671875, 0.0015573501586914062, 0.00015461444854736328, 0.0029144287109375, 0.016265869140625, 0.0001977682113647461, 0.10986328125, 0.28564453125, 0.056304931640625, 0.888671875, 0.0013217926025390625, 0.14697265625, 0.12091064453125, 0.0024967193603515625, 0.01203155517578125, 0.016143798828125], "tokens": [275, 569, 284, 562, 1905, 12423, 26, 959, 1604, 27, 301, 291, 415, 308, 578, 610, 1604, 27, 301, 324, 442, 861, 45, 291, 320, 291, 415, 308, 2455, 5113, 19915, 27, 301, 324, 19915, 281, 280, 308, 12267, 27, 1604, 45, 324, 415, 308, 85, 32, 26821, 27, 301, 400, 442]}
{"line_number": 270, "line_type": "original", "code": "        if (FastMath.abs(c) < FastMath.abs(d)) {", "entropy": 1.396484375, "is_bug_line": false, "sus_score": 0.20412414523193154, "per_token_entropy": [3.9921875, 1.11328125, 0.47412109375, 5.8515625, 0.0007777214050292969, 0.0007109642028808594, 0.15966796875, 0.015777587890625, 5.09765625, 3.173828125, 2.51171875, 2.142578125, 3.0994415283203125e-05, 7.939338684082031e-05, 1.142578125, 0.0037479400634765625, 0.51611328125, 0.0267791748046875, 0.305419921875], "tokens": [351, 415, 308, 12200, 5717, 32, 3596, 26, 85, 27, 333, 15938, 5717, 32, 3596, 26, 86, 490, 301]}
{"line_number": 270, "line_type": "generated", "code": "\n     */\n    @Override\n    public boolean equals(Object other) {\n        if (this == other) {\n            return true;\n        }\n        if (other == null ||!(other instanceof Complex)) {\n            return false;\n        }\n        Complex rhs = (", "entropy": 0.09796142578125, "is_bug_line": false, "sus_score": 0.20412414523193154, "per_token_entropy": [0.68798828125, 0.45361328125, 0.02398681640625, 0.50146484375, 0.0009393692016601562, 0.01377105712890625, 0.004001617431640625, 0.002864837646484375, 0.00012242794036865234, 0.00795745849609375, 0.051605224609375, 0.0008683204650878906, 0.0113983154296875, 0.01018524169921875, 0.13037109375, 0.0183868408203125, 0.0182952880859375, 0.08489990234375, 0.00754547119140625, 0.00015413761138916016, 0.0214080810546875, 0.006378173828125, 0.015838623046875, 0.006908416748046875, 0.0006690025329589844, 0.0004248619079589844, 0.00565338134765625, 0.0004627704620361328, 0.40869140625, 0.005786895751953125, 0.035675048828125, 0.015533447265625, 0.58837890625, 0.0004451274871826172, 0.1966552734375, 0.07421875, 0.0052947998046875, 0.00040793418884277344, 0.022857666015625, 0.0174102783203125, 0.003978729248046875, 0.00560760498046875, 0.00102996826171875, 0.0002586841583251953, 0.0001888275146484375, 0.0105133056640625, 0.00024580955505371094, 0.224365234375, 1.1435546875, 0.2410888671875, 0.00246429443359375, 0.0012760162353515625], "tokens": [275, 569, 284, 477, 1788, 284, 562, 1905, 12423, 26, 959, 1604, 27, 301, 291, 415, 308, 578, 610, 1604, 27, 301, 324, 442, 861, 45, 291, 320, 291, 415, 308, 2455, 610, 744, 1276, 13685, 2455, 5113, 19915, 490, 301, 324, 442, 901, 45, 291, 320, 291, 19915, 9322, 280, 308]}
{"line_number": 754, "line_type": "original", "code": "        return createComplex(FastMath.log(abs()),", "entropy": 2.541015625, "is_bug_line": false, "sus_score": 0.18257418583505536, "per_token_entropy": [3.38671875, 3.24609375, 0.39208984375, 0.00121307373046875, 0.01163482666015625, 3.09375, 5.221366882324219e-05, 9.202957153320312e-05, 12.6015625, 0.04052734375, 3.169921875, 4.546875], "tokens": [351, 442, 1487, 12267, 26, 12200, 5717, 32, 751, 26, 3596, 6182]}
{"line_number": 754, "line_type": "generated", "code": "\n     *  </code>\n     * </pre>\n     * where the (real) functions on the right-hand side are\n     * {@link java.lang.Math#sin} and {@link java.lang.Math#cosh}, and the", "entropy": 0.10052490234375, "is_bug_line": false, "sus_score": 0.18257418583505536, "per_token_entropy": [0.5625, 0.0024261474609375, 0.006900787353515625, 0.000553131103515625, 0.00017321109771728516, 0.0005621910095214844, 0.0012083053588867188, 0.0008931159973144531, 0.003200531005859375, 0.00010907649993896484, 0.0002315044403076172, 0.003082275390625, 9.715557098388672e-05, 0.20166015625, 0.27490234375, 0.34423828125, 0.02099609375, 0.0004076957702636719, 0.0030975341796875, 0.0007958412170410156, 4.220008850097656e-05, 0.0187225341796875, 0.050811767578125, 1.0967254638671875e-05, 0.0003037452697753906, 0.040802001953125, 0.006336212158203125, 0.0004930496215820312, 0.0008044242858886719, 0.00232696533203125, 0.84912109375, 1.2040138244628906e-05, 5.698204040527344e-05, 2.0384788513183594e-05, 0.00028634071350097656, 7.104873657226562e-05, 0.0002562999725341797, 0.5009765625, 0.0171051025390625, 0.1942138671875, 0.00037860870361328125, 0.1881103515625, 5.9604644775390625e-06, 2.5033950805664062e-06, 7.62939453125e-06, 0.0002887248992919922, 2.276897430419922e-05, 0.06610107421875, 3.5762786865234375e-07, 1.173828125, 0.6640625, 0.02294921875], "tokens": [275, 319, 225, 576, 687, 48, 275, 319, 576, 1001, 48, 275, 319, 2154, 322, 308, 4543, 27, 4442, 544, 322, 2091, 31, 4668, 5209, 884, 275, 319, 3088, 1204, 1383, 32, 1581, 32, 5717, 21, 7102, 111, 461, 3088, 1204, 1383, 32, 1581, 32, 5717, 21, 331, 615, 835, 461, 322]}
{"line_number": 164, "line_type": "original", "code": "        return createComplex(real + addend.getReal(),", "entropy": 2.4140625, "is_bug_line": false, "sus_score": 0.16222142113076254, "per_token_entropy": [3.50390625, 15.0078125, 2.0859375, 0.014892578125, 1.6337890625, 3.193359375, 4.28515625, 0.95458984375, 0.0086212158203125, 0.320068359375, 0.0245513916015625, 0.28515625, 0.0587158203125], "tokens": [351, 442, 1487, 12267, 26, 4543, 474, 1015, 416, 32, 371, 6877, 1026]}
{"line_number": 164, "line_type": "generated", "code": "     a^2 + b^2\n     *  </code>\n     * </pre>\n     * where {@code a}, {@code b}, {@code c}, and {@code d} are the four\n     * components of the input.\n     * <", "entropy": 0.1953125, "is_bug_line": false, "sus_score": 0.16222142113076254, "per_token_entropy": [1.9130859375, 1.16796875, 0.1922607421875, 1.4185905456542969e-05, 0.0030975341796875, 0.0035800933837890625, 5.2094459533691406e-05, 0.00016105175018310547, 0.187744140625, 0.00038552284240722656, 0.0628662109375, 0.0033740997314453125, 6.61611557006836e-05, 0.0022068023681640625, 0.0007519721984863281, 0.0017986297607421875, 0.029052734375, 8.487701416015625e-05, 0.01186370849609375, 0.004962921142578125, 0.00016188621520996094, 0.90771484375, 0.0533447265625, 0.0002510547637939453, 0.27099609375, 0.242431640625, 0.00013935565948486328, 2.9802322387695312e-06, 4.76837158203125e-07, 0.0002503395080566406, 0.00032711029052734375, 5.841255187988281e-06, 2.384185791015625e-05, 0.004024505615234375, 0.0016002655029296875, 0.006778717041015625, 6.914138793945312e-05, 1.7881393432617188e-05, 0.0015535354614257812, 0.11138916015625, 0.0426025390625, 0.0721435546875, 0.2490234375, 6.4373016357421875e-06, 0.29296875, 4.76837158203125e-06, 0.0728759765625, 1.1640625, 2.197265625, 0.477294921875, 0.0001538991928100586, 0.403076171875], "tokens": [262, 312, 80, 36, 474, 323, 80, 36, 275, 319, 225, 576, 687, 48, 275, 319, 576, 1001, 48, 275, 319, 2154, 3088, 687, 312, 835, 3088, 687, 323, 835, 3088, 687, 281, 835, 461, 3088, 687, 343, 111, 884, 322, 12074, 275, 319, 6339, 432, 322, 1509, 32, 275, 319, 333]}
{"line_number": 379, "line_type": "original", "code": "        return isNaN;", "entropy": 4.22265625, "is_bug_line": false, "sus_score": 0.1543033499620919, "per_token_entropy": [3.755859375, 5.35546875, 3.58984375, 4.1875, 4.22265625], "tokens": [351, 442, 438, 11126, 45]}
{"line_number": 379, "line_type": "generated", "code": "\n        }\n        return new Complex(\n            real * factor.real - imaginary * factor.imaginary,\n            real * factor.imaginary + imaginary * factor.real);\n    }\n\n    /**\n     * Returns a {@code Complex} whose value is", "entropy": 0.09478759765625, "is_bug_line": false, "sus_score": 0.1543033499620919, "per_token_entropy": [0.286865234375, 0.0259246826171875, 0.32421875, 1.62109375, 0.1558837890625, 0.0018749237060546875, 0.0187835693359375, 1.1044921875, 0.548828125, 0.01641845703125, 0.0020046234130859375, 1.3828277587890625e-05, 0.00830078125, 0.00778961181640625, 0.002532958984375, 5.841255187988281e-06, 0.000743865966796875, 0.0004425048828125, 2.2292137145996094e-05, 7.319450378417969e-05, 2.5033950805664062e-06, 0.0009984970092773438, 0.00934600830078125, 0.059783935546875, 0.0001800060272216797, 0.00023257732391357422, 6.556510925292969e-06, 7.49826431274414e-05, 4.6253204345703125e-05, 0.0006399154663085938, 0.0245819091796875, 1.6689300537109375e-06, 0.0003552436828613281, 0.00043892860412597656, 3.826618194580078e-05, 0.00014650821685791016, 0.05645751953125, 0.05816650390625, 0.0023651123046875, 0.18115234375, 0.009124755859375, 0.0166168212890625, 1.7881393432617188e-05, 0.2578125, 0.06402587890625, 0.04571533203125, 0.008941650390625, 0.0006771087646484375, 0.0029659271240234375, 0.0001404285430908203, 0.00021314620971679688, 0.0002110004425048828], "tokens": [291, 320, 291, 442, 537, 19915, 26, 324, 4011, 319, 10365, 32, 4543, 429, 17463, 3172, 319, 10365, 32, 17792, 3172, 30, 324, 4011, 319, 10365, 32, 17792, 3172, 474, 17463, 3172, 319, 10365, 32, 4543, 293, 284, 320, 446, 1022, 275, 319, 3759, 312, 3088, 687, 19915, 111, 13696, 786, 438]}
{"line_number": 750, "line_type": "original", "code": "        if (isNaN) {", "entropy": 1.0966796875, "is_bug_line": false, "sus_score": 0.1543033499620919, "per_token_entropy": [4.109375, 1.5791015625, 0.08770751953125, 0.058349609375, 0.6728515625, 0.06976318359375], "tokens": [351, 415, 308, 26821, 27, 301]}
{"line_number": 750, "line_type": "generated", "code": "\n     * Implements the formula:\n     * <pre>\n     *  <code>\n     *   sin(a + bi) = sin(a)cosh(b) + cos(a)sinh(b)i\n     *  </code", "entropy": 0.05865478515625, "is_bug_line": false, "sus_score": 0.1543033499620919, "per_token_entropy": [0.66357421875, 0.08380126953125, 0.2279052734375, 7.2479248046875e-05, 0.032379150390625, 0.0033416748046875, 0.033416748046875, 9.691715240478516e-05, 0.005340576171875, 0.00513458251953125, 0.004886627197265625, 0.0007157325744628906, 3.1948089599609375e-05, 0.004840850830078125, 0.189453125, 0.0003631114959716797, 0.00010156631469726562, 0.005718231201171875, 4.017353057861328e-05, 0.02093505859375, 0.0013246536254882812, 0.1866455078125, 0.040069580078125, 0.037933349609375, 0.00408172607421875, 0.0001233816146850586, 0.00011420249938964844, 0.006237030029296875, 0.342041015625, 0.00010228157043457031, 0.03155517578125, 0.11273193359375, 0.02545166015625, 0.00016796588897705078, 3.802776336669922e-05, 0.00018608570098876953, 0.76025390625, 0.19189453125, 2.276897430419922e-05, 3.337860107421875e-06, 7.474422454833984e-05, 0.01430511474609375, 4.0411949157714844e-05, 1.800060272216797e-05, 0.00010585784912109375, 5.543231964111328e-05, 0.0046234130859375, 0.00577545166015625, 8.96453857421875e-05, 0.0017728805541992188, 4.601478576660156e-05, 6.687641143798828e-05], "tokens": [275, 319, 34818, 322, 17568, 44, 275, 319, 333, 1001, 48, 275, 319, 225, 333, 687, 48, 275, 319, 261, 9812, 26, 83, 474, 10789, 27, 280, 9812, 26, 83, 27, 331, 615, 26, 84, 27, 474, 10712, 26, 83, 27, 7102, 90, 26, 84, 27, 91, 275, 319, 225, 576, 687]}
