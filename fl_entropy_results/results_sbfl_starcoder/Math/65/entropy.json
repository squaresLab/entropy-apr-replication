{"line_number": 255, "line_type": "original", "code": "        double chiSquare = 0;", "entropy": 1.6025390625, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [1.7412109375, 2.138671875, 7.3125, 0.2349853515625, 0.1776123046875, 1.041015625, 0.0281219482421875, 0.1461181640625], "tokens": [351, 2064, 25549, 18374, 280, 225, 34, 45]}
{"line_number": 255, "line_type": "generated", "code": "\n     */\n    public double[] getErrors() {\n\n        // compute the covariance matrix\n        final double[][] covariances = getCovariances();\n\n        // compute the standard deviation for each parameter\n        final double[] errors = new double[cols];\n       ", "entropy": 0.285400390625, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.923828125, 0.493408203125, 0.038360595703125, 0.027740478515625, 0.0180511474609375, 0.004901885986328125, 0.8798828125, 0.20361328125, 0.009552001953125, 0.051361083984375, 0.75732421875, 0.5947265625, 1.4375, 0.447265625, 0.98828125, 0.0166473388671875, 0.2025146484375, 1.033203125, 0.1134033203125, 0.050445556640625, 0.47314453125, 0.004337310791015625, 0.08612060546875, 0.00016307830810546875, 0.077880859375, 0.00881195068359375, 2.86102294921875e-05, 2.9802322387695312e-06, 7.152557373046875e-07, 0.0004210472106933594, 0.00023066997528076172, 0.2015380859375, 0.0257568359375, 0.69482421875, 0.239013671875, 1.3251953125, 0.97900390625, 1.0244140625, 0.0203094482421875, 0.215576171875, 0.141845703125, 0.497802734375, 0.05694580078125, 0.00664520263671875, 0.40234375, 0.0034313201904296875, 0.00498199462890625, 0.000255584716796875, 0.00017511844635009766, 0.03314208984375, 0.0029201507568359375, 0.0200653076171875], "tokens": [275, 569, 284, 562, 2064, 1178, 622, 7352, 346, 301, 584, 434, 7596, 322, 40204, 5045, 291, 1158, 2064, 11336, 2098, 869, 2531, 1091, 280, 622, 2235, 869, 2531, 1091, 473, 584, 434, 7596, 322, 6216, 33809, 436, 2504, 3395, 291, 1158, 2064, 1178, 3878, 280, 537, 2064, 77, 8221, 970, 291]}
{"line_number": 256, "line_type": "original", "code": "        for (int i = 0; i < rows; ++i) {", "entropy": 0.4248046875, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [2.43359375, 3.158203125, 0.01432037353515625, 0.0207672119140625, 0.31884765625, 0.0027637481689453125, 0.01090240478515625, 0.0008001327514648438, 0.004383087158203125, 0.0011281967163085938, 0.0094757080078125, 0.78662109375, 0.00537109375, 0.25390625, 0.0014886856079101562, 0.00485992431640625, 0.1961669921875], "tokens": [351, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 5760, 45, 3311, 91, 27, 301]}
{"line_number": 256, "line_type": "generated", "code": "\n     */\n    public double[] guessParametersErrors()\n        throws FunctionEvaluationException {\n\n        // set up the jacobian\n        updateJacobian();\n\n        // compute transpose(J).J, avoiding building big intermediate matrices\n        double[][] jTj = new double", "entropy": 0.14697265625, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [1.5, 0.77099609375, 0.0445556640625, 0.023712158203125, 0.018768310546875, 0.0040435791015625, 0.9814453125, 0.7392578125, 0.006977081298828125, 0.0037288665771484375, 0.10894775390625, 0.00045561790466308594, 0.005596160888671875, 0.000518798828125, 1.049041748046875e-05, 0.04815673828125, 0.17578125, 0.57275390625, 0.50830078125, 0.0019054412841796875, 0.01264190673828125, 0.0232086181640625, 0.0010013580322265625, 0.1087646484375, 0.01506805419921875, 0.0006256103515625, 1.430511474609375e-06, 0.00033545494079589844, 0.07305908203125, 0.1710205078125, 0.421142578125, 0.51416015625, 0.0011119842529296875, 0.009429931640625, 0.01113128662109375, 0.11749267578125, 0.0633544921875, 0.005428314208984375, 0.001178741455078125, 0.0229034423828125, 0.019073486328125, 0.0030670166015625, 0.028564453125, 0.028045654296875, 0.2042236328125, 0.2095947265625, 0.0335693359375, 0.0126800537109375, 0.001064300537109375, 0.005069732666015625, 0.0067291259765625, 0.0009326934814453125], "tokens": [275, 569, 284, 562, 2064, 1178, 11089, 3675, 7352, 346, 291, 2571, 4540, 19637, 984, 301, 584, 434, 739, 973, 322, 594, 30495, 291, 1974, 60, 30495, 473, 584, 434, 7596, 27224, 26, 60, 547, 60, 30, 7358, 299, 9038, 6524, 23124, 23784, 291, 2064, 11336, 594, 70, 92, 280, 537, 2064]}
{"line_number": 257, "line_type": "original", "code": "            final double residual = residuals[i];", "entropy": 1.9013671875, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [2.611328125, 7.328125, 0.75830078125, 5.52734375, 0.369140625, 2.26171875, 0.01142120361328125, 0.0105743408203125, 0.09259033203125, 0.04290771484375], "tokens": [1468, 1158, 2064, 27410, 280, 27410, 101, 77, 91, 970]}
{"line_number": 257, "line_type": "generated", "code": "\n     */\n    public double[] guessErrors()\n        throws FunctionEvaluationException, OptimizationException {\n\n        // set up the jacobian\n        updateJacobian();\n\n        // compute transpose(J).J, avoiding building big intermediate matrices\n        double[][] jTj =", "entropy": 0.10540771484375, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.9091796875, 0.07275390625, 0.021484375, 0.02276611328125, 0.0224151611328125, 0.0036869049072265625, 0.82958984375, 0.92333984375, 0.0043182373046875, 0.1259765625, 0.0005059242248535156, 0.006549835205078125, 0.00044918060302734375, 1.1801719665527344e-05, 0.0030574798583984375, 0.060455322265625, 1.6689300537109375e-06, 0.039794921875, 0.1961669921875, 0.415771484375, 0.49462890625, 0.0017309188842773438, 0.0125579833984375, 0.02197265625, 0.0013885498046875, 0.09271240234375, 0.0088958740234375, 0.0006866455078125, 2.1457672119140625e-06, 0.0003108978271484375, 0.054840087890625, 0.1304931640625, 0.2095947265625, 0.2086181640625, 0.0007719993591308594, 0.00731658935546875, 0.007511138916015625, 0.0819091796875, 0.053131103515625, 0.006374359130859375, 0.0011720657348632812, 0.02301025390625, 0.0169677734375, 0.002750396728515625, 0.0244293212890625, 0.0303955078125, 0.1590576171875, 0.1322021484375, 0.02099609375, 0.00907135009765625, 0.0009036064147949219, 0.00415802001953125], "tokens": [275, 569, 284, 562, 2064, 1178, 11089, 7352, 346, 291, 2571, 4540, 19637, 984, 30, 41916, 984, 301, 584, 434, 739, 973, 322, 594, 30495, 291, 1974, 60, 30495, 473, 584, 434, 7596, 27224, 26, 60, 547, 60, 30, 7358, 299, 9038, 6524, 23124, 23784, 291, 2064, 11336, 594, 70, 92, 280]}
{"line_number": 258, "line_type": "original", "code": "            chiSquare += residual * residual / residualsWeights[i];", "entropy": 1.9248046875, "is_bug_line": true, "sus_score": 1.0, "per_token_entropy": [3.84765625, 14.78125, 0.8125, 3.94140625, 0.26904296875, 0.2320556640625, 0.00548553466796875, 1.46875, 1.263671875, 0.0677490234375, 0.136962890625, 0.00557708740234375, 0.0821533203125, 0.036956787109375], "tokens": [1468, 25549, 18374, 1454, 27410, 319, 27410, 517, 27410, 101, 21640, 77, 91, 970]}
{"line_number": 258, "line_type": "generated", "code": "\n     */\n    public double[] guessErrors()\n        throws FunctionEvaluationException, OptimizationException {\n\n        // set up the jacobian\n        updateJacobian();\n\n        // compute transpose(J).J, avoiding building big intermediate matrices\n        double[][] jTj =", "entropy": 0.1141357421875, "is_bug_line": true, "sus_score": 1.0, "per_token_entropy": [0.72705078125, 0.92333984375, 0.0122222900390625, 0.0211944580078125, 0.0193939208984375, 0.002227783203125, 0.8671875, 0.80908203125, 0.0032958984375, 0.0994873046875, 0.00035071372985839844, 0.00670623779296875, 0.0003731250762939453, 1.1086463928222656e-05, 0.00222015380859375, 0.07098388671875, 1.9073486328125e-06, 0.0196075439453125, 0.1654052734375, 0.448486328125, 0.62109375, 0.002429962158203125, 0.01305389404296875, 0.032989501953125, 0.001468658447265625, 0.0596923828125, 0.006900787353515625, 0.0004165172576904297, 9.5367431640625e-07, 0.0001659393310546875, 0.032867431640625, 0.11444091796875, 0.2017822265625, 0.1583251953125, 0.0006556510925292969, 0.007236480712890625, 0.005268096923828125, 0.050628662109375, 0.057220458984375, 0.006771087646484375, 0.0014066696166992188, 0.0244293212890625, 0.0181884765625, 0.0029449462890625, 0.0253753662109375, 0.01081085205078125, 0.1617431640625, 0.08697509765625, 0.0190582275390625, 0.005916595458984375, 0.0006785392761230469, 0.0042724609375], "tokens": [275, 569, 284, 562, 2064, 1178, 11089, 7352, 346, 291, 2571, 4540, 19637, 984, 30, 41916, 984, 301, 584, 434, 739, 973, 322, 594, 30495, 291, 1974, 60, 30495, 473, 584, 434, 7596, 27224, 26, 60, 547, 60, 30, 7358, 299, 9038, 6524, 23124, 23784, 291, 2064, 11336, 594, 70, 92, 280]}
{"line_number": 260, "line_type": "original", "code": "        return chiSquare;", "entropy": 4.1328125, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [4.53125, 2.056640625, 10.7890625, 0.05255126953125, 3.22265625], "tokens": [351, 442, 25549, 18374, 45]}
{"line_number": 260, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Get the number of degrees of freedom.\n     * @return number of degrees of freedom\n     * @exception FunctionEvaluationException if the function jacobian cannot be evaluated\n     */\n    public int getDegreesOfFreedom()\n        throws", "entropy": 0.20947265625, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.5966796875, 0.95947265625, 0.46337890625, 0.049407958984375, 0.061492919921875, 4.2319297790527344e-05, 0.37744140625, 0.1707763671875, 2.10546875, 0.00188446044921875, 0.86328125, 0.00030517578125, 0.005382537841796875, 0.462646484375, 0.0426025390625, 7.665157318115234e-05, 0.587890625, 0.00353240966796875, 0.12548828125, 0.0009627342224121094, 0.02099609375, 0.0009698867797851562, 0.001255035400390625, 0.2130126953125, 0.7412109375, 0.0228729248046875, 0.10577392578125, 0.10986328125, 0.0001691579818725586, 0.0001684427261352539, 0.006839752197265625, 0.0131683349609375, 0.040679931640625, 0.055999755859375, 0.0021533966064453125, 0.0221710205078125, 0.685546875, 0.1639404296875, 0.01068115234375, 0.6328125, 0.28271484375, 0.020751953125, 0.193603515625, 0.167724609375, 0.260009765625, 0.002410888671875, 0.0005478858947753906, 3.457069396972656e-05, 3.2782554626464844e-05, 0.0010805130004882812, 0.2349853515625, 0.00025844573974609375], "tokens": [284, 320, 446, 1022, 275, 319, 1390, 322, 1451, 432, 18667, 432, 48503, 32, 275, 319, 477, 601, 1451, 432, 18667, 432, 48503, 275, 319, 477, 3893, 4540, 19637, 984, 415, 322, 667, 594, 30495, 4881, 526, 22423, 275, 569, 284, 562, 629, 622, 32709, 1419, 56, 18749, 418, 346, 291, 2571]}
{"line_number": 294, "line_type": "original", "code": "            return inverse.getData();", "entropy": 4.98046875, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [4.13671875, 4.83984375, 10.0390625, 3.83984375, 6.94921875, 0.0740966796875], "tokens": [1468, 442, 19385, 32, 11576, 473]}
{"line_number": 294, "line_type": "generated", "code": "        residuals = new double[target.length];\n        residualsWeights = weights;", "entropy": 0.493896484375, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [1.57421875, 2.494140625, 0.0062255859375, 1.818359375, 0.3271484375, 0.01142120361328125, 0.002696990966796875, 1.2080078125, 0.0010461807250976562, 0.0012655258178710938, 0.00241851806640625, 0.3486328125, 0.09283447265625, 0.0020465850830078125, 0.020263671875, 0.0019426345825195312, 0.693359375, 0.28515625], "tokens": [351, 27410, 101, 280, 537, 2064, 77, 1977, 32, 1322, 970, 291, 27410, 101, 21640, 280, 11229, 45]}
{"line_number": 317, "line_type": "original", "code": "        double[] errors = new double[cols];", "entropy": 1.294921875, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [2.505859375, 4.44921875, 0.173583984375, 2.771484375, 0.216796875, 2.236328125, 0.04168701171875, 0.0012807846069335938, 0.546875, 0.00978851318359375], "tokens": [351, 2064, 1178, 3878, 280, 537, 2064, 77, 8221, 970]}
{"line_number": 317, "line_type": "generated", "code": "\n     */\n    private VectorialPointValuePair doOptimize()\n        throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {\n\n        // check the start point\n        if (point.length!= cols) {\n            throw new IllegalArgumentException(LocalizedFormats.DIMENSIONS_MISMATCH,", "entropy": 0.1673583984375, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.771484375, 0.07733154296875, 0.028411865234375, 0.76904296875, 0.01389312744140625, 0.00019848346710205078, 4.756450653076172e-05, 3.6954879760742188e-06, 0.003185272216796875, 7.56978988647461e-05, 0.0007195472717285156, 0.03814697265625, 9.66787338256836e-05, 0.00567626953125, 0.0003178119659423828, 2.384185791015625e-06, 0.0009379386901855469, 0.024444580078125, 1.3113021850585938e-06, 0.1590576171875, 0.2451171875, 0.0225830078125, 0.2064208984375, 0.44970703125, 1.369140625, 1.7373046875, 0.56396484375, 0.0133056640625, 0.21142578125, 0.16064453125, 0.0167999267578125, 0.2568359375, 0.15185546875, 6.103515625e-05, 0.057464599609375, 0.1810302734375, 0.006683349609375, 0.0035228729248046875, 0.01934814453125, 0.0237884521484375, 0.0611572265625, 0.162109375, 0.135009765625, 0.439208984375, 0.0018634796142578125, 0.00029850006103515625, 0.04296875, 0.0254669189453125, 0.00241851806640625, 0.01168060302734375, 0.00020360946655273438, 0.2313232421875], "tokens": [275, 569, 284, 945, 4107, 564, 1943, 14782, 745, 39125, 346, 291, 2571, 4540, 19637, 984, 30, 41916, 984, 30, 12137, 301, 584, 434, 1505, 322, 1477, 2260, 291, 415, 308, 1493, 32, 1322, 863, 14342, 27, 301, 324, 1422, 537, 12137, 26, 24225, 19298, 32, 39587, 69, 81, 10588, 15895, 30]}
{"line_number": 318, "line_type": "original", "code": "        final double c = Math.sqrt(getChiSquare() / (rows - cols));", "entropy": 1.4794921875, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [5.015625, 3.3828125, 2.015625, 3.91015625, 0.274169921875, 1.009765625, 0.0849609375, 0.438720703125, 0.07879638671875, 5.359375, 2.306640625, 0.51611328125, 2.072265625, 0.04833984375, 1.1376953125, 0.3974609375, 0.01580810546875, 0.01363372802734375, 0.03265380859375], "tokens": [351, 1158, 2064, 281, 280, 4175, 32, 8663, 26, 371, 40953, 18374, 346, 517, 308, 2138, 429, 14342, 876]}
{"line_number": 318, "line_type": "generated", "code": "\n    private VectorialPointValuePair doOptimize()\n        throws FunctionEvaluationException, OptimizationException {\n\n        // check that the start point is valid\n        if (point.length!= cols) {\n            throw new IllegalArgumentException(LocalizedFormats.DIMENSIONS_MISMATCH,\n                                              ", "entropy": 0.25146484375, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.1712646484375, 0.60205078125, 0.0186614990234375, 0.0003390312194824219, 6.115436553955078e-05, 6.794929504394531e-06, 0.005035400390625, 0.00021898746490478516, 0.0016498565673828125, 0.06011962890625, 0.00012350082397460938, 0.0064697265625, 0.00032138824462890625, 4.76837158203125e-06, 0.0018825531005859375, 0.0202178955078125, 1.3113021850585938e-06, 1.4736328125, 0.1693115234375, 0.43408203125, 1.21875, 1.4892578125, 0.80078125, 0.546875, 0.00852203369140625, 0.97705078125, 2.326171875, 0.10577392578125, 0.163330078125, 0.018768310546875, 0.314697265625, 0.232177734375, 8.749961853027344e-05, 0.062744140625, 0.19580078125, 0.00800323486328125, 0.004055023193359375, 0.015472412109375, 0.014556884765625, 0.0966796875, 0.1558837890625, 0.1689453125, 0.474609375, 0.0013637542724609375, 0.0004246234893798828, 0.059539794921875, 0.034576416015625, 0.0021724700927734375, 0.0111083984375, 0.0002110004425048828, 0.2109375, 0.383544921875], "tokens": [284, 945, 4107, 564, 1943, 14782, 745, 39125, 346, 291, 2571, 4540, 19637, 984, 30, 41916, 984, 301, 584, 434, 1505, 688, 322, 1477, 2260, 438, 2080, 291, 415, 308, 1493, 32, 1322, 863, 14342, 27, 301, 324, 1422, 537, 12137, 26, 24225, 19298, 32, 39587, 69, 81, 10588, 15895, 30, 16329]}
{"line_number": 319, "line_type": "original", "code": "        double[][] covar = getCovariances();", "entropy": 1.7998046875, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [2.0546875, 13.15625, 3.71484375, 0.257080078125, 0.00106048583984375, 0.432861328125, 1.970703125, 0.004215240478515625, 0.00015795230865478516, 0.00010657310485839844, 3.5762786865234375e-07, 0.005886077880859375], "tokens": [351, 2064, 11336, 2098, 869, 280, 622, 2235, 869, 2531, 1091, 473]}
{"line_number": 319, "line_type": "generated", "code": "\n        throws FunctionEvaluationException, OptimizationException, IllegalArgumentException;\n\n    /**\n     * Get the number of iterations.\n     * @return iterations count\n     */\n    public int getIterations() {\n        return iterations;\n    }\n\n    /**\n     * Get the number of objective function", "entropy": 0.2279052734375, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.3486328125, 0.297607421875, 0.00691986083984375, 0.00014472007751464844, 6.67572021484375e-06, 0.0053253173828125, 0.032958984375, 3.933906555175781e-06, 0.156982421875, 0.31591796875, 0.455810546875, 0.51123046875, 0.0304107666015625, 0.6103515625, 4.9114227294921875e-05, 1.75, 0.153564453125, 1.9296875, 0.00205230712890625, 1.0, 1.189453125, 0.0222625732421875, 0.0006432533264160156, 0.2274169921875, 0.0005655288696289062, 0.6884765625, 0.77978515625, 0.0261688232421875, 0.09307861328125, 0.003757476806640625, 0.03564453125, 0.0293731689453125, 0.036102294921875, 0.006374359130859375, 0.007724761962890625, 0.00409698486328125, 0.01450347900390625, 0.003173828125, 0.006267547607421875, 0.001312255859375, 0.00384521484375, 0.00048279762268066406, 0.032257080078125, 0.0017061233520507812, 0.02850341796875, 8.606910705566406e-05, 0.024139404296875, 0.0033626556396484375, 0.078125, 0.003753662109375, 0.8701171875, 0.0248565673828125], "tokens": [291, 2571, 4540, 19637, 984, 30, 41916, 984, 30, 12137, 45, 446, 1022, 275, 319, 1390, 322, 1451, 432, 17576, 32, 275, 319, 477, 601, 17576, 2385, 275, 569, 284, 562, 629, 622, 31219, 346, 301, 291, 442, 17576, 45, 284, 320, 446, 1022, 275, 319, 1390, 322, 1451, 432, 25110, 667]}
{"line_number": 320, "line_type": "original", "code": "        for (int i = 0; i < errors.length; ++i) {", "entropy": 0.79296875, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [4.3671875, 3.583984375, 0.0162506103515625, 0.0872802734375, 0.1275634765625, 0.00579071044921875, 0.03179931640625, 0.004535675048828125, 0.005573272705078125, 0.0011444091796875, 0.0124969482421875, 6.47265625, 0.11700439453125, 0.004184722900390625, 0.0038661956787109375, 0.1239013671875, 0.0007333755493164062, 0.0082550048828125, 0.09515380859375], "tokens": [351, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 3878, 32, 1322, 45, 3311, 91, 27, 301]}
{"line_number": 320, "line_type": "generated", "code": "\n\n    /**\n     * Get the number of iterations.\n     * @return iterations\n     */\n    public int getIterations() {\n        return iterations;\n    }\n\n    /**\n     * Get the number of objective function evaluations.\n     * @return number of objective function evalu", "entropy": 0.253662109375, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [1.1337890625, 0.15771484375, 0.5703125, 4.3392181396484375e-05, 1.5966796875, 0.1712646484375, 1.9052734375, 0.0017919540405273438, 1.158203125, 0.9814453125, 0.024078369140625, 0.0006833076477050781, 0.242919921875, 0.0008106231689453125, 0.6884765625, 0.9912109375, 0.09307861328125, 0.0029544830322265625, 0.046630859375, 0.03021240234375, 0.0197906494140625, 0.004573822021484375, 0.0023860931396484375, 0.0037994384765625, 0.00988006591796875, 0.003414154052734375, 0.007659912109375, 0.0014858245849609375, 0.00359344482421875, 0.0003609657287597656, 0.042510986328125, 0.0015621185302734375, 0.0311279296875, 6.473064422607422e-05, 0.0263671875, 0.00330352783203125, 0.08038330078125, 0.004123687744140625, 0.82666015625, 0.0285797119140625, 0.1236572265625, 8.237361907958984e-05, 0.026336669921875, 0.0018529891967773438, 2.4199485778808594e-05, 0.04022216796875, 0.0003345012664794922, 1.4619140625, 0.00039887428283691406, 0.6083984375, 0.005462646484375, 0.02606201171875], "tokens": [446, 1022, 275, 319, 1390, 322, 1451, 432, 17576, 32, 275, 319, 477, 601, 17576, 275, 569, 284, 562, 629, 622, 31219, 346, 301, 291, 442, 17576, 45, 284, 320, 446, 1022, 275, 319, 1390, 322, 1451, 432, 25110, 667, 6130, 993, 32, 275, 319, 477, 601, 1451, 432, 25110, 667, 6130]}
{"line_number": 321, "line_type": "original", "code": "            errors[i] = Math.sqrt(covar[i][i]) * c;", "entropy": 1.037109375, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [6.82421875, 7.64453125, 0.359619140625, 0.07830810546875, 0.003978729248046875, 0.10272216796875, 1.611328125, 0.00823974609375, 1.5078125, 0.0191650390625, 0.6201171875, 0.01535797119140625, 0.246826171875, 0.006534576416015625, 0.0024967193603515625, 0.0004215240478515625, 1.4169921875, 0.0753173828125, 0.025726318359375, 0.1602783203125], "tokens": [1468, 3878, 77, 91, 79, 280, 4175, 32, 8663, 26, 331, 869, 77, 91, 1674, 91, 1130, 319, 281, 45]}
{"line_number": 321, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [], "tokens": []}
{"line_number": 323, "line_type": "original", "code": "        return errors;", "entropy": 5.28515625, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [5.38671875, 2.392578125, 13.203125, 0.1568603515625], "tokens": [351, 442, 3878, 45]}
{"line_number": 323, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [], "tokens": []}
{"line_number": 275, "line_type": "original", "code": "        updateJacobian();", "entropy": 3.046875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [5.2890625, 7.78125, 1.8115234375, 0.004543304443359375, 0.34814453125], "tokens": [351, 1974, 60, 30495, 473]}
{"line_number": 275, "line_type": "generated", "code": "\n\n    /**\n     * Get the parameter value.\n     * @param index parameter index\n     * @return parameter value\n     */\n    public double getParameter(final int index) {\n        return parameters[index];\n    }\n\n    /**\n     * Get the parameter values.", "entropy": 0.298583984375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [1.1240234375, 0.10980224609375, 0.1263427734375, 1.1563301086425781e-05, 0.59814453125, 0.252197265625, 3.65234375, 2.046875, 1.04296875, 0.024749755859375, 0.00029206275939941406, 0.24365234375, 0.08734130859375, 0.40185546875, 0.51220703125, 0.0299530029296875, 0.256591796875, 0.0014696121215820312, 0.0015535354614257812, 0.006496429443359375, 0.09844970703125, 0.01175689697265625, 0.10516357421875, 0.42333984375, 0.004276275634765625, 0.0217742919921875, 0.016021728515625, 0.036224365234375, 0.001922607421875, 0.026031494140625, 0.5830078125, 0.0003361701965332031, 0.0005364418029785156, 0.0016727447509765625, 0.01103973388671875, 0.03082275390625, 0.041168212890625, 0.96875, 0.0291290283203125, 0.002079010009765625, 0.007160186767578125, 0.004276275634765625, 0.00018787384033203125, 0.1456298828125, 0.00998687744140625, 0.01250457763671875, 1.8358230590820312e-05, 0.287841796875, 0.1397705078125, 0.8876953125, 1.033203125, 0.061737060546875], "tokens": [446, 1022, 275, 319, 1390, 322, 3395, 786, 32, 275, 319, 477, 753, 1650, 3395, 1650, 275, 319, 477, 601, 3395, 786, 275, 569, 284, 562, 2064, 622, 3012, 26, 3220, 629, 1650, 27, 301, 291, 442, 3377, 77, 1055, 970, 284, 320, 446, 1022, 275, 319, 1390, 322, 3395, 2078, 32]}
{"line_number": 278, "line_type": "original", "code": "        double[][] jTj = new double[cols][cols];", "entropy": 2.93359375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [2.560546875, 3.26953125, 7.4375, 3.1953125, 6.3828125, 0.03857421875, 8.6484375, 1.0009765625, 0.037078857421875, 0.00608062744140625, 0.68994140625, 0.007175445556640625, 0.0064239501953125, 7.78125], "tokens": [351, 2064, 11336, 594, 70, 92, 280, 537, 2064, 77, 8221, 1674, 8221, 970]}
{"line_number": 278, "line_type": "generated", "code": "\n                                            final double[] startPoint)\n                                            throws FunctionEvaluationException,\n                                                   OptimizationException {\n        // set up the function\n        this.function = f;\n\n        // set up the start point\n        this.point = new double[startPoint.length];\n        System", "entropy": 0.45361328125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [1.6435546875, 0.096435546875, 1.0634765625, 0.025787353515625, 0.4365234375, 0.10247802734375, 0.077392578125, 1.97265625, 0.0018930435180664062, 0.841796875, 0.0024814605712890625, 0.00016546249389648438, 0.1671142578125, 0.4453125, 0.383544921875, 8.928775787353516e-05, 0.2164306640625, 0.86962890625, 1.357421875, 1.1865234375, 0.1376953125, 0.5048828125, 1.255859375, 0.63037109375, 1.0400390625, 0.0003485679626464844, 1.318359375, 0.164794921875, 0.025299072265625, 0.011566162109375, 0.468994140625, 0.04534912109375, 0.7353515625, 0.0635986328125, 0.220703125, 1.4248046875, 0.0201416015625, 0.2071533203125, 1.392578125, 0.0005064010620117188, 1.2333984375, 0.037322998046875, 1.244140625, 0.2255859375, 0.0037250518798828125, 0.1512451171875, 1.1801719665527344e-05, 0.00013184547424316406, 0.00033283233642578125, 0.00405120849609375, 0.02325439453125, 0.1185302734375], "tokens": [3391, 1158, 2064, 1178, 1477, 1943, 27, 3391, 2571, 4540, 19637, 984, 30, 17739, 41916, 984, 301, 291, 434, 739, 973, 322, 667, 291, 458, 32, 1126, 280, 296, 45, 584, 434, 739, 973, 322, 1477, 2260, 291, 458, 32, 1493, 280, 537, 2064, 77, 1366, 1943, 32, 1322, 970, 291, 1171]}
{"line_number": 279, "line_type": "original", "code": "        for (int i = 0; i < cols; ++i) {", "entropy": 1.080078125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [5.390625, 8.5859375, 0.01117706298828125, 0.057159423828125, 0.146728515625, 0.002407073974609375, 0.07122802734375, 0.00421905517578125, 0.0095367431640625, 0.000988006591796875, 0.01236724853515625, 3.87109375, 0.0169677734375, 0.03387451171875, 0.0005297660827636719, 0.006122589111328125, 0.1378173828125], "tokens": [351, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 14342, 45, 3311, 91, 27, 301]}
{"line_number": 279, "line_type": "generated", "code": "\n                                            final double[] startPoint)", "entropy": 0.303466796875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.166259765625, 0.0738525390625, 0.492919921875, 0.0318603515625, 0.81396484375, 0.2080078125, 0.338134765625], "tokens": [3391, 1158, 2064, 1178, 1477, 1943, 27]}
{"line_number": 280, "line_type": "original", "code": "            for (int j = i; j < cols; ++j) {", "entropy": 1.490234375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [4.4453125, 7.47265625, 0.041900634765625, 0.07098388671875, 3.205078125, 0.004863739013671875, 6.0859375, 0.60986328125, 0.0168914794921875, 0.376953125, 1.2802734375, 0.03155517578125, 0.05157470703125, 0.002105712890625, 0.01103973388671875, 0.1390380859375], "tokens": [1468, 436, 308, 410, 594, 280, 595, 45, 594, 333, 14342, 45, 3311, 92, 27, 301]}
{"line_number": 280, "line_type": "generated", "code": "\n        throws FunctionEvaluationException, OptimizationException {\n\n        // set up the function\n        setFunction(f, target, weights);\n\n        // set up the initial point\n        setStartPoint(startPoint);\n\n        // optimize\n        return optimize();\n    }", "entropy": 0.41015625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.51025390625, 1.1962890625, 0.5498046875, 0.0013256072998046875, 0.0001533031463623047, 0.1380615234375, 0.40673828125, 9.012222290039062e-05, 0.1285400390625, 0.63623046875, 0.47265625, 0.97509765625, 0.20263671875, 0.44873046875, 1.318359375, 0.6025390625, 1.8095703125, 0.5078125, 0.004207611083984375, 0.0236053466796875, 1.2060546875, 0.3974609375, 0.08746337890625, 0.0072021484375, 0.042327880859375, 0.158203125, 0.049560546875, 0.66455078125, 0.08624267578125, 0.155029296875, 1.1025390625, 1.2392578125, 0.138916015625, 0.5859375, 0.0310211181640625, 0.01381683349609375, 0.0017147064208984375, 0.0172119140625, 9.5367431640625e-07, 0.006870269775390625, 0.1845703125, 0.03692626953125, 1.3310546875, 0.241943359375, 0.9765625, 0.57177734375, 0.056396484375, 0.759765625, 0.0085296630859375], "tokens": [291, 2571, 4540, 19637, 984, 30, 41916, 984, 301, 584, 434, 739, 973, 322, 667, 291, 739, 2447, 26, 88, 30, 1760, 30, 11229, 293, 584, 434, 739, 973, 322, 2815, 2260, 291, 739, 2130, 1943, 26, 1366, 1943, 293, 584, 434, 22269, 291, 442, 22269, 473, 284, 320]}
{"line_number": 281, "line_type": "original", "code": "                double sum = 0;", "entropy": 2.482421875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [8.515625, 3.6953125, 4.6796875, 0.319580078125, 0.034881591796875, 0.002063751220703125, 0.133056640625], "tokens": [2071, 2064, 3632, 280, 225, 34, 45]}
{"line_number": 281, "line_type": "generated", "code": "\n        final int n = target.length;\n        if (n == 0) {\n            throw new IllegalArgumentException(LocalizedFormats.EMPTY_TARGET_NO_OPTIMIZATION);\n        }\n        if (n!= weights.length) {\n            throw new IllegalArgumentException", "entropy": 0.3623046875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.341552734375, 2.771484375, 1.19140625, 1.2392578125, 0.324951171875, 0.4814453125, 0.002307891845703125, 0.0011758804321289062, 0.0042877197265625, 0.1375732421875, 0.72998046875, 0.1612548828125, 0.7626953125, 1.5263671875, 0.00528717041015625, 0.003940582275390625, 0.06463623046875, 0.007213592529296875, 0.031982421875, 0.6572265625, 0.11492919921875, 0.9443359375, 0.4794921875, 0.228759765625, 0.0026493072509765625, 0.0002701282501220703, 0.38037109375, 0.00023317337036132812, 0.3134765625, 0.387451171875, 1.416015625, 0.048431396484375, 0.4501953125, 0.01509857177734375, 0.00018155574798583984, 0.0712890625, 0.0155181884765625, 0.0011720657348632812, 0.358154296875, 0.58154296875, 0.06268310546875, 1.6416015625, 0.1678466796875, 0.34326171875, 9.66787338256836e-05, 0.00023066997528076172, 0.040740966796875, 0.0014705657958984375, 0.00981903076171875, 0.01354217529296875, 0.0439453125, 0.2705078125], "tokens": [291, 1158, 629, 310, 280, 1760, 32, 1322, 45, 291, 415, 308, 96, 610, 225, 34, 27, 301, 324, 1422, 537, 12137, 26, 24225, 19298, 32, 13073, 81, 9682, 81, 2576, 81, 42453, 76, 2893, 293, 291, 320, 291, 415, 308, 96, 863, 11229, 32, 1322, 27, 301, 324, 1422, 537, 12137]}
{"line_number": 282, "line_type": "original", "code": "                for (int k = 0; k < rows; ++k) {", "entropy": 0.8115234375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [7.50390625, 2.921875, 0.0149078369140625, 0.07330322265625, 2.3125, 0.0036029815673828125, 0.032073974609375, 0.0028400421142578125, 0.0204010009765625, 0.0013399124145507812, 0.00811767578125, 0.619140625, 0.00775146484375, 0.034271240234375, 0.000652313232421875, 0.004131317138671875, 0.2366943359375], "tokens": [2071, 436, 308, 410, 831, 280, 225, 34, 45, 831, 333, 5760, 45, 3311, 93, 27, 301]}
{"line_number": 282, "line_type": "generated", "code": "\n        // set up the function\n        this.function = f;\n        this.rows = f.getDimension();\n\n        // set up the weights\n        this.residualsWeights = new double[rows];\n        for (int i = 0; i <", "entropy": 0.4091796875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.62890625, 0.9228515625, 1.33203125, 0.189453125, 0.426513671875, 1.345703125, 0.77294921875, 1.0078125, 0.0004954338073730469, 1.048828125, 0.29443359375, 0.03399658203125, 0.0142822265625, 0.73095703125, 0.56982421875, 0.0002455711364746094, 1.5966796875, 0.344970703125, 1.6552734375, 0.0007448196411132812, 0.3525390625, 0.57568359375, 0.01125335693359375, 1.669921875, 0.17919921875, 0.50830078125, 0.06451416015625, 0.14404296875, 0.9130859375, 0.3896484375, 0.8525390625, 0.00025010108947753906, 0.288330078125, 0.00048232078552246094, 0.052886962890625, 0.01200103759765625, 1.0185546875, 0.01174163818359375, 0.0015926361083984375, 0.2054443359375, 0.0010995864868164062, 0.0396728515625, 1.0126953125, 0.003887176513671875, 0.0016012191772460938, 0.028900146484375, 0.0011081695556640625, 0.003662109375, 0.00023746490478515625, 0.003204345703125, 0.009979248046875, 0.0008015632629394531], "tokens": [291, 434, 739, 973, 322, 667, 291, 458, 32, 1126, 280, 296, 45, 291, 458, 32, 2138, 280, 296, 32, 371, 9883, 473, 584, 434, 739, 973, 322, 11229, 291, 458, 32, 32082, 101, 21640, 280, 537, 2064, 77, 2138, 970, 291, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333]}
{"line_number": 283, "line_type": "original", "code": "                    sum += jacobian[k][i] * jacobian[k][j];", "entropy": 1.826171875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [8.6875, 10.5234375, 2.3671875, 5.69921875, 0.10308837890625, 0.171142578125, 2.14453125, 0.0452880859375, 1.1572265625, 0.0955810546875, 0.01422882080078125, 0.78759765625, 0.001125335693359375, 0.0069122314453125, 0.0146636962890625, 0.0009899139404296875, 0.062347412109375, 0.99755859375], "tokens": [4696, 3632, 1454, 594, 30495, 77, 93, 1674, 91, 79, 319, 594, 30495, 77, 93, 1674, 92, 970]}
{"line_number": 283, "line_type": "generated", "code": "\n        }\n\n        // set up the function\n        this.function = f;\n        this.target = target;\n        this.weights = weights;\n\n        // set up the initial guess\n        if (startPoint == null) {\n            startPoint = new double[", "entropy": 0.3466796875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.37841796875, 0.00960540771484375, 0.525390625, 0.81494140625, 1.2470703125, 0.1529541015625, 0.39208984375, 1.541015625, 0.62646484375, 0.857421875, 0.0004115104675292969, 1.2890625, 0.357177734375, 0.02349853515625, 0.00799560546875, 0.496826171875, 0.331298828125, 0.00020039081573486328, 0.62353515625, 0.406494140625, 0.044189453125, 0.1116943359375, 0.013702392578125, 0.016845703125, 9.1552734375e-05, 0.3173828125, 0.0014677047729492188, 0.0260467529296875, 0.02239990234375, 0.6142578125, 0.11346435546875, 0.9072265625, 0.06658935546875, 0.2264404296875, 1.4638671875, 0.693359375, 0.24755859375, 1.173828125, 0.038421630859375, 0.041412353515625, 4.9233436584472656e-05, 0.45703125, 0.0005736351013183594, 0.055419921875, 0.0023441314697265625, 0.137939453125, 0.67529296875, 0.01094818115234375, 0.0016460418701171875, 0.457275390625, 0.0089111328125, 0.004673004150390625], "tokens": [291, 320, 584, 434, 739, 973, 322, 667, 291, 458, 32, 1126, 280, 296, 45, 291, 458, 32, 1977, 280, 1760, 45, 291, 458, 32, 9582, 280, 11229, 45, 584, 434, 739, 973, 322, 2815, 11089, 291, 415, 308, 1366, 1943, 610, 744, 27, 301, 324, 1477, 1943, 280, 537, 2064, 77]}
{"line_number": 285, "line_type": "original", "code": "                jTj[i][j] = sum;", "entropy": 2.064453125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [7.12109375, 7.51171875, 6.69140625, 0.00975799560546875, 0.7802734375, 1.583984375, 0.0203094482421875, 0.39306640625, 0.0114898681640625, 0.1512451171875, 0.468505859375, 0.0299530029296875], "tokens": [2071, 594, 70, 92, 77, 91, 1674, 92, 79, 280, 3632, 45]}
{"line_number": 285, "line_type": "generated", "code": "\n        }\n        if (target.length < rows) {\n            throw new OptimizationException(LocalizedFormats.NOT_ENOUGH_DATA_SIMPLE,\n                                            target.length, rows);\n        }\n        if (startPoint.length!= cols) {\n           ", "entropy": 0.2318115234375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.268310546875, 0.2308349609375, 1.0546875, 0.8251953125, 0.052581787109375, 0.783203125, 0.00916290283203125, 0.00026106834411621094, 1.0068359375, 0.90380859375, 0.0518798828125, 0.0020236968994140625, 0.035186767578125, 0.051300048828125, 0.0012826919555664062, 0.0732421875, 1.1444091796875e-05, 0.00225830078125, 0.28173828125, 8.153915405273438e-05, 0.00013506412506103516, 0.82080078125, 7.43865966796875e-05, 0.0005974769592285156, 3.5762786865234375e-06, 0.0008106231689453125, 6.449222564697266e-05, 0.8955078125, 1.0537109375, 0.16015625, 0.0084228515625, 0.2357177734375, 0.3955078125, 0.0011997222900390625, 0.0001442432403564453, 0.032196044921875, 0.01580810546875, 0.01422119140625, 0.399658203125, 0.0005393028259277344, 0.8583984375, 0.52197265625, 0.06829833984375, 0.45556640625, 6.4373016357421875e-06, 0.2061767578125, 3.2901763916015625e-05, 0.06097412109375, 0.183837890625, 0.0045166015625, 0.0007491111755371094, 0.02294921875], "tokens": [291, 320, 291, 415, 308, 1977, 32, 1322, 333, 5760, 27, 301, 324, 1422, 537, 41916, 984, 26, 24225, 19298, 32, 3908, 81, 718, 18085, 11809, 81, 4601, 81, 28500, 30, 3391, 1760, 32, 1322, 30, 5760, 293, 291, 320, 291, 415, 308, 1366, 1943, 32, 1322, 863, 14342, 27, 301, 324]}
{"line_number": 286, "line_type": "original", "code": "                jTj[j][i] = sum;", "entropy": 2.654296875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [7.84765625, 4.90625, 10.8984375, 0.0269622802734375, 2.578125, 3.142578125, 0.0233154296875, 1.4208984375, 0.005523681640625, 0.06195068359375, 0.9052734375, 0.034149169921875], "tokens": [2071, 594, 70, 92, 77, 92, 1674, 91, 79, 280, 3632, 45]}
{"line_number": 286, "line_type": "generated", "code": "\n        // set up the problem\n        this.f = f;\n        this.rows = target.length;\n        this.cols = startPoint.length;\n        this.target = target;\n        this.weights = weights;\n        this.startPoint =", "entropy": 0.2880859375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.6923828125, 0.98779296875, 1.2412109375, 0.1595458984375, 0.4404296875, 1.947265625, 0.3193359375, 1.796875, 0.00042438507080078125, 0.9052734375, 0.73388671875, 0.01326751708984375, 0.00769805908203125, 0.0660400390625, 0.190673828125, 0.00036215782165527344, 1.2119140625, 0.0416259765625, 0.265625, 0.0003509521484375, 0.00018644332885742188, 0.0009489059448242188, 0.05926513671875, 0.049591064453125, 0.0002512931823730469, 0.32958984375, 0.0007047653198242188, 0.09503173828125, 1.2636184692382812e-05, 0.0007605552673339844, 6.878376007080078e-05, 0.0005488395690917969, 0.228515625, 0.1470947265625, 0.0005588531494140625, 1.0224609375, 0.11090087890625, 0.06341552734375, 0.22998046875, 0.0116424560546875, 0.0247344970703125, 0.0001621246337890625, 0.318603515625, 0.0019073486328125, 0.02301025390625, 0.0187225341796875, 0.1778564453125, 0.2900390625, 0.0004878044128417969, 0.73876953125, 0.0024738311767578125, 0.00363922119140625], "tokens": [291, 434, 739, 973, 322, 3708, 291, 458, 32, 88, 280, 296, 45, 291, 458, 32, 2138, 280, 1760, 32, 1322, 45, 291, 458, 32, 8221, 280, 1477, 1943, 32, 1322, 45, 291, 458, 32, 1977, 280, 1760, 45, 291, 458, 32, 9582, 280, 11229, 45, 291, 458, 32, 1366, 1943, 280]}
