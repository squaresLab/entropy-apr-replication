{"line_number": 200, "line_type": "original", "code": "        return regularizedGammaQ(a, x, DEFAULT_EPSILON, Integer.MAX_VALUE);", "entropy": 1.72265625, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [4.4140625, 11.0703125, 8.6875, 0.0174407958984375, 0.0027675628662109375, 1.5146484375, 0.6865234375, 0.2445068359375, 0.00307464599609375, 0.034027099609375, 0.2440185546875, 8.234375, 0.00012040138244628906, 0.0203399658203125, 0.001087188720703125, 0.01523590087890625, 2.693359375, 0.0007381439208984375, 6.759166717529297e-05, 5.805492401123047e-05, 2.014636993408203e-05, 0.0224609375], "tokens": [351, 442, 10605, 1191, 22386, 67, 26, 83, 30, 816, 30, 4040, 81, 18386, 42027, 30, 4401, 32, 3459, 81, 5975, 293]}
{"line_number": 200, "line_type": "generated", "code": "\n            };\n\n            ret = 1.0 / cf.evaluate(x, epsilon, maxIterations);\n        }\n\n        return ret;\n    }", "entropy": 0.06390380859375, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.395263671875, 0.004604339599609375, 0.367431640625, 0.6787109375, 0.0005016326904296875, 0.1361083984375, 7.283687591552734e-05, 0.003292083740234375, 1.4662742614746094e-05, 0.01493072509765625, 0.018646240234375, 4.0531158447265625e-06, 0.01531219482421875, 0.0032901763916015625, 0.00104522705078125, 0.00701904296875, 0.0015153884887695312, 0.0213470458984375, 0.002132415771484375, 4.291534423828125e-06, 0.006378173828125, 0.090087890625, 0.00010609626770019531, 0.059234619140625, 0.0010738372802734375, 0.00021028518676757812, 4.267692565917969e-05, 0.0231475830078125, 0.0011539459228515625], "tokens": [324, 1472, 1064, 2152, 280, 225, 35, 32, 34, 517, 16198, 32, 13697, 26, 106, 30, 23477, 30, 1769, 31219, 293, 291, 320, 584, 442, 2152, 45, 284, 320]}
{"line_number": 237, "line_type": "original", "code": "        } else if (x < a || a < 1.0) {", "entropy": 1.7568359375, "is_bug_line": false, "sus_score": 0.19611613513818404, "per_token_entropy": [4.8671875, 4.1328125, 2.42578125, 0.892578125, 0.031341552734375, 0.53076171875, 1.642578125, 0.166259765625, 8.3203125, 4.4765625, 0.50830078125, 1.427734375, 0.1295166015625, 0.052276611328125, 0.0014820098876953125, 0.2349853515625, 0.0162200927734375], "tokens": [351, 320, 813, 415, 308, 106, 333, 312, 1276, 312, 333, 225, 35, 32, 34, 27, 301]}
{"line_number": 237, "line_type": "generated", "code": "\n    /**\n     * Returns the natural logarithm of the gamma function &Gamma;(x).\n     *\n     * @param x the value.\n     * @return the natural logarithm of &Gamma;(x) to within machine precision\n     * @throws", "entropy": 0.222412109375, "is_bug_line": false, "sus_score": 0.19611613513818404, "per_token_entropy": [1.400390625, 0.1851806640625, 0.043365478515625, 3.063678741455078e-05, 0.356201171875, 0.039398193359375, 0.6953125, 0.00855255126953125, 0.0098419189453125, 0.0001169443130493164, 0.0022068023681640625, 0.03814697265625, 0.1973876953125, 0.048980712890625, 1.0849609375, 1.2763671875, 0.0034999847412109375, 0.03497314453125, 0.05596923828125, 0.0191650390625, 0.0024776458740234375, 1.4150390625, 0.0001436471939086914, 0.45654296875, 0.00490570068359375, 0.01494598388671875, 0.359619140625, 0.07659912109375, 0.021942138671875, 0.00276947021484375, 0.00025343894958496094, 0.0010738372802734375, 0.0184783935546875, 0.57470703125, 0.402587890625, 0.0002639293670654297, 0.0116424560546875, 9.66787338256836e-05, 0.0181121826171875, 0.0216217041015625, 0.00908660888671875, 0.00030517578125, 0.0002942085266113281, 0.54345703125, 0.41552734375, 0.386962890625, 0.14892578125, 0.316650390625, 0.281982421875, 0.462646484375, 0.03472900390625, 0.05426025390625], "tokens": [284, 1022, 275, 319, 3759, 322, 19844, 1245, 31176, 95, 432, 322, 13040, 667, 549, 22386, 31059, 106, 547, 275, 319, 275, 319, 477, 753, 816, 322, 786, 32, 275, 319, 477, 601, 322, 19844, 1245, 31176, 95, 432, 549, 22386, 31059, 106, 27, 372, 4797, 6652, 12485, 275, 319, 477, 5117]}
{"line_number": 243, "line_type": "original", "code": "            ContinuedFraction cf = new ContinuedFraction() {", "entropy": 1.3408203125, "is_bug_line": false, "sus_score": 0.19611613513818404, "per_token_entropy": [6.58984375, 8.953125, 0.0004379749298095703, 0.0043182373046875, 0.040679931640625, 0.08892822265625, 0.106689453125, 0.01531219482421875, 1.0013580322265625e-05, 0.00018608570098876953, 0.1260986328125, 0.1737060546875], "tokens": [1468, 29765, 318, 20709, 16198, 280, 537, 29765, 318, 20709, 346, 301]}
{"line_number": 243, "line_type": "generated", "code": "\n    \n    /**\n     * Returns the natural logarithm of the gamma function &#915;(a).\n     * \n     * @param a the a parameter.\n     * @return the natural logarithm of the gamma function &#915;(a)", "entropy": 0.21923828125, "is_bug_line": false, "sus_score": 0.19611613513818404, "per_token_entropy": [2.224609375, 0.364501953125, 0.0303955078125, 4.1484832763671875e-05, 0.476806640625, 0.040283203125, 0.73681640625, 0.01129913330078125, 0.01030731201171875, 0.000141143798828125, 0.0024318695068359375, 0.040771484375, 0.2138671875, 0.055084228515625, 1.3896484375, 0.007068634033203125, 0.01568603515625, 0.0019521713256835938, 0.01114654541015625, 1.21484375, 0.06317138671875, 0.0401611328125, 0.002056121826171875, 0.7724609375, 1.5974044799804688e-05, 0.88037109375, 0.00469970703125, 0.00858306884765625, 0.143310546875, 0.0408935546875, 0.03753662109375, 0.0070953369140625, 0.0017919540405273438, 0.00018072128295898438, 0.0009160041809082031, 0.0159912109375, 0.4013671875, 0.3984375, 0.0004622936248779297, 0.01181793212890625, 0.00017535686492919922, 0.00949859619140625, 0.78173828125, 0.00319671630859375, 0.00666046142578125, 0.2340087890625, 6.973743438720703e-05, 0.00027680397033691406, 9.524822235107422e-05, 0.0006418228149414062, 0.0031032562255859375, 0.67919921875], "tokens": [2170, 1022, 275, 319, 3759, 322, 19844, 1245, 31176, 95, 432, 322, 13040, 667, 9912, 43, 35, 39, 31059, 83, 547, 275, 319, 5384, 319, 477, 753, 312, 322, 312, 3395, 32, 275, 319, 477, 601, 322, 19844, 1245, 31176, 95, 432, 322, 13040, 667, 9912, 43, 35, 39, 31059, 83, 27]}
{"line_number": 256, "line_type": "original", "code": "            ret = 1.0 / cf.evaluate(x, epsilon, maxIterations);", "entropy": 0.779296875, "is_bug_line": false, "sus_score": 0.19611613513818404, "per_token_entropy": [7.7578125, 2.3046875, 0.01336669921875, 2.1015625, 0.0235443115234375, 0.047271728515625, 0.0006198883056640625, 0.423583984375, 1.9951171875, 0.00022745132446289062, 0.0098876953125, 0.0083770751953125, 0.0026874542236328125, 0.06121826171875, 0.00473785400390625, 0.01209259033203125, 0.0193939208984375, 0.00018870830535888672, 0.0179595947265625], "tokens": [1468, 2152, 280, 225, 35, 32, 34, 517, 16198, 32, 13697, 26, 106, 30, 23477, 30, 1769, 31219, 293]}
{"line_number": 256, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.19611613513818404, "per_token_entropy": [], "tokens": []}
{"line_number": 257, "line_type": "original", "code": "            ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;", "entropy": 0.66162109375, "is_bug_line": false, "sus_score": 0.19611613513818404, "per_token_entropy": [8.390625, 3.826171875, 0.012054443359375, 0.6259765625, 0.004016876220703125, 0.006214141845703125, 0.095703125, 0.004657745361328125, 0.003276824951171875, 0.00618743896484375, 0.00024068355560302734, 0.001804351806640625, 0.004344940185546875, 0.0001329183578491211, 7.104873657226562e-05, 0.00017786026000976562, 5.7816505432128906e-05, 0.0034008026123046875, 0.0098724365234375, 0.0246124267578125, 8.118152618408203e-05, 0.000457763671875, 0.00026726722717285156, 0.007617950439453125, 0.018310546875, 4.7734375, 0.03326416015625], "tokens": [1468, 2152, 280, 4175, 32, 2832, 3736, 106, 474, 308, 83, 319, 4175, 32, 751, 26, 106, 490, 429, 1245, 22386, 26, 83, 490, 319, 2152, 45]}
{"line_number": 257, "line_type": "generated", "code": "\n\n    /**\n     * Returns the natural logarithm of the gamma function &Gamma;(x).\n     * \n     * @param x the value.\n     * @return the natural logarithm of &Gamma;(x)\n     * @throws MathException if the", "entropy": 0.218505859375, "is_bug_line": false, "sus_score": 0.19611613513818404, "per_token_entropy": [2.080078125, 0.107666015625, 0.01898193359375, 2.205371856689453e-05, 0.317138671875, 0.0380859375, 0.74072265625, 0.00699615478515625, 0.01062774658203125, 0.00011205673217773438, 0.0020046234130859375, 0.036651611328125, 0.33203125, 0.044189453125, 0.9580078125, 1.365234375, 0.004459381103515625, 0.0191650390625, 0.048797607421875, 0.01959228515625, 0.0027790069580078125, 1.046875, 9.298324584960938e-06, 0.62939453125, 0.005329132080078125, 0.00605010986328125, 0.268310546875, 0.05340576171875, 0.0191497802734375, 0.001979827880859375, 0.00014901161193847656, 0.00072479248046875, 0.012542724609375, 0.49853515625, 0.376220703125, 0.00024580955505371094, 0.0117645263671875, 0.00016558170318603516, 0.015594482421875, 0.036529541015625, 0.0099334716796875, 0.0006136894226074219, 0.0004093647003173828, 0.583984375, 0.89794921875, 0.376953125, 0.0079498291015625, 0.0248565673828125, 0.2344970703125, 4.2319297790527344e-05, 0.031951904296875, 0.052398681640625], "tokens": [446, 1022, 275, 319, 3759, 322, 19844, 1245, 31176, 95, 432, 322, 13040, 667, 549, 22386, 31059, 106, 547, 275, 319, 5384, 319, 477, 753, 816, 322, 786, 32, 275, 319, 477, 601, 322, 19844, 1245, 31176, 95, 432, 549, 22386, 31059, 106, 27, 275, 319, 477, 5117, 4175, 984, 415, 322]}
{"line_number": 235, "line_type": "original", "code": "        } else if (x == 0.0) {", "entropy": 1.22265625, "is_bug_line": false, "sus_score": 0.19245008972987526, "per_token_entropy": [4.7890625, 4.5234375, 1.826171875, 0.78662109375, 0.038299560546875, 0.44921875, 2.306640625, 0.5263671875, 0.1602783203125, 0.2366943359375, 0.034423828125, 0.198486328125, 0.02301025390625], "tokens": [351, 320, 813, 415, 308, 106, 610, 225, 34, 32, 34, 27, 301]}
{"line_number": 235, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.19245008972987526, "per_token_entropy": [], "tokens": []}
{"line_number": 120, "line_type": "original", "code": "        return regularizedGammaP(a, x, DEFAULT_EPSILON, Integer.MAX_VALUE);", "entropy": 1.6630859375, "is_bug_line": false, "sus_score": 0.1889822365046136, "per_token_entropy": [3.90625, 7.27734375, 9.515625, 0.01175689697265625, 0.003940582275390625, 0.205078125, 0.5029296875, 0.03900146484375, 0.0196533203125, 0.0284271240234375, 0.49267578125, 12.0234375, 0.00012373924255371094, 0.007488250732421875, 0.006206512451171875, 0.029998779296875, 2.48046875, 0.0008425712585449219, 3.0517578125e-05, 0.0001850128173828125, 1.9550323486328125e-05, 0.05401611328125], "tokens": [351, 442, 10605, 1191, 22386, 66, 26, 83, 30, 816, 30, 4040, 81, 18386, 42027, 30, 4401, 32, 3459, 81, 5975, 293]}
{"line_number": 120, "line_type": "generated", "code": "\n            // compute the sum of the series\n            double sum = an;\n            double term = an;\n            while (Math.abs(term) > epsilon && n < maxIterations) {\n                ++n;\n                // TODO: use factorial(n)", "entropy": 0.375, "is_bug_line": false, "sus_score": 0.1889822365046136, "per_token_entropy": [0.9521484375, 1.2939453125, 0.384765625, 1.26953125, 0.33984375, 0.1966552734375, 0.0242462158203125, 0.013397216796875, 0.11090087890625, 0.1273193359375, 0.1304931640625, 0.0193634033203125, 0.005420684814453125, 0.0018329620361328125, 0.26220703125, 1.3388671875, 1.373046875, 0.00403594970703125, 0.00014472007751464844, 0.0002617835998535156, 0.27197265625, 0.18212890625, 0.145751953125, 0.2939453125, 0.00015723705291748047, 0.00013971328735351562, 0.00016248226165771484, 0.00011038780212402344, 0.0002758502960205078, 9.918212890625e-05, 0.0009593963623046875, 0.06781005859375, 0.46923828125, 0.0012311935424804688, 0.0028553009033203125, 5.125999450683594e-06, 0.11810302734375, 0.03411865234375, 0.0557861328125, 1.5615234375, 0.00021767616271972656, 1.9669532775878906e-05, 0.046630859375, 0.76171875, 2.66015625, 0.79345703125, 1.6708984375, 1.7021484375, 0.0002942085266113281, 0.634765625, 0.038909912109375, 0.136962890625], "tokens": [324, 434, 7596, 322, 3632, 432, 322, 9484, 324, 2064, 3632, 280, 600, 45, 324, 2064, 5615, 280, 600, 45, 324, 2218, 308, 5717, 32, 3596, 26, 3890, 27, 848, 23477, 962, 310, 333, 1769, 31219, 27, 301, 400, 3311, 96, 45, 400, 434, 4296, 44, 793, 10365, 564, 26, 96, 27]}
{"line_number": 168, "line_type": "original", "code": "            double n = 0.0; // current element index", "entropy": 1.216796875, "is_bug_line": false, "sus_score": 0.17677669529663687, "per_token_entropy": [5.72265625, 1.58984375, 6.171875, 0.0300750732421875, 0.04705810546875, 0.007541656494140625, 0.79150390625, 0.0009145736694335938, 0.0191497802734375, 0.223876953125, 0.95263671875, 0.1666259765625, 0.08660888671875], "tokens": [1468, 2064, 310, 280, 225, 34, 32, 34, 45, 434, 1550, 1994, 1650]}
{"line_number": 168, "line_type": "generated", "code": "\n     * @param epsilon When the absolute value of the nth item in the\n     *                series is less than epsilon the approximation ceases\n     *                to calculate further elements in the series.\n     * @param maxIterations Maximum number of \"iterations\" to complete", "entropy": 0.017059326171875, "is_bug_line": false, "sus_score": 0.17677669529663687, "per_token_entropy": [0.338134765625, 0.01287078857421875, 0.02691650390625, 0.056121826171875, 0.00734710693359375, 0.0252838134765625, 0.0009431838989257812, 0.010345458984375, 0.0012655258178710938, 0.0001062154769897461, 0.0007967948913574219, 0.0042266845703125, 0.07037353515625, 0.0008339881896972656, 0.0009093284606933594, 0.036651611328125, 1.6570091247558594e-05, 0.037200927734375, 0.053009033203125, 0.001949310302734375, 0.002101898193359375, 0.000324249267578125, 0.00048065185546875, 0.0017957687377929688, 0.0005726814270019531, 0.0005908012390136719, 2.7418136596679688e-06, 0.00496673583984375, 3.62396240234375e-05, 0.0013856887817382812, 5.054473876953125e-05, 3.314018249511719e-05, 3.409385681152344e-05, 0.0001112222671508789, 5.543231964111328e-05, 4.1604042053222656e-05, 0.00012946128845214844, 0.000946044921875, 0.1646728515625, 5.1856040954589844e-05, 0.0019369125366210938, 0.00989532470703125, 0.00319671630859375, 0.0006475448608398438, 0.00421905517578125, 9.799003601074219e-05, 6.4849853515625e-05, 0.0019817352294921875, 0.00020623207092285156, 0.00010716915130615234, 0.0001010894775390625, 0.0004086494445800781], "tokens": [275, 319, 477, 753, 23477, 5076, 322, 7976, 786, 432, 322, 46245, 1623, 328, 322, 275, 319, 2071, 9484, 438, 6679, 2784, 23477, 322, 39431, 10635, 5633, 275, 319, 2071, 372, 9169, 9686, 4702, 328, 322, 9484, 32, 275, 319, 477, 753, 1769, 31219, 18690, 1451, 432, 313, 22400, 20, 372, 6153]}
{"line_number": 169, "line_type": "original", "code": "            double an = 1.0 / a; // n-th element in the series", "entropy": 1.896484375, "is_bug_line": false, "sus_score": 0.17677669529663687, "per_token_entropy": [2.736328125, 12.0859375, 11.3046875, 0.14599609375, 0.79296875, 0.0208282470703125, 0.0260772705078125, 0.0008487701416015625, 0.53857421875, 0.1451416015625, 0.056976318359375, 0.71533203125, 4.96484375, 0.10650634765625, 0.0009059906005859375, 0.12432861328125, 0.65625, 0.0718994140625, 1.52734375], "tokens": [1468, 2064, 600, 280, 225, 35, 32, 34, 517, 312, 45, 434, 310, 31, 349, 1994, 328, 322, 9484]}
{"line_number": 169, "line_type": "generated", "code": "                series is less than epsilon the approximation ceases\n                to calculate further elements in the series.\n     * @param maxIterations Maximum number of \"iterations\" to complete. \n     * @return the regularized gamma function Q(a, x)\n     * @", "entropy": 0.0765380859375, "is_bug_line": false, "sus_score": 0.17677669529663687, "per_token_entropy": [1.8095703125, 0.10455322265625, 0.002735137939453125, 0.0020046234130859375, 0.00048232078552246094, 0.0006747245788574219, 0.0055999755859375, 0.05352783203125, 0.007354736328125, 5.4717063903808594e-05, 0.8369140625, 0.27392578125, 0.00016236305236816406, 0.0004665851593017578, 0.00034236907958984375, 0.00043511390686035156, 9.59634780883789e-05, 0.0013427734375, 0.003627777099609375, 0.230224609375, 0.000469207763671875, 0.013641357421875, 0.014190673828125, 0.003803253173828125, 0.0006933212280273438, 0.0069580078125, 0.00017845630645751953, 0.00016808509826660156, 0.0048065185546875, 0.00026869773864746094, 0.00030040740966796875, 0.0001913309097290039, 0.0006413459777832031, 0.00516510009765625, 0.33642578125, 0.0002046823501586914, 0.008514404296875, 0.00365447998046875, 0.0033702850341796875, 0.0022792816162109375, 0.0001081228256225586, 0.00030875205993652344, 0.0005040168762207031, 0.1640625, 0.0007925033569335938, 6.008148193359375e-05, 0.0007581710815429688, 0.0007147789001464844, 0.0203704833984375, 0.048126220703125, 0.0015172958374023438, 0.0006074905395507812], "tokens": [2071, 9484, 438, 6679, 2784, 23477, 322, 39431, 10635, 5633, 400, 372, 9169, 9686, 4702, 328, 322, 9484, 32, 275, 319, 477, 753, 1769, 31219, 18690, 1451, 432, 313, 22400, 20, 372, 6153, 32, 5384, 319, 477, 601, 322, 10605, 1191, 13040, 667, 1910, 26, 83, 30, 816, 27, 275, 319, 477]}
{"line_number": 170, "line_type": "original", "code": "            double sum = an; // partial sum", "entropy": 3.6015625, "is_bug_line": false, "sus_score": 0.17677669529663687, "per_token_entropy": [3.978515625, 13.8671875, 6.41015625, 0.08026123046875, 2.888671875, 0.86376953125, 0.833984375, 3.484375, 0.00829315185546875], "tokens": [1468, 2064, 3632, 280, 600, 45, 434, 7360, 3632]}
{"line_number": 170, "line_type": "generated", "code": "\n     *                to calculate further elements in the series.\n     * @param maxIterations Maximum number of \"iterations\" to complete. \n     * @return the regularized gamma function Q(a, x)\n     * @throws MathException if the algorithm fails to", "entropy": 0.031005859375, "is_bug_line": false, "sus_score": 0.17677669529663687, "per_token_entropy": [0.77587890625, 0.0073089599609375, 0.1324462890625, 0.0208282470703125, 9.381771087646484e-05, 0.00023794174194335938, 0.00024068355560302734, 0.0005993843078613281, 4.100799560546875e-05, 0.0004711151123046875, 0.0018768310546875, 0.1385498046875, 0.00011134147644042969, 0.0020732879638671875, 0.0133209228515625, 0.0028514862060546875, 0.0007643699645996094, 0.005115509033203125, 0.00014495849609375, 0.0001728534698486328, 0.00201416015625, 0.00019073486328125, 0.00018024444580078125, 0.0001252889633178711, 0.0004870891571044922, 0.004177093505859375, 0.228271484375, 0.00014531612396240234, 0.005924224853515625, 0.003414154052734375, 0.0026416778564453125, 0.0019741058349609375, 9.47713851928711e-05, 0.00028228759765625, 0.00044727325439453125, 0.1656494140625, 0.0006074905395507812, 6.16312026977539e-05, 0.0007061958312988281, 0.0006966590881347656, 0.0190887451171875, 0.049560546875, 0.0012073516845703125, 0.0009388923645019531, 0.0015516281127929688, 0.01389312744140625, 2.86102294921875e-06, 0.0023403167724609375, 0.0004935264587402344, 0.0021572113037109375, 6.73532485961914e-05, 3.3020973205566406e-05], "tokens": [275, 319, 2071, 372, 9169, 9686, 4702, 328, 322, 9484, 32, 275, 319, 477, 753, 1769, 31219, 18690, 1451, 432, 313, 22400, 20, 372, 6153, 32, 5384, 319, 477, 601, 322, 10605, 1191, 13040, 667, 1910, 26, 83, 30, 816, 27, 275, 319, 477, 5117, 4175, 984, 415, 322, 8218, 8158, 372]}
{"line_number": 171, "line_type": "original", "code": "            while (Math.abs(an) > epsilon && n < maxIterations) {", "entropy": 0.896484375, "is_bug_line": false, "sus_score": 0.17677669529663687, "per_token_entropy": [4.1484375, 7.83203125, 0.2890625, 0.49267578125, 0.0003955364227294922, 0.0010633468627929688, 0.0173797607421875, 0.2059326171875, 2.23828125, 0.00040268898010253906, 0.0139923095703125, 0.1632080078125, 0.2061767578125, 0.0189361572265625, 0.06890869140625, 0.00658416748046875, 0.068115234375, 0.374755859375], "tokens": [1468, 2218, 308, 5717, 32, 3596, 26, 278, 27, 848, 23477, 962, 310, 333, 1769, 31219, 27, 301]}
{"line_number": 171, "line_type": "generated", "code": "\n     * @param maxIterations Maximum number of \"iterations\" to complete. \n     * @return the regularized gamma function Q(a, x)\n     * @throws MathException if the algorithm fails to converge.\n     */\n    public static double regularized", "entropy": 0.0308990478515625, "is_bug_line": false, "sus_score": 0.17677669529663687, "per_token_entropy": [0.52880859375, 0.032958984375, 0.0433349609375, 0.168212890625, 0.00984954833984375, 0.0008664131164550781, 0.00780487060546875, 0.00016748905181884766, 8.940696716308594e-05, 0.0026569366455078125, 0.0001913309097290039, 0.00024628639221191406, 0.00021958351135253906, 0.0006766319274902344, 0.006946563720703125, 0.227294921875, 0.0006422996520996094, 0.0172882080078125, 0.01003265380859375, 0.003368377685546875, 0.0023632049560546875, 0.0001112222671508789, 0.000354766845703125, 0.00047516822814941406, 0.1795654296875, 0.0006132125854492188, 6.747245788574219e-05, 0.0005559921264648438, 0.0006728172302246094, 0.019287109375, 0.0968017578125, 0.002208709716796875, 0.000759124755859375, 0.002071380615234375, 0.01654052734375, 3.2186508178710938e-06, 0.002834320068359375, 0.0008602142333984375, 0.002506256103515625, 7.95125961303711e-05, 2.4080276489257812e-05, 1.33514404296875e-05, 1.71661376953125e-05, 0.004848480224609375, 0.0697021484375, 0.045196533203125, 0.045623779296875, 0.047607421875, 0.00095367431640625, 0.0013799667358398438, 0.0011262893676757812, 8.225440979003906e-06], "tokens": [275, 319, 477, 753, 1769, 31219, 18690, 1451, 432, 313, 22400, 20, 372, 6153, 32, 5384, 319, 477, 601, 322, 10605, 1191, 13040, 667, 1910, 26, 83, 30, 816, 27, 275, 319, 477, 5117, 4175, 984, 415, 322, 8218, 8158, 372, 15941, 300, 32, 275, 569, 284, 562, 907, 2064, 10605, 1191]}
{"line_number": 173, "line_type": "original", "code": "                n = n + 1.0;", "entropy": 2.17578125, "is_bug_line": false, "sus_score": 0.17677669529663687, "per_token_entropy": [7.43359375, 5.68359375, 0.7236328125, 5.109375, 0.1514892578125, 0.020111083984375, 0.0100250244140625, 2.392578125, 0.01180267333984375, 0.22314453125], "tokens": [2071, 310, 280, 310, 474, 225, 35, 32, 34, 45]}
{"line_number": 173, "line_type": "generated", "code": "\n     * @throws MathException if the algorithm fails to converge.\n     */\n    public static double regularizedGammaQ(double a, \n                                           double x, \n                                           double epsilon, \n                                           int maxIterations) \n        throws MathException\n    {\n        double", "entropy": 0.02593994140625, "is_bug_line": false, "sus_score": 0.17677669529663687, "per_token_entropy": [0.26416015625, 0.18603515625, 0.015960693359375, 0.007320404052734375, 0.0284576416015625, 5.0067901611328125e-06, 0.0060577392578125, 0.0009317398071289062, 0.005771636962890625, 0.00014162063598632812, 4.2438507080078125e-05, 2.5987625122070312e-05, 5.0067901611328125e-06, 0.0103607177734375, 0.12115478515625, 0.030853271484375, 0.027496337890625, 0.0225982666015625, 0.000766754150390625, 0.00153350830078125, 0.0009436607360839844, 7.271766662597656e-06, 5.125999450683594e-06, 0.0006995201110839844, 0.0009036064147949219, 0.0036525726318359375, 4.4465065002441406e-05, 8.130073547363281e-05, 0.07647705078125, 0.0670166015625, 0.00014352798461914062, 2.6941299438476562e-05, 2.9087066650390625e-05, 0.02215576171875, 0.00020813941955566406, 0.0005521774291992188, 9.572505950927734e-05, 6.556510925292969e-05, 0.023284912109375, 0.00017750263214111328, 0.00026297569274902344, 0.0005154609680175781, 3.552436828613281e-05, 0.0009098052978515625, 0.250244140625, 0.00012814998626708984, 0.0008597373962402344, 8.344650268554688e-07, 0.0228271484375, 0.0001385211944580078, 0.0640869140625, 0.08270263671875], "tokens": [275, 319, 477, 5117, 4175, 984, 415, 322, 8218, 8158, 372, 15941, 300, 32, 275, 569, 284, 562, 907, 2064, 10605, 1191, 22386, 67, 26, 2627, 312, 30, 225, 12928, 2064, 816, 30, 225, 12928, 2064, 23477, 30, 225, 12928, 629, 1769, 31219, 27, 4456, 2571, 4175, 984, 284, 301, 291, 2064]}
{"line_number": 174, "line_type": "original", "code": "                an = an * (x / (a + n));", "entropy": 1.765625, "is_bug_line": false, "sus_score": 0.17677669529663687, "per_token_entropy": [8.3515625, 8.546875, 0.30615234375, 2.828125, 0.189697265625, 0.196044921875, 2.0, 0.451904296875, 0.0181427001953125, 0.004787445068359375, 0.00833892822265625, 0.0157623291015625, 0.0416259765625], "tokens": [2071, 600, 280, 600, 319, 308, 106, 517, 308, 83, 474, 310, 876]}
{"line_number": 174, "line_type": "generated", "code": "\n     */\n    public static double regularizedGammaQ(double a, \n                                           double x, \n                                           double epsilon, \n                                           int maxIterations) \n        throws MathException\n    {\n        double ret;\n\n        if (Double.isNaN(a) || Double.", "entropy": 0.02587890625, "is_bug_line": false, "sus_score": 0.17677669529663687, "per_token_entropy": [0.337646484375, 0.04180908203125, 0.05126953125, 0.043975830078125, 0.0006966590881347656, 0.0018405914306640625, 0.0010194778442382812, 7.152557373046875e-06, 4.76837158203125e-06, 0.0007662773132324219, 0.0007266998291015625, 0.00301361083984375, 4.4345855712890625e-05, 8.082389831542969e-05, 0.064453125, 0.0546875, 0.0001252889633178711, 2.396106719970703e-05, 2.5987625122070312e-05, 0.01751708984375, 0.0004444122314453125, 0.0005183219909667969, 0.00011539459228515625, 5.6862831115722656e-05, 0.0204925537109375, 0.0003867149353027344, 0.00023889541625976562, 0.000606536865234375, 3.4332275390625e-05, 0.0010089874267578125, 0.2379150390625, 0.000232696533203125, 0.0007710456848144531, 4.76837158203125e-07, 0.024749755859375, 0.0007963180541992188, 0.07623291015625, 0.07635498046875, 0.0027332305908203125, 0.03662109375, 0.2000732421875, 0.0241546630859375, 0.00664520263671875, 0.00689697265625, 8.344650268554688e-06, 0.0009522438049316406, 2.5391578674316406e-05, 0.003143310546875, 0.0004012584686279297, 0.00130462646484375, 0.002246856689453125, 3.2901763916015625e-05], "tokens": [275, 569, 284, 562, 907, 2064, 10605, 1191, 22386, 67, 26, 2627, 312, 30, 225, 12928, 2064, 816, 30, 225, 12928, 2064, 23477, 30, 225, 12928, 629, 1769, 31219, 27, 4456, 2571, 4175, 984, 284, 301, 291, 2064, 2152, 45, 584, 415, 308, 4075, 32, 26821, 26, 83, 27, 1276, 6934, 32]}
{"line_number": 177, "line_type": "original", "code": "                sum = sum + an;", "entropy": 4.0546875, "is_bug_line": false, "sus_score": 0.17677669529663687, "per_token_entropy": [6.8359375, 13.2734375, 1.630859375, 5.77734375, 0.50732421875, 0.249267578125, 0.09332275390625], "tokens": [2071, 3632, 280, 3632, 474, 600, 45]}
{"line_number": 177, "line_type": "generated", "code": "\n                                           int maxIterations) \n        throws MathException\n    {\n        double ret;\n\n        if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {\n            ret", "entropy": 0.053253173828125, "is_bug_line": false, "sus_score": 0.17677669529663687, "per_token_entropy": [0.450439453125, 1.1298828125, 0.00658416748046875, 0.0004839897155761719, 0.0114898681640625, 0.343017578125, 0.0003979206085205078, 0.001621246337890625, 8.344650268554688e-07, 0.021148681640625, 0.01020050048828125, 0.1361083984375, 0.158447265625, 0.00299072265625, 0.03619384765625, 0.2454833984375, 0.032135009765625, 0.00873565673828125, 0.013671875, 1.1682510375976562e-05, 0.0013189315795898438, 3.719329833984375e-05, 0.006328582763671875, 0.0004818439483642578, 0.0015745162963867188, 0.00429534912109375, 4.7087669372558594e-05, 0.00044083595275878906, 4.7326087951660156e-05, 0.00012826919555664062, 0.01445770263671875, 0.007568359375, 0.040679931640625, 0.003391265869140625, 0.0016336441040039062, 0.000125885009765625, 1.8358230590820312e-05, 0.01605224609375, 0.0002225637435913086, 0.0175323486328125, 0.0038890838623046875, 0.007106781005859375, 0.000209808349609375, 0.0203094482421875, 0.0004734992980957031, 0.00032329559326171875, 0.0007476806640625, 0.0002677440643310547, 0.0015535354614257812, 0.0030612945556640625, 0.00537109375, 0.0006051063537597656], "tokens": [12928, 629, 1769, 31219, 27, 4456, 2571, 4175, 984, 284, 301, 291, 2064, 2152, 45, 584, 415, 308, 4075, 32, 26821, 26, 83, 27, 1276, 6934, 32, 26821, 26, 106, 27, 1276, 308, 83, 2511, 225, 34, 32, 34, 27, 1276, 308, 106, 333, 225, 34, 32, 34, 490, 301, 324, 2152]}
{"line_number": 179, "line_type": "original", "code": "            if (n >= maxIterations) {", "entropy": 1.84765625, "is_bug_line": false, "sus_score": 0.17677669529663687, "per_token_entropy": [5.98828125, 1.9892578125, 0.09735107421875, 7.26171875, 0.72802734375, 0.1112060546875, 0.012939453125, 0.12408447265625, 0.305419921875], "tokens": [1468, 415, 308, 96, 2377, 1769, 31219, 27, 301]}
{"line_number": 179, "line_type": "generated", "code": "\n        throw new MaxIterationsExceededException(maxIterations);\n    }\n    \n    /**\n     * Returns the value of 1 / Gamma(a + 1), the \"regularized gamma\n     * function\" - sometimes called the \"normalized gamma function\".\n     * \n    ", "entropy": 0.400146484375, "is_bug_line": false, "sus_score": 0.17677669529663687, "per_token_entropy": [0.36669921875, 0.841796875, 0.00174713134765625, 0.0287933349609375, 6.020069122314453e-05, 2.396106719970703e-05, 8.463859558105469e-06, 0.007080078125, 0.005397796630859375, 0.00016677379608154297, 0.0012378692626953125, 0.1929931640625, 0.013580322265625, 0.8759765625, 0.043212890625, 0.0207977294921875, 1.5616416931152344e-05, 0.2744140625, 0.0311279296875, 1.70703125, 0.001674652099609375, 1.4580078125, 0.038787841796875, 0.07366943359375, 1.2880859375, 0.00597381591796875, 0.378662109375, 1.376953125, 0.00942230224609375, 0.0074920654296875, 0.33544921875, 0.489990234375, 1.412109375, 1.5498046875, 0.0005464553833007812, 0.908203125, 0.15185546875, 2.2649765014648438e-06, 0.041473388671875, 1.123046875, 1.39453125, 1.6962890625, 0.36669921875, 0.056640625, 0.1920166015625, 0.734375, 0.5087890625, 0.0225067138671875, 0.2568359375, 0.1221923828125, 0.0006861686706542969, 0.391845703125], "tokens": [291, 1422, 537, 7462, 31219, 28741, 984, 26, 1449, 31219, 293, 284, 320, 2170, 1022, 275, 319, 3759, 322, 786, 432, 225, 35, 517, 48264, 26, 83, 474, 225, 35, 471, 322, 313, 16343, 1191, 13040, 275, 319, 667, 20, 429, 16389, 3823, 322, 313, 20030, 13040, 667, 2296, 275, 319, 5384]}
{"line_number": 182, "line_type": "original", "code": "                ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;", "entropy": 1.0244140625, "is_bug_line": false, "sus_score": 0.17677669529663687, "per_token_entropy": [8.578125, 1.958984375, 0.014678955078125, 2.408203125, 0.08154296875, 0.007091522216796875, 0.859375, 0.0166473388671875, 0.0093231201171875, 0.75927734375, 0.00038313865661621094, 0.1339111328125, 0.006195068359375, 0.016510009765625, 6.67572021484375e-06, 0.00047516822814941406, 8.881092071533203e-05, 0.0189971923828125, 0.003467559814453125, 0.7958984375, 0.004608154296875, 0.003162384033203125, 0.00032210350036621094, 3.060546875, 0.46630859375, 8.1796875, 0.268798828125], "tokens": [2071, 2152, 280, 4175, 32, 2832, 3736, 106, 474, 308, 83, 319, 4175, 32, 751, 26, 106, 490, 429, 1245, 22386, 26, 83, 490, 319, 3632, 45]}
{"line_number": 182, "line_type": "generated", "code": "\n        return ret;\n    }\n    \n    /**\n     * Returns the complemented incomplete beta function I_x(a, b).\n     * \n     * The implementation of this method is based on:\n     * <ul>\n     * <li>\n     * <a", "entropy": 0.154296875, "is_bug_line": false, "sus_score": 0.17677669529663687, "per_token_entropy": [0.7900390625, 0.2724609375, 0.011810302734375, 0.0031185150146484375, 0.0228424072265625, 0.0008230209350585938, 1.1669921875, 0.09710693359375, 0.018035888671875, 1.4662742614746094e-05, 0.34423828125, 0.0292816162109375, 1.2099609375, 0.0955810546875, 0.494140625, 0.2066650390625, 0.1217041015625, 0.73193359375, 0.30029296875, 0.0350341796875, 0.004405975341796875, 0.0008950233459472656, 0.00033664703369140625, 0.273681640625, 0.126220703125, 0.126953125, 0.0001373291015625, 0.484375, 1.1563301086425781e-05, 0.6142578125, 0.01055908203125, 0.00348663330078125, 0.0005974769592285156, 0.006557464599609375, 0.00220489501953125, 0.00199127197265625, 0.0010242462158203125, 0.01180267333984375, 0.035003662109375, 6.711483001708984e-05, 0.069091796875, 0.00382232666015625, 0.002490997314453125, 0.0029754638671875, 5.233287811279297e-05, 0.01378631591796875, 0.0001519918441772461, 0.239013671875, 0.01080322265625, 3.337860107421875e-06, 0.0087738037109375, 0.01421356201171875], "tokens": [291, 442, 2152, 45, 284, 320, 2170, 1022, 275, 319, 3759, 322, 31616, 318, 26890, 11823, 667, 439, 81, 106, 26, 83, 30, 323, 547, 275, 319, 5384, 319, 886, 4736, 432, 458, 1411, 438, 4122, 544, 44, 275, 319, 333, 338, 48, 275, 319, 333, 374, 48, 275, 319, 333, 83]}
{"line_number": 233, "line_type": "original", "code": "        if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {", "entropy": 0.59619140625, "is_bug_line": false, "sus_score": 0.17677669529663687, "per_token_entropy": [5.109375, 2.154296875, 0.09521484375, 3.189453125, 0.00183868408203125, 0.1573486328125, 0.0011234283447265625, 3.296875, 0.278564453125, 0.01800537109375, 0.343017578125, 8.654594421386719e-05, 0.1798095703125, 0.0004725456237792969, 0.027191162109375, 1.3720703125, 0.06414794921875, 2.400390625, 0.78662109375, 0.266357421875, 0.0020313262939453125, 0.00017702579498291016, 0.259521484375, 0.0015506744384765625, 0.30908203125, 0.1392822265625, 0.1932373046875, 0.010223388671875, 0.0811767578125, 0.0026454925537109375, 0.0001323223114013672, 0.04205322265625, 0.004405975341796875, 0.050628662109375, 0.041168212890625], "tokens": [351, 415, 308, 4075, 32, 26821, 26, 83, 27, 1276, 6934, 32, 26821, 26, 106, 27, 1276, 308, 83, 2511, 225, 34, 32, 34, 27, 1276, 308, 106, 333, 225, 34, 32, 34, 490, 301]}
{"line_number": 233, "line_type": "generated", "code": "\n    \n    /**\n     * Returns the natural logarithm of the gamma function &log;(gamma(a)).\n     * \n     * @param a the a parameter.\n     * @return the natural logarithm of the gamma function &log;(gamma(a))", "entropy": 0.26416015625, "is_bug_line": false, "sus_score": 0.17677669529663687, "per_token_entropy": [1.7197265625, 0.157958984375, 0.026275634765625, 2.7298927307128906e-05, 0.3671875, 0.04022216796875, 0.7119140625, 0.010223388671875, 0.01032257080078125, 0.0001442432403564453, 0.0025234222412109375, 0.044921875, 0.19287109375, 0.054656982421875, 1.22265625, 1.2763671875, 1.48828125, 1.021484375, 0.017730712890625, 0.615234375, 0.197021484375, 0.0205078125, 0.0025081634521484375, 0.8115234375, 1.2040138244628906e-05, 0.7548828125, 0.006076812744140625, 0.01192474365234375, 0.1505126953125, 0.048980712890625, 0.0282745361328125, 0.0074005126953125, 0.0023212432861328125, 0.0005583763122558594, 0.0010623931884765625, 0.022308349609375, 0.365966796875, 0.51416015625, 0.0005002021789550781, 0.01381683349609375, 0.00021004676818847656, 0.01090240478515625, 1.294921875, 0.0029048919677734375, 0.007190704345703125, 0.324462890625, 0.0026721954345703125, 0.0009608268737792969, 0.007171630859375, 0.0015277862548828125, 0.00421142578125, 0.1358642578125], "tokens": [2170, 1022, 275, 319, 3759, 322, 19844, 1245, 31176, 95, 432, 322, 13040, 667, 549, 751, 31059, 13941, 26, 83, 3427, 275, 319, 5384, 319, 477, 753, 312, 322, 312, 3395, 32, 275, 319, 477, 601, 322, 19844, 1245, 31176, 95, 432, 322, 13040, 667, 549, 751, 31059, 13941, 26, 83, 490]}
{"line_number": 260, "line_type": "original", "code": "        return ret;", "entropy": 1.982421875, "is_bug_line": false, "sus_score": 0.17677669529663687, "per_token_entropy": [7.04296875, 0.85693359375, 0.00952911376953125, 0.021209716796875], "tokens": [351, 442, 2152, 45]}
{"line_number": 260, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.17677669529663687, "per_token_entropy": [], "tokens": []}
{"line_number": 162, "line_type": "original", "code": "        } else if (a >= 1.0 && x > a) {", "entropy": 1.341796875, "is_bug_line": false, "sus_score": 0.16222142113076254, "per_token_entropy": [3.142578125, 8.4296875, 0.72119140625, 0.54248046875, 0.038330078125, 2.90234375, 1.119140625, 0.52685546875, 0.331787109375, 0.343994140625, 0.0019378662109375, 0.54541015625, 0.11199951171875, 1.3310546875, 2.578125, 0.0888671875, 0.06036376953125], "tokens": [351, 320, 813, 415, 308, 83, 2377, 225, 35, 32, 34, 962, 816, 848, 312, 27, 301]}
{"line_number": 162, "line_type": "generated", "code": "\n     * <a href=\"http://mathworld.wolfram.com/IncompleteGammaFunction.html\">\n     * Incomplete Gamma Function</a>, equation (5).</li>\n     * <li>\n     * <a href=\"http://math", "entropy": 0.07305908203125, "is_bug_line": false, "sus_score": 0.16222142113076254, "per_token_entropy": [0.7685546875, 0.01238250732421875, 0.1439208984375, 0.432861328125, 0.0014791488647460938, 0.0035266876220703125, 0.0010986328125, 0.00029540061950683594, 0.24951171875, 0.0007233619689941406, 1.3113021850585938e-05, 0.00029158592224121094, 0.0003764629364013672, 1.6689300537109375e-05, 0.00021827220916748047, 6.115436553955078e-05, 0.0002073049545288086, 0.044281005859375, 0.005268096923828125, 4.9114227294921875e-05, 0.00015819072723388672, 6.258487701416016e-05, 0.00035381317138671875, 0.00820159912109375, 0.00020134449005126953, 0.0014314651489257812, 0.00015234947204589844, 0.0002799034118652344, 1.990795135498047e-05, 8.33272933959961e-05, 7.736682891845703e-05, 0.001819610595703125, 0.294677734375, 0.0021610260009765625, 1.3603515625, 0.053131103515625, 0.00022232532501220703, 0.004886627197265625, 0.0650634765625, 0.00020635128021240234, 0.14306640625, 0.00212860107421875, 0.00443267822265625, 0.1436767578125, 5.984306335449219e-05, 0.00052642822265625, 0.00015783309936523438, 0.0002129077911376953, 0.001331329345703125, 0.0003943443298339844, 1.4543533325195312e-05, 0.04510498046875], "tokens": [275, 319, 333, 83, 976, 347, 525, 555, 3812, 5860, 32, 105, 362, 43579, 32, 508, 33, 39007, 22386, 2447, 32, 916, 413, 275, 319, 701, 5898, 48264, 4540, 377, 83, 2717, 23032, 308, 39, 20160, 374, 48, 275, 319, 333, 374, 48, 275, 319, 333, 83, 976, 347, 525, 555, 3812]}
{"line_number": 160, "line_type": "original", "code": "        } else if (x == 0.0) {", "entropy": 1.28515625, "is_bug_line": false, "sus_score": 0.15811388300841897, "per_token_entropy": [3.6875, 7.48828125, 0.6494140625, 0.2471923828125, 0.03778076171875, 1.0927734375, 2.345703125, 0.58203125, 0.02288818359375, 0.330078125, 0.0029926300048828125, 0.1904296875, 0.0298309326171875], "tokens": [351, 320, 813, 415, 308, 106, 610, 225, 34, 32, 34, 27, 301]}
{"line_number": 160, "line_type": "generated", "code": "\n     * Regularized Gamma Function</a>, equation (1).</li>\n     * <li>\n     * <a href=\"http://mathworld.wolfram.com/IncompleteGammaFunction.html\">\n     * Incomplete Gamma Function</a>,", "entropy": 0.047576904296875, "is_bug_line": false, "sus_score": 0.15811388300841897, "per_token_entropy": [1.1689453125, 0.01206207275390625, 0.262451171875, 0.0005712509155273438, 0.00144195556640625, 0.0006537437438964844, 0.0025959014892578125, 0.0010089874267578125, 0.003810882568359375, 0.0224609375, 0.0014371871948242188, 0.5859375, 0.039215087890625, 0.0003070831298828125, 0.000675201416015625, 0.03955078125, 0.00020003318786621094, 0.0333251953125, 0.0006632804870605469, 0.0007114410400390625, 0.0198822021484375, 6.73532485961914e-05, 0.00034308433532714844, 6.210803985595703e-05, 0.0006914138793945312, 0.0018014907836914062, 0.00034809112548828125, 0.00010478496551513672, 0.042938232421875, 3.719329833984375e-05, 9.775161743164062e-06, 3.552436828613281e-05, 6.4373016357421875e-06, 2.765655517578125e-05, 1.8835067749023438e-05, 3.159046173095703e-05, 5.3882598876953125e-05, 0.0027713775634765625, 0.00044083595275878906, 5.2928924560546875e-05, 5.447864532470703e-05, 8.690357208251953e-05, 0.00028204917907714844, 0.223876953125, 0.0003864765167236328, 0.0008530616760253906, 4.601478576660156e-05, 0.00027942657470703125, 1.4543533325195312e-05, 8.666515350341797e-05, 4.661083221435547e-05, 0.0005192756652832031], "tokens": [275, 319, 33196, 1191, 48264, 4540, 377, 83, 2717, 23032, 308, 35, 20160, 374, 48, 275, 319, 333, 374, 48, 275, 319, 333, 83, 976, 347, 525, 555, 3812, 5860, 32, 105, 362, 43579, 32, 508, 33, 39007, 22386, 2447, 32, 916, 413, 275, 319, 701, 5898, 48264, 4540, 377, 83, 2717]}
{"line_number": 158, "line_type": "original", "code": "        if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {", "entropy": 0.50439453125, "is_bug_line": false, "sus_score": 0.14907119849998599, "per_token_entropy": [3.169921875, 4.15234375, 0.08734130859375, 3.3125, 0.00045800209045410156, 0.1561279296875, 0.0003285408020019531, 0.7265625, 0.040679931640625, 0.006504058837890625, 0.05804443359375, 3.3855438232421875e-05, 0.101318359375, 0.0008749961853027344, 0.0012493133544921875, 1.6103515625, 0.04046630859375, 2.1328125, 0.5185546875, 0.0841064453125, 0.00323486328125, 4.9948692321777344e-05, 0.49951171875, 0.0011014938354492188, 0.10784912109375, 0.223876953125, 0.47509765625, 0.001125335693359375, 0.015106201171875, 0.0008172988891601562, 9.179115295410156e-06, 0.0200347900390625, 0.0015888214111328125, 0.0209808349609375, 0.09228515625], "tokens": [351, 415, 308, 4075, 32, 26821, 26, 83, 27, 1276, 6934, 32, 26821, 26, 106, 27, 1276, 308, 83, 2511, 225, 34, 32, 34, 27, 1276, 308, 106, 333, 225, 34, 32, 34, 490, 301]}
{"line_number": 158, "line_type": "generated", "code": "\n     * <li>\n     * <a href=\"http://mathworld.wolfram.com/IncompleteGammaFunction.html\">\n     * Incomplete Gamma Function</a>, equation (6).</li>\n     * <li>\n     * <a", "entropy": 0.0467529296875, "is_bug_line": false, "sus_score": 0.14907119849998599, "per_token_entropy": [0.50927734375, 0.02911376953125, 0.232421875, 0.033538818359375, 0.08026123046875, 0.021270751953125, 9.799003601074219e-05, 0.005580902099609375, 0.004802703857421875, 0.0019092559814453125, 0.0118255615234375, 0.0010824203491210938, 0.00015473365783691406, 0.058837890625, 0.0005984306335449219, 3.6954879760742188e-06, 2.384185791015625e-05, 1.0013580322265625e-05, 4.2438507080078125e-05, 0.0001704692840576172, 2.5987625122070312e-05, 0.00015628337860107422, 0.5869140625, 0.004421234130859375, 0.0001055002212524414, 4.100799560546875e-05, 2.193450927734375e-05, 0.00012183189392089844, 0.00293731689453125, 3.4332275390625e-05, 0.0007233619689941406, 0.00010263919830322266, 0.000598907470703125, 9.882450103759766e-05, 8.702278137207031e-05, 8.45193862915039e-05, 0.004604339599609375, 0.347412109375, 0.00021028518676757812, 0.0723876953125, 0.2481689453125, 0.00011098384857177734, 0.007167816162109375, 0.0312042236328125, 0.0011749267578125, 0.11944580078125, 0.0025081634521484375, 0.005626678466796875, 0.0018463134765625, 1.3947486877441406e-05, 0.0011749267578125, 0.0007090568542480469], "tokens": [275, 319, 333, 374, 48, 275, 319, 333, 83, 976, 347, 525, 555, 3812, 5860, 32, 105, 362, 43579, 32, 508, 33, 39007, 22386, 2447, 32, 916, 413, 275, 319, 701, 5898, 48264, 4540, 377, 83, 2717, 23032, 308, 40, 20160, 374, 48, 275, 319, 333, 374, 48, 275, 319, 333, 83]}
