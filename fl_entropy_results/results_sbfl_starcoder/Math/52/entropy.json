{"line_number": 313, "line_type": "original", "code": "  public Rotation(Vector3D u1, Vector3D u2, Vector3D v1, Vector3D v2) {", "entropy": 0.775390625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [4.2890625, 12.1953125, 1.447265625, 0.42626953125, 1.6025390625, 0.006374359130859375, 1.1444091796875e-05, 0.66064453125, 0.4716796875, 0.028717041015625, 0.007350921630859375, 1.7642974853515625e-05, 0.0001341104507446289, 0.1260986328125, 0.006313323974609375, 0.4794921875, 0.07769775390625, 0.0005731582641601562, 0.00861358642578125, 0.189208984375, 0.0202178955078125, 0.07159423828125, 0.022613525390625, 0.0034027099609375, 0.0005803108215332031, 0.0019245147705078125, 0.0008678436279296875, 0.11181640625, 0.2235107421875], "tokens": [225, 562, 33211, 26, 2863, 37, 54, 1044, 35, 30, 4107, 37, 54, 1044, 36, 30, 4107, 37, 54, 354, 35, 30, 4107, 37, 54, 354, 36, 27, 301]}
{"line_number": 313, "line_type": "generated", "code": "      } else {\n        // the (q1, q2, q3) vector is almost aligned with (u2, u3)\n        // we try (v2, v3)\n        q0 = 0.5 * FastMath.", "entropy": 0.30712890625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [1.5380859375, 0.33154296875, 0.5986328125, 0.034759521484375, 0.1502685546875, 0.138427734375, 0.68212890625, 0.13916015625, 0.0266265869140625, 0.0975341796875, 0.0008988380432128906, 0.004238128662109375, 0.003459930419921875, 0.005458831787109375, 0.0028438568115234375, 0.0019512176513671875, 0.0003783702850341797, 0.006877899169921875, 0.08355712890625, 1.64453125, 0.1256103515625, 0.02703857421875, 0.6083984375, 0.12493896484375, 0.1015625, 0.00397491455078125, 0.01214599609375, 0.003604888916015625, 0.2491455078125, 0.11505126953125, 0.6171875, 0.82421875, 1.228515625, 0.8671875, 1.2421875, 0.12164306640625, 0.00421142578125, 0.0595703125, 0.0103302001953125, 0.0270538330078125, 0.6259765625, 1.375, 0.390380859375, 0.054901123046875, 0.314453125, 0.030303955078125, 0.208984375, 0.6787109375, 0.1917724609375, 0.237060546875, 1.1682510375976562e-05, 4.208087921142578e-05], "tokens": [647, 320, 813, 301, 291, 434, 322, 308, 99, 35, 30, 2678, 36, 30, 2678, 37, 27, 4026, 438, 17396, 19643, 623, 308, 103, 36, 30, 1044, 37, 27, 291, 434, 996, 1596, 308, 104, 36, 30, 354, 37, 27, 291, 2678, 34, 280, 225, 34, 32, 39, 319, 15938, 5717, 32]}
{"line_number": 316, "line_type": "original", "code": "  double u1u1 = u1.getNormSq();", "entropy": 1.1015625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [4.2421875, 5.8984375, 2.494140625, 0.29833984375, 0.4345703125, 0.2042236328125, 0.53662109375, 0.08935546875, 0.01514434814453125, 0.0129852294921875, 0.2578125, 0.0018968582153320312, 0.9287109375, 0.004680633544921875], "tokens": [225, 2064, 1044, 35, 103, 35, 280, 1044, 35, 32, 371, 14373, 17509, 473]}
{"line_number": 316, "line_type": "generated", "code": "\n        return;\n      } else {\n        // the (q1, q2, q3) vector is close to the (u2, u3) plane,\n        // we try (u1, u2) and (v1, v3", "entropy": 0.2156982421875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.98046875, 0.1444091796875, 0.0136260986328125, 0.07122802734375, 0.0006957054138183594, 1.013671875, 0.04681396484375, 0.06597900390625, 0.15380859375, 0.7568359375, 0.1522216796875, 0.0244140625, 0.03765869140625, 0.0008983612060546875, 0.0026416778564453125, 0.00279998779296875, 0.0029697418212890625, 0.0019683837890625, 0.003307342529296875, 0.0004258155822753906, 0.006587982177734375, 0.099365234375, 1.1640625, 0.0123138427734375, 0.384033203125, 0.07086181640625, 0.1507568359375, 0.0723876953125, 0.0027904510498046875, 0.005084991455078125, 0.0021820068359375, 0.0034999847412109375, 0.042572021484375, 1.0322265625, 0.1533203125, 0.005809783935546875, 0.401611328125, 0.697265625, 1.072265625, 0.39306640625, 0.83935546875, 0.00310516357421875, 0.01580810546875, 0.33056640625, 0.05841064453125, 0.04144287109375, 0.0119171142578125, 0.032257080078125, 0.09197998046875, 0.0009937286376953125, 0.0043182373046875, 0.53662109375], "tokens": [291, 442, 45, 397, 320, 813, 301, 291, 434, 322, 308, 99, 35, 30, 2678, 36, 30, 2678, 37, 27, 4026, 438, 4230, 372, 322, 308, 103, 36, 30, 1044, 37, 27, 14442, 30, 291, 434, 996, 1596, 308, 103, 35, 30, 1044, 36, 27, 461, 308, 104, 35, 30, 354, 37]}
{"line_number": 317, "line_type": "original", "code": "  double u2u2 = u2.getNormSq();", "entropy": 1.232421875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [4.64453125, 5.8203125, 2.541015625, 2.0625, 0.59423828125, 0.7666015625, 0.5927734375, 0.048553466796875, 0.00972747802734375, 0.00464630126953125, 0.11663818359375, 0.0069732666015625, 0.03692626953125, 0.003940582275390625], "tokens": [225, 2064, 1044, 36, 103, 36, 280, 1044, 36, 32, 371, 14373, 17509, 473]}
{"line_number": 317, "line_type": "generated", "code": "\n      }\n\n      // the (q1, q2, q3) vector is close to the (u2, u3) plane\n      // we try other vectors\n      Vector3D v1Su2 = v1.subtract(u2);\n     ", "entropy": 0.22265625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.145751953125, 0.009246826171875, 1.142578125, 0.2607421875, 1.359375, 0.2283935546875, 0.04925537109375, 0.058990478515625, 0.0013942718505859375, 0.002910614013671875, 0.009063720703125, 0.006229400634765625, 0.0031604766845703125, 0.00885772705078125, 0.0005426406860351562, 0.006183624267578125, 0.154052734375, 1.4990234375, 0.00853729248046875, 0.3203125, 0.085205078125, 0.12176513671875, 0.057403564453125, 0.0021457672119140625, 0.005619049072265625, 0.0019054412841796875, 0.002162933349609375, 0.041259765625, 0.50048828125, 0.362060546875, 0.29833984375, 0.59423828125, 1.015625, 0.0219879150390625, 0.072021484375, 0.73779296875, 0.0002340078353881836, 0.00023818016052246094, 0.385986328125, 1.1435546875, 0.2646484375, 0.3583984375, 0.03961181640625, 0.07550048828125, 0.01105499267578125, 0.06329345703125, 0.0140838623046875, 0.00011789798736572266, 0.0010242462158203125, 0.0011577606201171875, 0.0015230178833007812, 0.025054931640625], "tokens": [397, 320, 1687, 434, 322, 308, 99, 35, 30, 2678, 36, 30, 2678, 37, 27, 4026, 438, 4230, 372, 322, 308, 103, 36, 30, 1044, 37, 27, 14442, 397, 434, 996, 1596, 1604, 16540, 397, 4107, 37, 54, 354, 35, 21462, 36, 280, 354, 35, 32, 25330, 26, 103, 36, 293, 397]}
{"line_number": 318, "line_type": "original", "code": "  double v1v1 = v1.getNormSq();", "entropy": 1.2783203125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [4.0625, 4.49609375, 4.14453125, 1.6123046875, 0.80859375, 1.7275390625, 0.2457275390625, 0.12274169921875, 0.06317138671875, 0.0236053466796875, 0.2330322265625, 0.0021152496337890625, 0.34228515625, 0.004638671875], "tokens": [225, 2064, 354, 35, 104, 35, 280, 354, 35, 32, 371, 14373, 17509, 473]}
{"line_number": 318, "line_type": "generated", "code": "\n      // the (q1, q2, q3) vector is aligned with (u2, u3)\n      vRef  = v2;\n      v2Su2 = v3Su3;\n      u2    = u2Prime;", "entropy": 0.30712890625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.71826171875, 0.74267578125, 1.052734375, 0.2344970703125, 0.04083251953125, 0.06475830078125, 0.0010938644409179688, 0.0033016204833984375, 0.01142120361328125, 0.00537872314453125, 0.0031147003173828125, 0.001865386962890625, 0.0005059242248535156, 0.0059814453125, 0.1495361328125, 1.3681640625, 0.0185089111328125, 0.78369140625, 0.1380615234375, 0.1845703125, 0.006931304931640625, 0.01276397705078125, 0.0042572021484375, 0.1768798828125, 0.1917724609375, 2.267578125, 0.2235107421875, 0.8388671875, 2.7179718017578125e-05, 0.10577392578125, 0.09930419921875, 0.0110931396484375, 0.040557861328125, 0.64697265625, 1.2451171875, 0.0261077880859375, 0.0013360977172851562, 0.0010862350463867188, 0.1673583984375, 0.50830078125, 0.392333984375, 0.0013532638549804688, 0.0249481201171875, 0.79296875, 0.2900390625, 1.685546875, 0.487548828125, 2.574920654296875e-05, 0.07952880859375, 0.0501708984375, 0.05267333984375, 0.00855255126953125], "tokens": [397, 434, 322, 308, 99, 35, 30, 2678, 36, 30, 2678, 37, 27, 4026, 438, 19643, 623, 308, 103, 36, 30, 1044, 37, 27, 397, 354, 2084, 225, 280, 354, 36, 45, 397, 354, 36, 21462, 36, 280, 354, 37, 21462, 37, 45, 397, 1044, 36, 264, 280, 1044, 36, 25808, 45]}
{"line_number": 319, "line_type": "original", "code": "  double v2v2 = v2.getNormSq();", "entropy": 1.1533203125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [3.80078125, 4.15234375, 4.22265625, 0.51123046875, 0.75927734375, 2.08203125, 0.359619140625, 0.0859375, 0.006103515625, 0.00859832763671875, 0.126953125, 0.004619598388671875, 0.023284912109375, 0.004581451416015625], "tokens": [225, 2064, 354, 36, 104, 36, 280, 354, 36, 32, 371, 14373, 17509, 473]}
{"line_number": 319, "line_type": "generated", "code": "\n      // we use (u2, u3)\n      uRef  = u2;\n      vRef  = v2;\n      v1Su1 = v2.subtract(u1);\n      v2Su2 = v3.subtract(", "entropy": 0.1707763671875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.51953125, 0.74267578125, 1.669921875, 1.3857421875, 0.681640625, 0.1431884765625, 0.0667724609375, 0.038238525390625, 0.014801025390625, 0.00600433349609375, 0.0343017578125, 1.197265625, 0.6474609375, 0.10015869140625, 0.359130859375, 1.5854835510253906e-05, 0.0169219970703125, 0.00933837890625, 0.004302978515625, 0.00589752197265625, 0.0094146728515625, 0.006450653076171875, 0.002483367919921875, 1.5497207641601562e-06, 0.1868896484375, 0.052947998046875, 0.0064697265625, 0.04998779296875, 0.0733642578125, 0.1553955078125, 0.0125732421875, 0.00205230712890625, 0.0004372596740722656, 0.0232391357421875, 0.09613037109375, 0.2086181640625, 0.005916595458984375, 0.00020813941955566406, 0.0006012916564941406, 0.27587890625, 0.0006365776062011719, 0.0246734619140625, 0.0056915283203125, 0.0105133056640625, 0.00012624263763427734, 0.0004215240478515625, 2.658367156982422e-05, 0.01206207275390625, 0.01097869873046875, 0.0016965866088867188, 0.0001049041748046875, 1.4424324035644531e-05], "tokens": [397, 434, 996, 793, 308, 103, 36, 30, 1044, 37, 27, 397, 1044, 2084, 225, 280, 1044, 36, 45, 397, 354, 2084, 225, 280, 354, 36, 45, 397, 354, 35, 21462, 35, 280, 354, 36, 32, 25330, 26, 103, 35, 293, 397, 354, 36, 21462, 36, 280, 354, 37, 32, 25330, 26]}
{"line_number": 320, "line_type": "original", "code": "  if ((u1u1 == 0) || (u2u2 == 0) || (v1v1 == 0) || (v2v2 == 0)) {", "entropy": 0.54296875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [5.640625, 4.36328125, 3.326171875, 0.94091796875, 1.013671875, 0.55419921875, 0.446044921875, 3.55859375, 0.173583984375, 0.0216217041015625, 0.2032470703125, 0.04144287109375, 0.0095672607421875, 0.0994873046875, 0.047576904296875, 0.0030612945556640625, 0.0005435943603515625, 0.0034084320068359375, 0.0010938644409179688, 0.0006923675537109375, 0.568359375, 0.00968170166015625, 0.008331298828125, 0.2301025390625, 0.95849609375, 0.017547607421875, 0.01788330078125, 0.0021820068359375, 0.000812530517578125, 6.186962127685547e-05, 0.039215087890625, 0.02069091796875, 0.00945281982421875, 0.0027408599853515625, 0.003086090087890625, 0.002048492431640625, 0.003726959228515625, 0.00316619873046875, 0.0010929107666015625, 0.0002810955047607422, 0.1627197265625, 0.298095703125], "tokens": [225, 415, 1833, 103, 35, 103, 35, 610, 225, 34, 27, 1276, 308, 103, 36, 103, 36, 610, 225, 34, 27, 1276, 308, 104, 35, 104, 35, 610, 225, 34, 27, 1276, 308, 104, 36, 104, 36, 610, 225, 34, 490, 301]}
{"line_number": 320, "line_type": "generated", "code": "\n        throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.VECTORS_NOT_PARALLEL);\n      }\n\n      // we will have to use u2 and v3 to compute the scalar part", "entropy": 0.2322998046875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.467529296875, 1.0654296875, 0.082275390625, 0.0012788772583007812, 0.0009107589721679688, 0.0058135986328125, 0.7333984375, 0.0271453857421875, 0.042755126953125, 0.0008101463317871094, 0.0007309913635253906, 2.23828125, 1.4662742614746094e-05, 0.00039196014404296875, 1.8232421875, 1.0371208190917969e-05, 0.291259765625, 7.092952728271484e-05, 0.318115234375, 0.619140625, 0.0243072509765625, 0.239990234375, 0.044097900390625, 0.10687255859375, 0.060791015625, 0.150634765625, 0.0013990402221679688, 0.00614166259765625, 0.051971435546875, 0.254150390625, 0.0208587646484375, 0.09503173828125, 0.024444580078125, 0.0177001953125, 0.0028209686279296875, 0.0008988380432128906, 0.005306243896484375, 0.0022869110107421875], "tokens": [291, 1422, 4175, 19304, 32, 1297, 25907, 26, 24225, 19298, 32, 44692, 6535, 81, 3908, 81, 4186, 46302, 293, 397, 320, 1687, 434, 996, 1098, 1159, 372, 793, 1044, 36, 461, 354, 37, 372, 7596, 322, 13145, 1742]}
{"line_number": 325, "line_type": "original", "code": "  v1 = new Vector3D(FastMath.sqrt(u1u1 / v1v1), v1);", "entropy": 1.130859375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [3.9609375, 4.9140625, 1.2685546875, 1.8173828125, 2.64453125, 0.0229644775390625, 0.0007781982421875, 0.0002853870391845703, 0.1016845703125, 5.359375, 6.4849853515625e-05, 0.0006542205810546875, 0.25390625, 0.6796875, 1.6728515625, 0.552734375, 0.068115234375, 0.363037109375, 1.8994140625, 1.935546875, 0.301025390625, 0.1519775390625, 0.03985595703125, 0.26513671875, 1.0849609375, 0.5908203125, 0.58642578125], "tokens": [225, 354, 35, 280, 537, 4107, 37, 54, 26, 12200, 5717, 32, 8663, 26, 103, 35, 103, 35, 517, 354, 35, 104, 35, 471, 354, 35, 293]}
{"line_number": 325, "line_type": "generated", "code": "\n\n  double s = FastMath.sqrt(1 - c * c);\n  double inv = 1 / s;\n\n  // compute q0 and deduce q1, q2 and q3\n  q0 = inv * c;\n  q1 =", "entropy": 0.371337890625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.90673828125, 1.625, 1.0712890625, 0.4208984375, 1.3388671875, 4.887580871582031e-06, 7.37905502319336e-05, 0.032623291015625, 0.6611328125, 0.79150390625, 0.5869140625, 0.041656494140625, 0.11260986328125, 0.0011548995971679688, 0.040679931640625, 0.36572265625, 0.9453125, 0.476318359375, 0.3974609375, 0.0296783447265625, 0.8740234375, 0.75830078125, 0.373046875, 0.0018939971923828125, 0.9814453125, 0.595703125, 0.99169921875, 1.005859375, 0.416748046875, 0.98388671875, 0.06439208984375, 0.00057220458984375, 0.1103515625, 0.018768310546875, 0.445068359375, 0.016143798828125, 0.00490570068359375, 0.1246337890625, 0.0013065338134765625, 0.0021953582763671875, 0.055023193359375, 0.08795166015625, 0.0231475830078125, 0.015716552734375, 0.7314453125, 0.09698486328125, 0.10504150390625, 0.0045623779296875, 0.0885009765625, 0.38916015625, 0.09033203125, 0.0006418228149414062], "tokens": [719, 2064, 309, 280, 15938, 5717, 32, 8663, 26, 35, 429, 281, 319, 281, 293, 334, 2064, 4691, 280, 225, 35, 517, 309, 45, 719, 434, 7596, 2678, 34, 461, 409, 4074, 2678, 35, 30, 2678, 36, 461, 2678, 37, 334, 2678, 34, 280, 4691, 319, 281, 45, 334, 2678, 35, 280]}
{"line_number": 328, "line_type": "original", "code": "  double u1u2   = u1.dotProduct(u2);", "entropy": 0.9169921875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [4.51953125, 1.220703125, 4.97265625, 0.66796875, 0.433837890625, 0.60107421875, 2.0859375, 4.7087669372558594e-05, 0.03155517578125, 0.923828125, 0.09765625, 0.00653839111328125, 0.00015687942504882812, 0.0003299713134765625, 0.00177001953125, 0.019134521484375, 0.0034637451171875], "tokens": [225, 2064, 1044, 35, 103, 36, 261, 280, 1044, 35, 32, 4260, 3409, 26, 103, 36, 293]}
{"line_number": 328, "line_type": "generated", "code": "\n  double inv = 1.0 / (2 * c);\n  double s   = u3.getNorm();\n  double invs = 1.0 / s;\n  double q0  = (k.getX() * u3.", "entropy": 0.5126953125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.1602783203125, 0.6357421875, 0.90234375, 0.56884765625, 0.09405517578125, 0.5654296875, 0.1146240234375, 0.060791015625, 0.007587432861328125, 0.7255859375, 0.693359375, 0.513671875, 0.00862884521484375, 0.00989532470703125, 0.200439453125, 1.0634765625, 1.552734375, 0.65234375, 3.635883331298828e-05, 2.236328125, 1.1689453125, 0.0007433891296386719, 0.60205078125, 0.0010271072387695312, 0.537109375, 0.11199951171875, 0.86767578125, 1.10546875, 0.68505859375, 0.0850830078125, 0.29345703125, 0.044677734375, 0.044097900390625, 0.0002665519714355469, 0.0060577392578125, 0.137939453125, 0.0011014938354492188, 0.2396240234375, 0.72216796875, 2.017578125, 0.372802734375, 1.390625, 6.723403930664062e-05, 1.0458984375, 1.2841796875, 0.0082855224609375, 0.88623046875, 0.032867431640625, 0.71826171875, 0.62353515625, 0.86181640625, 0.0013399124145507812], "tokens": [334, 2064, 4691, 280, 225, 35, 32, 34, 517, 308, 36, 319, 281, 293, 334, 2064, 309, 261, 280, 1044, 37, 32, 371, 14373, 473, 334, 2064, 4691, 101, 280, 225, 35, 32, 34, 517, 309, 45, 334, 2064, 2678, 34, 225, 280, 308, 93, 32, 18817, 346, 319, 1044, 37, 32]}
{"line_number": 329, "line_type": "original", "code": "  double v1v2   = v1.dotProduct(v2);", "entropy": 1.048828125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [2.966796875, 0.8466796875, 7.55859375, 0.984375, 1.365234375, 0.248779296875, 3.021484375, 9.97781753540039e-05, 0.150634765625, 0.1385498046875, 0.48193359375, 0.0189056396484375, 6.282329559326172e-05, 0.00021374225616455078, 0.006015777587890625, 0.0057373046875, 0.0267333984375], "tokens": [225, 2064, 354, 35, 104, 36, 261, 280, 354, 35, 32, 4260, 3409, 26, 104, 36, 293]}
{"line_number": 329, "line_type": "generated", "code": "\n  double inv = 0.5 / c;\n  q0 = inv * k.dotProduct(uRef);\n  q1 = inv * k.dotProduct(vRef);\n  q2 = inv * k.dotProduct(u3", "entropy": 0.153076171875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.217529296875, 0.75732421875, 0.51220703125, 0.68994140625, 0.051116943359375, 0.55322265625, 0.0003063678741455078, 0.035400390625, 0.0177154541015625, 0.027557373046875, 0.0040740966796875, 0.08990478515625, 0.28173828125, 0.183349609375, 0.0404052734375, 0.285400390625, 0.00963592529296875, 0.9619140625, 0.004581451416015625, 0.54736328125, 0.00023543834686279297, 0.005706787109375, 0.261474609375, 0.1597900390625, 0.07342529296875, 0.02801513671875, 0.053924560546875, 0.03424072265625, 0.00015842914581298828, 0.0087432861328125, 0.00010919570922851562, 0.05401611328125, 5.1975250244140625e-05, 0.0027294158935546875, 1.4662742614746094e-05, 0.0012712478637695312, 0.1473388671875, 0.026214599609375, 0.035888671875, 0.1678466796875, 0.0794677734375, 0.03009033203125, 0.000659942626953125, 0.05133056640625, 0.0015344619750976562, 0.19287109375, 0.0006575584411621094, 0.06024169921875, 2.9206275939941406e-05, 0.0072021484375, 0.60400390625, 0.60009765625], "tokens": [334, 2064, 4691, 280, 225, 34, 32, 39, 517, 281, 45, 334, 2678, 34, 280, 4691, 319, 831, 32, 4260, 3409, 26, 103, 2084, 293, 334, 2678, 35, 280, 4691, 319, 831, 32, 4260, 3409, 26, 104, 2084, 293, 334, 2678, 36, 280, 4691, 319, 831, 32, 4260, 3409, 26, 103, 37]}
{"line_number": 330, "line_type": "original", "code": "  double coeffU = u1u2 / u1u1;", "entropy": 0.6845703125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [3.0078125, 0.74169921875, 1.708984375, 0.8896484375, 0.1680908203125, 1.1162109375, 1.3681640625, 0.2015380859375, 0.1014404296875, 0.537109375, 0.19580078125, 0.199462890625, 0.003421783447265625, 0.0005826950073242188, 0.026611328125], "tokens": [225, 2064, 35139, 71, 280, 1044, 35, 103, 36, 517, 1044, 35, 103, 35, 45]}
{"line_number": 330, "line_type": "generated", "code": "\n  double q0 = inv * (u3.dotProduct(uRef) + c);\n  double q1 = inv * (u3.dotProduct(vRef) - k.dotProduct(v1Su1));\n  double q2", "entropy": 0.2724609375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.164306640625, 1.044921875, 1.830078125, 0.3876953125, 0.50927734375, 0.55810546875, 0.0182037353515625, 0.76611328125, 0.97265625, 1.3330078125, 0.0088348388671875, 0.56640625, 0.00020945072174072266, 0.00341796875, 1.19140625, 0.1495361328125, 0.17333984375, 0.1771240234375, 0.355712890625, 0.056854248046875, 0.163330078125, 0.0703125, 0.033111572265625, 0.039215087890625, 0.0035381317138671875, 0.0159759521484375, 0.0002014636993408203, 0.16748046875, 0.68017578125, 0.404541015625, 0.0003561973571777344, 0.10211181640625, 0.00016248226165771484, 0.0038394927978515625, 0.01366424560546875, 0.0161590576171875, 0.01430511474609375, 0.1634521484375, 0.2568359375, 0.0009641647338867188, 0.1328125, 4.565715789794922e-05, 0.0008931159973144531, 0.78125, 0.34423828125, 0.2271728515625, 0.0010890960693359375, 0.2398681640625, 0.01256561279296875, 0.006137847900390625, 0.0017213821411132812, 0.0021877288818359375], "tokens": [334, 2064, 2678, 34, 280, 4691, 319, 308, 103, 37, 32, 4260, 3409, 26, 103, 2084, 27, 474, 281, 293, 334, 2064, 2678, 35, 280, 4691, 319, 308, 103, 37, 32, 4260, 3409, 26, 104, 2084, 27, 429, 831, 32, 4260, 3409, 26, 104, 35, 21462, 35, 876, 334, 2064, 2678, 36]}
{"line_number": 331, "line_type": "original", "code": "  double coeffV = v1v2 / u1u1;", "entropy": 0.8896484375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [2.625, 1.3310546875, 3.916015625, 0.255615234375, 0.119140625, 1.2978515625, 0.360595703125, 0.3623046875, 0.024017333984375, 0.24267578125, 2.544921875, 0.02117919921875, 0.0237274169921875, 0.1673583984375, 0.049163818359375], "tokens": [225, 2064, 35139, 72, 280, 354, 35, 104, 36, 517, 1044, 35, 103, 35, 45]}
{"line_number": 331, "line_type": "generated", "code": "\n  q2 = inv * k.getY();\n  q3 = inv * k.getZ();\n\n  // compute the scalar part\n  double s = uRef.dotProduct(vRef);\n  q0 = s + s;\n  double q1q", "entropy": 0.31787109375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.140869140625, 0.10400390625, 0.1448974609375, 0.002105712890625, 0.0280914306640625, 0.0011320114135742188, 0.0665283203125, 8.559226989746094e-05, 0.0102996826171875, 0.00965118408203125, 0.46435546875, 0.0252227783203125, 0.003810882568359375, 0.00012302398681640625, 0.004749298095703125, 0.0003845691680908203, 0.01256561279296875, 1.7523765563964844e-05, 0.00041294097900390625, 0.0008382797241210938, 0.481689453125, 0.06951904296875, 0.41650390625, 0.0592041015625, 0.0467529296875, 0.0093841552734375, 0.135986328125, 0.76953125, 1.22265625, 0.44091796875, 0.6796875, 0.2047119140625, 0.00025725364685058594, 0.439453125, 2.193450927734375e-05, 0.001110076904296875, 0.06939697265625, 0.02587890625, 0.147705078125, 0.1485595703125, 0.9599609375, 0.0030841827392578125, 0.012786865234375, 1.650390625, 0.72802734375, 0.1748046875, 0.06475830078125, 1.3671875, 1.33203125, 2.37890625, 0.95263671875, 0.517578125], "tokens": [334, 2678, 36, 280, 4691, 319, 831, 32, 20431, 473, 334, 2678, 37, 280, 4691, 319, 831, 32, 40542, 473, 719, 434, 7596, 322, 13145, 1742, 334, 2064, 309, 280, 1044, 2084, 32, 4260, 3409, 26, 104, 2084, 293, 334, 2678, 34, 280, 309, 474, 309, 45, 334, 2064, 2678, 35, 99]}
{"line_number": 332, "line_type": "original", "code": "  double beta   = FastMath.sqrt((u2u2 - u1u2 * coeffU) / (v2v2 - v1v2 * coeffV));", "entropy": 0.7783203125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [3.205078125, 1.7998046875, 2.259765625, 3.640625, 0.0001957416534423828, 3.18359375, 6.23464584350586e-05, 0.00014472007751464844, 0.0838623046875, 2.41796875, 1.294921875, 2.3046875, 0.5224609375, 0.005992889404296875, 0.0902099609375, 0.833984375, 0.12353515625, 0.0014190673828125, 0.17724609375, 0.216064453125, 1.88671875, 0.1497802734375, 0.1370849609375, 0.5908203125, 0.82568359375, 2.58203125, 0.323486328125, 0.1051025390625, 1.811981201171875e-05, 0.10455322265625, 0.560546875, 0.008056640625, 0.0016880035400390625, 0.0005278587341308594, 0.00789642333984375, 0.009185791015625, 0.049468994140625, 0.06817626953125], "tokens": [225, 2064, 11823, 261, 280, 15938, 5717, 32, 8663, 1162, 103, 36, 103, 36, 429, 1044, 35, 103, 36, 319, 35139, 71, 27, 517, 308, 104, 36, 104, 36, 429, 354, 35, 104, 36, 319, 35139, 72, 876]}
{"line_number": 332, "line_type": "generated", "code": "\n  q3 = inv * k.getZ();\n\n  // compute the scalar part\n  double s = uRef.dotProduct(vRef);\n  q0 = 0.5 * FastMath.sqrt(1.0 + s - q1 *", "entropy": 0.2354736328125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.172607421875, 0.2366943359375, 0.0972900390625, 0.003997802734375, 0.041534423828125, 0.0012712478637695312, 0.0225677490234375, 0.0003101825714111328, 0.0011606216430664062, 0.002841949462890625, 0.440673828125, 0.07098388671875, 0.4091796875, 0.059234619140625, 0.04595947265625, 0.00957489013671875, 0.135009765625, 0.7880859375, 1.4150390625, 0.478515625, 0.5859375, 0.195556640625, 0.0002663135528564453, 0.32080078125, 1.8715858459472656e-05, 0.0008645057678222656, 0.06365966796875, 0.02337646484375, 0.18896484375, 0.15283203125, 1.017578125, 0.007556915283203125, 0.01128387451171875, 2.10546875, 0.413330078125, 0.0012655258178710938, 0.0030879974365234375, 0.00856781005859375, 0.09814453125, 8.940696716308594e-06, 3.707408905029297e-05, 0.007572174072265625, 0.03656005859375, 0.38671875, 0.529296875, 0.00791168212890625, 0.63232421875, 0.0251312255859375, 0.59130859375, 0.259521484375, 0.003238677978515625, 0.127685546875], "tokens": [334, 2678, 37, 280, 4691, 319, 831, 32, 40542, 473, 719, 434, 7596, 322, 13145, 1742, 334, 2064, 309, 280, 1044, 2084, 32, 4260, 3409, 26, 104, 2084, 293, 334, 2678, 34, 280, 225, 34, 32, 39, 319, 15938, 5717, 32, 8663, 26, 35, 32, 34, 474, 309, 429, 2678, 35, 319]}
{"line_number": 333, "line_type": "original", "code": "  double alpha  = coeffU - beta * coeffV;", "entropy": 1.6181640625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [4.15234375, 2.189453125, 1.0302734375, 3.900390625, 0.0004520416259765625, 1.7646484375, 0.31494140625, 3.591796875, 3.68359375, 0.03607177734375, 0.18603515625, 0.001415252685546875, 0.18212890625], "tokens": [225, 2064, 7377, 225, 280, 35139, 71, 429, 11823, 319, 35139, 72, 45]}
{"line_number": 333, "line_type": "generated", "code": "\n  // compute the scalar part\n  double alpha = (uRef.getX() * vRef.getX() + uRef.getY() * vRef.getY() + uRef.getZ() * vRef.getZ()) * inv;\n  q0", "entropy": 0.2459716796875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.634765625, 0.80126953125, 0.50439453125, 0.039520263671875, 0.041412353515625, 0.009246826171875, 0.1473388671875, 0.6787109375, 2.400390625, 0.344482421875, 1.478515625, 0.55712890625, 0.40087890625, 0.01412200927734375, 1.79296875, 0.00969696044921875, 0.198974609375, 0.2093505859375, 0.116455078125, 9.1552734375e-05, 0.00848388671875, 0.0101470947265625, 0.0440673828125, 0.60595703125, 5.245208740234375e-05, 0.00015938282012939453, 0.0009984970092773438, 0.0012044906616210938, 0.004627227783203125, 0.0012664794921875, 3.0994415283203125e-05, 5.14984130859375e-05, 0.00035119056701660156, 0.0292510986328125, 0.11798095703125, 0.2423095703125, 4.100799560546875e-05, 0.00013780593872070312, 4.0411949157714844e-05, 0.0029621124267578125, 0.005184173583984375, 0.0013322830200195312, 4.875659942626953e-05, 0.0001500844955444336, 0.00034737586975097656, 0.1953125, 0.409912109375, 0.1181640625, 0.01421356201171875, 0.250244140625, 0.342041015625, 0.003063201904296875], "tokens": [334, 434, 7596, 322, 13145, 1742, 334, 2064, 7377, 280, 308, 103, 2084, 32, 18817, 346, 319, 354, 2084, 32, 18817, 346, 474, 1044, 2084, 32, 20431, 346, 319, 354, 2084, 32, 20431, 346, 474, 1044, 2084, 32, 40542, 346, 319, 354, 2084, 32, 40542, 1157, 319, 4691, 45, 334, 2678, 34]}
{"line_number": 334, "line_type": "original", "code": "  v2 = new Vector3D(alpha, v1, beta, v2);", "entropy": 1.046875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [3.240234375, 5.921875, 1.859375, 1.0693359375, 2.078125, 0.00740814208984375, 0.0004570484161376953, 0.0001882314682006836, 0.053558349609375, 0.6181640625, 0.3603515625, 1.6259765625, 0.9189453125, 1.2333984375, 0.446533203125, 0.017364501953125, 0.06256103515625, 0.278076171875, 0.10076904296875], "tokens": [225, 354, 36, 280, 537, 4107, 37, 54, 26, 4893, 30, 354, 35, 30, 11823, 30, 354, 36, 293]}
{"line_number": 334, "line_type": "generated", "code": "\n\n  // compute the scalar part\n  double s = 0.5 * (uRef.crossProduct(vRef)).dotProduct(v1Su1);\n  if (s < 0) {\n    s = -s;\n    q1 =", "entropy": 0.358154296875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.521484375, 0.1412353515625, 0.70458984375, 0.06695556640625, 0.07672119140625, 0.01009368896484375, 0.157958984375, 0.56591796875, 1.1748046875, 0.423583984375, 1.7421875, 0.66455078125, 0.1778564453125, 0.066162109375, 0.017852783203125, 0.52880859375, 0.306884765625, 0.298583984375, 0.0011501312255859375, 2.01953125, 3.254413604736328e-05, 0.000286102294921875, 0.026947021484375, 0.0179595947265625, 0.408935546875, 0.7119140625, 2.586841583251953e-05, 0.0111541748046875, 1.8330078125, 0.29150390625, 0.05908203125, 9.107589721679688e-05, 0.1591796875, 0.24560546875, 1.4306640625, 0.06683349609375, 0.38134765625, 0.2802734375, 0.08416748046875, 0.0011930465698242188, 0.291015625, 0.002925872802734375, 0.1212158203125, 1.2333984375, 0.039703369140625, 0.027679443359375, 0.112060546875, 0.001155853271484375, 0.15478515625, 0.09869384765625, 0.85498046875, 0.006862640380859375], "tokens": [719, 434, 7596, 322, 13145, 1742, 334, 2064, 309, 280, 225, 34, 32, 39, 319, 308, 103, 2084, 32, 10495, 3409, 26, 104, 2084, 3427, 4260, 3409, 26, 104, 35, 21462, 35, 293, 334, 415, 308, 101, 333, 225, 34, 27, 301, 284, 309, 280, 429, 101, 45, 284, 2678, 35, 280]}
{"line_number": 337, "line_type": "original", "code": "  Vector3D uRef  = u1;", "entropy": 1.6806640625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [3.01953125, 9.1328125, 0.0065155029296875, 0.0004119873046875, 4.67578125, 0.58984375, 0.50537109375, 0.0006642341613769531, 0.3955078125, 0.1422119140625, 0.01091766357421875], "tokens": [225, 4107, 37, 54, 1044, 2084, 225, 280, 1044, 35, 45]}
{"line_number": 337, "line_type": "generated", "code": " uRef.getX() * q2 - uRef.getY() * q1);\n   q0 = vRef.dotProduct(k);\n\n  // post-processing\n  if (q0 < 0.0) {\n    q0 = -", "entropy": 0.31884765625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [1.6748046875, 0.0009446144104003906, 0.0030078887939453125, 0.002231597900390625, 0.0008220672607421875, 0.0013103485107421875, 0.001461029052734375, 0.0007872581481933594, 0.001617431640625, 0.0016736984252929688, 0.0003063678741455078, 0.00010251998901367188, 0.00024890899658203125, 0.0012331008911132812, 0.0005335807800292969, 0.0005316734313964844, 0.0003256797790527344, 0.1256103515625, 0.69677734375, 1.0380859375, 0.0080108642578125, 0.007686614990234375, 1.59765625, 0.04510498046875, 0.0003552436828613281, 0.044586181640625, 4.291534423828125e-05, 0.000980377197265625, 0.00299072265625, 0.04071044921875, 0.93798828125, 0.87353515625, 2.27734375, 0.76220703125, 1.384765625, 0.93017578125, 1.056640625, 0.207763671875, 0.5078125, 0.051849365234375, 0.059478759765625, 0.0031414031982421875, 0.001247406005859375, 1.4931640625, 0.006500244140625, 0.005741119384765625, 0.011077880859375, 0.14794921875, 0.431640625, 0.03082275390625, 0.09307861328125, 0.009613037109375], "tokens": [1044, 2084, 32, 18817, 346, 319, 2678, 36, 429, 1044, 2084, 32, 20431, 346, 319, 2678, 35, 293, 664, 2678, 34, 280, 354, 2084, 32, 4260, 3409, 26, 93, 293, 719, 434, 2364, 31, 9452, 334, 415, 308, 99, 34, 333, 225, 34, 32, 34, 27, 301, 284, 2678, 34, 280, 429]}
{"line_number": 338, "line_type": "original", "code": "  Vector3D vRef  = v1;", "entropy": 0.98291015625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [4.046875, 2.484375, 0.0023860931396484375, 0.0005435943603515625, 1.2412109375, 1.3984375, 1.427734375, 3.7550926208496094e-05, 0.054840087890625, 0.048431396484375, 0.11029052734375], "tokens": [225, 4107, 37, 54, 354, 2084, 225, 280, 354, 35, 45]}
{"line_number": 338, "line_type": "generated", "code": "\n  double a = vRef.dotProduct(k);\n  q0 = c + c * a;", "entropy": 0.6123046875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.53173828125, 1.1962890625, 3.330078125, 0.41259765625, 1.4326171875, 0.8701171875, 0.0008015632629394531, 0.462890625, 1.9788742065429688e-05, 0.001377105712890625, 0.0921630859375, 0.036529541015625, 0.30517578125, 0.81884765625, 0.01885986328125, 0.037078857421875, 2.72265625, 0.556640625, 0.1282958984375, 0.45751953125, 0.01371002197265625, 0.040557861328125], "tokens": [334, 2064, 312, 280, 354, 2084, 32, 4260, 3409, 26, 93, 293, 334, 2678, 34, 280, 281, 474, 281, 319, 312, 45]}
{"line_number": 339, "line_type": "original", "code": "  Vector3D v1Su1 = v1.subtract(u1);", "entropy": 0.8671875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [4.3671875, 5.703125, 0.0028667449951171875, 0.0005307197570800781, 1.451171875, 1.28125, 0.55810546875, 1.1240234375, 0.148681640625, 0.07366943359375, 0.00882720947265625, 0.007053375244140625, 0.00273895263671875, 0.00011074542999267578, 0.000576019287109375, 0.005176544189453125, 0.01052093505859375], "tokens": [225, 4107, 37, 54, 354, 35, 21462, 35, 280, 354, 35, 32, 25330, 26, 103, 35, 293]}
{"line_number": 339, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [], "tokens": []}
{"line_number": 340, "line_type": "original", "code": "  Vector3D v2Su2 = v2.subtract(u2);", "entropy": 0.7275390625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [3.169921875, 4.80859375, 0.0024700164794921875, 0.00022327899932861328, 1.3857421875, 1.658203125, 0.5390625, 0.681640625, 0.06640625, 0.025665283203125, 0.005657196044921875, 0.004848480224609375, 0.001766204833984375, 0.00012624263763427734, 0.0033512115478515625, 0.00384521484375, 0.00983428955078125], "tokens": [225, 4107, 37, 54, 354, 36, 21462, 36, 280, 354, 36, 32, 25330, 26, 103, 36, 293]}
{"line_number": 340, "line_type": "generated", "code": "\n  // compute the vectorial part\n  k = new Vector3D(u1.getY() * q3 - u1.getZ() * q2,\n                   u1.getZ() * q1 - u1.getX() * q3,", "entropy": 0.2017822265625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.486572265625, 0.6201171875, 1.5400390625, 0.360107421875, 1.91015625, 0.28955078125, 0.0048980712890625, 0.346435546875, 1.560546875, 0.092041015625, 0.62548828125, 0.0006103515625, 9.453296661376953e-05, 5.817413330078125e-05, 0.02471923828125, 0.53662109375, 1.0390625, 0.217529296875, 0.24658203125, 0.002185821533203125, 0.0203704833984375, 0.3515625, 0.096435546875, 0.01396942138671875, 0.0033702850341796875, 0.01367950439453125, 0.0002646446228027344, 0.000225067138671875, 0.0006613731384277344, 0.0004630088806152344, 0.0002903938293457031, 0.00031280517578125, 0.0013837814331054688, 0.08282470703125, 0.0007243156433105469, 0.0009732246398925781, 0.0004982948303222656, 0.0006933212280273438, 0.00011074542999267578, 3.8504600524902344e-05, 8.845329284667969e-05, 0.0001819133758544922, 0.00015676021575927734, 0.0002970695495605469, 0.0003790855407714844, 1.895427703857422e-05, 6.794929504394531e-05, 0.0001074075698852539, 4.410743713378906e-06, 0.00015842914581298828, 2.7298927307128906e-05, 0.00016701221466064453], "tokens": [334, 434, 7596, 322, 4026, 564, 1742, 334, 831, 280, 537, 4107, 37, 54, 26, 103, 35, 32, 20431, 346, 319, 2678, 37, 429, 1044, 35, 32, 40542, 346, 319, 2678, 36, 30, 4511, 1044, 35, 32, 40542, 346, 319, 2678, 35, 429, 1044, 35, 32, 18817, 346, 319, 2678, 37, 30]}
{"line_number": 341, "line_type": "original", "code": "  Vector3D k     = v1Su1.crossProduct(v2Su2);", "entropy": 0.8505859375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [3.689453125, 5.359375, 0.005397796630859375, 1.8596649169921875e-05, 1.3349609375, 4.56640625, 0.002193450927734375, 1.6884765625, 0.2225341796875, 0.0765380859375, 0.0010995864868164062, 0.003971099853515625, 0.007171630859375, 2.4557113647460938e-05, 0.0003838539123535156, 0.021942138671875, 0.0192718505859375, 0.0008320808410644531, 0.0010709762573242188, 0.012237548828125], "tokens": [225, 4107, 37, 54, 831, 262, 280, 354, 35, 21462, 35, 32, 10495, 3409, 26, 104, 36, 21462, 36, 293]}
{"line_number": 341, "line_type": "generated", "code": "\n\n  /** Build a rotation that transform a pair of vector into another pair.\n\n   * <p>Except for possible scale factors, if the instance were applied to\n   * the pair (u<sub>1</sub>, u<sub>2</sub", "entropy": 0.17822265625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [1.025390625, 0.124755859375, 0.61767578125, 0.61279296875, 0.1917724609375, 1.8623046875, 1.7353515625, 0.5869140625, 1.03515625, 0.08624267578125, 0.40478515625, 0.055908203125, 0.0283355712890625, 0.0418701171875, 0.1103515625, 0.1268310546875, 0.0015783309936523438, 0.10748291015625, 0.0008349418640136719, 0.0012874603271484375, 0.27978515625, 0.0027561187744140625, 0.0155029296875, 0.0012798309326171875, 0.0017499923706054688, 0.0030765533447265625, 0.00312042236328125, 0.0012578964233398438, 0.005634307861328125, 0.005512237548828125, 0.0038909912109375, 0.006992340087890625, 0.0092010498046875, 8.356571197509766e-05, 0.002445220947265625, 0.00832366943359375, 0.00933074951171875, 0.004108428955078125, 0.1275634765625, 0.00014925003051757812, 0.00021755695343017578, 0.0093231201171875, 0.0003383159637451172, 5.6624412536621094e-05, 0.0008802413940429688, 0.0010309219360351562, 0.0005717277526855469, 3.2901763916015625e-05, 7.593631744384766e-05, 0.00042557716369628906, 0.00020074844360351562, 0.00022554397583007812], "tokens": [719, 1022, 5238, 312, 11410, 688, 4522, 312, 6092, 432, 4026, 1991, 4674, 6092, 32, 3017, 319, 333, 98, 48, 32925, 436, 4195, 5247, 23851, 30, 415, 322, 1980, 4528, 9547, 372, 664, 319, 322, 6092, 308, 103, 46, 1113, 48, 35, 377, 1113, 2717, 1044, 46, 1113, 48, 36, 377, 1113]}
{"line_number": 342, "line_type": "original", "code": "  Vector3D u3    = u1.crossProduct(u2);", "entropy": 1.0703125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [4.05078125, 5.43359375, 0.007434844970703125, 4.8279762268066406e-05, 1.251953125, 1.4091796875, 4.51953125, 0.0006074905395507812, 0.68994140625, 0.72998046875, 0.0243072509765625, 0.0259552001953125, 6.341934204101562e-05, 0.00023055076599121094, 0.01493072509765625, 0.00563812255859375, 0.02691650390625], "tokens": [225, 4107, 37, 54, 1044, 37, 264, 280, 1044, 35, 32, 10495, 3409, 26, 103, 36, 293]}
{"line_number": 342, "line_type": "generated", "code": "\n  // compute the vectorial part\n  double inv = 1.0 / (c + c);\n  q1 = inv * k.getX();\n  q2 = inv * k.getY();\n  q3 = inv * k.getZ();\n\n ", "entropy": 0.1466064453125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.41650390625, 1.708984375, 1.08984375, 0.2734375, 0.7197265625, 0.032806396484375, 0.002849578857421875, 0.177978515625, 0.96826171875, 0.83349609375, 0.21484375, 0.03363037109375, 0.01259613037109375, 0.0184326171875, 0.00196075439453125, 0.003086090087890625, 0.2391357421875, 0.58642578125, 0.0838623046875, 0.005199432373046875, 0.0030269622802734375, 0.01404571533203125, 0.0489501953125, 0.0181427001953125, 0.0085601806640625, 0.033477783203125, 0.0011854171752929688, 0.0149688720703125, 0.00229644775390625, 0.0019779205322265625, 0.0008778572082519531, 0.0005998611450195312, 0.0001881122589111328, 0.00028514862060546875, 5.245208740234375e-05, 0.00023436546325683594, 2.09808349609375e-05, 0.0002161264419555664, 0.0001341104507446289, 0.00025010108947753906, 0.0001533031463623047, 0.0006036758422851562, 0.00024330615997314453, 0.00025272369384765625, 4.2438507080078125e-05, 0.00025200843811035156, 0.00012791156768798828, 0.00043082237243652344, 6.568431854248047e-05, 0.0002416372299194336, 0.0004565715789794922, 0.045135498046875], "tokens": [334, 434, 7596, 322, 4026, 564, 1742, 334, 2064, 4691, 280, 225, 35, 32, 34, 517, 308, 85, 474, 281, 293, 334, 2678, 35, 280, 4691, 319, 831, 32, 18817, 473, 334, 2678, 36, 280, 4691, 319, 831, 32, 20431, 473, 334, 2678, 37, 280, 4691, 319, 831, 32, 40542, 473, 719]}
{"line_number": 343, "line_type": "original", "code": "  double c       = k.dotProduct(u3);", "entropy": 2.56640625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [3.5546875, 10.8515625, 3.072265625, 6.43359375, 0.22412109375, 5.69140625, 0.1715087890625, 1.0126953125, 0.00023663043975830078, 0.003665924072265625, 0.12646484375, 2.12890625, 0.10382080078125], "tokens": [225, 2064, 281, 958, 280, 831, 32, 4260, 3409, 26, 103, 37, 293]}
{"line_number": 343, "line_type": "generated", "code": "\n   * <p>Except for possible scale factors, if the instance were applied to\n   * the vector u it will produce the vector v.</p>\n\n   * @param u origin vector of the rotation\n   * @param v desired image of u by the", "entropy": 0.12249755859375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.83203125, 0.0250091552734375, 0.382080078125, 0.005115509033203125, 0.0027370452880859375, 0.74658203125, 0.003910064697265625, 0.022613525390625, 0.003940582275390625, 0.0186614990234375, 0.0085601806640625, 0.004669189453125, 0.01690673828125, 0.034515380859375, 0.0172271728515625, 0.006023406982421875, 0.00479888916015625, 0.022735595703125, 0.00015211105346679688, 0.490478515625, 0.1827392578125, 0.051177978515625, 0.16357421875, 0.00605010986328125, 0.017578125, 0.0316162109375, 0.004192352294921875, 0.005558013916015625, 0.11444091796875, 0.0005030632019042969, 0.0016984939575195312, 0.4208984375, 0.0023632049560546875, 0.92919921875, 0.002735137939453125, 0.006504058837890625, 0.448974609375, 0.0215606689453125, 0.9453125, 0.0037441253662109375, 0.021331787109375, 0.01568603515625, 7.522106170654297e-05, 0.00032520294189453125, 9.334087371826172e-05, 0.0036640167236328125, 0.2147216796875, 0.0291748046875, 0.029296875, 0.046539306640625, 0.0010805130004882812, 0.00069427490234375], "tokens": [664, 319, 333, 98, 48, 32925, 436, 4195, 5247, 23851, 30, 415, 322, 1980, 4528, 9547, 372, 664, 319, 322, 4026, 1044, 561, 1098, 13882, 322, 4026, 354, 1730, 98, 48, 3017, 319, 477, 753, 1044, 7382, 4026, 432, 322, 11410, 664, 319, 477, 753, 354, 10848, 1778, 432, 1044, 810, 322]}
