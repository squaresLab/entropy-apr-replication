{"line_number": 66, "line_type": "original", "code": "        if ((expected.length < 2) || (expected.length != observed.length)) {", "entropy": 0.9384765625, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [5.25390625, 1.9521484375, 2.74609375, 3.576171875, 1.2431640625, 0.004352569580078125, 1.3076171875, 0.005306243896484375, 0.0640869140625, 0.04766845703125, 0.1094970703125, 0.376708984375, 2.443359375, 0.05963134765625, 0.0014581680297851562, 0.026763916015625, 0.08587646484375, 0.004741668701171875, 0.0020999908447265625, 0.236328125, 0.1512451171875], "tokens": [351, 415, 1833, 3140, 32, 1322, 333, 225, 36, 27, 1276, 308, 3140, 32, 1322, 863, 19143, 32, 1322, 490, 301]}
{"line_number": 66, "line_type": "generated", "code": "\n    public boolean chiSquareTest(double[] expected, long[] observed, double alpha)\n        throws IllegalArgumentException, MathException {\n        if (alpha <= 0 || alpha > 1) {\n            throw new IllegalArgumentException(\"Illegal significance level\");\n        }\n       ", "entropy": 0.193359375, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.50537109375, 0.1275634765625, 0.00704193115234375, 0.022613525390625, 0.00018513202667236328, 0.004638671875, 0.004772186279296875, 0.0601806640625, 0.02581787109375, 0.01494598388671875, 0.0012292861938476562, 0.051788330078125, 0.0004248619079589844, 0.0009822845458984375, 0.020477294921875, 0.9990234375, 0.0108184814453125, 0.00751495361328125, 0.180908203125, 0.0011348724365234375, 0.039947509765625, 0.00820159912109375, 0.004413604736328125, 4.887580871582031e-06, 0.0291595458984375, 0.36865234375, 1.666015625, 0.2191162109375, 0.030242919921875, 0.436279296875, 0.0034885406494140625, 7.808208465576172e-05, 0.402099609375, 0.019195556640625, 0.07904052734375, 0.0030364990234375, 0.1722412109375, 0.06268310546875, 0.00960540771484375, 0.058502197265625, 0.003284454345703125, 0.08941650390625, 0.07476806640625, 0.87158203125, 1.724609375, 0.046478271484375, 0.00016486644744873047, 0.00402069091796875, 1.373046875, 0.0211944580078125, 0.0016679763793945312, 0.1822509765625], "tokens": [284, 562, 1905, 25549, 18374, 1006, 26, 2627, 1178, 2799, 30, 1946, 1178, 19143, 30, 2064, 7377, 27, 291, 2571, 12137, 30, 4175, 984, 301, 291, 415, 308, 4893, 2511, 225, 34, 1276, 7377, 848, 225, 35, 27, 301, 324, 1422, 537, 12137, 440, 15095, 41482, 723, 3193, 724, 291, 320, 291]}
{"line_number": 70, "line_type": "original", "code": "        if (!isPositive(expected) || !isNonNegative(observed)) {", "entropy": 1.4775390625, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [5.11328125, 4.0078125, 4.51171875, 3.95703125, 0.252685546875, 0.1431884765625, 2.234375, 0.8447265625, 0.1510009765625, 0.159423828125, 0.07745361328125, 3.3046875, 0.0565185546875, 0.006397247314453125, 0.08319091796875, 0.130126953125, 0.09844970703125], "tokens": [351, 415, 1429, 297, 17991, 26, 3140, 27, 1276, 653, 297, 3910, 17152, 26, 36764, 490, 301]}
{"line_number": 70, "line_type": "generated", "code": "\n                \"alpha must be in the range (0, 0.5]\");\n        }\n        return (chiSquareTest(expected, observed) < alpha);\n    }\n\n    /**\n     * {@inheritDoc}\n     * \n     * @param observed observed frequency counts\n    ", "entropy": 0.288818359375, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [1.359375, 0.1190185546875, 0.85302734375, 0.0215301513671875, 0.0323486328125, 0.7392578125, 0.71728515625, 0.336181640625, 0.0152130126953125, 3.135204315185547e-05, 0.00495147705078125, 0.004421234130859375, 0.0584716796875, 6.079673767089844e-06, 6.270408630371094e-05, 0.59521484375, 0.1148681640625, 0.005001068115234375, 0.1876220703125, 0.62255859375, 1.115234375, 0.04840087890625, 3.3974647521972656e-05, 0.00662994384765625, 0.00127410888671875, 0.004329681396484375, 0.0001621246337890625, 0.006816864013671875, 0.00531768798828125, 0.171142578125, 0.0009279251098632812, 0.0021190643310546875, 0.059051513671875, 0.0011358261108398438, 0.294921875, 0.0230560302734375, 0.0357666015625, 3.933906555175781e-05, 1.525390625, 0.0011758804321289062, 0.0006723403930664062, 0.006378173828125, 0.445556640625, 1.916015625, 0.02337646484375, 0.102783203125, 0.61376953125, 1.0322265625, 1.1640625, 0.232177734375, 0.31787109375, 0.07391357421875], "tokens": [400, 313, 4893, 2298, 526, 328, 322, 2155, 308, 34, 30, 225, 34, 32, 39, 28915, 291, 320, 291, 442, 308, 15142, 18374, 1006, 26, 3140, 30, 19143, 27, 333, 7377, 293, 284, 320, 446, 1022, 275, 319, 3088, 18446, 111, 275, 319, 5384, 319, 477, 753, 19143, 19143, 13472, 15172, 275]}
{"line_number": 74, "line_type": "original", "code": "        double sumSq = 0.0d;", "entropy": 0.88330078125, "is_bug_line": true, "sus_score": 1.0, "per_token_entropy": [5.328125, 2.71875, 0.79541015625, 0.09027099609375, 0.14697265625, 0.016754150390625, 0.0019197463989257812, 0.198974609375, 0.0003330707550048828, 0.391845703125, 0.0262298583984375], "tokens": [351, 2064, 3632, 17509, 280, 225, 34, 32, 34, 86, 45]}
{"line_number": 74, "line_type": "generated", "code": "\n    /**\n     * Returns true iff the entries in the input array are positive.\n     * @param values input array\n     * @return true iff the entries in the input array are positive\n     */\n    private boolean isPositive(double[] values) {\n        for", "entropy": 0.276611328125, "is_bug_line": true, "sus_score": 1.0, "per_token_entropy": [0.6171875, 0.134033203125, 0.07452392578125, 0.00018703937530517578, 1.3623046875, 0.76416015625, 0.0474853515625, 1.052734375, 2.5234375, 0.231201171875, 0.0262451171875, 0.402587890625, 0.2060546875, 0.00955963134765625, 0.99853515625, 0.3505859375, 0.078857421875, 0.040008544921875, 0.194091796875, 0.00629425048828125, 2.27734375, 0.6025390625, 0.044036865234375, 0.15380859375, 0.00716400146484375, 0.0006055831909179688, 0.005950927734375, 0.0291748046875, 0.296630859375, 0.5712890625, 0.0537109375, 0.04962158203125, 0.01058197021484375, 0.0203704833984375, 0.0106201171875, 0.0025615692138671875, 0.0308685302734375, 0.261474609375, 0.0682373046875, 0.01378631591796875, 0.10186767578125, 0.1002197265625, 0.0010995864868164062, 0.007717132568359375, 0.0006074905395507812, 0.02850341796875, 0.0306854248046875, 0.00946044921875, 0.0389404296875, 0.007389068603515625, 0.055999755859375, 0.37158203125], "tokens": [284, 1022, 275, 319, 3759, 861, 44778, 322, 8036, 328, 322, 1509, 1417, 884, 11557, 32, 275, 319, 477, 753, 2078, 1509, 1417, 275, 319, 477, 601, 861, 44778, 322, 8036, 328, 322, 1509, 1417, 884, 11557, 275, 569, 284, 945, 1905, 438, 17991, 26, 2627, 1178, 2078, 27, 301, 291, 436]}
{"line_number": 75, "line_type": "original", "code": "        double dev = 0.0d;", "entropy": 1.158203125, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [4.55859375, 3.04296875, 0.219482421875, 1.4853515625, 1.439453125, 0.004177093505859375, 0.35302734375, 0.00037980079650878906, 0.46484375, 0.019500732421875], "tokens": [351, 2064, 5684, 280, 225, 34, 32, 34, 86, 45]}
{"line_number": 75, "line_type": "generated", "code": "\n    /**\n     * Returns true iff all the values in the input array are positive.\n     * @param x input array\n     * @return true iff all the values in the input array are positive\n     */\n    private boolean isPositive(double[] x) {", "entropy": 0.207763671875, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.64794921875, 0.300048828125, 0.09857177734375, 0.0002682209014892578, 1.3916015625, 0.6083984375, 0.064453125, 0.79150390625, 1.177734375, 0.2236328125, 0.1885986328125, 0.034942626953125, 0.6875, 0.0777587890625, 0.0114898681640625, 0.60400390625, 0.2119140625, 0.0826416015625, 0.06317138671875, 0.196044921875, 0.00888824462890625, 1.03515625, 0.492919921875, 0.02606201171875, 0.11370849609375, 0.0094757080078125, 0.0006518363952636719, 0.0083465576171875, 0.0576171875, 0.290771484375, 0.05908203125, 0.29296875, 0.00936126708984375, 0.09381103515625, 0.01122283935546875, 0.0203704833984375, 0.0098724365234375, 0.0016908645629882812, 0.02325439453125, 0.3486328125, 0.07568359375, 0.0151824951171875, 0.1307373046875, 0.1038818359375, 0.0013275146484375, 0.0095062255859375, 0.000823974609375, 0.034271240234375, 0.03369140625, 0.00304412841796875, 0.0168609619140625, 0.006805419921875], "tokens": [284, 1022, 275, 319, 3759, 861, 44778, 1169, 322, 2078, 328, 322, 1509, 1417, 884, 11557, 32, 275, 319, 477, 753, 816, 1509, 1417, 275, 319, 477, 601, 861, 44778, 1169, 322, 2078, 328, 322, 1509, 1417, 884, 11557, 275, 569, 284, 945, 1905, 438, 17991, 26, 2627, 1178, 816, 27, 301]}
{"line_number": 76, "line_type": "original", "code": "        for (int i = 0; i < observed.length; i++) {", "entropy": 0.609375, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [3.712890625, 4.7890625, 0.06317138671875, 0.036651611328125, 0.0355224609375, 0.013458251953125, 0.0246429443359375, 0.0129241943359375, 0.06494140625, 0.0028743743896484375, 0.0506591796875, 1.955078125, 0.027923583984375, 0.00490570068359375, 0.00655364990234375, 0.035003662109375, 0.0276947021484375, 0.104248046875], "tokens": [351, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 19143, 32, 1322, 45, 595, 1987, 301]}
{"line_number": 76, "line_type": "generated", "code": "\n    /**\n     * Returns true iff all values in the input array are positive.\n     * @param values input array\n     * @return true iff all values are positive\n     */\n    private boolean isPositive(double[] values) {\n        for (int i =", "entropy": 0.244384765625, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [1.4677734375, 0.376953125, 0.1722412109375, 0.0003426074981689453, 1.3271484375, 0.623046875, 0.0264892578125, 0.919921875, 0.79638671875, 0.441650390625, 0.04486083984375, 0.59912109375, 0.06195068359375, 0.0079803466796875, 0.62451171875, 0.2470703125, 0.140869140625, 0.068359375, 0.1812744140625, 0.007354736328125, 1.4052734375, 0.56298828125, 0.03375244140625, 0.1427001953125, 0.007167816162109375, 0.0007596015930175781, 0.007781982421875, 0.029571533203125, 0.29443359375, 0.06524658203125, 0.032135009765625, 0.580078125, 0.07293701171875, 0.235107421875, 0.09613037109375, 0.018646240234375, 0.09356689453125, 0.1165771484375, 0.0011119842529296875, 0.00843048095703125, 0.0005555152893066406, 0.032623291015625, 0.025299072265625, 0.007457733154296875, 0.0295562744140625, 0.006153106689453125, 0.10040283203125, 0.377197265625, 0.038299560546875, 0.135009765625, 0.0056915283203125, 0.0161590576171875], "tokens": [284, 1022, 275, 319, 3759, 861, 44778, 1169, 2078, 328, 322, 1509, 1417, 884, 11557, 32, 275, 319, 477, 753, 2078, 1509, 1417, 275, 319, 477, 601, 861, 44778, 1169, 2078, 884, 11557, 275, 569, 284, 945, 1905, 438, 17991, 26, 2627, 1178, 2078, 27, 301, 291, 436, 308, 410, 595, 280]}
{"line_number": 77, "line_type": "original", "code": "                dev = ((double) observed[i] - expected[i]);", "entropy": 1.728515625, "is_bug_line": true, "sus_score": 1.0, "per_token_entropy": [6.9609375, 11.6640625, 0.1849365234375, 2.33203125, 0.51611328125, 0.05877685546875, 1.53125, 0.172607421875, 0.8671875, 0.333740234375, 0.07440185546875, 0.271484375, 0.006191253662109375, 0.147705078125, 0.7958984375], "tokens": [2071, 5684, 280, 1833, 2627, 27, 19143, 77, 91, 79, 429, 2799, 77, 91, 1989]}
{"line_number": 77, "line_type": "generated", "code": "\n     * @return chi-square test statistic\n     * @throws IllegalArgumentException if counts is not a 2x2 matrix\n     */\n    public double chiSquare(long[][] counts) throws IllegalArgumentException {\n        if (counts.length!= 2) {\n            throw", "entropy": 0.255615234375, "is_bug_line": true, "sus_score": 1.0, "per_token_entropy": [0.6884765625, 0.2587890625, 0.0158538818359375, 0.255859375, 1.4033203125, 0.1865234375, 0.0213623046875, 0.1444091796875, 0.08441162109375, 0.377685546875, 0.169921875, 0.006008148193359375, 0.09967041015625, 0.07867431640625, 0.0278472900390625, 1.1123046875, 0.413330078125, 0.68212890625, 0.97265625, 0.45849609375, 0.00307464599609375, 0.83935546875, 0.00125885009765625, 1.2109375, 0.263427734375, 0.418212890625, 0.0298614501953125, 0.055755615234375, 0.0277252197265625, 0.00847625732421875, 0.0002605915069580078, 0.1265869140625, 0.15380859375, 0.06256103515625, 0.0007748603820800781, 0.003314971923828125, 0.459716796875, 0.018707275390625, 0.037811279296875, 0.220947265625, 0.4990234375, 0.76318359375, 0.01290130615234375, 0.0181121826171875, 0.00011146068572998047, 0.07135009765625, 0.00627899169921875, 0.0007033348083496094, 0.483154296875, 0.007476806640625, 0.03131103515625, 0.005901336669921875], "tokens": [275, 319, 477, 601, 25549, 31, 9699, 894, 33179, 275, 319, 477, 5117, 12137, 415, 15172, 438, 646, 312, 225, 36, 106, 36, 5045, 275, 569, 284, 562, 2064, 25549, 18374, 26, 3222, 11336, 15172, 27, 2571, 12137, 301, 291, 415, 308, 10410, 32, 1322, 863, 225, 36, 27, 301, 324, 1422]}
{"line_number": 78, "line_type": "original", "code": "                sumSq += dev * dev / expected[i];", "entropy": 1.271484375, "is_bug_line": true, "sus_score": 1.0, "per_token_entropy": [7.0546875, 3.60546875, 0.421630859375, 1.916015625, 1.0625, 0.0809326171875, 0.00390625, 0.3603515625, 0.34033203125, 0.043304443359375, 0.322509765625, 0.048797607421875], "tokens": [2071, 3632, 17509, 1454, 5684, 319, 5684, 517, 2799, 77, 91, 970]}
{"line_number": 78, "line_type": "generated", "code": "\n    }\n\n    /**\n     * @param counts array representation of 2-way table\n     * @return p-value\n     * @throws MathException if an error occurs computing the p-value\n     */\n    public double chiSquareTest(long[][] counts)", "entropy": 0.1329345703125, "is_bug_line": true, "sus_score": 1.0, "per_token_entropy": [1.5224609375, 0.1663818359375, 0.51806640625, 0.034454345703125, 0.0278778076171875, 0.00018286705017089844, 0.42041015625, 0.083251953125, 0.16064453125, 0.07635498046875, 0.0090789794921875, 0.0010356903076171875, 0.026458740234375, 0.013916015625, 0.0023193359375, 0.0011777877807617188, 0.0010700225830078125, 0.019683837890625, 0.0011758804321289062, 0.0014886856079101562, 1.29296875, 0.334716796875, 0.0075225830078125, 0.00412750244140625, 0.68017578125, 0.039398193359375, 0.0018739700317382812, 0.005954742431640625, 0.1895751953125, 0.0005660057067871094, 0.04644775390625, 0.1259765625, 0.0004703998565673828, 0.004108428955078125, 0.1060791015625, 0.006801605224609375, 0.040252685546875, 0.0014095306396484375, 0.0036525726318359375, 0.0911865234375, 0.056793212890625, 0.06353759765625, 0.02484130859375, 0.0118560791015625, 0.030609130859375, 0.0008673667907714844, 0.026397705078125, 0.0015115737915039062, 0.179931640625, 0.446044921875, 0.0008792877197265625, 0.0011615753173828125], "tokens": [284, 320, 446, 1022, 275, 319, 477, 753, 15172, 1417, 10293, 432, 225, 36, 31, 3073, 1858, 275, 319, 477, 601, 298, 31, 853, 275, 319, 477, 5117, 4175, 984, 415, 600, 1048, 12984, 18721, 322, 298, 31, 853, 275, 569, 284, 562, 2064, 25549, 18374, 1006, 26, 3222, 11336, 15172, 27]}
{"line_number": 80, "line_type": "original", "code": "        return sumSq;", "entropy": 3.01171875, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [5.87109375, 2.376953125, 6.73828125, 0.050689697265625, 0.025909423828125], "tokens": [351, 442, 3632, 17509, 45]}
{"line_number": 80, "line_type": "generated", "code": "\n    public double chiSquare(long[] counts) throws IllegalArgumentException {\n        if (counts.length < 4) {\n            throw new IllegalArgumentException(\n                    \"counts array length must be at least 4\");\n        }\n        if (!isNonNegative(counts))", "entropy": 0.2071533203125, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.9326171875, 0.763671875, 0.0294342041015625, 0.01309967041015625, 0.0003116130828857422, 0.072021484375, 0.1610107421875, 0.87158203125, 0.002666473388671875, 0.00557708740234375, 0.385498046875, 0.01485443115234375, 0.035491943359375, 0.32763671875, 0.53759765625, 0.8408203125, 0.0399169921875, 0.04638671875, 0.00039839744567871094, 0.242919921875, 0.007720947265625, 0.708984375, 0.04302978515625, 0.00724029541015625, 0.0325927734375, 0.00930023193359375, 0.004077911376953125, 0.0043487548828125, 0.424072265625, 0.366455078125, 0.003875732421875, 0.193359375, 0.438720703125, 0.71533203125, 0.3017578125, 0.011932373046875, 0.299072265625, 0.0032291412353515625, 0.048126220703125, 0.0184173583984375, 0.042236328125, 0.0184478759765625, 0.00029087066650390625, 0.19482421875, 0.7802734375, 0.06365966796875, 0.02532958984375, 0.63818359375, 0.004665374755859375, 0.0083465576171875, 0.0005397796630859375, 0.02813720703125], "tokens": [284, 562, 2064, 25549, 18374, 26, 3222, 1178, 15172, 27, 2571, 12137, 301, 291, 415, 308, 10410, 32, 1322, 333, 225, 38, 27, 301, 324, 1422, 537, 12137, 26, 528, 313, 10410, 1417, 3104, 2298, 526, 821, 6225, 225, 38, 724, 291, 320, 291, 415, 1429, 297, 3910, 17152, 26, 10410, 490]}
{"line_number": 97, "line_type": "original", "code": "        distribution.setDegreesOfFreedom(expected.length - 1.0);", "entropy": 1.3271484375, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [4.109375, 9.6640625, 0.1334228515625, 0.2449951171875, 0.06256103515625, 0.0007319450378417969, 0.00028204917907714844, 0.0006899833679199219, 5.364418029785156e-06, 0.10882568359375, 5.96484375, 0.246337890625, 0.006313323974609375, 0.07025146484375, 0.017578125, 0.003345489501953125, 4.265625, 0.0014657974243164062, 0.3173828125], "tokens": [351, 7433, 32, 470, 32709, 1419, 56, 18749, 418, 26, 3140, 32, 1322, 429, 225, 35, 32, 34, 293]}
{"line_number": 97, "line_type": "generated", "code": "\n        // compute chi-square statistic\n        double sumSq = 0.0d;\n        for (int row = 0; row < nRows; row++) {\n            for (int col = 0; col < nCols; col++) {", "entropy": 0.10980224609375, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.552734375, 0.92236328125, 0.5576171875, 1.1328125, 0.292724609375, 0.0631103515625, 0.404052734375, 0.1732177734375, 0.08453369140625, 0.44287109375, 0.2342529296875, 0.01056671142578125, 0.005359649658203125, 4.57763671875e-05, 0.00815582275390625, 5.543231964111328e-05, 0.085205078125, 0.002712249755859375, 0.0129852294921875, 0.630859375, 0.0016937255859375, 0.0010366439819335938, 0.0298309326171875, 0.0016298294067382812, 8.96453857421875e-05, 4.00543212890625e-05, 0.0002987384796142578, 0.0003566741943359375, 0.0002894401550292969, 0.01056671142578125, 0.0003573894500732422, 0.0004425048828125, 0.001544952392578125, 0.00855255126953125, 0.00122833251953125, 0.015899658203125, 0.01200103759765625, 0.0007023811340332031, 0.0002989768981933594, 0.0002371072769165039, 0.00024700164794921875, 0.0002865791320800781, 3.063678741455078e-05, 0.00017178058624267578, 0.0002593994140625, 0.00024819374084472656, 0.0007195472717285156, 0.0005621910095214844, 0.0002409219741821289, 0.00018167495727539062, 0.0019502639770507812, 0.0016574859619140625], "tokens": [291, 434, 7596, 25549, 31, 9699, 33179, 291, 2064, 3632, 17509, 280, 225, 34, 32, 34, 86, 45, 291, 436, 308, 410, 2698, 280, 225, 34, 45, 2698, 333, 310, 7252, 45, 2698, 1987, 301, 324, 436, 308, 410, 932, 280, 225, 34, 45, 932, 333, 310, 19911, 45, 932, 1987, 301]}
{"line_number": 98, "line_type": "original", "code": "        return 1.0 - distribution.cumulativeProbability(", "entropy": 1.7119140625, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [4.37109375, 1.4658203125, 3.9765625, 3.783203125, 0.1749267578125, 0.0030078887939453125, 3.181640625, 3.44140625, 0.007045745849609375, 0.0953369140625, 0.0010585784912109375, 0.045166015625], "tokens": [351, 442, 225, 35, 32, 34, 429, 7433, 32, 12018, 35567, 26]}
{"line_number": 98, "line_type": "generated", "code": "\n        // compute chi-square statistic\n        double sumSq = 0.0d;\n        for (int row = 0; row < nRows; row++) {\n            for (int col = 0; col < nCols; col++) {", "entropy": 0.12261962890625, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.83056640625, 0.9775390625, 0.5263671875, 1.2060546875, 0.31884765625, 0.054473876953125, 0.41162109375, 0.1982421875, 0.1610107421875, 0.55859375, 0.294189453125, 0.012298583984375, 0.0081634521484375, 6.401538848876953e-05, 0.00899505615234375, 6.73532485961914e-05, 0.08282470703125, 0.0029315948486328125, 0.0147857666015625, 0.59521484375, 0.0017604827880859375, 0.00173187255859375, 0.0380859375, 0.001956939697265625, 0.00011539459228515625, 5.900859832763672e-05, 0.00043010711669921875, 0.0004048347473144531, 0.0003046989440917969, 0.013275146484375, 0.0004494190216064453, 0.0005049705505371094, 0.001987457275390625, 0.00959014892578125, 0.0014667510986328125, 0.01904296875, 0.01148223876953125, 0.0007510185241699219, 0.0003292560577392578, 0.0002505779266357422, 0.00027251243591308594, 0.00033164024353027344, 3.361701965332031e-05, 0.00021350383758544922, 0.0002841949462890625, 0.0002677440643310547, 0.0006957054138183594, 0.0006651878356933594, 0.0002758502960205078, 0.00019299983978271484, 0.001903533935546875, 0.0017414093017578125], "tokens": [291, 434, 7596, 25549, 31, 9699, 33179, 291, 2064, 3632, 17509, 280, 225, 34, 32, 34, 86, 45, 291, 436, 308, 410, 2698, 280, 225, 34, 45, 2698, 333, 310, 7252, 45, 2698, 1987, 301, 324, 436, 308, 410, 932, 280, 225, 34, 45, 932, 333, 310, 19911, 45, 932, 1987, 301]}
{"line_number": 350, "line_type": "original", "code": "        for (int i = 0; i < in.length; i ++) {", "entropy": 0.7138671875, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [3.0625, 5.01953125, 0.04168701171875, 0.14111328125, 0.12457275390625, 0.0201873779296875, 0.0246124267578125, 0.0210418701171875, 0.01264190673828125, 0.003032684326171875, 0.0165863037109375, 2.412109375, 0.1505126953125, 0.0230865478515625, 0.0091094970703125, 0.00638580322265625, 1.697265625, 0.064697265625], "tokens": [351, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 328, 32, 1322, 45, 595, 38884, 301]}
{"line_number": 350, "line_type": "generated", "code": "\n     */\n    public void setDistribution(ChiSquaredDistribution value) {\n        distribution = value;\n    }", "entropy": 0.26904296875, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [1.2099609375, 0.11956787109375, 0.079345703125, 0.7587890625, 0.07073974609375, 0.061614990234375, 0.1141357421875, 0.0484619140625, 0.50830078125, 0.0028514862060546875, 0.0013971328735351562, 0.11529541015625, 0.00728607177734375, 0.0284423828125, 0.159912109375, 1.923828125, 0.0156707763671875, 0.03179931640625, 0.0253448486328125, 0.36279296875, 0.00777435302734375], "tokens": [275, 569, 284, 562, 763, 739, 16218, 26, 40953, 30455, 16218, 786, 27, 301, 291, 7433, 280, 786, 45, 284, 320]}
{"line_number": 351, "line_type": "original", "code": "            if (in[i] <= 0) {", "entropy": 1.7373046875, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [5.99609375, 2.55859375, 0.2396240234375, 4.75390625, 1.2490234375, 0.188720703125, 1.3662109375, 3.98046875, 0.06341552734375, 0.03826904296875, 0.239990234375, 0.176025390625], "tokens": [1468, 415, 308, 266, 77, 91, 79, 2511, 225, 34, 27, 301]}
{"line_number": 351, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [], "tokens": []}
{"line_number": 355, "line_type": "original", "code": "        return true;", "entropy": 3.015625, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [5.67578125, 4.28125, 2.099609375, 0.00658416748046875], "tokens": [351, 442, 861, 45]}
{"line_number": 355, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [], "tokens": []}
{"line_number": 367, "line_type": "original", "code": "        for (int i = 0; i < in.length; i ++) {", "entropy": 0.62060546875, "is_bug_line": false, "sus_score": 0.7071067811865476, "per_token_entropy": [4.4921875, 4.1875, 0.028839111328125, 0.0283355712890625, 0.1600341796875, 0.01462554931640625, 0.0126190185546875, 0.050384521484375, 0.007801055908203125, 0.001605987548828125, 0.0162506103515625, 0.8173828125, 0.3134765625, 0.00717926025390625, 0.01085662841796875, 0.005710601806640625, 0.9921875, 0.0262298583984375], "tokens": [351, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 328, 32, 1322, 45, 595, 38884, 301]}
{"line_number": 367, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.7071067811865476, "per_token_entropy": [], "tokens": []}
{"line_number": 368, "line_type": "original", "code": "            if (in[i] < 0) {", "entropy": 1.33984375, "is_bug_line": false, "sus_score": 0.7071067811865476, "per_token_entropy": [6.6953125, 3.19140625, 0.35693359375, 2.6640625, 0.65283203125, 0.267822265625, 1.4130859375, 0.5625, 0.050384521484375, 0.029266357421875, 0.09039306640625, 0.105224609375], "tokens": [1468, 415, 308, 266, 77, 91, 79, 333, 225, 34, 27, 301]}
{"line_number": 368, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.7071067811865476, "per_token_entropy": [], "tokens": []}
{"line_number": 372, "line_type": "original", "code": "        return true;", "entropy": 3.150390625, "is_bug_line": false, "sus_score": 0.7071067811865476, "per_token_entropy": [5.53515625, 4.25390625, 2.8046875, 0.007076263427734375], "tokens": [351, 442, 861, 45]}
{"line_number": 372, "line_type": "generated", "code": "\n    /**\n     * Modify the distribution used to compute inference statistics.\n     * \n     * @param value\n     *            the new distribution\n     * @since 1.2\n     */\n    public void setDistribution(ChiSquaredDistribution value) {\n        distribution = value", "entropy": 0.1436767578125, "is_bug_line": false, "sus_score": 0.7071067811865476, "per_token_entropy": [1.7783203125, 1.1796875, 0.07708740234375, 0.0007991790771484375, 1.3076171875, 0.052978515625, 1.0927734375, 0.0272216796875, 0.00444793701171875, 0.024993896484375, 0.0869140625, 0.004116058349609375, 0.0292816162109375, 0.021270751953125, 0.0014867782592773438, 0.060821533203125, 0.000598907470703125, 0.004413604736328125, 0.01529693603515625, 0.183349609375, 0.05084228515625, 0.00029540061950683594, 0.003498077392578125, 0.0145416259765625, 0.0182342529296875, 0.011627197265625, 0.017486572265625, 0.056732177734375, 0.002384185791015625, 0.0919189453125, 0.0005359649658203125, 0.00818634033203125, 0.0012989044189453125, 0.017730712890625, 0.0038394927978515625, 0.0174407958984375, 0.0226593017578125, 0.0225677490234375, 0.00909423828125, 0.005588531494140625, 0.027679443359375, 0.045928955078125, 0.74072265625, 0.0018606185913085938, 0.0031452178955078125, 0.1385498046875, 0.0264892578125, 0.0060577392578125, 0.032928466796875, 0.10052490234375, 0.008148193359375, 0.0105438232421875], "tokens": [284, 1022, 275, 319, 19927, 322, 7433, 1654, 372, 7596, 22410, 14564, 32, 275, 319, 5384, 319, 477, 753, 786, 275, 319, 1468, 322, 537, 7433, 275, 319, 477, 8119, 225, 35, 32, 36, 275, 569, 284, 562, 763, 739, 16218, 26, 40953, 30455, 16218, 786, 27, 301, 291, 7433, 280, 786]}
{"line_number": 39, "line_type": "original", "code": "        this(new ChiSquaredDistributionImpl(1.0));", "entropy": 1.0810546875, "is_bug_line": false, "sus_score": 0.4629100498862757, "per_token_entropy": [5.1640625, 5.81640625, 1.953125, 1.1669921875, 0.06390380859375, 3.5881996154785156e-05, 0.0014448165893554688, 6.461143493652344e-05, 0.0030536651611328125, 0.2352294921875, 0.330810546875, 0.3720703125, 0.00039649009704589844, 0.03497314453125], "tokens": [351, 458, 26, 890, 1884, 91, 30455, 16218, 3482, 26, 35, 32, 34, 876]}
{"line_number": 39, "line_type": "generated", "code": "\n    /**\n     * Returns true iff every element in the input array is positive.\n     * @param x input array\n     * @return true iff every element in the input array is positive\n     */\n    private boolean isPositive(double[] x) {\n        for", "entropy": 0.1990966796875, "is_bug_line": false, "sus_score": 0.4629100498862757, "per_token_entropy": [0.63330078125, 0.0845947265625, 0.052703857421875, 0.00031256675720214844, 1.3271484375, 0.71044921875, 0.0654296875, 1.8046875, 0.342041015625, 0.499755859375, 0.09246826171875, 0.379638671875, 0.01316070556640625, 0.02117919921875, 0.6025390625, 0.1036376953125, 0.079345703125, 0.0621337890625, 0.2333984375, 0.0068817138671875, 0.89697265625, 0.51806640625, 0.00984954833984375, 0.07366943359375, 0.01486968994140625, 0.0006895065307617188, 0.006053924560546875, 0.050140380859375, 0.34619140625, 0.051361083984375, 0.00797271728515625, 0.09088134765625, 0.0355224609375, 0.01493072509765625, 0.00795745849609375, 0.0019445419311523438, 0.026763916015625, 0.27490234375, 0.043914794921875, 0.01129150390625, 0.0921630859375, 0.13671875, 0.0005445480346679688, 0.01273345947265625, 0.0010576248168945312, 0.04443359375, 0.0299835205078125, 0.002742767333984375, 0.031494140625, 0.00835418701171875, 0.05609130859375, 0.3330078125], "tokens": [284, 1022, 275, 319, 3759, 861, 44778, 3638, 1994, 328, 322, 1509, 1417, 438, 11557, 32, 275, 319, 477, 753, 816, 1509, 1417, 275, 319, 477, 601, 861, 44778, 3638, 1994, 328, 322, 1509, 1417, 438, 11557, 275, 569, 284, 945, 1905, 438, 17991, 26, 2627, 1178, 816, 27, 301, 291, 436]}
{"line_number": 40, "line_type": "original", "code": "    }", "entropy": 4.37109375, "is_bug_line": false, "sus_score": 0.4629100498862757, "per_token_entropy": [3.037109375, 5.703125], "tokens": [264, 320]}
{"line_number": 40, "line_type": "generated", "code": "\n\n    /**\n     * Returns the distribution used to compute inference statistics.\n     * \n     * @return distribution used to compute inference statistics\n     */\n    public ChiSquaredDistribution getDistribution() {\n        return distribution;\n    }\n\n    /**\n     * Sets the distribution used to", "entropy": 0.18212890625, "is_bug_line": false, "sus_score": 0.4629100498862757, "per_token_entropy": [0.82666015625, 0.0264739990234375, 0.0345458984375, 0.000171661376953125, 1.11328125, 0.84716796875, 0.390625, 0.16650390625, 0.342529296875, 0.06585693359375, 0.1578369140625, 0.0033664703369140625, 0.0247955322265625, 0.03179931640625, 0.002567291259765625, 1.8486328125, 0.0002834796905517578, 0.0021724700927734375, 0.0038738250732421875, 0.8115234375, 0.6220703125, 0.0177459716796875, 0.0032196044921875, 0.01544189453125, 0.00434112548828125, 0.54443359375, 0.412841796875, 0.0128936767578125, 0.052154541015625, 0.015350341796875, 3.4570693969726562e-06, 2.491474151611328e-05, 7.510185241699219e-06, 0.0017452239990234375, 0.0060272216796875, 0.005138397216796875, 0.0020656585693359375, 0.0228424072265625, 0.00241851806640625, 0.1890869140625, 0.0006780624389648438, 0.03741455078125, 0.00011754035949707031, 0.2476806640625, 0.004253387451171875, 0.00771331787109375, 3.8623809814453125e-05, 0.4248046875, 0.002574920654296875, 0.03045654296875, 0.08135986328125, 0.0032596588134765625], "tokens": [446, 1022, 275, 319, 3759, 322, 7433, 1654, 372, 7596, 22410, 14564, 32, 275, 319, 5384, 319, 477, 601, 7433, 1654, 372, 7596, 22410, 14564, 275, 569, 284, 562, 1884, 91, 30455, 16218, 622, 16218, 346, 301, 291, 442, 7433, 45, 284, 320, 446, 1022, 275, 319, 9013, 322, 7433, 1654, 372]}
{"line_number": 49, "line_type": "original", "code": "        super();", "entropy": 4.50390625, "is_bug_line": false, "sus_score": 0.4629100498862757, "per_token_entropy": [5.29296875, 6.2109375, 2.01171875], "tokens": [351, 2599, 473]}
{"line_number": 49, "line_type": "generated", "code": "\n    /**\n     * Returns true iff all values are positive.\n     * @param values array to check\n     * @return true if all values are positive\n     */\n    private boolean isPositive(double[] values) {\n        for (int i = 0;", "entropy": 0.254638671875, "is_bug_line": false, "sus_score": 0.4629100498862757, "per_token_entropy": [0.427490234375, 0.07427978515625, 0.057891845703125, 0.00035452842712402344, 1.1962890625, 0.8857421875, 0.07843017578125, 0.626953125, 0.89453125, 0.908203125, 1.0458984375, 0.384765625, 0.11285400390625, 0.08526611328125, 0.29443359375, 0.0128936767578125, 0.912109375, 0.814453125, 0.75048828125, 1.1162109375, 0.1611328125, 0.02056884765625, 0.0007309913635253906, 0.01062774658203125, 0.044677734375, 0.671875, 0.33154296875, 0.05291748046875, 0.0377197265625, 0.08404541015625, 0.236572265625, 0.06903076171875, 0.0120849609375, 0.09552001953125, 0.10662841796875, 0.0005335807800292969, 0.0077362060546875, 0.0010833740234375, 0.037353515625, 0.02264404296875, 0.006504058837890625, 0.054351806640625, 0.0087890625, 0.0716552734375, 0.264404296875, 0.02197265625, 0.0982666015625, 0.007152557373046875, 0.007083892822265625, 0.006908416748046875, 0.0011806488037109375, 0.0070648193359375], "tokens": [284, 1022, 275, 319, 3759, 861, 44778, 1169, 2078, 884, 11557, 32, 275, 319, 477, 753, 2078, 1417, 372, 1505, 275, 319, 477, 601, 861, 415, 1169, 2078, 884, 11557, 275, 569, 284, 945, 1905, 438, 17991, 26, 2627, 1178, 2078, 27, 301, 291, 436, 308, 410, 595, 280, 225, 34, 45]}
{"line_number": 50, "line_type": "original", "code": "        setDistribution(x);", "entropy": 2.279296875, "is_bug_line": false, "sus_score": 0.4629100498862757, "per_token_entropy": [5.78125, 5.9609375, 0.07598876953125, 0.05645751953125, 1.7802734375, 0.0227203369140625], "tokens": [351, 739, 16218, 26, 106, 293]}
{"line_number": 50, "line_type": "generated", "code": "\n    /**\n     * Check that all values in the input array are positive.\n     * @param x input array\n     * @return true if all values are positive\n     */\n    private boolean isPositive(double[] x) {\n        boolean isPositive = true;", "entropy": 0.271484375, "is_bug_line": false, "sus_score": 0.4629100498862757, "per_token_entropy": [1.1181640625, 0.21484375, 0.058135986328125, 0.000492095947265625, 1.880859375, 0.422119140625, 0.365478515625, 0.67822265625, 0.291748046875, 0.2056884765625, 0.5625, 0.08282470703125, 0.00527191162109375, 0.412109375, 0.1920166015625, 0.0654296875, 0.010040283203125, 0.240478515625, 0.0095062255859375, 1.6669921875, 0.6240234375, 0.0169830322265625, 0.111572265625, 0.003406524658203125, 0.0005326271057128906, 0.035797119140625, 0.265869140625, 0.0697021484375, 0.461181640625, 0.09368896484375, 0.187744140625, 0.091064453125, 0.261962890625, 0.130859375, 0.01114654541015625, 0.07958984375, 0.11614990234375, 0.0006995201110839844, 0.00792694091796875, 0.0009050369262695312, 0.056427001953125, 0.0291748046875, 0.0031585693359375, 0.024261474609375, 0.0089263916015625, 0.056610107421875, 1.3505859375, 1.3798828125, 0.09320068359375, 0.00586700439453125, 0.05743408203125, 0.0002148151397705078], "tokens": [284, 1022, 275, 319, 3456, 688, 1169, 2078, 328, 322, 1509, 1417, 884, 11557, 32, 275, 319, 477, 753, 816, 1509, 1417, 275, 319, 477, 601, 861, 415, 1169, 2078, 884, 11557, 275, 569, 284, 945, 1905, 438, 17991, 26, 2627, 1178, 816, 27, 301, 291, 1905, 438, 17991, 280, 861, 45]}
{"line_number": 51, "line_type": "original", "code": "    }", "entropy": 5.109375, "is_bug_line": false, "sus_score": 0.4629100498862757, "per_token_entropy": [4.55859375, 5.66015625], "tokens": [264, 320]}
{"line_number": 51, "line_type": "generated", "code": "\n\n    /**\n     * Returns true iff all the values in the array are positive.\n     * @param values array to be checked\n     * @return true if all values are positive\n     */\n    private boolean isPositive(double[] values) {\n        for (int", "entropy": 0.289306640625, "is_bug_line": false, "sus_score": 0.4629100498862757, "per_token_entropy": [1.1533203125, 0.034332275390625, 0.04534912109375, 0.00018990039825439453, 1.2421875, 0.6162109375, 0.051361083984375, 0.5947265625, 0.91357421875, 0.2354736328125, 0.2442626953125, 0.0391845703125, 1.8486328125, 0.006298065185546875, 0.5654296875, 0.23291015625, 0.09613037109375, 0.05419921875, 0.26513671875, 0.007480621337890625, 1.2939453125, 0.64111328125, 0.337646484375, 0.6416015625, 0.407958984375, 0.0986328125, 0.01580810546875, 0.0008258819580078125, 0.0101165771484375, 0.0572509765625, 0.7626953125, 0.494140625, 0.51220703125, 0.04901123046875, 0.1400146484375, 0.4150390625, 0.08148193359375, 0.00921630859375, 0.09521484375, 0.09954833984375, 0.00047898292541503906, 0.008453369140625, 0.0006756782531738281, 0.0357666015625, 0.02105712890625, 0.006076812744140625, 0.051910400390625, 0.00787353515625, 0.033966064453125, 0.347900390625, 0.0194091796875, 0.0982666015625], "tokens": [446, 1022, 275, 319, 3759, 861, 44778, 1169, 322, 2078, 328, 322, 1417, 884, 11557, 32, 275, 319, 477, 753, 2078, 1417, 372, 526, 8137, 275, 319, 477, 601, 861, 415, 1169, 2078, 884, 11557, 275, 569, 284, 945, 1905, 438, 17991, 26, 2627, 1178, 2078, 27, 301, 291, 436, 308, 410]}
