{"line_number": 1179, "line_type": "original", "code": "        return \"(\" + real + \", \" + imaginary + \")\";", "entropy": 0.51123046875, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [4.2421875, 0.84130859375, 0.3701171875, 0.0099029541015625, 0.59521484375, 0.0186767578125, 0.51806640625, 0.00046253204345703125, 0.006443023681640625, 0.0027141571044921875, 0.0010242462158203125, 0.0043792724609375, 0.0389404296875], "tokens": [351, 442, 31063, 474, 4011, 474, 3003, 313, 474, 17463, 3172, 474, 34348]}
{"line_number": 1179, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [], "tokens": []}
{"line_number": 257, "line_type": "original", "code": "            return NaN;", "entropy": 5.53125, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [7.39453125, 1.1630859375, 10.21875, 3.34765625], "tokens": [1468, 442, 21644, 45]}
{"line_number": 257, "line_type": "generated", "code": "\n     * <p>\n     * Note that if the real and imaginary parts of two complex numbers\n     * are numerically equal, but the two real parts are\n     * {@code Double.NaN} and the imaginary parts are numerically equal,\n    ", "entropy": 0.200927734375, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [0.411865234375, 0.0604248046875, 0.619140625, 0.11431884765625, 0.023712158203125, 0.0169830322265625, 7.56978988647461e-05, 0.465576171875, 0.002105712890625, 0.365478515625, 0.1990966796875, 0.37548828125, 0.1844482421875, 0.0002351999282836914, -0.0, 0.026092529296875, 0.0762939453125, 0.2431640625, 0.48388671875, 0.002101898193359375, 0.10382080078125, 7.2479248046875e-05, 0.0212249755859375, 0.2196044921875, 1.6927719116210938e-05, 0.154541015625, 0.443359375, 0.047760009765625, 0.0028133392333984375, 1.2119140625, 1.3291015625, 0.060577392578125, 0.0133819580078125, 0.8037109375, 4.208087921142578e-05, 0.1451416015625, 0.010406494140625, 0.030792236328125, 5.257129669189453e-05, 0.025543212890625, 0.01666259765625, 0.1812744140625, 0.007568359375, 0.29052734375, 2.1457672119140625e-06, 0.003162384033203125, 0.0010538101196289062, 0.08721923828125, 4.887580871582031e-06, 1.26953125, 0.2459716796875, 0.0443115234375], "tokens": [275, 319, 333, 98, 48, 275, 319, 5830, 688, 415, 322, 4011, 461, 17463, 3172, 8710, 432, 3134, 8640, 7515, 275, 319, 884, 12738, 1247, 5040, 30, 1273, 322, 3134, 4011, 8710, 884, 275, 319, 3088, 687, 6934, 32, 11126, 111, 461, 322, 17463, 3172, 8710, 884, 12738, 1247, 5040, 30, 275]}
{"line_number": 583, "line_type": "original", "code": "        return this.add(I).divide(I.subtract(this)).log()", "entropy": 1.9755859375, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [3.884765625, 1.669921875, 2.2890625, 0.002132415771484375, 4.2265625, 0.0007200241088867188, 3.294921875, 0.019378662109375, 9.546875, 0.0004074573516845703, 2.388671875, 3.85546875, 2.470703125, 0.00010228157043457031, 0.00836181640625, 0.383056640625, 0.036346435546875, 1.486328125], "tokens": [351, 442, 458, 32, 669, 26, 59, 547, 23987, 26, 59, 32, 25330, 26, 578, 3427, 751, 346]}
{"line_number": 583, "line_type": "generated", "code": "\n     * <pre>\n     *  <code>\n     *   cosh(a + bi) = cosh(a)cos(b) + sinh(a)sin(b)i\n     *  </code>\n     * </pre", "entropy": 0.046844482421875, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [0.60302734375, 0.1217041015625, 1.0498046875, 0.366943359375, 0.0023975372314453125, 0.004558563232421875, 0.0011625289916992188, 0.029144287109375, 0.03790283203125, 0.0004076957702636719, 0.00040459632873535156, 0.00612640380859375, 0.00012636184692382812, 0.008941650390625, 0.0032176971435546875, 1.3709068298339844e-05, 0.012176513671875, 0.012054443359375, 0.0308990478515625, 0.001537322998046875, 0.00027108192443847656, 0.00021851062774658203, 0.0032825469970703125, 0.00628662109375, 3.3736228942871094e-05, 2.956390380859375e-05, 0.00012886524200439453, 0.10687255859375, 0.00018990039825439453, 7.402896881103516e-05, 1.8477439880371094e-05, 0.0013294219970703125, 0.0005497932434082031, 1.9550323486328125e-05, 9.202957153320312e-05, 0.002349853515625, 6.473064422607422e-05, 0.00021255016326904297, 7.033348083496094e-06, 0.00019991397857666016, 1.2516975402832031e-05, 0.0008254051208496094, 0.0023403167724609375, 9.500980377197266e-05, 0.00679779052734375, 0.0003447532653808594, 7.259845733642578e-05, 0.000720977783203125, 0.00014793872833251953, 0.0002944469451904297, 0.00867462158203125, 9.107589721679688e-05], "tokens": [275, 319, 333, 1001, 48, 275, 319, 225, 333, 687, 48, 275, 319, 261, 10712, 90, 26, 83, 474, 10789, 27, 280, 10712, 90, 26, 83, 27, 4952, 26, 84, 27, 474, 9812, 90, 26, 83, 27, 7102, 26, 84, 27, 91, 275, 319, 225, 576, 687, 48, 275, 319, 576, 1001]}
{"line_number": 256, "line_type": "original", "code": "        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {", "entropy": 1.0849609375, "is_bug_line": true, "sus_score": 0.3651483716701107, "per_token_entropy": [1.5458984375, 8.1640625, 0.669921875, 10.5078125, 0.01186370849609375, 1.55078125, 3.921875, 0.313232421875, 0.029144287109375, 0.35107421875, 0.1190185546875, 0.0017576217651367188, 1.724609375, 0.0071563720703125, 0.72900390625, 0.48583984375, 0.001766204833984375, 0.00173187255859375, 0.00030541419982910156, 0.00039267539978027344, 0.026397705078125, 0.032867431640625, 0.003971099853515625, 0.0008273124694824219, 0.01373291015625, 0.004665374755859375, 0.07928466796875, 0.07586669921875], "tokens": [351, 415, 308, 507, 22306, 32, 371, 6877, 346, 610, 225, 34, 32, 34, 962, 33482, 32, 371, 42364, 3172, 346, 610, 225, 34, 32, 34, 27, 301]}
{"line_number": 256, "line_type": "generated", "code": "\n     * numbers are considered to be equal.\n     * <p>\n     * Note that if the real and imaginary parts of two complex numbers\n     * are numerically equal, but the complex numbers are different objects,\n     * then they are not equal.", "entropy": 0.2958984375, "is_bug_line": true, "sus_score": 0.3651483716701107, "per_token_entropy": [1.466796875, 0.0166473388671875, 0.433837890625, 0.0003933906555175781, 0.00531005859375, 0.005100250244140625, 3.647804260253906e-05, 0.0004925727844238281, 0.342041015625, 0.311279296875, 0.0008006095886230469, 0.177734375, 0.0914306640625, 0.01233673095703125, 0.00644683837890625, 0.00010800361633300781, 1.0703125, 0.0042266845703125, 0.541015625, 0.321044921875, 0.321044921875, 0.11114501953125, 0.000316619873046875, -0.0, 0.0198516845703125, 0.11907958984375, 0.1114501953125, 0.1466064453125, 0.0031948089599609375, 0.1451416015625, 0.0001926422119140625, 0.042755126953125, 0.330078125, 1.2516975402832031e-05, 0.10345458984375, 0.57568359375, 0.0830078125, 0.003864288330078125, 2.4453125, 0.086669921875, 0.028594970703125, 1.7353515625, 1.68359375, 0.30517578125, 0.002613067626953125, 0.00019228458404541016, 1.099609375, 0.1982421875, 0.2998046875, 0.259521484375, 0.315185546875, 0.00215911865234375], "tokens": [275, 319, 7515, 884, 11870, 372, 526, 5040, 32, 275, 319, 333, 98, 48, 275, 319, 5830, 688, 415, 322, 4011, 461, 17463, 3172, 8710, 432, 3134, 8640, 7515, 275, 319, 884, 12738, 1247, 5040, 30, 1273, 322, 8640, 7515, 884, 3449, 4684, 30, 275, 319, 1615, 2953, 884, 646, 5040, 32]}
{"line_number": 579, "line_type": "original", "code": "        if (isNaN) {", "entropy": 0.9609375, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [2.88671875, 2.25390625, 0.08160400390625, 0.2484130859375, 0.267822265625, 0.027069091796875], "tokens": [351, 415, 308, 26821, 27, 301]}
{"line_number": 579, "line_type": "generated", "code": "\n     * Compute the\n     * <a href=\"http://mathworld.wolfram.com/HyperbolicCosine.html\" TARGET=\"_top\">\n     * hyperbolic cosine</a>\n     * of this complex number.\n     *", "entropy": 0.0731201171875, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [1.6640625, 0.083984375, 0.1910400390625, 0.0020961761474609375, 0.08770751953125, 0.0015420913696289062, 0.0009860992431640625, 0.0004374980926513672, 0.0033321380615234375, 0.00725555419921875, 0.000766754150390625, 9.453296661376953e-05, 0.0015211105346679688, 1.0848045349121094e-05, 1.7881393432617188e-06, 0.00016367435455322266, 5.125999450683594e-06, 2.7418136596679688e-06, 0.00018584728240966797, 1.633167266845703e-05, 0.0002682209014892578, 0.445556640625, 5.4836273193359375e-06, 1.430511474609375e-05, 0.302001953125, 9.5367431640625e-07, 0.0002765655517578125, 1.6808509826660156e-05, 0.0055084228515625, 0.2021484375, 0.003887176513671875, 0.0009288787841796875, 0.00024580955505371094, 0.00908660888671875, 6.520748138427734e-05, 0.0006799697875976562, 3.838539123535156e-05, -0.0, 0.0001386404037475586, 2.0265579223632812e-06, 0.00989532470703125, 3.933906555175781e-05, 0.0005183219909667969, 0.76123046875, 0.000823974609375, 0.0037860870361328125, 0.004100799560546875, 0.0019350051879882812, 2.7060508728027344e-05, 0.0013647079467773438, 0.0033092498779296875, 0.0001220703125], "tokens": [275, 319, 12836, 322, 275, 319, 333, 83, 976, 347, 525, 555, 3812, 5860, 32, 105, 362, 43579, 32, 508, 33, 20562, 84, 2073, 18015, 482, 32, 916, 20, 21207, 5617, 1393, 413, 275, 319, 15223, 84, 2073, 10712, 482, 377, 83, 48, 275, 319, 432, 458, 8640, 1451, 32, 275, 319]}
{"line_number": 251, "line_type": "original", "code": "        MathUtils.checkNotNull(divisor);", "entropy": 1.986328125, "is_bug_line": false, "sus_score": 0.34299717028501764, "per_token_entropy": [5.875, 9.1875, 1.7138671875, 0.00933074951171875, 0.17724609375, 0.0009822845458984375, 0.8759765625, 0.0025882720947265625, 0.0260162353515625], "tokens": [351, 4175, 2755, 32, 42698, 26, 507, 22306, 293]}
{"line_number": 251, "line_type": "generated", "code": "\n    /**\n     * Returns a {@code Complex} whose value is\n     * <pre>\n     *    <code>\n     *      this<sup>exponent</sup>\n     *    </code>\n     * </pre>\n     *\n     * @param", "entropy": 0.1788330078125, "is_bug_line": false, "sus_score": 0.34299717028501764, "per_token_entropy": [0.60888671875, 0.043914794921875, 0.032135009765625, 9.799003601074219e-05, 0.284912109375, 0.53173828125, 0.036468505859375, 0.0080718994140625, 0.0005445480346679688, 0.00614166259765625, 0.0007810592651367188, 0.004032135009765625, 0.0007815361022949219, 0.68359375, 0.0008988380432128906, 0.25048828125, 1.3701171875, 0.007587432861328125, 0.0011816024780273438, 0.00010824203491210938, 1.0400390625, 0.06927490234375, 0.0016965866088867188, 0.035491943359375, 0.13916015625, 0.00012981891632080078, 1.8408203125, 0.4443359375, 0.0780029296875, 0.00318145751953125, 0.0158538818359375, 0.96337890625, 0.0014104843139648438, 0.00034928321838378906, 0.05810546875, 0.1602783203125, 0.00017392635345458984, 0.0008635520935058594, 0.0012502670288085938, 0.00036144256591796875, 0.0230255126953125, 8.630752563476562e-05, 0.0014066696166992188, 0.027557373046875, 7.271766662597656e-06, 0.00801849365234375, 0.0016345977783203125, 0.0003554821014404297, 0.3720703125, 0.00015866756439208984, 0.1314697265625, 0.0009474754333496094], "tokens": [284, 1022, 275, 319, 3759, 312, 3088, 687, 19915, 111, 13696, 786, 438, 275, 319, 333, 1001, 48, 275, 319, 264, 333, 687, 48, 275, 319, 647, 458, 46, 5540, 48, 28323, 377, 5540, 48, 275, 319, 264, 576, 687, 48, 275, 319, 576, 1001, 48, 275, 319, 275, 319, 477, 753]}
{"line_number": 252, "line_type": "original", "code": "        if (isNaN || divisor.isNaN) {", "entropy": 1.3916015625, "is_bug_line": false, "sus_score": 0.34299717028501764, "per_token_entropy": [4.18359375, 2.4609375, 0.14453125, 2.3828125, 0.1944580078125, 2.37109375, 0.150390625, 0.0024013519287109375, 1.9873046875, 0.035491943359375], "tokens": [351, 415, 308, 26821, 1276, 33482, 32, 26821, 27, 301]}
{"line_number": 252, "line_type": "generated", "code": "\n    /**\n     * Returns the <a href=\"http://mathworld.wolfram.com/Conjugate.html\">\n     * complex conjugate</a> of this complex number.\n     *\n     * @return the complex conjug", "entropy": 0.1583251953125, "is_bug_line": false, "sus_score": 0.34299717028501764, "per_token_entropy": [0.93798828125, 0.12060546875, 0.05987548828125, 0.000118255615234375, 0.379638671875, 1.212890625, 1.4462890625, 0.02813720703125, 0.1429443359375, 0.0193328857421875, 0.0013532638549804688, 6.890296936035156e-05, 0.113037109375, 2.47955322265625e-05, 1.1920928955078125e-07, 0.00032806396484375, 4.220008850097656e-05, 4.029273986816406e-05, 0.0015516281127929688, 1.6689300537109375e-06, 3.314018249511719e-05, 0.6162109375, 3.731250762939453e-05, 1.1086463928222656e-05, 9.989738464355469e-05, 0.00421142578125, 8.940696716308594e-06, 0.001636505126953125, 0.01166534423828125, 1.5735626220703125e-05, 0.8671875, 9.119510650634766e-05, 9.047985076904297e-05, 0.0006303787231445312, 0.00215911865234375, 0.0001499652862548828, 0.0014448165893554688, 0.008392333984375, 0.1964111328125, 0.480224609375, 0.005451202392578125, 0.000690460205078125, 0.158203125, 0.0006303787231445312, 1.01171875, 6.246566772460938e-05, 0.047515869140625, 0.001003265380859375, 0.326904296875, 0.0298004150390625, 0.0001857280731201172, 8.022785186767578e-05], "tokens": [284, 1022, 275, 319, 3759, 322, 333, 83, 976, 347, 525, 555, 3812, 5860, 32, 105, 362, 43579, 32, 508, 33, 609, 92, 888, 332, 32, 916, 413, 275, 319, 8640, 18333, 888, 332, 377, 83, 48, 432, 458, 8640, 1451, 32, 275, 319, 275, 319, 477, 601, 322, 8640, 18333, 888]}
{"line_number": 268, "line_type": "original", "code": "            double q = c / d;", "entropy": 3.546875, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [8.9921875, 6.8984375, 6.15234375, 0.20654296875, 2.958984375, 2.775390625, 0.325439453125, 0.0601806640625], "tokens": [1468, 2064, 2678, 280, 281, 517, 343, 45]}
{"line_number": 268, "line_type": "generated", "code": "\n    public boolean equals(Object other) {\n        if (this == other) {\n            return true;\n        }\n        if (other == null ||!(other instanceof Complex)) {\n            return false;\n        }\n        final Complex rhs = (Complex) other;", "entropy": 0.0762939453125, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [0.099609375, 0.02178955078125, 0.00331878662109375, 0.0005664825439453125, 0.01467132568359375, 0.07891845703125, 0.0019779205322265625, 0.0187530517578125, 0.01708984375, 0.12939453125, 0.01360321044921875, 0.0248870849609375, 0.05914306640625, 0.01322174072265625, 0.00025010108947753906, 0.02685546875, 0.01351165771484375, 0.018585205078125, 0.0164642333984375, 0.0014772415161132812, 0.0006709098815917969, 0.0025882720947265625, 0.00016367435455322266, 0.46435546875, 0.004222869873046875, 0.0390625, 0.034759521484375, 0.77978515625, 0.00033283233642578125, 0.424560546875, 0.103759765625, 0.01323699951171875, 0.0008454322814941406, 0.045745849609375, 0.0264434814453125, 0.004180908203125, 0.005397796630859375, 0.0006213188171386719, 0.0003814697265625, 0.00025773048400878906, 0.00464630126953125, 0.0004138946533203125, 0.2685546875, 0.791015625, 0.001678466796875, 0.349853515625, 0.0021762847900390625, 0.0010690689086914062, 0.00013875961303710938, 0.0022220611572265625, 0.020965576171875, 0.0005269050598144531], "tokens": [284, 562, 1905, 12423, 26, 959, 1604, 27, 301, 291, 415, 308, 578, 610, 1604, 27, 301, 324, 442, 861, 45, 291, 320, 291, 415, 308, 2455, 610, 744, 1276, 13685, 2455, 5113, 19915, 490, 301, 324, 442, 901, 45, 291, 320, 291, 1158, 19915, 9322, 280, 308, 12267, 27, 1604, 45]}
{"line_number": 269, "line_type": "original", "code": "            double denominator = c * q + d;", "entropy": 3.619140625, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [7.515625, 5.23828125, 13.3671875, 0.289794921875, 4.08203125, 0.3212890625, 5.22265625, 0.037353515625, 0.029693603515625, 0.0762939453125], "tokens": [1468, 2064, 39920, 280, 281, 319, 2678, 474, 343, 45]}
{"line_number": 269, "line_type": "generated", "code": "\n        if (other == this) {\n            return true;\n        }\n        if (other instanceof Complex) {\n            final Complex rhs = (Complex) other;\n            if (rhs.isNaN) {\n                return isNaN;\n            }\n            return real == rhs", "entropy": 0.1434326171875, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [0.14208984375, 0.1839599609375, 0.0697021484375, 1.22265625, 0.1512451171875, 0.01436614990234375, 0.01375579833984375, 0.0089111328125, 0.02374267578125, 0.0125274658203125, 0.0012493133544921875, 0.0005168914794921875, 0.00533294677734375, 0.0001188516616821289, 0.4560546875, 0.007537841796875, 0.060211181640625, 0.06597900390625, 0.376220703125, 0.01194000244140625, 0.04486083984375, 0.0025348663330078125, 0.0858154296875, 0.779296875, 0.0022869110107421875, 0.266357421875, 0.0028667449951171875, 0.0015573501586914062, 8.20159912109375e-05, 0.00202178955078125, 0.025299072265625, 0.0002149343490600586, 0.116943359375, 0.3330078125, 0.057952880859375, 0.267822265625, 0.0017747879028320312, 0.1251220703125, 0.1793212890625, 0.001941680908203125, 0.01068878173828125, 0.0220794677734375, 0.331298828125, 2.288818359375e-05, 0.010833740234375, 0.008392333984375, 0.0007252693176269531, 0.11907958984375, 0.396484375, 1.4150390625, 0.0162353515625, 0.0008716583251953125], "tokens": [291, 415, 308, 2455, 610, 458, 27, 301, 324, 442, 861, 45, 291, 320, 291, 415, 308, 2455, 5113, 19915, 27, 301, 324, 1158, 19915, 9322, 280, 308, 12267, 27, 1604, 45, 324, 415, 308, 14312, 32, 26821, 27, 301, 400, 442, 438, 11126, 45, 324, 320, 324, 442, 4011, 610, 9322]}
{"line_number": 270, "line_type": "original", "code": "            return createComplex((real * q + imaginary) / denominator,", "entropy": 2.09765625, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [4.1328125, 0.1058349609375, 13.1796875, 0.244873046875, 4.58984375, 0.140625, 2.65234375, 4.98046875, 0.27685546875, 0.7177734375, 0.0038051605224609375, 0.346435546875, 0.0194854736328125, 0.040130615234375, 0.02978515625], "tokens": [1468, 442, 1487, 12267, 1162, 4543, 319, 2678, 474, 17463, 3172, 27, 517, 39920, 30]}
{"line_number": 270, "line_type": "generated", "code": "\n            return true;\n        }\n        if (other == null ||!(other instanceof Complex)) {\n            return false;\n        }\n        final Complex rhs = (Complex) other;\n        if (isNaN) {\n            return rhs.isNaN;\n        }\n        if (", "entropy": 0.11871337890625, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [0.181640625, 0.06561279296875, 0.07489013671875, 0.0214385986328125, 0.06158447265625, 0.0042877197265625, 0.265380859375, 0.004146575927734375, 0.028564453125, 0.022613525390625, 0.85009765625, 0.0006966590881347656, 0.4365234375, 0.11083984375, 0.0160675048828125, 0.0010061264038085938, 0.0159759521484375, 0.0229339599609375, 0.005657196044921875, 0.1351318359375, 0.0008397102355957031, 0.0003871917724609375, 0.0008473396301269531, 0.0113983154296875, 0.0006113052368164062, 0.23095703125, 0.572265625, 0.0015611648559570312, 0.253662109375, 0.00254058837890625, 0.0013027191162109375, 0.00014150142669677734, 0.003414154052734375, 0.03375244140625, 0.0002751350402832031, 0.29248046875, 0.1534423828125, 0.06298828125, 0.59521484375, 0.57666015625, 0.002552032470703125, 0.16650390625, 0.09771728515625, 0.037139892578125, 0.00010156631469726562, 0.0006189346313476562, 0.05914306640625, 0.04052734375, 0.0001652240753173828, 0.2232666015625, 0.411865234375, 0.0127105712890625], "tokens": [324, 442, 861, 45, 291, 320, 291, 415, 308, 2455, 610, 744, 1276, 13685, 2455, 5113, 19915, 490, 301, 324, 442, 901, 45, 291, 320, 291, 1158, 19915, 9322, 280, 308, 12267, 27, 1604, 45, 291, 415, 308, 26821, 27, 301, 324, 442, 9322, 32, 26821, 45, 291, 320, 291, 415, 308]}
{"line_number": 747, "line_type": "original", "code": "            return NaN;", "entropy": 5.2265625, "is_bug_line": false, "sus_score": 0.2672612419124244, "per_token_entropy": [8.90625, 5.0, 6.8359375, 0.160400390625], "tokens": [1468, 442, 21644, 45]}
{"line_number": 747, "line_type": "generated", "code": "\n     * where {@code cos} and {@code sin} are {@link Math#cos} and\n     * {@link Math#sin}, respectively.\n     * <br/>\n     * Returns {@link Complex#NaN} if either real or imaginary part of", "entropy": 0.18505859375, "is_bug_line": false, "sus_score": 0.2672612419124244, "per_token_entropy": [0.1673583984375, 0.04266357421875, 1.7568359375, 2.103515625, 0.022552490234375, 1.912109375, 0.059417724609375, 0.444091796875, 0.00667572021484375, 0.01074981689453125, 0.0584716796875, 0.0088653564453125, 0.06964111328125, 0.650390625, 0.0008502006530761719, 0.97412109375, 0.0005421638488769531, 0.00858306884765625, 0.01617431640625, 0.028961181640625, 0.032623291015625, 4.5299530029296875e-06, 0.005462646484375, 0.00036907196044921875, 0.01194000244140625, 0.00011992454528808594, 6.139278411865234e-05, 0.2734375, 0.009033203125, 0.35986328125, 0.0386962890625, 0.00021588802337646484, 0.25341796875, 0.0435791015625, 0.0156402587890625, 0.0023021697998046875, 1.1324882507324219e-05, 0.11737060546875, 0.0330810546875, 0.0181732177734375, 0.0233612060546875, 0.0002949237823486328, 0.002185821533203125, 0.0003554821014404297, 0.0022487640380859375, 0.00716400146484375, 0.00788116455078125, 0.0003426074981689453, 0.0003635883331298828, 3.5762786865234375e-07, 0.002719879150390625, 0.0181427001953125], "tokens": [275, 319, 2154, 3088, 687, 10712, 111, 461, 3088, 687, 9812, 111, 884, 3088, 1204, 4175, 21, 4952, 111, 461, 275, 319, 3088, 1204, 4175, 21, 7102, 835, 22781, 32, 275, 319, 333, 839, 2039, 275, 319, 3759, 3088, 1204, 19915, 21, 11126, 111, 415, 3154, 4011, 556, 17463, 3172, 1742, 432]}
{"line_number": 273, "line_type": "original", "code": "            double q = d / c;", "entropy": 2.6875, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [4.74609375, 4.01953125, 8.0625, 0.5908203125, 2.66015625, 0.986328125, 0.352783203125, 0.07977294921875], "tokens": [1468, 2064, 2678, 280, 343, 517, 281, 45]}
{"line_number": 273, "line_type": "generated", "code": "\n            return (real == ((Complex) other).real) &&\n                   (imaginary == ((Complex) other).imaginary);\n        }\n        return false;\n    }\n\n    /**\n     * Returns {@code true} iff the values of both real and imaginary", "entropy": 0.15673828125, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [0.2301025390625, 0.78857421875, 1.6435546875, 0.2320556640625, 0.051177978515625, 0.99169921875, 0.00347137451171875, 0.006900787353515625, 0.1593017578125, 0.0005350112915039062, 0.365966796875, 0.170166015625, 0.308837890625, 0.242431640625, 0.004486083984375, 0.0043182373046875, 0.0006160736083984375, 0.0205078125, 0.0107879638671875, 0.00011050701141357422, 0.0005717277526855469, 0.0048828125, 9.97781753540039e-05, 0.006488800048828125, 6.73532485961914e-05, 0.01403045654296875, 0.1190185546875, 0.0020008087158203125, 0.09576416015625, 0.006664276123046875, 0.0025882720947265625, 0.00036072731018066406, 0.031829833984375, 0.0020313262939453125, 0.09185791015625, 0.036407470703125, 0.01541900634765625, 5.2928924560546875e-05, 1.078125, 0.23681640625, 0.0007500648498535156, 0.0089263916015625, 0.0002551078796386719, 0.475341796875, 0.059112548828125, 0.016448974609375, 0.0799560546875, 0.10888671875, 0.421142578125, 0.00043082237243652344, 0.0003199577331542969, 1.1920928955078125e-07], "tokens": [324, 442, 308, 4543, 610, 1833, 12267, 27, 1604, 547, 4543, 27, 962, 4511, 308, 17792, 3172, 610, 1833, 12267, 27, 1604, 547, 17792, 3172, 293, 291, 320, 291, 442, 901, 45, 284, 320, 446, 1022, 275, 319, 3759, 3088, 687, 861, 111, 44778, 322, 2078, 432, 4335, 4011, 461, 17463, 3172]}
{"line_number": 274, "line_type": "original", "code": "            double denominator = d * q + c;", "entropy": 3.48046875, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [4.39453125, 6.578125, 12.4921875, 0.054473876953125, 4.5234375, 1.021484375, 4.3359375, 0.046112060546875, 0.141845703125, 1.2158203125], "tokens": [1468, 2064, 39920, 280, 343, 319, 2678, 474, 281, 45]}
{"line_number": 274, "line_type": "generated", "code": "\n            return (real == c.real) && (imaginary == c.imaginary);\n        }\n        return false;\n    }\n\n    /**\n     * Get a hashCode for the complex number.\n     * Any {@code NaN} value in real or imaginary", "entropy": 0.12274169921875, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [0.1597900390625, 0.3251953125, 0.576171875, 0.59375, 0.048553466796875, 0.01381683349609375, 0.0009741783142089844, 0.5205078125, 0.18603515625, 0.031341552734375, 0.298828125, 0.006702423095703125, 0.0012598037719726562, 0.01357269287109375, 0.006160736083984375, 0.00013756752014160156, 0.0033817291259765625, 8.845329284667969e-05, 0.014801025390625, 0.046600341796875, 0.0006079673767089844, 0.1082763671875, 0.0106048583984375, 0.002887725830078125, 0.0003104209899902344, 0.0197601318359375, 0.0014867782592773438, 0.08447265625, 0.03997802734375, 0.01525115966796875, 7.784366607666016e-05, 0.9873046875, 0.0888671875, 0.06072998046875, 0.00012123584747314453, 0.1375732421875, 0.0391845703125, 0.025848388671875, 0.052978515625, 0.10693359375, 0.00043773651123046875, 0.193359375, 0.83251953125, 0.0023288726806640625, 0.5302734375, 0.021331787109375, 0.09893798828125, 0.05084228515625, 0.004558563232421875, 0.01763916015625, 0.00015401840209960938, 1.6689300537109375e-06], "tokens": [324, 442, 308, 4543, 610, 281, 32, 4543, 27, 962, 308, 17792, 3172, 610, 281, 32, 17792, 3172, 293, 291, 320, 291, 442, 901, 45, 284, 320, 446, 1022, 275, 319, 1390, 312, 17772, 436, 322, 8640, 1451, 32, 275, 319, 6204, 3088, 687, 21644, 111, 786, 328, 4011, 556, 17463, 3172]}
{"line_number": 275, "line_type": "original", "code": "            return createComplex((imaginary * q + real) / denominator,", "entropy": 2.66796875, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [4.703125, 0.56884765625, 11.25, 0.12548828125, 5.98828125, 4.73046875, 0.0024776458740234375, 3.462890625, 6.82421875, 1.9755859375, 0.01873779296875, 0.046630859375, 0.0223388671875, 0.055206298828125, 0.2666015625], "tokens": [1468, 442, 1487, 12267, 1162, 17792, 3172, 319, 2678, 474, 4011, 27, 517, 39920, 30]}
{"line_number": 275, "line_type": "generated", "code": "\n                return isNaN;\n            }\n            return (real == c.real) && (imaginary == c.imaginary);\n        }\n        return false;\n    }\n\n    /**\n     * Get a hashCode for the complex number.\n     * Any two objects which", "entropy": 0.1837158203125, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [0.194580078125, 0.145751953125, 1.044921875, 0.00014531612396240234, 0.14990234375, 0.271728515625, 0.0031642913818359375, 0.419921875, 0.453369140625, 0.63037109375, 1.0517578125, 0.0262908935546875, 0.0008521080017089844, 0.00014984607696533203, 0.51953125, 0.1119384765625, 0.01995849609375, 0.70703125, 0.00241851806640625, 0.00014710426330566406, 0.0163726806640625, 0.003505706787109375, 8.380413055419922e-05, 0.0018711090087890625, 2.276897430419922e-05, 0.005405426025390625, 0.0372314453125, 0.0007548332214355469, 0.0584716796875, 0.004901885986328125, 0.003017425537109375, 0.00028967857360839844, 0.024566650390625, 0.0014171600341796875, 0.0872802734375, 0.03680419921875, 0.0150604248046875, 5.924701690673828e-05, 0.8818359375, 0.0894775390625, 0.055877685546875, 0.0001671314239501953, 0.1431884765625, 0.03851318359375, 0.02667236328125, 0.04522705078125, 0.1103515625, 0.00045418739318847656, 0.252197265625, 0.98291015625, 0.623046875, 0.253662109375], "tokens": [400, 442, 438, 11126, 45, 324, 320, 324, 442, 308, 4543, 610, 281, 32, 4543, 27, 962, 308, 17792, 3172, 610, 281, 32, 17792, 3172, 293, 291, 320, 291, 442, 901, 45, 284, 320, 446, 1022, 275, 319, 1390, 312, 17772, 436, 322, 8640, 1451, 32, 275, 319, 6204, 3134, 4684, 1510]}
{"line_number": 260, "line_type": "original", "code": "        if (divisor.isInfinite() && !isInfinite()) {", "entropy": 2.212890625, "is_bug_line": false, "sus_score": 0.20412414523193154, "per_token_entropy": [3.287109375, 5.328125, 1.0546875, 12.2578125, 0.03021240234375, 1.189453125, 4.75, 0.0012073516845703125, 1.7998046875, 0.3037109375, 1.208984375, 1.744140625, 0.00012028217315673828, 0.05377197265625, 0.166259765625], "tokens": [351, 415, 308, 507, 22306, 32, 28823, 11949, 346, 962, 653, 28823, 11949, 1157, 301]}
{"line_number": 260, "line_type": "generated", "code": "\n     * <p>\n     * Note that if the real and imaginary parts are both zero,\n     * the complex number is <i>only</i> equal to the same complex number.\n     * This is a counter-intuitive result,", "entropy": 0.297119140625, "is_bug_line": false, "sus_score": 0.20412414523193154, "per_token_entropy": [0.92041015625, 0.032867431640625, 1.2177734375, 0.2841796875, 0.03582763671875, 0.006805419921875, 7.56978988647461e-05, 0.1507568359375, 0.016143798828125, 0.370361328125, 0.053314208984375, 0.2447509765625, 0.27099609375, 0.00011944770812988281, -0.0, 0.0185699462890625, 0.7587890625, 0.323974609375, 0.5703125, 0.0007586479187011719, 0.92138671875, 0.0004146099090576172, 0.0670166015625, 1.6669921875, 0.003986358642578125, 0.3740234375, 0.423095703125, 0.08514404296875, 0.00028634071350097656, 0.42822265625, 0.0017414093017578125, 0.00017559528350830078, 0.0007958412170410156, 0.0634765625, 0.0007848739624023438, 0.1363525390625, 0.7041015625, 0.365234375, 0.335693359375, 0.7431640625, 0.011016845703125, 0.0002148151397705078, 1.759765625, 0.3349609375, 0.027740478515625, 1.51953125, 0.025146484375, 0.00643157958984375, 7.987022399902344e-06, 8.344650268554688e-07, 0.152099609375, 0.00707244873046875], "tokens": [275, 319, 333, 98, 48, 275, 319, 5830, 688, 415, 322, 4011, 461, 17463, 3172, 8710, 884, 4335, 5934, 30, 275, 319, 322, 8640, 1451, 438, 333, 91, 48, 2585, 377, 91, 48, 5040, 372, 322, 2432, 8640, 1451, 32, 275, 319, 1348, 438, 312, 7022, 31, 410, 103, 4823, 1056, 30]}
{"line_number": 264, "line_type": "original", "code": "        final double c = divisor.getReal();", "entropy": 3.353515625, "is_bug_line": false, "sus_score": 0.20412414523193154, "per_token_entropy": [2.615234375, 17.484375, 0.5771484375, 4.75, 1.51953125, 5.32421875, 0.01261138916015625, 0.052825927734375, 1.1767578125, 0.032379150390625], "tokens": [351, 1158, 2064, 281, 280, 33482, 32, 371, 6877, 473]}
{"line_number": 264, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.20412414523193154, "per_token_entropy": [], "tokens": []}
{"line_number": 265, "line_type": "original", "code": "        final double d = divisor.getImaginary();", "entropy": 2.17578125, "is_bug_line": false, "sus_score": 0.20412414523193154, "per_token_entropy": [4.15234375, 4.0234375, 0.732421875, 6.01171875, 0.2144775390625, 3.06640625, 0.0377197265625, 0.2052001953125, 5.46484375, 0.0001627206802368164, 0.0250396728515625], "tokens": [351, 1158, 2064, 343, 280, 33482, 32, 371, 42364, 3172, 473]}
{"line_number": 265, "line_type": "generated", "code": "\n     */\n    public boolean equals(Object other) {\n        if (this == other) {\n            return true;\n        }\n\n        if (other == null) {\n            return false;\n        }\n\n        if (getClass()!= other.getClass()) {\n            return", "entropy": 0.11883544921875, "is_bug_line": false, "sus_score": 0.20412414523193154, "per_token_entropy": [0.552734375, 0.165771484375, 0.0191802978515625, 0.59814453125, 0.0033740997314453125, 0.0011281967163085938, 0.0052337646484375, 0.04083251953125, 0.0011720657348632812, 0.00955963134765625, 0.007598876953125, 0.1759033203125, 0.028289794921875, 0.0231781005859375, 0.06488037109375, 0.00955963134765625, 0.00015544891357421875, 0.031646728515625, 0.01033782958984375, 0.013031005859375, 0.0174407958984375, 0.00110626220703125, 0.0007224082946777344, 0.00505828857421875, 0.00027823448181152344, 0.94287109375, 0.00565338134765625, 0.0251007080078125, 0.06280517578125, 0.87158203125, 0.0017871856689453125, 0.6650390625, 0.0012521743774414062, 0.005214691162109375, 0.0008349418640136719, 0.0001971721649169922, 0.00018024444580078125, 0.00200653076171875, 8.738040924072266e-05, 0.07427978515625, 0.0728759765625, 0.53564453125, 1.080078125, 0.0104522705078125, 0.01345062255859375, 0.00566864013671875, 3.898143768310547e-05, 0.00018346309661865234, 0.0033321380615234375, 0.00223541259765625, 0.0050811767578125, 0.004207611083984375], "tokens": [275, 569, 284, 562, 1905, 12423, 26, 959, 1604, 27, 301, 291, 415, 308, 578, 610, 1604, 27, 301, 324, 442, 861, 45, 291, 320, 584, 415, 308, 2455, 610, 744, 27, 301, 324, 442, 901, 45, 291, 320, 584, 415, 308, 9700, 346, 863, 1604, 32, 9700, 1157, 301, 324, 442]}
{"line_number": 267, "line_type": "original", "code": "        if (FastMath.abs(c) < FastMath.abs(d)) {", "entropy": 1.1962890625, "is_bug_line": false, "sus_score": 0.20412414523193154, "per_token_entropy": [5.46875, 1.0986328125, 0.279541015625, 5.71484375, 0.0008869171142578125, 0.0005254745483398438, 0.221435546875, 0.0169525146484375, 4.33203125, 1.779296875, 2.2109375, 1.1083984375, 2.0623207092285156e-05, 5.125999450683594e-05, 0.1671142578125, 0.00464630126953125, 0.094482421875, 0.035247802734375, 0.1942138671875], "tokens": [351, 415, 308, 12200, 5717, 32, 3596, 26, 85, 27, 333, 15938, 5717, 32, 3596, 26, 86, 490, 301]}
{"line_number": 267, "line_type": "generated", "code": "\n        if (this == other) {\n            return true;\n        }\n        if (other == null ||!(other instanceof Complex)) {\n            return false;\n        }\n        final Complex rhs = (Complex) other;\n        if (isNaN || rhs.isNaN)", "entropy": 0.2020263671875, "is_bug_line": false, "sus_score": 0.20412414523193154, "per_token_entropy": [0.92236328125, 0.97412109375, 0.198486328125, 1.2236328125, 0.065185546875, 0.01520538330078125, 0.0809326171875, 0.0078582763671875, 0.030792236328125, 0.0208282470703125, 0.0021991729736328125, 0.0005173683166503906, 0.0135650634765625, 0.00017642974853515625, 0.335205078125, 0.049591064453125, 0.11065673828125, 0.08587646484375, 0.441162109375, 0.004039764404296875, 0.261474609375, 0.137939453125, 0.036956787109375, 0.00131988525390625, 0.027679443359375, 0.038421630859375, 0.004093170166015625, 0.007343292236328125, 0.0005307197570800781, 0.00027823448181152344, 0.0002434253692626953, 0.00621795654296875, 0.0008816719055175781, 0.4541015625, 0.65625, 0.0031986236572265625, 0.316650390625, 0.0038967132568359375, 0.0016355514526367188, 0.0001310110092163086, 0.001491546630859375, 0.0277557373046875, 0.0027942657470703125, 0.287109375, 0.280517578125, 0.106201171875, 1.29296875, 1.904296875, 0.0185699462890625, 0.0001806020736694336, 0.00039076805114746094, 0.04400634765625], "tokens": [291, 415, 308, 578, 610, 1604, 27, 301, 324, 442, 861, 45, 291, 320, 291, 415, 308, 2455, 610, 744, 1276, 13685, 2455, 5113, 19915, 490, 301, 324, 442, 901, 45, 291, 320, 291, 1158, 19915, 9322, 280, 308, 12267, 27, 1604, 45, 291, 415, 308, 26821, 1276, 9322, 32, 26821, 27]}
{"line_number": 419, "line_type": "original", "code": "            return NaN;", "entropy": 3.662109375, "is_bug_line": false, "sus_score": 0.20412414523193154, "per_token_entropy": [7.62109375, 4.75, 1.94140625, 0.339599609375], "tokens": [1468, 442, 21644, 45]}
{"line_number": 419, "line_type": "generated", "code": "\n     * Returns a {@code Complex} whose value is {@code this / divisor}.\n     * Implements preliminary checks for {@code NaN} and infinity followed by\n     * the definitional formula:\n     * <pre>\n     *  <code>\n    ", "entropy": 0.136962890625, "is_bug_line": false, "sus_score": 0.20412414523193154, "per_token_entropy": [1.21484375, 0.115966796875, 0.233154296875, 0.1923828125, 0.0673828125, 0.0045166015625, 0.00033855438232421875, 0.00806427001953125, 9.441375732421875e-05, 0.00213623046875, 0.0011205673217773438, 0.93017578125, 0.0007262229919433594, 0.250732421875, 1.103515625, 1.205078125, 0.00388336181640625, 0.07177734375, 0.0005140304565429688, 0.0225830078125, 0.19384765625, 4.1604042053222656e-05, 1.3113021850585938e-06, 0.0003075599670410156, 0.0002415180206298828, 0.2734375, 0.00311279296875, 0.001117706298828125, 0.212890625, 0.005512237548828125, 0.004169464111328125, 0.034149169921875, 0.021240234375, 0.0863037109375, 4.851818084716797e-05, 0.0035858154296875, 0.72216796875, 0.0002849102020263672, 0.0008602142333984375, 0.0118865966796875, 0.00920867919921875, 0.00010514259338378906, 0.0234222412109375, 0.037109375, 0.0014619827270507812, 0.0010223388671875, 5.9604644775390625e-06, 0.041015625, 0.003643035888671875, 0.00048351287841796875, 0.0006313323974609375, 0.0028400421142578125], "tokens": [275, 319, 3759, 312, 3088, 687, 19915, 111, 13696, 786, 438, 3088, 687, 458, 517, 33482, 4009, 275, 319, 34818, 1406, 19888, 672, 9371, 436, 3088, 687, 21644, 111, 461, 46936, 14628, 810, 275, 319, 322, 5644, 279, 17568, 44, 275, 319, 333, 1001, 48, 275, 319, 225, 333, 687, 48, 275]}
{"line_number": 750, "line_type": "original", "code": "        return createComplex(FastMath.log(abs()),", "entropy": 2.541015625, "is_bug_line": false, "sus_score": 0.18257418583505536, "per_token_entropy": [3.38671875, 3.24609375, 0.39208984375, 0.00121307373046875, 0.01163482666015625, 3.09375, 5.221366882324219e-05, 9.202957153320312e-05, 12.6015625, 0.04052734375, 3.169921875, 4.546875], "tokens": [351, 442, 1487, 12267, 26, 12200, 5717, 32, 751, 26, 3596, 6182]}
{"line_number": 750, "line_type": "generated", "code": "\n     *  </code>\n     * </pre>\n     * where the (real) functions on the right-hand side are\n     * {@link java.lang.Math#sin} and {@link java.lang.Math#cosh}, and the", "entropy": 0.10052490234375, "is_bug_line": false, "sus_score": 0.18257418583505536, "per_token_entropy": [0.5625, 0.0024261474609375, 0.006900787353515625, 0.000553131103515625, 0.00017321109771728516, 0.0005621910095214844, 0.0012083053588867188, 0.0008931159973144531, 0.003200531005859375, 0.00010907649993896484, 0.0002315044403076172, 0.003082275390625, 9.715557098388672e-05, 0.20166015625, 0.27490234375, 0.34423828125, 0.02099609375, 0.0004076957702636719, 0.0030975341796875, 0.0007958412170410156, 4.220008850097656e-05, 0.0187225341796875, 0.050811767578125, 1.0967254638671875e-05, 0.0003037452697753906, 0.040802001953125, 0.006336212158203125, 0.0004930496215820312, 0.0008044242858886719, 0.00232696533203125, 0.84912109375, 1.2040138244628906e-05, 5.698204040527344e-05, 2.0384788513183594e-05, 0.00028634071350097656, 7.104873657226562e-05, 0.0002562999725341797, 0.5009765625, 0.0171051025390625, 0.1942138671875, 0.00037860870361328125, 0.1881103515625, 5.9604644775390625e-06, 2.5033950805664062e-06, 7.62939453125e-06, 0.0002887248992919922, 2.276897430419922e-05, 0.06610107421875, 3.5762786865234375e-07, 1.173828125, 0.6640625, 0.02294921875], "tokens": [275, 319, 225, 576, 687, 48, 275, 319, 576, 1001, 48, 275, 319, 2154, 322, 308, 4543, 27, 4442, 544, 322, 2091, 31, 4668, 5209, 884, 275, 319, 3088, 1204, 1383, 32, 1581, 32, 5717, 21, 7102, 111, 461, 3088, 1204, 1383, 32, 1581, 32, 5717, 21, 331, 615, 835, 461, 322]}
{"line_number": 132, "line_type": "original", "code": "            double q = imaginary / real;", "entropy": 1.41796875, "is_bug_line": false, "sus_score": 0.17677669529663687, "per_token_entropy": [7.7578125, 2.927734375, 1.33984375, 0.034271240234375, 0.57568359375, 0.0005125999450683594, 0.014251708984375, 0.07293701171875, 0.031890869140625], "tokens": [1468, 2064, 2678, 280, 17463, 3172, 517, 4011, 45]}
{"line_number": 132, "line_type": "generated", "code": "\n    /**\n     * Returns a {@code Complex} whose value is\n     * <ul>\n     * <li>{@code (this + addend) + (this + addendOffset)}\n     * if {@code addend} is a {@code Double}", "entropy": 0.313720703125, "is_bug_line": false, "sus_score": 0.17677669529663687, "per_token_entropy": [0.6435546875, 0.1085205078125, 0.033203125, 8.034706115722656e-05, 0.458251953125, 0.4853515625, 0.040374755859375, 0.004611968994140625, 0.0004737377166748047, 0.00759124755859375, 0.0005178451538085938, 0.00217437744140625, 0.00038743019104003906, 0.402587890625, 0.0006055831909179688, 0.6865234375, 0.9287109375, 0.0221710205078125, 0.000873565673828125, 0.0002694129943847656, 0.283447265625, 0.0002675056457519531, 0.1336669921875, 0.0023746490478515625, 0.41552734375, 0.025299072265625, 0.52294921875, 0.08447265625, 0.004482269287109375, 0.74560546875, 0.87890625, 0.7744140625, 0.83349609375, 1.33984375, 0.27001953125, 0.0810546875, 0.368896484375, 0.77099609375, 0.62646484375, 0.001567840576171875, 0.08087158203125, 0.10516357421875, 0.010528564453125, 0.2646484375, 0.0195465087890625, 0.109375, 0.2333984375, 0.77880859375, 0.36083984375, 0.0963134765625, 1.7802734375, 0.48291015625], "tokens": [284, 1022, 275, 319, 3759, 312, 3088, 687, 19915, 111, 13696, 786, 438, 275, 319, 333, 338, 48, 275, 319, 333, 374, 19364, 687, 308, 578, 474, 1015, 416, 27, 474, 308, 578, 474, 1015, 416, 3457, 4370, 275, 319, 415, 3088, 687, 1015, 416, 111, 438, 312, 3088, 687, 6934, 111]}
