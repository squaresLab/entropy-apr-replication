{"line_number": 240, "line_type": "original", "code": "        this(0);", "entropy": 2.404296875, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [2.373046875, 0.80078125, 0.354736328125, 6.625, 1.87109375], "tokens": [351, 458, 26, 34, 293]}
{"line_number": 240, "line_type": "generated", "code": "\n    }\n\n    /**\n     * @param lambda Population size.\n     * @param inputSigma Initial search volume; sigma of offspring objective variables.\n     * @param maxIterations Maximal number of iterations.\n     * @param stopFitness Whether to stop if", "entropy": 0.048004150390625, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.98486328125, 0.428466796875, 0.1837158203125, 0.07891845703125, 0.0186309814453125, 0.0007672309875488281, 0.22607421875, 0.007137298583984375, 0.112548828125, 0.00798797607421875, 4.744529724121094e-05, 0.00046181678771972656, 0.0019044876098632812, 0.026519775390625, 0.00402069091796875, 0.0004513263702392578, 0.000682830810546875, 0.1070556640625, 0.0008378028869628906, 0.0020904541015625, 0.00037479400634765625, 0.0001024007797241211, 0.004459381103515625, 0.0008287429809570312, 0.00017464160919189453, 0.0004076957702636719, 2.396106719970703e-05, 7.259845733642578e-05, 0.0021266937255859375, 0.004070281982421875, 0.1102294921875, 0.0109100341796875, 0.0019254684448242188, 0.0013446807861328125, 0.10504150390625, 0.0025806427001953125, 0.007122039794921875, 0.0002315044403076172, 7.343292236328125e-05, 0.0002422332763671875, 0.001094818115234375, 0.00312042236328125, 0.0225982666015625, 0.0011625289916992188, 0.0001971721649169922, 0.00026154518127441406, 0.008819580078125, 0.0004706382751464844, 0.00962066650390625, 0.0005559921264648438, 0.0002994537353515625, 0.0016927719116210938], "tokens": [284, 320, 446, 1022, 275, 319, 477, 753, 9254, 13088, 3899, 1334, 32, 275, 319, 477, 753, 1509, 28326, 5768, 3233, 6864, 45, 16355, 432, 2126, 3393, 25110, 4886, 32, 275, 319, 477, 753, 1769, 31219, 7462, 2977, 1451, 432, 17576, 32, 275, 319, 477, 753, 4719, 48599, 14071, 372, 4719, 415]}
{"line_number": 241, "line_type": "original", "code": "    }", "entropy": 3.357421875, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [2.58984375, 4.125], "tokens": [264, 320]}
{"line_number": 241, "line_type": "generated", "code": "        this.maxIterations = maxIterations;", "entropy": 0.56201171875, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [1.6240234375, 1.7119140625, 0.392822265625, 0.98046875, 0.12408447265625, 0.0167083740234375, 0.16162109375, 0.0121002197265625, 0.034454345703125], "tokens": [351, 458, 32, 1449, 31219, 280, 1769, 31219, 45]}
{"line_number": 247, "line_type": "original", "code": "        this(lambda, null, DEFAULT_MAXITERATIONS, DEFAULT_STOPFITNESS,", "entropy": 1.8125, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [3.06640625, 13.6875, 4.3515625, 0.0577392578125, 0.0127410888671875, 7.8671875, 0.039703369140625, 3.2421875, 0.0004227161407470703, 0.11279296875, 0.0013265609741210938, 0.0002493858337402344, 0.004364013671875, 0.149169921875, 0.0010900497436523438, 0.0021724700927734375, 0.0008006095886230469, 0.0157623291015625], "tokens": [351, 458, 26, 5962, 30, 744, 30, 4040, 81, 3459, 10812, 19419, 30, 4040, 81, 15707, 43781, 30]}
{"line_number": 247, "line_type": "generated", "code": "             generated in case they are out of bounds.\n     * @param random Random generator.\n     * @param generateStatistics Whether statistic data is collected.\n     * @param valueChecker Value checker.\n     */\n    public CMAESOptimizer(int lambda, double", "entropy": 0.1221923828125, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [2.921875, 0.048492431640625, 0.0035381317138671875, 0.0003521442413330078, 0.0005102157592773438, 0.0006055831909179688, 0.0009851455688476562, 0.00015485286712646484, 0.00020301342010498047, 0.004116058349609375, 0.10125732421875, 0.0022449493408203125, 0.0025634765625, 0.0014257431030273438, 0.0182647705078125, 0.013031005859375, 0.001621246337890625, 0.0031261444091796875, 0.023651123046875, 0.002422332763671875, 0.0003037452697753906, 0.004566192626953125, 0.024322509765625, 0.00012564659118652344, 0.0023345947265625, 0.004070281982421875, 0.0001901388168334961, 0.0016298294067382812, 0.0011692047119140625, 0.002109527587890625, 0.021331787109375, 0.06396484375, 0.00093841552734375, 0.0252227783203125, 0.4072265625, 0.00868988037109375, 1.4267578125, 0.042449951171875, 0.47998046875, 0.2587890625, 0.25927734375, 0.0168914794921875, 0.0911865234375, 0.0007853507995605469, 1.1920928955078125e-06, 0.00017821788787841797, 2.968311309814453e-05, 0.0012903213500976562, 0.03619384765625, 0.0002086162567138672, 0.0002378225326538086, 0.0212554931640625], "tokens": [2407, 4723, 328, 1135, 2953, 884, 963, 432, 11615, 32, 275, 319, 477, 753, 3995, 9500, 9750, 32, 275, 319, 477, 753, 4450, 13487, 14071, 33179, 706, 438, 21588, 32, 275, 319, 477, 753, 786, 14003, 3846, 26664, 32, 275, 569, 284, 562, 390, 1400, 940, 29248, 26, 410, 9254, 30, 2064]}
{"line_number": 250, "line_type": "original", "code": "    }", "entropy": 4.16796875, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [3.439453125, 4.89453125], "tokens": [264, 320]}
{"line_number": 250, "line_type": "generated", "code": "\n     */\n    public CMAESOptimizer(int lambda, double[] inputSigma,\n                          int maxIterations, double stopFitness,\n                          boolean isActiveCMA, int diagonalOnly, int checkFeasableCount,\n                          RandomGenerator random, boolean generateStatistics,", "entropy": 0.0281829833984375, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.51513671875, 0.5234375, 0.0302276611328125, 0.16845703125, 0.0009241104125976562, 2.9802322387695312e-06, 0.00013315677642822266, 2.2649765014648438e-05, 0.0014142990112304688, 0.028778076171875, 0.0002205371856689453, 0.00018608570098876953, 0.03192138671875, 0.0007967948913574219, 0.0002951622009277344, 2.86102294921875e-06, 0.00010514259338378906, 0.0672607421875, 0.0008392333984375, 2.8967857360839844e-05, 1.3589859008789062e-05, 1.6689300537109375e-05, 0.00469970703125, 0.00025391578674316406, 2.2530555725097656e-05, 2.8371810913085938e-05, 0.00862884521484375, 0.0007109642028808594, 4.5180320739746094e-05, 2.0265579223632812e-06, 2.1457672119140625e-06, 1.7642974853515625e-05, 0.009368896484375, 6.198883056640625e-05, 1.3113021850585938e-06, 3.254413604736328e-05, 0.022064208984375, 1.9550323486328125e-05, 2.9802322387695312e-06, 1.3113021850585938e-06, 2.384185791015625e-07, 2.2649765014648438e-06, 9.143352508544922e-05, 0.00894927978515625, 0.0011262893676757812, 0.00019276142120361328, 2.9206275939941406e-05, 0.0008063316345214844, 0.0143280029296875, 0.00012791156768798828, 1.6927719116210938e-05, 0.0240631103515625], "tokens": [275, 569, 284, 562, 390, 1400, 940, 29248, 26, 410, 9254, 30, 2064, 1178, 1509, 28326, 30, 3775, 629, 1769, 31219, 30, 2064, 4719, 48599, 30, 3775, 1905, 36511, 53, 1400, 30, 629, 27601, 4495, 30, 629, 1505, 9008, 302, 444, 1534, 30, 3775, 9500, 4815, 3995, 30, 1905, 4450, 13487, 30]}
{"line_number": 562, "line_type": "original", "code": "            lambda = 4 + (int) (3. * Math.log(dimension));", "entropy": 1.1748046875, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [4.74609375, 5.796875, 0.81884765625, 1.8369140625, 1.6943359375, 0.0523681640625, 1.9375, 0.6171875, 0.12115478515625, 0.470947265625, 0.019805908203125, 3.708984375, 0.0660400390625, 0.1566162109375, 0.004047393798828125, 0.1190185546875, 0.0020694732666015625, 0.08856201171875, 0.0731201171875], "tokens": [1468, 9254, 280, 225, 38, 474, 308, 410, 27, 308, 37, 32, 319, 4175, 32, 751, 26, 11694, 876]}
{"line_number": 562, "line_type": "generated", "code": "\n        if (inputSigma!= null) {\n            // convert sigma into standard deviations\n            double[][] sigArray = new double[guess.length][1];\n            for (int i = 0; i < guess.length; i++) {\n                sig", "entropy": 0.5830078125, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [0.55517578125, 2.984375, 0.049774169921875, 2.04296875, 0.79736328125, 0.75537109375, 0.0011539459228515625, 0.036865234375, 0.010528564453125, 0.11712646484375, 1.16796875, 4.29296875, 2.443359375, 2.181640625, 2.666015625, 0.51611328125, 0.007350921630859375, 0.63330078125, 2.87109375, 0.27978515625, 2.169921875, 2.259765625, 0.05670166015625, 0.170654296875, 0.006500244140625, 0.002552032470703125, 0.3681640625, 0.00029158592224121094, 0.00048804283142089844, 0.0013971328735351562, 0.12396240234375, 0.00025010108947753906, 0.009613037109375, 0.051422119140625, 0.003917694091796875, 0.0008788108825683594, 0.02569580078125, 0.002796173095703125, 0.0002027750015258789, 8.094310760498047e-05, 0.004329681396484375, 0.0017576217651367188, 0.0005812644958496094, 0.06781005859375, 9.739398956298828e-05, 9.775161743164062e-06, 0.0006918907165527344, 0.00957489013671875, 0.004772186279296875, 0.0030059814453125, 0.01418304443359375, 0.546875], "tokens": [291, 415, 308, 1131, 28326, 863, 744, 27, 301, 324, 434, 4483, 16355, 1991, 6216, 409, 45485, 324, 2064, 11336, 6915, 1261, 280, 537, 2064, 77, 23796, 32, 1322, 1674, 35, 970, 324, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 11089, 32, 1322, 45, 595, 1987, 301, 400, 6915]}
{"line_number": 423, "line_type": "original", "code": "                            break generationLoop;", "entropy": 2.76953125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [9.0625, 3.619140625, 1.166015625, 0.0004949569702148438, 0.007205963134765625], "tokens": [9316, 1626, 11745, 7497, 45]}
{"line_number": 423, "line_type": "generated", "code": "\n                }\n                // Update history\n                updateHistory(fitness);\n                // Update number of iterations\n                iterations++;\n            }\n        } finally {\n            // close the fitness function, if it is opened\n            if (fitfun.getState() == State.OPEN) {", "entropy": 0.90625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.0731201171875, 0.002933502197265625, 0.56640625, 1.0546875, 3.552734375, 2.51171875, 0.48828125, 2.908203125, 1.14453125, 0.0599365234375, 0.454345703125, 0.79052734375, 0.414306640625, 1.2724609375, 2.68359375, 3.296875, 0.0025882720947265625, 0.923828125, 0.229248046875, 0.07891845703125, 0.268310546875, 0.83203125, 0.0133209228515625, 2.009765625, 0.03997802734375, 1.8779296875, 0.00444793701171875, 0.1866455078125, 1.587890625, 3.24609375, 1.689453125, 2.84765625, 0.465087890625, 1.1728515625, 0.1004638671875, 0.435546875, 0.50048828125, 1.419921875, 0.369873046875, 0.6884765625, 0.059906005859375, 0.80712890625, 0.056182861328125, 0.880859375, 0.697265625, 0.125732421875, 0.5078125, 1.5576171875, 0.005939483642578125, 0.07232666015625, 0.047027587890625, 0.043487548828125], "tokens": [400, 320, 400, 434, 4000, 8142, 400, 1974, 6705, 26, 35697, 293, 400, 434, 4000, 1451, 432, 17576, 400, 17576, 3334, 324, 320, 291, 320, 8295, 301, 324, 434, 4230, 322, 34247, 667, 30, 415, 561, 438, 13197, 324, 415, 308, 4698, 6381, 32, 19702, 346, 610, 5025, 32, 10933, 27, 301]}
{"line_number": 529, "line_type": "original", "code": "                boundaries = new double[2][];", "entropy": 1.93359375, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [7.6171875, 4.4140625, 1.4482421875, 0.199462890625, 0.072265625, 0.5859375, 0.06744384765625, 0.023284912109375, 2.982421875], "tokens": [2071, 28116, 280, 537, 2064, 77, 36, 1674, 970]}
{"line_number": 529, "line_type": "generated", "code": "\n        // initialize dynamic (internal) strategy parameters and constants\n        // see [Hansen-Schwarz] p. 312\n        cc = (4.0 + mu) / (dimension + 4.0 + 2.0", "entropy": 0.541015625, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [0.2008056640625, 0.436279296875, 0.65625, 0.54248046875, 0.1043701171875, 0.1463623046875, 0.035369873046875, 0.7021484375, 0.08184814453125, 0.009368896484375, 0.0160675048828125, 0.058319091796875, 2.318359375, 1.6181640625, 0.39990234375, 0.376953125, 0.0120086669921875, 0.0016965866088867188, 1.0703125, 2.115234375, 1.7666015625, 0.04473876953125, 0.708984375, 2.515625, 0.2340087890625, 0.0455322265625, 1.1298828125, 2.279296875, 1.8818359375, 1.212890625, 2.826171875, 0.1739501953125, 0.1470947265625, 0.01311492919921875, 0.53564453125, 0.423828125, 0.06317138671875, 0.8232421875, 0.1280517578125, 4.00543212890625e-05, 0.0008120536804199219, 0.232666015625, 0.004852294921875, 0.006000518798828125, 0.0007739067077636719, 0.00789642333984375, 0.010009765625, 0.0003979206085205078, 0.004314422607421875, 0.00203704833984375, 0.006748199462890625, 0.0008320808410644531], "tokens": [291, 434, 7379, 7094, 308, 3259, 27, 13689, 3377, 461, 12388, 291, 434, 2318, 428, 58, 693, 272, 31, 13551, 9762, 108, 79, 298, 32, 225, 37, 35, 36, 291, 10639, 280, 308, 38, 32, 34, 474, 11768, 27, 517, 308, 11694, 474, 225, 38, 32, 34, 474, 225, 36, 32, 34]}
{"line_number": 530, "line_type": "original", "code": "                boundaries[0] = lB;", "entropy": 2.23046875, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [6.5, 11.0234375, 0.9912109375, 0.179443359375, 0.10137939453125, 0.0980224609375, 1.1298828125, 0.001270294189453125, 0.054901123046875], "tokens": [2071, 28116, 77, 34, 79, 280, 456, 52, 45]}
{"line_number": 530, "line_type": "generated", "code": "\n        mueff = 1.0 / (dimension + 2);\n        cc = (4.0 + mueff / dimension) / (dimension + 4 + 2 * mueff / dimension);\n        cs = (mueff + ", "entropy": 0.2142333984375, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [0.2239990234375, 0.447998046875, 5.030632019042969e-05, 0.06390380859375, 0.56689453125, 0.1707763671875, 1.0234375, 0.0309906005859375, 0.22802734375, 1.892578125, 0.57666015625, 0.61962890625, 0.030609130859375, 0.332275390625, 0.5986328125, 0.94775390625, 0.83251953125, 0.1322021484375, 0.069580078125, 0.0189666748046875, 0.3154296875, 0.040069580078125, 0.038177490234375, 0.0015134811401367188, 3.5762786865234375e-07, 0.00826263427734375, 0.02496337890625, 0.00765228271484375, 0.00022423267364501953, 0.0266876220703125, 0.305419921875, 0.0006551742553710938, 0.0007753372192382812, 0.0018863677978515625, 0.10992431640625, 0.036712646484375, 0.00604248046875, 1.20703125, 0.005352020263671875, -0.0, 0.000904083251953125, 0.0188140869140625, 0.00518035888671875, 0.06976318359375, 0.08111572265625, 0.0019025802612304688, 0.015960693359375, 0.000762939453125, 4.76837158203125e-06, 2.384185791015625e-07, 0.0011854171752929688, 0.0001690387725830078], "tokens": [291, 35813, 486, 280, 225, 35, 32, 34, 517, 308, 11694, 474, 225, 36, 293, 291, 10639, 280, 308, 38, 32, 34, 474, 35813, 486, 517, 8742, 27, 517, 308, 11694, 474, 225, 38, 474, 225, 36, 319, 35813, 486, 517, 8742, 293, 291, 9101, 280, 308, 95, 340, 486, 474, 225]}
{"line_number": 531, "line_type": "original", "code": "                boundaries[1] = uB;", "entropy": 2.244140625, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [5.9765625, 9.3203125, 1.7685546875, 0.375244140625, 0.11944580078125, 0.0902099609375, 2.3359375, 0.0035839080810546875, 0.2130126953125], "tokens": [2071, 28116, 77, 35, 79, 280, 1044, 52, 45]}
{"line_number": 531, "line_type": "generated", "code": "\n        // initialize step-size control parameters\n        cc = (4 + mu) / (dimension + 4 + 2 * mu);\n        cs = (mu + 2) / (dimension + mu + 5);\n        c1 = 2", "entropy": 0.12298583984375, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [0.61474609375, 0.82080078125, 0.57080078125, 1.15234375, 0.0222015380859375, 0.002559661865234375, 0.3388671875, 0.07989501953125, 0.1497802734375, 0.76171875, 0.0307769775390625, 0.0732421875, 0.0137481689453125, 0.339111328125, 0.0081024169921875, 0.12109375, 1.1563301086425781e-05, 0.00069427490234375, 0.2320556640625, 0.0027523040771484375, 0.002777099609375, 0.0014581680297851562, 0.0002655982971191406, 0.00698089599609375, 0.005756378173828125, 0.07373046875, 0.0008268356323242188, 0.0308990478515625, 0.329345703125, 0.228271484375, 0.0007395744323730469, 0.0188446044921875, 0.00688934326171875, 0.10430908203125, 9.739398956298828e-05, 0.0047607421875, 0.0160064697265625, 0.0004439353942871094, 0.0017337799072265625, 0.00701141357421875, 1.33514404296875e-05, 0.00327301025390625, 0.08148193359375, 0.00027060508728027344, 0.01763916015625, 0.0010042190551757812, 0.060882568359375, 0.0112762451171875, 0.0190277099609375, 0.00409698486328125, 0.0198211669921875, 0.0002892017364501953], "tokens": [291, 434, 7379, 3111, 31, 891, 3498, 3377, 291, 10639, 280, 308, 38, 474, 11768, 27, 517, 308, 11694, 474, 225, 38, 474, 225, 36, 319, 11768, 293, 291, 9101, 280, 308, 6974, 474, 225, 36, 27, 517, 308, 11694, 474, 11768, 474, 225, 39, 293, 291, 281, 35, 280, 225, 36]}
{"line_number": 508, "line_type": "original", "code": "                hasFiniteBounds = true;", "entropy": 3.05859375, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [6.859375, 10.21875, 1.5166015625, 0.1627197265625, 0.230224609375, 2.291015625, 0.1326904296875], "tokens": [2071, 1401, 40643, 8285, 280, 861, 45]}
{"line_number": 508, "line_type": "generated", "code": "\n     *\n     * @param dim Number of variables\n     */\n    private void initDynamicParameter(int dim) {\n        // Initialize the dynamic parameters\n        cs = 2.0;\n        damps = 100.0;\n        sigma =", "entropy": 0.763671875, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [0.89892578125, 1.12890625, 2.287109375, 0.421630859375, 0.395751953125, 0.265625, 2.353515625, 1.0732421875, 0.0028362274169921875, 1.193359375, 0.98828125, 0.6328125, 0.03192138671875, 0.11749267578125, 0.022186279296875, 0.6572265625, 1.177734375, 2.3828125, 0.024322509765625, 0.373291015625, 0.0014104843139648438, 0.042724609375, 0.01520538330078125, 0.263671875, 0.9990234375, 2.1796875, 1.8017578125, 1.02734375, 1.5947265625, 1.158203125, 2.88671875, 0.10784912109375, 0.88330078125, 0.5771484375, 0.51708984375, 0.348388671875, 1.1533203125, 0.21728515625, 0.416259765625, 0.0030612945556640625, 0.0015268325805664062, 0.0027561187744140625, 0.2081298828125, 0.65869140625, 1.853515625, 0.156982421875, 1.4482421875, 0.00788116455078125, 0.1683349609375, 0.08966064453125, 2.443359375, 0.0604248046875], "tokens": [275, 319, 275, 319, 477, 753, 4406, 5104, 432, 4886, 275, 569, 284, 945, 763, 3219, 7183, 3012, 26, 410, 4406, 27, 301, 291, 434, 8958, 322, 7094, 3377, 291, 9101, 280, 225, 36, 32, 34, 45, 291, 343, 757, 101, 280, 225, 35, 34, 34, 32, 34, 45, 291, 16355, 280]}
{"line_number": 509, "line_type": "original", "code": "                break;", "entropy": 5.85546875, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [6.6953125, 9.96875, 0.90380859375], "tokens": [2071, 1626, 45]}
{"line_number": 509, "line_type": "generated", "code": "\n     */\n    private void initialize(double[] guess) {\n        // Initialization of the dynamic search parameters\n        sigma = 1.0;\n        if (inputSigma!= null) {\n            for (int i = 0; i < inputSigma.length", "entropy": 0.347412109375, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [0.55517578125, 0.40380859375, 0.0293426513671875, 0.18115234375, 0.07861328125, 0.96337890625, 0.61181640625, 0.5712890625, 0.07659912109375, 0.00408935546875, 0.0291595458984375, 0.0439453125, 0.3349609375, 1.056640625, 1.7578125, 0.2120361328125, 0.62109375, 0.86474609375, 0.060089111328125, 0.058380126953125, 0.3369140625, 2.35546875, 0.10546875, 0.89599609375, 0.57666015625, 0.66552734375, 0.0172119140625, 0.2259521484375, 0.1788330078125, 2.23046875, 0.01204681396484375, 0.471435546875, 0.0024433135986328125, 0.162841796875, 0.0011463165283203125, 0.0117340087890625, 0.005237579345703125, 0.0260772705078125, 0.54541015625, 0.0130157470703125, 0.0232086181640625, 0.040863037109375, 0.028900146484375, 0.0017690658569335938, 0.0022449493408203125, 0.0027332305908203125, 0.001331329345703125, 0.00246429443359375, 0.59814453125, 5.841255187988281e-06, 0.00028586387634277344, 2.0503997802734375e-05], "tokens": [275, 569, 284, 945, 763, 7379, 26, 2627, 1178, 11089, 27, 301, 291, 434, 33176, 432, 322, 7094, 3233, 3377, 291, 16355, 280, 225, 35, 32, 34, 45, 291, 415, 308, 1131, 28326, 863, 744, 27, 301, 324, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 1509, 28326, 32, 1322]}
{"line_number": 515, "line_type": "original", "code": "            for (int i = 0; i < lB.length; i++) {", "entropy": 0.88427734375, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [4.78125, 4.1796875, 0.007198333740234375, 0.06817626953125, 0.1512451171875, 0.032867431640625, 0.0042877197265625, 0.004852294921875, 0.00768280029296875, 0.0022335052490234375, 0.007472991943359375, 6.83203125, 0.466552734375, 0.018524169921875, 0.00311279296875, 0.01132965087890625, 0.1527099609375, 0.01535797119140625, 0.05511474609375], "tokens": [1468, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 456, 52, 32, 1322, 45, 595, 1987, 301]}
{"line_number": 515, "line_type": "generated", "code": "\n        sigma = Math.max(Math.abs(guess[i]), 0.3);\n        if (inputSigma!= null) {\n            sigma = inputSigma[i];\n        }\n        // initialize mu\n        mu = (int) (muFactor", "entropy": 0.406005859375, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [0.3046875, 1.2705078125, 0.018768310546875, 1.2080078125, 0.0413818359375, 1.0478515625, 0.02423095703125, 1.0546875, 0.004886627197265625, 0.9033203125, 0.004322052001953125, 0.42236328125, 0.0209197998046875, 0.07666015625, 1.173828125, 0.80615234375, 0.437255859375, 0.0009393692016601562, 0.85791015625, 0.458251953125, 0.90576171875, 1.1826171875, 0.00897979736328125, 0.51123046875, 0.00015270709991455078, 0.07867431640625, 0.0018720626831054688, 0.031219482421875, 0.0122833251953125, 0.0322265625, 0.056396484375, 0.0106048583984375, 0.11187744140625, 2.753734588623047e-05, 0.0036678314208984375, 0.005306243896484375, 0.01459503173828125, 0.05718994140625, 0.0012559890747070312, 0.84619140625, 0.398193359375, 0.6904296875, 0.6103515625, 0.387451171875, 0.1397705078125, 0.01300048828125, 1.544921875, 0.0885009765625, 0.02655029296875, 0.55517578125, 1.3349609375, 1.30859375], "tokens": [291, 16355, 280, 4175, 32, 1449, 26, 5717, 32, 3596, 26, 23796, 77, 91, 5727, 225, 34, 32, 37, 293, 291, 415, 308, 1131, 28326, 863, 744, 27, 301, 324, 16355, 280, 1509, 28326, 77, 91, 970, 291, 320, 291, 434, 7379, 11768, 291, 11768, 280, 308, 410, 27, 308, 6974, 9168]}
{"line_number": 516, "line_type": "original", "code": "                if (Double.isInfinite(lB[i]) ||", "entropy": 1.5927734375, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [6.90234375, 1.87109375, 0.011138916015625, 7.69140625, 0.004581451416015625, 0.828125, 0.0010194778442382812, 0.0036468505859375, 3.197265625, 0.1656494140625, 0.0771484375, 0.0697021484375, 0.59814453125, 0.87109375], "tokens": [2071, 415, 308, 4075, 32, 28823, 11949, 26, 94, 52, 77, 91, 1130, 1276]}
{"line_number": 516, "line_type": "generated", "code": "\n        for (int i = 0; i < guess.length; i++) {\n            sigmaArray[i][0] = inputSigma!= null? inputSigma[i] : 0.3;\n        }\n        sigma = new RealMatrixImpl", "entropy": 0.214111328125, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [0.2056884765625, 1.1240234375, 0.00945281982421875, 0.0081939697265625, 0.169677734375, 0.036895751953125, 0.002048492431640625, 0.0014467239379882812, 0.005680084228515625, 0.001739501953125, 0.003082275390625, 0.362548828125, 0.0003190040588378906, 0.0003542900085449219, 0.004077911376953125, 0.087158203125, 0.0127410888671875, 0.042266845703125, 0.1602783203125, 0.51220703125, 0.01189422607421875, 0.0020046234130859375, 0.002445220947265625, 0.06256103515625, 0.00937652587890625, 0.005977630615234375, 0.003143310546875, 1.2705078125, 0.0002646446228027344, 0.89892578125, 0.0021915435791015625, 0.063720703125, 0.339111328125, 4.601478576660156e-05, 0.0056915283203125, 0.0025119781494140625, 0.0111083984375, 0.059234619140625, 1.587890625, 0.72705078125, 0.0098114013671875, 0.05224609375, 0.08587646484375, 0.28564453125, 0.003200531005859375, 0.48876953125, 0.63330078125, 0.07574462890625, 1.1669921875, 0.468994140625, 0.0019817352294921875, 0.045074462890625], "tokens": [291, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 11089, 32, 1322, 45, 595, 1987, 301, 324, 16355, 1261, 77, 91, 1674, 34, 79, 280, 1509, 28326, 863, 744, 1018, 1509, 28326, 77, 91, 79, 499, 225, 34, 32, 37, 45, 291, 320, 291, 16355, 280, 537, 11443, 4161, 3482]}
{"line_number": 523, "line_type": "original", "code": "            if (hasInfiniteBounds) {", "entropy": 1.7900390625, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [4.0859375, 3.1171875, 0.089599609375, 5.875, 0.8896484375, 0.079345703125, 0.1536865234375, 0.032928466796875], "tokens": [1468, 415, 308, 2040, 39524, 8285, 27, 301]}
{"line_number": 523, "line_type": "generated", "code": "\n        // initialize mu\n        mu = lambda/2;\n        // initialize step-size\n        double c1 = (mu + 2.) / (dimension + mu + 5.);\n        double cmu = Math.min(1. - c1,", "entropy": 0.4501953125, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [0.3251953125, 0.2471923828125, 0.99755859375, 1.091796875, 0.487060546875, 0.76953125, 0.1617431640625, 1.6484375, 0.82470703125, 0.5029296875, 0.53759765625, 0.9404296875, 0.47265625, 0.60595703125, 1.390625, 0.077880859375, 0.0030059814453125, 0.84033203125, 2.12109375, 1.294921875, 0.1585693359375, 0.341552734375, 0.45166015625, 1.248046875, 1.0673828125, 0.01020050048828125, 0.01140594482421875, 0.59912109375, 0.0005846023559570312, 0.026031494140625, 0.18310546875, 0.0478515625, 0.00441741943359375, 0.00634765625, 0.0004949569702148438, 0.58544921875, 0.110595703125, 0.067138671875, 0.408935546875, 0.35107421875, 0.031494140625, 0.00675201416015625, 0.1951904296875, 0.0019025802612304688, 0.028289794921875, 0.038238525390625, 0.00971221923828125, 2.0546875, 0.020111083984375, 0.00185394287109375, 1.1682510375976562e-05, 0.00315093994140625], "tokens": [291, 434, 7379, 11768, 291, 11768, 280, 9254, 33, 36, 45, 291, 434, 7379, 3111, 31, 891, 291, 2064, 281, 35, 280, 308, 6974, 474, 225, 36, 7447, 517, 308, 11694, 474, 11768, 474, 225, 39, 37546, 291, 2064, 281, 6974, 280, 4175, 32, 887, 26, 35, 32, 429, 281, 35, 30]}
{"line_number": 378, "line_type": "original", "code": "                            arxk = xmean.add(BD.multiply(arz.getColumnMatrix(k))", "entropy": 2.24609375, "is_bug_line": false, "sus_score": 0.2581988897471611, "per_token_entropy": [8.015625, 9.8125, 6.078125, 0.325927734375, 0.9443359375, 0.058258056640625, 0.1209716796875, 0.052490234375, 0.010589599609375, 14.2734375, 1.712890625, 0.5185546875, 0.0206146240234375, 2.419921875, 0.038787841796875, 0.99560546875, 0.1939697265625, 0.2437744140625, 0.00250244140625, 0.254150390625, 1.103515625], "tokens": [9316, 2099, 29640, 280, 816, 6009, 32, 669, 26, 7644, 32, 20123, 26, 282, 108, 32, 19239, 4161, 26, 93, 490]}
{"line_number": 378, "line_type": "generated", "code": "\n                if (getConvergenceChecker()!= null) {\n                    if (getConvergenceChecker().converged(iterations, optimum, lastResult)) {\n                        break generationLoop;\n                    }\n                }\n                push(fitnessHistory, bestFitness);", "entropy": 0.215087890625, "is_bug_line": false, "sus_score": 0.2581988897471611, "per_token_entropy": [0.272705078125, 0.6787109375, 0.2042236328125, 2.1640625, 0.82373046875, 2.0265579223632812e-06, 8.571147918701172e-05, 0.00021374225616455078, 0.049346923828125, 0.051513671875, 0.0003788471221923828, 0.68994140625, 0.011138916015625, 0.0863037109375, 0.386962890625, 0.03094482421875, 0.051544189453125, 0.0012598037719726562, 1.1920928955078125e-06, 9.655952453613281e-06, 2.872943878173828e-05, 0.0025691986083984375, 0.09161376953125, 0.00028824806213378906, 0.0116729736328125, 0.08935546875, 0.10205078125, 0.10675048828125, 4.76837158203125e-06, 0.451171875, 0.51513671875, 0.0002319812774658203, 0.0263671875, 0.002758026123046875, 0.01529693603515625, 0.01983642578125, 0.271728515625, 6.413459777832031e-05, 0.0002777576446533203, 0.005340576171875, 0.0003733634948730469, 0.0287933349609375, 0.0018262863159179688, 0.86669921875, 1.912109375, 0.0269622802734375, 0.55322265625, 0.04498291015625, 0.0011796951293945312, 0.2451171875, 0.285888671875, 0.006946563720703125], "tokens": [400, 415, 308, 371, 609, 424, 27976, 14003, 346, 863, 744, 27, 301, 528, 415, 308, 371, 609, 424, 27976, 14003, 922, 32620, 3886, 26, 22400, 30, 2919, 3085, 30, 2401, 1394, 490, 301, 715, 1626, 11745, 7497, 45, 528, 320, 400, 320, 400, 5840, 26, 35697, 6705, 30, 5273, 48599, 293]}
{"line_number": 407, "line_type": "original", "code": "                    updateCovariance(hsig, bestArx, arz, arindex, xold);", "entropy": 1.4072265625, "is_bug_line": false, "sus_score": 0.2581988897471611, "per_token_entropy": [5.265625, 7.55859375, 1.4970703125, 0.003124237060546875, 2.375, 1.666015625, 3.135204315185547e-05, 0.1402587890625, 0.469970703125, 0.0024089813232421875, 1.638671875, 0.4248046875, 2.1484375, 1.4140625, 0.53515625, 0.78125, 0.46337890625, 0.99267578125, 2.044921875, 0.0219268798828125, 0.09783935546875], "tokens": [4696, 1974, 2235, 17965, 26, 3914, 365, 30, 5273, 3421, 106, 30, 2099, 108, 30, 2099, 1055, 30, 816, 1455, 293]}
{"line_number": 407, "line_type": "generated", "code": "\n                }\n                // -------------------- End of generation loop ------------------\n                if (getCallback()!= null) {\n                    if (!getCallback().isCallbackSet()) {\n                        throw new CMAEvolutionStrategy.Exception(\n                                \"No callback set, but callback function", "entropy": 0.67919921875, "is_bug_line": false, "sus_score": 0.2581988897471611, "per_token_entropy": [0.9013671875, 0.0032329559326171875, 0.278076171875, 0.64697265625, 3.65234375, 0.404541015625, 0.252685546875, 1.353515625, 0.509765625, 0.59326171875, 2.181640625, 1.25, 1.134765625, 0.10302734375, 1.0439453125, 1.287109375, 0.083740234375, 0.0013675689697265625, 0.0018215179443359375, 0.07611083984375, 0.0286865234375, 0.11273193359375, 2.12890625, 0.72802734375, 0.078857421875, 0.0014801025390625, 0.0006375312805175781, 0.53125, 1.25, 1.2119140625, 0.428466796875, 0.018157958984375, 0.0693359375, 1.423828125, 0.014892578125, 2.416015625, 0.01558685302734375, 1.041015625, 0.0002646446228027344, 0.01412200927734375, 0.0909423828125, 1.900390625, 0.1654052734375, 0.190185546875, 0.04278564453125, 0.88037109375, 0.1563720703125, 0.420166015625, 1.16796875, 0.427490234375, 0.387451171875, 2.2109375], "tokens": [400, 320, 400, 434, 42777, 4720, 432, 11745, 5258, 8583, 287, 400, 415, 308, 371, 3296, 346, 863, 744, 27, 301, 528, 415, 1429, 371, 3296, 922, 297, 3296, 885, 1157, 301, 715, 1422, 537, 390, 1400, 55, 10464, 8089, 32, 984, 26, 1378, 313, 2023, 3309, 739, 30, 1273, 3309, 667]}
{"line_number": 696, "line_type": "original", "code": "        double negccov = 0;", "entropy": 2.94140625, "is_bug_line": false, "sus_score": 0.2581988897471611, "per_token_entropy": [5.921875, 7.1015625, 5.515625, 1.6865234375, 0.68994140625, 1.4765625, 2.0859375, 0.309326171875, 1.68359375], "tokens": [351, 2064, 7528, 85, 12626, 280, 225, 34, 45]}
{"line_number": 696, "line_type": "generated", "code": "\n                                                arpos.transpose())))\n                        // plus rank mu update\n                       .add(Cneg.scalarMultiply(negalphaold * negccov));\n            } else {\n                // Adapt covariance matrix C\n                C = C.scalarMultiply(oldFac)\n                       ", "entropy": 0.2042236328125, "is_bug_line": false, "sus_score": 0.2581988897471611, "per_token_entropy": [1.1552734375, 0.96630859375, 0.238037109375, 0.382080078125, 0.234375, 1.6494140625, 0.05712890625, 0.25341796875, 0.31884765625, 0.2442626953125, 0.14208984375, 0.081787109375, 0.328857421875, 0.06610107421875, 0.03302001953125, 0.040618896484375, 0.2457275390625, 0.00222015380859375, 0.320556640625, 0.031646728515625, 6.437301635742188e-05, 0.01540374755859375, 0.2352294921875, 0.5185546875, 7.3909759521484375e-06, 0.1328125, 0.0098114013671875, 0.0011396408081054688, 9.703636169433594e-05, 0.2099609375, 0.35595703125, 0.0011196136474609375, 0.050384521484375, 0.0269317626953125, 0.0653076171875, 0.294921875, 0.428466796875, 0.0088348388671875, 0.0010700225830078125, 0.0311431884765625, 0.8037109375, 0.253173828125, 0.0030689239501953125, 0.034820556640625, 0.0067901611328125, 0.005611419677734375, 1.2516975402832031e-05, 0.0006971359252929688, 0.00646209716796875, 8.559226989746094e-05, 0.165771484375, 0.1572265625], "tokens": [4180, 2099, 966, 32, 16547, 28214, 715, 434, 10952, 11263, 11768, 1974, 715, 638, 669, 26, 53, 8095, 32, 13049, 27732, 26, 8095, 4893, 1455, 319, 7528, 85, 12626, 876, 324, 320, 813, 301, 400, 434, 29087, 40204, 5045, 390, 400, 390, 280, 390, 32, 13049, 27732, 26, 1455, 7774, 27, 715]}
{"line_number": 697, "line_type": "original", "code": "        if (ccov1 + ccovmu > 0) {", "entropy": 1.2939453125, "is_bug_line": false, "sus_score": 0.2581988897471611, "per_token_entropy": [6.671875, 3.05078125, 0.0953369140625, 3.2109375, 0.6923828125, 0.2406005859375, 2.984375, 0.236328125, 0.01226043701171875, 0.0010194778442382812, 0.00042891502380371094, 1.1845703125, 0.203369140625, 0.83203125, 1.20703125, 0.08062744140625], "tokens": [351, 415, 308, 85, 12626, 35, 474, 281, 331, 3149, 103, 848, 225, 34, 27, 301]}
{"line_number": 697, "line_type": "generated", "code": "\n                        // plus rank mu update\n                       .add(Cneg.scalarMultiply(negccov));\n            } else {\n                // Adapt covariance matrix C\n                C = C.scalarMultiply(oldFac)\n                        // regard old matrix\n                       .add(rone", "entropy": 0.1551513671875, "is_bug_line": false, "sus_score": 0.2581988897471611, "per_token_entropy": [0.315185546875, 0.2498779296875, 0.13232421875, 0.392578125, 0.431396484375, 0.10711669921875, 0.4912109375, 0.0284576416015625, 0.05859375, 0.09954833984375, 1.0419921875, 0.00379180908203125, 0.0784912109375, 0.032958984375, 4.088878631591797e-05, 0.025634765625, 0.23095703125, 0.22998046875, 8.177757263183594e-05, 0.427490234375, 0.939453125, 0.001880645751953125, 0.055267333984375, 0.033447265625, 0.11492919921875, 0.306640625, 0.293212890625, 0.00893402099609375, 0.0009784698486328125, 0.02923583984375, 0.83447265625, 0.63525390625, 0.004123687744140625, 0.033721923828125, 0.01088714599609375, 0.00682830810546875, 1.4066696166992188e-05, 0.0006937980651855469, 0.00653839111328125, 0.0001766681671142578, 0.11431884765625, 0.15966796875, 0.07440185546875, 0.003795623779296875, 0.0009627342224121094, 0.0031108856201171875, 0.00609588623046875, 0.0018978118896484375, 0.0012569427490234375, 0.00033545494079589844, 0.007289886474609375, 1.7881393432617188e-06], "tokens": [715, 434, 10952, 11263, 11768, 1974, 715, 638, 669, 26, 53, 8095, 32, 13049, 27732, 26, 8095, 85, 12626, 876, 324, 320, 813, 301, 400, 434, 29087, 40204, 5045, 390, 400, 390, 280, 390, 32, 13049, 27732, 26, 1455, 7774, 27, 715, 434, 19627, 3610, 5045, 715, 638, 669, 26, 100, 658]}
{"line_number": 698, "line_type": "original", "code": "            RealMatrix arpos = bestArx.subtract(repmat(xold, 1, mu))", "entropy": 1.4189453125, "is_bug_line": false, "sus_score": 0.2581988897471611, "per_token_entropy": [5.47265625, 6.8671875, 0.027374267578125, 2.70703125, 2.890625, 0.51611328125, 2.677734375, 0.0103607177734375, 0.0794677734375, 0.3740234375, 5.10546875, 0.003833770751953125, 3.4140625, 0.0003573894500732422, 0.0020465850830078125, 0.422607421875, 0.0122222900390625, 0.04144287109375, 0.81884765625, 0.0035686492919921875, 0.0007328987121582031, 0.153564453125, 1.03515625], "tokens": [1468, 11443, 4161, 2099, 966, 280, 5273, 3421, 106, 32, 25330, 26, 4315, 1287, 26, 106, 1455, 30, 225, 35, 30, 11768, 490]}
{"line_number": 698, "line_type": "generated", "code": "\n            } else {\n                // Adapt covariance matrix C\n                C = C.scalarMultiply(oldFac)\n                        // regard old matrix\n                       .add(roneu)\n                        // plus rank one update\n                       .add(arpos.scalarMultiply(cco", "entropy": 0.0869140625, "is_bug_line": false, "sus_score": 0.2581988897471611, "per_token_entropy": [0.476318359375, 0.0692138671875, 0.09088134765625, 0.03680419921875, 0.1463623046875, 0.316650390625, 0.431884765625, 0.01131439208984375, 0.0010585784912109375, 0.029296875, 0.75927734375, 0.634765625, 0.00493621826171875, 0.0704345703125, 0.01708984375, 0.0196533203125, 3.314018249511719e-05, 0.00618743896484375, 0.142333984375, 0.0007758140563964844, 0.140625, 0.2239990234375, 0.1097412109375, 0.004604339599609375, 0.0010280609130859375, 0.00347900390625, 0.00614166259765625, 0.0020885467529296875, 0.0032863616943359375, 0.00048422813415527344, 0.01024627685546875, 7.987022399902344e-06, 3.528594970703125e-05, 0.0513916015625, 0.01114654541015625, 0.0102386474609375, 0.0047454833984375, 0.002109527587890625, 0.04278564453125, 0.0019092559814453125, 0.005893707275390625, 0.0004780292510986328, 0.004375457763671875, 0.07403564453125, 0.35400390625, 0.0728759765625, 0.0121917724609375, 0.01544952392578125, 0.00011229515075683594, 0.003444671630859375, 0.07513427734375, 0.00506591796875], "tokens": [324, 320, 813, 301, 400, 434, 29087, 40204, 5045, 390, 400, 390, 280, 390, 32, 13049, 27732, 26, 1455, 7774, 27, 715, 434, 19627, 3610, 5045, 715, 638, 669, 26, 100, 658, 103, 27, 715, 434, 10952, 11263, 1591, 1974, 715, 638, 669, 26, 282, 966, 32, 13049, 27732, 26, 85, 331]}
{"line_number": 700, "line_type": "original", "code": "            RealMatrix roneu = pc.multiply(pc.transpose())", "entropy": 1.9951171875, "is_bug_line": false, "sus_score": 0.2581988897471611, "per_token_entropy": [6.1484375, 3.72265625, 0.0022602081298828125, 4.34375, 2.1875, 1.41796875, 0.66064453125, 7.17578125, 0.11700439453125, 2.072265625, 0.01384735107421875, 1.5224609375, 0.031646728515625, 0.005718231201171875, 0.494140625], "tokens": [1468, 11443, 4161, 540, 658, 103, 280, 11487, 32, 20123, 26, 1970, 32, 16547, 1157]}
{"line_number": 700, "line_type": "generated", "code": "\n                C = C.scalarMultiply(oldFac)\n                        // regard old matrix\n                       .add(roneu)\n                        // plus rank one update\n                       .add(arpos.scalarMultiply(ccovmu));\n            }\n            // eigen decomposition of", "entropy": 0.2032470703125, "is_bug_line": false, "sus_score": 0.2581988897471611, "per_token_entropy": [0.81201171875, 0.62548828125, 0.01308441162109375, 0.03778076171875, 0.0193634033203125, 0.03485107421875, 2.0384788513183594e-05, 0.0018491744995117188, 0.024993896484375, 0.0008726119995117188, 0.11663818359375, 0.1904296875, 0.0947265625, 0.0037822723388671875, 0.0011625289916992188, 0.0036773681640625, 0.01078033447265625, 0.0117645263671875, 0.00766754150390625, 0.0029277801513671875, 0.259033203125, 0.00183868408203125, 0.0137176513671875, 0.03485107421875, 0.0200347900390625, 0.0182952880859375, 0.00568389892578125, 0.002132415771484375, 0.00722503662109375, 0.0036869049072265625, 0.007495880126953125, 0.0014486312866210938, 0.0034503936767578125, 0.011199951171875, 0.0936279296875, 0.00042510032653808594, 0.0233306884765625, 0.0408935546875, 8.52346420288086e-05, 0.0012531280517578125, 0.08404541015625, 0.06390380859375, 1.0371208190917969e-05, 0.0004444122314453125, 0.85107421875, 0.1455078125, 0.0007224082946777344, 1.5302734375, 1.4111328125, 2.796875, 0.382568359375, 0.7373046875], "tokens": [400, 390, 280, 390, 32, 13049, 27732, 26, 1455, 7774, 27, 715, 434, 19627, 3610, 5045, 715, 638, 669, 26, 100, 658, 103, 27, 715, 434, 10952, 11263, 1591, 1974, 715, 638, 669, 26, 282, 966, 32, 13049, 27732, 26, 85, 331, 3149, 103, 876, 324, 320, 324, 434, 30880, 47604, 432]}
{"line_number": 703, "line_type": "original", "code": "            double oldFac = hsig ? 0 : ccov1 * cc * (2. - cc);", "entropy": 0.92333984375, "is_bug_line": false, "sus_score": 0.2581988897471611, "per_token_entropy": [6.265625, 7.62109375, 2.80859375, 1.044921875, 0.352783203125, 0.55419921875, 0.0003085136413574219, 0.0101318359375, 0.02435302734375, 0.029998779296875, 0.049713134765625, 0.12432861328125, 0.00263214111328125, 0.00046181678771972656, 1.7802734375, 0.04180908203125, 0.08642578125, 0.11480712890625, 0.008819580078125, 0.0474853515625, 0.167236328125, 0.080078125, 0.022552490234375], "tokens": [1468, 2064, 3610, 7774, 280, 420, 4994, 1018, 225, 34, 499, 281, 12626, 35, 319, 10639, 319, 308, 36, 32, 429, 10639, 293]}
{"line_number": 703, "line_type": "generated", "code": "\n                       .add(arpos.scalarMultiply(ccovmu))\n                       .add(arpos.transpose().scalarMultiply(ccovmu))\n                       .add(square(arpos).scalarMultiply(negccov));\n            }\n        }", "entropy": 0.2998046875, "is_bug_line": false, "sus_score": 0.2581988897471611, "per_token_entropy": [0.1964111328125, 0.15478515625, 0.0268096923828125, 0.0648193359375, 0.357421875, 0.00518798828125, 0.0099334716796875, 0.06927490234375, 3.743171691894531e-05, 0.002033233642578125, 0.09747314453125, 0.0030727386474609375, 4.172325134277344e-06, 0.0008573532104492188, 1.02734375, 0.49609375, 0.48828125, 0.36181640625, 0.1519775390625, 2.521484375, 0.311767578125, 0.0208587646484375, 0.2470703125, 0.1829833984375, 0.2352294921875, 1.3947486877441406e-05, 0.007030487060546875, 0.14599609375, 0.038726806640625, 0.0010242462158203125, 0.00074005126953125, 0.92041015625, 0.3251953125, 0.255615234375, 0.5380859375, 0.12274169921875, 1.7451171875, 0.0062255859375, 1.16015625, 0.41650390625, 0.25244140625, 0.16796875, 0.00015783309936523438, 0.0162200927734375, 0.67138671875, 0.0069732666015625, 5.5670738220214844e-05, 0.255126953125, 0.28857421875, 0.004528045654296875, 1.2099609375, 0.00299835205078125], "tokens": [715, 638, 669, 26, 282, 966, 32, 13049, 27732, 26, 85, 331, 3149, 103, 490, 715, 638, 669, 26, 282, 966, 32, 16547, 922, 13049, 27732, 26, 85, 331, 3149, 103, 490, 715, 638, 669, 26, 9699, 26, 282, 966, 547, 13049, 27732, 26, 8095, 85, 12626, 876, 324, 320, 291, 320]}
