{"line_number": 189, "line_type": "original", "code": "                    break;", "entropy": 1.7763671875, "is_bug_line": true, "sus_score": 0.3779644730092272, "per_token_entropy": [4.3515625, 0.9736328125, 0.004413604736328125], "tokens": [4696, 1626, 45]}
{"line_number": 189, "line_type": "generated", "code": "\n                case RIGHT_SIDE:", "entropy": 0.19482421875, "is_bug_line": true, "sus_score": 0.3779644730092272, "per_token_entropy": [0.91259765625, 0.2235107421875, 0.031707763671875, 8.106231689453125e-06, 8.106231689453125e-06, 0.0009937286376953125], "tokens": [400, 1135, 20169, 81, 25590, 44]}
{"line_number": 125, "line_type": "original", "code": "        return solve(maxEval, f, min, max, startValue, AllowedSolution.ANY_SIDE);", "entropy": 1.18359375, "is_bug_line": false, "sus_score": 0.2773500981126146, "per_token_entropy": [4.515625, 7.6015625, 4.4921875, 1.3427734375, 0.93017578125, 0.00455474853515625, 0.01363372802734375, 0.0274505615234375, 0.0089111328125, 0.99951171875, 0.00614166259765625, 0.03387451171875, 0.03558349609375, 0.93505859375, 0.06695556640625, 2.09375, 3.51953125, 0.0014820098876953125, 0.0020618438720703125, 0.56640625, 0.001617431640625, 0.00022327899932861328, 0.01898193359375], "tokens": [351, 442, 10932, 26, 1449, 14066, 30, 296, 30, 1847, 30, 1769, 30, 1477, 882, 30, 38886, 13628, 32, 15205, 81, 25590, 293]}
{"line_number": 125, "line_type": "generated", "code": "\n            }\n\n            // Check for convergence.\n            if (FastMath.abs(fx) <= ftol) {\n                return x;\n            }\n\n            // Check for function value accuracy.\n            if (FastMath.abs(fx) <= atol) {\n               ", "entropy": 0.27490234375, "is_bug_line": false, "sus_score": 0.2773500981126146, "per_token_entropy": [0.8330078125, 0.00690460205078125, 0.8017578125, 0.0355224609375, 1.3388671875, 0.2025146484375, 0.51318359375, 0.0875244140625, 0.15869140625, 0.76708984375, 0.05609130859375, 0.58447265625, 0.0007634162902832031, 5.435943603515625e-05, 0.007659912109375, 0.0159454345703125, 0.197021484375, 0.0068511962890625, 0.0240631103515625, 0.45068359375, 6.401538848876953e-05, 0.6318359375, 0.001373291015625, 0.046356201171875, 0.303466796875, 0.153076171875, 0.003986358642578125, 0.0085601806640625, 0.0002808570861816406, 0.6455078125, 0.2430419921875, 1.0302734375, 0.384521484375, 1.73046875, 0.146240234375, 0.325927734375, 0.1295166015625, 0.2225341796875, 0.28564453125, 0.0284881591796875, 0.11859130859375, 1.3113021850585938e-05, 2.3365020751953125e-05, 0.004634857177734375, 0.0207672119140625, 0.53369140625, 0.0151519775390625, 0.0051422119140625, 0.219482421875, 0.92578125, 0.0006918907165527344, 0.040130615234375], "tokens": [324, 320, 1064, 434, 3456, 436, 47454, 32, 324, 415, 308, 12200, 5717, 32, 3596, 26, 5185, 27, 2511, 296, 14598, 27, 301, 400, 442, 816, 45, 324, 320, 1064, 434, 3456, 436, 667, 786, 14222, 32, 324, 415, 308, 12200, 5717, 32, 3596, 26, 5185, 27, 2511, 35012, 27, 301, 400]}
{"line_number": 172, "line_type": "original", "code": "            if (f1 * fx < 0) {", "entropy": 1.53125, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [4.9921875, 0.505859375, 0.1014404296875, 0.03668212890625, 0.01015472412109375, 9.25, 1.5244140625, 1.728515625, 0.0310821533203125, 0.0001659393310546875, 0.07281494140625, 0.11956787109375], "tokens": [1468, 415, 308, 88, 35, 319, 20670, 333, 225, 34, 27, 301]}
{"line_number": 172, "line_type": "generated", "code": "\n                    if (f1 >= 0) {\n                        return x1;\n                    }\n                    break;\n                default:\n                    // Should never happen.\n                    throw new MathInternalError();\n                }\n            }\n\n            // If the function value of the last approximation is too", "entropy": 0.121337890625, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [0.609375, 0.12646484375, 0.004314422607421875, 0.0102996826171875, 0.00507354736328125, 0.247802734375, 0.0006132125854492188, 6.29425048828125e-05, 0.00988006591796875, 0.0108642578125, 0.041717529296875, 0.011383056640625, 0.0018186569213867188, 0.004123687744140625, 0.00025463104248046875, 0.007167816162109375, 0.0002111196517944336, 0.09869384765625, 0.0029163360595703125, 0.0037860870361328125, 0.0306854248046875, 0.419189453125, 0.00148773193359375, 0.01499176025390625, 0.044403076171875, 0.026519775390625, 0.0028228759765625, 0.00154876708984375, 0.0236053466796875, 0.00443267822265625, 0.004650115966796875, 0.0088043212890625, 0.003459930419921875, 0.00012290477752685547, 0.002803802490234375, 0.0016565322875976562, 0.0113525390625, 0.0008130073547363281, 0.10174560546875, 0.0011444091796875, 0.325439453125, 0.05859375, 0.31591796875, 0.347412109375, 1.630859375, 0.1112060546875, 0.736328125, 0.041656494140625, 0.338623046875, 0.004787445068359375, 0.037109375, 0.45947265625], "tokens": [528, 415, 308, 88, 35, 2377, 225, 34, 27, 301, 715, 442, 816, 35, 45, 528, 320, 528, 1626, 45, 400, 1244, 44, 528, 434, 9043, 7152, 7292, 32, 528, 1422, 537, 4175, 4292, 924, 473, 400, 320, 324, 320, 1064, 434, 1670, 322, 667, 786, 432, 322, 2401, 39431, 438, 5133]}
{"line_number": 175, "line_type": "original", "code": "                x0 = x1;", "entropy": 1.8076171875, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [5.3671875, 5.85546875, 1.0546875, 0.017242431640625, 0.04901123046875, 0.28125, 0.03302001953125], "tokens": [2071, 816, 34, 280, 816, 35, 45]}
{"line_number": 175, "line_type": "generated", "code": "\n                }\n            }\n\n            // If the function value of the last approximation is too small,\n            // given the function value accuracy, then we can't get closer to\n            // the root than we already are.\n            if (FastMath.abs(x1", "entropy": 0.168212890625, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [0.60791015625, 0.430419921875, 0.190185546875, 0.0004222393035888672, 0.1768798828125, 0.044647216796875, 0.327880859375, 0.294677734375, 1.5888671875, 0.084716796875, 0.59130859375, 0.033477783203125, 0.2493896484375, 0.0037288665771484375, 0.038055419921875, 0.55126953125, 0.2066650390625, 0.11395263671875, 0.01308441162109375, 6.961822509765625e-05, 0.029083251953125, 0.026153564453125, 1.2353515625, 0.055328369140625, 0.0499267578125, 0.14208984375, 0.1741943359375, 0.07708740234375, 0.0280303955078125, 0.01007080078125, 0.00585174560546875, 0.0179595947265625, 0.006481170654296875, 0.002208709716796875, 0.006542205810546875, 0.0010051727294921875, 0.00092315673828125, 0.0037288665771484375, 0.0019092559814453125, 0.0016345977783203125, 0.00010955333709716797, 0.0169525146484375, 0.29443359375, 0.1400146484375, 0.042266845703125, 0.10882568359375, 1.2993812561035156e-05, 1.2159347534179688e-05, 0.0161895751953125, 0.00527191162109375, 0.488037109375, 0.21240234375], "tokens": [400, 320, 324, 320, 1064, 434, 1670, 322, 667, 786, 432, 322, 2401, 39431, 438, 5133, 5532, 30, 324, 434, 2702, 322, 667, 786, 14222, 30, 1615, 996, 883, 1330, 622, 30682, 372, 324, 434, 322, 3051, 2784, 996, 3425, 884, 32, 324, 415, 308, 12200, 5717, 32, 3596, 26, 106, 35]}
{"line_number": 176, "line_type": "original", "code": "                f0 = f1;", "entropy": 2.61328125, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [4.35546875, 11.4375, 0.90478515625, 0.197998046875, 1.1669921875, 0.0209808349609375, 0.213623046875], "tokens": [2071, 296, 34, 280, 296, 35, 45]}
{"line_number": 176, "line_type": "generated", "code": "\n                default:\n                    // Should never happen.\n                    throw new MathInternalError();\n                }\n            }\n\n            // If the absolute difference between the last approximation and\n            // the initial approximation is small enough, given the absolute\n            // accuracy, then we can't get", "entropy": 0.2607421875, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [0.279541015625, 1.2294921875, 0.0019855499267578125, 0.01424407958984375, 0.059783935546875, 0.0311126708984375, 0.0029430389404296875, 0.0015058517456054688, 0.0292510986328125, 0.00351715087890625, 0.005161285400390625, 0.007373809814453125, 0.002349853515625, 0.0004050731658935547, 0.00164031982421875, 0.002094268798828125, 0.016876220703125, 0.0010433197021484375, 0.1292724609375, 0.0003192424774169922, 0.1380615234375, 0.0421142578125, 0.40966796875, 0.252197265625, 2.36328125, 2.560546875, 0.064697265625, 0.409423828125, 1.3017578125, 0.30419921875, 0.07745361328125, 0.1949462890625, 0.0005602836608886719, 0.1094970703125, 1.0927734375, 0.225830078125, 0.0232391357421875, 0.6474609375, 0.07373046875, 0.053497314453125, 0.93896484375, 0.01467132568359375, 0.1295166015625, 0.006076812744140625, 0.00048828125, 0.0171356201171875, 0.027862548828125, 0.02435302734375, 0.11956787109375, 0.040740966796875, 0.0667724609375, 0.0140838623046875], "tokens": [400, 1244, 44, 528, 434, 9043, 7152, 7292, 32, 528, 1422, 537, 4175, 4292, 924, 473, 400, 320, 324, 320, 1064, 434, 1670, 322, 7976, 10563, 3733, 322, 2401, 39431, 461, 324, 434, 322, 2815, 39431, 438, 5532, 8448, 30, 2702, 322, 7976, 324, 434, 14222, 30, 1615, 996, 883, 1330, 622]}
{"line_number": 177, "line_type": "original", "code": "                inverted = !inverted;", "entropy": 2.64453125, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [5.390625, 8.8828125, 0.10003662109375, 1.4873046875, 0.002452850341796875, 0.0058746337890625], "tokens": [2071, 37592, 280, 653, 47910, 45]}
{"line_number": 177, "line_type": "generated", "code": "\n                }\n            }\n\n            // If the function value of the last approximation is too small,\n            // given the function value accuracy, then we can't get closer to\n            // the root than we already are.\n            if (FastMath.abs(x1", "entropy": 0.159423828125, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [0.36181640625, 0.004779815673828125, 0.1290283203125, 0.0004172325134277344, 0.261962890625, 0.054107666015625, 0.41357421875, 0.2313232421875, 1.7548828125, 0.07110595703125, 0.5361328125, 0.02801513671875, 0.2054443359375, 0.00342559814453125, 0.04229736328125, 0.53369140625, 0.2147216796875, 0.10992431640625, 0.008575439453125, 0.00012373924255371094, 0.03271484375, 0.04315185546875, 1.4521484375, 0.0478515625, 0.04522705078125, 0.1427001953125, 0.160888671875, 0.07000732421875, 0.031341552734375, 0.00942230224609375, 0.005710601806640625, 0.0137481689453125, 0.00647735595703125, 0.001461029052734375, 0.003070831298828125, 0.0009589195251464844, 0.0011320114135742188, 0.004215240478515625, 0.002231597900390625, 0.00131988525390625, 9.78708267211914e-05, 0.016204833984375, 0.20654296875, 0.137939453125, 0.038543701171875, 0.12359619140625, 9.894371032714844e-06, 8.940696716308594e-06, 0.0146484375, 0.00449371337890625, 0.537109375, 0.16650390625], "tokens": [400, 320, 324, 320, 1064, 434, 1670, 322, 667, 786, 432, 322, 2401, 39431, 438, 5133, 5532, 30, 324, 434, 2702, 322, 667, 786, 14222, 30, 1615, 996, 883, 1330, 622, 30682, 372, 324, 434, 322, 3051, 2784, 996, 3425, 884, 32, 324, 415, 308, 12200, 5717, 32, 3596, 26, 106, 35]}
{"line_number": 179, "line_type": "original", "code": "                switch (method) {", "entropy": 2.603515625, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [5.9296875, 4.7265625, 0.00794219970703125, 4.9296875, 0.011932373046875, 0.018218994140625], "tokens": [2071, 3578, 308, 1959, 27, 301]}
{"line_number": 179, "line_type": "generated", "code": "\n            }\n\n            // If the function value of the last approximation is too small,\n            // given the function value accuracy, then we can't get closer to\n            // the root than we already are.\n            if (FastMath.abs(x1 - x", "entropy": 0.185546875, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [0.444580078125, 0.51416015625, 0.473876953125, 0.0643310546875, 0.2861328125, 0.24755859375, 1.9404296875, 0.08465576171875, 0.5146484375, 0.02978515625, 0.2108154296875, 0.00394439697265625, 0.045562744140625, 0.51171875, 0.39306640625, 0.141357421875, 0.0168609619140625, 0.00018668174743652344, 0.0421142578125, 0.047119140625, 1.4345703125, 0.055328369140625, 0.04986572265625, 0.1495361328125, 0.1578369140625, 0.09259033203125, 0.04217529296875, 0.013153076171875, 0.007656097412109375, 0.017364501953125, 0.007160186767578125, 0.00232696533203125, 0.0010480880737304688, 0.00124359130859375, 0.0012540817260742188, 0.007343292236328125, 0.002597808837890625, 0.001434326171875, 0.0001081228256225586, 0.02374267578125, 0.240234375, 0.0888671875, 0.038055419921875, 0.0955810546875, 1.8358230590820312e-05, 2.2530555725097656e-05, 0.0169830322265625, 0.003810882568359375, 0.806640625, 0.2454833984375, 0.019744873046875, 0.009246826171875], "tokens": [324, 320, 1064, 434, 1670, 322, 667, 786, 432, 322, 2401, 39431, 438, 5133, 5532, 30, 324, 434, 2702, 322, 667, 786, 14222, 30, 1615, 996, 883, 1330, 622, 30682, 372, 324, 434, 322, 3051, 2784, 996, 3425, 884, 32, 324, 415, 308, 12200, 5717, 32, 3596, 26, 106, 35, 429, 816]}
{"line_number": 196, "line_type": "original", "code": "            x1 = x;", "entropy": 2.509765625, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [4.76171875, 8.34375, 1.3486328125, 0.0809326171875, 0.1895751953125, 0.327392578125], "tokens": [1468, 816, 35, 280, 816, 45]}
{"line_number": 196, "line_type": "generated", "code": "\n                }\n            }\n\n            // If the maximum number of iterations has been exceeded, we\n            // can't get a closer approximation to the root.\n            if (++iter == getMaxIterations()) {\n                switch (allowed) {\n                case ANY_SIDE:\n                    return", "entropy": 0.39697265625, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [0.12255859375, 1.2763671875, 0.08819580078125, 0.0016698837280273438, 0.43798828125, 0.063232421875, 0.86865234375, 0.5380859375, 0.673828125, 0.137451171875, 0.0013904571533203125, 0.11834716796875, 0.67724609375, 0.017578125, 0.14208984375, 0.045928955078125, 1.333984375, 1.068359375, 0.005382537841796875, 1.34375, 0.09295654296875, 0.42333984375, 0.6552734375, 0.95654296875, 0.0027904510498046875, 0.97314453125, 0.020751953125, 0.0958251953125, 0.72998046875, 0.3056640625, 0.2335205078125, 0.56005859375, 2.240234375, 0.92529296875, 1.0263671875, 0.919921875, 0.00775909423828125, 0.0031948089599609375, 0.054779052734375, 1.0908203125, 0.0023593902587890625, 0.09381103515625, 0.0009613037109375, 0.00023472309112548828, 0.04156494140625, 0.0026683807373046875, 0.056121826171875, 4.6133995056152344e-05, 1.2636184692382812e-05, 0.0018587112426757812, 0.068603515625, 0.09185791015625], "tokens": [400, 320, 324, 320, 1064, 434, 1670, 322, 7091, 1451, 432, 17576, 1401, 2583, 31793, 30, 996, 324, 434, 883, 1330, 622, 312, 30682, 39431, 372, 322, 3051, 32, 324, 415, 41067, 1731, 610, 39486, 31219, 1157, 301, 400, 3578, 308, 11327, 27, 301, 400, 1135, 2964, 81, 25590, 44, 528, 442]}
{"line_number": 197, "line_type": "original", "code": "            f1 = fx;", "entropy": 2.609375, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [5.81640625, 8.6484375, 0.62255859375, 0.277099609375, 0.258056640625, 0.032989501953125], "tokens": [1468, 296, 35, 280, 20670, 45]}
{"line_number": 197, "line_type": "generated", "code": "\n                    // Should never happen.\n                    throw new MathInternalError();\n                }\n            }\n\n            // If the function value of the new approximation is too small,\n            // given the function value accuracy, then we can't get closer to\n            // the root than we", "entropy": 0.2127685546875, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [0.6630859375, 1.548828125, 0.0457763671875, 0.004726409912109375, 0.00203704833984375, 0.037750244140625, 0.0255279541015625, 0.046142578125, 0.00432586669921875, 0.0006766319274902344, 0.0002193450927734375, 9.012222290039062e-05, 0.0019741058349609375, 0.0162200927734375, 0.00040221214294433594, 0.0138092041015625, 0.0015687942504882812, 0.5537109375, 0.0743408203125, 1.0615234375, 0.4765625, 1.8701171875, 0.155517578125, 0.75634765625, 0.03729248046875, 1.96875, 0.0183563232421875, 0.047515869140625, 0.225830078125, 0.271240234375, 0.184814453125, 0.10400390625, 0.0001646280288696289, 0.1954345703125, 0.016387939453125, 0.11572265625, 0.008697509765625, 0.00333404541015625, 0.01045989990234375, 0.1051025390625, 0.199951171875, 0.07415771484375, 0.01953125, 0.0197296142578125, 0.0229644775390625, 0.0212249755859375, 0.001880645751953125, 0.000213623046875, 0.004467010498046875, 0.00313568115234375, 0.0165252685546875, 0.004199981689453125], "tokens": [528, 434, 9043, 7152, 7292, 32, 528, 1422, 537, 4175, 4292, 924, 473, 400, 320, 324, 320, 1064, 434, 1670, 322, 667, 786, 432, 322, 537, 39431, 438, 5133, 5532, 30, 324, 434, 2702, 322, 667, 786, 14222, 30, 1615, 996, 883, 1330, 622, 30682, 372, 324, 434, 322, 3051, 2784, 996]}
{"line_number": 202, "line_type": "original", "code": "            if (FastMath.abs(f1) <= ftol) {", "entropy": 1.119140625, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [6.609375, 2.427734375, 0.12890625, 2.916015625, 0.00021708011627197266, 0.0002963542938232422, 0.05743408203125, 0.004169464111328125, 1.447265625, 0.12017822265625, 0.041290283203125, 0.79296875, 3.216796875, 0.0848388671875, 0.041168212890625, 0.011138916015625], "tokens": [1468, 415, 308, 12200, 5717, 32, 3596, 26, 88, 35, 27, 2511, 296, 14598, 27, 301]}
{"line_number": 202, "line_type": "generated", "code": "\n\n    /**\n     * Get the relative accuracy of the value of the objective function.\n     *\n     * @return the relative accuracy of the value of the objective function.\n     */\n    protected double getRelativeAccuracy() {\n        return relativeAccuracy;\n    }\n\n    /**", "entropy": 0.297607421875, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [1.5, 0.161376953125, 0.14306640625, 9.846687316894531e-05, 2.171875, 0.1202392578125, 0.96044921875, 0.00945281982421875, 0.529296875, 0.05120849609375, 1.9912109375, 0.262451171875, 0.0755615234375, 0.6279296875, 0.00228118896484375, 0.11004638671875, 0.10113525390625, 0.007152557373046875, 1.0224609375, 0.0003008842468261719, 0.0489501953125, 0.002964019775390625, 0.2205810546875, 0.1329345703125, 0.005008697509765625, 0.63671875, 0.012542724609375, 0.07794189453125, 0.016510009765625, 0.004322052001953125, 0.0031757354736328125, 0.054931640625, 1.0205078125, 0.004451751708984375, 0.1881103515625, 0.0267181396484375, 0.80322265625, 0.61669921875, 0.0008273124694824219, 0.0305938720703125, 1.2516975402832031e-05, 0.0009436607360839844, 0.0035247802734375, 0.031829833984375, 0.1187744140625, 1.1669921875, 0.0014028549194335938, 0.01113128662109375, 0.0021038055419921875, 0.0002875328063964844, 0.381103515625, 0.006412506103515625], "tokens": [446, 1022, 275, 319, 1390, 322, 6491, 14222, 432, 322, 786, 432, 322, 25110, 667, 32, 275, 319, 275, 319, 477, 601, 322, 6491, 14222, 432, 322, 786, 432, 322, 25110, 667, 32, 275, 569, 284, 2522, 2064, 622, 11777, 26201, 346, 301, 291, 442, 6491, 26201, 45, 284, 320, 446, 1022]}
{"line_number": 233, "line_type": "original", "code": "            if (FastMath.abs(x1 - x0) < FastMath.max(rtol * FastMath.abs(x1),", "entropy": 0.88232421875, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [6.7109375, 2.546875, 0.14013671875, 3.833984375, 3.3736228942871094e-05, 0.00023376941680908203, 0.03118896484375, 0.00235748291015625, 1.6796875, 0.548828125, 0.1888427734375, 0.03204345703125, 0.0947265625, 0.0020904541015625, 2.57421875, 3.466796875, 1.430511474609375e-05, 0.0033168792724609375, 0.96826171875, 0.041015625, 3.234375, 0.00023663043975830078, 0.302978515625, 0.252197265625, 6.4373016357421875e-06, 0.00252532958984375, 0.2347412109375, 0.0007696151733398438, 0.0063018798828125, 0.411865234375, 0.04461669921875], "tokens": [1468, 415, 308, 12200, 5717, 32, 3596, 26, 106, 35, 429, 816, 34, 27, 333, 15938, 5717, 32, 1449, 26, 2051, 362, 319, 15938, 5717, 32, 3596, 26, 106, 35, 471]}
{"line_number": 233, "line_type": "generated", "code": "\n    /**\n     * Computes the root of the function {@code f} with the initial guess\n     * {@code x0} using the {@link IllinoisSolver <em>Illinois</em>} method.\n     *\n     * @param f Function.\n    ", "entropy": 0.501953125, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [1.7392578125, 0.252197265625, 0.498779296875, 0.00017595291137695312, 3.126953125, 0.40771484375, 2.26171875, 0.0936279296875, 1.47265625, 0.446533203125, 1.7939453125, 0.00807952880859375, 0.0273284912109375, 0.306640625, 2.3515625, 0.50390625, 0.51025390625, 1.8076171875, 0.044342041015625, 2.205371856689453e-05, 0.05853271484375, 0.00087738037109375, 0.15234375, 0.07025146484375, 0.58056640625, 0.75341796875, 0.1927490234375, 1.4013671875, 0.08758544921875, 1.134765625, 0.002506256103515625, 0.005237579345703125, 0.1839599609375, 0.0001633167266845703, 6.747245788574219e-05, 0.006549835205078125, 0.0008654594421386719, 0.0064239501953125, 1.728534698486328e-05, 0.04327392578125, 0.293212890625, 0.333251953125, 0.028472900390625, 0.0141448974609375, 0.480712890625, 0.0007920265197753906, 0.21337890625, 0.0169219970703125, 0.2076416015625, 1.3974609375, 0.77587890625, 0.004302978515625], "tokens": [284, 1022, 275, 319, 41932, 322, 3051, 432, 322, 667, 3088, 687, 296, 111, 623, 322, 2815, 11089, 275, 319, 3088, 687, 816, 34, 111, 1471, 322, 3088, 1204, 41643, 44094, 17766, 333, 405, 48, 30479, 44094, 377, 405, 14649, 1411, 32, 275, 319, 275, 319, 477, 753, 296, 4540, 32, 275]}
{"line_number": 250, "line_type": "original", "code": "        }", "entropy": 4.265625, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [6.30078125, 2.2265625], "tokens": [351, 320]}
{"line_number": 250, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [], "tokens": []}
{"line_number": 69, "line_type": "original", "code": "        super(absoluteAccuracy);", "entropy": 3.359375, "is_bug_line": false, "sus_score": 0.2, "per_token_entropy": [3.181640625, 5.8046875, 5.07421875, 4.51953125, 0.0016984939575195312, 1.5712890625], "tokens": [351, 2599, 26, 11148, 26201, 293]}
{"line_number": 69, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Solve for a zero in the given interval, start at {@code startValue}.\n     *\n     * @param maxEval Maximum number of evaluations.\n     * @param f Function.\n     * @param min Lower bound for the", "entropy": 0.14697265625, "is_bug_line": false, "sus_score": 0.2, "per_token_entropy": [0.2568359375, 0.1424560546875, 0.376708984375, 0.053680419921875, 0.50244140625, 2.1457672119140625e-05, 1.5869140625, 0.0128173828125, 0.03375244140625, 0.02899169921875, 0.81982421875, 0.0046844482421875, 0.00603485107421875, 0.0125885009765625, 0.47412109375, 0.135009765625, 0.64111328125, 0.2095947265625, 0.0005154609680175781, 0.05633544921875, 0.1038818359375, 0.037567138671875, 0.01435089111328125, 0.0015802383422851562, 0.399169921875, 9.465217590332031e-05, 0.01366424560546875, 0.0028629302978515625, 0.440185546875, 0.00885772705078125, 0.0809326171875, 0.0150909423828125, 0.00015175342559814453, 0.037811279296875, 7.271766662597656e-06, 0.0103607177734375, 0.00116729736328125, 3.337860107421875e-06, 0.0003006458282470703, 0.00025844573974609375, 0.0132904052734375, 0.276611328125, 0.6181640625, 0.0007309913635253906, 1.4543533325195312e-05, 0.0001653432846069336, 0.0002295970916748047, 0.055206298828125, 0.0262603759765625, 0.0207672119140625, 0.09722900390625, 0.01224517822265625], "tokens": [284, 320, 446, 1022, 275, 319, 47005, 436, 312, 5934, 328, 322, 2702, 7898, 30, 1477, 821, 3088, 687, 1477, 882, 4009, 275, 319, 275, 319, 477, 753, 1769, 14066, 18690, 1451, 432, 6130, 993, 32, 275, 319, 477, 753, 296, 4540, 32, 275, 319, 477, 753, 1847, 35245, 5085, 436, 322]}
{"line_number": 70, "line_type": "original", "code": "        this.allowed = AllowedSolution.ANY_SIDE;", "entropy": 1.1708984375, "is_bug_line": false, "sus_score": 0.2, "per_token_entropy": [4.77734375, 3.162109375, 0.01425933837890625, 3.720703125, 0.010894775390625, 2.046875, 0.0007300376892089844, 0.0008959770202636719, 0.260009765625, 0.0009202957153320312, 1.3709068298339844e-05, 0.05279541015625], "tokens": [351, 458, 32, 11327, 280, 38886, 13628, 32, 15205, 81, 25590, 45]}
{"line_number": 70, "line_type": "generated", "code": "\n    /**\n     * Solve for a zero in the given interval, start with a bracketing\n     * interval.\n     *\n     * @param maxEval Maximum number of evaluations.\n     * @param f Function.\n     * @param min Lower bound for the", "entropy": 0.24658203125, "is_bug_line": false, "sus_score": 0.2, "per_token_entropy": [0.67236328125, 0.1917724609375, 0.347412109375, 5.245208740234375e-05, 1.173828125, 0.01041412353515625, 0.042724609375, 0.024078369140625, 0.6640625, 0.00397491455078125, 0.005268096923828125, 0.016754150390625, 0.53515625, 0.121826171875, 2.03515625, 1.39453125, 1.5068359375, 0.1287841796875, 0.65380859375, 3.921985626220703e-05, 0.6865234375, 0.66796875, 0.067626953125, 0.005001068115234375, 0.16796875, 0.000148773193359375, 0.021575927734375, 0.00412750244140625, 0.33837890625, 0.00939178466796875, 0.07537841796875, 0.0161590576171875, 0.00013649463653564453, 0.045013427734375, 1.2159347534179688e-05, 0.01357269287109375, 0.001712799072265625, 6.556510925292969e-06, 0.0003178119659423828, 0.0002206563949584961, 0.01076507568359375, 0.2293701171875, 0.6533203125, 0.0007472038269042969, 4.8279762268066406e-05, 0.00021898746490478516, 0.0004451274871826172, 0.16357421875, 0.019989013671875, 0.0181121826171875, 0.050994873046875, 0.024627685546875], "tokens": [284, 1022, 275, 319, 47005, 436, 312, 5934, 328, 322, 2702, 7898, 30, 1477, 623, 312, 33828, 299, 275, 319, 7898, 32, 275, 319, 275, 319, 477, 753, 1769, 14066, 18690, 1451, 432, 6130, 993, 32, 275, 319, 477, 753, 296, 4540, 32, 275, 319, 477, 753, 1847, 35245, 5085, 436, 322]}
{"line_number": 71, "line_type": "original", "code": "        this.method = method;", "entropy": 1.728515625, "is_bug_line": false, "sus_score": 0.2, "per_token_entropy": [4.6953125, 5.08984375, 0.06982421875, 1.5458984375, 0.1995849609375, 0.419921875, 0.082763671875], "tokens": [351, 458, 32, 1959, 280, 1411, 45]}
{"line_number": 71, "line_type": "generated", "code": "\n    /**\n     * Solve for a zero in the given interval.\n     *\n     * @param maxEval Maximum number of evaluations.\n     * @param f Function to solve.\n     * @param min Lower bound for the interval.\n     * @param max", "entropy": 0.1549072265625, "is_bug_line": false, "sus_score": 0.2, "per_token_entropy": [1.0224609375, 0.30029296875, 0.33203125, 4.374980926513672e-05, 1.60546875, 0.0119476318359375, 0.048919677734375, 0.0253143310546875, 0.927734375, 0.003986358642578125, 0.0063629150390625, 0.0178680419921875, 1.28125, 0.018707275390625, 0.00247955322265625, 0.18994140625, 0.00013172626495361328, 0.01456451416015625, 0.0029048919677734375, 0.3974609375, 0.00933074951171875, 0.06927490234375, 0.01560211181640625, 0.00011074542999267578, 0.042877197265625, 6.794929504394531e-06, 0.00728607177734375, 0.0010509490966796875, 7.033348083496094e-06, 0.00040078163146972656, 0.0003986358642578125, 0.0166015625, 0.2403564453125, 0.90576171875, 0.1851806640625, 0.02130126953125, 0.0007567405700683594, 0.00010597705841064453, 0.0002052783966064453, 0.0006513595581054688, 0.12408447265625, 0.03253173828125, 0.016998291015625, 0.043212890625, 0.007904052734375, 0.00891876220703125, 0.0038852691650390625, 0.0005512237548828125, 5.125999450683594e-06, 0.00017523765563964844, 0.00022017955780029297, 0.09112548828125], "tokens": [284, 1022, 275, 319, 47005, 436, 312, 5934, 328, 322, 2702, 7898, 32, 275, 319, 275, 319, 477, 753, 1769, 14066, 18690, 1451, 432, 6130, 993, 32, 275, 319, 477, 753, 296, 4540, 372, 10932, 32, 275, 319, 477, 753, 1847, 35245, 5085, 436, 322, 7898, 32, 275, 319, 477, 753, 1769]}
{"line_number": 72, "line_type": "original", "code": "    }", "entropy": 3.013671875, "is_bug_line": false, "sus_score": 0.2, "per_token_entropy": [0.78759765625, 5.23828125], "tokens": [264, 320]}
{"line_number": 72, "line_type": "generated", "code": "    @Override\n    protected double doSolve()\n        throws ConvergenceException, MathInternalError {\n        // Verify bracketing conditions.\n        verifyBracketing(f, min, max, startValue);\n\n        // Compute the first midpoint.\n        final double", "entropy": 0.447998046875, "is_bug_line": false, "sus_score": 0.2, "per_token_entropy": [0.78759765625, 1.3642578125, 0.00902557373046875, 0.05950927734375, 0.0158233642578125, 0.313232421875, 0.0005130767822265625, 0.0006837844848632812, 0.00028395652770996094, 1.4111328125, 0.002166748046875, 0.6708984375, 5.054473876953125e-05, 1.8835067749023438e-05, 0.0007176399230957031, 0.94873046875, 0.496337890625, 0.37939453125, 2.86102294921875e-06, 0.07952880859375, 0.88525390625, 0.62744140625, 3.0, 1.27734375, 0.2188720703125, 0.417236328125, 0.038238525390625, 0.356201171875, 0.258544921875, 0.1510009765625, 0.000682830810546875, 0.0765380859375, 0.6689453125, 0.10601806640625, 0.0941162109375, 0.003223419189453125, 0.488037109375, 0.7333984375, 0.0784912109375, 0.005298614501953125, 0.0241851806640625, 0.45361328125, 0.1519775390625, 2.146484375, 1.451171875, 0.4921875, 1.6875, 0.0299835205078125, 0.23876953125, 0.1500244140625, 0.422607421875, 0.0236053466796875], "tokens": [264, 477, 1788, 284, 2522, 2064, 745, 37530, 346, 291, 2571, 1336, 424, 27976, 984, 30, 4175, 4292, 924, 301, 291, 434, 12072, 33828, 299, 5479, 32, 291, 6144, 24086, 299, 26, 88, 30, 1847, 30, 1769, 30, 1477, 882, 293, 584, 434, 12836, 322, 1932, 11906, 1493, 32, 291, 1158, 2064]}
{"line_number": 150, "line_type": "original", "code": "        final double ftol = getFunctionValueAccuracy();", "entropy": 1.51953125, "is_bug_line": false, "sus_score": 0.19611613513818404, "per_token_entropy": [4.45703125, 4.53125, 0.118896484375, 3.330078125, 3.08984375, 0.0160980224609375, 1.1162109375, 0.0003025531768798828, 6.854534149169922e-05, 0.0005831718444824219, 0.0654296875], "tokens": [351, 1158, 2064, 296, 14598, 280, 622, 2447, 882, 26201, 473]}
{"line_number": 150, "line_type": "generated", "code": "\n            if (FastMath.abs(fx) <= atol) {\n                switch (allowed) {\n                case ANY_SIDE:\n                    return x;\n                case LEFT_SIDE:\n                    return inverted? x1 : x0;\n                case RIGHT_SIDE:", "entropy": 0.18798828125, "is_bug_line": false, "sus_score": 0.19611613513818404, "per_token_entropy": [0.1134033203125, 0.280029296875, 0.1339111328125, 0.416015625, 0.0006837844848632812, 0.00015282630920410156, 0.01308441162109375, 0.006988525390625, 1.1484375, 0.00791168212890625, 0.111572265625, 1.0107421875, 0.415283203125, 0.025482177734375, 0.16455078125, 1.80859375, 0.0090179443359375, 0.140625, 0.0094451904296875, 0.0014104843139648438, 0.127685546875, 0.00998687744140625, 0.2186279296875, 0.00023627281188964844, 0.0009684562683105469, 0.010406494140625, 0.2493896484375, 0.6669921875, 0.1083984375, 0.0919189453125, 0.019866943359375, 0.00991058349609375, 0.3681640625, 0.0001537799835205078, 0.0008893013000488281, 0.000667572021484375, 0.0157318115234375, 0.472900390625, 0.142578125, 0.021484375, 0.74169921875, 0.26318359375, 0.004077911376953125, 0.00510406494140625, 0.367431640625, 0.0002357959747314453, 0.004131317138671875, 0.0231170654296875, 0.006561279296875, 3.337860107421875e-06, 2.6226043701171875e-06, 0.00016963481903076172], "tokens": [324, 415, 308, 12200, 5717, 32, 3596, 26, 5185, 27, 2511, 35012, 27, 301, 400, 3578, 308, 11327, 27, 301, 400, 1135, 2964, 81, 25590, 44, 528, 442, 816, 45, 400, 1135, 17789, 81, 25590, 44, 528, 442, 37592, 1018, 816, 35, 499, 816, 34, 45, 400, 1135, 20169, 81, 25590, 44]}
{"line_number": 151, "line_type": "original", "code": "        final double atol = getAbsoluteAccuracy();", "entropy": 1.79296875, "is_bug_line": false, "sus_score": 0.19611613513818404, "per_token_entropy": [2.953125, 5.5625, 0.0340576171875, 6.87890625, 0.043975830078125, 0.529296875, 0.031951904296875, 0.00025153160095214844, 0.10980224609375], "tokens": [351, 1158, 2064, 35012, 280, 622, 12043, 26201, 473]}
{"line_number": 151, "line_type": "generated", "code": "\n            // the root.\n            if (FastMath.abs(f1) <= ftol) {\n                return checkResult(x1);\n            }", "entropy": 0.439697265625, "is_bug_line": false, "sus_score": 0.19611613513818404, "per_token_entropy": [0.390625, 1.4404296875, 0.168212890625, 0.341064453125, 1.6923828125, 1.3798828125, 0.126220703125, 0.11798095703125, 0.59423828125, 0.000560760498046875, 0.00013899803161621094, 0.007568359375, 0.004840850830078125, 0.40087890625, 0.0174560546875, 0.01027679443359375, 0.2000732421875, 0.051788330078125, 0.00017023086547851562, 0.08294677734375, 0.0103607177734375, 0.151611328125, 1.8193359375, 2.140625, 1.1591796875, 0.056884765625, 0.358642578125, 0.3349609375, 0.5546875, 0.0204925537109375, 0.00040912628173828125], "tokens": [324, 434, 322, 3051, 32, 324, 415, 308, 12200, 5717, 32, 3596, 26, 88, 35, 27, 2511, 296, 14598, 27, 301, 400, 442, 1505, 1394, 26, 106, 35, 293, 324, 320]}
{"line_number": 152, "line_type": "original", "code": "        final double rtol = getRelativeAccuracy();", "entropy": 1.8046875, "is_bug_line": false, "sus_score": 0.19611613513818404, "per_token_entropy": [5.3359375, 4.87109375, 0.105712890625, 6.65625, 0.0014743804931640625, 0.0771484375, 0.8359375, 0.034912109375, 6.783008575439453e-05, 0.1258544921875], "tokens": [351, 1158, 2064, 12190, 362, 280, 622, 11777, 26201, 473]}
{"line_number": 152, "line_type": "generated", "code": "\n\n            // If we have found a value that is very close to the root,\n            // but not exactly the root, then we can't get any closer\n            // to the root.\n            if (FastMath.abs(fx) <= atol) {\n               ", "entropy": 0.6005859375, "is_bug_line": false, "sus_score": 0.19611613513818404, "per_token_entropy": [0.587890625, 0.07281494140625, 0.426513671875, 1.69140625, 1.3447265625, 1.9990234375, 0.63720703125, 1.6005859375, 0.81494140625, 0.386962890625, 2.90234375, 0.02227783203125, 0.0238189697265625, 0.190185546875, 0.81103515625, 0.38330078125, 1.35546875, 0.0012464523315429688, 1.2216796875, 0.94921875, 1.1630859375, 1.619140625, 0.07427978515625, 0.047119140625, 0.51220703125, 0.8212890625, 0.6318359375, 0.273681640625, 1.0478515625, 0.2259521484375, 0.02325439453125, 1.392578125, 0.0014848709106445312, 0.1461181640625, 0.13720703125, 0.016448974609375, 1.1953125, 0.9931640625, 0.16357421875, 0.146240234375, 0.3955078125, 0.0005807876586914062, 0.00012159347534179688, 0.027923583984375, 0.0102081298828125, 1.119140625, 0.0228729248046875, 0.185546875, 1.1123046875, 0.0938720703125, 0.0030040740966796875, 0.202880859375], "tokens": [1064, 434, 1670, 996, 1159, 2431, 312, 786, 688, 438, 5029, 4230, 372, 322, 3051, 30, 324, 434, 1273, 646, 11114, 322, 3051, 30, 1615, 996, 883, 1330, 622, 1346, 30682, 324, 434, 372, 322, 3051, 32, 324, 415, 308, 12200, 5717, 32, 3596, 26, 5185, 27, 2511, 35012, 27, 301, 400]}
{"line_number": 156, "line_type": "original", "code": "        boolean inverted = false;", "entropy": 3.220703125, "is_bug_line": false, "sus_score": 0.19611613513818404, "per_token_entropy": [3.576171875, 11.1875, 3.765625, 0.59814453125, 0.1900634765625, 0.0139923095703125], "tokens": [351, 1905, 37592, 280, 901, 45]}
{"line_number": 156, "line_type": "generated", "code": "\n                case LEFT_SIDE:\n                    return inverted? x1 : x0;\n                case RIGHT_SIDE:\n                    return inverted? x0 : x1;\n                default:\n                    // Should never happen.\n                    throw new MathInternalError();\n                }\n            }", "entropy": 0.08538818359375, "is_bug_line": false, "sus_score": 0.19611613513818404, "per_token_entropy": [0.38720703125, 0.2127685546875, 0.4384765625, 0.00016677379608154297, 0.0021648406982421875, 0.0025882720947265625, 0.0787353515625, 0.365234375, 0.515625, 0.00817108154296875, 0.458251953125, 0.5380859375, 0.0099945068359375, 0.131591796875, 0.044219970703125, 0.0006551742553710938, 0.61376953125, 0.0231170654296875, 0.00951385498046875, 7.748603820800781e-06, 1.7881393432617188e-06, 0.00023043155670166016, 0.007213592529296875, 0.002162933349609375, 0.0021419525146484375, 7.033348083496094e-05, 0.0010118484497070312, 0.00116729736328125, 0.00098419189453125, 0.00014150142669677734, 0.00023162364959716797, 0.00036597251892089844, 0.06927490234375, 0.28759765625, 0.001789093017578125, 0.016448974609375, 0.09747314453125, 0.0435791015625, 0.004306793212890625, 0.0018253326416015625, 0.026336669921875, 0.0031871795654296875, 0.003841400146484375, 0.0040283203125, 0.00547027587890625, 0.00017440319061279297, 0.0013675689697265625, 0.0009427070617675781, 0.004558563232421875, 0.0002161264419555664, 0.01404571533203125, 0.00029087066650390625], "tokens": [400, 1135, 17789, 81, 25590, 44, 528, 442, 37592, 1018, 816, 35, 499, 816, 34, 45, 400, 1135, 20169, 81, 25590, 44, 528, 442, 37592, 1018, 816, 34, 499, 816, 35, 45, 400, 1244, 44, 528, 434, 9043, 7152, 7292, 32, 528, 1422, 537, 4175, 4292, 924, 473, 400, 320, 324, 320]}
{"line_number": 161, "line_type": "original", "code": "            final double x = x1 - ((f1 * (x1 - x0)) / (f1 - f0));", "entropy": 0.97802734375, "is_bug_line": false, "sus_score": 0.19611613513818404, "per_token_entropy": [3.064453125, 10.359375, 0.137939453125, 2.021484375, 1.7509765625, 0.59521484375, 1.0244140625, 0.36669921875, 4.0859375, 1.4619140625, 0.0865478515625, 0.890625, 0.24169921875, 0.030242919921875, 0.1282958984375, 0.0051727294921875, 0.0027408599853515625, 0.0019168853759765625, 0.06256103515625, 0.004184722900390625, 0.0416259765625, 0.01317596435546875, 0.0187835693359375, 0.006420135498046875, 0.0009350776672363281, 0.00014710426330566406, 0.006591796875], "tokens": [1468, 1158, 2064, 816, 280, 816, 35, 429, 1833, 88, 35, 319, 308, 106, 35, 429, 816, 34, 490, 517, 308, 88, 35, 429, 296, 34, 876]}
{"line_number": 161, "line_type": "generated", "code": "\n                case RIGHT_SIDE:\n                    if (!inverted) {\n                        return x1;\n                    }\n                    break;\n                default:\n                    // Should never happen.\n                    throw new MathInternalError();\n                }\n            }\n\n            // If the maximum number of evaluations has", "entropy": 0.13330078125, "is_bug_line": false, "sus_score": 0.19611613513818404, "per_token_entropy": [0.2225341796875, 0.34375, 0.0538330078125, 5.6624412536621094e-05, 2.2649765014648438e-06, 0.0036525726318359375, 0.0284423828125, 0.008270263671875, 0.06634521484375, 0.0014247894287109375, 0.0008916854858398438, 0.000949859619140625, 0.00469970703125, 0.0017261505126953125, 0.0008559226989746094, 0.01092529296875, 7.128715515136719e-05, 0.0033397674560546875, 0.00013959407806396484, 0.06060791015625, 0.0018949508666992188, 0.0006685256958007812, 0.1295166015625, 0.451416015625, 0.0015268325805664062, 0.0175018310546875, 0.1357421875, 0.055389404296875, 0.00539398193359375, 0.002079010009765625, 0.0298004150390625, 0.004398345947265625, 0.005367279052734375, 0.00211334228515625, 0.006381988525390625, 0.00020599365234375, 0.000316619873046875, 0.0015277862548828125, 0.00860595703125, 0.0006351470947265625, 0.0950927734375, 0.00035071372985839844, 0.1407470703125, 0.09912109375, 0.705078125, 0.32080078125, 2.341796875, 0.6201171875, 0.0023860931396484375, 0.329833984375, 2.872943878173828e-05, 0.60107421875], "tokens": [400, 1135, 20169, 81, 25590, 44, 528, 415, 1429, 47910, 27, 301, 715, 442, 816, 35, 45, 528, 320, 528, 1626, 45, 400, 1244, 44, 528, 434, 9043, 7152, 7292, 32, 528, 1422, 537, 4175, 4292, 924, 473, 400, 320, 324, 320, 1064, 434, 1670, 322, 7091, 1451, 432, 6130, 993, 1401]}
