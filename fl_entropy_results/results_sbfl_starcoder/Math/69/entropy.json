{"line_number": 68, "line_type": "original", "code": "        this(new BlockRealMatrix(data));", "entropy": 2.44921875, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [3.50390625, 6.46875, 3.6015625, 5.09375, 1.6171875, 0.0028362274169921875, 0.0007309913635253906, 0.0278778076171875, 2.921875, 1.263671875], "tokens": [351, 458, 26, 890, 6575, 6877, 4161, 26, 605, 876]}
{"line_number": 68, "line_type": "generated", "code": "    }\n\n    /**\n     * Returns the correlation coefficient between the two variables\n     *\n     * @param row index of first variable\n     * @param col index of second variable\n     * @return correlation coefficient between the two variables", "entropy": 0.40771484375, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [1.107421875, 0.357666015625, 1.0361328125, 0.0206451416015625, 0.019927978515625, 5.8770179748535156e-05, 0.84326171875, 0.158203125, 0.9560546875, 1.2373046875, 0.265869140625, 1.017578125, 0.1572265625, 1.28125, 0.935546875, 0.0003790855407714844, 0.935546875, 0.00036144256591796875, 0.0054473876953125, 0.005794525146484375, 1.646484375, 1.349609375, 0.044097900390625, 1.5390625, 0.07122802734375, 0.1627197265625, 3.6716461181640625e-05, 0.0001081228256225586, 0.0002186298370361328, 1.013671875, 0.00677490234375, 0.0022220611572265625, 0.01137542724609375, 0.0016651153564453125, 0.0305328369140625, 0.0011110305786132812, 0.00695037841796875, 0.01190948486328125, 0.2388916015625, 0.103515625, 0.63232421875, 0.63134765625, 0.056915283203125, 0.0286407470703125], "tokens": [264, 320, 446, 1022, 275, 319, 3759, 322, 24716, 17134, 3733, 322, 3134, 4886, 275, 319, 275, 319, 477, 753, 2698, 1650, 432, 1932, 2677, 275, 319, 477, 753, 932, 1650, 432, 3100, 2677, 275, 319, 477, 601, 24716, 17134, 3733, 322, 3134, 4886]}
{"line_number": 69, "line_type": "original", "code": "    }", "entropy": 3.10546875, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [2.1015625, 4.109375], "tokens": [264, 320]}
{"line_number": 69, "line_type": "generated", "code": "\n    public RealMatrix getCorrelationMatrix() {\n        return correlationMatrix;\n    }\n\n    /**\n     * Returns the correlation coefficients between pairs of columns\n     * of the input matrix.\n     *\n     * @param matrix matrix with columns representing variables to correlate\n     *", "entropy": 0.31640625, "is_bug_line": false, "sus_score": 1.0, "per_token_entropy": [1.5859375, 0.92626953125, 0.0087127685546875, 1.430511474609375e-06, 0.0010080337524414062, 7.832050323486328e-05, 6.186962127685547e-05, 0.018035888671875, 0.0122833251953125, 0.1456298828125, 0.05029296875, 0.01019287109375, 4.38690185546875e-05, 0.018707275390625, 0.179443359375, 0.0017309188842773438, 0.07073974609375, 0.003204345703125, 0.00777435302734375, 5.078315734863281e-05, 0.49072265625, 0.1444091796875, 1.2275390625, 1.7080078125, 0.87255859375, 1.0283203125, 0.0192718505859375, 0.430908203125, 1.31640625, 0.00017321109771728516, 0.320068359375, 0.0421142578125, 0.966796875, 0.58837890625, 0.323486328125, 0.5107421875, 0.00012099742889404297, 0.1580810546875, 2.014636993408203e-05, 0.03558349609375, 0.44677734375, 0.133544921875, 0.599609375, 0.8115234375, 0.034027099609375, 0.5986328125, 0.1259765625, 0.25634765625, 0.2000732421875, 0.00923919677734375, 0.01702880859375, 0.0039825439453125], "tokens": [284, 562, 11443, 4161, 622, 35530, 4161, 346, 301, 291, 442, 24716, 4161, 45, 284, 320, 446, 1022, 275, 319, 3759, 322, 24716, 26370, 3733, 11847, 432, 6090, 275, 319, 432, 322, 1509, 5045, 32, 275, 319, 275, 319, 477, 753, 5045, 5045, 623, 6090, 12681, 4886, 372, 2646, 1089, 275, 319]}
{"line_number": 161, "line_type": "original", "code": "        TDistribution tDistribution = new TDistributionImpl(nObs - 2);", "entropy": 1.1015625, "is_bug_line": false, "sus_score": 0.5345224838248488, "per_token_entropy": [5.6328125, 7.87890625, 0.006214141845703125, 0.041107177734375, 0.01033782958984375, 0.0474853515625, 0.047119140625, 0.0084991455078125, 6.079673767089844e-05, 4.81640625, 0.04107666015625, 0.058807373046875, 0.003871917724609375, 0.03155517578125, 0.003467559814453125, 0.0760498046875, 0.0087890625], "tokens": [351, 394, 16218, 273, 16218, 280, 537, 394, 16218, 3482, 26, 96, 31307, 429, 225, 36, 293]}
{"line_number": 161, "line_type": "generated", "code": "\n    /**\n     * Computes the correlation matrix for the columns of the\n     * input rectangular array.  The colums of the array represent values\n     * of variables to be correlated.\n     *\n     * @param data matrix with columns representing variables to corre", "entropy": 0.089111328125, "is_bug_line": false, "sus_score": 0.5345224838248488, "per_token_entropy": [0.810546875, 0.11566162109375, 0.028076171875, 9.40561294555664e-05, 0.386962890625, 0.284423828125, 0.385009765625, 0.5732421875, 0.08349609375, 0.0428466796875, 0.048828125, 0.01544952392578125, 0.0238494873046875, 0.1019287109375, 3.838539123535156e-05, 0.0262298583984375, 0.87255859375, 8.845329284667969e-05, 0.0142059326171875, 0.0838623046875, 0.02081298828125, 0.00705718994140625, 0.317138671875, 0.0006880760192871094, 0.0020275115966796875, 0.00031495094299316406, 0.0009965896606445312, 0.002655029296875, 0.00902557373046875, 0.004016876220703125, 9.918212890625e-05, 0.0008344650268554688, 0.00363922119140625, 0.00124359130859375, 0.0002989768981933594, 0.0009593963623046875, 7.176399230957031e-05, 0.007537841796875, 0.07769775390625, 0.0003120899200439453, 0.033416748046875, 3.337860107421875e-05, 0.006168365478515625, 0.0018777847290039062, 0.05718994140625, 0.1729736328125, 0.0006709098815917969, 0.00325775146484375, 0.0003247261047363281, 0.001972198486328125, 0.0005335807800292969, 0.0006060600280761719], "tokens": [284, 1022, 275, 319, 41932, 322, 24716, 5045, 436, 322, 6090, 432, 322, 275, 319, 1509, 7582, 5089, 1417, 32, 225, 886, 932, 23256, 432, 322, 1417, 4042, 2078, 275, 319, 432, 4886, 372, 526, 2646, 11629, 32, 275, 319, 275, 319, 477, 753, 706, 5045, 623, 6090, 12681, 4886, 372, 2646]}
{"line_number": 162, "line_type": "original", "code": "        int nVars = correlationMatrix.getColumnDimension();", "entropy": 1.1015625, "is_bug_line": false, "sus_score": 0.5345224838248488, "per_token_entropy": [5.34375, 4.3125, 0.2275390625, 0.853515625, 0.023590087890625, 1.310546875, 0.01198577880859375, 0.00588226318359375, 0.019012451171875, 4.303455352783203e-05, 0.0118560791015625], "tokens": [351, 629, 310, 12034, 280, 24716, 4161, 32, 19239, 9883, 473]}
{"line_number": 162, "line_type": "generated", "code": "\n    /**\n     * Computes the correlation matrix for the columns of the\n     * input rectangular array.  The colums of the array represent values\n     * of variables to be correlated.\n     *\n     * @param data matrix with columns representing variables to corre", "entropy": 0.09735107421875, "is_bug_line": false, "sus_score": 0.5345224838248488, "per_token_entropy": [0.765625, 0.2467041015625, 0.03271484375, 0.00017642974853515625, 0.45654296875, 0.307861328125, 0.433837890625, 0.80029296875, 0.09808349609375, 0.043121337890625, 0.06005859375, 0.01702880859375, 0.0254669189453125, 0.109619140625, 0.0001367330551147461, 0.02947998046875, 0.80126953125, 0.00012385845184326172, 0.01531219482421875, 0.09002685546875, 0.0220947265625, 0.007843017578125, 0.251220703125, 0.0006279945373535156, 0.002044677734375, 0.00034546852111816406, 0.0011148452758789062, 0.0029850006103515625, 0.00934600830078125, 0.00428009033203125, 0.00011777877807617188, 0.0010633468627929688, 0.004322052001953125, 0.0016355514526367188, 0.00035452842712402344, 0.001232147216796875, 8.285045623779297e-05, 0.00927734375, 0.09149169921875, 0.0013380050659179688, 0.035888671875, 8.547306060791016e-05, 0.009002685546875, 0.00661468505859375, 0.0794677734375, 0.1751708984375, 0.0008625984191894531, 0.0037784576416015625, 0.0003974437713623047, 0.002506256103515625, 0.0008425712585449219, 0.0007681846618652344], "tokens": [284, 1022, 275, 319, 41932, 322, 24716, 5045, 436, 322, 6090, 432, 322, 275, 319, 1509, 7582, 5089, 1417, 32, 225, 886, 932, 23256, 432, 322, 1417, 4042, 2078, 275, 319, 432, 4886, 372, 526, 2646, 11629, 32, 275, 319, 275, 319, 477, 753, 706, 5045, 623, 6090, 12681, 4886, 372, 2646]}
{"line_number": 163, "line_type": "original", "code": "        double[][] out = new double[nVars][nVars];", "entropy": 0.92236328125, "is_bug_line": false, "sus_score": 0.5345224838248488, "per_token_entropy": [4.41015625, 4.2109375, 3.033203125, 0.73974609375, 0.12213134765625, 0.057373046875, 0.0026226043701171875, 0.004161834716796875, 0.22021484375, 0.09295654296875, 0.005084991455078125, 0.01375579833984375, 0.00098419189453125, 0.00461578369140625], "tokens": [351, 2064, 11336, 963, 280, 537, 2064, 77, 96, 12034, 1674, 96, 12034, 970]}
{"line_number": 163, "line_type": "generated", "code": "\n     * Computes the correlation matrix for the columns of the\n     * input rectangular array.  The colums of the array represent values\n     * of variables to be correlated.\n     *\n     * @param data matrix with columns representing variables to correlate\n    ", "entropy": 0.1094970703125, "is_bug_line": false, "sus_score": 0.5345224838248488, "per_token_entropy": [1.07421875, 0.152587890625, 0.427490234375, 0.305908203125, 0.375244140625, 0.77880859375, 0.0972900390625, 0.045745849609375, 0.0711669921875, 0.0242462158203125, 0.031158447265625, 0.13671875, 0.0011243820190429688, 0.02911376953125, 1.2001953125, 0.00014126300811767578, 0.01221466064453125, 0.07672119140625, 0.0288238525390625, 0.00860595703125, 0.261474609375, 0.0006728172302246094, 0.0022678375244140625, 0.0004074573516845703, 0.0012264251708984375, 0.0030269622802734375, 0.0111541748046875, 0.004116058349609375, 7.331371307373047e-05, 0.0011110305786132812, 0.0033168792724609375, 0.001491546630859375, 0.0003631114959716797, 0.0010366439819335938, 8.308887481689453e-05, 0.0134429931640625, 0.1158447265625, 0.0036869049072265625, 0.060394287109375, 0.00041294097900390625, 0.01113128662109375, 0.00434112548828125, 0.07403564453125, 0.194091796875, 0.0009531974792480469, 0.003856658935546875, 0.0003685951232910156, 0.0025234222412109375, 0.0006346702575683594, 0.0007562637329101562, 0.00014066696166992188, 0.038848876953125], "tokens": [275, 319, 41932, 322, 24716, 5045, 436, 322, 6090, 432, 322, 275, 319, 1509, 7582, 5089, 1417, 32, 225, 886, 932, 23256, 432, 322, 1417, 4042, 2078, 275, 319, 432, 4886, 372, 526, 2646, 11629, 32, 275, 319, 275, 319, 477, 753, 706, 5045, 623, 6090, 12681, 4886, 372, 2646, 1089, 275]}
{"line_number": 164, "line_type": "original", "code": "        for (int i = 0; i < nVars; i++) {", "entropy": 0.90087890625, "is_bug_line": false, "sus_score": 0.5345224838248488, "per_token_entropy": [2.982421875, 4.875, 0.08514404296875, 0.00917816162109375, 0.169189453125, 0.00885009765625, 0.009246826171875, 0.0059051513671875, 0.052154541015625, 0.0018463134765625, 0.04400634765625, 1.6279296875, 5.25, 0.0992431640625, 0.01401519775390625, 0.01849365234375, 0.06341552734375], "tokens": [351, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 310, 12034, 45, 595, 1987, 301]}
{"line_number": 164, "line_type": "generated", "code": "\n     * @param x first array\n     * @param y second array\n     * @return correlation coefficient\n     * @throws MathException if an error occurs computing the correlation coefficient\n     */\n    public double correlation(double[] x, double[] y) throws MathException", "entropy": 0.170166015625, "is_bug_line": false, "sus_score": 0.5345224838248488, "per_token_entropy": [0.63818359375, 0.0631103515625, 0.72265625, 0.006626129150390625, 0.360595703125, 0.50537109375, 0.853515625, 0.05560302734375, 5.0067901611328125e-05, 0.00014901161193847656, 0.00036215782165527344, 0.00039887428283691406, 0.00897216796875, 0.002880096435546875, 0.032470703125, 0.00226593017578125, 0.003795623779296875, 0.0125579833984375, 0.65625, 0.058746337890625, 0.284912109375, 0.7255859375, 0.0166168212890625, 0.07177734375, 0.9853515625, 0.059295654296875, 0.057373046875, 0.982421875, 0.0008473396301269531, 0.0034999847412109375, 0.10614013671875, 0.122802734375, 0.14453125, 0.5244140625, 0.05731201171875, 0.105224609375, 0.021575927734375, 0.24267578125, 0.07476806640625, 0.0024433135986328125, 0.002750396728515625, 0.0958251953125, 0.0081939697265625, 0.001186370849609375, 0.0005526542663574219, 0.0268707275390625, 0.007762908935546875, 0.001270294189453125, 0.0015497207641601562, 0.1331787109375, 0.0009784698486328125, 6.556510925292969e-06], "tokens": [275, 319, 477, 753, 816, 1932, 1417, 275, 319, 477, 753, 533, 3100, 1417, 275, 319, 477, 601, 24716, 17134, 275, 319, 477, 5117, 4175, 984, 415, 600, 1048, 12984, 18721, 322, 24716, 17134, 275, 569, 284, 562, 2064, 24716, 26, 2627, 1178, 816, 30, 2064, 1178, 533, 27, 2571, 4175, 984]}
{"line_number": 165, "line_type": "original", "code": "            for (int j = 0; j < nVars; j++) {", "entropy": 1.2978515625, "is_bug_line": false, "sus_score": 0.5345224838248488, "per_token_entropy": [5.95703125, 4.5703125, 1.734375, 0.03753662109375, 3.43359375, 0.01126861572265625, 0.0325927734375, 0.015625, 0.02008056640625, 0.00899505615234375, 0.08892822265625, 1.158203125, 4.57421875, 0.22900390625, 0.029296875, 0.0211944580078125, 0.133544921875], "tokens": [1468, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 310, 12034, 45, 594, 1987, 301]}
{"line_number": 165, "line_type": "generated", "code": "\n     * @param x first array\n     * @param y second array\n     * @return correlation coefficient\n     * @throws IllegalArgumentException if the arrays are not the same length\n     */\n    public double correlation(double[] x, double[] y) {\n        if (", "entropy": 0.2139892578125, "is_bug_line": false, "sus_score": 0.5345224838248488, "per_token_entropy": [0.63671875, 0.1400146484375, 0.30322265625, 0.00904083251953125, 0.3623046875, 0.51318359375, 0.89306640625, 0.057403564453125, 3.135204315185547e-05, 0.000186920166015625, 0.0002930164337158203, 0.00042700767517089844, 0.00951385498046875, 0.0029010772705078125, 0.0281829833984375, 0.0021209716796875, 0.004405975341796875, 0.01335906982421875, 0.677734375, 0.05609130859375, 0.283203125, 0.7255859375, 0.026519775390625, 0.058380126953125, 2.0625, 0.0262298583984375, 0.446044921875, 0.27783203125, 0.435546875, 0.193359375, 0.4697265625, 0.0006809234619140625, 0.07464599609375, 0.12481689453125, 0.256103515625, 0.017242431640625, 0.19482421875, 0.12841796875, 0.001995086669921875, 0.003093719482421875, 0.1195068359375, 0.01047515869140625, 0.0011072158813476562, 0.0005059242248535156, 0.0277862548828125, 0.006214141845703125, 0.0010547637939453125, 0.007350921630859375, 0.478759765625, 0.2578125, 0.677734375, 0.0170745849609375], "tokens": [275, 319, 477, 753, 816, 1932, 1417, 275, 319, 477, 753, 533, 3100, 1417, 275, 319, 477, 601, 24716, 17134, 275, 319, 477, 5117, 12137, 415, 322, 12051, 884, 646, 322, 2432, 3104, 275, 569, 284, 562, 2064, 24716, 26, 2627, 1178, 816, 30, 2064, 1178, 533, 27, 301, 291, 415, 308]}
{"line_number": 166, "line_type": "original", "code": "                if (i == j) {", "entropy": 2.763671875, "is_bug_line": false, "sus_score": 0.5345224838248488, "per_token_entropy": [5.78515625, 2.4296875, 2.43359375, 8.5546875, 2.0859375, 0.288818359375, 0.04718017578125, 0.47998046875], "tokens": [2071, 415, 308, 91, 610, 594, 27, 301]}
{"line_number": 166, "line_type": "generated", "code": "\n     * @param x first data array\n     * @param y second data array\n     * @return Pearson's product-moment correlation coefficient between the two arrays\n     * @throws IllegalArgumentException if the arrays do not have the same length\n     */\n    public double", "entropy": 0.18212890625, "is_bug_line": false, "sus_score": 0.5345224838248488, "per_token_entropy": [0.6904296875, 0.02301025390625, 1.3935546875, 0.00887298583984375, 0.357666015625, 0.5859375, 0.4140625, 0.032684326171875, 0.024383544921875, 4.6372413635253906e-05, 0.00036644935607910156, 0.0003495216369628906, 0.00024306774139404297, 0.00852203369140625, 0.0035953521728515625, 0.0015020370483398438, 0.036651611328125, 0.000843048095703125, 0.004299163818359375, 0.008575439453125, 1.083984375, 0.0019283294677734375, 0.0007390975952148438, 0.07513427734375, 0.79150390625, 0.039306640625, 0.0006556510925292969, 0.05621337890625, 0.0139617919921875, 1.5771484375, 0.34521484375, 0.25634765625, 0.0218658447265625, 0.2099609375, 0.3779296875, 0.030059814453125, 0.05523681640625, 0.174560546875, 0.0286407470703125, 0.05078125, 0.0194549560546875, 0.08056640625, 0.00061798095703125, 0.00455474853515625, 0.0059051513671875, 0.0005817413330078125, 0.00421905517578125, 0.056732177734375, 0.06494140625, 0.0261688232421875, 0.2149658203125, 0.2041015625], "tokens": [275, 319, 477, 753, 816, 1932, 706, 1417, 275, 319, 477, 753, 533, 3100, 706, 1417, 275, 319, 477, 601, 447, 1928, 1155, 1182, 4054, 31, 14119, 24716, 17134, 3733, 322, 3134, 12051, 275, 319, 477, 5117, 12137, 415, 322, 12051, 745, 646, 1159, 322, 2432, 3104, 275, 569, 284, 562, 2064]}
{"line_number": 167, "line_type": "original", "code": "                    out[i][j] = 0d;", "entropy": 2.154296875, "is_bug_line": false, "sus_score": 0.5345224838248488, "per_token_entropy": [10.0625, 9.53125, 1.703125, 0.345947265625, 0.27197265625, 0.013580322265625, 0.01384735107421875, 0.07415771484375, 1.9072265625, 0.8896484375, 0.93896484375, 0.08489990234375], "tokens": [4696, 963, 77, 91, 1674, 92, 79, 280, 225, 34, 86, 45]}
{"line_number": 167, "line_type": "generated", "code": "\n     * @param x First data array\n     * @param y Second data array\n     * @return Pearson's product-moment correlation coefficient\n     * @throws IllegalArgumentException if the arrays do not have the same length\n     * or their common length is less than", "entropy": 0.1563720703125, "is_bug_line": false, "sus_score": 0.5345224838248488, "per_token_entropy": [0.4150390625, 0.048370361328125, 0.40673828125, 0.00719451904296875, 0.32177734375, 1.66015625, 0.89453125, 0.0199432373046875, 0.1375732421875, 2.5510787963867188e-05, 0.00017333030700683594, 0.00044608116149902344, 0.0002837181091308594, 0.04266357421875, 0.0036525726318359375, 0.0011386871337890625, 0.0380859375, 0.0009002685546875, 0.01207733154296875, 0.00925445556640625, 0.791015625, 0.0014066696166992188, 0.0007352828979492188, 0.0755615234375, 0.76611328125, 0.042266845703125, 0.0006732940673828125, 0.049560546875, 0.01517486572265625, 0.428955078125, 0.537109375, 0.0755615234375, 0.09466552734375, 0.2130126953125, 0.034210205078125, 0.109619140625, 0.1021728515625, 0.2344970703125, 0.0007715225219726562, 0.01416015625, 0.0275726318359375, 0.00586700439453125, 0.044281005859375, 0.1466064453125, 0.11224365234375, 0.157470703125, 0.0208282470703125, 0.003040313720703125, 0.0010309219360351562, 0.0011119842529296875, 0.0015134811401367188, 0.0019931793212890625], "tokens": [275, 319, 477, 753, 816, 8819, 706, 1417, 275, 319, 477, 753, 533, 15086, 706, 1417, 275, 319, 477, 601, 447, 1928, 1155, 1182, 4054, 31, 14119, 24716, 17134, 275, 319, 477, 5117, 12137, 415, 322, 12051, 745, 646, 1159, 322, 2432, 3104, 275, 319, 556, 3623, 4942, 3104, 438, 6679, 2784]}
{"line_number": 169, "line_type": "original", "code": "                    double r = correlationMatrix.getEntry(i, j);", "entropy": 1.8505859375, "is_bug_line": false, "sus_score": 0.5345224838248488, "per_token_entropy": [9.4453125, 2.669921875, 5.12109375, 0.1444091796875, 1.501953125, 4.83203125, 0.03759765625, 0.037017822265625, 0.005168914794921875, 0.1376953125, 0.006076812744140625, 0.105224609375, 0.011260986328125], "tokens": [4696, 2064, 540, 280, 24716, 4161, 32, 48895, 26, 91, 30, 594, 293]}
{"line_number": 169, "line_type": "generated", "code": "\n     * @param yArray second data array", "entropy": 0.065673828125, "is_bug_line": false, "sus_score": 0.5345224838248488, "per_token_entropy": [0.5283203125, 0.032135009765625, 0.005405426025390625, 0.0012769699096679688, 0.0005030632019042969, 0.0012769699096679688, 0.017425537109375, 0.0033416748046875, 0.0010557174682617188], "tokens": [275, 319, 477, 753, 533, 1261, 3100, 706, 1417]}
{"line_number": 170, "line_type": "original", "code": "                    double t = Math.abs(r * Math.sqrt((nObs - 2)/(1 - r * r)));", "entropy": 1.58984375, "is_bug_line": false, "sus_score": 0.5345224838248488, "per_token_entropy": [9.8671875, 3.154296875, 5.59765625, 0.486328125, 3.3515625, 0.47021484375, 0.429443359375, 0.027191162109375, 4.13671875, 2.447265625, 0.1295166015625, 0.0016622543334960938, 0.0009570121765136719, 0.1541748046875, 0.2381591796875, 4.4296875, 0.098876953125, 0.01053619384765625, 0.005512237548828125, 5.62890625, 0.00629425048828125, 0.14306640625, 0.03424072265625, 0.352783203125, 0.006195068359375, 0.1474609375], "tokens": [4696, 2064, 273, 280, 4175, 32, 3596, 26, 100, 319, 4175, 32, 8663, 1162, 96, 31307, 429, 225, 36, 25104, 35, 429, 540, 319, 540, 4236]}
{"line_number": 170, "line_type": "generated", "code": "\n     */\n    public double correlation(double[] xArray, double[] yArray) {\n        int n = xArray.length;\n        if (yArray.length!= n) {\n            throw new IllegalArgumentException(\"Arrays must have the same length\");\n        }", "entropy": 0.173828125, "is_bug_line": false, "sus_score": 0.5345224838248488, "per_token_entropy": [0.35498046875, 0.658203125, 0.0302734375, 0.361083984375, 0.309326171875, 0.004863739013671875, 0.006687164306640625, 0.1229248046875, 0.017333984375, 0.002025604248046875, 0.00093841552734375, 0.0005645751953125, 0.03900146484375, 0.00586700439453125, 0.0006198883056640625, 6.318092346191406e-05, 0.03558349609375, 0.0943603515625, 0.3662109375, 1.33203125, 0.7197265625, 0.10430908203125, 0.0640869140625, 5.710124969482422e-05, 0.0001729726791381836, 0.00012612342834472656, 0.0013685226440429688, 0.06494140625, 0.315673828125, 0.036041259765625, 0.826171875, 8.225440979003906e-06, 0.0030155181884765625, 3.24249267578125e-05, 0.0088348388671875, 0.00896453857421875, 0.01149749755859375, 0.0201416015625, 0.11083984375, 0.0167999267578125, 0.185791015625, 0.0784912109375, 0.254638671875, 0.47998046875, 0.45751953125, 0.272216796875, 1.1552734375, 0.00384521484375, 0.0283355712890625, 0.055877685546875, 0.012603759765625, 0.0007128715515136719], "tokens": [275, 569, 284, 562, 2064, 24716, 26, 2627, 1178, 816, 1261, 30, 2064, 1178, 533, 1261, 27, 301, 291, 629, 310, 280, 816, 1261, 32, 1322, 45, 291, 415, 308, 107, 1261, 32, 1322, 863, 310, 27, 301, 324, 1422, 537, 12137, 440, 9978, 2298, 1159, 322, 2432, 3104, 724, 291, 320]}
{"line_number": 171, "line_type": "original", "code": "                    out[i][j] = 2 * (1 - tDistribution.cumulativeProbability(t));", "entropy": 1.7900390625, "is_bug_line": true, "sus_score": 0.5345224838248488, "per_token_entropy": [9.3046875, 8.5625, 2.03125, 0.413818359375, 0.4453125, 0.022918701171875, 0.021759033203125, 0.07745361328125, 2.197265625, 4.90625, 0.8349609375, 2.22265625, 3.265625, 0.1868896484375, 0.70458984375, 1.6142578125, 0.023956298828125, 0.09381103515625, 0.0009226799011230469, 0.46630859375, 1.1318359375, 0.85205078125], "tokens": [4696, 963, 77, 91, 1674, 92, 79, 280, 225, 36, 319, 308, 35, 429, 273, 16218, 32, 12018, 35567, 26, 102, 876]}
{"line_number": 171, "line_type": "generated", "code": "    */\n    public double correlation(double[] xArray, double[] yArray) {\n        if (xArray.length!= yArray.length) {\n            throw new IllegalArgumentException(\"Arrays must be same length\");\n        }\n        int n = xArray.", "entropy": 0.2213134765625, "is_bug_line": true, "sus_score": 0.5345224838248488, "per_token_entropy": [2.416015625, 1.26953125, 0.06268310546875, 0.2186279296875, 0.245361328125, 0.003692626953125, 0.0067596435546875, 0.12371826171875, 0.0147552490234375, 0.0018968582153320312, 0.0004107952117919922, 0.0005884170532226562, 0.04058837890625, 0.00638580322265625, 0.0006661415100097656, 4.1484832763671875e-05, 0.0276336669921875, 0.08843994140625, 0.297119140625, 0.98388671875, 0.08599853515625, 0.0185089111328125, 1.5854835510253906e-05, 0.11981201171875, 0.0001468658447265625, 0.03228759765625, 0.00296783447265625, 4.5299530029296875e-06, 0.00012600421905517578, 9.262561798095703e-05, 0.02294921875, 0.0322265625, 0.09661865234375, 0.0156097412109375, 0.155517578125, 0.08038330078125, 0.259765625, 0.416748046875, 0.68994140625, 1.365234375, 0.6015625, 0.009307861328125, 0.0482177734375, 0.014923095703125, 0.0007891654968261719, 0.190673828125, 0.64111328125, 0.67431640625, 0.11346435546875, 0.007396697998046875, 1.3709068298339844e-05, 5.5909156799316406e-05], "tokens": [264, 569, 284, 562, 2064, 24716, 26, 2627, 1178, 816, 1261, 30, 2064, 1178, 533, 1261, 27, 301, 291, 415, 308, 106, 1261, 32, 1322, 863, 533, 1261, 32, 1322, 27, 301, 324, 1422, 537, 12137, 440, 9978, 2298, 526, 2432, 3104, 724, 291, 320, 291, 629, 310, 280, 816, 1261, 32]}
{"line_number": 175, "line_type": "original", "code": "        return new BlockRealMatrix(out);", "entropy": 2.43359375, "is_bug_line": false, "sus_score": 0.5345224838248488, "per_token_entropy": [4.12890625, 1.587890625, 3.744140625, 8.296875, 0.0283660888671875, 0.004070281982421875, 0.03302001953125, 2.744140625, 1.3349609375], "tokens": [351, 442, 537, 6575, 6877, 4161, 26, 541, 293]}
{"line_number": 175, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Computes the Pearson's product-moment correlation coefficient between the two\n     * columns of the input matrix.\n     *\n     * </p>Throws IllegalArgumentException if the column lengths do not match or\n     * there is insufficient data", "entropy": 0.25830078125, "is_bug_line": false, "sus_score": 0.5345224838248488, "per_token_entropy": [0.64111328125, 0.021270751953125, 1.0595703125, 0.1038818359375, 0.0404052734375, 8.189678192138672e-05, 0.4306640625, 0.1590576171875, 1.169921875, 3.802776336669922e-05, 0.0007982254028320312, 0.02227783203125, 0.00818634033203125, 0.0027866363525390625, 0.00021207332611083984, 0.00675201416015625, 0.01324462890625, 0.03179931640625, 0.170166015625, 0.35791015625, 1.9306640625, 5.650520324707031e-05, 2.033203125, 0.2178955078125, 0.0826416015625, 0.447509765625, 0.2841796875, 0.0980224609375, 0.1436767578125, 0.00044083595275878906, 0.10479736328125, 0.00011169910430908203, 0.63330078125, 0.0003504753112792969, 0.0023326873779296875, 0.04156494140625, 0.0306396484375, 0.004108428955078125, 0.11505126953125, 1.908203125, 0.473876953125, 0.08306884765625, 0.00571441650390625, 0.023529052734375, 0.331787109375, 0.1214599609375, 7.998943328857422e-05, 0.062103271484375, 0.00394439697265625, 0.0052642822265625, 0.00021505355834960938, 0.0011310577392578125], "tokens": [284, 320, 446, 1022, 275, 319, 41932, 322, 447, 1928, 1155, 1182, 4054, 31, 14119, 24716, 17134, 3733, 322, 3134, 275, 319, 6090, 432, 322, 1509, 5045, 32, 275, 319, 275, 319, 576, 98, 48, 12762, 12137, 415, 322, 2623, 29217, 745, 646, 2530, 556, 275, 319, 2017, 438, 7889, 15271, 706]}
{"line_number": 79, "line_type": "original", "code": "        nObs = matrix.getRowDimension();", "entropy": 2.587890625, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [3.8515625, 6.265625, 1.5654296875, 4.67578125, 4.859375, 0.00890350341796875, 1.9453125, 9.930133819580078e-05, 0.12445068359375], "tokens": [351, 310, 31307, 280, 5045, 32, 30093, 9883, 473]}
{"line_number": 79, "line_type": "generated", "code": "\n     * </p>\n     * @return matrix of standard errors\n     * @throws MathException if the correlation matrix cannot be inverted\n     */\n    public RealMatrix getCorrelationStandardErrors() throws MathException {\n        if (nObs < 2) {\n           ", "entropy": 0.29736328125, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [0.498046875, 0.005786895751953125, 1.5361328125, 0.342041015625, 0.08203125, 0.0157012939453125, 0.002330780029296875, 1.291015625, 0.024383544921875, 1.400390625, 0.016143798828125, 0.10931396484375, 0.03424072265625, 0.202880859375, 1.0439453125, 0.0241241455078125, 0.246826171875, 0.65869140625, 1.0166015625, 0.0447998046875, 0.70361328125, 0.250244140625, 0.0022754669189453125, 0.47998046875, 0.00199127197265625, 0.380126953125, 0.167236328125, 0.377197265625, 0.0095977783203125, 0.0086822509765625, 0.00026297569274902344, 5.4836273193359375e-06, 0.0004551410675048828, 3.910064697265625e-05, 0.00281524658203125, 0.0003228187561035156, 0.00537872314453125, 0.417724609375, 0.0016222000122070312, 1.6570091247558594e-05, 0.0487060546875, 0.31298828125, 2.0, 0.055755615234375, 0.54150390625, 0.0009565353393554688, 0.6845703125, 0.0107879638671875, 0.357421875, 0.0265045166015625, 0.0031833648681640625, 0.02294921875], "tokens": [275, 319, 576, 98, 48, 275, 319, 477, 601, 5045, 432, 6216, 3878, 275, 319, 477, 5117, 4175, 984, 415, 322, 24716, 5045, 4881, 526, 37592, 275, 569, 284, 562, 11443, 4161, 622, 35530, 8090, 7352, 346, 2571, 4175, 984, 301, 291, 415, 308, 96, 31307, 333, 225, 36, 27, 301, 324]}
{"line_number": 80, "line_type": "original", "code": "        correlationMatrix = computeCorrelationMatrix(matrix);", "entropy": 2.2109375, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [4.734375, 8.875, 0.266357421875, 0.826171875, 4.8203125, 0.036834716796875, 0.1260986328125, 0.3603515625, 1.76171875, 0.306884765625], "tokens": [351, 24716, 4161, 280, 7596, 35530, 4161, 26, 4873, 293]}
{"line_number": 80, "line_type": "generated", "code": "\n     *\n     * @return a matrix of standard errors associated with the correlation coefficients\n     */\n    public RealMatrix getCorrelationStandardErrors() {\n        return correlationStandardErrors(nObs);\n    }\n\n    /**\n     * Returns a matrix of standard errors associated with the", "entropy": 0.3564453125, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [0.367919921875, 0.203125, 0.7373046875, 0.005825042724609375, 0.01529693603515625, 0.01158905029296875, 1.462890625, 0.4306640625, 0.0494384765625, 0.0323486328125, 0.0237274169921875, 1.3740234375, 0.00116729736328125, 0.0182647705078125, 1.1982421875, 1.3037109375, 0.107666015625, 0.7666015625, 0.0248260498046875, 0.0146026611328125, 0.0005354881286621094, 7.748603820800781e-06, 0.0003154277801513672, 4.4226646423339844e-05, 0.00167083740234375, 0.0005946159362792969, 0.013519287109375, 0.00823974609375, 0.2080078125, 1.880859375, 0.50439453125, 1.04296875, 0.08050537109375, 0.198486328125, 1.3515625, 0.0007104873657226562, 0.396240234375, 0.0325927734375, 0.00015664100646972656, 0.1788330078125, 0.0165252685546875, 0.0108642578125, 0.00019669532775878906, 0.450439453125, 0.82958984375, 1.6298828125, 0.049041748046875, 1.4423828125, 0.01203155517578125, 0.0300750732421875, 0.00069427490234375, 0.01019287109375], "tokens": [275, 319, 275, 319, 477, 601, 312, 5045, 432, 6216, 3878, 5746, 623, 322, 24716, 26370, 275, 569, 284, 562, 11443, 4161, 622, 35530, 8090, 7352, 346, 301, 291, 442, 24716, 8090, 7352, 26, 96, 31307, 293, 284, 320, 446, 1022, 275, 319, 3759, 312, 5045, 432, 6216, 3878, 5746, 623, 322]}
{"line_number": 81, "line_type": "original", "code": "    }", "entropy": 5.63671875, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [3.728515625, 7.546875], "tokens": [264, 320]}
{"line_number": 81, "line_type": "generated", "code": "\n     * <p>Note that the diagonal elements of the returned matrix\n     * are all 0 as the standard error of a correlation coefficient is\n     * not defined.\n     *\n     * @return matrix of standard errors\n     */\n    public RealMatrix getCorrelation", "entropy": 0.42919921875, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [0.465087890625, 0.08013916015625, 0.76416015625, 0.354248046875, 0.123291015625, 2.3515625, 0.2529296875, 1.2138671875, 2.0859375, 0.114990234375, 0.1351318359375, 0.043487548828125, 0.6845703125, 0.0947265625, 1.9892578125, 0.00022101402282714844, 0.336181640625, 1.0458984375, 1.134765625, 0.3359375, 1.751953125, 0.58447265625, 0.483154296875, 0.189208984375, 0.11151123046875, 0.04327392578125, 0.5703125, 0.0679931640625, 0.1826171875, 0.6826171875, 0.00024235248565673828, 1.0302734375, 0.09759521484375, 0.65625, 0.11822509765625, 0.0015611648559570312, 0.07318115234375, 0.0003917217254638672, 0.004180908203125, 0.007129669189453125, 1.1845703125, 0.011566162109375, 0.0899658203125, 0.0305633544921875, 0.26513671875, 0.445556640625, 0.0155487060546875, 0.0111541748046875, 0.00041294097900390625, 4.5299530029296875e-06, 0.00034308433532714844, 3.24249267578125e-05], "tokens": [275, 319, 333, 98, 48, 5217, 688, 322, 27601, 4702, 432, 322, 4717, 5045, 275, 319, 884, 1169, 225, 34, 619, 322, 6216, 1048, 432, 312, 24716, 17134, 438, 275, 319, 646, 3417, 32, 275, 319, 275, 319, 477, 601, 5045, 432, 6216, 3878, 275, 569, 284, 562, 11443, 4161, 622, 35530]}
{"line_number": 187, "line_type": "original", "code": "        int nVars = matrix.getColumnDimension();", "entropy": 1.6689453125, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [4.2890625, 2.92578125, 0.63232421875, 5.9140625, 0.032623291015625, 2.85546875, 0.0212554931640625, 0.003936767578125, 0.00013756752014160156, 0.00928497314453125], "tokens": [351, 629, 310, 12034, 280, 5045, 32, 19239, 9883, 473]}
{"line_number": 187, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Computes the Pearson's product-moment correlation coefficient between the two arrays.\n     *\n     * </p>Throws IllegalArgumentException if the arrays do not have the same length\n     * or their common length is less than 2</", "entropy": 0.10772705078125, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [0.243896484375, 0.12384033203125, 1.171875, 0.0914306640625, 0.049163818359375, 0.0001087188720703125, 0.60693359375, 0.170654296875, 1.02734375, 4.291534423828125e-05, 0.0005087852478027344, 0.01505279541015625, 0.0089874267578125, 0.002292633056640625, 0.0001996755599975586, 0.005237579345703125, 0.0213775634765625, 0.03826904296875, 0.1702880859375, 0.389892578125, 0.9755859375, 0.032958984375, 0.005687713623046875, 0.00011730194091796875, 0.125244140625, 0.0002923011779785156, 0.185302734375, 0.00018739700317382812, 0.0008878707885742188, 0.01363372802734375, 0.01241302490234375, 0.0009551048278808594, 0.00830841064453125, 0.0218658447265625, 0.0126495361328125, 0.0001404285430908203, 0.002529144287109375, 0.00437164306640625, 0.0005559921264648438, 0.00511932373046875, 0.0247955322265625, 1.52587890625e-05, 0.0019140243530273438, 0.01284027099609375, 0.0006055831909179688, 0.0006041526794433594, 0.0008816719055175781, 0.0007162094116210938, 0.0003604888916015625, 0.000690460205078125, 0.002674102783203125, 0.00844573974609375], "tokens": [284, 320, 446, 1022, 275, 319, 41932, 322, 447, 1928, 1155, 1182, 4054, 31, 14119, 24716, 17134, 3733, 322, 3134, 12051, 32, 275, 319, 275, 319, 576, 98, 48, 12762, 12137, 415, 322, 12051, 745, 646, 1159, 322, 2432, 3104, 275, 319, 556, 3623, 4942, 3104, 438, 6679, 2784, 225, 36, 377]}
{"line_number": 188, "line_type": "original", "code": "        RealMatrix outMatrix = new BlockRealMatrix(nVars, nVars);", "entropy": 0.76123046875, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [5.203125, 5.4375, 0.0224761962890625, 1.34765625, 0.0211029052734375, 0.0531005859375, 0.38818359375, 0.379150390625, 0.005359649658203125, 1.3828277587890625e-05, 0.003173828125, 0.022369384765625, 0.004863739013671875, 0.0205230712890625, 0.0247344970703125, 0.00019025802612304688, 0.0030689239501953125], "tokens": [351, 11443, 4161, 963, 4161, 280, 537, 6575, 6877, 4161, 26, 96, 12034, 30, 310, 12034, 293]}
{"line_number": 188, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [], "tokens": []}
{"line_number": 189, "line_type": "original", "code": "        for (int i = 0; i < nVars; i++) {", "entropy": 0.462158203125, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [3.630859375, 1.7138671875, 0.01947021484375, 0.004909515380859375, 1.455078125, 0.01360321044921875, 0.08074951171875, 0.020782470703125, 0.007266998291015625, 0.0010776519775390625, 0.009063720703125, 0.55078125, 0.264892578125, 0.0274658203125, 0.00446319580078125, 0.00418853759765625, 0.045013427734375], "tokens": [351, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 310, 12034, 45, 595, 1987, 301]}
{"line_number": 189, "line_type": "generated", "code": "\n    /**\n     * Computes the correlation matrix for the columns of the\n     * input rectangular array.  The colums of the array represent values\n     * of variables to be correlated.\n     *\n     * @param data matrix with columns representing variables to corre", "entropy": 0.1407470703125, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [1.0146484375, 0.32861328125, 0.100830078125, 0.00041222572326660156, 0.88232421875, 0.279296875, 2.341796875, 0.10760498046875, 0.10247802734375, 0.057708740234375, 0.05340576171875, 0.00542449951171875, 0.01776123046875, 0.1397705078125, 0.0008540153503417969, 0.0240325927734375, 0.74169921875, 0.0002090930938720703, 0.06488037109375, 0.10662841796875, 0.039031982421875, 0.0137939453125, 0.254638671875, 0.0007648468017578125, 0.0015430450439453125, 0.0005626678466796875, 0.0017194747924804688, 0.003757476806640625, 0.01348876953125, 0.00695037841796875, 0.00014674663543701172, 0.0012683868408203125, 0.004840850830078125, 0.0020580291748046875, 0.0008001327514648438, 0.0032596588134765625, 2.658367156982422e-05, 0.006847381591796875, 0.106689453125, 0.002498626708984375, 0.08477783203125, 0.0015249252319335938, 0.051788330078125, 0.00806427001953125, 0.229736328125, 0.096923828125, 0.0013895034790039062, 0.003360748291015625, 0.0005617141723632812, 0.002323150634765625, 0.0005116462707519531, 0.001461029052734375], "tokens": [284, 1022, 275, 319, 41932, 322, 24716, 5045, 436, 322, 6090, 432, 322, 275, 319, 1509, 7582, 5089, 1417, 32, 225, 886, 932, 23256, 432, 322, 1417, 4042, 2078, 275, 319, 432, 4886, 372, 526, 2646, 11629, 32, 275, 319, 275, 319, 477, 753, 706, 5045, 623, 6090, 12681, 4886, 372, 2646]}
{"line_number": 190, "line_type": "original", "code": "            for (int j = 0; j < i; j++) {", "entropy": 0.97314453125, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [6.69140625, 3.5234375, 0.3818359375, 0.0279693603515625, 1.888671875, 0.020172119140625, 0.2218017578125, 0.0132598876953125, 0.01153564453125, 0.0078582763671875, 0.041778564453125, 2.541015625, 0.035919189453125, 0.0284271240234375, 0.0193939208984375, 0.11224365234375], "tokens": [1468, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 595, 45, 594, 1987, 301]}
{"line_number": 190, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [], "tokens": []}
{"line_number": 191, "line_type": "original", "code": "              double corr = correlation(matrix.getColumn(i), matrix.getColumn(j));", "entropy": 1.8505859375, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [9.046875, 2.927734375, 5.921875, 0.127685546875, 6.28125, 0.9482421875, 4.125, 0.2459716796875, 1.8671875, 1.28515625, 0.2183837890625, 0.068115234375, 0.2042236328125, 0.0037136077880859375, 0.0005502700805664062, 0.0007600784301757812, 0.008636474609375, 0.03839111328125], "tokens": [2850, 2064, 37111, 280, 24716, 26, 4873, 32, 19239, 26, 91, 471, 5045, 32, 19239, 26, 92, 876]}
{"line_number": 191, "line_type": "generated", "code": "\n     * @param covariance covariance matrix\n     * @return correlation matrix\n     * @throws MathException if the covariance matrix is not symmetric\n     */\n    public RealMatrix correlationFromCovariance(RealMatrix covariance) throws MathException {\n        if (!covariance.is", "entropy": 0.27197265625, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [0.459716796875, 0.047882080078125, 1.216796875, 0.0265045166015625, 0.445556640625, 1.205078125, 0.00847625732421875, 0.10125732421875, 0.00267791748046875, 0.0038909912109375, 0.029022216796875, 0.1959228515625, 0.00612640380859375, 0.0546875, 0.80029296875, 0.015625, 0.09234619140625, 0.83056640625, 0.12042236328125, 0.12005615234375, 0.79052734375, 0.8701171875, 0.01812744140625, 0.474853515625, 0.0914306640625, 0.646484375, 0.70263671875, 0.1904296875, 0.0182342529296875, 0.033203125, 0.01020050048828125, 3.731250762939453e-05, 0.93359375, 0.2379150390625, 0.0015707015991210938, 0.00786590576171875, 0.014068603515625, 0.2330322265625, 2.181529998779297e-05, 0.0014848709106445312, 0.005687713623046875, 0.368896484375, 0.00337982177734375, 1.1086463928222656e-05, 0.08837890625, 0.1842041015625, 1.4619140625, 0.6728515625, 0.2734375, 5.245208740234375e-06, 0.02581787109375, 0.006256103515625], "tokens": [275, 319, 477, 753, 40204, 40204, 5045, 275, 319, 477, 601, 24716, 5045, 275, 319, 477, 5117, 4175, 984, 415, 322, 40204, 5045, 438, 646, 37038, 275, 569, 284, 562, 11443, 4161, 24716, 1792, 2235, 17965, 26, 6877, 4161, 40204, 27, 2571, 4175, 984, 301, 291, 415, 1429, 331, 17965, 32, 297]}
