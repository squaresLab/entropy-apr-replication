{"line_number": 247, "line_type": "original", "code": "              scale = new double[y0.length];", "entropy": 1.4443359375, "is_bug_line": true, "sus_score": 0.1543033499620919, "per_token_entropy": [6.41796875, 5.42578125, 0.966796875, 2.1640625, 0.018951416015625, 0.06280517578125, 0.583984375, 0.24072265625, 0.0007691383361816406, 0.0007495880126953125, 0.0020542144775390625], "tokens": [2850, 5247, 280, 537, 2064, 77, 107, 34, 32, 1322, 970]}
{"line_number": 247, "line_type": "generated", "code": "\n                  // recompute the step, taking the new step size into account\n                  firstTime = true;\n                  interpolator.shift(stepStart, stepStart + hNew);\n                  stepStart += hNew;\n                  break;\n              }\n          } else {\n             ", "entropy": 0.48193359375, "is_bug_line": true, "sus_score": 0.1543033499620919, "per_token_entropy": [0.5380859375, 2.119140625, 2.396484375, 0.291015625, 0.256103515625, 1.3095703125, 1.892578125, 0.76123046875, 0.2734375, 0.346435546875, 0.2093505859375, 0.1812744140625, 0.2220458984375, 0.007755279541015625, 0.06744384765625, 1.74609375, 0.0002390146255493164, 0.00736236572265625, 0.004604339599609375, 0.0001455545425415039, 0.451416015625, 1.8232421875, 4.8160552978515625e-05, 0.01415252685546875, 0.5947265625, 1.369140625, 1.2490234375, 0.139404296875, 0.39404296875, 0.54638671875, 0.0804443359375, 0.039947509765625, 0.568359375, 0.0006470680236816406, 0.24853515625, 0.371826171875, 1.46875, 0.239013671875, 0.7509765625, 0.082275390625, 0.00015687942504882812, 0.00305938720703125, 0.5146484375, 1.1572265625, 0.0025882720947265625, 0.04833984375, 0.0010957717895507812, 0.032012939453125, 0.0008068084716796875, 0.09405517578125, 0.00667572021484375, 0.1353759765625], "tokens": [1750, 434, 316, 7924, 322, 3111, 30, 15137, 322, 537, 3111, 1334, 1991, 3497, 1750, 1932, 1043, 280, 861, 45, 1750, 14399, 717, 32, 5494, 26, 2997, 2130, 30, 3111, 2130, 474, 420, 1812, 293, 1750, 3111, 2130, 1454, 420, 1812, 45, 1750, 1626, 45, 1090, 320, 616, 320, 813, 301, 1090]}
{"line_number": 248, "line_type": "original", "code": "              java.util.Arrays.fill(scale, scalAbsoluteTolerance);", "entropy": 2.052734375, "is_bug_line": true, "sus_score": 0.1543033499620919, "per_token_entropy": [5.50390625, 12.5546875, 0.039276123046875, 0.5771484375, 0.0010271072387695312, 0.255126953125, 0.00164794921875, 0.03778076171875, 0.0011606216430664062, 3.20703125, 0.004817962646484375, 7.5390625, 0.93310546875, 0.0002987384796142578, 0.1475830078125], "tokens": [2850, 1383, 32, 1040, 32, 9978, 32, 4157, 26, 3804, 30, 5892, 12043, 26265, 293]}
{"line_number": 248, "line_type": "generated", "code": "\n              } else {\n                  // step is accepted, proceed to next stage\n                  loop = false;\n              }\n          } else {\n              // no event was found, proceed to next stage\n              loop = false;\n          }\n\n        } else {\n\n          // reject the step", "entropy": 0.378662109375, "is_bug_line": true, "sus_score": 0.1543033499620919, "per_token_entropy": [0.60205078125, 0.73779296875, 1.0322265625, 0.033905029296875, 0.364501953125, 0.84619140625, 1.3564453125, 0.50927734375, 0.267333984375, 0.94189453125, 1.62890625, 0.270263671875, 0.127197265625, 0.88623046875, 0.0592041015625, 0.93603515625, 0.0180816650390625, 0.055084228515625, 0.0003840923309326172, 0.1414794921875, 0.00290679931640625, 0.669921875, 0.01824951171875, 0.2149658203125, 0.0070953369140625, 0.07342529296875, 0.1473388671875, 1.5703125, 0.2001953125, 2.421875, 1.435546875, 0.2274169921875, 0.27978515625, 0.01531219482421875, 0.0116119384765625, 0.01062774658203125, 0.0110321044921875, 0.0143280029296875, 0.0006580352783203125, 0.0014238357543945312, 0.0006413459777832031, 0.061309814453125, 0.0035076141357421875, 0.9326171875, 0.0021514892578125, 0.12261962890625, 0.023773193359375, 0.1903076171875, 0.07940673828125, 0.031951904296875, 0.08489990234375, 0.0018358230590820312], "tokens": [1090, 320, 813, 301, 1750, 434, 3111, 438, 16187, 30, 21846, 372, 2354, 10019, 1750, 5258, 280, 901, 45, 1090, 320, 616, 320, 813, 301, 1090, 434, 1289, 1692, 1597, 2431, 30, 21846, 372, 2354, 10019, 1090, 5258, 280, 901, 45, 616, 320, 584, 320, 813, 301, 5678, 434, 7658, 322, 3111]}
{"line_number": 322, "line_type": "original", "code": "          handler.handleStep(interpolator, lastStep);", "entropy": 2.662109375, "is_bug_line": false, "sus_score": 0.1543033499620919, "per_token_entropy": [8.6953125, 11.828125, 0.411865234375, 2.25390625, 1.185546875, 0.1700439453125, 0.5244140625, 0.0007281303405761719, 2.611328125, 3.791015625, 0.225830078125, 0.259765625], "tokens": [2033, 4899, 32, 2956, 3533, 26, 19537, 717, 30, 2401, 3533, 293]}
{"line_number": 322, "line_type": "generated", "code": "\n    this.minReduction = minReduction;\n  }\n\n  /** Get the maximal growth factor for stepsize control.\n   * @return maximal growth factor\n   */\n  public double getMaxGrowth() {\n    return maxGrowth;\n  }\n\n  /**", "entropy": 0.03240966796875, "is_bug_line": false, "sus_score": 0.1543033499620919, "per_token_entropy": [0.73779296875, 0.145751953125, 0.0002899169921875, 0.0023899078369140625, 8.64267349243164e-05, 0.01367950439453125, 0.0333251953125, 4.410743713378906e-05, 0.0066070556640625, 0.1591796875, 0.000484466552734375, 0.0175628662109375, 0.0018138885498046875, 0.0196990966796875, 0.01142120361328125, 0.3671875, 0.01708984375, 0.005466461181640625, 0.033905029296875, 0.007358551025390625, 0.0036678314208984375, 0.0020351409912109375, 0.0005278587341308594, 0.006805419921875, 0.0018301010131835938, 9.894371032714844e-05, 0.01468658447265625, 0.00028824806213378906, 0.00994873046875, 0.0003094673156738281, 0.0014209747314453125, 0.0010843276977539062, 0.008392333984375, 0.00199127197265625, 0.00787353515625, 0.0004684925079345703, 0.0007987022399902344, 0.00012195110321044922, 0.0002467632293701172, 3.4570693969726562e-06, 0.0002722740173339844, 0.0004267692565917969, 0.034912109375, 0.0001493692398071289, 0.0015516281127929688, 2.4080276489257812e-05, 1.1920928955078125e-07, 0.0001621246337890625, 0.0010881423950195312, 2.4318695068359375e-05, 0.00222015380859375, 0.00016021728515625], "tokens": [284, 458, 32, 887, 35802, 280, 1847, 35802, 45, 334, 320, 719, 1022, 1390, 322, 1769, 2977, 27934, 10365, 436, 3111, 891, 3498, 32, 664, 319, 477, 601, 1769, 2977, 27934, 10365, 664, 569, 334, 562, 2064, 39486, 25537, 349, 346, 301, 284, 442, 1769, 25537, 349, 45, 334, 320, 719, 1022]}
{"line_number": 288, "line_type": "original", "code": "          interpolator.storeTime(stepStart + stepSize);", "entropy": 1.3603515625, "is_bug_line": false, "sus_score": 0.15249857033260467, "per_token_entropy": [6.421875, 4.29296875, 0.0010223388671875, 0.01525115966796875, 1.41796875, 0.87451171875, 0.00809478759765625, 0.1815185546875, 0.0025119781494140625, 3.09765625, 1.28515625, 0.003803253173828125, 0.08251953125], "tokens": [2033, 14399, 717, 32, 2157, 1043, 26, 2997, 2130, 474, 3111, 1250, 293]}
{"line_number": 288, "line_type": "generated", "code": "\n        // check if the step ends exactly on a discontinuity\n        boolean discontinuity = false;\n        for (int l = 0; l < stages; ++l) {\n          if (Math.abs(c[l]) > 1", "entropy": 0.455322265625, "is_bug_line": false, "sus_score": 0.15249857033260467, "per_token_entropy": [0.3759765625, 0.78955078125, 3.69140625, 1.11328125, 0.71142578125, 0.13720703125, 2.546875, 0.98095703125, 0.039520263671875, 0.33642578125, 0.30908203125, 0.0243682861328125, 0.0003476142883300781, 0.245849609375, 2.197265625, 1.162109375, 0.1339111328125, 0.018280029296875, 0.04864501953125, 0.1728515625, 0.003017425537109375, 0.040985107421875, 0.27587890625, 0.0015048980712890625, 0.63330078125, 1.79296875, 0.0029277801513671875, 0.0528564453125, 0.12310791015625, 0.006931304931640625, 0.09442138671875, 0.00891876220703125, 1.8056640625, 0.30419921875, 0.005786895751953125, 0.0005421638488769531, 0.0004410743713378906, 0.0079498291015625, 0.053192138671875, 0.912109375, 0.207763671875, 1.2392578125, 0.0291900634765625, 0.0106964111328125, 0.0020084381103515625, 0.395751953125, 0.0020275115966796875, 0.00225067138671875, 0.04742431640625, 0.2890625, 0.2259521484375, 0.0594482421875], "tokens": [291, 434, 1505, 415, 322, 3111, 15564, 11114, 544, 312, 1214, 18037, 543, 291, 1905, 1214, 18037, 543, 280, 901, 45, 291, 436, 308, 410, 456, 280, 225, 34, 45, 456, 333, 31416, 45, 3311, 94, 27, 301, 616, 415, 308, 5717, 32, 3596, 26, 85, 77, 94, 1130, 848, 225, 35]}
{"line_number": 289, "line_type": "original", "code": "          if (manager.evaluateStep(interpolator)) {", "entropy": 1.8505859375, "is_bug_line": false, "sus_score": 0.15249857033260467, "per_token_entropy": [5.60546875, 1.421875, 0.1378173828125, 4.5078125, 0.0045928955078125, 3.95703125, 2.26171875, 0.037200927734375, 2.345703125, 0.0003769397735595703, 1.8984375, 0.026336669921875], "tokens": [2033, 415, 308, 4018, 32, 13697, 3533, 26, 19537, 717, 490, 301]}
{"line_number": 289, "line_type": "generated", "code": "\n        // if we are in a switch event, we must recompute the derivatives\n        computeDerivatives(stepStart, y, yDotK[0]);", "entropy": 0.7216796875, "is_bug_line": false, "sus_score": 0.15249857033260467, "per_token_entropy": [0.52490234375, 1.2587890625, 1.734375, 1.4189453125, 0.370849609375, 1.826171875, 1.9814453125, 2.740234375, 0.55712890625, 0.76025390625, 1.1552734375, 3.09765625, 2.65234375, 0.1939697265625, 0.2083740234375, 1.2236328125, 0.474609375, 0.7978515625, 0.0080718994140625, 2.1696090698242188e-05, 0.0014524459838867188, 0.08087158203125, 0.0013885498046875, 0.015899658203125, 0.0025997161865234375, 0.0017824172973632812, 0.0037994384765625, 0.0007100105285644531, 8.308887481689453e-05, 0.0004279613494873047, 0.0019016265869140625, 0.0005054473876953125], "tokens": [291, 434, 415, 996, 884, 328, 312, 3578, 1692, 30, 996, 2298, 316, 7924, 322, 40391, 291, 7596, 30970, 11118, 26, 2997, 2130, 30, 533, 30, 533, 10025, 61, 77, 34, 1989]}
{"line_number": 300, "line_type": "original", "code": "            loop = false;", "entropy": 3.369140625, "is_bug_line": false, "sus_score": 0.15249857033260467, "per_token_entropy": [6.96875, 4.44921875, 0.1832275390625, 5.2421875, 0.004589080810546875], "tokens": [1468, 5258, 280, 901, 45]}
{"line_number": 300, "line_type": "generated", "code": "\n      }\n\n    }\n\n    // dispatch the end of integration event\n    manager.end(stepStart, y);\n\n    return stepStart;\n\n  }\n\n  /**\n   * Estimate the error at the end of the step.\n   * @param yDotK derivatives", "entropy": 0.498779296875, "is_bug_line": false, "sus_score": 0.15249857033260467, "per_token_entropy": [1.29296875, 0.002780914306640625, 0.6953125, 0.006549835205078125, 0.80419921875, 0.9833984375, 2.1171875, 0.50634765625, 0.734375, 0.35302734375, 0.1026611328125, 0.260986328125, 0.45947265625, 0.93115234375, 0.00032782554626464844, 0.27197265625, 0.23486328125, 0.281494140625, 0.0173187255859375, 0.002227783203125, 0.0231781005859375, 0.0911865234375, 0.81005859375, 1.4345703125, 1.369140625, 0.7587890625, 0.004314422607421875, 0.1419677734375, 0.0020694732666015625, 0.85546875, 0.6298828125, 1.4228515625, 0.0003046989440917969, 1.8046875, 0.311767578125, 0.11370849609375, 0.59912109375, 1.462890625, 0.06890869140625, 0.02532958984375, 0.0007510185241699219, 0.2802734375, 0.67578125, 0.619140625, 0.24365234375, 0.00586700439453125, 0.42724609375, 0.00183868408203125, 0.06524658203125, 0.0124053955078125, 0.035369873046875, 1.5869140625], "tokens": [397, 320, 446, 320, 446, 434, 7520, 322, 943, 432, 10516, 1692, 284, 7884, 32, 416, 26, 2997, 2130, 30, 533, 293, 446, 442, 3111, 2130, 45, 719, 320, 719, 1022, 664, 319, 14164, 5679, 322, 1048, 821, 322, 943, 432, 322, 3111, 32, 664, 319, 477, 753, 533, 10025, 61, 40391]}
{"line_number": 314, "line_type": "original", "code": "      final double nextStep = stepStart + stepSize;", "entropy": 2.75, "is_bug_line": false, "sus_score": 0.15249857033260467, "per_token_entropy": [7.40234375, 3.95703125, 0.449462890625, 12.65625, 1.255859375, 4.16015625, 0.630859375, 0.0231170654296875, 0.0843505859375, 2.2734375, 0.004665374755859375, 0.099609375], "tokens": [647, 1158, 2064, 2354, 3533, 280, 3111, 2130, 474, 3111, 1250, 45]}
{"line_number": 314, "line_type": "generated", "code": "\n  protected double getMinReduction() {\n    return minReduction;\n  }\n\n  /** Get the maximum growth factor for stepsize control.\n   * @return maximum growth factor\n   */", "entropy": 0.10736083984375, "is_bug_line": false, "sus_score": 0.15249857033260467, "per_token_entropy": [0.2088623046875, 1.1240234375, 0.03057861328125, 0.097900390625, 0.01763916015625, 0.05902099609375, 0.0186767578125, 0.005512237548828125, 0.06878662109375, 0.00909423828125, 0.2435302734375, 0.0012054443359375, 0.00328826904296875, 0.01445770263671875, 0.0009417533874511719, 0.121826171875, 0.00585174560546875, 0.41796875, 0.006805419921875, 1.17578125, 0.01788330078125, 0.08258056640625, 0.008270263671875, 0.004680633544921875, 0.0019779205322265625, 0.0007090568542480469, 0.0084228515625, 0.005702972412109375, 0.00016880035400390625, 0.01137542724609375, 0.00019419193267822266, 0.07757568359375, 0.0009279251098632812, 0.00107574462890625, 0.0101776123046875, 0.0008544921875], "tokens": [334, 2522, 2064, 622, 2928, 35802, 346, 301, 284, 442, 1847, 35802, 45, 334, 320, 719, 1022, 1390, 322, 7091, 27934, 10365, 436, 3111, 891, 3498, 32, 664, 319, 477, 601, 7091, 27934, 10365, 664, 569]}
{"line_number": 315, "line_type": "original", "code": "      System.arraycopy(yTmp, 0, y, 0, y0.length);", "entropy": 1.0517578125, "is_bug_line": false, "sus_score": 0.15249857033260467, "per_token_entropy": [5.94921875, 8.921875, 0.0023212432861328125, 2.7734375, 0.0030040740966796875, 0.2578125, 3.068359375, 0.048431396484375, 0.022430419921875, 0.0007901191711425781, 0.0009927749633789062, 0.061248779296875, 0.238525390625, 0.039337158203125, 5.519390106201172e-05, 0.000949859619140625, 0.034698486328125, 0.66552734375, 0.002300262451171875, 0.00011527538299560547, 0.0015192031860351562], "tokens": [647, 1171, 32, 40863, 26, 107, 15770, 30, 225, 34, 30, 533, 30, 225, 34, 30, 533, 34, 32, 1322, 293]}
{"line_number": 315, "line_type": "generated", "code": "\n    return minReduction;\n  }\n\n  /** Set the minimal reduction factor for stepsize control.\n   * @param minReduction minimal reduction factor\n   */\n  public void setMinReduction(final double minReduction) {", "entropy": 0.0421142578125, "is_bug_line": false, "sus_score": 0.15249857033260467, "per_token_entropy": [0.1832275390625, 0.0128326416015625, 0.095458984375, 0.0005583763122558594, 0.00638580322265625, 0.06536865234375, 0.0007872581481933594, 0.03564453125, 0.0031375885009765625, 0.5205078125, 0.012481689453125, 0.0278778076171875, 0.035491943359375, 0.0032062530517578125, 0.013641357421875, 0.003765106201171875, 0.0007357597351074219, 0.0003707408905029297, 0.0171356201171875, 0.0173797607421875, 0.0002722740173339844, 0.095947265625, 0.0017910003662109375, 0.1107177734375, 0.057373046875, 0.0552978515625, 0.04119873046875, 0.00396728515625, 0.244140625, 0.06805419921875, 0.011993408203125, 0.0034637451171875, 0.00222015380859375, 0.0005645751953125, 0.00019800662994384766, 0.000926971435546875, 0.0016794204711914062, 0.0501708984375, 0.0007205009460449219, 0.0002505779266357422, 0.00010037422180175781, 0.00047898292541503906, 0.0032711029052734375], "tokens": [284, 442, 1847, 35802, 45, 334, 320, 719, 1022, 1756, 322, 16645, 25160, 10365, 436, 3111, 891, 3498, 32, 664, 319, 477, 753, 1847, 35802, 16645, 25160, 10365, 664, 569, 334, 562, 763, 739, 2928, 35802, 26, 3220, 2064, 1847, 35802, 27, 301]}
{"line_number": 316, "line_type": "original", "code": "      manager.stepAccepted(nextStep, y);", "entropy": 3.189453125, "is_bug_line": false, "sus_score": 0.15249857033260467, "per_token_entropy": [7.578125, 7.05078125, 0.06805419921875, 6.73828125, 3.14453125, 0.1807861328125, 7.05078125, 0.2462158203125, 0.90625, 1.5224609375, 0.61279296875], "tokens": [647, 7884, 32, 2997, 24898, 26, 1978, 3533, 30, 533, 293]}
{"line_number": 316, "line_type": "generated", "code": "\n  }\n\n  /** Get the maximum growth factor for stepsize control.\n   * @return maximum growth factor\n   */\n  public double getMaxGrowth() {\n    return maxGrowth;", "entropy": 0.08428955078125, "is_bug_line": false, "sus_score": 0.15249857033260467, "per_token_entropy": [0.283447265625, 0.041656494140625, 0.0684814453125, 0.00734710693359375, 0.95947265625, 0.006000518798828125, 1.4599609375, 0.0183868408203125, 0.09033203125, 0.00962066650390625, 0.004871368408203125, 0.0018568038940429688, 0.0007047653198242188, 0.01001739501953125, 0.00496673583984375, 0.0003781318664550781, 0.020721435546875, 0.00024116039276123047, 0.06951904296875, 0.0010423660278320312, 0.00122833251953125, 0.01220703125, 0.0010814666748046875, 0.0251312255859375, 0.0006260871887207031, 0.0007395744323730469, 0.00029969215393066406, 0.00036406517028808594, 6.318092346191406e-06, 0.0006189346313476562, 0.001708984375, 0.01245880126953125, 0.00021922588348388672, 0.0018796920776367188, 2.5510787963867188e-05, 1.430511474609375e-06, 0.0008692741394042969], "tokens": [334, 320, 719, 1022, 1390, 322, 7091, 27934, 10365, 436, 3111, 891, 3498, 32, 664, 319, 477, 601, 7091, 27934, 10365, 664, 569, 334, 562, 2064, 39486, 25537, 349, 346, 301, 284, 442, 1769, 25537, 349, 45]}
{"line_number": 317, "line_type": "original", "code": "      lastStep = manager.stop();", "entropy": 3.775390625, "is_bug_line": false, "sus_score": 0.15249857033260467, "per_token_entropy": [9.5703125, 11.3828125, 0.10028076171875, 0.18603515625, 3.677734375, 0.008544921875, 3.765625, 1.51953125], "tokens": [647, 2401, 3533, 280, 7884, 32, 4048, 473]}
{"line_number": 317, "line_type": "generated", "code": "\n  /** Get the maximal growth factor for stepsize control.\n   * @return maximal growth factor\n   */\n  public double getMaxGrowth() {\n    return maxGrowth;\n  }", "entropy": 0.057403564453125, "is_bug_line": false, "sus_score": 0.15249857033260467, "per_token_entropy": [0.65869140625, 0.01800537109375, 1.064453125, 0.00705718994140625, 0.286865234375, 0.00609588623046875, 0.005535125732421875, 0.061279296875, 0.009674072265625, 0.004383087158203125, 0.0019369125366210938, 0.0006260871887207031, 0.01136016845703125, 0.006374359130859375, 0.00023508071899414062, 0.015960693359375, 0.0003108978271484375, 0.0123291015625, 0.0001226663589477539, 0.0016450881958007812, 0.0011968612670898438, 0.0163116455078125, 0.0011816024780273438, 0.00872039794921875, 0.0013704299926757812, 0.0008087158203125, 0.00015997886657714844, 0.0004963874816894531, 4.5299530029296875e-06, 0.0004703998565673828, 0.00152587890625, 0.0265350341796875, 0.00014007091522216797, 0.0016298294067382812, 2.47955322265625e-05, 3.0994415283203125e-06, 0.00019884109497070312, 0.004741668701171875, 2.3245811462402344e-05], "tokens": [334, 1022, 1390, 322, 1769, 2977, 27934, 10365, 436, 3111, 891, 3498, 32, 664, 319, 477, 601, 1769, 2977, 27934, 10365, 664, 569, 334, 562, 2064, 39486, 25537, 349, 346, 301, 284, 442, 1769, 25537, 349, 45, 334, 320]}
{"line_number": 320, "line_type": "original", "code": "      interpolator.storeTime(nextStep);", "entropy": 2.12109375, "is_bug_line": false, "sus_score": 0.15249857033260467, "per_token_entropy": [5.04296875, 7.55078125, 0.006916046142578125, 0.21484375, 2.357421875, 0.06201171875, 0.018463134765625, 4.8046875, 1.0146484375, 0.147216796875], "tokens": [647, 14399, 717, 32, 2157, 1043, 26, 1978, 3533, 293]}
{"line_number": 320, "line_type": "generated", "code": "\n   */\n  public void setMinReduction(final double minReduction) {\n    this.minReduction = minReduction;\n  }\n\n  /** Get the maximal growth factor for stepsize control.\n   * @return maximal growth factor\n   */\n  public double", "entropy": 0.0278167724609375, "is_bug_line": false, "sus_score": 0.15249857033260467, "per_token_entropy": [0.4111328125, 0.07159423828125, 0.012481689453125, 0.0043487548828125, 0.0029926300048828125, 0.0007271766662597656, 0.000209808349609375, 0.0013971328735351562, 0.0022983551025390625, 0.06597900390625, 0.0012693405151367188, 0.0003821849822998047, 8.916854858398438e-05, 0.0005755424499511719, 0.004619598388671875, 0.06756591796875, 0.0178680419921875, 0.0001049041748046875, 0.0010061264038085938, 2.1219253540039062e-05, 0.0095367431640625, 0.0116119384765625, 0.0005745887756347656, 0.004787445068359375, 0.1749267578125, 0.0002655982971191406, 0.020965576171875, 0.002292633056640625, 0.01763916015625, 0.01131439208984375, 0.3193359375, 0.0131378173828125, 0.004146575927734375, 0.0345458984375, 0.007190704345703125, 0.003810882568359375, 0.0019025802612304688, 0.0005292892456054688, 0.007694244384765625, 0.004058837890625, 0.00012814998626708984, 0.015533447265625, 0.0002741813659667969, 0.00891876220703125, 0.00025343894958496094, 0.0014047622680664062, 0.0009207725524902344, 0.0843505859375, 0.002048492431640625, 0.01383209228515625, 0.0004508495330810547, 0.0007686614990234375], "tokens": [664, 569, 334, 562, 763, 739, 2928, 35802, 26, 3220, 2064, 1847, 35802, 27, 301, 284, 458, 32, 887, 35802, 280, 1847, 35802, 45, 334, 320, 719, 1022, 1390, 322, 1769, 2977, 27934, 10365, 436, 3111, 891, 3498, 32, 664, 319, 477, 601, 1769, 2977, 27934, 10365, 664, 569, 334, 562, 2064]}
{"line_number": 321, "line_type": "original", "code": "      for (StepHandler handler : stepHandlers) {", "entropy": 2.220703125, "is_bug_line": false, "sus_score": 0.15249857033260467, "per_token_entropy": [7.9453125, 7.43359375, 0.0264739990234375, 7.20703125, 0.2099609375, 0.2430419921875, 0.01157379150390625, 1.275390625, 0.0010461807250976562, 0.0106048583984375, 0.06414794921875], "tokens": [647, 436, 308, 3533, 1972, 4899, 499, 3111, 15556, 27, 301]}
{"line_number": 321, "line_type": "generated", "code": "\n  public void setMinReduction(final double minReduction) {\n    this.minReduction = minReduction;\n  }\n\n  /** Get the maximal growth factor for stepsize control.\n   * @return maximal growth factor\n   */\n  public double getMaxGrow", "entropy": 0.0251312255859375, "is_bug_line": false, "sus_score": 0.15249857033260467, "per_token_entropy": [0.083984375, 0.0341796875, 0.040252685546875, 0.002777099609375, 0.0004849433898925781, 0.001312255859375, 0.0042877197265625, 0.08544921875, 0.002002716064453125, 0.0005450248718261719, 0.0001767873764038086, 0.0005993843078613281, 0.01328277587890625, 0.1871337890625, 0.0261383056640625, 0.00017905235290527344, 0.0008378028869628906, 3.3855438232421875e-05, 0.00720977783203125, 0.016082763671875, 0.0006365776062011719, 0.0011816024780273438, 0.05731201171875, 0.00029921531677246094, 0.10150146484375, 0.0035114288330078125, 0.019775390625, 0.0111846923828125, 0.38037109375, 0.01849365234375, 0.006072998046875, 0.03704833984375, 0.00757598876953125, 0.003887176513671875, 0.0018396377563476562, 0.0005593299865722656, 0.00687408447265625, 0.00232696533203125, 0.00011599063873291016, 0.01369476318359375, 0.00026535987854003906, 0.00934600830078125, 0.0002696514129638672, 0.0014858245849609375, 0.0010833740234375, 0.008331298828125, 0.0019969940185546875, 0.101318359375, 0.0007314682006835938, 0.0006389617919921875, 0.00011992454528808594, 0.0002677440643310547], "tokens": [334, 562, 763, 739, 2928, 35802, 26, 3220, 2064, 1847, 35802, 27, 301, 284, 458, 32, 887, 35802, 280, 1847, 35802, 45, 334, 320, 719, 1022, 1390, 322, 1769, 2977, 27934, 10365, 436, 3111, 891, 3498, 32, 664, 319, 477, 601, 1769, 2977, 27934, 10365, 664, 569, 334, 562, 2064, 39486, 25537]}
{"line_number": 213, "line_type": "original", "code": "      final RungeKuttaStepInterpolator rki = (RungeKuttaStepInterpolator) prototype.copy();", "entropy": 2.052734375, "is_bug_line": false, "sus_score": 0.15075567228888181, "per_token_entropy": [7.625, 6.05859375, 12.109375, 0.0002663135528564453, 0.0003826618194580078, 0.00347137451171875, 0.0001615285873413086, 0.8544921875, 0.0007114410400390625, 0.59716796875, 3.3359375, 0.332763671875, 0.307861328125, 0.019317626953125, 1.7881393432617188e-06, 2.2649765014648438e-05, 1.0967254638671875e-05, 2.4080276489257812e-05, 0.00020182132720947266, 0.000118255615234375, 0.0035114288330078125, 15.2265625, 3.474609375, 1.3564453125, 0.01061248779296875], "tokens": [647, 1158, 4489, 300, 61, 303, 1349, 3533, 37951, 540, 7319, 280, 308, 2529, 300, 61, 303, 1349, 3533, 37951, 27, 21666, 32, 2991, 473]}
{"line_number": 213, "line_type": "generated", "code": "\n            yTmp[j] = y[j] + yDotK[k - 1][j] * stepSize;\n          }\n\n          try {\n            computeDerivatives(stepStart + stepSize, yTmp, yDotK[k]);", "entropy": 0.1494140625, "is_bug_line": false, "sus_score": 0.15075567228888181, "per_token_entropy": [0.287109375, 0.1368408203125, 0.26416015625, 0.004383087158203125, 0.00225830078125, 0.000743865966796875, 0.178955078125, 0.04791259765625, 0.0115203857421875, 0.0018815994262695312, 0.125, 0.02239990234375, 1.80859375, 0.01442718505859375, 0.0015020370483398438, 0.0012331008911132812, 0.0447998046875, 0.45654296875, 0.0015239715576171875, 0.00013065338134765625, 0.00014925003051757812, 0.00013589859008789062, 0.19140625, 0.0021572113037109375, 0.2276611328125, 0.05120849609375, 0.07330322265625, 0.10540771484375, 0.0011587142944335938, 0.3125, 1.9052734375, 0.0015821456909179688, 0.2496337890625, 0.227294921875, 6.878376007080078e-05, 7.748603820800781e-06, 0.001346588134765625, 0.07794189453125, 0.0019083023071289062, 0.240234375, 0.1868896484375, 0.00011277198791503906, 0.48583984375, 0.00513458251953125, 0.0011415481567382812, 0.0003249645233154297, 0.00518798828125, 2.86102294921875e-05, 7.152557373046875e-06, 6.508827209472656e-05, 0.00020956993103027344, 0.0007696151733398438], "tokens": [324, 533, 15770, 77, 92, 79, 280, 533, 77, 92, 79, 474, 533, 10025, 61, 77, 93, 429, 225, 35, 1674, 92, 79, 319, 3111, 1250, 45, 616, 320, 5678, 1596, 301, 324, 7596, 30970, 11118, 26, 2997, 2130, 474, 3111, 1250, 30, 533, 15770, 30, 533, 10025, 61, 77, 93, 1989]}
{"line_number": 214, "line_type": "original", "code": "      rki.reinitialize(this, yTmp, yDotK, forward);", "entropy": 2.369140625, "is_bug_line": false, "sus_score": 0.15075567228888181, "per_token_entropy": [5.82421875, 6.625, 1.3408203125, 0.09710693359375, 7.40625, 2.0546875, 0.2734375, 4.1875, 0.1805419921875, 2.521484375, 1.03125, 0.56103515625, 1.076171875, 1.3701171875, 0.001079559326171875, 1.8671875, 4.9453125, 1.2841796875], "tokens": [647, 540, 7319, 32, 268, 8788, 26, 578, 30, 533, 15770, 30, 533, 10025, 61, 30, 7386, 293]}
{"line_number": 214, "line_type": "generated", "code": "\n            for (int i = 1; i < k; ++i) {\n              sum += a[k-1][i] * yDotK[i][j];\n            }\n            yDotK[k][j] = sum;\n         ", "entropy": 0.0572509765625, "is_bug_line": false, "sus_score": 0.15075567228888181, "per_token_entropy": [0.16943359375, 0.16259765625, 0.0018405914306640625, 0.0029430389404296875, 0.480712890625, 0.0009064674377441406, 0.0033931732177734375, 0.11297607421875, 0.00023424625396728516, 0.00214385986328125, 0.285888671875, 0.0075531005859375, 0.016082763671875, 0.0088653564453125, 0.0004074573516845703, 0.0017652511596679688, 0.00640869140625, 0.16162109375, 0.00726318359375, 0.01776123046875, 0.05657958984375, 0.0001112222671508789, 0.0013494491577148438, 0.05609130859375, 0.0002105236053466797, 0.00012087821960449219, 0.0002486705780029297, 0.01145172119140625, 0.0003676414489746094, 0.07281494140625, 0.0007162094116210938, 2.300739288330078e-05, 7.557868957519531e-05, 0.00036716461181640625, 0.0002193450927734375, 2.09808349609375e-05, 0.01381683349609375, 0.04364013671875, 0.00032448768615722656, 0.2200927734375, 0.1746826171875, 0.09686279296875, 0.00017511844635009766, 7.355213165283203e-05, 0.00033092498779296875, 0.00287628173828125, 6.318092346191406e-05, 0.00021255016326904297, 0.033966064453125, 0.49072265625, 0.158203125, 0.088134765625], "tokens": [324, 436, 308, 410, 595, 280, 225, 35, 45, 595, 333, 831, 45, 3311, 91, 27, 301, 1090, 3632, 1454, 312, 77, 93, 31, 35, 1674, 91, 79, 319, 533, 10025, 61, 77, 91, 1674, 92, 970, 324, 320, 324, 533, 10025, 61, 77, 93, 1674, 92, 79, 280, 3632, 45, 616]}
{"line_number": 215, "line_type": "original", "code": "      interpolator = rki;", "entropy": 2.86328125, "is_bug_line": false, "sus_score": 0.15075567228888181, "per_token_entropy": [3.900390625, 10.3359375, 0.00116729736328125, 3.203125, 1.9677734375, 0.344970703125, 0.28759765625], "tokens": [647, 14399, 717, 280, 540, 7319, 45]}
{"line_number": 215, "line_type": "generated", "code": "\n            }\n            yDotK[k][j] = sum;\n          }\n\n          try {\n            computeDerivatives(stepStart + c[k-1] * stepSize, y, yDotK[k]);\n          } catch (final Deriv", "entropy": 0.167236328125, "is_bug_line": false, "sus_score": 0.15075567228888181, "per_token_entropy": [2.0234375, 0.017333984375, 0.1329345703125, 0.1123046875, 0.272705078125, 0.0002613067626953125, 0.0001480579376220703, 0.0006604194641113281, 0.0012044906616210938, 0.0001385211944580078, 0.00020563602447509766, 0.036590576171875, 0.364990234375, 0.166015625, 0.187255859375, 0.0005908012390136719, 0.216064453125, 1.6298828125, 0.0015268325805664062, 0.174072265625, 0.323486328125, 0.00020551681518554688, 1.1682510375976562e-05, 0.002002716064453125, 0.058990478515625, 0.00611114501953125, 0.0888671875, 0.1663818359375, 0.0013561248779296875, 0.0026912689208984375, 0.26318359375, 0.0002830028533935547, 0.07794189453125, 0.00023221969604492188, 0.39794921875, 0.00013387203216552734, 0.0010166168212890625, 0.10015869140625, 0.260498046875, 0.0084381103515625, 0.0010900497436523438, 5.841255187988281e-06, 0.001506805419921875, 0.0005965232849121094, 0.0020389556884765625, 0.212890625, 0.0004725456237792969, 0.00803375244140625, 0.060821533203125, 1.263671875, 0.04266357421875, 5.602836608886719e-06], "tokens": [324, 320, 324, 533, 10025, 61, 77, 93, 1674, 92, 79, 280, 3632, 45, 616, 320, 5678, 1596, 301, 324, 7596, 30970, 11118, 26, 2997, 2130, 474, 281, 77, 93, 31, 35, 79, 319, 3111, 1250, 30, 533, 30, 533, 10025, 61, 77, 93, 1989, 616, 320, 2368, 308, 3220, 15944, 387]}
{"line_number": 216, "line_type": "original", "code": "    } else {", "entropy": 3.94140625, "is_bug_line": false, "sus_score": 0.15075567228888181, "per_token_entropy": [4.86328125, 0.41259765625, 10.3671875, 0.12384033203125], "tokens": [264, 320, 813, 301]}
{"line_number": 216, "line_type": "generated", "code": "\n            }\n            yDotK[k][j] = sum;\n          }\n\n          if (k == stages - 1) {\n            computeDerivatives(stepStart + stepSize, y, yDotK[k]);\n          }\n\n          // estimate error", "entropy": 0.27294921875, "is_bug_line": false, "sus_score": 0.15075567228888181, "per_token_entropy": [0.4326171875, 0.0149078369140625, 0.07586669921875, 0.09222412109375, 0.181640625, 0.00022459030151367188, 7.045269012451172e-05, 0.0003783702850341797, 0.001628875732421875, 2.9802322387695312e-05, 0.00018930435180664062, 0.0264129638671875, 0.35302734375, 0.186279296875, 0.1929931640625, 0.0001571178436279297, 0.292236328125, 1.2578125, 0.31591796875, 1.3984375, 1.1142578125, 0.0921630859375, 0.0362548828125, 0.0230865478515625, 0.00151824951171875, 0.154296875, 0.002643585205078125, 0.2049560546875, 1.2041015625, 0.01050567626953125, 7.3909759521484375e-06, 0.002288818359375, 0.104736328125, 0.0276031494140625, 0.030181884765625, 0.15234375, 4.684925079345703e-05, 0.00560760498046875, 0.007965087890625, 0.35009765625, 0.0024433135986328125, 0.002353668212890625, 9.894371032714844e-06, 0.0005393028259277344, 0.1085205078125, 0.0023956298828125, 0.156005859375, 0.0016422271728515625, 1.43359375, 1.8466796875, 2.01953125, 0.275634765625], "tokens": [324, 320, 324, 533, 10025, 61, 77, 93, 1674, 92, 79, 280, 3632, 45, 616, 320, 5678, 415, 308, 93, 610, 31416, 429, 225, 35, 27, 301, 324, 7596, 30970, 11118, 26, 2997, 2130, 474, 3111, 1250, 30, 533, 30, 533, 10025, 61, 77, 93, 1989, 616, 320, 5678, 434, 20772, 1048]}
{"line_number": 226, "line_type": "original", "code": "        handler.reset();", "entropy": 5.53515625, "is_bug_line": false, "sus_score": 0.14586499149789456, "per_token_entropy": [3.3203125, 14.90625, 0.280029296875, 7.81640625, 1.3447265625], "tokens": [351, 4899, 32, 4534, 473]}
{"line_number": 226, "line_type": "generated", "code": "\n        }\n\n        // estimate the error at the end of the step\n        error = 0;\n        for (int j = 0; j < y0.length; ++j) {\n          final double errSum = b[0] * yDot", "entropy": 0.1981201171875, "is_bug_line": false, "sus_score": 0.14586499149789456, "per_token_entropy": [0.962890625, 0.0029277801513671875, 0.184814453125, 0.5986328125, 0.84130859375, 0.367431640625, 0.0287017822265625, 0.53173828125, 0.002376556396484375, 0.005138397216796875, 0.00015687942504882812, 0.0005970001220703125, 0.0010166168212890625, 0.058990478515625, 0.7265625, 0.022674560546875, 0.65673828125, 0.00939178466796875, 0.082275390625, 0.0809326171875, 0.1759033203125, 0.0005097389221191406, 0.025634765625, 0.0701904296875, 0.0008902549743652344, 0.0012865066528320312, 0.0006361007690429688, 0.0004744529724121094, 0.000568389892578125, 0.0002613067626953125, 0.097412109375, 0.021026611328125, 0.00020241737365722656, 2.753734588623047e-05, 0.0011882781982421875, 0.0007762908935546875, 7.271766662597656e-06, 0.0003604888916015625, 0.0020847320556640625, 0.5771484375, 0.389892578125, 0.0024242401123046875, 1.25390625, 0.76220703125, 0.0163421630859375, 1.271484375, 0.01800537109375, 0.145263671875, 0.22216796875, 0.005950927734375, 0.060333251953125, 0.01338958740234375], "tokens": [291, 320, 584, 434, 20772, 322, 1048, 821, 322, 943, 432, 322, 3111, 291, 1048, 280, 225, 34, 45, 291, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 533, 34, 32, 1322, 45, 3311, 92, 27, 301, 616, 1158, 2064, 1137, 4934, 280, 323, 77, 34, 79, 319, 533, 10025]}
{"line_number": 227, "line_type": "original", "code": "    }", "entropy": 4.41015625, "is_bug_line": false, "sus_score": 0.14586499149789456, "per_token_entropy": [3.85546875, 4.96484375], "tokens": [264, 320]}
{"line_number": 227, "line_type": "generated", "code": "\n          for (int l = 1; l < stages; ++l) {\n            sum += b[l] * yDotK[l][j];\n          }\n          yTmp[j] = y[j] + stepSize * sum;", "entropy": 0.0577392578125, "is_bug_line": false, "sus_score": 0.14586499149789456, "per_token_entropy": [0.61376953125, 0.7421875, 0.0008025169372558594, 0.0015106201171875, 0.11932373046875, 0.0002046823501586914, 0.001312255859375, 0.0161895751953125, 0.0003032684326171875, 0.0015439987182617188, 0.018798828125, 0.0171051025390625, 0.024810791015625, 0.0014524459838867188, 0.00041484832763671875, 0.00191497802734375, 0.005794525146484375, 0.1387939453125, 0.01262664794921875, 0.173583984375, 0.00954437255859375, 0.000347137451171875, 0.000728607177734375, 0.002857208251953125, 0.007144927978515625, 0.0034885406494140625, 3.6716461181640625e-05, 4.172325134277344e-06, 4.267692565917969e-05, 0.00033354759216308594, 0.0002281665802001953, 6.0677528381347656e-05, 0.002262115478515625, 0.0401611328125, 0.001007080078125, 0.06622314453125, 0.1510009765625, 0.1881103515625, 0.00014984607696533203, 7.05718994140625e-05, 0.00010943412780761719, 0.09625244140625, 0.0171966552734375, 0.007411956787109375, 0.00040984153747558594, 0.0002899169921875, 0.00023090839385986328, 0.5107421875, 0.0004680156707763672, 0.0007152557373046875, 0.00032210350036621094, 0.0009298324584960938], "tokens": [616, 436, 308, 410, 456, 280, 225, 35, 45, 456, 333, 31416, 45, 3311, 94, 27, 301, 324, 3632, 1454, 323, 77, 94, 79, 319, 533, 10025, 61, 77, 94, 1674, 92, 970, 616, 320, 616, 533, 15770, 77, 92, 79, 280, 533, 77, 92, 79, 474, 3111, 1250, 319, 3632, 45]}
{"line_number": 244, "line_type": "original", "code": "        if (firstTime) {", "entropy": 1.865234375, "is_bug_line": false, "sus_score": 0.14433756729740646, "per_token_entropy": [5.46875, 3.373046875, 0.328857421875, 3.314453125, 0.01824951171875, 0.394287109375, 0.1549072265625], "tokens": [351, 415, 308, 2232, 1043, 27, 301]}
{"line_number": 244, "line_type": "generated", "code": "\n                  hNew = dt;\n                  lastStep = true;\n              } else {\n                  // the step is accepted, we need to update the step size\n                  stepStart = manager.getEventTime();\n                  interpolator.shift();\n                  interpolator.storeTime(", "entropy": 0.45654296875, "is_bug_line": false, "sus_score": 0.14433756729740646, "per_token_entropy": [0.568359375, 2.208984375, 0.00457763671875, 0.0826416015625, 0.8798828125, 0.02471923828125, 0.9892578125, 2.966796875, 0.0009555816650390625, 0.003833770751953125, 0.0931396484375, 0.0003502368927001953, 1.0517578125, 0.00545501708984375, 0.220703125, 0.042816162109375, 0.0576171875, 0.3525390625, 1.6669921875, 0.368408203125, 0.55419921875, 1.44140625, 0.345458984375, 1.0537109375, 1.162109375, 0.02349853515625, 1.259765625, 0.2325439453125, 0.25634765625, 0.8779296875, 0.16796875, 0.669921875, 0.26611328125, 0.5703125, 0.0938720703125, 6.437301635742188e-05, 0.00484466552734375, 0.00017118453979492188, 0.0014057159423828125, 0.1927490234375, 0.89501953125, 9.775161743164062e-06, 0.00475311279296875, 0.4208984375, 0.52783203125, 0.26904296875, 0.841796875, 1.5854835510253906e-05, 0.00034880638122558594, 0.0013818740844726562, 0.0014467239379882812, 0.0001863241195678711], "tokens": [1750, 420, 1812, 280, 8793, 45, 1750, 2401, 3533, 280, 861, 45, 1090, 320, 813, 301, 1750, 434, 322, 3111, 438, 16187, 30, 996, 1849, 372, 1974, 322, 3111, 1334, 1750, 3111, 2130, 280, 7884, 32, 33442, 1043, 473, 1750, 14399, 717, 32, 5494, 473, 1750, 14399, 717, 32, 2157, 1043, 26]}
{"line_number": 246, "line_type": "original", "code": "          if (vecAbsoluteTolerance == null) {", "entropy": 1.9658203125, "is_bug_line": false, "sus_score": 0.14433756729740646, "per_token_entropy": [6.5546875, 2.564453125, 0.2369384765625, 8.3828125, 0.205078125, 0.0002853870391845703, 1.451171875, 0.05120849609375, 0.08935546875, 0.11309814453125], "tokens": [2033, 415, 308, 3137, 12043, 26265, 610, 744, 27, 301]}
{"line_number": 246, "line_type": "generated", "code": "\n                  stepSize = dt;\n              }\n          } else {\n              // no event was triggered, we accept the step", "entropy": 0.449951171875, "is_bug_line": false, "sus_score": 0.14433756729740646, "per_token_entropy": [0.314208984375, 1.06640625, 0.386474609375, 0.117919921875, 0.1644287109375, 0.03753662109375, 0.962890625, 0.006938934326171875, 0.196533203125, 0.0064849853515625, 0.1781005859375, 0.006038665771484375, 0.1168212890625, 1.2099609375, 1.115234375, 0.1455078125, 1.8564453125, 0.4677734375, 0.430908203125, 0.5771484375, 0.94384765625, 0.039764404296875, 0.007415771484375], "tokens": [1750, 3111, 1250, 280, 8793, 45, 1090, 320, 616, 320, 813, 301, 1090, 434, 1289, 1692, 1597, 16791, 30, 996, 5514, 322, 3111]}
{"line_number": 252, "line_type": "original", "code": "          hNew = initializeStep(equations, forward, getOrder(), scale,", "entropy": 2.802734375, "is_bug_line": false, "sus_score": 0.14433756729740646, "per_token_entropy": [5.171875, 3.90625, 0.03289794921875, 0.15625, 7.375, 0.0223846435546875, 0.025604248046875, 12.859375, 0.2060546875, 0.063720703125, 4.078125, 0.030303955078125, 6.84765625, 3.134765625, 0.07061767578125, 3.638671875, 0.04425048828125], "tokens": [2033, 420, 1812, 280, 7379, 3533, 26, 23671, 993, 30, 7386, 30, 622, 2871, 1026, 5247, 30]}
{"line_number": 252, "line_type": "generated", "code": "\n          stepStart = interpolator.getCurrentTime();\n          System.arraycopy(yTmp, 0, y, 0, yTmp.length);\n\n          // dispatch events occuring during the step\n          if (manager.dispatchEvents(interpolator)) {", "entropy": 0.44580078125, "is_bug_line": false, "sus_score": 0.14433756729740646, "per_token_entropy": [1.365234375, 1.0126953125, 0.11236572265625, 1.2978515625, 0.59423828125, 6.186962127685547e-05, 0.00010704994201660156, 0.1214599609375, 0.0036220550537109375, 0.011383056640625, 0.440673828125, 2.326171875, 0.0007119178771972656, 8.344650268554688e-07, 0.0007700920104980469, 0.103515625, 0.00426483154296875, 0.0003559589385986328, 0.005107879638671875, 1.728534698486328e-05, 0.0007319450378417969, 0.0014057159423828125, 0.0018930435180664062, 0.0034847259521484375, 1.430511474609375e-06, 0.0010709762573242188, 0.004241943359375, 0.904296875, 0.0001964569091796875, 8.976459503173828e-05, 0.0005030632019042969, 1.763671875, 0.4873046875, 0.9619140625, 1.7333984375, 1.7421875, 0.00079345703125, 0.08038330078125, 0.1251220703125, 0.253662109375, 0.71875, 2.125, 0.8466796875, 1.166015625, 0.0015974044799804688, 1.74609375, 0.4697265625, 0.10748291015625, 0.38134765625, 1.895427703857422e-05, 0.1597900390625, 0.0046539306640625], "tokens": [616, 3111, 2130, 280, 14399, 717, 32, 12331, 1043, 473, 616, 1171, 32, 40863, 26, 107, 15770, 30, 225, 34, 30, 533, 30, 225, 34, 30, 533, 15770, 32, 1322, 293, 5678, 434, 7520, 5216, 4795, 4093, 5929, 322, 3111, 616, 415, 308, 4018, 32, 7147, 5004, 26, 19537, 717, 490, 301]}
