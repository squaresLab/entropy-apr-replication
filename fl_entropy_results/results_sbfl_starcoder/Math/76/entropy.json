{"line_number": 143, "line_type": "original", "code": "            --p;", "entropy": 5.94140625, "is_bug_line": false, "sus_score": 0.8164965809277261, "per_token_entropy": [4.40234375, 9.734375, 8.0859375, 1.548828125], "tokens": [1468, 769, 98, 45]}
{"line_number": 143, "line_type": "generated", "code": "\n        }\n\n        return cachedU;\n\n    }\n\n    /** {@inheritDoc} */\n    public RealMatrix getUT()\n        throws InvalidMatrixException {\n\n        return getU().transpose();\n\n    }\n\n    /** {@inheritDoc} */\n    public RealMatrix getS()\n        throws Invalid", "entropy": 0.068115234375, "is_bug_line": false, "sus_score": 0.8164965809277261, "per_token_entropy": [0.341796875, 0.008087158203125, 0.20654296875, 0.10345458984375, 0.01067352294921875, 6.830692291259766e-05, 0.059051513671875, 0.1051025390625, 0.0004208087921142578, 0.014678955078125, 0.0018711090087890625, 0.062103271484375, 1.537799835205078e-05, 0.00019359588623046875, 0.0008177757263183594, 0.006839752197265625, 0.0013561248779296875, 0.050628662109375, 0.007366180419921875, 0.94580078125, 0.07379150390625, 0.0007004737854003906, 0.047576904296875, 8.499622344970703e-05, 0.00023627281188964844, 7.033348083496094e-05, 2.7418136596679688e-06, 0.00583648681640625, 0.161865234375, 0.56201171875, 0.03460693359375, 0.01364898681640625, 0.003833770751953125, 0.00411224365234375, 0.0001404285430908203, 0.00893402099609375, 4.982948303222656e-05, 0.008544921875, 0.0008449554443359375, 0.03363037109375, 1.1086463928222656e-05, 0.0001322031021118164, 0.01067352294921875, 0.005252838134765625, 0.0009851455688476562, 0.06268310546875, 0.0035305023193359375, 0.3310546875, 0.00018453598022460938, 0.239501953125, 0.00018417835235595703, 0.0014486312866210938], "tokens": [291, 320, 584, 442, 10814, 71, 45, 446, 320, 446, 1022, 3088, 18446, 111, 569, 284, 562, 11443, 4161, 622, 1068, 346, 291, 2571, 8073, 4161, 984, 301, 584, 442, 622, 71, 922, 16547, 473, 446, 320, 446, 1022, 3088, 18446, 111, 569, 284, 562, 11443, 4161, 43597, 346, 291, 2571, 8073]}
{"line_number": 283, "line_type": "original", "code": "        if (cachedVt == null) {", "entropy": 1.3486328125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [5.09765625, 3.033203125, 0.0794677734375, 0.64501953125, 3.16796875, 0.07366943359375, 0.0006017684936523438, 0.01213836669921875, 0.029266357421875], "tokens": [351, 415, 308, 10569, 35840, 610, 744, 27, 301]}
{"line_number": 283, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [], "tokens": []}
{"line_number": 284, "line_type": "original", "code": "            cachedVt = getV().transpose();", "entropy": 1.6435546875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [6.75, 2.376953125, 1.6806640625, 0.043975830078125, 3.001953125, 0.83544921875, 0.0858154296875, 0.007732391357421875, 0.010223388671875], "tokens": [1468, 10814, 35840, 280, 622, 72, 922, 16547, 473]}
{"line_number": 284, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [], "tokens": []}
{"line_number": 288, "line_type": "original", "code": "        return cachedVt;", "entropy": 3.58984375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [3.849609375, 0.95166015625, 2.54296875, 2.859375, 7.75], "tokens": [351, 442, 10814, 35840, 45]}
{"line_number": 288, "line_type": "generated", "code": "\n\n    }\n\n    /** {@inheritDoc} */\n    public RealMatrix getU()\n        throws InvalidMatrixException {\n        return transformer.getU();\n    }\n\n    /** {@inheritDoc} */\n    public RealMatrix getS()\n        throws InvalidMatrixException {\n        return new Array", "entropy": 0.2208251953125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [1.1298828125, 0.0217742919921875, 0.3271484375, 0.0264434814453125, 0.6142578125, 0.0006241798400878906, 0.0005574226379394531, 0.003971099853515625, 0.00765228271484375, 0.089599609375, 0.7578125, 0.1556396484375, 0.392578125, 0.73876953125, 0.0170440673828125, 0.2451171875, 0.0001703500747680664, 0.1500244140625, 0.00269317626953125, 1.0848045349121094e-05, 0.02301025390625, 1.6005859375, 0.53076171875, 1.26171875, 0.0080413818359375, 0.0089569091796875, 0.0036067962646484375, 0.05072021484375, 0.0218505859375, 0.00014066696166992188, 0.12286376953125, 0.00513458251953125, 0.255859375, 0.00023674964904785156, 0.0001176595687866211, 0.0028057098388671875, 0.0019140243530273438, 0.0233001708984375, 0.12548828125, 0.0208587646484375, 0.370361328125, 0.0007538795471191406, 0.10064697265625, 8.487701416015625e-05, 0.038604736328125, 0.0009298324584960938, 3.4570693969726562e-06, 0.00936126708984375, 0.46630859375, 0.416259765625, 1.07421875, 0.258056640625], "tokens": [446, 320, 446, 1022, 3088, 18446, 111, 569, 284, 562, 11443, 4161, 622, 71, 346, 291, 2571, 8073, 4161, 984, 301, 291, 442, 26612, 32, 371, 71, 473, 284, 320, 446, 1022, 3088, 18446, 111, 569, 284, 562, 11443, 4161, 43597, 346, 291, 2571, 8073, 4161, 984, 301, 291, 442, 537, 2629]}
{"line_number": 182, "line_type": "original", "code": "                    wData[i] = new double[p];", "entropy": 1.7431640625, "is_bug_line": false, "sus_score": 0.5345224838248488, "per_token_entropy": [9.28125, 6.69140625, 0.10650634765625, 0.04461669921875, 0.779296875, 2.072265625, 0.048309326171875, 1.5341796875, 0.031036376953125, 0.04718017578125, 0.271240234375, 0.018951416015625], "tokens": [4696, 341, 750, 77, 91, 79, 280, 537, 2064, 77, 98, 970]}
{"line_number": 182, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5345224838248488, "per_token_entropy": [], "tokens": []}
{"line_number": 217, "line_type": "original", "code": "        if (cachedS == null) {", "entropy": 1.8701171875, "is_bug_line": false, "sus_score": 0.5345224838248488, "per_token_entropy": [4.62890625, 7.328125, 0.0731201171875, 1.7724609375, 2.76171875, 0.1837158203125, 0.0022335052490234375, 0.0282745361328125, 0.0501708984375], "tokens": [351, 415, 308, 10569, 69, 610, 744, 27, 301]}
{"line_number": 217, "line_type": "generated", "code": "\n                }\n                cachedV =\n                    transformer.getV().multiply(MatrixUtils.createRealMatrix(wData));\n            }\n\n        }\n\n        // return the cached matrix\n        return cachedV;\n\n    }\n\n    /** {@inheritDoc} */\n    public RealMatrix get", "entropy": 0.0252838134765625, "is_bug_line": false, "sus_score": 0.5345224838248488, "per_token_entropy": [0.145751953125, 0.057403564453125, 0.1585693359375, 0.013580322265625, 0.002635955810546875, 0.00146484375, 0.21923828125, 0.0101165771484375, 0.00015664100646972656, 0.0005121231079101562, 0.05364990234375, 0.0048980712890625, 0.0131683349609375, 0.0006480216979980469, 0.0108795166015625, 1.7523765563964844e-05, 0.0002665519714355469, 4.184246063232422e-05, 6.67572021484375e-05, 1.9669532775878906e-05, 0.0001119375228881836, 0.0019054412841796875, 2.5510787963867188e-05, 0.038848876953125, 0.130615234375, 0.00038933753967285156, 0.1595458984375, 0.0012645721435546875, 0.040557861328125, 0.03289794921875, 0.0011777877807617188, 0.0010929107666015625, 0.004245758056640625, 0.0003025531768798828, 0.002544403076171875, 0.0003008842468261719, 0.00057220458984375, 0.0001150369644165039, 0.0009102821350097656, 0.07269287109375, 0.0001785755157470703, 0.059326171875, 0.00418853759765625, 0.031158447265625, 3.612041473388672e-05, 0.0003592967987060547, 0.0010633468627929688, 0.00399017333984375, 0.0044097900390625, 0.018951416015625, 0.00026869773864746094, 0.007228851318359375], "tokens": [400, 320, 400, 10814, 72, 280, 528, 26612, 32, 371, 72, 922, 20123, 26, 4161, 2755, 32, 1297, 6877, 4161, 26, 105, 750, 876, 324, 320, 584, 320, 584, 434, 442, 322, 10814, 5045, 291, 442, 10814, 72, 45, 446, 320, 446, 1022, 3088, 18446, 111, 569, 284, 562, 11443, 4161, 622]}
{"line_number": 220, "line_type": "original", "code": "            cachedS = MatrixUtils.createRealDiagonalMatrix(singularValues);", "entropy": 0.998046875, "is_bug_line": false, "sus_score": 0.5345224838248488, "per_token_entropy": [4.6328125, 4.28125, 4.75, 0.156005859375, 1.7626953125, 0.00019991397857666016, 0.0029468536376953125, 0.01203155517578125, 0.00873565673828125, 0.289794921875, 1.4185905456542969e-05, 0.016265869140625, 0.0017290115356445312, 0.0276947021484375, 0.00019502639770507812, 0.0277099609375], "tokens": [1468, 10814, 69, 280, 9320, 2755, 32, 1297, 6877, 26244, 11008, 4161, 26, 37579, 3354, 293]}
{"line_number": 220, "line_type": "generated", "code": "\n            }\n\n        }\n\n        // return the cached matrix\n        return cachedV;\n\n    }\n\n    /** {@inheritDoc} */\n    public RealMatrix getVT()\n        throws InvalidMatrixException {\n\n        if (cachedVt == null) {\n            cachedVt = getV().", "entropy": 0.03167724609375, "is_bug_line": false, "sus_score": 0.5345224838248488, "per_token_entropy": [0.30517578125, 0.002086639404296875, 0.45556640625, 0.01000213623046875, 0.1103515625, 0.0626220703125, 0.00238800048828125, 0.0019512176513671875, 0.0023975372314453125, 0.0007042884826660156, 0.00969696044921875, 0.0004546642303466797, 0.0010728836059570312, 0.00022935867309570312, 0.0022907257080078125, 0.156005859375, 0.0001455545425415039, 0.11199951171875, 0.005313873291015625, 0.05657958984375, 7.426738739013672e-05, 0.0004076957702636719, 0.0012989044189453125, 0.006191253662109375, 0.00716400146484375, 0.03533935546875, 0.00047135353088378906, 0.0102691650390625, 0.0305023193359375, 3.361701965332031e-05, 0.005828857421875, 8.118152618408203e-05, 0.00020587444305419922, 1.4185905456542969e-05, 5.602836608886719e-06, 0.002040863037109375, 0.1434326171875, 0.0142974853515625, 0.00024580955505371094, 0.0003924369812011719, 0.00629425048828125, 0.0007405281066894531, 0.0001323223114013672, 0.0003762245178222656, 0.0012664794921875, 0.07000732421875, 0.006359100341796875, 0.0005526542663574219, 0.00054168701171875, 0.0021533966064453125, 0.0010509490966796875, 0.0023193359375], "tokens": [324, 320, 584, 320, 584, 434, 442, 322, 10814, 5045, 291, 442, 10814, 72, 45, 446, 320, 446, 1022, 3088, 18446, 111, 569, 284, 562, 11443, 4161, 622, 11231, 346, 291, 2571, 8073, 4161, 984, 301, 584, 415, 308, 10569, 35840, 610, 744, 27, 301, 324, 10814, 35840, 280, 622, 72, 922]}
{"line_number": 223, "line_type": "original", "code": "        return cachedS;", "entropy": 3.0859375, "is_bug_line": false, "sus_score": 0.5345224838248488, "per_token_entropy": [4.84375, 2.109375, 0.0035915374755859375, 8.234375, 0.2415771484375], "tokens": [351, 442, 10814, 69, 45]}
{"line_number": 223, "line_type": "generated", "code": "\n        // return the cached matrix\n        return cachedV;\n\n    }\n\n    /** {@inheritDoc} */\n    public RealMatrix getVT()\n        throws InvalidMatrixException {\n\n        if (cachedVt == null) {\n            cachedVt = getV().transpose();\n        }", "entropy": 0.04583740234375, "is_bug_line": false, "sus_score": 0.5345224838248488, "per_token_entropy": [0.994140625, 0.6044921875, 0.014007568359375, 0.002414703369140625, 0.0034580230712890625, 0.0023212432861328125, 0.01318359375, 0.0008568763732910156, 0.003101348876953125, 0.001544952392578125, 0.004909515380859375, 0.1715087890625, 0.000476837158203125, 0.167236328125, 0.006137847900390625, 0.051055908203125, 7.49826431274414e-05, 0.0003063678741455078, 0.0009531974792480469, 0.0037899017333984375, 0.00788116455078125, 0.0277099609375, 0.00113677978515625, 0.018157958984375, 0.04205322265625, 2.562999725341797e-05, 0.00543212890625, 6.568431854248047e-05, 0.00014352798461914062, 5.710124969482422e-05, 5.4836273193359375e-06, 0.0018596649169921875, 0.1337890625, 0.020263671875, 0.00022411346435546875, 0.00039887428283691406, 0.007106781005859375, 0.0005960464477539062, 0.00010311603546142578, 0.0003612041473388672, 0.0007748603820800781, 0.056060791015625, 0.004283905029296875, 0.0007100105285644531, 0.00035309791564941406, 0.001804351806640625, 0.0009927749633789062, 0.0017805099487304688, 0.00015544891357421875, 6.747245788574219e-05, 0.0020809173583984375, 1.4066696166992188e-05], "tokens": [291, 434, 442, 322, 10814, 5045, 291, 442, 10814, 72, 45, 446, 320, 446, 1022, 3088, 18446, 111, 569, 284, 562, 11443, 4161, 622, 11231, 346, 291, 2571, 8073, 4161, 984, 301, 584, 415, 308, 10569, 35840, 610, 744, 27, 301, 324, 10814, 35840, 280, 622, 72, 922, 16547, 473, 291, 320]}
{"line_number": 156, "line_type": "original", "code": "        if (cachedU == null) {", "entropy": 1.5908203125, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [4.7578125, 6.5625, 0.0863037109375, 0.80859375, 1.3369140625, 0.7138671875, 0.03021240234375, 0.0068817138671875, 0.016998291015625], "tokens": [351, 415, 308, 10569, 71, 610, 744, 27, 301]}
{"line_number": 156, "line_type": "generated", "code": "\n        }\n\n        return cachedUt;\n\n    }\n\n    /** {@inheritDoc} */\n    public RealMatrix getV()\n        throws InvalidMatrixException {", "entropy": 0.09002685546875, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [0.0989990234375, 0.003387451171875, 0.11590576171875, 1.314453125, 0.0008587837219238281, 0.00038886070251464844, 0.004848480224609375, 0.053253173828125, 0.0002448558807373047, 0.0178070068359375, 0.0013971328735351562, 0.039947509765625, 0.00014722347259521484, 0.0003809928894042969, 0.0165863037109375, 0.0021572113037109375, 0.0014257431030273438, 0.052642822265625, 0.004730224609375, 0.7333984375, 0.03839111328125, 6.437301635742188e-05, 0.0155487060546875, 5.841255187988281e-05, 0.00028061866760253906, 0.00019884109497070312, 7.152557373046875e-07, 0.004718780517578125], "tokens": [291, 320, 584, 442, 10814, 29412, 45, 446, 320, 446, 1022, 3088, 18446, 111, 569, 284, 562, 11443, 4161, 622, 72, 346, 291, 2571, 8073, 4161, 984, 301]}
{"line_number": 158, "line_type": "original", "code": "            final int p = singularValues.length;", "entropy": 1.51171875, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [5.5859375, 4.40234375, 2.732421875, 1.7744140625, 0.10833740234375, 0.49755859375, 3.635883331298828e-05, 0.0009427070617675781, 0.00010752677917480469, 0.0137176513671875], "tokens": [1468, 1158, 629, 298, 280, 36134, 3354, 32, 1322, 45]}
{"line_number": 158, "line_type": "generated", "code": "\n        return cachedUt;\n\n    }\n\n    /** {@inheritDoc} */\n    public RealMatrix getV()\n        throws InvalidMatrixException {\n\n        if (cachedV == null) {", "entropy": 0.05328369140625, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [0.1790771484375, 0.423828125, 0.0303802490234375, 0.003955841064453125, 0.0186309814453125, 0.055023193359375, 0.0003509521484375, 0.025177001953125, 0.00235748291015625, 0.0229949951171875, 0.00013077259063720703, 0.00032019615173339844, 0.0256500244140625, 0.0082855224609375, 0.0019588470458984375, 0.0390625, 0.005893707275390625, 0.8173828125, 0.06915283203125, 7.295608520507812e-05, 0.014373779296875, 4.5180320739746094e-05, 0.0002675056457519531, 0.00013434886932373047, 1.5497207641601562e-06, 0.003993988037109375, 0.0772705078125, 0.0220489501953125, 0.0019092559814453125, 0.0014257431030273438, 0.00836181640625, 0.0031280517578125, 7.87973403930664e-05, 0.001247406005859375, 0.00116729736328125], "tokens": [291, 442, 10814, 29412, 45, 446, 320, 446, 1022, 3088, 18446, 111, 569, 284, 562, 11443, 4161, 622, 72, 346, 291, 2571, 8073, 4161, 984, 301, 584, 415, 308, 10569, 72, 610, 744, 27, 301]}
{"line_number": 159, "line_type": "original", "code": "            if (m >= n) {", "entropy": 2.173828125, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [5.2578125, 5.2421875, 0.109130859375, 3.9609375, 2.6015625, 0.0911865234375, 0.041259765625, 0.089111328125], "tokens": [1468, 415, 308, 95, 2377, 310, 27, 301]}
{"line_number": 159, "line_type": "generated", "code": "\n        return cachedUt;\n\n    }\n\n    /** {@inheritDoc} */\n    public RealMatrix getV()\n        throws InvalidMatrixException {\n\n        if (cachedV == null) {\n\n            final int p = singularValues.length;", "entropy": 0.050140380859375, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [0.2396240234375, 0.022308349609375, 0.02642822265625, 0.0190887451171875, 0.0281219482421875, 0.2442626953125, 0.005584716796875, 0.036834716796875, 0.004283905029296875, 0.036834716796875, 0.0001862049102783203, 0.0003066062927246094, 0.061737060546875, 0.0276031494140625, 0.0027027130126953125, 0.05792236328125, 0.00858306884765625, 0.6259765625, 0.09130859375, 0.00020456314086914062, 0.019256591796875, 0.00023055076599121094, 0.00040912628173828125, 4.3392181396484375e-05, 2.6226043701171875e-06, 0.00446319580078125, 0.038787841796875, 0.044219970703125, 0.0024566650390625, 0.0009965896606445312, 0.0260467529296875, 0.0052642822265625, 0.0001423358917236328, 0.0011510848999023438, 0.0029621124267578125, 0.160400390625, 0.301513671875, 0.042633056640625, 0.046661376953125, 0.00807952880859375, 0.00826263427734375, 1.3589859008789062e-05, 5.245208740234375e-05, 4.0531158447265625e-06, 0.0009288787841796875], "tokens": [291, 442, 10814, 29412, 45, 446, 320, 446, 1022, 3088, 18446, 111, 569, 284, 562, 11443, 4161, 622, 72, 346, 291, 2571, 8073, 4161, 984, 301, 584, 415, 308, 10569, 72, 610, 744, 27, 301, 1064, 1158, 629, 298, 280, 36134, 3354, 32, 1322, 45]}
{"line_number": 161, "line_type": "original", "code": "                final RealMatrix e =", "entropy": 2.451171875, "is_bug_line": true, "sus_score": 0.42640143271122083, "per_token_entropy": [7.44140625, 4.13671875, 0.875, 0.003551483154296875, 2.056640625, 0.2001953125], "tokens": [2071, 1158, 11443, 4161, 484, 280]}
{"line_number": 161, "line_type": "generated", "code": "\n    }\n\n    /** {@inheritDoc} */\n    public RealMatrix getV()\n        throws InvalidMatrixException {\n\n        if (cachedV == null) {\n\n            final int p = singularValues.length;\n            if (m >= n) {\n                // the tr", "entropy": 0.05029296875, "is_bug_line": true, "sus_score": 0.42640143271122083, "per_token_entropy": [0.75634765625, 0.256591796875, 0.09893798828125, 0.004337310791015625, 0.04034423828125, 5.5789947509765625e-05, 0.0001684427261352539, 0.0010900497436523438, 0.00919342041015625, 0.0034236907958984375, 0.08709716796875, 0.01033782958984375, 0.423828125, 0.10357666015625, 0.0001704692840576172, 0.0202178955078125, 9.119510650634766e-05, 0.00039768218994140625, 2.4557113647460938e-05, 2.6226043701171875e-06, 0.005645751953125, 0.03399658203125, 0.041473388671875, 0.00341033935546875, 0.0035247802734375, 0.00954437255859375, 0.004299163818359375, 0.00010573863983154297, 0.0014772415161132812, 0.0017766952514648438, 0.11138916015625, 0.12298583984375, 0.029205322265625, 0.0589599609375, 0.00862884521484375, 0.00658416748046875, 9.179115295410156e-06, 3.647804260253906e-05, 3.337860107421875e-06, 0.00030422210693359375, 0.044677734375, 0.0426025390625, 0.0007753372192382812, 0.049896240234375, 0.06268310546875, 0.0006384849548339844, 0.00030994415283203125, 0.0003833770751953125, 0.04144287109375, 0.0731201171875, 0.01947021484375, 0.01983642578125], "tokens": [284, 320, 446, 1022, 3088, 18446, 111, 569, 284, 562, 11443, 4161, 622, 72, 346, 291, 2571, 8073, 4161, 984, 301, 584, 415, 308, 10569, 72, 610, 744, 27, 301, 1064, 1158, 629, 298, 280, 36134, 3354, 32, 1322, 45, 324, 415, 308, 95, 2377, 310, 27, 301, 400, 434, 322, 554]}
{"line_number": 163, "line_type": "original", "code": "                final double[][] eData = e.getData();", "entropy": 1.5498046875, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [8.9375, 2.802734375, 0.59765625, 0.5439453125, 3.4921875, 0.01111602783203125, 0.164794921875, 0.454833984375, 0.00763702392578125, 0.01322174072265625, 0.02752685546875], "tokens": [2071, 1158, 2064, 11336, 484, 750, 280, 484, 32, 11576, 473]}
{"line_number": 163, "line_type": "generated", "code": "\n    /** {@inheritDoc} */\n    public RealMatrix getV()\n        throws InvalidMatrixException {\n\n        if (cachedV == null) {\n\n            final int p = singularValues.length;\n            if (m >= n) {\n                // the tridiag", "entropy": 0.054718017578125, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [0.435302734375, 0.046051025390625, 0.0982666015625, 7.176399230957031e-05, 0.000255584716796875, 0.0017642974853515625, 0.005588531494140625, 0.005512237548828125, 0.06402587890625, 0.007640838623046875, 0.69384765625, 0.2401123046875, 0.00019681453704833984, 0.058380126953125, 0.00015807151794433594, 0.0006165504455566406, 6.246566772460938e-05, 2.5033950805664062e-06, 0.0052490234375, 0.047882080078125, 0.1881103515625, 0.0036869049072265625, 0.00872802734375, 0.01357269287109375, 0.005001068115234375, 9.942054748535156e-05, 0.0015277862548828125, 0.0018091201782226562, 0.145263671875, 0.18310546875, 0.0401611328125, 0.099853515625, 0.00881195068359375, 0.005615234375, 8.702278137207031e-06, 3.62396240234375e-05, 2.9802322387695312e-06, 0.00048041343688964844, 0.0499267578125, 0.0789794921875, 0.000820159912109375, 0.054656982421875, 0.06683349609375, 0.001049041748046875, 0.0003399848937988281, 0.0003407001495361328, 0.0421142578125, 0.08172607421875, 0.0233917236328125, 0.0286102294921875, 3.135204315185547e-05, 6.61611557006836e-05], "tokens": [284, 1022, 3088, 18446, 111, 569, 284, 562, 11443, 4161, 622, 72, 346, 291, 2571, 8073, 4161, 984, 301, 584, 415, 308, 10569, 72, 610, 744, 27, 301, 1064, 1158, 629, 298, 280, 36134, 3354, 32, 1322, 45, 324, 415, 308, 95, 2377, 310, 27, 301, 400, 434, 322, 554, 10746, 481]}
{"line_number": 164, "line_type": "original", "code": "                final double[][] wData = new double[m][p];", "entropy": 1.333984375, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [9.46875, 3.771484375, 1.154296875, 1.751953125, 0.837890625, 0.02008056640625, 0.1558837890625, 0.251220703125, 0.0026149749755859375, 0.00173187255859375, 0.65625, 0.00746917724609375, 0.57958984375, 0.00653839111328125], "tokens": [2071, 1158, 2064, 11336, 341, 750, 280, 537, 2064, 77, 95, 1674, 98, 970]}
{"line_number": 164, "line_type": "generated", "code": "\n    public RealMatrix getV()\n        throws InvalidMatrixException {\n\n        if (cachedV == null) {\n\n            final int p = singularValues.length;\n            if (m >= n) {\n                // the tridiagonal matrix is Bt.", "entropy": 0.061553955078125, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [0.245361328125, 0.05364990234375, 0.10546875, 0.006877899169921875, 0.6943359375, 0.35693359375, 0.0005440711975097656, 0.1478271484375, 0.0005512237548828125, 0.00103759765625, 0.0001138448715209961, 3.6954879760742188e-06, 0.00597381591796875, 0.1448974609375, 0.264404296875, 0.004730224609375, 0.01177978515625, 0.0174713134765625, 0.0048370361328125, 7.963180541992188e-05, 0.0019426345825195312, 0.0020198822021484375, 0.16650390625, 0.201171875, 0.042633056640625, 0.08013916015625, 0.01024627685546875, 0.0053253173828125, 1.0132789611816406e-05, 4.0531158447265625e-05, 2.6226043701171875e-06, 0.0005445480346679688, 0.06591796875, 0.09417724609375, 0.0009636878967285156, 0.049560546875, 0.075439453125, 0.0010824203491210938, 0.0003914833068847656, 0.00041675567626953125, 0.05950927734375, 0.173583984375, 0.041748046875, 0.040771484375, 3.9696693420410156e-05, 7.259845733642578e-05, 6.437301635742188e-05, 0.00037980079650878906, 0.00400543212890625, 0.003208160400390625, 0.01218414306640625, 0.0003581047058105469], "tokens": [284, 562, 11443, 4161, 622, 72, 346, 291, 2571, 8073, 4161, 984, 301, 584, 415, 308, 10569, 72, 610, 744, 27, 301, 1064, 1158, 629, 298, 280, 36134, 3354, 32, 1322, 45, 324, 415, 308, 95, 2377, 310, 27, 301, 400, 434, 322, 554, 10746, 481, 11008, 5045, 438, 551, 102, 32]}
{"line_number": 165, "line_type": "original", "code": "                double[] ei1 = eData[0];", "entropy": 2.466796875, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [7.88671875, 8.171875, 0.7119140625, 7.83984375, 0.4677734375, 0.341064453125, 1.4736328125, 0.153564453125, 0.005126953125, 0.07073974609375, 0.004741668701171875], "tokens": [2071, 2064, 1178, 46516, 35, 280, 484, 750, 77, 34, 970]}
{"line_number": 165, "line_type": "generated", "code": "\n        throws InvalidMatrixException {\n\n        if (cachedS == null) {\n\n            // compute S = E.S^(-1).E^T where E is the eigenvectors matrix\n            final int p = singularValues.length;\n            final Real", "entropy": 0.252685546875, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [0.316162109375, 0.2490234375, 0.01137542724609375, 0.0014905929565429688, 1.5854835510253906e-05, 0.016021728515625, 0.313720703125, 0.57177734375, 0.01042938232421875, 0.038177490234375, 0.005222320556640625, 0.0035457611083984375, 0.0001266002655029297, 0.002471923828125, 0.0163116455078125, 0.97802734375, 1.2958984375, 1.2939453125, 1.0859375, 0.66162109375, 1.4619140625, 0.05792236328125, 0.2080078125, 0.173583984375, 0.1444091796875, 0.00925445556640625, 0.255859375, 0.1322021484375, 0.406494140625, 0.48583984375, 0.7548828125, 0.0203704833984375, 0.114501953125, 0.007198333740234375, 0.037872314453125, 8.225440979003906e-05, 0.0004930496215820312, 0.0232696533203125, 0.00585174560546875, 0.10333251953125, 0.079345703125, 1.015625, 0.1754150390625, 0.050689697265625, 0.0106353759765625, 1.1682510375976562e-05, 0.00012254714965820312, 6.198883056640625e-06, 0.0005984306335449219, 0.10198974609375, 0.10003662109375, 0.3349609375], "tokens": [291, 2571, 8073, 4161, 984, 301, 584, 415, 308, 10569, 69, 610, 744, 27, 301, 1064, 434, 7596, 358, 280, 516, 32, 69, 80, 3736, 35, 547, 55, 80, 70, 2154, 516, 438, 322, 38382, 2121, 1108, 101, 5045, 324, 1158, 629, 298, 280, 36134, 3354, 32, 1322, 45, 324, 1158, 11443]}
{"line_number": 166, "line_type": "original", "code": "                for (int i = 0; i < p - 1; ++i) {", "entropy": 0.7900390625, "is_bug_line": true, "sus_score": 0.42640143271122083, "per_token_entropy": [7.1171875, 2.41796875, 0.00235748291015625, 0.004062652587890625, 0.142333984375, 0.0011053085327148438, 0.019775390625, 0.0011444091796875, 0.0133056640625, 0.0015840530395507812, 0.003498077392578125, 1.4912109375, 4.53125, 0.00641632080078125, 0.022705078125, 0.002216339111328125, 0.01125335693359375, 0.0004189014434814453, 0.0016841888427734375, 0.01049041748046875], "tokens": [2071, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 298, 429, 225, 35, 45, 3311, 91, 27, 301]}
{"line_number": 166, "line_type": "generated", "code": "\n        if (cachedS == null) {\n            cachedS = MatrixUtils.createRealDiagonalMatrix(singularValues);\n        }", "entropy": 0.1707763671875, "is_bug_line": true, "sus_score": 0.42640143271122083, "per_token_entropy": [0.4833984375, 1.51171875, 0.0222320556640625, 0.2425537109375, 0.01499176025390625, 0.00775909423828125, 0.00015842914581298828, 0.0043792724609375, 0.016998291015625, 0.51220703125, 1.248046875, 0.00101470947265625, 0.0107574462890625, 0.40869140625, 4.279613494873047e-05, 0.0007987022399902344, 9.40561294555664e-05, 0.0113677978515625, 0.06915283203125, 1.3947486877441406e-05, 0.0014085769653320312, 0.00029206275939941406, 0.007762908935546875, 1.5974044799804688e-05, 0.01221466064453125, 0.01947021484375, 7.998943328857422e-05], "tokens": [291, 415, 308, 10569, 69, 610, 744, 27, 301, 324, 10814, 69, 280, 9320, 2755, 32, 1297, 6877, 26244, 11008, 4161, 26, 37579, 3354, 293, 291, 320]}
{"line_number": 177, "line_type": "original", "code": "                        for (int j = 0; j < p; ++j) {", "entropy": 0.9697265625, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [9.890625, 4.2890625, 0.01477813720703125, 0.0201568603515625, 1.55859375, 0.003948211669921875, 0.205810546875, 0.0192718505859375, 0.0068206787109375, 0.006954193115234375, 0.00733184814453125, 0.320068359375, 0.0823974609375, 0.01023101806640625, 0.00043511390686035156, 0.00373077392578125, 0.03680419921875], "tokens": [6797, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 298, 45, 3311, 92, 27, 301]}
{"line_number": 177, "line_type": "generated", "code": "\n    public RealMatrix getV()\n        throws InvalidMatrixException {\n\n        if (cachedV == null) {\n\n            // compute the inverse of the transform matrix\n            final RealMatrix invTrans = transformer.getU().transpose();\n\n            final int p = singularValues", "entropy": 0.37060546875, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [0.52783203125, 0.2200927734375, 0.023895263671875, 0.00191497802734375, 0.0194244384765625, 0.282958984375, 0.0018157958984375, 0.1180419921875, 0.001056671142578125, 0.0010194778442382812, 0.0002758502960205078, 7.033348083496094e-06, 0.00870513916015625, 0.209716796875, 0.294921875, 0.00826263427734375, 0.012542724609375, 0.0276947021484375, 0.002025604248046875, 0.00020313262939453125, 0.0038394927978515625, 0.0088958740234375, 0.2364501953125, 0.80517578125, 1.3349609375, 1.0078125, 2.123046875, 0.39404296875, 0.5712890625, 2.517578125, 0.197998046875, 0.380126953125, 0.1353759765625, 0.1153564453125, 0.0010051727294921875, 1.4091796875, 1.5625, 0.322509765625, 0.435546875, 0.0011625289916992188, 0.075439453125, 0.4541015625, 0.409423828125, 0.479248046875, 0.1376953125, 0.312255859375, 1.70703125, 0.1705322265625, 0.1636962890625, 0.0158233642578125, 0.01074981689453125, 2.944469451904297e-05], "tokens": [284, 562, 11443, 4161, 622, 72, 346, 291, 2571, 8073, 4161, 984, 301, 584, 415, 308, 10569, 72, 610, 744, 27, 301, 1064, 434, 7596, 322, 19385, 432, 322, 4522, 5045, 324, 1158, 11443, 4161, 4691, 1776, 280, 26612, 32, 371, 71, 922, 16547, 473, 1064, 1158, 629, 298, 280, 36134, 3354]}
{"line_number": 178, "line_type": "original", "code": "                            wData[p - 1][j] = ei1[j] * mainBidiagonal[p - 1] / singularValues[j];", "entropy": 1.2998046875, "is_bug_line": true, "sus_score": 0.42640143271122083, "per_token_entropy": [10.5234375, 10.3515625, 2.068359375, 0.2039794921875, 3.50390625, 1.4189453125, 0.06768798828125, 0.032562255859375, 0.9443359375, 0.8916015625, 0.144287109375, 0.1492919921875, 3.439453125, 0.72412109375, 0.01152801513671875, 0.03533935546875, 0.4453125, 2.107421875, 4.18359375, 0.205322265625, 0.0007128715515136719, 0.0028247833251953125, 0.0012874603271484375, 0.01256561279296875, 0.363525390625, 0.019805908203125, 0.00754547119140625, 0.07012939453125, 0.8515625, 1.0126953125, 0.77734375, 0.01519012451171875, 0.003932952880859375, 0.87744140625, 0.0185699462890625], "tokens": [9316, 341, 750, 77, 98, 429, 225, 35, 1674, 92, 79, 280, 46516, 35, 77, 92, 79, 319, 2575, 52, 10746, 481, 11008, 77, 98, 429, 225, 35, 79, 517, 36134, 3354, 77, 92, 970]}
{"line_number": 178, "line_type": "generated", "code": "\n    }\n\n    /** {@inheritDoc} */\n    public RealMatrix getV()\n        throws InvalidMatrixException {\n\n        if (cachedV == null) {\n\n            final int p = singularValues.length;\n            if (m >= n) {\n                // the tr", "entropy": 0.07403564453125, "is_bug_line": true, "sus_score": 0.42640143271122083, "per_token_entropy": [1.3671875, 0.35205078125, 0.247314453125, 0.01035308837890625, 0.061126708984375, 0.00019466876983642578, 0.00048542022705078125, 0.0024566650390625, 0.0157928466796875, 0.00850677490234375, 0.032684326171875, 0.001033782958984375, 0.0177764892578125, 0.0272979736328125, 0.00014007091522216797, 0.04736328125, 0.0003020763397216797, 0.0005559921264648438, 8.630752563476562e-05, 5.0067901611328125e-06, 0.00601959228515625, 0.08526611328125, 0.1612548828125, 0.00481414794921875, 0.00749969482421875, 0.0235137939453125, 0.0009641647338867188, 0.0001308917999267578, 0.0011873245239257812, 0.0026912689208984375, 0.08502197265625, 0.6923828125, 0.0771484375, 0.09228515625, 0.0100250244140625, 0.00756072998046875, 1.1086463928222656e-05, 0.00011289119720458984, 5.7220458984375e-06, 0.00026297569274902344, 0.06134033203125, 0.11871337890625, 0.0008039474487304688, 0.032318115234375, 0.04339599609375, 0.0016965866088867188, 0.00031065940856933594, 0.0003018379211425781, 0.03570556640625, 0.0457763671875, 0.031585693359375, 0.02642822265625], "tokens": [284, 320, 446, 1022, 3088, 18446, 111, 569, 284, 562, 11443, 4161, 622, 72, 346, 291, 2571, 8073, 4161, 984, 301, 584, 415, 308, 10569, 72, 610, 744, 27, 301, 1064, 1158, 629, 298, 280, 36134, 3354, 32, 1322, 45, 324, 415, 308, 95, 2377, 310, 27, 301, 400, 434, 322, 554]}
{"line_number": 181, "line_type": "original", "code": "                for (int i = p; i < m; ++i) {", "entropy": 0.95068359375, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [7.42578125, 2.541015625, 0.01445770263671875, 0.019775390625, 0.76611328125, 0.005252838134765625, 3.0703125, 0.5625, 0.0202789306640625, 0.02197265625, 0.69189453125, 0.04193115234375, 0.011627197265625, 0.0006947517395019531, 0.0064544677734375, 0.0103759765625], "tokens": [2071, 436, 308, 410, 595, 280, 298, 45, 595, 333, 345, 45, 3311, 91, 27, 301]}
{"line_number": 181, "line_type": "generated", "code": "\n    /** {@inheritDoc} */\n    public RealMatrix getV()\n        throws InvalidMatrixException {\n\n        if (cachedV == null) {\n\n            final int p = singularValues.length;\n            if (m >= n) {\n                // the tridiag", "entropy": 0.0760498046875, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [1.005859375, 0.161865234375, 0.346435546875, 0.00030922889709472656, 0.000591278076171875, 0.007373809814453125, 0.01390838623046875, 0.016204833984375, 0.06201171875, 0.0015077590942382812, 0.032928466796875, 0.050811767578125, 0.00035762786865234375, 0.0552978515625, 0.0003349781036376953, 0.0006151199340820312, 0.00017261505126953125, 3.814697265625e-06, 0.0061798095703125, 0.25048828125, 0.2232666015625, 0.005466461181640625, 0.00789642333984375, 0.0187225341796875, 0.0017185211181640625, 0.00015723705291748047, 0.0015172958374023438, 0.00199127197265625, 0.1676025390625, 0.80078125, 0.084716796875, 0.14453125, 0.005558013916015625, 0.00893402099609375, 4.2438507080078125e-05, 0.00016736984252929688, 2.5033950805664062e-05, 0.0004057884216308594, 0.08221435546875, 0.1417236328125, 0.0006861686706542969, 0.035064697265625, 0.045318603515625, 0.0017995834350585938, 0.0003993511199951172, 0.0004189014434814453, 0.04742431640625, 0.046966552734375, 0.035491943359375, 0.02911376953125, 4.661083221435547e-05, 5.53131103515625e-05], "tokens": [284, 1022, 3088, 18446, 111, 569, 284, 562, 11443, 4161, 622, 72, 346, 291, 2571, 8073, 4161, 984, 301, 584, 415, 308, 10569, 72, 610, 744, 27, 301, 1064, 1158, 629, 298, 280, 36134, 3354, 32, 1322, 45, 324, 415, 308, 95, 2377, 310, 27, 301, 400, 434, 322, 554, 10746, 481]}
{"line_number": 184, "line_type": "original", "code": "                cachedU =", "entropy": 4.60546875, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [7.83203125, 7.69921875, 2.736328125, 0.148193359375], "tokens": [2071, 10814, 71, 280]}
{"line_number": 184, "line_type": "generated", "code": "\n        throws InvalidMatrixException {\n\n        if (cachedV == null) {\n\n            final int p = singularValues.length;\n            if (m >= n) {\n                // the tridiagonal matrix is Bt.B, where B is upper bidi", "entropy": 0.059112548828125, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [0.283203125, 0.03668212890625, 0.0015411376953125, 0.0002269744873046875, 9.775161743164062e-06, 0.012237548828125, 0.70166015625, 0.324951171875, 0.0094146728515625, 0.03668212890625, 0.0253753662109375, 0.002193450927734375, 0.00023865699768066406, 0.003185272216796875, 0.00677490234375, 0.2490234375, 0.6689453125, 0.06597900390625, 0.09210205078125, 0.007007598876953125, 0.0089263916015625, 1.9073486328125e-05, 0.0001493692398071289, 8.702278137207031e-06, 0.0003521442413330078, 0.09796142578125, 0.117431640625, 0.0007243156433105469, 0.046112060546875, 0.06707763671875, 0.0021686553955078125, 0.0006537437438964844, 0.0009241104125976562, 0.0479736328125, 0.05364990234375, 0.033233642578125, 0.02581787109375, 4.291534423828125e-05, 3.9696693420410156e-05, 7.43865966796875e-05, 0.0005974769592285156, 0.00341796875, 0.00572967529296875, 0.01515960693359375, 0.0008115768432617188, 0.00318145751953125, 0.004261016845703125, 0.00566864013671875, 0.00022470951080322266, 0.0007748603820800781, 0.0032901763916015625, 0.00038743019104003906], "tokens": [291, 2571, 8073, 4161, 984, 301, 584, 415, 308, 10569, 72, 610, 744, 27, 301, 1064, 1158, 629, 298, 280, 36134, 3354, 32, 1322, 45, 324, 415, 308, 95, 2377, 310, 27, 301, 400, 434, 322, 554, 10746, 481, 11008, 5045, 438, 551, 102, 32, 52, 30, 2154, 551, 438, 8342, 40806]}
{"line_number": 186, "line_type": "original", "code": "            } else {", "entropy": 3.744140625, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [5.2734375, 5.7265625, 3.783203125, 0.1956787109375], "tokens": [1468, 320, 813, 301]}
{"line_number": 186, "line_type": "generated", "code": "\n        if (cachedV == null) {\n\n            // cache the matrix for subsequent calls\n            cachedV = eigenDecomposition.getV();\n\n        }\n\n        // return the cached matrix\n        return cachedV;", "entropy": 0.144287109375, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [0.3193359375, 1.275390625, 0.01415252685546875, 0.07470703125, 0.03643798828125, 0.00542449951171875, 0.00010204315185546875, 0.00443267822265625, 0.0018901824951171875, 0.27978515625, 0.77685546875, 1.1533203125, 0.01788330078125, 0.0311279296875, 0.008514404296875, 0.007442474365234375, 0.0018339157104492188, 0.11590576171875, 0.552734375, 0.0011339187622070312, 0.005069732666015625, 0.2392578125, 0.00018227100372314453, 1.5020370483398438e-05, 0.0003921985626220703, 0.0004429817199707031, 0.00800323486328125, 0.041778564453125, 0.2039794921875, 0.0007586479187011719, 0.587890625, 0.1240234375, 0.002105712890625, 0.0012989044189453125, 0.003765106201171875, 0.0006437301635742188, 0.01468658447265625, 0.0006608963012695312, 0.0026035308837890625, 0.0003948211669921875, 0.0032558441162109375], "tokens": [291, 415, 308, 10569, 72, 610, 744, 27, 301, 1064, 434, 3320, 322, 5045, 436, 16490, 7399, 324, 10814, 72, 280, 30880, 685, 20103, 32, 371, 72, 473, 584, 320, 584, 434, 442, 322, 10814, 5045, 291, 442, 10814, 72, 45]}
