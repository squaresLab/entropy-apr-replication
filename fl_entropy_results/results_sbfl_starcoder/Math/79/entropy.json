{"line_number": 1624, "line_type": "original", "code": "      int sum = 0;", "entropy": 1.607421875, "is_bug_line": true, "sus_score": 0.5, "per_token_entropy": [5.32421875, 4.23046875, 1.560546875, 0.061614990234375, 0.0179290771484375, 0.0014772415161132812, 0.05706787109375], "tokens": [647, 629, 3632, 280, 225, 34, 45]}
{"line_number": 1624, "line_type": "generated", "code": "\n    /**\n     * Calculates the L<sub>&infin;</sub> (max of abs) distance between two points.\n     *\n     * @param p1 the first point\n     * @param p2 the second point\n     * @return the L<", "entropy": 0.0941162109375, "is_bug_line": true, "sus_score": 0.5, "per_token_entropy": [0.70849609375, 0.2919921875, 0.05426025390625, 0.0009083747863769531, 0.58935546875, 0.0806884765625, 1.1376953125, 0.0283203125, 0.00901031494140625, 1.1650390625, 0.172119140625, 0.0001302957534790039, 0.0247039794921875, 0.0002130270004272461, 0.00991058349609375, 0.02972412109375, 0.04888916015625, 0.00804901123046875, 0.0013093948364257812, 0.0026798248291015625, 0.0384521484375, 0.036285400390625, 0.0751953125, 0.09295654296875, 0.05352783203125, 0.01556396484375, 0.0011835098266601562, 0.0244598388671875, 0.0005955696105957031, 0.009002685546875, 0.003826141357421875, 0.061492919921875, 0.0113525390625, 0.0048370361328125, 0.0005974769592285156, 0.0009098052978515625, 0.0026397705078125, 2.276897430419922e-05, 0.0002663135528564453, 0.0010986328125, 0.00354766845703125, 0.00019800662994384766, 0.0002205371856689453, 0.00011360645294189453, 4.279613494873047e-05, 0.0006494522094726562, 0.0004968643188476562, 0.0008082389831542969, 0.08416748046875, 0.0011091232299804688, 0.005435943603515625, 5.900859832763672e-05], "tokens": [284, 1022, 275, 319, 42236, 322, 498, 46, 1113, 2878, 266, 3507, 2691, 1113, 48, 308, 1449, 432, 11366, 27, 7291, 3733, 3134, 4981, 32, 275, 319, 275, 319, 477, 753, 298, 35, 322, 1932, 2260, 275, 319, 477, 753, 298, 36, 322, 3100, 2260, 275, 319, 477, 601, 322, 498, 46]}
{"line_number": 1625, "line_type": "original", "code": "      for (int i = 0; i < p1.length; i++) {", "entropy": 0.53271484375, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [5.15625, 4.30859375, 0.028594970703125, 0.031951904296875, 0.132080078125, 0.0123748779296875, 0.055816650390625, 0.0140228271484375, 0.0232086181640625, 0.0024471282958984375, 0.0191650390625, 0.2470703125, 0.02056884765625, 0.0205535888671875, 0.0048980712890625, 0.00888824462890625, 0.0024890899658203125, 0.004375457763671875, 0.030853271484375], "tokens": [647, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 298, 35, 32, 1322, 45, 595, 1987, 301]}
{"line_number": 1625, "line_type": "generated", "code": "\n    /**\n     * Calculates the L<sub>p</sub> distance between two points.\n     *\n     * @param p1 the first point\n     * @param p2 the second point\n     * @param p the p parameter\n     * @return the", "entropy": 0.177734375, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [0.69140625, 0.32958984375, 0.08056640625, 0.00128936767578125, 0.7060546875, 0.0894775390625, 1.203125, 0.03350830078125, 0.0072174072265625, 0.402587890625, 1.1328125, 0.00308990478515625, 3.1828880310058594e-05, 0.0019102096557617188, 0.47705078125, 0.031982421875, 0.00937652587890625, 0.0159149169921875, 0.10479736328125, 0.0447998046875, 0.00029778480529785156, 0.0621337890625, 0.00030040740966796875, 0.0140838623046875, 0.0012693405151367188, 0.0148468017578125, 0.06549072265625, 0.06475830078125, 0.00033664703369140625, 0.0005421638488769531, 0.0016336441040039062, 4.291534423828125e-06, 3.2901763916015625e-05, 3.838539123535156e-05, 6.031990051269531e-05, 0.00013780593872070312, 9.250640869140625e-05, 0.0005474090576171875, 0.00016415119171142578, 0.0010013580322265625, 4.744529724121094e-05, 0.0007152557373046875, 0.1878662109375, 0.0206298828125, 0.382080078125, 1.7099609375, 1.1162109375, 0.2188720703125, 0.0003490447998046875, 0.00194549560546875, 0.007526397705078125, 0.003818511962890625], "tokens": [284, 1022, 275, 319, 42236, 322, 498, 46, 1113, 48, 98, 377, 1113, 48, 7291, 3733, 3134, 4981, 32, 275, 319, 275, 319, 477, 753, 298, 35, 322, 1932, 2260, 275, 319, 477, 753, 298, 36, 322, 3100, 2260, 275, 319, 477, 753, 298, 322, 298, 3395, 275, 319, 477, 601, 322]}
{"line_number": 1626, "line_type": "original", "code": "          final int dp = p1[i] - p2[i];", "entropy": 1.03125, "is_bug_line": true, "sus_score": 0.5, "per_token_entropy": [9.078125, 3.439453125, 1.2412109375, 2.142578125, 0.2203369140625, 0.300048828125, 0.0141754150390625, 0.0204925537109375, 0.0174713134765625, 0.003925323486328125, 0.00856781005859375, 0.0017070770263671875, 0.0006222724914550781, 0.0011110305786132812, 0.0004131793975830078, 0.01023101806640625], "tokens": [2033, 1158, 629, 11339, 280, 298, 35, 77, 91, 79, 429, 298, 36, 77, 91, 970]}
{"line_number": 1626, "line_type": "generated", "code": "\n    /**\n     * Calculates the Manhattan distance between two points.\n     *\n     * @param p1 the first point\n     * @param p2 the second point\n     * @return the Manhattan distance between the two points\n     */\n   ", "entropy": 0.1043701171875, "is_bug_line": true, "sus_score": 0.5, "per_token_entropy": [0.8857421875, 0.494873046875, 0.06591796875, 0.0013036727905273438, 0.7255859375, 0.08636474609375, 1.96484375, 0.0231170654296875, 0.0005865097045898438, 0.0001481771469116211, 0.65576171875, 0.109375, 0.022216796875, 0.013336181640625, 0.07470703125, 0.044219970703125, 0.0024509429931640625, 0.058624267578125, 0.00033545494079589844, 0.004642486572265625, 0.0017499923706054688, 0.033477783203125, 0.001529693603515625, 0.0081024169921875, 0.0004305839538574219, 0.0005469322204589844, 0.0014400482177734375, 1.049041748046875e-05, 2.8371810913085938e-05, 0.00015354156494140625, 7.05718994140625e-05, 4.482269287109375e-05, 7.796287536621094e-05, 0.0003826618194580078, 0.00015246868133544922, 0.0006799697875976562, 0.00024116039276123047, 0.0012845993041992188, 0.003330230712890625, 0.003814697265625, 0.037322998046875, 0.0023212432861328125, 7.176399230957031e-05, 0.0002543926239013672, 0.007709503173828125, 0.011322021484375, 0.005527496337890625, 0.004436492919921875, 0.0015745162963867188, 0.0121612548828125, 0.019775390625, 0.030670166015625], "tokens": [284, 1022, 275, 319, 42236, 322, 4784, 90, 3131, 278, 7291, 3733, 3134, 4981, 32, 275, 319, 275, 319, 477, 753, 298, 35, 322, 1932, 2260, 275, 319, 477, 753, 298, 36, 322, 3100, 2260, 275, 319, 477, 601, 322, 4784, 90, 3131, 278, 7291, 3733, 322, 3134, 4981, 275, 569, 284]}
{"line_number": 1627, "line_type": "original", "code": "          sum += dp * dp;", "entropy": 2.611328125, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [8.9609375, 8.0078125, 0.50732421875, 0.62255859375, 0.1455078125, 0.0026416778564453125, 0.040069580078125], "tokens": [2033, 3632, 1454, 11339, 319, 11339, 45]}
{"line_number": 1627, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [], "tokens": []}
{"line_number": 1629, "line_type": "original", "code": "      return Math.sqrt(sum);", "entropy": 1.650390625, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [6.03515625, 3.701171875, 1.1650390625, 0.017425537109375, 1.994140625, 0.033203125, 0.20263671875, 0.054595947265625], "tokens": [647, 442, 4175, 32, 8663, 26, 1036, 293]}
{"line_number": 1629, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [], "tokens": []}
