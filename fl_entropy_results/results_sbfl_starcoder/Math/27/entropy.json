{"line_number": 597, "line_type": "original", "code": "        return multiply(100).doubleValue();", "entropy": 2.71484375, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [3.91015625, 0.994140625, 9.984375, 0.2213134765625, 0.34130859375, 1.3720703125, 0.0809326171875, 0.158203125, 5.76953125, 4.328125], "tokens": [351, 442, 22213, 26, 35, 34, 34, 547, 46952, 473]}
{"line_number": 597, "line_type": "generated", "code": "\n    }\n\n    /**\n     * <p>Gets the fraction as a <tt>double</tt>.</p>\n     *\n     * @return the fraction as a <tt>double</tt>.\n     */\n    public double doubleValue() {\n        return (", "entropy": 0.17529296875, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [1.15625, 0.1993408203125, 0.36376953125, 0.10491943359375, 0.0380859375, 2.205371856689453e-05, 0.22607421875, 0.00032782554626464844, 0.0008792877197265625, 1.8466796875, 0.373046875, 0.6083984375, 0.1607666015625, 0.07806396484375, 0.156005859375, 0.10552978515625, 0.0024929046630859375, 0.303955078125, 0.0027980804443359375, 1.8358230590820312e-05, 0.58984375, 8.618831634521484e-05, 0.0012054443359375, 0.00360870361328125, 0.0004394054412841797, 0.046783447265625, 3.123283386230469e-05, 0.7470703125, 0.006168365478515625, 0.2880859375, 0.1026611328125, 0.01201629638671875, 0.00022029876708984375, 0.011566162109375, 0.0012054443359375, 3.612041473388672e-05, 0.0021648406982421875, 0.0025310516357421875, 5.2928924560546875e-05, 0.30224609375, 0.0108489990234375, 0.187744140625, 0.037841796875, 0.13037109375, 0.005126953125, 0.0246734619140625, 2.384185791015625e-06, 0.02020263671875, 0.003688812255859375, 0.27099609375, 0.050506591796875, 0.5322265625], "tokens": [284, 320, 446, 1022, 275, 319, 333, 98, 48, 20931, 322, 18795, 619, 312, 333, 2251, 48, 2627, 377, 2251, 12689, 98, 48, 275, 319, 275, 319, 477, 601, 322, 18795, 619, 312, 333, 2251, 48, 2627, 377, 2251, 4503, 275, 569, 284, 562, 2064, 2064, 882, 346, 301, 291, 442, 308]}
{"line_number": 555, "line_type": "original", "code": "        return new Fraction(numerator * i, denominator);", "entropy": 1.8994140625, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [4.3046875, 2.185546875, 0.424072265625, 0.014068603515625, 0.201416015625, 1.30078125, 0.443603515625, 3.033203125, 9.1015625, 0.07550048828125, 0.57568359375, 1.14453125], "tokens": [351, 442, 537, 40823, 26, 1516, 11290, 319, 595, 30, 39920, 293]}
{"line_number": 555, "line_type": "generated", "code": "\n     * @param numerator  the numerator, for example the three in 'three sevenths'\n     * @param denominator  the denominator, for example the seven in 'three sevenths'\n     * @return a new fraction instance, with", "entropy": 0.07684326171875, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [0.451416015625, 0.308349609375, 0.9091796875, 0.01387786865234375, 0.0277557373046875, 0.136962890625, 0.10211181640625, 0.007671356201171875, 0.0106201171875, 1.8358230590820312e-05, 0.132080078125, 0.016510009765625, 0.0026397705078125, 0.01039886474609375, 0.08050537109375, 2.3365020751953125e-05, 0.0005898475646972656, 0.0289459228515625, 0.302978515625, 0.0031566619873046875, 0.0005664825439453125, 0.00047588348388671875, 0.003223419189453125, 8.58306884765625e-05, 0.00010311603546142578, 0.0003173351287841797, 0.0014896392822265625, 0.0164031982421875, 3.3020973205566406e-05, 0.0026874542236328125, 0.0171051025390625, 0.0017747879028320312, 8.726119995117188e-05, 0.0004143714904785156, 0.01483917236328125, 1.3828277587890625e-05, 0.0279998779296875, 1.2516975402832031e-05, 0.10528564453125, 2.753734588623047e-05, 1.0728836059570312e-06, 0.0016078948974609375, 0.039306640625, 0.0011224746704101562, 0.0012655258178710938, 0.031524658203125, 0.0894775390625, 0.630859375, 0.20263671875, 0.0007576942443847656, 0.1790771484375, 0.0792236328125], "tokens": [275, 319, 477, 753, 1929, 11290, 225, 322, 1929, 11290, 30, 436, 2280, 322, 8019, 328, 330, 12192, 408, 654, 3914, 25, 275, 319, 477, 753, 39920, 225, 322, 39920, 30, 436, 2280, 322, 46213, 328, 330, 12192, 408, 654, 3914, 25, 275, 319, 477, 601, 312, 537, 18795, 1980, 30, 623]}
{"line_number": 319, "line_type": "original", "code": "        return (double)numerator / (double)denominator;", "entropy": 1.1123046875, "is_bug_line": false, "sus_score": 0.19245008972987526, "per_token_entropy": [4.91015625, 0.33984375, 3.076171875, 5.47265625, 0.157470703125, 0.42626953125, 0.002025604248046875, 0.337890625, 0.79443359375, 0.00678253173828125, 0.0017728805541992188, 0.019439697265625, 4.470348358154297e-05, 0.0281219482421875], "tokens": [351, 442, 308, 2627, 27, 1516, 11290, 517, 308, 2627, 27, 29805, 9693, 45]}
{"line_number": 319, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Gets a hashCode for the fraction.\n     * @return a hash code value for this object.\n     */\n    @Override\n    public int hashCode() {\n        return 37 * numerator + denominator;\n    }\n\n    /**\n    ", "entropy": 0.047332763671875, "is_bug_line": false, "sus_score": 0.19245008972987526, "per_token_entropy": [0.1446533203125, 0.0009059906005859375, 0.048675537109375, 0.035614013671875, 0.004169464111328125, 4.9948692321777344e-05, 0.310791015625, 0.0699462890625, 0.114990234375, 0.0010404586791992188, 0.039215087890625, 0.006549835205078125, 0.0061492919921875, 0.016510009765625, 0.0006814002990722656, 0.0067138671875, 0.0007033348083496094, 0.0303955078125, 0.011505126953125, 0.02593994140625, 0.0033550262451171875, 0.0008301734924316406, 0.0030651092529296875, 0.0006766319274902344, 0.0352783203125, 0.0008616447448730469, 0.0206298828125, 0.005664825439453125, 0.004547119140625, 4.76837158203125e-05, 0.0027866363525390625, 0.0006504058837890625, 0.0008668899536132812, 8.821487426757812e-06, 0.0029468536376953125, 0.0013103485107421875, 0.07928466796875, 0.56689453125, 0.04730224609375, 0.0009012222290039062, 0.02044677734375, 0.03662109375, 0.43603515625, 1.9788742065429688e-05, 0.0003120899200439453, 0.26708984375, 0.0008993148803710938, 0.0030994415283203125, 0.00010573863983154297, 0.0300445556640625, 0.009490966796875, 0.004055023193359375], "tokens": [284, 320, 446, 1022, 275, 319, 7124, 312, 17772, 436, 322, 18795, 32, 275, 319, 477, 601, 312, 3677, 1340, 786, 436, 458, 1300, 32, 275, 569, 284, 477, 1788, 284, 562, 629, 17772, 346, 301, 291, 442, 225, 37, 41, 319, 1929, 11290, 474, 39920, 45, 284, 320, 446, 1022, 275]}
{"line_number": 256, "line_type": "original", "code": "    public Fraction(int num, int den) {", "entropy": 2.58203125, "is_bug_line": false, "sus_score": 0.07124704998790965, "per_token_entropy": [6.5078125, 0.2154541015625, 11.609375, 7.40625, 1.7041015625, 0.195556640625, 0.363525390625, 0.10137939453125, 0.031585693359375, 0.1221923828125, 0.1502685546875], "tokens": [264, 562, 40823, 26, 410, 1929, 30, 629, 5537, 27, 301]}
{"line_number": 256, "line_type": "generated", "code": "\n    public int compareTo(Object object) {\n        if (object == this) {\n            return 0;\n        }\n        if (object instanceof Fraction) {\n            Fraction rhs = (Fraction) object;\n            if (rhs.numerator == numerator", "entropy": 0.209228515625, "is_bug_line": false, "sus_score": 0.07124704998790965, "per_token_entropy": [0.1630859375, 0.289306640625, 0.00798797607421875, 0.0015134811401367188, 3.2901763916015625e-05, 0.002513885498046875, 0.9072265625, 0.0025177001953125, 0.002880096435546875, 0.00812530517578125, 0.16748046875, 0.347900390625, 0.0173797607421875, 0.97119140625, 0.7783203125, 0.03125, 0.006855010986328125, 0.00435638427734375, 0.011962890625, 0.004764556884765625, 0.002353668212890625, 0.00023567676544189453, 0.00018262863159179688, 0.007049560546875, 3.5643577575683594e-05, 0.45751953125, 0.47216796875, 0.05059814453125, 0.016876220703125, 0.165283203125, 0.0123748779296875, 0.09613037109375, 0.0015954971313476562, 0.031524658203125, 0.310791015625, 0.3466796875, 0.002536773681640625, 0.0014657974243164062, 5.4717063903808594e-05, 0.00168609619140625, 0.08660888671875, 0.0003573894500732422, 0.183349609375, 1.5419921875, 0.027923583984375, 1.484375, 0.00846099853515625, 0.35400390625, 0.0004074573516845703, 1.0009765625, 0.49365234375, 0.00012052059173583984], "tokens": [284, 562, 629, 8868, 705, 26, 959, 1300, 27, 301, 291, 415, 308, 1473, 610, 458, 27, 301, 324, 442, 225, 34, 45, 291, 320, 291, 415, 308, 1473, 5113, 40823, 27, 301, 324, 40823, 9322, 280, 308, 20709, 27, 1300, 45, 324, 415, 308, 14312, 32, 1516, 11290, 610, 1929, 11290]}
{"line_number": 257, "line_type": "original", "code": "        if (den == 0) {", "entropy": 1.8525390625, "is_bug_line": false, "sus_score": 0.07124704998790965, "per_token_entropy": [5.13671875, 1.6142578125, 0.11865234375, 6.3515625, 0.93408203125, 1.8583984375, 0.10675048828125, 0.47900390625, 0.0711669921875], "tokens": [351, 415, 308, 5114, 610, 225, 34, 27, 301]}
{"line_number": 257, "line_type": "generated", "code": "\n        return FastMath.compare(doubleValue(), object.doubleValue());\n    }\n\n    /**\n     * Returns the maximum of this fraction and <tt>fraction</tt>.\n     * @param fraction the fraction to compare with.\n     * @return the larger of this", "entropy": 0.32763671875, "is_bug_line": false, "sus_score": 0.07124704998790965, "per_token_entropy": [0.5625, 1.265625, 2.751953125, 0.0006155967712402344, 0.00021338462829589844, 0.39404296875, 0.02081298828125, 0.8671875, 0.0167999267578125, 0.048309326171875, 0.000583648681640625, 0.00017786026000976562, 0.0032138824462890625, 0.08221435546875, 0.0015430450439453125, 0.08990478515625, 0.040130615234375, 0.01049041748046875, 7.56978988647461e-05, 1.5615234375, 0.3271484375, 2.736328125, 0.0089569091796875, 0.06341552734375, 0.240966796875, 0.007556915283203125, 0.451904296875, 0.037567138671875, 5.9485435485839844e-05, 0.94482421875, 0.00450897216796875, 0.0002961158752441406, 0.0021800994873046875, 0.0229339599609375, 0.0005278587341308594, 0.0234527587890625, 0.004642486572265625, 0.031768798828125, 0.177734375, 1.771484375, 0.00800323486328125, 0.77490234375, 0.420654296875, 0.15478515625, 0.0016984939575195312, 0.00044536590576171875, 0.0007104873657226562, 0.0035457611083984375, 0.1976318359375, 0.693359375, 0.19677734375, 0.002475738525390625], "tokens": [291, 442, 15938, 5717, 32, 6055, 26, 46952, 1026, 1300, 32, 46952, 1035, 284, 320, 446, 1022, 275, 319, 3759, 322, 7091, 432, 458, 18795, 461, 333, 2251, 48, 21284, 377, 2251, 4503, 275, 319, 477, 753, 18795, 322, 18795, 372, 8868, 623, 32, 275, 319, 477, 601, 322, 14324, 432, 458]}
{"line_number": 261, "line_type": "original", "code": "        if (den < 0) {", "entropy": 1.5595703125, "is_bug_line": false, "sus_score": 0.07124704998790965, "per_token_entropy": [5.0703125, 1.328125, 0.0872802734375, 4.72265625, 2.474609375, 0.306640625, 0.01258087158203125, 0.022796630859375, 0.016815185546875], "tokens": [351, 415, 308, 5114, 333, 225, 34, 27, 301]}
{"line_number": 261, "line_type": "generated", "code": "\n    /**\n     * Returns the greatest common divisor of the absolute value of two\n     * numbers, using the \"binary gcd\" method which is faster for\n     * <tt>int</tt>s than the Euclidean algorithm.  See Knuth 4", "entropy": 0.2744140625, "is_bug_line": false, "sus_score": 0.07124704998790965, "per_token_entropy": [0.91552734375, 0.157958984375, 0.037750244140625, 3.123283386230469e-05, 1.556640625, 0.425048828125, 1.720703125, 0.00441741943359375, 0.34619140625, 0.1243896484375, 0.11962890625, 0.421142578125, 0.01200103759765625, 0.0035495758056640625, 0.822265625, 0.3154296875, 1.239776611328125e-05, 0.5634765625, 0.06488037109375, 0.03961181640625, 0.10174560546875, 0.11871337890625, 0.311279296875, 0.0191650390625, 0.007904052734375, 0.0045013427734375, 0.000308990478515625, 0.6669921875, 0.78369140625, 0.0261993408203125, 0.1083984375, 7.62939453125e-06, 1.14453125, 0.9658203125, 0.0002601146697998047, 0.80224609375, 0.0008311271667480469, 0.00014197826385498047, 0.0022125244140625, 0.289306640625, 0.08990478515625, 0.05731201171875, 0.092041015625, 0.283203125, 0.103759765625, 0.001354217529296875, 0.08306884765625, 0.406005859375, 0.1171875, 1.3709068298339844e-05, 0.033050537109375, 5.9604644775390625e-06], "tokens": [284, 1022, 275, 319, 3759, 322, 48299, 4942, 33482, 432, 322, 7976, 786, 432, 3134, 275, 319, 7515, 30, 1471, 322, 313, 7003, 43422, 20, 1411, 1510, 438, 15162, 436, 275, 319, 333, 2251, 48, 410, 377, 2251, 48, 101, 2784, 322, 516, 34986, 8218, 32, 225, 2802, 44327, 860, 225, 38]}
{"line_number": 271, "line_type": "original", "code": "        final int d = ArithmeticUtils.gcd(num, den);", "entropy": 1.8603515625, "is_bug_line": false, "sus_score": 0.07124704998790965, "per_token_entropy": [6.52734375, 5.68359375, 1.638671875, 2.046875, 0.1214599609375, 4.578125, 0.0033969879150390625, 0.0016870498657226562, 0.004261016845703125, 0.01506805419921875, 0.15380859375, 5.2109375, 0.048919677734375, 0.00836944580078125], "tokens": [351, 1158, 629, 343, 280, 47721, 2755, 32, 46060, 26, 1516, 30, 5537, 293]}
{"line_number": 271, "line_type": "generated", "code": "\n\n    /**\n     * Gets the fraction as a <tt>float</tt>. This calculates the fraction as\n     * the numerator divided by denominator.\n     * @return the fraction as a <tt>float</tt>\n     */\n    @Override\n    public", "entropy": 0.039764404296875, "is_bug_line": false, "sus_score": 0.07124704998790965, "per_token_entropy": [1.0322265625, 0.045196533203125, 0.0173187255859375, 2.4557113647460938e-05, 0.58251953125, 0.0037364959716796875, 0.04901123046875, 0.0011348724365234375, 0.019195556640625, 0.022308349609375, 0.002960205078125, 0.00012350082397460938, 0.00913238525390625, 0.0034637451171875, 8.499622344970703e-05, 0.002361297607421875, 0.017608642578125, 0.0031490325927734375, 0.0005097389221191406, 0.003284454345703125, 0.0012845993041992188, 0.05853271484375, 9.179115295410156e-06, 0.00038123130798339844, 0.0002570152282714844, 0.0002727508544921875, 3.886222839355469e-05, 8.356571197509766e-05, 0.0034580230712890625, 0.006679534912109375, 0.0291748046875, 0.00023806095123291016, 0.0246124267578125, 0.0005064010620117188, 0.001995086669921875, 0.0028400421142578125, 8.726119995117188e-05, 0.0004317760467529297, 0.0030460357666015625, 2.8014183044433594e-05, 4.076957702636719e-05, 0.0068206787109375, 0.0021114349365234375, 9.655952453613281e-06, 0.03509521484375, 0.0009870529174804688, 0.00933074951171875, 0.00785064697265625, 0.05438232421875, 0.0004286766052246094, 0.0023365020751953125, 0.0006017684936523438], "tokens": [446, 1022, 275, 319, 7124, 322, 18795, 619, 312, 333, 2251, 48, 1808, 377, 2251, 4503, 1348, 38057, 322, 18795, 619, 275, 319, 322, 1929, 11290, 32235, 810, 39920, 32, 275, 319, 477, 601, 322, 18795, 619, 312, 333, 2251, 48, 1808, 377, 2251, 48, 275, 569, 284, 477, 1788, 284, 562]}
{"line_number": 272, "line_type": "original", "code": "        if (d > 1) {", "entropy": 1.888671875, "is_bug_line": false, "sus_score": 0.07124704998790965, "per_token_entropy": [5.20703125, 2.236328125, 0.140380859375, 4.33984375, 2.900390625, 1.5576171875, 0.4384765625, 0.1383056640625, 0.042388916015625], "tokens": [351, 415, 308, 86, 848, 225, 35, 27, 301]}
{"line_number": 272, "line_type": "generated", "code": "\n    /**\n     * Returns the fraction as a <tt>float</tt>. This calculates the fraction as\n     * the numerator divided by denominator.\n     * @return the fraction as a <tt>float</tt>\n     */\n    @Override\n    public", "entropy": 0.08880615234375, "is_bug_line": false, "sus_score": 0.07124704998790965, "per_token_entropy": [0.54345703125, 0.10137939453125, 0.0384521484375, 5.888938903808594e-05, 2.044921875, 0.1326904296875, 0.8916015625, 0.03546142578125, 0.04827880859375, 0.0657958984375, 0.0272979736328125, 0.00026154518127441406, 0.10919189453125, 0.002567291259765625, 2.8252601623535156e-05, 0.00390625, 0.035369873046875, 0.0037822723388671875, 0.001445770263671875, 0.00856781005859375, 0.11663818359375, 0.0029468536376953125, 7.748603820800781e-06, 0.0006999969482421875, 0.0003368854522705078, 0.0003197193145751953, 7.402896881103516e-05, 0.00010895729064941406, 0.00423431396484375, 0.00963592529296875, 0.048126220703125, 0.0003399848937988281, 0.039794921875, 0.0012216567993164062, 0.00521087646484375, 0.007904052734375, 0.00017249584197998047, 0.0006833076477050781, 0.004688262939453125, 5.14984130859375e-05, 6.437301635742188e-05, 0.006145477294921875, 0.0024471282958984375, 1.990795135498047e-05, 0.08160400390625, 0.001953125, 0.0144195556640625, 0.011962890625, 0.1541748046875, 0.0007696151733398438, 0.004108428955078125, 0.0011844635009765625], "tokens": [284, 1022, 275, 319, 3759, 322, 18795, 619, 312, 333, 2251, 48, 1808, 377, 2251, 4503, 1348, 38057, 322, 18795, 619, 275, 319, 322, 1929, 11290, 32235, 810, 39920, 32, 275, 319, 477, 601, 322, 18795, 619, 312, 333, 2251, 48, 1808, 377, 2251, 48, 275, 569, 284, 477, 1788, 284, 562]}
{"line_number": 278, "line_type": "original", "code": "        if (den < 0) {", "entropy": 3.177734375, "is_bug_line": false, "sus_score": 0.07124704998790965, "per_token_entropy": [2.40234375, 10.671875, 0.83984375, 11.1015625, 3.470703125, 0.05816650390625, 0.0006275177001953125, 0.01451873779296875, 0.0318603515625], "tokens": [351, 415, 308, 5114, 333, 225, 34, 27, 301]}
{"line_number": 278, "line_type": "generated", "code": "\n     */\n    @Override\n    public boolean equals(Object other) {\n        if (this == other) {\n            return true;\n        }\n\n        if (other instanceof Fraction) {\n            Fraction rhs = (Fraction) other;\n            return (numerator == rhs", "entropy": 0.125244140625, "is_bug_line": false, "sus_score": 0.07124704998790965, "per_token_entropy": [1.2763671875, 0.10516357421875, 0.0165863037109375, 0.10400390625, 0.00042939186096191406, 0.00928497314453125, 0.0013589859008789062, 0.0017080307006835938, 4.756450653076172e-05, 0.0020809173583984375, 0.03643798828125, 0.01355743408203125, 0.0077362060546875, 0.00502777099609375, 0.10186767578125, 0.09893798828125, 0.01409912109375, 0.0106658935546875, 0.00513458251953125, 0.0001786947250366211, 0.0106658935546875, 0.006870269775390625, 0.017669677734375, 0.0176849365234375, 0.003604888916015625, 0.0002582073211669922, 0.003810882568359375, 0.00015747547149658203, 1.6162109375, 0.035675048828125, 0.038665771484375, 0.021209716796875, 0.152099609375, 0.0020542144775390625, 0.1600341796875, 0.0023651123046875, 0.049713134765625, 0.1395263671875, 0.04150390625, 0.00516510009765625, 0.0033016204833984375, 0.00020325183868408203, 0.0010967254638671875, 0.1307373046875, 0.0003204345703125, 0.126220703125, 0.65673828125, 1.0634765625, 0.330810546875, 8.07046890258789e-05, 0.06695556640625, 0.0006799697875976562], "tokens": [275, 569, 284, 477, 1788, 284, 562, 1905, 12423, 26, 959, 1604, 27, 301, 291, 415, 308, 578, 610, 1604, 27, 301, 324, 442, 861, 45, 291, 320, 584, 415, 308, 2455, 5113, 40823, 27, 301, 324, 40823, 9322, 280, 308, 20709, 27, 1604, 45, 324, 442, 308, 1516, 11290, 610, 9322]}
{"line_number": 282, "line_type": "original", "code": "        this.numerator   = num;", "entropy": 2.451171875, "is_bug_line": false, "sus_score": 0.07124704998790965, "per_token_entropy": [4.9375, 5.97265625, 0.039642333984375, 0.53662109375, 0.004985809326171875, 4.5703125, 1.640625, 2.560546875, 1.8056640625], "tokens": [351, 458, 32, 1516, 11290, 261, 280, 1929, 45]}
{"line_number": 282, "line_type": "generated", "code": "\n    public boolean equals(Object other) {\n        if (this == other) {\n            return true;\n        }\n        if (other == null ||!(other instanceof Fraction)) {\n            return false;\n        }\n\n        Fraction rhs = (Fraction) other;\n       ", "entropy": 0.07568359375, "is_bug_line": false, "sus_score": 0.07124704998790965, "per_token_entropy": [0.139404296875, 0.0253448486328125, 0.0034122467041015625, 0.0002593994140625, 0.00970458984375, 0.07666015625, 0.07611083984375, 0.009979248046875, 0.035491943359375, 0.1077880859375, 0.07080078125, 0.017333984375, 0.01078033447265625, 0.0036373138427734375, 0.0003256797790527344, 0.0160369873046875, 0.005340576171875, 0.0168609619140625, 0.01284027099609375, 0.002956390380859375, 0.0002644062042236328, 0.0030689239501953125, 7.49826431274414e-05, 0.27734375, 0.004398345947265625, 0.0199127197265625, 0.0137786865234375, 0.72119140625, 0.0001233816146850586, 0.2322998046875, 0.042999267578125, 0.004642486572265625, 0.0010080337524414062, 0.003932952880859375, 0.006778717041015625, 0.0019102096557617188, 0.00634765625, 0.00041365623474121094, 9.715557098388672e-05, 0.0002231597900390625, 0.0035457611083984375, 0.0002613067626953125, 1.3486328125, 0.170166015625, 0.06402587890625, 0.0015354156494140625, 0.0042266845703125, 0.00030732154846191406, 0.002918243408203125, 0.149169921875, 0.0006747245788574219, 0.20849609375], "tokens": [284, 562, 1905, 12423, 26, 959, 1604, 27, 301, 291, 415, 308, 578, 610, 1604, 27, 301, 324, 442, 861, 45, 291, 320, 291, 415, 308, 2455, 610, 744, 1276, 13685, 2455, 5113, 40823, 490, 301, 324, 442, 901, 45, 291, 320, 584, 40823, 9322, 280, 308, 20709, 27, 1604, 45, 291]}
{"line_number": 283, "line_type": "original", "code": "        this.denominator = den;", "entropy": 3.1015625, "is_bug_line": false, "sus_score": 0.07124704998790965, "per_token_entropy": [3.4296875, 7.45703125, 0.6826171875, 4.921875, 0.00359344482421875, 2.8125, 4.92578125, 0.572265625], "tokens": [351, 458, 32, 29805, 9693, 280, 5537, 45]}
{"line_number": 283, "line_type": "generated", "code": "\n        return false;\n    }\n\n    /**\n     * Gets the fraction as a <tt>float</tt>. This calculates the fraction as\n     * the numerator divided by denominator.\n     * @return the fraction as a <tt>float</tt>\n    ", "entropy": 0.04522705078125, "is_bug_line": false, "sus_score": 0.07124704998790965, "per_token_entropy": [0.80615234375, 0.57958984375, 0.1981201171875, 0.001262664794921875, 0.1961669921875, 0.000461578369140625, 0.0880126953125, 0.026611328125, 0.004428863525390625, 1.728534698486328e-05, 0.227783203125, 0.0038909912109375, 0.023590087890625, 0.0006318092346191406, 0.005702972412109375, 0.004444122314453125, 0.0011749267578125, 7.95125961303711e-05, 0.0002582073211669922, 0.002780914306640625, 4.8160552978515625e-05, 0.0011796951293945312, 0.03314208984375, 0.0019140243530273438, 0.000335693359375, 0.004730224609375, 0.001766204833984375, 0.05670166015625, 1.7881393432617188e-06, 0.00011527538299560547, 0.00015628337860107422, 0.00027823448181152344, 0.00010251998901367188, 3.552436828613281e-05, 0.0018453598022460938, 0.001773834228515625, 0.014251708984375, 0.00012242794036865234, 0.022735595703125, 0.00041294097900390625, 0.0017671585083007812, 0.0032749176025390625, 0.00015246868133544922, 8.988380432128906e-05, 0.0028896331787109375, 1.728534698486328e-05, 2.1457672119140625e-05, 0.0027027130126953125, 0.001659393310546875, 2.086162567138672e-05, 0.0256195068359375, 0.0007162094116210938], "tokens": [291, 442, 901, 45, 284, 320, 446, 1022, 275, 319, 7124, 322, 18795, 619, 312, 333, 2251, 48, 1808, 377, 2251, 4503, 1348, 38057, 322, 18795, 619, 275, 319, 322, 1929, 11290, 32235, 810, 39920, 32, 275, 319, 477, 601, 322, 18795, 619, 312, 333, 2251, 48, 1808, 377, 2251, 48, 275]}
{"line_number": 284, "line_type": "original", "code": "    }", "entropy": 2.134765625, "is_bug_line": false, "sus_score": 0.07124704998790965, "per_token_entropy": [4.05859375, 0.2117919921875], "tokens": [264, 320]}
{"line_number": 284, "line_type": "generated", "code": "\n            return true;\n        }\n        if (other instanceof Fraction) {\n            Fraction rhs = (Fraction) other;\n            if (numerator == rhs.numerator) {", "entropy": 0.16796875, "is_bug_line": false, "sus_score": 0.07124704998790965, "per_token_entropy": [0.70068359375, 0.07635498046875, 0.01328277587890625, 0.004085540771484375, 0.05145263671875, 0.0013189315795898438, 0.10107421875, 0.00489044189453125, 0.01522064208984375, 0.01165008544921875, 0.60205078125, 0.001155853271484375, 0.482421875, 0.0024051666259765625, 0.09539794921875, 0.12420654296875, 0.09857177734375, 0.0015163421630859375, 0.003292083740234375, 0.00019848346710205078, 0.002239227294921875, 0.1251220703125, 0.0005474090576171875, 0.2822265625, 1.0263671875, 0.051910400390625, 0.4228515625, 0.00026988983154296875, 0.1541748046875, 0.0010471343994140625, 3.993511199951172e-05, 0.01019287109375, 0.00021600723266601562, 1.4052734375, 0.005748748779296875], "tokens": [324, 442, 861, 45, 291, 320, 291, 415, 308, 2455, 5113, 40823, 27, 301, 324, 40823, 9322, 280, 308, 20709, 27, 1604, 45, 324, 415, 308, 1516, 11290, 610, 9322, 32, 1516, 11290, 27, 301]}
