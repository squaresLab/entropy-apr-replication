{"line_number": 222, "line_type": "original", "code": "        this(duration, null, null);", "entropy": 1.6396484375, "is_bug_line": true, "sus_score": 0.2, "per_token_entropy": [3.5234375, 3.859375, 0.3837890625, 2.52734375, 0.335693359375, 2.68359375, 0.2900390625, 1.068359375, 0.08489990234375], "tokens": [351, 458, 26, 6932, 30, 744, 30, 744, 293]}
{"line_number": 222, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Constructor used when we trust ourselves.", "entropy": 0.276123046875, "is_bug_line": true, "sus_score": 0.2, "per_token_entropy": [1.283203125, 0.294677734375, 0.1561279296875, 0.32421875, 0.0180816650390625, 8.130073547363281e-05, 1.1318359375, 0.1021728515625, 0.03363037109375, 0.07916259765625, 0.08929443359375, 0.007274627685546875, 0.0693359375], "tokens": [284, 320, 446, 1022, 275, 319, 12835, 1654, 1412, 996, 18074, 37476, 32]}
{"line_number": 224, "line_type": "original", "code": "    }", "entropy": 3.296875, "is_bug_line": false, "sus_score": 0.2, "per_token_entropy": [2.294921875, 4.296875], "tokens": [264, 320]}
{"line_number": 224, "line_type": "generated", "code": "\n     */\n    protected BasePeriod(int[] values, PeriodType type) {\n        super();\n        iType = type;\n        iValues = values;\n    }\n\n    /**\n     * Constructor used when we trust ourselves.\n     * Do not expose publically.", "entropy": 0.1407470703125, "is_bug_line": false, "sus_score": 0.2, "per_token_entropy": [0.73486328125, 0.31103515625, 0.0300750732421875, 0.6689453125, 0.039825439453125, 0.0010881423950195312, 0.0305633544921875, 0.356689453125, 0.1278076171875, 0.043212890625, 0.447021484375, 0.036865234375, 5.233287811279297e-05, 0.0162200927734375, 0.382568359375, 0.00524139404296875, 0.03680419921875, 0.0521240234375, 0.0014524459838867188, 0.0260009765625, 0.64794921875, 0.49462890625, 0.00036334991455078125, 0.40087890625, 0.0121002197265625, 0.0323486328125, 0.0654296875, 0.0003802776336669922, 7.486343383789062e-05, 0.08123779296875, 0.0107574462890625, 0.10321044921875, 0.0010404586791992188, 0.18896484375, 0.489990234375, 0.0112457275390625, 0.00010943412780761719, 1.1044921875, 0.09674072265625, 0.04302978515625, 0.057403564453125, 0.030731201171875, 0.0016775131225585938, 0.0406494140625, 0.01456451416015625, 0.016143798828125, 0.0069427490234375, 0.000579833984375, 0.0013723373413085938, 0.00894927978515625, 4.410743713378906e-06, 0.0034694671630859375], "tokens": [275, 569, 284, 2522, 3772, 7754, 26, 410, 1178, 2078, 30, 24156, 620, 827, 27, 301, 291, 2599, 473, 291, 595, 620, 280, 827, 45, 291, 595, 3354, 280, 2078, 45, 284, 320, 446, 1022, 275, 319, 12835, 1654, 1412, 996, 18074, 37476, 32, 275, 319, 3278, 646, 21955, 562, 1247, 32]}
{"line_number": 244, "line_type": "original", "code": "    }", "entropy": 1.8369140625, "is_bug_line": false, "sus_score": 0.0936585811581694, "per_token_entropy": [3.2421875, 0.43212890625], "tokens": [264, 320]}
{"line_number": 244, "line_type": "generated", "code": "\n\n    /**\n     * Validates a period type, converting nulls to a default value and\n     * checking the type is suitable for this instance.\n     * \n     * @param type  the type to check, may be null\n     * @return the validated type", "entropy": 0.124267578125, "is_bug_line": false, "sus_score": 0.0936585811581694, "per_token_entropy": [0.55029296875, 0.9365234375, 0.00513458251953125, 0.00019729137420654297, 1.0322265625, 0.0008096694946289062, 0.36083984375, 1.47265625, 0.52099609375, 0.16748046875, 0.05548095703125, 0.0022144317626953125, 0.006412506103515625, 0.005161285400390625, 0.0171966552734375, 0.005596160888671875, 0.003536224365234375, 0.2880859375, 0.0206298828125, 5.4836273193359375e-05, 0.0244903564453125, 0.01053619384765625, 0.0079193115234375, 0.01412200927734375, 0.00420379638671875, 0.003269195556640625, 0.056396484375, 0.0180511474609375, 0.049041748046875, 0.029205322265625, 0.0004413127899169922, 0.30029296875, 2.193450927734375e-05, 0.0014629364013671875, 0.002231597900390625, 0.057403564453125, 0.0036220550537109375, 0.00024306774139404297, 0.0019989013671875, 0.00098419189453125, 0.0010461807250976562, 0.004283905029296875, 0.0163726806640625, 0.00386810302734375, 0.0008063316345214844, 0.005451202392578125, 0.00046706199645996094, 0.00015985965728759766, 0.374267578125, 0.0084991455078125, 0.0024127960205078125, 0.00769805908203125], "tokens": [446, 1022, 275, 319, 5381, 1196, 312, 7918, 827, 30, 24582, 744, 101, 372, 312, 1244, 786, 461, 275, 319, 11056, 322, 827, 438, 19655, 436, 458, 1980, 32, 275, 319, 5384, 319, 477, 753, 827, 225, 322, 827, 372, 1505, 30, 1631, 526, 744, 275, 319, 477, 601, 322, 25776, 827]}
{"line_number": 239, "line_type": "original", "code": "        super();", "entropy": 4.00390625, "is_bug_line": false, "sus_score": 0.09325048082403138, "per_token_entropy": [1.99609375, 7.6796875, 2.33203125], "tokens": [351, 2599, 473]}
{"line_number": 239, "line_type": "generated", "code": "\n     * @return the type to use, not null\n     * @throws IllegalArgumentException if the type is invalid\n     */\n    protected PeriodType checkPeriodType(PeriodType type) {\n        if (type == null) {\n            type = getDefaultType();\n        }", "entropy": 0.181396484375, "is_bug_line": false, "sus_score": 0.09325048082403138, "per_token_entropy": [0.4482421875, 0.29345703125, 0.0017328262329101562, 0.13720703125, 0.17333984375, 1.34375, 0.85302734375, 0.0577392578125, 0.1719970703125, 0.1455078125, 0.00047397613525390625, 0.1392822265625, 0.313232421875, 0.0009350776672363281, 0.01027679443359375, 0.007061004638671875, 0.003326416015625, 0.148193359375, 0.350341796875, 0.01983642578125, 0.39501953125, 0.1732177734375, 0.01708984375, 0.00910186767578125, 1.28515625, 0.167236328125, 4.076957702636719e-05, 0.044464111328125, 0.00021028518676757812, 6.079673767089844e-06, 0.0004940032958984375, 0.0017251968383789062, 2.276897430419922e-05, 0.00044918060302734375, 0.0008268356323242188, 0.007099151611328125, 0.2392578125, 0.288330078125, 0.0026836395263671875, 0.0182952880859375, 0.013641357421875, 0.00232696533203125, 0.0305938720703125, 0.005039215087890625, 0.219970703125, 0.181640625, 0.0002199411392211914, 1.533203125, 0.06402587890625, 0.00823974609375, 0.0987548828125, 0.004856109619140625], "tokens": [275, 319, 477, 601, 322, 827, 372, 793, 30, 646, 744, 275, 319, 477, 5117, 12137, 415, 322, 827, 438, 5535, 275, 569, 284, 2522, 24156, 620, 1505, 7754, 620, 26, 7754, 620, 827, 27, 301, 291, 415, 308, 681, 610, 744, 27, 301, 324, 827, 280, 23937, 620, 473, 291, 320]}
{"line_number": 240, "line_type": "original", "code": "        type = checkPeriodType(type);", "entropy": 1.125, "is_bug_line": false, "sus_score": 0.09325048082403138, "per_token_entropy": [3.046875, 3.65625, 0.00738525390625, 3.3203125, 0.021514892578125, 0.00099945068359375, 0.00713348388671875, 0.007480621337890625, 0.05828857421875], "tokens": [351, 827, 280, 1505, 7754, 620, 26, 681, 293]}
{"line_number": 240, "line_type": "generated", "code": "\n     */\n    private PeriodType checkPeriodType(PeriodType type) {\n        if (type == null) {\n            type = PeriodType.standard();\n        }\n        if (type.isSupported(this) == false) {\n            String msg = \"", "entropy": 0.24609375, "is_bug_line": false, "sus_score": 0.09325048082403138, "per_token_entropy": [0.900390625, 0.6259765625, 0.006877899169921875, 0.5546875, 0.1552734375, 4.7206878662109375e-05, 0.004009246826171875, 0.00010204315185546875, 1.1563301086425781e-05, 0.0003495216369628906, 0.0011138916015625, 3.3855438232421875e-05, 0.0004620552062988281, 0.0007047653198242188, 0.00708770751953125, 0.19189453125, 0.341552734375, 0.0033512115478515625, 0.0211944580078125, 0.0138702392578125, 0.002498626708984375, 0.027679443359375, 0.0012483596801757812, 0.1468505859375, 0.1751708984375, 0.0001615285873413086, 1.5205078125, 7.140636444091797e-05, 0.002132415771484375, 0.0022907257080078125, 0.0026988983154296875, 0.0843505859375, 0.007648468017578125, 0.31787109375, 0.84033203125, 0.5078125, 0.5546875, 0.52880859375, 1.0400390625, 0.37060546875, 0.0265960693359375, 0.04205322265625, 0.444580078125, 0.005817413330078125, 0.0007038116455078125, 0.00897216796875, 0.0009899139404296875, 0.08154296875, 1.7255859375, 1.109375, 0.017974853515625, 0.3701171875], "tokens": [275, 569, 284, 945, 24156, 620, 1505, 7754, 620, 26, 7754, 620, 827, 27, 301, 291, 415, 308, 681, 610, 744, 27, 301, 324, 827, 280, 24156, 620, 32, 9138, 473, 291, 320, 291, 415, 308, 681, 32, 297, 10323, 26, 578, 27, 610, 901, 27, 301, 324, 892, 3124, 280, 313]}
{"line_number": 241, "line_type": "original", "code": "        chrono = DateTimeUtils.getChronology(chrono);", "entropy": 0.86279296875, "is_bug_line": false, "sus_score": 0.09325048082403138, "per_token_entropy": [3.431640625, 7.1953125, 0.2161865234375, 0.137451171875, 0.0016527175903320312, 0.00174713134765625, 0.0018482208251953125, 0.08697509765625, 4.374980926513672e-05, 5.2809715270996094e-05, 0.0176239013671875, 0.10400390625, 0.0242156982421875], "tokens": [351, 45868, 280, 6666, 2755, 32, 371, 828, 2558, 10537, 26, 18317, 293]}
{"line_number": 241, "line_type": "generated", "code": "\n     */\n    private PeriodType checkPeriodType(PeriodType type) {\n        if (type == null) {\n            type = getDefaultType();\n        }\n        if (type.getPeriodType()!= getPeriodType()) {\n            throw new IllegalArgumentException(\"Period", "entropy": 0.188720703125, "is_bug_line": false, "sus_score": 0.09325048082403138, "per_token_entropy": [0.9404296875, 0.034942626953125, 0.006282806396484375, 0.5849609375, 0.294677734375, 4.565715789794922e-05, 0.004077911376953125, 0.00010764598846435547, 1.3232231140136719e-05, 0.0003829002380371094, 0.0011587142944335938, 4.2438507080078125e-05, 0.0003497600555419922, 0.0006561279296875, 0.006153106689453125, 0.1356201171875, 0.299072265625, 0.00399017333984375, 0.01552581787109375, 0.01450347900390625, 0.0024585723876953125, 0.0263519287109375, 0.0006074905395507812, 0.140625, 0.1507568359375, 0.00019419193267822266, 1.5205078125, 0.0567626953125, 0.009002685546875, 0.11993408203125, 0.00484466552734375, 0.1646728515625, 0.67724609375, 0.368408203125, 0.15380859375, 0.78759765625, 0.54248046875, 0.4482421875, 0.0034122467041015625, 0.0703125, 0.2122802734375, 0.7744140625, 0.02471923828125, 0.00019884109497070312, 0.025848388671875, 0.001659393310546875, 0.1314697265625, 0.5595703125, 0.0096588134765625, 0.0096893310546875, 0.158203125, 0.312744140625], "tokens": [275, 569, 284, 945, 24156, 620, 1505, 7754, 620, 26, 7754, 620, 827, 27, 301, 291, 415, 308, 681, 610, 744, 27, 301, 324, 827, 280, 23937, 620, 473, 291, 320, 291, 415, 308, 681, 32, 371, 7754, 620, 346, 863, 622, 7754, 620, 1157, 301, 324, 1422, 537, 12137, 440, 7754]}
{"line_number": 242, "line_type": "original", "code": "        iType = type;", "entropy": 1.484375, "is_bug_line": false, "sus_score": 0.09325048082403138, "per_token_entropy": [4.140625, 3.625, 0.174072265625, 0.040985107421875, 0.78271484375, 0.1409912109375], "tokens": [351, 595, 620, 280, 827, 45]}
{"line_number": 242, "line_type": "generated", "code": "\n    private PeriodType checkPeriodType(PeriodType type) {\n        if (type == null) {\n            type = getPeriodType();\n        }\n        if (type == null) {\n            type = PeriodType.standard();\n        }\n        type = type", "entropy": 0.174560546875, "is_bug_line": false, "sus_score": 0.09325048082403138, "per_token_entropy": [0.316650390625, 0.70703125, 0.357421875, 6.139278411865234e-05, 0.005062103271484375, 0.00014472007751464844, 2.205371856689453e-05, 0.0009255409240722656, 0.0018215179443359375, 2.7894973754882812e-05, 0.0013189315795898438, 0.0013332366943359375, 0.01171112060546875, 0.145751953125, 0.437744140625, 0.004730224609375, 0.026611328125, 0.016845703125, 0.0040740966796875, 0.02886962890625, 0.0012836456298828125, 0.123046875, 0.1795654296875, 0.00028514862060546875, 1.3544921875, 0.0516357421875, 1.4185905456542969e-05, 0.11798095703125, 0.1016845703125, 0.0016736984252929688, 0.13720703125, 0.62841796875, 0.2188720703125, 0.1170654296875, 0.452880859375, 0.0293731689453125, 0.21337890625, 0.0003523826599121094, 0.05609130859375, 0.3984375, 0.00020956993103027344, 0.221923828125, 6.103515625e-05, 0.00199127197265625, 0.0008058547973632812, 0.0019435882568359375, 0.0487060546875, 0.00365447998046875, 0.1290283203125, 1.798828125, 0.428955078125, 0.1871337890625], "tokens": [284, 945, 24156, 620, 1505, 7754, 620, 26, 7754, 620, 827, 27, 301, 291, 415, 308, 681, 610, 744, 27, 301, 324, 827, 280, 622, 7754, 620, 473, 291, 320, 291, 415, 308, 681, 610, 744, 27, 301, 324, 827, 280, 24156, 620, 32, 9138, 473, 291, 320, 291, 827, 280, 827]}
{"line_number": 243, "line_type": "original", "code": "        iValues = chrono.get(this, duration);", "entropy": 1.88671875, "is_bug_line": false, "sus_score": 0.09325048082403138, "per_token_entropy": [2.900390625, 4.796875, 2.931640625, 0.03839111328125, 4.328125, 0.0042266845703125, 0.07196044921875, 0.0361328125, 0.035308837890625, 0.034027099609375, 5.1953125, 2.26953125], "tokens": [351, 595, 3354, 280, 45868, 32, 371, 26, 578, 30, 7459, 293]}
{"line_number": 243, "line_type": "generated", "code": "\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Gets the number of fields in this period.\n     * \n     * @return the number of fields in this period\n     */\n    public int size() {\n        return iValues.length;\n    }\n\n    /**\n     *", "entropy": 0.1671142578125, "is_bug_line": false, "sus_score": 0.09325048082403138, "per_token_entropy": [1.166015625, 0.01067352294921875, 0.1866455078125, 0.64306640625, 0.0396728515625, 0.0130157470703125, 0.0880126953125, 0.0078887939453125, 4.875659942626953e-05, 0.91552734375, 0.0380859375, 0.56689453125, 0.00025725364685058594, 0.0220947265625, 0.14111328125, 0.03839111328125, 0.00406646728515625, 0.0987548828125, 0.0098876953125, 0.00566864013671875, 0.94091796875, 2.5987625122070312e-05, 0.0009298324584960938, 0.0010089874267578125, 0.0174102783203125, 0.61767578125, 0.0005998611450195312, 0.01172637939453125, 0.194580078125, 0.071044921875, 0.0019063949584960938, 1.0859375, 0.019927978515625, 0.003925323486328125, 0.12646484375, 0.072509765625, 0.0006666183471679688, 9.441375732421875e-05, 0.0002663135528564453, 0.1614990234375, 0.01012420654296875, 0.08026123046875, 1.080078125, 0.00524139404296875, 0.0004458427429199219, 0.00244140625, 0.0145721435546875, 0.00021958351135253906, 0.05059814453125, 0.11688232421875, 0.00025916099548339844, 2.6702880859375e-05], "tokens": [284, 320, 446, 434, 42510, 284, 1022, 275, 319, 7124, 322, 1451, 432, 3829, 328, 458, 7918, 32, 275, 319, 5384, 319, 477, 601, 322, 1451, 432, 3829, 328, 458, 7918, 275, 569, 284, 562, 629, 1334, 346, 301, 291, 442, 595, 3354, 32, 1322, 45, 284, 320, 446, 1022, 275, 319]}
{"line_number": 324, "line_type": "original", "code": "        return iType.getFieldType(index);", "entropy": 2.064453125, "is_bug_line": false, "sus_score": 0.07726674092862558, "per_token_entropy": [4.94921875, 1.5439453125, 4.91796875, 0.89404296875, 0.0054931640625, 1.1904296875, 0.0177154541015625, 0.1256103515625, 0.94873046875, 6.04296875], "tokens": [351, 442, 595, 620, 32, 18269, 620, 26, 1055, 293]}
{"line_number": 324, "line_type": "generated", "code": "\n     * @param endInstant  the instant to subtract the period from, thus obtaining the duration\n     * @return the total length of the period as a duration relative to the end instant\n     * @throws ArithmeticException if the millis exceeds the capacity of the duration", "entropy": 0.0364990234375, "is_bug_line": false, "sus_score": 0.07726674092862558, "per_token_entropy": [0.3310546875, 0.2939453125, 0.82666015625, 0.019378662109375, 0.003627777099609375, 0.0005741119384765625, 0.00836181640625, 0.0011806488037109375, 0.007678985595703125, 0.0022182464599609375, 0.0120086669921875, 0.01788330078125, 0.0045013427734375, 0.01068115234375, 0.006656646728515625, 0.004459381103515625, 0.002033233642578125, 0.0035610198974609375, 0.025054931640625, 0.10235595703125, 0.0010700225830078125, 0.0002149343490600586, 0.0029926300048828125, 0.0005507469177246094, 0.007778167724609375, 0.00563812255859375, 0.0003268718719482422, 9.655952453613281e-05, 0.0010852813720703125, 0.01555633544921875, 0.001323699951171875, 0.003009796142578125, 0.050384521484375, 0.0012311935424804688, 0.0005626678466796875, 0.045928955078125, 0.0007190704345703125, 0.036651611328125, 0.01198577880859375, 0.0002856254577636719, 0.0009531974792480469, 0.001819610595703125, 2.491474151611328e-05, 0.0008640289306640625, 0.0004229545593261719, 0.01192474365234375, 0.004016876220703125, 0.00031065940856933594, 0.0012426376342773438, 0.00016927719116210938, 0.0011653900146484375, 0.003204345703125], "tokens": [275, 319, 477, 753, 943, 22183, 225, 322, 23564, 372, 27799, 322, 7918, 645, 30, 14966, 13934, 322, 7459, 275, 319, 477, 601, 322, 3380, 3104, 432, 322, 7918, 619, 312, 7459, 6491, 372, 322, 943, 23564, 275, 319, 477, 5117, 47721, 984, 415, 322, 42302, 35308, 322, 13802, 432, 322, 7459]}
{"line_number": 293, "line_type": "original", "code": "        return DateTimeUtils.getPeriodType(type);", "entropy": 3.876953125, "is_bug_line": false, "sus_score": 0.06544199910036884, "per_token_entropy": [7.0234375, 3.27734375, 11.390625, 0.005741119384765625, 0.00023984909057617188, 0.01715087890625, 6.81640625, 5.84375, 1.607421875, 3.6953125, 2.98828125], "tokens": [351, 442, 6666, 2755, 32, 371, 7754, 620, 26, 681, 293]}
{"line_number": 293, "line_type": "generated", "code": "\n     * determine the total duration.\n     *\n     * @param startInstant  the instant to start from\n     * @param chrono  the chronology to use, null means ISO default\n     * @return the millisecond duration of the period relative to the", "entropy": 0.2454833984375, "is_bug_line": false, "sus_score": 0.06544199910036884, "per_token_entropy": [0.75634765625, 0.01079559326171875, 1.009765625, 0.01436614990234375, 1.6806640625, 0.3291015625, 0.46044921875, 0.42529296875, 0.00020623207092285156, 0.85888671875, 3.600120544433594e-05, 0.005367279052734375, 0.00829315185546875, 0.359375, 0.041290283203125, 0.18408203125, 0.02337646484375, 0.304931640625, 0.142578125, 0.472412109375, 0.0017518997192382812, 0.178955078125, 0.00024020671844482422, 0.0002257823944091797, 0.8291015625, 0.0092010498046875, 0.0124969482421875, 0.0030040740966796875, 0.01220703125, 2.9921531677246094e-05, 0.00022149085998535156, 0.026824951171875, 0.005123138427734375, 0.142822265625, 0.444580078125, 0.040130615234375, 0.005634307861328125, 0.1324462890625, 0.01477813720703125, 0.0003027915954589844, 0.0005016326904296875, 0.0168609619140625, 0.006305694580078125, 1.6025390625, 0.00027108192443847656, 0.0347900390625, 0.7099609375, 0.1553955078125, 0.101318359375, 1.1640625, 0.0013208389282226562, 0.02716064453125], "tokens": [275, 319, 9921, 322, 3380, 7459, 32, 275, 319, 275, 319, 477, 753, 1477, 22183, 225, 322, 23564, 372, 1477, 645, 275, 319, 477, 753, 45868, 225, 322, 663, 2558, 10537, 372, 793, 30, 744, 6058, 19687, 1244, 275, 319, 477, 601, 322, 37003, 3090, 7459, 432, 322, 7918, 6491, 372, 322]}
{"line_number": 303, "line_type": "original", "code": "        return iType;", "entropy": 3.349609375, "is_bug_line": false, "sus_score": 0.06468462273531508, "per_token_entropy": [2.685546875, 1.8115234375, 3.333984375, 0.445068359375, 8.46875], "tokens": [351, 442, 595, 620, 45]}
{"line_number": 303, "line_type": "generated", "code": "    */\n    public long toDurationMillis(long startInstant) {\n        return getPeriodType().toDurationMillis(this, startInstant);\n    }\n\n    /**\n     * Gets the total length of this period in the specified unit.\n     * <p>", "entropy": 0.247802734375, "is_bug_line": false, "sus_score": 0.06468462273531508, "per_token_entropy": [1.3642578125, 0.499755859375, 0.0243072509765625, 0.067626953125, 0.2239990234375, 0.469970703125, 0.1322021484375, 0.112060546875, 0.0014066696166992188, 0.60888671875, 0.0013742446899414062, 8.630752563476562e-05, 0.0006532669067382812, 0.002960205078125, 0.2235107421875, 1.6689453125, 1.6962890625, 0.76123046875, 0.0162811279296875, 0.00147247314453125, 0.9228515625, 0.0115966796875, 0.006809234619140625, 0.00441741943359375, 0.381103515625, 0.004730224609375, 0.05279541015625, 2.9325485229492188e-05, 0.01107025146484375, 0.04168701171875, 0.00012159347534179688, 0.1280517578125, 0.39208984375, 0.0024738311767578125, 5.53131103515625e-05, 0.59326171875, 0.01476287841796875, 0.375732421875, 0.748046875, 0.007625579833984375, 0.3056640625, 0.0019207000732421875, 0.0589599609375, 0.14892578125, 0.32275390625, 0.0109405517578125, 0.061126708984375, 0.0088043212890625, 0.00017130374908447266, 0.385009765625, 0.00023233890533447266, 0.0005655288696289062], "tokens": [264, 569, 284, 562, 1946, 372, 6196, 10906, 26, 3222, 1477, 22183, 27, 301, 291, 442, 622, 7754, 620, 922, 452, 6196, 10906, 26, 578, 30, 1477, 22183, 293, 284, 320, 446, 1022, 275, 319, 7124, 322, 3380, 3104, 432, 458, 7918, 328, 322, 3191, 4201, 32, 275, 319, 333, 98, 48]}
{"line_number": 313, "line_type": "original", "code": "        return iType.size();", "entropy": 2.927734375, "is_bug_line": false, "sus_score": 0.06337242505244779, "per_token_entropy": [5.28125, 2.962890625, 2.71875, 0.841796875, 0.05682373046875, 8.28125, 0.36376953125], "tokens": [351, 442, 595, 620, 32, 891, 473]}
{"line_number": 313, "line_type": "generated", "code": "\n     * Gets the total number of units of this period that occur between the\n     * specified two instants.\n     * <p>\n     * This method calculates the period between two instants and is typically\n     * used to convert a period to data that is", "entropy": 0.447998046875, "is_bug_line": false, "sus_score": 0.06337242505244779, "per_token_entropy": [1.265625, 0.380615234375, 0.72607421875, 0.0190887451171875, 0.2156982421875, 0.67431640625, 0.0009522438049316406, 0.69775390625, 0.9091796875, 0.3447265625, 0.048095703125, 0.453857421875, 1.2763671875, 0.11920166015625, 0.367919921875, 0.84521484375, 1.239776611328125e-05, 0.6162109375, 1.28515625, 0.00818634033203125, 2.6226043701171875e-06, 0.097412109375, 0.345703125, 0.001537322998046875, 0.1219482421875, 0.0005970001220703125, 0.00039768218994140625, 0.0020503997802734375, 4.00543212890625e-05, 0.810546875, 0.01873779296875, 1.6484375, 0.0108795166015625, 0.8515625, 0.029144287109375, 0.1961669921875, 0.017242431640625, 7.748603820800781e-06, 1.7158203125, 1.220703125, 0.357666015625, 0.043426513671875, 1.3113021850585938e-05, 0.2374267578125, 0.282958984375, 1.283203125, 0.45947265625, 0.2037353515625, 0.038330078125, 0.84033203125, 0.72509765625, 1.4775390625], "tokens": [275, 319, 7124, 322, 3380, 1451, 432, 9991, 432, 458, 7918, 688, 13791, 3733, 322, 275, 319, 3191, 3134, 1440, 2376, 32, 275, 319, 333, 98, 48, 275, 319, 1348, 1411, 38057, 322, 7918, 3733, 3134, 1440, 2376, 461, 438, 18214, 275, 319, 1654, 372, 4483, 312, 7918, 372, 706, 688, 438]}
{"line_number": 335, "line_type": "original", "code": "        return iValues[index];", "entropy": 2.81640625, "is_bug_line": false, "sus_score": 0.06330889378329184, "per_token_entropy": [7.01953125, 1.814453125, 3.818359375, 4.8203125, 0.99658203125, 1.12109375, 0.134765625], "tokens": [351, 442, 595, 3354, 77, 1055, 970]}
{"line_number": 335, "line_type": "generated", "code": "\n    //-----------------------------------------------------------------------\n    /**\n     * Adds this period to the specified instant to create a new instant.\n     * <p>\n     * This method adds the period to the specified instant.\n     *\n     * @param instant  the instant to add to, not", "entropy": 0.265380859375, "is_bug_line": false, "sus_score": 0.06330889378329184, "per_token_entropy": [1.7490234375, 0.8515625, 0.01219940185546875, 0.0189971923828125, 0.0258026123046875, 0.0041046142578125, 0.00013005733489990234, 1.373046875, 0.11053466796875, 0.01094818115234375, 0.06170654296875, 0.092529296875, 0.01568603515625, 0.184814453125, 1.787109375, 0.4287109375, 0.39990234375, 0.00208282470703125, 0.01446533203125, 0.0190582275390625, 0.002216339111328125, 0.00013697147369384766, 0.1624755859375, 0.000274658203125, 0.00037741661071777344, 0.0001291036605834961, 3.790855407714844e-05, 0.484130859375, 0.09552001953125, 0.51611328125, 0.86962890625, 0.034820556640625, 0.1007080078125, 0.00043702125549316406, 0.0007486343383789062, 0.0028057098388671875, 1.29296875, 0.341552734375, 4.220008850097656e-05, 2.123046875, 1.7881393432617188e-05, 0.00249481201171875, 0.000568389892578125, 0.083740234375, 0.00846099853515625, 0.01091766357421875, 0.00595855712890625, 0.00585174560546875, 0.016632080078125, 0.023590087890625, 0.44189453125, 0.0028858184814453125], "tokens": [284, 434, 42510, 284, 1022, 275, 319, 15450, 458, 7918, 372, 322, 3191, 23564, 372, 1487, 312, 537, 23564, 32, 275, 319, 333, 98, 48, 275, 319, 1348, 1411, 10476, 322, 7918, 372, 322, 3191, 23564, 32, 275, 319, 275, 319, 477, 753, 23564, 225, 322, 23564, 372, 1015, 372, 30, 646]}
