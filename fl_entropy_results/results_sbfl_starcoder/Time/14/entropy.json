{"line_number": 206, "line_type": "original", "code": "        if (valueToAdd == 0) {", "entropy": 1.7734375, "is_bug_line": false, "sus_score": 0.329914439536929, "per_token_entropy": [4.84765625, 2.095703125, 0.042572021484375, 7.4765625, 1.04296875, 1.2744140625, 0.24267578125, 0.5068359375, 0.1697998046875, 0.034271240234375], "tokens": [351, 415, 308, 853, 27137, 610, 225, 34, 27, 301]}
{"line_number": 206, "line_type": "generated", "code": "\n                return difference;\n            }\n        }\n\n        // Handle case where subtrahend is after the minuend\n        // and the minuend is not a leap year.\n        if (subtrahendMonth > minuendMonth &&!", "entropy": 0.544921875, "is_bug_line": false, "sus_score": 0.329914439536929, "per_token_entropy": [0.6689453125, 0.876953125, 0.1761474609375, 0.471923828125, 0.38330078125, 0.09619140625, 0.9052734375, 0.27197265625, 0.748046875, 0.63818359375, 2.86328125, 0.72900390625, 0.1873779296875, 0.7119140625, 0.042755126953125, 0.00017344951629638672, 0.0001932382583618164, 0.79541015625, 2.1640625, 1.0029296875, 0.1866455078125, 0.00018095970153808594, 0.00013828277587890625, 1.90234375, 1.0185546875, 0.7724609375, 0.381591796875, 0.9736328125, 0.0002875328063964844, 0.0003752708435058594, 0.8203125, 0.54638671875, 2.05859375, 1.169921875, 1.4066696166992188e-05, 0.0263214111328125, 0.70068359375, 0.26806640625, 0.52880859375, 0.21240234375, 0.85009765625, 6.67572021484375e-06, 7.152557373046875e-07, 2.6226043701171875e-06, 0.9501953125, 0.061492919921875, 0.012176513671875, 2.0265579223632812e-06, 1.3113021850585938e-06, 9.453296661376953e-05, 0.70654296875, 0.45654296875], "tokens": [400, 442, 10563, 45, 324, 320, 291, 320, 584, 434, 7968, 1135, 2154, 1361, 359, 2371, 416, 438, 2685, 322, 1847, 103, 416, 291, 434, 461, 322, 1847, 103, 416, 438, 646, 312, 999, 368, 4947, 32, 291, 415, 308, 1113, 359, 2371, 416, 7357, 848, 1847, 103, 416, 7357, 962, 653]}
{"line_number": 210, "line_type": "original", "code": "        if (DateTimeUtils.isContiguous(partial)) {", "entropy": 1.8291015625, "is_bug_line": true, "sus_score": 0.329914439536929, "per_token_entropy": [5.22265625, 2.591796875, 0.12030029296875, 5.26171875, 0.11407470703125, 0.0049285888671875, 0.0968017578125, 5.4375, 0.0221099853515625, 0.0792236328125, 4.17578125, 0.60107421875, 0.054779052734375], "tokens": [351, 415, 308, 4852, 2755, 32, 297, 634, 16879, 26, 9865, 490, 301]}
{"line_number": 210, "line_type": "generated", "code": "\n                difference--;\n            }\n        } else if (minuendDom < iChronology.getDaysInYearMonth(minuendYear, minuendMonth)) {\n            // Not last day of the minuend month, but day of", "entropy": 0.2213134765625, "is_bug_line": true, "sus_score": 0.329914439536929, "per_token_entropy": [0.83740234375, 1.1962890625, 1.01953125, 0.175537109375, 0.0029125213623046875, 0.317138671875, 0.0013074874877929688, 1.798828125, 0.349365234375, 0.0151824951171875, 0.06353759765625, 1.823902130126953e-05, 2.1457672119140625e-06, 0.006771087646484375, 0.55712890625, 0.198486328125, 0.0006184577941894531, 1.6689300537109375e-06, 1.7523765563964844e-05, 2.7179718017578125e-05, 0.0004296302795410156, 0.036895751953125, 1.430511474609375e-05, 0.00021827220916748047, 1.0013580322265625e-05, 0.01300811767578125, 0.0022220611572265625, 1.6689300537109375e-06, 2.1457672119140625e-06, 0.00013709068298339844, 6.186962127685547e-05, 0.002422332763671875, 9.655952453613281e-06, 4.410743713378906e-06, 1.6689300537109375e-05, 0.01001739501953125, 0.0011148452758789062, 0.010406494140625, 0.0908203125, 1.2646484375, 0.128173828125, 0.0116424560546875, 0.006755828857421875, 0.25390625, 0.1666259765625, 0.0004355907440185547, 0.0004379749298095703, 0.004680633544921875, 1.072265625, 0.8359375, 0.51220703125, 0.54052734375], "tokens": [400, 10563, 10612, 324, 320, 291, 320, 813, 415, 308, 887, 103, 416, 7803, 333, 595, 828, 2558, 10537, 32, 371, 11946, 383, 6617, 7357, 26, 887, 103, 416, 6617, 30, 1847, 103, 416, 7357, 490, 301, 324, 434, 3182, 2401, 5808, 432, 322, 1847, 103, 416, 6811, 30, 1273, 5808, 432]}
{"line_number": 211, "line_type": "original", "code": "            long instant = 0L;", "entropy": 2.58984375, "is_bug_line": false, "sus_score": 0.329914439536929, "per_token_entropy": [6.33203125, 3.236328125, 4.99609375, 0.10247802734375, 4.78515625, 0.304443359375, 0.91064453125, 0.055328369140625], "tokens": [1468, 1946, 23564, 280, 225, 34, 62, 45]}
{"line_number": 211, "line_type": "generated", "code": "\n                return difference - 1;\n            }\n        }\n\n        // If minuend and subtrahend have same year and month,\n        // then remainder is zero.\n        if (difference == 0) {\n            return 0;\n        }\n\n       ", "entropy": 0.55810546875, "is_bug_line": false, "sus_score": 0.329914439536929, "per_token_entropy": [0.224853515625, 2.69140625, 0.38037109375, 0.446533203125, 0.06317138671875, 0.004749298095703125, 0.0577392578125, 0.02911376953125, 0.0001366138458251953, 0.2587890625, 0.0021228790283203125, 0.409423828125, 0.73291015625, 3.037109375, 1.8828125, 0.0009760856628417969, 0.0043182373046875, 1.4609375, 0.01076507568359375, 0.003131866455078125, 0.0001583099365234375, 0.0004019737243652344, 1.865234375, 0.5830078125, 1.1787109375, 0.26806640625, 0.063720703125, 0.1309814453125, 1.625, 0.0020275115966796875, 2.1328125, 2.435546875, 0.80029296875, 2.2734375, 0.75048828125, 0.361083984375, 0.234375, 0.1453857421875, 1.6005859375, 0.53466796875, 0.0017194747924804688, 1.7404556274414062e-05, 0.055877685546875, 0.0011816024780273438, 0.054931640625, 0.034637451171875, 0.0521240234375, 0.00010192394256591797, 0.0157318115234375, 0.009368896484375, 0.0003478527069091797, 0.1102294921875], "tokens": [400, 442, 10563, 429, 225, 35, 45, 324, 320, 291, 320, 584, 434, 1670, 1847, 103, 416, 461, 1361, 359, 2371, 416, 1159, 2432, 4947, 461, 6811, 30, 291, 434, 1615, 27103, 438, 5934, 32, 291, 415, 308, 21034, 610, 225, 34, 27, 301, 324, 442, 225, 34, 45, 291, 320, 584]}
{"line_number": 212, "line_type": "original", "code": "            for (int i = 0, isize = partial.size(); i < isize; i++) {", "entropy": 1.060546875, "is_bug_line": false, "sus_score": 0.329914439536929, "per_token_entropy": [5.89453125, 7.73828125, 0.12451171875, 0.216552734375, 0.07110595703125, 0.5498046875, 0.1414794921875, 0.222900390625, 1.5908203125, 2.916015625, 0.00537872314453125, 0.11065673828125, 3.693359375, 2.029296875, 0.0279083251953125, 0.01983642578125, 0.002593994140625, 0.007595062255859375, 0.0013628005981445312, 3.314018249511719e-05, 0.004100799560546875, 0.034698486328125, 0.003414154052734375, 0.046722412109375], "tokens": [1468, 436, 308, 410, 595, 280, 225, 34, 30, 438, 518, 280, 7360, 32, 891, 473, 595, 333, 438, 518, 45, 595, 1987, 301]}
{"line_number": 212, "line_type": "generated", "code": "\n                difference -= 1;\n            }\n        }\n\n        // Now adjust for remainder.\n        return difference + getDifference(minuendInstant, subtrahendInstant);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Get the amount of months between two inst", "entropy": 0.384033203125, "is_bug_line": false, "sus_score": 0.329914439536929, "per_token_entropy": [0.89306640625, 0.7197265625, 1.4931640625, 0.5517578125, 0.0016508102416992188, 0.123046875, 0.209228515625, 0.00234222412109375, 0.25830078125, 0.0009374618530273438, 0.25634765625, 1.1005859375, 1.919921875, 1.46875, 0.27685546875, 0.0750732421875, 1.4638671875, 0.431640625, 1.640625, 0.31103515625, 0.18408203125, 0.392822265625, 0.337646484375, 0.12152099609375, 0.5888671875, 2.872943878173828e-05, 1.3113021850585938e-06, 0.00012230873107910156, 0.005619049072265625, 0.0025730133056640625, 3.2186508178710938e-06, -0.0, 4.76837158203125e-07, 8.702278137207031e-06, 0.0183258056640625, 0.03094482421875, 0.00051116943359375, 0.21728515625, 0.1552734375, 0.02667236328125, 0.01059722900390625, 0.8671875, 0.01202392578125, 2.7418136596679688e-05, 0.95654296875, 0.01143646240234375, 1.330078125, 0.10675048828125, 0.40625, 0.027557373046875, 0.4248046875, 0.53076171875], "tokens": [400, 10563, 5912, 225, 35, 45, 324, 320, 291, 320, 584, 434, 9080, 10891, 436, 27103, 32, 291, 442, 10563, 474, 622, 24443, 26, 887, 103, 416, 22183, 30, 1361, 359, 2371, 416, 22183, 293, 284, 320, 446, 434, 42510, 284, 1022, 275, 319, 1390, 322, 5168, 432, 17723, 3733, 3134, 1440]}
{"line_number": 213, "line_type": "original", "code": "                instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);", "entropy": 1.412109375, "is_bug_line": false, "sus_score": 0.329914439536929, "per_token_entropy": [7.703125, 7.84375, 0.11181640625, 5.78125, 0.07562255859375, 2.291015625, 0.057037353515625, 0.072021484375, 0.86083984375, 0.243408203125, 3.326171875, 0.054595947265625, 0.268798828125, 0.2099609375, 0.0007777214050292969, 0.00022673606872558594, 0.0279083251953125, 0.7431640625, 0.09893798828125, 0.78466796875, 0.006046295166015625, 4.05078125, 0.385009765625, 0.07373046875, 0.2476806640625], "tokens": [2071, 23564, 280, 7360, 32, 18269, 620, 26, 91, 547, 18269, 26, 91, 828, 2558, 10537, 547, 470, 26, 30241, 30, 2078, 77, 91, 1989]}
{"line_number": 213, "line_type": "generated", "code": "\n        }\n\n        // Now add the remainder, taking care to avoid overflow\n        long minuendRemainder = minuendInstant - iChronology.getYearMonthMillis(minuendYear, minuendMonth);\n        long subtrah", "entropy": 0.456787109375, "is_bug_line": false, "sus_score": 0.329914439536929, "per_token_entropy": [0.30810546875, 0.08642578125, 0.4638671875, 1.439453125, 2.05078125, 3.447265625, 1.76953125, 0.1483154296875, 1.177734375, 1.9091796875, 0.380126953125, 0.6142578125, 1.8134765625, 1.2841796875, 1.4912109375, 1.73828125, 0.6533203125, 0.01457977294921875, 0.094970703125, 1.08984375, 0.0010805130004882812, 0.034088134765625, 0.43994140625, 0.0012998580932617188, 5.2928924560546875e-05, 0.008209228515625, 0.0360107421875, 0.374755859375, 0.00420379638671875, 7.87973403930664e-05, 4.0411949157714844e-05, 6.377696990966797e-05, 0.0164947509765625, 0.0220947265625, 0.000820159912109375, 0.626953125, 0.04522705078125, 0.0171966552734375, 1.7881393432617188e-06, 1.621246337890625e-05, 0.006877899169921875, 0.0002491474151611328, 0.005985260009765625, 2.5033950805664062e-06, 5.0067901611328125e-06, 8.106231689453125e-06, 0.0264739990234375, 0.0228424072265625, 0.060455322265625, 0.0196990966796875, 0.001708984375, 5.507469177246094e-05], "tokens": [291, 320, 584, 434, 9080, 1015, 322, 27103, 30, 15137, 9347, 372, 7358, 9973, 291, 1946, 1847, 103, 416, 40527, 493, 280, 1847, 103, 416, 22183, 429, 595, 828, 2558, 10537, 32, 371, 6617, 7357, 10906, 26, 887, 103, 416, 6617, 30, 1847, 103, 416, 7357, 293, 291, 1946, 1361, 359, 2371]}
{"line_number": 295, "line_type": "original", "code": "        int thisYear = iChronology.getYear(instant);", "entropy": 0.86572265625, "is_bug_line": false, "sus_score": 0.142453780707534, "per_token_entropy": [4.29296875, 1.7578125, 2.580078125, 2.560546875, 0.233642578125, 1.3388671875, 0.108642578125, 4.76837158203125e-06, 1.9073486328125e-06, 0.0008978843688964844, 0.037017822265625, 0.01058197021484375, 0.0227203369140625, 0.03118896484375, 0.01194000244140625], "tokens": [351, 629, 458, 6617, 280, 595, 828, 2558, 10537, 32, 371, 6617, 26, 30241, 293]}
{"line_number": 295, "line_type": "generated", "code": "\n        //\n        int month = iChronology.getMonthOfYear(instant, year);\n        int maxDom = iChronology.getDaysInYearMonth(year, month);\n        int dom = iChronology.getDayOfMonth(instant", "entropy": 0.17333984375, "is_bug_line": false, "sus_score": 0.142453780707534, "per_token_entropy": [0.121337890625, 1.6552734375, 0.796875, 0.724609375, 1.1396484375, 0.06048583984375, 0.16943359375, 0.0355224609375, 9.5367431640625e-07, 2.384185791015625e-07, 0.00014674663543701172, 0.032379150390625, 0.003704071044921875, 0.0021381378173828125, 0.0017004013061523438, 0.007640838623046875, 0.041168212890625, 0.004695892333984375, 0.155029296875, 0.5146484375, 2.12890625, 0.427490234375, 0.00453948974609375, 0.007755279541015625, 0.0029277801513671875, 9.5367431640625e-07, 0.0001043081283569336, 4.982948303222656e-05, 0.0035190582275390625, 0.0021495819091796875, 4.315376281738281e-05, 0.009307861328125, 0.00025463104248046875, 0.0004930496215820312, 0.026123046875, 0.0003960132598876953, 0.013824462890625, 0.0009679794311523438, 0.15869140625, 0.337890625, 0.381103515625, 0.006526947021484375, 0.0312347412109375, 0.0009288787841796875, 1.6689300537109375e-06, 3.6954879760742188e-06, 7.998943328857422e-05, 0.0007677078247070312, 0.00012230873107910156, 5.984306335449219e-05, 0.0007266998291015625, 0.00012445449829101562], "tokens": [291, 434, 291, 629, 6811, 280, 595, 828, 2558, 10537, 32, 31613, 45945, 26, 30241, 30, 4947, 293, 291, 629, 1769, 7803, 280, 595, 828, 2558, 10537, 32, 371, 11946, 383, 6617, 7357, 26, 4548, 30, 6811, 293, 291, 629, 7581, 280, 595, 828, 2558, 10537, 32, 371, 6280, 38369, 26, 30241]}
{"line_number": 297, "line_type": "original", "code": "        int thisDom = iChronology.getDayOfMonth(instant, thisYear);", "entropy": 0.97509765625, "is_bug_line": false, "sus_score": 0.142453780707534, "per_token_entropy": [4.46484375, 1.4033203125, 2.240234375, 0.06500244140625, 0.01035308837890625, 0.04302978515625, 0.0013675689697265625, 1.0728836059570312e-05, 8.547306060791016e-05, 0.0005636215209960938, 0.003070831298828125, 0.0011768341064453125, 0.00016176700592041016, 0.11517333984375, 0.0035552978515625, 0.04974365234375, 5.1953125, 0.004058837890625, 4.9296875], "tokens": [351, 629, 458, 7803, 280, 595, 828, 2558, 10537, 32, 371, 6280, 38369, 26, 30241, 30, 458, 6617, 293]}
{"line_number": 297, "line_type": "generated", "code": "\n    }\n\n    //-----------------------------------------------------------------------\n    public long roundCeiling(long instant) {\n        int year = iChronology.getYear(instant);\n        int month = iChronology.getMonthOfYear(instant, year);\n        int dom = iCh", "entropy": 0.0545654296875, "is_bug_line": false, "sus_score": 0.142453780707534, "per_token_entropy": [0.1954345703125, 0.0262451171875, 0.02777099609375, 0.226318359375, 0.0010271072387695312, 0.0018110275268554688, 0.020111083984375, 0.00720977783203125, 0.0213623046875, 0.0027866363525390625, 0.0018711090087890625, 9.5367431640625e-05, 0.0008769035339355469, 0.00013625621795654297, 5.555152893066406e-05, 0.0007939338684082031, 0.09991455078125, 0.2186279296875, 0.36767578125, 0.0028476715087890625, 0.0017786026000976562, 0.00012314319610595703, 3.6954879760742188e-06, 0.0001417398452758789, 6.0558319091796875e-05, 9.09566879272461e-05, 9.298324584960938e-06, 0.0009927749633789062, 0.00019598007202148438, 0.006561279296875, 0.0175323486328125, 0.0196380615234375, 0.0309906005859375, 0.006717681884765625, 0.004058837890625, 3.5881996154785156e-05, 2.384185791015625e-07, 9.810924530029297e-05, 1.0609626770019531e-05, 0.001270294189453125, 8.118152618408203e-05, 0.00028061866760253906, 0.0008416175842285156, 0.0016984939575195312, 0.0007677078247070312, 0.00615692138671875, 0.06915283203125, 0.357421875, 1.0517578125, 0.016693115234375, 0.014129638671875, 0.00528717041015625], "tokens": [284, 320, 446, 434, 42510, 284, 562, 1946, 7818, 20864, 10929, 26, 3222, 23564, 27, 301, 291, 629, 4947, 280, 595, 828, 2558, 10537, 32, 371, 6617, 26, 30241, 293, 291, 629, 6811, 280, 595, 828, 2558, 10537, 32, 31613, 45945, 26, 30241, 30, 4947, 293, 291, 629, 7581, 280, 595, 828]}
{"line_number": 298, "line_type": "original", "code": "        int maxDom = iChronology.getDaysInYearMonth(thisYear, month);", "entropy": 0.85107421875, "is_bug_line": false, "sus_score": 0.142453780707534, "per_token_entropy": [5.84375, 3.83984375, 1.2998046875, 0.205322265625, 0.0290374755859375, 0.08270263671875, 0.08074951171875, 8.153915405273438e-05, 2.9206275939941406e-05, 0.00164031982421875, 0.03399658203125, 0.08819580078125, 9.930133819580078e-05, 0.1300048828125, 0.00955963134765625, 0.007358551025390625, 4.5390625, 0.0008654594421386719, 0.001972198486328125, 1.66796875, 0.01369476318359375], "tokens": [351, 629, 1769, 7803, 280, 595, 828, 2558, 10537, 32, 371, 11946, 383, 6617, 7357, 26, 578, 6617, 30, 6811, 293]}
{"line_number": 298, "line_type": "generated", "code": "\n    public long roundCeiling(long instant) {\n        int year = iChronology.getYear(instant);\n        int month = iChronology.getMonthOfYear(instant, year);\n        return iChronology.getYearMonthMillis", "entropy": 0.06451416015625, "is_bug_line": false, "sus_score": 0.142453780707534, "per_token_entropy": [0.5009765625, 0.278564453125, 0.01509857177734375, 0.04364013671875, 0.005435943603515625, 0.0027217864990234375, 0.0001633167266845703, 0.0025272369384765625, 0.0005006790161132812, 0.0001430511474609375, 0.0060882568359375, 0.0799560546875, 0.2327880859375, 0.285400390625, 0.002574920654296875, 0.0017900466918945312, 0.0004677772521972656, 4.76837158203125e-07, 0.00011074542999267578, 5.030632019042969e-05, 0.000118255615234375, 1.3709068298339844e-05, 0.0007715225219726562, 0.0002218484878540039, 0.006072998046875, 0.0350341796875, 0.022918701171875, 0.033843994140625, 0.006320953369140625, 0.0045013427734375, 2.7179718017578125e-05, 2.384185791015625e-07, 0.0002636909484863281, 2.2530555725097656e-05, 0.002376556396484375, 8.07046890258789e-05, 0.0003502368927001953, 0.0008497238159179688, 0.0009198188781738281, 0.0008530616760253906, 0.006862640380859375, 0.14990234375, 1.4453125, 0.10455322265625, 0.0006885528564453125, 7.987022399902344e-06, 3.933906555175781e-06, 0.0005269050598144531, 0.00310516357421875, 0.0014934539794921875, 0.0010538101196289062, 0.0655517578125], "tokens": [284, 562, 1946, 7818, 20864, 10929, 26, 3222, 23564, 27, 301, 291, 629, 4947, 280, 595, 828, 2558, 10537, 32, 371, 6617, 26, 30241, 293, 291, 629, 6811, 280, 595, 828, 2558, 10537, 32, 31613, 45945, 26, 30241, 30, 4947, 293, 291, 442, 595, 828, 2558, 10537, 32, 371, 6617, 7357, 10906]}
{"line_number": 299, "line_type": "original", "code": "        if (thisDom > maxDom) {", "entropy": 1.328125, "is_bug_line": false, "sus_score": 0.142453780707534, "per_token_entropy": [4.26953125, 1.7412109375, 0.0955810546875, 3.298828125, 2.095703125, 1.4248046875, 0.259765625, 0.026031494140625, 0.0210418701171875, 0.0494384765625], "tokens": [351, 415, 308, 578, 7803, 848, 1769, 7803, 27, 301]}
{"line_number": 299, "line_type": "generated", "code": "\n    public long roundCeiling(long instant) {\n        int year = iChronology.getYear(instant);\n        int month = iChronology.getMonthOfYear(instant, year);\n        int dom = iChronology.getDay", "entropy": 0.08624267578125, "is_bug_line": false, "sus_score": 0.142453780707534, "per_token_entropy": [0.46630859375, 0.82275390625, 0.025421142578125, 0.0987548828125, 0.007678985595703125, 0.002941131591796875, 0.0002772808074951172, 0.00386810302734375, 0.00083160400390625, 0.0001748800277709961, 0.00469970703125, 0.083251953125, 0.290283203125, 0.40478515625, 0.002956390380859375, 0.0022487640380859375, 0.00043702125549316406, 3.5762786865234375e-07, 1.0728836059570312e-06, 7.62939453125e-05, 0.00013875961303710938, 1.3947486877441406e-05, 0.0009260177612304688, 0.00028443336486816406, 0.0075531005859375, 0.022613525390625, 0.0220489501953125, 0.034576416015625, 0.00666046142578125, 0.0045623779296875, 3.075599670410156e-05, 9.5367431640625e-07, 0.00033545494079589844, 2.110004425048828e-05, 0.002040863037109375, 7.939338684082031e-05, 0.0004458427429199219, 0.0008449554443359375, 0.0014333724975585938, 0.0009522438049316406, 0.00643157958984375, 0.07769775390625, 0.51171875, 1.458984375, 0.0136566162109375, 0.0115814208984375, 0.00434112548828125, 3.814697265625e-06, 3.0994415283203125e-06, 0.00028228759765625, 0.001373291015625, 0.07379150390625], "tokens": [284, 562, 1946, 7818, 20864, 10929, 26, 3222, 23564, 27, 301, 291, 629, 4947, 280, 595, 828, 2558, 10537, 32, 371, 6617, 26, 30241, 293, 291, 629, 6811, 280, 595, 828, 2558, 10537, 32, 31613, 45945, 26, 30241, 30, 4947, 293, 291, 629, 7581, 280, 595, 828, 2558, 10537, 32, 371, 6280]}
{"line_number": 304, "line_type": "original", "code": "        return iChronology.getYearMonthDayMillis(thisYear, month, thisDom) +", "entropy": 1.15625, "is_bug_line": false, "sus_score": 0.142453780707534, "per_token_entropy": [4.953125, 2.39453125, 1.1025390625, 0.16796875, 3.838539123535156e-05, 2.396106719970703e-05, 0.016143798828125, 0.51416015625, 1.9091796875, 0.08441162109375, 5.54296875, 0.015106201171875, 0.2098388671875, 1.98046875, 0.019927978515625, 0.00531768798828125, 0.2900390625, 0.0168914794921875, 0.57763671875, 0.0093536376953125, 4.57421875, 1.052734375], "tokens": [351, 442, 595, 828, 2558, 10537, 32, 371, 6617, 7357, 6280, 10906, 26, 578, 6617, 30, 6811, 30, 458, 7803, 27, 474]}
{"line_number": 304, "line_type": "generated", "code": "\n    //-----------------------------------------------------------------------\n    public int get(long instant) {\n        return iChronology.getMonthOfYear(instant);\n    }\n\n    //-----------------------------------------------------------------------\n    public String getAsString(long instant) {\n        return Integer.toString(iChronology.getMonthOfYear", "entropy": 0.2626953125, "is_bug_line": false, "sus_score": 0.142453780707534, "per_token_entropy": [0.90625, 1.2861328125, 0.0089874267578125, 0.0159149169921875, 0.267822265625, 1.783203125, 0.3828125, 1.4931640625, 0.09552001953125, 0.1927490234375, 0.02618408203125, 0.0024509429931640625, 0.09356689453125, 0.45703125, 0.044891357421875, 0.002895355224609375, 5.6862831115722656e-05, 8.785724639892578e-05, 0.0007123947143554688, 0.00934600830078125, 0.0002543926239013672, 0.0106964111328125, 0.008758544921875, 1.3173828125, 0.07373046875, 0.0007653236389160156, 0.3330078125, 0.07415771484375, 0.0095672607421875, 0.01171112060546875, 0.1368408203125, 0.2890625, 0.270751953125, 1.0380859375, 0.00017309188842773438, 0.05145263671875, 0.027252197265625, 0.0006241798400878906, 0.00045037269592285156, 0.03607177734375, 0.54150390625, 1.0966796875, 0.002750396728515625, 0.006374359130859375, 0.0013036727905273438, 1.236328125, 0.0091094970703125, 3.2782554626464844e-05, 4.76837158203125e-07, 0.0005064010620117188, 0.003879547119140625, 5.245208740234375e-05], "tokens": [284, 434, 42510, 284, 562, 629, 622, 26, 3222, 23564, 27, 301, 291, 442, 595, 828, 2558, 10537, 32, 31613, 45945, 26, 30241, 293, 284, 320, 446, 434, 42510, 284, 562, 892, 622, 15026, 26, 3222, 23564, 27, 301, 291, 442, 4401, 32, 3108, 26, 91, 828, 2558, 10537, 32, 31613, 45945]}
{"line_number": 293, "line_type": "original", "code": "        FieldUtils.verifyValueBounds(this, month, MIN, iMax);", "entropy": 0.83984375, "is_bug_line": false, "sus_score": 0.14230101521510996, "per_token_entropy": [4.67578125, 6.03515625, 0.6923828125, 0.0048370361328125, 0.011749267578125, 0.00939178466796875, 0.0120849609375, 0.1337890625, 0.0833740234375, 0.004833221435546875, 1.8447265625, 0.05352783203125, 0.3759765625, 0.038604736328125, 0.290283203125, 0.003971099853515625, 0.0102996826171875], "tokens": [351, 5692, 2755, 32, 6967, 882, 8285, 26, 578, 30, 6811, 30, 14369, 30, 595, 2708, 293]}
{"line_number": 293, "line_type": "generated", "code": "\n    public int getMaximumTextLength(Locale locale) {\n        return iMaxDigits;\n    }\n\n    //-----------------------------------------------------------------------\n    public int get(long instant) {\n        int thisYear = iChronology.getYear(instant);\n        return iChron", "entropy": 0.1912841796875, "is_bug_line": false, "sus_score": 0.14230101521510996, "per_token_entropy": [0.346435546875, 0.31640625, 0.5361328125, 0.02392578125, 0.30712890625, 0.5859375, 0.0006709098815917969, 0.006244659423828125, 0.09332275390625, 0.0016145706176757812, 0.00016891956329345703, 0.00164794921875, 0.054107666015625, 0.38671875, 1.3056640625, 0.59521484375, 0.345947265625, 0.305908203125, 0.049041748046875, 0.00016987323760986328, 0.2705078125, 0.10198974609375, 0.007328033447265625, 0.11907958984375, 0.214599609375, 0.5419921875, 0.2021484375, 0.76318359375, 0.03680419921875, 0.163818359375, 0.006015777587890625, 0.00019848346710205078, 0.12176513671875, 0.73193359375, 0.41796875, 0.005641937255859375, 0.0013942718505859375, 0.0016164779663085938, 7.76052474975586e-05, 0.00018608570098876953, 9.894371032714844e-06, 5.2928924560546875e-05, 0.0003230571746826172, 0.00011539459228515625, 0.0004124641418457031, 0.00016617774963378906, 0.0013704299926757812, 0.08111572265625, 0.61962890625, 0.230712890625, 0.038848876953125, 9.5367431640625e-07], "tokens": [284, 562, 629, 622, 12726, 1031, 2380, 26, 9467, 11259, 27, 301, 291, 442, 595, 2708, 22326, 45, 284, 320, 446, 434, 42510, 284, 562, 629, 622, 26, 3222, 23564, 27, 301, 291, 629, 458, 6617, 280, 595, 828, 2558, 10537, 32, 371, 6617, 26, 30241, 293, 291, 442, 595, 828, 2558]}
{"line_number": 114, "line_type": "original", "code": "            yearToUse = thisYear + (monthToUse / iMax);", "entropy": 1.3447265625, "is_bug_line": false, "sus_score": 0.12248296376214993, "per_token_entropy": [8.46875, 1.4521484375, 0.000286102294921875, 0.0042877197265625, 0.45458984375, 0.0003485679626464844, 0.0870361328125, 0.5791015625, 5.10546875, 0.64306640625, 0.040191650390625, 0.07720947265625, 0.008270263671875, 1.9052734375], "tokens": [1468, 4947, 42870, 280, 458, 6617, 474, 308, 5904, 42870, 517, 595, 2708, 293]}
{"line_number": 114, "line_type": "generated", "code": "\n        int monthToUse = thisMonth - 1 + i_months;\n        if (monthToUse >= 0) {", "entropy": 0.0865478515625, "is_bug_line": false, "sus_score": 0.12248296376214993, "per_token_entropy": [0.32666015625, 0.93994140625, 0.173583984375, 0.00620269775390625, 0.0447998046875, 0.2626953125, 0.00021350383758544922, 0.1361083984375, 0.00390625, 6.127357482910156e-05, 0.0236663818359375, 0.11822509765625, 0.000736236572265625, 1.0609626770019531e-05, 0.0028209686279296875, 0.0504150390625, 0.04388427734375, 0.0019083023071289062, 0.00688934326171875, 7.081031799316406e-05, 0.0109405517578125, 0.002201080322265625, 0.0005135536193847656, 0.00202178955078125, 0.004711151123046875], "tokens": [291, 629, 6811, 42870, 280, 458, 7357, 429, 225, 35, 474, 595, 81, 28407, 45, 291, 415, 308, 5904, 42870, 2377, 225, 34, 27, 301]}
{"line_number": 115, "line_type": "original", "code": "            monthToUse = (monthToUse % iMax) + 1;", "entropy": 1.4189453125, "is_bug_line": false, "sus_score": 0.12248296376214993, "per_token_entropy": [9.140625, 5.59375, 0.016082763671875, 0.354248046875, 2.17578125, 0.479736328125, 0.00014698505401611328, 1.9580078125, 0.98876953125, 0.148681640625, 0.282958984375, 0.01035308837890625, 0.06060791015625, 0.0006079673767089844, 0.07305908203125], "tokens": [1468, 6811, 42870, 280, 308, 5904, 42870, 904, 595, 2708, 27, 474, 225, 35, 45]}
{"line_number": 115, "line_type": "generated", "code": "\n\n        // Quietly force DOM to nearest sane value.\n        int dayToUse = iChronology.getDayOfMonth(instant, thisYear, thisMonth);\n        int maxDay = iChronology.getDaysInYearMonth(year", "entropy": 0.071533203125, "is_bug_line": false, "sus_score": 0.12248296376214993, "per_token_entropy": [0.51171875, 1.6630859375, 0.984375, 4.303455352783203e-05, 1.3947486877441406e-05, 0.0013103485107421875, 0.00498199462890625, 0.001056671142578125, 0.0004534721374511719, 0.0005168914794921875, 1.5497207641601562e-06, 0.00020051002502441406, 0.0279083251953125, 0.02545166015625, 0.20751953125, 0.1630859375, 0.0036373138427734375, 0.0011816024780273438, 0.003849029541015625, 4.9114227294921875e-05, 5.4836273193359375e-06, 6.079673767089844e-06, 7.021427154541016e-05, 7.927417755126953e-05, 0.00015532970428466797, 1.9073486328125e-06, 0.00013589859008789062, 0.0013599395751953125, 0.003925323486328125, 0.0030956268310546875, 8.440017700195312e-05, 6.23464584350586e-05, 0.0223541259765625, 0.0001704692840576172, 0.0005469322204589844, 0.0060882568359375, 0.01148223876953125, 0.0020771026611328125, 0.0004067420959472656, 0.0007314682006835938, 0.0027713775634765625, 0.00011157989501953125, 1.0728836059570312e-06, 2.384185791015625e-07, 2.6345252990722656e-05, 0.0003578662872314453, 0.00039076805114746094, 1.0728836059570312e-06, 0.00041961669921875, 0.00010085105895996094, 0.0029144287109375, 0.059326171875], "tokens": [584, 434, 5599, 6659, 631, 7650, 12107, 372, 24560, 309, 2600, 786, 32, 291, 629, 5808, 42870, 280, 595, 828, 2558, 10537, 32, 371, 6280, 38369, 26, 30241, 30, 458, 6617, 30, 458, 7357, 293, 291, 629, 1769, 6280, 280, 595, 828, 2558, 10537, 32, 371, 11946, 383, 6617, 7357, 26, 4548]}
{"line_number": 98, "line_type": "original", "code": "        long timePart = iChronology.getMillisOfDay(instant);", "entropy": 0.8232421875, "is_bug_line": false, "sus_score": 0.12186458206455117, "per_token_entropy": [5.64453125, 2.6875, 0.6591796875, 0.037078857421875, 0.0106353759765625, 3.712890625, 0.0037326812744140625, 4.4345855712890625e-05, 2.205371856689453e-05, 0.00058746337890625, 0.050994873046875, 0.02716064453125, 0.02655029296875, 0.01727294921875, 0.0025177001953125, 0.2880859375], "tokens": [351, 1946, 1133, 2639, 280, 595, 828, 2558, 10537, 32, 371, 10906, 38119, 26, 30241, 293]}
{"line_number": 98, "line_type": "generated", "code": "\n    /**\n     * Get the amount of months between the two specified time instants.\n     * The difference is expressed in whole months, with any fractional\n     * part being removed.\n     *\n     * @see org.joda.time.DateTimeField#get", "entropy": 0.4404296875, "is_bug_line": false, "sus_score": 0.12186458206455117, "per_token_entropy": [1.4248046875, 1.01953125, 0.0284271240234375, 9.09566879272461e-05, 0.9306640625, 0.0201416015625, 0.78466796875, 0.2291259765625, 0.15283203125, 0.2266845703125, 0.82080078125, 0.79150390625, 0.0070037841796875, 0.53271484375, 0.61376953125, 9.5367431640625e-07, 0.158447265625, 0.051422119140625, 0.0012083053588867188, 0.8349609375, 0.93896484375, 0.7119140625, 1.1396484375, 0.0760498046875, 0.7783203125, 0.0112762451171875, 0.42431640625, 1.076171875, 0.335205078125, 1.220703125, 0.1859130859375, 0.044281005859375, 2.1696090698242188e-05, 0.9951171875, 0.147216796875, 2.64453125, 0.0723876953125, 1.427734375, 0.0004062652587890625, 1.486328125, 7.176399230957031e-05, 0.005401611328125, 0.51318359375, 0.017669677734375, 2.1219253540039062e-05, 6.556510925292969e-06, 1.1920928955078125e-07, 3.2901763916015625e-05, 2.1457672119140625e-06, 0.017547607421875, 1.6689300537109375e-05, 0.0019702911376953125], "tokens": [284, 1022, 275, 319, 1390, 322, 5168, 432, 17723, 3733, 322, 3134, 3191, 1133, 1440, 2376, 32, 275, 319, 886, 10563, 438, 29824, 328, 9844, 17723, 30, 623, 1346, 18795, 279, 275, 319, 1742, 3998, 6556, 32, 275, 319, 275, 319, 477, 2970, 1086, 32, 44548, 32, 1003, 32, 36172, 21, 371]}
{"line_number": 103, "line_type": "original", "code": "        int thisYear = iChronology.getYear(instant);", "entropy": 1.0048828125, "is_bug_line": false, "sus_score": 0.12186458206455117, "per_token_entropy": [5.13671875, 7.29296875, 0.80908203125, 1.72265625, 0.0467529296875, 0.0418701171875, 0.005199432373046875, 0.00041556358337402344, 1.1920928955078125e-06, 0.0001405477523803711, 0.0016613006591796875, 0.0014190673828125, 0.0069427490234375, 0.0008420944213867188, 0.0113525390625], "tokens": [351, 629, 458, 6617, 280, 595, 828, 2558, 10537, 32, 371, 6617, 26, 30241, 293]}
{"line_number": 103, "line_type": "generated", "code": "\n            return add(instant, i_months);\n        }\n        return FieldUtils.safeAdd(instant, months * iAverageMillisPerMonth);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Get the amount of months between two instants. The difference\n    ", "entropy": 0.27099609375, "is_bug_line": false, "sus_score": 0.12186458206455117, "per_token_entropy": [0.51953125, 0.05078125, 0.0950927734375, 0.0028839111328125, 0.00046324729919433594, 9.441375732421875e-05, 0.015655517578125, 0.0007948875427246094, 0.00017023086547851562, 0.003208160400390625, 0.0634765625, 9.274482727050781e-05, 0.806640625, 0.59619140625, 2.12890625, 0.00432586669921875, 4.887580871582031e-06, 0.003993988037109375, 0.0130462646484375, 0.0012674331665039062, 0.00106048583984375, 0.0001327991485595703, 0.9765625, 0.033233642578125, 0.9072265625, 2.572265625, 0.51220703125, 0.0855712890625, 0.0191650390625, 0.0109100341796875, 0.022674560546875, 0.00022101402282714844, 0.047149658203125, 0.0498046875, 0.005603790283203125, 0.003551483154296875, 0.32568359375, 0.008941650390625, 2.002716064453125e-05, 0.7978515625, 0.00354766845703125, 0.50732421875, 0.050506591796875, 0.2083740234375, 0.0933837890625, 0.388671875, 0.548828125, 2.1457672119140625e-06, 0.0628662109375, 0.419189453125, 1.041015625, 0.0797119140625], "tokens": [324, 442, 1015, 26, 30241, 30, 595, 81, 28407, 293, 291, 320, 291, 442, 5692, 2755, 32, 4770, 1103, 26, 30241, 30, 17723, 319, 595, 15685, 10906, 1834, 7357, 293, 284, 320, 446, 434, 42510, 284, 1022, 275, 319, 1390, 322, 5168, 432, 17723, 3733, 3134, 1440, 2376, 32, 886, 10563, 275]}
{"line_number": 104, "line_type": "original", "code": "        int thisMonth = iChronology.getMonthOfYear(instant, thisYear);", "entropy": 1.17578125, "is_bug_line": false, "sus_score": 0.12186458206455117, "per_token_entropy": [5.12890625, 6.3125, 3.279296875, 2.099609375, 0.0531005859375, 0.3291015625, 0.0357666015625, 0.0006070137023925781, 1.7881393432617188e-06, 0.00012958049774169922, 0.01751708984375, 0.0005955696105957031, 0.0029277801513671875, 0.0023193359375, 2.056640625, 1.611328125, 0.0528564453125, 0.16748046875], "tokens": [351, 629, 458, 7357, 280, 595, 828, 2558, 10537, 32, 31613, 45945, 26, 30241, 30, 458, 6617, 293]}
{"line_number": 104, "line_type": "generated", "code": "\n        }\n        long result = instant + months * DateTimeConstants.MILLIS_PER_MONTH;\n        if (months > 0) {\n            instant = instant + iMax * DateTimeConstants.MILLIS_PER_MONTH;\n        }\n       ", "entropy": 0.345947265625, "is_bug_line": false, "sus_score": 0.12186458206455117, "per_token_entropy": [0.096435546875, 0.0867919921875, 0.8447265625, 1.1123046875, 0.90380859375, 0.038726806640625, 0.1287841796875, 0.4833984375, 0.90478515625, 0.0537109375, 1.447265625, 0.03814697265625, 0.0016126632690429688, 0.00799560546875, 2.944469451904297e-05, 1.1920928955078125e-06, 7.867813110351562e-06, 0.0005021095275878906, 4.0531158447265625e-06, 0.08636474609375, 0.01393890380859375, 0.1417236328125, 1.4814453125, 0.1973876953125, 0.85009765625, 0.364013671875, 0.109619140625, 0.0032196044921875, 0.333740234375, 0.0007052421569824219, 0.08294677734375, 1.810546875, 0.1807861328125, 1.1572265625, 0.284912109375, 1.455078125, 1.0283203125, 0.2275390625, 0.124755859375, 0.00159454345703125, 8.225440979003906e-05, 0.0005502700805664062, 2.384185791015625e-07, 1.1920928955078125e-06, 5.245208740234375e-06, 6.4373016357421875e-06, 6.92605972290039e-05, 0.05621337890625, 0.1334228515625, 0.77197265625, 0.0040283203125, 0.9375], "tokens": [291, 320, 291, 1946, 1056, 280, 23564, 474, 17723, 319, 6666, 5229, 32, 63, 13142, 1296, 81, 3687, 81, 22846, 45, 291, 415, 308, 28407, 848, 225, 34, 27, 301, 324, 23564, 280, 23564, 474, 595, 2708, 319, 6666, 5229, 32, 63, 13142, 1296, 81, 3687, 81, 22846, 45, 291, 320, 291]}
{"line_number": 112, "line_type": "original", "code": "        int monthToUse = thisMonth - 1 + months;", "entropy": 1.5634765625, "is_bug_line": false, "sus_score": 0.12186458206455117, "per_token_entropy": [7.6796875, 0.50048828125, 3.67578125, 0.0165252685546875, 0.1444091796875, 1.1982421875, 0.01059722900390625, 3.728515625, 0.400634765625, 0.004802703857421875, 0.1829833984375, 2.763671875, 0.02197265625], "tokens": [351, 629, 6811, 42870, 280, 458, 7357, 429, 225, 35, 474, 17723, 45]}
{"line_number": 112, "line_type": "generated", "code": "\n        int yearToUse;\n        if (monthToUse >= 0) {\n            yearToUse = thisYear + (monthToUse / iMax);\n            monthToUse = (monthToUse % iMax) + 1;\n        } else {\n            yearToUse =", "entropy": 0.03082275390625, "is_bug_line": false, "sus_score": 0.12186458206455117, "per_token_entropy": [0.1474609375, 0.5048828125, 0.09271240234375, 0.00141143798828125, 0.1644287109375, 0.0201416015625, 0.339111328125, 0.015045166015625, 0.049285888671875, 0.01555633544921875, 0.01233673095703125, 0.0019292831420898438, 0.0014314651489257812, 0.00194549560546875, 0.0026950836181640625, 0.01337432861328125, 0.04071044921875, 1.0728836059570312e-05, 0.00019466876983642578, 0.01042938232421875, 5.340576171875e-05, 0.0021686553955078125, 0.027923583984375, 0.037689208984375, 0.0008783340454101562, 0.01385498046875, 0.0172119140625, 0.0029163360595703125, 0.004150390625, 0.00695037841796875, 0.006122589111328125, 3.647804260253906e-05, 0.002086639404296875, 0.007785797119140625, 0.0015668869018554688, 0.0005078315734863281, 0.0005025863647460938, 0.0005936622619628906, 3.075599670410156e-05, 0.00176239013671875, 0.0002105236053466797, 0.00022792816162109375, 0.00012958049774169922, 0.00025916099548339844, 0.0086822509765625, 0.0001773834228515625, 0.012603759765625, 0.0004546642303466797, 0.0036945343017578125, 0.006084442138671875, 1.1920928955078125e-07, 5.030632019042969e-05], "tokens": [291, 629, 4947, 42870, 45, 291, 415, 308, 5904, 42870, 2377, 225, 34, 27, 301, 324, 4947, 42870, 280, 458, 6617, 474, 308, 5904, 42870, 517, 595, 2708, 293, 324, 6811, 42870, 280, 308, 5904, 42870, 904, 595, 2708, 27, 474, 225, 35, 45, 291, 320, 813, 301, 324, 4947, 42870, 280]}
{"line_number": 113, "line_type": "original", "code": "        if (monthToUse >= 0) {", "entropy": 2.13671875, "is_bug_line": false, "sus_score": 0.12186458206455117, "per_token_entropy": [7.921875, 2.521484375, 0.10577392578125, 3.62109375, 2.150390625, 3.80078125, 0.483642578125, 0.68115234375, 0.044647216796875, 0.041351318359375], "tokens": [351, 415, 308, 5904, 42870, 2377, 225, 34, 27, 301]}
{"line_number": 113, "line_type": "generated", "code": "\n            int yearToUse = thisYear + (monthToUse / iMax);\n            monthToUse = (monthToUse % iMax) + 1;\n        } else {\n            int yearToUse = thisYear + (monthToUse / iMax) - 1", "entropy": 0.06781005859375, "is_bug_line": false, "sus_score": 0.12186458206455117, "per_token_entropy": [0.56103515625, 0.4951171875, 0.1285400390625, 0.0025196075439453125, 0.7509765625, 0.167724609375, 0.00023233890533447266, 0.033477783203125, 0.1424560546875, 0.37353515625, 0.087158203125, 0.013671875, 0.028350830078125, 0.004238128662109375, 0.035858154296875, 0.01502227783203125, 0.09130859375, 0.0002589225769042969, 0.01055908203125, 0.016815185546875, 0.0020771026611328125, 0.0004825592041015625, 0.0010395050048828125, 0.0011816024780273438, 5.424022674560547e-05, 0.00595855712890625, 0.0005564689636230469, 0.000396728515625, 1.4781951904296875e-05, 0.003387451171875, 0.07373046875, 0.0029506683349609375, 0.0079803466796875, 0.005191802978515625, 0.01317596435546875, 0.26513671875, 0.107421875, 0.0007915496826171875, 0.0020809173583984375, 0.0054931640625, 1.8596649169921875e-05, 0.0020008087158203125, 0.0160064697265625, 0.005771636962890625, 0.019378662109375, 0.0010223388671875, 0.000690460205078125, 3.9577484130859375e-05, 0.02093505859375, 0.0004181861877441406, 0.0010843276977539062, 9.274482727050781e-05], "tokens": [324, 629, 4947, 42870, 280, 458, 6617, 474, 308, 5904, 42870, 517, 595, 2708, 293, 324, 6811, 42870, 280, 308, 5904, 42870, 904, 595, 2708, 27, 474, 225, 35, 45, 291, 320, 813, 301, 324, 629, 4947, 42870, 280, 458, 6617, 474, 308, 5904, 42870, 517, 595, 2708, 27, 429, 225, 35]}
{"line_number": 136, "line_type": "original", "code": "        int dayToUse = iChronology.getDayOfMonth(instant, thisYear, thisMonth);", "entropy": 0.89501953125, "is_bug_line": false, "sus_score": 0.12186458206455117, "per_token_entropy": [6.1796875, 4.91015625, 4.50390625, 0.034027099609375, 0.056121826171875, 0.29150390625, 0.0111541748046875, 0.00011539459228515625, 0.00022792816162109375, 0.00079345703125, 0.009521484375, 0.00395965576171875, 0.0033931732177734375, 0.06585693359375, 0.01261138916015625, 2.412109375, 0.1260986328125, 0.0133819580078125, 0.99755859375, 0.0362548828125, 0.00043845176696777344, 0.01202392578125], "tokens": [351, 629, 5808, 42870, 280, 595, 828, 2558, 10537, 32, 371, 6280, 38369, 26, 30241, 30, 458, 6617, 30, 458, 7357, 293]}
{"line_number": 136, "line_type": "generated", "code": "\n        }\n\n        int maxDay = iChronology.getDaysInYearMonth(yearToUse, monthToUse);\n        int dayToUse = iChronology.getDayOfMonth(instant, thisYear);\n        if (dayToUse > maxDay)", "entropy": 0.069091796875, "is_bug_line": false, "sus_score": 0.12186458206455117, "per_token_entropy": [0.1336669921875, 0.0859375, 0.337646484375, 0.359619140625, 0.059234619140625, 0.0012722015380859375, 0.003795623779296875, 0.017822265625, 0.00033354759216308594, 7.987022399902344e-06, 1.4185905456542969e-05, 5.0067901611328125e-05, 0.0004162788391113281, 0.0030002593994140625, 5.125999450683594e-06, 0.0007958412170410156, 0.0002105236053466797, 0.161376953125, 0.08819580078125, 0.00021898746490478516, 0.0024433135986328125, 0.0185699462890625, 1.0848045349121094e-05, 0.0006661415100097656, 0.08514404296875, 0.91552734375, 0.0284271240234375, 0.00983428955078125, 0.03973388671875, 0.6484375, 0.004894256591796875, 5.960464477539062e-07, 1.0609626770019531e-05, 0.00010442733764648438, 0.004222869873046875, 0.00041484832763671875, 0.005016326904296875, 0.0111846923828125, 0.002010345458984375, 0.1676025390625, 0.042938232421875, 0.01129150390625, 0.12646484375, 0.1378173828125, 0.06500244140625, 0.0016374588012695312, 0.00180816650390625, 5.9604644775390625e-06, 0.0054473876953125, 0.0007157325744628906, 2.7418136596679688e-06, 0.0007171630859375], "tokens": [291, 320, 584, 629, 1769, 6280, 280, 595, 828, 2558, 10537, 32, 371, 11946, 383, 6617, 7357, 26, 4548, 42870, 30, 6811, 42870, 293, 291, 629, 5808, 42870, 280, 595, 828, 2558, 10537, 32, 371, 6280, 38369, 26, 30241, 30, 458, 6617, 293, 291, 415, 308, 3368, 42870, 848, 1769, 6280, 27]}
{"line_number": 137, "line_type": "original", "code": "        int maxDay = iChronology.getDaysInYearMonth(yearToUse, monthToUse);", "entropy": 0.69970703125, "is_bug_line": false, "sus_score": 0.12186458206455117, "per_token_entropy": [7.8671875, 1.7470703125, 2.21484375, 0.031341552734375, 0.04376220703125, 0.278076171875, 0.3056640625, 0.0008406639099121094, 0.000209808349609375, 0.00043010711669921875, 0.1820068359375, 0.10369873046875, 0.0014390945434570312, 2.421875, 0.0377197265625, 0.03167724609375, 0.0577392578125, 0.0007009506225585938, 0.0030994415283203125, 0.059783935546875, 7.998943328857422e-05, 0.006160736083984375], "tokens": [351, 629, 1769, 6280, 280, 595, 828, 2558, 10537, 32, 371, 11946, 383, 6617, 7357, 26, 4548, 42870, 30, 6811, 42870, 293]}
{"line_number": 137, "line_type": "generated", "code": "\n\n        long datePart =\n            iChronology.getYearMonthDayMillis(yearToUse, monthToUse, dayToUse);\n        return datePart + timePart;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Add to the specified time instant, wrapping around", "entropy": 0.2071533203125, "is_bug_line": false, "sus_score": 0.12186458206455117, "per_token_entropy": [1.5029296875, 0.413818359375, 0.0909423828125, 0.004230499267578125, 0.0028018951416015625, 0.2069091796875, 0.00732421875, 4.482269287109375e-05, 3.4570693969726562e-06, 3.337860107421875e-06, 4.744529724121094e-05, 0.0004696846008300781, 0.0005345344543457031, 0.01019287109375, 0.030853271484375, 1.33514404296875e-05, 0.1444091796875, 0.10479736328125, 3.0040740966796875e-05, 0.0016078948974609375, 0.0208587646484375, 1.4424324035644531e-05, 0.000926971435546875, 0.06585693359375, 0.01154327392578125, 0.0027923583984375, 0.61328125, 0.01462554931640625, 0.003021240234375, 6.794929504394531e-05, 0.0006289482116699219, 0.00034689903259277344, 1.609325408935547e-05, 0.00223541259765625, 0.033843994140625, 0.0019893646240234375, 0.703125, 0.2305908203125, 0.02685546875, 0.018035888671875, 0.5029296875, 0.0135498046875, 2.944469451904297e-05, 1.9033203125, 0.06268310546875, 0.315185546875, 1.142578125, 1.2490234375, 0.04742431640625, 0.1263427734375, 1.064453125, 0.07000732421875], "tokens": [584, 1946, 2340, 2639, 280, 324, 595, 828, 2558, 10537, 32, 371, 6617, 7357, 6280, 10906, 26, 4548, 42870, 30, 6811, 42870, 30, 5808, 42870, 293, 291, 442, 2340, 2639, 474, 1133, 2639, 45, 284, 320, 446, 434, 42510, 284, 1022, 275, 319, 2222, 372, 322, 3191, 1133, 23564, 30, 29996, 6835]}
{"line_number": 138, "line_type": "original", "code": "        if (dayToUse > maxDay) {", "entropy": 1.1416015625, "is_bug_line": false, "sus_score": 0.12186458206455117, "per_token_entropy": [6.890625, 2.533203125, 0.040618896484375, 0.80419921875, 0.00836944580078125, 0.397216796875, 0.69921875, 0.006862640380859375, 0.01727294921875, 0.019317626953125], "tokens": [351, 415, 308, 3368, 42870, 848, 1769, 6280, 27, 301]}
{"line_number": 138, "line_type": "generated", "code": "\n        int dayToUse = iChronology.getDayOfMonth(instant, thisYear, thisMonth);\n        int maxDay = iChronology.getDaysInYearMonth(yearToUse, monthToUse);\n        dayToUse = maxDay;\n       ", "entropy": 0.094482421875, "is_bug_line": false, "sus_score": 0.12186458206455117, "per_token_entropy": [1.3408203125, 0.82763671875, 0.7275390625, 0.004364013671875, 0.0083465576171875, 0.0290985107421875, 0.0010728836059570312, 5.245208740234375e-06, 3.814697265625e-06, 5.054473876953125e-05, 0.0002491474151611328, 0.00786590576171875, 3.063678741455078e-05, 0.0018138885498046875, 0.002864837646484375, 0.002826690673828125, 0.0069732666015625, 0.0001838207244873047, 5.233287811279297e-05, 0.0074615478515625, 0.00012111663818359375, 0.00046324729919433594, 0.0276031494140625, 0.02728271484375, 0.0034694671630859375, 0.0008282661437988281, 0.0012845993041992188, 0.006908416748046875, 0.00019299983978271484, 5.0067901611328125e-06, 1.1682510375976562e-05, 4.7206878662109375e-05, 0.00030612945556640625, 0.0003724098205566406, 4.172325134277344e-06, 0.0004673004150390625, 7.05718994140625e-05, 0.003452301025390625, 0.01499176025390625, 0.00014007091522216797, 0.0010013580322265625, 0.00612640380859375, 1.5854835510253906e-05, 0.0002694129943847656, 0.52734375, 0.192138671875, 3.600120544433594e-05, 0.00042366981506347656, 0.01399993896484375, 3.2782554626464844e-05, 0.0009489059448242188, 1.1142578125], "tokens": [291, 629, 5808, 42870, 280, 595, 828, 2558, 10537, 32, 371, 6280, 38369, 26, 30241, 30, 458, 6617, 30, 458, 7357, 293, 291, 629, 1769, 6280, 280, 595, 828, 2558, 10537, 32, 371, 11946, 383, 6617, 7357, 26, 4548, 42870, 30, 6811, 42870, 293, 291, 5808, 42870, 280, 1769, 6280, 45, 291]}
