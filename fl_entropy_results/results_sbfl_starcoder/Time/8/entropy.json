{"line_number": 776, "line_type": "original", "code": "        String name = cNameProvider.getShortName(locale, iID, nameKey);", "entropy": 0.9365234375, "is_bug_line": false, "sus_score": 0.799502686333539, "per_token_entropy": [5.0546875, 6.19921875, 1.3828125, 0.46826171875, 0.50927734375, 0.032073974609375, 0.01485443115234375, 0.003673553466796875, 2.9921875, 0.54052734375, 0.023712158203125, 0.15087890625, 0.003559112548828125, 0.1396484375, 0.0210418701171875, 0.04693603515625, 0.206787109375, 0.0016002655029296875, 0.01049041748046875], "tokens": [351, 892, 636, 280, 281, 558, 2570, 32, 371, 46691, 26, 6921, 30, 595, 779, 30, 636, 953, 293]}
{"line_number": 776, "line_type": "generated", "code": "\n     * @param instant  milliseconds from 1970-01-01T00:00:00Z to get the offset for\n     * @return the offset from UTC at the specified instant to local time\n     */\n   ", "entropy": 0.1485595703125, "is_bug_line": false, "sus_score": 0.799502686333539, "per_token_entropy": [0.287841796875, 0.1368408203125, 1.5263671875, 0.196044921875, 0.0701904296875, 0.03179931640625, 0.262451171875, 0.00733184814453125, 0.0025310516357421875, 0.00016200542449951172, 0.0004093647003173828, 0.0002142190933227539, 0.003131866455078125, 0.00024175643920898438, 6.365776062011719e-05, 7.510185241699219e-06, 2.002716064453125e-05, 2.1576881408691406e-05, 2.968311309814453e-05, 0.000820159912109375, 9.298324584960938e-05, 4.506111145019531e-05, 7.104873657226562e-05, 2.1457672119140625e-06, 2.8014183044433594e-05, 0.00041174888610839844, 1.4662742614746094e-05, 0.00022721290588378906, 0.00946044921875, 0.216552734375, 0.1636962890625, 0.178955078125, 0.051300048828125, 0.0208892822265625, 0.02142333984375, 0.01177978515625, 0.0008902549743652344, 0.035186767578125, 0.79736328125, 0.470947265625, 0.296630859375, 0.005313873291015625, 1.0234375, 0.0275726318359375, 0.043548583984375, 0.418212890625, 0.62255859375, 0.425048828125, 0.01229095458984375, 0.265625, 0.06695556640625, 0.01328277587890625], "tokens": [275, 319, 477, 753, 23564, 225, 18574, 645, 225, 35, 43, 41, 34, 31, 34, 35, 31, 34, 35, 70, 34, 34, 44, 34, 34, 44, 34, 34, 76, 372, 622, 322, 3401, 436, 275, 319, 477, 601, 322, 3401, 645, 17197, 821, 322, 3191, 23564, 372, 2196, 1133, 275, 569, 284]}
{"line_number": 777, "line_type": "original", "code": "        if (name != null) {", "entropy": 1.2646484375, "is_bug_line": false, "sus_score": 0.799502686333539, "per_token_entropy": [2.611328125, 2.5078125, 0.08648681640625, 3.5546875, 1.2822265625, 0.0032215118408203125, 0.038818359375, 0.035919189453125], "tokens": [351, 415, 308, 426, 863, 744, 27, 301]}
{"line_number": 777, "line_type": "generated", "code": "\n            return offset;\n        }\n        return printOffset(getOffset(instant));\n    }\n\n    /**\n     * Gets the millisecond offset to add to UTC to get local time.\n     * \n     * @param instant  milliseconds from 1970-", "entropy": 0.1693115234375, "is_bug_line": false, "sus_score": 0.799502686333539, "per_token_entropy": [1.9052734375, 0.1092529296875, 0.87158203125, 0.09600830078125, 0.095703125, 0.013946533203125, 0.4267578125, 0.3984375, 0.9736328125, 0.00466156005859375, 0.0166473388671875, 0.0745849609375, 0.041778564453125, 0.0204620361328125, 0.00888824462890625, 0.0298614501953125, 0.0270233154296875, 0.0007257461547851562, 0.1475830078125, 0.058380126953125, 0.008087158203125, 0.00012314319610595703, 0.67333984375, 0.060272216796875, 1.064453125, 0.00043010711669921875, 0.01242828369140625, 0.200439453125, 0.0156097412109375, 0.0133514404296875, 0.17724609375, 0.01390838623046875, 0.00824737548828125, 0.32275390625, 0.039794921875, 0.16259765625, 0.1866455078125, 0.0007929801940917969, 0.192138671875, 7.927417755126953e-05, 0.0018825531005859375, 0.0709228515625, 0.16357421875, 0.0064849853515625, 0.08447265625, 0.003376007080078125, 0.0014514923095703125, 0.0004162788391113281, 0.00047087669372558594, 0.000274658203125, 1.3589859008789062e-05, 0.0001327991485595703], "tokens": [324, 442, 3401, 45, 291, 320, 291, 442, 1459, 3457, 26, 371, 3457, 26, 30241, 876, 284, 320, 446, 1022, 275, 319, 7124, 322, 37003, 3090, 3401, 372, 1015, 372, 17197, 372, 622, 2196, 1133, 32, 275, 319, 5384, 319, 477, 753, 23564, 225, 18574, 645, 225, 35, 43, 41, 34, 31]}
{"line_number": 780, "line_type": "original", "code": "        return printOffset(getOffset(instant));", "entropy": 1.162109375, "is_bug_line": false, "sus_score": 0.799502686333539, "per_token_entropy": [6.71875, 0.787109375, 3.58203125, 0.006458282470703125, 0.056732177734375, 0.2139892578125, 0.05145263671875, 0.03997802734375, 0.01317596435546875, 0.156982421875], "tokens": [351, 442, 1459, 3457, 26, 371, 3457, 26, 30241, 876]}
{"line_number": 780, "line_type": "generated", "code": "\n\n    /**\n     * Gets the amount of savings from standard time to daylight saving time.\n     * \n     * @param instant  milliseconds from 1970-01-01T00:00:00Z to get", "entropy": 0.171875, "is_bug_line": false, "sus_score": 0.799502686333539, "per_token_entropy": [0.72216796875, 0.128173828125, 0.006317138671875, 9.334087371826172e-05, 0.61962890625, 0.1058349609375, 2.64453125, 0.05841064453125, 0.1522216796875, 0.002933502197265625, 0.9365234375, 0.9501953125, 0.0030269622802734375, 0.951171875, 0.08526611328125, 0.0006122589111328125, 0.50244140625, 0.0216827392578125, 0.56982421875, 0.021514892578125, 0.004962921142578125, 0.2196044921875, 6.330013275146484e-05, 0.004306793212890625, 0.045440673828125, 0.00449371337890625, 0.0060882568359375, 0.09356689453125, 0.00160980224609375, 0.0011053085327148438, 0.0002949237823486328, 0.0002777576446533203, 0.00020432472229003906, 3.409385681152344e-05, 0.0001881122589111328, 0.0002639293670654297, 3.612041473388672e-05, 9.417533874511719e-06, 3.898143768310547e-05, 1.6927719116210938e-05, 0.0004968643188476562, 6.854534149169922e-05, 1.4424324035644531e-05, 1.633167266845703e-05, 6.67572021484375e-06, 1.52587890625e-05, 2.7894973754882812e-05, 1.049041748046875e-05, 0.00010323524475097656, 0.00714874267578125, 0.004192352294921875, 0.058624267578125], "tokens": [446, 1022, 275, 319, 7124, 322, 5168, 432, 309, 31156, 645, 6216, 1133, 372, 5808, 2429, 17093, 1133, 32, 275, 319, 5384, 319, 477, 753, 23564, 225, 18574, 645, 225, 35, 43, 41, 34, 31, 34, 35, 31, 34, 35, 70, 34, 34, 44, 34, 34, 44, 34, 34, 76, 372, 622]}
{"line_number": 769, "line_type": "original", "code": "        if (locale == null) {", "entropy": 1.5576171875, "is_bug_line": false, "sus_score": 0.7756315349925288, "per_token_entropy": [5.7890625, 3.490234375, 0.034576416015625, 2.876953125, 0.2403564453125, 0.011260986328125, 0.006664276123046875, 0.01129913330078125], "tokens": [351, 415, 308, 6921, 610, 744, 27, 301]}
{"line_number": 769, "line_type": "generated", "code": "\n        }\n        return printOffset(getOffset(instant));\n    }\n\n    /**\n     * Gets the offset of this time zone from UTC at the specified instant.\n     * \n     * @param instant  milliseconds from 1970-01-0", "entropy": 0.1549072265625, "is_bug_line": false, "sus_score": 0.7756315349925288, "per_token_entropy": [0.306396484375, 0.269775390625, 0.12335205078125, 0.361572265625, 0.54736328125, 0.0020313262939453125, 0.00252532958984375, 0.006252288818359375, 0.0013370513916015625, 0.000823974609375, 0.00231170654296875, 0.045013427734375, 0.06982421875, 0.00084686279296875, 0.1395263671875, 0.1580810546875, 0.006786346435546875, 0.0001443624496459961, 0.358154296875, 0.09271240234375, 0.9306640625, 1.2373046875, 0.0249786376953125, 1.45703125, 0.09869384765625, 0.01149749755859375, 0.1373291015625, 0.111328125, 0.01270294189453125, 0.0212554931640625, 0.3271484375, 0.39111328125, 0.04022216796875, 0.0007195472717285156, 0.377685546875, 4.887580871582031e-05, 0.006130218505859375, 0.004428863525390625, 0.074462890625, 0.020050048828125, 0.267333984375, 0.0031414031982421875, 0.00104522705078125, 4.9948692321777344e-05, 0.0002675056457519531, 0.00010633468627929688, 0.004119873046875, 0.0001665353775024414, 3.457069396972656e-05, 6.556510925292969e-06, 3.814697265625e-05, 1.8358230590820312e-05], "tokens": [291, 320, 291, 442, 1459, 3457, 26, 371, 3457, 26, 30241, 876, 284, 320, 446, 1022, 275, 319, 7124, 322, 3401, 432, 458, 1133, 10790, 645, 17197, 821, 322, 3191, 23564, 32, 275, 319, 5384, 319, 477, 753, 23564, 225, 18574, 645, 225, 35, 43, 41, 34, 31, 34, 35, 31, 34]}
{"line_number": 772, "line_type": "original", "code": "        String nameKey = getNameKey(instant);", "entropy": 1.0654296875, "is_bug_line": false, "sus_score": 0.7756315349925288, "per_token_entropy": [5.78515625, 3.396484375, 0.97412109375, 0.2440185546875, 0.09454345703125, 0.1527099609375, 0.0005731582641601562, 0.00345611572265625, 0.005706787109375, 0.003025054931640625], "tokens": [351, 892, 636, 953, 280, 16407, 953, 26, 30241, 293]}
{"line_number": 772, "line_type": "generated", "code": "\n\n    /**\n     * Gets the offset from UTC of this datetime zone for the given instant.\n     * \n     * @param instant  milliseconds from 1970-01-01T00:00:00Z to get the", "entropy": 0.1766357421875, "is_bug_line": false, "sus_score": 0.7756315349925288, "per_token_entropy": [1.005859375, 0.2120361328125, 0.0100250244140625, 8.809566497802734e-05, 0.6044921875, 0.10400390625, 1.044921875, 0.84423828125, 0.252197265625, 0.94287109375, 0.32373046875, 0.396240234375, 0.007354736328125, 1.0126953125, 0.014678955078125, 0.6923828125, 0.09674072265625, 0.357666015625, 0.03387451171875, 0.0007691383361816406, 0.32080078125, 5.316734313964844e-05, 0.0033054351806640625, 0.0080718994140625, 0.042816162109375, 0.0158233642578125, 0.3115234375, 0.0036678314208984375, 0.0013980865478515625, 4.172325134277344e-05, 0.00025391578674316406, 0.00012934207916259766, 0.004123687744140625, 0.00023639202117919922, 3.600120544433594e-05, 6.198883056640625e-06, 3.719329833984375e-05, 1.537799835205078e-05, 3.5762786865234375e-05, 0.0003631114959716797, 4.9114227294921875e-05, 6.592273712158203e-05, 5.4001808166503906e-05, 2.0265579223632812e-06, 1.5854835510253906e-05, 0.0011529922485351562, 1.7642974853515625e-05, 0.0002789497375488281, 0.00743865966796875, 0.25390625, 0.19189453125, 0.06024169921875], "tokens": [446, 1022, 275, 319, 7124, 322, 3401, 645, 17197, 432, 458, 7138, 10790, 436, 322, 2702, 23564, 32, 275, 319, 5384, 319, 477, 753, 23564, 225, 18574, 645, 225, 35, 43, 41, 34, 31, 34, 35, 31, 34, 35, 70, 34, 34, 44, 34, 34, 44, 34, 34, 76, 372, 622, 322]}
{"line_number": 773, "line_type": "original", "code": "        if (nameKey == null) {", "entropy": 1.162109375, "is_bug_line": false, "sus_score": 0.7756315349925288, "per_token_entropy": [4.35546875, 2.662109375, 0.056884765625, 1.6435546875, 1.4189453125, 0.260498046875, 0.01554107666015625, 0.030487060546875, 0.017181396484375], "tokens": [351, 415, 308, 426, 953, 610, 744, 27, 301]}
{"line_number": 773, "line_type": "generated", "code": "\n\n    /**\n     * Gets the offset from UTC of this datetime zone for the specified\n     * instant.\n     * \n     * @param instant  milliseconds from 1970-01-01T00:00:00Z to", "entropy": 0.208740234375, "is_bug_line": false, "sus_score": 0.7756315349925288, "per_token_entropy": [1.369140625, 0.2239990234375, 0.0213470458984375, 0.0001494884490966797, 0.80908203125, 0.12005615234375, 0.92529296875, 0.74072265625, 0.275146484375, 0.98974609375, 0.3369140625, 0.343017578125, 0.0120697021484375, 0.93603515625, 0.01496124267578125, 0.759765625, 1.091796875, 3.9577484130859375e-05, 0.229248046875, 0.39306640625, 0.25927734375, 0.0012540817260742188, 0.27685546875, 6.23464584350586e-05, 0.0029850006103515625, 0.00659942626953125, 0.048675537109375, 0.01264190673828125, 0.308837890625, 0.00450897216796875, 0.0015850067138671875, 5.4001808166503906e-05, 0.00019073486328125, 0.00011515617370605469, 0.0028018951416015625, 0.00019407272338867188, 3.3855438232421875e-05, 5.125999450683594e-06, 2.7179718017578125e-05, 1.5735626220703125e-05, 3.457069396972656e-05, 0.0003228187561035156, 4.935264587402344e-05, 6.687641143798828e-05, 4.2438507080078125e-05, 1.6689300537109375e-06, 1.5020370483398438e-05, 0.0010471343994140625, 1.609325408935547e-05, 0.00034308433532714844, 0.0061798095703125, 0.32275390625], "tokens": [446, 1022, 275, 319, 7124, 322, 3401, 645, 17197, 432, 458, 7138, 10790, 436, 322, 3191, 275, 319, 23564, 32, 275, 319, 5384, 319, 477, 753, 23564, 225, 18574, 645, 225, 35, 43, 41, 34, 31, 34, 35, 31, 34, 35, 70, 34, 34, 44, 34, 34, 44, 34, 34, 76, 372]}
{"line_number": 656, "line_type": "original", "code": "        StringBuffer buf = new StringBuffer();", "entropy": 1.787109375, "is_bug_line": false, "sus_score": 0.5773502691896257, "per_token_entropy": [4.35546875, 7.05078125, 0.00624847412109375, 0.236572265625, 0.0036945343017578125, 0.0004496574401855469, 0.85791015625], "tokens": [351, 21933, 4845, 280, 537, 21933, 473]}
{"line_number": 656, "line_type": "generated", "code": "\n    private static final Map<String, String> cZoneIdConversion;\n    private static final DateTimeFormatter cOffsetFormatter;\n    private static final Map<String, String> cIdToRegion;\n    private static final Map<String, String> cId", "entropy": 0.3544921875, "is_bug_line": false, "sus_score": 0.5773502691896257, "per_token_entropy": [0.708984375, 0.4599609375, 0.6044921875, 0.318603515625, 1.1748046875, 0.1527099609375, 0.0291900634765625, 0.0005245208740234375, 0.197998046875, 0.00046515464782714844, 0.01165008544921875, 0.03472900390625, 0.0606689453125, 0.01007843017578125, 0.1749267578125, 0.1734619140625, 0.01171112060546875, 0.0086517333984375, 0.74169921875, 0.466796875, 0.0016536712646484375, 0.05401611328125, 0.00392913818359375, 0.0004036426544189453, 0.0557861328125, 0.8037109375, 0.052764892578125, 0.5302734375, 0.06121826171875, 2.251953125, 0.0133514404296875, 0.204345703125, 0.001956939697265625, 0.8271484375, 0.026519775390625, 0.018951416015625, 2.1015625, 1.3369140625, 1.7626953125, 0.434814453125, 0.37451171875, 0.0545654296875, 0.061370849609375, 0.0430908203125, 0.32177734375, 0.0020427703857421875, 0.056365966796875, 0.0001728534698486328, 0.391845703125, 0.017364501953125, 0.0014982223510742188, 1.2255859375], "tokens": [284, 945, 907, 1158, 3516, 46, 652, 30, 892, 48, 281, 6767, 606, 14350, 45, 284, 945, 907, 1158, 6666, 8736, 281, 3457, 8736, 45, 284, 945, 907, 1158, 3516, 46, 652, 30, 892, 48, 281, 606, 705, 6062, 45, 284, 945, 907, 1158, 3516, 46, 652, 30, 892, 48, 281, 606]}
{"line_number": 657, "line_type": "original", "code": "        if (offset >= 0) {", "entropy": 1.3359375, "is_bug_line": false, "sus_score": 0.5773502691896257, "per_token_entropy": [3.78515625, 2.1796875, 0.150634765625, 1.5068359375, 3.8125, 0.463134765625, 0.056427001953125, 0.054168701171875, 0.0181427001953125], "tokens": [351, 415, 308, 2881, 2377, 225, 34, 27, 301]}
{"line_number": 657, "line_type": "generated", "code": "\n    private final int iOffset;\n    private final String iDisplayName;\n    private final boolean iFixed;\n    private final boolean iStandard;\n    private final boolean iDaylight;\n\n    /**\n     * Constructor.\n     * \n     * @param id  the time", "entropy": 0.328369140625, "is_bug_line": false, "sus_score": 0.5773502691896257, "per_token_entropy": [0.54931640625, 0.1343994140625, 0.43701171875, 0.6044921875, 0.0061492919921875, 0.339599609375, 0.060211181640625, 1.29296875, 0.07476806640625, 0.58447265625, 1.40625, 0.034210205078125, 0.399658203125, 0.005859375, 0.8447265625, 0.060211181640625, 0.4658203125, 0.85693359375, 0.001373291015625, 0.85595703125, 0.0904541015625, 0.9287109375, 0.05426025390625, 0.44140625, 0.48974609375, 0.0016088485717773438, 1.2216796875, 0.1431884765625, 0.27685546875, 0.00997161865234375, 0.0760498046875, 0.056243896484375, 0.0001266002655029297, 0.1717529296875, 0.0005855560302734375, 0.00246429443359375, 1.34765625, 0.4931640625, 0.01534271240234375, 4.780292510986328e-05, 0.8212890625, 0.067626953125, 0.01418304443359375, 0.10089111328125, 0.104248046875, 0.0002677440643310547, 0.0005702972412109375, 0.0045166015625, 0.1298828125, 0.0240936279296875, 0.083251953125, 0.896484375], "tokens": [284, 945, 1158, 629, 595, 3457, 45, 284, 945, 1158, 892, 595, 12566, 45, 284, 945, 1158, 1905, 595, 8222, 45, 284, 945, 1158, 1905, 595, 8090, 45, 284, 945, 1158, 1905, 595, 6280, 2429, 45, 446, 1022, 275, 319, 12835, 32, 275, 319, 5384, 319, 477, 753, 804, 225, 322, 1133]}
{"line_number": 664, "line_type": "original", "code": "        int hours = offset / DateTimeConstants.MILLIS_PER_HOUR;", "entropy": 0.734375, "is_bug_line": false, "sus_score": 0.5773502691896257, "per_token_entropy": [2.3828125, 6.86328125, 0.830078125, 0.1627197265625, 1.4677734375, 0.1070556640625, 0.62451171875, 0.0019016265869140625, 0.0002739429473876953, 0.002422332763671875, 2.2530555725097656e-05, 2.384185791015625e-07, 4.291534423828125e-06, 1.430511474609375e-06, 0.00016224384307861328, 0.0003757476806640625, 0.04327392578125], "tokens": [351, 629, 11632, 280, 3401, 517, 6666, 5229, 32, 63, 13142, 1296, 81, 3687, 81, 30540, 45]}
{"line_number": 664, "line_type": "generated", "code": "\n    public SimpleTimeZone(String id, int rawOffset, String[] transitions) {\n        super(id, rawOffset, transitions);\n        iID = id;\n    }\n\n    /**\n     * Gets the ID of this time zone.\n     * \n     * @", "entropy": 0.32421875, "is_bug_line": false, "sus_score": 0.5773502691896257, "per_token_entropy": [0.65234375, 0.2744140625, 1.2724609375, 0.0157928466796875, 0.006328582763671875, 1.0029296875, 0.00177764892578125, 0.09490966796875, 0.042205810546875, 0.483154296875, 0.007114410400390625, 0.83154296875, 0.044189453125, 0.7197265625, 0.8369140625, 0.419921875, 0.0318603515625, 0.118408203125, 0.77685546875, 0.426025390625, 0.748046875, 0.117431640625, 0.412353515625, 4.1484832763671875e-05, 0.41015625, 0.88134765625, 0.1961669921875, 0.315185546875, 0.489501953125, 0.0020961761474609375, 0.0003409385681152344, 0.1492919921875, 0.046295166015625, 0.18505859375, 0.0008149147033691406, 0.268310546875, 0.325439453125, 0.00958251953125, 5.042552947998047e-05, 0.962890625, 0.05523681640625, 1.220703125, 0.4248046875, 1.2041015625, 0.051788330078125, 0.015716552734375, 0.048065185546875, 0.0200347900390625, 0.0170745849609375, 0.2191162109375, 2.002716064453125e-05, 0.0019817352294921875], "tokens": [284, 562, 7155, 26223, 26, 652, 804, 30, 629, 5081, 3457, 30, 892, 1178, 28088, 27, 301, 291, 2599, 26, 314, 30, 5081, 3457, 30, 28088, 293, 291, 595, 779, 280, 804, 45, 284, 320, 446, 1022, 275, 319, 7124, 322, 2484, 432, 458, 1133, 10790, 32, 275, 319, 5384, 319, 477]}
{"line_number": 665, "line_type": "original", "code": "        FormatUtils.appendPaddedInteger(buf, hours, 2);", "entropy": 1.650390625, "is_bug_line": false, "sus_score": 0.5773502691896257, "per_token_entropy": [1.146484375, 8.6640625, 0.00024211406707763672, 0.0003540515899658203, 14.3828125, 0.1121826171875, 0.0007309913635253906, 0.15966796875, 0.0655517578125, 0.281982421875, 0.01103973388671875, 1.48828125, 0.0401611328125, 0.00826263427734375, 0.015045166015625, 0.0291900634765625], "tokens": [351, 10276, 2755, 32, 1689, 66, 11043, 3061, 26, 1954, 30, 11632, 30, 225, 36, 293]}
{"line_number": 665, "line_type": "generated", "code": "\n        if (id == null) {\n            throw new IllegalArgumentException(\"The id must not be null\");\n        }\n        iID = id;\n    }\n\n    /**\n     * Gets the unique id of the time zone.\n     * \n     * @return the id,", "entropy": 0.206787109375, "is_bug_line": false, "sus_score": 0.5773502691896257, "per_token_entropy": [0.69921875, 0.95458984375, 0.017730712890625, 0.0138397216796875, 0.024169921875, 0.0005435943603515625, 0.02587890625, 0.001956939697265625, 0.01413726806640625, 0.00884246826171875, 0.001079559326171875, 0.005832672119140625, 0.138916015625, 0.365478515625, 0.306396484375, 0.1019287109375, 0.0010366439819335938, 3.266334533691406e-05, 0.00559234619140625, 0.0108642578125, 0.00980377197265625, 0.00021851062774658203, 0.2095947265625, 0.1597900390625, 0.002651214599609375, 0.0003190040588378906, 0.00673675537109375, 0.07275390625, 0.1463623046875, 0.0012102127075195312, 0.2266845703125, 0.317138671875, 0.0026607513427734375, 5.91278076171875e-05, 0.4580078125, 0.10211181640625, 1.0751953125, 1.923828125, 0.1817626953125, 0.452880859375, 0.021514892578125, 0.301025390625, 0.1873779296875, 0.033599853515625, 0.002941131591796875, 0.3349609375, 3.6835670471191406e-05, 0.0017299652099609375, 0.0015306472778320312, 0.08636474609375, 1.25390625, 0.480224609375], "tokens": [291, 415, 308, 314, 610, 744, 27, 301, 324, 1422, 537, 12137, 440, 1318, 804, 2298, 646, 526, 744, 724, 291, 320, 291, 595, 779, 280, 804, 45, 284, 320, 446, 1022, 275, 319, 7124, 322, 5799, 804, 432, 322, 1133, 10790, 32, 275, 319, 5384, 319, 477, 601, 322, 804, 30]}
{"line_number": 666, "line_type": "original", "code": "        offset -= hours * (int) DateTimeConstants.MILLIS_PER_HOUR;", "entropy": 1.7138671875, "is_bug_line": false, "sus_score": 0.5773502691896257, "per_token_entropy": [2.607421875, 12.171875, 6.1640625, 3.740234375, 0.044525146484375, 4.49609375, 2.76171875, 0.014434814453125, 0.356689453125, 0.006404876708984375, 0.0018053054809570312, 0.0290985107421875, 5.984306335449219e-05, 1.1920928955078125e-07, 3.0040740966796875e-05, 2.1338462829589844e-05, 9.620189666748047e-05, 0.0007777214050292969, 0.1734619140625], "tokens": [351, 3401, 5912, 11632, 319, 308, 410, 27, 6666, 5229, 32, 63, 13142, 1296, 81, 3687, 81, 30540, 45]}
{"line_number": 666, "line_type": "generated", "code": "\n        }\n        iID = id;\n    }\n\n    /**\n     * Gets the unique time zone id of this time zone.\n     * \n     * @return the time zone id, never null\n     */\n    public StringgetID() {\n        return iID;\n   ", "entropy": 0.1990966796875, "is_bug_line": false, "sus_score": 0.5773502691896257, "per_token_entropy": [1.1005859375, 0.01081085205078125, 0.1732177734375, 0.3173828125, 0.0013761520385742188, 0.00023436546325683594, 0.00768280029296875, 0.08660888671875, 0.110107421875, 0.00028252601623535156, 0.189208984375, 0.34423828125, 0.0027141571044921875, 7.128715515136719e-05, 0.42822265625, 0.107666015625, 1.244140625, 1.330078125, 0.0018138885498046875, 0.6259765625, 0.62255859375, 0.171142578125, 0.0919189453125, 0.005279541015625, 0.056884765625, 0.0291748046875, 0.0028076171875, 0.373291015625, 5.173683166503906e-05, 0.0020427703857421875, 0.0020313262939453125, 0.12939453125, 0.69677734375, 0.00411224365234375, 0.09503173828125, 0.53759765625, 0.1904296875, 0.0295257568359375, 0.010650634765625, 0.0255279541015625, 0.0112152099609375, 0.03485107421875, 0.096435546875, 0.99169921875, 0.0178070068359375, 0.0003590583801269531, 0.028778076171875, 0.001068115234375, 0.0005564689636230469, 7.43865966796875e-05, 0.0010709762573242188, 0.005924224853515625], "tokens": [291, 320, 291, 595, 779, 280, 804, 45, 284, 320, 446, 1022, 275, 319, 7124, 322, 5799, 1133, 10790, 804, 432, 458, 1133, 10790, 32, 275, 319, 5384, 319, 477, 601, 322, 1133, 10790, 804, 30, 7152, 744, 275, 569, 284, 562, 892, 37575, 346, 301, 291, 442, 595, 779, 45, 284]}
{"line_number": 668, "line_type": "original", "code": "        int minutes = offset / DateTimeConstants.MILLIS_PER_MINUTE;", "entropy": 0.69189453125, "is_bug_line": false, "sus_score": 0.5773502691896257, "per_token_entropy": [1.71875, 3.3671875, 4.4140625, 0.09521484375, 1.45703125, 0.1949462890625, 0.403076171875, 0.005207061767578125, 0.00027441978454589844, 0.01354217529296875, 1.633167266845703e-05, 1.1920928955078125e-07, 7.3909759521484375e-06, 2.86102294921875e-06, 0.0001964569091796875, 0.01042938232421875, 0.08721923828125], "tokens": [351, 629, 10135, 280, 3401, 517, 6666, 5229, 32, 63, 13142, 1296, 81, 3687, 81, 47229, 45]}
{"line_number": 668, "line_type": "generated", "code": "\n        iID = id;\n    }\n\n    /**\n     * Gets the ID of the time zone.\n     * \n     * @return the time zone id\n     */\n    public StringgetID() {\n        return iID;\n    }\n\n    /**\n     * Gets the time", "entropy": 0.21142578125, "is_bug_line": false, "sus_score": 0.5773502691896257, "per_token_entropy": [0.343994140625, 0.701171875, 0.0135040283203125, 0.0009007453918457031, 0.029876708984375, 0.040985107421875, 0.152099609375, 0.0007038116455078125, 0.2227783203125, 0.302978515625, 0.0031719207763671875, 6.67572021484375e-05, 0.39111328125, 0.1181640625, 1.771484375, 0.185302734375, 0.3623046875, 0.044158935546875, 0.4921875, 0.202392578125, 0.034393310546875, 0.0046234130859375, 0.312744140625, 3.743171691894531e-05, 0.0018138885498046875, 0.0012454986572265625, 0.04302978515625, 0.6142578125, 0.0078125, 0.2626953125, 0.94921875, 0.018463134765625, 0.00530242919921875, 0.044281005859375, 0.1221923828125, 1.2705078125, 0.01910400390625, 0.0005040168762207031, 0.01514434814453125, 0.0011882781982421875, 0.0011854171752929688, 0.00012624263763427734, 0.0020656585693359375, 0.0084991455078125, 0.0001672506332397461, 0.228515625, 0.1165771484375, 0.003856658935546875, 9.334087371826172e-05, 0.468994140625, 0.13818359375, 0.9189453125], "tokens": [291, 595, 779, 280, 804, 45, 284, 320, 446, 1022, 275, 319, 7124, 322, 2484, 432, 322, 1133, 10790, 32, 275, 319, 5384, 319, 477, 601, 322, 1133, 10790, 804, 275, 569, 284, 562, 892, 37575, 346, 301, 291, 442, 595, 779, 45, 284, 320, 446, 1022, 275, 319, 7124, 322, 1133]}
{"line_number": 669, "line_type": "original", "code": "        buf.append(':');", "entropy": 3.103515625, "is_bug_line": false, "sus_score": 0.5773502691896257, "per_token_entropy": [2.162109375, 11.09375, 0.349365234375, 0.098876953125, 4.78515625, 0.13330078125], "tokens": [351, 4845, 32, 1689, 16487, 895]}
{"line_number": 669, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Gets the unique ID of the time-zone.\n     * <p>\n     * This method defines the abstract time-zone ID as specified by RFC 822,\n     * used for the <code>TZ</code", "entropy": 0.483154296875, "is_bug_line": false, "sus_score": 0.5773502691896257, "per_token_entropy": [0.67333984375, 0.0164947509765625, 0.2178955078125, 0.34375, 0.004322052001953125, 8.082389831542969e-05, 0.43994140625, 0.1107177734375, 1.2529296875, 0.8583984375, 0.186279296875, 0.313232421875, 0.0280303955078125, 0.97412109375, 7.176399230957031e-05, 0.240234375, 0.0501708984375, 0.0038967132568359375, 1.310546875, 0.003108978271484375, 0.0004906654357910156, 0.0005307197570800781, 8.26120376586914e-05, 0.85546875, 0.80078125, 2.263671875, 0.02655029296875, 1.689453125, 1.337890625, 0.346923828125, 0.0006222724914550781, 0.219970703125, 2.05078125, 0.9951171875, 0.06573486328125, 0.8828125, 0.4541015625, 0.5986328125, 0.0008611679077148438, 0.0008473396301269531, 0.493408203125, 0.060760498046875, 5.614757537841797e-05, 1.0986328125, 1.091796875, 0.89404296875, 0.76025390625, 0.10333251953125, 0.033355712890625, 0.97021484375, 0.0026836395263671875, 5.7578086853027344e-05], "tokens": [284, 320, 446, 1022, 275, 319, 7124, 322, 5799, 2484, 432, 322, 1133, 31, 5634, 32, 275, 319, 333, 98, 48, 275, 319, 1348, 1411, 12706, 322, 5547, 1133, 31, 5634, 2484, 619, 3191, 810, 21627, 225, 42, 36, 36, 30, 275, 319, 1654, 436, 322, 333, 687, 48, 19508, 377, 687]}
{"line_number": 670, "line_type": "original", "code": "        FormatUtils.appendPaddedInteger(buf, minutes, 2);", "entropy": 0.93115234375, "is_bug_line": false, "sus_score": 0.5773502691896257, "per_token_entropy": [4.15234375, 8.0234375, 0.0180511474609375, 0.01204681396484375, 0.3955078125, 0.10198974609375, 0.0008349418640136719, 0.01522064208984375, 0.042083740234375, 0.0938720703125, 0.0029163360595703125, 2.005859375, 0.018768310546875, 0.0027313232421875, 0.0032444000244140625, 0.00821685791015625], "tokens": [351, 10276, 2755, 32, 1689, 66, 11043, 3061, 26, 1954, 30, 10135, 30, 225, 36, 293]}
{"line_number": 670, "line_type": "generated", "code": "\n    /**\n     * Gets the id of this time zone.\n     * \n     * @return the time zone id, never null\n     */\n    public String getID() {\n        return iID;\n    }\n\n    /**\n     * Gets the time zone with the given", "entropy": 0.2430419921875, "is_bug_line": false, "sus_score": 0.5773502691896257, "per_token_entropy": [0.86962890625, 0.498779296875, 0.059051513671875, 0.00012373924255371094, 0.79150390625, 0.1607666015625, 1.421875, 0.130859375, 1.0068359375, 0.09686279296875, 0.1536865234375, 0.1148681640625, 0.029693603515625, 0.007152557373046875, 0.323974609375, 4.506111145019531e-05, 0.00241851806640625, 0.0012760162353515625, 0.044647216796875, 0.658203125, 0.00611114501953125, 0.017486572265625, 0.5673828125, 0.10577392578125, 0.031646728515625, 0.00959014892578125, 0.019622802734375, 0.00429534912109375, 0.03460693359375, 0.1304931640625, 0.50390625, 6.186962127685547e-05, 0.0014629364013671875, 0.0008282661437988281, 0.01506805419921875, 0.0020599365234375, 0.0017595291137695312, 0.00021278858184814453, 0.0007963180541992188, 0.011993408203125, 0.00020051002502441406, 0.43212890625, 0.139892578125, 0.004566192626953125, 8.845329284667969e-05, 0.430908203125, 0.133544921875, 0.83251953125, 0.5791015625, 1.8984375, 0.0208740234375, 0.33251953125], "tokens": [284, 1022, 275, 319, 7124, 322, 804, 432, 458, 1133, 10790, 32, 275, 319, 5384, 319, 477, 601, 322, 1133, 10790, 804, 30, 7152, 744, 275, 569, 284, 562, 892, 622, 779, 346, 301, 291, 442, 595, 779, 45, 284, 320, 446, 1022, 275, 319, 7124, 322, 1133, 10790, 623, 322, 2702]}
{"line_number": 671, "line_type": "original", "code": "        offset -= minutes * DateTimeConstants.MILLIS_PER_MINUTE;", "entropy": 1.4189453125, "is_bug_line": false, "sus_score": 0.5773502691896257, "per_token_entropy": [4.19921875, 7.55859375, 6.3671875, 4.0625, 0.006900787353515625, 0.44580078125, 0.01113128662109375, 0.0002340078353881836, 0.01318359375, 4.887580871582031e-06, -0.0, 1.8358230590820312e-05, 5.9604644775390625e-06, 0.0001569986343383789, 0.0015153884887695312, 0.035125732421875], "tokens": [351, 3401, 5912, 10135, 319, 6666, 5229, 32, 63, 13142, 1296, 81, 3687, 81, 47229, 45]}
{"line_number": 671, "line_type": "generated", "code": "    /**\n     * Gets the unique ID of the time zone.\n     * \n     * @return the time zone unique id, never null\n     */\n    public String getID() {\n        return iID;\n    }", "entropy": 0.28076171875, "is_bug_line": false, "sus_score": 0.5773502691896257, "per_token_entropy": [1.1201171875, 0.58251953125, 0.216796875, 0.00026345252990722656, 0.73974609375, 0.1619873046875, 1.60546875, 0.87255859375, 0.1754150390625, 0.326904296875, 0.03466796875, 0.27392578125, 0.1954345703125, 0.046173095703125, 0.005489349365234375, 0.56298828125, 5.733966827392578e-05, 0.0039825439453125, 0.0018148422241210938, 0.0777587890625, 1.0576171875, 0.0085601806640625, 0.77978515625, 1.7080078125, 0.356689453125, 0.32958984375, 0.05120849609375, 0.01427459716796875, 0.0267333984375, 0.00841522216796875, 0.036041259765625, 0.1329345703125, 0.51318359375, 3.981590270996094e-05, 0.0014209747314453125, 0.0007185935974121094, 0.0159759521484375, 0.002208709716796875, 0.0015659332275390625, 0.00023305416107177734, 0.0011377334594726562, 0.01788330078125, 8.475780487060547e-05], "tokens": [264, 1022, 275, 319, 7124, 322, 5799, 2484, 432, 322, 1133, 10790, 32, 275, 319, 5384, 319, 477, 601, 322, 1133, 10790, 5799, 804, 30, 7152, 744, 275, 569, 284, 562, 892, 622, 779, 346, 301, 291, 442, 595, 779, 45, 284, 320]}
{"line_number": 672, "line_type": "original", "code": "        if (offset == 0) {", "entropy": 1.1435546875, "is_bug_line": false, "sus_score": 0.5773502691896257, "per_token_entropy": [3.10546875, 2.75390625, 0.10845947265625, 2.56640625, 0.8115234375, 0.7109375, 0.010406494140625, 0.1805419921875, 0.039703369140625], "tokens": [351, 415, 308, 2881, 610, 225, 34, 27, 301]}
{"line_number": 672, "line_type": "generated", "code": "\n    /**\n     * Gets the id of the time-zone.\n     * <p>\n     * The ID uniquely identifies the time-zone within a given\n     * {@link DateTimeZoneRepository}.\n     * \n     * @return the time-zone unique id,", "entropy": 0.352783203125, "is_bug_line": false, "sus_score": 0.5773502691896257, "per_token_entropy": [0.74609375, 0.5859375, 0.057464599609375, 8.916854858398438e-05, 0.34912109375, 0.1165771484375, 1.48828125, 0.0882568359375, 0.57275390625, 0.048095703125, 0.90771484375, 0.0001138448715209961, 0.298583984375, 0.046234130859375, 0.00612640380859375, 1.162109375, 0.002620697021484375, 0.0004911422729492188, 0.0007090568542480469, 0.00010120868682861328, 0.89599609375, 1.0322265625, 0.234130859375, 0.151123046875, 0.4697265625, 0.1976318359375, 0.12371826171875, 0.00034928321838378906, 0.1805419921875, 1.0693359375, 0.420654296875, 1.0791015625, 4.57763671875e-05, 1.08984375, 0.0057220458984375, 0.6357421875, 0.0004968643188476562, 0.2486572265625, 0.328369140625, 0.388427734375, 0.00612640380859375, 0.1866455078125, 4.839897155761719e-05, 0.0012531280517578125, 0.004817962646484375, 0.048858642578125, 0.70068359375, 0.156494140625, 0.00046443939208984375, 1.388671875, 0.45947265625, 0.361083984375], "tokens": [284, 1022, 275, 319, 7124, 322, 804, 432, 322, 1133, 31, 5634, 32, 275, 319, 333, 98, 48, 275, 319, 886, 2484, 43699, 32592, 322, 1133, 31, 5634, 4797, 312, 2702, 275, 319, 3088, 1204, 6666, 6767, 3216, 4009, 275, 319, 5384, 319, 477, 601, 322, 1133, 31, 5634, 5799, 804, 30]}
{"line_number": 673, "line_type": "original", "code": "            return buf.toString();", "entropy": 3.345703125, "is_bug_line": false, "sus_score": 0.5773502691896257, "per_token_entropy": [7.484375, 2.62109375, 9.8984375, 0.0305328369140625, 0.0258026123046875, 0.0186614990234375], "tokens": [1468, 442, 4845, 32, 3108, 473]}
{"line_number": 673, "line_type": "generated", "code": "    /**\n     * Gets the ID of the time-zone.\n     * <p>\n     * The ID uniquely identifies the time-zone within the system.\n     * \n     * @return the time-zone unique ID, never null\n     */\n    public String", "entropy": 0.282958984375, "is_bug_line": false, "sus_score": 0.5773502691896257, "per_token_entropy": [2.07421875, 0.53271484375, 0.11474609375, 0.0004723072052001953, 0.2841796875, 0.09149169921875, 1.60546875, 0.10711669921875, 0.411865234375, 0.04132080078125, 0.7333984375, 0.0001004934310913086, 0.2529296875, 0.048828125, 0.00540924072265625, 0.93701171875, 0.0024471282958984375, 0.00041413307189941406, 0.0008058547973632812, 0.00010776519775390625, 0.92333984375, 0.05572509765625, 0.1708984375, 0.1112060546875, 0.525390625, 0.1494140625, 0.08538818359375, 0.00029468536376953125, 0.1903076171875, 0.84619140625, 0.5, 0.06256103515625, 0.3359375, 0.00356292724609375, 0.34228515625, 3.3736228942871094e-05, 0.0010900497436523438, 0.003856658935546875, 0.04736328125, 0.60986328125, 0.1412353515625, 0.00028705596923828125, 0.69775390625, 0.467529296875, 0.373046875, 0.52734375, 0.06658935546875, 0.01093292236328125, 0.0263214111328125, 0.01690673828125, 0.0310821533203125, 0.146484375], "tokens": [264, 1022, 275, 319, 7124, 322, 2484, 432, 322, 1133, 31, 5634, 32, 275, 319, 333, 98, 48, 275, 319, 886, 2484, 43699, 32592, 322, 1133, 31, 5634, 4797, 322, 2664, 32, 275, 319, 5384, 319, 477, 601, 322, 1133, 31, 5634, 5799, 2484, 30, 7152, 744, 275, 569, 284, 562, 892]}
{"line_number": 658, "line_type": "original", "code": "            buf.append('+');", "entropy": 2.96875, "is_bug_line": false, "sus_score": 0.5186535359109834, "per_token_entropy": [7.375, 6.9609375, 0.07562255859375, 0.0595703125, 3.2421875, 0.0994873046875], "tokens": [1468, 4845, 32, 1689, 37984, 895]}
{"line_number": 658, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5186535359109834, "per_token_entropy": [], "tokens": []}
{"line_number": 816, "line_type": "original", "code": "        String name = cNameProvider.getName(locale, iID, nameKey);", "entropy": 0.791015625, "is_bug_line": false, "sus_score": 0.38569460791993504, "per_token_entropy": [3.390625, 6.28125, 1.6591796875, 0.54296875, 0.529296875, 0.0286407470703125, 0.00533294677734375, 0.00403594970703125, 1.0830078125, 0.086669921875, 0.2080078125, 0.0058441162109375, 0.08404541015625, 0.039703369140625, 0.047393798828125, 0.216552734375, 0.0013294219970703125, 0.024810791015625], "tokens": [351, 892, 636, 280, 281, 558, 2570, 32, 5165, 26, 6921, 30, 595, 779, 30, 636, 953, 293]}
{"line_number": 816, "line_type": "generated", "code": "\n     */\n    public boolean isStandardOffset(long instant) {\n        return getOffset(instant) == getStandardOffset(instant);\n    }\n\n    /**\n     * Checks whether, at a particular instant, the offset is standard or not.\n     * <p", "entropy": 0.0980224609375, "is_bug_line": false, "sus_score": 0.38569460791993504, "per_token_entropy": [1.2109375, 0.10589599609375, 0.0242919921875, 0.01100921630859375, 0.54443359375, 0.00019824504852294922, 0.0153350830078125, 0.00037741661071777344, 0.0001627206802368164, 0.00310516357421875, 0.00018405914306640625, 0.0005459785461425781, 0.0035991668701171875, 0.19775390625, 0.07958984375, 0.4072265625, 0.049041748046875, 0.0003383159637451172, 0.00017261505126953125, 0.0002149343490600586, 0.0009660720825195312, 0.0008587837219238281, 0.00014853477478027344, 6.67572021484375e-06, 0.0001971721649169922, 0.0003333091735839844, 0.0017452239990234375, 0.09783935546875, 0.00020611286163330078, 0.11895751953125, 0.0302734375, 0.002544403076171875, 5.519390106201172e-05, 1.3935546875, 0.039337158203125, 0.09796142578125, 0.0291748046875, 0.045654296875, 0.0080108642578125, 0.00597381591796875, 0.005237579345703125, 0.0758056640625, 0.01178741455078125, 0.031005859375, 0.30224609375, 0.0067138671875, 0.0071258544921875, 0.0096435546875, 0.0015325546264648438, 2.4080276489257812e-05, 0.1182861328125, 4.0650367736816406e-05], "tokens": [275, 569, 284, 562, 1905, 438, 8090, 3457, 26, 3222, 23564, 27, 301, 291, 442, 622, 3457, 26, 30241, 27, 610, 622, 8090, 3457, 26, 30241, 293, 284, 320, 446, 1022, 275, 319, 17279, 4946, 30, 821, 312, 8409, 23564, 30, 322, 3401, 438, 6216, 556, 646, 32, 275, 319, 333, 98]}
{"line_number": 817, "line_type": "original", "code": "        if (name != null) {", "entropy": 1.8125, "is_bug_line": false, "sus_score": 0.38569460791993504, "per_token_entropy": [3.638671875, 2.4140625, 0.07489013671875, 6.63671875, 1.47265625, 0.011474609375, 0.060333251953125, 0.1934814453125], "tokens": [351, 415, 308, 426, 863, 744, 27, 301]}
{"line_number": 817, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Checks whether, at a particular instant, the offset is standard or not.\n     * <p>\n     * This method can be used to determine whether Summer Time (DST) applies.\n     * As a general rule, if", "entropy": 0.104248046875, "is_bug_line": false, "sus_score": 0.38569460791993504, "per_token_entropy": [1.0517578125, 0.673828125, 0.168212890625, 0.0887451171875, 0.01334381103515625, 0.0001055002212524414, 1.6513671875, 0.12060546875, 0.1754150390625, 0.030670166015625, 0.027557373046875, 0.00792694091796875, 0.006816864013671875, 0.004062652587890625, 0.1339111328125, 0.0194854736328125, 0.05194091796875, 1.0029296875, 0.0115966796875, 0.01457977294921875, 0.0264129638671875, 0.001689910888671875, 4.601478576660156e-05, 0.0968017578125, 4.4226646423339844e-05, 4.57763671875e-05, 0.0002703666687011719, 2.8133392333984375e-05, 0.017822265625, 0.00141143798828125, 0.007274627685546875, 0.00015354156494140625, 3.695487976074219e-05, 5.8770179748535156e-05, 0.0001785755157470703, 0.00015246868133544922, 0.00527191162109375, 1.9073486328125e-06, 7.450580596923828e-05, 0.0002205371856689453, 0.00031876564025878906, 3.552436828613281e-05, 0.00037598609924316406, 0.0005965232849121094, 0.0015716552734375, 3.8504600524902344e-05, 0.007160186767578125, 1.4901161193847656e-05, 1.239776611328125e-05, 3.4570693969726562e-06, 1.1920928955078125e-05, 4.947185516357422e-05], "tokens": [284, 320, 446, 1022, 275, 319, 17279, 4946, 30, 821, 312, 8409, 23564, 30, 322, 3401, 438, 6216, 556, 646, 32, 275, 319, 333, 98, 48, 275, 319, 1348, 1411, 883, 526, 1654, 372, 9921, 4946, 10720, 2302, 3717, 308, 28635, 27, 16642, 32, 275, 319, 2894, 312, 8074, 5750, 30, 415]}
{"line_number": 820, "line_type": "original", "code": "        return printOffset(getOffset(instant));", "entropy": 1.361328125, "is_bug_line": false, "sus_score": 0.38569460791993504, "per_token_entropy": [6.31640625, 0.80712890625, 5.91796875, 0.01824951171875, 0.024322509765625, 0.1591796875, 0.1600341796875, 0.01033782958984375, 0.02593994140625, 0.1669921875], "tokens": [351, 442, 1459, 3457, 26, 371, 3457, 26, 30241, 876]}
{"line_number": 820, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Gets the daylight savings offset to add to UTC to get local time, when\n     * daylight savings time is in effect.\n     * \n     * @param instant  milliseconds from 1970-01", "entropy": 0.10284423828125, "is_bug_line": false, "sus_score": 0.38569460791993504, "per_token_entropy": [0.1142578125, 0.033843994140625, 0.11883544921875, 0.040863037109375, 0.00453948974609375, 4.2557716369628906e-05, 0.728515625, 0.055572509765625, 1.07421875, 0.0012140274047851562, 0.247314453125, 1.71661376953125e-05, 0.50390625, 0.127197265625, 0.002777099609375, 0.00026488304138183594, 0.011993408203125, 0.00649261474609375, 0.0009646415710449219, 0.0026988983154296875, 0.005313873291015625, 0.11358642578125, 1.2734375, 0.035430908203125, 1.3113021850585938e-05, 0.040130615234375, 5.316734313964844e-05, 0.0288238525390625, 3.337860107421875e-06, 0.373291015625, 0.0037479400634765625, 0.0014028549194335938, 0.0006747245788574219, 0.003322601318359375, 0.139404296875, 0.0001461505889892578, 0.234130859375, 1.3232231140136719e-05, 0.0017518997192382812, 0.0034961700439453125, 0.0008673667907714844, 0.0012359619140625, 0.01216888427734375, 0.0004506111145019531, 4.2557716369628906e-05, 7.3909759521484375e-06, 5.125999450683594e-06, 6.508827209472656e-05, 1.811981201171875e-05, 6.377696990966797e-05, 0.00017249584197998047, 3.2186508178710938e-06], "tokens": [284, 320, 446, 1022, 275, 319, 7124, 322, 5808, 2429, 309, 31156, 3401, 372, 1015, 372, 17197, 372, 622, 2196, 1133, 30, 1412, 275, 319, 5808, 2429, 309, 31156, 1133, 438, 328, 5744, 32, 275, 319, 5384, 319, 477, 753, 23564, 225, 18574, 645, 225, 35, 43, 41, 34, 31, 34, 35]}
