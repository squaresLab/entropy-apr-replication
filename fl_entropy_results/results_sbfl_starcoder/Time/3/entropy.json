{"line_number": 785, "line_type": "original", "code": "            setMillis(getChronology().hours().add(getMillis(), hours));", "entropy": 1.06640625, "is_bug_line": true, "sus_score": 0.44543540318737396, "per_token_entropy": [7.98046875, 1.4892578125, 0.41943359375, 0.0225982666015625, 0.038116455078125, 0.004238128662109375, 8.893013000488281e-05, 0.00027751922607421875, 0.003841400146484375, 8.09375, 0.01396942138671875, 0.77294921875, 0.01218414306640625, 0.029571533203125, 0.0007367134094238281, 0.0083160400390625, 0.23876953125, 0.053497314453125], "tokens": [1468, 739, 10906, 26, 371, 828, 2558, 10537, 922, 14991, 922, 669, 26, 371, 10906, 1026, 11632, 876]}
{"line_number": 785, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Add a number of seconds to the date.\n     *\n     * @param seconds  the seconds to add\n     * @throws IllegalArgumentException if the value is invalid\n     */\n    public void addSeconds(final int seconds) {\n            set", "entropy": 0.03680419921875, "is_bug_line": true, "sus_score": 0.44543540318737396, "per_token_entropy": [0.441162109375, 0.0771484375, 0.480224609375, 0.039947509765625, 0.0052032470703125, 0.00032520294189453125, 0.1405029296875, 0.002376556396484375, 0.0007548332214355469, 8.213520050048828e-05, 0.026336669921875, 8.273124694824219e-05, 0.0014429092407226562, 0.001964569091796875, 0.00406646728515625, 0.020050048828125, 0.0001780986785888672, 0.0181732177734375, 0.0001659393310546875, 0.00018715858459472656, 0.0001379251480102539, 0.0033893585205078125, 0.0018758773803710938, 0.00012886524200439453, 0.01177215576171875, 9.918212890625e-05, 0.000118255615234375, 0.0645751953125, 0.004730224609375, 6.198883056640625e-05, 0.0013589859008789062, 0.0004916191101074219, 9.620189666748047e-05, 3.7789344787597656e-05, 0.00022280216217041016, 0.0001685619354248047, 0.00012004375457763672, 0.1297607421875, 0.0024929046630859375, 0.01453399658203125, 0.0008635520935058594, 0.0002760887145996094, 0.00015413761138916016, 0.0006465911865234375, 0.0001348257064819336, 0.00353240966796875, 0.0014781951904296875, 0.0001360177993774414, 0.00018143653869628906, 0.001766204833984375, 0.40087890625, 0.00753021240234375], "tokens": [284, 320, 446, 1022, 275, 319, 2222, 312, 1451, 432, 6791, 372, 322, 2340, 32, 275, 319, 275, 319, 477, 753, 6791, 225, 322, 6791, 372, 1015, 275, 319, 477, 5117, 12137, 415, 322, 786, 438, 5535, 275, 569, 284, 562, 763, 1015, 9023, 26, 3220, 629, 6791, 27, 301, 324, 739]}
{"line_number": 786, "line_type": "original", "code": "    }", "entropy": 3.88671875, "is_bug_line": false, "sus_score": 0.44543540318737396, "per_token_entropy": [4.96875, 2.802734375], "tokens": [264, 320]}
{"line_number": 786, "line_type": "generated", "code": "\n    \n    //-----------------------------------------------------------------------\n    /**\n     * Set the millis of the day to the specified value.\n     *\n     * @param millisOfDay  the millis of day\n     * @throws IllegalArgumentException if the value is invalid\n     */\n    public void setMillisOfDay(final int", "entropy": 0.0689697265625, "is_bug_line": false, "sus_score": 0.44543540318737396, "per_token_entropy": [1.5625, 0.7109375, 0.0016164779663085938, 0.036041259765625, 0.019744873046875, 0.01387786865234375, 0.00013363361358642578, 0.08331298828125, 0.0228729248046875, 0.0826416015625, 0.0024242401123046875, 0.0208587646484375, 0.1396484375, 0.01248931884765625, 0.0014190673828125, 0.0002980232238769531, 0.00040841102600097656, 0.0018138885498046875, 0.0035686492919921875, 0.0001176595687866211, 0.0142364501953125, 1.5854835510253906e-05, 0.00032448768615722656, 0.000560760498046875, 0.0005354881286621094, 0.062744140625, 0.004146575927734375, 0.0005426406860351562, 0.2244873046875, 0.0030422210693359375, 0.004058837890625, 0.009918212890625, 0.05010986328125, 6.818771362304688e-05, 0.005252838134765625, 0.0002377033233642578, 0.0001609325408935547, 7.522106170654297e-05, 0.0004379749298095703, 0.0016994476318359375, 0.00022518634796142578, 0.020782470703125, 0.01357269287109375, 0.088134765625, 0.003307342529296875, 0.0007710456848144531, 0.00034046173095703125, 4.0650367736816406e-05, 0.0001652240753173828, 0.00015103816986083984, 0.003482818603515625, 0.35791015625], "tokens": [2170, 434, 42510, 284, 1022, 275, 319, 1756, 322, 42302, 432, 322, 5808, 372, 322, 3191, 786, 32, 275, 319, 275, 319, 477, 753, 42302, 38119, 225, 322, 42302, 432, 5808, 275, 319, 477, 5117, 12137, 415, 322, 786, 438, 5535, 275, 569, 284, 562, 763, 739, 10906, 38119, 26, 3220, 629]}
{"line_number": 351, "line_type": "original", "code": "        super(year, monthOfYear, dayOfMonth,", "entropy": 1.1474609375, "is_bug_line": false, "sus_score": 0.20998026278290402, "per_token_entropy": [5.06640625, 4.74609375, 2.056640625, 0.66796875, 0.01454925537109375, 0.00762176513671875, 0.00696563720703125, 0.0018415451049804688, 0.005771636962890625, 0.00189208984375, 0.03973388671875], "tokens": [351, 2599, 26, 4548, 30, 6811, 45945, 30, 5808, 38369, 30]}
{"line_number": 351, "line_type": "generated", "code": "\n\n    //-----------------------------------------------------------------------\n    /**\n     * Rounds this instant to the lowest whole unit of this instant's field.\n     * <p>\n     * For example, rounding to the nearest hour in the hour field.\n     * <p>\n     * If the field", "entropy": 0.439697265625, "is_bug_line": false, "sus_score": 0.20998026278290402, "per_token_entropy": [0.724609375, 1.1025390625, 0.0026531219482421875, 0.0198974609375, 0.0899658203125, 0.00963592529296875, 4.2319297790527344e-05, 2.09765625, 0.06097412109375, 0.75927734375, 0.4755859375, 0.34375, 0.038116455078125, 0.210205078125, 0.012451171875, 0.205810546875, 0.0182342529296875, 1.658203125, 0.1318359375, 0.74267578125, 0.46923828125, 0.319091796875, 0.04705810546875, 0.0075225830078125, 1.3779296875, 0.0041961669921875, 0.0008487701416015625, 0.0007114410400390625, 2.5987625122070312e-05, 0.3193359375, 0.0010232925415039062, 0.0008864402770996094, 0.316650390625, 1.3310546875, 0.01216888427734375, 0.32421875, 0.2376708984375, 1.0966796875, 0.446044921875, 0.9765625, 1.546875, 1.279296875, 0.033477783203125, 0.0241851806640625, 1.1142578125, 0.11358642578125, 0.000263214111328125, 0.0032024383544921875, 0.0001112222671508789, 1.978515625, 0.425537109375, 0.347412109375], "tokens": [446, 434, 42510, 284, 1022, 275, 319, 23015, 101, 458, 23564, 372, 322, 25624, 9844, 4201, 432, 458, 23564, 1182, 1600, 32, 275, 319, 333, 98, 48, 275, 319, 2616, 2280, 30, 35396, 372, 322, 24560, 12021, 328, 322, 12021, 1600, 32, 275, 319, 333, 98, 48, 275, 319, 1670, 322, 1600]}
{"line_number": 353, "line_type": "original", "code": "    }", "entropy": 2.58203125, "is_bug_line": false, "sus_score": 0.20998026278290402, "per_token_entropy": [4.6328125, 0.529296875], "tokens": [264, 320]}
{"line_number": 353, "line_type": "generated", "code": "\n\n    /**\n     * Set the field and rounding mode to be used when rounding this instant.\n     * \n     * @param roundingField  the field to use, or null to disable\n     * @param roundingMode  the rounding mode to use, or ROUND", "entropy": 0.34423828125, "is_bug_line": false, "sus_score": 0.20998026278290402, "per_token_entropy": [0.350341796875, 0.533203125, 0.0023746490478515625, 8.285045623779297e-05, 1.990234375, 0.08221435546875, 0.7314453125, 1.4423828125, 0.02996826171875, 0.037689208984375, 0.18505859375, 0.386474609375, 0.08245849609375, 0.480712890625, 0.05084228515625, 0.52001953125, 0.046661376953125, 0.0848388671875, 0.0279083251953125, 0.0014133453369140625, 1.01171875, 1.52587890625e-05, 0.00739288330078125, 0.01061248779296875, 1.41015625, 0.0005955696105957031, 0.167236328125, 0.31640625, 0.4609375, 0.2724609375, 1.560546875, 1.0048828125, 1.0830078125, 0.06402587890625, 0.498046875, 0.14453125, 0.5625, 0.0019626617431640625, 8.606910705566406e-05, 0.0007004737854003906, 0.0020313262939453125, 0.0005407333374023438, 0.0095977783203125, 0.12158203125, 0.297119140625, 0.01300811767578125, 0.1951904296875, 0.0024433135986328125, 0.2386474609375, 1.298828125, 0.08306884765625, 0.00013697147369384766], "tokens": [446, 1022, 275, 319, 1756, 322, 1600, 461, 35396, 2926, 372, 526, 1654, 1412, 35396, 458, 23564, 32, 275, 319, 5384, 319, 477, 753, 35396, 1176, 225, 322, 1600, 372, 793, 30, 556, 744, 372, 7378, 275, 319, 477, 753, 35396, 2101, 225, 322, 35396, 2926, 372, 793, 30, 556, 11253, 6140]}
{"line_number": 639, "line_type": "original", "code": "            setMillis(type.getField(getChronology()).add(getMillis(), amount));", "entropy": 1.380859375, "is_bug_line": true, "sus_score": 0.19245008972987526, "per_token_entropy": [7.53125, 1.6171875, 1.3125, 0.01218414306640625, 8.0546875, 0.01309967041015625, 0.12017822265625, 0.007678985595703125, 0.02734375, 0.0145416259765625, 0.00015723705291748047, 9.584426879882812e-05, 0.005214691162109375, 6.04296875, 0.0950927734375, 0.026275634765625, 0.0007491111755371094, 0.00336456298828125, 2.65625, 0.060791015625], "tokens": [1468, 739, 10906, 26, 681, 32, 18269, 26, 371, 828, 2558, 10537, 4251, 669, 26, 371, 10906, 1026, 5168, 876]}
{"line_number": 639, "line_type": "generated", "code": "\n     */\n    public void setMonthOfYear(final int monthOfYear) {\n        setMillis(getChronology().monthOfYear().set(getMillis(), monthOfYear));\n    }\n\n    /**\n     * Add a number of months to the date.\n     *", "entropy": 0.024749755859375, "is_bug_line": true, "sus_score": 0.19245008972987526, "per_token_entropy": [0.53271484375, 0.435791015625, 0.0132293701171875, 0.005489349365234375, 0.0014181137084960938, 0.0003726482391357422, 0.00010895729064941406, 0.0007028579711914062, 0.0013227462768554688, 0.0350341796875, 0.0001785755157470703, 0.00107574462890625, 6.771087646484375e-05, 0.00038123130798339844, 0.00269317626953125, 0.10888671875, 0.026885986328125, 0.0007233619689941406, 0.00023317337036132812, 0.002452850341796875, 0.0001933574676513672, 9.000301361083984e-05, 2.86102294921875e-06, 0.00030112266540527344, 0.0002732276916503906, 1.8358230590820312e-05, 4.410743713378906e-05, 0.0002624988555908203, 6.29425048828125e-05, 8.594989776611328e-05, 4.291534423828125e-06, 1.5020370483398438e-05, 0.0014524459838867188, 3.5762786865234375e-06, 0.0011663436889648438, 0.00562286376953125, 9.34600830078125e-05, 0.0181121826171875, 0.01082611083984375, 0.00217437744140625, 1.823902130126953e-05, 0.01763916015625, 0.00463104248046875, 0.00098419189453125, 0.00015234947204589844, 0.00531768798828125, 0.007396697998046875, 0.00206756591796875, 0.0019550323486328125, 0.008819580078125, 0.02777099609375, 4.935264587402344e-05], "tokens": [275, 569, 284, 562, 763, 739, 7357, 45945, 26, 3220, 629, 6811, 45945, 27, 301, 291, 739, 10906, 26, 371, 828, 2558, 10537, 922, 5904, 45945, 922, 470, 26, 371, 10906, 1026, 6811, 45945, 876, 284, 320, 446, 1022, 275, 319, 2222, 312, 1451, 432, 17723, 372, 322, 2340, 32, 275, 319]}
{"line_number": 640, "line_type": "original", "code": "    }", "entropy": 3.6875, "is_bug_line": false, "sus_score": 0.19245008972987526, "per_token_entropy": [5.046875, 2.330078125], "tokens": [264, 320]}
{"line_number": 640, "line_type": "generated", "code": "\n\n    //-----------------------------------------------------------------------\n    /**\n     * Set the day of the month to the specified value.\n     *\n     * @param dayOfMonth  the day of the month\n     * @throws IllegalArgumentException if the value is invalid\n     */\n    public void setDayOfMonth(final", "entropy": 0.06341552734375, "is_bug_line": false, "sus_score": 0.19245008972987526, "per_token_entropy": [0.374267578125, 0.1920166015625, 0.00030493736267089844, 0.006206512451171875, 0.005523681640625, 0.0050201416015625, 0.00024580955505371094, 0.1295166015625, 0.0020694732666015625, 0.95947265625, 0.0168914794921875, 0.451904296875, 0.59326171875, 0.043975830078125, 0.00640106201171875, 0.0021266937255859375, 0.00030350685119628906, 0.00438690185546875, 0.0022296905517578125, 7.56978988647461e-05, 0.0279388427734375, 0.00010716915130615234, 0.0006031990051269531, 0.00018799304962158203, 0.0009045600891113281, 0.0004363059997558594, 0.01165771484375, 0.002056121826171875, 0.006145477294921875, 0.0029048919677734375, 0.047149658203125, 0.0015497207641601562, 0.12054443359375, 0.0018253326416015625, 5.5789947509765625e-05, 0.0010223388671875, 0.0003707408905029297, 0.0001659393310546875, 0.00012385845184326172, 0.0007152557373046875, 0.00021255016326904297, 0.0007696151733398438, 0.2008056640625, 0.0182037353515625, 0.00823974609375, 0.0015964508056640625, 0.000499725341796875, 0.00013184547424316406, 0.00017261505126953125, 0.01154327392578125, 0.00013637542724609375, 0.034820556640625], "tokens": [446, 434, 42510, 284, 1022, 275, 319, 1756, 322, 5808, 432, 322, 6811, 372, 322, 3191, 786, 32, 275, 319, 275, 319, 477, 753, 5808, 38369, 225, 322, 5808, 432, 322, 6811, 275, 319, 477, 5117, 12137, 415, 322, 786, 438, 5535, 275, 569, 284, 562, 763, 739, 6280, 38369, 26, 3220]}
{"line_number": 660, "line_type": "original", "code": "            setMillis(getChronology().years().add(getMillis(), years));", "entropy": 1.0009765625, "is_bug_line": true, "sus_score": 0.19245008972987526, "per_token_entropy": [6.46484375, 1.0390625, 0.2442626953125, 0.01641845703125, 0.061126708984375, 0.0030765533447265625, 6.341934204101562e-05, 0.0002225637435913086, 0.002391815185546875, 9.2265625, 0.0126953125, 0.51513671875, 0.01416778564453125, 0.0280609130859375, 0.0016183853149414062, 0.004741668701171875, 0.345703125, 0.0333251953125], "tokens": [1468, 739, 10906, 26, 371, 828, 2558, 10537, 922, 24420, 922, 669, 26, 371, 10906, 1026, 11274, 876]}
{"line_number": 660, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Add a number of weeks to the date.\n     *\n     * @param weeks  the weeks to add\n     * @throws IllegalArgumentException if the value is invalid\n     */\n    public void addWeeks(final int weeks) {\n           ", "entropy": 0.04742431640625, "is_bug_line": true, "sus_score": 0.19245008972987526, "per_token_entropy": [0.80810546875, 0.1038818359375, 0.0284423828125, 0.0295562744140625, 0.0034542083740234375, 0.0005216598510742188, 0.05096435546875, 0.011138916015625, 0.00034165382385253906, 0.00019180774688720703, 0.01149749755859375, 0.0007104873657226562, 0.0018463134765625, 0.0015573501586914062, 0.0203094482421875, 0.01934814453125, 0.00012373924255371094, 0.01525115966796875, 3.2901763916015625e-05, 0.0009431838989257812, 0.0001926422119140625, 0.00618743896484375, 0.0164794921875, 0.0007257461547851562, 0.0101470947265625, 0.0002892017364501953, 0.00021147727966308594, 0.86767578125, 0.0120391845703125, 0.0001615285873413086, 0.001285552978515625, 0.0006198883056640625, 8.797645568847656e-05, 0.00025916099548339844, 0.000598907470703125, 0.00032520294189453125, 8.976459503173828e-05, 0.03271484375, 0.01334381103515625, 0.004940032958984375, 0.0007724761962890625, 0.0001729726791381836, 1.5139579772949219e-05, 8.225440979003906e-06, 5.7220458984375e-06, 0.00016105175018310547, 0.014129638671875, 0.00020742416381835938, 0.0004887580871582031, 0.00019085407257080078, 0.0014562606811523438, 0.3720703125], "tokens": [284, 320, 446, 1022, 275, 319, 2222, 312, 1451, 432, 22599, 372, 322, 2340, 32, 275, 319, 275, 319, 477, 753, 22599, 225, 322, 22599, 372, 1015, 275, 319, 477, 5117, 12137, 415, 322, 786, 438, 5535, 275, 569, 284, 562, 763, 1015, 11070, 101, 26, 3220, 629, 22599, 27, 301, 324]}
{"line_number": 661, "line_type": "original", "code": "    }", "entropy": 3.943359375, "is_bug_line": false, "sus_score": 0.19245008972987526, "per_token_entropy": [5.3046875, 2.58203125], "tokens": [264, 320]}
{"line_number": 661, "line_type": "generated", "code": "\n\n    //-----------------------------------------------------------------------\n    /**\n     * Set the day of year to the specified value.\n     *\n     * @param dayOfYear  the day of year\n     * @throws IllegalArgumentException if the value is invalid\n     */\n    public void setDayOfYear(final int day", "entropy": 0.036285400390625, "is_bug_line": false, "sus_score": 0.19245008972987526, "per_token_entropy": [0.2264404296875, 0.249755859375, 0.000293731689453125, 0.00518798828125, 0.00572967529296875, 0.00494384765625, 0.00012302398681640625, 0.0491943359375, 0.0087432861328125, 0.053680419921875, 0.0064849853515625, 0.490966796875, 0.01483917236328125, 0.0012426376342773438, 0.0025882720947265625, 0.0001322031021118164, 0.0028858184814453125, 0.003292083740234375, 7.140636444091797e-05, 0.012908935546875, 3.421306610107422e-05, 0.00048422813415527344, 0.00027298927307128906, 0.0034542083740234375, 0.00024139881134033203, 0.10540771484375, 0.0006208419799804688, 0.01276397705078125, 0.0132598876953125, 0.451416015625, 0.036834716796875, 0.01629638671875, 0.0001806020736694336, 0.0004699230194091797, 0.00023412704467773438, 0.00026869773864746094, 0.0001024007797241211, 0.0002474784851074219, 0.00033473968505859375, 0.0002162456512451172, 0.071044921875, 0.0064239501953125, 0.005886077880859375, 0.0007009506225585938, 0.0002187490463256836, 2.0623207092285156e-05, 5.7578086853027344e-05, 0.00011909008026123047, 8.273124694824219e-05, 0.0195159912109375, 3.159046173095703e-05, 2.5033950805664062e-05], "tokens": [446, 434, 42510, 284, 1022, 275, 319, 1756, 322, 5808, 432, 4947, 372, 322, 3191, 786, 32, 275, 319, 275, 319, 477, 753, 5808, 45945, 225, 322, 5808, 432, 4947, 275, 319, 477, 5117, 12137, 415, 322, 786, 438, 5535, 275, 569, 284, 562, 763, 739, 6280, 45945, 26, 3220, 629, 5808]}
{"line_number": 702, "line_type": "original", "code": "            setMillis(getChronology().months().add(getMillis(), months));", "entropy": 1.16015625, "is_bug_line": true, "sus_score": 0.19245008972987526, "per_token_entropy": [7.75390625, 1.3369140625, 0.447021484375, 0.01416778564453125, 0.03131103515625, 0.00325775146484375, 1.9550323486328125e-05, 0.00012969970703125, 0.002086639404296875, 10.6015625, 0.0232391357421875, 0.43505859375, 0.0141754150390625, 0.063720703125, 0.0008535385131835938, 0.0122833251953125, 0.11041259765625, 0.024810791015625], "tokens": [1468, 739, 10906, 26, 371, 828, 2558, 10537, 922, 28407, 922, 669, 26, 371, 10906, 1026, 17723, 876]}
{"line_number": 702, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Add a number of days to the date.\n     *\n     * @param days  the days to add\n     * @throws IllegalArgumentException if the value is invalid\n     */\n    public void addDays(final int days) {\n            set", "entropy": 0.0419921875, "is_bug_line": true, "sus_score": 0.19245008972987526, "per_token_entropy": [0.444091796875, 0.031829833984375, 0.077880859375, 0.095703125, 0.004192352294921875, 0.0001347064971923828, 0.14111328125, 0.006259918212890625, 0.0025806427001953125, 0.00020372867584228516, 0.01030731201171875, 0.00031948089599609375, 0.0007615089416503906, 0.00033211708068847656, 0.04962158203125, 0.0916748046875, 8.106231689453125e-05, 0.0552978515625, 1.2278556823730469e-05, 0.0013437271118164062, 0.00025391578674316406, 0.0001252889633178711, 0.01702880859375, 0.00030231475830078125, 0.00762176513671875, 0.00013828277587890625, 0.00012862682342529297, 0.2486572265625, 0.03814697265625, 0.00014030933380126953, 0.0008730888366699219, 0.0005064010620117188, 0.00014221668243408203, 5.733966827392578e-05, 0.0004963874816894531, 0.0005745887756347656, 0.0001308917999267578, 0.11798095703125, 0.0054931640625, 0.011138916015625, 0.0010271072387695312, 0.00043320655822753906, 1.1563301086425781e-05, 0.00013113021850585938, 0.00012612342834472656, 0.00707244873046875, 7.843971252441406e-05, 2.7298927307128906e-05, 0.00026154518127441406, 0.0016994476318359375, 0.70068359375, 0.00789642333984375], "tokens": [284, 320, 446, 1022, 275, 319, 2222, 312, 1451, 432, 6935, 372, 322, 2340, 32, 275, 319, 275, 319, 477, 753, 6935, 225, 322, 6935, 372, 1015, 275, 319, 477, 5117, 12137, 415, 322, 786, 438, 5535, 275, 569, 284, 562, 763, 1015, 11946, 26, 3220, 629, 6935, 27, 301, 324, 739]}
{"line_number": 703, "line_type": "original", "code": "    }", "entropy": 3.58984375, "is_bug_line": false, "sus_score": 0.19245008972987526, "per_token_entropy": [4.75390625, 2.423828125], "tokens": [264, 320]}
{"line_number": 703, "line_type": "generated", "code": "\n\n    /**\n     * Add a number of days to the date.\n     *\n     * @param days  the days to add\n     * @throws IllegalArgumentException if the value is invalid\n     */\n    public void addDays(final int days) {\n            setMillis(", "entropy": 0.024383544921875, "is_bug_line": false, "sus_score": 0.19245008972987526, "per_token_entropy": [0.3515625, 0.2340087890625, 0.005962371826171875, 0.00019216537475585938, 0.2086181640625, 0.00789642333984375, 0.0028896331787109375, 0.00020623207092285156, 0.007518768310546875, 0.0003612041473388672, 0.0008769035339355469, 0.0003402233123779297, 0.045867919921875, 0.01983642578125, 4.7206878662109375e-05, 0.0205535888671875, 2.1576881408691406e-05, 0.0009579658508300781, 0.00024235248565673828, 0.0001456737518310547, 0.01483154296875, 0.00033020973205566406, 0.010406494140625, 0.00015485286712646484, 0.00016021728515625, 0.0517578125, 0.024749755859375, 0.00011324882507324219, 0.0008230209350585938, 0.00036835670471191406, 8.738040924072266e-05, 3.993511199951172e-05, 0.0003941059112548828, 0.0004019737243652344, 8.416175842285156e-05, 0.0181884765625, 0.015838623046875, 0.06549072265625, 0.0018415451049804688, 0.0008111000061035156, 1.4543533325195312e-05, 0.00012123584747314453, 0.00013554096221923828, 0.005672454833984375, 0.00010693073272705078, 3.9577484130859375e-05, 0.00022268295288085938, 0.002124786376953125, 0.140380859375, 0.0040740966796875, 5.626678466796875e-05, 6.127357482910156e-05], "tokens": [446, 1022, 275, 319, 2222, 312, 1451, 432, 6935, 372, 322, 2340, 32, 275, 319, 275, 319, 477, 753, 6935, 225, 322, 6935, 372, 1015, 275, 319, 477, 5117, 12137, 415, 322, 786, 438, 5535, 275, 569, 284, 562, 763, 1015, 11946, 26, 3220, 629, 6935, 27, 301, 324, 739, 10906, 26]}
{"line_number": 723, "line_type": "original", "code": "            setMillis(getChronology().weeks().add(getMillis(), weeks));", "entropy": 1.1025390625, "is_bug_line": true, "sus_score": 0.19245008972987526, "per_token_entropy": [7.43359375, 1.24609375, 0.2705078125, 0.01387786865234375, 0.0214691162109375, 0.004558563232421875, 4.506111145019531e-05, 8.463859558105469e-05, 0.0030040740966796875, 9.90625, 1.2626953125, 0.003322601318359375, 0.404296875, 0.0099334716796875, 0.038909912109375, 0.0005903244018554688, 0.00966644287109375, 0.30224609375, 0.0178070068359375], "tokens": [1468, 739, 10906, 26, 371, 828, 2558, 10537, 922, 9892, 101, 922, 669, 26, 371, 10906, 1026, 22599, 876]}
{"line_number": 723, "line_type": "generated", "code": "\n     */\n    public void setHourOfDay(final int hourOfDay) {\n        setMillis(getChronology().hourOfDay().set(getMillis(), hourOfDay));\n    }\n\n    /**\n     * Set the minute of the hour to the specified value.", "entropy": 0.04681396484375, "is_bug_line": true, "sus_score": 0.19245008972987526, "per_token_entropy": [0.93212890625, 0.03466796875, 0.011810302734375, 0.004360198974609375, 0.0010547637939453125, 4.0531158447265625e-05, 0.007511138916015625, 0.0011835098266601562, 0.0005421638488769531, 0.01313018798828125, 0.00012111663818359375, 0.00036454200744628906, 2.586841583251953e-05, 0.00139617919921875, 0.003253936767578125, 0.1180419921875, 0.0197601318359375, 0.0008449554443359375, 0.0007276535034179688, 0.0014190673828125, 0.0006666183471679688, 4.76837158203125e-05, 2.5033950805664062e-06, 0.0003101825714111328, 0.00989532470703125, 9.441375732421875e-05, 0.0002562999725341797, 0.00026702880859375, 0.00046706199645996094, 0.0003654956817626953, 5.9604644775390625e-06, 0.0002987384796142578, 0.0007920265197753906, 2.6226043701171875e-06, 0.0021991729736328125, 0.0048065185546875, 0.00011932849884033203, 0.023712158203125, 0.0083160400390625, 0.001983642578125, 2.0742416381835938e-05, 0.595703125, 0.003993988037109375, 0.021270751953125, 0.0037326812744140625, 0.0070037841796875, 0.59033203125, 0.0023937225341796875, 0.0001518726348876953, 0.0005788803100585938, 0.00012803077697753906, 0.001979827880859375], "tokens": [275, 569, 284, 562, 763, 739, 14415, 38119, 26, 3220, 629, 12021, 38119, 27, 301, 291, 739, 10906, 26, 371, 828, 2558, 10537, 922, 11302, 38119, 922, 470, 26, 371, 10906, 1026, 12021, 38119, 876, 284, 320, 446, 1022, 275, 319, 1756, 322, 16044, 432, 322, 12021, 372, 322, 3191, 786, 32]}
{"line_number": 724, "line_type": "original", "code": "    }", "entropy": 3.509765625, "is_bug_line": false, "sus_score": 0.19245008972987526, "per_token_entropy": [4.0703125, 2.94921875], "tokens": [264, 320]}
{"line_number": 724, "line_type": "generated", "code": "\n\n    /**\n     * Set the minute of the hour to the specified value.\n     *\n     * @param minuteOfHour  the minute of the hour\n     * @throws IllegalArgumentException if the value is invalid\n     */", "entropy": 0.07427978515625, "is_bug_line": false, "sus_score": 0.19245008972987526, "per_token_entropy": [0.398193359375, 0.084228515625, 0.0035953521728515625, 0.00010538101196289062, 0.9072265625, 0.005634307861328125, 0.00824737548828125, 0.0037860870361328125, 0.0028781890869140625, 0.51123046875, 0.003261566162109375, 0.0001857280731201172, 0.0010128021240234375, 0.0001373291015625, 0.0029315948486328125, 0.0011892318725585938, 2.396106719970703e-05, 0.00652313232421875, 4.756450653076172e-05, 0.00018858909606933594, 0.00010716915130615234, 0.00237274169921875, 0.007213592529296875, 0.0001461505889892578, 0.038177490234375, 0.0008997917175292969, 0.00250244140625, 0.0134735107421875, 1.09765625, 0.00139617919921875, 0.006656646728515625, 0.00135040283203125, 7.545948028564453e-05, 0.001766204833984375, 0.00011014938354492188, 7.68899917602539e-05, 7.808208465576172e-05, 7.903575897216797e-05, 0.00041604042053222656, 0.00014066696166992188, 0.00307464599609375, 0.0015096664428710938], "tokens": [446, 1022, 275, 319, 1756, 322, 16044, 432, 322, 12021, 372, 322, 3191, 786, 32, 275, 319, 275, 319, 477, 753, 16044, 1419, 14415, 225, 322, 16044, 432, 322, 12021, 275, 319, 477, 5117, 12137, 415, 322, 786, 438, 5535, 275, 569]}
{"line_number": 764, "line_type": "original", "code": "            setMillis(getChronology().days().add(getMillis(), days));", "entropy": 0.9609375, "is_bug_line": true, "sus_score": 0.19245008972987526, "per_token_entropy": [7.9140625, 1.4951171875, 0.56494140625, 0.0197296142578125, 0.023345947265625, 0.0035152435302734375, 2.2649765014648438e-05, 0.00015592575073242188, 0.00220489501953125, 6.703125, 0.005611419677734375, 0.04949951171875, 0.005657196044921875, 0.0230560302734375, 0.00025010108947753906, 0.006244659423828125, 0.4697265625, 0.0164031982421875], "tokens": [1468, 739, 10906, 26, 371, 828, 2558, 10537, 922, 6124, 922, 669, 26, 371, 10906, 1026, 6935, 876]}
{"line_number": 764, "line_type": "generated", "code": "\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Set the second of the day to the specified value.\n     *\n     * @param secondOfDay  the second of day\n     * @throws IllegalArgumentException if the value is invalid\n     */\n    public void setSecondOfDay(", "entropy": 0.0191497802734375, "is_bug_line": true, "sus_score": 0.19245008972987526, "per_token_entropy": [0.322021484375, 0.035980224609375, 0.1639404296875, 0.035400390625, 0.0004868507385253906, 0.00848388671875, 0.00569915771484375, 0.01222991943359375, 6.580352783203125e-05, 0.0152130126953125, 0.003387451171875, 0.0281219482421875, 0.0018634796142578125, 0.02032470703125, 0.0191650390625, 0.0106048583984375, 0.0005736351013183594, 0.0005626678466796875, 0.00017547607421875, 0.00623321533203125, 0.005786895751953125, 0.00013494491577148438, 0.0307464599609375, 1.239776611328125e-05, 0.00041174888610839844, 0.00015115737915039062, 0.0025691986083984375, 0.0012044906616210938, 0.01390838623046875, 0.00016033649444580078, 0.0556640625, 0.0054473876953125, 0.0050201416015625, 0.09735107421875, 0.0035495758056640625, 4.8279762268066406e-05, 0.0236358642578125, 0.0002617835998535156, 0.00018703937530517578, 6.079673767089844e-05, 7.891654968261719e-05, 0.00018024444580078125, 0.00011515617370605469, 0.04931640625, 0.001964569091796875, 0.005649566650390625, 0.000732421875, 0.00020492076873779297, 0.00018274784088134766, 2.9802322387695312e-05, 0.0003032684326171875, 0.0001780986785888672], "tokens": [284, 320, 446, 434, 42510, 284, 1022, 275, 319, 1756, 322, 3100, 432, 322, 5808, 372, 322, 3191, 786, 32, 275, 319, 275, 319, 477, 753, 3100, 38119, 225, 322, 3100, 432, 5808, 275, 319, 477, 5117, 12137, 415, 322, 786, 438, 5535, 275, 569, 284, 562, 763, 739, 5064, 38119, 26]}
{"line_number": 765, "line_type": "original", "code": "    }", "entropy": 4.3984375, "is_bug_line": false, "sus_score": 0.19245008972987526, "per_token_entropy": [6.2734375, 2.5234375], "tokens": [264, 320]}
{"line_number": 765, "line_type": "generated", "code": "\n\n    //-----------------------------------------------------------------------\n    /**\n     * Set the second of the day to the specified value.\n     *\n     * @param secondOfDay  the second of day\n     * @throws IllegalArgumentException if the value is invalid\n     */\n    public void setSecondOfDay(final int", "entropy": 0.018402099609375, "is_bug_line": false, "sus_score": 0.19245008972987526, "per_token_entropy": [0.41162109375, 0.039337158203125, 0.0005660057067871094, 0.01175689697265625, 0.0038394927978515625, 0.0150909423828125, 6.270408630371094e-05, 0.017913818359375, 0.0028591156005859375, 0.028045654296875, 0.0019388198852539062, 0.01947021484375, 0.0268707275390625, 0.010528564453125, 0.0006155967712402344, 0.0005602836608886719, 0.00019347667694091797, 0.006099700927734375, 0.005558013916015625, 0.00011932849884033203, 0.038238525390625, 1.3828277587890625e-05, 0.0004763603210449219, 0.00017142295837402344, 0.0034027099609375, 0.0014629364013671875, 0.014801025390625, 0.0001652240753173828, 0.05828857421875, 0.0048065185546875, 0.005519866943359375, 0.1328125, 0.0032825469970703125, 4.9114227294921875e-05, 0.031494140625, 0.00022137165069580078, 0.00011968612670898438, 5.507469177246094e-05, 7.283687591552734e-05, 0.00011515617370605469, 7.545948028564453e-05, 0.0027065277099609375, 0.0050811767578125, 0.038726806640625, 0.0020465850830078125, 0.0003457069396972656, 0.00020623207092285156, 3.0875205993652344e-05, 0.0004336833953857422, 0.000202178955078125, 0.00472259521484375, 0.0031528472900390625], "tokens": [446, 434, 42510, 284, 1022, 275, 319, 1756, 322, 3100, 432, 322, 5808, 372, 322, 3191, 786, 32, 275, 319, 275, 319, 477, 753, 3100, 38119, 225, 322, 3100, 432, 5808, 275, 319, 477, 5117, 12137, 415, 322, 786, 438, 5535, 275, 569, 284, 562, 763, 739, 5064, 38119, 26, 3220, 629]}
{"line_number": 1229, "line_type": "original", "code": "        return ISODateTimeFormat.dateTime().print(this);", "entropy": 2.283203125, "is_bug_line": false, "sus_score": 0.1642215463607155, "per_token_entropy": [1.509765625, 10.4609375, 12.5390625, 0.0999755859375, 0.01611328125, 0.0225830078125, 0.0457763671875, 0.6240234375, 0.3203125, 0.1173095703125, 1.2109375, 0.421875], "tokens": [351, 442, 19687, 4852, 2207, 32, 21681, 922, 1216, 26, 578, 293]}
{"line_number": 1229, "line_type": "generated", "code": "\n            oos.writeObject(iField.getType());\n        }\n        \n        /**\n         * Reads the property from a safe serialization format.\n         */\n        private void readObject(ObjectInputStream ois) throws IOException, ClassNotFoundException {\n            iInstant = (Mutable", "entropy": 0.0880126953125, "is_bug_line": false, "sus_score": 0.1642215463607155, "per_token_entropy": [2.177734375, 0.11065673828125, 1.5735626220703125e-05, 4.482269287109375e-05, 0.0252532958984375, 0.063232421875, 0.00049591064453125, 0.0173187255859375, 0.0030975341796875, 0.53125, 0.284912109375, 0.0023975372314453125, 0.239990234375, 0.00031638145446777344, 0.27099609375, 0.0068511962890625, 0.0007586479187011719, 3.9577484130859375e-05, 0.0281829833984375, 0.00301361083984375, 0.00252532958984375, 0.002529144287109375, 0.0182952880859375, 0.0008835792541503906, 0.00598907470703125, 0.0038356781005859375, 0.0287017822265625, 0.0021800994873046875, 0.01055145263671875, 0.0021514892578125, 0.00592041015625, 0.0004010200500488281, 6.556510925292969e-06, 0.0001100301742553711, 6.330013275146484e-05, 0.0005197525024414062, 4.887580871582031e-06, 0.0019521713256835938, 0.5107421875, 4.875659942626953e-05, 0.104736328125, 0.00734710693359375, 0.00145721435546875, 0.040618896484375, 0.0001634359359741211, 0.00344085693359375, 0.0440673828125, 0.00901031494140625, 0.00017583370208740234, 0.001911163330078125, 0.0007004737854003906, 0.0009164810180664062], "tokens": [324, 337, 500, 32, 1821, 959, 26, 91, 1176, 32, 10272, 1035, 291, 320, 2746, 1022, 276, 319, 29531, 322, 2804, 645, 312, 10061, 22687, 2179, 32, 276, 569, 291, 945, 763, 1491, 959, 26, 959, 6984, 337, 297, 27, 2571, 6291, 30, 1709, 9939, 301, 324, 595, 22183, 280, 308, 12907]}
{"line_number": 636, "line_type": "original", "code": "        if (type == null) {", "entropy": 1.599609375, "is_bug_line": false, "sus_score": 0.14907119849998599, "per_token_entropy": [5.48046875, 3.701171875, 0.09332275390625, 2.6171875, 0.25244140625, 0.5537109375, 0.059844970703125, 0.0389404296875], "tokens": [351, 415, 308, 681, 610, 744, 27, 301]}
{"line_number": 636, "line_type": "generated", "code": "\n     * Set the month of year to the specified value.\n     *\n     * @param monthOfYear  the month of year\n     * @throws IllegalArgumentException if the value is invalid\n     */\n    public void setMonthOfYear(final int monthOfYear) {\n        set", "entropy": 0.0911865234375, "is_bug_line": false, "sus_score": 0.14907119849998599, "per_token_entropy": [1.896484375, 0.408935546875, 0.08660888671875, 0.012054443359375, 0.11602783203125, 0.110107421875, 0.320068359375, 0.1397705078125, 0.0012149810791015625, 0.0005655288696289062, 0.00072479248046875, 0.01302337646484375, 0.04742431640625, 0.0022220611572265625, 0.172119140625, 0.00022304058074951172, 0.002033233642578125, 0.00540924072265625, 0.002834320068359375, 0.06463623046875, 0.00927734375, 0.0008254051208496094, 0.001338958740234375, 0.108154296875, 0.418701171875, 0.31982421875, 0.0008311271667480469, 0.00039577484130859375, 0.00301361083984375, 0.0009889602661132812, 0.0001798868179321289, 0.00015163421630859375, 0.0008902549743652344, 0.002178192138671875, 0.00489044189453125, 0.03668212890625, 0.04864501953125, 0.041778564453125, 0.00798797607421875, 0.0014638900756835938, 0.0009636878967285156, 0.0007634162902832031, 0.0005664825439453125, 0.0012054443359375, 0.0275421142578125, 0.0001595020294189453, 0.001049041748046875, 0.00013148784637451172, 0.0001614093780517578, 0.002658843994140625, 0.265625, 0.032470703125], "tokens": [275, 319, 1756, 322, 6811, 432, 4947, 372, 322, 3191, 786, 32, 275, 319, 275, 319, 477, 753, 6811, 45945, 225, 322, 6811, 432, 4947, 275, 319, 477, 5117, 12137, 415, 322, 786, 438, 5535, 275, 569, 284, 562, 763, 739, 7357, 45945, 26, 3220, 629, 6811, 45945, 27, 301, 291, 739]}
{"line_number": 456, "line_type": "original", "code": "                break;", "entropy": 5.96875, "is_bug_line": false, "sus_score": 0.1388888888888889, "per_token_entropy": [9.0703125, 8.8125, 0.023529052734375], "tokens": [2071, 1626, 45]}
{"line_number": 456, "line_type": "generated", "code": "\n     * @throws ArithmeticException if the result exceeds the capacity of the instant\n     */\n    public void add(ReadableDuration duration) {\n        long instantMillis = getMillis();\n        if (duration!= null) {\n            instantMillis += duration.getMillis();", "entropy": 0.1429443359375, "is_bug_line": false, "sus_score": 0.1388888888888889, "per_token_entropy": [0.35546875, 1.0341796875, 0.002857208251953125, 0.115966796875, 0.05584716796875, 2.6226043701171875e-06, 0.0005855560302734375, 0.0036907196044921875, 0.0145111083984375, 0.0008378028869628906, 0.0016574859619140625, 0.003665924072265625, 0.00965118408203125, 0.01629638671875, 0.02532958984375, 0.12322998046875, 0.1513671875, 0.00385284423828125, 0.0225982666015625, 0.01727294921875, 6.437301635742188e-05, 0.0097808837890625, 0.0093994140625, 0.0679931640625, 8.749961853027344e-05, 0.00047326087951660156, 0.006378173828125, 0.033660888671875, 0.99072265625, 1.6748046875, 0.35986328125, 0.0087738037109375, 0.2193603515625, 0.0024013519287109375, 0.09954833984375, 0.09100341796875, 0.5625, 0.00267791748046875, 0.0244903564453125, 0.05645751953125, 0.0018444061279296875, 0.004169464111328125, 0.0003256797790527344, 0.052032470703125, 0.69677734375, 3.0994415283203125e-06, 0.450927734375, 0.0301055908203125, 5.9485435485839844e-05, 0.0003421306610107422, 0.0173492431640625, 0.0015888214111328125], "tokens": [275, 319, 477, 5117, 47721, 984, 415, 322, 1056, 35308, 322, 13802, 432, 322, 23564, 275, 569, 284, 562, 763, 1015, 26, 23422, 6196, 7459, 27, 301, 291, 1946, 23564, 10906, 280, 622, 10906, 473, 291, 415, 308, 6932, 863, 744, 27, 301, 324, 23564, 10906, 1454, 7459, 32, 371, 10906, 473]}
{"line_number": 454, "line_type": "original", "code": "        switch (iRoundingMode) {", "entropy": 1.728515625, "is_bug_line": false, "sus_score": 0.13608276348795434, "per_token_entropy": [4.3671875, 4.6875, 0.032196044921875, 3.2265625, 1.310546875, 0.1729736328125, 0.0032444000244140625, 0.0248260498046875], "tokens": [351, 3578, 308, 91, 10238, 45088, 27, 301]}
{"line_number": 454, "line_type": "generated", "code": "\n     * For example, adding one day to the instant of 2002-12-24 would result in the instant\n     * of 2002-12-25.\n     *\n     * @param duration  the", "entropy": 0.36865234375, "is_bug_line": false, "sus_score": 0.13608276348795434, "per_token_entropy": [0.331298828125, 0.1776123046875, 1.990234375, 0.01428985595703125, 0.552734375, 0.57470703125, 0.08587646484375, 0.58447265625, 0.04559326171875, 0.63037109375, 0.2880859375, 0.67626953125, 0.32666015625, 0.1553955078125, 0.041778564453125, 0.1549072265625, 0.73974609375, 0.0014705657958984375, 0.9541015625, 0.1636962890625, 9.715557098388672e-05, 0.67431640625, 2.1484375, 0.7841796875, 0.556640625, 0.46533203125, 1.27734375, 1.6767578125, 0.0728759765625, 7.617473602294922e-05, 0.794921875, 0.00743865966796875, 0.0002002716064453125, 0.00019669532775878906, 2.8967857360839844e-05, 0.0814208984375, 6.783008575439453e-05, 0.0001647472381591797, 0.0006093978881835938, 0.00015175342559814453, 0.00029349327087402344, 0.0025730133056640625, 0.25, 0.456298828125, 0.0009307861328125, 1.2333984375, 5.6743621826171875e-05, 0.005786895751953125, 0.0028514862060546875, 0.04449462890625, 0.08642578125, 0.056793212890625], "tokens": [275, 319, 2616, 2280, 30, 7165, 1591, 5808, 372, 322, 23564, 432, 225, 36, 34, 34, 36, 31, 35, 36, 31, 36, 38, 2268, 1056, 328, 322, 23564, 275, 319, 432, 225, 36, 34, 34, 36, 31, 35, 36, 31, 36, 39, 32, 275, 319, 275, 319, 477, 753, 7459, 225, 322]}
{"line_number": 473, "line_type": "original", "code": "        super.setMillis(instant);", "entropy": 2.880859375, "is_bug_line": false, "sus_score": 0.13608276348795434, "per_token_entropy": [3.69140625, 8.390625, 0.0211944580078125, 5.09375, 0.279296875, 0.0166168212890625, 4.1171875, 1.4306640625], "tokens": [351, 2599, 32, 470, 10906, 26, 30241, 293]}
{"line_number": 473, "line_type": "generated", "code": "\n        }\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Add to the instant, setting any fields to their minimum or maximum\n     * value if the result would be outside the valid range.\n     * <p>\n     * For example, adding one day to ", "entropy": 0.3583984375, "is_bug_line": false, "sus_score": 0.13608276348795434, "per_token_entropy": [0.35888671875, 0.0015516281127929688, 0.309814453125, 0.00019991397857666016, 0.09771728515625, 0.54736328125, 0.003204345703125, 0.0088958740234375, 0.01151275634765625, 0.004024505615234375, 2.0623207092285156e-05, 0.7373046875, 0.205322265625, 0.73388671875, 1.140625, 0.482666015625, 2.287109375, 1.212890625, 0.454345703125, 0.7451171875, 0.28564453125, 0.8984375, 0.2237548828125, 0.0009889602661132812, 0.270751953125, 8.463859558105469e-05, 0.95068359375, 0.056640625, 0.60205078125, 0.06109619140625, 1.2626953125, 0.0026645660400390625, 0.83154296875, 0.1041259765625, 0.058502197265625, 0.00881195068359375, 0.146240234375, 0.09228515625, 0.050933837890625, 0.53662109375, 0.003444671630859375, 0.0002949237823486328, 0.00033855438232421875, 3.695487976074219e-05, 0.399658203125, 0.003879547119140625, 0.006702423095703125, 0.94482421875, 0.1787109375, 0.5322265625, 0.051513671875, 0.73876953125], "tokens": [291, 320, 284, 320, 446, 434, 42510, 284, 1022, 275, 319, 2222, 372, 322, 23564, 30, 5748, 1346, 3829, 372, 3623, 9340, 556, 7091, 275, 319, 786, 415, 322, 1056, 2268, 526, 11127, 322, 2080, 2155, 32, 275, 319, 333, 98, 48, 275, 319, 2616, 2280, 30, 7165, 1591, 5808, 372, 225]}
{"line_number": 474, "line_type": "original", "code": "    }", "entropy": 2.52734375, "is_bug_line": false, "sus_score": 0.13608276348795434, "per_token_entropy": [4.98828125, 0.066650390625], "tokens": [264, 320]}
{"line_number": 474, "line_type": "generated", "code": "\n\n    /**\n     * Adds a period to this instant.\n     * <p>\n     * This will typically change the value of most fields.\n     *\n     * @param period  the period to add, null means add zero\n     * @throws ArithmeticException if", "entropy": 0.06243896484375, "is_bug_line": false, "sus_score": 0.13608276348795434, "per_token_entropy": [0.7373046875, 0.26171875, 0.0017499923706054688, 7.259845733642578e-05, 0.280029296875, 0.104736328125, 0.99169921875, 0.0205841064453125, 0.006008148193359375, 0.03594970703125, 0.12646484375, 0.00553131103515625, 0.00025653839111328125, 0.02252197265625, 7.426738739013672e-05, 4.673004150390625e-05, 0.0006656646728515625, 3.719329833984375e-05, 0.020660400390625, 0.01155853271484375, 0.002635955810546875, 0.00025391578674316406, 0.0001392364501953125, 0.005199432373046875, 6.401538848876953e-05, 0.01526641845703125, 0.0021514892578125, 0.0247802734375, 0.01192474365234375, 7.510185241699219e-05, 0.133544921875, 2.6464462280273438e-05, 0.0006127357482910156, 0.00029015541076660156, 0.00409698486328125, 0.00954437255859375, 0.0015516281127929688, 0.10260009765625, 0.002521514892578125, 0.0002560615539550781, 0.00942230224609375, 0.005657196044921875, 9.512901306152344e-05, 0.0012302398681640625, 0.00725555419921875, 0.184814453125, 0.00603485107421875, 0.00011324882507324219, 0.0816650390625, 0.00540924072265625, 1.5974044799804688e-05, 3.7789344787597656e-05], "tokens": [446, 1022, 275, 319, 15450, 312, 7918, 372, 458, 23564, 32, 275, 319, 333, 98, 48, 275, 319, 1348, 1098, 18214, 1539, 322, 786, 432, 4630, 3829, 32, 275, 319, 275, 319, 477, 753, 7918, 225, 322, 7918, 372, 1015, 30, 744, 6058, 1015, 5934, 275, 319, 477, 5117, 47721, 984, 415]}
