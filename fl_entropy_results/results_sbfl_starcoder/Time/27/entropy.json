{"line_number": 192, "line_type": "original", "code": "        if (formatter == null) {", "entropy": 2.431640625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [4.81640625, 2.8671875, 0.084716796875, 10.7109375, 0.77197265625, 0.01012420654296875, 0.1417236328125, 0.054534912109375], "tokens": [351, 415, 308, 14548, 610, 744, 27, 301]}
{"line_number": 192, "line_type": "generated", "code": "\n     * @return this PeriodFormatterBuilder\n     * @throws IllegalArgumentException if minDigits is negative\n     */\n    public PeriodFormatterBuilder minimumPrintedDigits(int minDigits) {\n        if (minDigits < 0) {\n            throw new IllegalArgumentException(\"Minimum printed", "entropy": 0.143310546875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.33349609375, 0.0953369140625, 0.349365234375, 0.6279296875, 0.00836944580078125, 0.0062103271484375, 0.00273895263671875, 0.0005946159362792969, 0.0445556640625, 0.407470703125, 0.0028514862060546875, 0.0146484375, 0.038787841796875, 0.0138092041015625, 0.541015625, 0.466552734375, 0.141845703125, 1.6005859375, 0.3193359375, 0.1307373046875, 0.008544921875, 0.010345458984375, 0.033233642578125, 0.0006084442138671875, 2.1576881408691406e-05, 0.336181640625, 0.0184326171875, 6.318092346191406e-06, 0.00701904296875, 0.00047469139099121094, 0.002323150634765625, 0.0016984939575195312, 0.00022792816162109375, 0.0005245208740234375, 0.00325775146484375, 0.07049560546875, 0.0916748046875, 0.0007600784301757812, 0.01186370849609375, 2.09808349609375e-05, 0.024993896484375, 0.004291534423828125, 0.004360198974609375, 0.01727294921875, 0.0006022453308105469, 0.00576019287109375, 0.003223419189453125, 0.00034427642822265625, 0.000640869140625, 0.046783447265625, 0.81494140625, 0.7822265625], "tokens": [275, 319, 477, 601, 458, 24156, 8736, 1796, 275, 319, 477, 5117, 12137, 415, 1847, 22326, 438, 11003, 275, 569, 284, 562, 24156, 8736, 1796, 9340, 4014, 318, 22326, 26, 410, 1847, 22326, 27, 301, 291, 415, 308, 887, 22326, 333, 225, 34, 27, 301, 324, 1422, 537, 12137, 440, 13367, 21440]}
{"line_number": 195, "line_type": "original", "code": "        clearPrefix();", "entropy": 2.103515625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [4.7578125, 3.615234375, 0.033660888671875, 0.004364013671875], "tokens": [351, 4233, 5419, 473]}
{"line_number": 195, "line_type": "generated", "code": "\n        return this;\n    }\n\n    /**\n     * Set the maximum digits parsed for the next and following appended\n     * fields. By default, the maximum digits parsed is 10.\n     *\n     * @return this PeriodFormatterBuilder\n     */\n    public Period", "entropy": 0.0950927734375, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.03778076171875, 0.88916015625, 0.01218414306640625, 0.00034165382385253906, 0.006702423095703125, 0.00013136863708496094, 0.06817626953125, 0.02294921875, 0.0015687942504882812, 3.039836883544922e-05, 0.458984375, 0.038665771484375, 0.33447265625, 0.11529541015625, 0.271728515625, 0.0615234375, 0.0211334228515625, 0.00984954833984375, 0.041229248046875, 0.0037212371826171875, 0.01153564453125, 0.234130859375, 1.4901161193847656e-05, 0.01198577880859375, 0.01139068603515625, 0.134521484375, 0.0010089874267578125, 0.0290374755859375, 0.1009521484375, 0.15966796875, 0.07684326171875, 0.03302001953125, 0.019989013671875, 0.62255859375, 0.0116119384765625, 0.004184722900390625, 0.041229248046875, 0.479248046875, 0.0005397796630859375, 0.2222900390625, 5.125999450683594e-05, 0.0048065185546875, 0.0269775390625, 0.0008034706115722656, 0.00021886825561523438, 0.00029206275939941406, 3.504753112792969e-05, 0.0015687942504882812, 0.301025390625, 0.0055999755859375, 0.0010137557983398438, 0.00030350685119628906], "tokens": [291, 442, 458, 45, 284, 320, 446, 1022, 275, 319, 1756, 322, 7091, 16105, 8436, 436, 322, 2354, 461, 2412, 22363, 275, 319, 3829, 32, 4517, 1244, 30, 322, 7091, 16105, 8436, 438, 225, 35, 34, 32, 275, 319, 275, 319, 477, 601, 458, 24156, 8736, 1796, 275, 569, 284, 562, 24156]}
{"line_number": 196, "line_type": "original", "code": "        append0(formatter.getPrinter(), formatter.getParser());", "entropy": 1.6298828125, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [4.53125, 6.421875, 0.45556640625, 0.027313232421875, 5.35546875, 3.1484375, 1.3251953125, 0.10821533203125, 0.060638427734375, 1.337890625, 0.02545166015625, 0.00017893314361572266, 0.0007576942443847656, 0.0212554931640625], "tokens": [351, 5489, 34, 26, 14548, 32, 371, 14384, 1026, 14971, 32, 371, 2825, 1035]}
{"line_number": 196, "line_type": "generated", "code": "\n        return this;\n    }\n\n    /**\n     * Set the maximum digits parsed for the next and following appended\n     * fields. By default, the maximum digits parsed is ten.\n     *\n     * @return this PeriodFormatterBuilder\n     */\n    public PeriodFormatterBuilder", "entropy": 0.08355712890625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.032806396484375, 0.02178955078125, 0.0010013580322265625, 0.00024509429931640625, 0.0063018798828125, 0.00013971328735351562, 0.0562744140625, 0.02642822265625, 0.0015611648559570312, 2.9087066650390625e-05, 0.480712890625, 0.04302978515625, 0.355712890625, 0.11138916015625, 0.254150390625, 0.0601806640625, 0.0217742919921875, 0.00925445556640625, 0.0438232421875, 0.003753662109375, 0.01235198974609375, 0.23046875, 1.621246337890625e-05, 0.0092010498046875, 0.0116424560546875, 0.1290283203125, 0.0010395050048828125, 0.028289794921875, 0.10101318359375, 0.145263671875, 0.06854248046875, 0.032562255859375, 0.0199737548828125, 0.98095703125, 0.041046142578125, 0.5146484375, 0.00046324729919433594, 0.2318115234375, 5.5909156799316406e-05, 0.004810333251953125, 0.0252838134765625, 0.0007586479187011719, 0.0003094673156738281, 0.00031828880310058594, 4.553794860839844e-05, 0.0015573501586914062, 0.2161865234375, 0.004688262939453125, 0.0010786056518554688, 0.0002522468566894531, 2.086162567138672e-05, 1.0728836059570312e-06], "tokens": [291, 442, 458, 45, 284, 320, 446, 1022, 275, 319, 1756, 322, 7091, 16105, 8436, 436, 322, 2354, 461, 2412, 22363, 275, 319, 3829, 32, 4517, 1244, 30, 322, 7091, 16105, 8436, 438, 16832, 32, 275, 319, 275, 319, 477, 601, 458, 24156, 8736, 1796, 275, 569, 284, 562, 24156, 8736, 1796]}
{"line_number": 197, "line_type": "original", "code": "        return this;", "entropy": 1.91015625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [6.44140625, 1.1728515625, 0.016143798828125, 0.01018524169921875], "tokens": [351, 442, 458, 45]}
{"line_number": 197, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Set the maximum digits parsed for the next and following appended\n     * fields. By default, the maximum digits parsed is 10.\n     *\n     * @return this PeriodFormatterBuilder\n     */\n    public PeriodFormatterBuilder maximumParsed", "entropy": 0.0791015625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.0654296875, 0.005435943603515625, 0.091552734375, 0.0255584716796875, 0.0035343170166015625, 3.4332275390625e-05, 0.50244140625, 0.046539306640625, 0.362548828125, 0.11370849609375, 0.270751953125, 0.0611572265625, 0.0227203369140625, 0.01076507568359375, 0.04901123046875, 0.00405120849609375, 0.012420654296875, 0.2313232421875, 1.823902130126953e-05, 0.01033782958984375, 0.01190185546875, 0.134765625, 0.0010051727294921875, 0.0294036865234375, 0.100341796875, 0.1507568359375, 0.06927490234375, 0.03289794921875, 0.0207061767578125, 0.60693359375, 0.0117645263671875, 0.00428009033203125, 0.039825439453125, 0.474853515625, 0.0005583763122558594, 0.220458984375, 5.841255187988281e-05, 0.0050048828125, 0.0262908935546875, 0.0008873939514160156, 0.00031566619873046875, 0.00030732154846191406, 5.030632019042969e-05, 0.0018310546875, 0.213134765625, 0.00879669189453125, 0.001369476318359375, 0.0004036426544189453, 2.5987625122070312e-05, 1.3113021850585938e-06, 0.04766845703125, 0.007495880126953125], "tokens": [284, 320, 446, 1022, 275, 319, 1756, 322, 7091, 16105, 8436, 436, 322, 2354, 461, 2412, 22363, 275, 319, 3829, 32, 4517, 1244, 30, 322, 7091, 16105, 8436, 438, 225, 35, 34, 32, 275, 319, 275, 319, 477, 601, 458, 24156, 8736, 1796, 275, 569, 284, 562, 24156, 8736, 1796, 7091, 24217]}
{"line_number": 818, "line_type": "original", "code": "                return new Object[] {Literal.EMPTY, Literal.EMPTY};", "entropy": 2.69140625, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [8.9765625, 4.3515625, 4.5859375, 5.5703125, 0.04205322265625, 0.02655029296875, 8.984375, 0.405517578125, 3.2734375, 0.5302734375, 0.8046875, 0.0076141357421875, 0.013702392578125, 0.11859130859375], "tokens": [2071, 442, 537, 2194, 1178, 301, 8208, 32, 13073, 30, 24849, 32, 13073, 1255]}
{"line_number": 818, "line_type": "generated", "code": "\n\n        public int parse(String periodStr, int position) {\n            return periodStr.indexOf(iText, position);\n        }\n\n        public int scan(String periodStr, int position) {\n            return periodStr.indexOf(iText, position);", "entropy": 0.123046875, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.6083984375, 0.09381103515625, 0.32080078125, 0.101318359375, 0.0003066062927246094, 0.0005998611450195312, 0.01300048828125, 0.0011949539184570312, 0.00011265277862548828, 0.00018644332885742188, 0.00450897216796875, 0.00046253204345703125, 0.00072479248046875, 0.1202392578125, 1.517578125, 0.9677734375, 0.0005006790161132812, 4.9233436584472656e-05, 1.1689453125, 0.005329132080078125, 0.00439453125, 0.0003876686096191406, 0.0070953369140625, 0.0030918121337890625, 0.64111328125, 0.0257415771484375, 5.7697296142578125e-05, 0.285888671875, 0.005619049072265625, 0.0009946823120117188, 0.00048732757568359375, 4.9233436584472656e-05, 0.00021123886108398438, 0.0016450881958007812, 8.71419906616211e-05, 0.0005745887756347656, 0.00015282630920410156, 0.0019121170043945312, 0.00016963481903076172, 0.00030732154846191406, 0.01708984375, 0.285888671875, 0.060394287109375, 1.430511474609375e-05, 1.2636184692382812e-05, 0.040283203125, 0.0003001689910888672, 0.00021445751190185547, 4.506111145019531e-05, 0.06439208984375, 0.0014753341674804688, 0.021453857421875], "tokens": [584, 562, 629, 3185, 26, 652, 7918, 2007, 30, 629, 2747, 27, 301, 324, 442, 7918, 2007, 32, 7142, 26, 91, 1031, 30, 2747, 293, 291, 320, 584, 562, 629, 8971, 26, 652, 7918, 2007, 30, 629, 2747, 27, 301, 324, 442, 7918, 2007, 32, 7142, 26, 91, 1031, 30, 2747, 293]}
{"line_number": 500, "line_type": "original", "code": "        appendField(SECONDS_OPTIONAL_MILLIS);", "entropy": 1.91796875, "is_bug_line": false, "sus_score": 0.2, "per_token_entropy": [3.64453125, 2.7578125, 2.185546875, 2.6875, 4.5546875, 1.6708984375, 4.3125, 0.228515625, 0.167236328125, 4.494190216064453e-05, 2.5033950805664062e-06, 0.8056640625], "tokens": [351, 5489, 1176, 26, 18382, 81, 41143, 81, 63, 13142, 1296, 293]}
{"line_number": 500, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.2, "per_token_entropy": [], "tokens": []}
{"line_number": 501, "line_type": "original", "code": "        return this;", "entropy": 1.865234375, "is_bug_line": false, "sus_score": 0.2, "per_token_entropy": [5.14453125, 2.12109375, 0.173095703125, 0.0207061767578125], "tokens": [351, 442, 458, 45]}
{"line_number": 501, "line_type": "generated", "code": "\n    public PeriodFormatterBuilder appendSuffix(String text) {\n        FieldFormatter last = iFieldFormatters[iFieldFormatters.length - 1];\n        if (last == null) {\n            throw new IllegalStateException(\"No field to append suffix to\");", "entropy": 0.149169921875, "is_bug_line": false, "sus_score": 0.2, "per_token_entropy": [0.33349609375, 0.1998291015625, 0.032073974609375, 0.0036220550537109375, 0.00047707557678222656, 0.0003962516784667969, 0.0009374618530273438, 0.0028076171875, 0.00713348388671875, 0.0271759033203125, 0.002918243408203125, 0.00954437255859375, 0.09967041015625, 1.43359375, 0.01029205322265625, 1.333984375, 0.374755859375, 1.123046875, 0.0251617431640625, 0.0011701583862304688, 6.67572021484375e-06, 0.0111236572265625, 0.0953369140625, 0.0819091796875, 0.1822509765625, 0.0002808570861816406, 0.0186767578125, 0.00031876564025878906, 0.035125732421875, 0.00470733642578125, 0.0014171600341796875, 0.0019359588623046875, 0.08209228515625, 0.07635498046875, 0.0071563720703125, 0.004169464111328125, 0.07623291015625, 0.0006804466247558594, 0.0258026123046875, 0.0011243820190429688, 0.0208587646484375, 0.037567138671875, 0.0026264190673828125, 0.00791168212890625, 0.185302734375, 0.254150390625, 0.0921630859375, 0.6943359375, 0.219482421875, 0.442138671875, 0.023223876953125, 0.048065185546875], "tokens": [284, 562, 24156, 8736, 1796, 5489, 14059, 26, 652, 1344, 27, 301, 291, 5692, 8736, 2401, 280, 595, 1176, 2207, 5725, 77, 91, 1176, 2207, 5725, 32, 1322, 429, 225, 35, 970, 291, 415, 308, 2135, 610, 744, 27, 301, 324, 1422, 537, 21665, 440, 2023, 1600, 372, 5489, 12809, 372, 724]}
{"line_number": 555, "line_type": "original", "code": "        return appendSuffix(new SimpleAffix(text));", "entropy": 1.9892578125, "is_bug_line": false, "sus_score": 0.2, "per_token_entropy": [3.853515625, 1.423828125, 4.35546875, 2.583984375, 0.564453125, 2.939453125, 3.712890625, 0.049560546875, 4.291534423828125e-06, 0.040771484375, 3.556640625, 0.79931640625], "tokens": [351, 442, 5489, 14059, 26, 890, 7155, 14321, 782, 26, 878, 876]}
{"line_number": 555, "line_type": "generated", "code": "\n        return this;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Append a field prefix which applies only to the last appended field. If\n     * the field is not printed, neither is the prefix.\n     *\n     * @param text text to print before field", "entropy": 0.1170654296875, "is_bug_line": false, "sus_score": 0.2, "per_token_entropy": [0.7255859375, 0.48828125, 0.019012451171875, 0.0010128021240234375, 0.020721435546875, 0.0004830360412597656, 0.1676025390625, 0.62353515625, 0.005382537841796875, 0.018280029296875, 0.02685546875, 0.0015382766723632812, 2.3603439331054688e-05, 0.673828125, 0.34521484375, 1.9462890625, 0.1436767578125, 0.129150390625, 0.01181793212890625, 0.05865478515625, 0.00040912628173828125, 0.0032062530517578125, 0.0858154296875, 0.06585693359375, 0.006359100341796875, 0.0181121826171875, 0.04779052734375, 0.002033233642578125, 9.179115295410156e-06, 0.004512786865234375, 0.003841400146484375, 0.0019311904907226562, 0.025238037109375, 0.03692626953125, 0.0033245086669921875, 0.0123138427734375, 0.00746917724609375, 0.000537872314453125, 0.02288818359375, 0.0058441162109375, 0.0450439453125, 3.314018249511719e-05, 0.1947021484375, 1.4424324035644531e-05, 0.004779815673828125, 0.0023651123046875, 0.01499176025390625, 0.02447509765625, 0.00157928466796875, 0.00373077392578125, 0.0223541259765625, 0.01108551025390625], "tokens": [291, 442, 458, 45, 284, 320, 446, 434, 42510, 284, 1022, 275, 319, 20593, 312, 1600, 5202, 1510, 16642, 1755, 372, 322, 2401, 22363, 1600, 32, 1670, 275, 319, 322, 1600, 438, 646, 21440, 30, 25209, 438, 322, 5202, 32, 275, 319, 275, 319, 477, 753, 1344, 1344, 372, 1459, 2670, 1600]}
{"line_number": 652, "line_type": "original", "code": "        return appendSeparator(text, text, null, false, true);", "entropy": 1.1337890625, "is_bug_line": false, "sus_score": 0.2, "per_token_entropy": [4.40625, 7.94921875, 0.5791015625, 0.00432586669921875, 0.00988006591796875, 0.021942138671875, 0.006500244140625, 0.4765625, 0.01367950439453125, 0.096435546875, 0.01288604736328125, 3.12109375, 0.08892822265625, 0.2044677734375, 0.006862640380859375], "tokens": [351, 442, 5489, 11145, 26, 878, 30, 1344, 30, 744, 30, 901, 30, 861, 293]}
{"line_number": 652, "line_type": "generated", "code": "\n     * the separator.\n     * <p>\n     * This method changes the separator depending on whether it is the last separator\n     * to be output.\n     * <p>\n     * For example, <code>builder.appendDays().appendSeparator(\",\",", "entropy": 0.069580078125, "is_bug_line": false, "sus_score": 0.2, "per_token_entropy": [1.1474609375, 0.00469970703125, 1.185546875, 0.0008697509765625, 0.2435302734375, 0.07861328125, 9.942054748535156e-05, 0.02386474609375, 0.0005216598510742188, 0.0002524852752685547, 0.0077056884765625, 0.00010478496551513672, 0.177001953125, 0.007785797119140625, 0.047698974609375, 0.0006699562072753906, 0.00878143310546875, 0.00685882568359375, 0.0008578300476074219, 0.005992889404296875, 0.048492431640625, 0.0016355514526367188, 0.0081634521484375, 0.031463623046875, 0.0086212158203125, 0.0175323486328125, 2.1338462829589844e-05, 0.00287628173828125, 0.00013697147369384766, 0.00180816650390625, 0.037841796875, 0.034698486328125, 6.461143493652344e-05, 0.0145263671875, 0.0002276897430419922, 0.0006651878356933594, 0.0026531219482421875, 5.543231964111328e-05, 0.12030029296875, 0.00017583370208740234, 0.002117156982421875, 0.2203369140625, 0.0011730194091796875, 0.0007338523864746094, 0.0095672607421875, 0.0010528564453125, 0.0024127960205078125, 0.0335693359375, 0.00576019287109375, 0.0009212493896484375, 0.009857177734375, 0.051727294921875], "tokens": [275, 319, 322, 17584, 32, 275, 319, 333, 98, 48, 275, 319, 1348, 1411, 3404, 322, 17584, 14714, 544, 4946, 561, 438, 322, 2401, 17584, 275, 319, 372, 526, 1688, 32, 275, 319, 333, 98, 48, 275, 319, 2616, 2280, 30, 333, 687, 48, 4164, 32, 1689, 11946, 922, 1689, 11145, 42943]}
{"line_number": 552, "line_type": "original", "code": "        if (text == null) {", "entropy": 2.49609375, "is_bug_line": false, "sus_score": 0.19611613513818404, "per_token_entropy": [8.4140625, 4.1484375, 0.0931396484375, 6.88671875, 0.1668701171875, 0.0036678314208984375, 0.1759033203125, 0.08038330078125], "tokens": [351, 415, 308, 878, 610, 744, 27, 301]}
{"line_number": 552, "line_type": "generated", "code": "\n            throw new IllegalArgumentException();\n        }\n\n        FieldFormatter field = (FieldFormatter) originalPrinter;\n        field.setSuffix(suffix);\n        iElementPairs.remove(iElementPairs.size() - 1);\n        iElementPairs.remove(i", "entropy": 0.196044921875, "is_bug_line": false, "sus_score": 0.19611613513818404, "per_token_entropy": [0.31591796875, 0.221923828125, 0.0015077590942382812, 0.458740234375, 0.099609375, 0.02520751953125, 0.0001856088638305664, 0.9716796875, 0.313720703125, 0.004970550537109375, 0.93359375, 0.0986328125, 0.0218505859375, 0.0002994537353515625, 0.0002288818359375, 0.0005173683166503906, 0.077880859375, 0.041290283203125, 0.00021755695343017578, 0.1268310546875, 0.572265625, 0.1351318359375, 0.34423828125, 0.1864013671875, 0.10198974609375, 0.0263519287109375, 0.035858154296875, 0.2137451171875, 1.7578125, 0.7880859375, 0.0007715225219726562, 0.0008363723754882812, 1.5791015625, 0.00742340087890625, 0.02471923828125, 0.0007171630859375, 4.4226646423339844e-05, 0.0005745887756347656, 0.0006608963012695312, 0.0006384849548339844, 0.00019598007202148438, 0.0011348724365234375, 0.098876953125, 0.0006251335144042969, 0.153564453125, 0.1461181640625, 0.0167694091796875, 0.00016927719116210938, 0.0001176595687866211, 0.287109375, 3.3736228942871094e-05, 0.00010204315185546875], "tokens": [324, 1422, 537, 12137, 473, 291, 320, 584, 5692, 8736, 1600, 280, 308, 1176, 8736, 27, 4707, 14384, 45, 291, 1600, 32, 470, 14059, 26, 12420, 293, 291, 595, 1308, 23020, 32, 2546, 26, 91, 1308, 23020, 32, 891, 346, 429, 225, 35, 293, 291, 595, 1308, 23020, 32, 2546, 26, 91]}
{"line_number": 592, "line_type": "original", "code": "            originalPrinter = iElementPairs.get(iElementPairs.size() - 2);", "entropy": 0.98193359375, "is_bug_line": false, "sus_score": 0.17407765595569785, "per_token_entropy": [8.3359375, 7.1015625, 0.70166015625, 0.1778564453125, 0.108642578125, 0.01149749755859375, 0.0008063316345214844, 0.0036640167236328125, 0.040496826171875, 0.00170135498046875, 0.0218353271484375, 0.0018024444580078125, 6.35385513305664e-05, 0.0005278587341308594, 0.0018873214721679688, 0.005474090576171875, 0.0025787353515625, 0.006683349609375, 3.095703125, 0.01421356201171875], "tokens": [1468, 4707, 14384, 280, 595, 1308, 23020, 32, 371, 26, 91, 1308, 23020, 32, 891, 346, 429, 225, 36, 293]}
{"line_number": 592, "line_type": "generated", "code": "\n     * The text will be parsed case-insensitively.\n     * <p>\n     * Note: appending a separator discontinues any further work on the latest\n     * appended field.\n     *\n     * @param text  the text to", "entropy": 0.0236663818359375, "is_bug_line": false, "sus_score": 0.17407765595569785, "per_token_entropy": [0.2890625, 0.0025234222412109375, 0.20263671875, 0.0927734375, 0.0162506103515625, 0.002063751220703125, 0.0097198486328125, 0.00815582275390625, 0.001995086669921875, 0.013824462890625, 0.0012655258178710938, 6.794929504394531e-06, 0.09033203125, 0.0296630859375, 6.961822509765625e-05, 0.0711669921875, 0.0003707408905029297, 0.00029397010803222656, 0.0298614501953125, 1.5616416931152344e-05, 0.03143310546875, 0.003086090087890625, 0.00882720947265625, 9.059906005859375e-06, 0.0016756057739257812, 0.0011386871337890625, 0.006343841552734375, 0.00015032291412353516, 3.528594970703125e-05, 1.9073486328125e-06, 0.0003802776336669922, 0.0009722709655761719, 0.00016021728515625, 9.059906005859375e-05, 0.0006771087646484375, 0.0015115737915039062, 0.00377655029296875, 9.5367431640625e-06, 0.00112152099609375, 0.00033974647521972656, 0.0019893646240234375, 0.0088958740234375, 0.0003364086151123047, 0.0328369140625, 8.082389831542969e-05, 0.001895904541015625, 0.057159423828125, 0.07305908203125, 0.115234375, 0.00910186767578125, 0.003818511962890625, 0.0024929046630859375], "tokens": [275, 319, 886, 1344, 1098, 526, 8436, 1135, 31, 2372, 18701, 8608, 32, 275, 319, 333, 98, 48, 275, 319, 5830, 44, 1123, 4013, 312, 17584, 1214, 666, 266, 1032, 1346, 9686, 1389, 544, 322, 6615, 275, 319, 22363, 1600, 32, 275, 319, 275, 319, 477, 753, 1344, 225, 322, 1344, 372]}
{"line_number": 593, "line_type": "original", "code": "            originalParser = iElementPairs.get(iElementPairs.size() - 1);", "entropy": 1.072265625, "is_bug_line": false, "sus_score": 0.17407765595569785, "per_token_entropy": [8.2890625, 8.234375, 3.171875, 0.468994140625, 0.599609375, 0.0266571044921875, 0.0020084381103515625, 0.004650115966796875, 0.070068359375, 0.0028400421142578125, 0.037353515625, 0.0035400390625, 0.00015485286712646484, 0.0014133453369140625, 0.0014467239379882812, 0.0097808837890625, 0.00543212890625, 0.00939178466796875, 0.462890625, 0.04754638671875], "tokens": [1468, 4707, 2825, 280, 595, 1308, 23020, 32, 371, 26, 91, 1308, 23020, 32, 891, 346, 429, 225, 35, 293]}
{"line_number": 593, "line_type": "generated", "code": "\n     * <p>\n     * Note: appending a separator discontinues any further work on the latest\n     * appended field.\n     *\n     * @param text  the text to use as a separator\n     * @return this PeriodFormatterBuilder\n    ", "entropy": 0.033905029296875, "is_bug_line": false, "sus_score": 0.17407765595569785, "per_token_entropy": [0.118896484375, 0.00543212890625, 0.935546875, 0.0040740966796875, 0.00046181678771972656, 0.011199951171875, 7.283687591552734e-05, 0.0296173095703125, 0.004566192626953125, 0.01120758056640625, 9.298324584960938e-06, 0.0020046234130859375, 0.0013370513916015625, 0.00665283203125, 0.00017273426055908203, 2.8371810913085938e-05, 1.3113021850585938e-06, 0.0004050731658935547, 0.0009164810180664062, 0.00017702579498291016, 0.00011980533599853516, 0.0006613731384277344, 0.001949310302734375, 0.005733489990234375, 1.8596649169921875e-05, 0.0010747909545898438, 0.0003268718719482422, 0.002559661865234375, 0.03009033203125, 0.0008039474487304688, 0.0372314453125, 0.00010788440704345703, 0.0024280548095703125, 0.038360595703125, 0.06732177734375, 0.12744140625, 0.01038360595703125, 0.0038394927978515625, 0.0026569366455078125, 0.006378173828125, 0.007648468017578125, 0.006809234619140625, 0.004474639892578125, 0.1475830078125, 6.103515625e-05, 0.00042176246643066406, 0.11431884765625, 0.00119781494140625, 0.000415802001953125, 0.00013518333435058594, 0.00011515617370605469, 0.008270263671875], "tokens": [275, 319, 333, 98, 48, 275, 319, 5830, 44, 1123, 4013, 312, 17584, 1214, 666, 266, 1032, 1346, 9686, 1389, 544, 322, 6615, 275, 319, 22363, 1600, 32, 275, 319, 275, 319, 477, 753, 1344, 225, 322, 1344, 372, 793, 619, 312, 17584, 275, 319, 477, 601, 458, 24156, 8736, 1796, 275]}
{"line_number": 605, "line_type": "original", "code": "        clearPrefix();", "entropy": 5.84375, "is_bug_line": false, "sus_score": 0.17407765595569785, "per_token_entropy": [6.5, 11.5546875, 4.609375, 0.708984375], "tokens": [351, 4233, 5419, 473]}
{"line_number": 605, "line_type": "generated", "code": "\n    /**\n     * Append a separator, which is output only if fields are printed before the separator.\n     * <p>\n     * For example,\n     * <code>builder.appendDays().appendSeparatorIfFieldsBefore(\",\").appendHours()</code>", "entropy": 0.04315185546875, "is_bug_line": false, "sus_score": 0.17407765595569785, "per_token_entropy": [0.412841796875, 0.249267578125, 0.018218994140625, 6.377696990966797e-05, 0.10699462890625, 0.0212249755859375, 0.050537109375, 0.1805419921875, 0.0302581787109375, 0.0318603515625, 0.0208740234375, 0.4755859375, 0.0026493072509765625, 0.01031494140625, 0.0020008087158203125, 0.00611114501953125, 0.06756591796875, 0.0494384765625, 0.0237579345703125, 0.01076507568359375, 0.0017375946044921875, 0.00018715858459472656, 0.01180267333984375, 0.0002932548522949219, 0.0006227493286132812, 0.00042510032653808594, 6.973743438720703e-05, 0.03045654296875, 7.11679458618164e-05, 0.00113677978515625, 0.046112060546875, 9.59634780883789e-05, 0.002544403076171875, 0.0017795562744140625, 0.0003018379211425781, 0.0031795501708984375, 0.00040841102600097656, 0.0002727508544921875, 0.05340576171875, 0.01456451416015625, 0.0009655952453613281, 0.0020923614501953125, 0.04766845703125, 0.0009870529174804688, 0.2327880859375, 0.005084991455078125, 0.0003294944763183594, 0.00025844573974609375, 0.00986480712890625, 0.00341796875, 3.9577484130859375e-05, 0.0003333091735839844], "tokens": [284, 1022, 275, 319, 20593, 312, 17584, 30, 1510, 438, 1688, 1755, 415, 3829, 884, 21440, 2670, 322, 17584, 32, 275, 319, 333, 98, 48, 275, 319, 2616, 2280, 30, 275, 319, 333, 687, 48, 4164, 32, 1689, 11946, 922, 1689, 11145, 2797, 4140, 5658, 46508, 547, 1689, 14896, 11048, 687, 48]}
{"line_number": 606, "line_type": "original", "code": "        FieldFormatter newField = new FieldFormatter((FieldFormatter) originalPrinter, suffix);", "entropy": 1.51171875, "is_bug_line": false, "sus_score": 0.17407765595569785, "per_token_entropy": [5.39453125, 6.16015625, 0.489013671875, 1.7822265625, 0.1231689453125, 0.07977294921875, 0.5595703125, 0.57373046875, 0.0268707275390625, 5.93359375, 0.180419921875, 0.1514892578125, 0.0195465087890625, 0.765625, 0.35205078125, 0.1361083984375, 3.822265625, 0.65283203125], "tokens": [351, 5692, 8736, 537, 1176, 280, 537, 5692, 8736, 1162, 1176, 8736, 27, 4707, 14384, 30, 12809, 293]}
{"line_number": 606, "line_type": "generated", "code": "\n     * Append a separator, which is output only if fields are printed before the separator.\n     * <p>\n     * For example,\n     * <code>builder.appendDays().appendSeparatorIfFieldsBefore(\",\").appendHours()</code>\n     *", "entropy": 0.040252685546875, "is_bug_line": false, "sus_score": 0.17407765595569785, "per_token_entropy": [0.47509765625, 0.11993408203125, 0.2374267578125, 0.01412200927734375, 0.0258941650390625, 0.1337890625, 0.0186614990234375, 0.0222320556640625, 0.0190277099609375, 0.2822265625, 0.0027103424072265625, 0.00914764404296875, 0.0017595291137695312, 0.006206512451171875, 0.05450439453125, 0.06390380859375, 0.03155517578125, 0.013275146484375, 0.0164337158203125, 0.001209259033203125, 0.0179595947265625, 0.00034046173095703125, 0.00046253204345703125, 0.0142364501953125, 3.826618194580078e-05, 0.03985595703125, 0.00011706352233886719, 0.0012884140014648438, 0.0491943359375, 0.0002789497375488281, 0.0034332275390625, 0.0029296875, 0.0004181861877441406, 0.0034503936767578125, 0.0004818439483642578, 0.0003230571746826172, 0.0621337890625, 0.0109405517578125, 0.0012311935424804688, 0.00215911865234375, 0.04693603515625, 0.0010395050048828125, 0.263671875, 0.00537109375, 0.0003757476806640625, 0.00027441978454589844, 0.0095062255859375, 0.00438690185546875, 4.839897155761719e-05, 0.0003685951232910156, 0.0017719268798828125, 3.695487976074219e-05], "tokens": [275, 319, 20593, 312, 17584, 30, 1510, 438, 1688, 1755, 415, 3829, 884, 21440, 2670, 322, 17584, 32, 275, 319, 333, 98, 48, 275, 319, 2616, 2280, 30, 275, 319, 333, 687, 48, 4164, 32, 1689, 11946, 922, 1689, 11145, 2797, 4140, 5658, 46508, 547, 1689, 14896, 11048, 687, 48, 275, 319]}
{"line_number": 607, "line_type": "original", "code": "        iElementPairs.set(iElementPairs.size() - 2, newField);", "entropy": 0.94677734375, "is_bug_line": false, "sus_score": 0.17407765595569785, "per_token_entropy": [4.41015625, 4.984375, 1.171875, 0.0196380615234375, 0.0399169921875, 0.7607421875, 0.0085296630859375, 0.0408935546875, 0.00942230224609375, 0.00014472007751464844, 0.0011043548583984375, 0.0016355514526367188, 0.01427459716796875, 0.0031414031982421875, 0.0127716064453125, 2.166015625, 0.00750732421875, 0.89892578125, 4.375, 0.01026153564453125], "tokens": [351, 595, 1308, 23020, 32, 470, 26, 91, 1308, 23020, 32, 891, 346, 429, 225, 36, 30, 537, 1176, 293]}
{"line_number": 607, "line_type": "generated", "code": "\n     * <p>\n     * For example,\n     * <code>builder.appendDays().appendSeparatorIfFieldsBefore(\",\").appendHours()</code>\n     * will only output the comma if the days fields is output.\n     * <p>\n    ", "entropy": 0.04290771484375, "is_bug_line": false, "sus_score": 0.17407765595569785, "per_token_entropy": [0.1964111328125, 0.0012807846069335938, 0.358642578125, 0.003787994384765625, 0.0003712177276611328, 0.07305908203125, 3.802776336669922e-05, 0.1873779296875, 0.0001596212387084961, 0.0020389556884765625, 0.1295166015625, 0.000362396240234375, 0.0049896240234375, 0.00506591796875, 0.0005855560302734375, 0.0042572021484375, 0.0005536079406738281, 0.0003800392150878906, 0.04705810546875, 0.0129852294921875, 0.001422882080078125, 0.0021648406982421875, 0.10675048828125, 0.00095367431640625, 0.38818359375, 0.0077362060546875, 0.0005640983581542969, 0.0003120899200439453, 0.00893402099609375, 0.00664520263671875, 3.516674041748047e-05, 0.0007977485656738281, 0.0033016204833984375, 3.0875205993652344e-05, 0.0019445419311523438, 0.0032501220703125, 0.0004837512969970703, 0.0006875991821289062, 0.0007915496826171875, 0.002323150634765625, 0.00974273681640625, 0.080322265625, 0.5234375, 0.00749969482421875, 0.01528167724609375, 0.006816864013671875, 0.0112762451171875, 0.00020313262939453125, 0.00494384765625, 0.00014543533325195312, 3.457069396972656e-05, 0.00420379638671875], "tokens": [275, 319, 333, 98, 48, 275, 319, 2616, 2280, 30, 275, 319, 333, 687, 48, 4164, 32, 1689, 11946, 922, 1689, 11145, 2797, 4140, 5658, 46508, 547, 1689, 14896, 11048, 687, 48, 275, 319, 1098, 1755, 1688, 322, 18231, 415, 322, 6935, 3829, 438, 1688, 32, 275, 319, 333, 98, 48, 275]}
{"line_number": 608, "line_type": "original", "code": "        iElementPairs.set(iElementPairs.size() - 1, newField);", "entropy": 1.03515625, "is_bug_line": false, "sus_score": 0.17407765595569785, "per_token_entropy": [5.703125, 4.50390625, 1.701171875, 0.018157958984375, 0.06396484375, 1.2138671875, 0.01367950439453125, 0.05328369140625, 0.01495361328125, 0.0005674362182617188, 0.001743316650390625, 0.0013294219970703125, 0.016510009765625, 0.0032939910888671875, 0.015899658203125, 0.712890625, 0.00887298583984375, 1.150390625, 5.4765625, 0.02178955078125], "tokens": [351, 595, 1308, 23020, 32, 470, 26, 91, 1308, 23020, 32, 891, 346, 429, 225, 35, 30, 537, 1176, 293]}
{"line_number": 608, "line_type": "generated", "code": "\n     * For example,\n     * <code>builder.appendDays().appendSeparatorIfFieldsBefore(\",\").appendHours()</code>\n     * will only output the comma if the days field is output.\n     * <p>\n     * The text will be", "entropy": 0.0474853515625, "is_bug_line": false, "sus_score": 0.17407765595569785, "per_token_entropy": [0.2900390625, 0.0014476776123046875, 0.2091064453125, 0.00023794174194335938, 0.0025882720947265625, 0.198486328125, 0.0003199577331542969, 0.0101776123046875, 0.0069122314453125, 0.001453399658203125, 0.00550079345703125, 0.0010843276977539062, 0.0005369186401367188, 0.0501708984375, 0.0148162841796875, 0.002208709716796875, 0.002437591552734375, 0.05328369140625, 0.0015439987182617188, 0.354248046875, 0.00835418701171875, 0.0006580352783203125, 0.0003437995910644531, 0.0090789794921875, 0.0069732666015625, 6.973743438720703e-05, 0.001399993896484375, 0.01015472412109375, 6.568431854248047e-05, 0.0028896331787109375, 0.003658294677734375, 0.000537872314453125, 0.0007557868957519531, 0.000888824462890625, 0.002475738525390625, 0.0103912353515625, 0.08917236328125, 0.99951171875, 0.0097503662109375, 0.01641845703125, 0.00951385498046875, 0.020477294921875, 0.0003345012664794922, 0.009124755859375, 0.0003380775451660156, 0.0004553794860839844, 0.0297698974609375, 1.2040138244628906e-05, 0.014068603515625, 0.0022640228271484375, 0.001377105712890625, 0.000232696533203125], "tokens": [275, 319, 2616, 2280, 30, 275, 319, 333, 687, 48, 4164, 32, 1689, 11946, 922, 1689, 11145, 2797, 4140, 5658, 46508, 547, 1689, 14896, 11048, 687, 48, 275, 319, 1098, 1755, 1688, 322, 18231, 415, 322, 6935, 1600, 438, 1688, 32, 275, 319, 333, 98, 48, 275, 319, 886, 1344, 1098, 526]}
{"line_number": 609, "line_type": "original", "code": "        iFieldFormatters[newField.getFieldType()] = newField;", "entropy": 2.6953125, "is_bug_line": false, "sus_score": 0.17407765595569785, "per_token_entropy": [5.41796875, 6.71484375, 7.8359375, 5.7109375, 0.06390380859375, 2.90625, 7.359375, 1.625, 3.111328125, 1.14453125, 0.035430908203125, 1.0107421875, 0.0304412841796875, 0.0687255859375, 0.0080108642578125, 0.08770751953125], "tokens": [351, 595, 1176, 2207, 5725, 77, 890, 1176, 32, 18269, 620, 7662, 280, 537, 1176, 45]}
{"line_number": 609, "line_type": "generated", "code": "\n     * <p>\n     * The text will be parsed case-insensitively.\n     * <p>\n     * Note: appending a separator discontinues any further work on the latest\n     * appended field.\n     *\n     * @param", "entropy": 0.04266357421875, "is_bug_line": false, "sus_score": 0.17407765595569785, "per_token_entropy": [0.341064453125, 0.0056915283203125, 0.5634765625, 0.9365234375, 0.000537872314453125, 0.1573486328125, 6.687641143798828e-05, 0.1038818359375, 0.0172882080078125, 0.00450897216796875, 0.0008149147033691406, 0.00798797607421875, 0.001708984375, 0.000278472900390625, 0.0009965896606445312, 0.00032830238342285156, 1.5497207641601562e-06, 0.00980377197265625, 0.01561737060546875, 3.4928321838378906e-05, 0.01397705078125, 0.0001456737518310547, 5.900859832763672e-05, 0.0017347335815429688, 2.944469451904297e-05, 0.006244659423828125, 0.0002892017364501953, 0.0005817413330078125, 1.7881393432617188e-06, 9.965896606445312e-05, 0.00029349327087402344, 0.0004875659942626953, 4.5418739318847656e-05, 4.291534423828125e-06, 1.6689300537109375e-06, 4.172325134277344e-05, 0.0001093149185180664, 3.7789344787597656e-05, 2.0623207092285156e-05, 0.00012731552124023438, 0.0005640983581542969, 0.00246429443359375, 3.159046173095703e-05, 0.0006399154663085938, 8.678436279296875e-05, 0.0004436969757080078, 0.0077972412109375, 0.00010943412780761719, 0.01378631591796875, 1.2040138244628906e-05, 0.0008645057678222656, 0.0004940032958984375], "tokens": [275, 319, 333, 98, 48, 275, 319, 886, 1344, 1098, 526, 8436, 1135, 31, 2372, 18701, 8608, 32, 275, 319, 333, 98, 48, 275, 319, 5830, 44, 1123, 4013, 312, 17584, 1214, 666, 266, 1032, 1346, 9686, 1389, 544, 322, 6615, 275, 319, 22363, 1600, 32, 275, 319, 275, 319, 477, 753]}
{"line_number": 611, "line_type": "original", "code": "        return this;", "entropy": 3.703125, "is_bug_line": false, "sus_score": 0.17407765595569785, "per_token_entropy": [4.9453125, 4.01953125, 2.4609375, 3.384765625], "tokens": [351, 442, 458, 45]}
{"line_number": 611, "line_type": "generated", "code": "\n     * The text will be parsed case-insensitively.\n     * <p>\n     * Note: appending a separator discontinues any further work on the latest\n     * appended field.\n     *\n     * @param text  the text to", "entropy": 0.015472412109375, "is_bug_line": false, "sus_score": 0.17407765595569785, "per_token_entropy": [0.2259521484375, 0.002689361572265625, 0.435302734375, 0.0048980712890625, 0.001613616943359375, 0.0005054473876953125, 0.004001617431640625, 0.0011310577392578125, 0.0003688335418701172, 0.0004982948303222656, 0.0005507469177246094, 2.384185791015625e-06, 0.00579833984375, 0.04046630859375, 0.00010192394256591797, 0.01885986328125, 0.00012874603271484375, 7.593631744384766e-05, 0.002040863037109375, 5.7220458984375e-05, 0.00420379638671875, 0.0002834796905517578, 0.0005469322204589844, 8.344650268554688e-07, 0.0001157522201538086, 0.00025272369384765625, 0.0005769729614257812, 4.4345855712890625e-05, 1.1920928955078125e-05, 1.7881393432617188e-06, 4.482269287109375e-05, 0.00010395050048828125, 5.054473876953125e-05, 2.014636993408203e-05, 0.0001442432403564453, 0.0004630088806152344, 0.0013570785522460938, 1.3709068298339844e-05, 0.0005207061767578125, 0.0001016855239868164, 0.0005035400390625, 0.0147705078125, 0.0002453327178955078, 0.014495849609375, 2.765655517578125e-05, 0.0008029937744140625, 0.0012378692626953125, 0.0121002197265625, 0.0050811767578125, 0.0008077621459960938, 0.0004029273986816406, 0.0005087852478027344], "tokens": [275, 319, 886, 1344, 1098, 526, 8436, 1135, 31, 2372, 18701, 8608, 32, 275, 319, 333, 98, 48, 275, 319, 5830, 44, 1123, 4013, 312, 17584, 1214, 666, 266, 1032, 1346, 9686, 1389, 544, 322, 6615, 275, 319, 22363, 1600, 32, 275, 319, 275, 319, 477, 753, 1344, 225, 322, 1344, 372]}
{"line_number": 463, "line_type": "original", "code": "        appendField(MINUTES);", "entropy": 2.1171875, "is_bug_line": false, "sus_score": 0.1690308509457033, "per_token_entropy": [5.28125, 3.841796875, 0.263916015625, 0.013275146484375, 4.484375, 0.1417236328125, 0.7919921875], "tokens": [351, 5489, 1176, 26, 4683, 46520, 293]}
{"line_number": 463, "line_type": "generated", "code": "\n        return this;\n    }\n\n    /**\n     * Instruct the printer to emit a time zone offset, if supported.\n     *\n     * @return this PeriodFormatterBuilder\n     */\n    public PeriodFormatterBuilder appendTimeZoneOffset(DateTimeZone display) {\n        append", "entropy": 0.3046875, "is_bug_line": false, "sus_score": 0.1690308509457033, "per_token_entropy": [0.031494140625, 0.0113067626953125, 0.0008401870727539062, 0.00011396408081054688, 0.007587432861328125, 0.0006761550903320312, 0.1629638671875, 0.11590576171875, 0.00524139404296875, 3.9577484130859375e-05, 0.06695556640625, 0.0018768310546875, 0.0004513263702392578, 0.01265716552734375, 0.0055084228515625, 0.0211029052734375, 0.85400390625, 2.3671875, 1.1640625, 1.1416015625, 1.1201171875, 0.09442138671875, 0.032073974609375, 0.034912109375, 0.07550048828125, 0.00030040740966796875, 1.275390625, 4.57763671875e-05, 0.016448974609375, 0.1484375, 0.0031147003173828125, 0.0013437271118164062, 0.0016040802001953125, 9.751319885253906e-05, 0.00411224365234375, 0.093017578125, 0.006103515625, 0.0040435791015625, 0.0015134811401367188, 0.0017004013061523438, 9.894371032714844e-06, 0.0092620849609375, 0.02471923828125, 0.03662109375, 0.83203125, 2.19921875, 0.201171875, 1.009765625, 1.818359375, 0.0024433135986328125, 0.2298583984375, 0.59228515625], "tokens": [291, 442, 458, 45, 284, 320, 446, 1022, 275, 319, 701, 1167, 322, 23307, 372, 9533, 312, 1133, 10790, 3401, 30, 415, 5420, 32, 275, 319, 275, 319, 477, 601, 458, 24156, 8736, 1796, 275, 569, 284, 562, 24156, 8736, 1796, 5489, 26223, 3457, 26, 4852, 6767, 2503, 27, 301, 291, 5489]}
{"line_number": 464, "line_type": "original", "code": "        return this;", "entropy": 1.677734375, "is_bug_line": false, "sus_score": 0.1690308509457033, "per_token_entropy": [6.421875, 0.2744140625, 0.007373809814453125, 0.006305694580078125], "tokens": [351, 442, 458, 45]}
{"line_number": 464, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Instruct the printer to emit an integer millis field, if supported.\n     * <p>\n     * The number of printed and parsed digits can be controlled using\n     * {@link #minimumPrintedDigits(int)} and {@", "entropy": 0.0428466796875, "is_bug_line": false, "sus_score": 0.1690308509457033, "per_token_entropy": [0.141845703125, 0.01078033447265625, 0.341064453125, 0.1011962890625, 0.0101776123046875, 7.355213165283203e-05, 0.07342529296875, 0.0023956298828125, 0.00043845176696777344, 0.01255035400390625, 0.00507354736328125, 0.0208587646484375, 0.640625, 0.22314453125, 0.060150146484375, 0.137451171875, 0.069091796875, 0.037567138671875, 0.004894256591796875, 0.020172119140625, 0.002964019775390625, 8.273124694824219e-05, 0.1407470703125, 0.00027751922607421875, 0.00015723705291748047, 0.00023365020751953125, 1.430511474609375e-05, 0.06365966796875, 0.034698486328125, 0.0002551078796386719, 0.03424072265625, 0.024322509765625, 8.535385131835938e-05, 0.0005235671997070312, 0.0062103271484375, 6.222724914550781e-05, 0.0007300376892089844, 0.0002586841583251953, 0.000591278076171875, 4.649162292480469e-06, 0.00022614002227783203, 4.661083221435547e-05, 0.00022304058074951172, 0.0019311904907226562, 0.0002117156982421875, 4.0531158447265625e-06, 0.00024402141571044922, 4.100799560546875e-05, 4.184246063232422e-05, 0.0011959075927734375, 0.00044655799865722656, 0.0005125999450683594], "tokens": [284, 320, 446, 1022, 275, 319, 701, 1167, 322, 23307, 372, 9533, 600, 4991, 42302, 1600, 30, 415, 5420, 32, 275, 319, 333, 98, 48, 275, 319, 886, 1451, 432, 21440, 461, 8436, 16105, 883, 526, 28355, 1471, 275, 319, 3088, 1204, 588, 16516, 4014, 318, 22326, 26, 410, 4370, 461, 3088]}
{"line_number": 591, "line_type": "original", "code": "        if (iElementPairs.size() > 0) {", "entropy": 0.86669921875, "is_bug_line": false, "sus_score": 0.1690308509457033, "per_token_entropy": [4.90234375, 2.701171875, 0.174072265625, 0.68017578125, 0.8857421875, 0.004848480224609375, 0.01442718505859375, 0.2763671875, 0.0014295578002929688, 1.509765625, 0.01059722900390625, 0.25146484375, 0.69189453125, 0.025421142578125], "tokens": [351, 415, 308, 91, 1308, 23020, 32, 891, 346, 848, 225, 34, 27, 301]}
{"line_number": 591, "line_type": "generated", "code": "\n     * The text will be parsed case-insensitively.\n     * <p>\n     * Note: appending a separator discontinues any further work on the latest\n     * appended field.\n     *\n     * @param text  the text to", "entropy": 0.027008056640625, "is_bug_line": false, "sus_score": 0.1690308509457033, "per_token_entropy": [0.167724609375, 0.00274658203125, 0.52001953125, 0.08563232421875, 0.01593017578125, 0.0017194747924804688, 0.010650634765625, 0.0067138671875, 0.001850128173828125, 0.01486968994140625, 0.0011444091796875, 5.602836608886719e-06, 0.0732421875, 0.0633544921875, 0.00010526180267333984, 0.0833740234375, 0.000354766845703125, 0.0002465248107910156, 0.007061004638671875, 2.0265579223632812e-05, 0.0290374755859375, 0.002864837646484375, 0.00848388671875, 1.0013580322265625e-05, 0.0016183853149414062, 0.0010843276977539062, 0.005840301513671875, 0.00014340877532958984, 2.7179718017578125e-05, 2.1457672119140625e-06, 0.00034236907958984375, 0.0007562637329101562, 0.00015819072723388672, 8.45193862915039e-05, 0.0005249977111816406, 0.001422882080078125, 0.004299163818359375, 1.52587890625e-05, 0.0009813308715820312, 0.00028014183044433594, 0.0020599365234375, 0.0272216796875, 0.00041866302490234375, 0.040771484375, 6.42538070678711e-05, 0.0018310546875, 0.01666259765625, 0.05810546875, 0.126953125, 0.009307861328125, 0.00394439697265625, 0.0024967193603515625], "tokens": [275, 319, 886, 1344, 1098, 526, 8436, 1135, 31, 2372, 18701, 8608, 32, 275, 319, 333, 98, 48, 275, 319, 5830, 44, 1123, 4013, 312, 17584, 1214, 666, 266, 1032, 1346, 9686, 1389, 544, 322, 6615, 275, 319, 22363, 1600, 32, 275, 319, 275, 319, 477, 753, 1344, 225, 322, 1344, 372]}
