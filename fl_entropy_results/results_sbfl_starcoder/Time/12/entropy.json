{"line_number": 210, "line_type": "original", "code": "        int yearOfEra = calendar.get(Calendar.YEAR);", "entropy": 1.31640625, "is_bug_line": true, "sus_score": 0.26490647141300877, "per_token_entropy": [5.00390625, 6.58203125, 0.72509765625, 0.68798828125, 0.0136871337890625, 8.64267349243164e-05, 0.066650390625, 6.15234375, 0.0579833984375, 0.0022258758544921875, 0.0253753662109375, 0.2301025390625, 0.0017137527465820312, 0.13916015625, 0.056182861328125], "tokens": [351, 629, 4947, 1419, 55, 1691, 280, 14461, 32, 371, 26, 9389, 32, 23164, 293]}
{"line_number": 210, "line_type": "generated", "code": "\n    public LocalDate() {\n        this(DateTimeUtils.currentTimeMillis(), ISOChronology.getInstance());\n    }\n\n    /**\n     * Constructs an instance set to the current local time evaluated using\n     * ISO chronology in the specified zone.\n     * <p", "entropy": 0.057647705078125, "is_bug_line": true, "sus_score": 0.26490647141300877, "per_token_entropy": [0.33203125, 0.3369140625, 0.04473876953125, 0.002872467041015625, 0.00847625732421875, 0.181396484375, 0.387451171875, 0.131103515625, 0.09423828125, 0.0191497802734375, 0.008819580078125, 0.002025604248046875, 0.111572265625, 0.169189453125, 0.130859375, 0.0010881423950195312, 1.0728836059570312e-06, 0.00016248226165771484, 0.0002090930938720703, 0.1312255859375, 0.028228759765625, 9.85860824584961e-05, 0.08709716796875, 0.08319091796875, 0.0008406639099121094, 2.002716064453125e-05, 0.006488800048828125, 0.0010118484497070312, 0.00018036365509033203, 0.0201263427734375, 0.00015544891357421875, 0.00014770030975341797, 0.03045654296875, 0.00418853759765625, 0.07696533203125, 0.045257568359375, 0.0026702880859375, 0.009002685546875, 1.621246337890625e-05, 0.05084228515625, 0.00379180908203125, 2.7418136596679688e-06, 8.225440979003906e-06, 0.0030994415283203125, 0.0016126632690429688, 0.0094451904296875, 0.43408203125, 0.0026531219482421875, 0.0005292892456054688, 3.4570693969726562e-06, 0.0013828277587890625, 4.291534423828125e-06], "tokens": [284, 562, 27490, 346, 301, 291, 458, 26, 4852, 2755, 32, 17229, 1026, 19687, 828, 2558, 10537, 32, 7426, 1035, 284, 320, 446, 1022, 275, 319, 29799, 600, 1980, 739, 372, 322, 1550, 2196, 1133, 22423, 1471, 275, 319, 19687, 663, 2558, 10537, 328, 322, 3191, 10790, 32, 275, 319, 333, 98]}
{"line_number": 211, "line_type": "original", "code": "        return new LocalDate(", "entropy": 2.564453125, "is_bug_line": true, "sus_score": 0.26490647141300877, "per_token_entropy": [5.78125, 4.890625, 1.873046875, 0.06732177734375, 0.211669921875], "tokens": [351, 442, 537, 27490, 26]}
{"line_number": 211, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Constructs an instance set to the current local time evaluated using\n     * ISO chronology in the specified zone.\n     * <p>\n     * Once the constructor is completed, the zone is no longer used.\n     * \n     *", "entropy": 0.049530029296875, "is_bug_line": true, "sus_score": 0.26490647141300877, "per_token_entropy": [1.212890625, 0.06280517578125, 0.0355224609375, 0.031524658203125, 0.0008873939514160156, 1.5974044799804688e-05, 0.004322052001953125, 0.0026340484619140625, 0.00014841556549072266, 0.06512451171875, 0.0002524852752685547, 0.0004355907440185547, 0.09478759765625, 0.0075531005859375, 0.29345703125, 0.203369140625, 0.0018224716186523438, 0.0242462158203125, 9.775161743164062e-06, 0.017913818359375, 0.0019817352294921875, 5.364418029785156e-06, 5.602836608886719e-06, 0.0017709732055664062, 0.0012340545654296875, 0.0054168701171875, 0.205078125, 0.0030765533447265625, 0.0004706382751464844, 5.0067901611328125e-06, 0.002353668212890625, 7.152557373046875e-06, 9.059906005859375e-06, 0.0001609325408935547, 1.9073486328125e-05, 0.2069091796875, 8.64267349243164e-05, 2.1457672119140625e-06, 2.8252601623535156e-05, 1.049041748046875e-05, 6.198883056640625e-06, 5.125999450683594e-06, 0.0104522705078125, 1.0848045349121094e-05, 7.05718994140625e-05, 2.3365020751953125e-05, 7.510185241699219e-06, 0.005741119384765625, 0.0005698204040527344, 1.3947486877441406e-05, 0.07177734375, 1.4066696166992188e-05], "tokens": [284, 320, 446, 1022, 275, 319, 29799, 600, 1980, 739, 372, 322, 1550, 2196, 1133, 22423, 1471, 275, 319, 19687, 663, 2558, 10537, 328, 322, 3191, 10790, 32, 275, 319, 333, 98, 48, 275, 319, 15952, 322, 4374, 438, 9435, 30, 322, 10790, 438, 1289, 8928, 1654, 32, 275, 319, 5384, 319]}
{"line_number": 1805, "line_type": "original", "code": "        return ISODateTimeFormat.date().print(this);", "entropy": 1.8447265625, "is_bug_line": false, "sus_score": 0.26490647141300877, "per_token_entropy": [5.921875, 2.013671875, 11.6796875, 0.7099609375, 0.49462890625, 0.010894775390625, 0.43212890625, 0.30712890625, 0.372314453125, 0.036407470703125, 0.113037109375, 0.0458984375], "tokens": [351, 442, 19687, 4852, 2207, 32, 770, 922, 1216, 26, 578, 293]}
{"line_number": 1805, "line_type": "generated", "code": "\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Get the property object for the specified type, which contains many useful methods.\n     *\n     * @param type  the field type to get the chronology for\n     * @return the property object\n     * @", "entropy": 0.149658203125, "is_bug_line": false, "sus_score": 0.26490647141300877, "per_token_entropy": [1.5322265625, 0.85986328125, 0.31298828125, 0.66552734375, 0.015350341796875, 0.036163330078125, 0.08050537109375, 0.0152435302734375, 0.00018727779388427734, 0.83984375, 0.115478515625, 0.5859375, 0.10748291015625, 0.0003695487976074219, 0.45947265625, 0.0307464599609375, 0.05352783203125, 0.0305633544921875, 0.0073394775390625, 0.1689453125, 0.0999755859375, 0.1346435546875, 0.09149169921875, 9.369850158691406e-05, 0.0017881393432617188, 0.00015401840209960938, 0.032958984375, 3.993511199951172e-05, 0.00440216064453125, 0.039031982421875, 0.10882568359375, 0.0002307891845703125, 0.005283355712890625, 0.001873016357421875, 0.045166015625, 0.4873046875, 0.1209716796875, 0.0002932548522949219, 0.58544921875, 3.0279159545898438e-05, 0.00034546852111816406, 0.0005745887756347656, 0.00804901123046875, 0.0003643035888671875, 1.7881393432617188e-06, 0.0019245147705078125, 0.0005102157592773438, 0.035400390625, 0.04656982421875, 0.00315093994140625, 0.00960540771484375, 1.0013580322265625e-05], "tokens": [284, 320, 446, 434, 42510, 284, 1022, 275, 319, 1390, 322, 2804, 1300, 436, 322, 3191, 827, 30, 1510, 4304, 5075, 6364, 4438, 32, 275, 319, 275, 319, 477, 753, 827, 225, 322, 1600, 827, 372, 622, 322, 663, 2558, 10537, 436, 275, 319, 477, 601, 322, 2804, 1300, 275, 319, 477]}
{"line_number": 207, "line_type": "original", "code": "        if (calendar == null) {", "entropy": 2.017578125, "is_bug_line": false, "sus_score": 0.22941573387056174, "per_token_entropy": [3.166015625, 4.51171875, 0.008270263671875, 7.3984375, 1.01171875, 0.003948211669921875, 0.0062103271484375, 0.029632568359375], "tokens": [351, 415, 308, 10542, 610, 744, 27, 301]}
{"line_number": 207, "line_type": "generated", "code": "\n     */\n    public LocalDate() {\n        this(DateTimeUtils.currentTimeMillis(), ISOChronology.getInstance());\n    }\n\n    /**\n     * Constructs an instance set to the current local time evaluated using\n     * ISO chronology in the specified time zone.\n    ", "entropy": 0.09332275390625, "is_bug_line": false, "sus_score": 0.22941573387056174, "per_token_entropy": [1.142578125, 0.426025390625, 0.00972747802734375, 0.11126708984375, 0.07305908203125, 0.0010986328125, 0.00691986083984375, 0.3701171875, 0.264892578125, 0.1177978515625, 0.10882568359375, 0.013427734375, 0.0058135986328125, 0.0018215179443359375, 0.03875732421875, 0.203125, 0.1644287109375, 0.0008683204650878906, 8.344650268554688e-07, 0.00010836124420166016, 0.0001500844955444336, 0.124267578125, 0.049560546875, 0.00022101402282714844, 0.131103515625, 0.08331298828125, 0.0030994415283203125, 3.886222839355469e-05, 0.00499725341796875, 0.0014514923095703125, 0.0001900196075439453, 0.03778076171875, 0.00040793418884277344, 0.0005993843078613281, 0.12451171875, 0.0030422210693359375, 0.051300048828125, 0.0460205078125, 0.003383636474609375, 0.01216888427734375, 2.2292137145996094e-05, 0.0511474609375, 0.00531768798828125, 3.2186508178710938e-06, 6.198883056640625e-06, 0.0024852752685546875, 0.002353668212890625, 0.01239013671875, 1.017578125, 0.01007843017578125, 0.0006594657897949219, 0.01314544677734375], "tokens": [275, 569, 284, 562, 27490, 346, 301, 291, 458, 26, 4852, 2755, 32, 17229, 1026, 19687, 828, 2558, 10537, 32, 7426, 1035, 284, 320, 446, 1022, 275, 319, 29799, 600, 1980, 739, 372, 322, 1550, 2196, 1133, 22423, 1471, 275, 319, 19687, 663, 2558, 10537, 328, 322, 3191, 1133, 10790, 32, 275]}
{"line_number": 548, "line_type": "original", "code": "        return fieldType.getField(getChronology()).get(getLocalMillis());", "entropy": 1.052734375, "is_bug_line": false, "sus_score": 0.20519567041703082, "per_token_entropy": [4.45703125, 1.5322265625, 9.6875, 0.02459716796875, 0.01505279541015625, 0.03692626953125, 0.061065673828125, 0.00484466552734375, 0.00028204917907714844, 2.8848648071289062e-05, 0.012847900390625, 0.27978515625, 0.5146484375, 0.119384765625, 0.0019140243530273438, 0.091552734375], "tokens": [351, 442, 43661, 32, 18269, 26, 371, 828, 2558, 10537, 4251, 371, 26, 29193, 10906, 1035]}
{"line_number": 548, "line_type": "generated", "code": "\n     */\n    protected long getLocalMillis() {\n        return localMillis;\n    }\n\n    /**\n     * Sets the local milliseconds from the Java epoch\n     * of 1970-01-01T00:00:00", "entropy": 0.164794921875, "is_bug_line": false, "sus_score": 0.20519567041703082, "per_token_entropy": [1.236328125, 0.06585693359375, 0.0189208984375, 2.189453125, 0.1202392578125, 0.007152557373046875, 0.006000518798828125, 0.0004343986511230469, 0.01259613037109375, 0.00797271728515625, 0.2135009765625, 0.326171875, 1.41796875, 0.004302978515625, 0.01262664794921875, 0.060516357421875, 0.0007076263427734375, 0.1796875, 0.62841796875, 0.010498046875, 0.00014460086822509766, 1.189453125, 0.00794219970703125, 0.2130126953125, 0.449951171875, 0.09283447265625, 0.0013685226440429688, 0.010650634765625, 5.888938903808594e-05, 0.08465576171875, 0.00020694732666015625, 0.0008072853088378906, 0.00011730194091796875, 2.7418136596679688e-06, 7.3909759521484375e-06, 1.800060272216797e-05, 1.0967254638671875e-05, 7.319450378417969e-05, 3.3974647521972656e-05, 1.0728836059570312e-06, 1.1801719665527344e-05, 4.1484832763671875e-05, 2.6106834411621094e-05, 0.0001665353775024414, 4.649162292480469e-06, 2.1457672119140625e-06, 0.0001550912857055664, 1.9073486328125e-06, 9.894371032714844e-06, 0.00011420249938964844, 1.430511474609375e-05, 6.794929504394531e-06], "tokens": [275, 569, 284, 2522, 1946, 622, 3325, 10906, 346, 301, 291, 442, 2196, 10906, 45, 284, 320, 446, 1022, 275, 319, 9013, 322, 2196, 18574, 645, 322, 4949, 10900, 275, 319, 432, 225, 35, 43, 41, 34, 31, 34, 35, 31, 34, 35, 70, 34, 34, 44, 34, 34, 44, 34, 34]}
{"line_number": 542, "line_type": "original", "code": "        if (fieldType == null) {", "entropy": 1.541015625, "is_bug_line": false, "sus_score": 0.20025046972870356, "per_token_entropy": [4.61328125, 1.802734375, 0.1224365234375, 4.68359375, 0.54443359375, 0.486572265625, 0.048370361328125, 0.02490234375], "tokens": [351, 415, 308, 34531, 610, 744, 27, 301]}
{"line_number": 542, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.20025046972870356, "per_token_entropy": [], "tokens": []}
{"line_number": 545, "line_type": "original", "code": "        if (isSupported(fieldType) == false) {", "entropy": 1.4794921875, "is_bug_line": false, "sus_score": 0.20025046972870356, "per_token_entropy": [3.306640625, 3.119140625, 0.07366943359375, 3.1796875, 1.5810546875, 0.00994110107421875, 4.8125, 1.62890625, 0.0184326171875, 0.0002613067626953125, 0.009490966796875, 0.008880615234375], "tokens": [351, 415, 308, 297, 10323, 26, 34531, 27, 610, 901, 27, 301]}
{"line_number": 545, "line_type": "generated", "code": "\n     *\n     * @return the number of milliseconds since 1970-01-01T00:00:00 local time\n     */\n    private long getLocalMillis() {\n        return iLocalMillis;\n    }\n\n   ", "entropy": 0.1453857421875, "is_bug_line": false, "sus_score": 0.20025046972870356, "per_token_entropy": [0.76123046875, 0.39892578125, 1.333984375, 0.00020503997802734375, 0.016632080078125, 0.01078033447265625, 0.0266265869140625, 0.1099853515625, 0.00014925003051757812, 0.0085906982421875, 0.10296630859375, 0.0039825439453125, 2.5272369384765625e-05, 0.0004024505615234375, 6.413459777832031e-05, 0.00028204917907714844, 0.0012617111206054688, 6.890296936035156e-05, 4.887580871582031e-06, 0.00022673606872558594, 0.00010013580322265625, 2.300739288330078e-05, 0.00450897216796875, 3.8623809814453125e-05, 0.00013124942779541016, 0.00028395652770996094, 6.794929504394531e-06, 7.045269012451172e-05, 0.000179290771484375, 0.00012624263763427734, 8.90493392944336e-05, 0.89404296875, 0.00765228271484375, 0.01690673828125, 0.1180419921875, 0.004276275634765625, 2.07421875, 0.028167724609375, 0.00600433349609375, 0.00443267822265625, 0.000186920166015625, 0.01284027099609375, 0.0054168701171875, 0.1614990234375, 0.172607421875, 1.015625, 0.10552978515625, 0.001316070556640625, 0.0300140380859375, 0.01727294921875, 0.00048613548278808594, 0.100830078125], "tokens": [275, 319, 275, 319, 477, 601, 322, 1451, 432, 18574, 4558, 225, 35, 43, 41, 34, 31, 34, 35, 31, 34, 35, 70, 34, 34, 44, 34, 34, 44, 34, 34, 2196, 1133, 275, 569, 284, 945, 1946, 622, 3325, 10906, 346, 301, 291, 442, 595, 3325, 10906, 45, 284, 320, 446]}
{"line_number": 567, "line_type": "original", "code": "            return type.getField(getChronology()).isSupported();", "entropy": 1.994140625, "is_bug_line": false, "sus_score": 0.1873171623163388, "per_token_entropy": [6.7578125, 1.7041015625, 5.50390625, 3.876953125, 3.75390625, 0.142578125, 0.57177734375, 0.004360198974609375, 0.00012493133544921875, 4.0650367736816406e-05, 0.051910400390625, 3.83203125, 0.828125, 0.8984375], "tokens": [1468, 442, 827, 32, 18269, 26, 371, 828, 2558, 10537, 4251, 297, 10323, 473]}
{"line_number": 567, "line_type": "generated", "code": "\n     * The comparison is performed in two steps.\n     * First, the chronology, field types and values are compared.\n     * If they are equal, then the additional parts of the partial are compared.\n     * Specifically, the comparators for", "entropy": 0.58447265625, "is_bug_line": false, "sus_score": 0.1873171623163388, "per_token_entropy": [0.4150390625, 0.40283203125, 3.076171875, 0.47314453125, 0.033905029296875, 1.048828125, 0.8349609375, 1.1650390625, 0.082763671875, 0.387939453125, 0.21630859375, 0.00215911865234375, 0.25390625, 0.01177215576171875, 0.024932861328125, 0.88671875, 1.2993812561035156e-05, 7.033348083496094e-06, 0.71875, 0.10943603515625, 0.096435546875, 0.07366943359375, 1.044921875, 0.351806640625, 0.0029201507568359375, 0.58740234375, 0.1043701171875, 0.0005316734313964844, 0.0811767578125, 1.2958984375, 0.03985595703125, 1.228515625, 0.1851806640625, 0.1190185546875, 0.0309295654296875, 3.4921875, 2.04296875, 0.6240234375, 0.04449462890625, 1.21484375, 0.10430908203125, 0.01300811767578125, 0.083740234375, 0.00916290283203125, 0.007076263427734375, 2.390625, 0.04840087890625, 0.06304931640625, 0.078125, 3.099609375, 0.1953125, 1.4873046875], "tokens": [275, 319, 886, 14828, 438, 13555, 328, 3134, 6655, 32, 275, 319, 8819, 30, 322, 663, 2558, 10537, 30, 1600, 3738, 461, 2078, 884, 19112, 32, 275, 319, 1670, 2953, 884, 5040, 30, 1615, 322, 5388, 8710, 432, 322, 7360, 884, 19112, 32, 275, 319, 25081, 1247, 30, 322, 46917, 4044, 436]}
{"line_number": 560, "line_type": "original", "code": "        if (type == null) {", "entropy": 1.791015625, "is_bug_line": false, "sus_score": 0.179968508266339, "per_token_entropy": [4.8359375, 2.71484375, 0.056427001953125, 5.12890625, 0.485595703125, 0.9443359375, 0.09246826171875, 0.0697021484375], "tokens": [351, 415, 308, 681, 610, 744, 27, 301]}
{"line_number": 560, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Returns a copy of this date with a different local millisecond value.\n     * <p>\n     * This method is equivalent to <code>LocalDate.ofInstant(instant, ISOChronology.getInstance())</code>.", "entropy": 0.382568359375, "is_bug_line": false, "sus_score": 0.179968508266339, "per_token_entropy": [0.337158203125, 0.169921875, 0.1800537109375, 0.89892578125, 0.00429534912109375, 7.975101470947266e-05, 1.9833984375, 0.272216796875, 0.33642578125, 0.00014793872833251953, 0.01355743408203125, 0.1475830078125, 0.0183258056640625, 1.2861328125, 0.1024169921875, 0.5966796875, 0.33056640625, 0.00017762184143066406, 0.64892578125, 0.0062103271484375, 0.0007481575012207031, 0.0004215240478515625, 0.4755859375, 0.0005249977111816406, 0.0007596015930175781, 0.000545501708984375, 4.3511390686035156e-05, 0.62109375, 0.62255859375, 0.308837890625, 1.85546875, 0.0002753734588623047, 2.046875, 0.0008258819580078125, 0.004390716552734375, 0.54296875, 0.050201416015625, 1.111328125, 0.53369140625, 0.007411956787109375, 2.150390625, 0.1484375, 1.1787109375, 0.0323486328125, 0.0218963623046875, 3.230571746826172e-05, 0.09844970703125, 0.005859375, 0.5458984375, 0.00783538818359375, 0.0001081228256225586, 0.188720703125], "tokens": [284, 320, 446, 1022, 275, 319, 3759, 312, 1933, 432, 458, 2340, 623, 312, 3449, 2196, 37003, 3090, 786, 32, 275, 319, 333, 98, 48, 275, 319, 1348, 1411, 438, 13741, 372, 333, 687, 48, 28726, 32, 1028, 22183, 26, 30241, 30, 19687, 828, 2558, 10537, 32, 7426, 1157, 377, 687, 4503]}
{"line_number": 563, "line_type": "original", "code": "        DurationFieldType durType = type.getDurationType();", "entropy": 1.9326171875, "is_bug_line": false, "sus_score": 0.179968508266339, "per_token_entropy": [4.31640625, 6.37890625, 3.2265625, 4.453125, 0.01364898681640625, 0.07989501953125, 2.12890625, 0.04486083984375, 2.41015625, 0.058990478515625, 2.1576881408691406e-05, 0.0799560546875], "tokens": [351, 16685, 19204, 16049, 620, 280, 827, 32, 371, 6196, 620, 473]}
{"line_number": 563, "line_type": "generated", "code": "    /**\n     * Get the number of fields in this local date.\n     * <p>\n     * The fields are returned largest to smallest, year, month, day.\n     * The length of the returned int[] is the same as the value of\n    ", "entropy": 0.46484375, "is_bug_line": false, "sus_score": 0.179968508266339, "per_token_entropy": [1.974609375, 0.459228515625, 0.25146484375, 0.00034356117248535156, 1.4619140625, 0.175537109375, 2.23046875, 0.000392913818359375, 0.3583984375, 0.2181396484375, 0.0220184326171875, 0.65771484375, 0.07574462890625, 0.4013671875, 0.170654296875, 0.005596160888671875, 0.9892578125, 0.0005712509155273438, 0.0007061958312988281, 0.0004849433898925781, 6.341934204101562e-05, 0.190673828125, 1.419921875, 0.291748046875, 0.30078125, 0.9189453125, 0.013427734375, 0.00146484375, 0.06622314453125, 0.79345703125, 0.7265625, 0.041961669921875, 0.06524658203125, 0.01031494140625, 0.4072265625, 0.025238037109375, 0.011962890625, 0.34716796875, 3.486328125, 0.259765625, 0.0019512176513671875, 0.0087890625, 1.701171875, 0.1075439453125, 0.1431884765625, 0.7705078125, 0.75439453125, 0.00047016143798828125, 0.56201171875, 0.853515625, 0.2353515625, 0.2047119140625], "tokens": [264, 1022, 275, 319, 1390, 322, 1451, 432, 3829, 328, 458, 2196, 2340, 32, 275, 319, 333, 98, 48, 275, 319, 886, 3829, 884, 4717, 22909, 372, 29044, 30, 4947, 30, 6811, 30, 5808, 32, 275, 319, 886, 3104, 432, 322, 4717, 629, 1178, 438, 322, 2432, 619, 322, 786, 432, 275]}
{"line_number": 564, "line_type": "original", "code": "        if (DATE_DURATION_TYPES.contains(durType) ||", "entropy": 1.2919921875, "is_bug_line": false, "sus_score": 0.179968508266339, "per_token_entropy": [2.283203125, 2.201171875, 0.0826416015625, 6.95703125, 0.002796173095703125, 0.07391357421875, 0.0008301734924316406, 0.01337432861328125, 0.0019931793212890625, 0.0252227783203125, 0.002933502197265625, 6.5859375, 0.0305938720703125, 0.9521484375, 0.167236328125], "tokens": [351, 415, 308, 5241, 81, 33518, 81, 15630, 32, 4752, 26, 19566, 620, 27, 1276]}
{"line_number": 564, "line_type": "generated", "code": "\n    /**\n     * Compares this ReadablePartial with another returning 0 if equal, 1 if greater than,\n     * or -1 if less than.\n     * <p>\n     * The comparison is based on the value of each field in the", "entropy": 0.286865234375, "is_bug_line": false, "sus_score": 0.179968508266339, "per_token_entropy": [1.673828125, 0.46923828125, 0.060028076171875, 0.0003349781036376953, 1.3017578125, 3.4570693969726562e-06, 0.0284576416015625, 1.7294921875, 0.005626678466796875, 0.403076171875, 0.0169677734375, 0.0057220458984375, 0.07073974609375, 1.013671875, 0.0166473388671875, 0.0266265869140625, 0.775390625, 0.0694580078125, 2.00390625, 0.001857757568359375, 0.2021484375, 0.263671875, 0.361572265625, 0.26708984375, 0.287841796875, 0.00012564659118652344, 0.0870361328125, 0.002666473388671875, 0.0001804828643798828, 0.004718780517578125, 0.041168212890625, 0.005550384521484375, 0.099609375, 0.16943359375, 0.00704193115234375, 0.5048828125, 0.00495147705078125, 0.00295257568359375, 0.0012083053588867188, 0.00017178058624267578, 0.282958984375, 0.3701171875, 0.25830078125, 0.84423828125, 0.1405029296875, 0.0031795501708984375, 0.68310546875, 0.00125885009765625, 0.033233642578125, 0.11517333984375, 0.1878662109375, 0.018341064453125], "tokens": [284, 1022, 275, 319, 2252, 10999, 458, 4841, 444, 12221, 623, 4674, 14116, 225, 34, 415, 5040, 30, 225, 35, 415, 10761, 2784, 30, 275, 319, 556, 429, 35, 415, 6679, 2784, 32, 275, 319, 333, 98, 48, 275, 319, 886, 14828, 438, 4122, 544, 322, 786, 432, 2504, 1600, 328, 322]}
{"line_number": 244, "line_type": "original", "code": "        return new LocalDate(", "entropy": 1.826171875, "is_bug_line": true, "sus_score": 0.1529438225803745, "per_token_entropy": [5.046875, 3.556640625, 0.395263671875, 0.07769775390625, 0.05438232421875], "tokens": [351, 442, 537, 27490, 26]}
{"line_number": 244, "line_type": "generated", "code": "\n     */\n    public LocalDate(int year, int monthOfYear, int dayOfMonth) {\n        this(ISOChronology.getInstance(), year, monthOfYear, dayOfMonth);\n    }\n\n    /**\n     * Constructs an instance set to the local time in the", "entropy": 0.1607666015625, "is_bug_line": true, "sus_score": 0.1529438225803745, "per_token_entropy": [1.1806640625, 1.119140625, 0.05963134765625, 0.52490234375, 0.061126708984375, 0.02215576171875, 0.284912109375, 0.0254058837890625, 0.0185089111328125, 0.00693511962890625, 0.0005602836608886719, 0.1370849609375, 0.0033206939697265625, 0.0005006790161132812, 0.00029659271240234375, 4.553794860839844e-05, 0.0040130615234375, 0.002471923828125, 0.13427734375, 0.374755859375, 0.036407470703125, 1.8662109375, 0.036224365234375, 7.736682891845703e-05, 7.152557373046875e-07, 1.4185905456542969e-05, 4.291534423828125e-06, 0.39697265625, 0.0149993896484375, 0.00011098384857177734, 0.0011510848999023438, 4.76837158203125e-07, 6.556510925292969e-06, 0.00014579296112060547, 2.384185791015625e-07, 0.003078460693359375, 0.007114410400390625, 0.0005540847778320312, 0.212646484375, 0.14501953125, 0.40478515625, 0.00016164779663085938, 0.1253662109375, 0.005767822265625, 0.01186370849609375, 0.1998291015625, 0.01314544677734375, 0.1551513671875, 0.496826171875, 0.0243682861328125, 0.15087890625, 0.09259033203125], "tokens": [275, 569, 284, 562, 27490, 26, 410, 4947, 30, 629, 6811, 45945, 30, 629, 5808, 38369, 27, 301, 291, 458, 26, 14859, 828, 2558, 10537, 32, 7426, 1026, 4947, 30, 6811, 45945, 30, 5808, 38369, 293, 284, 320, 446, 1022, 275, 319, 29799, 600, 1980, 739, 372, 322, 2196, 1133, 328, 322]}
{"line_number": 240, "line_type": "original", "code": "        if (date == null) {", "entropy": 1.36328125, "is_bug_line": true, "sus_score": 0.14509525002200233, "per_token_entropy": [4.1171875, 1.6494140625, 0.0159149169921875, 4.66015625, 0.3876953125, 0.02655029296875, 0.0209197998046875, 0.02862548828125], "tokens": [351, 415, 308, 770, 610, 744, 27, 301]}
{"line_number": 240, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Constructs an instance set to the local time in the specified time zone\n     * using the specified chronology.\n     * <p>\n     * If the chronology is null, ISO chronology in the specified time zone", "entropy": 0.14501953125, "is_bug_line": true, "sus_score": 0.14509525002200233, "per_token_entropy": [0.41552734375, 0.1875, 0.1575927734375, 0.2359619140625, 0.006072998046875, 5.2094459533691406e-05, 0.0207672119140625, 0.005214691162109375, 0.0032958984375, 0.365234375, 0.003574371337890625, 0.0167999267578125, 0.7333984375, 0.0168914794921875, 0.8173828125, 0.828125, 0.09991455078125, 1.720703125, 0.1591796875, 0.297607421875, 1.5735626220703125e-05, 0.55322265625, 0.08685302734375, 0.2060546875, 0.25048828125, 3.5762786865234375e-07, 4.172325134277344e-06, 0.0460205078125, 0.0052490234375, 1.633167266845703e-05, 0.00992584228515625, 3.3736228942871094e-05, 6.61611557006836e-05, 8.594989776611328e-05, 3.8743019104003906e-05, 0.06536865234375, 0.0025501251220703125, 0.054229736328125, 1.3113021850585938e-06, 2.4557113647460938e-05, 3.612041473388672e-05, 0.001190185546875, 0.0004634857177734375, 0.001651763916015625, 0.05438232421875, 5.9604644775390625e-06, 0.00017833709716796875, 0.0243682861328125, 0.005359649658203125, 0.0078125, 0.07733154296875, 5.7816505432128906e-05], "tokens": [284, 320, 446, 1022, 275, 319, 29799, 600, 1980, 739, 372, 322, 2196, 1133, 328, 322, 3191, 1133, 10790, 275, 319, 1471, 322, 3191, 663, 2558, 10537, 32, 275, 319, 333, 98, 48, 275, 319, 1670, 322, 663, 2558, 10537, 438, 744, 30, 19687, 663, 2558, 10537, 328, 322, 3191, 1133, 10790]}
{"line_number": 628, "line_type": "original", "code": "                return iLocalMillis == other.iLocalMillis;", "entropy": 2.095703125, "is_bug_line": false, "sus_score": 0.11846977555181847, "per_token_entropy": [8.5390625, 2.310546875, 3.341796875, 1.3505859375, 0.00251007080078125, 3.64453125, 0.172119140625, 0.12396240234375, 0.0616455078125, 0.0036220550537109375, 0.0011377334594726562, 5.59765625], "tokens": [2071, 442, 595, 3325, 10906, 610, 1604, 32, 91, 3325, 10906, 45]}
{"line_number": 628, "line_type": "generated", "code": "\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Get the value of one of the fields of a partial.\n     * <p>\n     * This method allows you to get the value of one of the fields of\n     * the partial without having to go through the", "entropy": 0.305908203125, "is_bug_line": false, "sus_score": 0.11846977555181847, "per_token_entropy": [0.274169921875, 0.0089874267578125, 0.166259765625, 0.6240234375, 0.03582763671875, 0.0186004638671875, 0.0540771484375, 0.00891876220703125, 3.314018249511719e-05, 1.5791015625, 0.0257110595703125, 0.85595703125, 0.0946044921875, 0.04345703125, 0.01042938232421875, 0.1011962890625, 0.0032978057861328125, 0.06317138671875, 0.0175933837890625, 0.41748046875, 1.0556640625, 0.007289886474609375, 0.00036716461181640625, 0.65380859375, 0.00030159950256347656, 0.000629425048828125, 0.0002167224884033203, 3.1948089599609375e-05, 0.453125, 0.01432037353515625, 1.576171875, 1.4609375, 0.00012886524200439453, 0.398193359375, 0.005657196044921875, 0.06341552734375, 0.01514434814453125, 0.82373046875, 0.0079498291015625, 0.0003292560577392578, 0.0066680908203125, 0.533203125, 0.57080078125, 1.621246337890625e-05, 0.04541015625, 0.26025390625, 1.2275390625, 0.51953125, 0.0005669593811035156, 1.0703125, 0.232421875, 0.501953125], "tokens": [284, 320, 446, 434, 42510, 284, 1022, 275, 319, 1390, 322, 786, 432, 1591, 432, 322, 3829, 432, 312, 7360, 32, 275, 319, 333, 98, 48, 275, 319, 1348, 1411, 6972, 844, 372, 622, 322, 786, 432, 1591, 432, 322, 3829, 432, 275, 319, 322, 7360, 2876, 7696, 372, 1983, 3919, 322]}
{"line_number": 622, "line_type": "original", "code": "        if (this == partial) {", "entropy": 1.8544921875, "is_bug_line": false, "sus_score": 0.116543309349613, "per_token_entropy": [6.05859375, 3.384765625, 0.043914794921875, 2.689453125, 2.283203125, 0.281005859375, 0.011993408203125, 0.07989501953125], "tokens": [351, 415, 308, 578, 610, 7360, 27, 301]}
{"line_number": 622, "line_type": "generated", "code": "\n            }\n        }\n        return super.compareTo(partial);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Compares this local date with another ensuring that the date is the same.\n     *\n     * @param other  a date to check against\n     * @", "entropy": 0.2410888671875, "is_bug_line": false, "sus_score": 0.116543309349613, "per_token_entropy": [0.68994140625, 0.1429443359375, 0.452392578125, 0.005733489990234375, 0.1380615234375, 0.10943603515625, 0.01971435546875, 0.0001704692840576172, 0.086669921875, 0.0011224746704101562, 0.00016307830810546875, 0.0015363693237304688, 0.01256561279296875, 0.0015239715576171875, 0.142822265625, 0.63232421875, 0.0251617431640625, 0.0183258056640625, 0.05963134765625, 0.00951385498046875, 2.562999725341797e-05, 1.57421875, 1.0848045349121094e-05, 0.0987548828125, 1.564453125, 0.0034618377685546875, 0.76708984375, 0.002777099609375, 0.8623046875, 0.01279449462890625, 0.0823974609375, 0.72705078125, 0.29541015625, 0.5498046875, 0.0291595458984375, 0.0303192138671875, 0.0003409385681152344, 8.034706115722656e-05, 0.65576171875, 1.2874603271484375e-05, 0.0005803108215332031, 0.005985260009765625, 1.0361328125, 0.0848388671875, 0.89794921875, 0.39404296875, 0.04498291015625, 0.0114288330078125, 0.2452392578125, 0.00867462158203125, 0.0019931793212890625, 1.3947486877441406e-05], "tokens": [324, 320, 291, 320, 291, 442, 2599, 32, 23908, 26, 9865, 293, 284, 320, 446, 434, 42510, 284, 1022, 275, 319, 2252, 10999, 458, 2196, 2340, 623, 4674, 42056, 688, 322, 2340, 438, 322, 2432, 32, 275, 319, 275, 319, 477, 753, 1604, 225, 312, 2340, 372, 1505, 8187, 275, 319, 477]}
{"line_number": 625, "line_type": "original", "code": "        if (partial instanceof LocalDate) {", "entropy": 1.36328125, "is_bug_line": false, "sus_score": 0.116543309349613, "per_token_entropy": [3.734375, 2.76953125, 0.06317138671875, 2.150390625, 1.0078125, 1.1318359375, 0.0168304443359375, 0.03265380859375], "tokens": [351, 415, 308, 9865, 5113, 27490, 27, 301]}
{"line_number": 625, "line_type": "generated", "code": "\n            return super.compareTo(partial);\n        } else if (partial instanceof ReadablePartial) {\n            return getChronology().compare(this, partial);\n        }\n        throw new ClassCastException(\"ReadablePartial object must be a LocalDate\");\n    }\n\n   ", "entropy": 0.318603515625, "is_bug_line": false, "sus_score": 0.116543309349613, "per_token_entropy": [0.646484375, 1.728515625, 0.994140625, 0.001064300537109375, 0.128662109375, 0.0102081298828125, 0.006114959716796875, 0.0181732177734375, 0.04852294921875, 0.0042266845703125, 0.896484375, 1.361328125, 0.018890380859375, 0.0399169921875, 0.482177734375, 1.3603515625, 0.00150299072265625, 0.7373046875, 0.03497314453125, 0.0005168914794921875, 0.059600830078125, 0.72998046875, 0.94580078125, 1.38671875, 0.0003311634063720703, 1.919269561767578e-05, 0.0078582763671875, 0.042388916015625, 0.208740234375, 0.018829345703125, 0.0011243820190429688, 0.2318115234375, 0.0103607177734375, 0.08056640625, 0.00020802021026611328, 0.440673828125, 0.25537109375, 0.003467559814453125, 0.0015316009521484375, 3.2186508178710938e-06, 0.1571044921875, 1.17578125, 0.002948760986328125, 0.3828125, 0.045806884765625, 0.126708984375, 1.2265625, 0.1392822265625, 0.11834716796875, 0.071533203125, 0.0010099411010742188, 0.17626953125], "tokens": [324, 442, 2599, 32, 23908, 26, 9865, 293, 291, 320, 813, 415, 308, 9865, 5113, 4841, 444, 12221, 27, 301, 324, 442, 622, 828, 2558, 10537, 922, 6055, 26, 578, 30, 7360, 293, 291, 320, 291, 1422, 537, 1709, 36932, 440, 23422, 12221, 1300, 2298, 526, 312, 27490, 724, 284, 320, 446]}
{"line_number": 626, "line_type": "original", "code": "            LocalDate other = (LocalDate) partial;", "entropy": 1.8525390625, "is_bug_line": false, "sus_score": 0.116543309349613, "per_token_entropy": [4.89453125, 8.6875, 2.08203125, 0.92041015625, 0.0205230712890625, 0.00450897216796875, 0.0007405281066894531, 0.0396728515625, 0.01508331298828125], "tokens": [1468, 27490, 1604, 280, 308, 28726, 27, 7360, 45]}
{"line_number": 626, "line_type": "generated", "code": "\n        }\n        return super.compareTo(partial);\n    }\n\n    /**\n     * Compares this partial with another returning an integer\n     * indicating the order.\n     * <p>\n     * The fields are compared in order, from largest to smallest.\n     *", "entropy": 0.0904541015625, "is_bug_line": false, "sus_score": 0.116543309349613, "per_token_entropy": [0.25390625, 0.0169677734375, 0.18896484375, 0.08734130859375, 0.0095062255859375, 0.00020015239715576172, 0.0748291015625, 0.00139617919921875, 0.0003330707550048828, 0.0013513565063476562, 0.0166015625, 0.0012531280517578125, 0.1724853515625, 0.828125, 0.00820159912109375, 5.257129669189453e-05, 1.1181640625, 3.5762786865234375e-07, 0.04931640625, 0.453369140625, 0.0220489501953125, 0.050323486328125, 0.470458984375, 0.39892578125, 0.0193939208984375, 0.0184783935546875, 2.0623207092285156e-05, 0.0005960464477539062, 0.0027217864990234375, 0.0251312255859375, 0.2037353515625, 0.011444091796875, 4.684925079345703e-05, 0.0236663818359375, 0.0002636909484863281, 8.475780487060547e-05, 6.854534149169922e-05, 3.325939178466797e-05, 0.09368896484375, 0.05609130859375, 0.01116180419921875, 0.0001741647720336914, 9.620189666748047e-05, 0.00020003318786621094, 0.006244659423828125, 0.0007190704345703125, 0.0004916191101074219, 0.00011444091796875, 1.2874603271484375e-05, 0.002979278564453125, 0.0009188652038574219, 0.00011098384857177734], "tokens": [291, 320, 291, 442, 2599, 32, 23908, 26, 9865, 293, 284, 320, 446, 1022, 275, 319, 2252, 10999, 458, 7360, 623, 4674, 14116, 600, 4991, 275, 319, 15280, 322, 2532, 32, 275, 319, 333, 98, 48, 275, 319, 886, 3829, 884, 19112, 328, 2532, 30, 645, 22909, 372, 29044, 32, 275, 319]}
{"line_number": 627, "line_type": "original", "code": "            if (iChronology.equals(other.iChronology)) {", "entropy": 0.7060546875, "is_bug_line": false, "sus_score": 0.116543309349613, "per_token_entropy": [4.9453125, 2.931640625, 0.0745849609375, 1.4140625, 0.525390625, 0.00446319580078125, 6.413459777832031e-05, 0.235107421875, 1.1201171875, 0.001300811767578125, 0.9208984375, 0.05596923828125, 0.2122802734375, 0.0037708282470703125, 2.9087066650390625e-05, 0.00031185150146484375, 0.1632080078125, 0.09918212890625], "tokens": [1468, 415, 308, 91, 828, 2558, 10537, 32, 3574, 26, 2455, 32, 91, 828, 2558, 10537, 490, 301]}
{"line_number": 627, "line_type": "generated", "code": "\n        return super.compareTo(partial);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Compares this object with the specified object for equality based\n     * on the chronology, field values and each partial's value.\n     * <p>\n     * To", "entropy": 0.27099609375, "is_bug_line": false, "sus_score": 0.116543309349613, "per_token_entropy": [0.274169921875, 0.52587890625, 0.2181396484375, 0.00030875205993652344, 0.1124267578125, 0.0043182373046875, 0.0013551712036132812, 0.006420135498046875, 0.037567138671875, 0.0016613006591796875, 0.1671142578125, 0.70361328125, 0.0308074951171875, 0.016998291015625, 0.0582275390625, 0.01019287109375, 2.9802322387695312e-05, 1.6083984375, 9.179115295410156e-06, 0.0943603515625, 1.2939453125, 0.199462890625, 0.13232421875, 0.00047087669372558594, 0.051788330078125, 0.00035381317138671875, 0.0262908935546875, 0.52197265625, 0.0017843246459960938, 3.6954879760742188e-06, 0.0006318092346191406, 0.00218963623046875, 0.60693359375, 3.2186508178710938e-06, 3.5881996154785156e-05, 0.102783203125, 0.68017578125, 0.2158203125, 0.1966552734375, 1.296875, 0.261962890625, 0.44921875, 1.5537109375, 0.8125, 0.023773193359375, 0.0004115104675292969, 0.404296875, 0.00014162063598632812, 0.0008406639099121094, 0.00023925304412841797, 2.9325485229492188e-05, 1.3818359375], "tokens": [291, 442, 2599, 32, 23908, 26, 9865, 293, 284, 320, 446, 434, 42510, 284, 1022, 275, 319, 2252, 10999, 458, 1300, 623, 322, 3191, 1300, 436, 28599, 4122, 275, 319, 544, 322, 663, 2558, 10537, 30, 1600, 2078, 461, 2504, 7360, 1182, 786, 32, 275, 319, 333, 98, 48, 275, 319, 2614]}
{"line_number": 426, "line_type": "original", "code": "        this(year, monthOfYear, dayOfMonth, ISOChronology.getInstanceUTC());", "entropy": 1.3388671875, "is_bug_line": false, "sus_score": 0.10324514658393347, "per_token_entropy": [4.2421875, 10.1796875, 3.919921875, 1.009765625, 0.12408447265625, 0.08599853515625, 0.0899658203125, 0.0182952880859375, 0.0275115966796875, 0.005924224853515625, 0.67431640625, 4.55859375, 0.052947998046875, 3.647804260253906e-05, 2.4557113647460938e-05, 0.00537872314453125, 0.0001360177993774414, 0.278076171875, 0.1722412109375], "tokens": [351, 458, 26, 4548, 30, 6811, 45945, 30, 5808, 38369, 30, 19687, 828, 2558, 10537, 32, 7426, 15689, 1035]}
{"line_number": 426, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Gets the field for a specific index in the chronology specified.\n     * <p>\n     * This method must not use the chronology of the partial.\n     *\n     * @param index  the index to retrieve", "entropy": 0.145751953125, "is_bug_line": false, "sus_score": 0.10324514658393347, "per_token_entropy": [0.3212890625, 0.0007796287536621094, 0.0379638671875, 0.05078125, 0.00019466876983642578, 5.900859832763672e-05, 0.21728515625, 0.007476806640625, 0.04327392578125, 0.007610321044921875, 0.1322021484375, 0.0310516357421875, 0.00385284423828125, 0.0026798248291015625, 0.0074920654296875, 0.049774169921875, 1.9788742065429688e-05, 0.0008196830749511719, 0.0251007080078125, 0.004749298095703125, 0.0003247261047363281, 1.0967254638671875e-05, 0.345947265625, 0.00023686885833740234, 0.000385284423828125, 1.3470649719238281e-05, 1.8596649169921875e-05, 0.1239013671875, 0.0037841796875, 0.3427734375, 0.51416015625, 0.0180816650390625, 0.07269287109375, 1.068359375, 5.960464477539062e-07, 2.1457672119140625e-06, 1.048828125, 0.27001953125, 1.0693359375, 0.338623046875, 0.0908203125, 1.2874603271484375e-05, 0.495361328125, 1.0132789611816406e-05, 0.0003402233123779297, 0.0002722740173339844, 0.0009188652038574219, 0.01271820068359375, 0.0018310546875, 0.045166015625, 0.75830078125, 0.01165008544921875], "tokens": [284, 320, 446, 1022, 275, 319, 7124, 322, 1600, 436, 312, 2818, 1650, 328, 322, 663, 2558, 10537, 3191, 32, 275, 319, 333, 98, 48, 275, 319, 1348, 1411, 2298, 646, 793, 322, 663, 2558, 10537, 432, 322, 7360, 32, 275, 319, 275, 319, 477, 753, 1650, 225, 322, 1650, 372, 10847]}
{"line_number": 427, "line_type": "original", "code": "    }", "entropy": 2.51953125, "is_bug_line": false, "sus_score": 0.10324514658393347, "per_token_entropy": [4.4375, 0.6015625], "tokens": [264, 320]}
{"line_number": 427, "line_type": "generated", "code": "\n\n    /**\n     * Gets the field for a specific index in the chronology specified.\n     * <p>\n     * This method must not use the chronology of the time to avoid infinite\n     * recursion.\n     *\n     * @param index ", "entropy": 0.2388916015625, "is_bug_line": false, "sus_score": 0.10324514658393347, "per_token_entropy": [0.1724853515625, 0.2061767578125, 0.0003936290740966797, 4.088878631591797e-05, 0.21875, 0.003421783447265625, 0.04779052734375, 0.006633758544921875, 0.269775390625, 0.036712646484375, 0.004550933837890625, 0.003299713134765625, 0.004344940185546875, 0.057861328125, 1.8835067749023438e-05, 0.0006504058837890625, 0.0330810546875, 0.004718780517578125, 0.00026345252990722656, 7.748603820800781e-06, 0.1749267578125, 0.000186920166015625, 0.0003924369812011719, 1.2755393981933594e-05, 1.5735626220703125e-05, 0.0740966796875, 0.00409698486328125, 0.2073974609375, 0.60546875, 0.019683837890625, 0.0650634765625, 1.078125, 4.76837158203125e-07, 1.6689300537109375e-06, 1.0390625, 0.309326171875, 1.9375, 2.255859375, 1.982421875, 0.87646484375, 0.08001708984375, 9.059906005859375e-06, 0.022430419921875, 0.029205322265625, 0.436767578125, 4.410743713378906e-05, 0.1314697265625, 1.3113021850585938e-05, 0.00023043155670166016, 0.0005488395690917969, 0.0021572113037109375, 0.017974853515625], "tokens": [446, 1022, 275, 319, 7124, 322, 1600, 436, 312, 2818, 1650, 328, 322, 663, 2558, 10537, 3191, 32, 275, 319, 333, 98, 48, 275, 319, 1348, 1411, 2298, 646, 793, 322, 663, 2558, 10537, 432, 322, 1133, 372, 7358, 20280, 275, 319, 33798, 32, 275, 319, 275, 319, 477, 753, 1650, 225]}
{"line_number": 445, "line_type": "original", "code": "        super();", "entropy": 5.90234375, "is_bug_line": false, "sus_score": 0.07517787690242615, "per_token_entropy": [3.875, 11.453125, 2.369140625], "tokens": [351, 2599, 473]}
{"line_number": 445, "line_type": "generated", "code": "\n                return chrono.dayOfMonth();\n            default:\n                throw new IndexOutOfBoundsException(\"Invalid index: \" + index);\n        }\n    }\n\n    /**\n     * Gets the value of the field at the specifed index.\n     * <p>\n     * This", "entropy": 0.051971435546875, "is_bug_line": false, "sus_score": 0.07517787690242615, "per_token_entropy": [0.9599609375, 0.07794189453125, 0.029144287109375, 5.507469177246094e-05, 4.935264587402344e-05, 0.00014972686767578125, 0.0013456344604492188, 0.2744140625, 0.0270233154296875, 6.866455078125e-05, 0.00308990478515625, 0.016754150390625, 0.0032444000244140625, 0.017059326171875, 0.00016748905181884766, 0.01300048828125, 0.06585693359375, 0.0073394775390625, 0.0005540847778320312, 0.0004229545593261719, 4.303455352783203e-05, 0.00015664100646972656, 0.0034732818603515625, 0.00464630126953125, 0.00014913082122802734, 0.01230621337890625, 5.91278076171875e-05, 0.031982421875, 0.08294677734375, 0.0004405975341796875, 5.0067901611328125e-06, 0.4072265625, 0.05224609375, 0.04852294921875, 0.0166168212890625, 0.027008056640625, 0.170654296875, 0.127197265625, 0.0662841796875, 0.049591064453125, 0.0304412841796875, 0.0011243820190429688, 0.00010228157043457031, 0.0006475448608398438, 0.0007996559143066406, 6.449222564697266e-05, 0.059539794921875, 1.1920928955078125e-05, 3.695487976074219e-05, 3.0875205993652344e-05, 2.5272369384765625e-05, 0.01129913330078125], "tokens": [400, 442, 45868, 32, 3368, 38369, 473, 324, 1244, 44, 400, 1422, 537, 6422, 35821, 440, 3817, 1650, 44, 313, 474, 1650, 293, 291, 320, 284, 320, 446, 1022, 275, 319, 7124, 322, 786, 432, 322, 1600, 821, 322, 1374, 325, 318, 1650, 32, 275, 319, 333, 98, 48, 275, 319, 1348]}
