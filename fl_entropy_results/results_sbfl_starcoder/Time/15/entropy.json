{"line_number": 140, "line_type": "original", "code": "                return 0L;", "entropy": 3.109375, "is_bug_line": false, "sus_score": 0.22360679774997896, "per_token_entropy": [9.46875, 4.421875, 1.689453125, 0.2039794921875, 2.7578125, 0.11883544921875], "tokens": [2071, 442, 225, 34, 62, 45]}
{"line_number": 140, "line_type": "generated", "code": "\n    /**\n     * Casts to a long throwing an exception if overflow occurs.\n     * \n     * @param value  the value\n     * @return the value as a long\n     * @throws ArithmeticException if the value is too big or too small\n     */", "entropy": 0.08587646484375, "is_bug_line": false, "sus_score": 0.22360679774997896, "per_token_entropy": [1.90234375, 0.58154296875, 0.033111572265625, 9.584426879882812e-05, 0.92919921875, 0.009613037109375, 0.0224456787109375, 0.333984375, 0.271240234375, 0.029266357421875, 0.000217437744140625, 0.00025582313537597656, 0.0014371871948242188, 0.012481689453125, 0.002841949462890625, 0.007091522216796875, 0.0037708282470703125, 0.0001690387725830078, 0.0242919921875, 3.4928321838378906e-05, 0.0010280609130859375, 0.00116729736328125, 0.006252288818359375, 0.00412750244140625, 0.0020771026611328125, 0.004863739013671875, 0.01001739501953125, 7.319450378417969e-05, 5.0187110900878906e-05, 0.002910614013671875, 0.0007843971252441406, 0.0013952255249023438, 0.0023345947265625, 0.042205810546875, 0.00299835205078125, 0.00572967529296875, 0.0190277099609375, 0.0004131793975830078, 0.0169677734375, 0.0004394054412841797, 2.3365020751953125e-05, 0.0009832382202148438, 0.00110626220703125, 0.0016202926635742188, 0.001003265380859375, 0.00011992454528808594, 0.0007219314575195312, 0.0073089599609375, 0.00042724609375, 0.00015115737915039062, 0.00836944580078125, 0.153564453125], "tokens": [284, 1022, 275, 319, 23894, 101, 372, 312, 1946, 34177, 600, 3756, 415, 9973, 12984, 32, 275, 319, 5384, 319, 477, 753, 786, 225, 322, 786, 275, 319, 477, 601, 322, 786, 619, 312, 1946, 275, 319, 477, 5117, 47721, 984, 415, 322, 786, 438, 5133, 6524, 556, 5133, 5532, 275, 569]}
{"line_number": 70, "line_type": "original", "code": "        return sum;", "entropy": 4.57421875, "is_bug_line": false, "sus_score": 0.12182646943235925, "per_token_entropy": [3.5390625, 2.36328125, 11.140625, 1.2490234375], "tokens": [351, 442, 3632, 45]}
{"line_number": 70, "line_type": "generated", "code": "\n        if (total!= (int) total) {\n            throw new ArithmeticException\n                (\"The calculation caused an overflow: \" + val1 + \" * \" + val2);\n        }\n        return (int) total;\n    }\n    \n    /**\n     * Multiply", "entropy": 0.06829833984375, "is_bug_line": false, "sus_score": 0.12182646943235925, "per_token_entropy": [0.94580078125, 0.59326171875, 0.152587890625, 0.03070068359375, 0.69921875, 0.0667724609375, 0.0006203651428222656, 0.0001310110092163086, 0.0177001953125, 0.005657196044921875, 0.002147674560546875, 0.0274658203125, 0.0130767822265625, 0.0013074874877929688, 0.00016999244689941406, 2.7418136596679688e-06, 0.219482421875, 0.0004801750183105469, 0.0212249755859375, 0.00975799560546875, 0.0003573894500732422, 0.00019085407257080078, 0.00010442733764648438, 0.00010752677917480469, 0.0002493858337402344, 0.00281524658203125, 0.01454925537109375, 1.5854835510253906e-05, 0.0006561279296875, 0.0018339157104492188, 0.06280517578125, 0.00023472309112548828, 0.0008077621459960938, 0.0008749961853027344, 1.3470649719238281e-05, 0.000911712646484375, 0.01422119140625, 6.592273712158203e-05, 0.119384765625, 0.0024356842041015625, 0.0020351409912109375, 1.1682510375976562e-05, 3.4570693969726562e-06, 0.0107574462890625, 0.0035190582275390625, 0.07073974609375, 0.000827789306640625, 0.30078125, 0.0499267578125, 0.002979278564453125, 3.719329833984375e-05, 0.0780029296875], "tokens": [291, 415, 308, 2999, 863, 308, 410, 27, 3380, 27, 301, 324, 1422, 537, 47721, 984, 400, 2884, 1318, 17686, 16268, 600, 9973, 44, 313, 474, 909, 35, 474, 313, 319, 313, 474, 909, 36, 293, 291, 320, 291, 442, 308, 410, 27, 3380, 45, 284, 320, 2170, 1022, 275, 319, 44155]}
{"line_number": 64, "line_type": "original", "code": "        int sum = val1 + val2;", "entropy": 1.1962890625, "is_bug_line": false, "sus_score": 0.12166606584807191, "per_token_entropy": [1.3564453125, 4.09765625, 4.7265625, 0.0192108154296875, 0.285400390625, 0.0008602142333984375, 1.3994140625, 0.0277099609375, 0.002681732177734375, 0.04779052734375], "tokens": [351, 629, 3632, 280, 909, 35, 474, 909, 36, 45]}
{"line_number": 64, "line_type": "generated", "code": "\n     * @return the new total\n     * @throws ArithmeticException if the value is too big or too small\n     */\n    public static long safeMultiply(long val1, long val2) {\n        long product = val1 * val2;", "entropy": 0.0728759765625, "is_bug_line": false, "sus_score": 0.12166606584807191, "per_token_entropy": [0.70068359375, 0.02606201171875, 0.0022106170654296875, 0.0205841064453125, 0.0004177093505859375, 0.043792724609375, 0.0291290283203125, 0.20947265625, 0.005329132080078125, 9.894371032714844e-05, 0.0030689239501953125, 0.001628875732421875, 1.1444091796875e-05, 0.0005440711975097656, 0.00466156005859375, 0.00298309326171875, 0.0005812644958496094, 0.0003752708435058594, 0.00024020671844482422, 0.002017974853515625, 0.00015306472778320312, 2.372264862060547e-05, 0.01934814453125, 0.0293426513671875, 0.0222320556640625, 0.00991058349609375, 0.00033545494079589844, 0.66748046875, 0.0005593299865722656, 0.00018703937530517578, 0.0007781982421875, 0.322998046875, 0.00030422210693359375, 1.71661376953125e-05, 6.151199340820312e-05, 0.042510986328125, 2.288818359375e-05, 1.5497207641601562e-06, 0.0005297660827636719, 0.0016126632690429688, 0.3154296875, 0.5234375, 0.60595703125, 0.00974273681640625, 0.01136016845703125, 0.00012540817260742188, 0.0009083747863769531, 0.00023031234741210938, 4.8041343688964844e-05, 0.00235748291015625], "tokens": [275, 319, 477, 601, 322, 537, 3380, 275, 319, 477, 5117, 47721, 984, 415, 322, 786, 438, 5133, 6524, 556, 5133, 5532, 275, 569, 284, 562, 907, 1946, 10061, 27732, 26, 3222, 909, 35, 30, 1946, 909, 36, 27, 301, 291, 1946, 4054, 280, 909, 35, 319, 909, 36, 45]}
{"line_number": 66, "line_type": "original", "code": "        if ((val1 ^ sum) < 0 && (val1 ^ val2) >= 0) {", "entropy": 0.65673828125, "is_bug_line": false, "sus_score": 0.12166606584807191, "per_token_entropy": [3.923828125, 1.080078125, 1.5830078125, 0.053741455078125, 0.033355712890625, 2.017578125, 6.71484375, 0.0190582275390625, 0.14453125, 0.007472991943359375, 0.00025391578674316406, 0.0341796875, 0.0033721923828125, 0.0037288665771484375, 0.001369476318359375, 0.00188446044921875, 0.006214141845703125, 0.0012235641479492188, 0.001190185546875, 0.021392822265625, 0.0008931159973144531, 1.7762184143066406e-05, 0.015838623046875, 0.091552734375], "tokens": [351, 415, 1833, 695, 35, 5304, 3632, 27, 333, 225, 34, 962, 308, 695, 35, 5304, 909, 36, 27, 2377, 225, 34, 27, 301]}
{"line_number": 66, "line_type": "generated", "code": "\n     */\n    public static int safeMultiply(int val1, int val2) {\n        long temp = (long) val1 * (long) val2;\n        if (temp < Integer.MIN_VALUE || temp > Integer.MAX_VALUE", "entropy": 0.11529541015625, "is_bug_line": false, "sus_score": 0.12166606584807191, "per_token_entropy": [0.2059326171875, 0.07073974609375, 0.035675048828125, 0.009307861328125, 0.0003504753112792969, 1.044921875, 7.402896881103516e-05, 0.00036072731018066406, 0.002017974853515625, 0.0009560585021972656, 0.0001270771026611328, 3.2186508178710938e-06, 5.066394805908203e-05, 0.0006389617919921875, 1.52587890625e-05, 5.960464477539062e-07, 0.00022804737091064453, 0.0024662017822265625, 0.0792236328125, 1.0146484375, 1.666015625, 0.0057373046875, 1.1572265625, 0.000965118408203125, 0.0005788803100585938, 0.1309814453125, 1.4066696166992188e-05, 0.0019016265869140625, 0.039520263671875, 4.76837158203125e-07, 1.728534698486328e-05, 0.0011091232299804688, 6.23464584350586e-05, 0.00026679039001464844, 0.0643310546875, 0.0882568359375, 0.10565185546875, 0.0205535888671875, 0.2357177734375, 0.00276947021484375, 5.841255187988281e-06, 1.1682510375976562e-05, 1.0728836059570312e-06, 4.172325134277344e-06, 0.0025005340576171875, 0.0032825469970703125, 0.0003223419189453125, 0.00025463104248046875, 6.079673767089844e-06, 6.794929504394531e-06, 1.9073486328125e-06, 1.0728836059570312e-05], "tokens": [275, 569, 284, 562, 907, 629, 10061, 27732, 26, 410, 909, 35, 30, 629, 909, 36, 27, 301, 291, 1946, 1779, 280, 308, 3222, 27, 909, 35, 319, 308, 3222, 27, 909, 36, 45, 291, 415, 308, 1433, 333, 4401, 32, 4683, 81, 5975, 1276, 1779, 848, 4401, 32, 3459, 81, 5975]}
{"line_number": 82, "line_type": "original", "code": "        long sum = val1 + val2;", "entropy": 1.517578125, "is_bug_line": false, "sus_score": 0.1061722425598158, "per_token_entropy": [2.208984375, 3.814453125, 7.81640625, 0.022735595703125, 0.337646484375, 0.0007023811340332031, 0.9228515625, 0.0115203857421875, 0.0026378631591796875, 0.032501220703125], "tokens": [351, 1946, 3632, 280, 909, 35, 474, 909, 36, 45]}
{"line_number": 82, "line_type": "generated", "code": "\n     * @throws ArithmeticException if the value is too big or too small\n     * @since 1.2\n     */\n    public static long safeMultiply(long val1, long val2) {\n        long total = val1 * val2;\n       ", "entropy": 0.07177734375, "is_bug_line": false, "sus_score": 0.1061722425598158, "per_token_entropy": [1.0908203125, 0.26513671875, 0.0039520263671875, 0.0352783203125, 0.0012464523315429688, 1.4424324035644531e-05, 0.002574920654296875, 0.000858306884765625, 0.0017337799072265625, 0.00027251243591308594, 0.0003802776336669922, 0.0002982616424560547, 0.002696990966796875, 0.00026488304138183594, 0.00015747547149658203, 0.10052490234375, 0.5625, 0.002971649169921875, 0.0100860595703125, 0.0015268325805664062, 0.2763671875, 0.00017690658569335938, 0.1927490234375, 0.0650634765625, 0.004741668701171875, 0.034881591796875, 0.005283355712890625, 0.0006837844848632812, 0.008544921875, 0.001140594482421875, 0.00013816356658935547, 0.001819610595703125, 0.00421142578125, 0.00015282630920410156, 1.7881393432617188e-05, 7.939338684082031e-05, 0.0012121200561523438, 1.7762184143066406e-05, 0.00011479854583740234, 0.0005135536193847656, 0.009552001953125, 0.29931640625, 0.309326171875, 0.06585693359375, 0.004177093505859375, 0.0281219482421875, 9.036064147949219e-05, 0.0002684593200683594, 0.00032901763916015625, 8.213520050048828e-05, 0.0013980865478515625, 0.3330078125], "tokens": [275, 319, 477, 5117, 47721, 984, 415, 322, 786, 438, 5133, 6524, 556, 5133, 5532, 275, 319, 477, 8119, 225, 35, 32, 36, 275, 569, 284, 562, 907, 1946, 10061, 27732, 26, 3222, 909, 35, 30, 1946, 909, 36, 27, 301, 291, 1946, 3380, 280, 909, 35, 319, 909, 36, 45, 291]}
{"line_number": 84, "line_type": "original", "code": "        if ((val1 ^ sum) < 0 && (val1 ^ val2) >= 0) {", "entropy": 0.66650390625, "is_bug_line": false, "sus_score": 0.1061722425598158, "per_token_entropy": [4.203125, 2.12890625, 2.697265625, 0.304443359375, 0.0233001708984375, 0.6796875, 5.71484375, 0.015106201171875, 0.0654296875, 0.00884246826171875, 0.0003414154052734375, 0.0287628173828125, 0.0035400390625, 0.00395965576171875, 0.0014142990112304688, 0.0012617111206054688, 0.00531768798828125, 0.00039887428283691406, 0.00109100341796875, 0.042144775390625, 0.0006947517395019531, 0.0002951622009277344, 0.0104217529296875, 0.062347412109375], "tokens": [351, 415, 1833, 695, 35, 5304, 3632, 27, 333, 225, 34, 962, 308, 695, 35, 5304, 909, 36, 27, 2377, 225, 34, 27, 301]}
{"line_number": 84, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Divide two values throwing an exception if overflow occurs.\n     * \n     * @param val1  the first value, the dividend\n     * @param val2  the second value, the divisor\n     * @return the", "entropy": 0.1385498046875, "is_bug_line": false, "sus_score": 0.1061722425598158, "per_token_entropy": [0.89892578125, 0.358642578125, 1.5634765625, 0.09246826171875, 0.0260162353515625, 0.000492095947265625, 1.4599609375, 0.06427001953125, 0.024627685546875, 0.01922607421875, 0.349365234375, 0.0010118484497070312, 0.0044403076171875, 0.00389862060546875, 0.032867431640625, 0.0015859603881835938, 0.01074981689453125, 0.0182342529296875, 6.699562072753906e-05, 0.10662841796875, 5.412101745605469e-05, 0.0021038055419921875, 0.0004642009735107422, 0.43505859375, 0.000583648681640625, 0.007061004638671875, 0.0018787384033203125, 0.4482421875, 0.006046295166015625, 0.8046875, 0.1270751953125, 0.250244140625, 0.0202789306640625, 3.0994415283203125e-06, 0.006633758544921875, 1.9669532775878906e-05, 9.417533874511719e-06, 7.426738739013672e-05, 0.00865936279296875, 6.139278411865234e-05, 0.0003998279571533203, 0.0003337860107421875, 0.0035419464111328125, 0.0014410018920898438, 0.0006246566772460938, 0.0003039836883544922, 0.0024700164794921875, 0.0270233154296875, 1.5020370483398438e-05, 0.00013566017150878906, 0.00812530517578125, 0.0011196136474609375], "tokens": [284, 320, 446, 1022, 275, 319, 17536, 805, 3134, 2078, 34177, 600, 3756, 415, 9973, 12984, 32, 275, 319, 5384, 319, 477, 753, 909, 35, 225, 322, 1932, 786, 30, 322, 4451, 314, 416, 275, 319, 477, 753, 909, 36, 225, 322, 3100, 786, 30, 322, 33482, 275, 319, 477, 601, 322]}
{"line_number": 88, "line_type": "original", "code": "        return sum;", "entropy": 5.30078125, "is_bug_line": false, "sus_score": 0.1061722425598158, "per_token_entropy": [4.43359375, 3.3203125, 13.3359375, 0.11663818359375], "tokens": [351, 442, 3632, 45]}
{"line_number": 88, "line_type": "generated", "code": "\n            case 0:\n                return 0;\n            case 1:\n                return val1;\n            default:\n                break;\n        }\n        long total = val1 * (long) val2;\n        if (total / (long) val2!=", "entropy": 0.109619140625, "is_bug_line": false, "sus_score": 0.1061722425598158, "per_token_entropy": [0.60546875, 0.388671875, 0.043701171875, 0.2364501953125, 0.0022983551025390625, 0.115234375, 0.0118408203125, 0.0158233642578125, 1.5974044799804688e-05, 0.282470703125, 0.250732421875, 0.09490966796875, 0.0008454322814941406, 0.00043964385986328125, 0.00029349327087402344, 0.1016845703125, 0.002384185791015625, 0.0006380081176757812, 6.520748138427734e-05, 0.0048980712890625, 0.64501953125, 0.24365234375, 0.0024585723876953125, 0.1712646484375, 0.74755859375, 0.00010693073272705078, 0.0249481201171875, 0.0006661415100097656, 0.2373046875, 0.10968017578125, 0.10723876953125, 0.0008401870727539062, 0.047210693359375, 0.000545501708984375, 0.001834869384765625, 0.284423828125, 4.076957702636719e-05, 0.00014448165893554688, 0.01477813720703125, 3.0517578125e-05, 0.0004069805145263672, 0.031585693359375, 0.0565185546875, 0.0087890625, 0.11224365234375, 0.2427978515625, 0.42626953125, 0.0014810562133789062, 0.00031256675720214844, 0.0191192626953125, 0.00014495849609375, 0.00011527538299560547], "tokens": [324, 1135, 225, 34, 44, 400, 442, 225, 34, 45, 324, 1135, 225, 35, 44, 400, 442, 909, 35, 45, 324, 1244, 44, 400, 1626, 45, 291, 320, 291, 1946, 3380, 280, 909, 35, 319, 308, 3222, 27, 909, 36, 45, 291, 415, 308, 2999, 517, 308, 3222, 27, 909, 36, 863]}
{"line_number": 237, "line_type": "original", "code": "    }", "entropy": 2.2734375, "is_bug_line": false, "sus_score": 0.10293700253099575, "per_token_entropy": [3.49609375, 1.048828125], "tokens": [264, 320]}
{"line_number": 237, "line_type": "generated", "code": "\n\n    /**\n     * Returns the number of whole units between the two specified datetimes.\n     *\n     * @param type  a standard datetime field type, not null\n     * @param minuend  the datetime to subtract from, not null\n     * @", "entropy": 0.50732421875, "is_bug_line": false, "sus_score": 0.10293700253099575, "per_token_entropy": [1.705078125, 0.1275634765625, 0.010223388671875, 0.0006837844848632812, 2.75, 0.61279296875, 2.009765625, 0.002773284912109375, 1.4921875, 1.7412109375, 0.54541015625, 0.78125, 1.0078125, 0.463134765625, 0.421875, 0.98583984375, 0.205078125, 0.03558349609375, 0.023681640625, 2.357421875, 0.00011646747589111328, 0.059722900390625, 0.035797119140625, 1.732421875, 0.036956787109375, 1.4375, 1.2626953125, 1.0908203125, 0.369384765625, 0.045257568359375, 0.0802001953125, 0.7861328125, 0.06085205078125, 0.016387939453125, 0.00017070770263671875, 0.00010466575622558594, 0.00495147705078125, 0.60400390625, 0.00016009807586669922, 0.0172576904296875, 0.03363037109375, 0.003574371337890625, 0.966796875, 0.08203125, 0.07769775390625, 0.0396728515625, 0.10748291015625, 0.139892578125, 0.00038814544677734375, 0.003879547119140625, 2.2411346435546875e-05, 2.682209014892578e-05], "tokens": [446, 1022, 275, 319, 3759, 322, 1451, 432, 9844, 9991, 3733, 322, 3134, 3191, 2340, 5571, 32, 275, 319, 275, 319, 477, 753, 827, 225, 312, 6216, 7138, 1600, 827, 30, 646, 744, 275, 319, 477, 753, 1847, 103, 416, 225, 322, 7138, 372, 27799, 645, 30, 646, 744, 275, 319, 477]}
{"line_number": 232, "line_type": "original", "code": "        if ((value < lowerBound) || (value > upperBound)) {", "entropy": 0.68798828125, "is_bug_line": false, "sus_score": 0.10289442259017458, "per_token_entropy": [2.13671875, 1.0205078125, 1.0751953125, 0.53125, 0.165771484375, 5.90625, 0.040313720703125, 0.01044464111328125, 0.0120697021484375, 0.006275177001953125, 0.0020275115966796875, 0.006565093994140625, 0.004180908203125, 0.0008821487426757812, 0.00894927978515625, 0.07891845703125], "tokens": [351, 415, 1833, 853, 333, 7216, 4716, 27, 1276, 308, 853, 848, 8342, 4716, 490, 301]}
{"line_number": 232, "line_type": "generated", "code": "\n     * @param maxValue the wrap range maximum value.  This must be\n     *  greater than minValue (checked by the method).\n     * @return the wrapped value\n     * @throws IllegalArgumentException if minValue is greater\n     *  than or equal to", "entropy": 0.030242919921875, "is_bug_line": false, "sus_score": 0.10289442259017458, "per_token_entropy": [0.54150390625, 0.0193328857421875, 0.0095367431640625, 0.032623291015625, 0.0035800933837890625, 0.02496337890625, 0.0005741119384765625, 9.751319885253906e-05, 0.00124359130859375, 0.00048804283142089844, 0.0181884765625, 0.0985107421875, 0.0026264190673828125, 0.004817962646484375, 0.0019931793212890625, 0.0765380859375, 0.0003170967102050781, 0.0105133056640625, 0.0010747909545898438, 0.0003352165222167969, 0.040435791015625, 0.00028133392333984375, 0.0263214111328125, 0.0013580322265625, 0.0006270408630371094, 0.0008687973022460938, 0.0008406639099121094, 0.006702423095703125, 0.2325439453125, 0.0017995834350585938, 0.0065765380859375, 0.0137939453125, 0.0195770263671875, 0.1358642578125, 0.0005855560302734375, 0.12744140625, 0.01375579833984375, 0.0002046823501586914, 0.005401611328125, 0.020538330078125, 0.0004940032958984375, 0.0025653839111328125, 0.00046324729919433594, 0.0013713836669921875, 0.002338409423828125, 0.0570068359375, 0.0005731582641601562, 0.00244140625, 0.00011336803436279297, 8.189678192138672e-05, 5.1856040954589844e-05, 4.792213439941406e-05], "tokens": [275, 319, 477, 753, 39159, 322, 9804, 2155, 7091, 786, 32, 225, 1348, 2298, 526, 275, 319, 225, 10761, 2784, 1847, 882, 308, 7149, 810, 322, 1411, 547, 275, 319, 477, 601, 322, 16283, 786, 275, 319, 477, 5117, 12137, 415, 1847, 882, 438, 10761, 275, 319, 225, 2784, 556, 5040, 372]}
{"line_number": 219, "line_type": "original", "code": "    }", "entropy": 3.068359375, "is_bug_line": false, "sus_score": 0.0919363448813512, "per_token_entropy": [3.984375, 2.15234375], "tokens": [264, 320]}
{"line_number": 219, "line_type": "generated", "code": "\n     */\n    public static int getWrappedValue(int currentValue, int wrapValue,\n                                     int minValue, int maxValue) {\n        if (minValue > maxValue) {\n            throw new IllegalArgumentException(\"Minimum value must not be greater than maximum value\");\n       ", "entropy": 0.1751708984375, "is_bug_line": false, "sus_score": 0.0919363448813512, "per_token_entropy": [1.041015625, 0.185546875, 0.00982666015625, 0.383056640625, 0.003032684326171875, 0.10577392578125, 0.273681640625, 0.0008416175842285156, 0.0002884864807128906, 0.3486328125, 0.058837890625, 0.0164031982421875, 0.00017392635345458984, 7.140636444091797e-05, 0.055999755859375, 0.0020599365234375, 0.0005793571472167969, 0.00046944618225097656, 1.1298828125, 0.0017690658569335938, 0.0005245208740234375, 0.00030684471130371094, 0.0006561279296875, 0.002101898193359375, 1.1205673217773438e-05, 0.00341033935546875, 0.01224517822265625, 0.1632080078125, 0.9228515625, 0.017578125, 0.10736083984375, 1.0132789611816406e-05, 0.1480712890625, 0.0008993148803710938, 0.01800537109375, 0.002750396728515625, 0.0472412109375, 0.031829833984375, 0.0012607574462890625, 0.006298065185546875, 0.53369140625, 0.744140625, 0.1036376953125, 1.0537109375, 1.0703125, 0.1444091796875, 0.041900634765625, 0.058380126953125, 0.04742431640625, 0.1241455078125, 0.0283203125, 0.057159423828125], "tokens": [275, 569, 284, 562, 907, 629, 622, 21844, 882, 26, 410, 1550, 882, 30, 629, 9804, 882, 30, 9474, 629, 1847, 882, 30, 629, 39159, 27, 301, 291, 415, 308, 887, 882, 848, 39159, 27, 301, 324, 1422, 537, 12137, 440, 13367, 786, 2298, 646, 526, 10761, 2784, 7091, 786, 724, 291]}
{"line_number": 214, "line_type": "original", "code": "        if ((value < lowerBound) || (value > upperBound)) {", "entropy": 0.68017578125, "is_bug_line": false, "sus_score": 0.09183290999593141, "per_token_entropy": [3.255859375, 0.927734375, 1.2783203125, 3.177734375, 1.4658203125, 0.5859375, 0.052764892578125, 0.0184478759765625, 0.01001739501953125, 0.004852294921875, 0.0023212432861328125, 0.00489044189453125, 0.0014324188232421875, 0.00041937828063964844, 0.016387939453125, 0.07928466796875], "tokens": [351, 415, 1833, 853, 333, 7216, 4716, 27, 1276, 308, 853, 848, 8342, 4716, 490, 301]}
{"line_number": 214, "line_type": "generated", "code": "\n     * @return the wrapped value, in the range of the field\n     */\n    public static int getWrappedValue(int currentValue, int wrapValue) {\n        int wrapped = currentValue + wrapValue;\n        if (wrapped < 0) {", "entropy": 0.338134765625, "is_bug_line": false, "sus_score": 0.09183290999593141, "per_token_entropy": [0.2406005859375, 0.09954833984375, 0.01593017578125, 0.63427734375, 0.413330078125, 0.50146484375, 0.1865234375, 1.525390625, 0.53466796875, 0.1734619140625, 0.39404296875, 1.10546875, 0.41162109375, 0.281494140625, 0.8828125, 0.38720703125, 0.01251220703125, 0.2130126953125, 0.017059326171875, 0.1796875, 0.1942138671875, 0.0007224082946777344, 0.00022923946380615234, 0.7763671875, 0.141845703125, 0.025299072265625, 0.0006418228149414062, 0.00033664703369140625, 0.01419830322265625, 0.007434844970703125, 0.0004286766052246094, 0.01509857177734375, 0.01108551025390625, 0.215576171875, 0.6025390625, 1.7060546875, 1.1513671875, 0.88916015625, 7.152557373046875e-07, 0.09271240234375, 0.0028285980224609375, 2.1696090698242188e-05, 0.004669189453125, 0.310302734375, 0.75732421875, 0.13671875, 0.07122802734375, 1.6611328125, 0.49609375, 0.006072998046875, 0.07843017578125, 0.0018482208251953125], "tokens": [275, 319, 477, 601, 322, 16283, 786, 30, 328, 322, 2155, 432, 322, 1600, 275, 569, 284, 562, 907, 629, 622, 21844, 882, 26, 410, 1550, 882, 30, 629, 9804, 882, 27, 301, 291, 629, 16283, 280, 1550, 882, 474, 9804, 882, 45, 291, 415, 308, 21111, 333, 225, 34, 27, 301]}
{"line_number": 138, "line_type": "original", "code": "                return -val1;", "entropy": 4.33984375, "is_bug_line": true, "sus_score": 0.062017367294604234, "per_token_entropy": [8.515625, 3.41796875, 4.234375, 7.59765625, 1.9736328125, 0.300537109375], "tokens": [2071, 442, 429, 695, 35, 45]}
{"line_number": 138, "line_type": "generated", "code": "\n    }\n    \n    /**\n     * Casts to a long throwing an exception if overflow occurs.\n     * \n     * @param value  the value\n     * @return the value as a long\n     * @throws ArithmeticException if the value is too big or too small", "entropy": 0.04150390625, "is_bug_line": true, "sus_score": 0.062017367294604234, "per_token_entropy": [0.234130859375, 0.0124053955078125, 0.81787109375, 0.07281494140625, 0.014373779296875, 2.6702880859375e-05, 0.340576171875, 0.0094451904296875, 0.0169525146484375, 0.257080078125, 0.1748046875, 0.0206451416015625, 0.0002422332763671875, 0.00018107891082763672, 0.00170135498046875, 0.016265869140625, 0.0020771026611328125, 0.00585174560546875, 0.004444122314453125, 5.1975250244140625e-05, 0.021209716796875, 6.985664367675781e-05, 0.0013294219970703125, 0.0007038116455078125, 0.004669189453125, 0.003429412841796875, 0.0025196075439453125, 0.00475311279296875, 0.0105438232421875, 2.205371856689453e-05, 3.218650817871094e-05, 0.0018491744995117188, 0.0008764266967773438, 0.0015716552734375, 0.003082275390625, 0.049102783203125, 0.002719879150390625, 0.00661468505859375, 0.00931549072265625, 0.00022280216217041016, 0.01476287841796875, 0.00045680999755859375, 4.0531158447265625e-06, 0.0011796951293945312, 0.0014934539794921875, 0.002132415771484375, 0.00106048583984375, 0.00014317035675048828, 0.0012025833129882812, 0.00884246826171875, 0.0006775856018066406, 0.00014030933380126953], "tokens": [284, 320, 2170, 1022, 275, 319, 23894, 101, 372, 312, 1946, 34177, 600, 3756, 415, 9973, 12984, 32, 275, 319, 5384, 319, 477, 753, 786, 225, 322, 786, 275, 319, 477, 601, 322, 786, 619, 312, 1946, 275, 319, 477, 5117, 47721, 984, 415, 322, 786, 438, 5133, 6524, 556, 5133, 5532]}
{"line_number": 142, "line_type": "original", "code": "                return val1;", "entropy": 3.775390625, "is_bug_line": false, "sus_score": 0.043852900965351466, "per_token_entropy": [9.3984375, 3.13671875, 3.599609375, 0.050140380859375, 2.689453125], "tokens": [2071, 442, 909, 35, 45]}
{"line_number": 142, "line_type": "generated", "code": "\n     * \n     * @param val1  the first value\n     * @param val2  the second value\n     * @return the new total\n     * @throws ArithmeticException if the value is too big or too small\n     * @since 1.2", "entropy": 0.06427001953125, "is_bug_line": false, "sus_score": 0.043852900965351466, "per_token_entropy": [0.333251953125, 0.19873046875, 0.145751953125, 0.0005393028259277344, 0.0078277587890625, 0.006862640380859375, 0.1285400390625, 0.0008511543273925781, 0.0120391845703125, 0.007396697998046875, 0.007038116455078125, 0.01084136962890625, 0.0986328125, 8.52346420288086e-05, 7.510185241699219e-06, 0.00030231475830078125, 0.0006532669067382812, 0.0001690387725830078, 0.0015878677368164062, 0.0002377033233642578, 0.0012054443359375, 0.0022983551025390625, 0.04705810546875, 0.00012886524200439453, 0.0002994537353515625, 0.0338134765625, 0.00795745849609375, 0.1124267578125, 0.0092315673828125, 0.2333984375, 0.0263824462890625, 0.0002646446228027344, 0.014373779296875, 0.001628875732421875, 7.987022399902344e-06, 0.0008339881896972656, 0.0009813308715820312, 0.006145477294921875, 0.0003299713134765625, 0.00031948089599609375, 0.0002694129943847656, 0.0108795166015625, 0.00019812583923339844, 0.00016999244689941406, 0.0193634033203125, 1.10546875, 0.00850677490234375, 0.069091796875, 0.0035266876220703125, 0.40625, 0.0011959075927734375, 0.256103515625], "tokens": [275, 319, 5384, 319, 477, 753, 909, 35, 225, 322, 1932, 786, 275, 319, 477, 753, 909, 36, 225, 322, 3100, 786, 275, 319, 477, 601, 322, 537, 3380, 275, 319, 477, 5117, 47721, 984, 415, 322, 786, 438, 5133, 6524, 556, 5133, 5532, 275, 319, 477, 8119, 225, 35, 32, 36]}
{"line_number": 144, "line_type": "original", "code": "        long total = val1 * val2;", "entropy": 0.84765625, "is_bug_line": false, "sus_score": 0.04303314829119352, "per_token_entropy": [1.4765625, 4.28515625, 1.9443359375, 0.011810302734375, 0.580078125, 0.005489349365234375, 0.013458251953125, 0.12890625, 0.0012445449829101562, 0.0299072265625], "tokens": [351, 1946, 3380, 280, 909, 35, 319, 909, 36, 45]}
{"line_number": 144, "line_type": "generated", "code": "        * @param val2  the second value\n     * @return the new total\n     * @throws ArithmeticException if the value is too big or too small\n     */\n    public static int safeMultiplyToInt(int val1, int val2) {\n       ", "entropy": 0.0792236328125, "is_bug_line": false, "sus_score": 0.04303314829119352, "per_token_entropy": [1.4775390625, 0.286865234375, 0.0024547576904296875, 0.003223419189453125, 0.00035452842712402344, 0.0008339881896972656, 0.005382537841796875, 0.0003771781921386719, 0.005077362060546875, 0.0014495849609375, 0.47021484375, 0.0007476806640625, 0.0014352798461914062, 0.018341064453125, 0.01117706298828125, 0.1097412109375, 0.01372528076171875, 0.28564453125, 0.0280914306640625, 0.0003097057342529297, 0.0175933837890625, 0.0011358261108398438, 7.152557373046875e-06, 0.0008821487426757812, 0.0015306472778320312, 0.00759124755859375, 0.0005006790161132812, 0.0003533363342285156, 0.00023925304412841797, 0.0080108642578125, 0.0002536773681640625, 0.00018799304962158203, 0.030548095703125, 0.52392578125, 0.030670166015625, 0.00635528564453125, 0.0010089874267578125, 0.01812744140625, 0.01505279541015625, 0.176025390625, 0.005657196044921875, 0.00104522705078125, 0.353515625, 0.00020575523376464844, 3.2782554626464844e-05, 0.00022363662719726562, 0.10076904296875, 2.0742416381835938e-05, 8.344650268554688e-07, 0.0007548332214355469, 0.0067596435546875, 0.0882568359375], "tokens": [351, 319, 477, 753, 909, 36, 225, 322, 3100, 786, 275, 319, 477, 601, 322, 537, 3380, 275, 319, 477, 5117, 47721, 984, 415, 322, 786, 438, 5133, 6524, 556, 5133, 5532, 275, 569, 284, 562, 907, 629, 10061, 27732, 14150, 26, 410, 909, 35, 30, 629, 909, 36, 27, 301, 291]}
{"line_number": 145, "line_type": "original", "code": "        if (total / val2 != val1) {", "entropy": 0.634765625, "is_bug_line": false, "sus_score": 0.04303314829119352, "per_token_entropy": [2.126953125, 1.6552734375, 0.124267578125, 2.435546875, 0.70068359375, 0.020050048828125, 0.0294952392578125, 0.016021728515625, 0.00238037109375, 0.0010652542114257812, 0.40771484375, 0.09869384765625], "tokens": [351, 415, 308, 2999, 517, 909, 36, 863, 909, 35, 27, 301]}
{"line_number": 145, "line_type": "generated", "code": "\n     * @return the new total\n     * @throws ArithmeticException if the value is too big or too small\n     */\n    public static int safeMultiplyToInt(long val1, long val2) {\n        long total = val1 * val2;\n       ", "entropy": 0.0946044921875, "is_bug_line": false, "sus_score": 0.04303314829119352, "per_token_entropy": [0.576171875, 0.1295166015625, 0.00547027587890625, 0.035675048828125, 0.008544921875, 0.11785888671875, 0.015289306640625, 0.436279296875, 0.07342529296875, 0.0008883476257324219, 0.0303192138671875, 0.0015277862548828125, 9.417533874511719e-06, 0.0013647079467773438, 0.002384185791015625, 0.012176513671875, 0.0007367134094238281, 0.0004544258117675781, 0.0003135204315185547, 0.011383056640625, 0.00029277801513671875, 0.00024890899658203125, 0.049224853515625, 0.54345703125, 0.033111572265625, 0.00977325439453125, 0.0016689300537109375, 0.04046630859375, 0.0228729248046875, 0.1968994140625, 0.0097808837890625, 0.0012063980102539062, 1.1611328125, 0.00017142295837402344, 2.300739288330078e-05, 7.152557373046875e-05, 0.1658935546875, 2.7298927307128906e-05, 2.9802322387695312e-06, 0.0006437301635742188, 0.00873565673828125, 0.103759765625, 0.75048828125, 0.1060791015625, 0.0012769699096679688, 0.078369140625, 0.0002256631851196289, 0.0002636909484863281, 0.0004987716674804688, 2.7060508728027344e-05, 0.0004706382751464844, 0.1690673828125], "tokens": [275, 319, 477, 601, 322, 537, 3380, 275, 319, 477, 5117, 47721, 984, 415, 322, 786, 438, 5133, 6524, 556, 5133, 5532, 275, 569, 284, 562, 907, 629, 10061, 27732, 14150, 26, 3222, 909, 35, 30, 1946, 909, 36, 27, 301, 291, 1946, 3380, 280, 909, 35, 319, 909, 36, 45, 291]}
{"line_number": 148, "line_type": "original", "code": "        return total;", "entropy": 3.7890625, "is_bug_line": false, "sus_score": 0.04303314829119352, "per_token_entropy": [5.70703125, 1.1669921875, 8.015625, 0.26806640625], "tokens": [351, 442, 3380, 45]}
{"line_number": 148, "line_type": "generated", "code": "\n    public static int safeMultiplyToInt(int val1, int val2) {\n        long total = (long) val1 * (long) val2;\n        if (total < Integer.MIN_VALUE || total > Integer.MAX_VALUE)", "entropy": 0.061737060546875, "is_bug_line": false, "sus_score": 0.04303314829119352, "per_token_entropy": [0.9111328125, 0.53662109375, 0.0024204254150390625, 0.0311126708984375, 0.035491943359375, 0.1124267578125, 0.01087188720703125, 0.00173187255859375, 0.44921875, 0.00034356117248535156, 2.110004425048828e-05, 3.4809112548828125e-05, 0.035400390625, 2.8967857360839844e-05, 1.1920928955078125e-06, 0.0008492469787597656, 0.01020050048828125, 0.10205078125, 0.5087890625, 0.1568603515625, 0.0008902549743652344, 0.07421875, 0.0008220672607421875, 0.00015056133270263672, 0.003971099853515625, 0.00011682510375976562, 8.225440979003906e-05, 0.0022792816162109375, 1.9311904907226562e-05, 8.344650268554688e-06, 0.0005245208740234375, 0.00015342235565185547, 0.0001920461654663086, 0.02752685546875, 0.0413818359375, 0.006015777587890625, 0.0311126708984375, 0.0999755859375, 0.0006785392761230469, 6.67572021484375e-06, 2.002716064453125e-05, 2.384185791015625e-07, 5.841255187988281e-06, 0.007564544677734375, 0.00214385986328125, 4.935264587402344e-05, 0.0001367330551147461, 2.6464462280273438e-05, 1.8596649169921875e-05, 1.4662742614746094e-05, 4.649162292480469e-06, 0.00502777099609375], "tokens": [284, 562, 907, 629, 10061, 27732, 14150, 26, 410, 909, 35, 30, 629, 909, 36, 27, 301, 291, 1946, 3380, 280, 308, 3222, 27, 909, 35, 319, 308, 3222, 27, 909, 36, 45, 291, 415, 308, 2999, 333, 4401, 32, 4683, 81, 5975, 1276, 3380, 848, 4401, 32, 3459, 81, 5975, 27]}
{"line_number": 136, "line_type": "original", "code": "        switch (val2) {", "entropy": 2.30859375, "is_bug_line": false, "sus_score": 0.031008683647302117, "per_token_entropy": [6.23828125, 5.25390625, 0.2122802734375, 2.375, 1.9736328125, 0.05572509765625, 0.048736572265625], "tokens": [351, 3578, 308, 695, 36, 27, 301]}
{"line_number": 136, "line_type": "generated", "code": "\n        if (value > 0) {\n            return Integer.MAX_VALUE;\n        } else {\n            return Integer.MIN_VALUE;\n        }\n    }\n\n    /**\n     * Casts to a long throwing an exception if overflow occurs.\n     * \n    ", "entropy": 0.205078125, "is_bug_line": false, "sus_score": 0.031008683647302117, "per_token_entropy": [0.6611328125, 1.9326171875, 0.1956787109375, 0.662109375, 1.8857421875, 0.869140625, 0.0219879150390625, 0.1160888671875, 0.0114288330078125, 0.1666259765625, 0.10498046875, 1.0615234375, 0.0004563331604003906, 0.0364990234375, 2.5033950805664062e-05, 5.1140785217285156e-05, 0.004604339599609375, 0.04180908203125, 0.001705169677734375, 0.479736328125, 0.217041015625, 0.0120697021484375, 0.0031566619873046875, 0.0043792724609375, 8.165836334228516e-05, 0.0004930496215820312, 1.6570091247558594e-05, 0.00010836124420166016, 0.0027713775634765625, 0.046417236328125, 0.001140594482421875, 0.236328125, 0.0012044906616210938, 1.1484375, 0.05987548828125, 0.01113128662109375, 3.2782554626464844e-05, 0.2205810546875, 0.009124755859375, 0.0191497802734375, 0.260009765625, 0.09674072265625, 0.0143890380859375, 0.0002751350402832031, 0.0002238750457763672, 0.0015506744384765625, 0.0095367431640625, 0.0019502639770507812, 0.00583648681640625, 0.0030231475830078125, 2.3126602172851562e-05, 0.0244903564453125], "tokens": [291, 415, 308, 853, 848, 225, 34, 27, 301, 324, 442, 4401, 32, 3459, 81, 5975, 45, 291, 320, 813, 301, 324, 442, 4401, 32, 4683, 81, 5975, 45, 291, 320, 284, 320, 446, 1022, 275, 319, 23894, 101, 372, 312, 1946, 34177, 600, 3756, 415, 9973, 12984, 32, 275, 319, 5384]}
