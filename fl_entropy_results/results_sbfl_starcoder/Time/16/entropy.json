{"line_number": 698, "line_type": "original", "code": "        DateTimeParser parser = requireParser();", "entropy": 2.2265625, "is_bug_line": false, "sus_score": 0.3478327964999673, "per_token_entropy": [2.5234375, 7.078125, 2.873046875, 4.6328125, 0.178466796875, 0.34326171875, 0.1578369140625, 0.0247039794921875], "tokens": [351, 6666, 2825, 4118, 280, 1205, 2825, 473]}
{"line_number": 698, "line_type": "generated", "code": "\n        }\n        throw new IllegalArgumentException(\"Invalid format: \\\"\" + text + \"\\\"\");\n    }\n\n    /**\n     * Parses a datetime from the given text, returning the number of\n     * milliseconds since the epoch, 1970-01-01", "entropy": 0.12176513671875, "is_bug_line": false, "sus_score": 0.3478327964999673, "per_token_entropy": [0.75390625, 0.050323486328125, 0.58984375, 0.467529296875, 0.0648193359375, 0.039520263671875, 0.18310546875, 0.93310546875, 0.45166015625, 0.000698089599609375, 0.40234375, 0.00585174560546875, 0.0177764892578125, 0.0159759521484375, 0.1614990234375, 0.0138092041015625, 0.04986572265625, 0.00034117698669433594, 0.21240234375, 0.160400390625, 0.0037364959716796875, 4.470348358154297e-05, 0.027252197265625, 0.0296478271484375, 0.2332763671875, 0.014312744140625, 0.0045623779296875, 0.0018930435180664062, 0.01081085205078125, 0.050262451171875, 0.1529541015625, 0.685546875, 0.203369140625, 0.0055389404296875, 0.015838623046875, 0.00020051002502441406, 0.0097808837890625, 0.019317626953125, 0.0762939453125, 0.01019287109375, 0.1904296875, 0.01131439208984375, 6.604194641113281e-05, 0.0001252889633178711, 4.1484832763671875e-05, 1.5497207641601562e-05, 4.088878631591797e-05, 9.34600830078125e-05, 3.0994415283203125e-06, 1.71661376953125e-05, 3.7550926208496094e-05, 2.3484230041503906e-05], "tokens": [291, 320, 291, 1422, 537, 12137, 440, 3817, 2179, 44, 25688, 474, 1344, 474, 12378, 724, 284, 320, 446, 1022, 275, 319, 44280, 312, 7138, 645, 322, 2702, 1344, 30, 14116, 322, 1451, 432, 275, 319, 18574, 4558, 322, 10900, 30, 225, 35, 43, 41, 34, 31, 34, 35, 31, 34, 35]}
{"line_number": 699, "line_type": "original", "code": "        if (instant == null) {", "entropy": 2.630859375, "is_bug_line": false, "sus_score": 0.3478327964999673, "per_token_entropy": [6.921875, 4.71484375, 0.08148193359375, 8.34375, 0.87841796875, 0.013763427734375, 0.0185394287109375, 0.0784912109375], "tokens": [351, 415, 308, 30241, 610, 744, 27, 301]}
{"line_number": 699, "line_type": "generated", "code": "\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + text + \"\\\"\");\n        }\n        if (iZone!= null) {\n            return bucket.computeMillis(true, text) + iZone.getOffset(bucket.getInstant());\n        } else {", "entropy": 0.27783203125, "is_bug_line": false, "sus_score": 0.3478327964999673, "per_token_entropy": [0.56884765625, 0.48095703125, 0.00937652587890625, 0.034881591796875, 0.2415771484375, 0.66357421875, 0.2481689453125, 0.0014524459838867188, 0.33935546875, 0.017913818359375, 0.041168212890625, 0.031890869140625, 0.2115478515625, 0.0217742919921875, 0.068115234375, 0.0014600753784179688, 0.90869140625, 2.490234375, 0.05560302734375, 0.68798828125, 1.7021484375, 0.1546630859375, 0.0014133453369140625, 0.0310821533203125, 0.0010271072387695312, 0.10943603515625, 0.5771484375, 0.765625, 0.000377655029296875, 0.005329132080078125, 0.001918792724609375, 0.033447265625, 0.3466796875, 0.001922607421875, 0.0137786865234375, 0.8798828125, 0.359375, 0.103271484375, 0.006626129150390625, 0.0004329681396484375, 0.0006847381591796875, 0.0012845993041992188, 0.004627227783203125, 0.064697265625, 0.009613037109375, 0.69287109375, 0.349365234375, 0.494873046875, 0.0176544189453125, 0.00010001659393310547, 0.51953125, 0.079345703125], "tokens": [324, 1422, 537, 12137, 440, 3817, 2179, 44, 25688, 474, 1344, 474, 12378, 724, 291, 320, 291, 415, 308, 91, 6767, 863, 744, 27, 301, 324, 442, 8105, 32, 7924, 10906, 26, 1508, 30, 1344, 27, 474, 595, 6767, 32, 371, 3457, 26, 6452, 32, 371, 22183, 1035, 291, 320, 813, 301]}
{"line_number": 703, "line_type": "original", "code": "        long instantMillis = instant.getMillis();", "entropy": 1.2509765625, "is_bug_line": false, "sus_score": 0.3478327964999673, "per_token_entropy": [6.23046875, 3.546875, 0.252197265625, 1.4853515625, 0.10015869140625, 0.62109375, 0.031707763671875, 0.0172271728515625, 0.005794525146484375, 0.220458984375], "tokens": [351, 1946, 23564, 10906, 280, 23564, 32, 371, 10906, 473]}
{"line_number": 703, "line_type": "generated", "code": "\n\n    /**\n     * Parses a datetime from the given text, returning the number of\n     * milliseconds since the epoch, 1970-01-01T00:00:00Z.\n     * <p>\n     *", "entropy": 0.06341552734375, "is_bug_line": false, "sus_score": 0.3478327964999673, "per_token_entropy": [0.970703125, 0.291259765625, 0.005401611328125, 7.331371307373047e-05, 0.09454345703125, 0.046783447265625, 0.2413330078125, 0.01299285888671875, 0.0077056884765625, 0.002170562744140625, 0.01140594482421875, 0.0504150390625, 0.1739501953125, 0.72119140625, 0.21142578125, 0.00732421875, 0.0152435302734375, 8.237361907958984e-05, 0.00936126708984375, 0.016845703125, 0.08306884765625, 0.009429931640625, 0.1669921875, 0.0091094970703125, 8.130073547363281e-05, 0.0001361370086669922, 4.673004150390625e-05, 1.8835067749023438e-05, 3.826618194580078e-05, 8.296966552734375e-05, 3.337860107421875e-06, 8.106231689453125e-06, 3.612041473388672e-05, 2.205371856689453e-05, 0.0007638931274414062, 7.772445678710938e-05, 1.919269561767578e-05, 0.00012767314910888672, 6.198883056640625e-06, 1.0251998901367188e-05, 0.0009975433349609375, 2.0384788513183594e-05, 7.045269012451172e-05, 0.007049560546875, 0.049346923828125, 0.03802490234375, 2.47955322265625e-05, 0.04217529296875, 0.0001398324966430664, 0.00012731552124023438, 0.00028133392333984375, 6.866455078125e-05], "tokens": [446, 1022, 275, 319, 44280, 312, 7138, 645, 322, 2702, 1344, 30, 14116, 322, 1451, 432, 275, 319, 18574, 4558, 322, 10900, 30, 225, 35, 43, 41, 34, 31, 34, 35, 31, 34, 35, 70, 34, 34, 44, 34, 34, 44, 34, 34, 76, 32, 275, 319, 333, 98, 48, 275, 319]}
{"line_number": 704, "line_type": "original", "code": "        Chronology chrono = instant.getChronology();", "entropy": 1.5869140625, "is_bug_line": false, "sus_score": 0.3478327964999673, "per_token_entropy": [5.3203125, 6.32421875, 0.05682373046875, 0.00010192394256591797, 0.39794921875, 0.0396728515625, 8.234375, 0.063232421875, 0.00936126708984375, 0.00041937828063964844, 0.0065155029296875, 3.814697265625e-06, 0.171875], "tokens": [351, 1884, 2558, 10537, 45868, 280, 23564, 32, 371, 828, 2558, 10537, 473]}
{"line_number": 704, "line_type": "generated", "code": "\n    /**\n     * Parses a datetime from the given text, returning the number of\n     * milliseconds since the epoch, 1970-01-01T00:00:00Z.\n     * <p>\n     *", "entropy": 0.05596923828125, "is_bug_line": false, "sus_score": 0.3478327964999673, "per_token_entropy": [0.443115234375, 0.372314453125, 0.01824951171875, 0.00011277198791503906, 0.1126708984375, 0.047271728515625, 0.2313232421875, 0.0141448974609375, 0.007724761962890625, 0.0022335052490234375, 0.0116424560546875, 0.05731201171875, 0.1787109375, 0.74072265625, 0.21630859375, 0.0088043212890625, 0.01534271240234375, 0.00032901763916015625, 0.01235198974609375, 0.0188140869140625, 0.06634521484375, 0.01088714599609375, 0.16845703125, 0.00943756103515625, 0.00013577938079833984, 0.00013935565948486328, 5.14984130859375e-05, 2.384185791015625e-05, 4.172325134277344e-05, 0.00016236305236816406, 4.172325134277344e-06, 8.940696716308594e-06, 5.042552947998047e-05, 2.3245811462402344e-05, 0.0008225440979003906, 0.00010156631469726562, 2.3365020751953125e-05, 0.00013959407806396484, 6.794929504394531e-06, 1.3232231140136719e-05, 0.0011644363403320312, 2.8848648071289062e-05, 7.903575897216797e-05, 0.009429931640625, 0.038970947265625, 0.038330078125, 4.6133995056152344e-05, 0.053985595703125, 0.00021755695343017578, 0.0001767873764038086, 0.00046253204345703125, 9.226799011230469e-05], "tokens": [284, 1022, 275, 319, 44280, 312, 7138, 645, 322, 2702, 1344, 30, 14116, 322, 1451, 432, 275, 319, 18574, 4558, 322, 10900, 30, 225, 35, 43, 41, 34, 31, 34, 35, 31, 34, 35, 70, 34, 34, 44, 34, 34, 44, 34, 34, 76, 32, 275, 319, 333, 98, 48, 275, 319]}
{"line_number": 705, "line_type": "original", "code": "        long instantLocal = instantMillis + chrono.getZone().getOffset(instantMillis);", "entropy": 0.884765625, "is_bug_line": false, "sus_score": 0.3478327964999673, "per_token_entropy": [4.203125, 3.958984375, 0.62548828125, 1.5966796875, 0.150634765625, 0.62890625, 2.966796875, 0.7255859375, 1.83203125, 0.00479888916015625, 0.0014219284057617188, 0.0015726089477539062, 0.0005259513854980469, 0.0014848709106445312, 0.0032672882080078125, 0.0240478515625, 0.0225067138671875, 0.0301513671875, 0.042236328125], "tokens": [351, 1946, 23564, 3325, 280, 23564, 10906, 474, 45868, 32, 371, 6767, 922, 371, 3457, 26, 30241, 10906, 293]}
{"line_number": 705, "line_type": "generated", "code": "\n     * Parses a datetime from the given text, returning the number of\n     * milliseconds since the epoch, 1970-01-01T00:00:00Z.\n     * <p>\n     * The parse", "entropy": 0.0687255859375, "is_bug_line": false, "sus_score": 0.3478327964999673, "per_token_entropy": [0.77294921875, 0.08349609375, 0.08154296875, 0.047760009765625, 0.2166748046875, 0.0167694091796875, 0.00824737548828125, 0.0027675628662109375, 0.01024627685546875, 0.054443359375, 0.208740234375, 0.78857421875, 0.26904296875, 0.012542724609375, 0.023345947265625, 0.00015020370483398438, 0.0092315673828125, 0.0179595947265625, 0.057952880859375, 0.0137939453125, 0.2359619140625, 0.01270294189453125, 0.00017917156219482422, 0.0001207590103149414, 7.295608520507812e-05, 0.00013399124145507812, 3.981590270996094e-05, 6.103515625e-05, 3.814697265625e-06, 2.3365020751953125e-05, 5.173683166503906e-05, 2.849102020263672e-05, 0.0008425712585449219, 8.785724639892578e-05, 1.7523765563964844e-05, 0.00014030933380126953, 6.079673767089844e-06, 1.430511474609375e-05, 0.0009493827819824219, 5.8770179748535156e-05, 7.390975952148438e-05, 0.00850677490234375, 0.0458984375, 0.051055908203125, 0.00011050701141357422, 0.06964111328125, 0.0004010200500488281, 0.0001819133758544922, 0.0189056396484375, 8.594989776611328e-05, 0.387451171875, 0.042083740234375], "tokens": [275, 319, 44280, 312, 7138, 645, 322, 2702, 1344, 30, 14116, 322, 1451, 432, 275, 319, 18574, 4558, 322, 10900, 30, 225, 35, 43, 41, 34, 31, 34, 35, 31, 34, 35, 70, 34, 34, 44, 34, 34, 44, 34, 34, 76, 32, 275, 319, 333, 98, 48, 275, 319, 886, 3185]}
{"line_number": 706, "line_type": "original", "code": "        chrono = selectChronology(chrono);", "entropy": 1.6513671875, "is_bug_line": false, "sus_score": 0.3478327964999673, "per_token_entropy": [4.421875, 10.234375, 0.1142578125, 0.2398681640625, 0.005237579345703125, 0.0019407272338867188, 3.921985626220703e-05, 0.0027599334716796875, 1.4375, 0.0506591796875], "tokens": [351, 45868, 280, 2192, 828, 2558, 10537, 26, 18317, 293]}
{"line_number": 706, "line_type": "generated", "code": "\n     * <p>\n     * The parse will use the ISO chronology, and the default time zone.\n     * If the text contains a time zone string then that will be taken into account.\n     *\n     * @param text  text to parse", "entropy": 0.0545654296875, "is_bug_line": false, "sus_score": 0.3478327964999673, "per_token_entropy": [0.3701171875, 0.00960540771484375, 0.21337890625, 0.0024814605712890625, 0.00048542022705078125, 0.00841522216796875, 0.00015556812286376953, 0.447509765625, 0.047119140625, 0.00833892822265625, 0.01439666748046875, 0.013916015625, 0.146484375, 0.050994873046875, 1.0132789611816406e-05, 0.00043392181396484375, 0.310791015625, 0.032989501953125, 0.018890380859375, 0.03399658203125, 0.00955963134765625, 0.0004324913024902344, 0.030517578125, 0.02752685546875, 9.632110595703125e-05, 0.1949462890625, 0.00643157958984375, 0.0279541015625, 0.0039520263671875, 0.010040283203125, 0.0261688232421875, 0.0005674362182617188, 0.026763916015625, 0.008636474609375, 0.028289794921875, 0.006046295166015625, 0.00328826904296875, 0.042572021484375, 0.0036163330078125, 0.044769287109375, 0.01239013671875, 0.033599853515625, 8.940696716308594e-05, 0.2384033203125, 2.6345252990722656e-05, 0.0013256072998046875, 0.0023345947265625, 0.01019287109375, 0.00783538818359375, 0.297119140625, 0.0004506111145019531, 0.0007991790771484375], "tokens": [275, 319, 333, 98, 48, 275, 319, 886, 3185, 1098, 793, 322, 19687, 663, 2558, 10537, 30, 461, 322, 1244, 1133, 10790, 32, 275, 319, 1670, 322, 1344, 4304, 312, 1133, 10790, 802, 1615, 688, 1098, 526, 11508, 1991, 3497, 32, 275, 319, 275, 319, 477, 753, 1344, 225, 1344, 372, 3185]}
{"line_number": 708, "line_type": "original", "code": "        DateTimeParserBucket bucket = new DateTimeParserBucket(", "entropy": 0.78759765625, "is_bug_line": true, "sus_score": 0.3478327964999673, "per_token_entropy": [4.08203125, 2.97265625, 1.11328125, 0.1295166015625, 0.08831787109375, 0.063720703125, 0.1026611328125, 0.01468658447265625, 0.007106781005859375, 0.0016298294067382812, 0.0848388671875], "tokens": [351, 6666, 2825, 9001, 8105, 280, 537, 6666, 2825, 9001, 26]}
{"line_number": 708, "line_type": "generated", "code": "\n     * <p>\n     * This method is equivalent to {@link #parseLocalDate(String, DateTimeZone)}.\n     *\n     * @param text  the text to parse\n     * @return parsed local date\n     * @throws UnsupportedOperationException if parsing is not supported", "entropy": 0.3544921875, "is_bug_line": true, "sus_score": 0.3478327964999673, "per_token_entropy": [0.501953125, 0.01107025146484375, 1.1337890625, 0.025115966796875, 0.0013608932495117188, 0.024200439453125, 0.0001767873764038086, 1.0869140625, 0.446044921875, 0.82080078125, 3.5625, 0.0025119781494140625, 2.041015625, 0.0826416015625, 0.11895751953125, 0.0177459716796875, 0.344970703125, 0.2047119140625, 0.07720947265625, 0.40625, 0.57177734375, 1.4541015625, 0.65283203125, 0.07684326171875, 0.0007257461547851562, 0.2783203125, 4.9591064453125e-05, 0.0015544891357421875, 0.0064239501953125, 0.015838623046875, 0.01971435546875, 0.351318359375, 0.07110595703125, 0.0019283294677734375, 0.0008287429809570312, 1.3271484375, 2.1219253540039062e-05, 0.00032711029052734375, 0.027435302734375, 1.0869140625, 0.232421875, 0.00614166259765625, 1.091796875, 0.004505157470703125, 0.0004839897155761719, 0.00926971435546875, 0.11370849609375, 0.0006766319274902344, 0.040618896484375, 0.0849609375, 0.0010404586791992188, 0.0009622573852539062], "tokens": [275, 319, 333, 98, 48, 275, 319, 1348, 1411, 438, 13741, 372, 3088, 1204, 588, 2208, 28726, 26, 652, 30, 6666, 6767, 31842, 275, 319, 275, 319, 477, 753, 1344, 225, 322, 1344, 372, 3185, 275, 319, 477, 601, 8436, 2196, 2340, 275, 319, 477, 5117, 25820, 415, 11708, 438, 646, 5420]}
{"line_number": 710, "line_type": "original", "code": "        int newPos = parser.parseInto(bucket, text, position);", "entropy": 1.0126953125, "is_bug_line": false, "sus_score": 0.3478327964999673, "per_token_entropy": [4.73828125, 6.3671875, 0.43505859375, 0.007579803466796875, 0.00933837890625, 0.66845703125, 0.00628662109375, 0.0027751922607421875, 1.26171875, 0.00728607177734375, 0.195068359375, 0.0062713623046875, 0.032470703125, 0.006092071533203125, 2.37109375, 0.08673095703125], "tokens": [351, 629, 537, 2996, 280, 4118, 32, 2208, 13651, 26, 6452, 30, 1344, 30, 2747, 293]}
{"line_number": 710, "line_type": "generated", "code": "\n     * <p>\n     * This method is thread-safe and immutable.\n     *\n     * @param text  the text to parse, not null\n     * @return the parsed date, not null\n     * @throws IllegalArgumentException if the text to parse is", "entropy": 0.2235107421875, "is_bug_line": false, "sus_score": 0.3478327964999673, "per_token_entropy": [0.2464599609375, 0.016571044921875, 0.978515625, 0.0484619140625, 0.001399993896484375, 0.0170135498046875, 0.0001842975616455078, 1.177734375, 0.53173828125, 0.83984375, 2.9375, 0.0687255859375, 0.0005369186401367188, 0.0099334716796875, 0.381591796875, 0.619140625, 0.0165557861328125, 0.0015039443969726562, 0.1248779296875, 7.653236389160156e-05, 0.0014095306396484375, 0.0166015625, 0.03790283203125, 0.021881103515625, 0.212646484375, 0.04632568359375, 0.00152587890625, 0.0008683204650878906, 0.21826171875, 0.005565643310546875, 0.0017871856689453125, 0.003509521484375, 0.0001819133758544922, 0.00013434886932373047, 0.018341064453125, 0.2474365234375, 0.006561279296875, 0.95703125, 0.0562744140625, 0.2291259765625, 0.0008106231689453125, 0.0105133056640625, 0.0206451416015625, 0.00027251243591308594, 0.0253143310546875, 0.93505859375, 0.0012903213500976562, 0.05023193359375, 0.06243896484375, 0.412353515625, 0.0019779205322265625, 0.0019016265869140625], "tokens": [275, 319, 333, 98, 48, 275, 319, 1348, 1411, 438, 3664, 31, 4770, 461, 26055, 32, 275, 319, 275, 319, 477, 753, 1344, 225, 322, 1344, 372, 3185, 30, 646, 744, 275, 319, 477, 601, 322, 8436, 2340, 30, 646, 744, 275, 319, 477, 5117, 12137, 415, 322, 1344, 372, 3185, 438]}
{"line_number": 711, "line_type": "original", "code": "        instant.setMillis(bucket.computeMillis(false, text));", "entropy": 1.451171875, "is_bug_line": false, "sus_score": 0.3478327964999673, "per_token_entropy": [3.8515625, 11.5234375, 1.6474609375, 0.163818359375, 2.05859375, 0.01499176025390625, 1.7822265625, 0.0034084320068359375, 0.03485107421875, 0.0004620552062988281, 0.0218963623046875, 0.49755859375, 0.0714111328125, 0.049896240234375, 0.0467529296875], "tokens": [351, 23564, 32, 470, 10906, 26, 6452, 32, 7924, 10906, 26, 1870, 30, 1344, 876]}
{"line_number": 711, "line_type": "generated", "code": "\n     * <p>\n     * This method is useful for parsing a date in a format which is completely\n     * ignored by the formatter. For example, a date might be stored as a string\n     * such as '2011-12-", "entropy": 0.69189453125, "is_bug_line": false, "sus_score": 0.3478327964999673, "per_token_entropy": [0.2255859375, 0.01447296142578125, 1.205078125, 0.0517578125, 0.0014820098876953125, 0.022369384765625, 0.00017559528350830078, 1.302734375, 0.54541015625, 0.8125, 1.7001953125, 0.62646484375, 0.364501953125, 1.33984375, 0.53662109375, 1.8349609375, 0.440185546875, 1.6494140625, 0.810546875, 1.0546875, 1.9150390625, 0.241943359375, 7.021427154541016e-05, 1.1337890625, 1.2431640625, 0.089111328125, 1.6865234375, 0.53076171875, 1.984375, 0.046600341796875, 0.1873779296875, 0.88330078125, 1.5634765625, 0.6357421875, 0.140869140625, 0.6513671875, 0.8017578125, 2.1875, 0.72802734375, 0.11810302734375, 7.30752944946289e-05, 0.82080078125, 0.0014820098876953125, 0.57177734375, 0.52880859375, 0.11627197265625, 0.1710205078125, 1.19140625, 0.23193359375, 0.64404296875, 0.38671875, 0.0006279945373535156], "tokens": [275, 319, 333, 98, 48, 275, 319, 1348, 1411, 438, 6364, 436, 11708, 312, 2340, 328, 312, 2179, 1510, 438, 14252, 275, 319, 10302, 810, 322, 14971, 32, 2616, 2280, 30, 312, 2340, 4796, 526, 7107, 619, 312, 802, 275, 319, 3751, 619, 330, 36, 34, 35, 35, 31, 35, 36, 31]}
{"line_number": 712, "line_type": "original", "code": "        if (iOffsetParsed && bucket.getOffsetInteger() != null) {", "entropy": 1.1025390625, "is_bug_line": false, "sus_score": 0.3478327964999673, "per_token_entropy": [2.67578125, 2.501953125, 0.1314697265625, 1.0888671875, 3.111328125, 0.109130859375, 2.94921875, 1.2431640625, 0.00263214111328125, 0.0589599609375, 1.4169921875, 0.2427978515625, 0.005035400390625, 0.08807373046875, 3.0625, 0.042266845703125, 0.023895263671875], "tokens": [351, 415, 308, 91, 3457, 24217, 962, 8105, 32, 371, 3457, 3061, 346, 863, 744, 27, 301]}
{"line_number": 712, "line_type": "generated", "code": "\n     * @param text  the text to parse, not null\n     * @return parsed local date, not null\n     * @throws UnsupportedOperationException if parsing is not supported\n     * @throws IllegalArgumentException if the text to parse is invalid\n     */\n    public LocalDate parseLocalDate", "entropy": 0.1043701171875, "is_bug_line": false, "sus_score": 0.3478327964999673, "per_token_entropy": [0.70849609375, 0.0408935546875, 0.74365234375, 0.0265960693359375, 0.043426513671875, 0.033843994140625, 0.395263671875, 0.06842041015625, 0.0020656585693359375, 0.0014200210571289062, 0.389892578125, 0.0068359375, 0.0022182464599609375, 0.00359344482421875, 0.0001380443572998047, 0.00035572052001953125, 0.02838134765625, 1.1494140625, 0.268310546875, 0.00983428955078125, 0.14990234375, 0.287109375, 0.0011339187622070312, 0.01020050048828125, 0.017425537109375, 0.0008320808410644531, 0.0298004150390625, 0.282958984375, 0.001186370849609375, 0.0694580078125, 0.1439208984375, 0.0018091201782226562, 0.0026836395263671875, 0.050048828125, 0.0158233642578125, 0.0009965896606445312, 0.004638671875, 0.0100860595703125, 0.0004944801330566406, 0.0282135009765625, 0.044158935546875, 0.0711669921875, 0.0012359619140625, 0.0020160675048828125, 0.01050567626953125, 0.0169677734375, 0.0721435546875, 0.022125244140625, 0.0272674560546875, 0.12042236328125, 0.0009026527404785156, 0.00469207763671875], "tokens": [275, 319, 477, 753, 1344, 225, 322, 1344, 372, 3185, 30, 646, 744, 275, 319, 477, 601, 8436, 2196, 2340, 30, 646, 744, 275, 319, 477, 5117, 25820, 415, 11708, 438, 646, 5420, 275, 319, 477, 5117, 12137, 415, 322, 1344, 372, 3185, 438, 5535, 275, 569, 284, 562, 27490, 3185, 28726]}
{"line_number": 717, "line_type": "original", "code": "            chrono = chrono.withZone(bucket.getZone());", "entropy": 2.29296875, "is_bug_line": false, "sus_score": 0.3478327964999673, "per_token_entropy": [8.2734375, 9.5, 0.2357177734375, 1.2099609375, 0.0282135009765625, 0.01464080810546875, 0.75, 0.058319091796875, 9.421875, 0.01206207275390625, 0.0033092498779296875, 0.0017642974853515625, 0.283203125], "tokens": [1468, 45868, 280, 45868, 32, 1793, 6767, 26, 6452, 32, 371, 6767, 1035]}
{"line_number": 717, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Parses only the local time from the given text, returning a new LocalTime.\n     * <p>\n     * This will parse the text fully according to the formatter, using the UTC zone.\n     * Once parsed, only the", "entropy": 0.06927490234375, "is_bug_line": false, "sus_score": 0.3478327964999673, "per_token_entropy": [1.2158203125, 0.93798828125, 0.2193603515625, 0.2171630859375, 0.00936126708984375, 0.00010466575622558594, 0.07232666015625, 0.2462158203125, 0.00800323486328125, 0.1060791015625, 0.263916015625, 0.006961822509765625, 0.0004742145538330078, 0.0006680488586425781, 0.004558563232421875, 0.015655517578125, 0.0033702850341796875, 0.0102386474609375, 0.0198516845703125, 0.01276397705078125, 0.0005016326904296875, 0.0140228271484375, 0.0006084442138671875, 3.075599670410156e-05, 0.00958251953125, 0.0001245737075805664, 0.0001214742660522461, 0.002239227294921875, 3.9696693420410156e-05, 0.02294921875, 0.01427459716796875, 0.0029926300048828125, 0.0009131431579589844, 0.002635955810546875, 0.042266845703125, 0.0006227493286132812, 0.0003352165222167969, 0.0007262229919433594, 0.00305938720703125, 0.04595947265625, 0.0103607177734375, 0.01389312744140625, 0.027984619140625, 0.0032863616943359375, 0.00539398193359375, 0.00030112266540527344, 9.763240814208984e-05, 0.006183624267578125, 6.29425048828125e-05, 0.00019109249114990234, 0.0012502670288085938, 8.511543273925781e-05], "tokens": [284, 320, 446, 1022, 275, 319, 44280, 1755, 322, 2196, 1133, 645, 322, 2702, 1344, 30, 14116, 312, 537, 7089, 1043, 32, 275, 319, 333, 98, 48, 275, 319, 1348, 1098, 3185, 322, 1344, 12086, 9267, 372, 322, 14971, 30, 1471, 322, 17197, 10790, 32, 275, 319, 15952, 8436, 30, 1755, 322]}
{"line_number": 719, "line_type": "original", "code": "        instant.setChronology(chrono);", "entropy": 2.017578125, "is_bug_line": false, "sus_score": 0.3478327964999673, "per_token_entropy": [3.267578125, 9.203125, 1.1796875, 0.07861328125, 3.412109375, 0.0098876953125, 4.887580871582031e-05, 0.0036163330078125, 2.8046875, 0.2061767578125], "tokens": [351, 23564, 32, 470, 828, 2558, 10537, 26, 18317, 293]}
{"line_number": 719, "line_type": "generated", "code": "\n        DateTimeParser parser = requireParser();\n        DateTimeParserBucket bucket = new DateTimeParserBucket(0, iChrono, iLocale, iPivotYear, iDefaultYear);\n        int newPos = parser.parseInto(bucket, text, 0", "entropy": 0.10980224609375, "is_bug_line": false, "sus_score": 0.3478327964999673, "per_token_entropy": [0.25439453125, 1.04296875, 0.2724609375, 0.3046875, 0.00066375732421875, 0.035247802734375, 0.0015392303466796875, 0.01708984375, 0.5810546875, 1.1953125, 0.25732421875, 0.0005002021789550781, 0.0196380615234375, 0.001728057861328125, 0.016082763671875, 0.004413604736328125, 0.0006175041198730469, 0.0010404586791992188, 0.010986328125, 0.267578125, 0.208740234375, 0.7509765625, 0.0213470458984375, 0.02618408203125, 0.041107177734375, 0.014373779296875, 0.0013751983642578125, 0.0257568359375, 0.0121002197265625, 0.0020503997802734375, 0.00011718273162841797, 0.012451171875, 0.003940582275390625, 0.0005984306335449219, 2.574920654296875e-05, 0.006122589111328125, 0.03125, 0.12060546875, 0.08203125, 0.0008959770202636719, 0.00016486644744873047, 0.004215240478515625, 0.00010406970977783203, 0.0003650188446044922, 0.053680419921875, 0.0006551742553710938, 0.0008058547973632812, 2.3603439331054688e-05, 0.001155853271484375, 0.0010986328125, 0.0009984970092773438, 5.5789947509765625e-05], "tokens": [291, 6666, 2825, 4118, 280, 1205, 2825, 473, 291, 6666, 2825, 9001, 8105, 280, 537, 6666, 2825, 9001, 26, 34, 30, 595, 828, 25788, 30, 595, 9467, 30, 595, 28267, 6617, 30, 595, 2044, 6617, 293, 291, 629, 537, 2996, 280, 4118, 32, 2208, 13651, 26, 6452, 30, 1344, 30, 225, 34]}
{"line_number": 720, "line_type": "original", "code": "        if (iZone != null) {", "entropy": 1.123046875, "is_bug_line": false, "sus_score": 0.3478327964999673, "per_token_entropy": [5.3359375, 2.408203125, 0.054229736328125, 0.53076171875, 0.9501953125, 0.357177734375, 0.267333984375, 0.12249755859375, 0.079833984375], "tokens": [351, 415, 308, 91, 6767, 863, 744, 27, 301]}
{"line_number": 720, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Parses only the local time from the given text, returning a new LocalTime.\n     * <p>\n     * This will parse the text fully according to the formatter, using the UTC zone.\n     * Once parsed, only the", "entropy": 0.020751953125, "is_bug_line": false, "sus_score": 0.3478327964999673, "per_token_entropy": [0.2744140625, 0.0673828125, 0.1409912109375, 0.0186614990234375, 0.005741119384765625, 7.236003875732422e-05, 0.0160980224609375, 0.11865234375, 0.0033779144287109375, 0.0352783203125, 0.177734375, 0.00609588623046875, 0.0003657341003417969, 0.0004546642303466797, 0.0038547515869140625, 0.010528564453125, 0.003147125244140625, 0.004016876220703125, 0.01113128662109375, 0.006656646728515625, 0.00039196014404296875, 0.0145111083984375, 0.0002720355987548828, 1.5854835510253906e-05, 0.006252288818359375, 6.794929504394531e-05, 6.401538848876953e-05, 0.0004897117614746094, 3.6835670471191406e-05, 0.01436614990234375, 0.00849151611328125, 0.0022907257080078125, 0.0007042884826660156, 0.0024929046630859375, 0.0281524658203125, 0.0003504753112792969, 0.00025463104248046875, 0.0005235671997070312, 0.0024509429931640625, 0.037933349609375, 0.006755828857421875, 0.01132965087890625, 0.023162841796875, 0.0022411346435546875, 0.0040740966796875, 0.00024068355560302734, 5.424022674560547e-05, 0.005207061767578125, 4.9948692321777344e-05, 0.00012934207916259766, 0.0010614395141601562, 5.3048133850097656e-05], "tokens": [284, 320, 446, 1022, 275, 319, 44280, 1755, 322, 2196, 1133, 645, 322, 2702, 1344, 30, 14116, 312, 537, 7089, 1043, 32, 275, 319, 333, 98, 48, 275, 319, 1348, 1098, 3185, 322, 1344, 12086, 9267, 372, 322, 14971, 30, 1471, 322, 17197, 10790, 32, 275, 319, 15952, 8436, 30, 1755, 322]}
{"line_number": 723, "line_type": "original", "code": "        return newPos;", "entropy": 4.58203125, "is_bug_line": false, "sus_score": 0.3478327964999673, "per_token_entropy": [5.1328125, 3.02734375, 2.990234375, 11.5078125, 0.2454833984375], "tokens": [351, 442, 537, 2996, 45]}
{"line_number": 723, "line_type": "generated", "code": "\n    /**\n     * Parses only the local time from the given text, returning a new LocalTime.\n     * <p>\n     * This will parse the text fully according to the formatter, using the UTC zone.\n     * Once parsed, only the local time", "entropy": 0.05560302734375, "is_bug_line": false, "sus_score": 0.3478327964999673, "per_token_entropy": [1.091796875, 0.6728515625, 0.0582275390625, 0.00012254714965820312, 0.042572021484375, 0.1959228515625, 0.0071563720703125, 0.07830810546875, 0.458251953125, 0.0081329345703125, 0.0005340576171875, 0.00044798851013183594, 0.00469970703125, 0.0133209228515625, 0.003875732421875, 0.005031585693359375, 0.01322174072265625, 0.01544189453125, 0.0005755424499511719, 0.01535797119140625, 0.005664825439453125, 9.322166442871094e-05, 0.008331298828125, 0.00028514862060546875, 0.0001304149627685547, 0.002079010009765625, 5.626678466796875e-05, 0.01422119140625, 0.00899505615234375, 0.00237274169921875, 0.0007643699645996094, 0.002483367919921875, 0.027557373046875, 0.0004169940948486328, 0.00023639202117919922, 0.00057220458984375, 0.0030422210693359375, 0.037109375, 0.0065155029296875, 0.01258087158203125, 0.030670166015625, 0.0027027130126953125, 0.00499725341796875, 0.0005064010620117188, 9.417533874511719e-05, 0.005657196044921875, 6.29425048828125e-05, 0.00012922286987304688, 0.001033782958984375, 5.5789947509765625e-05, 0.0015354156494140625, 0.0244140625], "tokens": [284, 1022, 275, 319, 44280, 1755, 322, 2196, 1133, 645, 322, 2702, 1344, 30, 14116, 312, 537, 7089, 1043, 32, 275, 319, 333, 98, 48, 275, 319, 1348, 1098, 3185, 322, 1344, 12086, 9267, 372, 322, 14971, 30, 1471, 322, 17197, 10790, 32, 275, 319, 15952, 8436, 30, 1755, 322, 2196, 1133]}
{"line_number": 188, "line_type": "original", "code": "        if (locale == getLocale() || (locale != null && locale.equals(getLocale()))) {", "entropy": 1.1796875, "is_bug_line": false, "sus_score": 0.24077170617153842, "per_token_entropy": [5.1796875, 2.966796875, 0.07354736328125, 6.41796875, 0.288818359375, 4.44140625, 0.0196685791015625, 0.87548828125, 1.93359375, 1.6533203125, 0.20361328125, 0.051788330078125, 0.0015497207641601562, 0.040679931640625, 0.367431640625, 0.01557159423828125, 0.1290283203125, 0.0004949569702148438, 0.00930023193359375, 0.0711669921875, 0.04132080078125], "tokens": [351, 415, 308, 6921, 610, 622, 9467, 346, 1276, 308, 6921, 863, 744, 962, 11259, 32, 3574, 26, 46167, 28214, 301]}
{"line_number": 188, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.24077170617153842, "per_token_entropy": [], "tokens": []}
{"line_number": 191, "line_type": "original", "code": "        return new DateTimeFormatter(iPrinter, iParser, locale,", "entropy": 1.3486328125, "is_bug_line": false, "sus_score": 0.24077170617153842, "per_token_entropy": [2.8984375, 10.1640625, 2.634765625, 0.016876220703125, 0.0007300376892089844, 0.0250244140625, 0.10284423828125, 0.01152801513671875, 0.0021648406982421875, 0.050567626953125, 0.0035247802734375, 0.0032501220703125, 2.947265625, 0.021759033203125], "tokens": [351, 442, 537, 6666, 8736, 26, 91, 14384, 30, 595, 2825, 30, 11259, 30]}
{"line_number": 191, "line_type": "generated", "code": "\n     * printing and parsing.\n     * <p>\n     * The chronology is set to be in the UTC time zone, as that is the\n     * most universal. If the parsed string represents a local time, the\n     * parsed datetime will be", "entropy": 0.61669921875, "is_bug_line": false, "sus_score": 0.24077170617153842, "per_token_entropy": [0.6884765625, 0.007442474365234375, 1.2333984375, 0.1541748046875, 0.002696990966796875, 0.045196533203125, 0.22119140625, 0.00030493736267089844, 0.1190185546875, 0.0009622573852539062, 0.00024962425231933594, 0.0025539398193359375, 0.0001462697982788086, 1.8994140625, 0.359619140625, 0.0009751319885253906, 0.0030517578125, 0.91943359375, 0.2685546875, 1.0380859375, 0.2408447265625, 0.95166015625, 0.87255859375, 0.52783203125, 0.142333984375, 0.238037109375, 2.01953125, 1.650390625, 1.1298828125, 0.06280517578125, 1.0732421875, 0.65869140625, 0.00012135505676269531, 2.16796875, 1.7548828125, 1.943359375, 1.6669921875, 0.7001953125, 1.609375, 0.437255859375, 0.63916015625, 0.032257080078125, 0.28271484375, 0.5732421875, 0.6142578125, 1.6376953125, 0.09564208984375, 1.3470649719238281e-05, 1.2421875, 0.042510986328125, 0.0221405029296875, 0.0701904296875], "tokens": [275, 319, 23582, 461, 11708, 32, 275, 319, 333, 98, 48, 275, 319, 886, 663, 2558, 10537, 438, 739, 372, 526, 328, 322, 17197, 1133, 10790, 30, 619, 688, 438, 322, 275, 319, 4630, 36596, 32, 1670, 322, 8436, 802, 10666, 312, 2196, 1133, 30, 322, 275, 319, 8436, 7138, 1098, 526]}
{"line_number": 202, "line_type": "original", "code": "        return iLocale;", "entropy": 3.84375, "is_bug_line": false, "sus_score": 0.24077170617153842, "per_token_entropy": [6.01953125, 1.2783203125, 5.08203125, 6.30078125, 0.54248046875], "tokens": [351, 442, 595, 9467, 45]}
{"line_number": 202, "line_type": "generated", "code": "\n     * @return the new formatter\n     */\n    public DateTimeFormatter withChronology(Chronology chrono) {\n        if (chrono == getChronology() || (chrono!= null && chrono.equals(getChronology()))) {\n            return", "entropy": 0.0880126953125, "is_bug_line": false, "sus_score": 0.24077170617153842, "per_token_entropy": [0.182861328125, 0.383056640625, 1.056640625, 0.45654296875, 0.00739288330078125, 0.002803802490234375, 0.00453948974609375, 0.07110595703125, 0.228759765625, 0.01922607421875, 0.015045166015625, 0.0034313201904296875, 3.3020973205566406e-05, 0.0007004737854003906, 0.0008358955383300781, 0.01558685302734375, 0.00014734268188476562, 0.031585693359375, 0.00762176513671875, 0.01629638671875, 1.2874603271484375e-05, 0.04522705078125, 0.0010280609130859375, 0.0007061958312988281, 0.053680419921875, 0.10174560546875, 0.047119140625, 0.186767578125, 0.009796142578125, 0.97705078125, 0.00745391845703125, 0.014007568359375, 0.00031256675720214844, 0.343505859375, 0.0260772705078125, 0.1728515625, 0.0252532958984375, 0.007083892822265625, 0.00038313865661621094, 0.003940582275390625, 0.00937652587890625, 0.007472991943359375, 0.002941131591796875, 0.0002651214599609375, 0.0082550048828125, 0.000354766845703125, 5.960464477539062e-07, 4.0531158447265625e-06, 0.0101776123046875, 0.0007281303405761719, 0.00902557373046875, 0.00153350830078125], "tokens": [275, 319, 477, 601, 322, 537, 14971, 275, 569, 284, 562, 6666, 8736, 623, 828, 2558, 10537, 26, 828, 2558, 10537, 45868, 27, 301, 291, 415, 308, 18317, 610, 622, 828, 2558, 10537, 346, 1276, 308, 18317, 863, 744, 962, 45868, 32, 3574, 26, 371, 828, 2558, 10537, 28214, 301, 324, 442]}
{"line_number": 154, "line_type": "original", "code": "        return iPrinter;", "entropy": 2.625, "is_bug_line": false, "sus_score": 0.2401922307076307, "per_token_entropy": [6.87109375, 1.3310546875, 1.0283203125, 1.2158203125, 2.6796875], "tokens": [351, 442, 595, 14384, 45]}
{"line_number": 154, "line_type": "generated", "code": "\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns a new formatter with a different chronology that will be used\n     * for printing and parsing.\n     * <p>\n     * A DateTimeFormatter is immutable, so a new instance is returned,\n     * and the", "entropy": 0.049835205078125, "is_bug_line": false, "sus_score": 0.2401922307076307, "per_token_entropy": [0.406005859375, 0.344970703125, 0.0026416778564453125, 0.0088348388671875, 0.01210784912109375, 0.0019359588623046875, 5.4955482482910156e-05, 0.08355712890625, 0.0029010772705078125, 0.0151824951171875, 0.0036449432373046875, 0.12451171875, 0.12249755859375, 0.040740966796875, 0.7900390625, 0.0004248619079589844, 0.00185394287109375, 0.13427734375, 0.008819580078125, 0.00922393798828125, 0.0772705078125, 0.01097869873046875, 2.6702880859375e-05, 0.0198211669921875, 0.048370361328125, 0.0211029052734375, 0.0014581680297851562, 0.01142120361328125, 0.12335205078125, 0.00012969970703125, 0.0269622802734375, 0.00019562244415283203, 8.058547973632812e-05, 0.0003986358642578125, 9.465217590332031e-05, 0.117431640625, 0.0029506683349609375, 0.00015556812286376953, 0.00044655799865722656, 0.00028324127197265625, 0.0006060600280761719, 0.0001615285873413086, 0.000270843505859375, 1.4781951904296875e-05, 0.00015079975128173828, 0.0005598068237304688, 0.00035119056701660156, 0.0032672882080078125, 0.00597381591796875, 5.7220458984375e-06, 0.0023174285888671875, 0.0001367330551147461], "tokens": [446, 434, 42510, 284, 1022, 275, 319, 3759, 312, 537, 14971, 623, 312, 3449, 663, 2558, 10537, 688, 1098, 526, 1654, 275, 319, 436, 23582, 461, 11708, 32, 275, 319, 333, 98, 48, 275, 319, 399, 6666, 8736, 438, 26055, 30, 1259, 312, 537, 1980, 438, 4717, 30, 275, 319, 461, 322]}
{"line_number": 108, "line_type": "original", "code": "        super();", "entropy": 4.76171875, "is_bug_line": false, "sus_score": 0.2285758376999785, "per_token_entropy": [4.453125, 8.6484375, 1.189453125], "tokens": [351, 2599, 473]}
{"line_number": 108, "line_type": "generated", "code": "\n     * Is this formatter capable of parsing.\n     * \n     * @return true if this is a parser\n     */\n    public boolean isParser() {\n        return (iParser!= null);\n    }\n\n    /**\n     * Gets the internal parser object that performs the", "entropy": 0.042144775390625, "is_bug_line": false, "sus_score": 0.2285758376999785, "per_token_entropy": [0.58837890625, 0.07666015625, 0.87060546875, 0.0036945343017578125, 0.008514404296875, 0.01171112060546875, 0.0003833770751953125, 0.051361083984375, 0.0037555694580078125, 0.03173828125, 0.0014925003051757812, 0.03173828125, 0.00017583370208740234, 0.0006604194641113281, 0.0015592575073242188, 0.0012140274047851562, 0.0036373138427734375, 0.007694244384765625, 0.0189208984375, 0.0020961761474609375, 0.09259033203125, 0.00836944580078125, 0.007472991943359375, 0.0158843994140625, 0.002742767333984375, 0.000591278076171875, 1.537799835205078e-05, 6.508827209472656e-05, 0.0006070137023925781, 0.00035500526428222656, 0.019989013671875, 0.0006704330444335938, 0.016387939453125, 0.0005717277526855469, 0.0027866363525390625, 0.0001837015151977539, 0.00341033935546875, 0.001338958740234375, 0.00531005859375, 0.00015270709991455078, 0.04443359375, 0.0023651123046875, 0.1617431640625, 4.3392181396484375e-05, 0.0280609130859375, 0.00028395652770996094, 0.00409698486328125, 0.0428466796875, 0.00614166259765625, 0.002948760986328125, 0.0018558502197265625, 0.000705718994140625], "tokens": [275, 319, 3611, 458, 14971, 31582, 432, 11708, 32, 275, 319, 5384, 319, 477, 601, 861, 415, 458, 438, 312, 4118, 275, 569, 284, 562, 1905, 438, 2825, 346, 301, 291, 442, 308, 91, 2825, 863, 744, 293, 284, 320, 446, 1022, 275, 319, 7124, 322, 3568, 4118, 1300, 688, 23584, 322]}
{"line_number": 109, "line_type": "original", "code": "        iPrinter = printer;", "entropy": 1.9892578125, "is_bug_line": false, "sus_score": 0.2285758376999785, "per_token_entropy": [3.53125, 5.2421875, 2.48828125, 0.50927734375, 0.097900390625, 0.071533203125], "tokens": [351, 595, 14384, 280, 23307, 45]}
{"line_number": 109, "line_type": "generated", "code": "\n     * \n     * @return true if this is a parser\n     */\n    public boolean isParser() {\n        return (iParser!= null);\n    }\n\n    /**\n     * Gets the internal parser object that performs the real parsing work.\n     * \n     * @", "entropy": 0.021697998046875, "is_bug_line": false, "sus_score": 0.2285758376999785, "per_token_entropy": [0.15576171875, 0.020782470703125, 0.11419677734375, 0.00034546852111816406, 0.002964019775390625, 0.008209228515625, 0.0021915435791015625, 0.00455474853515625, 0.0116424560546875, 0.02398681640625, 0.0028533935546875, 0.1551513671875, 0.0200042724609375, 0.01116180419921875, 0.0242156982421875, 0.004657745361328125, 0.0010528564453125, 3.361701965332031e-05, 8.64267349243164e-05, 0.0007691383361816406, 0.00222015380859375, 0.032073974609375, 0.0018901824951171875, 0.0270233154296875, 0.0011320114135742188, 0.00470733642578125, 0.00040340423583984375, 0.0036067962646484375, 0.004180908203125, 0.029083251953125, 0.000118255615234375, 0.06866455078125, 0.00597381591796875, 0.0037479400634765625, 7.534027099609375e-05, 0.0290374755859375, 0.0003638267517089844, 0.00440216064453125, 0.040130615234375, 0.0073394775390625, 0.00395965576171875, 0.0020198822021484375, 0.0007929801940917969, 0.00559234619140625, 0.0267486572265625, 0.0030002593994140625, 0.0016040802001953125, 0.2210693359375, 0.0002779960632324219, 0.0310821533203125, 0.0001252889633178711, 0.0005841255187988281], "tokens": [275, 319, 5384, 319, 477, 601, 861, 415, 458, 438, 312, 4118, 275, 569, 284, 562, 1905, 438, 2825, 346, 301, 291, 442, 308, 91, 2825, 863, 744, 293, 284, 320, 446, 1022, 275, 319, 7124, 322, 3568, 4118, 1300, 688, 23584, 322, 4011, 11708, 1389, 32, 275, 319, 5384, 319, 477]}
{"line_number": 110, "line_type": "original", "code": "        iParser = parser;", "entropy": 2.154296875, "is_bug_line": false, "sus_score": 0.2285758376999785, "per_token_entropy": [5.01953125, 5.28125, 0.64697265625, 1.056640625, 0.728515625, 0.190185546875], "tokens": [351, 595, 2825, 280, 4118, 45]}
{"line_number": 110, "line_type": "generated", "code": "\n     * \n     * @return true if this is a parser\n     */\n    public boolean isParser() {\n        return (iParser!= null);\n    }\n\n    /**\n     * Gets the internal parser object that performs the real parsing work.\n     * \n     * @", "entropy": 0.03533935546875, "is_bug_line": false, "sus_score": 0.2285758376999785, "per_token_entropy": [0.0823974609375, 0.0450439453125, 1.0205078125, 0.0010442733764648438, 0.00986480712890625, 0.01177978515625, 0.0022869110107421875, 0.004253387451171875, 0.01119232177734375, 0.0246429443359375, 0.002899169921875, 0.16650390625, 0.014984130859375, 0.01206207275390625, 0.030792236328125, 0.00406646728515625, 0.0008797645568847656, 2.6106834411621094e-05, 6.842613220214844e-05, 0.0006513595581054688, 0.0013713836669921875, 0.04595947265625, 0.0017480850219726562, 0.0232391357421875, 0.0009918212890625, 0.0033206939697265625, 0.0003428459167480469, 0.004150390625, 0.003406524658203125, 0.03125, 0.00012099742889404297, 0.068359375, 0.00605010986328125, 0.001987457275390625, 3.147125244140625e-05, 0.0258941650390625, 0.0003037452697753906, 0.00394439697265625, 0.04058837890625, 0.007171630859375, 0.00357818603515625, 0.0022735595703125, 0.0008378028869628906, 0.00576019287109375, 0.0296478271484375, 0.0025768280029296875, 0.0013637542724609375, 0.013702392578125, 0.00021779537200927734, 0.060638427734375, 7.891654968261719e-05, 0.0010395050048828125], "tokens": [275, 319, 5384, 319, 477, 601, 861, 415, 458, 438, 312, 4118, 275, 569, 284, 562, 1905, 438, 2825, 346, 301, 291, 442, 308, 91, 2825, 863, 744, 293, 284, 320, 446, 1022, 275, 319, 7124, 322, 3568, 4118, 1300, 688, 23584, 322, 4011, 11708, 1389, 32, 275, 319, 5384, 319, 477]}
