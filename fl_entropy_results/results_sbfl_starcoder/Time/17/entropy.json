{"line_number": 751, "line_type": "original", "code": "        String name = cNameProvider.getShortName(locale, iID, nameKey);", "entropy": 0.9365234375, "is_bug_line": false, "sus_score": 0.7888106377466154, "per_token_entropy": [5.0546875, 6.19921875, 1.3828125, 0.46826171875, 0.50927734375, 0.032073974609375, 0.01485443115234375, 0.003673553466796875, 2.9921875, 0.54052734375, 0.023712158203125, 0.15087890625, 0.003559112548828125, 0.1396484375, 0.0210418701171875, 0.04693603515625, 0.206787109375, 0.0016002655029296875, 0.01049041748046875], "tokens": [351, 892, 636, 280, 281, 558, 2570, 32, 371, 46691, 26, 6921, 30, 595, 779, 30, 636, 953, 293]}
{"line_number": 751, "line_type": "generated", "code": "\n     * @param instant  milliseconds from 1970-01-01T00:00:00Z to get the offset for\n     * @return offset from UTC in milliseconds\n     */\n    public abstract int getOffset(", "entropy": 0.11529541015625, "is_bug_line": false, "sus_score": 0.7888106377466154, "per_token_entropy": [0.287841796875, 0.1368408203125, 1.5263671875, 0.196044921875, 0.0701904296875, 0.03179931640625, 0.262451171875, 0.00733184814453125, 0.0025310516357421875, 0.00016200542449951172, 0.0004093647003173828, 0.0002142190933227539, 0.003131866455078125, 0.00024175643920898438, 6.365776062011719e-05, 7.510185241699219e-06, 2.002716064453125e-05, 2.1576881408691406e-05, 2.968311309814453e-05, 0.000820159912109375, 9.298324584960938e-05, 4.506111145019531e-05, 7.104873657226562e-05, 2.1457672119140625e-06, 2.8014183044433594e-05, 0.00041174888610839844, 1.4662742614746094e-05, 0.00022721290588378906, 0.00946044921875, 0.216552734375, 0.1636962890625, 0.178955078125, 0.051300048828125, 0.0208892822265625, 0.02142333984375, 0.01177978515625, 0.0008902549743652344, 0.035186767578125, 0.82861328125, 0.26123046875, 0.00799560546875, 0.73388671875, 0.04888916015625, 0.250732421875, 0.0733642578125, 0.0164794921875, 0.09368896484375, 0.37353515625, 0.05499267578125, 0.00020694732666015625, 0.0022640228271484375, 0.01184844970703125], "tokens": [275, 319, 477, 753, 23564, 225, 18574, 645, 225, 35, 43, 41, 34, 31, 34, 35, 31, 34, 35, 70, 34, 34, 44, 34, 34, 44, 34, 34, 76, 372, 622, 322, 3401, 436, 275, 319, 477, 601, 3401, 645, 17197, 328, 18574, 275, 569, 284, 562, 5547, 629, 622, 3457, 26]}
{"line_number": 752, "line_type": "original", "code": "        if (name != null) {", "entropy": 1.2646484375, "is_bug_line": false, "sus_score": 0.7888106377466154, "per_token_entropy": [2.611328125, 2.5078125, 0.08648681640625, 3.5546875, 1.2822265625, 0.0032215118408203125, 0.038818359375, 0.035919189453125], "tokens": [351, 415, 308, 426, 863, 744, 27, 301]}
{"line_number": 752, "line_type": "generated", "code": "\n     */\n    public abstract int getOffset(long instant);\n\n    /**\n     * Gets the millisecond offset to add to UTC to get standard time.\n     * \n     * @param instant  milliseconds from 1970-01-01T", "entropy": 0.130126953125, "is_bug_line": false, "sus_score": 0.7888106377466154, "per_token_entropy": [0.9052734375, 0.75927734375, 0.035430908203125, 0.2391357421875, 0.379638671875, 0.0291748046875, 0.0002532005310058594, 0.00360870361328125, 0.0132904052734375, 0.0083770751953125, 0.0014324188232421875, 0.0022754669189453125, 0.1790771484375, 0.0294189453125, 0.0110321044921875, 0.00036144256591796875, 0.4931640625, 0.09283447265625, 1.474609375, 0.0006151199340820312, 0.0167999267578125, 0.09686279296875, 0.012542724609375, 0.0269927978515625, 0.43408203125, 0.0159912109375, 0.01255035400390625, 0.8505859375, 0.008331298828125, 0.1502685546875, 0.1788330078125, 0.024383544921875, 0.2315673828125, 0.00012314319610595703, 0.0030307769775390625, 0.0243988037109375, 0.0031757354736328125, 0.0017948150634765625, 0.01323699951171875, 0.0003483295440673828, 0.0005040168762207031, 3.802776336669922e-05, 1.1801719665527344e-05, 0.0004603862762451172, 9.5367431640625e-06, 4.5180320739746094e-05, 7.224082946777344e-05, 3.910064697265625e-05, 1.823902130126953e-05, 3.898143768310547e-05, 1.4662742614746094e-05, 0.0002753734588623047], "tokens": [275, 569, 284, 562, 5547, 629, 622, 3457, 26, 3222, 23564, 293, 446, 1022, 275, 319, 7124, 322, 37003, 3090, 3401, 372, 1015, 372, 17197, 372, 622, 6216, 1133, 32, 275, 319, 5384, 319, 477, 753, 23564, 225, 18574, 645, 225, 35, 43, 41, 34, 31, 34, 35, 31, 34, 35, 70]}
{"line_number": 755, "line_type": "original", "code": "        return printOffset(getOffset(instant));", "entropy": 1.162109375, "is_bug_line": false, "sus_score": 0.7888106377466154, "per_token_entropy": [6.71875, 0.787109375, 3.58203125, 0.006458282470703125, 0.056732177734375, 0.2139892578125, 0.05145263671875, 0.03997802734375, 0.01317596435546875, 0.156982421875], "tokens": [351, 442, 1459, 3457, 26, 371, 3457, 26, 30241, 876]}
{"line_number": 755, "line_type": "generated", "code": "\n\n    /**\n     * Gets the offset from UTC at the specified instant to UTC at the\n     * specified local time.\n     * \n     * @param localInstant  the instant, which is in the local time zone\n     * @param local  the local time zone", "entropy": 0.394775390625, "is_bug_line": false, "sus_score": 0.7888106377466154, "per_token_entropy": [0.72216796875, 0.128173828125, 0.006317138671875, 9.334087371826172e-05, 0.61962890625, 0.1058349609375, 1.87890625, 1.0576171875, 0.15380859375, 0.82177734375, 0.0161895751953125, 0.125732421875, 0.509765625, 1.650390625, 1.0703125, 0.6240234375, 0.334716796875, 0.99365234375, 4.3511390686035156e-05, 0.5341796875, 0.32666015625, 0.381103515625, 0.10302734375, 0.364990234375, 0.00392913818359375, 0.295166015625, 4.780292510986328e-05, 0.00319671630859375, 0.0019464492797851562, 0.382080078125, 0.1287841796875, 0.062347412109375, 0.86279296875, 1.556640625, 1.2744140625, 0.317138671875, 0.521484375, 0.51025390625, 0.1939697265625, 0.164306640625, 0.1197509765625, 0.044769287109375, 0.2279052734375, 0.001819610595703125, 0.0012922286987304688, 0.0237274169921875, 0.478271484375, 0.0479736328125, 0.1978759765625, 0.07861328125, 0.366455078125, 0.1400146484375], "tokens": [446, 1022, 275, 319, 7124, 322, 3401, 645, 17197, 821, 322, 3191, 23564, 372, 17197, 821, 322, 275, 319, 3191, 2196, 1133, 32, 275, 319, 5384, 319, 477, 753, 2196, 22183, 225, 322, 23564, 30, 1510, 438, 328, 322, 2196, 1133, 10790, 275, 319, 477, 753, 2196, 225, 322, 2196, 1133, 10790]}
{"line_number": 744, "line_type": "original", "code": "        if (locale == null) {", "entropy": 1.5576171875, "is_bug_line": false, "sus_score": 0.7637626158259734, "per_token_entropy": [5.7890625, 3.490234375, 0.034576416015625, 2.876953125, 0.2403564453125, 0.011260986328125, 0.006664276123046875, 0.01129913330078125], "tokens": [351, 415, 308, 6921, 610, 744, 27, 301]}
{"line_number": 744, "line_type": "generated", "code": "\n        }\n        return printOffset(getOffset(instant));\n    }\n\n    /**\n     * Gets the standard offset of this time zone from Greenwich/UTC in\n     * milliseconds.\n     * \n     * @param instant  milliseconds from 1970-", "entropy": 0.257568359375, "is_bug_line": false, "sus_score": 0.7637626158259734, "per_token_entropy": [0.306396484375, 0.269775390625, 0.12335205078125, 0.361572265625, 0.54736328125, 0.0020313262939453125, 0.00252532958984375, 0.006252288818359375, 0.0013370513916015625, 0.000823974609375, 0.00231170654296875, 0.045013427734375, 0.06982421875, 0.00084686279296875, 0.1395263671875, 0.1580810546875, 0.006786346435546875, 0.0001443624496459961, 0.358154296875, 0.09271240234375, 1.9619140625, 0.078125, 1.35546875, 0.039093017578125, 0.64501953125, 0.1339111328125, 0.79296875, 1.314453125, 0.0003275871276855469, 0.80419921875, 0.08587646484375, 1.4697265625, 1.0458984375, 2.1696090698242188e-05, 0.007049560546875, 0.040435791015625, 0.07916259765625, 0.0052642822265625, 0.279052734375, 6.902217864990234e-05, 0.00440216064453125, 0.306884765625, 0.1622314453125, 0.00786590576171875, 0.256591796875, 0.0051116943359375, 0.0009341239929199219, 0.00011479854583740234, 0.0002791881561279297, 9.644031524658203e-05, 0.00969696044921875, 0.00014102458953857422], "tokens": [291, 320, 291, 442, 1459, 3457, 26, 371, 3457, 26, 30241, 876, 284, 320, 446, 1022, 275, 319, 7124, 322, 6216, 3401, 432, 458, 1133, 10790, 645, 25567, 42946, 33, 15689, 328, 275, 319, 18574, 32, 275, 319, 5384, 319, 477, 753, 23564, 225, 18574, 645, 225, 35, 43, 41, 34, 31]}
{"line_number": 747, "line_type": "original", "code": "        String nameKey = getNameKey(instant);", "entropy": 1.0654296875, "is_bug_line": false, "sus_score": 0.7637626158259734, "per_token_entropy": [5.78515625, 3.396484375, 0.97412109375, 0.2440185546875, 0.09454345703125, 0.1527099609375, 0.0005731582641601562, 0.00345611572265625, 0.005706787109375, 0.003025054931640625], "tokens": [351, 892, 636, 953, 280, 16407, 953, 26, 30241, 293]}
{"line_number": 747, "line_type": "generated", "code": "\n\n    /**\n     * Gets the offset of this datetime zone from UTC at the specified instant.\n     * \n     * @param instant  milliseconds from 1970-01-01T00:00:00Z to get the", "entropy": 0.1407470703125, "is_bug_line": false, "sus_score": 0.7637626158259734, "per_token_entropy": [1.005859375, 0.2120361328125, 0.0100250244140625, 8.809566497802734e-05, 0.6044921875, 0.10400390625, 1.044921875, 1.09375, 0.036163330078125, 0.66162109375, 0.0018148422241210938, 0.01788330078125, 0.1378173828125, 0.09661865234375, 0.01255035400390625, 0.052032470703125, 0.8232421875, 0.333740234375, 0.00702667236328125, 0.0005335807800292969, 0.314697265625, 4.398822784423828e-05, 0.0032062530517578125, 0.00485992431640625, 0.046966552734375, 0.016998291015625, 0.2203369140625, 0.00315093994140625, 0.0010585784912109375, 4.124641418457031e-05, 0.00022137165069580078, 0.00011098384857177734, 0.003261566162109375, 0.00014150142669677734, 2.9921531677246094e-05, 5.4836273193359375e-06, 1.811981201171875e-05, 1.5974044799804688e-05, 3.8504600524902344e-05, 0.00035858154296875, 4.3272972106933594e-05, 4.9948692321777344e-05, 5.519390106201172e-05, 2.0265579223632812e-06, 1.4543533325195312e-05, 0.0010099411010742188, 1.7642974853515625e-05, 0.00028586387634277344, 0.0060882568359375, 0.2308349609375, 0.1683349609375, 0.04107666015625], "tokens": [446, 1022, 275, 319, 7124, 322, 3401, 432, 458, 7138, 10790, 645, 17197, 821, 322, 3191, 23564, 32, 275, 319, 5384, 319, 477, 753, 23564, 225, 18574, 645, 225, 35, 43, 41, 34, 31, 34, 35, 31, 34, 35, 70, 34, 34, 44, 34, 34, 44, 34, 34, 76, 372, 622, 322]}
{"line_number": 748, "line_type": "original", "code": "        if (nameKey == null) {", "entropy": 1.162109375, "is_bug_line": false, "sus_score": 0.7637626158259734, "per_token_entropy": [4.35546875, 2.662109375, 0.056884765625, 1.6435546875, 1.4189453125, 0.260498046875, 0.01554107666015625, 0.030487060546875, 0.017181396484375], "tokens": [351, 415, 308, 426, 953, 610, 744, 27, 301]}
{"line_number": 748, "line_type": "generated", "code": "\n    /**\n     * Returns the offset from UTC of this datetime zone at the specified\n     * instant.\n     * \n     * @param instant  milliseconds from 1970-01-01T00:00:00Z to", "entropy": 0.232177734375, "is_bug_line": false, "sus_score": 0.7637626158259734, "per_token_entropy": [1.134765625, 0.548828125, 0.03790283203125, 0.00021922588348388672, 1.6435546875, 1.091796875, 0.78125, 0.7998046875, 0.1802978515625, 1.42578125, 0.378662109375, 0.935546875, 0.0248870849609375, 0.71875, 0.0350341796875, 0.09576416015625, 0.1541748046875, 5.805492401123047e-05, 0.13916015625, 0.40625, 0.29248046875, 0.00839996337890625, 0.359130859375, 0.00012159347534179688, 0.00307464599609375, 0.010955810546875, 0.038909912109375, 0.02532958984375, 0.394775390625, 0.005603790283203125, 0.001972198486328125, 6.949901580810547e-05, 0.0002522468566894531, 0.0001233816146850586, 0.0034847259521484375, 0.000217437744140625, 4.076957702636719e-05, 5.841255187988281e-06, 3.8743019104003906e-05, 1.8596649169921875e-05, 4.088878631591797e-05, 0.0005178451538085938, 6.151199340820312e-05, 0.00011265277862548828, 5.924701690673828e-05, 2.0265579223632812e-06, 1.7523765563964844e-05, 0.0017843246459960938, 2.372264862060547e-05, 0.00040793418884277344, 0.007266998291015625, 0.38037109375], "tokens": [284, 1022, 275, 319, 3759, 322, 3401, 645, 17197, 432, 458, 7138, 10790, 821, 322, 3191, 275, 319, 23564, 32, 275, 319, 5384, 319, 477, 753, 23564, 225, 18574, 645, 225, 35, 43, 41, 34, 31, 34, 35, 31, 34, 35, 70, 34, 34, 44, 34, 34, 44, 34, 34, 76, 372]}
{"line_number": 631, "line_type": "original", "code": "        StringBuffer buf = new StringBuffer();", "entropy": 1.787109375, "is_bug_line": false, "sus_score": 0.5413319619607667, "per_token_entropy": [4.35546875, 7.05078125, 0.00624847412109375, 0.236572265625, 0.0036945343017578125, 0.0004496574401855469, 0.85791015625], "tokens": [351, 21933, 4845, 280, 537, 21933, 473]}
{"line_number": 631, "line_type": "generated", "code": "\n    private static final String[] cZoneIds = new String[] {\n        \"GMT\", \"UTC\", \"ECT\", \"EET\", \"ART\", \"EAT\", \"MET\", \"NET\", \"PLT\",\n        \"IST\", \"BST", "entropy": 0.244873046875, "is_bug_line": false, "sus_score": 0.5413319619607667, "per_token_entropy": [0.708984375, 0.4599609375, 0.6044921875, 0.318603515625, 1.4248046875, 0.3349609375, 0.2178955078125, 0.77587890625, 0.546875, 0.337890625, 0.88232421875, 0.0025424957275390625, 0.10211181640625, 0.0303192138671875, 0.84521484375, 0.201171875, 1.5322265625, 0.8984375, 0.59423828125, 0.206787109375, 0.0141143798828125, 0.10772705078125, 0.462890625, 0.0006756782531738281, 0.0011310577392578125, 0.00902557373046875, 0.002445220947265625, 0.0018777847290039062, 0.002742767333984375, 0.0007104873657226562, 6.16312026977539e-05, 0.021728515625, 0.008636474609375, 0.0057373046875, 0.0009417533874511719, 0.017059326171875, 0.01171875, 0.0001176595687866211, 0.0217742919921875, 0.0012798309326171875, 0.0005397796630859375, 0.2098388671875, 0.00368499755859375, 3.5762786865234375e-07, 0.001255035400390625, 0.79638671875, 0.0009341239929199219, 0.0008268356323242188, 0.0014123916625976562, 0.0008835792541503906, 0.0003688335418701172, 0.0005097389221191406], "tokens": [284, 945, 907, 1158, 892, 1178, 281, 6767, 5332, 280, 537, 892, 1178, 301, 291, 313, 31331, 392, 313, 15689, 392, 313, 4509, 392, 313, 55, 1218, 392, 313, 3004, 392, 313, 55, 722, 392, 313, 18320, 392, 313, 4773, 392, 313, 2743, 70, 392, 291, 313, 3906, 392, 313, 52, 635]}
{"line_number": 632, "line_type": "original", "code": "        if (offset >= 0) {", "entropy": 1.3359375, "is_bug_line": false, "sus_score": 0.5413319619607667, "per_token_entropy": [3.78515625, 2.1796875, 0.150634765625, 1.5068359375, 3.8125, 0.463134765625, 0.056427001953125, 0.054168701171875, 0.0181427001953125], "tokens": [351, 415, 308, 2881, 2377, 225, 34, 27, 301]}
{"line_number": 632, "line_type": "generated", "code": "\n    private final int iOffset;", "entropy": 0.304443359375, "is_bug_line": false, "sus_score": 0.5413319619607667, "per_token_entropy": [0.5498046875, 0.1339111328125, 0.439208984375, 0.60107421875, 0.00616455078125, 0.33935546875, 0.060943603515625], "tokens": [284, 945, 1158, 629, 595, 3457, 45]}
{"line_number": 639, "line_type": "original", "code": "        int hours = offset / DateTimeConstants.MILLIS_PER_HOUR;", "entropy": 0.734375, "is_bug_line": false, "sus_score": 0.5413319619607667, "per_token_entropy": [2.3828125, 6.86328125, 0.830078125, 0.1627197265625, 1.4677734375, 0.1070556640625, 0.62451171875, 0.0019016265869140625, 0.0002739429473876953, 0.002422332763671875, 2.2530555725097656e-05, 2.384185791015625e-07, 4.291534423828125e-06, 1.430511474609375e-06, 0.00016224384307861328, 0.0003757476806640625, 0.04327392578125], "tokens": [351, 629, 11632, 280, 3401, 517, 6666, 5229, 32, 63, 13142, 1296, 81, 3687, 81, 30540, 45]}
{"line_number": 639, "line_type": "generated", "code": "\n    public FixedDateTimeZone(String id) {\n        super(id, getOffset(id), false, 1);\n        iID = id;\n    }\n\n    /**\n     * Gets the standard offset for this time zone.\n     * \n     * @return", "entropy": 0.371337890625, "is_bug_line": false, "sus_score": 0.5413319619607667, "per_token_entropy": [0.65234375, 0.2744140625, 1.8974609375, 0.2261962890625, 0.0003330707550048828, 0.010711669921875, 0.0130615234375, 0.0014972686767578125, 0.02410888671875, 0.01495361328125, 0.07171630859375, 0.82763671875, 0.58935546875, 1.3662109375, 0.390869140625, 2.705078125, 0.90087890625, 0.202392578125, 0.0135955810546875, 0.26904296875, 0.427490234375, 0.040557861328125, 0.2091064453125, 0.2342529296875, 0.8818359375, 0.27880859375, 0.220947265625, 0.0016450881958007812, 0.0002009868621826172, 0.029449462890625, 0.0299835205078125, 0.0966796875, 0.0005145072937011719, 0.364501953125, 0.473388671875, 0.00910186767578125, 6.0677528381347656e-05, 0.69873046875, 0.0938720703125, 2.548828125, 0.5498046875, 0.2236328125, 0.44140625, 0.470458984375, 0.06439208984375, 0.09173583984375, 0.04736328125, 0.024383544921875, 0.1678466796875, 3.731250762939453e-05, 0.0014858245849609375, 0.132080078125], "tokens": [284, 562, 10123, 4852, 6767, 26, 652, 804, 27, 301, 291, 2599, 26, 314, 30, 622, 3457, 26, 314, 471, 901, 30, 225, 35, 293, 291, 595, 779, 280, 804, 45, 284, 320, 446, 1022, 275, 319, 7124, 322, 6216, 3401, 436, 458, 1133, 10790, 32, 275, 319, 5384, 319, 477, 601]}
{"line_number": 640, "line_type": "original", "code": "        FormatUtils.appendPaddedInteger(buf, hours, 2);", "entropy": 1.650390625, "is_bug_line": false, "sus_score": 0.5413319619607667, "per_token_entropy": [1.146484375, 8.6640625, 0.00024211406707763672, 0.0003540515899658203, 14.3828125, 0.1121826171875, 0.0007309913635253906, 0.15966796875, 0.0655517578125, 0.281982421875, 0.01103973388671875, 1.48828125, 0.0401611328125, 0.00826263427734375, 0.015045166015625, 0.0291900634765625], "tokens": [351, 10276, 2755, 32, 1689, 66, 11043, 3061, 26, 1954, 30, 11632, 30, 225, 36, 293]}
{"line_number": 640, "line_type": "generated", "code": "        super();\n        if (id == null) {\n            throw new IllegalArgumentException(\"The id must not be null\");\n        }\n        iID = id;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Gets the unique ID of the time zone.\n     * \n    ", "entropy": 0.243896484375, "is_bug_line": false, "sus_score": 0.5413319619607667, "per_token_entropy": [1.13671875, 0.947265625, 0.72314453125, 0.174072265625, 0.2137451171875, 0.007228851318359375, 0.0032024383544921875, 0.006031036376953125, 0.00027871131896972656, 0.01387786865234375, 0.001468658447265625, 0.027740478515625, 0.0076904296875, 0.0011529922485351562, 0.0060882568359375, 0.1219482421875, 0.4599609375, 0.2890625, 0.10650634765625, 0.0009598731994628906, 2.8014183044433594e-05, 0.0051422119140625, 0.00955963134765625, 0.0203704833984375, 0.00022351741790771484, 0.1846923828125, 0.0732421875, 0.0019779205322265625, 0.00030303001403808594, 0.00580596923828125, 0.07025146484375, 0.14892578125, 0.0008940696716308594, 0.203125, 1.5380859375, 1.763671875, 0.0310821533203125, 0.1214599609375, 0.0047454833984375, 3.612041473388672e-05, 0.33642578125, 0.12841796875, 0.9443359375, 0.74072265625, 0.244140625, 0.33349609375, 0.0159149169921875, 0.6474609375, 0.26904296875, 0.03521728515625, 0.0013074874877929688, 0.55322265625], "tokens": [351, 2599, 473, 291, 415, 308, 314, 610, 744, 27, 301, 324, 1422, 537, 12137, 440, 1318, 804, 2298, 646, 526, 744, 724, 291, 320, 291, 595, 779, 280, 804, 45, 284, 320, 446, 434, 42510, 284, 1022, 275, 319, 7124, 322, 5799, 2484, 432, 322, 1133, 10790, 32, 275, 319, 5384]}
{"line_number": 641, "line_type": "original", "code": "        offset -= hours * (int) DateTimeConstants.MILLIS_PER_HOUR;", "entropy": 1.7138671875, "is_bug_line": false, "sus_score": 0.5413319619607667, "per_token_entropy": [2.607421875, 12.171875, 6.1640625, 3.740234375, 0.044525146484375, 4.49609375, 2.76171875, 0.014434814453125, 0.356689453125, 0.006404876708984375, 0.0018053054809570312, 0.0290985107421875, 5.984306335449219e-05, 1.1920928955078125e-07, 3.0040740966796875e-05, 2.1338462829589844e-05, 9.620189666748047e-05, 0.0007777214050292969, 0.1734619140625], "tokens": [351, 3401, 5912, 11632, 319, 308, 410, 27, 6666, 5229, 32, 63, 13142, 1296, 81, 3687, 81, 30540, 45]}
{"line_number": 641, "line_type": "generated", "code": "\n            throw new IllegalArgumentException(\"ID must not be null\");\n        }\n        iID = id;\n    }\n\n    /**\n     * Gets the ID of the time zone.\n     * \n     * @return the time zone id\n     */\n    public String getID() {", "entropy": 0.2083740234375, "is_bug_line": false, "sus_score": 0.5413319619607667, "per_token_entropy": [0.8974609375, 0.26025390625, 0.0092926025390625, 0.036346435546875, 0.2049560546875, 1.8740234375, 0.1187744140625, 0.005268096923828125, 7.176399230957031e-05, 0.0169677734375, 0.051544189453125, 0.11895751953125, 0.00028967857360839844, 0.2042236328125, 0.10009765625, 0.001201629638671875, 0.00021135807037353516, 0.00542449951171875, 0.07086181640625, 0.091796875, 0.000392913818359375, 0.15673828125, 0.31982421875, 0.002292633056640625, 6.496906280517578e-05, 0.42333984375, 0.101806640625, 1.6767578125, 0.205322265625, 0.274169921875, 0.04547119140625, 0.428955078125, 0.1976318359375, 0.032867431640625, 0.004413604736328125, 0.2939453125, 3.933906555175781e-05, 0.0018262863159179688, 0.001194000244140625, 0.04296875, 0.576171875, 0.00687408447265625, 0.2802734375, 0.99658203125, 0.02056884765625, 0.006557464599609375, 0.034820556640625, 0.09893798828125, 0.53271484375, 2.467632293701172e-05, 0.00074005126953125, 0.00019311904907226562], "tokens": [324, 1422, 537, 12137, 440, 779, 2298, 646, 526, 744, 724, 291, 320, 291, 595, 779, 280, 804, 45, 284, 320, 446, 1022, 275, 319, 7124, 322, 2484, 432, 322, 1133, 10790, 32, 275, 319, 5384, 319, 477, 601, 322, 1133, 10790, 804, 275, 569, 284, 562, 892, 622, 779, 346, 301]}
{"line_number": 643, "line_type": "original", "code": "        int minutes = offset / DateTimeConstants.MILLIS_PER_MINUTE;", "entropy": 0.69189453125, "is_bug_line": false, "sus_score": 0.5413319619607667, "per_token_entropy": [1.71875, 3.3671875, 4.4140625, 0.09521484375, 1.45703125, 0.1949462890625, 0.403076171875, 0.005207061767578125, 0.00027441978454589844, 0.01354217529296875, 1.633167266845703e-05, 1.1920928955078125e-07, 7.3909759521484375e-06, 2.86102294921875e-06, 0.0001964569091796875, 0.01042938232421875, 0.08721923828125], "tokens": [351, 629, 10135, 280, 3401, 517, 6666, 5229, 32, 63, 13142, 1296, 81, 3687, 81, 47229, 45]}
{"line_number": 643, "line_type": "generated", "code": "\n        this.iID = id;\n    }\n\n    /**\n     * Gets the id of the time zone.\n     * \n     * @return the id, never null\n     */\n    public String getID() {\n        return iID;\n    }\n\n    /**\n    ", "entropy": 0.1905517578125, "is_bug_line": false, "sus_score": 0.5413319619607667, "per_token_entropy": [0.343994140625, 1.763671875, 0.60009765625, 0.0022563934326171875, 0.01126861572265625, 0.0009918212890625, 0.0311431884765625, 0.037109375, 0.14892578125, 0.0011110305786132812, 0.2205810546875, 0.301025390625, 0.0032100677490234375, 7.30752944946289e-05, 0.40869140625, 0.1224365234375, 1.345703125, 0.1390380859375, 0.4208984375, 0.042388916015625, 0.445556640625, 0.17431640625, 0.0292510986328125, 0.0046234130859375, 0.25927734375, 3.6597251892089844e-05, 0.0017223358154296875, 0.0010528564453125, 0.044677734375, 1.0400390625, 0.580078125, 0.25732421875, 0.01580810546875, 0.01012420654296875, 0.017608642578125, 0.0059356689453125, 0.040008544921875, 0.1239013671875, 0.4931640625, 5.638599395751953e-05, 0.0008401870727539062, 0.0004169940948486328, 0.017486572265625, 0.0010633468627929688, 0.0112457275390625, 8.225440979003906e-05, 0.0018548965454101562, 0.01241302490234375, 6.42538070678711e-05, 0.2476806640625, 0.123046875, 0.003795623779296875], "tokens": [291, 458, 32, 91, 779, 280, 804, 45, 284, 320, 446, 1022, 275, 319, 7124, 322, 804, 432, 322, 1133, 10790, 32, 275, 319, 5384, 319, 477, 601, 322, 804, 30, 7152, 744, 275, 569, 284, 562, 892, 622, 779, 346, 301, 291, 442, 595, 779, 45, 284, 320, 446, 1022, 275]}
{"line_number": 644, "line_type": "original", "code": "        buf.append(':');", "entropy": 3.103515625, "is_bug_line": false, "sus_score": 0.5413319619607667, "per_token_entropy": [2.162109375, 11.09375, 0.349365234375, 0.098876953125, 4.78515625, 0.13330078125], "tokens": [351, 4845, 32, 1689, 16487, 895]}
{"line_number": 644, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Gets the id of the time zone.\n     * \n     * @return the id\n     */\n    public String getID() {\n        return iID;\n    }\n\n    /**\n     * Gets the time zone for the given id.\n    ", "entropy": 0.2430419921875, "is_bug_line": false, "sus_score": 0.5413319619607667, "per_token_entropy": [0.67333984375, 0.0164947509765625, 0.2178955078125, 0.34375, 0.004322052001953125, 8.082389831542969e-05, 0.43994140625, 0.1107177734375, 1.2373046875, 0.1385498046875, 0.39501953125, 0.041656494140625, 0.358154296875, 0.176025390625, 0.0293731689453125, 0.005401611328125, 0.244873046875, 4.303455352783203e-05, 0.0016918182373046875, 0.001079559326171875, 0.046844482421875, 1.0224609375, 1.50390625, 0.0135345458984375, 0.004680633544921875, 0.0343017578125, 0.112060546875, 0.53271484375, 4.9591064453125e-05, 0.0007810592651367188, 0.0002880096435546875, 0.01207733154296875, 0.0011777877807617188, 0.0007824897766113281, 9.632110595703125e-05, 0.0010595321655273438, 0.040618896484375, 0.00019431114196777344, 0.263671875, 0.1265869140625, 0.00469207763671875, 0.00024247169494628906, 0.50341796875, 0.1322021484375, 0.75830078125, 0.493896484375, 1.271484375, 0.2098388671875, 0.3896484375, 0.5185546875, 0.118896484375, 0.0885009765625], "tokens": [284, 320, 446, 1022, 275, 319, 7124, 322, 804, 432, 322, 1133, 10790, 32, 275, 319, 5384, 319, 477, 601, 322, 804, 275, 569, 284, 562, 892, 622, 779, 346, 301, 291, 442, 595, 779, 45, 284, 320, 446, 1022, 275, 319, 7124, 322, 1133, 10790, 436, 322, 2702, 804, 32, 275]}
{"line_number": 645, "line_type": "original", "code": "        FormatUtils.appendPaddedInteger(buf, minutes, 2);", "entropy": 0.93115234375, "is_bug_line": false, "sus_score": 0.5413319619607667, "per_token_entropy": [4.15234375, 8.0234375, 0.0180511474609375, 0.01204681396484375, 0.3955078125, 0.10198974609375, 0.0008349418640136719, 0.01522064208984375, 0.042083740234375, 0.0938720703125, 0.0029163360595703125, 2.005859375, 0.018768310546875, 0.0027313232421875, 0.0032444000244140625, 0.00821685791015625], "tokens": [351, 10276, 2755, 32, 1689, 66, 11043, 3061, 26, 1954, 30, 10135, 30, 225, 36, 293]}
{"line_number": 645, "line_type": "generated", "code": "\n    /**\n     * Gets the id of this time zone.\n     * \n     * @return the time zone id, never null\n     */\n    public String getID() {\n        return iID;\n    }", "entropy": 0.191162109375, "is_bug_line": false, "sus_score": 0.5413319619607667, "per_token_entropy": [0.8720703125, 0.5048828125, 0.05908203125, 0.00012362003326416016, 0.80419921875, 0.16064453125, 1.4150390625, 0.12939453125, 1.0068359375, 0.09698486328125, 0.1536865234375, 0.11651611328125, 0.0295562744140625, 0.007152557373046875, 0.322998046875, 4.5180320739746094e-05, 0.0024166107177734375, 0.0012617111206054688, 0.044647216796875, 0.65771484375, 0.0061798095703125, 0.0171966552734375, 0.560546875, 0.105712890625, 0.031158447265625, 0.009552001953125, 0.019927978515625, 0.004364013671875, 0.03466796875, 0.1304931640625, 0.498046875, 6.115436553955078e-05, 0.0014734268188476562, 0.0008254051208496094, 0.0150604248046875, 0.0020427703857421875, 0.0017795562744140625, 0.00021278858184814453, 0.0007958412170410156, 0.011993408203125, 0.00020015239715576172], "tokens": [284, 1022, 275, 319, 7124, 322, 804, 432, 458, 1133, 10790, 32, 275, 319, 5384, 319, 477, 601, 322, 1133, 10790, 804, 30, 7152, 744, 275, 569, 284, 562, 892, 622, 779, 346, 301, 291, 442, 595, 779, 45, 284, 320]}
{"line_number": 646, "line_type": "original", "code": "        offset -= minutes * DateTimeConstants.MILLIS_PER_MINUTE;", "entropy": 1.4189453125, "is_bug_line": false, "sus_score": 0.5413319619607667, "per_token_entropy": [4.19921875, 7.55859375, 6.3671875, 4.0625, 0.006900787353515625, 0.44580078125, 0.01113128662109375, 0.0002340078353881836, 0.01318359375, 4.887580871582031e-06, -0.0, 1.8358230590820312e-05, 5.9604644775390625e-06, 0.0001569986343383789, 0.0015153884887695312, 0.035125732421875], "tokens": [351, 3401, 5912, 10135, 319, 6666, 5229, 32, 63, 13142, 1296, 81, 3687, 81, 47229, 45]}
{"line_number": 646, "line_type": "generated", "code": "\n    /**\n     * Gets the unique id of the time zone.\n     * \n     * @return the time zone id, never null\n     */\n    public String getID() {\n        return iID;\n    }\n\n    /**\n     * Gets the time zone offset for", "entropy": 0.29345703125, "is_bug_line": false, "sus_score": 0.5413319619607667, "per_token_entropy": [0.853515625, 0.60498046875, 0.04779052734375, 0.0001119375228881836, 0.78955078125, 0.179443359375, 1.5791015625, 1.9619140625, 0.193115234375, 0.420654296875, 0.0325927734375, 0.2164306640625, 0.166259765625, 0.037994384765625, 0.005237579345703125, 0.427001953125, 4.971027374267578e-05, 0.0029468536376953125, 0.001514434814453125, 0.08648681640625, 1.0693359375, 0.00717926025390625, 0.253662109375, 0.421875, 0.1663818359375, 0.0330810546875, 0.0117340087890625, 0.022552490234375, 0.004032135009765625, 0.034637451171875, 0.11785888671875, 0.58544921875, 6.210803985595703e-05, 0.0012407302856445312, 0.0005402565002441406, 0.012176513671875, 0.0024089813232421875, 0.0017843246459960938, 0.0002689361572265625, 0.0011920928955078125, 0.015716552734375, 9.882450103759766e-05, 0.456298828125, 0.1436767578125, 0.005237579345703125, 8.916854858398438e-05, 0.4345703125, 0.147216796875, 0.81640625, 0.386474609375, 1.5224609375, 0.974609375], "tokens": [284, 1022, 275, 319, 7124, 322, 5799, 804, 432, 322, 1133, 10790, 32, 275, 319, 5384, 319, 477, 601, 322, 1133, 10790, 804, 30, 7152, 744, 275, 569, 284, 562, 892, 622, 779, 346, 301, 291, 442, 595, 779, 45, 284, 320, 446, 1022, 275, 319, 7124, 322, 1133, 10790, 3401, 436]}
{"line_number": 647, "line_type": "original", "code": "        if (offset == 0) {", "entropy": 1.1435546875, "is_bug_line": false, "sus_score": 0.5413319619607667, "per_token_entropy": [3.10546875, 2.75390625, 0.10845947265625, 2.56640625, 0.8115234375, 0.7109375, 0.010406494140625, 0.1805419921875, 0.039703369140625], "tokens": [351, 415, 308, 2881, 610, 225, 34, 27, 301]}
{"line_number": 647, "line_type": "generated", "code": "\n    /**\n     * Gets the id of the time zone.\n     * \n     * @return the time zone id, never null\n     */\n    public String getID() {\n        return iID;\n    }\n\n    /**\n     * Gets the time zone with the given", "entropy": 0.254150390625, "is_bug_line": false, "sus_score": 0.5413319619607667, "per_token_entropy": [0.74609375, 0.5859375, 0.057464599609375, 8.916854858398438e-05, 0.34912109375, 0.1165771484375, 1.48828125, 0.0882568359375, 0.57275390625, 0.048095703125, 0.51708984375, 0.200439453125, 0.041534423828125, 0.00641632080078125, 0.488525390625, 4.4226646423339844e-05, 0.005176544189453125, 0.0014009475708007812, 0.0552978515625, 0.68017578125, 0.0054168701171875, 0.016693115234375, 0.383544921875, 0.11639404296875, 0.031005859375, 0.010894775390625, 0.0184478759765625, 0.005947113037109375, 0.0297088623046875, 0.160400390625, 0.439208984375, 4.279613494873047e-05, 0.00138092041015625, 0.0011224746704101562, 0.0189208984375, 0.0020122528076171875, 0.0018701553344726562, 0.0005426406860351562, 0.0010404586791992188, 0.042938232421875, 0.0004382133483886719, 0.480712890625, 0.201416015625, 0.00490570068359375, 9.489059448242188e-05, 0.359619140625, 0.10174560546875, 0.68701171875, 0.6923828125, 2.841796875, 0.0443115234375, 0.468994140625], "tokens": [284, 1022, 275, 319, 7124, 322, 804, 432, 322, 1133, 10790, 32, 275, 319, 5384, 319, 477, 601, 322, 1133, 10790, 804, 30, 7152, 744, 275, 569, 284, 562, 892, 622, 779, 346, 301, 291, 442, 595, 779, 45, 284, 320, 446, 1022, 275, 319, 7124, 322, 1133, 10790, 623, 322, 2702]}
{"line_number": 648, "line_type": "original", "code": "            return buf.toString();", "entropy": 3.345703125, "is_bug_line": false, "sus_score": 0.5413319619607667, "per_token_entropy": [7.484375, 2.62109375, 9.8984375, 0.0305328369140625, 0.0258026123046875, 0.0186614990234375], "tokens": [1468, 442, 4845, 32, 3108, 473]}
{"line_number": 648, "line_type": "generated", "code": "\n    /**\n     * Gets the unique time zone id.\n     * \n     * @return the time zone id, never null\n     */\n    public String getID() {\n        return iID;\n    }\n\n    /**\n     * Gets the time zone offset, for current", "entropy": 0.276123046875, "is_bug_line": false, "sus_score": 0.5413319619607667, "per_token_entropy": [1.04296875, 0.818359375, 0.05712890625, 0.00012290477752685547, 0.34375, 0.111328125, 1.27734375, 1.23828125, 0.0035343170166015625, 0.716796875, 0.60595703125, 0.00957489013671875, 0.004848480224609375, 0.4052734375, 4.458427429199219e-05, 0.0028781890869140625, 0.0011873245239257812, 0.08636474609375, 0.7333984375, 0.0037746429443359375, 0.062469482421875, 0.443359375, 0.144775390625, 0.0252685546875, 0.00995635986328125, 0.0173492431640625, 0.005199432373046875, 0.0305938720703125, 0.129638671875, 0.50927734375, 3.802776336669922e-05, 0.0012054443359375, 0.0009016990661621094, 0.0247650146484375, 0.00206756591796875, 0.00157928466796875, 0.0003757476806640625, 0.0016632080078125, 0.019561767578125, 0.0004050731658935547, 0.34716796875, 0.201416015625, 0.005939483642578125, 0.00011491775512695312, 0.414794921875, 0.1142578125, 0.6201171875, 0.38623046875, 0.52587890625, 1.0478515625, 0.303466796875, 1.501953125], "tokens": [284, 1022, 275, 319, 7124, 322, 5799, 1133, 10790, 804, 32, 275, 319, 5384, 319, 477, 601, 322, 1133, 10790, 804, 30, 7152, 744, 275, 569, 284, 562, 892, 622, 779, 346, 301, 291, 442, 595, 779, 45, 284, 320, 446, 1022, 275, 319, 7124, 322, 1133, 10790, 3401, 30, 436, 1550]}
{"line_number": 633, "line_type": "original", "code": "            buf.append('+');", "entropy": 2.96875, "is_bug_line": false, "sus_score": 0.5029188806044014, "per_token_entropy": [7.375, 6.9609375, 0.07562255859375, 0.0595703125, 3.2421875, 0.0994873046875], "tokens": [1468, 4845, 32, 1689, 37984, 895]}
{"line_number": 633, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5029188806044014, "per_token_entropy": [], "tokens": []}
{"line_number": 791, "line_type": "original", "code": "        String name = cNameProvider.getName(locale, iID, nameKey);", "entropy": 0.791015625, "is_bug_line": false, "sus_score": 0.39477101697586137, "per_token_entropy": [3.390625, 6.28125, 1.6591796875, 0.54296875, 0.529296875, 0.0286407470703125, 0.00533294677734375, 0.00403594970703125, 1.0830078125, 0.086669921875, 0.2080078125, 0.0058441162109375, 0.08404541015625, 0.039703369140625, 0.047393798828125, 0.216552734375, 0.0013294219970703125, 0.024810791015625], "tokens": [351, 892, 636, 280, 281, 558, 2570, 32, 5165, 26, 6921, 30, 595, 779, 30, 636, 953, 293]}
{"line_number": 791, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Gets the daylight savings offset to add to UTC to get local time,\n     * when daylight savings is in effect.\n     * \n     * @param instant  milliseconds from 1970-01-", "entropy": 0.1180419921875, "is_bug_line": false, "sus_score": 0.39477101697586137, "per_token_entropy": [0.99169921875, 0.336181640625, 0.13037109375, 0.0792236328125, 0.0102691650390625, 9.40561294555664e-05, 0.5673828125, 0.0330810546875, 0.80712890625, 0.000965118408203125, 0.3701171875, 2.5153160095214844e-05, 0.59130859375, 0.1282958984375, 0.0026187896728515625, 0.0004134178161621094, 0.0167999267578125, 0.00647735595703125, 0.001007080078125, 0.0031185150146484375, 0.0053253173828125, 0.1494140625, 0.465087890625, 9.298324584960938e-06, 0.006008148193359375, 0.0273895263671875, 7.367134094238281e-05, 0.0206146240234375, 5.602836608886719e-06, 1.0859375, 0.00424957275390625, 0.0005507469177246094, 0.004055023193359375, 0.11187744140625, 0.00017404556274414062, 0.16162109375, 2.6345252990722656e-05, 0.0014410018920898438, 0.0028438568115234375, 0.0008854866027832031, 0.0014467239379882812, 0.01067352294921875, 0.0004036426544189453, 3.993511199951172e-05, 6.4373016357421875e-06, 7.069110870361328e-05, 7.104873657226562e-05, 7.748603820800781e-06, 7.82012939453125e-05, 8.475780487060547e-05, 3.2186508178710938e-06, 8.821487426757812e-06], "tokens": [284, 320, 446, 1022, 275, 319, 7124, 322, 5808, 2429, 309, 31156, 3401, 372, 1015, 372, 17197, 372, 622, 2196, 1133, 30, 275, 319, 1412, 5808, 2429, 309, 31156, 438, 328, 5744, 32, 275, 319, 5384, 319, 477, 753, 23564, 225, 18574, 645, 225, 35, 43, 41, 34, 31, 34, 35, 31]}
{"line_number": 792, "line_type": "original", "code": "        if (name != null) {", "entropy": 1.8125, "is_bug_line": false, "sus_score": 0.39477101697586137, "per_token_entropy": [3.638671875, 2.4140625, 0.07489013671875, 6.63671875, 1.47265625, 0.011474609375, 0.060333251953125, 0.1934814453125], "tokens": [351, 415, 308, 426, 863, 744, 27, 301]}
{"line_number": 792, "line_type": "generated", "code": "\n     */\n    public boolean isStandardOffset(long instant) {\n        return getOffset(instant) == getStandardOffset(instant);\n    }\n\n    /**\n     * Gets the daylight savings millisecond offset to add to UTC to get local\n     * time", "entropy": 0.10223388671875, "is_bug_line": false, "sus_score": 0.39477101697586137, "per_token_entropy": [1.1455078125, 0.081787109375, 0.0228424072265625, 0.01296234130859375, 0.307373046875, 0.00016558170318603516, 0.019989013671875, 0.000240325927734375, 0.00018513202667236328, 0.002796173095703125, 0.00016224384307861328, 0.00045680999755859375, 0.00193023681640625, 0.1026611328125, 0.08416748046875, 0.462158203125, 0.041473388671875, 0.00039649009704589844, 0.00011968612670898438, 0.00020444393157958984, 0.0006518363952636719, 0.0007538795471191406, 0.00012683868408203125, 4.410743713378906e-06, 0.00010287761688232422, 0.00021588802337646484, 0.0012798309326171875, 0.07965087890625, 0.00020456314086914062, 0.09716796875, 0.035888671875, 0.0034732818603515625, 6.73532485961914e-05, 0.56005859375, 0.03729248046875, 0.52880859375, 0.0009088516235351562, 0.289794921875, 1.811981201171875e-05, 0.85791015625, 9.894371032714844e-06, 0.0005922317504882812, 0.0013751983642578125, 0.0007767677307128906, 0.0001323223114013672, 0.006290435791015625, 0.00341796875, 0.0032825469970703125, 0.06329345703125, 0.44580078125, 1.1920928955078125e-05, 0.00843048095703125], "tokens": [275, 569, 284, 562, 1905, 438, 8090, 3457, 26, 3222, 23564, 27, 301, 291, 442, 622, 3457, 26, 30241, 27, 610, 622, 8090, 3457, 26, 30241, 293, 284, 320, 446, 1022, 275, 319, 7124, 322, 5808, 2429, 309, 31156, 37003, 3090, 3401, 372, 1015, 372, 17197, 372, 622, 2196, 275, 319, 1133]}
{"line_number": 795, "line_type": "original", "code": "        return printOffset(getOffset(instant));", "entropy": 1.361328125, "is_bug_line": false, "sus_score": 0.39477101697586137, "per_token_entropy": [6.31640625, 0.80712890625, 5.91796875, 0.01824951171875, 0.024322509765625, 0.1591796875, 0.1600341796875, 0.01033782958984375, 0.02593994140625, 0.1669921875], "tokens": [351, 442, 1459, 3457, 26, 371, 3457, 26, 30241, 876]}
{"line_number": 795, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Gets the daylight savings offset to add to UTC to get local time,\n     * when daylight savings time is in effect.\n     * \n     * @param instant  milliseconds from 1970-01", "entropy": 0.08294677734375, "is_bug_line": false, "sus_score": 0.39477101697586137, "per_token_entropy": [0.1142578125, 0.033843994140625, 0.11883544921875, 0.040863037109375, 0.00453948974609375, 4.2557716369628906e-05, 0.728515625, 0.055572509765625, 1.07421875, 0.0012140274047851562, 0.247314453125, 1.71661376953125e-05, 0.50390625, 0.127197265625, 0.002777099609375, 0.00026488304138183594, 0.011993408203125, 0.00649261474609375, 0.0009646415710449219, 0.0026988983154296875, 0.005313873291015625, 0.11358642578125, 0.383056640625, 7.748603820800781e-06, 0.0057220458984375, 0.0260772705078125, 5.829334259033203e-05, 0.022216796875, 4.172325134277344e-06, 0.344970703125, 0.0029087066650390625, 0.001415252685546875, 0.00040030479431152344, 0.002925872802734375, 0.092041015625, 0.00013875961303710938, 0.217041015625, 1.4662742614746094e-05, 0.0017957687377929688, 0.003383636474609375, 0.0008225440979003906, 0.0011920928955078125, 0.0111846923828125, 0.00039458274841308594, 3.9577484130859375e-05, 6.9141387939453125e-06, 4.172325134277344e-06, 6.270408630371094e-05, 1.728534698486328e-05, 6.711483001708984e-05, 0.00015842914581298828, 3.2186508178710938e-06], "tokens": [284, 320, 446, 1022, 275, 319, 7124, 322, 5808, 2429, 309, 31156, 3401, 372, 1015, 372, 17197, 372, 622, 2196, 1133, 30, 275, 319, 1412, 5808, 2429, 309, 31156, 1133, 438, 328, 5744, 32, 275, 319, 5384, 319, 477, 753, 23564, 225, 18574, 645, 225, 35, 43, 41, 34, 31, 34, 35]}
