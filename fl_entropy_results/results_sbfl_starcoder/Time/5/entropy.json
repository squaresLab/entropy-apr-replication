{"line_number": 1631, "line_type": "original", "code": "                result = result.withYears(years);", "entropy": 1.4052734375, "is_bug_line": true, "sus_score": 0.5222329678670935, "per_token_entropy": [10.140625, 3.568359375, 0.0196685791015625, 0.0484619140625, 0.01439666748046875, 0.031524658203125, 0.188232421875, 0.0201416015625, 0.01396942138671875, 0.01165008544921875], "tokens": [2071, 1056, 280, 1056, 32, 1793, 33221, 26, 24420, 293]}
{"line_number": 1631, "line_type": "generated", "code": "\n\n    //-----------------------------------------------------------------------\n    /**\n     * Compares this period to another object to test if the difference is zero.\n     * <p>\n     * The comparison in this method is equivalent to comparing the total number\n     * of milliseconds and the number of fields.\n    ", "entropy": 0.390380859375, "is_bug_line": true, "sus_score": 0.5222329678670935, "per_token_entropy": [1.330078125, 0.60107421875, 0.0128173828125, 0.0216064453125, 0.04998779296875, 0.0041046142578125, 2.9921531677246094e-05, 1.86328125, 7.3909759521484375e-06, 0.08660888671875, 0.564453125, 0.04046630859375, 0.06427001953125, 0.87890625, 0.042266845703125, 0.038238525390625, 0.06890869140625, 0.5986328125, 1.85546875, 0.10687255859375, 1.08203125, 0.0034618377685546875, 0.0009918212890625, 0.00010561943054199219, 0.055755615234375, 0.0010232925415039062, 0.0007023811340332031, 0.00015163421630859375, 1.4901161193847656e-05, 0.37255859375, 0.0843505859375, 0.31396484375, 0.80615234375, 0.1768798828125, 0.5478515625, 0.71435546875, 0.0004935264587402344, 0.84716796875, 0.046112060546875, 1.6943359375, 0.2841796875, 0.133056640625, 9.417533874511719e-06, 0.0009584426879882812, 0.1234130859375, 2.40234375, 0.266845703125, 0.7958984375, 0.00099945068359375, 0.646484375, 0.430908203125, 0.235107421875], "tokens": [446, 434, 42510, 284, 1022, 275, 319, 2252, 10999, 458, 7918, 372, 4674, 1300, 372, 894, 415, 322, 10563, 438, 5934, 32, 275, 319, 333, 98, 48, 275, 319, 886, 14828, 328, 458, 1411, 438, 13741, 372, 31374, 322, 3380, 1451, 275, 319, 432, 18574, 461, 322, 1451, 432, 3829, 32, 275]}
{"line_number": 895, "line_type": "original", "code": "        int[] values = getValues();  // cloned", "entropy": 1.4052734375, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [6.8515625, 4.98046875, 1.166015625, 2.35546875, 0.008514404296875, 0.032470703125, 0.00311279296875, 0.00821685791015625, 0.05072021484375, 0.00037860870361328125, 0.0036468505859375], "tokens": [351, 629, 1178, 2078, 280, 622, 3354, 473, 225, 434, 26886]}
{"line_number": 895, "line_type": "generated", "code": "\n    /**\n     * Returns a new period with the specified number of hours.\n     * <p>\n     * This period instance is immutable and unaffected by this method call.\n     *\n     * @param hours  the amount of hours to add, may be", "entropy": 0.01568603515625, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [0.384521484375, 0.11395263671875, 0.051422119140625, 8.368492126464844e-05, 0.0144805908203125, 0.0010557174682617188, 0.0006022453308105469, 0.0165557861328125, 0.0014085769653320312, 0.0011663436889648438, 0.002231597900390625, 0.0086822509765625, 0.00031065940856933594, 0.10882568359375, 0.06744384765625, 0.0013742446899414062, 5.5789947509765625e-05, 0.0021495819091796875, 2.3126602172851562e-05, 2.562999725341797e-05, 9.584426879882812e-05, 1.7881393432617188e-05, 0.0025005340576171875, 0.0011720657348632812, 4.8160552978515625e-05, 1.7881393432617188e-06, 1.990795135498047e-05, 8.106231689453125e-06, 1.52587890625e-05, 2.872943878173828e-05, 1.1682510375976562e-05, 3.4570693969726562e-06, 4.172325134277344e-06, 2.110004425048828e-05, 0.00010442733764648438, 0.000331878662109375, 5.91278076171875e-05, 0.0264434814453125, 3.4332275390625e-05, 0.00024390220642089844, 0.0006475448608398438, 0.00147247314453125, 0.0006809234619140625, 3.6716461181640625e-05, 0.000736236572265625, 0.0001571178436279297, 0.0036487579345703125, 3.3020973205566406e-05, 5.6862831115722656e-05, 0.0002415180206298828, 1.8596649169921875e-05, 0.0001983642578125], "tokens": [284, 1022, 275, 319, 3759, 312, 537, 7918, 623, 322, 3191, 1451, 432, 11632, 32, 275, 319, 333, 98, 48, 275, 319, 1348, 7918, 1980, 438, 26055, 461, 707, 31316, 810, 458, 1411, 1476, 32, 275, 319, 275, 319, 477, 753, 11632, 225, 322, 5168, 432, 11632, 372, 1015, 30, 1631, 526]}
{"line_number": 896, "line_type": "original", "code": "        getPeriodType().setIndexedField(this, PeriodType.YEAR_INDEX, values, years);", "entropy": 0.60498046875, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [5.91015625, 4.60546875, 0.07373046875, 0.0002460479736328125, 0.0139923095703125, 0.04364013671875, 0.01251983642578125, 0.00027942657470703125, 0.01030731201171875, 0.041351318359375, 0.00020432472229003906, 0.0158538818359375, 0.000415802001953125, 0.01267242431640625, 2.365234375, 0.0008530616760253906, 0.0032672882080078125, 0.0023555755615234375, 0.10174560546875, 0.0010309219360351562, 0.07672119140625, 0.021331787109375], "tokens": [351, 622, 7754, 620, 922, 470, 14775, 1176, 26, 578, 30, 24156, 620, 32, 23164, 81, 9193, 30, 2078, 30, 11274, 293]}
{"line_number": 896, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Returns a new period with the specified number of hours.\n     * <p>\n     * This period instance is immutable and unaffected by this method call.\n     *\n     * @param hours  the amount of hours to add,", "entropy": 0.059844970703125, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [1.0341796875, 1.287109375, 0.15478515625, 0.287841796875, 0.2196044921875, 4.6133995056152344e-05, 0.01357269287109375, 0.00044727325439453125, 0.0004494190216064453, 0.0116119384765625, 0.0008959770202636719, 0.0005431175231933594, 0.0012006759643554688, 0.0031337738037109375, 0.00010418891906738281, 0.04364013671875, 0.0225677490234375, 0.0017147064208984375, 1.9788742065429688e-05, 0.0013933181762695312, 1.33514404296875e-05, 1.4543533325195312e-05, 0.0001437664031982422, 1.71661376953125e-05, 0.00206756591796875, 0.0008358955383300781, 4.589557647705078e-05, 1.7881393432617188e-06, 2.3603439331054688e-05, 5.125999450683594e-06, 1.3947486877441406e-05, 1.5497207641601562e-05, 7.748603820800781e-06, 3.337860107421875e-06, 1.3589859008789062e-05, 1.990795135498047e-05, 8.83340835571289e-05, 0.0005793571472167969, 2.1576881408691406e-05, 0.0176544189453125, 8.106231689453125e-06, 9.34600830078125e-05, 0.0002791881561279297, 0.000507354736328125, 0.00042128562927246094, 2.6941299438476562e-05, 0.0005917549133300781, 0.00017142295837402344, 0.00278472900390625, 2.6345252990722656e-05, 3.910064697265625e-05, 0.00016558170318603516], "tokens": [284, 320, 446, 1022, 275, 319, 3759, 312, 537, 7918, 623, 322, 3191, 1451, 432, 11632, 32, 275, 319, 333, 98, 48, 275, 319, 1348, 7918, 1980, 438, 26055, 461, 707, 31316, 810, 458, 1411, 1476, 32, 275, 319, 275, 319, 477, 753, 11632, 225, 322, 5168, 432, 11632, 372, 1015, 30]}
{"line_number": 1629, "line_type": "original", "code": "            months = months % 12;", "entropy": 1.888671875, "is_bug_line": true, "sus_score": 0.5, "per_token_entropy": [8.3671875, 6.921875, 0.1435546875, 1.2470703125, 0.25537109375, 0.00798797607421875, 4.4345855712890625e-05, 0.00021970272064208984, 0.052947998046875], "tokens": [1468, 17723, 280, 17723, 904, 225, 35, 36, 45]}
{"line_number": 1629, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": true, "sus_score": 0.5, "per_token_entropy": [], "tokens": []}
{"line_number": 1630, "line_type": "original", "code": "            if (years != 0) {", "entropy": 1.23046875, "is_bug_line": true, "sus_score": 0.5, "per_token_entropy": [7.234375, 1.8076171875, 0.0692138671875, 0.93408203125, 0.0970458984375, 0.00368499755859375, 0.000270843505859375, 0.91455078125, 0.01285552978515625], "tokens": [1468, 415, 308, 24420, 863, 225, 34, 27, 301]}
{"line_number": 1630, "line_type": "generated", "code": "\n    /**\n     * Checks the specified period type for validity.\n     * \n     * @param type  the period type to check\n     * @return the type passed in\n     * @throws IllegalArgumentException if the type is invalid\n     */\n    private static PeriodType validatePeriod", "entropy": 0.533203125, "is_bug_line": true, "sus_score": 0.5, "per_token_entropy": [1.169921875, 0.68212890625, 0.08892822265625, 0.0001214742660522461, 2.55859375, 1.9990234375, 0.53857421875, 2.02734375, 0.39501953125, 1.9951171875, 1.1943359375, 0.46484375, 0.050811767578125, 0.0040435791015625, 0.328125, 6.496906280517578e-05, 0.0007281303405761719, 0.01061248779296875, 0.363037109375, 0.0080718994140625, 0.0587158203125, 0.324462890625, 0.0019388198852539062, 0.229248046875, 0.147705078125, 1.365234375, 0.149169921875, 0.0008983612060546875, 1.796875, 1.00390625, 1.2939453125, 1.7314453125, 0.00258636474609375, 0.12890625, 0.1883544921875, 0.00026988983154296875, 0.0159149169921875, 0.6103515625, 0.003131866455078125, 0.08099365234375, 0.802734375, 0.014892578125, 0.62255859375, 0.0293731689453125, 0.3486328125, 0.011077880859375, 0.1268310546875, 0.87890625, 0.0065765380859375, 4.947185516357422e-05, 1.2978515625, 0.57958984375], "tokens": [284, 1022, 275, 319, 17279, 322, 3191, 7918, 827, 436, 31887, 32, 275, 319, 5384, 319, 477, 753, 827, 225, 322, 7918, 827, 372, 1505, 275, 319, 477, 601, 322, 827, 5403, 328, 275, 319, 477, 5117, 12137, 415, 322, 827, 438, 5535, 275, 569, 284, 945, 907, 24156, 620, 6042, 7754]}
{"line_number": 1628, "line_type": "original", "code": "            years = FieldUtils.safeAdd(years, months / 12);", "entropy": 1.578125, "is_bug_line": true, "sus_score": 0.4629100498862757, "per_token_entropy": [8.1015625, 6.33984375, 0.128662109375, 8.9375, 0.0010776519775390625, 0.0005469322204589844, 0.03948974609375, 1.8212890625, 0.004886627197265625, 0.09576416015625, 0.0029735565185546875, 1.158203125, 0.0172576904296875, 0.1658935546875, 4.935264587402344e-05, 0.000156402587890625, 0.01409149169921875], "tokens": [1468, 11274, 280, 5692, 2755, 32, 4770, 1103, 26, 24420, 30, 17723, 517, 225, 35, 36, 293]}
{"line_number": 1628, "line_type": "generated", "code": "\n\n    /**\n     * Normalizes this period using standard rules, assuming a 12 month year,\n     * 7 day week, 24 hour day, 60 minute hour and 60 second minute.\n     * <p>\n     *", "entropy": 0.1571044921875, "is_bug_line": true, "sus_score": 0.4629100498862757, "per_token_entropy": [1.6552734375, 0.89111328125, 0.0491943359375, 8.356571197509766e-05, 2.943359375, 0.00507354736328125, 0.02032470703125, 0.032989501953125, 0.248046875, 0.6953125, 0.0216217041015625, 0.12237548828125, 0.069580078125, 0.030609130859375, 0.0738525390625, 0.486328125, 0.0255126953125, 0.00045299530029296875, 0.014801025390625, 0.042236328125, 0.005336761474609375, 0.00035381317138671875, 0.0236663818359375, 0.024017333984375, 0.000591278076171875, 0.0004553794860839844, 0.011688232421875, 0.002361297607421875, 0.006839752197265625, 0.0005207061767578125, 0.00031757354736328125, 6.0558319091796875e-05, 0.006137847900390625, 0.00510406494140625, 0.00046253204345703125, 5.602836608886719e-06, 0.00013566017150878906, 0.00022983551025390625, 0.0132598876953125, 0.0020084381103515625, 9.72747802734375e-05, 0.00019240379333496094, 0.0002104043960571289, 0.0005521774291992188, 0.54931640625, 0.0215301513671875, 0.0010004043579101562, 0.065185546875, 0.00013113021850585938, 7.11679458618164e-05, 0.0002275705337524414, 2.8252601623535156e-05], "tokens": [446, 1022, 275, 319, 13574, 5052, 458, 7918, 1471, 6216, 7019, 30, 26933, 312, 225, 35, 36, 6811, 4947, 30, 275, 319, 225, 41, 5808, 8209, 30, 225, 36, 38, 12021, 5808, 30, 225, 40, 34, 16044, 12021, 461, 225, 40, 34, 3100, 16044, 32, 275, 319, 333, 98, 48, 275, 319]}
{"line_number": 1625, "line_type": "original", "code": "        int years = getYears();", "entropy": 1.2421875, "is_bug_line": false, "sus_score": 0.39735970711951313, "per_token_entropy": [5.61328125, 2.23046875, 0.72216796875, 0.0232696533203125, 0.08721923828125, 0.001316070556640625, 0.020782470703125], "tokens": [351, 629, 11274, 280, 622, 33221, 473]}
{"line_number": 1625, "line_type": "generated", "code": "\n    /**\n     * Compares this period to another object to test if the difference is zero.\n     * <p>\n     * The comparison is based on the amount of time that the two periods\n     * overlap. If both periods have the same amount of time", "entropy": 0.429443359375, "is_bug_line": false, "sus_score": 0.39735970711951313, "per_token_entropy": [0.8232421875, 0.38134765625, 0.0531005859375, 6.937980651855469e-05, 2.41796875, 2.7060508728027344e-05, 0.13330078125, 0.6064453125, 0.052001953125, 0.072509765625, 0.94677734375, 0.04119873046875, 0.040496826171875, 0.05889892578125, 0.5185546875, 1.85546875, 0.1300048828125, 1.28515625, 0.004669189453125, 0.001495361328125, 0.00019621849060058594, 0.054168701171875, 0.0014629364013671875, 0.00083160400390625, 0.0001977682113647461, 1.7404556274414062e-05, 0.3671875, 0.0948486328125, 1.5146484375, 0.51220703125, 0.10382080078125, 0.0015811920166015625, 0.76806640625, 0.2083740234375, 0.34765625, 2.802734375, 0.7802734375, 0.322509765625, 0.046661376953125, 0.693359375, 7.3909759521484375e-06, 0.66796875, 0.12890625, 0.79541015625, 1.5615234375, 0.037139892578125, 0.238037109375, 0.053192138671875, 0.00335693359375, 0.73388671875, 0.01727294921875, 0.05322265625], "tokens": [284, 1022, 275, 319, 2252, 10999, 458, 7918, 372, 4674, 1300, 372, 894, 415, 322, 10563, 438, 5934, 32, 275, 319, 333, 98, 48, 275, 319, 886, 14828, 438, 4122, 544, 322, 5168, 432, 1133, 688, 322, 3134, 34533, 275, 319, 18714, 32, 1670, 4335, 34533, 1159, 322, 2432, 5168, 432, 1133]}
{"line_number": 1626, "line_type": "original", "code": "        int months = getMonths();", "entropy": 1.4619140625, "is_bug_line": false, "sus_score": 0.39735970711951313, "per_token_entropy": [5.765625, 3.68359375, 0.4326171875, 0.048309326171875, 0.2283935546875, 0.03851318359375, 0.03875732421875], "tokens": [351, 629, 17723, 280, 622, 34042, 473]}
{"line_number": 1626, "line_type": "generated", "code": "\n    /**\n     * Converts this period to a duration using standard rules, assuming a 12 month year,\n     * 7 day week, 24 hour day, 60 minute hour and 60 second minute.\n     * <p>", "entropy": 0.1649169921875, "is_bug_line": false, "sus_score": 0.39735970711951313, "per_token_entropy": [0.84423828125, 0.455810546875, 0.058319091796875, 7.331371307373047e-05, 2.802734375, 0.1466064453125, 0.1580810546875, 0.08880615234375, 0.72412109375, 0.7685546875, 0.465087890625, 0.1068115234375, 0.12200927734375, 0.39111328125, 0.1519775390625, 0.09429931640625, 0.58544921875, 0.1470947265625, 0.0013208389282226562, 0.1490478515625, 0.1689453125, 0.00531005859375, 0.00682830810546875, 1.6450881958007812e-05, 0.003940582275390625, 0.00199127197265625, 0.0002791881561279297, 0.0003294944763183594, 0.0017452239990234375, 0.0001647472381591797, 0.00010204315185546875, 3.790855407714844e-05, 0.0003027915954589844, 7.450580596923828e-05, 0.0008854866027832031, 0.0002598762512207031, 0.00011622905731201172, 3.2186508178710938e-06, 0.00014972686767578125, 0.00023305416107177734, 0.00861358642578125, 0.00030517578125, 9.894371032714844e-06, 8.952617645263672e-05, 0.0002803802490234375, 0.0003235340118408203, 0.037445068359375, 0.01029205322265625, 4.303455352783203e-05, 0.0665283203125, 0.0003120899200439453, 0.00039505958557128906], "tokens": [284, 1022, 275, 319, 25337, 458, 7918, 372, 312, 7459, 1471, 6216, 7019, 30, 26933, 312, 225, 35, 36, 6811, 4947, 30, 275, 319, 225, 41, 5808, 8209, 30, 225, 36, 38, 12021, 5808, 30, 225, 40, 34, 16044, 12021, 461, 225, 40, 34, 3100, 16044, 32, 275, 319, 333, 98, 48]}
{"line_number": 1627, "line_type": "original", "code": "        if (years != 0 || months != 0) {", "entropy": 0.74951171875, "is_bug_line": false, "sus_score": 0.39735970711951313, "per_token_entropy": [6.24609375, 1.1337890625, 0.07391357421875, 1.1083984375, 0.08575439453125, 0.0042724609375, 0.0004887580871582031, 1.7666015625, 0.00720977783203125, 0.008514404296875, 0.001483917236328125, 0.0003502368927001953, 0.044647216796875, 0.0133056640625], "tokens": [351, 415, 308, 24420, 863, 225, 34, 1276, 17723, 863, 225, 34, 27, 301]}
{"line_number": 1627, "line_type": "generated", "code": "\n        if (months!= 0) {\n            if (type.isSupported(DurationFieldType.months())) {\n                result = result.withMonths(months);\n            }\n            else {\n                years = FieldUtils.safeAdd(years, months / ", "entropy": 0.2880859375, "is_bug_line": false, "sus_score": 0.39735970711951313, "per_token_entropy": [1.322265625, 1.3544921875, 0.0828857421875, 1.865234375, 0.251708984375, 0.0036411285400390625, 0.0024623870849609375, 0.062042236328125, 0.002788543701171875, 0.08929443359375, 1.5673828125, 0.222412109375, 1.3173828125, 0.044219970703125, 0.12152099609375, 0.93359375, 0.007648468017578125, 0.384521484375, 0.00775909423828125, 0.0001251697540283203, 0.3359375, 0.034088134765625, 0.003570556640625, 0.040496826171875, 0.31005859375, 0.00396728515625, 0.007686614990234375, 0.0005598068237304688, 0.04266357421875, 0.017486572265625, 0.06451416015625, 0.0450439453125, 0.01036834716796875, 0.050689697265625, 0.0004978179931640625, 1.5791015625, 0.09149169921875, 0.17919921875, 0.0478515625, 2.216796875, 0.06878662109375, 0.09844970703125, 1.5616416931152344e-05, 9.059906005859375e-06, 0.0002014636993408203, 0.004268646240234375, 0.00035071372985839844, 0.038238525390625, 0.00016367435455322266, 0.0275421142578125, 0.001903533935546875, 0.0111083984375], "tokens": [291, 415, 308, 28407, 863, 225, 34, 27, 301, 324, 415, 308, 681, 32, 297, 10323, 26, 6196, 19204, 32, 28407, 5156, 301, 400, 1056, 280, 1056, 32, 1793, 34042, 26, 28407, 293, 324, 320, 324, 813, 301, 400, 11274, 280, 5692, 2755, 32, 4770, 1103, 26, 24420, 30, 17723, 517, 225]}
{"line_number": 1617, "line_type": "original", "code": "        type = DateTimeUtils.getPeriodType(type);", "entropy": 1.3984375, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [5.0234375, 8.65625, 0.0589599609375, 1.984375, 0.003810882568359375, 0.003536224365234375, 0.128662109375, 0.318359375, 0.00012087821960449219, 0.045166015625, 0.302001953125, 0.25732421875], "tokens": [351, 827, 280, 6666, 2755, 32, 371, 7754, 620, 26, 681, 293]}
{"line_number": 1617, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [], "tokens": []}
{"line_number": 1618, "line_type": "original", "code": "        long millis = getMillis();  // no overflow can happen, even with Integer.MAX_VALUEs", "entropy": 2.623046875, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [5.7109375, 2.8984375, 1.79296875, 0.0496826171875, 0.6552734375, 0.117431640625, 0.06854248046875, 5.609375, 0.314453125, 4.71875, 2.990234375, 5.87109375, 0.51953125, 3.345703125, 6.6015625, 1.2236328125, 6.8046875, 0.025970458984375, 0.0272216796875, 0.0408935546875, 0.0025348663330078125, 8.3046875], "tokens": [351, 1946, 42302, 280, 622, 10906, 473, 225, 434, 1289, 9973, 883, 7292, 30, 4444, 623, 4401, 32, 3459, 81, 5975, 101]}
{"line_number": 1618, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [], "tokens": []}
{"line_number": 1619, "line_type": "original", "code": "        millis += (((long) getSeconds()) * ((long) DateTimeConstants.MILLIS_PER_SECOND));", "entropy": 0.452880859375, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [5.55859375, 3.51171875, 0.1602783203125, 0.056671142578125, 0.00995635986328125, 0.0004875659942626953, 0.1273193359375, 1.3115234375, 0.00726318359375, 0.00354766845703125, 0.10540771484375, 0.0002491474151611328, 4.2319297790527344e-05, 0.00858306884765625, 0.002147674560546875, 0.00010919570922851562, 0.00021541118621826172, 1.3113021850585938e-06, -0.0, 7.3909759521484375e-06, 9.5367431640625e-07, 0.0012292861938476562, 0.0003764629364013672, 0.00296783447265625], "tokens": [351, 42302, 1454, 8580, 3222, 27, 622, 9023, 1157, 319, 1833, 3222, 27, 6666, 5229, 32, 63, 13142, 1296, 81, 3687, 81, 23790, 876]}
{"line_number": 1619, "line_type": "generated", "code": "\n    /**\n     * Gets the number of weeks in this period.\n     * <p>\n     * This method uses the standard definition of a week.\n     * Weeks start on Monday and end on Sunday.\n     * <p>\n     * When using", "entropy": 0.43212890625, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.8330078125, 0.380615234375, 0.061767578125, 5.8531761169433594e-05, 2.833984375, 0.109130859375, 0.5048828125, 0.00057220458984375, 2.578125, 0.30029296875, 0.22509765625, 0.00499725341796875, 0.41943359375, 0.0162506103515625, 0.0009984970092773438, 0.220947265625, 0.0008993148803710938, 0.0006418228149414062, 0.00017702579498291016, 2.3126602172851562e-05, 0.435302734375, 0.06658935546875, 1.580078125, 0.61669921875, 0.4521484375, 1.1982421875, 0.060943603515625, 0.1337890625, 0.0005035400390625, 1.37109375, 0.36181640625, 0.0004611015319824219, 0.9755859375, 0.074462890625, 0.6396484375, 0.00244903564453125, 0.268310546875, 0.25634765625, 0.302734375, 0.0003631114959716797, 0.00026869773864746094, 0.0008687973022460938, 0.08270263671875, 0.033721923828125, 0.0005717277526855469, 1.1845703125, 0.0026416778564453125, 0.00046443939208984375, 0.0004203319549560547, 9.906291961669922e-05, 2.044921875, 1.8251953125], "tokens": [284, 1022, 275, 319, 7124, 322, 1451, 432, 22599, 328, 458, 7918, 32, 275, 319, 333, 98, 48, 275, 319, 1348, 1411, 5251, 322, 6216, 5644, 432, 312, 8209, 32, 275, 319, 25934, 101, 1477, 544, 48851, 461, 943, 544, 358, 28036, 32, 275, 319, 333, 98, 48, 275, 319, 5076, 1471]}
{"line_number": 1620, "line_type": "original", "code": "        millis += (((long) getMinutes()) * ((long) DateTimeConstants.MILLIS_PER_MINUTE));", "entropy": 0.4033203125, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [5.4296875, 3.712890625, 0.10357666015625, 0.04034423828125, 0.006465911865234375, 0.0003192424774169922, 0.08251953125, 0.2147216796875, 0.0032062530517578125, 0.0008606910705566406, 0.07635498046875, 0.0002911090850830078, 3.635883331298828e-05, 0.00362396240234375, 0.0006070137023925781, 6.80685043334961e-05, 2.2172927856445312e-05, 6.556510925292969e-06, -0.0, 7.033348083496094e-06, 7.152557373046875e-07, 0.0006995201110839844, 0.0012769699096679688, 0.002288818359375], "tokens": [351, 42302, 1454, 8580, 3222, 27, 622, 16338, 1157, 319, 1833, 3222, 27, 6666, 5229, 32, 63, 13142, 1296, 81, 3687, 81, 47229, 876]}
{"line_number": 1620, "line_type": "generated", "code": "\n    /**\n     * Creates a new instance with the specified number of years added.\n     * <p>\n     * This instance is immutable and unaffected by this method call.\n     * <p>\n     * The years may be negative.\n     * \n     *", "entropy": 0.301025390625, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.90771484375, 0.451904296875, 0.0582275390625, 5.602836608886719e-05, 3.18359375, 0.07025146484375, 0.2216796875, 0.2783203125, 1.484375, 0.46435546875, 0.04437255859375, 0.92578125, 0.0011348724365234375, 0.46533203125, 0.2841796875, 0.16748046875, 0.0182952880859375, 0.0003654956817626953, 0.09014892578125, 0.0006418228149414062, 0.0006585121154785156, 0.0005707740783691406, 1.4901161193847656e-05, 0.23388671875, 0.73828125, 0.0004658699035644531, 0.0001043081283569336, 8.869171142578125e-05, 0.0212860107421875, 0.0005316734313964844, 2.86102294921875e-06, 2.7418136596679688e-05, 0.0016994476318359375, 0.00021886825561523438, 0.0003688335418701172, 0.0008435249328613281, 0.0002608299255371094, 0.9013671875, 0.0002346038818359375, 0.00139617919921875, 0.0003724098205566406, 3.2782554626464844e-05, 0.2489013671875, 0.375732421875, 1.4892578125, 0.00334930419921875, 0.5302734375, 0.42626953125, 0.26904296875, 0.00026106834411621094, 1.2939453125, 2.300739288330078e-05], "tokens": [284, 1022, 275, 319, 9301, 312, 537, 1980, 623, 322, 3191, 1451, 432, 11274, 3640, 32, 275, 319, 333, 98, 48, 275, 319, 1348, 1980, 438, 26055, 461, 707, 31316, 810, 458, 1411, 1476, 32, 275, 319, 333, 98, 48, 275, 319, 886, 11274, 1631, 526, 11003, 32, 275, 319, 5384, 319]}
{"line_number": 1621, "line_type": "original", "code": "        millis += (((long) getHours()) * ((long) DateTimeConstants.MILLIS_PER_HOUR));", "entropy": 0.418701171875, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [5.30859375, 4.171875, 0.08447265625, 0.044677734375, 0.007114410400390625, 0.00028514862060546875, 0.1170654296875, 0.2626953125, 0.0069580078125, 0.00402069091796875, 0.03302001953125, 0.00019228458404541016, 0.0001380443572998047, 0.0031147003173828125, 0.0012655258178710938, 0.00016438961029052734, 1.3709068298339844e-05, 1.9073486328125e-06, 2.384185791015625e-07, 1.0132789611816406e-05, 9.5367431640625e-07, 0.0013523101806640625, 0.00038552284240722656, 0.003143310546875], "tokens": [351, 42302, 1454, 8580, 3222, 27, 622, 14896, 1157, 319, 1833, 3222, 27, 6666, 5229, 32, 63, 13142, 1296, 81, 3687, 81, 30540, 876]}
{"line_number": 1621, "line_type": "generated", "code": "\n\n    /**\n     * Returns the number of complete years in the period.\n     * <p>\n     * This method allows you to extract the number of years from the period.\n     * This is useful for preserving the year part of a date during a month", "entropy": 0.603515625, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [1.5791015625, 0.625, 0.037017822265625, 4.57763671875e-05, 2.095703125, 1.6376953125, 0.73388671875, 0.0006117820739746094, 2.43359375, 0.64013671875, 0.03778076171875, 0.8818359375, 0.0716552734375, 0.21875, 0.04718017578125, 0.0019931793212890625, 0.223388671875, 0.0017843246459960938, 0.0007901191711425781, 0.00013625621795654297, 2.5272369384765625e-05, 0.9130859375, 0.1424560546875, 2.58203125, 0.038543701171875, 0.0011138916015625, 0.242431640625, 0.0211181640625, 0.156005859375, 0.0004303455352783203, 0.45849609375, 0.1243896484375, 0.6044921875, 0.544921875, 0.0211334228515625, 0.0094146728515625, 8.845329284667969e-05, 2.142578125, 2.1484375, 0.45849609375, 1.4501953125, 2.095703125, 0.09344482421875, 0.99365234375, 0.64208984375, 1.2080078125, 0.09130859375, 0.1375732421875, 0.26708984375, 1.5400390625, 0.25048828125, 0.73876953125], "tokens": [446, 1022, 275, 319, 3759, 322, 1451, 432, 6153, 11274, 328, 322, 7918, 32, 275, 319, 333, 98, 48, 275, 319, 1348, 1411, 6972, 844, 372, 6571, 322, 1451, 432, 11274, 645, 322, 7918, 32, 275, 319, 1348, 438, 6364, 436, 1406, 21408, 322, 4947, 1742, 432, 312, 2340, 5929, 312, 6811]}
{"line_number": 1622, "line_type": "original", "code": "        millis += (((long) getDays()) * ((long) DateTimeConstants.MILLIS_PER_DAY));", "entropy": 0.441650390625, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [5.3515625, 4.6015625, 0.112548828125, 0.0302581787109375, 0.0050201416015625, 0.00022029876708984375, 0.033203125, 0.408203125, 0.01227569580078125, 0.004154205322265625, 0.032867431640625, 0.00012540817260742188, 2.7298927307128906e-05, 0.00278472900390625, 0.0010547637939453125, 0.00011205673217773438, 1.1920928955078125e-05, 2.1457672119140625e-06, 2.384185791015625e-07, 9.059906005859375e-06, 8.344650268554688e-07, 0.00162506103515625, 4.9114227294921875e-05, 0.002918243408203125], "tokens": [351, 42302, 1454, 8580, 3222, 27, 622, 11946, 1157, 319, 1833, 3222, 27, 6666, 5229, 32, 63, 13142, 1296, 81, 3687, 81, 14318, 876]}
{"line_number": 1622, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [], "tokens": []}
{"line_number": 1623, "line_type": "original", "code": "        millis += (((long) getWeeks()) * ((long) DateTimeConstants.MILLIS_PER_WEEK));", "entropy": 0.537109375, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [5.7890625, 6.23828125, 0.470703125, 0.069091796875, 0.01458740234375, 0.00044918060302734375, 0.404541015625, 0.198974609375, 0.00012743473052978516, 0.035400390625, 0.00499725341796875, 0.1053466796875, 0.0001653432846069336, 0.00011348724365234375, 0.07745361328125, 0.006038665771484375, 0.00030303001403808594, 0.001621246337890625, 1.6689300537109375e-06, -0.0, 1.3113021850585938e-06, 1.8835067749023438e-05, 0.0020275115966796875, 0.006107330322265625, 0.00588226318359375], "tokens": [351, 42302, 1454, 8580, 3222, 27, 622, 11070, 101, 1157, 319, 1833, 3222, 27, 6666, 5229, 32, 63, 13142, 1296, 81, 3687, 81, 39636, 876]}
{"line_number": 1623, "line_type": "generated", "code": "\n\n    /**\n     * Normalizes this period using standard rules, assuming a 12 month year,\n     * 7 day week, 24 hour day, 60 minute hour and 60 second minute.\n     * <p>\n     *", "entropy": 0.1494140625, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [1.71875, 0.720703125, 0.0322265625, 4.9948692321777344e-05, 2.673828125, 0.00400543212890625, 0.020599365234375, 0.0300445556640625, 0.2305908203125, 0.74755859375, 0.019744873046875, 0.12274169921875, 0.07257080078125, 0.02960205078125, 0.08380126953125, 0.462890625, 0.0264739990234375, 0.0003795623779296875, 0.01464080810546875, 0.0313720703125, 0.005420684814453125, 0.0002617835998535156, 0.0202789306640625, 0.01556396484375, 0.0005965232849121094, 0.00032901763916015625, 0.006237030029296875, 0.0024662017822265625, 0.006610870361328125, 0.00038814544677734375, 0.00026917457580566406, 5.602836608886719e-05, 0.007015228271484375, 0.00534820556640625, 0.0004839897155761719, 5.7220458984375e-06, 0.0001443624496459961, 0.00018966197967529297, 0.013031005859375, 0.0023651123046875, 0.00010657310485839844, 0.00010371208190917969, 0.00018978118896484375, 0.0005483627319335938, 0.56298828125, 0.0216217041015625, 0.0009021759033203125, 0.05487060546875, 0.00010967254638671875, 6.568431854248047e-05, 0.00018131732940673828, 1.6808509826660156e-05], "tokens": [446, 1022, 275, 319, 13574, 5052, 458, 7918, 1471, 6216, 7019, 30, 26933, 312, 225, 35, 36, 6811, 4947, 30, 275, 319, 225, 41, 5808, 8209, 30, 225, 36, 38, 12021, 5808, 30, 225, 40, 34, 16044, 12021, 461, 225, 40, 34, 3100, 16044, 32, 275, 319, 333, 98, 48, 275, 319]}
{"line_number": 1624, "line_type": "original", "code": "        Period result = new Period(millis, type, ISOChronology.getInstanceUTC());", "entropy": 1.4326171875, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [5.5859375, 4.93359375, 1.3173828125, 0.0635986328125, 0.96875, 0.0400390625, 0.1446533203125, 2.25, 0.482421875, 1.376953125, 3.345703125, 5.3671875, 0.779296875, 0.0174560546875, 6.556510925292969e-06, 0.0019741058349609375, 0.005481719970703125, 0.49462890625, 0.037109375], "tokens": [351, 24156, 1056, 280, 537, 24156, 26, 36916, 30, 827, 30, 19687, 828, 2558, 10537, 32, 7426, 15689, 1035]}
{"line_number": 1624, "line_type": "generated", "code": "\n\n    /**\n     * Returns a new instance with each element in the period in years.\n     * <p>\n     * This method allows you to convert between different types of period.\n     * However to achieve this it makes the assumption that all years are\n     *", "entropy": 0.346435546875, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [1.8681640625, 0.5830078125, 0.036376953125, 4.839897155761719e-05, 2.134765625, 0.276611328125, 0.450927734375, 0.195068359375, 0.298828125, 1.1953125, 0.6103515625, 0.28515625, 1.8017578125, 0.1534423828125, 1.8896484375, 1.396484375, 0.83056640625, 0.0082244873046875, 0.00168609619140625, 0.402587890625, 0.002285003662109375, 0.0007433891296386719, 0.00021719932556152344, 2.0384788513183594e-05, 0.427490234375, 0.0928955078125, 0.50830078125, 0.00759124755859375, 0.0015592575073242188, 0.414794921875, 1.3408203125, 0.00557708740234375, 0.43896484375, 0.00014030933380126953, 0.00543975830078125, 0.12176513671875, 0.0026531219482421875, 0.00035643577575683594, 0.0212554931640625, 0.0006051063537597656, 0.0024776458740234375, 6.830692291259766e-05, 0.0006246566772460938, 0.0491943359375, 0.00037288665771484375, 0.0009059906005859375, 0.0010833740234375, 0.0253448486328125, 0.0188140869140625, 0.01447296142578125, 0.08966064453125, 1.5616416931152344e-05], "tokens": [446, 1022, 275, 319, 3759, 312, 537, 1980, 623, 2504, 1994, 328, 322, 7918, 328, 11274, 32, 275, 319, 333, 98, 48, 275, 319, 1348, 1411, 6972, 844, 372, 4483, 3733, 3449, 3738, 432, 7918, 32, 275, 319, 8746, 372, 22209, 458, 561, 7410, 322, 33444, 688, 1169, 11274, 884, 275, 319]}
{"line_number": 445, "line_type": "original", "code": "    }", "entropy": 3.353515625, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [3.43359375, 3.2734375], "tokens": [264, 320]}
{"line_number": 445, "line_type": "generated", "code": "\n\n    /**\n     * Creates a period between the given instants.\n     *\n     * @param startInstant  interval start, in milliseconds\n     * @param endInstant  interval end, in milliseconds\n     * @param type  which set of fields this period supports", "entropy": 0.07080078125, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [1.64453125, 0.04437255859375, 0.00926971435546875, 0.00014197826385498047, 0.022369384765625, 0.0017242431640625, 0.0165557861328125, 0.161376953125, 0.0094757080078125, 0.00400543212890625, 0.00890350341796875, 2.0265579223632812e-06, 0.09893798828125, 0.27099609375, 0.0014276504516601562, 0.08599853515625, 5.5909156799316406e-05, 0.0004520416259765625, 0.0004630088806152344, 0.006961822509765625, 1.041015625, 0.0031948089599609375, 0.0307159423828125, 0.0010986328125, 0.0460205078125, 0.1068115234375, 0.0103912353515625, 0.00862884521484375, 1.7881393432617188e-05, 1.7404556274414062e-05, 1.1920928955078125e-05, 0.0016117095947265625, 0.0030879974365234375, 0.00015282630920410156, 0.0002779960632324219, 0.0033721923828125, 0.0001614093780517578, 0.0005936622619628906, 0.00038504600524902344, 0.0062408447265625, 0.0014543533325195312, 3.445148468017578e-05, 9.34600830078125e-05, 0.0173797607421875, 0.0017042160034179688, 0.0037097930908203125, 0.0004992485046386719, 4.0531158447265625e-05, 0.00040435791015625, 0.0019130706787109375, 0.0005669593811035156, 0.0019702911376953125], "tokens": [446, 1022, 275, 319, 9301, 312, 7918, 3733, 322, 2702, 1440, 2376, 32, 275, 319, 275, 319, 477, 753, 1477, 22183, 225, 7898, 1477, 30, 328, 18574, 275, 319, 477, 753, 943, 22183, 225, 7898, 943, 30, 328, 18574, 275, 319, 477, 753, 827, 225, 1510, 739, 432, 3829, 458, 7918, 9567]}
{"line_number": 444, "line_type": "original", "code": "        super(duration, type, chronology);", "entropy": 1.2197265625, "is_bug_line": false, "sus_score": 0.3216337604513384, "per_token_entropy": [5.296875, 3.35546875, 0.146484375, 2.330078125, 0.1871337890625, 0.50927734375, 0.093017578125, 1.380859375, 0.0005817413330078125, 0.0013952255249023438, 0.12322998046875], "tokens": [351, 2599, 26, 6932, 30, 827, 30, 663, 2558, 10537, 293]}
{"line_number": 444, "line_type": "generated", "code": "\n    /**\n     * Creates a period from the given interval endpoints using the standard\n     * set of fields.\n     *\n     * @param start  interval start, null means now\n     * @param end  interval end, null means now\n     */\n    public Period", "entropy": 0.121826171875, "is_bug_line": false, "sus_score": 0.3216337604513384, "per_token_entropy": [1.16015625, 0.73974609375, 0.1455078125, 0.0004315376281738281, 0.31689453125, 0.00698089599609375, 0.2498779296875, 0.1448974609375, 0.297607421875, 0.33203125, 0.406494140625, 0.0150299072265625, 0.83984375, 0.039520263671875, 0.04266357421875, 0.007770538330078125, 0.00018978118896484375, 0.0026264190673828125, 0.00013625621795654297, 0.0019741058349609375, 0.06549072265625, 0.021759033203125, 0.0021800994873046875, 0.09881591796875, 4.9591064453125e-05, 0.000919342041015625, 0.0010690689086914062, 0.0430908203125, 0.158203125, 0.0184326171875, 0.0008640289306640625, 0.2276611328125, 0.44140625, 0.01226043701171875, 0.2091064453125, 0.0570068359375, 2.0384788513183594e-05, 0.00012576580047607422, 2.8848648071289062e-05, 0.0003132820129394531, 0.00899505615234375, 0.0011997222900390625, 0.00731658935546875, 0.0032024383544921875, 0.007781982421875, 0.0016536712646484375, 0.008453369140625, 0.005252838134765625, 0.1326904296875, 0.011566162109375, 0.0198822021484375, 0.0198516845703125], "tokens": [284, 1022, 275, 319, 9301, 312, 7918, 645, 322, 2702, 7898, 17532, 1471, 322, 6216, 275, 319, 739, 432, 3829, 32, 275, 319, 275, 319, 477, 753, 1477, 225, 7898, 1477, 30, 744, 6058, 2464, 275, 319, 477, 753, 943, 225, 7898, 943, 30, 744, 6058, 2464, 275, 569, 284, 562, 24156]}
{"line_number": 737, "line_type": "original", "code": "        return getPeriodType().getIndexedField(this, PeriodType.YEAR_INDEX);", "entropy": 0.89306640625, "is_bug_line": false, "sus_score": 0.15811388300841897, "per_token_entropy": [6.7578125, 1.466796875, 0.09503173828125, 0.037322998046875, 0.0003044605255126953, 0.0022602081298828125, 0.01519012451171875, 0.006931304931640625, 0.0004420280456542969, 0.0045928955078125, 0.007366180419921875, 0.0006237030029296875, 0.0310516357421875, 0.00026917457580566406, 0.00510406494140625, 8.484375, 0.004161834716796875, 0.0129852294921875, 0.035491943359375], "tokens": [351, 442, 622, 7754, 620, 922, 371, 14775, 1176, 26, 578, 30, 24156, 620, 32, 23164, 81, 9193, 293]}
{"line_number": 737, "line_type": "generated", "code": "\n\n    /**\n     * Gets the seconds field part of the period.\n     * \n     * @return the number of seconds in the period, zero if unsupported\n     */\n    public int getSeconds() {\n        return getPeriodType().getIndexedField(this, Period", "entropy": 0.03643798828125, "is_bug_line": false, "sus_score": 0.15811388300841897, "per_token_entropy": [1.1669921875, 0.1986083984375, 0.1173095703125, 0.0002579689025878906, 0.1334228515625, 0.0005373954772949219, 0.12481689453125, 0.0029048919677734375, 0.0004775524139404297, 8.237361907958984e-05, 8.952617645263672e-05, 0.0007600784301757812, 0.0036602020263671875, 0.0039520263671875, 8.153915405273438e-05, 0.0178070068359375, 8.58306884765625e-06, 0.00019550323486328125, 0.00048613548278808594, 7.677078247070312e-05, 0.00016498565673828125, 5.507469177246094e-05, 0.0052947998046875, 0.000507354736328125, 3.933906555175781e-05, 0.00025963783264160156, 0.0011491775512695312, 0.002391815185546875, 8.45193862915039e-05, 0.0002639293670654297, 0.002361297607421875, 0.003086090087890625, 0.01812744140625, 0.0018777847290039062, 0.002071380615234375, 2.7418136596679688e-06, 0.00015437602996826172, 3.457069396972656e-05, 0.00022542476654052734, 0.07586669921875, 0.00435638427734375, 0.0017414093017578125, 0.00028514862060546875, 9.179115295410156e-06, 3.24249267578125e-05, 0.00031495094299316406, 0.0007119178771972656, 2.1457672119140625e-05, 2.6345252990722656e-05, 0.00017595291137695312, 1.0251998901367188e-05, 0.0011892318725585938], "tokens": [446, 1022, 275, 319, 7124, 322, 6791, 1600, 1742, 432, 322, 7918, 32, 275, 319, 5384, 319, 477, 601, 322, 1451, 432, 6791, 328, 322, 7918, 30, 5934, 415, 26877, 275, 569, 284, 562, 629, 622, 9023, 346, 301, 291, 442, 622, 7754, 620, 922, 371, 14775, 1176, 26, 578, 30, 24156]}
{"line_number": 746, "line_type": "original", "code": "        return getPeriodType().getIndexedField(this, PeriodType.MONTH_INDEX);", "entropy": 0.80517578125, "is_bug_line": false, "sus_score": 0.15811388300841897, "per_token_entropy": [6.75390625, 1.966796875, 0.1376953125, 0.0221099853515625, 0.00043201446533203125, 0.0017938613891601562, 0.01288604736328125, 0.0059814453125, 0.0010776519775390625, 0.0033740997314453125, 0.0094146728515625, 0.0006113052368164062, 0.0271148681640625, 0.0005655288696289062, 0.006748199462890625, 6.3203125, 0.0046539306640625, 0.0028896331787109375, 0.0201416015625], "tokens": [351, 442, 622, 7754, 620, 922, 371, 14775, 1176, 26, 578, 30, 24156, 620, 32, 22846, 81, 9193, 293]}
{"line_number": 746, "line_type": "generated", "code": "\n\n    /**\n     * Gets the millis field part of the period.\n     * \n     * @return the number of millis in the period, zero if unsupported\n     */\n    public int getMillis() {\n        return getPeriodType().getIndexedField(this, Period", "entropy": 0.0535888671875, "is_bug_line": false, "sus_score": 0.15811388300841897, "per_token_entropy": [1.3486328125, 0.446533203125, 0.0875244140625, 0.00024008750915527344, 0.329833984375, 0.003055572509765625, 0.0643310546875, 0.009429931640625, 0.00388336181640625, 0.00031065940856933594, 0.00043702125549316406, 0.005046844482421875, 0.007762908935546875, 0.00557708740234375, 0.0001214742660522461, 0.03167724609375, 8.463859558105469e-06, 0.0005888938903808594, 0.0009717941284179688, 0.000820159912109375, 0.0024280548095703125, 0.00020313262939453125, 0.29541015625, 0.006031036376953125, 6.61611557006836e-05, 0.0009860992431640625, 0.00391387939453125, 0.0039215087890625, 0.00020253658294677734, 0.0005946159362792969, 0.00373077392578125, 0.0084991455078125, 0.0186614990234375, 0.003192901611328125, 0.0109100341796875, 6.091594696044922e-05, 8.511543273925781e-05, 0.0025787353515625, 0.00091552734375, 0.05694580078125, 0.00785064697265625, 0.0027904510498046875, 0.0009260177612304688, 2.1696090698242188e-05, 4.6133995056152344e-05, 0.0003170967102050781, 0.00046634674072265625, 0.00018513202667236328, 0.00022864341735839844, 0.00033354759216308594, 0.00022280216217041016, 0.008392333984375], "tokens": [446, 1022, 275, 319, 7124, 322, 42302, 1600, 1742, 432, 322, 7918, 32, 275, 319, 5384, 319, 477, 601, 322, 1451, 432, 42302, 328, 322, 7918, 30, 5934, 415, 26877, 275, 569, 284, 562, 629, 622, 10906, 346, 301, 291, 442, 622, 7754, 620, 922, 371, 14775, 1176, 26, 578, 30, 24156]}
