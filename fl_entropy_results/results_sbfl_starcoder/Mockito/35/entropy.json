{"line_number": 362, "line_type": "original", "code": "        return reportMatcher(new InstanceOf(clazz)).<T>returnNull();", "entropy": 2.240234375, "is_bug_line": true, "sus_score": 0.2886751345948129, "per_token_entropy": [4.03515625, 1.2685546875, 0.8623046875, 0.00830841064453125, 0.004016876220703125, 0.007045745849609375, 10.4609375, 0.11212158203125, 0.047027587890625, 3.9375, 0.159423828125, 4.453125, 10.046875, 0.431640625, 0.254638671875, 1.9560546875, 0.03778076171875], "tokens": [351, 442, 3639, 11945, 26, 890, 11617, 1419, 26, 20966, 3427, 46, 70, 48, 601, 1883, 473]}
{"line_number": 362, "line_type": "generated", "code": "\n    }\n\n    /**\n     * float argument that is equal to the given value.\n     * <p>\n     * See examples in javadoc for {@link Matchers} class\n     * \n     * @param value\n     *            the given value.\n     * @return", "entropy": 0.01383209228515625, "is_bug_line": true, "sus_score": 0.2886751345948129, "per_token_entropy": [0.364501953125, 0.083984375, 0.109375, 0.007732391357421875, 0.006771087646484375, 0.00012242794036865234, 0.10931396484375, 0.000347137451171875, 0.00019466876983642578, 0.00013697147369384766, 0.000514984130859375, 2.7060508728027344e-05, 0.00021922588348388672, 5.6624412536621094e-05, 0.0002472400665283203, 0.001708984375, 0.005161285400390625, 3.4809112548828125e-05, 0.00478363037109375, 6.830692291259766e-05, 2.6226043701171875e-05, 0.0016269683837890625, 2.288818359375e-05, 0.001232147216796875, 0.00016582012176513672, 2.4199485778808594e-05, 5.435943603515625e-05, 2.300739288330078e-05, 1.33514404296875e-05, 4.76837158203125e-07, 1.7404556274414062e-05, 1.1920928955078125e-06, 9.417533874511719e-06, 6.520748138427734e-05, 0.0015516281127929688, 0.00010848045349121094, 0.0019168853759765625, 1.3113021850585938e-05, 0.00016176700592041016, 0.00015115737915039062, 0.0006585121154785156, 0.0015468597412109375, 3.898143768310547e-05, 0.0003745555877685547, 0.0002193450927734375, 9.381771087646484e-05, 0.00018703937530517578, 0.0003647804260253906, 0.01287841796875, 0.00016105175018310547, 0.0002727508544921875, 5.3763389587402344e-05], "tokens": [284, 320, 446, 1022, 275, 319, 1897, 2793, 688, 438, 5040, 372, 322, 2702, 786, 32, 275, 319, 333, 98, 48, 275, 319, 2802, 8272, 328, 44070, 436, 3088, 1204, 12253, 483, 111, 443, 275, 319, 5384, 319, 477, 753, 786, 275, 319, 1468, 322, 2702, 786, 32, 275, 319, 477, 601]}
{"line_number": 516, "line_type": "original", "code": "        return reportMatcher(new Same(value)).<T>returnNull();", "entropy": 1.9482421875, "is_bug_line": true, "sus_score": 0.23570226039551587, "per_token_entropy": [4.5390625, 0.2271728515625, 1.73046875, 0.004909515380859375, 0.012176513671875, 0.2012939453125, 11.9765625, 0.80615234375, 7.3828125, 0.1937255859375, 1.9716796875, 1.982421875, 0.004604339599609375, 0.01294708251953125, 0.11328125, 0.0053863525390625], "tokens": [351, 442, 3639, 11945, 26, 890, 18993, 26, 853, 3427, 46, 70, 48, 601, 1883, 473]}
{"line_number": 516, "line_type": "generated", "code": "\n    }\n\n    /**\n     * String argument that starts with the given prefix.\n     * <p>\n     * See examples in javadoc for {@link Matchers} class\n     * \n     * @param prefix\n     *            the prefix.\n     * @return empty String", "entropy": 0.053924560546875, "is_bug_line": true, "sus_score": 0.23570226039551587, "per_token_entropy": [0.30322265625, 0.0009274482727050781, 0.1563720703125, 0.0087432861328125, 0.003475189208984375, 3.325939178466797e-05, 0.2181396484375, 0.008636474609375, 0.034332275390625, 1.208984375, 0.0021877288818359375, 0.07244873046875, 0.0055694580078125, 0.438720703125, 0.0228271484375, 0.0021762847900390625, 8.106231689453125e-06, 0.0100860595703125, 0.00013887882232666016, 0.00011146068572998047, 0.0005116462707519531, 1.7642974853515625e-05, 0.005985260009765625, 0.00179290771484375, 1.621246337890625e-05, 5.710124969482422e-05, 3.8623809814453125e-05, 3.361701965332031e-05, 7.033348083496094e-06, 6.866455078125e-05, -0.0, 2.2172927856445312e-05, 9.059906005859375e-06, 0.0015935897827148438, 0.00010967254638671875, 0.002689361572265625, 2.86102294921875e-05, 0.0010280609130859375, 0.0006089210510253906, 0.005340576171875, 0.003143310546875, 5.364418029785156e-06, 0.0013332366943359375, 0.01201629638671875, 0.0946044921875, 0.0665283203125, 0.0009860992431640625, 4.00543212890625e-05, 0.0011196136474609375, 0.0004513263702392578, 0.0987548828125, 0.0083465576171875], "tokens": [284, 320, 446, 1022, 275, 319, 892, 2793, 688, 11187, 623, 322, 2702, 5202, 32, 275, 319, 333, 98, 48, 275, 319, 2802, 8272, 328, 44070, 436, 3088, 1204, 12253, 483, 111, 443, 275, 319, 5384, 319, 477, 753, 5202, 275, 319, 1468, 322, 5202, 32, 275, 319, 477, 601, 3502, 892]}
{"line_number": 717, "line_type": "original", "code": "        return mockingProgress.getArgumentMatcherStorage().reportMatcher(matcher);", "entropy": 1.474609375, "is_bug_line": false, "sus_score": 0.1811308890005546, "per_token_entropy": [6.375, 0.80615234375, 7.73828125, 3.15234375, 3.375, 0.10174560546875, 1.58203125, 0.0341796875, 0.040374755859375, 0.00862884521484375, 0.06707763671875, 0.114501953125, 0.0045623779296875, 0.02349853515625, 0.08538818359375, 0.08734130859375], "tokens": [351, 442, 4395, 299, 5280, 32, 371, 3484, 11945, 3566, 922, 3734, 11945, 26, 16937, 293]}
{"line_number": 717, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.1811308890005546, "per_token_entropy": [], "tokens": []}
{"line_number": 479, "line_type": "original", "code": "        return reportMatcher(new Equals(value)).<T>returnNull();", "entropy": 1.119140625, "is_bug_line": true, "sus_score": 0.10540925533894598, "per_token_entropy": [5.87890625, 3.888671875, 1.3671875, 0.0302734375, 0.0435791015625, 0.322998046875, 3.669921875, 0.113525390625, 0.330078125, 0.175048828125, 1.9736328125, 0.0843505859375, 0.00395965576171875, 0.0087432861328125, 0.01349639892578125, 0.005870819091796875], "tokens": [351, 442, 3639, 11945, 26, 890, 21697, 26, 853, 3427, 46, 70, 48, 601, 1883, 473]}
{"line_number": 479, "line_type": "generated", "code": "\n    /**\n     * Object argument that is not null.\n     * <p>\n     * See examples in javadoc for {@link Matchers} class\n     * \n     * @return <code>null</code>.\n     */\n    public static Object notNull() {", "entropy": 0.1531982421875, "is_bug_line": true, "sus_score": 0.10540925533894598, "per_token_entropy": [1.2578125, 0.1180419921875, 0.0281982421875, 0.0001266002655029297, 1.85546875, 0.0234832763671875, 0.04266357421875, 0.12127685546875, 1.11328125, 0.66943359375, 0.06280517578125, 0.00936126708984375, 0.00032067298889160156, 0.016632080078125, 0.00027251243591308594, 0.00014734268188476562, 0.0003783702850341797, 1.0371208190917969e-05, 0.0234832763671875, 0.0016632080078125, 4.589557647705078e-05, 0.00010991096496582031, 8.654594421386719e-05, 9.465217590332031e-05, 1.7881393432617188e-06, 0.00017762184143066406, 6.079673767089844e-06, 2.181529998779297e-05, 9.036064147949219e-05, 0.005802154541015625, 0.0034770965576171875, 0.01358795166015625, 6.854534149169922e-05, 0.0030078887939453125, 0.54345703125, 0.38916015625, 0.0175018310546875, 0.00452423095703125, 0.3134765625, 0.00033211708068847656, 7.140636444091797e-05, 0.01641845703125, 0.00238800048828125, 0.0215911865234375, 0.0218658447265625, 0.01416778564453125, 0.00335693359375, 0.8603515625, 0.11419677734375, 0.26953125, 0.0011339187622070312, 0.005290985107421875], "tokens": [284, 1022, 275, 319, 2194, 2793, 688, 438, 646, 744, 32, 275, 319, 333, 98, 48, 275, 319, 2802, 8272, 328, 44070, 436, 3088, 1204, 12253, 483, 111, 443, 275, 319, 5384, 319, 477, 601, 333, 687, 48, 1693, 377, 687, 4503, 275, 569, 284, 562, 907, 2194, 646, 1883, 346, 301]}
{"line_number": 193, "line_type": "original", "code": "        return (T) reportMatcher(Any.ANY).returnNull();", "entropy": 0.53564453125, "is_bug_line": false, "sus_score": 0.08512565307587486, "per_token_entropy": [4.4375, 1.306640625, 0.64404296875, 0.014129638671875, 0.006488800048828125, 1.173828125, 0.0020885467529296875, 0.034881591796875, 0.1649169921875, 0.099365234375, 0.005191802978515625, 0.0771484375, 0.0233306884765625, 0.022674560546875, 0.0154266357421875], "tokens": [351, 442, 308, 70, 27, 3639, 11945, 26, 4277, 32, 15205, 547, 601, 1883, 473]}
{"line_number": 193, "line_type": "generated", "code": "\n     * @return <code>null</code>.\n     */\n    public static <T> T any() {\n        return anyObject();\n    }", "entropy": 0.241943359375, "is_bug_line": false, "sus_score": 0.08512565307587486, "per_token_entropy": [0.484130859375, 0.2218017578125, 1.828125, 0.28125, 0.31591796875, 0.025665283203125, 0.00299835205078125, 0.05975341796875, 0.0017681121826171875, 0.0014553070068359375, 0.103759765625, 0.06298828125, 0.0738525390625, 0.11834716796875, 0.1463623046875, 0.0281829833984375, 0.324951171875, 0.01303863525390625, 0.02862548828125, 0.01058197021484375, 0.2340087890625, 1.0068359375, 0.01128387451171875, 0.214111328125, 0.036651611328125, 1.478515625, 0.09588623046875, 0.0019330978393554688, 0.039459228515625, 0.003726959228515625], "tokens": [275, 319, 477, 601, 333, 687, 48, 1693, 377, 687, 4503, 275, 569, 284, 562, 907, 333, 70, 48, 394, 1346, 346, 301, 291, 442, 1346, 959, 473, 284, 320]}
