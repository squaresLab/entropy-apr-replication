{"line_number": 667, "line_type": "original", "code": "        throw new MockitoException(join(", "entropy": 1.41015625, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [4.9140625, 4.90625, 0.01042938232421875, 0.5673828125, 0.0223541259765625, 0.06683349609375, 0.2357177734375, 0.5546875], "tokens": [351, 1422, 537, 26316, 984, 26, 2524, 26]}
{"line_number": 667, "line_type": "generated", "code": "\n    public void invalidUseOfMatchersInReturnedValues() {\n        throw new MockitoException(join(\n                \"You cannot use argument matchers in returned values.\",\n                \"Please use primitive types (int, boolean,...), String constant or create your own matcher", "entropy": 0.6767578125, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [0.444580078125, 0.59228515625, 0.4228515625, 1.515625, 1.939453125, 0.00470733642578125, 0.38427734375, 2.435546875, 2.369140625, 0.96484375, 0.826171875, 0.01171112060546875, 0.07086181640625, 0.043792724609375, 0.005352020263671875, 0.5126953125, 0.007740020751953125, 0.1263427734375, 0.1044921875, 0.5390625, 0.058746337890625, 0.090087890625, 2.0703125, 1.015625, 0.21875, 0.62451171875, 0.0053558349609375, 1.8477439880371094e-05, 1.4375, 0.1273193359375, 0.0667724609375, 1.107421875, 0.009490966796875, 0.05487060546875, 1.5244140625, 0.094482421875, 1.376953125, 0.75439453125, 2.46875, 1.0283203125, 0.03643798828125, 0.37841796875, 0.10797119140625, 1.2412109375, 0.1351318359375, 0.365478515625, 1.68359375, 0.2176513671875, 1.52734375, 1.3837890625, 0.0012674331665039062, 0.658203125], "tokens": [284, 562, 763, 5535, 4391, 1419, 17367, 383, 35104, 3354, 346, 301, 291, 1422, 537, 26316, 984, 26, 2524, 26, 400, 313, 4282, 4881, 793, 2793, 2530, 483, 328, 4717, 2078, 4414, 400, 313, 6574, 793, 17148, 3738, 308, 410, 30, 1905, 30, 2417, 471, 892, 8082, 556, 1487, 1370, 4369, 20638]}
{"line_number": 668, "line_type": "original", "code": "                \"Mockito couldn't inject mock dependency '\" + safelyGetMockName(matchingMock) + \"' on field \",", "entropy": 3.3125, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [6.21875, 6.2265625, 8.8671875, 5.9765625, 0.007129669189453125, 9.6171875, 4.4140625, 6.5078125, 7.53125, 0.056640625, 3.65234375, 0.0174560546875, 0.015533447265625, 0.01544189453125, 0.0083160400390625, 5.69921875, 0.1693115234375, 0.09588623046875, 0.091064453125, 0.951171875, 4.3515625, 0.3642578125, 5.31640625], "tokens": [2071, 313, 17091, 18497, 1330, 12202, 4395, 8450, 6113, 474, 31484, 936, 3660, 558, 26, 19807, 3660, 27, 474, 5335, 544, 1600, 3003]}
{"line_number": 668, "line_type": "generated", "code": "\n        return new StringBuilder(join(\"possible argument types are: \",\n                join(\n                        invocation.getMethod().getParameterTypes(),\n                        new Function<Class<?>, String>() {\n                            public String apply(Class<?> aClass) {\n                                return aClass.getSimpleName();", "entropy": 0.467529296875, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [0.392822265625, 0.76904296875, 0.247314453125, 0.0335693359375, 1.6142578125, 1.0654296875, 1.001953125, 1.9453125, 0.26171875, 0.081298828125, 0.397705078125, 1.1220703125, 0.53759765625, 0.54052734375, 2.341796875, 0.5703125, 2.390625, 1.1474609375, 0.02410888671875, 0.404052734375, 0.0181884765625, 0.35498046875, 0.006504058837890625, 0.654296875, 0.138427734375, 0.91015625, 0.54443359375, 0.08294677734375, 0.025604248046875, 0.283203125, 0.0212554931640625, 0.138427734375, 0.006061553955078125, 0.0026645660400390625, 0.0855712890625, 0.310302734375, 0.0023956298828125, 0.0013828277587890625, 0.00469970703125, 0.0078887939453125, 0.052276611328125, 2.30859375, 0.035980224609375, 0.0013608932495117188, 0.0007266998291015625, 0.037017822265625, 0.030426025390625, 0.7900390625, 0.0009241104125976562, 0.04168701171875, 0.448974609375, 0.08209228515625], "tokens": [291, 442, 537, 9706, 26, 2524, 440, 20000, 2793, 3738, 884, 44, 3003, 400, 7140, 26, 715, 18595, 32, 27878, 922, 17761, 2424, 1026, 715, 537, 4540, 46, 1339, 1888, 2717, 892, 6940, 301, 1014, 562, 892, 4871, 26, 1339, 11674, 312, 1339, 27, 301, 1378, 442, 312, 1339, 32, 27035, 473]}
{"line_number": 670, "line_type": "original", "code": "                \"whose type '\" + field.getDeclaringClass().getCanonicalName() + \"' was annotated by @InjectMocks in your test.\",", "entropy": 2.578125, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [5.05859375, 5.76953125, 10.6640625, 0.318115234375, 2.205078125, 8.84375, 0.00571441650390625, 9.7109375, 0.1424560546875, 3.205078125, 0.376220703125, 7.843971252441406e-05, 0.00337982177734375, 0.468505859375, 4.53125, 0.00039958953857421875, 0.0225067138671875, 0.0440673828125, 0.188720703125, 3.8125, 3.357421875, 2.45703125, 0.4951171875, 0.41748046875, 0.00039267539978027344, 5.76171875, 5.2265625, 0.01385498046875, 1.6455078125], "tokens": [2071, 313, 1354, 2475, 827, 6113, 474, 1600, 32, 371, 5484, 6992, 1339, 922, 47956, 558, 346, 474, 5335, 1597, 30395, 810, 477, 8826, 32628, 328, 1370, 894, 4414]}
{"line_number": 670, "line_type": "generated", "code": "\n            return new StringBuilder(\"This method has no parameters\");\n        }\n        return new StringBuilder(\"Possible argument types are: \").append(join(parameterTypes));\n    }\n\n    public void invalidArgumentRangeAtInvocationTime(InvocationOnMock invocation, boolean willReturnLast", "entropy": 0.499755859375, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [0.26318359375, 0.08367919921875, 0.0697021484375, 0.01043701171875, 0.32861328125, 2.873046875, 0.1007080078125, 1.638671875, 0.0416259765625, 1.2568359375, 1.0, 0.21142578125, 0.003261566162109375, 1.0185546875, 0.81494140625, 0.10321044921875, 0.005828857421875, 0.248779296875, 2.00390625, 0.8671875, 0.06243896484375, 0.328125, 0.798828125, 1.3720703125, 0.052459716796875, 0.052703857421875, 2.02734375, 1.265625, 0.456298828125, 0.0123748779296875, 0.67138671875, 0.05230712890625, 0.0007386207580566406, 0.1522216796875, 0.072509765625, 0.3173828125, 1.3837890625, 1.625, 0.206298828125, 0.161376953125, 0.461669921875, 0.003604888916015625, 0.1890869140625, 0.2452392578125, 0.0221099853515625, 2.47955322265625e-05, 0.00453948974609375, 0.194091796875, 0.62744140625, 0.2100830078125, 0.007076263427734375, 0.0080718994140625], "tokens": [324, 442, 537, 9706, 440, 2272, 1411, 1401, 1289, 3377, 724, 291, 320, 291, 442, 537, 9706, 440, 23708, 2793, 3738, 884, 44, 18276, 1689, 26, 2524, 26, 5609, 2424, 876, 284, 320, 446, 562, 763, 5535, 3484, 3198, 1076, 13784, 1043, 26, 13784, 1484, 3660, 18595, 30, 1905, 1098, 2891, 3267]}
{"line_number": 671, "line_type": "original", "code": "                \"Also I failed because: \" + exceptionCauseMessageIfAvailable(details),", "entropy": 2.60546875, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [6.734375, 5.1171875, 8.0546875, 5.828125, 4.73046875, 3.986328125, 1.8076171875, 0.56884765625, 0.043426513671875, 3.291015625, 0.0165252685546875, 0.0081939697265625, 0.007259368896484375, 0.000682830810546875, 0.08099365234375, 2.75390625, 1.25390625], "tokens": [2071, 313, 12938, 439, 3803, 3301, 44, 313, 474, 3756, 19211, 1175, 2797, 8589, 26, 3958, 471]}
{"line_number": 671, "line_type": "generated", "code": "\n        }\n        return new StringBuilder(\"the method has \" + parameterTypes.length + \" argument(s) of types : \" + Arrays.toString(parameterTypes) + \"\\n\");\n    }\n\n    public void invalidRangeOfReturnedValuesAtInvocationTime(", "entropy": 0.45751953125, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [0.1876220703125, 0.03271484375, 0.68310546875, 0.71826171875, 0.11090087890625, 0.006374359130859375, 0.31005859375, 0.62841796875, 0.408203125, 0.6875, 0.93701171875, 0.0184326171875, 0.03338623046875, 0.0003170967102050781, 0.00372314453125, 0.00031638145446777344, 0.0298614501953125, 0.0178680419921875, 1.4130859375, 0.256103515625, 0.00010907649993896484, 0.9140625, 0.1531982421875, 0.5107421875, 0.99267578125, 1.7861328125, 0.1763916015625, 1.1982421875, 0.007965087890625, 0.4296875, 0.002483367919921875, 0.0185546875, 4.398822784423828e-05, 0.262939453125, 0.0235443115234375, 1.1181640625, 0.0006504058837890625, 0.0863037109375, 0.362060546875, 0.0017232894897460938, 0.18310546875, 0.07708740234375, 0.32666015625, 1.3076171875, 2.009765625, 2.142578125, 0.9453125, 0.5234375, 1.0625, 0.4677734375, 0.0208282470703125, 0.200927734375], "tokens": [291, 320, 291, 442, 537, 9706, 440, 1382, 1411, 1401, 313, 474, 3395, 2424, 32, 1322, 474, 313, 2793, 26, 101, 27, 432, 3738, 499, 313, 474, 14473, 32, 3108, 26, 5609, 2424, 27, 474, 2706, 96, 724, 284, 320, 446, 562, 763, 5535, 3198, 1419, 35104, 3354, 1076, 13784, 1043, 26]}
{"line_number": 677, "line_type": "original", "code": "        return details.getCause().getMessage();", "entropy": 2.77734375, "is_bug_line": true, "sus_score": 0.3333333333333333, "per_token_entropy": [3.017578125, 2.853515625, 9.09375, 2.97265625, 5.12109375, 8.106231689453125e-06, 1.1708984375, 0.6337890625, 0.137939453125], "tokens": [351, 442, 4245, 32, 11640, 2520, 922, 7719, 473]}
{"line_number": 677, "line_type": "generated", "code": "\n        }\n        return stringBuilder;\n    }\n\n    public void invalidRangeOfReturnedValuesAtInvocationTime(InvocationOnMock invocation, int wantedCount) {\n        throw new MockitoException(join(\"Invalid wanted count for the current invocation of method : \",\n                \" ->", "entropy": 0.390869140625, "is_bug_line": true, "sus_score": 0.3333333333333333, "per_token_entropy": [1.1650390625, 0.08447265625, 0.392333984375, 0.04278564453125, 0.09259033203125, 0.11297607421875, 0.026824951171875, 0.0005502700805664062, 0.1932373046875, 0.07879638671875, 0.31689453125, 1.505859375, 1.8740234375, 2.1796875, 0.92529296875, 0.388671875, 1.0224609375, 0.53125, 0.020416259765625, 0.1837158203125, 0.421142578125, 0.018157958984375, 0.0003325939178466797, 0.01372528076171875, 0.350341796875, 0.51025390625, 0.95068359375, 1.9609375, 0.73974609375, 0.00390625, 0.042938232421875, 0.10943603515625, 0.0062255859375, 0.11431884765625, 0.003997802734375, 0.0281829833984375, 0.50537109375, 0.6201171875, 0.12646484375, 0.334716796875, 0.302490234375, 1.28125, 0.13330078125, 0.053314208984375, 0.0204925537109375, 0.1142578125, 0.03759765625, 0.0709228515625, 0.10614013671875, 0.12359619140625, 0.035247802734375, 0.045196533203125], "tokens": [291, 320, 291, 442, 41546, 45, 284, 320, 446, 562, 763, 5535, 3198, 1419, 35104, 3354, 1076, 13784, 1043, 26, 13784, 1484, 3660, 18595, 30, 629, 13562, 1534, 27, 301, 291, 1422, 537, 26316, 984, 26, 2524, 440, 3817, 13562, 2385, 436, 322, 1550, 18595, 432, 1411, 499, 3003, 400, 313, 967]}
{"line_number": 431, "line_type": "original", "code": "        throw new VerificationInOrderFailure(join(", "entropy": 1.859375, "is_bug_line": true, "sus_score": 0.13608276348795434, "per_token_entropy": [4.21875, 9.1875, 0.053558349609375, 4.63671875, 0.247314453125, 0.0001442432403564453, 0.0004572868347167969, 0.1697998046875, 0.05889892578125, 0.0191497802734375], "tokens": [351, 1422, 537, 41553, 383, 2871, 7961, 26, 2524, 26]}
{"line_number": 431, "line_type": "generated", "code": "\n                \"Return value type is \" + expectedType + \" but \" + actualType + \" was returned.\",\n                \"***\",\n                \"If you're unsure why you're getting above error read on.\",\n                \"Due to the nature of the syntax above problem", "entropy": 0.1971435546875, "is_bug_line": true, "sus_score": 0.13608276348795434, "per_token_entropy": [0.256103515625, 0.176513671875, 1.4560546875, 0.70458984375, 0.59814453125, 0.19873046875, 0.9296875, 0.005046844482421875, 0.72119140625, 0.0001881122589111328, 0.5556640625, 0.36376953125, 0.330322265625, 0.04852294921875, 0.0163116455078125, 0.038482666015625, 1.4066696166992188e-05, 0.0290985107421875, 0.00823974609375, 0.16357421875, 0.18896484375, 1.9072265625, 0.1414794921875, 0.270751953125, 0.5859375, 0.0273284912109375, 0.0095062255859375, 0.04486083984375, 0.34521484375, 0.00010597705841064453, 0.005954742431640625, 0.01288604736328125, 0.000926971435546875, 0.0321044921875, 0.0005707740783691406, 0.0021820068359375, 0.0036106109619140625, 0.0007891654968261719, 0.0042724609375, 0.00018477439880371094, 0.01471710205078125, 0.00621795654296875, 0.01995849609375, 0.016021728515625, 5.9604644775390625e-06, 0.0004146099090576172, 0.0015039443969726562, 5.245208740234375e-05, 0.0022754669189453125, 0.004329681396484375, 0.000156402587890625, 0.0002834796905517578], "tokens": [400, 313, 2891, 786, 827, 438, 313, 474, 2799, 620, 474, 313, 1273, 313, 474, 4648, 620, 474, 313, 1597, 4717, 4414, 400, 313, 8133, 392, 400, 313, 2797, 844, 4484, 44325, 6916, 844, 4484, 7867, 3684, 1048, 1491, 544, 4414, 400, 313, 24348, 372, 322, 24406, 432, 322, 8345, 3684, 3708]}
{"line_number": 434, "line_type": "original", "code": "                \"But found this interaction on mock '\" + undesired.getMock() + \"':\",", "entropy": 1.689453125, "is_bug_line": false, "sus_score": 0.13608276348795434, "per_token_entropy": [5.2109375, 0.27099609375, 6.45703125, 5.02734375, 4.67578125, 9.15625, 0.004520416259765625, 0.005908966064453125, 0.1025390625, 0.00971221923828125, 1.0771484375, 0.0005526542663574219, 0.00885009765625, 0.003742218017578125, 0.01157379150390625, 0.002780914306640625, 0.033233642578125, 0.0022296905517578125, 0.041015625], "tokens": [2071, 313, 11275, 2431, 458, 15994, 544, 4395, 6113, 474, 707, 23777, 32, 35499, 346, 474, 313, 950, 392]}
{"line_number": 434, "line_type": "generated", "code": "\n                \"Due to the nature of the syntax above problem might occur because:\",\n                \"1. This exception *might* occur in wrongly written multi-threaded tests.\",\n                \"   Please refer to Mockito FAQ on limitations of concurrency.\",\n                \"2.", "entropy": 0.08563232421875, "is_bug_line": false, "sus_score": 0.13608276348795434, "per_token_entropy": [0.2025146484375, 0.2236328125, 0.37841796875, 2.5987625122070312e-05, 0.00020492076873779297, 0.00939178466796875, 0.00018322467803955078, 0.01560211181640625, 0.0013265609741210938, 7.855892181396484e-05, 0.0006957054138183594, 0.0035457611083984375, 0.0005116462707519531, 0.0009851455688476562, 0.0360107421875, 0.06304931640625, 0.0865478515625, 0.01019287109375, 0.0106658935546875, 0.0030689239501953125, 0.10064697265625, 0.014923095703125, 0.0003178119659423828, 2.9802322387695312e-06, 0.0274505615234375, 0.1805419921875, 0.07135009765625, 0.035614013671875, 0.1619873046875, 0.0217132568359375, 0.105712890625, 0.001148223876953125, 0.00016188621520996094, 0.0020809173583984375, 0.426025390625, 0.032135009765625, 0.0186004638671875, 0.57421875, 0.032958984375, 0.0006680488586425781, 0.00017082691192626953, 0.021728515625, 0.0263824462890625, 0.0521240234375, 0.06719970703125, 0.0017271041870117188, 0.0260772705078125, 1.119140625, 0.08111572265625, 0.1478271484375, 0.034454345703125, 0.0194854736328125], "tokens": [400, 313, 24348, 372, 322, 24406, 432, 322, 8345, 3684, 3708, 4796, 13791, 3301, 9318, 400, 313, 35, 32, 1348, 3756, 319, 95, 694, 28, 13791, 328, 6643, 631, 6638, 6959, 31, 36803, 3312, 4414, 400, 313, 261, 5294, 5279, 372, 26316, 36664, 544, 5183, 432, 35785, 4414, 400, 313, 36, 32]}
{"line_number": 418, "line_type": "original", "code": "        ScenarioPrinter scenarioPrinter = new ScenarioPrinter();", "entropy": 1.7578125, "is_bug_line": false, "sus_score": 0.1259881576697424, "per_token_entropy": [4.0546875, 10.703125, 0.0175628662109375, 1.259765625, 0.0206451416015625, 0.9052734375, 0.037139892578125, 0.0112457275390625, 0.00023984909057617188, 0.56298828125], "tokens": [351, 34394, 14384, 13174, 14384, 280, 537, 34394, 14384, 473]}
{"line_number": 418, "line_type": "generated", "code": "\n                \"Only void methods can be set to do nothing.\",\n                \"***\",\n                \"If you're unsure why you're getting above error read on.\",\n                \"Due to the nature of the syntax above problem might occur because:\",\n                \"1. This method", "entropy": 0.147216796875, "is_bug_line": false, "sus_score": 0.1259881576697424, "per_token_entropy": [0.9365234375, 0.282470703125, 1.658203125, 0.043304443359375, 0.011932373046875, 0.294189453125, 0.1590576171875, 0.173828125, 0.012664794921875, 0.00421905517578125, 0.409912109375, 1.228515625, 0.024627685546875, 0.12237548828125, 0.2320556640625, 0.061920166015625, 0.01267242431640625, 0.057373046875, 0.79248046875, 0.0005788803100585938, 0.0017671585083007812, 0.0191497802734375, 0.0001016855239868164, 0.000347137451171875, 0.0022220611572265625, 0.002208709716796875, 0.003376007080078125, 0.0003039836883544922, 0.001140594482421875, 0.00017845630645751953, 0.024505615234375, 0.005283355712890625, 0.024688720703125, 0.004268646240234375, 6.556510925292969e-06, 0.0005297660827636719, 0.0018281936645507812, 2.8848648071289062e-05, 0.00025653839111328125, 0.0024242401123046875, 0.0005846023559570312, 0.0010547637939453125, 0.005077362060546875, 0.0003647804260253906, 0.00016701221466064453, 0.0084686279296875, 0.0018110275268554688, 0.035491943359375, 0.00867462158203125, 0.002727508544921875, 0.3349609375, 0.64501953125], "tokens": [400, 313, 4495, 763, 4438, 883, 526, 739, 372, 745, 7553, 4414, 400, 313, 8133, 392, 400, 313, 2797, 844, 4484, 44325, 6916, 844, 4484, 7867, 3684, 1048, 1491, 544, 4414, 400, 313, 24348, 372, 322, 24406, 432, 322, 8345, 3684, 3708, 4796, 13791, 3301, 9318, 400, 313, 35, 32, 1348, 1411]}
{"line_number": 419, "line_type": "original", "code": "        String scenario = scenarioPrinter.print(invocations);", "entropy": 1.6689453125, "is_bug_line": false, "sus_score": 0.1259881576697424, "per_token_entropy": [4.37890625, 7.8671875, 6.23046875, 0.296875, 0.061126708984375, 0.0092315673828125, 0.007740020751953125, 0.609375, 0.15234375, 0.266357421875, 0.0002503395080566406, 0.1575927734375], "tokens": [351, 892, 13174, 280, 13174, 14384, 32, 1216, 26, 5817, 32567, 293]}
{"line_number": 419, "line_type": "generated", "code": "\n        ));\n    }\n\n    public void cannotVerifyStubbedVoidMethod() {\n        throw new MockitoException(join(\n                \"Void method cannot be verified!\",\n                \"You will need to use doNothing() instead:\",\n                \"    doNothing().when(mock", "entropy": 0.269775390625, "is_bug_line": false, "sus_score": 0.1259881576697424, "per_token_entropy": [0.50341796875, 0.0029048919677734375, 0.0036258697509765625, 2.3603439331054688e-05, 0.0640869140625, 0.026580810546875, 0.018341064453125, 0.71875, 1.064453125, 0.623046875, 0.327880859375, 0.1719970703125, 0.01309967041015625, 0.2861328125, 0.0036220550537109375, 0.01033782958984375, 0.0137176513671875, 0.00021278858184814453, 0.84326171875, 0.005496978759765625, 0.1448974609375, 0.01413726806640625, 0.0240631103515625, 0.0311737060546875, 0.06365966796875, 1.2626953125, 0.7607421875, 0.12432861328125, 0.0009427070617675781, 0.00565338134765625, 0.2340087890625, 0.52685546875, 0.0908203125, 1.2802734375, 0.9296875, 0.1048583984375, 0.0152435302734375, 0.0123291015625, 0.032318115234375, 1.4814453125, 0.406982421875, 0.79345703125, 0.58837890625, 0.04840087890625, 0.10699462890625, 0.14990234375, 0.038116455078125, 0.0096588134765625, 0.0007390975952148438, 0.0163421630859375, 0.0101470947265625, 0.01027679443359375], "tokens": [291, 11975, 284, 320, 446, 562, 763, 4881, 10570, 9816, 3011, 10716, 1868, 346, 301, 291, 1422, 537, 26316, 984, 26, 2524, 26, 400, 313, 10716, 1411, 4881, 526, 20442, 13700, 400, 313, 4282, 1098, 1849, 372, 793, 745, 17990, 346, 4174, 9318, 400, 313, 264, 745, 17990, 922, 6036, 26, 3613]}
{"line_number": 421, "line_type": "original", "code": "        throw new NoInteractionsWanted(join(", "entropy": 1.8408203125, "is_bug_line": true, "sus_score": 0.1259881576697424, "per_token_entropy": [3.830078125, 7.8203125, 0.0263671875, 6.078125, 0.06671142578125, 1.1205673217773438e-05, 2.384185791015625e-07, 0.453857421875, 0.1121826171875, 0.0236358642578125], "tokens": [351, 1422, 537, 3139, 39673, 73, 8490, 26, 2524, 26]}
{"line_number": 421, "line_type": "generated", "code": "\n                \"Also, this method only applies to Mockito spies (it does not apply to real objects).\",\n                \"\"\n        ));\n    }\n\n    public void cannotStubWithNullThrowable() {\n        throw new NullPointerException(\"throwable cannot be null\");\n    }\n\n    public", "entropy": 0.400634765625, "is_bug_line": true, "sus_score": 0.1259881576697424, "per_token_entropy": [0.4013671875, 0.2900390625, 1.673828125, 0.0152435302734375, 0.88818359375, 0.5908203125, 1.5537109375, 1.47265625, 0.88623046875, 1.2919921875, 0.8173828125, 2.0265579223632812e-06, 0.94580078125, 1.7783203125, 0.29296875, 0.2607421875, 0.303466796875, 0.048919677734375, 0.533203125, 0.5, 0.26611328125, 0.047210693359375, 0.0762939453125, 0.68310546875, 0.01214599609375, 0.005191802978515625, 0.005146026611328125, 2.9921531677246094e-05, 0.05584716796875, 0.0218048095703125, 0.015716552734375, 0.70166015625, 0.8388671875, 0.5224609375, 0.0276947021484375, 0.03936767578125, 0.01134490966796875, 0.003856658935546875, 0.01309967041015625, 0.0143585205078125, 0.00025391578674316406, 0.80517578125, 0.86474609375, 0.278076171875, 0.0855712890625, 7.152557373046875e-05, 0.0008597373962402344, 0.8154296875, 0.0032176971435546875, 4.6372413635253906e-05, 0.051971435546875, 0.017913818359375], "tokens": [400, 313, 12938, 30, 458, 1411, 1755, 16642, 372, 26316, 1869, 732, 308, 283, 1957, 646, 4871, 372, 4011, 4684, 547, 392, 400, 3330, 291, 11975, 284, 320, 446, 562, 763, 4881, 9816, 1554, 1883, 14085, 346, 301, 291, 1422, 537, 23224, 440, 35491, 4881, 526, 744, 724, 284, 320, 446, 562]}
{"line_number": 424, "line_type": "original", "code": "                \"But found this interaction on mock '\" + undesired.getMock() + \"':\",", "entropy": 1.5048828125, "is_bug_line": false, "sus_score": 0.1259881576697424, "per_token_entropy": [4.9296875, 0.31005859375, 7.68359375, 4.58984375, 2.865234375, 7.05078125, 0.008941650390625, 0.0128021240234375, 0.464111328125, 0.007762908935546875, 0.568359375, 0.002574920654296875, 0.0216827392578125, 0.00954437255859375, 0.01059722900390625, 0.0015048980712890625, 0.0312042236328125, 0.004016876220703125, 0.027801513671875], "tokens": [2071, 313, 11275, 2431, 458, 15994, 544, 4395, 6113, 474, 707, 23777, 32, 35499, 346, 474, 313, 950, 392]}
{"line_number": 424, "line_type": "generated", "code": "\n                \"    doNothing().\",\n                \"    doThrow(new RuntimeException())\",\n                \"   .when(mock).someVoidMethod();\",\n                \"***\",\n                \"For more info see javadoc for Mockito.doNothing().\",\n                \"\"\n        ));", "entropy": 0.274658203125, "is_bug_line": false, "sus_score": 0.1259881576697424, "per_token_entropy": [0.306884765625, 0.285400390625, 1.623046875, 1.517578125, 0.3798828125, 0.6376953125, 0.489501953125, 0.11328125, 0.035980224609375, 0.034332275390625, 0.21630859375, 0.1900634765625, 0.01345062255859375, 0.0027599334716796875, 0.0015096664428710938, 0.330078125, 0.1536865234375, 0.082763671875, 0.04119873046875, 0.0863037109375, 0.1431884765625, 0.0092315673828125, 0.0223541259765625, 0.00959014892578125, 0.0177154541015625, 0.06585693359375, 0.509765625, 0.003704071044921875, 0.046875, 0.2340087890625, 0.269287109375, 0.521484375, 0.77294921875, 0.038482666015625, 0.0130462646484375, 0.06512451171875, 2.185546875, 0.1290283203125, 0.34423828125, 0.4248046875, 0.01418304443359375, 0.065185546875, 0.215087890625, 0.0701904296875, 0.00165557861328125, 0.044036865234375, 0.75830078125, 0.560546875, 0.029083251953125, 0.138671875, 0.010284423828125, 0.002849578857421875], "tokens": [400, 313, 264, 745, 17990, 922, 392, 400, 313, 264, 745, 6561, 26, 890, 13386, 1157, 392, 400, 313, 264, 638, 6036, 26, 3613, 547, 6060, 10716, 1868, 473, 392, 400, 313, 8133, 392, 400, 313, 1562, 1829, 3099, 2318, 44070, 436, 26316, 32, 1409, 17990, 922, 392, 400, 3330, 291, 11975]}
{"line_number": 799, "line_type": "original", "code": "        return new MockUtil().getMockName(mock);", "entropy": 1.44140625, "is_bug_line": false, "sus_score": 0.10050378152592121, "per_token_entropy": [6.55859375, 0.587890625, 0.4658203125, 0.035736083984375, 8.015625, 0.04022216796875, 0.01018524169921875, 0.09088134765625, 0.00882720947265625, 0.00308990478515625, 0.0330810546875], "tokens": [351, 442, 537, 7502, 1733, 922, 35499, 558, 26, 3613, 293]}
{"line_number": 799, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.10050378152592121, "per_token_entropy": [], "tokens": []}
{"line_number": 48, "line_type": "original", "code": "public class Reporter {", "entropy": 3.78125, "is_bug_line": false, "sus_score": 0.06696495301824251, "per_token_entropy": [11.15625, 2.904296875, 3.634765625, 0.030364990234375, 1.1728515625], "tokens": [923, 443, 9082, 265, 301]}
{"line_number": 48, "line_type": "generated", "code": "\n        ));\n    }\n\n    public void noArgumentMatcherForArgument(int wantedIndex) {\n        throw new NoArgumentMatcherException(join(\n                \"No argument matcher found for argument at position \" + wantedIndex + \".\",\n                \"\",\n                \"Examples of correct argument", "entropy": 0.36279296875, "is_bug_line": false, "sus_score": 0.06696495301824251, "per_token_entropy": [0.74853515625, 0.004730224609375, 0.0311126708984375, 0.00028634071350097656, 0.07952880859375, 0.054351806640625, 0.023193359375, 0.4404296875, 1.3291015625, 1.37890625, 1.3056640625, 1.7431640625, 0.1298828125, 0.19775390625, 0.62890625, 0.4443359375, 0.424072265625, 0.002353668212890625, 0.00937652587890625, 0.09295654296875, 0.006992340087890625, 0.033447265625, 0.059722900390625, 0.166748046875, 0.00722503662109375, 0.0228424072265625, 0.045989990234375, 0.008270263671875, 0.03302001953125, 0.38427734375, 0.99365234375, 0.015228271484375, 0.0081634521484375, 1.283203125, 0.00034689903259277344, 0.12030029296875, 1.1904296875, 0.15625, 0.229248046875, 0.01617431640625, 0.016571044921875, 3.063678741455078e-05, 0.591796875, 0.8828125, 0.0155792236328125, 1.509765625, 0.1346435546875, 0.025634765625, 0.82080078125, 0.00020432472229003906, 0.004608154296875, 1.013671875], "tokens": [291, 11975, 284, 320, 446, 562, 763, 1289, 3484, 11945, 1562, 3484, 26, 410, 13562, 1284, 27, 301, 291, 1422, 537, 3139, 3484, 11945, 984, 26, 2524, 26, 400, 313, 2023, 2793, 20638, 2431, 436, 2793, 821, 2747, 313, 474, 13562, 1284, 474, 43116, 400, 4320, 400, 313, 17533, 432, 3809, 2793]}
