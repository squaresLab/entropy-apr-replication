{"line_number": 155, "line_type": "original", "code": "          return false;", "entropy": 3.7172396183013916, "is_bug_line": false, "sus_score": 0.4472135954999579, "per_token_entropy": [10.05120849609375, 3.4557600021362305, 1.3462307453155518, 0.015759680420160294], "tokens": [965, 736, 2089, 29936]}
{"line_number": 155, "line_type": "generated", "code": "\n   */\n  private boolean isSafeReplacement(Node node, Node replacement) {\n    // TODO(johnlenz): check for aliases\n    return node.isName() &&\n        node.getString().equals(rep", "entropy": 0.4854578375816345, "is_bug_line": false, "sus_score": 0.4472135954999579, "per_token_entropy": [0.22996068000793457, 0.43054068088531494, 0.13430155813694, 0.0005797850899398327, 0.025191863998770714, 0.04191255569458008, 0.045351896435022354, 0.03310872241854668, 0.015599256381392479, 0.0005484507419168949, 0.002931228606030345, 0.00033623288618400693, 0.005639002192765474, 0.013880625367164612, 1.51861572265625, 0.0140062952414155, 0.01522162463515997, 1.2520246505737305, 0.06167176738381386, 0.0015505446353927255, 0.0004334702098276466, 0.09865006059408188, 2.0864577293395996, 1.5993139743804932, 0.07107649743556976, 0.6314513683319092, 0.002050679875537753, 0.007213973440229893, 0.00010215714428341016, 0.06945435702800751, 3.916297197341919, 1.079511284828186, 2.750382661819458, 0.15547941625118256, 2.0119593143463135, 0.19345542788505554, 1.4398869276046753, 1.759063482284546, 0.04350108653306961, 0.3124036490917206, 0.3179885745048523, 0.34955278038978577, 0.258024126291275, 0.9984176754951477, 0.359096497297287, 0.41507238149642944, 0.008244646713137627, 0.30868807435035706, 0.12127141654491425, 0.012594684958457947, 0.004451603628695011, 0.01928870752453804], "tokens": [13, 259, 3776, 13, 29871, 2024, 7223, 338, 17618, 1725, 5612, 9552, 29898, 4247, 2943, 29892, 9071, 16920, 29897, 426, 13, 1678, 849, 14402, 29898, 29926, 6547, 2435, 29920, 1125, 1423, 363, 14430, 2129, 13, 1678, 736, 2943, 29889, 275, 1170, 580, 2607, 13, 4706, 2943, 29889, 13719, 2141, 10954, 29898, 3445]}
{"line_number": 211, "line_type": "original", "code": "    Preconditions.checkArgument(node.isGetProp());", "entropy": 1.7543052434921265, "is_bug_line": false, "sus_score": 0.4472135954999579, "per_token_entropy": [8.921357154846191, 9.375774383544922, 0.2264050394296646, 0.0011922164121642709, 0.019304025918245316, 0.010389056988060474, 1.982302188873291, 0.07543735206127167, 1.6256717443466187, 0.03943614661693573, 0.05577562376856804, 1.8186417818069458, 0.005530769936740398, 0.4030560851097107], "tokens": [268, 4721, 1116, 2187, 29889, 3198, 15730, 29898, 3177, 29889, 275, 2577, 20420, 3310]}
{"line_number": 211, "line_type": "generated", "code": "\n\n  /**\n   * Checks name referenced in node to determine if it might have\n   * changed.\n   * @return Whether the replacement can be made.\n   */\n  private boolean isSafeReplacement(Node node,", "entropy": 0.12226439267396927, "is_bug_line": false, "sus_score": 0.4472135954999579, "per_token_entropy": [0.03840525075793266, 0.3118360936641693, 0.1519341617822647, 0.40612077713012695, 0.02692309394478798, 0.009992220439016819, 0.0005166388000361621, 1.8143892288208008, 0.1446918547153473, 2.3264472484588623, 0.06670579314231873, 0.01517583429813385, 0.17625534534454346, 0.031790126115083694, 0.010082033462822437, 0.00588802108541131, 0.01043754443526268, 0.06532426178455353, 0.017349617555737495, 0.056363288313150406, 0.0013778250431641936, 0.0005588161875493824, 0.014107149094343185, 0.02953898347914219, 0.07315205037593842, 0.009354923851788044, 0.030755937099456787, 0.03872743993997574, 0.011362484656274319, 0.005484415218234062, 0.009234337136149406, 0.019134346395730972, 0.004719784017652273, 0.0014100857079029083, 0.0014461545506492257, 0.003563365899026394, 0.002430819906294346, 0.006252252962440252, 0.009105467237532139, 0.0017535799415782094, 0.14794333279132843, 0.032564807683229446, 0.01168678980320692, 0.01866140589118004, 0.032590653747320175, 0.0007812308613210917, 0.014363939873874187, 0.0005446380819194019, 0.05232890695333481, 0.03688362240791321, 0.03101438283920288, 0.018285982310771942], "tokens": [13, 13, 29871, 7762, 13, 259, 334, 5399, 29879, 1024, 16180, 297, 2943, 304, 8161, 565, 372, 1795, 505, 13, 259, 334, 3939, 29889, 13, 259, 334, 732, 2457, 26460, 278, 16920, 508, 367, 1754, 29889, 13, 259, 3776, 13, 29871, 2024, 7223, 338, 17618, 1725, 5612, 9552, 29898, 4247, 2943, 29892]}
{"line_number": 213, "line_type": "original", "code": "      node = node.getFirstChild();", "entropy": 2.57261061668396, "is_bug_line": true, "sus_score": 0.4472135954999579, "per_token_entropy": [10.678044319152832, 8.32636547088623, 2.0015194416046143, 0.32813557982444763, 0.008815418928861618, 0.010617906227707863, 1.7724568843841553, 0.0032360588666051626, 0.02430546283721924], "tokens": [539, 2943, 353, 2943, 29889, 657, 6730, 5938, 890]}
{"line_number": 213, "line_type": "generated", "code": "\n\n  /**\n   * Checks if the name is referenced in node.\n   * @return Whether the name is referenced in node.\n   */\n  private boolean isNameReferenced(String name, Node node) {\n   ", "entropy": 0.361431747674942, "is_bug_line": true, "sus_score": 0.4472135954999579, "per_token_entropy": [0.029582152143120766, 0.33926936984062195, 0.13077673316001892, 0.39978888630867004, 0.0263565294444561, 0.011438856832683086, 0.0005078217945992947, 1.8669283390045166, 0.17805235087871552, 1.3686670064926147, 1.0390530824661255, 2.8293089866638184, 0.954438328742981, 1.8041378259658813, 0.67999267578125, 1.9975271224975586, 0.8570528626441956, 0.12529051303863525, 0.005469832569360733, 0.3272659182548523, 0.15832850337028503, 0.06668438017368317, 0.0996452122926712, 0.211275115609169, 0.3016762435436249, 0.08376186341047287, 0.12552890181541443, 0.6943740248680115, 0.3906722068786621, 0.05274978280067444, 0.004225018434226513, 0.007929631508886814, 0.007432309910655022, 0.001882330165244639, 0.34955263137817383, 0.04299260303378105, 0.02720445767045021, 0.22259026765823364, 0.02804911695420742, 0.1222001165151596, 0.0012516292044892907, 0.0031838936265558004, 0.5663569569587708, 0.15096637606620789, 0.002815095242112875, 0.00219164346344769, 0.003975822124630213, 0.028560969978570938, 0.015519210137426853, 0.001490435330197215, 0.0017613149248063564, 0.04671656712889671], "tokens": [13, 13, 29871, 7762, 13, 259, 334, 5399, 29879, 565, 278, 1024, 338, 16180, 297, 2943, 29889, 13, 259, 334, 732, 2457, 26460, 278, 1024, 338, 16180, 297, 2943, 29889, 13, 259, 3776, 13, 29871, 2024, 7223, 338, 1170, 1123, 571, 9223, 29898, 1231, 1024, 29892, 9071, 2943, 29897, 426, 13, 1678]}
{"line_number": 214, "line_type": "original", "code": "    if (node.isName()", "entropy": 1.7914905548095703, "is_bug_line": true, "sus_score": 0.4472135954999579, "per_token_entropy": [8.120068550109863, 2.217297077178955, 0.17305798828601837, 1.7246652841567993, 0.039772212505340576, 0.13981613516807556, 0.9465298652648926, 0.970716655254364], "tokens": [268, 565, 313, 3177, 29889, 275, 1170, 580]}
{"line_number": 214, "line_type": "generated", "code": "\n  /**\n   * Checks if a node is a GETPROP node with a name that is the same as\n   * the name of the function that contains it.\n   * @param n The node to check.\n   * @", "entropy": 0.8670822381973267, "is_bug_line": true, "sus_score": 0.4472135954999579, "per_token_entropy": [0.05768826976418495, 1.0980491638183594, 0.7185238599777222, 0.034851983189582825, 0.02395659312605858, 0.0007440659101121128, 1.7716931104660034, 0.12464717775583267, 1.4000838994979858, 1.5995864868164062, 2.1247384548187256, 0.698270857334137, 1.054038405418396, 4.131288528442383, 0.59749436378479, 0.0025398635771125555, 2.0836358070373535, 2.2534384727478027, 0.8471486568450928, 1.3243290185928345, 1.3471951484680176, 1.059451937675476, 2.7058205604553223, 0.6049309968948364, 0.4819698929786682, 0.9255028963088989, 0.0028584832325577736, 0.0019857229199260473, 0.6343174576759338, 1.5505411624908447, 1.1776443719863892, 0.6255026459693909, 2.3523807525634766, 2.259636878967285, 1.3933278322219849, 0.6000193357467651, 0.10803361982107162, 0.3847537338733673, 0.006343112327158451, 0.4302849769592285, 0.676293671131134, 0.8307790756225586, 1.5019419193267822, 0.6251988410949707, 0.14022694528102875, 0.202058807015419, 0.29143497347831726, 0.12229020893573761, 0.011825106106698513, 0.004154978785663843, 0.07886374741792679, 0.003955992870032787], "tokens": [13, 29871, 7762, 13, 259, 334, 5399, 29879, 565, 263, 2943, 338, 263, 12354, 8618, 29925, 2943, 411, 263, 1024, 393, 338, 278, 1021, 408, 13, 259, 334, 278, 1024, 310, 278, 740, 393, 3743, 372, 29889, 13, 259, 334, 732, 3207, 302, 450, 2943, 304, 1423, 29889, 13, 259, 334, 732]}
{"line_number": 219, "line_type": "original", "code": "    return true;", "entropy": 3.5047051906585693, "is_bug_line": false, "sus_score": 0.4472135954999579, "per_token_entropy": [9.224095344543457, 3.296356678009033, 1.492989182472229, 0.005378656554967165], "tokens": [268, 736, 1565, 29936]}
{"line_number": 219, "line_type": "generated", "code": "\n\n  /**\n   * Inlines the name references in the expression rooted at node.\n   */\n  private void inline(Node node, String name, Node replacement) {\n    for (Node c = node.getFirstChild();", "entropy": 0.5062582492828369, "is_bug_line": false, "sus_score": 0.4472135954999579, "per_token_entropy": [0.03662795573472977, 0.30549895763397217, 0.19053034484386444, 0.37327051162719727, 0.025946814566850662, 0.015278683044016361, 0.0003756771038752049, 3.0725560188293457, 0.6348373889923096, 1.9488122463226318, 2.584791660308838, 2.483640670776367, 0.7191294431686401, 1.2021485567092896, 2.2010791301727295, 0.865936815738678, 0.0040368507616221905, 0.05857919901609421, 0.8970319032669067, 0.5047990083694458, 0.09914959967136383, 0.0034147545229643583, 1.034153938293457, 0.0008543655276298523, 0.32253673672676086, 0.10767070949077606, 0.2488982230424881, 0.1053800880908966, 1.608024001121521, 0.17260298132896423, 0.26224181056022644, 0.41964662075042725, 1.0738799571990967, 0.07627042382955551, 0.16892433166503906, 0.08003295212984085, 1.3259491920471191, 0.08009885996580124, 0.0017351347487419844, 0.002136925933882594, 0.07771015912294388, 0.8538123369216919, 0.0013724679592996836, 0.021207822486758232, 0.022718513384461403, 0.013927650637924671, 0.003459423314779997, 0.002481597475707531, 0.00042226933874189854, 0.0011326810345053673, 0.000587767455726862, 0.00808490440249443], "tokens": [13, 13, 29871, 7762, 13, 259, 334, 512, 9012, 278, 1024, 9282, 297, 278, 4603, 3876, 287, 472, 2943, 29889, 13, 259, 3776, 13, 29871, 2024, 1780, 10583, 29898, 4247, 2943, 29892, 1714, 1024, 29892, 9071, 16920, 29897, 426, 13, 1678, 363, 313, 4247, 274, 353, 2943, 29889, 657, 6730, 5938, 890]}
{"line_number": 55, "line_type": "original", "code": "      reportCodeChange();", "entropy": 3.443605899810791, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [5.7046027183532715, 11.178315162658691, 0.30993303656578064, 0.0008180370787158608, 0.02436072565615177], "tokens": [539, 3461, 3399, 7277, 890]}
{"line_number": 55, "line_type": "generated", "code": "\n   *     may be collapsed into\n   *    ", "entropy": 0.43830540776252747, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.23517481982707977, 0.09800276160240173, 0.05463526025414467, 0.35426345467567444, 1.964517593383789, 0.41831356287002563, 0.5105897188186646, 0.005951303523033857, 0.5821927785873413, 1.2347007989883423, 0.20440931618213654, 0.0023390096612274647, 0.03287942707538605], "tokens": [13, 259, 334, 268, 1122, 367, 784, 23384, 964, 13, 259, 334, 268]}
{"line_number": 136, "line_type": "original", "code": "          if (next.isQualifiedName()) {", "entropy": 1.3947032690048218, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [6.506359577178955, 2.9111499786376953, 0.30101847648620605, 1.6436741352081299, 0.4185146391391754, 0.5938335657119751, 1.9449422359466553, 0.0001530530134914443, 6.723177648382261e-05, 1.0149589776992798, 0.0070642465725541115], "tokens": [965, 565, 313, 4622, 29889, 275, 24399, 2164, 1170, 3101, 426]}
{"line_number": 136, "line_type": "generated", "code": "\n            // and it is equivalent to the value of the expression,\n<|mask:1|><|mask:0|>\n            // then we can exploit the assignment here.\n            exprParent.removeChild(expr);\n           ", "entropy": 0.41111379861831665, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.06953364610671997, 0.18381844460964203, 0.3738202750682831, 0.6315732598304749, 1.0083914995193481, 0.8036972284317017, 0.9614680409431458, 0.046563878655433655, 0.16968709230422974, 0.9566280841827393, 1.4264299869537354, 0.24017798900604248, 2.0255508422851562, 1.1413891315460205, 0.7133175134658813, 1.6255581378936768, 0.003782975720241666, 0.039238329976797104, 0.005002838093787432, 0.31936389207839966, 0.008078637532889843, 0.5280721783638, 0.0017357297474518418, 0.015180765651166439, 0.001029200037010014, 0.15078963339328766, 0.0017794027226045728, 0.022774096578359604, 0.005696728825569153, 0.01482752338051796, 0.01596524752676487, 0.35158824920654297, 0.5674828290939331, 0.2031400501728058, 1.3655669689178467, 0.0006845038151368499, 0.35281866788864136, 1.9159796237945557, 1.2009167671203613, 0.11710856109857559, 0.07100998610258102, 0.7021984457969666, 0.9478714466094971, 0.013700027950108051, 0.0003916450368706137, 0.02212763950228691, 0.0001991788885788992, 0.00014220656885299832, 0.000934045237954706, 0.00039081089198589325, 0.0007509748684242368, 0.03199080750346184], "tokens": [13, 9651, 849, 322, 372, 338, 7126, 304, 278, 995, 310, 278, 4603, 29892, 13, 29966, 29989, 13168, 29901, 29896, 29989, 5299, 29989, 13168, 29901, 29900, 29989, 29958, 13, 9651, 849, 769, 591, 508, 16035, 277, 278, 12827, 1244, 29889, 13, 9651, 22010, 9780, 29889, 5992, 5938, 29898, 13338, 416, 13, 9651]}
{"line_number": 137, "line_type": "original", "code": "            String nextName = next.getQualifiedName();", "entropy": 1.368873953819275, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [6.811236381530762, 7.95094108581543, 0.7194983959197998, 0.06339115649461746, 0.10758817940950394, 0.615728497505188, 0.01996399648487568, 0.11774001270532608, 0.01791943423449993, 0.0001961992384167388, 0.00026603974401950836, 0.002018558792769909], "tokens": [632, 1714, 2446, 1170, 353, 2446, 29889, 657, 24399, 2164, 1170, 890]}
{"line_number": 137, "line_type": "generated", "code": "\n            if (!isSafeReplacement(next, assign)) {\n              return false;\n            }\n\n            exprParent.removeChild(expr);\n            expr.removeChild(assign);\n            parent.replaceChild(next,", "entropy": 0.08844103664159775, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.06099143996834755, 0.22831584513187408, 1.537780523300171, 1.293310284614563, 0.1251942664384842, 0.017765913158655167, 7.223821739898995e-05, 0.0033408564049750566, 0.00017438798386137933, 0.0013915151357650757, 0.07995283603668213, 0.008817072957754135, 0.1285739243030548, 0.016460923478007317, 0.001069331425242126, 0.00213300040923059, 0.04137295112013817, 0.03144720941781998, 0.0009939497103914618, 0.00035506143467500806, 0.0010757618583738804, 0.012838211841881275, 0.0001776060671545565, 0.004975081887096167, 0.1704297810792923, 0.018527308478951454, 0.272747278213501, 0.008808801881968975, 0.0005728749092668295, 0.013765756972134113, 0.0004465774691198021, 0.0003083468764089048, 0.001081358641386032, 0.0006922471220605075, 0.0008546037715859711, 0.007208529394119978, 0.3598810136318207, 0.00351204932667315, 0.033897362649440765, 0.00341023993678391, 0.0003578022588044405, 0.002734257373958826, 0.0009344025747850537, 0.0008934320067055523, 0.024727363139390945, 0.0598638616502285, 0.0007876630988903344, 0.006973807699978352, 0.0018631733255460858, 0.0003022690652869642, 0.004191898740828037, 0.0005789510905742645], "tokens": [13, 9651, 565, 5384, 275, 17618, 1725, 5612, 9552, 29898, 4622, 29892, 3566, 876, 426, 13, 795, 736, 2089, 29936, 13, 9651, 500, 13, 13, 9651, 22010, 9780, 29889, 5992, 5938, 29898, 13338, 416, 13, 9651, 22010, 29889, 5992, 5938, 29898, 16645, 416, 13, 9651, 3847, 29889, 6506, 5938, 29898, 4622, 29892]}
{"line_number": 138, "line_type": "original", "code": "            if (value.isQualifiedName() &&", "entropy": 1.5550425052642822, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [7.300124168395996, 2.366300582885742, 1.0714571475982666, 2.7893929481506348, 0.20174328982830048, 0.2710634171962738, 1.4002692699432373, 0.00010525626566959545, 8.272782724816352e-05, 1.106287956237793, 0.598639965057373], "tokens": [632, 565, 313, 1767, 29889, 275, 24399, 2164, 1170, 580, 2607]}
{"line_number": 138, "line_type": "generated", "code": "\n            // Verify the assignment doesn't change its own value.\n            if (!isSafeReplacement(next, assign)) {\n              return false;\n            }\n\n            exprParent.removeChild(expr);\n            expr", "entropy": 0.05564664304256439, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.018839238211512566, 0.5855931043624878, 1.0761436223983765, 0.2862887978553772, 0.0006915323319844902, 0.04445308819413185, 0.025746773928403854, 0.015779512003064156, 0.0001431601122021675, 0.00015364897262770683, 0.010319448076188564, 0.009220872074365616, 0.00128020322881639, 0.0021878371480852365, 0.011667231097817421, 0.0047830212861299515, 0.012110278010368347, 0.025705644860863686, 0.023759180679917336, 0.004854440689086914, 0.0008420973899774253, 0.00010072677832795307, 0.00030012393835932016, 8.916457591112703e-05, 0.0005485698929987848, 0.105488121509552, 0.004532658960670233, 0.02524138242006302, 0.006628076080232859, 0.0006684214458800852, 0.0008819981012493372, 0.01595539227128029, 0.005036049522459507, 0.00048315772437490523, 0.00027164106722921133, 0.0004009396652691066, 0.004780292976647615, 0.00011753345461329445, 0.004553544335067272, 0.13380323350429535, 0.00902513600885868, 0.20205599069595337, 0.005211696494370699, 0.0006266061100177467, 0.007675441447645426, 0.00042143522296100855, 0.0003636414185166359, 0.001022769371047616, 0.0006413786904886365, 0.0006957017467357218, 0.0025814801920205355, 0.19286009669303894], "tokens": [13, 9651, 849, 1798, 1598, 278, 12827, 1838, 29915, 29873, 1735, 967, 1914, 995, 29889, 13, 9651, 565, 5384, 275, 17618, 1725, 5612, 9552, 29898, 4622, 29892, 3566, 876, 426, 13, 795, 736, 2089, 29936, 13, 9651, 500, 13, 13, 9651, 22010, 9780, 29889, 5992, 5938, 29898, 13338, 416, 13, 9651, 22010]}
{"line_number": 145, "line_type": "original", "code": "              if (!isSafeReplacement(next, assign)) {", "entropy": 2.136582136154175, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [10.202516555786133, 3.2911558151245117, 2.0415005683898926, 2.498047351837158, 2.200634241104126, 0.00013159839727450162, 5.794772624969482, 0.004932378884404898, 0.2161068618297577, 0.8824553489685059, 0.3343411982059479, 2.221336603164673, 0.2075270414352417, 0.016690615564584732], "tokens": [1669, 565, 5384, 275, 17618, 1725, 5612, 9552, 29898, 4622, 29892, 3566, 876, 426]}
{"line_number": 145, "line_type": "generated", "code": "\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Collapse a \"var a = b; a\" expression into \"b\".\n   *\n   * @param expr The expression that may be moved", "entropy": 0.48235756158828735, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.0696350634098053, 0.31617167592048645, 0.0025506841484457254, 0.007706671487540007, 0.10335956513881683, 0.001497934339568019, 0.0058381278067827225, 0.5682963728904724, 0.12056864798069, 0.01107639167457819, 0.00025006983196362853, 0.008443963713943958, 0.1729511022567749, 0.0058784219436347485, 0.025663238018751144, 0.381022572517395, 0.22078128159046173, 0.32791024446487427, 0.020244169980287552, 0.005073292646557093, 0.0001380348257953301, 1.6818495988845825, 0.635127067565918, 1.8543537855148315, 4.09073543548584, 2.8139941692352295, 1.6469597816467285, 0.24295036494731903, 1.0320117473602295, 2.3706769943237305, 1.155527114868164, 0.7736006379127502, 1.0854458808898926, 0.5456640720367432, 0.3158426284790039, 0.12063004076480865, 0.6375705003738403, 0.2045736163854599, 0.08069143444299698, 0.1129235103726387, 0.38886964321136475, 0.003211105475202203, 0.0008251837571151555, 0.27027878165245056, 0.0789189413189888, 0.1552971601486206, 0.051562827080488205, 0.06033443659543991, 0.10783746093511581, 0.01013360358774662, 0.001471390132792294, 0.17766737937927246], "tokens": [13, 418, 500, 13, 1678, 500, 13, 1678, 736, 2089, 29936, 13, 29871, 500, 13, 13, 29871, 7762, 13, 259, 334, 1530, 13938, 263, 376, 1707, 263, 353, 289, 29936, 263, 29908, 4603, 964, 376, 29890, 1642, 13, 259, 334, 13, 259, 334, 732, 3207, 22010, 450, 4603, 393, 1122, 367, 6153]}
{"line_number": 149, "line_type": "original", "code": "              exprParent.removeChild(expr);", "entropy": 2.0300657749176025, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [12.318635940551758, 4.8249101638793945, 0.9594930410385132, 0.0059661162085831165, 0.15134741365909576, 0.0003670972364488989, 0.00021908267808612436, 0.0071431961841881275, 0.0025085906963795424], "tokens": [1669, 22010, 9780, 29889, 5992, 5938, 29898, 13338, 416]}
{"line_number": 149, "line_type": "generated", "code": "\n  }\n\n  /**\n   * Determines whether the replacement of one node with another is safe.\n   *\n   * @param oldNode The node to be replaced.\n   * @param newNode The node to replace it", "entropy": 0.40166714787483215, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.11562827229499817, 0.1195930615067482, 0.00792206171900034, 0.023285744711756706, 0.30886098742485046, 0.1945653259754181, 0.27467110753059387, 0.029641060158610344, 0.0043273381888866425, 0.00022075122979003936, 2.043022871017456, 0.04992945119738579, 0.2990635931491852, 0.5645045638084412, 0.9752411842346191, 1.5589793920516968, 0.8460439443588257, 1.6055108308792114, 0.4064525365829468, 0.6292698383331299, 0.037339527159929276, 0.7803719639778137, 0.6543908715248108, 0.3038974404335022, 0.1431846171617508, 0.0033192322589457035, 0.07679295539855957, 0.8897587060928345, 0.0008693729760125279, 0.0006232702871784568, 0.6405741572380066, 0.0435125008225441, 2.5637283325195312, 0.1578906625509262, 0.30934563279151917, 0.38417306542396545, 0.8642684817314148, 0.27174633741378784, 0.09451942145824432, 0.23392392694950104, 0.021442960947752, 0.0004891153075732291, 0.0003629264247138053, 0.0011867393041029572, 0.0016575419576838613, 0.07929166406393051, 0.011940079741179943, 0.014156632125377655, 0.290795236825943, 0.7196754217147827, 0.35159000754356384, 0.8831380605697632], "tokens": [13, 29871, 500, 13, 13, 29871, 7762, 13, 259, 334, 5953, 837, 1475, 3692, 278, 16920, 310, 697, 2943, 411, 1790, 338, 9109, 29889, 13, 259, 334, 13, 259, 334, 732, 3207, 2030, 4247, 450, 2943, 304, 367, 8611, 29889, 13, 259, 334, 732, 3207, 716, 4247, 450, 2943, 304, 5191, 372]}
{"line_number": 150, "line_type": "original", "code": "              expr.removeChild(assign);", "entropy": 2.5577659606933594, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [12.991888999938965, 4.030452728271484, 2.21610164642334, 0.564924955368042, 0.0209992453455925, 0.001312705222517252, 0.5864131450653076, 0.050034910440444946], "tokens": [1669, 22010, 29889, 5992, 5938, 29898, 16645, 416]}
{"line_number": 150, "line_type": "generated", "code": "\n\n  /**\n   * Collapse expressions of the form:\n   *   a.b = c;\n   *   a.b.c = d;\n   * into:\n   *   a.b = c;\n", "entropy": 0.5015208721160889, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.04655170440673828, 0.30318692326545715, 0.16630671918392181, 0.21063217520713806, 0.024388762190937996, 0.003295706817880273, 0.00011550712952157483, 2.1874072551727295, 0.5581216812133789, 2.7902235984802246, 1.1041004657745361, 0.11019112169742584, 0.1008894219994545, 1.3058629035949707, 0.09323868900537491, 0.02578534558415413, 0.000259365770034492, 1.000632643699646, 1.5196372270584106, 2.620051383972168, 0.3750826120376587, 0.7234136462211609, 1.592763066291809, 0.8443900942802429, 0.274408221244812, 0.0007605044520460069, 0.010467862710356712, 0.8759981393814087, 0.6350463032722473, 0.09062842279672623, 0.10498111695051193, 1.3713762760162354, 0.12652719020843506, 0.18811602890491486, 0.2854134142398834, 0.027690885588526726, 0.017124881967902184, 0.0005658455775119364, 0.020601458847522736, 1.3444364070892334, 0.6508561372756958, 0.006207353435456753, 0.0024840945843607187, 5.793403761344962e-05, 0.013680155389010906, 0.21033875644207, 0.6815000772476196, 0.004835696425288916, 0.27210092544555664, 0.8320603966712952, 0.1433546543121338, 0.1809368133544922], "tokens": [13, 13, 29871, 7762, 13, 259, 334, 1530, 13938, 12241, 310, 278, 883, 29901, 13, 259, 334, 259, 263, 29889, 29890, 353, 274, 29936, 13, 259, 334, 259, 263, 29889, 29890, 29889, 29883, 353, 270, 29936, 13, 259, 334, 964, 29901, 13, 259, 334, 259, 263, 29889, 29890, 353, 274, 29936, 13]}
{"line_number": 151, "line_type": "original", "code": "              parent.replaceChild(next, assign);", "entropy": 1.9293766021728516, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [12.763323783874512, 5.34030294418335, 0.24323661625385284, 0.4249234199523926, 0.017863929271697998, 0.0006951061659492552, 0.2792292535305023, 0.002524524461477995, 0.21063236892223358, 0.011035481467843056], "tokens": [1669, 3847, 29889, 6506, 5938, 29898, 4622, 29892, 3566, 416]}
{"line_number": 151, "line_type": "generated", "code": "\n\n  /**\n   * Determines whether a node is a \"safe\" replacement for another node.\n   *\n   * @param target The node to be replaced.\n   * @param replacement The node to replace it with.\n", "entropy": 0.5386235117912292, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.060277871787548065, 0.9476348161697388, 0.12243808805942535, 0.1852591633796692, 0.019528623670339584, 0.0032955880742520094, 0.0001262346631847322, 2.2162744998931885, 0.05721442028880119, 0.3505929410457611, 0.5998185276985168, 1.4456377029418945, 1.6166421175003052, 0.84612637758255, 1.2896517515182495, 3.1578612327575684, 1.2327938079833984, 0.6058399677276611, 0.08872086554765701, 0.48724472522735596, 0.8656677007675171, 0.342663049697876, 0.24959486722946167, 0.25475427508354187, 0.0008688965463079512, 0.03938434645533562, 0.8749122023582458, 0.0008111285860650241, 0.00042024365393444896, 1.2765635251998901, 0.039623383432626724, 2.613743543624878, 0.43209531903266907, 0.37598180770874023, 0.8892999291419983, 0.9264571070671082, 0.08662274479866028, 0.28598853945732117, 0.024733759462833405, 0.00037949037505313754, 0.0006585336523130536, 0.0015138844028115273, 0.0017551269847899675, 0.12682923674583435, 0.035334132611751556, 0.3886543810367584, 0.9798496961593628, 0.4640461206436157, 0.9791067242622375, 0.09229182451963425, 0.020019499585032463, 0.004815646912902594], "tokens": [13, 13, 29871, 7762, 13, 259, 334, 5953, 837, 1475, 3692, 263, 2943, 338, 263, 376, 11177, 29908, 16920, 363, 1790, 2943, 29889, 13, 259, 334, 13, 259, 334, 732, 3207, 3646, 450, 2943, 304, 367, 8611, 29889, 13, 259, 334, 732, 3207, 16920, 450, 2943, 304, 5191, 372, 411, 29889, 13]}
{"line_number": 152, "line_type": "original", "code": "              return true;", "entropy": 3.8671438694000244, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [10.915389060974121, 3.261565685272217, 1.1977250576019287, 0.0938958153128624], "tokens": [1669, 736, 1565, 29936]}
{"line_number": 152, "line_type": "generated", "code": "\n   * @param name A name node.\n   * @param value The value to replace the name with.\n   * @return Whether the expression was collapsed successfully.\n   */\n  private boolean collapseName(Node name, Node value", "entropy": 0.4218285083770752, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.22927989065647125, 0.1635325402021408, 0.023179521784186363, 2.2464635372161865, 0.3235975205898285, 1.8462271690368652, 2.3247058391571045, 1.327049970626831, 0.5040409564971924, 0.8956456780433655, 0.027894826605916023, 0.06944368034601212, 0.021321605890989304, 0.0037778690457344055, 0.2710907757282257, 0.7643294930458069, 0.9888497591018677, 0.5473901033401489, 1.144936203956604, 1.8758270740509033, 1.0069477558135986, 0.1672944873571396, 0.30061858892440796, 0.06102822348475456, 0.05465027317404747, 0.06283559650182724, 0.2627413272857666, 0.021607233211398125, 0.2276250123977661, 0.13260945677757263, 0.17855943739414215, 2.143566608428955, 0.031861722469329834, 0.04559304192662239, 0.0008273277780972421, 0.012233580462634563, 0.005943245254456997, 0.004043380729854107, 0.047251589596271515, 0.014731441624462605, 0.00016592556494288146, 0.04046609625220299, 0.03808903694152832, 0.025506487116217613, 0.08639708906412125, 0.631061315536499, 0.6112655401229858, 0.023318586871027946, 0.058315299451351166, 0.008130074478685856, 0.009160986170172691, 0.022053247317671776], "tokens": [13, 259, 334, 732, 3207, 1024, 319, 1024, 2943, 29889, 13, 259, 334, 732, 3207, 995, 450, 995, 304, 5191, 278, 1024, 411, 29889, 13, 259, 334, 732, 2457, 26460, 278, 4603, 471, 784, 23384, 8472, 29889, 13, 259, 3776, 13, 29871, 2024, 7223, 24382, 1170, 29898, 4247, 1024, 29892, 9071, 995]}
{"line_number": 208, "line_type": "original", "code": "    if (node.isName()) {", "entropy": 1.7084059715270996, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [8.113358497619629, 3.3724727630615234, 0.17829236388206482, 1.71681547164917, 0.046157125383615494, 0.08058036118745804, 1.5130029916763306, 0.34891512989997864, 0.0060585420578718185], "tokens": [268, 565, 313, 3177, 29889, 275, 1170, 3101, 426]}
{"line_number": 208, "line_type": "generated", "code": "\n\n  /**\n   * Whether the given node is a simple name that is not defined in\n   * the current scope.\n   */\n  private boolean isUnknownName(Node n) {\n    return n.isName() && !", "entropy": 0.6406878232955933, "is_bug_line": false, "sus_score": 0.3779644730092272, "per_token_entropy": [0.0666641965508461, 0.6678891777992249, 0.16246061027050018, 0.4253169596195221, 0.029431339353322983, 0.012613872066140175, 0.00040415700641460717, 3.978665351867676, 0.9034992456436157, 1.8253474235534668, 1.4089943170547485, 0.7124179005622864, 0.9380728006362915, 2.653745174407959, 1.2230132818222046, 1.1764848232269287, 1.1325302124023438, 1.666662573814392, 2.322173833847046, 0.7776733040809631, 1.5719187259674072, 0.0020848223939538, 0.0013716346584260464, 0.8622743487358093, 1.455230712890625, 0.27893346548080444, 0.17850519716739655, 0.15377691388130188, 0.005818572361022234, 0.2537071108818054, 0.0014254419365897775, 0.21821638941764832, 0.14705677330493927, 0.16929304599761963, 0.040651194751262665, 2.898016929626465, 0.6749864816665649, 0.07754415273666382, 0.011619745753705502, 0.9383676052093506, 0.019726287573575974, 0.001060757553204894, 0.0019911956042051315, 0.04034370929002762, 0.48628953099250793, 0.24287500977516174, 0.032173097133636475, 0.008260962553322315, 0.003193400101736188, 0.010987729765474796, 0.22358234226703644, 0.22041967511177063], "tokens": [13, 13, 29871, 7762, 13, 259, 334, 26460, 278, 2183, 2943, 338, 263, 2560, 1024, 393, 338, 451, 3342, 297, 13, 259, 334, 278, 1857, 6874, 29889, 13, 259, 3776, 13, 29871, 2024, 7223, 338, 14148, 1170, 29898, 4247, 302, 29897, 426, 13, 1678, 736, 302, 29889, 275, 1170, 580, 2607, 1738]}
{"line_number": 58, "line_type": "original", "code": "      collapseAssign(rightValue, expr, exprParent);", "entropy": 2.2756478786468506, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [10.206889152526855, 6.354074478149414, 0.019537391141057014, 0.00037925204378552735, 3.5777087211608887, 7.663102626800537, 0.12183703482151031, 0.2570870518684387, 0.3942195773124695, 0.15297909080982208, 0.14167727530002594, 0.01889117807149887, 0.6750365495681763], "tokens": [539, 24382, 7900, 647, 29898, 1266, 1917, 29892, 22010, 29892, 22010, 9780, 416]}
{"line_number": 58, "line_type": "generated", "code": "\n  private boolean collapseAssignEqualTo(Node expr, Node exprParent, Node value) {\n    Node next = expr.getNext();\n    if (next != null && next.isExprAssign() &&\n        next.get", "entropy": 0.23367391526699066, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [0.10531003028154373, 0.2052294909954071, 0.09633931517601013, 0.1189974918961525, 0.0041636452078819275, 0.0020842275116592646, 0.00010287232726113871, 0.018239043653011322, 0.0003200257197022438, 0.0035206021275371313, 0.1620032787322998, 0.0038742972537875175, 0.002067096997052431, 0.26831722259521484, 0.0028576513286679983, 0.00029559535323642194, 0.0007722970913164318, 1.2695566415786743, 0.00646653538569808, 0.005673614796251059, 0.003572512185201049, 0.0015891077928245068, 0.11895526200532913, 1.0827265977859497, 0.9356337785720825, 0.23517444729804993, 0.04692769795656204, 0.03219249099493027, 0.0010835020802915096, 0.002253851620480418, 0.0046304380521178246, 0.0021828413009643555, 0.18560132384300232, 0.49104511737823486, 0.14253027737140656, 0.25082769989967346, 0.964348316192627, 0.0009254701435565948, 0.20387813448905945, 1.4367382526397705, 0.04494020342826843, 0.3682997524738312, 0.40029045939445496, 0.5982247591018677, 2.145764938177308e-06, 0.618553638458252, 0.0656655803322792, 0.36946427822113037, 0.023734617978334427, 1.2227283716201782, 0.0033156678546220064, 0.016815464943647385], "tokens": [13, 29871, 2024, 7223, 24382, 7900, 647, 9843, 1762, 29898, 4247, 22010, 29892, 9071, 22010, 9780, 29892, 9071, 995, 29897, 426, 13, 1678, 9071, 2446, 353, 22010, 29889, 657, 9190, 890, 13, 1678, 565, 313, 4622, 2804, 1870, 2607, 2446, 29889, 275, 21176, 7900, 647, 580, 2607, 13, 4706, 2446, 29889, 657]}
{"line_number": 175, "line_type": "original", "code": "            parent = next;", "entropy": 5.280372142791748, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [11.944684982299805, 8.569953918457031, 0.095077283680439, 5.192860126495361, 0.5992834568023682], "tokens": [632, 3847, 353, 2446, 29936]}
{"line_number": 175, "line_type": "generated", "code": "\n  private boolean isNameAssignedTo(String name, Node node) {\n    if (node.isAssign()) {\n      Node lhs = node.getFirstChild();\n      if (lhs.isName() && name", "entropy": 0.16239376366138458, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [0.0541095957159996, 0.1721287965774536, 0.06681463122367859, 0.0123580452054739, 0.008178198710083961, 0.0029992142226547003, 0.004345736000686884, 0.0012156723532825708, 0.0015500684967264533, 0.0027160681784152985, 0.06958791613578796, 0.010601275600492954, 0.00398888299241662, 0.011851965449750423, 0.331884503364563, 0.009120351634919643, 0.0022568251006305218, 0.0034855585545301437, 0.11357654631137848, 1.4117307662963867, 0.10502813011407852, 0.35660338401794434, 0.3507419526576996, 0.14177215099334717, 0.6093154549598694, 0.0005644158809445798, 0.47205787897109985, 0.0020655503030866385, 0.001733468729071319, 0.03851606324315071, 0.5676546692848206, 0.8036620616912842, 0.504369854927063, 0.02141880802810192, 0.021538633853197098, 0.0013387774815782905, 0.001090885023586452, 0.0012374608777463436, 0.008294538594782352, 0.013442478142678738, 0.0015511397505179048, 0.04643620178103447, 0.38891497254371643, 0.05326497182250023, 0.06071583181619644, 0.0016269554616883397, 0.006611378397792578, 0.007408762816339731, 0.11426181346178055, 0.2191024124622345, 0.22528749704360962, 1.0023465156555176], "tokens": [13, 29871, 2024, 7223, 338, 1170, 7900, 12961, 1762, 29898, 1231, 1024, 29892, 9071, 2943, 29897, 426, 13, 1678, 565, 313, 3177, 29889, 275, 7900, 647, 3101, 426, 13, 418, 9071, 301, 9499, 353, 2943, 29889, 657, 6730, 5938, 890, 13, 418, 565, 313, 29880, 9499, 29889, 275, 1170, 580, 2607, 1024]}
{"line_number": 176, "line_type": "original", "code": "            next = leftSide.getNext();", "entropy": 3.2279460430145264, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [11.13957405090332, 8.133487701416016, 0.18641796708106995, 8.000060081481934, 0.7048578858375549, 0.41102710366249084, 0.004699020646512508, 0.45959416031837463, 0.01179494708776474], "tokens": [632, 2446, 353, 2175, 23908, 29889, 657, 9190, 890]}
{"line_number": 176, "line_type": "generated", "code": "\n  private boolean isNameAssignedTo(String name, Node node) {\n    for (Node c = node; c != null; c = c.getNext()) {\n      if (c.isAssign() && c.get", "entropy": 0.17080336809158325, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [0.12562258541584015, 0.5396097302436829, 0.391693115234375, 0.020123837515711784, 0.013770694844424725, 0.007753278594464064, 0.008054987527430058, 0.0010053823934867978, 0.002237199805676937, 0.0027743205428123474, 0.07676028460264206, 0.012066230177879333, 0.004524114541709423, 0.01284821517765522, 0.44270893931388855, 0.010033292695879936, 0.002490278100594878, 0.0031931623816490173, 0.11121080070734024, 1.3308117389678955, 0.003548042383044958, 0.027983393520116806, 1.437057614326477, 0.2670539915561676, 0.020175710320472717, 1.3774290084838867, 0.037901513278484344, 0.008200072683393955, 0.003858384909108281, 0.007884570397436619, 0.03326774388551712, 0.01147963386029005, 0.010202163830399513, 0.006984816864132881, 0.0021992563270032406, 0.03366824612021446, 0.012226278893649578, 0.002432722831144929, 0.0012948471121490002, 0.041344355791807175, 0.2754940986633301, 0.08353939652442932, 0.20082935690879822, 0.0441831536591053, 0.0881957933306694, 0.5264015197753906, 0.0005502378917299211, 0.2957497239112854, 0.39282849431037903, 0.42194318771362305, 0.004829646088182926, 0.08174635469913483], "tokens": [13, 29871, 2024, 7223, 338, 1170, 7900, 12961, 1762, 29898, 1231, 1024, 29892, 9071, 2943, 29897, 426, 13, 1678, 363, 313, 4247, 274, 353, 2943, 29936, 274, 2804, 1870, 29936, 274, 353, 274, 29889, 657, 9190, 3101, 426, 13, 418, 565, 313, 29883, 29889, 275, 7900, 647, 580, 2607, 274, 29889, 657]}
{"line_number": 177, "line_type": "original", "code": "            break;", "entropy": 5.452563762664795, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [10.200729370117188, 6.1411051750183105, 0.01585601642727852], "tokens": [632, 2867, 29936]}
{"line_number": 177, "line_type": "generated", "code": "\n    return false;\n  }\n\n  /**\n   * @return Whether the node is a reference to a name that might have\n   *         been assigned to.\n   */\n  private boolean isNameReference(Node node) {", "entropy": 0.5296398997306824, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [0.12266071140766144, 0.6171354055404663, 0.7851318717002869, 0.21718089282512665, 0.0013665156438946724, 0.006905026268213987, 0.020453723147511482, 0.002660308964550495, 0.011964933946728706, 0.19863687455654144, 0.12561416625976562, 0.41117486357688904, 0.02651279792189598, 0.0096843671053648, 0.0009324969723820686, 1.3165538311004639, 0.0914306566119194, 0.2057952731847763, 1.3186750411987305, 2.0332388877868652, 0.723381519317627, 0.984965980052948, 2.668973922729492, 0.13217106461524963, 0.7747582793235779, 1.3768357038497925, 1.1399519443511963, 2.155513048171997, 1.0007070302963257, 0.5376731157302856, 0.003966323100030422, 0.001709786825813353, 1.286650538444519, 0.9496869444847107, 0.7994759678840637, 0.7740001678466797, 0.746952474117279, 0.09584866464138031, 0.0046491860412061214, 0.022974733263254166, 0.0015624469378963113, 0.23627346754074097, 0.07298871874809265, 0.054167188704013824, 0.2695830166339874, 0.8440603613853455, 1.7722361087799072, 0.2030695080757141, 0.02142569236457348, 0.21380086243152618, 0.14556001126766205, 0.00199250434525311], "tokens": [13, 1678, 736, 2089, 29936, 13, 29871, 500, 13, 13, 29871, 7762, 13, 259, 334, 732, 2457, 26460, 278, 2943, 338, 263, 3407, 304, 263, 1024, 393, 1795, 505, 13, 259, 334, 308, 1063, 9859, 304, 29889, 13, 259, 3776, 13, 29871, 2024, 7223, 338, 1170, 7422, 29898, 4247, 2943, 29897, 426]}
{"line_number": 170, "line_type": "original", "code": "          Node leftSide = next.getFirstChild();", "entropy": 2.5071277618408203, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [11.20167064666748, 4.939000606536865, 4.177271842956543, 1.4540863037109375, 0.12324683368206024, 4.809854984283447, 0.7498515844345093, 0.029786866158246994, 0.048319075256586075, 0.008879343047738075, 0.036436937749385834], "tokens": [965, 9071, 2175, 23908, 353, 2446, 29889, 657, 6730, 5938, 890]}
{"line_number": 170, "line_type": "generated", "code": "\n  }\n\n  /**\n   * Checks if a name is assigned to in a node.\n   * @param name The name to check.\n   * @param node The node to check.\n   * @return Whether the name", "entropy": 0.3115192651748657, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [0.07741861045360565, 0.1288876235485077, 0.005025374703109264, 0.009836534969508648, 0.0832739919424057, 0.07127111405134201, 0.357464075088501, 0.02537376992404461, 0.006395942065864801, 0.00036054308293387294, 0.8810251951217651, 0.1244555190205574, 0.9999366998672485, 1.0427643060684204, 0.35895946621894836, 0.4592197835445404, 0.3833857476711273, 0.27371105551719666, 1.1136332750320435, 1.4156341552734375, 1.4735231399536133, 0.5928946733474731, 0.10886895656585693, 0.017095349729061127, 0.3538074791431427, 0.17924684286117554, 1.2402431964874268, 0.06798017770051956, 0.5855568051338196, 0.06004529446363449, 0.2495492696762085, 0.35311800241470337, 0.3485848307609558, 0.0030790797900408506, 0.0040849344804883, 0.013261212967336178, 0.0011026738211512566, 0.08982750028371811, 0.5740406513214111, 0.11081916838884354, 0.10798215121030807, 0.11964859068393707, 0.5228403806686401, 0.5636272430419922, 0.005354112479835749, 0.004366269335150719, 0.12776590883731842, 0.005267313215881586, 0.00704021705314517, 0.15968172252178192, 0.20706972479820251, 0.12359528988599777], "tokens": [13, 29871, 500, 13, 13, 29871, 7762, 13, 259, 334, 5399, 29879, 565, 263, 1024, 338, 9859, 304, 297, 263, 2943, 29889, 13, 259, 334, 732, 3207, 1024, 450, 1024, 304, 1423, 29889, 13, 259, 334, 732, 3207, 2943, 450, 2943, 304, 1423, 29889, 13, 259, 334, 732, 2457, 26460, 278, 1024]}
{"line_number": 171, "line_type": "original", "code": "          if (leftSide.isName() ||", "entropy": 2.316307306289673, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [11.329374313354492, 2.4796557426452637, 0.19910040497779846, 3.2976796627044678, 0.05419067665934563, 0.053416188806295395, 0.11944814026355743, 1.2237528562545776, 0.985910177230835, 3.420544147491455], "tokens": [965, 565, 313, 1563, 23908, 29889, 275, 1170, 580, 3830]}
{"line_number": 171, "line_type": "generated", "code": "\n  private boolean isNameAssignedTo(String name, Node node) {\n    while (node != null) {\n      if (node.isName() && node.getString().equals(name)) {\n        return true;\n     ", "entropy": 0.22839868068695068, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [0.05282396078109741, 1.1455720663070679, 1.1109379529953003, 0.10968051850795746, 0.034854285418987274, 0.06343042850494385, 0.03043382801115513, 0.0012267453130334616, 0.0020517506636679173, 0.0032825181260704994, 0.09038210660219193, 0.044213149696588516, 0.007594049442559481, 0.027926359325647354, 1.8674005270004272, 0.012283391319215298, 0.0020625763572752476, 0.002282991772517562, 0.06372653692960739, 2.625429630279541, 0.02660752460360527, 0.26917433738708496, 0.21372461318969727, 0.09445727616548538, 0.10049846768379211, 0.0010880271438509226, 0.0009174905135296285, 0.028594451025128365, 0.5217726230621338, 0.04506271705031395, 0.42801371216773987, 0.03248749300837517, 0.08276152610778809, 0.966909646987915, 0.2683342695236206, 0.2675189971923828, 0.7656674385070801, 0.0017575069796293974, 0.004185844212770462, 0.0162891186773777, 0.0021509623620659113, 0.001404728856869042, 0.0016576610505580902, 0.04544735699892044, 0.0040906332433223724, 0.0013978243805468082, 0.01576179265975952, 0.13585147261619568, 0.2255949229001999, 0.0019720408599823713, 0.002901512896642089, 0.005082306452095509], "tokens": [13, 29871, 2024, 7223, 338, 1170, 7900, 12961, 1762, 29898, 1231, 1024, 29892, 9071, 2943, 29897, 426, 13, 1678, 1550, 313, 3177, 2804, 1870, 29897, 426, 13, 418, 565, 313, 3177, 29889, 275, 1170, 580, 2607, 2943, 29889, 13719, 2141, 10954, 29898, 978, 876, 426, 13, 4706, 736, 1565, 29936, 13, 418]}
