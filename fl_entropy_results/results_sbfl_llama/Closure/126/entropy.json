{"line_number": 142, "line_type": "original", "code": "        Node finallyBlock = n.getLastChild();", "entropy": 2.097540855407715, "is_bug_line": true, "sus_score": 1.0, "per_token_entropy": [10.37161636352539, 4.32729434967041, 7.049777984619141, 0.09291284531354904, 0.025180356577038765, 1.0351250171661377, 0.056115034967660904, 0.011194635182619095, 0.06394227594137192, 0.00031704644788987935, 0.03947361931204796], "tokens": [308, 9071, 7146, 7445, 353, 302, 29889, 657, 8897, 5938, 890]}
{"line_number": 142, "line_type": "generated", "code": "\n    // Now process the rest of the children.\n    for (Node c : n.children()) {\n      tryMinimizeExits(c, exitType, labelName);\n\n      if (c == n.getLastChild", "entropy": 0.29933634400367737, "is_bug_line": true, "sus_score": 1.0, "per_token_entropy": [0.10750874131917953, 0.5709693431854248, 0.32093626260757446, 2.61544132232666, 2.2333455085754395, 0.5346541404724121, 2.2601962089538574, 0.17365068197250366, 0.03604329004883766, 2.2789132595062256, 0.5340842008590698, 0.04992831498384476, 0.015775522217154503, 0.32327160239219666, 0.001001571537926793, 0.05484382435679436, 0.03173180669546127, 0.391899436712265, 0.02509177289903164, 0.002001427114009857, 0.004076386336237192, 0.00331911351531744, 0.0007443041540682316, 0.0006865289760753512, 0.3002323806285858, 0.6659252643585205, 0.0030838334932923317, 0.0005498804384842515, 0.0005964645533822477, 0.006493302993476391, 6.949660019017756e-05, 0.0007202415145002306, 0.001086121890693903, 0.0008989107445813715, 0.0014248467050492764, 0.0001817776501411572, 0.00042763148667290807, 0.005943008232861757, 0.00017867876158561558, 0.0006635371246375144, 0.0011820956133306026, 1.688568115234375, 0.018115542829036713, 0.26479634642601013, 0.003913602326065302, 0.013174626976251602, 0.011550222523510456, 0.0016123164677992463, 0.0006713996990583837, 0.00043394684325903654, 0.002510968828573823, 0.00036900385748595], "tokens": [13, 1678, 849, 2567, 1889, 278, 1791, 310, 278, 4344, 29889, 13, 1678, 363, 313, 4247, 274, 584, 302, 29889, 11991, 3101, 426, 13, 418, 1018, 8140, 326, 675, 1252, 1169, 29898, 29883, 29892, 6876, 1542, 29892, 3858, 1170, 416, 13, 13, 418, 565, 313, 29883, 1275, 302, 29889, 657, 8897, 5938]}
{"line_number": 143, "line_type": "original", "code": "        tryMinimizeExits(finallyBlock, exitType, labelName);", "entropy": 1.2106350660324097, "is_bug_line": true, "sus_score": 1.0, "per_token_entropy": [8.343968391418457, 0.9162364602088928, 0.012097911909222603, 0.0003307510633021593, 0.0004357342259027064, 0.03538280725479126, 7.748303323751315e-05, 0.0031781899742782116, 12.36648941040039, 0.0054909358732402325, 0.030255848541855812, 0.0081644831225276, 0.034647613763809204, 0.0003953390696551651, 0.0022182876709848642, 0.023077482357621193, 0.0004489606071729213, 0.00853592436760664], "tokens": [308, 1018, 8140, 326, 675, 1252, 1169, 29898, 4951, 635, 7445, 29892, 6876, 1542, 29892, 3858, 1170, 416]}
{"line_number": 143, "line_type": "generated", "code": "\n  }\n\n  /**\n   * Tries to minimize the exits of a block with a known exit type.\n   *\n   * @param trueBlock The block that will be used if the condition is true.\n   *", "entropy": 0.5749450922012329, "is_bug_line": true, "sus_score": 1.0, "per_token_entropy": [0.22592270374298096, 0.8759509325027466, 0.007670354563742876, 0.006244197487831116, 0.11197911947965622, 0.13258971273899078, 0.4154447913169861, 0.04720531031489372, 0.007382848300039768, 0.0002646096108946949, 3.344346761703491, 0.0357823483645916, 0.01474236510694027, 0.5115760564804077, 0.009052662178874016, 0.7053568363189697, 0.5877221822738647, 9.655486064730212e-05, 0.45239073038101196, 1.0993719100952148, 1.008349895477295, 2.3014187812805176, 1.096545696258545, 1.715659260749817, 1.0111641883850098, 0.6068429946899414, 0.43656471371650696, 0.11095830053091049, 0.05228761211037636, 0.0412195585668087, 0.6711438894271851, 0.008257533423602581, 0.0007871866691857576, 0.4069354832172394, 0.09159699082374573, 1.4723798036575317, 0.09514177590608597, 0.387645959854126, 0.6288127899169922, 1.7032475471496582, 1.403438687324524, 0.7273172736167908, 3.112544536590576, 0.5693159699440002, 0.11501482129096985, 0.9329921007156372, 0.3052349090576172, 0.14508704841136932, 0.13554245233535767, 0.0086597865447402, 0.003510861424729228, 0.0004320403386373073], "tokens": [13, 29871, 500, 13, 13, 29871, 7762, 13, 259, 334, 323, 2722, 304, 6260, 675, 278, 429, 1169, 310, 263, 2908, 411, 263, 2998, 6876, 1134, 29889, 13, 259, 334, 13, 259, 334, 732, 3207, 1565, 7445, 450, 2908, 393, 674, 367, 1304, 565, 278, 4195, 338, 1565, 29889, 13, 259, 334]}
{"line_number": 128, "line_type": "original", "code": "      Node tryBlock = n.getFirstChild();", "entropy": 2.0840044021606445, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [7.4498820304870605, 4.235255241394043, 4.879709243774414, 1.276538610458374, 0.254043847322464, 2.172898054122925, 1.3220058679580688, 0.09137952327728271, 1.081028699874878, 0.000918681500479579, 0.16038821637630463], "tokens": [539, 9071, 1018, 7445, 353, 302, 29889, 657, 6730, 5938, 890]}
{"line_number": 128, "line_type": "generated", "code": "\n        tryMinimizeIfBlockExits(falseBlock, null,\n            ifTree, exitType, labelName);\n\n        // The 'if' node may have been removed.\n        if (ifTree.getParent() ==", "entropy": 0.38751211762428284, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [0.043519120663404465, 0.11338786780834198, 0.7415331602096558, 0.005747814662754536, 0.0002083561266772449, 0.0002936885575763881, 0.17133252322673798, 0.019451230764389038, 0.002756607485935092, 3.4450891689630225e-05, 0.0010305099422112107, 0.07274123281240463, 6.41325386823155e-05, 0.00045408427831716835, 1.5591166019439697, 0.005258894059807062, 0.1702776700258255, 0.030791310593485832, 0.02218523994088173, 0.00023231192608363926, 0.02070947363972664, 0.001256510615348816, 6.460934673668817e-05, 0.00017736769223120064, 0.0012771077454090118, 5.936446541454643e-05, 0.0005402297829277813, 0.002155244816094637, 1.281501293182373, 0.3794153034687042, 0.3793473541736603, 2.935703754425049, 2.2481839656829834, 0.44196227192878723, 0.05879346281290054, 1.557442545890808, 1.783773422241211, 0.7069557309150696, 0.3011232018470764, 0.7916700839996338, 1.3790619373321533, 0.12261579185724258, 0.12962624430656433, 0.6650834679603577, 0.23554836213588715, 0.687890350818634, 0.002387651242315769, 0.1282622218132019, 0.06787113100290298, 0.06714819371700287, 0.03769351914525032, 0.7749122977256775], "tokens": [13, 4706, 1018, 8140, 326, 675, 3644, 7445, 1252, 1169, 29898, 4541, 7445, 29892, 1870, 29892, 13, 9651, 565, 9643, 29892, 6876, 1542, 29892, 3858, 1170, 416, 13, 13, 4706, 849, 450, 525, 361, 29915, 2943, 1122, 505, 1063, 6206, 29889, 13, 4706, 565, 313, 361, 9643, 29889, 657, 9780, 580, 1275]}
{"line_number": 129, "line_type": "original", "code": "      tryMinimizeExits(tryBlock, exitType, labelName);", "entropy": 1.3570079803466797, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [7.093096733093262, 3.165132999420166, 0.15733011066913605, 0.00014327930693980306, 7.950943836476654e-05, 2.9779281616210938, 2.682172998902388e-05, 0.0018942285096272826, 7.6390252113342285, 1.982927918434143, 0.00830825325101614, 0.019413232803344727, 0.00032586511224508286, 0.002630704315379262, 0.0171695277094841, 0.0005494038923643529, 0.003152165561914444], "tokens": [539, 1018, 8140, 326, 675, 1252, 1169, 29898, 2202, 7445, 29892, 6876, 1542, 29892, 3858, 1170, 416]}
{"line_number": 129, "line_type": "generated", "code": "\n        trueBlock = ifTree.getFirstChild().getNext();\n        falseBlock = trueBlock.getNext();\n        tryMinimizeIfBlockExits(falseBlock, trueBlock,\n            ifTree, exitType, label", "entropy": 0.0216978769749403, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [0.04620971530675888, 0.10605061799287796, 0.23146067559719086, 8.701899787411094e-05, 0.0015706595731899142, 0.0337442010641098, 0.0003149013500660658, 0.000834236154332757, 0.0007434703293256462, 0.004265971481800079, 4.1483970562694594e-05, 0.0022474287543445826, 0.00025376438861712813, 9.63164638960734e-05, 0.0007394201820716262, 0.004911382216960192, 0.05088385194540024, 0.06109495460987091, 2.586808113846928e-05, 0.0004981707315891981, 0.018868833780288696, 4.3748852476710454e-05, 0.008017618209123611, 0.0027466213796287775, 0.00020549570035655051, 0.0013004426145926118, 0.00303914793767035, 0.13648846745491028, 0.19337348639965057, 0.0029082882683724165, 5.23315102327615e-05, 0.0003623305819928646, 0.038491055369377136, 0.008629649877548218, 0.001191025716252625, 2.90866428258596e-05, 0.000612071540672332, 0.06640086323022842, 1.9550132492440753e-05, 0.0002503081923350692, 0.02629173919558525, 1.0251946150674485e-05, 0.00038509105797857046, 0.02017395757138729, 0.021883683279156685, 0.01088467426598072, 0.00017855956684798002, 0.017427993938326836, 0.0008232779800891876, 1.3232143828645349e-05, 8.856858039507642e-05, 0.0010240792762488127], "tokens": [13, 4706, 1565, 7445, 353, 565, 9643, 29889, 657, 6730, 5938, 2141, 657, 9190, 890, 13, 4706, 2089, 7445, 353, 1565, 7445, 29889, 657, 9190, 890, 13, 4706, 1018, 8140, 326, 675, 3644, 7445, 1252, 1169, 29898, 4541, 7445, 29892, 1565, 7445, 29892, 13, 9651, 565, 9643, 29892, 6876, 1542, 29892, 3858]}
{"line_number": 130, "line_type": "original", "code": "      Node allCatchNodes = NodeUtil.getCatchBlock(n);", "entropy": 1.1364206075668335, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [7.271545886993408, 3.847538948059082, 2.905806303024292, 0.9810341000556946, 0.026171667501330376, 0.19506753981113434, 0.2198837399482727, 1.5766522884368896, 0.012694268487393856, 0.0029924397822469473, 0.018357379361987114, 0.5039790272712708, 0.001958239823579788, 0.06818597763776779, 0.05960434302687645, 1.5582574605941772, 0.06942255049943924], "tokens": [539, 9071, 599, 29907, 905, 20284, 353, 9071, 7270, 29889, 657, 29907, 905, 7445, 29898, 29876, 416]}
{"line_number": 130, "line_type": "generated", "code": "\n        if (falseBlock != null) {\n          tryMinimizeIfBlockExits(falseBlock, null,\n              ifTree, exitType, labelName);\n        }\n      }\n\n      // An 'if' block", "entropy": 0.16919854283332825, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [0.06802539527416229, 0.116813525557518, 1.0138914585113525, 0.03300953656435013, 0.2625313699245453, 6.401333666872233e-05, 0.242476686835289, 0.022850535809993744, 0.06942977756261826, 0.0011984078446403146, 0.022606870159506798, 0.06789463758468628, 0.39027196168899536, 0.002411079127341509, 0.0001072826053132303, 0.00020108585886191577, 0.1058032438158989, 0.0034608489368110895, 0.0006112375995144248, 1.2159273865108844e-05, 0.0004558716027531773, 0.1758487969636917, 2.276871418871451e-05, 0.00015710550360381603, 0.8122743368148804, 0.007493128068745136, 0.20167002081871033, 0.04708215221762657, 0.036826521158218384, 0.0005433275364339352, 0.026060059666633606, 0.0016780118457973003, 2.169585604860913e-05, 0.00015555603022221476, 0.002249212935566902, 5.3165931603871286e-05, 0.00037055302527733147, 0.0017677409341558814, 0.11998772621154785, 0.00027176024741493165, 0.055600520223379135, 0.6011693477630615, 0.002583739347755909, 0.18646694719791412, 0.5694999694824219, 0.0578596331179142, 0.0921611562371254, 2.1675028800964355, 0.36179372668266296, 0.4434167146682739, 0.12086321413516998, 0.2807450592517853], "tokens": [13, 4706, 565, 313, 4541, 7445, 2804, 1870, 29897, 426, 13, 3986, 1018, 8140, 326, 675, 3644, 7445, 1252, 1169, 29898, 4541, 7445, 29892, 1870, 29892, 13, 795, 565, 9643, 29892, 6876, 1542, 29892, 3858, 1170, 416, 13, 4706, 500, 13, 418, 500, 13, 13, 418, 849, 530, 525, 361, 29915, 2908]}
{"line_number": 131, "line_type": "original", "code": "      if (NodeUtil.hasCatchHandler(allCatchNodes)) {", "entropy": 1.4468446969985962, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [6.78715181350708, 1.645146369934082, 0.060050006955862045, 3.42751407623291, 0.011078395880758762, 0.00026174934464506805, 0.8483632802963257, 1.2212259769439697, 0.04682759940624237, 0.8587154150009155, 0.0047317673452198505, 9.552749633789062, 0.01221485622227192, 0.0010706413304433227, 0.030053196474909782, 0.07971620559692383, 0.009488839656114578], "tokens": [539, 565, 313, 4247, 7270, 29889, 5349, 29907, 905, 4598, 29898, 497, 29907, 905, 20284, 876, 426]}
{"line_number": 131, "line_type": "generated", "code": "\n        tryMinimizeIfBlockExits(falseBlock, trueBlock,\n            ifTree, exitType, labelName);\n<|mask:1|>\n      }\n\n      // A 'try/catch/finally'", "entropy": 0.20999804139137268, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [0.09976896643638611, 0.41002437472343445, 0.9575217366218567, 0.010289479047060013, 0.00014697425649501383, 0.0003106111544184387, 0.11333007365465164, 0.01103100087493658, 0.0032732500694692135, 1.585470999998506e-05, 0.0017227584030479193, 0.08556979149580002, 4.076874756719917e-05, 0.00039057256071828306, 0.12551376223564148, 2.1457441107486375e-05, 0.0008114859228953719, 0.04117128252983093, 0.050436120480298996, 0.018246769905090332, 0.00024172721896320581, 0.03539465740323067, 0.0013071097200736403, 1.823885577323381e-05, 0.00021038226259406656, 0.001774761825799942, 8.463501580990851e-05, 0.0007655074005015194, 0.005966471508145332, 1.7933752536773682, 0.0009242791566066444, 0.1845218688249588, 0.00795494019985199, 0.31239065527915955, 0.010310481302440166, 0.6410502195358276, 0.1269090473651886, 0.32521095871925354, 0.0033407374285161495, 0.19193939864635468, 0.4429939389228821, 0.05788764730095863, 0.10175497829914093, 1.493506669998169, 0.57890784740448, 1.3098576068878174, 0.822623610496521, 0.06041467934846878, 0.33481845259666443, 0.0035337877925485373, 0.0007372760446742177, 0.13953238725662231], "tokens": [13, 4706, 1018, 8140, 326, 675, 3644, 7445, 1252, 1169, 29898, 4541, 7445, 29892, 1565, 7445, 29892, 13, 9651, 565, 9643, 29892, 6876, 1542, 29892, 3858, 1170, 416, 13, 29966, 29989, 13168, 29901, 29896, 29989, 29958, 13, 418, 500, 13, 13, 418, 849, 319, 525, 2202, 29914, 12510, 29914, 4951, 635, 29915]}
{"line_number": 141, "line_type": "original", "code": "      if (NodeUtil.hasFinally(n)) {", "entropy": 1.6625367403030396, "is_bug_line": true, "sus_score": 0.5773502691896258, "per_token_entropy": [9.694674491882324, 3.2786967754364014, 0.15370596945285797, 2.164318323135376, 0.0031297055538743734, 0.0004768426588270813, 2.3304944038391113, 3.837181568145752, 0.001081715920008719, 0.028188318014144897, 0.034157995134592056, 0.08166560530662537, 0.0052036321721971035], "tokens": [539, 565, 313, 4247, 7270, 29889, 5349, 12881, 635, 29898, 29876, 876, 426]}
{"line_number": 141, "line_type": "generated", "code": "\n    // Remove the exit node.\n    if (matchingExitNode(n, exitType, labelName)) {\n      NodeUtil.removeChild(n.getParent(), n);\n      compiler.reportCodeChange();\n    }", "entropy": 0.30255040526390076, "is_bug_line": true, "sus_score": 0.5773502691896258, "per_token_entropy": [0.0776699036359787, 0.8182317614555359, 0.3822935223579407, 2.9957098960876465, 1.9203650951385498, 1.782305121421814, 1.90889573097229, 1.7407066822052002, 0.08597089350223541, 0.023783860728144646, 1.4261672496795654, 0.039609864354133606, 0.14879551529884338, 0.0006775943911634386, 0.002998501295223832, 0.0015637562610208988, 0.0024523441679775715, 0.178079292178154, 1.1376900672912598, 0.003948274999856949, 0.00023576818057335913, 0.004060239996761084, 0.003493992844596505, 0.00016139635408762842, 0.012070705182850361, 0.000832449528388679, 0.0009716795175336301, 0.02068541944026947, 0.16295742988586426, 0.044137757271528244, 0.0004390706308186054, 0.006427804473787546, 0.0013062763027846813, 0.0006816447712481022, 0.002727956511080265, 0.11154833436012268, 0.0007537146448157728, 0.0004993622424080968, 0.000900101731531322, 0.009206934832036495, 0.006700665690004826, 0.001745368936099112, 0.07648755609989166, 0.02406366355717182, 0.0011079132091253996, 0.0014135378878563643, 0.001618862384930253, 0.00010656742961145937, 0.0008691347320564091, 0.0009308296139352024, 0.5520741939544678, 0.0034886470530182123], "tokens": [13, 1678, 849, 15154, 278, 6876, 2943, 29889, 13, 1678, 565, 313, 4352, 292, 24365, 4247, 29898, 29876, 29892, 6876, 1542, 29892, 3858, 1170, 876, 426, 13, 418, 9071, 7270, 29889, 5992, 5938, 29898, 29876, 29889, 657, 9780, 3285, 302, 416, 13, 418, 6516, 29889, 12276, 3399, 7277, 890, 13, 1678, 500]}
{"line_number": 285, "line_type": "original", "code": "          return n.hasChildren()", "entropy": 3.057295083999634, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [12.827279090881348, 2.433155059814453, 3.72733736038208, 0.319725900888443, 1.6749637126922607, 0.04432240501046181, 0.37428033351898193], "tokens": [965, 736, 302, 29889, 5349, 19334, 580]}
{"line_number": 285, "line_type": "generated", "code": "\n\n  /**\n   * Determines if n is a condition node that can be rewritten.\n   * @param n The node to inspect.\n   * @return Whether the node is a condition node that can be rewritten.\n", "entropy": 0.5256838798522949, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [0.061566296964883804, 0.6899939775466919, 0.09192457050085068, 0.25631803274154663, 0.019913630560040474, 0.00328465667553246, 0.00013100242358632386, 2.0609753131866455, 0.033227503299713135, 0.27941641211509705, 0.26623624563217163, 2.6051712036132812, 0.8501031398773193, 0.568164050579071, 4.501091480255127, 1.7676689624786377, 1.101006269454956, 1.3307713270187378, 0.17123298346996307, 3.2296013832092285, 0.5179307460784912, 1.408539056777954, 0.1587010622024536, 0.0017025275155901909, 0.056917954236269, 0.49421900510787964, 0.07796623557806015, 0.06430966407060623, 0.2094547003507614, 0.17593427002429962, 0.0608014278113842, 0.21582350134849548, 0.018851403146982193, 0.008947161957621574, 0.0005134217790327966, 0.07030320167541504, 0.0030020668637007475, 0.12218355387449265, 0.11452963948249817, 0.4243029057979584, 0.05762750655412674, 0.8544454574584961, 0.30280596017837524, 0.6866872310638428, 0.8451624512672424, 0.34829631447792053, 0.06509777158498764, 0.009610339999198914, 0.040137022733688354, 0.00966653972864151, 0.02076049894094467, 0.0025285673327744007], "tokens": [13, 13, 29871, 7762, 13, 259, 334, 5953, 837, 1475, 565, 302, 338, 263, 4195, 2943, 393, 508, 367, 337, 17625, 29889, 13, 259, 334, 732, 3207, 302, 450, 2943, 304, 16096, 29889, 13, 259, 334, 732, 2457, 26460, 278, 2943, 338, 263, 4195, 2943, 393, 508, 367, 337, 17625, 29889, 13]}
{"line_number": 110, "line_type": "original", "code": "      NodeUtil.removeChild(n.getParent(), n);", "entropy": 1.6183159351348877, "is_bug_line": false, "sus_score": 0.4472135954999579, "per_token_entropy": [9.247772216796875, 3.379347562789917, 4.763817310333252, 0.006986711174249649, 2.2992589473724365, 0.18637235462665558, 0.02081829309463501, 0.08139058947563171, 2.396066665649414, 0.019795246422290802, 0.15859587490558624, 0.012713689357042313, 0.01734047941863537, 0.06614727526903152], "tokens": [539, 9071, 7270, 29889, 5992, 5938, 29898, 29876, 29889, 657, 9780, 3285, 302, 416]}
{"line_number": 110, "line_type": "generated", "code": "\n    Node lastChild = n.getLastChild();\n    Node secondToLastChild = lastChild.getPrevious();\n    Node exitNode = null;\n    boolean hasExit = false;\n    if (matchingExitNode(", "entropy": 0.46442359685897827, "is_bug_line": false, "sus_score": 0.4472135954999579, "per_token_entropy": [0.036741722375154495, 0.33482825756073, 1.0561045408248901, 0.8510044813156128, 0.8958526849746704, 0.04756560176610947, 0.13660338521003723, 0.002577318577095866, 0.0017642899183556437, 0.0025769618805497885, 7.009260298218578e-05, 0.016349049285054207, 0.005500064697116613, 0.443498432636261, 1.4404064416885376, 1.9100096225738525, 0.6605772972106934, 0.0005704921204596758, 0.4367072284221649, 0.021642114967107773, 0.436605304479599, 7.688703772146255e-05, 0.007508864160627127, 0.0007428746903315187, 0.0025939648039638996, 0.00017975145601667464, 0.002623332664370537, 0.0018168861279264092, 0.8200602531433105, 1.667738914489746, 1.7008413076400757, 0.511025071144104, 0.2056930959224701, 0.3841302692890167, 0.002576724160462618, 0.011113056913018227, 0.6623812913894653, 1.3904590606689453, 2.402184009552002, 1.6373740434646606, 0.5194403529167175, 0.19801940023899078, 0.002861217362806201, 0.003752572927623987, 0.6369174122810364, 1.9665005207061768, 0.08178886026144028, 0.5850303769111633, 0.0010150285670533776, 0.0033987159840762615, 0.0016066036187112331, 0.001019553979858756], "tokens": [13, 1678, 9071, 1833, 5938, 353, 302, 29889, 657, 8897, 5938, 890, 13, 1678, 9071, 1473, 1762, 8897, 5938, 353, 1833, 5938, 29889, 657, 6572, 2366, 890, 13, 1678, 9071, 6876, 4247, 353, 1870, 29936, 13, 1678, 7223, 756, 24365, 353, 2089, 29936, 13, 1678, 565, 313, 4352, 292, 24365, 4247, 29898]}
{"line_number": 111, "line_type": "original", "code": "      compiler.reportCodeChange();", "entropy": 3.1568784713745117, "is_bug_line": false, "sus_score": 0.4472135954999579, "per_token_entropy": [8.989835739135742, 11.289078712463379, 0.03898647055029869, 0.20970314741134644, 1.5413974523544312, 3.5523738915799186e-05, 0.029111118987202644], "tokens": [539, 6516, 29889, 12276, 3399, 7277, 890]}
{"line_number": 111, "line_type": "generated", "code": "\n    boolean changed = false;\n\n    // Attempt to move the exit into the previous if-block.\n    Node ifBlock = n.getFirstChild();\n    while (ifBlock.isIf()) {\n      Node ifCode", "entropy": 0.7101842761039734, "is_bug_line": false, "sus_score": 0.4472135954999579, "per_token_entropy": [0.08243807405233383, 0.2485450804233551, 2.6533966064453125, 2.156282901763916, 0.20124578475952148, 0.6052289009094238, 0.0012184107908979058, 0.0043254392221570015, 1.3695898056030273, 0.07215967774391174, 0.48540863394737244, 4.516718864440918, 0.014168738387525082, 0.05577641353011131, 1.4531422853469849, 1.9640460014343262, 1.5012229681015015, 1.5256234407424927, 0.3615686297416687, 3.6956653594970703, 1.1249321699142456, 1.2009564638137817, 0.626142144203186, 0.3424086272716522, 0.0678202286362648, 0.14751100540161133, 0.9919604063034058, 1.9205436706542969, 0.5744448900222778, 0.06237739697098732, 0.6669018268585205, 0.03677642345428467, 0.003095123451203108, 0.5278189182281494, 0.0011088658357039094, 0.1029704362154007, 0.0026082326658070087, 0.07180503755807877, 0.459276020526886, 0.02949558012187481, 0.21413061022758484, 0.00015901254664640874, 0.557015061378479, 0.07348041236400604, 0.021566634997725487, 0.1328723132610321, 0.00036554806865751743, 0.001277345814742148, 0.09104610979557037, 0.4611910581588745, 1.1710796356201172, 2.27667236328125], "tokens": [13, 1678, 7223, 3939, 353, 2089, 29936, 13, 13, 1678, 849, 6212, 3456, 304, 4337, 278, 6876, 964, 278, 3517, 565, 29899, 1271, 29889, 13, 1678, 9071, 565, 7445, 353, 302, 29889, 657, 6730, 5938, 890, 13, 1678, 1550, 313, 361, 7445, 29889, 275, 3644, 3101, 426, 13, 418, 9071, 565, 3399]}
{"line_number": 112, "line_type": "original", "code": "      return;", "entropy": 4.079816818237305, "is_bug_line": false, "sus_score": 0.4472135954999579, "per_token_entropy": [5.580496311187744, 6.547807693481445, 0.11114627122879028], "tokens": [539, 736, 29936]}
{"line_number": 112, "line_type": "generated", "code": "\n    // \"if (blah) ;  else { if (blah2) ;  else { other_stmt; } }\"\n<|mask:0|>\n    // Convert \"if (blah) break;  else other_stmt", "entropy": 0.3460721969604492, "is_bug_line": false, "sus_score": 0.4472135954999579, "per_token_entropy": [0.3538688123226166, 0.4433194398880005, 0.30473726987838745, 0.8444077968597412, 0.019310925155878067, 0.0708971694111824, 0.015480476431548595, 0.2832782566547394, 0.9521898627281189, 0.7211709022521973, 0.6802185773849487, 0.5449674129486084, 0.7595832943916321, 0.010841397568583488, 0.005027984268963337, 0.009446446783840656, 0.019033530727028847, 0.0914519801735878, 0.21790984272956848, 0.06535027921199799, 0.19189885258674622, 0.15621651709079742, 0.004668171051889658, 0.014237727038562298, 0.05218125879764557, 0.14641566574573517, 0.14406543970108032, 0.37516945600509644, 0.04258919134736061, 1.9111846685409546, 0.0029500082600861788, 0.083218052983284, 0.005644454620778561, 0.9624888300895691, 0.003711004974320531, 0.3769547939300537, 0.0857522040605545, 0.31100255250930786, 0.5652860403060913, 2.5626773834228516, 0.07610295712947845, 0.04118947312235832, 0.0077018216252326965, 0.045567985624074936, 0.01953715831041336, 0.862285315990448, 0.0349627286195755, 0.08733163774013519, 1.38649582862854, 0.9905461072921753, 0.005942178890109062, 0.02728716842830181], "tokens": [13, 1678, 849, 376, 361, 313, 29844, 29897, 2056, 29871, 1683, 426, 565, 313, 29844, 29906, 29897, 2056, 29871, 1683, 426, 916, 29918, 17868, 29936, 500, 500, 29908, 13, 29966, 29989, 13168, 29901, 29900, 29989, 29958, 13, 1678, 849, 14806, 376, 361, 313, 29844, 29897, 2867, 29936, 29871, 1683, 916, 29918, 17868]}
{"line_number": 132, "line_type": "original", "code": "        Preconditions.checkState(allCatchNodes.hasOneChild());", "entropy": 2.331939935684204, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [7.2981672286987305, 10.285026550292969, 0.01659330539405346, 8.21318244561553e-05, 0.009049354121088982, 0.00625663623213768, 0.14470331370830536, 0.0634569451212883, 10.872223854064941, 5.402425765991211, 0.061590395867824554, 0.02338997647166252, 0.42465052008628845, 2.0333380699157715, 2.8413949012756348, 4.362964682513848e-05, 0.1605857014656067], "tokens": [308, 4721, 1116, 2187, 29889, 3198, 2792, 29898, 497, 29907, 905, 20284, 29889, 5349, 6716, 5938, 3310]}
{"line_number": 132, "line_type": "generated", "code": "\n          tryMinimizeIfBlockExits(falseBlock, trueBlock,\n              ifTree, exitType, labelName);\n        }\n      }\n\n      // A 'try' block to process below.\n      if (c", "entropy": 0.15463392436504364, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [0.06419060379266739, 0.07636253535747528, 0.168233722448349, 0.0030796739738434553, 0.00011240804451517761, 0.00010656742961145937, 0.21429072320461273, 0.0070438869297504425, 0.0014998388942331076, 1.9430925021879375e-05, 0.0007892115972936153, 0.11439567804336548, 3.1709168979432434e-05, 0.00013159839727450162, 0.2166372537612915, 2.1219027985353023e-05, 0.0011511372867971659, 0.040391795337200165, 0.05985487997531891, 0.039875540882349014, 0.00020096666412428021, 0.04383225366473198, 0.0015192406717687845, 1.0013530300057027e-05, 0.000169382052263245, 0.0017866615671664476, 6.5205356804654e-05, 0.0005324853118509054, 0.001209242851473391, 0.24188150465488434, 0.001313300454057753, 0.04086647182703018, 0.997233510017395, 0.004169580992311239, 0.1590089052915573, 0.5542662143707275, 0.06815000623464584, 0.10056423395872116, 1.6703989505767822, 0.8070719242095947, 0.8606555461883545, 0.5360819101333618, 0.2196858525276184, 0.17966307699680328, 0.03159540891647339, 0.15118448436260223, 0.028698593378067017, 0.013729071244597435, 0.030353225767612457, 0.26752567291259766, 0.004530641250312328, 0.014791112393140793], "tokens": [13, 3986, 1018, 8140, 326, 675, 3644, 7445, 1252, 1169, 29898, 4541, 7445, 29892, 1565, 7445, 29892, 13, 795, 565, 9643, 29892, 6876, 1542, 29892, 3858, 1170, 416, 13, 4706, 500, 13, 418, 500, 13, 13, 418, 849, 319, 525, 2202, 29915, 2908, 304, 1889, 2400, 29889, 13, 418, 565, 313, 29883]}
{"line_number": 133, "line_type": "original", "code": "        Node catchNode = allCatchNodes.getFirstChild();", "entropy": 2.1932218074798584, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [4.999643802642822, 3.420074701309204, 15.705671310424805, 0.450697660446167, 3.134450912475586, 2.6509106159210205, 0.002319623716175556, 0.0007487116381525993, 0.01779249683022499, 0.1902245581150055, 0.012207084335386753, 0.0781669020652771, 0.004802359733730555, 0.03739338740706444], "tokens": [308, 9071, 4380, 4247, 353, 599, 29907, 905, 20284, 29889, 657, 6730, 5938, 890]}
{"line_number": 133, "line_type": "generated", "code": "\n              ifTree, exitType, labelName);\n        }\n\n        // Move to the next child.\n        continue;\n      }\n\n      // Just a 'try/catch/finally'.\n      if (c.is", "entropy": 0.3162461221218109, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [0.37518665194511414, 0.35994887351989746, 0.25712743401527405, 0.0063806623220443726, 0.09876055270433426, 0.028488675132393837, 0.00011753345461329445, 0.0010436094598844647, 0.008287090808153152, 0.00011514954530866817, 0.008206930942833424, 0.006521490402519703, 0.123533234000206, 0.0011116046225652099, 0.02590848319232464, 1.0958845615386963, 0.4421008825302124, 0.4657839834690094, 4.055643081665039, 1.480972409248352, 0.11006288230419159, 0.09592816233634949, 1.2529828548431396, 0.4506748914718628, 0.021709073334932327, 0.07083863765001297, 0.09107320755720139, 0.0012459142599254847, 0.002613702090457082, 0.02904754877090454, 0.0010265801101922989, 0.012918119318783283, 0.0742582231760025, 0.055139441043138504, 0.1506490707397461, 2.355520248413086, 0.4693274199962616, 0.73939448595047, 0.8341740965843201, 0.39507195353507996, 0.020020784810185432, 0.06669051945209503, 0.00134222989436239, 0.000284154579276219, 0.1828162968158722, 0.022051731124520302, 0.031378936022520065, 0.04099005460739136, 0.0024475876707583666, 0.02089569717645645, 0.0009024838218465447, 0.00019858295854646713], "tokens": [13, 795, 565, 9643, 29892, 6876, 1542, 29892, 3858, 1170, 416, 13, 4706, 500, 13, 13, 4706, 849, 25249, 304, 278, 2446, 2278, 29889, 13, 4706, 6773, 29936, 13, 418, 500, 13, 13, 418, 849, 3387, 263, 525, 2202, 29914, 12510, 29914, 4951, 635, 4286, 13, 418, 565, 313, 29883, 29889, 275]}
{"line_number": 134, "line_type": "original", "code": "        Node catchCodeBlock = catchNode.getLastChild();", "entropy": 2.160155773162842, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [6.998554229736328, 5.340079307556152, 9.254606246948242, 2.470106601715088, 0.02268378622829914, 0.18918481469154358, 2.922689437866211, 0.4343387186527252, 0.08683447539806366, 0.0065583232790231705, 0.3446277976036072, 0.00011431517486926168, 0.011647317558526993], "tokens": [308, 9071, 4380, 3399, 7445, 353, 4380, 4247, 29889, 657, 8897, 5938, 890]}
{"line_number": 134, "line_type": "generated", "code": "\n        }\n\n        continue;\n      }\n\n      // Just a 'try/catch/finally'.\n      if (c.isTry()) {\n        Node tryBlock = c.getFirstChild();\n        tryMinim", "entropy": 0.20650433003902435, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [0.06022961065173149, 0.29077571630477905, 0.006027378607541323, 0.06921133399009705, 1.217185616493225, 0.4920450448989868, 1.563133716583252, 0.0007027302053757012, 0.04045327380299568, 0.028429467231035233, 0.0007944526732899249, 0.014031215570867062, 0.09369968622922897, 0.05672592669725418, 0.1791287511587143, 2.4148454666137695, 0.5085175037384033, 0.8735430240631104, 1.1207373142242432, 0.43573758006095886, 0.02798640727996826, 0.06409803777933121, 0.0014132998185232282, 0.00023934361524879932, 0.201356902718544, 0.023686306551098824, 0.017437951639294624, 0.04465558007359505, 0.002541171619668603, 0.020183421671390533, 0.0007859955076128244, 0.00019798702851403505, 0.0030440206173807383, 0.009534536860883236, 0.00031096869497559965, 0.00044216870446689427, 0.09448341280221939, 0.298913836479187, 0.06212424486875534, 0.15445631742477417, 0.008605184964835644, 0.04186077043414116, 0.007793022785335779, 0.00039962888695299625, 0.0013736584223806858, 4.911301948595792e-05, 0.002438787603750825, 0.001192454481497407, 0.03789037838578224, 0.13950885832309723, 0.0032147890888154507, 5.1973900554003194e-05], "tokens": [13, 4706, 500, 13, 13, 4706, 6773, 29936, 13, 418, 500, 13, 13, 418, 849, 3387, 263, 525, 2202, 29914, 12510, 29914, 4951, 635, 4286, 13, 418, 565, 313, 29883, 29889, 275, 15870, 3101, 426, 13, 4706, 9071, 1018, 7445, 353, 274, 29889, 657, 6730, 5938, 890, 13, 4706, 1018, 8140, 326]}
{"line_number": 135, "line_type": "original", "code": "        tryMinimizeExits(catchCodeBlock, exitType, labelName);", "entropy": 1.4670045375823975, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [7.456614017486572, 5.7357659339904785, 0.11114274710416794, 0.0002232540718978271, 0.0024943212047219276, 0.6363720297813416, 0.00026770823751576245, 0.01626155711710453, 11.689743995666504, 0.5116093158721924, 0.0019488405669108033, 0.0019847711082547903, 0.08747801184654236, 0.00038378025055862963, 0.004354044329375029, 0.14590632915496826, 0.0005217621219344437, 0.0030107428319752216], "tokens": [308, 1018, 8140, 326, 675, 1252, 1169, 29898, 12510, 3399, 7445, 29892, 6876, 1542, 29892, 3858, 1170, 416]}
{"line_number": 135, "line_type": "generated", "code": "\n      }\n    }\n\n    // Look for a block of statements with a single exit, and convert\n    // it to an if-else block.\n    for (Node c : n.children()) {\n\n      // If the", "entropy": 0.7533016204833984, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [0.05772990360856056, 0.7871121168136597, 0.07414521276950836, 0.29692062735557556, 1.232877254486084, 0.005545233376324177, 0.006755489390343428, 0.6418332457542419, 0.08894774317741394, 0.1985958218574524, 3.3240303993225098, 0.2312290221452713, 1.616619348526001, 2.0023632049560547, 1.69851815700531, 1.5250587463378906, 2.168941020965576, 0.822075366973877, 0.866403341293335, 0.3262053430080414, 2.445864200592041, 1.4812707901000977, 1.6897683143615723, 1.1605720520019531, 0.0025879007298499346, 0.0023382960353046656, 1.1415005922317505, 0.2882460057735443, 0.6521463990211487, 0.46374940872192383, 0.7926983833312988, 0.6014576554298401, 1.641567349433899, 0.3026237189769745, 0.21770256757736206, 0.06701420247554779, 1.2711446285247803, 0.0012404375011101365, 0.17497162520885468, 0.05182330682873726, 0.3688386082649231, 0.0262041836977005, 0.0008430502493865788, 0.0065177008509635925, 0.0017214493127539754, 0.0006668727728538215, 0.0007813499541953206, 1.430492877960205, 0.02459675259888172, 0.13968448340892792, 3.2659592628479004, 1.483185052871704], "tokens": [13, 418, 500, 13, 1678, 500, 13, 13, 1678, 849, 7419, 363, 263, 2908, 310, 9506, 411, 263, 2323, 6876, 29892, 322, 3588, 13, 1678, 849, 372, 304, 385, 565, 29899, 2870, 2908, 29889, 13, 1678, 363, 313, 4247, 274, 584, 302, 29889, 11991, 3101, 426, 13, 13, 418, 849, 960, 278]}
{"line_number": 224, "line_type": "original", "code": "        return;", "entropy": 4.758005142211914, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [7.805234909057617, 2.8011515140533447, 3.667628526687622], "tokens": [308, 736, 29936]}
{"line_number": 224, "line_type": "generated", "code": "\n   */\n  private boolean matchingExitNode(Node n, int type, String labelName) {\n    if (n == null) {\n      return false;\n    }\n\n    if (n.isReturn()) {\n     ", "entropy": 0.151255264878273, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [0.15423709154129028, 0.2049373984336853, 0.7922394275665283, 0.0005745429079979658, 0.019321799278259277, 0.0788566991686821, 0.09382179379463196, 0.006293360143899918, 0.0003543464408721775, 0.00047994061606004834, 0.003152046585455537, 0.014740251004695892, 0.0035239283461123705, 0.00036542891757562757, 0.03579764440655708, 0.03537129983305931, 0.0033435889054089785, 0.10605490952730179, 0.001583751873113215, 0.00041392818093299866, 0.002544144168496132, 0.0015960109885782003, 0.0011847150744870305, 0.19191814959049225, 0.7373514175415039, 0.09355846047401428, 0.2024608999490738, 0.43944382667541504, 0.0011180347064509988, 0.3573373258113861, 0.005659983027726412, 0.0051820483058691025, 0.0760461688041687, 0.04198182746767998, 0.01928742229938507, 0.0001627074379939586, 0.00485894875600934, 0.012449057772755623, 0.0002834395272657275, 0.0843016505241394, 0.5531973242759705, 0.08897174149751663, 1.2044203281402588, 0.13279996812343597, 0.617414653301239, 0.007223797030746937, 0.8020910620689392, 0.3218700885772705, 0.22403378784656525, 0.0005407063290476799, 0.001447463990189135, 0.07707321643829346], "tokens": [13, 259, 3776, 13, 29871, 2024, 7223, 9686, 24365, 4247, 29898, 4247, 302, 29892, 938, 1134, 29892, 1714, 3858, 1170, 29897, 426, 13, 1678, 565, 313, 29876, 1275, 1870, 29897, 426, 13, 418, 736, 2089, 29936, 13, 1678, 500, 13, 13, 1678, 565, 313, 29876, 29889, 275, 11609, 3101, 426, 13, 418]}
{"line_number": 247, "line_type": "original", "code": "      } else if (destBlock.isEmpty()) {", "entropy": 2.1984446048736572, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [7.061569690704346, 6.537426471710205, 2.0720608234405518, 1.4192590713500977, 0.06431558728218079, 1.3344168663024902, 0.580256998538971, 0.6160462498664856, 4.306052207946777, 0.183843731880188, 0.0076436190865933895], "tokens": [539, 500, 1683, 565, 313, 7854, 7445, 29889, 24326, 3101, 426]}
{"line_number": 247, "line_type": "generated", "code": "\n   * @param srcParent The parent of start.\n   * @param destParent The parent to move the children into.\n   */\n  private void moveAllFollowing(Node start, Node srcParent, Node destParent) {", "entropy": 0.19368380308151245, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [0.12360402941703796, 0.06318448483943939, 0.06361792981624603, 0.02007114328444004, 0.012515575625002384, 0.07400507479906082, 0.004462284967303276, 0.08830995112657547, 0.5139830112457275, 0.5513491034507751, 1.0016016960144043, 0.3587351441383362, 0.019005224108695984, 0.24357174336910248, 0.0089132534340024, 0.0038498349022120237, 0.0036421173717826605, 0.006406247150152922, 0.006284712348133326, 0.03670173138380051, 0.40362703800201416, 0.5855568647384644, 1.0272306203842163, 0.7035142779350281, 1.2888665199279785, 1.3725247383117676, 0.03072969615459442, 0.012511219829320908, 0.15966607630252838, 0.09496248513460159, 0.0028977093752473593, 0.022737158462405205, 0.059438444674015045, 0.7801161408424377, 0.002651748713105917, 0.0050490968860685825, 0.0021510813385248184, 0.0018704315880313516, 0.0005558376433327794, 0.005483941175043583, 0.08752104640007019, 0.0031659503001719713, 0.0012268644059076905, 0.07203323394060135, 0.0015550674870610237, 0.0012661544606089592, 0.0012294837506487966, 0.1280524879693985, 0.001928376266732812, 0.0009818024700507522, 0.00456624198704958, 0.0020737587474286556], "tokens": [13, 259, 334, 732, 3207, 4765, 9780, 450, 3847, 310, 1369, 29889, 13, 259, 334, 732, 3207, 2731, 9780, 450, 3847, 304, 4337, 278, 4344, 964, 29889, 13, 259, 3776, 13, 29871, 2024, 1780, 4337, 3596, 29943, 2952, 292, 29898, 4247, 1369, 29892, 9071, 4765, 9780, 29892, 9071, 2731, 9780, 29897, 426]}
{"line_number": 250, "line_type": "original", "code": "      } else if (destBlock.isBlock()) {", "entropy": 2.354238510131836, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [10.677000999450684, 4.908078193664551, 5.341299533843994, 1.7568480968475342, 0.11327206343412399, 1.7237536907196045, 0.2395881712436676, 0.9124082326889038, 2.194824695587158, 0.15958701074123383, 0.21365049481391907, 0.010548549704253674], "tokens": [539, 500, 1683, 565, 313, 7854, 7445, 29889, 275, 7445, 3101, 426]}
{"line_number": 250, "line_type": "generated", "code": "\n  private void moveAllFollowing(Node start, Node srcParent, Node destParent) {\n    Node n = start.getNext();\n    while (n != null) {\n      Node next = n.getNext();\n", "entropy": 0.11145593225955963, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [0.18463079631328583, 0.06521571427583694, 0.0847698450088501, 0.47621214389801025, 0.00665093120187521, 0.009549178183078766, 0.0034370890352874994, 0.0013810392701998353, 0.0004618293314706534, 0.006245263386517763, 0.1035502552986145, 0.0040090675465762615, 0.0010421803453937173, 0.04551194608211517, 0.0015976772410795093, 0.001192454481497407, 0.000878544058650732, 0.06163029745221138, 0.002130026463419199, 0.0010750473011285067, 0.0031008278019726276, 0.00700813764706254, 0.0023619630374014378, 0.06584317237138748, 1.1400341987609863, 1.2577459812164307, 0.09134318679571152, 0.039373572915792465, 0.8557696342468262, 0.0008468617452308536, 0.004739954136312008, 0.0028401773888617754, 0.0032862015068531036, 0.05301379784941673, 0.49452489614486694, 0.006578337401151657, 0.01343283336609602, 0.0038101710379123688, 0.0030332054011523724, 0.022614561021327972, 0.0009450022480450571, 0.0016649207100272179, 0.020225711166858673, 0.22174611687660217, 0.3357464075088501, 0.05681265518069267, 0.0031752190552651882, 0.004202938638627529, 0.0027295020408928394, 0.0023993058130145073, 0.001446868758648634, 0.012140663340687752], "tokens": [13, 29871, 2024, 1780, 4337, 3596, 29943, 2952, 292, 29898, 4247, 1369, 29892, 9071, 4765, 9780, 29892, 9071, 2731, 9780, 29897, 426, 13, 1678, 9071, 302, 353, 1369, 29889, 657, 9190, 890, 13, 1678, 1550, 313, 29876, 2804, 1870, 29897, 426, 13, 418, 9071, 2446, 353, 302, 29889, 657, 9190, 890, 13]}
{"line_number": 252, "line_type": "original", "code": "        newDestBlock = destBlock;", "entropy": 3.6389453411102295, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [8.712926864624023, 7.480629920959473, 1.5837100744247437, 2.5408520698547363, 1.2738187313079834, 1.9517898559570312, 5.383961200714111, 0.18387389183044434], "tokens": [308, 716, 14994, 7445, 353, 2731, 7445, 29936]}
{"line_number": 252, "line_type": "generated", "code": "\n    while (start.getNext() != null) {\n      Node toMove = start.getNext();\n      srcParent.removeChild(toMove);\n      destParent.addChildToBack(toMove);\n    }\n", "entropy": 0.1547185182571411, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [0.06479435414075851, 1.3219374418258667, 1.2951452732086182, 0.032371971756219864, 0.21536122262477875, 0.630733847618103, 0.02734215185046196, 0.0021721357479691505, 0.004995958413928747, 0.004009780008345842, 0.0047646318562328815, 0.01716507598757744, 0.003104987321421504, 0.00407009432092309, 0.07861132174730301, 0.4935154318809509, 2.6807003021240234, 0.07596530020236969, 0.01246907189488411, 0.043629709631204605, 0.017995189875364304, 0.05417881906032562, 0.0034199818037450314, 0.004217658657580614, 0.00456802174448967, 0.0445779412984848, 0.5275353193283081, 0.0021824846044182777, 0.0024507984053343534, 0.0033766180276870728, 0.001639213995076716, 0.10285352915525436, 0.023263731971383095, 0.001077190856449306, 0.0033458464313298464, 0.0029882797971367836, 0.01909738965332508, 0.1106119230389595, 0.0020072567276656628, 0.0026217871345579624, 0.006094206590205431, 0.003790338756516576, 0.005447543226182461, 0.0026252351235598326, 0.00254783034324646, 0.0032917859498411417, 0.002146323211491108, 0.004650728777050972, 0.00256863865070045, 0.05483569949865341, 0.0015672078588977456, 0.008927667513489723], "tokens": [13, 1678, 1550, 313, 2962, 29889, 657, 9190, 580, 2804, 1870, 29897, 426, 13, 418, 9071, 304, 16619, 353, 1369, 29889, 657, 9190, 890, 13, 418, 4765, 9780, 29889, 5992, 5938, 29898, 517, 16619, 416, 13, 418, 2731, 9780, 29889, 1202, 5938, 1762, 5841, 29898, 517, 16619, 416, 13, 1678, 500, 13]}
{"line_number": 282, "line_type": "original", "code": "        if (labelName == null) {", "entropy": 2.2414650917053223, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [12.483874320983887, 3.2508199214935303, 0.17936819791793823, 2.9891233444213867, 0.0901564210653305, 0.851109504699707, 0.014794048853218555, 0.3015221059322357, 0.012416091747581959], "tokens": [308, 565, 313, 1643, 1170, 1275, 1870, 29897, 426]}
{"line_number": 282, "line_type": "generated", "code": "\n  /**\n   * Determine if the given node is a simple expression.\n   * @param n The node to inspect.\n   * @return Whether the node is a simple expression.\n   */\n  private static boolean isSimple", "entropy": 0.41876283288002014, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [0.08111977577209473, 0.4300249218940735, 0.24517787992954254, 0.01872587390244007, 0.004067838191986084, 0.00017593742813915014, 1.9805848598480225, 0.029278766363859177, 1.5283286571502686, 0.3554839789867401, 0.9255183935165405, 2.1930158138275146, 1.1256866455078125, 0.6032751798629761, 0.782593309879303, 2.895451068878174, 2.5644171237945557, 1.1449086666107178, 0.308238685131073, 0.0017122859135270119, 0.1024089977145195, 0.49916189908981323, 0.1293010413646698, 0.3823322355747223, 0.20884822309017181, 0.07429895550012589, 0.10988271981477737, 0.8206098675727844, 0.022570740431547165, 0.006935806944966316, 0.0013722298899665475, 0.0824679285287857, 0.004115920979529619, 0.025692051276564598, 0.1733016073703766, 0.3075726330280304, 0.17561548948287964, 0.16802887618541718, 0.2500802278518677, 0.05968509241938591, 0.08856649696826935, 0.0994359627366066, 0.009089874103665352, 0.010378792881965637, 0.02118448168039322, 0.0016413562698289752, 0.014028394594788551, 0.10384386032819748, 0.4441975951194763, 0.010890216566622257, 0.03789646178483963, 0.11244487017393112], "tokens": [13, 29871, 7762, 13, 259, 334, 5953, 837, 457, 565, 278, 2183, 2943, 338, 263, 2560, 4603, 29889, 13, 259, 334, 732, 3207, 302, 450, 2943, 304, 16096, 29889, 13, 259, 334, 732, 2457, 26460, 278, 2943, 338, 263, 2560, 4603, 29889, 13, 259, 3776, 13, 29871, 2024, 2294, 7223, 338, 15427]}
{"line_number": 190, "line_type": "original", "code": "    }", "entropy": 4.964444160461426, "is_bug_line": false, "sus_score": 0.29488391230979427, "per_token_entropy": [6.2916975021362305, 3.6371910572052], "tokens": [268, 500]}
{"line_number": 190, "line_type": "generated", "code": "\n    if (exitNodeParent.getParent() == ifNode) {\n      // Move all of the siblings into the opposite block.\n      for (Node c = exitNode.getPrevious(); c != ifNode; c = c", "entropy": 0.5291210412979126, "is_bug_line": false, "sus_score": 0.29488391230979427, "per_token_entropy": [0.10419795662164688, 0.8948961496353149, 1.3591537475585938, 0.16238003969192505, 0.7452406287193298, 0.019763104617595673, 0.22595827281475067, 1.1384567022323608, 0.8931702375411987, 0.363424152135849, 1.0662403106689453, 0.7362570762634277, 0.20741777122020721, 0.0005703729693777859, 0.16006921231746674, 0.0015041239093989134, 0.004410895984619856, 0.13177041709423065, 0.7383310198783875, 2.411231279373169, 2.214301586151123, 1.5692253112792969, 0.2114669531583786, 0.9574259519577026, 0.2050487995147705, 1.89454984664917, 0.0780414342880249, 0.7540313005447388, 0.531710684299469, 0.19482259452342987, 0.024292081594467163, 0.09915812313556671, 1.7238305807113647, 0.0015711355954408646, 0.03883982077240944, 0.7557718753814697, 0.150528684258461, 0.3918474018573761, 0.00021562635083682835, 1.3583199977874756, 0.0015079329023137689, 0.24168193340301514, 6.496695277746767e-05, 0.011565069667994976, 0.5939059257507324, 0.006879808846861124, 1.6506669521331787, 0.00010132275929208845, 0.03926893323659897, 0.13979323208332062, 0.0033186383079737425, 0.3060963451862335], "tokens": [13, 1678, 565, 313, 13322, 4247, 9780, 29889, 657, 9780, 580, 1275, 565, 4247, 29897, 426, 13, 418, 849, 25249, 599, 310, 278, 27767, 18964, 964, 278, 11564, 2908, 29889, 13, 418, 363, 313, 4247, 274, 353, 6876, 4247, 29889, 657, 6572, 2366, 890, 274, 2804, 565, 4247, 29936, 274, 353, 274]}
