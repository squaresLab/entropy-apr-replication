{"line_number": 166, "line_type": "original", "code": "          inlinedNewDependencies.add(t.getScope().getVar(c.varName));", "entropy": 2.4989585876464844, "is_bug_line": false, "sus_score": 0.4472135954999579, "per_token_entropy": [6.4530744552612305, 9.369860649108887, 2.3208701610565186, 8.56039047241211, 3.8763961791992188, 0.48408401012420654, 1.1988615989685059, 1.478641152381897, 0.8817470669746399, 4.959619045257568, 0.06120574474334717, 0.025202559307217598, 0.2204970419406891, 0.12377005070447922, 0.1587810069322586, 0.008212368935346603, 0.015391969121992588, 10.044981956481934, 1.0806723833084106, 3.1295666694641113, 0.4193156063556671, 0.10594897717237473], "tokens": [965, 297, 21354, 4373, 8498, 7158, 29889, 1202, 29898, 29873, 29889, 657, 15289, 2141, 657, 9037, 29898, 29883, 29889, 1707, 1170, 2483]}
{"line_number": 166, "line_type": "generated", "code": "\n            Candidate c = new Candidate(n, cfgNode, defs);\n            if (c.canInline()) {\n              candidates.add(c);\n            }\n          }\n        }\n      };", "entropy": 0.19441094994544983, "is_bug_line": false, "sus_score": 0.4472135954999579, "per_token_entropy": [0.1011953353881836, 0.912756085395813, 2.3990366458892822, 0.01067876722663641, 0.0012950851814821362, 0.531082272529602, 0.04433073103427887, 0.49540358781814575, 0.010828543454408646, 0.00016306500765495002, 0.0003135904553346336, 0.042524758726358414, 0.6769494414329529, 0.2721438705921173, 0.8719056248664856, 0.005927365738898516, 0.006988842040300369, 0.24707600474357605, 0.5176950097084045, 0.0090390769764781, 0.6963456869125366, 0.0031627416610717773, 0.13239634037017822, 0.48342716693878174, 0.11620112508535385, 0.07378850877285004, 0.012625055387616158, 0.3706640303134918, 0.040455106645822525, 0.0020648366771638393, 0.07994887977838516, 0.0036940211430191994, 0.0038928219582885504, 0.05201129615306854, 0.15444590151309967, 0.0012549628736451268, 0.028940778225660324, 0.04258428141474724, 0.005487971939146519, 0.002868587151169777, 0.0033673509024083614, 0.11629897356033325, 0.0022526620887219906, 0.028619125485420227, 0.2091686725616455, 0.003538658143952489, 0.044985219836235046, 0.050545383244752884, 0.00805073045194149, 0.005985431373119354, 0.1711161583662033, 0.0018473479431122541], "tokens": [13, 9651, 315, 5380, 403, 274, 353, 716, 315, 5380, 403, 29898, 29876, 29892, 274, 16434, 4247, 29892, 822, 29879, 416, 13, 9651, 565, 313, 29883, 29889, 3068, 797, 1220, 3101, 426, 13, 795, 21669, 29889, 1202, 29898, 29883, 416, 13, 9651, 500, 13, 3986, 500, 13, 4706, 500, 13, 418, 3980]}
{"line_number": 156, "line_type": "original", "code": "        c.inlineVariable();", "entropy": 5.588731288909912, "is_bug_line": true, "sus_score": 0.3110855084191276, "per_token_entropy": [9.357169151306152, 8.254229545593262, 0.7761664390563965, 4.560359001159668, 6.471399307250977, 4.113064289093018], "tokens": [308, 274, 29889, 14764, 16174, 890]}
{"line_number": 156, "line_type": "generated", "code": "\n      if (defs == null) {\n        // No definition in this scope.\n        return;\n      }\n\n      for (MustDef def : defs.defs) {\n        if (def.isSimpleName", "entropy": 0.4484781324863434, "is_bug_line": true, "sus_score": 0.3110855084191276, "per_token_entropy": [0.07588397711515427, 0.7055860161781311, 0.6683270931243896, 0.187571182847023, 0.5312299728393555, 0.0013727060286328197, 1.1668269634246826, 0.027367090806365013, 0.33262380957603455, 0.003286914434283972, 0.004824782256036997, 0.05021121725440025, 0.8695995807647705, 1.3201282024383545, 0.9857312440872192, 2.680271625518799, 0.511590838432312, 1.8981342315673828, 0.3136783838272095, 0.09335640072822571, 0.012946950271725655, 0.014343492686748505, 0.0006007535266689956, 0.00047338721924461424, 0.002224829513579607, 0.0003592322755139321, 0.01722881942987442, 0.8150262832641602, 0.05477069690823555, 1.360125184059143, 0.002398473210632801, 1.094078540802002, 0.004282470792531967, 0.01075743231922388, 0.46478867530822754, 0.052832555025815964, 0.02233854867517948, 0.00034397884155623615, 0.5505393743515015, 1.1545337438583374, 0.03758801147341728, 0.06197982653975487, 0.0011201781453564763, 0.0017256144201382995, 0.10367826372385025, 0.6658826470375061, 0.3481290936470032, 0.2864792048931122, 0.13951735198497772, 0.9763808846473694, 1.719951868057251, 0.9158335328102112], "tokens": [13, 418, 565, 313, 1753, 29879, 1275, 1870, 29897, 426, 13, 4706, 849, 1939, 5023, 297, 445, 6874, 29889, 13, 4706, 736, 29936, 13, 418, 500, 13, 13, 418, 363, 313, 29924, 504, 3206, 822, 584, 822, 29879, 29889, 1753, 29879, 29897, 426, 13, 4706, 565, 313, 1753, 29889, 275, 15427, 1170]}
{"line_number": 165, "line_type": "original", "code": "        if (!c.defMetadata.depends.isEmpty()) {", "entropy": 3.3089215755462646, "is_bug_line": false, "sus_score": 0.3110855084191276, "per_token_entropy": [6.101298809051514, 1.5918712615966797, 2.1748178005218506, 5.159726142883301, 3.373399496078491, 3.845484495162964, 12.371725082397461, 0.16576813161373138, 3.523820400238037, 0.04643972963094711, 4.795438766479492, 2.6413421630859375, 0.503855288028717, 0.029912983998656273], "tokens": [308, 565, 5384, 29883, 29889, 1753, 18417, 29889, 2716, 1975, 29889, 24326, 3101, 426]}
{"line_number": 165, "line_type": "generated", "code": "\n            // of the subtree.\n            if (n.getParent() != null && n.getParent().isExprResult()) {\n              return;\n            }\n\n            Var v = t.getScope().getVar(n", "entropy": 0.3211638629436493, "is_bug_line": false, "sus_score": 0.3110855084191276, "per_token_entropy": [0.3400712311267853, 0.6133489608764648, 1.250372290611267, 0.5959058403968811, 0.3519349992275238, 1.4492734670639038, 0.06204794719815254, 0.8890447616577148, 0.3331591784954071, 0.1571507304906845, 0.7277761697769165, 0.09379933029413223, 0.4152268171310425, 0.4041215181350708, 0.1501854956150055, 0.018596932291984558, 0.1946413815021515, 0.9115074276924133, 0.035844914615154266, 0.5813393592834473, 0.8470392823219299, 0.03926686942577362, 0.02635246515274048, 0.010474822483956814, 0.021024107933044434, 0.02527741529047489, 2.3777897357940674, 0.0008741371566429734, 0.1336764097213745, 0.005178016144782305, 0.0023899106308817863, 0.17769981920719147, 0.8207793235778809, 0.0010139568476006389, 0.10159570723772049, 0.021349729970097542, 0.00121174321975559, 0.013171332888305187, 0.44386404752731323, 0.03867606073617935, 1.3749806880950928, 0.6041025519371033, 0.00664690462872386, 0.017526395618915558, 0.0006244616815820336, 0.0008814025786705315, 0.0025299943517893553, 0.0001323135511483997, 0.0009401192655786872, 0.0032965384889394045, 0.0019750152714550495, 0.0028305486775934696], "tokens": [13, 9651, 849, 310, 278, 1014, 8336, 29889, 13, 9651, 565, 313, 29876, 29889, 657, 9780, 580, 2804, 1870, 2607, 302, 29889, 657, 9780, 2141, 275, 21176, 3591, 3101, 426, 13, 795, 736, 29936, 13, 9651, 500, 13, 13, 9651, 11681, 325, 353, 260, 29889, 657, 15289, 2141, 657, 9037, 29898, 29876]}
{"line_number": 524, "line_type": "original", "code": "      for (Node cur = p.getParent().getFirstChild(); cur != p;", "entropy": 0.9192103147506714, "is_bug_line": false, "sus_score": 0.2773500981126145, "per_token_entropy": [8.721502304077148, 2.5118730068206787, 0.009922112338244915, 0.04185699671506882, 0.12469159066677094, 0.02121540904045105, 1.070167064666748, 0.08171878010034561, 0.0018352109473198652, 2.478980541229248, 0.22146320343017578, 0.0030418813694268465, 0.06760153919458389, 0.0011942405253648758, 0.0157299917191267, 1.4934850931167603, 0.025732599198818207, 0.5451551675796509, 0.027827585116028786], "tokens": [539, 363, 313, 4247, 3151, 353, 282, 29889, 657, 9780, 2141, 657, 6730, 5938, 890, 3151, 2804, 282, 29936]}
{"line_number": 524, "line_type": "generated", "code": "\n\n  /**\n   * Given an expression by its root and sub-expression n, return true if there\n   * the predicate is true for some expression on the right of n.\n   *\n   * Example:\n   *\n  ", "entropy": 0.14429020881652832, "is_bug_line": false, "sus_score": 0.2773500981126145, "per_token_entropy": [0.05770638957619667, 1.025878667831421, 0.09168150275945663, 0.3783344030380249, 0.05148470401763916, 0.004082441329956055, 0.0007737264968454838, 1.2829725742340088, 0.3833877742290497, 0.07192052900791168, 0.0964282974600792, 0.006882176734507084, 0.008091527037322521, 0.048991620540618896, 0.06596248596906662, 0.009113381616771221, 0.0033056873362511396, 0.01791943423449993, 0.01120441872626543, 0.13580985367298126, 0.10607484728097916, 0.023372158408164978, 0.35448017716407776, 0.006391440983861685, 0.0037746625021100044, 0.000448841426987201, 0.2539445161819458, 0.013514457270503044, 0.007617237512022257, 0.010725471191108227, 0.022790759801864624, 0.12219199538230896, 0.14727111160755157, 0.45709866285324097, 0.0969453901052475, 0.9401150345802307, 0.3574996590614319, 0.05467329919338226, 0.5361132621765137, 0.0787639319896698, 0.004941749852150679, 0.046181030571460724, 0.029602637514472008, 0.004254813306033611, 0.0014286560472100973, 0.04015270993113518, 0.004085290711373091, 0.003398834727704525, 0.003936756867915392, 0.0016098171472549438, 0.012684851884841919, 0.005074834451079369], "tokens": [13, 13, 29871, 7762, 13, 259, 334, 11221, 385, 4603, 491, 967, 3876, 322, 1014, 29899, 17471, 302, 29892, 736, 1565, 565, 727, 13, 259, 334, 278, 24384, 338, 1565, 363, 777, 4603, 373, 278, 1492, 310, 302, 29889, 13, 259, 334, 13, 259, 334, 8741, 29901, 13, 259, 334, 13, 259]}
{"line_number": 503, "line_type": "original", "code": "    for (Node p = n; p != expressionRoot; p = p.getParent()) {", "entropy": 0.8336107134819031, "is_bug_line": false, "sus_score": 0.26413527189768715, "per_token_entropy": [9.081551551818848, 4.343740463256836, 0.01446264237165451, 0.08890139311552048, 0.9428600072860718, 0.019948337227106094, 0.09524842351675034, 1.7552446126937866, 0.20430339872837067, 0.09588874131441116, 0.6388493776321411, 0.0035507744178175926, 0.05180949717760086, 0.10181441158056259, 0.0030648186802864075, 0.009433811530470848, 0.0024217821191996336, 0.0017457258654758334, 0.028412899002432823, 0.008991939015686512, 0.013580081053078175], "tokens": [268, 363, 313, 4247, 282, 353, 302, 29936, 282, 2804, 4603, 10303, 29936, 282, 353, 282, 29889, 657, 9780, 3101, 426]}
{"line_number": 503, "line_type": "generated", "code": "\n  /**\n   * Given an expression by its root and sub-expression n, return true if there\n   * the predicate is true for some expression on the right of n.\n   *\n   * Example:\n   *\n   *", "entropy": 0.11825453490018845, "is_bug_line": false, "sus_score": 0.26413527189768715, "per_token_entropy": [0.04257182776927948, 0.44334086775779724, 0.4587610960006714, 0.04005547985434532, 0.0046449145302176476, 0.0007066613179631531, 1.2251108884811401, 0.3464799225330353, 0.07157700508832932, 0.10456953197717667, 0.006066006608307362, 0.00812558177858591, 0.05593683198094368, 0.07499340921640396, 0.007936490699648857, 0.002978890435770154, 0.013870161958038807, 0.0106620192527771, 0.1378912776708603, 0.10854784399271011, 0.02315308153629303, 0.3635745048522949, 0.005544403567910194, 0.0016092220321297646, 0.0003909300430677831, 0.2652677893638611, 0.011999682523310184, 0.007605406921356916, 0.00958542712032795, 0.022618640214204788, 0.11485999822616577, 0.10326538980007172, 0.3601081669330597, 0.08598949015140533, 0.7635948061943054, 0.2456730306148529, 0.032579462975263596, 0.39706212282180786, 0.06351590156555176, 0.003738915082067251, 0.03146372735500336, 0.019404113292694092, 0.0022469530813395977, 0.001290918211452663, 0.025150712579488754, 0.003544241189956665, 0.0024170251563191414, 0.003211937379091978, 0.0008366183610633016, 0.009492618031799793, 0.0030692159198224545, 0.0005452338373288512], "tokens": [13, 29871, 7762, 13, 259, 334, 11221, 385, 4603, 491, 967, 3876, 322, 1014, 29899, 17471, 302, 29892, 736, 1565, 565, 727, 13, 259, 334, 278, 24384, 338, 1565, 363, 777, 4603, 373, 278, 1492, 310, 302, 29889, 13, 259, 334, 13, 259, 334, 8741, 29901, 13, 259, 334, 13, 259, 334]}
{"line_number": 504, "line_type": "original", "code": "      for (Node cur = p.getNext(); cur != null; cur = cur.getNext()) {", "entropy": 1.033733606338501, "is_bug_line": false, "sus_score": 0.26413527189768715, "per_token_entropy": [10.010930061340332, 4.2353434562683105, 0.023974400013685226, 0.1424872726202011, 1.0966471433639526, 0.08238998800516129, 2.339456081390381, 0.2722500264644623, 0.0019288521725684404, 2.567902088165283, 0.024637576192617416, 0.1702912449836731, 0.012811495922505856, 0.6515993475914001, 0.03955474868416786, 1.8983197212219238, 0.005389327649027109, 0.11321447789669037, 0.03718632087111473, 0.007264390587806702, 0.0069616143591701984, 0.018942411988973618, 0.016389859840273857], "tokens": [539, 363, 313, 4247, 3151, 353, 282, 29889, 657, 9190, 890, 3151, 2804, 1870, 29936, 3151, 353, 3151, 29889, 657, 9190, 3101, 426]}
{"line_number": 504, "line_type": "generated", "code": "\n  /**\n   * Given a sub-expression n, return true if there\n   * the predicate is true for some expression on the left of n.\n   *\n   * Example:\n   *\n   * Checked(), Checked", "entropy": 0.2549048662185669, "is_bug_line": false, "sus_score": 0.26413527189768715, "per_token_entropy": [0.042370401322841644, 0.3301151394844055, 0.4870215654373169, 0.04103822633624077, 0.005948815029114485, 0.0009494088008068502, 1.3006432056427002, 1.4229085445404053, 2.1945838928222656, 0.30764710903167725, 0.05960400775074959, 0.7376998066902161, 0.637932300567627, 0.531912088394165, 0.28610095381736755, 0.02735085040330887, 0.9722615480422974, 1.8188354969024658, 0.0015755394706502557, 0.0033538066782057285, 0.08457039296627045, 0.013571731746196747, 0.007045780774205923, 0.006533334031701088, 0.022757550701498985, 0.0690460205078125, 0.14804388582706451, 0.23856040835380554, 0.04426515847444534, 0.7751873135566711, 0.10273682326078415, 0.032785870134830475, 0.07707642018795013, 0.01011188980191946, 0.002548306016251445, 0.11204210668802261, 0.03150461986660957, 0.0040174974128603935, 0.0039431690238416195, 0.035761989653110504, 0.004258967936038971, 0.0053314645774662495, 0.00352559145539999, 0.0018356868531554937, 0.027469737455248833, 0.006063162814825773, 0.002021889900788665, 0.1332404762506485, 0.0018742390675470233, 0.012851745821535587, 0.02388245239853859, 0.0007337023853324354], "tokens": [13, 29871, 7762, 13, 259, 334, 11221, 263, 1014, 29899, 17471, 302, 29892, 736, 1565, 565, 727, 13, 259, 334, 278, 24384, 338, 1565, 363, 777, 4603, 373, 278, 2175, 310, 302, 29889, 13, 259, 334, 13, 259, 334, 8741, 29901, 13, 259, 334, 13, 259, 334, 5399, 287, 3285, 5399, 287]}
{"line_number": 510, "line_type": "original", "code": "    return false;", "entropy": 3.478161096572876, "is_bug_line": false, "sus_score": 0.26413527189768715, "per_token_entropy": [9.605352401733398, 4.026601791381836, 0.27584168314933777, 0.004848390351980925], "tokens": [268, 736, 2089, 29936]}
{"line_number": 510, "line_type": "generated", "code": "\n\n  /**\n   * Returns true if the definition of the variable varName is on the right\n   * side of the expression.\n   */\n  private static boolean isDefOnRight(Node n, Node varName) {\n   ", "entropy": 0.6256385445594788, "is_bug_line": false, "sus_score": 0.26413527189768715, "per_token_entropy": [0.019463155418634415, 0.3436238467693329, 0.06266654282808304, 0.29652732610702515, 0.047625843435525894, 0.0036693166475743055, 0.000675807474181056, 2.4535913467407227, 0.3564607501029968, 0.06275375932455063, 0.8521692752838135, 3.357121706008911, 0.7089208364486694, 1.0996674299240112, 0.4325685501098633, 1.4340944290161133, 0.09936559200286865, 0.7818843126296997, 2.78910493850708, 0.14658452570438385, 0.9101496934890747, 1.6865131855010986, 0.0016004146309569478, 0.0015381659613922238, 0.6400945782661438, 0.0393686443567276, 1.1547107696533203, 1.8068610429763794, 1.761238932609558, 0.17350326478481293, 0.012945655733346939, 0.5300204157829285, 0.0006881968001835048, 0.02231523208320141, 0.08394196629524231, 0.7153570055961609, 0.037097759544849396, 0.814848780632019, 1.4745292663574219, 0.4192868173122406, 0.16797293722629547, 0.3783300817012787, 0.40570494532585144, 0.6158351898193359, 0.20314189791679382, 0.8059104084968567, 1.7274270057678223, 0.27172598242759705, 0.2498188614845276, 0.0010418231831863523, 0.0005869334563612938, 0.07055429369211197], "tokens": [13, 13, 29871, 7762, 13, 259, 334, 16969, 1565, 565, 278, 5023, 310, 278, 2286, 722, 1170, 338, 373, 278, 1492, 13, 259, 334, 2625, 310, 278, 4603, 29889, 13, 259, 3776, 13, 29871, 2024, 2294, 7223, 338, 3206, 2951, 7341, 29898, 4247, 302, 29892, 9071, 722, 1170, 29897, 426, 13, 1678]}
{"line_number": 523, "line_type": "original", "code": "    for (Node p = n.getParent(); p != expressionRoot; p = p.getParent()) {", "entropy": 0.7891184091567993, "is_bug_line": false, "sus_score": 0.26413527189768715, "per_token_entropy": [8.678323745727539, 3.376638174057007, 0.0072387089021503925, 0.022735759615898132, 0.6872195601463318, 0.00510235084220767, 0.022477148100733757, 2.744534492492676, 0.0046006543561816216, 0.15097467601299286, 0.06741044670343399, 0.3165622055530548, 0.010387877002358437, 0.06475815176963806, 0.0026077572256326675, 0.030550265684723854, 2.5342066287994385, 0.014399192295968533, 0.12005528062582016, 0.03970897197723389, 0.010817458853125572, 0.005213712342083454, 0.013037203811109066, 0.009280400350689888], "tokens": [268, 363, 313, 4247, 282, 353, 302, 29889, 657, 9780, 890, 282, 2804, 4603, 10303, 29936, 282, 353, 282, 29889, 657, 9780, 3101, 426]}
{"line_number": 523, "line_type": "generated", "code": "\n  /**\n   * Given a sub-expression of an expression by its root and sub-expression n,\n   * return true if there the predicate is true for some expression on the left\n   * of n.\n   *\n   *", "entropy": 0.30399855971336365, "is_bug_line": false, "sus_score": 0.26413527189768715, "per_token_entropy": [0.04545647278428078, 0.8601921796798706, 0.361590713262558, 0.034257642924785614, 0.0043060919269919395, 0.0007875440060161054, 0.8950070142745972, 1.7038766145706177, 2.153937578201294, 0.2635084390640259, 0.04833099991083145, 2.2135744094848633, 0.6732906699180603, 0.2166612595319748, 1.1454823017120361, 0.05583402141928673, 0.05439097806811333, 0.3865360915660858, 0.3121674954891205, 0.014181431382894516, 0.007124850060790777, 0.09303831309080124, 0.02389676868915558, 0.012611753307282925, 0.0013053239090368152, 0.0004314445541240275, 0.19679123163223267, 0.21328631043434143, 0.017704077064990997, 0.6883634924888611, 0.5900999307632446, 0.01983579993247986, 0.011613147333264351, 0.01090212631970644, 0.02675435319542885, 0.15501481294631958, 0.2024366557598114, 0.36146533489227295, 0.05814412608742714, 0.763070821762085, 0.07697366178035736, 0.0006468587671406567, 0.0004950728034600616, 0.2538468539714813, 0.08010997623205185, 0.3086922764778137, 0.09526858478784561, 0.005375692155212164, 0.0735558345913887, 0.01284774485975504, 0.0016390950186178088, 0.001212814822793007], "tokens": [13, 29871, 7762, 13, 259, 334, 11221, 263, 1014, 29899, 17471, 310, 385, 4603, 491, 967, 3876, 322, 1014, 29899, 17471, 302, 29892, 13, 259, 334, 736, 1565, 565, 727, 278, 24384, 338, 1565, 363, 777, 4603, 373, 278, 2175, 13, 259, 334, 310, 302, 29889, 13, 259, 334, 13, 259, 334]}
{"line_number": 531, "line_type": "original", "code": "    return false;", "entropy": 2.9614267349243164, "is_bug_line": false, "sus_score": 0.26413527189768715, "per_token_entropy": [8.30063533782959, 3.3608245849609375, 0.17523407936096191, 0.009012850001454353], "tokens": [268, 736, 2089, 29936]}
{"line_number": 531, "line_type": "generated", "code": "\n\n  /**\n   * Given a node, return the parent node that is a function.\n   */\n  private static Node getFunctionNode(Node n) {\n    for (Node p = n; p != null; p = p", "entropy": 0.538206934928894, "is_bug_line": false, "sus_score": 0.26413527189768715, "per_token_entropy": [0.06626107543706894, 0.6860809922218323, 0.12019947916269302, 0.3303721845149994, 0.05282249301671982, 0.004332086071372032, 0.0004337085410952568, 1.1382865905761719, 1.5219123363494873, 1.7536993026733398, 1.5397191047668457, 0.9386311769485474, 1.229312539100647, 3.5317981243133545, 1.639588713645935, 1.3243603706359863, 0.8703160285949707, 1.4014122486114502, 2.351759910583496, 1.586736798286438, 0.1733441948890686, 0.0049844528548419476, 0.45206135511398315, 0.0006266061100177467, 0.01406354084610939, 0.10321399569511414, 0.16412565112113953, 0.09222855418920517, 0.11502024531364441, 0.997063159942627, 0.9898460507392883, 0.06540019810199738, 0.011070497334003448, 0.1375737488269806, 0.028254840523004532, 0.0010608765296638012, 0.0014250847743824124, 0.048374731093645096, 1.2235753536224365, 0.007076912093907595, 0.1664440929889679, 0.37877246737480164, 0.006620023399591446, 0.005814424250274897, 0.49139443039894104, 0.10980229079723358, 0.05419948324561119, 0.0034190313890576363, 0.03586113080382347, 0.0077975173480808735, 0.0021482266020029783, 0.006062688771635294], "tokens": [13, 13, 29871, 7762, 13, 259, 334, 11221, 263, 2943, 29892, 736, 278, 3847, 2943, 393, 338, 263, 740, 29889, 13, 259, 3776, 13, 29871, 2024, 2294, 9071, 679, 6678, 4247, 29898, 4247, 302, 29897, 426, 13, 1678, 363, 313, 4247, 282, 353, 302, 29936, 282, 2804, 1870, 29936, 282, 353, 282]}
{"line_number": 155, "line_type": "original", "code": "      if (c.canInline()) {", "entropy": 1.8669731616973877, "is_bug_line": true, "sus_score": 0.2041241452319315, "per_token_entropy": [6.836126327514648, 0.7150205969810486, 0.1283678114414215, 6.442656993865967, 2.6161012649536133, 1.304751992225647, 0.020150357857346535, 0.0011863820254802704, 0.5924403071403503, 0.012929181568324566], "tokens": [539, 565, 313, 29883, 29889, 3068, 797, 1220, 3101, 426]}
{"line_number": 155, "line_type": "generated", "code": "\n      if (state == null) {\n        return;\n      }\n\n      for (MustDef def : state.getIn()) {\n        if (!def.isLocal()) {\n          continue;\n        }\n        Var", "entropy": 0.31264328956604004, "is_bug_line": true, "sus_score": 0.2041241452319315, "per_token_entropy": [0.08545345813035965, 0.36397212743759155, 0.5094329118728638, 0.17196208238601685, 0.41271892189979553, 0.7292684316635132, 0.01574266515672207, 0.32704049348831177, 0.0022718114778399467, 0.0034587106201797724, 0.04497918114066124, 0.8101588487625122, 0.0010402749758213758, 0.07722043991088867, 0.003037959337234497, 0.0004060635983478278, 0.008984141983091831, 0.6841628551483154, 0.03950994461774826, 1.3456143140792847, 0.001844849088229239, 0.7575893998146057, 0.0025852848775684834, 0.005570128560066223, 0.40320417284965515, 0.05103916674852371, 0.013249331153929234, 0.0328042134642601, 0.962673544883728, 0.6610811948776245, 0.32555681467056274, 0.0013804440386593342, 0.0021923573222011328, 0.08864613622426987, 0.8111876845359802, 1.230129361152649, 0.26820436120033264, 0.003776681376621127, 0.5884537100791931, 1.2900434732437134, 0.3013400137424469, 0.0034374454990029335, 0.006352944299578667, 0.032218001782894135, 0.29324933886528015, 0.000518664310220629, 0.07066570967435837, 0.00481790117919445, 0.00022265815641731024, 0.0033233908470720053, 0.878343403339386, 1.5253117084503174], "tokens": [13, 418, 565, 313, 3859, 1275, 1870, 29897, 426, 13, 4706, 736, 29936, 13, 418, 500, 13, 13, 418, 363, 313, 29924, 504, 3206, 822, 584, 2106, 29889, 657, 797, 3101, 426, 13, 4706, 565, 5384, 1753, 29889, 275, 7717, 3101, 426, 13, 3986, 6773, 29936, 13, 4706, 500, 13, 4706, 11681]}
{"line_number": 169, "line_type": "original", "code": "    }", "entropy": 4.791462421417236, "is_bug_line": false, "sus_score": 0.2041241452319315, "per_token_entropy": [8.23614501953125, 1.3467798233032227], "tokens": [268, 500]}
{"line_number": 169, "line_type": "generated", "code": "\n            // If n is a name node, we look at its definition to see if it\n            // is a candidate for inlining.\n            MustDef def = defs.getDef(n);\n            if (def != null)", "entropy": 0.6725673675537109, "is_bug_line": false, "sus_score": 0.2041241452319315, "per_token_entropy": [0.07207360863685608, 0.522898256778717, 1.6547106504440308, 2.300680160522461, 1.376496434211731, 0.37104928493499756, 1.2082160711288452, 1.9746310710906982, 0.8742405772209167, 1.1588352918624878, 2.5304806232452393, 3.223972797393799, 0.9931909441947937, 1.0280327796936035, 1.3718637228012085, 1.4968293905258179, 0.4493575096130371, 0.1486148089170456, 0.4062877297401428, 1.4801146984100342, 0.0015119798481464386, 0.001858056872151792, 1.5200101137161255, 0.5919591784477234, 0.9784750938415527, 0.4531835913658142, 0.0821741372346878, 0.003842709818854928, 0.0012160295154899359, 0.1296256184577942, 0.22483308613300323, 0.07053974270820618, 1.3850306272506714, 0.014862406998872757, 0.23602524399757385, 0.17554478347301483, 0.13802191615104675, 0.0010062160436064005, 0.05801330879330635, 0.10452593863010406, 1.0592336654663086, 0.06811114400625229, 0.04107850044965744, 1.1515202522277832, 0.0015550674870610237, 0.12859027087688446, 0.15148399770259857, 0.07437697052955627, 0.04224470257759094, 0.5859396457672119, 0.0231391042470932, 0.8313938975334167], "tokens": [13, 9651, 849, 960, 302, 338, 263, 1024, 2943, 29892, 591, 1106, 472, 967, 5023, 304, 1074, 565, 372, 13, 9651, 849, 338, 263, 14020, 363, 297, 1915, 292, 29889, 13, 9651, 19928, 3206, 822, 353, 822, 29879, 29889, 657, 3206, 29898, 29876, 416, 13, 9651, 565, 313, 1753, 2804, 1870, 29897]}
{"line_number": 131, "line_type": "original", "code": "    if (LiveVariablesAnalysis.MAX_VARIABLES_TO_ANALYZE <", "entropy": 1.2716166973114014, "is_bug_line": false, "sus_score": 0.12838814775327387, "per_token_entropy": [8.18563461303711, 3.262638807296753, 0.18343687057495117, 10.534293174743652, 0.4585139751434326, 9.202533692587167e-05, 0.12637853622436523, 0.0005059154354967177, 0.1163451299071312, 3.057277202606201, 0.07781472057104111, 0.7476808428764343, 0.34916436672210693, 0.00026222606538794935, 0.21145468950271606, 0.23859664797782898, 0.06409814953804016, 0.004074249416589737, 0.032079361379146576, 0.0002847504511009902, 0.001150065683759749, 0.023343976587057114, 1.57206392288208], "tokens": [268, 565, 313, 23859, 10444, 1849, 21067, 4848, 29889, 12648, 29918, 26865, 29902, 6181, 29903, 29918, 4986, 29918, 2190, 1964, 29979, 10721, 529]}
{"line_number": 131, "line_type": "generated", "code": "\n  public void visit(NodeTraversal t, Node n, Node parent) {\n    if (n.isName() && !parent.isFunction()) {\n      Var v = t.getScope().getVar(n.getString", "entropy": 0.20438264310359955, "is_bug_line": false, "sus_score": 0.12838814775327387, "per_token_entropy": [0.06881958991289139, 0.34008175134658813, 0.40247899293899536, 0.44611674547195435, 0.24801823496818542, 0.007827206514775753, 0.021869687363505363, 0.0004801789182238281, 2.706014311115723e-05, 2.109982233378105e-05, 0.027135081589221954, 0.0001793938863556832, 0.019427847117185593, 0.024239258840680122, 0.0024606685619801283, 0.015647726133465767, 0.02589593641459942, 0.009114562533795834, 0.0820113867521286, 0.013826543465256691, 0.3443748950958252, 0.6575911045074463, 0.14695324003696442, 0.38402852416038513, 0.1011163592338562, 0.053546931594610214, 0.3639746904373169, 0.8801760673522949, 0.11140139400959015, 1.2669154405593872, 1.6122597455978394, 0.0004183370911050588, 0.007821409963071346, 0.8728646636009216, 0.6484388113021851, 0.0010027624666690826, 0.011826991103589535, 0.11260689049959183, 0.7537549734115601, 0.5062781572341919, 0.003692477010190487, 0.006122049875557423, 0.006127736996859312, 0.00041797960875555873, 0.002974849194288254, 8.654219709569588e-05, 0.001157448161393404, 0.005535630509257317, 0.001573873101733625, 0.0023350848350673914, 0.0006121906917542219, 0.004230953752994537], "tokens": [13, 29871, 970, 1780, 6493, 29898, 4247, 5323, 874, 284, 260, 29892, 9071, 302, 29892, 9071, 3847, 29897, 426, 13, 1678, 565, 313, 29876, 29889, 275, 1170, 580, 2607, 1738, 3560, 29889, 275, 6678, 3101, 426, 13, 418, 11681, 325, 353, 260, 29889, 657, 15289, 2141, 657, 9037, 29898, 29876, 29889, 13719]}
{"line_number": 137, "line_type": "original", "code": "    ControlFlowAnalysis cfa = new ControlFlowAnalysis(compiler, false, true);", "entropy": 1.0689587593078613, "is_bug_line": false, "sus_score": 0.12838814775327387, "per_token_entropy": [6.356478214263916, 6.614179611206055, 0.0032340388279408216, 3.5485239028930664, 0.00036399890086613595, 1.3159847259521484, 0.02369026467204094, 0.04323751479387283, 0.3998403549194336, 0.021282397210597992, 0.00021300431399140507, 0.001077548018656671, 0.00026306029758416116, 0.013818313367664814, 2.32348895072937, 0.04419456049799919, 0.18639738857746124, 0.20975901186466217, 0.25529345870018005, 0.017855733633041382], "tokens": [268, 11264, 17907, 21067, 4848, 274, 5444, 353, 716, 11264, 17907, 21067, 4848, 29898, 21789, 29892, 2089, 29892, 1565, 416]}
{"line_number": 137, "line_type": "generated", "code": "\n  }\n\n  /**\n   * A candidate for inlining.\n   */\n  private class Candidate {\n    final String varName;\n    final Node defSite;\n    final Node inlineSite;\n    final", "entropy": 0.3450371026992798, "is_bug_line": false, "sus_score": 0.12838814775327387, "per_token_entropy": [0.10647842288017273, 0.4945293068885803, 0.003491854527965188, 0.006942554842680693, 0.06295157223939896, 0.08553017675876617, 0.8255656957626343, 0.07080931961536407, 0.005371186416596174, 0.0007527616689912975, 1.8114843368530273, 0.9343646764755249, 1.140937328338623, 0.3086002767086029, 0.012186593376100063, 0.00278014549985528, 1.0500081777572632, 0.32877495884895325, 0.010905427858233452, 0.2795310914516449, 5.9602869441732764e-05, 0.021621232852339745, 0.3515640199184418, 0.6435195803642273, 0.0017842815723270178, 2.145764938177308e-06, 3.099436753473128e-06, 0.06592219322919846, 0.00047362555051222444, 0.1892719268798828, 1.0965805053710938, 1.2012091875076294, 0.020600758492946625, 0.00042381841922178864, 0.0014148473273962736, 0.018767522647976875, 0.12798190116882324, 0.16775867342948914, 0.5846829414367676, 0.7127018570899963, 0.7096006274223328, 0.06326594948768616, 0.06627000123262405, 0.07916754484176636, 0.15910783410072327, 0.7509900331497192, 2.715625286102295, 0.26729410886764526, 0.0069485921412706375, 0.014023104682564735, 0.13963305950164795, 0.22166188061237335], "tokens": [13, 29871, 500, 13, 13, 29871, 7762, 13, 259, 334, 319, 14020, 363, 297, 1915, 292, 29889, 13, 259, 3776, 13, 29871, 2024, 770, 315, 5380, 403, 426, 13, 1678, 2186, 1714, 722, 1170, 29936, 13, 1678, 2186, 9071, 822, 17033, 29936, 13, 1678, 2186, 9071, 10583, 17033, 29936, 13, 1678, 2186]}
{"line_number": 139, "line_type": "original", "code": "    Preconditions.checkState(t.getScopeRoot().isFunction());", "entropy": 1.6290678977966309, "is_bug_line": false, "sus_score": 0.12838814775327387, "per_token_entropy": [8.582849502563477, 10.09769058227539, 0.3231807351112366, 0.0006037319544702768, 0.011613382957875729, 0.004245673306286335, 0.837616503238678, 0.0718362107872963, 2.2805962562561035, 0.05694317817687988, 1.0068206787109375, 0.11325918138027191, 3.1058826446533203, 0.5838521718978882, 0.2061636596918106, 0.19089365005493164, 0.22010664641857147], "tokens": [268, 4721, 1116, 2187, 29889, 3198, 2792, 29898, 29873, 29889, 657, 15289, 10303, 2141, 275, 6678, 3310]}
{"line_number": 139, "line_type": "generated", "code": "\n  private class GatherCandiates extends AbstractPostOrderCallback {\n    @Override\n    public void visit(NodeTraversal t, Node n, Node parent) {\n      if (!n.isName()) {\n        return", "entropy": 0.12839636206626892, "is_bug_line": false, "sus_score": 0.12838814775327387, "per_token_entropy": [0.08175711333751678, 0.28499501943588257, 1.1182892322540283, 0.48515745997428894, 0.1288800686597824, 6.83045873302035e-05, 0.0002885640424210578, 0.0004447901446837932, 0.000337305391440168, 1.0967194612021558e-05, 0.1543406844139099, 0.49858447909355164, 0.19263103604316711, 0.00017414960893802345, 8.987976616481319e-05, 0.10497414320707321, 0.00047755756531842053, 0.3871524930000305, 0.33213844895362854, 0.0029674803372472525, 0.00836133398115635, 0.004268820397555828, 0.001915883389301598, 0.000683074293192476, 0.0008420973899774253, 0.000578474544454366, 0.002463046694174409, 0.0003763920976780355, 3.969590397900902e-05, 7.152531907195225e-06, 0.03364473208785057, 0.000120751719805412, 0.0009029601933434606, 0.015250153839588165, 0.0006653240998275578, 0.00119138287845999, 0.007372316438704729, 0.0020462782122194767, 0.0013249675976112485, 0.0005565524916164577, 0.10424714535474777, 0.4551350176334381, 1.4395893812179565, 0.2520467936992645, 0.00012742661056108773, 0.03796142339706421, 0.1776236742734909, 0.3134573698043823, 0.012099678628146648, 0.00599763635545969, 0.00570170721039176, 0.01625252701342106], "tokens": [13, 29871, 2024, 770, 402, 1624, 29907, 392, 29875, 1078, 4988, 25513, 6747, 7514, 10717, 426, 13, 1678, 732, 4640, 13, 1678, 970, 1780, 6493, 29898, 4247, 5323, 874, 284, 260, 29892, 9071, 302, 29892, 9071, 3847, 29897, 426, 13, 418, 565, 5384, 29876, 29889, 275, 1170, 3101, 426, 13, 4706, 736]}
{"line_number": 140, "line_type": "original", "code": "    cfa.process(null, t.getScopeRoot().getLastChild());", "entropy": 1.3646056652069092, "is_bug_line": false, "sus_score": 0.12838814775327387, "per_token_entropy": [5.875022888183594, 8.326149940490723, 2.38208270072937, 0.6079025268554688, 3.7529401779174805, 0.17154373228549957, 1.3320263624191284, 0.040984105318784714, 0.9943314790725708, 0.051352329552173615, 0.005392055027186871, 0.020805800333619118, 0.05843247100710869, 0.8204306960105896, 0.00856204517185688, 0.09125374257564545, 0.0002012050390476361, 0.023487791419029236], "tokens": [268, 274, 5444, 29889, 5014, 29898, 4304, 29892, 260, 29889, 657, 15289, 10303, 2141, 657, 8897, 5938, 3310]}
{"line_number": 140, "line_type": "generated", "code": "\n   * Gather all the candidate variables that we can inline.\n   */\n  private class GatherCandiates extends AbstractPostOrderCallback {\n    @Override\n    public void visit(NodeTraversal t, Node n,", "entropy": 0.2779415547847748, "is_bug_line": false, "sus_score": 0.12838814775327387, "per_token_entropy": [0.48371660709381104, 0.2743746042251587, 0.10054515302181244, 1.8902268409729004, 0.5490205883979797, 0.5398762822151184, 0.280878484249115, 1.775847315788269, 1.2222137451171875, 1.2795958518981934, 1.4667588472366333, 1.094578504562378, 0.3049992620944977, 0.4356209933757782, 0.22582750022411346, 0.1412440985441208, 0.4584687650203705, 0.0008500776602886617, 0.016151301562786102, 0.1916838437318802, 0.0811525359749794, 0.0023593467194586992, 1.1086402082582936e-05, 2.8967437174287625e-05, 3.909988299710676e-05, 4.589452510117553e-05, 1.2874520507466514e-05, 0.218525230884552, 0.3579028844833374, 0.23590171337127686, 0.0001656871900195256, 7.068861305015162e-05, 0.08142003417015076, 0.0004320403386373073, 0.41244590282440186, 0.2459997981786728, 0.003891990752890706, 0.008867527358233929, 0.01261257752776146, 0.0012144817737862468, 0.0008799732895568013, 0.0006448334897868335, 0.000614335120189935, 0.0023550651967525482, 0.0005239067832008004, 2.729855441430118e-05, 3.814689989667386e-06, 0.03308773413300514, 0.00011824862303910777, 0.0012942517641931772, 0.017061131075024605, 0.0007701530121266842], "tokens": [13, 259, 334, 402, 1624, 599, 278, 14020, 3651, 393, 591, 508, 10583, 29889, 13, 259, 3776, 13, 29871, 2024, 770, 402, 1624, 29907, 392, 29875, 1078, 4988, 25513, 6747, 7514, 10717, 426, 13, 1678, 732, 4640, 13, 1678, 970, 1780, 6493, 29898, 4247, 5323, 874, 284, 260, 29892, 9071, 302, 29892]}
{"line_number": 141, "line_type": "original", "code": "    cfg = cfa.getCfg();", "entropy": 1.9845046997070312, "is_bug_line": false, "sus_score": 0.12838814775327387, "per_token_entropy": [4.474353313446045, 8.54894733428955, 0.7588441371917725, 4.791074275970459, 3.188107490539551, 0.021819300949573517, 0.017715437337756157, 0.0061607928946614265, 0.008672312833368778, 7.784063927829266e-05, 0.01378045417368412], "tokens": [268, 274, 16434, 353, 274, 5444, 29889, 657, 29907, 16434, 890]}
{"line_number": 141, "line_type": "generated", "code": "\n   * reaching definition analysis.\n   */\n  private class GatherCandiates extends AbstractPostOrderCallback {\n\n    @Override\n    public void visit(NodeTraversal t, Node n, Node parent) {\n     ", "entropy": 0.19228360056877136, "is_bug_line": false, "sus_score": 0.12838814775327387, "per_token_entropy": [0.9246614575386047, 0.11896447092294693, 0.0944565162062645, 3.257387161254883, 0.6175764799118042, 1.0130971670150757, 0.24488136172294617, 0.3201025724411011, 0.0849963128566742, 0.30054381489753723, 0.0008722314960323274, 0.008683186024427414, 0.1743808090686798, 0.08411974459886551, 0.002086963504552841, 8.34461570775602e-06, 3.9219088648678735e-05, 8.451581379631534e-05, 7.247662142617628e-05, 6.437280717364047e-06, 0.17315684258937836, 0.3639911711215973, 0.20173189043998718, 0.00016044282529037446, 6.05564855504781e-05, 0.08003482222557068, 0.00037853704998269677, 1.193166971206665, 0.022505586966872215, 0.4455317258834839, 0.0034683330450206995, 0.008569964207708836, 0.00541576836258173, 0.0012648447882384062, 0.00128020322881639, 0.0008118432597257197, 0.0004631400224752724, 0.002676835050806403, 0.000518664310220629, 3.4927710657939315e-05, 3.4570634852570947e-06, 0.03744896501302719, 8.928377064876258e-05, 0.0012428186601027846, 0.018488455563783646, 0.0009380945703014731, 0.0011435167398303747, 0.006950723007321358, 0.0015573289711028337, 0.0007022537174634635, 0.0007078525959514081, 0.17722934484481812], "tokens": [13, 259, 334, 20888, 5023, 7418, 29889, 13, 259, 3776, 13, 29871, 2024, 770, 402, 1624, 29907, 392, 29875, 1078, 4988, 25513, 6747, 7514, 10717, 426, 13, 13, 1678, 732, 4640, 13, 1678, 970, 1780, 6493, 29898, 4247, 5323, 874, 284, 260, 29892, 9071, 302, 29892, 9071, 3847, 29897, 426, 13, 418]}
{"line_number": 142, "line_type": "original", "code": "    reachingDef = new MustBeReachingVariableDef(cfg, t.getScope(), compiler);", "entropy": 1.0971269607543945, "is_bug_line": false, "sus_score": 0.12838814775327387, "per_token_entropy": [5.059834957122803, 10.937361717224121, 0.4135333001613617, 3.296250104904175, 0.45109668374061584, 0.408265620470047, 0.00015662873920518905, 0.0008778294431976974, 0.0006400682032108307, 0.005032965913414955, 0.009854476898908615, 0.05842471495270729, 0.8230054378509521, 0.046973537653684616, 0.6328887939453125, 0.04802245646715164, 0.022143498063087463, 0.0016568278660997748, 0.35022658109664917, 0.3751261234283447, 0.09829258918762207], "tokens": [268, 20888, 3206, 353, 716, 19928, 3629, 1123, 9733, 16174, 3206, 29898, 16859, 29892, 260, 29889, 657, 15289, 3285, 6516, 416]}
{"line_number": 142, "line_type": "generated", "code": "\n   * in {@link #candidates}.\n   */\n  private class GatherCandiates extends AbstractPostOrderCallback {\n    @Override\n    public void visit(NodeTraversal t, Node n, Node parent)", "entropy": 0.08253194391727448, "is_bug_line": false, "sus_score": 0.12838814775327387, "per_token_entropy": [0.3961224853992462, 0.09803972393274307, 0.07442865520715714, 0.18222205340862274, 0.4040062129497528, 0.4513375163078308, 0.1205139085650444, 0.019611738622188568, 0.0014465117128565907, 0.004081135615706444, 0.3159784972667694, 0.16794775426387787, 0.07193927466869354, 0.22782361507415771, 0.0003987947420682758, 0.008267110213637352, 0.1475953459739685, 0.07499396055936813, 0.002178916009142995, 1.0490362910786644e-05, 7.784063927829266e-05, 0.0004528927383944392, 0.00011205045302631333, 5.125986263010418e-06, 0.2042102962732315, 0.3751656115055084, 0.21080029010772705, 0.00023326536756940186, 5.411955135059543e-05, 0.08019062876701355, 0.00017093151109293103, 0.33537232875823975, 0.22609283030033112, 0.003275388851761818, 0.00890072900801897, 0.004078286234289408, 0.001191144809126854, 0.0008779485360719264, 0.000605638197157532, 0.00045134371612221, 0.002796669490635395, 0.0005013877525925636, 4.565611743601039e-05, 4.291525328881107e-06, 0.03506448492407799, 9.357491217087954e-05, 0.0009526243666186929, 0.018960893154144287, 0.0010550415609031916, 0.0012973472476005554, 0.008181864395737648, 0.001444607158191502], "tokens": [13, 259, 334, 297, 26633, 2324, 396, 29883, 5380, 1078, 1836, 13, 259, 3776, 13, 29871, 2024, 770, 402, 1624, 29907, 392, 29875, 1078, 4988, 25513, 6747, 7514, 10717, 426, 13, 1678, 732, 4640, 13, 1678, 970, 1780, 6493, 29898, 4247, 5323, 874, 284, 260, 29892, 9071, 302, 29892, 9071, 3847, 29897]}
{"line_number": 143, "line_type": "original", "code": "    reachingDef.analyze();", "entropy": 3.1344945430755615, "is_bug_line": false, "sus_score": 0.12838814775327387, "per_token_entropy": [4.003518104553223, 14.664397239685059, 1.8432368040084839, 0.2782648205757141, 0.9558976888656616, 0.0018184330547228456, 0.19432751834392548], "tokens": [268, 20888, 3206, 29889, 24209, 911, 890]}
{"line_number": 143, "line_type": "generated", "code": "  * be checked by calling {@code Candidate.canInline}.\n   */\n  private class GatherCandiates extends NodeTraversal.AbstractPostOrderCallback {\n    @Override\n    public void visit(NodeTra", "entropy": 0.2304692566394806, "is_bug_line": false, "sus_score": 0.12838814775327387, "per_token_entropy": [0.9047524333000183, 0.1140567734837532, 0.15857115387916565, 0.48534539341926575, 1.6986019611358643, 0.9158411026000977, 0.2273857295513153, 1.0637086629867554, 0.6140235662460327, 0.0015710166189819574, 0.001945747178979218, 0.558051347732544, 0.07333008944988251, 0.001873882138170302, 0.003283349797129631, 1.6204299926757812, 0.05898621305823326, 0.08780956268310547, 0.24165740609169006, 0.0004377598816063255, 0.014770321547985077, 0.14469918608665466, 0.09843336790800095, 0.0015070997178554535, 1.490105023549404e-05, 4.95898348162882e-05, 0.00012468514614738524, 5.495397272170521e-05, 7.152531907195225e-06, 0.21175752580165863, 1.749199390411377, 0.009496042504906654, 0.0009471459779888391, 0.0002261144545627758, 0.0010080024367198348, 0.036733102053403854, 0.23291714489459991, 0.0004101150552742183, 0.0001472126314183697, 0.05246906727552414, 0.00020585325546562672, 0.36908185482025146, 0.19803562760353088, 0.0033759051002562046, 0.010301985777914524, 0.0069115376099944115, 0.0009533389820717275, 0.001141373417340219, 0.00042465253500267863, 0.0006437613046728075, 0.006380070000886917, 0.00030894274823367596], "tokens": [259, 334, 367, 7120, 491, 5432, 26633, 401, 315, 5380, 403, 29889, 3068, 797, 1220, 1836, 13, 259, 3776, 13, 29871, 2024, 770, 402, 1624, 29907, 392, 29875, 1078, 4988, 9071, 5323, 874, 284, 29889, 9118, 6747, 7514, 10717, 426, 13, 1678, 732, 4640, 13, 1678, 970, 1780, 6493, 29898, 4247, 5323]}
{"line_number": 144, "line_type": "original", "code": "    candidates = Lists.newLinkedList();", "entropy": 1.9735316038131714, "is_bug_line": false, "sus_score": 0.12838814775327387, "per_token_entropy": [4.278927326202393, 10.682085990905762, 3.4444427490234375, 1.8543920516967773, 0.011894963681697845, 0.015416973270475864, 0.0015567338559776545, 1.3961308002471924, 0.000337305391440168, 0.0024429496843367815, 0.02121797576546669], "tokens": [268, 21669, 353, 2391, 29879, 29889, 1482, 6595, 287, 1293, 890]}
{"line_number": 144, "line_type": "generated", "code": "\n   * the reaching use is available.\n   */\n  private class GatherCandiates extends AbstractPostOrderCallback {\n    @Override\n    public void visit(NodeTraversal t, Node n, Node parent) {\n", "entropy": 0.2658963203430176, "is_bug_line": false, "sus_score": 0.12838814775327387, "per_token_entropy": [0.35702720284461975, 0.23387742042541504, 0.1475767344236374, 1.710517168045044, 3.6304402351379395, 0.7247386574745178, 2.597257614135742, 2.110668182373047, 0.14468525350093842, 0.062285326421260834, 0.09770485013723373, 0.18339182436466217, 0.0018392566125839949, 0.01395974401384592, 0.14333637058734894, 0.09864682704210281, 0.00162588432431221, 5.8412379075889476e-06, 3.862306402879767e-05, 9.357491217087954e-05, 3.158996332786046e-05, 4.887569048150908e-06, 0.2170577049255371, 0.4046286940574646, 0.20806384086608887, 0.00019143179815728217, 4.184158387943171e-05, 0.07950791716575623, 0.00022921319759916514, 0.3364582657814026, 0.23515069484710693, 0.0030055134557187557, 0.00933697260916233, 0.0035689487121999264, 0.0008385241380892694, 0.0006151691195555031, 0.0004766043566633016, 0.0004278697888366878, 0.0030901322606951, 0.0003271759778726846, 3.969590397900902e-05, 3.2186455882765586e-06, 0.03436638042330742, 7.021180499577895e-05, 0.0011070796754211187, 0.018097396939992905, 0.0007284610182978213, 0.0011709030950441957, 0.005736317951232195, 0.001644212519749999, 0.0006450717919506133, 0.00022873646230436862], "tokens": [13, 259, 334, 278, 20888, 671, 338, 3625, 29889, 13, 259, 3776, 13, 29871, 2024, 770, 402, 1624, 29907, 392, 29875, 1078, 4988, 25513, 6747, 7514, 10717, 426, 13, 1678, 732, 4640, 13, 1678, 970, 1780, 6493, 29898, 4247, 5323, 874, 284, 260, 29892, 9071, 302, 29892, 9071, 3847, 29897, 426, 13]}
{"line_number": 148, "line_type": "original", "code": "    new NodeTraversal(compiler, new GatherCandiates()).traverse(", "entropy": 1.1048210859298706, "is_bug_line": false, "sus_score": 0.12838814775327387, "per_token_entropy": [6.001940727233887, 9.162225723266602, 2.71333909034729, 0.04181549698114395, 0.001962641952559352, 0.0003150205302517861, 0.009000444784760475, 0.18649503588676453, 0.004513789899647236, 1.4695279598236084, 0.38400766253471375, 0.001177094760350883, 0.021593350917100906, 0.02896011807024479, 0.002410008804872632, 0.0007641970878466964, 1.2271817922592163, 0.2524319589138031, 0.0011318475008010864, 0.5856271982192993], "tokens": [268, 716, 9071, 5323, 874, 284, 29898, 21789, 29892, 716, 402, 1624, 29907, 392, 29875, 1078, 16655, 3018, 3901, 29898]}
{"line_number": 148, "line_type": "generated", "code": "\n    public void visit(NodeTraversal t, Node n, Node parent) {\n      if (n.isName() &&\n          !n.getString().equals(\"undefined\") &&\n          !n.getString().equals(\"NaN\")", "entropy": 0.23185797035694122, "is_bug_line": false, "sus_score": 0.12838814775327387, "per_token_entropy": [0.11933028697967529, 0.7367441654205322, 0.3422810733318329, 0.0846162885427475, 0.0038443722296506166, 0.017690608277916908, 0.0012532960390672088, 0.008851693943142891, 0.00011395759065635502, 7.903263758635148e-05, 0.024815397337079048, 0.0004505096294451505, 0.0022967883851379156, 0.026207666844129562, 0.0030926279723644257, 0.0029697385616600513, 0.01221061684191227, 0.007082120515406132, 0.03609330952167511, 0.005948815029114485, 0.14079032838344574, 0.5751327276229858, 0.30143922567367554, 0.3214382529258728, 0.022693809121847153, 0.054371222853660583, 0.2216690331697464, 0.7747908234596252, 0.09836304187774658, 1.9998769760131836, 0.06467680633068085, 0.931836724281311, 0.7030932307243347, 0.003148719435557723, 0.21514052152633667, 0.000491021724883467, 0.3378329277038574, 0.4493178725242615, 0.4375304579734802, 0.10062567889690399, 0.013422012329101562, 0.09144426137208939, 0.02870890311896801, 0.6684715151786804, 0.863662838935852, 0.0006808108882978559, 0.11765120923519135, 0.00014757021563127637, 0.08738932013511658, 0.01663961634039879, 0.6726238131523132, 0.3055397868156433], "tokens": [13, 1678, 970, 1780, 6493, 29898, 4247, 5323, 874, 284, 260, 29892, 9071, 302, 29892, 9071, 3847, 29897, 426, 13, 418, 565, 313, 29876, 29889, 275, 1170, 580, 2607, 13, 3986, 1738, 29876, 29889, 13719, 2141, 10954, 703, 15955, 1159, 2607, 13, 3986, 1738, 29876, 29889, 13719, 2141, 10954, 703, 19377, 1159]}
{"line_number": 152, "line_type": "original", "code": "    reachingUses = new MaybeReachingVariableUse(cfg, t.getScope(), compiler);", "entropy": 1.34638249874115, "is_bug_line": false, "sus_score": 0.12838814775327387, "per_token_entropy": [7.637796878814697, 13.081709861755371, 0.3182802200317383, 8.83301836438477e-05, 2.66568922996521, 0.7479403614997864, 0.16213202476501465, 0.0014349650591611862, 0.0005480932886712253, 0.0010724276071414351, 0.004890385549515486, 0.03777100518345833, 1.1884121894836426, 0.07306107878684998, 0.8115333914756775, 0.20209553837776184, 0.005495203658938408, 0.0013938959455117583, 0.32546159625053406, 0.8057860136032104, 0.20143935084342957], "tokens": [268, 20888, 15922, 267, 353, 716, 7198, 1123, 9733, 16174, 11403, 29898, 16859, 29892, 260, 29889, 657, 15289, 3285, 6516, 416]}
{"line_number": 152, "line_type": "generated", "code": "\n        return;\n      }\n\n      if (graphNode.getInEdges().isEmpty() ||\n          !graphNode.getOutEdges().isEmpty()) {\n        // We only care about nodes that have no incoming edges.\n", "entropy": 0.50244140625, "is_bug_line": false, "sus_score": 0.12838814775327387, "per_token_entropy": [0.1064162626862526, 0.10844869911670685, 0.06405197083950043, 0.0011121999705210328, 0.005182285793125629, 0.012414796277880669, 6.329813186312094e-05, 0.01948232762515545, 0.33743998408317566, 0.05651933327317238, 0.782056987285614, 0.32087182998657227, 1.8509687185287476, 0.00016807096835691482, 0.05973551422357559, 0.25726789236068726, 1.913055181503296, 0.08790378272533417, 8.344646857949556e-07, 0.01466601062566042, 0.6704162359237671, 1.5881640911102295, 1.083871841430664, 0.5183067917823792, 0.04003017023205757, 1.6021298170089722, 1.3865835666656494, 0.00028320116689428687, 0.0016079128254204988, 0.15340875089168549, 1.0309679508209229, 0.0008628221112303436, 9.775113539944869e-06, 0.0007895689341239631, 0.018151365220546722, 0.12009873241186142, 0.0016107691917568445, 0.0014331794809550047, 0.189058318734169, 0.09247181564569473, 3.068694591522217, 1.0793110132217407, 0.5920813083648682, 0.053045451641082764, 1.1260006427764893, 0.7373479008674622, 1.0813446044921875, 0.732451319694519, 0.9543987512588501, 0.43083661794662476, 1.5169095993041992, 0.25644809007644653], "tokens": [13, 4706, 736, 29936, 13, 418, 500, 13, 13, 418, 565, 313, 4262, 4247, 29889, 657, 797, 3853, 2710, 2141, 24326, 580, 3830, 13, 3986, 1738, 4262, 4247, 29889, 657, 3744, 3853, 2710, 2141, 24326, 3101, 426, 13, 4706, 849, 1334, 871, 2562, 1048, 7573, 393, 505, 694, 23235, 12770, 29889, 13]}
