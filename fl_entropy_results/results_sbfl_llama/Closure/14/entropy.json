{"line_number": 579, "line_type": "original", "code": "          finallyMap.put(lastJump, computeFallThrough(cur.getLastChild()));", "entropy": 0.991457998752594, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [8.91304874420166, 9.841490745544434, 0.004312501288950443, 0.0028601475059986115, 0.014228560030460358, 0.003956230357289314, 0.325329452753067, 0.0003383779258001596, 4.589452510117553e-05, 0.0010871936101466417, 0.9500741958618164, 0.017318803817033768, 0.20655807852745056, 0.0004107108688913286, 1.1205610462639015e-05, 6.711257447022945e-05, 0.001769644906744361, 1.6705379486083984, 0.2484596222639084, 0.004813036881387234, 0.5890913009643555, 0.000573351513594389, 0.007151008117944002], "tokens": [965, 7146, 3388, 29889, 649, 29898, 4230, 29967, 3427, 29892, 10272, 29943, 497, 29911, 1092, 820, 29898, 2764, 29889, 657, 8897, 5938, 20465]}
{"line_number": 579, "line_type": "generated", "code": "\n      if (lastJump == node) {\n        createEdge(lastJump, Branch.UNCOND, iter);\n      } else {\n        finallyMap.put(lastJump, iter);\n      }\n    }", "entropy": 0.1486368626356125, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [0.10048801451921463, 0.6143942475318909, 2.1023812294006348, 0.07289297133684158, 0.5297137498855591, 0.0004667146422434598, 1.7165990357170813e-05, 0.050357457250356674, 0.03186403214931488, 0.009075580164790154, 0.0011267272057011724, 0.000895933189895004, 0.04241279140114784, 0.12821513414382935, 0.0019243309507146478, 0.0003796095261350274, 0.06382440030574799, 2.276871418871451e-05, 2.50339189733495e-06, 0.00010084597306558862, 0.02252819947898388, 0.00045372682507149875, 0.05802692100405693, 0.0006629414856433868, 3.1709168979432434e-05, 0.00011777184408856556, 1.293526530265808, 1.5956761837005615, 0.001795467222109437, 0.037316445261240005, 0.0008859285153448582, 0.004091345705091953, 0.003095598891377449, 0.0008824745309539139, 0.06538333743810654, 0.1197676733136177, 7.259582343976945e-05, 0.0001731960946926847, 0.00023016665363684297, 0.00017450717859901488, 0.0067705269902944565, 4.0649541915627196e-05, 2.3841830625315197e-06, 8.594620157964528e-05, 0.4395427703857422, 0.011100324802100658, 0.0006842655711807311, 0.009571494534611702, 0.0012748456792905927, 0.0021627387031912804, 0.3005857467651367, 0.0018458010163158178], "tokens": [13, 418, 565, 313, 4230, 29967, 3427, 1275, 2943, 29897, 426, 13, 4706, 1653, 23894, 29898, 4230, 29967, 3427, 29892, 25889, 29889, 3904, 6007, 29928, 29892, 4256, 416, 13, 418, 500, 1683, 426, 13, 4706, 7146, 3388, 29889, 649, 29898, 4230, 29967, 3427, 29892, 4256, 416, 13, 418, 500, 13, 1678, 500]}
{"line_number": 767, "line_type": "original", "code": "              cfa.createEdge(fromNode, Branch.UNCOND, finallyNode);", "entropy": 2.2478787899017334, "is_bug_line": true, "sus_score": 0.4629100498862757, "per_token_entropy": [10.001450538635254, 2.404926300048828, 0.22098085284233093, 0.023287957534193993, 3.5807878971099854, 0.49125146865844727, 0.09201622754335403, 0.1379147469997406, 0.04998445138335228, 0.023809002712368965, 9.888713836669922, 0.4948198199272156, 1.5394988059997559, 0.0021557204890996218, 0.0003980797773692757, 0.15174397826194763, 12.693618774414062, 0.436101496219635, 0.47623783349990845], "tokens": [1669, 274, 5444, 29889, 3258, 23894, 29898, 3166, 4247, 29892, 25889, 29889, 3904, 6007, 29928, 29892, 7146, 4247, 416]}
{"line_number": 767, "line_type": "generated", "code": "\n   */\n  static void connect(Node fromNode, Node toNode) {\n    Preconditions.checkNotNull(fromNode);\n    Preconditions.checkNotNull(toNode);\n\n    // If the node is", "entropy": 0.32028207182884216, "is_bug_line": true, "sus_score": 0.4629100498862757, "per_token_entropy": [0.17224791646003723, 0.41296064853668213, 0.18832114338874817, 0.004959424491971731, 0.06819221377372742, 0.8765901923179626, 0.09017886221408844, 0.3586786091327667, 0.13949942588806152, 0.13637104630470276, 0.025382602587342262, 0.010006737895309925, 0.003940556664019823, 0.03189936280250549, 0.0036361785605549812, 0.0012187680695205927, 0.6330574154853821, 0.02535947412252426, 0.012573848478496075, 0.22820208966732025, 1.5612661838531494, 0.0016295737586915493, 0.0008621074957773089, 0.006056527607142925, 0.0019452712731435895, 0.6745057106018066, 0.0009348789462819695, 0.0014290130930021405, 0.17267660796642303, 0.0017016944475471973, 0.12749803066253662, 0.005143030546605587, 0.041502077132463455, 0.0830841138958931, 0.0015361425466835499, 0.00036507140612229705, 0.0023884836118668318, 0.001391872181557119, 0.024727245792746544, 0.0008270895341411233, 0.0014292511623352766, 0.011584984138607979, 0.0008323303773067892, 0.002294290577992797, 0.0022033003624528646, 1.1509987115859985, 0.09192000329494476, 1.8056716918945312, 2.2423207759857178, 1.0213792324066162, 3.203923225402832, 0.9853608012199402], "tokens": [13, 259, 3776, 13, 29871, 2294, 1780, 4511, 29898, 4247, 515, 4247, 29892, 9071, 304, 4247, 29897, 426, 13, 1678, 4721, 1116, 2187, 29889, 3198, 3664, 7327, 29898, 3166, 4247, 416, 13, 1678, 4721, 1116, 2187, 29889, 3198, 3664, 7327, 29898, 517, 4247, 416, 13, 13, 1678, 849, 960, 278, 2943, 338]}
{"line_number": 768, "line_type": "original", "code": "            }", "entropy": 7.776480674743652, "is_bug_line": false, "sus_score": 0.4629100498862757, "per_token_entropy": [11.244148254394531, 4.308813095092773], "tokens": [632, 500]}
{"line_number": 768, "line_type": "generated", "code": "\n  static void createEdge(Node fromNode, Branch branch, Node toNode) {\n    ControlFlowGraph.Edge edge = new ControlFlowGraph.Edge(fromNode, branch, toNode);\n    fromNode.addSuccessor(", "entropy": 0.27097204327583313, "is_bug_line": false, "sus_score": 0.4629100498862757, "per_token_entropy": [0.15039648115634918, 0.3368803560733795, 0.8904287815093994, 0.07953962683677673, 0.5368695259094238, 0.22296538949012756, 0.0262607354670763, 0.2248680293560028, 0.027659809216856956, 0.016814058646559715, 0.0013328249333426356, 0.20036740601062775, 0.5561172366142273, 0.135380357503891, 0.03134866803884506, 0.004055965691804886, 0.0012315078638494015, 0.08261018246412277, 0.030043363571166992, 0.005103773903101683, 0.12320278584957123, 1.9058411121368408, 0.030129773542284966, 0.15437428653240204, 1.0284950733184814, 0.982394814491272, 1.166662335395813, 0.06381254643201828, 0.7268579602241516, 0.04475908726453781, 0.0011455409694463015, 0.0020895807538181543, 0.0029794846195727587, 0.013244508765637875, 0.24404564499855042, 0.5359011292457581, 0.0007613382767885923, 0.014036858454346657, 0.38516688346862793, 0.019064290449023247, 0.11117538809776306, 0.0002379134384682402, 0.012433987110853195, 0.002386699663475156, 0.18083465099334717, 1.3650060892105103, 0.0016752745723351836, 0.00511610833927989, 0.5711004137992859, 0.5986846685409546, 0.0011704268399626017, 0.23548488318920135], "tokens": [13, 29871, 2294, 1780, 1653, 23894, 29898, 4247, 515, 4247, 29892, 25889, 5443, 29892, 9071, 304, 4247, 29897, 426, 13, 1678, 11264, 17907, 9527, 29889, 23894, 7636, 353, 716, 11264, 17907, 9527, 29889, 23894, 29898, 3166, 4247, 29892, 5443, 29892, 304, 4247, 416, 13, 1678, 515, 4247, 29889, 1202, 14191, 272, 29898]}
{"line_number": 844, "line_type": "original", "code": "            finallyMap.put(lastJump, handler.getLastChild());", "entropy": 1.7125509977340698, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [11.94428539276123, 9.856255531311035, 0.18507392704486847, 0.6703264117240906, 0.3990746736526489, 0.01209720503538847, 1.1295009851455688, 0.10384095460176468, 0.0011957883834838867, 0.01105764601379633, 1.814097285270691, 0.9466555714607239, 0.011998975649476051, 0.2758461833000183, 0.0014527016319334507, 0.03805667534470558], "tokens": [632, 7146, 3388, 29889, 649, 29898, 4230, 29967, 3427, 29892, 7834, 29889, 657, 8897, 5938, 3310]}
{"line_number": 844, "line_type": "generated", "code": "\n  private static boolean matchLabel(Node target, String label) {\n    if (label == null) {\n      return true;\n    }\n    return label.equals(target.getFirstChild().getString());\n  }\n\n", "entropy": 0.13368885219097137, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [0.09405098855495453, 0.18848732113838196, 0.14515365660190582, 0.058762550354003906, 0.005547248758375645, 0.008087151683866978, 0.0005397531786002219, 0.0061584231443703175, 0.03913275524973869, 0.5427894592285156, 0.007934716530144215, 0.032682958990335464, 0.012398548424243927, 0.011556939221918583, 0.0012304362608119845, 0.0016414752462878823, 0.03636486455798149, 0.8007326722145081, 0.02139372192323208, 0.09506427496671677, 0.1779123693704605, 0.0008687774534337223, 0.07058573514223099, 0.00804765522480011, 0.0254107266664505, 0.008109618909657001, 0.009622382931411266, 0.011085234582424164, 0.00035255891270935535, 0.014256061054766178, 0.004176940768957138, 0.0006146925734356046, 0.11517908424139023, 0.14134687185287476, 1.6130379438400269, 1.2996256351470947, 0.05267729237675667, 0.012207201682031155, 0.010091002099215984, 0.4902452230453491, 0.0034917357843369246, 0.2177843451499939, 0.29582929611206055, 0.0011313711293041706, 0.0013578252401202917, 0.01435418613255024, 0.041719112545251846, 0.0018454440869390965, 0.02651047706604004, 0.0008625839254818857, 0.008382376283407211, 0.16338838636875153], "tokens": [13, 29871, 2024, 2294, 7223, 1993, 4775, 29898, 4247, 3646, 29892, 1714, 3858, 29897, 426, 13, 1678, 565, 313, 1643, 1275, 1870, 29897, 426, 13, 418, 736, 1565, 29936, 13, 1678, 500, 13, 1678, 736, 3858, 29889, 10954, 29898, 5182, 29889, 657, 6730, 5938, 2141, 13719, 3310, 13, 29871, 500, 13, 13]}
{"line_number": 491, "line_type": "original", "code": "      return;", "entropy": 4.802304267883301, "is_bug_line": false, "sus_score": 0.3396831102433787, "per_token_entropy": [10.09476089477539, 4.264307975769043, 0.04784269258379936], "tokens": [539, 736, 29936]}
{"line_number": 491, "line_type": "generated", "code": "\n  }\n\n  private void handleTry(Node node) {\n    // Try goes to the body.\n    createEdge(node, Branch.UNCOND, node.getFirstChild());\n    // If there is a catch handler", "entropy": 0.3885156214237213, "is_bug_line": false, "sus_score": 0.3396831102433787, "per_token_entropy": [0.03991173580288887, 0.41918814182281494, 0.0014581772265955806, 0.0019723977893590927, 0.02875361405313015, 0.038976382464170456, 0.10901594907045364, 0.037814050912857056, 0.11292286962270737, 2.061953067779541, 0.11264300346374512, 0.0020328350365161896, 0.040792316198349, 0.009138188324868679, 0.0032058770302683115, 0.0005385617259889841, 0.05092645063996315, 1.3030309677124023, 2.283503293991089, 2.554307460784912, 0.3106490969657898, 0.4749237298965454, 1.1588701009750366, 1.009556770324707, 0.4884020686149597, 0.010793636552989483, 0.36795079708099365, 0.001878284616395831, 0.0005490464391186833, 0.0046628313139081, 0.001426989445462823, 0.004320810083299875, 6.186770770000294e-05, 0.09445022791624069, 4.589452510117553e-05, 1.4662635294371285e-05, 0.0001967951684491709, 0.29167214035987854, 0.000979420612566173, 0.0005501187406480312, 0.04502100497484207, 0.0007864719373174012, 0.032853469252586365, 0.0004190520558040589, 0.586390495300293, 0.7065473198890686, 2.1886496543884277, 0.8679407835006714, 0.09847182780504227, 0.5215481519699097, 0.3727025091648102, 1.3474397659301758], "tokens": [13, 29871, 500, 13, 13, 29871, 2024, 1780, 4386, 15870, 29898, 4247, 2943, 29897, 426, 13, 1678, 849, 3967, 5771, 304, 278, 3573, 29889, 13, 1678, 1653, 23894, 29898, 3177, 29892, 25889, 29889, 3904, 6007, 29928, 29892, 2943, 29889, 657, 6730, 5938, 3310, 13, 1678, 849, 960, 727, 338, 263, 4380, 7834]}
{"line_number": 766, "line_type": "original", "code": "            for (Node finallyNode : cfa.finallyMap.get(parent)) {", "entropy": 2.3290631771087646, "is_bug_line": false, "sus_score": 0.3273268353539886, "per_token_entropy": [8.110797882080078, 7.09893798828125, 0.4219657778739929, 1.7703664302825928, 10.526228904724121, 0.08275263756513596, 0.2520381808280945, 2.4513907432556152, 1.0276223421096802, 0.03653808310627937, 3.2335987091064453, 0.004220626316964626, 5.317216873168945, 0.09419345110654831, 0.060542378574609756, 0.013946459628641605, 3.589885950088501, 0.12785884737968445, 0.03210025653243065], "tokens": [632, 363, 313, 4247, 7146, 4247, 584, 274, 5444, 29889, 4951, 635, 3388, 29889, 657, 29898, 3560, 876, 426]}
{"line_number": 766, "line_type": "generated", "code": "\n   * @param toNode Destination.\n   */\n  private void createEdge(Node fromNode, Branch branch, Node toNode) {\n    Preconditions.checkNotNull(fromNode);\n    Preconditions.check", "entropy": 0.1915610283613205, "is_bug_line": false, "sus_score": 0.3273268353539886, "per_token_entropy": [0.13625246286392212, 0.1474285125732422, 0.18890704214572906, 0.02417851984500885, 0.021949926391243935, 0.5403623580932617, 0.09321404248476028, 0.26889780163764954, 0.013288269750773907, 0.07289418578147888, 0.029235120862722397, 0.3722810447216034, 0.7588000893592834, 0.0014578201808035374, 0.05396752059459686, 1.6420716047286987, 0.4845275282859802, 0.6688429117202759, 0.28489840030670166, 0.05002300441265106, 0.14837999641895294, 0.022394269704818726, 0.015365908853709698, 0.0018573428969830275, 0.3972589373588562, 0.5851630568504333, 0.12514925003051758, 0.04537251591682434, 0.0038631348870694637, 0.0017450118903070688, 0.06136069819331169, 0.016802452504634857, 0.00195609824731946, 0.12757253646850586, 1.4403047561645508, 0.0006973695708438754, 0.0003225283289793879, 0.003981521353125572, 0.0010122895473614335, 0.6095548868179321, 0.00031513971043750644, 0.0009484559996053576, 0.26841703057289124, 0.0016971721779555082, 0.12598785758018494, 0.0035241658333688974, 0.032645344734191895, 0.0618232898414135, 0.0006039702566340566, 3.731181277544238e-05, 0.000987756997346878, 0.000592890428379178], "tokens": [13, 259, 334, 732, 3207, 304, 4247, 15435, 3381, 29889, 13, 259, 3776, 13, 29871, 2024, 1780, 1653, 23894, 29898, 4247, 515, 4247, 29892, 25889, 5443, 29892, 9071, 304, 4247, 29897, 426, 13, 1678, 4721, 1116, 2187, 29889, 3198, 3664, 7327, 29898, 3166, 4247, 416, 13, 1678, 4721, 1116, 2187, 29889, 3198]}
{"line_number": 764, "line_type": "original", "code": "        } else if (parent.getLastChild() == node){", "entropy": 1.9693320989608765, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [8.383950233459473, 5.324093818664551, 1.9921587705612183, 0.7260114550590515, 0.07669580727815628, 2.699273109436035, 0.2192341536283493, 0.23091433942317963, 3.658806324005127, 0.00025293012731708586, 0.021940944716334343, 0.12764357030391693, 0.11306203156709671, 3.996610641479492], "tokens": [308, 500, 1683, 565, 313, 3560, 29889, 657, 8897, 5938, 580, 1275, 2943, 2597]}
{"line_number": 764, "line_type": "generated", "code": "\n   * @param fromNode the source node in the control flow graph.\n   * @param branch the type of branch to create.\n   * @param toNode the destination node in the control flow graph.\n   * @param cfa", "entropy": 0.4268856942653656, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [0.13395316898822784, 0.22443675994873047, 0.5508914589881897, 0.9105104207992554, 0.1337837278842926, 0.7196505665779114, 0.8256479501724243, 2.026362419128418, 1.401095986366272, 0.27822068333625793, 2.2596871852874756, 0.04075454920530319, 1.0487053394317627, 0.018825549632310867, 0.023587694391608238, 0.41689246892929077, 0.04078487679362297, 0.15273067355155945, 0.00817299634218216, 0.005960309412330389, 0.0013612775364890695, 0.9393728971481323, 0.3954772353172302, 0.834673285484314, 0.007632380351424217, 0.9986492991447449, 2.7604517936706543, 1.5283355712890625, 0.4755420684814453, 0.06322354078292847, 0.04645702615380287, 0.00526150269433856, 0.005190112628042698, 0.0016950300196185708, 0.04574303328990936, 0.015186049044132233, 0.02718009427189827, 0.11948177963495255, 0.02122112736105919, 0.09384480118751526, 0.0023262840695679188, 0.003967035561800003, 0.0024661386851221323, 0.004677781835198402, 0.023199206218123436, 0.014921130612492561, 0.12356821447610855, 1.6389371156692505, 0.05426136404275894, 0.41201040148735046, 0.2842337191104889, 0.026854394003748894], "tokens": [13, 259, 334, 732, 3207, 515, 4247, 278, 2752, 2943, 297, 278, 2761, 4972, 3983, 29889, 13, 259, 334, 732, 3207, 5443, 278, 1134, 310, 5443, 304, 1653, 29889, 13, 259, 334, 732, 3207, 304, 4247, 278, 12551, 2943, 297, 278, 2761, 4972, 3983, 29889, 13, 259, 334, 732, 3207, 274, 5444]}
{"line_number": 765, "line_type": "original", "code": "          if (cfa != null) {", "entropy": 1.934563159942627, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [8.079113960266113, 1.525860071182251, 0.19789724051952362, 2.675154209136963, 0.05755919590592384, 4.72568941116333, 0.01728236675262451, 0.09013888239860535, 0.042372457683086395], "tokens": [965, 565, 313, 29883, 5444, 2804, 1870, 29897, 426]}
{"line_number": 765, "line_type": "generated", "code": "\n   * @param fromNode The node to connect from.\n   * @param branch The branch of the control flow graph to connect to.\n   * @param toNode The node to connect to.\n   */\n  static void createEdge", "entropy": 0.34896594285964966, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [0.19608844816684723, 0.5403411388397217, 0.33446750044822693, 0.5883470177650452, 0.12326221913099289, 0.7600247859954834, 0.7820655703544617, 0.7905910015106201, 1.1061111688613892, 1.2550082206726074, 0.9537567496299744, 0.3096367418766022, 0.2462988644838333, 0.075439453125, 0.19407376646995544, 0.008388049900531769, 0.005515950731933117, 0.001508289948105812, 0.8038862347602844, 0.19230937957763672, 1.0546305179595947, 1.830810785293579, 0.32094258069992065, 1.3772149085998535, 0.048781830817461014, 0.3869112730026245, 0.8104225397109985, 0.4954036772251129, 0.6582664251327515, 0.04437737166881561, 0.0347970686852932, 0.05563885718584061, 0.0037776315584778786, 0.012751118279993534, 0.0017630999209359288, 0.056463904678821564, 0.020756294950842857, 0.017448261380195618, 0.03170270472764969, 0.01912943460047245, 0.011148188263177872, 0.009875370189547539, 0.018508467823266983, 0.017448846250772476, 0.0604381337761879, 0.242913618683815, 0.0035383019130676985, 0.057409390807151794, 0.6155126094818115, 0.048348039388656616, 0.3919994831085205, 0.11997704207897186], "tokens": [13, 259, 334, 732, 3207, 515, 4247, 450, 2943, 304, 4511, 515, 29889, 13, 259, 334, 732, 3207, 5443, 450, 5443, 310, 278, 2761, 4972, 3983, 304, 4511, 304, 29889, 13, 259, 334, 732, 3207, 304, 4247, 450, 2943, 304, 4511, 304, 29889, 13, 259, 3776, 13, 29871, 2294, 1780, 1653, 23894]}
{"line_number": 770, "line_type": "original", "code": "          return computeFollowNode(fromNode, parent, cfa);", "entropy": 1.7191264629364014, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [10.624711036682129, 3.610562562942505, 9.191288948059082, 0.19955475628376007, 0.423738956451416, 0.0640438050031662, 0.024528706446290016, 0.16059696674346924, 0.007436688058078289, 0.05409152805805206, 1.3233102560043335, 0.03381139412522316, 0.044353995472192764, 0.004950528033077717, 0.01991737075150013], "tokens": [965, 736, 10272, 29943, 2952, 4247, 29898, 3166, 4247, 29892, 3847, 29892, 274, 5444, 416]}
{"line_number": 770, "line_type": "generated", "code": "\n    if (fromNode == toNode) {\n      return;\n    }\n\n    ControlFlowGraph.Node<|mask:1|> fromCFGNode = nodes.get(fromNode);\n    ControlFlowGraph.Node", "entropy": 0.4329182207584381, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [0.18034136295318604, 0.7310721278190613, 1.2798396348953247, 0.13077986240386963, 0.8320980668067932, 0.011049393564462662, 0.6731367707252502, 0.8786364793777466, 0.0014212755486369133, 0.11327280849218369, 0.010249362327158451, 0.02179597318172455, 0.03235200420022011, 0.5781087279319763, 0.002195450011640787, 0.03747193142771721, 0.0076944874599576, 0.0006162413046695292, 0.0312674455344677, 0.75168377161026, 0.056973133236169815, 2.3467025756835938, 0.033298879861831665, 0.20626948773860931, 0.07179693132638931, 1.3013157844543457, 2.1713602542877197, 1.3016587495803833, 0.6493383646011353, 0.015866810455918312, 0.5688250064849854, 0.023620642721652985, 0.6580091714859009, 0.8035313487052917, 2.2060961723327637, 0.018523797392845154, 0.2046889364719391, 0.11233535408973694, 2.555255889892578, 0.21773084998130798, 0.009805371053516865, 0.012293871492147446, 0.012777130119502544, 0.00022492263815365732, 0.07185950875282288, 0.009365198202431202, 0.2337207943201065, 0.32117968797683716, 0.00013815402053296566, 0.0006137394811958075, 0.0025242867413908243, 0.008962639607489109], "tokens": [13, 1678, 565, 313, 3166, 4247, 1275, 304, 4247, 29897, 426, 13, 418, 736, 29936, 13, 1678, 500, 13, 13, 1678, 11264, 17907, 9527, 29889, 4247, 29966, 29989, 13168, 29901, 29896, 29989, 29958, 515, 9207, 29954, 4247, 353, 7573, 29889, 657, 29898, 3166, 4247, 416, 13, 1678, 11264, 17907, 9527, 29889, 4247]}
{"line_number": 752, "line_type": "original", "code": "            return computeFallThrough(parent.getLastChild());", "entropy": 1.6700358390808105, "is_bug_line": false, "sus_score": 0.2970442628930023, "per_token_entropy": [9.275091171264648, 1.1309783458709717, 1.6706286668777466, 0.014622661285102367, 0.06051017343997955, 0.0006887924391776323, 5.495397272170521e-05, 3.576272320060525e-06, 0.0051177688874304295, 10.7557954788208, 0.4024644196033478, 0.010484496131539345, 1.593674659729004, 0.0007350126979872584, 0.12968802452087402], "tokens": [632, 736, 10272, 29943, 497, 29911, 1092, 820, 29898, 3560, 29889, 657, 8897, 5938, 3310]}
{"line_number": 752, "line_type": "generated", "code": "\n        } else {\n          return n.getFirstChild().getNext().getNext();\n        }\n      default:\n        return n;\n    }\n  }\n\n  /**\n   * Computes the destination node of n", "entropy": 0.14141352474689484, "is_bug_line": false, "sus_score": 0.2970442628930023, "per_token_entropy": [0.03288577124476433, 0.4692339301109314, 0.018416834995150566, 0.13748274743556976, 0.031169001013040543, 0.010086163878440857, 0.12095183879137039, 0.3081255853176117, 0.9792772531509399, 0.18821577727794647, 0.0008139872807078063, 0.08910467475652695, 0.0011985269375145435, 0.15120436251163483, 0.0008523407159373164, 0.02389502339065075, 0.17566519975662231, 0.0006314906058833003, 0.011261354200541973, 0.10961300134658813, 0.017232686281204224, 0.017728086560964584, 0.0006690170848742127, 0.002756131812930107, 0.4455432593822479, 0.5308992862701416, 0.0017910643946379423, 0.012193305417895317, 0.06131652370095253, 0.055477261543273926, 0.06022938713431358, 0.0034952994901686907, 0.0014725804794579744, 0.011435321532189846, 0.000758955895435065, 0.0006593675934709609, 0.01718042604625225, 0.0007778956205584109, 0.0013605633284896612, 0.023113710805773735, 0.030251799151301384, 0.2635895907878876, 0.03745194897055626, 0.002084465464577079, 0.0002683041093405336, 0.8718158006668091, 0.18782788515090942, 0.11299410462379456, 0.630213737487793, 0.14571036398410797, 0.40281912684440613, 0.5423007011413574], "tokens": [13, 4706, 500, 1683, 426, 13, 3986, 736, 302, 29889, 657, 6730, 5938, 2141, 657, 9190, 2141, 657, 9190, 890, 13, 4706, 500, 13, 418, 2322, 29901, 13, 4706, 736, 302, 29936, 13, 1678, 500, 13, 29871, 500, 13, 13, 29871, 7762, 13, 259, 334, 11796, 267, 278, 12551, 2943, 310, 302]}
{"line_number": 841, "line_type": "original", "code": "          if (lastJump == cfgNode) {", "entropy": 1.8303601741790771, "is_bug_line": false, "sus_score": 0.26490647141300877, "per_token_entropy": [9.46355152130127, 2.9067468643188477, 0.1457328200340271, 6.27304744720459, 0.9642797708511353, 0.004263715818524361, 1.1748801469802856, 0.8811407089233398, 0.01944737136363983, 0.010682540945708752, 0.10475248098373413, 0.015796056017279625], "tokens": [965, 565, 313, 4230, 29967, 3427, 1275, 274, 16434, 4247, 29897, 426]}
{"line_number": 841, "line_type": "generated", "code": "\n   * Checks if the target is the break target of a labeled break. The label can\n   * be null if it is an unlabeled break.\n   */\n  private static boolean isBreakStructure(Node target,", "entropy": 0.28993651270866394, "is_bug_line": false, "sus_score": 0.26490647141300877, "per_token_entropy": [0.22846555709838867, 0.13281886279582977, 0.12039797753095627, 0.8103935718536377, 0.05474846437573433, 0.07505124807357788, 1.538236379623413, 1.4949572086334229, 0.7121626734733582, 1.4339079856872559, 1.2298527956008911, 0.49250051379203796, 0.1135612279176712, 1.1140828132629395, 1.2563600540161133, 0.0015279296785593033, 0.5094250440597534, 0.42013683915138245, 1.0104788541793823, 0.2602592408657074, 0.7250217795372009, 0.05704294517636299, 0.19013871252536774, 0.0001705739414319396, 0.003125902730971575, 0.006797049660235643, 0.021225212141871452, 0.029473356902599335, 0.007718028035014868, 0.031451597809791565, 0.001447225920855999, 0.00267576496116817, 0.002424874110147357, 0.016800811514258385, 0.008868000470101833, 0.05295828729867935, 0.09000129252672195, 0.0569244846701622, 0.001953242812305689, 0.035938531160354614, 0.2039615511894226, 0.09231138974428177, 0.004362945910543203, 0.2136262208223343, 0.01868152990937233, 0.00014745102089364082, 0.039015937596559525, 0.0002965487365145236, 0.0017976091476157308, 0.061769720166921616, 0.07977432012557983, 0.00947100855410099], "tokens": [13, 259, 334, 5399, 29879, 565, 278, 3646, 338, 278, 2867, 3646, 310, 263, 301, 24025, 2867, 29889, 450, 3858, 508, 13, 259, 334, 367, 1870, 565, 372, 338, 385, 443, 29880, 24025, 2867, 29889, 13, 259, 3776, 13, 29871, 2024, 2294, 7223, 338, 20130, 557, 5015, 12425, 29898, 4247, 3646, 29892]}
{"line_number": 842, "line_type": "original", "code": "            createEdge(cfgNode, Branch.ON_EX, handler.getLastChild());", "entropy": 1.5740947723388672, "is_bug_line": false, "sus_score": 0.26490647141300877, "per_token_entropy": [9.538799285888672, 11.66132640838623, 2.142932891845703, 0.08230962604284286, 0.9595062732696533, 0.039732687175273895, 0.008294538594782352, 0.30426719784736633, 0.007664912845939398, 0.1722690910100937, 0.0015662556979805231, 1.1239182949066162, 0.0056873648427426815, 2.135918617248535, 1.57416570186615, 0.0415429025888443, 0.08299645781517029, 0.0029822182841598988, 0.02191925421357155], "tokens": [632, 1653, 23894, 29898, 16859, 4247, 29892, 25889, 29889, 1164, 29918, 5746, 29892, 7834, 29889, 657, 8897, 5938, 3310]}
{"line_number": 842, "line_type": "generated", "code": "\n   * label is null, it matches any label.\n   */\n  private static boolean matchLabel(Node target, String label) {\n    if (label == null) {\n      return true;\n    }\n    return target !=", "entropy": 0.30406635999679565, "is_bug_line": false, "sus_score": 0.26490647141300877, "per_token_entropy": [0.6043963432312012, 0.13681623339653015, 0.3562842905521393, 0.8601032495498657, 0.18138645589351654, 0.1777428388595581, 0.18516437709331512, 0.9995154142379761, 2.670081377029419, 1.408480167388916, 0.6317824125289917, 0.189919576048851, 0.12837567925453186, 0.13770069181919098, 0.06362050026655197, 0.0008036244544200599, 0.01644720509648323, 0.08901754021644592, 0.016651341691613197, 0.00390909006819129, 0.005047080107033253, 0.00033778208307921886, 0.003570611821487546, 0.04047994688153267, 0.5042051076889038, 0.007992547936737537, 0.026749826967716217, 0.00963832251727581, 0.006075841374695301, 0.0007674132939428091, 0.0014405598631128669, 0.14733026921749115, 0.841258704662323, 0.04245986416935921, 0.3139920234680176, 0.23559489846229553, 0.0008912881603464484, 0.07267815619707108, 0.004855389706790447, 0.039366696029901505, 0.07062627375125885, 0.03125693276524544, 0.11658450216054916, 0.0002485204895492643, 0.02983662113547325, 0.022575052455067635, 0.0006924853660166264, 0.1275702267885208, 0.16983014345169067, 1.6418461799621582, 1.038657307624817, 1.3987956047058105], "tokens": [13, 259, 334, 3858, 338, 1870, 29892, 372, 7087, 738, 3858, 29889, 13, 259, 3776, 13, 29871, 2024, 2294, 7223, 1993, 4775, 29898, 4247, 3646, 29892, 1714, 3858, 29897, 426, 13, 1678, 565, 313, 1643, 1275, 1870, 29897, 426, 13, 418, 736, 1565, 29936, 13, 1678, 500, 13, 1678, 736, 3646, 2804]}
{"line_number": 854, "line_type": "original", "code": "        lastJump = handler;", "entropy": 4.669281959533691, "is_bug_line": false, "sus_score": 0.26490647141300877, "per_token_entropy": [9.93124008178711, 10.002163887023926, 3.0324978828430176, 0.002356849145144224, 0.08198777586221695, 8.854305267333984, 0.7804195880889893], "tokens": [308, 1833, 29967, 3427, 353, 7834, 29936]}
{"line_number": 854, "line_type": "generated", "code": "\n    return false;\n  }\n\n  /**\n   * Checks if the node is a break or continue structure.\n   */\n  private static boolean isBreakStructure(Node n, boolean isContinue) {\n   ", "entropy": 0.30827435851097107, "is_bug_line": false, "sus_score": 0.26490647141300877, "per_token_entropy": [0.08653321117162704, 0.13374577462673187, 0.11813879758119583, 0.061924923211336136, 0.000639710808172822, 0.011645432561635971, 0.1508028656244278, 0.001426989445462823, 0.003684638300910592, 0.10095268487930298, 0.042160820215940475, 0.17847687005996704, 0.02910880371928215, 0.0022959557827562094, 0.00013553177996072918, 0.8475354909896851, 0.4259434640407562, 0.10472993552684784, 1.222407579421997, 2.2598419189453125, 0.3824855387210846, 1.0356462001800537, 1.5406814813613892, 1.5514615774154663, 0.08158441632986069, 0.7642054557800293, 0.4607056677341461, 0.2951483428478241, 0.0020146328024566174, 0.1310284584760666, 0.00046790618216618896, 0.008941372856497765, 0.16587266325950623, 0.03534230217337608, 0.00612892210483551, 0.010267296805977821, 0.10686575621366501, 0.000495549407787621, 0.5847036838531494, 0.0004942387458868325, 0.00242380378767848, 0.0368831641972065, 0.8977272510528564, 0.12827154994010925, 0.018636951223015785, 0.6481035947799683, 1.2494622468948364, 0.030548300594091415, 0.013141919858753681, 0.0006493605324067175, 0.0003573255962692201, 0.05738665536046028], "tokens": [13, 1678, 736, 2089, 29936, 13, 29871, 500, 13, 13, 29871, 7762, 13, 259, 334, 5399, 29879, 565, 278, 2943, 338, 263, 2867, 470, 6773, 3829, 29889, 13, 259, 3776, 13, 29871, 2024, 2294, 7223, 338, 20130, 557, 5015, 12425, 29898, 4247, 302, 29892, 7223, 338, 1323, 14150, 29897, 426, 13, 1678]}
{"line_number": 855, "line_type": "original", "code": "      }", "entropy": 5.153881549835205, "is_bug_line": false, "sus_score": 0.26490647141300877, "per_token_entropy": [8.545500755310059, 1.7622625827789307], "tokens": [539, 500]}
{"line_number": 855, "line_type": "generated", "code": "\n  }\n\n  /**\n   * Checks if target is the break target of a labeled break.\n   */\n  private static boolean isBreakStructure(Node target, boolean labeled) {\n    switch (target.", "entropy": 0.2993065118789673, "is_bug_line": false, "sus_score": 0.26490647141300877, "per_token_entropy": [0.05337776616215706, 0.332278847694397, 0.09407388418912888, 0.013584902510046959, 0.14043258130550385, 0.04770972579717636, 0.17657002806663513, 0.030153371393680573, 0.0030303532257676125, 0.0004493180604185909, 0.8666906356811523, 0.4091200530529022, 0.10183432698249817, 0.894416332244873, 0.139947772026062, 1.9387285709381104, 1.2542099952697754, 0.466971218585968, 0.10738004744052887, 0.9256746768951416, 1.5799486637115479, 0.0017103818245232105, 1.0037734508514404, 0.7670007944107056, 0.5901451706886292, 0.0028198501095175743, 0.13685251772403717, 0.00035041390219703317, 0.008507202379405499, 0.23801559209823608, 0.0706503838300705, 0.0045343199744820595, 0.005227942951023579, 0.01200616080313921, 0.0003046525234822184, 0.06566368788480759, 0.00033408781746402383, 0.0013786583440378308, 0.0606338232755661, 0.05227335914969444, 0.13327783346176147, 0.06852676719427109, 1.099938154220581, 0.0026754082646220922, 0.036600373685359955, 0.0009024838218465447, 0.0002949994814116508, 0.03091001883149147, 1.5532358884811401, 0.03378177434206009, 0.00482537504285574, 0.0002040654799202457], "tokens": [13, 29871, 500, 13, 13, 29871, 7762, 13, 259, 334, 5399, 29879, 565, 3646, 338, 278, 2867, 3646, 310, 263, 301, 24025, 2867, 29889, 13, 259, 3776, 13, 29871, 2024, 2294, 7223, 338, 20130, 557, 5015, 12425, 29898, 4247, 3646, 29892, 7223, 301, 24025, 29897, 426, 13, 1678, 4607, 313, 5182, 29889]}
{"line_number": 230, "line_type": "original", "code": "        exceptionHandler.push(n);", "entropy": 1.9711633920669556, "is_bug_line": false, "sus_score": 0.25, "per_token_entropy": [3.419382333755493, 11.149978637695312, 0.04814958944916725, 0.05296292155981064, 0.37612488865852356, 0.03229198977351189, 0.6587894558906555, 0.031626246869564056], "tokens": [308, 3682, 4598, 29889, 5910, 29898, 29876, 416]}
{"line_number": 230, "line_type": "generated", "code": "\n           * we add the implicit finally node.\n           */\n          if (n == parent.getFirstChild().getNext()) {\n            DiGraphNode<Node, Branch> finallyNode =\n                cfg.createImplicitFinally", "entropy": 0.4420877695083618, "is_bug_line": false, "sus_score": 0.25, "per_token_entropy": [0.40614819526672363, 0.45873409509658813, 0.09803302586078644, 0.5611083507537842, 3.0781917572021484, 1.1924057006835938, 2.5332717895507812, 2.575772762298584, 0.8629235029220581, 1.2516345977783203, 0.820338249206543, 0.2592537999153137, 0.2708868384361267, 0.002477792324498296, 0.17325277626514435, 0.48016560077667236, 0.07141252607107162, 0.23174908757209778, 0.11595030128955841, 0.01861436851322651, 0.000895933189895004, 0.0003766304289456457, 0.9513709545135498, 0.0009941878961399198, 0.20011624693870544, 0.0009544108179397881, 0.005303243175148964, 0.39106547832489014, 0.00187923654448241, 0.0009866851614788175, 0.08541592210531235, 1.221930980682373, 0.0003177614707965404, 0.03026660345494747, 0.0021414461079984903, 0.0031519278418272734, 0.00018749863374978304, 0.014509288594126701, 0.0002907091984525323, 1.234447956085205, 0.19109760224819183, 0.022746248170733452, 0.5481958389282227, 0.055246610194444656, 0.544170618057251, 0.0021015957463532686, 0.0050125643610954285, 0.26842230558395386, 0.95667564868927, 0.00018380382971372455, 0.7850334644317627, 0.0007474012672901154], "tokens": [13, 965, 334, 591, 788, 278, 12235, 7146, 2943, 29889, 13, 965, 3776, 13, 3986, 565, 313, 29876, 1275, 3847, 29889, 657, 6730, 5938, 2141, 657, 9190, 3101, 426, 13, 9651, 4671, 9527, 4247, 29966, 4247, 29892, 25889, 29958, 7146, 4247, 353, 13, 18884, 274, 16434, 29889, 3258, 24192, 4019, 12881, 635]}
{"line_number": 231, "line_type": "original", "code": "        return true;", "entropy": 3.1827313899993896, "is_bug_line": false, "sus_score": 0.25, "per_token_entropy": [4.755664825439453, 5.284787654876709, 2.6803722381591797, 0.010100324638187885], "tokens": [308, 736, 1565, 29936]}
{"line_number": 231, "line_type": "generated", "code": "\n           * In either case, we don't want to traverse the TRY's second child.\n           *\n           * Note that the TRY node is a special case. The TRY node's first\n           * child is the", "entropy": 0.7798743844032288, "is_bug_line": false, "sus_score": 0.25, "per_token_entropy": [0.22395223379135132, 0.3130284249782562, 0.5919861793518066, 2.840778350830078, 1.9563068151474, 0.3008135259151459, 0.12579971551895142, 0.38360702991485596, 1.8202117681503296, 0.004288286902010441, 0.00017307691450696439, 0.5025802254676819, 0.039612844586372375, 0.9364434480667114, 0.6418401002883911, 0.9736507534980774, 0.00012134769349358976, 1.5720232725143433, 0.0014919828390702605, 1.2623482942581177, 0.05181708186864853, 0.7270779609680176, 0.043318912386894226, 0.16476602852344513, 1.2798360586166382, 1.685869812965393, 0.058096323162317276, 0.030200330540537834, 2.649402618408203, 0.4329597055912018, 1.651085376739502, 0.8135248422622681, 0.00019441144831944257, 0.8346610069274902, 1.4383563995361328, 2.287198781967163, 1.2502844333648682, 0.2935333549976349, 1.6775522232055664, 2.0319948196411133, 1.3858239650726318, 0.0001282609737245366, 0.7006247043609619, 2.0647871494293213, 0.0010869554243981838, 1.243847131729126, 0.31715285778045654, 0.019235970452427864, 0.00014161060971673578, 0.05262979120016098, 0.2755511403083801, 0.5996696949005127], "tokens": [13, 965, 334, 512, 2845, 1206, 29892, 591, 1016, 29915, 29873, 864, 304, 29370, 278, 10014, 29979, 29915, 29879, 1473, 2278, 29889, 13, 965, 334, 13, 965, 334, 3940, 393, 278, 10014, 29979, 2943, 338, 263, 4266, 1206, 29889, 450, 10014, 29979, 2943, 29915, 29879, 937, 13, 965, 334, 2278, 338, 278]}
{"line_number": 285, "line_type": "original", "code": "          if (n == parent.getFirstChild().getNext()) {", "entropy": 1.335219383239746, "is_bug_line": false, "sus_score": 0.25, "per_token_entropy": [9.294427871704102, 3.399557113647461, 0.20752596855163574, 2.0558900833129883, 1.7787810564041138, 0.7488448023796082, 0.034951101988554, 0.0012357940431684256, 0.5560207366943359, 0.0006012300727888942, 1.4993162155151367, 0.003246515290811658, 0.03670540824532509, 0.39685091376304626, 0.01433562021702528], "tokens": [965, 565, 313, 29876, 1275, 3847, 29889, 657, 6730, 5938, 2141, 657, 9190, 3101, 426]}
{"line_number": 285, "line_type": "generated", "code": "\n        handleCatch(n);\n        return;\n      case Token.FINALLY:\n<|mask:1|><|mask:0|>\n        handleFinally(n);\n        return;\n      case Token", "entropy": 0.0738111361861229, "is_bug_line": false, "sus_score": 0.25, "per_token_entropy": [0.052377890795469284, 0.26856374740600586, 0.5096625089645386, 0.0218973271548748, 0.0006529344827868044, 0.027196452021598816, 0.0713200643658638, 0.1547331064939499, 0.0013187768636271358, 0.12015096098184586, 0.041226424276828766, 0.0008469808381050825, 0.0005144941387698054, 0.03989169001579285, 0.020310403779149055, 0.0003582789213396609, 7.962863310240209e-05, 0.7647097706794739, 0.024475431069731712, 0.0036361785605549812, 2.706014311115723e-05, 0.00035232058144174516, 0.0034652443137019873, 0.604135274887085, 0.0004226268210913986, 0.002008446492254734, 0.00039402826223522425, 0.24397176504135132, 0.002761362586170435, 0.3784785866737366, 0.0003579214389901608, 0.0030534095130860806, 0.0006124289939180017, 0.03886802867054939, 0.0011077941162511706, 0.026830371469259262, 0.0030896568205207586, 0.033731985837221146, 0.08032528311014175, 0.009495570324361324, 0.0003967689990531653, 0.003695802530273795, 0.008629649877548218, 0.01966959983110428, 0.0006987990345805883, 0.01493158284574747, 0.009324808605015278, 0.000770510348957032, 0.00045658653834834695, 0.12294390797615051, 0.09859821945428848, 0.0006501944735646248], "tokens": [13, 4706, 4386, 29907, 905, 29898, 29876, 416, 13, 4706, 736, 29936, 13, 418, 1206, 25159, 29889, 29943, 1177, 9818, 29979, 29901, 13, 29966, 29989, 13168, 29901, 29896, 29989, 5299, 29989, 13168, 29901, 29900, 29989, 29958, 13, 4706, 4386, 12881, 635, 29898, 29876, 416, 13, 4706, 736, 29936, 13, 418, 1206, 25159]}
{"line_number": 286, "line_type": "original", "code": "            Preconditions.checkState(exceptionHandler.peek() == parent);", "entropy": 1.6623247861862183, "is_bug_line": false, "sus_score": 0.25, "per_token_entropy": [10.157774925231934, 10.352832794189453, 0.21923702955245972, 0.0003313469351269305, 0.010257150046527386, 0.0038923469837754965, 0.2580920159816742, 0.16448290646076202, 1.1976438760757446, 0.006830201484262943, 0.05666735768318176, 0.45111405849456787, 0.000896052282769233, 0.5900984406471252, 0.6171923279762268, 3.918548583984375, 0.2536282241344452], "tokens": [632, 4721, 1116, 2187, 29889, 3198, 2792, 29898, 11739, 4598, 29889, 412, 1416, 580, 1275, 3847, 416]}
{"line_number": 286, "line_type": "generated", "code": "\n        return;\n      case Token.FINALLY:\n        handleFinally(n);\n        return;\n      case Token.RETURN:\n        handleReturn(n);\n        return;\n      case Token.CONT", "entropy": 0.12838292121887207, "is_bug_line": false, "sus_score": 0.25, "per_token_entropy": [0.08886975795030594, 0.41781067848205566, 0.34629184007644653, 0.0019839382730424404, 0.002360773738473654, 0.06768621504306793, 0.02589268423616886, 0.00047791501856409013, 8.368142152903602e-05, 1.2512547969818115, 0.12009059637784958, 0.0034202192910015583, 5.328513361746445e-05, 0.0003939091111533344, 0.0027195157017558813, 0.11042620241641998, 0.1855359673500061, 0.008491363376379013, 0.00031144535751082003, 0.0064112222753465176, 0.013066619634628296, 0.01838909648358822, 0.0006273209000937641, 0.5321975350379944, 0.021577484905719757, 0.0005243833875283599, 0.0005958688561804593, 0.12596264481544495, 0.04766301438212395, 0.0005893162451684475, 0.00010918975021922961, 1.5817183256149292, 0.001790707348845899, 8.4638240878121e-06, 0.00015925093612167984, 0.0017251383978873491, 0.08567900210618973, 0.06523369252681732, 0.013889560475945473, 0.00962273683398962, 0.011977066285908222, 0.01764083281159401, 0.0005438040825538337, 0.056339964270591736, 0.024123596027493477, 0.0004499138449318707, 0.00048565989709459245, 0.11442098766565323, 0.04038481041789055, 0.0006976078147999942, 0.0008303055074065924, 1.2463223934173584], "tokens": [13, 4706, 736, 29936, 13, 418, 1206, 25159, 29889, 29943, 1177, 9818, 29979, 29901, 13, 4706, 4386, 12881, 635, 29898, 29876, 416, 13, 4706, 736, 29936, 13, 418, 1206, 25159, 29889, 1525, 29911, 24015, 29901, 13, 4706, 4386, 11609, 29898, 29876, 416, 13, 4706, 736, 29936, 13, 418, 1206, 25159, 29889, 22412]}
{"line_number": 287, "line_type": "original", "code": "            exceptionHandler.pop();", "entropy": 3.7705721855163574, "is_bug_line": false, "sus_score": 0.25, "per_token_entropy": [10.694788932800293, 11.166906356811523, 0.029570233076810837, 0.02310171164572239, 0.6908571124076843, 0.018207790330052376], "tokens": [632, 3682, 4598, 29889, 7323, 890]}
{"line_number": 287, "line_type": "generated", "code": "\n    }\n  }\n\n  @Override\n  public void visit(NodeTraversal t, Node n, Node parent) {\n    switch (n.getType()) {\n      case Token.IF:\n        handleIf(", "entropy": 0.12847504019737244, "is_bug_line": false, "sus_score": 0.25, "per_token_entropy": [0.045970309525728226, 1.1629395484924316, 0.008095311000943184, 0.003244138788431883, 0.21270036697387695, 0.0027375861536711454, 0.0066412207670509815, 0.1024361178278923, 0.06789641827344894, 1.320586919784546, 0.0267125703394413, 0.005375099368393421, 0.0009486941853538156, 0.04548119008541107, 0.11436101794242859, 0.26612919569015503, 0.19686995446681976, 0.010864628478884697, 0.08823170512914658, 3.0040289857424796e-05, 2.13382354559144e-05, 0.03539074584841728, 0.0013056810712441802, 0.012867751531302929, 0.003573462599888444, 0.004782546777278185, 0.015316602773964405, 0.02238715998828411, 0.1651233583688736, 0.07456596940755844, 0.02002791129052639, 0.12965042889118195, 0.5368589162826538, 0.007407697848975658, 0.012035606428980827, 0.00013374387344811112, 0.00013410145766101778, 0.012569610960781574, 0.0006156456656754017, 0.0014629386132583022, 0.0011719746980816126, 0.09182843565940857, 0.04139823094010353, 0.0007620529504492879, 0.00023624490131624043, 1.416825294494629, 0.000571326119825244, 0.006834700703620911, 0.15713097155094147, 0.12857496738433838, 0.0396585613489151, 0.05122605711221695], "tokens": [13, 1678, 500, 13, 29871, 500, 13, 13, 29871, 732, 4640, 13, 29871, 970, 1780, 6493, 29898, 4247, 5323, 874, 284, 260, 29892, 9071, 302, 29892, 9071, 3847, 29897, 426, 13, 1678, 4607, 313, 29876, 29889, 657, 1542, 3101, 426, 13, 418, 1206, 25159, 29889, 6545, 29901, 13, 4706, 4386, 3644, 29898]}
{"line_number": 332, "line_type": "original", "code": "        handleTry(n);", "entropy": 4.808606147766113, "is_bug_line": false, "sus_score": 0.25, "per_token_entropy": [10.5408296585083, 6.805611610412598, 4.111427307128906, 1.0542817115783691, 6.101053714752197, 0.23843184113502502], "tokens": [308, 4386, 15870, 29898, 29876, 416]}
{"line_number": 332, "line_type": "generated", "code": "\n  }\n\n  private void handleDo(Node node) {\n    // Control goes to the first statement if the condition evaluates to true.\n    createEdge(node, Branch.ON_TRUE,\n        computeFallThr", "entropy": 0.054079774767160416, "is_bug_line": false, "sus_score": 0.25, "per_token_entropy": [0.0407298281788826, 0.11445213854312897, 0.0018047487828880548, 0.003353568958118558, 0.034874893724918365, 0.02567206881940365, 0.03700609132647514, 0.017970601096749306, 0.009197130799293518, 0.05751451477408409, 0.0063925073482096195, 0.0009665584657341242, 0.028231313452124596, 0.0005940818227827549, 0.0014172281371429563, 0.00039319414645433426, 0.034337468445301056, 0.6690340042114258, 0.1791924238204956, 0.15156717598438263, 0.05403483286499977, 0.023199906572699547, 0.4771190583705902, 0.006681482773274183, 0.1565810889005661, 0.019826801493763924, 0.018496764823794365, 0.04320200905203819, 0.00010907054820563644, 0.006945395842194557, 0.04239051043987274, 0.021949226036667824, 0.0007227431051433086, 0.024840397760272026, 0.09393282234668732, 0.007214920595288277, 0.0007471630233339965, 0.011915224604308605, 0.0048712859861552715, 0.006450427696108818, 5.638440416078083e-05, 0.0038713286630809307, 0.0007244108128361404, 0.05157992243766785, 0.00012563870404846966, 0.21985043585300446, 0.019339922815561295, 0.05773519352078438, 0.007371606770902872, 0.015478011220693588, 8.093983342405409e-05, 1.6689286894688848e-06], "tokens": [13, 29871, 500, 13, 13, 29871, 2024, 1780, 4386, 6132, 29898, 4247, 2943, 29897, 426, 13, 1678, 849, 11264, 5771, 304, 278, 937, 3229, 565, 278, 4195, 6161, 1078, 304, 1565, 29889, 13, 1678, 1653, 23894, 29898, 3177, 29892, 25889, 29889, 1164, 29918, 20652, 29892, 13, 4706, 10272, 29943, 497, 29911, 1092]}
{"line_number": 333, "line_type": "original", "code": "        return;", "entropy": 6.072448253631592, "is_bug_line": false, "sus_score": 0.25, "per_token_entropy": [12.61095142364502, 5.445287704467773, 0.16110555827617645], "tokens": [308, 736, 29936]}
{"line_number": 333, "line_type": "generated", "code": "\n  private void handleDo(Node node) {\n    // Control goes to the first statement if the condition evaluates to true.\n    createEdge(node, Branch.ON_TRUE,\n        computeFallThrough(node.", "entropy": 0.0557575523853302, "is_bug_line": false, "sus_score": 0.25, "per_token_entropy": [0.017222139984369278, 0.1595507264137268, 0.05030417814850807, 0.01140974648296833, 0.010777008719742298, 0.1479795277118683, 0.013649110682308674, 0.0010746901389211416, 0.028419850394129753, 0.0008643704932183027, 0.003621212672442198, 0.0011138670379295945, 0.016802452504634857, 0.6197640299797058, 0.17401005327701569, 0.15038540959358215, 0.04960699379444122, 0.022581811994314194, 0.5220104455947876, 0.007137869950383902, 0.14642174541950226, 0.018043894320726395, 0.018139775842428207, 0.04314001649618149, 8.83301836438477e-05, 0.008608848787844181, 0.05386021360754967, 0.02254754677414894, 0.0008991489303298295, 0.011465609073638916, 0.11076314747333527, 0.008650803938508034, 0.0008723505889065564, 0.012260193936526775, 0.006851512938737869, 0.007513123564422131, 5.972207145532593e-05, 0.003908852580934763, 0.0016764646861702204, 0.054062049835920334, 0.00015817821258679032, 0.22953899204730988, 0.02259276807308197, 0.05551740899682045, 0.007557491771876812, 0.02457244321703911, 9.464769391342998e-05, 4.0531076592742465e-06, 9.894321920000948e-06, 0.0012281740782782435, 0.012762299738824368, 0.007237170357257128], "tokens": [13, 29871, 2024, 1780, 4386, 6132, 29898, 4247, 2943, 29897, 426, 13, 1678, 849, 11264, 5771, 304, 278, 937, 3229, 565, 278, 4195, 6161, 1078, 304, 1565, 29889, 13, 1678, 1653, 23894, 29898, 3177, 29892, 25889, 29889, 1164, 29918, 20652, 29892, 13, 4706, 10272, 29943, 497, 29911, 1092, 820, 29898, 3177, 29889]}
