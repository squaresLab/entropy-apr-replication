{"line_number": 316, "line_type": "original", "code": "        return false;", "entropy": 4.713368892669678, "is_bug_line": false, "sus_score": 0.75, "per_token_entropy": [5.830730438232422, 6.000243186950684, 6.933603286743164, 0.08890040963888168], "tokens": [308, 736, 2089, 29936]}
{"line_number": 316, "line_type": "generated", "code": "\n            n, variable);\n      case Token.COMMA:\n        return checkCommaReadBeforeKill(n, variable);\n      case Token.CALL:\n        return checkCallReadBeforeKill(n, variable);\n", "entropy": 0.28052398562431335, "is_bug_line": false, "sus_score": 0.75, "per_token_entropy": [1.2868406772613525, 1.3074032068252563, 0.41087257862091064, 0.9074630737304688, 0.21055568754673004, 0.3144693374633789, 0.008804665878415108, 0.7201982736587524, 0.9198336601257324, 0.0013111574808135629, 0.0005785936955362558, 1.1888402700424194, 4.470248313737102e-05, 0.0010644490830600262, 0.05504783242940903, 0.17412003874778748, 1.0980489253997803, 0.8293560147285461, 0.2135680764913559, 0.004724055528640747, 0.22879865765571594, 0.013099917210638523, 0.004700681660324335, 0.000597179401665926, 0.004382767248898745, 1.1188385486602783, 0.03638026863336563, 0.009652608074247837, 0.012302231974899769, 0.0016235039802268147, 0.24493110179901123, 0.4290687143802643, 0.0008647278300486505, 0.0001110968878492713, 1.5538411140441895, 0.015904707834124565, 0.0048251380212605, 0.05341065302491188, 0.41831254959106445, 0.31792688369750977, 0.11445894092321396, 0.15425169467926025, 0.06328049302101135, 0.0035311745014041662, 0.0019043420907109976, 0.0006096888100728393, 0.0022211424075067043, 0.10198009759187698, 0.008998436853289604, 0.0032191856298595667, 0.009148110635578632, 0.0009254701435565948], "tokens": [13, 9651, 302, 29892, 2286, 416, 13, 418, 1206, 25159, 29889, 19795, 1529, 29901, 13, 4706, 736, 1423, 1523, 655, 6359, 18743, 29968, 453, 29898, 29876, 29892, 2286, 416, 13, 418, 1206, 25159, 29889, 29907, 9818, 29901, 13, 4706, 736, 1423, 5594, 6359, 18743, 29968, 453, 29898, 29876, 29892, 2286, 416, 13]}
{"line_number": 352, "line_type": "original", "code": "        return VariableLiveness.KILL;", "entropy": 1.619806170463562, "is_bug_line": false, "sus_score": 0.75, "per_token_entropy": [9.946233749389648, 2.244248867034912, 0.98524010181427, 0.0030790797900408506, 0.004665560554713011, 0.0025724435690790415, 1.386573314666748, 0.0016051754355430603, 0.004036969505250454], "tokens": [308, 736, 28736, 29931, 20193, 29889, 29968, 24071, 29936]}
{"line_number": 352, "line_type": "generated", "code": "\n  // -------------------------------------------------------------------------\n  // Variable renaming\n\n  /**\n   * Renames all references to the variable name in the current expression\n   * tree.\n   *\n   * @param n The root of the", "entropy": 0.732822060585022, "is_bug_line": false, "sus_score": 0.75, "per_token_entropy": [0.07876095175743103, 0.43825191259384155, 1.7634594440460205, 2.550313711166382, 0.15217377245426178, 0.05153270810842514, 0.010234259068965912, 0.05110599845647812, 0.17932316660881042, 0.18845583498477936, 0.30790701508522034, 0.049271948635578156, 3.7009034156799316, 3.0020875930786133, 0.029829679057002068, 0.7161237597465515, 1.0772587060928345, 0.043023090809583664, 0.5155094265937805, 0.06180838495492935, 0.008301514200866222, 0.00023541064001619816, 1.7388029098510742, 0.06397727876901627, 1.1537678241729736, 1.3306933641433716, 0.2673218548297882, 1.0001391172409058, 0.9801838397979736, 3.048466205596924, 1.8532435894012451, 0.3816063106060028, 1.5662091970443726, 1.8284337520599365, 0.7019169926643372, 0.0007650309125892818, 0.00573963625356555, 0.3043367564678192, 0.8436012268066406, 0.5726664662361145, 0.0057682013139128685, 1.1167151927947998, 0.6064958572387695, 0.0024436633102595806, 0.01804576814174652, 0.31767237186431885, 0.16586388647556305, 0.7736340761184692, 0.45736414194107056, 1.690934658050537, 0.29581066966056824, 0.03825518861413002], "tokens": [13, 29871, 849, 448, 2683, 2683, 2683, 2683, 1378, 13, 29871, 849, 28736, 4325, 11500, 13, 13, 29871, 7762, 13, 259, 334, 7493, 1280, 599, 9282, 304, 278, 2286, 1024, 297, 278, 1857, 4603, 13, 259, 334, 5447, 29889, 13, 259, 334, 13, 259, 334, 732, 3207, 302, 450, 3876, 310, 278]}
{"line_number": 315, "line_type": "original", "code": "      } else if (state == VariableLiveness.KILL) {", "entropy": 1.6170507669448853, "is_bug_line": false, "sus_score": 0.6123724356957946, "per_token_entropy": [6.503758430480957, 6.399312496185303, 3.001140594482422, 0.6385009288787842, 0.060196612030267715, 6.063304424285889, 0.1548222452402115, 0.07801783829927444, 0.0006650857976637781, 0.0008279233006760478, 0.001073499326594174, 1.2237917184829712, 0.0009351171320304275, 0.11842295527458191, 0.01098890881985426], "tokens": [539, 500, 1683, 565, 313, 3859, 1275, 28736, 29931, 20193, 29889, 29968, 24071, 29897, 426]}
{"line_number": 315, "line_type": "generated", "code": "\n        // If the condition is not true, the second branch is not evaluated.\n        // If the condition is true, the second branch is evaluated.\n        // If the second branch is not evaluated, then the first branch is\n        // evaluated", "entropy": 0.7333779335021973, "is_bug_line": false, "sus_score": 0.6123724356957946, "per_token_entropy": [0.1208387017250061, 0.44821637868881226, 0.6782640814781189, 1.6319786310195923, 1.0118814706802368, 1.5860427618026733, 0.2995759844779968, 2.177344560623169, 1.2801690101623535, 0.5355831384658813, 0.6648060083389282, 0.8310222625732422, 0.262992799282074, 0.6586871147155762, 0.5978219509124756, 1.5101338624954224, 0.4452354311943054, 0.0042455545626580715, 0.1951606124639511, 1.2508138418197632, 2.185763120651245, 0.3130924701690674, 0.21515052020549774, 0.02369620092213154, 0.2515503466129303, 0.16501186788082123, 0.359661728143692, 0.6503763794898987, 0.019256900995969772, 0.4389841854572296, 0.660016655921936, 0.6428334712982178, 0.13268117606639862, 0.16486075520515442, 1.3363569974899292, 2.3977298736572266, 0.4044490158557892, 1.475293755531311, 0.026796134188771248, 0.7393239140510559, 1.4888920783996582, 0.3449343144893646, 0.23410449922084808, 2.295180320739746, 0.8237642645835876, 1.0907559394836426, 0.33322983980178833, 0.9270607233047485, 0.5032107830047607, 0.002105759223923087, 0.0010434903670102358, 1.2976691722869873], "tokens": [13, 4706, 849, 960, 278, 4195, 338, 451, 1565, 29892, 278, 1473, 5443, 338, 451, 19030, 29889, 13, 4706, 849, 960, 278, 4195, 338, 1565, 29892, 278, 1473, 5443, 338, 19030, 29889, 13, 4706, 849, 960, 278, 1473, 5443, 338, 451, 19030, 29892, 769, 278, 937, 5443, 338, 13, 4706, 849, 19030]}
{"line_number": 230, "line_type": "original", "code": "        return;", "entropy": 5.082149982452393, "is_bug_line": false, "sus_score": 0.5163977794943222, "per_token_entropy": [7.953465938568115, 3.0875351428985596, 4.205448150634766], "tokens": [308, 736, 29936]}
{"line_number": 230, "line_type": "generated", "code": "\n   *\n   * @param n The node in the tree.\n   * @param exprRoot The root of the sub-tree.\n   * @param varName The name of the variable.\n   * @return True if the variable", "entropy": 0.3155655562877655, "is_bug_line": false, "sus_score": 0.5163977794943222, "per_token_entropy": [0.34294354915618896, 0.14337974786758423, 0.6069249510765076, 1.1053709983825684, 0.14051981270313263, 0.12262391299009323, 0.6890749335289001, 0.08513054251670837, 0.2896610498428345, 1.0114502906799316, 0.4744795262813568, 1.856953740119934, 0.19736571609973907, 0.47157394886016846, 1.0303725004196167, 0.04978122189640999, 0.04632774367928505, 0.00215429300442338, 0.004037800244987011, 0.00382869690656662, 0.04425603151321411, 0.0050804088823497295, 0.17000454664230347, 0.815453827381134, 0.1306172013282776, 0.1533597707748413, 0.19302856922149658, 0.3881453275680542, 0.013925064355134964, 0.7489969730377197, 0.029374156147241592, 0.024685842916369438, 0.017193080857396126, 0.002386699663475156, 0.041847508400678635, 0.37737682461738586, 0.38493743538856506, 0.13812628388404846, 0.9241908192634583, 0.010968746617436409, 0.02759278379380703, 0.0452825129032135, 0.5365187525749207, 0.005040438380092382, 0.015458408743143082, 0.3268134593963623, 0.03615666553378105, 0.010164875537157059, 0.7499634623527527, 0.07394296675920486, 1.0389653444290161, 0.2555987238883972], "tokens": [13, 259, 334, 13, 259, 334, 732, 3207, 302, 450, 2943, 297, 278, 5447, 29889, 13, 259, 334, 732, 3207, 22010, 10303, 450, 3876, 310, 278, 1014, 29899, 8336, 29889, 13, 259, 334, 732, 3207, 722, 1170, 450, 1024, 310, 278, 2286, 29889, 13, 259, 334, 732, 2457, 5852, 565, 278, 2286]}
{"line_number": 314, "line_type": "original", "code": "        return true;", "entropy": 4.46857213973999, "is_bug_line": false, "sus_score": 0.5163977794943222, "per_token_entropy": [6.9031805992126465, 1.7371095418930054, 8.958227157592773, 0.27576929330825806], "tokens": [308, 736, 1565, 29936]}
{"line_number": 314, "line_type": "generated", "code": "\n      case Token.HOOK:\n        // With a conditional, the second branch is only evaluated if the\n        // first branch is false.\n        VariableLiveness state = isVariableReadBeforeKill(n.getFirstChild(), variable", "entropy": 0.38095930218696594, "is_bug_line": false, "sus_score": 0.5163977794943222, "per_token_entropy": [0.059429120272397995, 0.9401657581329346, 0.14120931923389435, 0.0013508014380931854, 0.0002097863471135497, 0.04045109823346138, 0.00035851728171110153, 0.0010926711838692427, 0.04563632234930992, 0.1288217008113861, 0.38843703269958496, 1.5742125511169434, 0.15810167789459229, 1.1467113494873047, 1.2381114959716797, 0.482921838760376, 1.5199601650238037, 0.46931886672973633, 0.9310994148254395, 1.1380562782287598, 1.2760744094848633, 0.4230100214481354, 0.39956554770469666, 0.32121193408966064, 0.0014185375766828656, 0.00031549722189083695, 0.981052577495575, 0.4347129762172699, 0.8873927593231201, 0.44057556986808777, 0.21537189185619354, 0.2604576349258423, 0.9135193228721619, 0.9389306306838989, 0.00016282663273159415, 0.0002694958820939064, 0.46873730421066284, 0.2944142520427704, 0.16803784668445587, 0.0006933192489668727, 0.0008762810612097383, 0.0003094194398727268, 0.00021908267808612436, 6.472854875028133e-05, 0.0017535799415782094, 0.12180221080780029, 0.0010831448016688228, 0.001524715917184949, 0.05773913115262985, 0.00011312322021694854, 0.007405686192214489, 0.78541100025177], "tokens": [13, 418, 1206, 25159, 29889, 8187, 8949, 29901, 13, 4706, 849, 2973, 263, 15047, 29892, 278, 1473, 5443, 338, 871, 19030, 565, 278, 13, 4706, 849, 937, 5443, 338, 2089, 29889, 13, 4706, 28736, 29931, 20193, 2106, 353, 338, 16174, 6359, 18743, 29968, 453, 29898, 29876, 29889, 657, 6730, 5938, 3285, 2286]}
{"line_number": 342, "line_type": "original", "code": "      if (NodeUtil.isLhs(n, n.getParent())) {", "entropy": 1.7352452278137207, "is_bug_line": false, "sus_score": 0.5163977794943222, "per_token_entropy": [6.372411251068115, 1.4829612970352173, 0.04553860053420067, 6.672328948974609, 0.015040799044072628, 0.0017298986203968525, 0.09876108914613724, 6.910982608795166, 2.3918814659118652, 0.6062026619911194, 0.8798325657844543, 2.1564016342163086, 2.9300270080566406, 0.10149070620536804, 0.01570863276720047, 0.17246092855930328, 0.3434721529483795, 0.03718103468418121], "tokens": [539, 565, 313, 4247, 7270, 29889, 275, 29931, 9499, 29898, 29876, 29892, 302, 29889, 657, 9780, 22130, 426]}
{"line_number": 342, "line_type": "generated", "code": "\n    return VariableLiveness.READ;\n  }\n\n  /**\n   * This function checks if the variable is read before any assignment.\n   *\n   * @return true if the variable is read before any assignment.\n   */", "entropy": 0.6325672268867493, "is_bug_line": false, "sus_score": 0.5163977794943222, "per_token_entropy": [0.15926653146743774, 0.3675639033317566, 2.1903257369995117, 0.8294117450714111, 0.00266304356046021, 0.005448610056191683, 0.00317308004014194, 0.8082332015037537, 0.005679541267454624, 0.031239831820130348, 0.37497398257255554, 0.022719096392393112, 0.021124839782714844, 0.5067464709281921, 0.1321774423122406, 1.2926865816116333, 0.05769164860248566, 0.028391925618052483, 0.000726316764485091, 3.075084924697876, 1.5785713195800781, 2.3368709087371826, 0.8942831158638, 0.9299423694610596, 1.6499706506729126, 0.4848070740699768, 2.0115292072296143, 0.9624197483062744, 1.8297173976898193, 1.4067823886871338, 1.095290184020996, 0.14618034660816193, 0.027646705508232117, 0.31424471735954285, 1.6453754901885986, 0.018602432683110237, 0.030334606766700745, 0.6112107038497925, 1.5839226245880127, 0.6795456409454346, 0.193431556224823, 0.6356669068336487, 0.09030107408761978, 0.0738339051604271, 0.34625911712646484, 0.1603122502565384, 0.23866210877895355, 0.07548853754997253, 0.7064992189407349, 0.0968611016869545, 0.016153179109096527, 0.10744825005531311], "tokens": [13, 1678, 736, 28736, 29931, 20193, 29889, 16310, 29936, 13, 29871, 500, 13, 13, 29871, 7762, 13, 259, 334, 910, 740, 12747, 565, 278, 2286, 338, 1303, 1434, 738, 12827, 29889, 13, 259, 334, 13, 259, 334, 732, 2457, 1565, 565, 278, 2286, 338, 1303, 1434, 738, 12827, 29889, 13, 259, 3776]}
{"line_number": 354, "line_type": "original", "code": "        return VariableLiveness.READ;", "entropy": 1.7810856103897095, "is_bug_line": false, "sus_score": 0.5163977794943222, "per_token_entropy": [10.086982727050781, 2.0289058685302734, 0.8019137382507324, 0.0032296422868967056, 0.005597038194537163, 0.003074088366702199, 1.311204195022583, 0.007777763996273279], "tokens": [308, 736, 28736, 29931, 20193, 29889, 16310, 29936]}
{"line_number": 354, "line_type": "generated", "code": "\n  /**\n   * @param n The node to be checked.\n   * @return Whether the node is a reference to a variable.\n   */\n  private boolean isVariableReference(Node n) {\n    return NodeUtil.is", "entropy": 0.4984860122203827, "is_bug_line": false, "sus_score": 0.5163977794943222, "per_token_entropy": [0.09447495639324188, 0.6259634494781494, 1.1180903911590576, 0.06259151548147202, 0.029949311167001724, 0.0012063853209838271, 2.8722589015960693, 0.7133451104164124, 1.377135157585144, 0.944862425327301, 0.6975146532058716, 0.579115629196167, 2.0191688537597656, 1.569753646850586, 0.3777077794075012, 0.04746260866522789, 0.00462581031024456, 0.07941708713769913, 0.012718398123979568, 0.5420352220535278, 0.9359570145606995, 0.6148067712783813, 0.5610782504081726, 0.7466093897819519, 0.6855819821357727, 2.9928693771362305, 0.3057403564453125, 0.6297409534454346, 0.7657008171081543, 0.8738135695457458, 0.058514554053545, 0.004173735622316599, 0.052964843809604645, 0.0010698077967390418, 0.03675125911831856, 0.2023487240076065, 0.19740554690361023, 0.05154595524072647, 0.6926508545875549, 0.36024752259254456, 0.057703688740730286, 0.010524249635636806, 0.004485426936298609, 0.07568351179361343, 0.0015285247936844826, 0.0027703975792974234, 0.0797881931066513, 0.5635654926300049, 0.5780133008956909, 0.00249182409606874, 0.0023454318288713694, 0.0034023988991975784], "tokens": [13, 29871, 7762, 13, 259, 334, 732, 3207, 302, 450, 2943, 304, 367, 7120, 29889, 13, 259, 334, 732, 2457, 26460, 278, 2943, 338, 263, 3407, 304, 263, 2286, 29889, 13, 259, 3776, 13, 29871, 2024, 7223, 338, 16174, 7422, 29898, 4247, 302, 29897, 426, 13, 1678, 736, 9071, 7270, 29889, 275]}
{"line_number": 343, "line_type": "original", "code": "        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);", "entropy": 1.7146222591400146, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [8.645533561706543, 9.231691360473633, 0.010657301172614098, 0.0005810956354252994, 0.025145016610622406, 0.02464478835463524, 0.21235299110412598, 0.09496660530567169, 6.193403720855713, 0.2142416536808014, 0.14095734059810638, 2.340022087097168, 0.04147108271718025, 0.2505073547363281, 0.02272200956940651, 0.011234949342906475, 0.2286394238471985, 0.5350216627120972, 0.005005091894418001, 9.136556625366211, 0.0015729209408164024, 0.3547593653202057], "tokens": [308, 4721, 1116, 2187, 29889, 3198, 2792, 29898, 29876, 29889, 657, 9780, 2141, 657, 1542, 580, 1275, 25159, 29889, 22933, 17298, 416]}
{"line_number": 343, "line_type": "generated", "code": "\n    if (v1 == VariableLiveness.READ || v2 == VariableLiveness.READ) {\n      return VariableLiveness.READ;\n    } else if (v1 == VariableLiveness.KILL || v2 == Variable", "entropy": 0.10622359067201614, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [0.06734436005353928, 0.20241084694862366, 0.6668205857276917, 0.04738427698612213, 0.026872729882597923, 0.04281216114759445, 0.06709781289100647, 0.0464901439845562, 0.0015453074593096972, 0.0014280608156695962, 0.00109112320933491, 1.102112889289856, 0.3574488162994385, 0.3557095229625702, 0.02625899389386177, 0.003650906728580594, 0.004078286234289408, 0.0016987192211672664, 0.0040006376802921295, 0.0015026956098154187, 0.015442562289536, 0.012664959765970707, 0.009084558114409447, 0.002382894279435277, 0.032969627529382706, 0.015105970203876495, 0.014108089730143547, 0.0014935302315279841, 0.002188194077461958, 0.001508170971646905, 0.001787018496543169, 0.0029951734468340874, 0.002772418549284339, 0.02574084885418415, 0.006756673566997051, 0.35339340567588806, 0.153778538107872, 0.01637074537575245, 0.0069169835187494755, 0.006498395465314388, 0.011226344853639603, 0.004591517616063356, 0.0019452712731435895, 0.0019249258330091834, 0.0013329440262168646, 0.0038756034336984158, 0.0020731640979647636, 1.7025146484375, 0.06872599571943283, 0.005868111737072468, 0.0027972639072686434, 0.005033202935010195], "tokens": [13, 1678, 565, 313, 29894, 29896, 1275, 28736, 29931, 20193, 29889, 16310, 3830, 325, 29906, 1275, 28736, 29931, 20193, 29889, 16310, 29897, 426, 13, 418, 736, 28736, 29931, 20193, 29889, 16310, 29936, 13, 1678, 500, 1683, 565, 313, 29894, 29896, 1275, 28736, 29931, 20193, 29889, 29968, 24071, 3830, 325, 29906, 1275, 28736]}
{"line_number": 347, "line_type": "original", "code": "        Node rhs = n.getNext();", "entropy": 2.5721662044525146, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [8.9840087890625, 6.864468574523926, 3.4527316093444824, 0.15335077047348022, 0.586574137210846, 0.0114290751516819, 0.0062863705679774284, 2.8937156200408936, 0.19693192839622498], "tokens": [308, 9071, 29365, 353, 302, 29889, 657, 9190, 890]}
{"line_number": 347, "line_type": "generated", "code": "\n    } else {\n      return VariableLiveness.MAYBE_LIVE;\n    }\n  }\n\n  /**\n   * Checks whether the variable is used in the function.\n   */\n  private boolean isVariable", "entropy": 0.395061731338501, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [0.10111021995544434, 0.21644151210784912, 0.08373752236366272, 0.8781528472900391, 0.11034208536148071, 0.0174290481954813, 0.03482147678732872, 0.1366228312253952, 0.0164300836622715, 0.0021408514585345984, 0.007137515116482973, 0.0012981806648895144, 0.019528506323695183, 0.0008954567601904273, 0.004080423153936863, 0.002179034985601902, 0.0007052318542264402, 0.0025829069782048464, 0.0025259514804929495, 0.0056446916423738, 0.061756160110235214, 0.006359340623021126, 0.004185488447546959, 0.0665232241153717, 0.004445669706910849, 0.006109846290200949, 0.3085286319255829, 0.11981356889009476, 1.0316354036331177, 0.056963223963975906, 0.020241834223270416, 0.0007213136414065957, 2.702479124069214, 0.5461534857749939, 1.3524256944656372, 0.9630973935127258, 1.7224905490875244, 0.47131654620170593, 1.8908753395080566, 0.9642664790153503, 0.8433611989021301, 2.608764886856079, 1.053074836730957, 0.23983140289783478, 0.023577332496643066, 0.6268017888069153, 0.000350175570929423, 0.039998557418584824, 0.35637083649635315, 0.08956180512905121, 0.2664851248264313, 0.4508369565010071], "tokens": [13, 1678, 500, 1683, 426, 13, 418, 736, 28736, 29931, 20193, 29889, 1529, 29979, 15349, 29918, 5265, 12064, 29936, 13, 1678, 500, 13, 29871, 500, 13, 13, 29871, 7762, 13, 259, 334, 5399, 29879, 3692, 278, 2286, 338, 1304, 297, 278, 740, 29889, 13, 259, 3776, 13, 29871, 2024, 7223, 338, 16174]}
{"line_number": 348, "line_type": "original", "code": "        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);", "entropy": 1.6148039102554321, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [8.869176864624023, 6.851611614227295, 0.007701466791331768, 0.006969072390347719, 1.7537546157836914, 0.11373647302389145, 1.5292222499847412, 0.02589826099574566, 0.042282529175281525, 0.006817888002842665, 0.0053563653491437435, 0.0011458981316536665, 0.01227420661598444, 9.677386283874512, 0.042323894798755646, 0.04314081370830536, 0.06505275517702103, 0.01261928677558899], "tokens": [308, 28736, 29931, 20193, 2106, 353, 338, 16174, 6359, 18743, 29968, 453, 29898, 29878, 9499, 29892, 2286, 416]}
{"line_number": 348, "line_type": "generated", "code": "\n      return VariableLiveness.MAYBE_LIVE;\n    }\n  }\n\n  /**\n   * Checks if the given function is a simple getter.\n   *\n   * @param n The function node to", "entropy": 0.5062192678451538, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [0.07971961796283722, 0.2872435450553894, 0.18327292799949646, 0.06581806391477585, 0.002221261151134968, 0.008029207587242126, 0.0029621317517012358, 0.22190243005752563, 0.0008648469229228795, 0.0037454471457749605, 0.0020102309063076973, 0.0007924277451820672, 0.0024380742106586695, 0.003965491894632578, 0.01031956635415554, 0.08002051711082458, 0.00564777385443449, 0.0031712977215647697, 0.043480999767780304, 0.005161412991583347, 0.0060628075152635574, 0.4005219340324402, 0.12269793450832367, 1.1323648691177368, 0.05365460738539696, 0.018500978127121925, 0.000837571220472455, 2.6989688873291016, 0.5516855716705322, 0.8464683890342712, 0.8694900870323181, 1.7468920946121216, 2.930750846862793, 1.1680092811584473, 1.5162973403930664, 2.985236167907715, 0.8497897386550903, 0.12958131730556488, 1.0751750469207764, 0.320971816778183, 0.005434619728475809, 0.36319753527641296, 0.8097933530807495, 0.002791082253679633, 0.004634828772395849, 0.8214412927627563, 0.32435548305511475, 1.113143801689148, 0.6610771417617798, 0.30754703283309937, 0.5271406769752502, 0.946101188659668], "tokens": [13, 418, 736, 28736, 29931, 20193, 29889, 1529, 29979, 15349, 29918, 5265, 12064, 29936, 13, 1678, 500, 13, 29871, 500, 13, 13, 29871, 7762, 13, 259, 334, 5399, 29879, 565, 278, 2183, 740, 338, 263, 2560, 679, 357, 29889, 13, 259, 334, 13, 259, 334, 732, 3207, 302, 450, 740, 2943, 304]}
{"line_number": 349, "line_type": "original", "code": "        if (state == VariableLiveness.READ) {", "entropy": 1.7022775411605835, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [8.685230255126953, 4.509572505950928, 0.04824773967266083, 6.249204635620117, 0.19864654541015625, 0.11187146604061127, 0.005520930048078299, 0.009447863325476646, 0.0038231154903769493, 0.46649715304374695, 0.12367113679647446, 0.015597260557115078], "tokens": [308, 565, 313, 3859, 1275, 28736, 29931, 20193, 29889, 16310, 29897, 426]}
{"line_number": 349, "line_type": "generated", "code": "\n    }\n  }\n\n  private boolean isVariableRead(Node n, String variable) {\n    return isVariableReadBeforeKill(n, variable) == VariableLiveness.READ;\n  }\n\n  private boolean is", "entropy": 0.25781893730163574, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [0.09904713928699493, 0.4292815923690796, 0.016873136162757874, 0.005053604021668434, 0.10814521461725235, 0.006747438106685877, 0.01140538603067398, 0.3353753089904785, 0.13302750885486603, 1.2780369520187378, 1.1939644813537598, 0.48723533749580383, 1.7057244777679443, 2.0160722732543945, 1.094551682472229, 0.199403777718544, 0.14850527048110962, 0.07132550328969955, 0.043788667768239975, 0.045058611780405045, 0.027354910969734192, 0.0025705411098897457, 0.0032576846424490213, 0.13815316557884216, 1.8546366691589355, 0.16187229752540588, 0.009191579185426235, 0.05102716013789177, 0.11221484839916229, 0.0049999915063381195, 0.0011179156135767698, 0.004038512706756592, 0.017420144751667976, 0.0030641055200248957, 0.0057001663371920586, 0.00617287727072835, 0.13307738304138184, 0.16313587129116058, 0.001812126487493515, 0.0015650654677301645, 0.0015907741617411375, 0.0018774517811834812, 0.011257464066147804, 0.0022820401936769485, 0.03864314779639244, 0.0029585659503936768, 0.004231547005474567, 0.0895691066980362, 0.08499018102884293, 0.61902916431427, 0.3065214455127716, 0.11262808740139008], "tokens": [13, 1678, 500, 13, 29871, 500, 13, 13, 29871, 2024, 7223, 338, 16174, 6359, 29898, 4247, 302, 29892, 1714, 2286, 29897, 426, 13, 1678, 736, 338, 16174, 6359, 18743, 29968, 453, 29898, 29876, 29892, 2286, 29897, 1275, 28736, 29931, 20193, 29889, 16310, 29936, 13, 29871, 500, 13, 13, 29871, 2024, 7223, 338]}
{"line_number": 309, "line_type": "original", "code": "            if (!ControlFlowGraph.isEnteringNewCfgNode(sibling)) {", "entropy": 1.5165568590164185, "is_bug_line": true, "sus_score": 0.48507125007266594, "per_token_entropy": [9.897774696350098, 5.3222503662109375, 3.1356027126312256, 2.444404363632202, 0.00041500062798149884, 0.01111730094999075, 0.0020249830558896065, 0.012687323614954948, 0.012828797101974487, 0.0003369478799868375, 0.004038512706756592, 0.0013040142366662621, 0.0012541294563561678, 0.004319860599935055, 0.0016192194307222962, 8.379654884338379, 0.998123049736023, 0.007560330908745527, 0.07414919883012772, 0.019670885056257248], "tokens": [632, 565, 5384, 4809, 17907, 9527, 29889, 275, 10399, 292, 4373, 29907, 16434, 4247, 29898, 29879, 747, 1847, 876, 426]}
{"line_number": 309, "line_type": "generated", "code": "\n      case Token.ASSIGN:\n        return isVariableReadBeforeKill(n.getFirstChild(), variable);\n      case Token.COMMA:\n        for (Node c = n.getFirstChild(); c != null; c", "entropy": 0.2291872352361679, "is_bug_line": true, "sus_score": 0.48507125007266594, "per_token_entropy": [0.09264666587114334, 0.5114268660545349, 0.5399826765060425, 0.004195341374725103, 0.002780264476314187, 1.4799225330352783, 0.00013279033009894192, 0.021797839552164078, 0.13925126194953918, 0.5392538905143738, 1.381224274635315, 0.5959172248840332, 0.008833142928779125, 0.018463294953107834, 0.0006524579366669059, 0.0013881819322705269, 0.0004183370911050588, 0.007975990884006023, 0.03754311800003052, 0.010273904539644718, 0.0015343570848926902, 0.2238190919160843, 0.000532008707523346, 0.017840275540947914, 0.009586489759385586, 0.009171617217361927, 0.00262214383110404, 1.071580171585083, 0.22855159640312195, 0.00144091690890491, 0.001026103738695383, 1.4172106981277466, 0.0003026265767402947, 0.001450439915060997, 0.07607821375131607, 0.20056016743183136, 2.2338385581970215, 0.1830681711435318, 0.01069551520049572, 0.5512185096740723, 0.06641246378421783, 0.003220373997464776, 0.006266705691814423, 0.00022957073815632612, 0.022513512521982193, 0.00026592056383378804, 0.004112122114747763, 0.025059105828404427, 0.00312067405320704, 0.018233541399240494, 0.004078761208802462, 0.12801483273506165], "tokens": [13, 418, 1206, 25159, 29889, 22933, 17298, 29901, 13, 4706, 736, 338, 16174, 6359, 18743, 29968, 453, 29898, 29876, 29889, 657, 6730, 5938, 3285, 2286, 416, 13, 418, 1206, 25159, 29889, 19795, 1529, 29901, 13, 4706, 363, 313, 4247, 274, 353, 302, 29889, 657, 6730, 5938, 890, 274, 2804, 1870, 29936, 274]}
{"line_number": 310, "line_type": "original", "code": "            state = isVariableReadBeforeKill(sibling, variable);", "entropy": 1.5035200119018555, "is_bug_line": true, "sus_score": 0.48507125007266594, "per_token_entropy": [9.366304397583008, 7.933316230773926, 0.05378023535013199, 0.4682563543319702, 0.007638650014996529, 0.00422620540484786, 0.0007036832394078374, 0.0003215749457012862, 6.687417771900073e-05, 0.008488171733915806, 5.728447437286377, 0.26969051361083984, 0.048158109188079834, 0.03127865493297577, 0.13009013235569, 0.005554005969315767], "tokens": [632, 2106, 353, 338, 16174, 6359, 18743, 29968, 453, 29898, 29879, 747, 1847, 29892, 2286, 416]}
{"line_number": 310, "line_type": "generated", "code": "\n\n      // Loops\n<|mask:2|><|mask:0|>\n\n      // Calls\n<|mask:4|><|mask:0|>\n\n      // Control structure\n<|mask:8", "entropy": 0.37307512760162354, "is_bug_line": true, "sus_score": 0.48507125007266594, "per_token_entropy": [0.06904157251119614, 0.921455979347229, 0.2738817632198334, 0.6026641130447388, 3.1672565937042236, 0.00043752157944254577, 0.13412049412727356, 0.21708543598651886, 0.0019882211927324533, 0.0025933701545000076, 0.001116367639042437, 0.7466173768043518, 0.0047920383512973785, 0.19989800453186035, 0.0006858142442069948, 0.0023091575130820274, 0.0006392342620529234, 0.12725023925304413, 0.002991964342072606, 0.013652403838932514, 0.004191779997199774, 0.08406538516283035, 0.09455358982086182, 0.3501482307910919, 2.6444854736328125, 0.11192560940980911, 0.2724447548389435, 0.15318816900253296, 0.0011654258705675602, 0.001632668194361031, 0.0009176096064038575, 0.578188955783844, 0.0028208012226969004, 0.05577799305319786, 0.0007924277451820672, 0.001279250718653202, 0.0008335214806720614, 0.02873554453253746, 0.0014552014181390405, 0.0062658763490617275, 0.004330899100750685, 0.06476876884698868, 0.08325184136629105, 0.444433331489563, 4.761613845825195, 2.344543218612671, 0.5556436777114868, 0.15458665788173676, 0.000580499938223511, 0.0016484970692545176, 0.0011838816571980715, 0.09797422587871552], "tokens": [13, 13, 418, 849, 4309, 3554, 13, 29966, 29989, 13168, 29901, 29906, 29989, 5299, 29989, 13168, 29901, 29900, 29989, 29958, 13, 13, 418, 849, 315, 4293, 13, 29966, 29989, 13168, 29901, 29946, 29989, 5299, 29989, 13168, 29901, 29900, 29989, 29958, 13, 13, 418, 849, 11264, 3829, 13, 29966, 29989, 13168, 29901, 29947]}
{"line_number": 313, "line_type": "original", "code": "      if (state == VariableLiveness.READ) {", "entropy": 1.0748566389083862, "is_bug_line": true, "sus_score": 0.48507125007266594, "per_token_entropy": [5.854763031005859, 2.2873404026031494, 0.11758486181497574, 3.657616376876831, 0.18301089107990265, 0.05195742845535278, 0.0002531684876885265, 0.0003363520372658968, 0.0005621521850116551, 0.5827357172966003, 0.13751442730426788, 0.02460431307554245], "tokens": [539, 565, 313, 3859, 1275, 28736, 29931, 20193, 29889, 16310, 29897, 426]}
{"line_number": 313, "line_type": "generated", "code": "\n        // only run if the first branch is false.\n        VariableLiveness state = isVariableReadBeforeKill(n.getFirstChild(), variable);\n        if (state == VariableLiveness.READ) {\n          return state;", "entropy": 0.20934909582138062, "is_bug_line": true, "sus_score": 0.48507125007266594, "per_token_entropy": [0.1261034607887268, 0.6342560052871704, 0.5632942318916321, 1.3020565509796143, 0.6201590895652771, 0.28939133882522583, 0.17259174585342407, 0.12634439766407013, 0.656088650226593, 1.0114266872406006, 0.5333679914474487, 0.194765105843544, 0.4365186393260956, 0.28223374485969543, 0.977676510810852, 0.00019643761334009469, 0.0009218971827067435, 0.5258967876434326, 0.29283642768859863, 0.19149447977542877, 0.0012550819665193558, 0.0013304438907653093, 0.0004677870310842991, 0.00024971229140646756, 1.0013530300057027e-05, 0.002179034985601902, 0.15205919742584229, 0.0017534609651193023, 0.001069212332367897, 0.09498199820518494, 8.964136941358447e-05, 0.006147286389023066, 0.5797274708747864, 0.0018202179344370961, 0.0009419057168997824, 0.14688542485237122, 0.18590059876441956, 0.010412062518298626, 0.015298171900212765, 0.15438829362392426, 0.005812646355479956, 0.00013410145766101778, 0.00023100091493688524, 0.00022837892174720764, 0.20188620686531067, 0.23680691421031952, 0.0038847471587359905, 0.0015692312736064196, 0.047006066888570786, 0.05451493337750435, 0.0391136109828949, 0.00037698791129514575], "tokens": [13, 4706, 849, 871, 1065, 565, 278, 937, 5443, 338, 2089, 29889, 13, 4706, 28736, 29931, 20193, 2106, 353, 338, 16174, 6359, 18743, 29968, 453, 29898, 29876, 29889, 657, 6730, 5938, 3285, 2286, 416, 13, 4706, 565, 313, 3859, 1275, 28736, 29931, 20193, 29889, 16310, 29897, 426, 13, 3986, 736, 2106, 29936]}
{"line_number": 341, "line_type": "original", "code": "    if (NodeUtil.isName(n) && variable.equals(n.getString())) {", "entropy": 1.0517808198928833, "is_bug_line": true, "sus_score": 0.48507125007266594, "per_token_entropy": [5.268411636352539, 0.9303905963897705, 0.038517553359270096, 6.402279853820801, 0.012612694874405861, 0.001915764412842691, 0.2389001101255417, 3.599069833755493, 0.5047340393066406, 1.185688853263855, 1.1631953716278076, 0.27511128783226013, 1.8038749694824219, 0.31154507398605347, 0.027755817398428917, 0.013209332711994648, 0.08952409029006958, 0.0052413432858884335, 0.031984228640794754, 0.11704334616661072, 0.06639204919338226], "tokens": [268, 565, 313, 4247, 7270, 29889, 275, 1170, 29898, 29876, 29897, 2607, 2286, 29889, 10954, 29898, 29876, 29889, 13719, 22130, 426]}
{"line_number": 341, "line_type": "generated", "code": "\n    return v1 == VariableLiveness.READ || v2 == VariableLiveness.READ ?\n      VariableLiveness.READ :\n      VariableLiveness.MAYBE_LIVE;\n  }\n\n  private boolean isVariable", "entropy": 0.27222687005996704, "is_bug_line": true, "sus_score": 0.48507125007266594, "per_token_entropy": [0.24058133363723755, 0.5496335029602051, 1.3517651557922363, 0.7635260820388794, 0.04004265367984772, 0.36649298667907715, 0.30299440026283264, 0.0019802500028163195, 0.002971045905724168, 0.0017007424030452967, 0.6144004464149475, 0.6790016889572144, 0.16780301928520203, 0.027126727625727654, 0.004979708231985569, 0.0065168715082108974, 0.0024418795946985483, 0.0027929842472076416, 0.002520838286727667, 0.008385094814002514, 1.0358994007110596, 0.05080737546086311, 0.6279967427253723, 0.026487722992897034, 0.0019041041377931833, 0.007886817678809166, 0.0017641709418967366, 0.05392809957265854, 0.05301390960812569, 0.7882248163223267, 0.23044846951961517, 0.3334583342075348, 0.0023454318288713694, 0.0015356664080172777, 0.002816283842548728, 0.28547292947769165, 0.0007951673469506204, 0.001506028464064002, 0.0017259714659303427, 0.000988114275969565, 0.002581598935648799, 0.00734415277838707, 0.0063628945499658585, 0.7281821966171265, 0.022753005847334862, 0.012228398583829403, 0.5496132969856262, 0.21374869346618652, 1.1564455032348633, 1.0833872556686401, 0.4302610754966736, 1.2962249517440796], "tokens": [13, 1678, 736, 325, 29896, 1275, 28736, 29931, 20193, 29889, 16310, 3830, 325, 29906, 1275, 28736, 29931, 20193, 29889, 16310, 1577, 13, 418, 28736, 29931, 20193, 29889, 16310, 584, 13, 418, 28736, 29931, 20193, 29889, 1529, 29979, 15349, 29918, 5265, 12064, 29936, 13, 29871, 500, 13, 13, 29871, 2024, 7223, 338, 16174]}
{"line_number": 358, "line_type": "original", "code": "    switch (n.getType()) {", "entropy": 1.819225788116455, "is_bug_line": true, "sus_score": 0.48507125007266594, "per_token_entropy": [8.40272331237793, 7.015725612640381, 0.2278037816286087, 0.625434160232544, 0.013997361063957214, 0.004156047478318214, 0.0662514865398407, 0.006957944482564926, 0.009981244802474976], "tokens": [268, 4607, 313, 29876, 29889, 657, 1542, 3101, 426]}
{"line_number": 358, "line_type": "generated", "code": "\n\n  /**\n   * Returns the first node that is a child of the parent that is not a\n   * function.\n   */\n  private static Node getFirstChild(Node parent) {\n    for (Node child = parent.", "entropy": 0.6942923069000244, "is_bug_line": true, "sus_score": 0.48507125007266594, "per_token_entropy": [0.051078472286462784, 1.0840251445770264, 0.213802307844162, 0.7641399502754211, 0.05587967857718468, 0.018339237198233604, 0.00040951924165710807, 2.561227560043335, 1.4380110502243042, 2.536816358566284, 2.455091953277588, 1.8332198858261108, 1.3434473276138306, 1.5226994752883911, 1.9844892024993896, 0.061708640307188034, 1.0036699771881104, 2.069596290588379, 1.646024227142334, 0.6850995421409607, 1.5344356298446655, 1.2225677967071533, 1.0118111371994019, 0.0018054627580568194, 0.0005268854438327253, 1.316388726234436, 1.0025508403778076, 0.5135120749473572, 0.005647655110806227, 0.22773267328739166, 0.0007495454628951848, 0.018409110605716705, 0.18049263954162598, 0.7939123511314392, 0.0472044013440609, 0.24041515588760376, 0.432272344827652, 0.8730239868164062, 0.7808667421340942, 0.032363779842853546, 0.7674903273582458, 0.177596315741539, 0.0016031521372497082, 0.0015354283386841416, 0.03801731392741203, 0.8833487033843994, 0.04698684439063072, 0.007554297335445881, 0.550152599811554, 0.054396286606788635, 0.004248877987265587, 0.0048025972209870815], "tokens": [13, 13, 29871, 7762, 13, 259, 334, 16969, 278, 937, 2943, 393, 338, 263, 2278, 310, 278, 3847, 393, 338, 451, 263, 13, 259, 334, 740, 29889, 13, 259, 3776, 13, 29871, 2024, 2294, 9071, 679, 6730, 5938, 29898, 4247, 3847, 29897, 426, 13, 1678, 363, 313, 4247, 2278, 353, 3847, 29889]}
{"line_number": 215, "line_type": "original", "code": "        return; // Variable not dead.", "entropy": 3.890538215637207, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [7.2256245613098145, 8.047021865844727, 0.055579882115125656, 3.0960259437561035, 5.5716705322265625, 3.0183138847351074, 3.3621835708618164, 0.7478864192962646], "tokens": [308, 736, 29936, 849, 28736, 451, 7123, 29889]}
{"line_number": 215, "line_type": "generated", "code": "\n        c = c.getNext();\n      }\n    }\n  }\n\n  /**\n   * Returns whether the variable is still live within the expression.\n   *\n   * @param n The expression node.\n   *", "entropy": 0.31773123145103455, "is_bug_line": false, "sus_score": 0.42640143271122083, "per_token_entropy": [0.045996155589818954, 0.6650651693344116, 0.7353590726852417, 0.0014459164813160896, 0.0587497353553772, 0.0036460370756685734, 0.0008920027757994831, 0.00231082271784544, 0.0022325608879327774, 0.008672904223203659, 0.05820947140455246, 0.0008703258354216814, 0.004078761208802462, 0.08896224945783615, 0.0009846605826169252, 0.0023028540890663862, 0.19032922387123108, 0.0027139282319694757, 0.009809266775846481, 0.12311045825481415, 0.1237252801656723, 0.3101283609867096, 0.03969717025756836, 0.003633565502241254, 0.0001250427303602919, 2.073636531829834, 1.102333426475525, 0.6852777600288391, 0.6023651957511902, 0.6898451447486877, 0.3042337894439697, 0.08080128580331802, 0.6800949573516846, 0.2639444172382355, 0.9381779432296753, 0.7118142247200012, 0.1932862401008606, 0.01396244764328003, 0.2226138412952423, 1.0749404430389404, 0.0033849345054477453, 0.0033276681788265705, 0.40826189517974854, 0.027204109355807304, 0.5904711484909058, 0.25559744238853455, 1.5827367305755615, 0.9528729915618896, 0.5421572923660278, 0.0317755751311779, 0.0012850845232605934, 0.002569589763879776], "tokens": [13, 4706, 274, 353, 274, 29889, 657, 9190, 890, 13, 418, 500, 13, 1678, 500, 13, 29871, 500, 13, 13, 29871, 7762, 13, 259, 334, 16969, 3692, 278, 2286, 338, 1603, 5735, 2629, 278, 4603, 29889, 13, 259, 334, 13, 259, 334, 732, 3207, 302, 450, 4603, 2943, 29889, 13, 259, 334]}
{"line_number": 381, "line_type": "original", "code": "    return VariableLiveness.MAYBE_LIVE;", "entropy": 1.0122742652893066, "is_bug_line": false, "sus_score": 0.41602514716892186, "per_token_entropy": [9.177237510681152, 3.780815839767456, 0.1696576178073883, 0.002029741881415248, 0.002451036125421524, 0.0015437601832672954, 0.014993356540799141, 0.0007640779949724674, 0.0022163845133036375, 0.001623980118893087, 0.0004161922261118889, 0.0023369877599179745, 0.003477599238976836], "tokens": [268, 736, 28736, 29931, 20193, 29889, 1529, 29979, 15349, 29918, 5265, 12064, 29936]}
{"line_number": 381, "line_type": "generated", "code": "\n\n  /**\n   * Gets the first reference of a variable in the current expression tree.\n   *\n   * @return The first reference of the variable, or null if not found.\n   */\n  private Node getFirstReference", "entropy": 0.5833209156990051, "is_bug_line": false, "sus_score": 0.41602514716892186, "per_token_entropy": [0.02871805429458618, 0.30511972308158875, 0.19016197323799133, 0.7757539749145508, 0.05100903660058975, 0.016331691294908524, 0.0004372832481749356, 3.587924003601074, 0.4655228853225708, 0.3757908344268799, 3.1004765033721924, 1.7754745483398438, 0.8537561297416687, 0.4371461868286133, 0.2326602339744568, 0.9443230628967285, 1.3697941303253174, 1.5058538913726807, 0.9437482357025146, 0.39339420199394226, 0.2667063772678375, 0.041756272315979004, 0.00302524259313941, 0.39259102940559387, 1.8839523792266846, 0.003712667850777507, 0.02268495224416256, 0.36715903878211975, 1.1321759223937988, 1.093443512916565, 0.6531060934066772, 0.14541281759738922, 0.5855841636657715, 0.6450926065444946, 0.10538749396800995, 1.511954665184021, 0.4911590814590454, 0.12230876833200455, 0.1656631976366043, 2.246159076690674, 0.10000834614038467, 0.12185318022966385, 0.01027768012136221, 0.002980791963636875, 0.031876154243946075, 0.00026675479602999985, 0.02872164361178875, 0.2336975783109665, 0.11080284416675568, 0.10520755499601364, 0.19683362543582916, 0.15772919356822968], "tokens": [13, 13, 29871, 7762, 13, 259, 334, 402, 1691, 278, 937, 3407, 310, 263, 2286, 297, 278, 1857, 4603, 5447, 29889, 13, 259, 334, 13, 259, 334, 732, 2457, 450, 937, 3407, 310, 278, 2286, 29892, 470, 1870, 565, 451, 1476, 29889, 13, 259, 3776, 13, 29871, 2024, 9071, 679, 6730, 7422]}
{"line_number": 293, "line_type": "original", "code": "      VariableLiveness state = VariableLiveness.MAYBE_LIVE;", "entropy": 1.054182529449463, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [6.558682441711426, 6.465635299682617, 0.0632319301366806, 0.0011955503141507506, 1.052539587020874, 0.10222358256578445, 2.400195598602295, 0.0037448531948029995, 0.000730247818864882, 0.004242111928761005, 1.2601498365402222, 0.0001938155182870105, 0.005712849088013172, 0.00024625606602057815, 0.0004354958946350962, 0.00036590558011084795, 0.0015768486773595214], "tokens": [539, 28736, 29931, 20193, 2106, 353, 28736, 29931, 20193, 29889, 1529, 29979, 15349, 29918, 5265, 12064, 29936]}
{"line_number": 293, "line_type": "generated", "code": "\n        return VariableLiveness.KILL;\n      } else {\n<|mask:1|><|mask:0|>\n        return VariableLiveness.READ;\n      }\n    } else {\n      for (Node c", "entropy": 0.10227254033088684, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [0.18394391238689423, 0.25356197357177734, 0.27386608719825745, 0.052474044263362885, 0.0007402540650218725, 0.0013005617074668407, 0.002290128031745553, 0.1447477638721466, 0.0009226117981597781, 0.0017598869744688272, 0.01830400712788105, 0.132962167263031, 0.010166055522859097, 0.13424381613731384, 0.08796994388103485, 0.004996551666408777, 0.6094433665275574, 0.0010718321427702904, 0.00267576496116817, 0.0010782625759020448, 0.18941722810268402, 0.0038459161296486855, 0.06557001918554306, 0.0011486368020996451, 0.001997025217860937, 0.0003438596613705158, 0.031468465924263, 0.0014803176745772362, 0.007008729502558708, 0.0032534070778638124, 0.019560888409614563, 0.01671980693936348, 0.0038725160993635654, 0.0005981324939057231, 0.0009333306807093322, 0.002449371386319399, 0.005111601669341326, 0.002244455274194479, 0.0020525832660496235, 0.015011440962553024, 0.0034656007774174213, 0.002131453948095441, 0.09208418428897858, 0.0037626675330102444, 0.8469113707542419, 0.5142430067062378, 0.003849953645840287, 0.26022055745124817, 0.9501279592514038, 0.2113586813211441, 0.015189336612820625, 0.12222058326005936], "tokens": [13, 4706, 736, 28736, 29931, 20193, 29889, 29968, 24071, 29936, 13, 418, 500, 1683, 426, 13, 29966, 29989, 13168, 29901, 29896, 29989, 5299, 29989, 13168, 29901, 29900, 29989, 29958, 13, 4706, 736, 28736, 29931, 20193, 29889, 16310, 29936, 13, 418, 500, 13, 1678, 500, 1683, 426, 13, 418, 363, 313, 4247, 274]}
{"line_number": 294, "line_type": "original", "code": "      switch (n.getParent().getType()) {", "entropy": 1.30405855178833, "is_bug_line": true, "sus_score": 0.4082482904638631, "per_token_entropy": [6.864106178283691, 6.472333908081055, 0.28489023447036743, 0.11328078806400299, 0.0034244961570948362, 0.0021749907173216343, 0.07756632566452026, 0.0045992303639650345, 0.007168051786720753, 1.8036577701568604, 0.01266731321811676, 0.002833282807841897], "tokens": [539, 4607, 313, 29876, 29889, 657, 9780, 2141, 657, 1542, 3101, 426]}
{"line_number": 294, "line_type": "generated", "code": "\n        return VariableLiveness.KILL;\n      } else {\n        return VariableLiveness.READ;\n      }\n    }\n\n    // If this node is a subtree of an assignment, the variable is\n    // definitely", "entropy": 0.5318246483802795, "is_bug_line": true, "sus_score": 0.4082482904638631, "per_token_entropy": [0.13730567693710327, 0.3870711326599121, 0.35084882378578186, 0.0552908256649971, 0.0005623904871754348, 0.0015236446633934975, 0.00178927939850837, 0.221889927983284, 0.0008441222598776221, 0.0018636492313817143, 0.02744758501648903, 0.16894949972629547, 0.014182372018694878, 0.1375882923603058, 0.11728986352682114, 0.004212197847664356, 0.2979196310043335, 0.184832364320755, 0.004869269207119942, 0.0010082405060529709, 0.001925639808177948, 0.004713021218776703, 0.0017020514933392406, 0.002241243841126561, 0.002534988336265087, 0.017353249713778496, 0.0030996394343674183, 0.0024067978374660015, 0.09459501504898071, 0.003639147849753499, 0.688231348991394, 0.4175073206424713, 0.10089082270860672, 1.7476425170898438, 1.986849069595337, 2.3366189002990723, 1.6624770164489746, 0.42668023705482483, 0.927314281463623, 2.8785560131073, 0.5244596004486084, 1.0015172958374023, 1.5081393718719482, 0.9522076845169067, 0.6669641733169556, 2.8532779216766357, 0.6870403289794922, 0.8381977081298828, 1.7975904941558838, 0.0015881556319072843, 0.0011753087164834142, 1.3984566926956177], "tokens": [13, 4706, 736, 28736, 29931, 20193, 29889, 29968, 24071, 29936, 13, 418, 500, 1683, 426, 13, 4706, 736, 28736, 29931, 20193, 29889, 16310, 29936, 13, 418, 500, 13, 1678, 500, 13, 13, 1678, 849, 960, 445, 2943, 338, 263, 1014, 8336, 310, 385, 12827, 29892, 278, 2286, 338, 13, 1678, 849, 11630]}
{"line_number": 307, "line_type": "original", "code": "          for(Node sibling = n.getNext(); sibling != null;", "entropy": 1.859453797340393, "is_bug_line": true, "sus_score": 0.4082482904638631, "per_token_entropy": [10.121047019958496, 2.8307905197143555, 6.143997669219971, 0.11109176278114319, 5.270341873168945, 0.04960733279585838, 0.22075021266937256, 0.04910886660218239, 0.0541980154812336, 0.0007350126979872584, 5.0919647216796875, 0.06633448600769043, 1.4881458282470703, 0.00032074074260890484, 0.043316517025232315, 0.037699829787015915, 0.031263865530490875], "tokens": [965, 363, 29898, 4247, 27767, 1847, 353, 302, 29889, 657, 9190, 890, 27767, 1847, 2804, 1870, 29936]}
{"line_number": 307, "line_type": "generated", "code": "\n    for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {\n      if (!ControlFlowGraph.isEnteringNewCfgNode(c)) {\n        VariableLiveness state = is", "entropy": 0.0721985325217247, "is_bug_line": true, "sus_score": 0.4082482904638631, "per_token_entropy": [0.05059422552585602, 0.6601753234863281, 0.9051294326782227, 0.00199083867482841, 0.009400155395269394, 0.08938739448785782, 0.03783482685685158, 0.0070715853944420815, 0.003730482654646039, 0.0006255338666960597, 0.0018319981172680855, 0.0006323245470412076, 0.002229825360700488, 0.01815756969153881, 0.002285013673827052, 0.004047892522066832, 0.003008247120305896, 0.3654179573059082, 0.004161745775490999, 0.00406344560906291, 0.0056195612996816635, 0.0008262557676061988, 0.0013334201648831367, 0.00954445544630289, 0.002538912231102586, 0.00185591506306082, 0.04870462417602539, 0.8514134287834167, 0.14480160176753998, 0.013178509660065174, 0.0007159530650824308, 0.0014319891342893243, 0.000987876090221107, 0.0012540103634819388, 0.001745368936099112, 0.00033825874561443925, 0.0016561138909310102, 0.0016544476384297013, 0.0005061537376604974, 0.0008623456815257668, 0.0011076750233769417, 0.01764504797756672, 0.017540333792567253, 0.0022072256542742252, 0.001899701775982976, 0.11445628106594086, 0.20036672055721283, 0.0012635351158678532, 0.0018449680646881461, 0.11546365916728973, 0.005458687897771597, 0.01232448685914278], "tokens": [13, 1678, 363, 313, 4247, 274, 353, 302, 29889, 657, 6730, 5938, 890, 274, 2804, 1870, 29936, 274, 353, 274, 29889, 657, 9190, 3101, 426, 13, 418, 565, 5384, 4809, 17907, 9527, 29889, 275, 10399, 292, 4373, 29907, 16434, 4247, 29898, 29883, 876, 426, 13, 4706, 28736, 29931, 20193, 2106, 353, 338]}
