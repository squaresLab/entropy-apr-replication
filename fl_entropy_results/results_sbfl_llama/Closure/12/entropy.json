{"line_number": 291, "line_type": "original", "code": "    GraphNode<Node, Branch> n = getCfg().getNode(defNode);", "entropy": 1.8837774991989136, "is_bug_line": false, "sus_score": 0.14744195615489714, "per_token_entropy": [9.718523025512695, 10.372218132019043, 0.8149312138557434, 0.19441527128219604, 2.5096099376678467, 0.020207487046718597, 1.7233270406723022, 0.005867281928658485, 2.657768726348877, 0.5956386923789978, 3.311026096343994, 0.7527441382408142, 0.0005248599336482584, 1.3316519260406494, 0.0015756584471091628, 2.1200814247131348, 0.009540440514683723, 1.4732165336608887, 0.050324130803346634, 0.012358751147985458], "tokens": [268, 12367, 4247, 29966, 4247, 29892, 25889, 29958, 302, 353, 679, 29907, 16434, 2141, 657, 4247, 29898, 1753, 4247, 416]}
{"line_number": 291, "line_type": "generated", "code": "\n\n  /**\n   * Gets a list of nodes that may be using the value assigned to {@code name}\n   * in {@code defNode}. {@code defNode} must be one of the control flow graph\n   * nodes.", "entropy": 0.09738830476999283, "is_bug_line": false, "sus_score": 0.14744195615489714, "per_token_entropy": [0.05463537573814392, 0.6469782590866089, 0.08692015707492828, 0.5359404683113098, 0.08574158698320389, 0.003090964164584875, 0.0004895919119007885, 1.0483453273773193, 0.003413685131818056, 0.4275170564651489, 0.14810031652450562, 0.0033137667924165726, 0.30926617980003357, 0.03633026406168938, 0.11412855982780457, 0.039250247180461884, 0.13440629839897156, 0.040217068046331406, 0.06693928688764572, 0.0741526335477829, 0.016788972541689873, 0.22031879425048828, 0.0034534833393990993, 0.3710038959980011, 0.026171434670686722, 0.006549914367496967, 0.0005477358354255557, 0.0015401893761008978, 0.0704934149980545, 0.0927472785115242, 0.0016726563917472959, 0.07944020628929138, 0.022862186655402184, 0.040174927562475204, 0.13508838415145874, 0.0006593675934709609, 0.00531782815232873, 0.00098204065579921, 0.0009083197801373899, 0.021800989285111427, 0.0033985970076173544, 0.008416302502155304, 0.003327073995023966, 0.0015610187547281384, 0.004720496013760567, 0.0017847575945779681, 0.033053480088710785, 0.0021019524428993464, 0.0016581370728090405, 0.00047183825518004596, 0.005720316432416439, 0.020278630778193474], "tokens": [13, 13, 29871, 7762, 13, 259, 334, 402, 1691, 263, 1051, 310, 7573, 393, 1122, 367, 773, 278, 995, 9859, 304, 26633, 401, 1024, 29913, 13, 259, 334, 297, 26633, 401, 822, 4247, 1836, 26633, 401, 822, 4247, 29913, 1818, 367, 697, 310, 278, 2761, 4972, 3983, 13, 259, 334, 7573, 29889]}
{"line_number": 292, "line_type": "original", "code": "    Preconditions.checkNotNull(n);", "entropy": 1.4819800853729248, "is_bug_line": false, "sus_score": 0.14744195615489714, "per_token_entropy": [9.916234970092773, 4.468588829040527, 0.004431546665728092, 0.0012669878778979182, 0.009754491969943047, 0.0023844402749091387, 0.6935198903083801, 0.0011180347064509988, 0.002857532352209091, 0.8139105439186096, 0.3877131938934326], "tokens": [268, 4721, 1116, 2187, 29889, 3198, 3664, 7327, 29898, 29876, 416]}
{"line_number": 292, "line_type": "generated", "code": "\n  /**\n   * Gets a list of nodes that may be using the value assigned to {@code name}\n   * in {@code defNode}. {@code defNode} must be one of the control flow graph\n   * nodes.\n", "entropy": 0.07797489315271378, "is_bug_line": false, "sus_score": 0.14744195615489714, "per_token_entropy": [0.05670655518770218, 0.7138907313346863, 0.8273341655731201, 0.04019450768828392, 0.004560189787298441, 0.0006503135664388537, 0.5473576784133911, 0.0016056514577940106, 0.252510130405426, 0.10819806903600693, 0.0020695950370281935, 0.16510193049907684, 0.019994260743260384, 0.05310468748211861, 0.027657605707645416, 0.04938269779086113, 0.02407262474298477, 0.04611193388700485, 0.049159713089466095, 0.011954568326473236, 0.1139238104224205, 0.002341031562536955, 0.33329612016677856, 0.01927303895354271, 0.0040364945307374, 0.0004950728034600616, 0.000750736624468118, 0.054694291204214096, 0.07302196323871613, 0.0015827997121959925, 0.07108060270547867, 0.021774278953671455, 0.03796360269188881, 0.1314074546098709, 0.0006033745594322681, 0.003458235412836075, 0.0004866131057497114, 0.0008989107445813715, 0.02038527838885784, 0.0023329441901296377, 0.005497574806213379, 0.0013296105898916721, 0.0013522299705073237, 0.0035697801504284143, 0.00220282468944788, 0.02570134773850441, 0.002020343439653516, 0.001824739621952176, 0.00045265440712682903, 0.006097523961216211, 0.017735933884978294, 0.09148505330085754], "tokens": [13, 29871, 7762, 13, 259, 334, 402, 1691, 263, 1051, 310, 7573, 393, 1122, 367, 773, 278, 995, 9859, 304, 26633, 401, 1024, 29913, 13, 259, 334, 297, 26633, 401, 822, 4247, 1836, 26633, 401, 822, 4247, 29913, 1818, 367, 697, 310, 278, 2761, 4972, 3983, 13, 259, 334, 7573, 29889, 13]}
{"line_number": 293, "line_type": "original", "code": "    FlowState<ReachingUses> state = n.getAnnotation();", "entropy": 1.8438210487365723, "is_bug_line": false, "sus_score": 0.14744195615489714, "per_token_entropy": [10.038825988769531, 10.787663459777832, 0.13619233667850494, 0.426782488822937, 1.1131155490875244, 0.002018558792769909, 0.010182221420109272, 0.0009840651182457805, 0.14782951772212982, 0.15856799483299255, 0.2750646770000458, 6.273437976837158, 0.01655719242990017, 0.08876799046993256, 0.004044805187731981, 0.02110196277499199], "tokens": [268, 22787, 2792, 29966, 1123, 9733, 15922, 267, 29958, 2106, 353, 302, 29889, 657, 21978, 890]}
{"line_number": 293, "line_type": "generated", "code": "\n  private static class ReachingUses {\n    private final Map<Var, Collection<Node>> mayUseMap =\n        Maps.newHashMap();\n  }\n\n  /**\n   * A lattice element for reaching uses.\n  ", "entropy": 0.436639666557312, "is_bug_line": false, "sus_score": 0.14744195615489714, "per_token_entropy": [0.06223783269524574, 1.0024222135543823, 1.9296085834503174, 2.0879762172698975, 0.5718373656272888, 0.2856996953487396, 0.003829765599220991, 0.023903053253889084, 0.0013329440262168646, 0.2307785302400589, 0.0061984676867723465, 0.13279151916503906, 1.0764744281768799, 0.2860390543937683, 0.46347248554229736, 0.013719193637371063, 0.006345363333821297, 0.003413091180846095, 0.6627606749534607, 0.007320839911699295, 0.008595730178058147, 0.005289250984787941, 0.012927298434078693, 0.003411190351471305, 0.0030242919456213713, 0.34146440029144287, 0.7134048938751221, 0.15868040919303894, 0.8796916007995605, 0.039304349571466446, 0.005906153004616499, 0.14689014852046967, 0.0586370974779129, 0.0071794139221310616, 0.6540549993515015, 0.012259840965270996, 0.00948092807084322, 0.6043797135353088, 0.06722310185432434, 1.1491708755493164, 0.07368829101324081, 0.0029608244076371193, 0.0019386084750294685, 2.1393704414367676, 1.3766422271728516, 0.707556962966919, 1.0589009523391724, 1.778719186782837, 0.9741711020469666, 0.5545434951782227, 0.29366347193717957, 0.003970359917730093], "tokens": [13, 29871, 2024, 2294, 770, 830, 9733, 15922, 267, 426, 13, 1678, 2024, 2186, 7315, 29966, 9037, 29892, 14348, 29966, 4247, 6778, 1122, 11403, 3388, 353, 13, 4706, 25846, 29889, 1482, 27824, 890, 13, 29871, 500, 13, 13, 29871, 7762, 13, 259, 334, 319, 24094, 1543, 363, 20888, 3913, 29889, 13, 259]}
{"line_number": 294, "line_type": "original", "code": "    return state.getOut().mayUseMap.get(jsScope.getVar(name));", "entropy": 0.7822206020355225, "is_bug_line": false, "sus_score": 0.14744195615489714, "per_token_entropy": [8.627925872802734, 1.494340419769287, 0.6755890846252441, 0.10975679010152817, 2.2038683891296387, 1.87901771068573, 0.05421845614910126, 0.09450294077396393, 0.0022638426162302494, 0.035244718194007874, 0.01986326277256012, 0.02186817117035389, 0.037174832075834274, 1.0713412761688232, 0.004709105938673019, 0.016550039872527122, 0.00938173197209835, 0.0069036055356264114, 0.0024414039216935635, 0.01228268537670374, 0.04738575592637062], "tokens": [268, 736, 2106, 29889, 657, 3744, 2141, 13029, 11403, 3388, 29889, 657, 29898, 1315, 15289, 29889, 657, 9037, 29898, 978, 2483]}
{"line_number": 294, "line_type": "generated", "code": "\n  /**\n   * Gets a list of nodes that may be using the value assigned to {@code name}\n   * in {@code defNode}. {@code defNode} must be one of the control flow graph\n   * nodes.\n", "entropy": 0.12071829289197922, "is_bug_line": false, "sus_score": 0.14744195615489714, "per_token_entropy": [0.08089793473482132, 1.478426218032837, 1.4072282314300537, 0.056139491498470306, 0.009836888872087002, 0.0008475763606838882, 0.9175246953964233, 0.0016987192211672664, 0.3565386235713959, 0.15042592585086823, 0.002974611707031727, 0.22142307460308075, 0.030231906101107597, 0.07988394796848297, 0.03749856725335121, 0.07353213429450989, 0.03188389167189598, 0.07521424442529678, 0.0628165677189827, 0.015298641286790371, 0.18412528932094574, 0.003526422893628478, 0.2983369827270508, 0.02497248910367489, 0.006940542254596949, 0.0008793777669779956, 0.0006780709372833371, 0.06189265474677086, 0.08915091305971146, 0.0016726563917472959, 0.0575244203209877, 0.02869025245308876, 0.05471076816320419, 0.14110393822193146, 0.0006493605324067175, 0.003334559267386794, 0.001053493469953537, 0.0008758046315051615, 0.01738675683736801, 0.0025064502842724323, 0.006476958282291889, 0.001525192055851221, 0.0013190149329602718, 0.0038661037106066942, 0.0020425901748239994, 0.03156306967139244, 0.0021570289973169565, 0.001949435449205339, 0.0005341533687897027, 0.006968480534851551, 0.01923445053398609, 0.12938159704208374], "tokens": [13, 29871, 7762, 13, 259, 334, 402, 1691, 263, 1051, 310, 7573, 393, 1122, 367, 773, 278, 995, 9859, 304, 26633, 401, 1024, 29913, 13, 259, 334, 297, 26633, 401, 822, 4247, 1836, 26633, 401, 822, 4247, 29913, 1818, 367, 697, 310, 278, 2761, 4972, 3983, 13, 259, 334, 7573, 29889, 13]}
{"line_number": 228, "line_type": "original", "code": "            removeFromUseIfLocal(name.getString(), output);", "entropy": 2.056535482406616, "is_bug_line": false, "sus_score": 0.1336306209562122, "per_token_entropy": [11.845893859863281, 6.773368835449219, 0.17485754191875458, 0.46878376603126526, 0.3013422191143036, 0.03638877347111702, 0.13800270855426788, 0.25883325934410095, 4.373055934906006, 1.0591504573822021, 0.03610561415553093, 1.2294085025787354, 0.03976854681968689], "tokens": [632, 3349, 4591, 11403, 3644, 7717, 29898, 978, 29889, 13719, 3285, 1962, 416]}
{"line_number": 228, "line_type": "generated", "code": "\n  }\n\n  /**\n   * Returns true if the given name is one of the escaped variable.\n   */\n  private boolean isEscaped(String name) {\n    Var var = jsScope.getVar(name);", "entropy": 0.23705598711967468, "is_bug_line": false, "sus_score": 0.1336306209562122, "per_token_entropy": [0.04971328005194664, 0.15037782490253448, 0.006985409185290337, 0.011108223348855972, 0.16621030867099762, 0.08408083766698837, 0.4246601164340973, 0.07349491864442825, 0.003598050447180867, 0.0007085673278197646, 2.441814661026001, 1.2575045824050903, 0.05434706062078476, 0.44801434874534607, 1.0753800868988037, 1.895500898361206, 0.39937320351600647, 1.3242839574813843, 0.023618897423148155, 0.03223462402820587, 0.19550880789756775, 0.5023073554039001, 0.3391428589820862, 0.04778757691383362, 0.0027381805703043938, 0.043292999267578125, 0.0033289750572293997, 0.027504878118634224, 0.1323542594909668, 0.03722364827990532, 0.05836489051580429, 0.05557762831449509, 0.0034145168028771877, 0.0027831175830215216, 0.4460563063621521, 0.17381049692630768, 0.013724368065595627, 0.02592114359140396, 0.0018856617389246821, 0.0034432667307555676, 0.06621087342500687, 0.13963845372200012, 0.04898446798324585, 0.003324935445562005, 0.005810513161122799, 0.0031665442511439323, 0.0025324912276118994, 0.0043453797698020935, 0.005245374981313944, 0.0032448519486933947, 0.0018199799815192819, 0.0034063193015754223], "tokens": [13, 29871, 500, 13, 13, 29871, 7762, 13, 259, 334, 16969, 1565, 565, 278, 2183, 1024, 338, 697, 310, 278, 19824, 2286, 29889, 13, 259, 3776, 13, 29871, 2024, 7223, 338, 29923, 1557, 10501, 29898, 1231, 1024, 29897, 426, 13, 1678, 11681, 722, 353, 6965, 15289, 29889, 657, 9037, 29898, 978, 416]}
{"line_number": 226, "line_type": "original", "code": "          Node name = n.getFirstChild();", "entropy": 3.0601537227630615, "is_bug_line": false, "sus_score": 0.13245323570650439, "per_token_entropy": [9.558208465576172, 5.504513740539551, 6.318615436553955, 3.4169399738311768, 4.759426593780518, 0.5376498699188232, 0.20093156397342682, 0.18955659866333008, 0.012158799916505814, 0.10353327542543411], "tokens": [965, 9071, 1024, 353, 302, 29889, 657, 6730, 5938, 890]}
{"line_number": 226, "line_type": "generated", "code": "\n      use.mayUseMap.remove(var);\n    }\n  }\n\n  /**\n   * Returns the use node for the given variable, or null if it is not\n   * used in the subtree rooted at the", "entropy": 0.5483759045600891, "is_bug_line": false, "sus_score": 0.13245323570650439, "per_token_entropy": [0.08139751106500626, 0.26167696714401245, 0.16618578135967255, 0.005985431373119354, 0.011853968724608421, 0.0014922209084033966, 0.0029546436853706837, 0.002328186994418502, 0.024777136743068695, 0.011192512698471546, 0.003989239223301411, 0.010058430023491383, 0.00497377710416913, 0.2438049465417862, 0.002006661845371127, 0.013109094463288784, 0.015628596767783165, 0.0010289618512615561, 0.004617623053491116, 0.12109178304672241, 0.06964050978422165, 0.35921603441238403, 0.07281017303466797, 0.0024289172142744064, 0.0005523824947886169, 2.5188159942626953, 1.0631898641586304, 3.3035736083984375, 2.0906670093536377, 0.9698582887649536, 0.2460046410560608, 0.22168011963367462, 0.42040902376174927, 1.8218400478363037, 0.7993776798248291, 0.17220084369182587, 0.13511452078819275, 1.5996997356414795, 1.1842834949493408, 0.27791449427604675, 1.7536927461624146, 0.0008596062543801963, 0.0033568956423550844, 2.0659942626953125, 0.6870858669281006, 0.558198094367981, 2.139214038848877, 0.5264325141906738, 1.5724010467529297, 0.01710648275911808, 0.19609913229942322, 0.6756757497787476], "tokens": [13, 418, 671, 29889, 13029, 11403, 3388, 29889, 5992, 29898, 1707, 416, 13, 1678, 500, 13, 29871, 500, 13, 13, 29871, 7762, 13, 259, 334, 16969, 278, 671, 2943, 363, 278, 2183, 2286, 29892, 470, 1870, 565, 372, 338, 451, 13, 259, 334, 1304, 297, 278, 1014, 8336, 3876, 287, 472, 278]}
{"line_number": 227, "line_type": "original", "code": "          if (!conditional) {", "entropy": 2.642512559890747, "is_bug_line": false, "sus_score": 0.13245323570650439, "per_token_entropy": [10.277710914611816, 2.644890308380127, 1.8492236137390137, 3.5868730545043945, 0.01790526509284973, 0.10190172493457794, 0.019083822146058083], "tokens": [965, 565, 5384, 1116, 3245, 29897, 426]}
{"line_number": 227, "line_type": "generated", "code": "\n    }\n  }\n\n  /**\n   * Traverse the subtree and add the variables to the upward exposed lattice.\n   */\n  private void computeDefs(Node n, Node cfgNode, ReachingDefs", "entropy": 0.5825267434120178, "is_bug_line": false, "sus_score": 0.13245323570650439, "per_token_entropy": [0.09051518142223358, 0.48126453161239624, 0.021713972091674805, 0.024106837809085846, 0.051484815776348114, 0.0022205475252121687, 0.005774008575826883, 0.1420852541923523, 0.07703834027051926, 0.38165003061294556, 0.08130179345607758, 0.0029306341893970966, 0.0005942009738646448, 4.062185764312744, 0.8645632266998291, 0.4009764492511749, 2.1385092735290527, 0.5423716306686401, 2.1835525035858154, 2.687474489212036, 1.3063255548477173, 2.102587938308716, 1.7544312477111816, 0.24841973185539246, 2.108584403991699, 0.021726220846176147, 0.13899226486682892, 0.2329123318195343, 0.3218793570995331, 0.004873777274042368, 0.00313564739190042, 0.5833803415298462, 0.0011953121284022927, 0.021364431828260422, 0.14569933712482452, 0.12308969348669052, 1.3581860065460205, 1.8682469129562378, 0.7772216796875, 0.21423481404781342, 0.11791685968637466, 0.11245445907115936, 0.09618893265724182, 0.9849722385406494, 0.3694264590740204, 0.0002798642381094396, 0.011560827493667603, 0.0674205869436264, 0.2454693764448166, 0.0005665604257956147, 0.6197150945663452, 0.08661695569753647], "tokens": [13, 1678, 500, 13, 29871, 500, 13, 13, 29871, 7762, 13, 259, 334, 3201, 3901, 278, 1014, 8336, 322, 788, 278, 3651, 304, 278, 701, 1328, 19884, 24094, 29889, 13, 259, 3776, 13, 29871, 2024, 1780, 10272, 3206, 29879, 29898, 4247, 302, 29892, 9071, 274, 16434, 4247, 29892, 830, 9733, 3206, 29879]}
{"line_number": 232, "line_type": "original", "code": "          if (!n.isAssign()) {", "entropy": 2.5905134677886963, "is_bug_line": false, "sus_score": 0.13245323570650439, "per_token_entropy": [9.02595329284668, 3.3035311698913574, 6.5782084465026855, 4.056634902954102, 0.12478576600551605, 0.5275506973266602, 1.6871920824050903, 0.012820087373256683, 0.5299233794212341, 0.058532990515232086], "tokens": [965, 565, 5384, 29876, 29889, 275, 7900, 647, 3101, 426]}
{"line_number": 232, "line_type": "generated", "code": "\n   */\n  private List<Node> getMayUses(String name) {\n    Var var = jsScope.getVar(name);\n    if (var == null || var.scope != jsScope) {\n      return null", "entropy": 0.21086227893829346, "is_bug_line": false, "sus_score": 0.13245323570650439, "per_token_entropy": [0.3322422504425049, 0.06767228990793228, 1.128732681274414, 0.0010659971740096807, 0.032249514013528824, 0.9698385000228882, 0.7333318591117859, 0.014809788204729557, 0.0463259257376194, 0.0027155925054103136, 0.17430371046066284, 1.0862137079238892, 1.3735653162002563, 0.000731558189727366, 0.1956785023212433, 1.009616494178772, 0.010983485728502274, 0.6269440054893494, 0.0008362610242329538, 0.0016139827203005552, 0.056381430476903915, 0.6147863268852234, 0.07086951285600662, 0.0030589953530579805, 0.011685140430927277, 0.0013780631124973297, 0.0010667116148397326, 0.0024716088082641363, 0.0038912780582904816, 0.0010440857149660587, 0.0008846183773130178, 0.0020009512081742287, 0.0015864893794059753, 0.06750672310590744, 0.3309522569179535, 0.00701784435659647, 0.0085911201313138, 0.11659681051969528, 0.0006856950931251049, 0.2140500545501709, 0.024032708257436752, 0.0008866431307978928, 0.003672761144116521, 0.005748051684349775, 0.002138829091563821, 0.00024244230007752776, 0.06028303503990173, 0.0014072287594899535, 0.0017484629061073065, 0.026126490905880928, 0.038493234664201736, 1.4740811586380005], "tokens": [13, 259, 3776, 13, 29871, 2024, 2391, 29966, 4247, 29958, 679, 12703, 15922, 267, 29898, 1231, 1024, 29897, 426, 13, 1678, 11681, 722, 353, 6965, 15289, 29889, 657, 9037, 29898, 978, 416, 13, 1678, 565, 313, 1707, 1275, 1870, 3830, 722, 29889, 6078, 2804, 6965, 15289, 29897, 426, 13, 418, 736, 1870]}
{"line_number": 236, "line_type": "original", "code": "          computeMayUse(name.getNext(), cfgNode, output, conditional);", "entropy": 1.565600037574768, "is_bug_line": false, "sus_score": 0.13245323570650439, "per_token_entropy": [6.975366592407227, 11.733574867248535, 0.4287116825580597, 0.046094972640275955, 0.3532310426235199, 2.0671515464782715, 2.1249356269836426, 0.32604867219924927, 2.4783828258514404, 0.05886303633451462, 0.3870882987976074, 0.003402280155569315, 0.024092990905046463, 0.016855202615261078, 0.24554528295993805, 0.0790187418460846, 0.8106762766838074, 0.02176063135266304], "tokens": [965, 10272, 12703, 11403, 29898, 978, 29889, 657, 9190, 3285, 274, 16434, 4247, 29892, 1962, 29892, 15047, 416]}
{"line_number": 236, "line_type": "generated", "code": "  * (i.e. {@code defNode} is in the current scope).\n   * @param defNode The node where the variable is defined.\n   * @return a list of nodes that may be using the value assigned to {@code", "entropy": 0.6011104583740234, "is_bug_line": false, "sus_score": 0.13245323570650439, "per_token_entropy": [1.4235179424285889, 0.33750200271606445, 3.3366336822509766, 1.8704842329025269, 0.002062219427898526, 0.0012838939437642694, 0.21610897779464722, 2.638059616088867, 0.28800928592681885, 1.7959365844726562, 0.04351181536912918, 0.08465922623872757, 1.415523886680603, 2.0714704990386963, 0.475818932056427, 1.190068006515503, 0.7147919535636902, 0.473593145608902, 0.05826334282755852, 0.11001867055892944, 0.1391444355249405, 0.06746872514486313, 0.0613323338329792, 0.053528741002082825, 0.0071436697617173195, 2.476025104522705, 1.0489742755889893, 1.191060185432434, 0.3460889458656311, 1.0506930351257324, 0.3559873700141907, 0.4630037546157837, 0.12699450552463531, 0.2944939136505127, 0.09132425487041473, 0.3728712499141693, 0.049868665635585785, 0.10531346499919891, 1.6159679889678955, 0.20703241229057312, 0.015997862443327904, 0.2412084937095642, 0.3608991801738739, 0.14448966085910797, 0.27436941862106323, 0.04597383737564087, 0.09581064432859421, 0.35449740290641785, 0.40075168013572693, 0.04216013476252556, 0.6049000024795532, 0.005049689672887325], "tokens": [259, 334, 313, 29875, 29889, 29872, 29889, 26633, 401, 822, 4247, 29913, 338, 297, 278, 1857, 6874, 467, 13, 259, 334, 732, 3207, 822, 4247, 450, 2943, 988, 278, 2286, 338, 3342, 29889, 13, 259, 334, 732, 2457, 263, 1051, 310, 7573, 393, 1122, 367, 773, 278, 995, 9859, 304, 26633, 401]}
{"line_number": 237, "line_type": "original", "code": "        } else {", "entropy": 5.214674949645996, "is_bug_line": false, "sus_score": 0.13245323570650439, "per_token_entropy": [4.795439720153809, 9.657023429870605, 6.060434341430664, 0.34580156207084656], "tokens": [308, 500, 1683, 426]}
{"line_number": 237, "line_type": "generated", "code": "  * that are defined in the same scope as {@code defNode}.\n   * @param defNode node that defines the value.\n   * @return a list of nodes that may be using the value assigned to\n   *     {@code name", "entropy": 0.46284162998199463, "is_bug_line": false, "sus_score": 0.13245323570650439, "per_token_entropy": [0.9170365333557129, 0.16944652795791626, 2.2469632625579834, 0.39680635929107666, 1.672161340713501, 0.47395291924476624, 0.7412930130958557, 2.017221450805664, 0.836113691329956, 0.749935507774353, 0.9439001083374023, 0.005076850764453411, 0.25251856446266174, 0.013441890478134155, 0.21640829741954803, 0.010377495549619198, 0.07600042968988419, 0.11506465822458267, 0.09424639493227005, 0.046641021966934204, 0.04547469690442085, 0.006938529666513205, 2.5429179668426514, 1.1379214525222778, 0.5406749248504639, 0.17937995493412018, 0.8805443048477173, 1.2474805116653442, 0.4177411198616028, 0.0658637136220932, 0.4029948115348816, 0.05191328749060631, 0.1023026779294014, 0.9730007648468018, 0.19644014537334442, 0.018417537212371826, 0.20710624754428864, 0.237264946103096, 0.13655772805213928, 0.28321367502212524, 0.04008319601416588, 0.08359707146883011, 0.14538829028606415, 0.5437946319580078, 0.05465986579656601, 1.0924828052520752, 0.2033246010541916, 0.003824065439403057, 0.14973308145999908, 0.02101220190525055, 0.003241168335080147, 0.05786784738302231], "tokens": [259, 334, 393, 526, 3342, 297, 278, 1021, 6874, 408, 26633, 401, 822, 4247, 1836, 13, 259, 334, 732, 3207, 822, 4247, 2943, 393, 17645, 278, 995, 29889, 13, 259, 334, 732, 2457, 263, 1051, 310, 7573, 393, 1122, 367, 773, 278, 995, 9859, 304, 13, 259, 334, 268, 26633, 401, 1024]}
{"line_number": 217, "line_type": "original", "code": "          computeMayUse(varName.getFirstChild(), cfgNode, output, conditional);", "entropy": 1.4411662817001343, "is_bug_line": false, "sus_score": 0.11952286093343936, "per_token_entropy": [9.515571594238281, 8.104256629943848, 0.4271264970302582, 0.06211819499731064, 0.29089683294296265, 4.33208703994751, 0.3843091130256653, 0.39131417870521545, 0.045863281935453415, 3.7173681259155273, 0.0006236277404241264, 0.09166388213634491, 0.25622937083244324, 0.0034964873921126127, 0.004947562236338854, 0.0043578422628343105, 0.23673419654369354, 0.11914025247097015, 0.8229380249977112, 0.01228445116430521], "tokens": [965, 10272, 12703, 11403, 29898, 1707, 1170, 29889, 657, 6730, 5938, 3285, 274, 16434, 4247, 29892, 1962, 29892, 15047, 416]}
{"line_number": 217, "line_type": "generated", "code": "\n   * exposed lattice. Do nothing if the variable name is one of the escaped\n   * variable.\n   */\n  private void removeFromUseIfLocal(String name, ReachingUses use) {\n    Var var = jsScope", "entropy": 0.057531725615262985, "is_bug_line": false, "sus_score": 0.11952286093343936, "per_token_entropy": [0.5216554403305054, 0.27852246165275574, 0.27911925315856934, 0.03899163007736206, 0.009772317484021187, 0.1383952647447586, 0.8325262665748596, 0.007133845705538988, 0.010881372727453709, 0.021800756454467773, 0.007991719990968704, 0.04536818712949753, 0.010256796143949032, 0.024210983887314796, 0.0013891342096030712, 0.0024038248229771852, 0.011413047090172768, 0.016999252140522003, 0.2139802724123001, 0.0622127428650856, 0.027750831097364426, 0.03635291010141373, 0.014818361960351467, 0.11312111467123032, 0.013985371217131615, 0.002434744266793132, 0.020458629354834557, 0.021575618535280228, 0.008740855380892754, 0.0026925283018499613, 0.0009184433147311211, 0.0016930069541558623, 0.0022238779347389936, 0.00216821045614779, 0.004575260449200869, 0.020189613103866577, 0.003648174926638603, 0.0016305259196087718, 0.023200487717986107, 0.0005703729693777859, 0.0010022860951721668, 0.002534988336265087, 0.031762756407260895, 0.003240336664021015, 0.0020960045512765646, 0.0017572689102962613, 0.03919454291462898, 0.03857329860329628, 0.00516342930495739, 0.0021432305220514536, 0.004864524118602276, 0.0015432840446010232], "tokens": [13, 259, 334, 19884, 24094, 29889, 1938, 3078, 565, 278, 2286, 1024, 338, 697, 310, 278, 19824, 13, 259, 334, 2286, 29889, 13, 259, 3776, 13, 29871, 2024, 1780, 3349, 4591, 11403, 3644, 7717, 29898, 1231, 1024, 29892, 830, 9733, 15922, 267, 671, 29897, 426, 13, 1678, 11681, 722, 353, 6965, 15289]}
{"line_number": 218, "line_type": "original", "code": "          if (!conditional) {", "entropy": 2.4921064376831055, "is_bug_line": false, "sus_score": 0.11952286093343936, "per_token_entropy": [7.413208961486816, 3.690871238708496, 1.4583258628845215, 4.746955871582031, 0.011500728316605091, 0.08986771106719971, 0.034013859927654266], "tokens": [965, 565, 5384, 1116, 3245, 29897, 426]}
{"line_number": 218, "line_type": "generated", "code": "\n   * variable.\n   */\n  private void removeFromUseIfLocal(String name, ReachingUses use) {\n    Var var = jsScope.getVar(name);\n    if (var == null || var.scope", "entropy": 0.03223210573196411, "is_bug_line": false, "sus_score": 0.11952286093343936, "per_token_entropy": [0.3488394320011139, 0.1546342521905899, 0.488591730594635, 0.08575613796710968, 0.051830098032951355, 0.02138030156493187, 0.05152885988354683, 0.016766231507062912, 0.0024964616168290377, 0.01490821223706007, 0.02078828774392605, 0.00916334893554449, 0.0026423560921102762, 0.0009217780898325145, 0.001649092067964375, 0.002040567807853222, 0.002057222882285714, 0.003736895974725485, 0.017626307904720306, 0.0038278657011687756, 0.0017316836165264249, 0.023227278143167496, 0.0006224363460205495, 0.001110890181735158, 0.0026591201312839985, 0.034119054675102234, 0.0031659503001719713, 0.0020936252549290657, 0.0016262413701042533, 0.03138020634651184, 0.040049754083156586, 0.006328305695205927, 0.0023838456254452467, 0.005343559198081493, 0.0017005043337121606, 0.0023545895237475634, 0.002082205144688487, 0.004457063041627407, 0.0026046657003462315, 0.001849489752203226, 0.003239861223846674, 0.002727481070905924, 0.0207819826900959, 0.014823765493929386, 0.011020389385521412, 0.0071152630262076855, 0.08495820313692093, 0.0014726994559168816, 0.039006307721138, 0.013127213343977928, 0.002430463209748268, 0.003289884887635708], "tokens": [13, 259, 334, 2286, 29889, 13, 259, 3776, 13, 29871, 2024, 1780, 3349, 4591, 11403, 3644, 7717, 29898, 1231, 1024, 29892, 830, 9733, 15922, 267, 671, 29897, 426, 13, 1678, 11681, 722, 353, 6965, 15289, 29889, 657, 9037, 29898, 978, 416, 13, 1678, 565, 313, 1707, 1275, 1870, 3830, 722, 29889, 6078]}
{"line_number": 219, "line_type": "original", "code": "            removeFromUseIfLocal(varName.getString(), output);", "entropy": 1.5996438264846802, "is_bug_line": false, "sus_score": 0.11952286093343936, "per_token_entropy": [10.911551475524902, 6.2933759689331055, 0.39553070068359375, 0.0843830555677414, 0.10697770118713379, 0.008915379643440247, 0.24217039346694946, 2.3657968044281006, 1.350327730178833, 0.13454823195934296, 0.034257180988788605, 0.0318722277879715, 0.3948662579059601, 0.04044056683778763], "tokens": [632, 3349, 4591, 11403, 3644, 7717, 29898, 1707, 1170, 29889, 13719, 3285, 1962, 416]}
{"line_number": 219, "line_type": "generated", "code": "\n   */\n  private void removeFromUseIfLocal(String name, ReachingUses use) {\n    Var var = jsScope.getVar(name);\n    if (var == null || var.scope != jsScope) {", "entropy": 0.021981295198202133, "is_bug_line": false, "sus_score": 0.11952286093343936, "per_token_entropy": [0.07556325942277908, 0.4603167176246643, 0.08480741083621979, 0.0038811846170574427, 0.017224835231900215, 0.023269904777407646, 0.009628050029277802, 0.002667204709723592, 0.0008405489497818053, 0.0017955861985683441, 0.0022155519109219313, 0.0018680518260225654, 0.004045280162245035, 0.01717386394739151, 0.0034097647294402122, 0.0016499252524226904, 0.023531457409262657, 0.0005560758872888982, 0.0011431594612076879, 0.002692409558221698, 0.03466108813881874, 0.0035855784080922604, 0.0021459662821143866, 0.0017590539064258337, 0.0375467911362648, 0.04062475636601448, 0.005695424973964691, 0.002252305392175913, 0.004398433957248926, 0.0015072186943143606, 0.0021082572638988495, 0.0018518695142120123, 0.004123637918382883, 0.0022978587076067924, 0.0015672078588977456, 0.0029576150700449944, 0.0025309454649686813, 0.02156873419880867, 0.01559244841337204, 0.010891985148191452, 0.006620852276682854, 0.08118616789579391, 0.0019064837833866477, 0.03732011839747429, 0.011328893713653088, 0.0020170120988041162, 0.002894024597480893, 0.003907546401023865, 0.003155968151986599, 0.0004689785710070282, 0.05245300382375717, 0.0018209319096058607], "tokens": [13, 259, 3776, 13, 29871, 2024, 1780, 3349, 4591, 11403, 3644, 7717, 29898, 1231, 1024, 29892, 830, 9733, 15922, 267, 671, 29897, 426, 13, 1678, 11681, 722, 353, 6965, 15289, 29889, 657, 9037, 29898, 978, 416, 13, 1678, 565, 313, 1707, 1275, 1870, 3830, 722, 29889, 6078, 2804, 6965, 15289, 29897, 426]}
{"line_number": 258, "line_type": "original", "code": "      return;", "entropy": 5.198162078857422, "is_bug_line": false, "sus_score": 0.1111111111111111, "per_token_entropy": [11.622835159301758, 2.5654075145721436, 1.4062421321868896], "tokens": [539, 736, 29936]}
{"line_number": 258, "line_type": "generated", "code": "\n  /**\n   * Gets a list of nodes that may be using the value assigned to {@code name}\n   * in {@code defNode}. {@code defNode} must be one of the control flow graph\n   * nodes.\n", "entropy": 0.09034670889377594, "is_bug_line": false, "sus_score": 0.1111111111111111, "per_token_entropy": [0.060178764164447784, 0.34736132621765137, 0.5488713979721069, 0.04970794916152954, 0.005266957450658083, 0.0010417040903121233, 0.9532397389411926, 0.0024612629786133766, 0.38638049364089966, 0.1563064455986023, 0.00321597745642066, 0.3114738464355469, 0.03221661597490311, 0.12125800549983978, 0.041831158101558685, 0.1253785341978073, 0.04319185018539429, 0.07823415100574493, 0.08075730502605438, 0.015746302902698517, 0.2041761726140976, 0.0033211333211511374, 0.3597508370876312, 0.03192638233304024, 0.006010908167809248, 0.0006410212954506278, 0.0010026433737948537, 0.07530855387449265, 0.12960676848888397, 0.001632668194361031, 0.07303271442651749, 0.029915297403931618, 0.04055824875831604, 0.1556473672389984, 0.0006821212591603398, 0.0035295113921165466, 0.0008147019543685019, 0.000770391256082803, 0.0231664776802063, 0.002372904447838664, 0.005687009077519178, 0.00139318173751235, 0.001304133329540491, 0.003769555827602744, 0.0020502039697021246, 0.022273845970630646, 0.002233750419691205, 0.0017628619680181146, 0.0012738931691274047, 0.007086500059813261, 0.01578889787197113, 0.1254184991121292], "tokens": [13, 29871, 7762, 13, 259, 334, 402, 1691, 263, 1051, 310, 7573, 393, 1122, 367, 773, 278, 995, 9859, 304, 26633, 401, 1024, 29913, 13, 259, 334, 297, 26633, 401, 822, 4247, 1836, 26633, 401, 822, 4247, 29913, 1818, 367, 697, 310, 278, 2761, 4972, 3983, 13, 259, 334, 7573, 29889, 13]}
{"line_number": 276, "line_type": "original", "code": "      use.mayUseMap.removeAll(var);", "entropy": 2.042337417602539, "is_bug_line": false, "sus_score": 0.10783277320343841, "per_token_entropy": [11.351539611816406, 5.901934623718262, 1.1996614933013916, 0.2745283246040344, 0.021800173446536064, 0.029344521462917328, 0.08845356106758118, 0.3406342566013336, 2.3320324420928955, 0.042592618614435196, 2.8068442344665527, 0.11868300288915634], "tokens": [539, 671, 29889, 13029, 11403, 3388, 29889, 5992, 3596, 29898, 1707, 416]}
{"line_number": 276, "line_type": "generated", "code": "\n  /**\n   * Gets a list of nodes that may be using the value assigned to {@code name}\n   * in {@code defNode}. {@code defNode} must be one of the control flow graph\n   * nodes.\n", "entropy": 0.08500242233276367, "is_bug_line": false, "sus_score": 0.10783277320343841, "per_token_entropy": [0.05898688733577728, 0.38376933336257935, 0.48925328254699707, 0.04822263494133949, 0.004666984546929598, 0.0008661571191623807, 0.8247238397598267, 0.0020260538440197706, 0.35759320855140686, 0.15240676701068878, 0.0029368149116635323, 0.28950801491737366, 0.028139987960457802, 0.10802441835403442, 0.03957675024867058, 0.10547556728124619, 0.03353891521692276, 0.06423778831958771, 0.06830555945634842, 0.013556678779423237, 0.17799259722232819, 0.0033841028343886137, 0.42091208696365356, 0.03046458587050438, 0.00563117815181613, 0.0006119524477981031, 0.0008687774534337223, 0.07134382426738739, 0.11737626045942307, 0.001602675998583436, 0.07107038795948029, 0.028390536084771156, 0.04103834182024002, 0.1459883451461792, 0.0006181474891491234, 0.0033137667924165726, 0.0003762729174923152, 0.0008037435472942889, 0.022599294781684875, 0.002328186994418502, 0.005388497840613127, 0.001453891978599131, 0.0012428186601027846, 0.003322083968669176, 0.0020536540541797876, 0.03341060131788254, 0.0021007629111409187, 0.002064598724246025, 0.0011410161387175322, 0.0070831854827702045, 0.016401352360844612, 0.12193232774734497], "tokens": [13, 29871, 7762, 13, 259, 334, 402, 1691, 263, 1051, 310, 7573, 393, 1122, 367, 773, 278, 995, 9859, 304, 26633, 401, 1024, 29913, 13, 259, 334, 297, 26633, 401, 822, 4247, 1836, 26633, 401, 822, 4247, 29913, 1818, 367, 697, 310, 278, 2761, 4972, 3983, 13, 259, 334, 7573, 29889, 13]}
{"line_number": 213, "line_type": "original", "code": "        Node varName = n.getFirstChild();", "entropy": 2.142522096633911, "is_bug_line": false, "sus_score": 0.10660035817780521, "per_token_entropy": [10.406400680541992, 5.294403553009033, 3.6988439559936523, 1.2117828130722046, 0.23817972838878632, 2.400798797607422, 0.10740339010953903, 0.05346139147877693, 0.0493420772254467, 0.02565615065395832, 0.08147091418504715], "tokens": [308, 9071, 722, 1170, 353, 302, 29889, 657, 6730, 5938, 890]}
{"line_number": 213, "line_type": "generated", "code": "\n  }\n\n  /**\n   * Remove the variable for the given name from the upward exposed lattice.\n   * Do nothing if the variable name is one of the escaped variable.\n   */\n  private void removeFromUseIfLocal", "entropy": 0.14661426842212677, "is_bug_line": false, "sus_score": 0.10660035817780521, "per_token_entropy": [0.04685353487730026, 0.22478805482387543, 0.006730742286890745, 0.003515613032504916, 0.07446008175611496, 0.059344980865716934, 0.2968751788139343, 0.05969474837183952, 0.002393359551206231, 0.0007752750534564257, 1.988145112991333, 0.2797870337963104, 0.34200549125671387, 0.9106177687644958, 0.020116126164793968, 0.01079116016626358, 0.018179109320044518, 0.5428245067596436, 0.039984241127967834, 0.49023470282554626, 0.0089568505063653, 0.047641076147556305, 0.133759006857872, 0.16825245320796967, 0.19151809811592102, 0.00298542738892138, 1.015226125717163, 0.24734608829021454, 0.012802081182599068, 0.0148949408903718, 0.02506921999156475, 0.010642440058290958, 0.06571704149246216, 0.009298470802605152, 0.02163488231599331, 0.00209469604305923, 0.002986972453072667, 0.005117887631058693, 0.10209689289331436, 0.03369487449526787, 0.00844159908592701, 0.004658916033804417, 0.014667067676782608, 0.0024138144217431545, 0.013175451196730137, 0.017679717391729355, 0.009251581504940987, 0.0029353885911405087, 0.001358658540993929, 0.0026366491802036762, 0.004040056373924017, 0.002831024117767811], "tokens": [13, 29871, 500, 13, 13, 29871, 7762, 13, 259, 334, 15154, 278, 2286, 363, 278, 2183, 1024, 515, 278, 701, 1328, 19884, 24094, 29889, 13, 259, 334, 1938, 3078, 565, 278, 2286, 1024, 338, 697, 310, 278, 19824, 2286, 29889, 13, 259, 3776, 13, 29871, 2024, 1780, 3349, 4591, 11403, 3644, 7717]}
{"line_number": 214, "line_type": "original", "code": "        Preconditions.checkState(n.hasChildren(), \"AST should be normalized\");", "entropy": 2.3168368339538574, "is_bug_line": false, "sus_score": 0.10660035817780521, "per_token_entropy": [11.193161010742188, 10.112405776977539, 0.17807719111442566, 0.0005884823040105402, 0.006380543578416109, 0.0013688965700566769, 0.6549614071846008, 0.17111605405807495, 3.2641353607177734, 0.07305099815130234, 3.5680792331695557, 0.04966779425740242, 1.6012436151504517, 2.2586710453033447, 4.682708740234375, 3.940159797668457, 2.836956262588501, 1.334506630897522, 0.013764933682978153, 0.395732045173645], "tokens": [308, 4721, 1116, 2187, 29889, 3198, 2792, 29898, 29876, 29889, 5349, 19334, 3285, 376, 28938, 881, 367, 4226, 1891, 1496]}
{"line_number": 214, "line_type": "generated", "code": "\n\n  /**\n   * Removes the variable for the given name from the upward exposed lattice.\n   * Do nothing if the variable name is one of the escaped variable.\n   */\n  private void removeFromUseIfLocal(", "entropy": 0.1052083894610405, "is_bug_line": false, "sus_score": 0.10660035817780521, "per_token_entropy": [0.029098382219672203, 0.2515077292919159, 0.04894871264696121, 0.2244521826505661, 0.06689557433128357, 0.002320218365639448, 0.0006482883472926915, 0.8032756447792053, 0.006923139560967684, 0.000976800569333136, 0.16276659071445465, 0.22544926404953003, 0.6110103130340576, 0.011106690391898155, 0.007315514609217644, 0.013244626112282276, 0.6002252101898193, 0.02660856768488884, 0.36690500378608704, 0.007598781492561102, 0.06241648271679878, 0.20900745689868927, 0.13884006440639496, 0.08095928281545639, 0.0022991669829934835, 0.9274870157241821, 0.24787244200706482, 0.01115372870117426, 0.014270280487835407, 0.019023587927222252, 0.008800648152828217, 0.04968537762761116, 0.006698534358292818, 0.016334975138306618, 0.001211862312629819, 0.0018925628392025828, 0.004310602322220802, 0.09504454582929611, 0.025724584236741066, 0.007557610049843788, 0.0035878352355211973, 0.013992306776344776, 0.0017552459612488747, 0.009869114495813847, 0.02121482603251934, 0.007948435842990875, 0.0028921226039528847, 0.0010093123419210315, 0.0020828000269830227, 0.003508723108097911, 0.0020345004741102457, 0.003072662279009819], "tokens": [13, 13, 29871, 7762, 13, 259, 334, 5240, 586, 267, 278, 2286, 363, 278, 2183, 1024, 515, 278, 701, 1328, 19884, 24094, 29889, 13, 259, 334, 1938, 3078, 565, 278, 2286, 1024, 338, 697, 310, 278, 19824, 2286, 29889, 13, 259, 3776, 13, 29871, 2024, 1780, 3349, 4591, 11403, 3644, 7717, 29898]}
{"line_number": 216, "line_type": "original", "code": "        if (varName.hasChildren()) {", "entropy": 2.2584786415100098, "is_bug_line": false, "sus_score": 0.10660035817780521, "per_token_entropy": [8.521103858947754, 3.1329617500305176, 0.34499114751815796, 2.6678571701049805, 2.8080649375915527, 0.23102211952209473, 4.467560291290283, 0.14923006296157837, 0.2398691028356552, 0.02212437614798546], "tokens": [308, 565, 313, 1707, 1170, 29889, 5349, 19334, 3101, 426]}
{"line_number": 216, "line_type": "generated", "code": "\n   * Removes the variable for the given name from the upward exposed lattice.\n   * Do nothing if the variable name is one of the escaped variable.\n   */\n  private void removeFromUseIfLocal(String name, Re", "entropy": 0.11632679402828217, "is_bug_line": false, "sus_score": 0.10660035817780521, "per_token_entropy": [0.138179749250412, 0.23579002916812897, 0.11655373871326447, 0.779334306716919, 0.007571570575237274, 0.001177690108306706, 0.16949643194675446, 0.23512601852416992, 0.5932585000991821, 0.01155151892453432, 0.008266755379736423, 0.01277630589902401, 0.6256172060966492, 0.030882855877280235, 0.5917822122573853, 0.007653911132365465, 0.0938163697719574, 0.27305832505226135, 0.13724926114082336, 0.06069362163543701, 0.06739562004804611, 0.9559574127197266, 0.32809582352638245, 0.014023104682564735, 0.013605012558400631, 0.021899310871958733, 0.01113958191126585, 0.05947180837392807, 0.008259544149041176, 0.02135031297802925, 0.0016110072610899806, 0.00244556600227952, 0.005435212515294552, 0.09966938197612762, 0.03178446739912033, 0.009897088631987572, 0.11142751574516296, 0.028948422521352768, 0.0029114973731338978, 0.030877886340022087, 0.0198753010481596, 0.007977765053510666, 0.0033808951266109943, 0.0012238877825438976, 0.00214406312443316, 0.0026057357899844646, 0.0023290193639695644, 0.004191186279058456, 0.020081542432308197, 0.0046688830479979515, 0.0020208191126585007, 0.022452203556895256], "tokens": [13, 259, 334, 5240, 586, 267, 278, 2286, 363, 278, 2183, 1024, 515, 278, 701, 1328, 19884, 24094, 29889, 13, 259, 334, 1938, 3078, 565, 278, 2286, 1024, 338, 697, 310, 278, 19824, 2286, 29889, 13, 259, 3776, 13, 29871, 2024, 1780, 3349, 4591, 11403, 3644, 7717, 29898, 1231, 1024, 29892, 830]}
{"line_number": 222, "line_type": "original", "code": "        return;", "entropy": 4.685052394866943, "is_bug_line": false, "sus_score": 0.10660035817780521, "per_token_entropy": [9.41524600982666, 4.628777503967285, 0.01113333459943533], "tokens": [308, 736, 29936]}
{"line_number": 222, "line_type": "generated", "code": "\n    if (var == null || var.scope != jsScope) {\n      return;\n    }\n    if (!escaped.contains(var)) {\n      use.mayUseMap.remove(var);\n    }\n", "entropy": 0.04481126368045807, "is_bug_line": false, "sus_score": 0.10660035817780521, "per_token_entropy": [0.10176531225442886, 0.6407894492149353, 0.061793144792318344, 0.033610500395298004, 0.023280387744307518, 0.22638507187366486, 0.0030409307219088078, 0.0628388449549675, 0.020422538742423058, 0.0021802245173603296, 0.0031042741611599922, 0.004793580621480942, 0.0029179160483181477, 0.0003327769518364221, 0.07341992855072021, 0.002477316651493311, 0.0025176277849823236, 0.10648795962333679, 0.010443797335028648, 0.0023185533937066793, 0.0027386562433093786, 0.05044666305184364, 0.005274072289466858, 0.010763918049633503, 0.4412493407726288, 0.11276516318321228, 0.05647291615605354, 0.007807571440935135, 0.0012510338565334678, 0.0014857931528240442, 0.0021176550071686506, 0.0029601112473756075, 0.0015632801223546267, 0.001496029901318252, 0.03193435072898865, 0.0013771107187494636, 0.0032234634272754192, 0.043677639216184616, 0.06462663412094116, 0.002337463665753603, 0.01445982325822115, 0.001522573409602046, 0.002445684978738427, 0.0009298768127337098, 0.022476447746157646, 0.00743550481274724, 0.001965378178283572, 0.010671690106391907, 0.0017429888248443604, 0.02325919084250927, 0.0013296105898916721, 0.011457948945462704], "tokens": [13, 1678, 565, 313, 1707, 1275, 1870, 3830, 722, 29889, 6078, 2804, 6965, 15289, 29897, 426, 13, 418, 736, 29936, 13, 1678, 500, 13, 1678, 565, 5384, 267, 5030, 287, 29889, 11516, 29898, 1707, 876, 426, 13, 418, 671, 29889, 13029, 11403, 3388, 29889, 5992, 29898, 1707, 416, 13, 1678, 500, 13]}
{"line_number": 275, "line_type": "original", "code": "    if (!escaped.contains(var)) {", "entropy": 1.2916525602340698, "is_bug_line": false, "sus_score": 0.105999788000636, "per_token_entropy": [9.360896110534668, 3.519956588745117, 1.903703212738037, 0.5011558532714844, 0.0030954801477491856, 0.006425435654819012, 0.0249498151242733, 0.0324990339577198, 0.004900824744254351, 0.08088177442550659, 0.04037805646657944, 0.02098827250301838], "tokens": [268, 565, 5384, 267, 5030, 287, 29889, 11516, 29898, 1707, 876, 426]}
{"line_number": 275, "line_type": "generated", "code": "\n  /**\n   * Gets a list of nodes that may be using the value assigned to {@code name}\n   * in {@code defNode}. {@code defNode} must be one of the control flow graph\n   * nodes.\n", "entropy": 0.07639434188604355, "is_bug_line": false, "sus_score": 0.105999788000636, "per_token_entropy": [0.0792791098356247, 0.4561840295791626, 0.5686208009719849, 0.047614023089408875, 0.004969032481312752, 0.0007497837068513036, 0.7427948117256165, 0.0018950614612549543, 0.291266530752182, 0.12174838036298752, 0.0026737437583506107, 0.22960048913955688, 0.02301108092069626, 0.07651107758283615, 0.034303028136491776, 0.07414732128381729, 0.02772810496389866, 0.04915471747517586, 0.04800734668970108, 0.01057190541177988, 0.12376867979764938, 0.002782760886475444, 0.3605007529258728, 0.027461733669042587, 0.004689646884799004, 0.0007306052139028907, 0.0009958551963791251, 0.05292696878314018, 0.08229414373636246, 0.0016882466152310371, 0.05203947424888611, 0.01954510621726513, 0.03266796097159386, 0.12174078077077866, 0.0006462631281465292, 0.0028148575220257044, 0.00038187362952157855, 0.0007949291029945016, 0.017468174919486046, 0.002010825788602233, 0.004417186137288809, 0.0014153235824778676, 0.0012562725460156798, 0.0027939353603869677, 0.0019014865392819047, 0.029745787382125854, 0.002003925619646907, 0.002139661693945527, 0.0011850723531097174, 0.006397245451807976, 0.014103270135819912, 0.10636631399393082], "tokens": [13, 29871, 7762, 13, 259, 334, 402, 1691, 263, 1051, 310, 7573, 393, 1122, 367, 773, 278, 995, 9859, 304, 26633, 401, 1024, 29913, 13, 259, 334, 297, 26633, 401, 822, 4247, 1836, 26633, 401, 822, 4247, 29913, 1818, 367, 697, 310, 278, 2761, 4972, 3983, 13, 259, 334, 7573, 29889, 13]}
{"line_number": 278, "line_type": "original", "code": "  }", "entropy": 5.302731037139893, "is_bug_line": false, "sus_score": 0.105999788000636, "per_token_entropy": [7.03312873840332, 3.572333335876465], "tokens": [259, 500]}
{"line_number": 278, "line_type": "generated", "code": "\n\n  /**\n   * Gets a list of nodes that may be using the value assigned to {@code name}\n   * in {@code defNode}. {@code defNode} must be one of the control flow graph\n   * nodes.", "entropy": 0.07237426191568375, "is_bug_line": false, "sus_score": 0.105999788000636, "per_token_entropy": [0.05654006451368332, 0.28481581807136536, 0.09910274296998978, 0.3049265146255493, 0.058281563222408295, 0.0018022499280050397, 0.0004117832868359983, 0.7362040877342224, 0.0019945267122238874, 0.3358665406703949, 0.1447852998971939, 0.0026121563278138638, 0.23601789772510529, 0.026824800297617912, 0.07764111459255219, 0.032997194677591324, 0.07989230751991272, 0.03294656053185463, 0.057607922703027725, 0.05782756954431534, 0.01291870791465044, 0.1647263914346695, 0.0027249844279140234, 0.42362549901008606, 0.024178635329008102, 0.004016666207462549, 0.00025340684805996716, 0.00040082051418721676, 0.06904368102550507, 0.09673676639795303, 0.0010241983691230416, 0.0596986785531044, 0.025071196258068085, 0.04750410094857216, 0.12791654467582703, 0.00034731553751043975, 0.003022746881470084, 0.0002706876548472792, 0.0004493180604185909, 0.013755057007074356, 0.001416394836269319, 0.0038908030837774277, 0.0012256737099960446, 0.0007901645149104297, 0.0023363931104540825, 0.0015892268856987357, 0.021932898089289665, 0.0012997282901778817, 0.0009082006872631609, 0.0006104036583565176, 0.005552583374083042, 0.015124875120818615], "tokens": [13, 13, 29871, 7762, 13, 259, 334, 402, 1691, 263, 1051, 310, 7573, 393, 1122, 367, 773, 278, 995, 9859, 304, 26633, 401, 1024, 29913, 13, 259, 334, 297, 26633, 401, 822, 4247, 1836, 26633, 401, 822, 4247, 29913, 1818, 367, 697, 310, 278, 2761, 4972, 3983, 13, 259, 334, 7573, 29889]}
