{"line_number": 302, "line_type": "original", "code": "            return false;", "entropy": 4.400732517242432, "is_bug_line": false, "sus_score": 0.9354143466934853, "per_token_entropy": [12.631489753723145, 2.3263680934906006, 2.6373045444488525, 0.00776711804792285], "tokens": [632, 736, 2089, 29936]}
{"line_number": 302, "line_type": "generated", "code": "\n  /**\n   * Given a variable, node n in the tree and a sub-tree denoted by exprRoot as\n   * the root, this function returns true if there exists a read of that\n   * variable before a write to that variable", "entropy": 0.15018101036548615, "is_bug_line": false, "sus_score": 0.9354143466934853, "per_token_entropy": [0.041801661252975464, 0.31341806054115295, 0.6732795834541321, 0.03516703471541405, 0.005989104975014925, 0.000502817565575242, 1.808361291885376, 0.3516709506511688, 1.4680999517440796, 0.7502752542495728, 0.5963278412818909, 0.03638796880841255, 0.10695188492536545, 0.004953612107783556, 0.021597201004624367, 0.10613295435905457, 0.04109726473689079, 0.01787891797721386, 0.00881990883499384, 0.0005301024066284299, 0.015231838449835777, 0.006458481773734093, 0.03347908332943916, 0.0012419852428138256, 0.10367095470428467, 0.002037355676293373, 0.0010221739066764712, 0.0003545847721397877, 0.002520957263186574, 0.0012275787303224206, 0.02279052697122097, 0.058129165321588516, 0.009155670180916786, 0.08442403376102448, 0.112480029463768, 0.009132281877100468, 0.09713990241289139, 0.05119321122765541, 0.052662815898656845, 0.3684147894382477, 0.02611127868294716, 0.009113145060837269, 0.009838777594268322, 0.00047136162174865603, 0.0004146431456319988, 0.0028024944476783276, 0.24743163585662842, 0.05779685452580452, 0.020535361021757126, 0.008564290590584278, 0.0029604677110910416, 0.0013611585600301623], "tokens": [13, 29871, 7762, 13, 259, 334, 11221, 263, 2286, 29892, 2943, 302, 297, 278, 5447, 322, 263, 1014, 29899, 8336, 27291, 491, 22010, 10303, 408, 13, 259, 334, 278, 3876, 29892, 445, 740, 3639, 1565, 565, 727, 4864, 263, 1303, 310, 393, 13, 259, 334, 2286, 1434, 263, 2436, 304, 393, 2286]}
{"line_number": 330, "line_type": "original", "code": "        return VariableLiveness.KILL;", "entropy": 1.6738454103469849, "is_bug_line": true, "sus_score": 0.9354143466934853, "per_token_entropy": [11.815381050109863, 2.3087334632873535, 0.25042855739593506, 0.003218710422515869, 0.005731695331633091, 0.00386040355078876, 0.6671347618103027, 0.0031341025605797768, 0.006985645741224289], "tokens": [308, 736, 28736, 29931, 20193, 29889, 29968, 24071, 29936]}
{"line_number": 330, "line_type": "generated", "code": "\n\n  /**\n   * Given a node, this function returns the root of the expression tree that\n   * contains the node.\n   */\n  private Node getExpressionRoot(Node n) {\n    Node parent = n.getParent", "entropy": 0.503972053527832, "is_bug_line": true, "sus_score": 0.9354143466934853, "per_token_entropy": [0.04587569460272789, 0.9514632821083069, 0.09682495892047882, 0.5479736328125, 0.041235461831092834, 0.00386800360865891, 0.00027581225731410086, 1.8264729976654053, 0.3540523946285248, 1.344380259513855, 1.3710170984268188, 1.752130150794983, 0.22544735670089722, 0.744655430316925, 1.2851829528808594, 2.5696558952331543, 0.21344780921936035, 0.30498844385147095, 1.0405412912368774, 0.8920111656188965, 1.656994104385376, 0.1402239352464676, 0.0007060657371766865, 0.001328777172602713, 1.2577928304672241, 1.0597786903381348, 0.349475622177124, 0.254851371049881, 0.6701087951660156, 0.004254694562405348, 0.49414509534835815, 0.002054129960015416, 0.013314737007021904, 0.07892676442861557, 0.19216763973236084, 0.1812281459569931, 1.2317850589752197, 0.14038410782814026, 0.0977100357413292, 0.008765080012381077, 0.11105794459581375, 0.04169830307364464, 0.0023538758978247643, 0.0027331875171512365, 0.04046953096985817, 1.0369646549224854, 1.3049792051315308, 0.041856881231069565, 0.04404217004776001, 0.12819920480251312, 0.0013955625472590327, 0.0033021229319274426], "tokens": [13, 13, 29871, 7762, 13, 259, 334, 11221, 263, 2943, 29892, 445, 740, 3639, 278, 3876, 310, 278, 4603, 5447, 393, 13, 259, 334, 3743, 278, 2943, 29889, 13, 259, 3776, 13, 29871, 2024, 9071, 679, 10960, 10303, 29898, 4247, 302, 29897, 426, 13, 1678, 9071, 3847, 353, 302, 29889, 657, 9780]}
{"line_number": 301, "line_type": "original", "code": "          } else if (state == VariableLiveness.KILL) {", "entropy": 1.8630324602127075, "is_bug_line": false, "sus_score": 0.8366600265340756, "per_token_entropy": [12.444192886352539, 1.7859097719192505, 5.306506633758545, 0.7316388487815857, 0.0441693514585495, 4.613775253295898, 0.7532541155815125, 0.8107236623764038, 0.22481966018676758, 0.00779763562604785, 0.005757533945143223, 1.0671319961547852, 0.0034701151307672262, 0.13691052794456482, 0.009428142569959164], "tokens": [965, 500, 1683, 565, 313, 3859, 1275, 28736, 29931, 20193, 29889, 29968, 24071, 29897, 426]}
{"line_number": 301, "line_type": "generated", "code": "\n  private boolean isAssignableExpression(Node n) {\n    if (n.isName()) {\n      return true;\n    } else if (n.isGetProp() || n.isGetElem()) {\n     ", "entropy": 0.3356238007545471, "is_bug_line": false, "sus_score": 0.8366600265340756, "per_token_entropy": [0.04937611520290375, 0.2781115770339966, 1.2356908321380615, 1.091504693031311, 0.5026415586471558, 2.234117031097412, 1.0803029537200928, 1.4379884004592896, 1.3451379537582397, 0.06040985509753227, 0.04753740876913071, 0.15267275273799896, 0.13448186218738556, 0.0016912217251956463, 0.0022973830346018076, 0.030682066455483437, 1.2564115524291992, 0.13787518441677094, 0.816658616065979, 0.26679548621177673, 0.3440980017185211, 0.9240626692771912, 0.49950674176216125, 0.007112185470759869, 0.014000065624713898, 0.012874930165708065, 0.1785244345664978, 0.24663148820400238, 0.002169756917282939, 0.01633439026772976, 0.034429844468832016, 0.0015791100449860096, 0.5518502593040466, 0.09687971323728561, 0.031107179820537567, 0.3721529543399811, 0.004069500602781773, 0.025637444108724594, 0.1955396980047226, 0.06132403761148453, 0.9855951070785522, 0.37552016973495483, 0.07554999738931656, 0.0012885371688753366, 0.002336274366825819, 0.05154459923505783, 0.01611669734120369, 2.372236667724792e-05, 0.1423519402742386, 0.0023503080010414124, 0.004034238401800394, 0.013456003740429878], "tokens": [13, 29871, 2024, 7223, 338, 7900, 647, 519, 10960, 29898, 4247, 302, 29897, 426, 13, 1678, 565, 313, 29876, 29889, 275, 1170, 3101, 426, 13, 418, 736, 1565, 29936, 13, 1678, 500, 1683, 565, 313, 29876, 29889, 275, 2577, 20420, 580, 3830, 302, 29889, 275, 2577, 29923, 2409, 3101, 426, 13, 418]}
{"line_number": 326, "line_type": "original", "code": "      if (NodeUtil.isLhs(n, n.getParent())) {", "entropy": 1.675267219543457, "is_bug_line": true, "sus_score": 0.7977240352174656, "per_token_entropy": [10.237712860107422, 2.909900188446045, 0.12212067097425461, 0.9424418210983276, 0.0016764646861702204, 0.0023267597425729036, 0.027949079871177673, 6.949557304382324, 1.2814908027648926, 0.871519923210144, 0.2336331158876419, 1.2273120880126953, 4.480358123779297, 0.18130303919315338, 0.03002103790640831, 0.07068448513746262, 0.5771471858024597, 0.007655093912035227], "tokens": [539, 565, 313, 4247, 7270, 29889, 275, 29931, 9499, 29898, 29876, 29892, 302, 29889, 657, 9780, 22130, 426]}
{"line_number": 326, "line_type": "generated", "code": "\n\n  /**\n   * Determines if a node is a simple expression, and if so, returns the\n   * node.\n   *\n   * @param n The node to be evaluated.\n   * @return If the node", "entropy": 0.8126245737075806, "is_bug_line": true, "sus_score": 0.7977240352174656, "per_token_entropy": [0.06578391045331955, 1.4102556705474854, 0.11021258682012558, 0.6140630841255188, 0.04039832204580307, 0.005077206529676914, 0.0005831210291944444, 3.5882668495178223, 0.08877017349004745, 0.42676013708114624, 0.7222076058387756, 1.4105693101882935, 1.5494070053100586, 0.7489356398582458, 0.8221790790557861, 2.5702078342437744, 2.700207233428955, 2.65360164642334, 2.8554415702819824, 1.0003844499588013, 0.2642327845096588, 0.9286531209945679, 0.5378503799438477, 1.017887830734253, 0.6136952638626099, 0.0006922471220605075, 0.00033968876232393086, 2.6122822761535645, 1.0236294269561768, 1.3808059692382812, 0.002258965978398919, 0.550115704536438, 0.2746691107749939, 0.0009355935617350042, 0.0029659350402653217, 0.8262985348701477, 0.19531968235969543, 0.2239047735929489, 0.4235256612300873, 0.1902586668729782, 0.3371848464012146, 2.1879465579986572, 1.6408623456954956, 0.269388884305954, 0.013853232376277447, 0.0006693744799122214, 0.09657778590917587, 0.03155486658215523, 0.10601255297660828, 2.295815944671631, 0.6462686061859131, 0.1767096072435379], "tokens": [13, 13, 29871, 7762, 13, 259, 334, 5953, 837, 1475, 565, 263, 2943, 338, 263, 2560, 4603, 29892, 322, 565, 577, 29892, 3639, 278, 13, 259, 334, 2943, 29889, 13, 259, 334, 13, 259, 334, 732, 3207, 302, 450, 2943, 304, 367, 19030, 29889, 13, 259, 334, 732, 2457, 960, 278, 2943]}
{"line_number": 339, "line_type": "original", "code": "      if (!ControlFlowGraph.isEnteringNewCfgNode(child)) { // Not a FUNCTION", "entropy": 1.7912044525146484, "is_bug_line": false, "sus_score": 0.7977240352174656, "per_token_entropy": [10.876787185668945, 2.9806838035583496, 2.3030192852020264, 1.3262995481491089, 0.0030134764965623617, 0.007632498629391193, 0.006014581304043531, 0.00494946027174592, 0.01001051440834999, 0.0012661544606089592, 0.004665441811084747, 0.003900540294125676, 0.0039530242793262005, 0.006895554717630148, 0.004154978785663843, 2.5172739028930664, 0.05261124297976494, 0.03020888939499855, 7.2209696769714355, 5.456810474395752, 1.6456940174102783, 6.337630271911621, 0.39325833320617676], "tokens": [539, 565, 5384, 4809, 17907, 9527, 29889, 275, 10399, 292, 4373, 29907, 16434, 4247, 29898, 5145, 876, 426, 849, 2216, 263, 383, 28700]}
{"line_number": 339, "line_type": "generated", "code": "\n  /**\n   * Try to remove an assignment from the tree.\n   *\n   * @param n The node to remove the assignment from.\n   * @param exprRoot The root of the sub-tree to remove the assignment from.", "entropy": 0.600341260433197, "is_bug_line": false, "sus_score": 0.7977240352174656, "per_token_entropy": [0.06417819857597351, 0.5574079155921936, 0.7027209401130676, 0.03347412496805191, 0.0068922401405870914, 0.0005822870298288763, 3.0068986415863037, 0.12061323970556259, 0.8461867570877075, 1.8313313722610474, 0.5869089961051941, 2.8117451667785645, 0.9614396095275879, 1.5264549255371094, 0.6429376602172852, 0.7440412044525146, 0.004335290752351284, 0.17792993783950806, 0.4338245093822479, 0.0027971449308097363, 0.009822252206504345, 0.6021662950515747, 0.11879532784223557, 1.5092236995697021, 0.22404465079307556, 1.2365365028381348, 0.8873331546783447, 1.6496583223342896, 1.7103078365325928, 0.13970418274402618, 0.2925381362438202, 0.12492707371711731, 0.07469829171895981, 0.0017799977213144302, 0.19954000413417816, 0.015046200715005398, 0.16025568544864655, 0.8440030813217163, 0.04472010210156441, 0.10296688973903656, 0.952186107635498, 0.15308956801891327, 0.0715009868144989, 0.777351438999176, 0.5284167528152466, 0.09993240982294083, 2.0537333488464355, 0.9834107160568237, 0.255665123462677, 0.0981728658080101, 0.19688443839550018, 0.03663036972284317], "tokens": [13, 29871, 7762, 13, 259, 334, 3967, 304, 3349, 385, 12827, 515, 278, 5447, 29889, 13, 259, 334, 13, 259, 334, 732, 3207, 302, 450, 2943, 304, 3349, 278, 12827, 515, 29889, 13, 259, 334, 732, 3207, 22010, 10303, 450, 3876, 310, 278, 1014, 29899, 8336, 304, 3349, 278, 12827, 515, 29889]}
{"line_number": 340, "line_type": "original", "code": "        VariableLiveness state = isVariableReadBeforeKill(child, variable);", "entropy": 1.2578725814819336, "is_bug_line": false, "sus_score": 0.7977240352174656, "per_token_entropy": [11.7736177444458, 4.086296558380127, 0.010415955446660519, 0.0033709153067320585, 0.05139604210853577, 0.0485757477581501, 1.9926575422286987, 0.018061339855194092, 0.009187091141939163, 0.003711242461577058, 0.0023534002248197794, 0.001007287879474461, 0.006597522646188736, 3.263240337371826, 0.011788938194513321, 0.08839310705661774, 0.013162273913621902], "tokens": [308, 28736, 29931, 20193, 2106, 353, 338, 16174, 6359, 18743, 29968, 453, 29898, 5145, 29892, 2286, 416]}
{"line_number": 340, "line_type": "generated", "code": "\n\n  private void tryRemoveAssignment(\n      NodeTraversal t, Node n, Node exprRoot, boolean state) {\n    if (NodeUtil.isAssignmentOp(n) &&\n        NodeUtil.isName(", "entropy": 0.3654506802558899, "is_bug_line": false, "sus_score": 0.7977240352174656, "per_token_entropy": [0.06279619038105011, 1.0068156719207764, 0.10253617912530899, 1.2984042167663574, 1.247412919998169, 0.9629148840904236, 1.4009279012680054, 1.1374095678329468, 0.1624850332736969, 0.1306779831647873, 0.7548644542694092, 0.02696707285940647, 0.9576274156570435, 0.046434495598077774, 0.0013635394861921668, 8.248942322097719e-05, 0.016896110028028488, 0.00037865620106458664, 0.03464266285300255, 0.07711096107959747, 0.004970100242644548, 0.028811411932110786, 0.06474094837903976, 0.009370867162942886, 0.012668373063206673, 2.749297857284546, 0.665616512298584, 0.010547841899096966, 0.008365707471966743, 0.0021885510068386793, 0.1718706339597702, 0.8305475115776062, 0.19191569089889526, 0.4987667202949524, 0.0005905076395720243, 0.0007571690948680043, 0.011329954490065575, 0.3875076174736023, 0.1083965003490448, 0.08411656320095062, 0.000623032043222338, 0.0037043539341539145, 1.0116366147994995, 0.4328646659851074, 0.7257445454597473, 0.04106660187244415, 0.7874923944473267, 0.0006623458466492593, 0.0006949870148673654, 0.19197984039783478, 0.5163952112197876, 0.019444916397333145], "tokens": [13, 13, 29871, 2024, 1780, 1018, 15941, 7900, 10194, 29898, 13, 418, 9071, 5323, 874, 284, 260, 29892, 9071, 302, 29892, 9071, 22010, 10303, 29892, 7223, 2106, 29897, 426, 13, 1678, 565, 313, 4247, 7270, 29889, 275, 7900, 10194, 11746, 29898, 29876, 29897, 2607, 13, 4706, 9071, 7270, 29889, 275, 1170, 29898]}
{"line_number": 341, "line_type": "original", "code": "        if (state != VariableLiveness.MAYBE_LIVE) {", "entropy": 1.2586814165115356, "is_bug_line": false, "sus_score": 0.7977240352174656, "per_token_entropy": [11.277692794799805, 3.4294180870056152, 0.1562415063381195, 3.1473593711853027, 1.8987798690795898, 0.09738683700561523, 0.0030040873680263758, 0.007980248890817165, 0.0025541323702782393, 1.1886067390441895, 0.0015936305280774832, 0.0033169749658554792, 0.0026347467210143805, 0.001157686347141862, 0.005827816668897867, 0.14962705969810486, 0.024401560425758362], "tokens": [308, 565, 313, 3859, 2804, 28736, 29931, 20193, 29889, 1529, 29979, 15349, 29918, 5265, 12064, 29897, 426]}
{"line_number": 341, "line_type": "generated", "code": "\n\n  /**\n   * Given a node n, if it is an assignment to a variable, return the variable\n   * name.\n   */\n  private String getAssignName(Node n) {\n    if (NodeUtil.", "entropy": 0.596149742603302, "is_bug_line": false, "sus_score": 0.7977240352174656, "per_token_entropy": [0.05116795748472214, 1.2310330867767334, 0.11352525651454926, 0.624388575553894, 0.045017700642347336, 0.00429149204865098, 0.0005218812730163336, 1.8048495054244995, 0.3566872477531433, 1.3096990585327148, 1.089646339416504, 0.9108922481536865, 2.991243839263916, 1.0525658130645752, 0.3663073182106018, 1.1937074661254883, 0.6628722548484802, 1.819767713546753, 0.24360856413841248, 0.5059415698051453, 0.7624635100364685, 1.6990323066711426, 0.5795919895172119, 0.9838356375694275, 0.42914214730262756, 0.0009735850035212934, 0.004531471990048885, 0.2826394736766815, 0.5465090274810791, 1.667721152305603, 0.002228159923106432, 0.2755034267902374, 0.0012281740782782435, 0.01084198709577322, 0.09777490049600601, 0.41072791814804077, 0.2500666677951813, 0.9531987309455872, 1.940812349319458, 2.0442593097686768, 0.1382555365562439, 0.004813036881387234, 0.011710001155734062, 0.05493827536702156, 0.0024120304733514786, 0.002110993256792426, 0.02963458001613617, 0.664508044719696, 0.23704113066196442, 0.5298421382904053, 0.001450439915060997, 0.00225242436863482], "tokens": [13, 13, 29871, 7762, 13, 259, 334, 11221, 263, 2943, 302, 29892, 565, 372, 338, 385, 12827, 304, 263, 2286, 29892, 736, 278, 2286, 13, 259, 334, 1024, 29889, 13, 259, 3776, 13, 29871, 2024, 1714, 679, 7900, 647, 1170, 29898, 4247, 302, 29897, 426, 13, 1678, 565, 313, 4247, 7270, 29889]}
{"line_number": 342, "line_type": "original", "code": "          return state;", "entropy": 4.382335186004639, "is_bug_line": false, "sus_score": 0.7977240352174656, "per_token_entropy": [12.540846824645996, 2.3129687309265137, 2.637239694595337, 0.0382869690656662], "tokens": [965, 736, 2106, 29936]}
{"line_number": 342, "line_type": "generated", "code": "\n\n  /**\n   * Given a node, it returns true if the node is a call to a function that\n   * has a side effect.\n   */\n  private boolean isNodeWithSideEffect(Node n) {\n    if", "entropy": 0.6209527850151062, "is_bug_line": false, "sus_score": 0.7977240352174656, "per_token_entropy": [0.05732136592268944, 1.439491629600525, 0.1203070878982544, 0.6046879887580872, 0.04494054615497589, 0.004195460118353367, 0.00033539868309162557, 1.8505778312683105, 0.3620571792125702, 1.3528987169265747, 1.369248628616333, 1.7402873039245605, 0.75725257396698, 1.2551724910736084, 0.05581947788596153, 0.8857560157775879, 0.331234872341156, 0.6071380972862244, 0.7822516560554504, 2.7122271060943604, 1.0843122005462646, 1.0991164445877075, 1.2316181659698486, 1.018282413482666, 0.2401757389307022, 0.0011364913079887629, 0.0004345426568761468, 2.313075304031372, 1.3899017572402954, 0.8341904878616333, 0.48881644010543823, 0.47041699290275574, 0.4567859172821045, 0.007513951975852251, 0.23041287064552307, 0.0007658647373318672, 0.018037807196378708, 0.10863885283470154, 0.1388695240020752, 0.6348599195480347, 2.216827154159546, 0.719167172908783, 0.048496365547180176, 0.0031413515098392963, 0.2784437835216522, 0.01307061966508627, 0.08430920541286469, 0.06621165573596954, 0.0017552459612488747, 0.0018692417070269585, 0.06170976161956787, 0.693976879119873], "tokens": [13, 13, 29871, 7762, 13, 259, 334, 11221, 263, 2943, 29892, 372, 3639, 1565, 565, 278, 2943, 338, 263, 1246, 304, 263, 740, 393, 13, 259, 334, 756, 263, 2625, 2779, 29889, 13, 259, 3776, 13, 29871, 2024, 7223, 338, 4247, 3047, 23908, 13971, 29898, 4247, 302, 29897, 426, 13, 1678, 565]}
{"line_number": 295, "line_type": "original", "code": "        if (!ControlFlowGraph.isEnteringNewCfgNode(sibling)) {", "entropy": 1.1704223155975342, "is_bug_line": false, "sus_score": 0.7337993857053429, "per_token_entropy": [10.205854415893555, 3.1466991901397705, 2.2028565406799316, 0.516814112663269, 0.0008030288736335933, 0.003746040863916278, 0.002655553398653865, 0.007864699698984623, 0.062665194272995, 0.000750736624468118, 0.011479397304356098, 0.00617643166333437, 0.002917678328230977, 0.009733478538691998, 0.002614772180095315, 6.987100601196289, 0.01104962918907404, 0.009564056061208248, 0.2038869857788086, 0.01321321539580822], "tokens": [308, 565, 5384, 4809, 17907, 9527, 29889, 275, 10399, 292, 4373, 29907, 16434, 4247, 29898, 29879, 747, 1847, 876, 426]}
{"line_number": 295, "line_type": "generated", "code": "\n    }\n    return VariableLiveness.MAYBE_LIVE;\n  }\n\n  /**\n   * This function returns true if the variable is live before the\n   * current node.\n   */\n  private boolean is", "entropy": 0.41898152232170105, "is_bug_line": false, "sus_score": 0.7337993857053429, "per_token_entropy": [0.04960472509264946, 0.10797219723463058, 0.017329582944512367, 0.002925998531281948, 0.49793457984924316, 0.0262944083660841, 0.005900227930396795, 0.0018784035928547382, 0.003958011511713266, 0.0014838885981589556, 0.0015460216673091054, 0.0009008163469843566, 0.0021548878867179155, 0.0014348459662869573, 0.0021219374611973763, 0.002457695547491312, 0.0015944637125357985, 0.00503723556175828, 0.02387523651123047, 0.0031070075929164886, 0.0051854876801371574, 0.0532369427382946, 0.06026328355073929, 0.42076927423477173, 0.033522315323352814, 0.0035091983154416084, 0.00038378025055862963, 2.822720766067505, 0.5436092019081116, 1.3969253301620483, 0.3940722346305847, 0.08897664397954941, 0.8156429529190063, 1.9895844459533691, 0.4703609049320221, 2.4862048625946045, 2.0756020545959473, 0.6160133481025696, 1.9554212093353271, 0.0005222387262620032, 0.001023364719003439, 2.250061511993408, 0.5902482867240906, 0.7198920249938965, 0.6090133190155029, 0.004353450611233711, 0.46359795331954956, 0.0007444233051501215, 0.016243143007159233, 0.04657070338726044, 0.03522101044654846, 0.05803322046995163], "tokens": [13, 1678, 500, 13, 1678, 736, 28736, 29931, 20193, 29889, 1529, 29979, 15349, 29918, 5265, 12064, 29936, 13, 29871, 500, 13, 13, 29871, 7762, 13, 259, 334, 910, 740, 3639, 1565, 565, 278, 2286, 338, 5735, 1434, 278, 13, 259, 334, 1857, 2943, 29889, 13, 259, 3776, 13, 29871, 2024, 7223, 338]}
{"line_number": 296, "line_type": "original", "code": "          VariableLiveness state = isVariableReadBeforeKill(sibling, variable);", "entropy": 1.3197072744369507, "is_bug_line": false, "sus_score": 0.7337993857053429, "per_token_entropy": [11.313152313232422, 6.18789529800415, 0.010681243613362312, 0.008371618576347828, 0.20290233194828033, 0.05890698358416557, 0.8915097713470459, 0.04620436578989029, 0.04637327045202255, 0.011590876616537571, 0.006239577196538448, 0.0019520529313012958, 0.016942055895924568, 5.9838547706604, 0.1063268706202507, 0.03378327190876007, 0.018432868644595146, 0.12055797874927521, 0.008759408257901669], "tokens": [965, 28736, 29931, 20193, 2106, 353, 338, 16174, 6359, 18743, 29968, 453, 29898, 29879, 747, 1847, 29892, 2286, 416]}
{"line_number": 296, "line_type": "generated", "code": "\n    return VariableLiveness.MAYBE_LIVE;\n  }\n\n  /**\n   * Given a variable, node n in the tree and a sub-tree denoted by exprRoot as\n   * the root, this function returns", "entropy": 0.13124822080135345, "is_bug_line": false, "sus_score": 0.7337993857053429, "per_token_entropy": [0.0397263839840889, 0.3767482340335846, 0.11957116425037384, 0.015649134293198586, 0.002612750744447112, 0.005962560884654522, 0.002285489346832037, 0.0032263153698295355, 0.0014415121404454112, 0.0037879636511206627, 0.003134934464469552, 0.0014771036803722382, 0.002442355267703533, 0.0023493566550314426, 0.015443031676113605, 0.028591670095920563, 0.003333846339955926, 0.008938183076679707, 0.08872795850038528, 0.061057157814502716, 0.56888747215271, 0.03453338146209717, 0.003287864848971367, 0.0005347490659914911, 1.6211458444595337, 0.41199207305908203, 1.306902289390564, 0.7457503080368042, 0.5748082399368286, 0.037321727722883224, 0.11056987941265106, 0.005620746873319149, 0.02128169685602188, 0.08694234490394592, 0.03652290999889374, 0.01445077545940876, 0.009014030918478966, 0.000536655425094068, 0.01637895405292511, 0.00613081781193614, 0.03154562786221504, 0.0011979315895587206, 0.11471056193113327, 0.0017559599364176393, 0.00031323294388130307, 0.00017891713650897145, 0.00292801926843822, 0.0011564955348148942, 0.05209910869598389, 0.10057318210601807, 0.01293788943439722, 0.1063903197646141], "tokens": [13, 1678, 736, 28736, 29931, 20193, 29889, 1529, 29979, 15349, 29918, 5265, 12064, 29936, 13, 29871, 500, 13, 13, 29871, 7762, 13, 259, 334, 11221, 263, 2286, 29892, 2943, 302, 297, 278, 5447, 322, 263, 1014, 29899, 8336, 27291, 491, 22010, 10303, 408, 13, 259, 334, 278, 3876, 29892, 445, 740, 3639]}
{"line_number": 299, "line_type": "original", "code": "          if (state == VariableLiveness.READ) {", "entropy": 1.719822883605957, "is_bug_line": false, "sus_score": 0.7337993857053429, "per_token_entropy": [12.297632217407227, 3.1320667266845703, 0.16822676360607147, 3.2045063972473145, 0.3087831437587738, 0.07054562866687775, 0.002605379093438387, 0.004100962076336145, 0.002179510658606887, 1.0257725715637207, 0.40958285331726074, 0.0118715213611722], "tokens": [965, 565, 313, 3859, 1275, 28736, 29931, 20193, 29889, 16310, 29897, 426]}
{"line_number": 299, "line_type": "generated", "code": "\n  /**\n   * Given a variable, node n in the tree and a sub-tree denoted by exprRoot as\n   * the root, this function returns true if there exists a read of that\n   * variable before a write to that variable", "entropy": 0.15525372326374054, "is_bug_line": false, "sus_score": 0.7337993857053429, "per_token_entropy": [0.03983086347579956, 0.7627524137496948, 0.7585415840148926, 0.03578361123800278, 0.008959213271737099, 0.0005323661607690156, 1.7694320678710938, 0.3505575954914093, 1.4714689254760742, 0.7220672369003296, 0.5638455748558044, 0.0357939638197422, 0.10776853561401367, 0.00497377710416913, 0.02132919244468212, 0.09342557191848755, 0.03572644665837288, 0.015701357275247574, 0.008459093980491161, 0.0004919749335385859, 0.01422950066626072, 0.006172640714794397, 0.03321758657693863, 0.0011723319767042994, 0.11718617379665375, 0.0018712644232437015, 0.0013679441763088107, 0.00039283663500100374, 0.002293933881446719, 0.00118900160305202, 0.01969519816339016, 0.05260004848241806, 0.00792052410542965, 0.07171915471553802, 0.10373403877019882, 0.008696540258824825, 0.09157795459032059, 0.04641515016555786, 0.04724022001028061, 0.31469273567199707, 0.023611795157194138, 0.008239207789301872, 0.009979946538805962, 0.000546425289940089, 0.000789688085205853, 0.0027814533095806837, 0.206443652510643, 0.043749187141656876, 0.015474020503461361, 0.0071005853824317455, 0.00231879111379385, 0.0013328249333426356], "tokens": [13, 29871, 7762, 13, 259, 334, 11221, 263, 2286, 29892, 2943, 302, 297, 278, 5447, 322, 263, 1014, 29899, 8336, 27291, 491, 22010, 10303, 408, 13, 259, 334, 278, 3876, 29892, 445, 740, 3639, 1565, 565, 727, 4864, 263, 1303, 310, 393, 13, 259, 334, 2286, 1434, 263, 2436, 304, 393, 2286]}
{"line_number": 325, "line_type": "original", "code": "    if (NodeUtil.isName(n) && variable.equals(n.getString())) {", "entropy": 0.9023714661598206, "is_bug_line": false, "sus_score": 0.7337993857053429, "per_token_entropy": [9.170438766479492, 3.10391902923584, 0.09581584483385086, 0.813657820224762, 0.001375206047669053, 0.0019154074834659696, 0.026693766936659813, 1.989896297454834, 0.07345781475305557, 0.05723040550947189, 0.8680768609046936, 0.28169476985931396, 2.283403158187866, 0.040226686745882034, 0.007368648424744606, 0.003760767402127385, 0.029819844290614128, 0.0021777264773845673, 0.04132331162691116, 0.04891851544380188, 0.008629649877548218], "tokens": [268, 565, 313, 4247, 7270, 29889, 275, 1170, 29898, 29876, 29897, 2607, 2286, 29889, 10954, 29898, 29876, 29889, 13719, 22130, 426]}
{"line_number": 325, "line_type": "generated", "code": "\n\n  /**\n   * @param n The node to start looking at.\n   * @param variable The variable we are looking for.\n   * @return true if there is a read of that variable before any write.\n   */\n", "entropy": 0.5310572981834412, "is_bug_line": false, "sus_score": 0.7337993857053429, "per_token_entropy": [0.053469639271497726, 0.5699054002761841, 0.11364252120256424, 0.6144558787345886, 0.033470090478658676, 0.004068906884640455, 0.0005628670332953334, 3.290602207183838, 0.6263986825942993, 0.9138997793197632, 0.5231317281723022, 0.8603488802909851, 0.8965656757354736, 2.3284621238708496, 1.8675498962402344, 0.688690721988678, 0.28570255637168884, 0.04719996452331543, 0.0006096888100728393, 0.032108452171087265, 0.005517610814422369, 0.10749396681785583, 0.45469456911087036, 0.19897252321243286, 0.246303528547287, 1.2986427545547485, 0.47791939973831177, 0.2541303038597107, 0.21272224187850952, 0.1142512857913971, 0.009698770008981228, 0.0007388246012851596, 0.16091975569725037, 0.059277910739183426, 0.11663903295993805, 1.4553927183151245, 0.12911006808280945, 1.132846713066101, 0.46909329295158386, 0.253968209028244, 0.9522773027420044, 0.6720336079597473, 1.219566822052002, 0.012108158320188522, 0.7699130773544312, 1.543022871017456, 0.5408291816711426, 0.8333163857460022, 0.05259382724761963, 0.002279899315908551, 0.10624261945486069, 0.0016169581795111299], "tokens": [13, 13, 29871, 7762, 13, 259, 334, 732, 3207, 302, 450, 2943, 304, 1369, 3063, 472, 29889, 13, 259, 334, 732, 3207, 2286, 450, 2286, 591, 526, 3063, 363, 29889, 13, 259, 334, 732, 2457, 1565, 565, 727, 338, 263, 1303, 310, 393, 2286, 1434, 738, 2436, 29889, 13, 259, 3776, 13]}
{"line_number": 337, "line_type": "original", "code": "    for (Node child = n.getFirstChild();", "entropy": 1.034843921661377, "is_bug_line": false, "sus_score": 0.7337993857053429, "per_token_entropy": [8.184906959533691, 3.218142509460449, 0.170744389295578, 0.0919848084449768, 0.5791025161743164, 0.08407776802778244, 0.057216107845306396, 0.009403815492987633, 0.0016050563426688313, 0.00633434671908617, 0.001302228425629437, 0.013305679894983768], "tokens": [268, 363, 313, 4247, 2278, 353, 302, 29889, 657, 6730, 5938, 890]}
{"line_number": 337, "line_type": "generated", "code": "\n\n  /**\n   * Given a variable and a sub-tree denoted by exprRoot as the root, this\n   * function returns true if there exists a write to that variable.\n   *\n   * For example, suppose the node is", "entropy": 0.3400653898715973, "is_bug_line": false, "sus_score": 0.7337993857053429, "per_token_entropy": [0.05264189466834068, 0.5550429821014404, 0.09443005174398422, 0.5351022481918335, 0.03849426656961441, 0.004776140209287405, 0.00041321321623399854, 1.7049055099487305, 0.35869041085243225, 1.4680901765823364, 1.406973958015442, 0.5935287475585938, 1.9117023944854736, 0.48209378123283386, 0.020737146958708763, 0.6819667816162109, 0.021189149469137192, 0.13323014974594116, 0.005848793778568506, 0.15664449334144592, 0.16672676801681519, 0.017061131075024605, 0.16949865221977234, 0.5259135961532593, 0.00712721748277545, 0.0008878341759555042, 0.0005443998379632831, 0.05487564951181412, 0.2090340554714203, 0.32038572430610657, 0.023496640846133232, 0.2997349798679352, 0.16997025907039642, 0.133604034781456, 0.8909042477607727, 0.46762049198150635, 0.13482245802879333, 0.04873766377568245, 2.305464267730713, 0.09926542639732361, 0.0012521054595708847, 0.3403184115886688, 0.13449478149414062, 0.0013183006085455418, 0.005854008719325066, 0.5228909850120544, 0.009591094218194485, 0.04287965968251228, 0.20121945440769196, 0.022233041003346443, 0.12113603949546814, 0.008032400161027908], "tokens": [13, 13, 29871, 7762, 13, 259, 334, 11221, 263, 2286, 322, 263, 1014, 29899, 8336, 27291, 491, 22010, 10303, 408, 278, 3876, 29892, 445, 13, 259, 334, 740, 3639, 1565, 565, 727, 4864, 263, 2436, 304, 393, 2286, 29889, 13, 259, 334, 13, 259, 334, 1152, 1342, 29892, 7755, 278, 2943, 338]}
{"line_number": 338, "line_type": "original", "code": "        child != null; child = child.getNext()) {", "entropy": 1.8809804916381836, "is_bug_line": false, "sus_score": 0.7337993857053429, "per_token_entropy": [11.514495849609375, 3.9267778396606445, 5.715185642242432, 0.02122509479522705, 0.0405043326318264, 2.9325804710388184, 0.006285067647695541, 0.017939221113920212, 0.026573164388537407, 0.004507737699896097, 0.009557089768350124, 0.1915913224220276, 0.04552140086889267], "tokens": [308, 2278, 2804, 1870, 29936, 2278, 353, 2278, 29889, 657, 9190, 3101, 426]}
{"line_number": 338, "line_type": "generated", "code": "\n  private boolean isAssign(Node n) {\n    return NodeUtil.isAssignmentOp(n)\n        || NodeUtil.isAssignmentTarget(n)\n        || NodeUtil.isIncOrDecOp(n", "entropy": 0.3795253038406372, "is_bug_line": false, "sus_score": 0.7337993857053429, "per_token_entropy": [0.1000877320766449, 0.4786895513534546, 1.2263834476470947, 1.031803011894226, 0.5119236707687378, 2.313152551651001, 1.0106701850891113, 2.9852442741394043, 0.032312072813510895, 0.11137280613183975, 0.20286399126052856, 0.0021346656139940023, 0.009111137129366398, 0.042441584169864655, 0.6166496872901917, 0.5672397613525391, 0.002815095242112875, 0.0034780744463205338, 0.006342638749629259, 0.06781811267137527, 0.09584043174982071, 0.020541900768876076, 0.0038520910311490297, 0.011011547408998013, 0.31069862842559814, 1.5801537036895752, 0.2226601094007492, 0.42853283882141113, 0.5530577898025513, 0.0027309288270771503, 0.002449371386319399, 0.011682312935590744, 1.061500072479248, 0.24266834557056427, 0.7670072317123413, 0.003946375101804733, 0.006100841797888279, 0.516956090927124, 0.1641218066215515, 0.047892920672893524, 0.06293914467096329, 0.38616281747817993, 0.0018319981172680855, 0.0038009081035852432, 0.01557226199656725, 1.1599375009536743, 0.021415891125798225, 0.6615802645683289, 0.011130976490676403, 0.011443688534200191, 0.018987679854035378, 0.004572649952024221], "tokens": [13, 29871, 2024, 7223, 338, 7900, 647, 29898, 4247, 302, 29897, 426, 13, 1678, 736, 9071, 7270, 29889, 275, 7900, 10194, 11746, 29898, 29876, 29897, 13, 4706, 3830, 9071, 7270, 29889, 275, 7900, 10194, 8667, 29898, 29876, 29897, 13, 4706, 3830, 9071, 7270, 29889, 275, 797, 29883, 2816, 6185, 11746, 29898, 29876]}
{"line_number": 143, "line_type": "original", "code": "          if (n.hasChildren()) {", "entropy": 2.338343381881714, "is_bug_line": false, "sus_score": 0.6060915267313265, "per_token_entropy": [8.570868492126465, 3.8646414279937744, 0.2746795117855072, 3.452033519744873, 0.10162650793790817, 3.779157876968384, 0.39209622144699097, 0.5917018055915833, 0.018285512924194336], "tokens": [965, 565, 313, 29876, 29889, 5349, 19334, 3101, 426]}
{"line_number": 143, "line_type": "generated", "code": "\n        return;\n      }\n      Var var = scope.getVar(name);\n      if (!var.isLocal()) {\n        return;\n      }\n      if (var.isArg()) {\n        return;\n     ", "entropy": 0.2755696773529053, "is_bug_line": false, "sus_score": 0.6060915267313265, "per_token_entropy": [0.1409367322921753, 0.287308931350708, 0.1812642514705658, 0.0010626628063619137, 1.2542390823364258, 0.053972601890563965, 0.001493173069320619, 0.009958111681044102, 0.5706788897514343, 0.8967728018760681, 0.7294886112213135, 0.005968485958874226, 0.21941938996315002, 0.00032062159152701497, 0.0008641323074698448, 0.023148072883486748, 0.0007582411635667086, 0.007969249971210957, 0.002135974122211337, 0.005292215384542942, 0.2529136538505554, 0.2479810118675232, 1.0517983436584473, 0.19595184922218323, 0.001527334563434124, 0.026023823767900467, 0.13407786190509796, 0.09100551158189774, 0.0006942722829990089, 0.0049257357604801655, 0.40367019176483154, 0.037179771810770035, 0.0007700338610447943, 0.694688081741333, 0.004626759793609381, 0.0005011494504287839, 0.003927139099687338, 0.8100851774215698, 0.8770275115966797, 0.4077288806438446, 1.3613020181655884, 0.02438434213399887, 0.0970814898610115, 2.2454075813293457, 0.30867257714271545, 0.0006162413046695292, 0.006403996609151363, 0.2752172350883484, 0.12413094937801361, 0.0005945583689026535, 0.24022936820983887, 0.005426438990980387], "tokens": [13, 4706, 736, 29936, 13, 418, 500, 13, 418, 11681, 722, 353, 6874, 29889, 657, 9037, 29898, 978, 416, 13, 418, 565, 5384, 1707, 29889, 275, 7717, 3101, 426, 13, 4706, 736, 29936, 13, 418, 500, 13, 418, 565, 313, 1707, 29889, 275, 8559, 3101, 426, 13, 4706, 736, 29936, 13, 418]}
{"line_number": 144, "line_type": "original", "code": "            tryRemoveAssignment(t, n.getFirstChild(), state);", "entropy": 1.6109774112701416, "is_bug_line": false, "sus_score": 0.6060915267313265, "per_token_entropy": [9.606654167175293, 6.098850727081299, 1.179650068283081, 0.12416485697031021, 0.009753311984241009, 0.07577822357416153, 0.10561094433069229, 0.0009267802815884352, 1.9311120510101318, 2.4064114093780518, 0.01598929800093174, 1.2829773426055908, 0.007878419943153858, 0.09358972311019897, 2.782468795776367, 0.0538209043443203], "tokens": [632, 1018, 15941, 7900, 10194, 29898, 29873, 29892, 302, 29889, 657, 6730, 5938, 3285, 2106, 416]}
{"line_number": 144, "line_type": "generated", "code": "\n      }\n\n      if (!isLocalVarReferencedAfter(name, n, scope, state)) {\n        // If the variable is not referenced after the instruction, remove the\n        // assignment.\n        Node replacement = NodeUtil", "entropy": 0.7350829243659973, "is_bug_line": false, "sus_score": 0.6060915267313265, "per_token_entropy": [0.12436278164386749, 0.46271708607673645, 0.01924930140376091, 0.03557506203651428, 0.6929982900619507, 0.04939642548561096, 1.4892431497573853, 0.9470261931419373, 2.1027474403381348, 1.4063284397125244, 1.0307087898254395, 2.0976312160491943, 0.13757644593715668, 0.006909879855811596, 0.9706947207450867, 0.17771568894386292, 1.4047961235046387, 0.0008183944155462086, 0.6532301306724548, 0.20983700454235077, 1.9814507961273193, 0.8327765464782715, 0.99233078956604, 0.6620018482208252, 0.001207933179102838, 0.0017296605510637164, 0.24965913593769073, 1.5447447299957275, 2.8305087089538574, 0.8765043020248413, 0.9286993741989136, 0.17811191082000732, 0.7105814814567566, 0.36984145641326904, 0.530705451965332, 1.1657220125198364, 1.9905564785003662, 0.6154206991195679, 1.5593172311782837, 1.2597604990005493, 0.009917744435369968, 0.001838185708038509, 0.0009533389820717275, 0.44803112745285034, 0.3322921097278595, 0.14735783636569977, 0.21342508494853973, 1.0295343399047852, 0.8366237878799438, 0.15236079692840576, 1.7157046794891357, 0.03507979214191437], "tokens": [13, 418, 500, 13, 13, 418, 565, 5384, 275, 7717, 9037, 1123, 571, 9223, 13555, 29898, 978, 29892, 302, 29892, 6874, 29892, 2106, 876, 426, 13, 4706, 849, 960, 278, 2286, 338, 451, 16180, 1156, 278, 15278, 29892, 3349, 278, 13, 4706, 849, 12827, 29889, 13, 4706, 9071, 16920, 353, 9071, 7270]}
{"line_number": 293, "line_type": "original", "code": "      for(Node sibling = n.getNext(); sibling != null;", "entropy": 1.5237029790878296, "is_bug_line": false, "sus_score": 0.5916079783099616, "per_token_entropy": [7.062741279602051, 8.661154747009277, 4.335010528564453, 0.32151561975479126, 0.8456013202667236, 0.028866078704595566, 0.05115130543708801, 1.5629961490631104, 0.043379414826631546, 0.004523165058344603, 0.564658522605896, 0.03235616162419319, 2.299025058746338, 0.0003551805857568979, 0.03204876556992531, 0.02201826311647892, 0.03554676100611687], "tokens": [539, 363, 29898, 4247, 27767, 1847, 353, 302, 29889, 657, 9190, 890, 27767, 1847, 2804, 1870, 29936]}
{"line_number": 293, "line_type": "generated", "code": "\n        }\n      }\n    }\n\n    return VariableLiveness.MAYBE_LIVE;\n  }\n\n  /**\n   * Checks if a given node is a write to a variable.\n   */\n ", "entropy": 0.3901718854904175, "is_bug_line": false, "sus_score": 0.5916079783099616, "per_token_entropy": [0.06284880638122559, 0.14541015028953552, 0.005004736129194498, 0.020402098074555397, 0.029263021424412727, 0.001564113306812942, 0.01222686842083931, 0.022692060098052025, 0.002233036793768406, 0.0019199287053197622, 1.1436766386032104, 0.017486801370978355, 0.12008213996887207, 0.006244197487831116, 0.001879355520941317, 0.0004101150552742183, 0.0015893458621576428, 0.0015813715290278196, 0.0010381315369158983, 0.002169875893741846, 0.0010679024271667004, 0.0014499637763947248, 0.0014393694000318646, 0.001632430125027895, 0.006787814199924469, 0.01745552383363247, 0.002221380127593875, 0.005194026045501232, 0.051817648112773895, 0.05913016200065613, 0.41875627636909485, 0.03306109085679054, 0.0027643346693366766, 0.0004015354788862169, 3.155519485473633, 0.5181617736816406, 0.7282678484916687, 1.5664806365966797, 2.3797454833984375, 1.061944603919983, 0.6339181661605835, 0.7091121673583984, 4.112778186798096, 0.7427080869674683, 0.2863095700740814, 0.8156580328941345, 0.5399068593978882, 0.2665405571460724, 0.0013985387049615383, 0.5568658113479614, 0.000719645875506103, 0.009999420493841171], "tokens": [13, 4706, 500, 13, 418, 500, 13, 1678, 500, 13, 13, 1678, 736, 28736, 29931, 20193, 29889, 1529, 29979, 15349, 29918, 5265, 12064, 29936, 13, 29871, 500, 13, 13, 29871, 7762, 13, 259, 334, 5399, 29879, 565, 263, 2183, 2943, 338, 263, 2436, 304, 263, 2286, 29889, 13, 259, 3776, 13, 29871]}
{"line_number": 292, "line_type": "original", "code": "    while (n != exprRoot) {", "entropy": 2.4684371948242188, "is_bug_line": false, "sus_score": 0.5773502691896257, "per_token_entropy": [8.244444847106934, 9.208831787109375, 0.3831471800804138, 1.2825120687484741, 0.6027244925498962, 2.17608904838562, 0.014590942300856113, 0.29615241289138794, 0.007441302761435509], "tokens": [268, 1550, 313, 29876, 2804, 22010, 10303, 29897, 426]}
{"line_number": 292, "line_type": "generated", "code": "\n          return state;\n        }\n      }\n    }\n    return VariableLiveness.MAYBE_LIVE;\n  }\n\n  /**\n   * Given a variable, node n in the tree and a sub-tree", "entropy": 0.14225587248802185, "is_bug_line": false, "sus_score": 0.5773502691896257, "per_token_entropy": [0.08073431998491287, 0.25025826692581177, 0.11937334388494492, 0.006904079113155603, 0.003007890423759818, 0.03674919158220291, 0.08005660772323608, 0.0026899129152297974, 0.028237340971827507, 0.044374980032444, 0.0014806747203692794, 0.013752352446317673, 0.018815839663147926, 0.002734257373958826, 0.0022395786363631487, 0.4549296796321869, 0.0329110324382782, 0.006705638952553272, 0.002688367385417223, 0.0004033228906337172, 0.001900772680528462, 0.0019436056027188897, 0.0010200303513556719, 0.0022540895733982325, 0.001598986447788775, 0.0016927688848227262, 0.0018920868169516325, 0.001973468577489257, 0.012222039513289928, 0.021614117547869682, 0.003102491609752178, 0.00749655906111002, 0.1110830157995224, 0.07867302745580673, 0.49010568857192993, 0.035607270896434784, 0.0036437802482396364, 0.00063744728686288, 1.7198187112808228, 0.36778584122657776, 1.4710594415664673, 0.8185299038887024, 0.698384702205658, 0.04023035243153572, 0.10113683342933655, 0.005694239400327206, 0.02158203534781933, 0.1033962219953537, 0.05401010066270828, 0.01803581602871418, 0.009526625275611877, 0.0006052807439118624], "tokens": [13, 3986, 736, 2106, 29936, 13, 4706, 500, 13, 418, 500, 13, 1678, 500, 13, 1678, 736, 28736, 29931, 20193, 29889, 1529, 29979, 15349, 29918, 5265, 12064, 29936, 13, 29871, 500, 13, 13, 29871, 7762, 13, 259, 334, 11221, 263, 2286, 29892, 2943, 302, 297, 278, 5447, 322, 263, 1014, 29899, 8336]}
{"line_number": 234, "line_type": "original", "code": "        n.removeChild(rhs);", "entropy": 2.452784299850464, "is_bug_line": false, "sus_score": 0.5091750772173156, "per_token_entropy": [8.870718002319336, 7.4110541343688965, 2.2669568061828613, 2.917649269104004, 0.04130718111991882, 0.009792031720280647, 0.5274097919464111, 0.0017873755423352122, 0.0283848587423563], "tokens": [308, 302, 29889, 5992, 5938, 29898, 29878, 9499, 416]}
{"line_number": 234, "line_type": "generated", "code": "\n   * y = 1, x = 1, x = 2; // false, there is no reads at all.\n   * y = 1, x = 1, print(x), x = 2; // true", "entropy": 0.2967798709869385, "is_bug_line": false, "sus_score": 0.5091750772173156, "per_token_entropy": [0.27664366364479065, 0.04277835413813591, 0.0877714529633522, 1.0141842365264893, 0.031414978206157684, 0.26592737436294556, 0.014673646539449692, 0.15819142758846283, 0.6483616828918457, 0.0354953333735466, 0.22013543546199799, 0.05223330482840538, 0.12388137727975845, 1.3076171875, 0.1633892059326172, 0.27117758989334106, 0.6140260696411133, 1.1258124113082886, 0.048531003296375275, 0.37121257185935974, 0.0994250625371933, 0.7821337580680847, 0.08911852538585663, 0.7941896319389343, 0.8120119571685791, 1.9716169834136963, 0.05147768184542656, 0.08691240102052689, 0.00655713863670826, 0.18604668974876404, 0.0635143369436264, 0.3935126066207886, 0.008148757740855217, 0.05490950122475624, 0.002326997695490718, 0.026675311848521233, 0.3222346603870392, 0.021624499931931496, 0.1534685641527176, 0.05079423263669014, 0.03371550515294075, 0.881557822227478, 0.008262380957603455, 0.24954666197299957, 0.41719600558280945, 0.1622004508972168, 0.016999484971165657, 0.014371695928275585, 0.03100721724331379, 0.2826894223690033, 0.024425990879535675, 0.46042370796203613], "tokens": [13, 259, 334, 343, 353, 29871, 29896, 29892, 921, 353, 29871, 29896, 29892, 921, 353, 29871, 29906, 29936, 849, 2089, 29892, 727, 338, 694, 13623, 472, 599, 29889, 13, 259, 334, 343, 353, 29871, 29896, 29892, 921, 353, 29871, 29896, 29892, 1596, 29898, 29916, 511, 921, 353, 29871, 29906, 29936, 849, 1565]}
{"line_number": 235, "line_type": "original", "code": "        n.getParent().replaceChild(n, rhs);", "entropy": 1.7728463411331177, "is_bug_line": false, "sus_score": 0.5091750772173156, "per_token_entropy": [5.112370014190674, 6.182034492492676, 2.491860866546631, 4.257894039154053, 2.0232510566711426, 0.5538478493690491, 1.6417640447616577, 0.010488624684512615, 0.004280334338545799, 0.06639517098665237, 0.004922295920550823, 0.625140905380249, 0.07275298237800598], "tokens": [308, 302, 29889, 657, 9780, 2141, 6506, 5938, 29898, 29876, 29892, 29365, 416]}
{"line_number": 235, "line_type": "generated", "code": "\n   *\n   * @param n\n   * @param exprRoot\n   * @param varName\n   * @return\n   */\n  private boolean isVariableStillLiveWithinExpression(Node n, Node exprRoot,\n", "entropy": 0.16484598815441132, "is_bug_line": false, "sus_score": 0.5091750772173156, "per_token_entropy": [0.4237627685070038, 0.29849955439567566, 0.14148440957069397, 2.0886571407318115, 0.034567005932331085, 0.09024585038423538, 0.7698955535888672, 0.08946926146745682, 0.2748706340789795, 1.7936115264892578, 0.007965466007590294, 0.004342768341302872, 0.02165331318974495, 0.015786198899149895, 0.043515924364328384, 0.006488328333944082, 0.16267703473567963, 0.00949179194867611, 0.013062148354947567, 0.0022904847282916307, 0.061537936329841614, 0.41483116149902344, 0.29929807782173157, 0.17308805882930756, 0.007709747180342674, 0.19603711366653442, 0.008448337204754353, 0.008478006348013878, 0.3307170271873474, 0.009477503597736359, 0.007807571440935135, 0.00032884435495361686, 0.015993991866707802, 0.09964337944984436, 0.16474682092666626, 0.013737302273511887, 0.0006987990345805883, 0.0007622911944054067, 0.00013469743134919554, 0.00012087091454304755, 0.0030228656250983477, 0.0007954055909067392, 0.0005287918029353023, 0.0035343817435204983, 0.23186367750167847, 0.009591921232640743, 0.0006761648692190647, 0.1860138326883316, 0.003374123014509678, 0.0007416835287585855, 0.00043275527423247695, 0.025480223819613457], "tokens": [13, 259, 334, 13, 259, 334, 732, 3207, 302, 13, 259, 334, 732, 3207, 22010, 10303, 13, 259, 334, 732, 3207, 722, 1170, 13, 259, 334, 732, 2457, 13, 259, 3776, 13, 29871, 2024, 7223, 338, 16174, 855, 453, 23859, 3047, 262, 10960, 29898, 4247, 302, 29892, 9071, 22010, 10303, 29892, 13]}
{"line_number": 260, "line_type": "original", "code": "      compiler.reportCodeChange();", "entropy": 2.642990827560425, "is_bug_line": false, "sus_score": 0.48304589153964794, "per_token_entropy": [10.435343742370605, 7.131089210510254, 0.14368067681789398, 0.18989749252796173, 0.5836750864982605, 0.0005845506675541401, 0.016663651913404465], "tokens": [539, 6516, 29889, 12276, 3399, 7277, 890]}
{"line_number": 260, "line_type": "generated", "code": "\n\n  private VariableLiveness isVariableReadBeforeKill(Node n, String variable) {\n    if (NodeUtil.isName(n) && n.getString().equals(variable)) {\n      return VariableLiveness.READ;", "entropy": 0.16540168225765228, "is_bug_line": false, "sus_score": 0.48304589153964794, "per_token_entropy": [0.03689143434166908, 0.31912314891815186, 0.12172157317399979, 1.4093058109283447, 1.1557267904281616, 0.004839611239731312, 0.000161038784426637, 0.019929172471165657, 0.007152901962399483, 0.031375933438539505, 0.004626166541129351, 0.001562208984978497, 5.018585216021165e-05, 0.003227503504604101, 0.2151874303817749, 0.08367272466421127, 0.006599535699933767, 0.03716277331113815, 0.3069489002227783, 0.07082975655794144, 0.0010752854868769646, 0.00023624490131624043, 0.12925799190998077, 0.8047006130218506, 0.08033298701047897, 0.833917498588562, 0.0003587556129787117, 0.00018463814922142774, 0.02448229305446148, 0.6184511184692383, 0.04310404881834984, 0.0007814691052772105, 0.996401846408844, 0.05084532871842384, 0.4834253787994385, 0.0008355463505722582, 0.028776085004210472, 0.023036478087306023, 0.0013783011818304658, 0.00046433156239800155, 0.0007090438157320023, 0.09620917588472366, 0.0014434166951104999, 0.0005651307292282581, 0.03223219886422157, 0.37349840998649597, 0.1305583119392395, 0.0004681444843299687, 0.0003432638186495751, 0.0005484507419168949, 0.004706020932644606, 0.0014647241914644837], "tokens": [13, 13, 29871, 2024, 28736, 29931, 20193, 338, 16174, 6359, 18743, 29968, 453, 29898, 4247, 302, 29892, 1714, 2286, 29897, 426, 13, 1678, 565, 313, 4247, 7270, 29889, 275, 1170, 29898, 29876, 29897, 2607, 302, 29889, 13719, 2141, 10954, 29898, 11918, 876, 426, 13, 418, 736, 28736, 29931, 20193, 29889, 16310, 29936]}
