{"line_number": 435, "line_type": "original", "code": "    }", "entropy": 5.9955596923828125, "is_bug_line": false, "sus_score": 0.42008402520840293, "per_token_entropy": [8.91792106628418, 3.0731987953186035], "tokens": [268, 500]}
{"line_number": 435, "line_type": "generated", "code": "\n\n  private boolean isEscaped(Var v) {\n    return escaped.contains(v);\n  }\n\n  private boolean isCatchVar(Var v) {\n    return catchScope.isDeclared(v", "entropy": 0.34044724702835083, "is_bug_line": false, "sus_score": 0.42008402520840293, "per_token_entropy": [0.10536464303731918, 0.6049972772598267, 0.1294226497411728, 1.7957251071929932, 2.213378429412842, 0.6755294799804688, 1.322963833808899, 0.016590960323810577, 0.031613197177648544, 0.4676364064216614, 0.1880490630865097, 0.6137936115264893, 0.013793857768177986, 0.002344718435779214, 0.0032169281039386988, 0.03336264193058014, 0.4684428572654724, 0.24334849417209625, 0.03865668177604675, 0.0048990449868142605, 0.002849924610927701, 0.004148568492382765, 0.08474399894475937, 0.0020180828869342804, 0.01185773778706789, 0.0031204363331198692, 0.011705052107572556, 0.1856255829334259, 0.0619058758020401, 0.8293302655220032, 0.6051343083381653, 0.15432055294513702, 1.6087032556533813, 0.20893731713294983, 1.613079309463501, 0.012121113948523998, 0.014557811431586742, 0.028765544295310974, 0.00419557886198163, 0.002193903550505638, 0.0025395068805664778, 0.022715134546160698, 0.2145453691482544, 0.7538557052612305, 0.6995857954025269, 0.6921151280403137, 0.3769261837005615, 0.4548312723636627, 0.012998608872294426, 0.0028613361064344645, 0.042532529681921005, 0.005305377766489983], "tokens": [13, 13, 29871, 2024, 7223, 338, 29923, 1557, 10501, 29898, 9037, 325, 29897, 426, 13, 1678, 736, 19824, 29889, 11516, 29898, 29894, 416, 13, 29871, 500, 13, 13, 29871, 2024, 7223, 338, 29907, 905, 9037, 29898, 9037, 325, 29897, 426, 13, 1678, 736, 4380, 15289, 29889, 275, 6185, 433, 1127, 29898, 29894]}
{"line_number": 432, "line_type": "original", "code": "      if (s.scope != jsScope) {", "entropy": 1.9288970232009888, "is_bug_line": false, "sus_score": 0.408248290463863, "per_token_entropy": [9.883749961853027, 3.121419906616211, 0.1532924771308899, 3.135603904724121, 0.18047702312469482, 2.7459685802459717, 1.202343225479126, 0.4390493631362915, 0.006093377247452736, 0.3294478952884674, 0.020419267937541008], "tokens": [539, 565, 313, 29879, 29889, 6078, 2804, 6965, 15289, 29897, 426]}
{"line_number": 432, "line_type": "generated", "code": "\n  /**\n   * Gets the must reaching definition of a given node. The node must be one of\n   * the control flow graph nodes.\n   *\n   * @param name name of the variable. It can only be names of", "entropy": 0.11675341427326202, "is_bug_line": false, "sus_score": 0.408248290463863, "per_token_entropy": [0.06346086412668228, 0.5844448804855347, 0.907414436340332, 0.04171408340334892, 0.0110326511785388, 0.001100530382245779, 1.2883347272872925, 0.005032016895711422, 0.21591851115226746, 1.0852621793746948, 0.01941674016416073, 0.19627469778060913, 0.07410846650600433, 0.046546582132577896, 0.02555447816848755, 0.22432149946689606, 0.14215226471424103, 0.08270984143018723, 0.006502422504127026, 0.00822797603905201, 0.002820087829604745, 0.007270189467817545, 0.009453295730054379, 0.0027778868097811937, 0.0033096084371209145, 0.0009623901569284499, 0.0032068276777863503, 0.004183589015156031, 0.0007194076315499842, 0.002797501627355814, 0.002611799631267786, 0.014328569173812866, 0.07797858864068985, 0.010063032619655132, 0.1057143360376358, 0.030893489718437195, 0.007774333469569683, 0.003568236017599702, 0.03225355222821236, 0.013655225746333599, 0.5053244233131409, 0.04307584464550018, 0.001456510741263628, 0.003875959664583206, 0.005980809684842825, 0.02407553419470787, 0.06740052253007889, 0.018585816025733948, 0.01232613530009985, 0.0015403084689751267, 0.02042592503130436, 0.0012374608777463436], "tokens": [13, 29871, 7762, 13, 259, 334, 402, 1691, 278, 1818, 20888, 5023, 310, 263, 2183, 2943, 29889, 450, 2943, 1818, 367, 697, 310, 13, 259, 334, 278, 2761, 4972, 3983, 7573, 29889, 13, 259, 334, 13, 259, 334, 732, 3207, 1024, 1024, 310, 278, 2286, 29889, 739, 508, 871, 367, 2983, 310]}
{"line_number": 258, "line_type": "original", "code": "        computeMustDef(n.getFirstChild(), cfgNode, output, conditional);", "entropy": 1.028070330619812, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [6.173140048980713, 8.79052448272705, 0.26997649669647217, 0.00243200920522213, 0.056718382984399796, 0.05749177932739258, 1.8890572786331177, 0.2673755884170532, 0.007321787066757679, 0.6444671154022217, 0.0004037995240651071, 0.029859183356165886, 0.18301118910312653, 0.0004032037395518273, 0.0002157455455744639, 0.0006696127820760012, 0.12724152207374573, 0.006995826493948698, 0.470051109790802, 1.5840487480163574], "tokens": [308, 10272, 29924, 504, 3206, 29898, 29876, 29889, 657, 6730, 5938, 3285, 274, 16434, 4247, 29892, 1962, 29892, 15047, 416]}
{"line_number": 258, "line_type": "generated", "code": "\n              conditional ? null : cfgNode, n, output);\n          }\n        }\n\n        if (n.isName()) {\n          addToUseIfLocal(n.getString(), cfgNode, output);\n        }", "entropy": 0.2799376845359802, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [0.7747027277946472, 1.5778613090515137, 0.8297102451324463, 0.01796802505850792, 0.03791390731930733, 0.007658879738301039, 0.025024110451340675, 0.00010024998482549563, 0.00015984688070602715, 0.006617773324251175, 1.1832636594772339, 0.09214800596237183, 0.014032156206667423, 0.011049510911107063, 0.003223106963559985, 0.27884534001350403, 0.000551310193259269, 0.07064982503652573, 0.15996499359607697, 0.0010708795161917806, 0.07717464119195938, 0.5189818143844604, 0.06023275479674339, 1.539672613143921, 0.08813358098268509, 0.6717499494552612, 0.006285422947257757, 0.26014336943626404, 1.7241201400756836, 0.4744051396846771, 0.0005408254801295698, 0.0036599335726350546, 0.09655418992042542, 1.0797544717788696, 0.11719518899917603, 0.6730455756187439, 0.8688188195228577, 0.0182830560952425, 0.007409472484141588, 0.04417608305811882, 0.18654538691043854, 0.006175839342176914, 0.003028332721441984, 0.6904686093330383, 0.00025733973598107696, 0.00020597243565134704, 0.006263507064431906, 0.09680332243442535, 0.053319450467824936, 0.0006135011790320277, 0.08970893919467926, 0.0005159238935448229], "tokens": [13, 795, 15047, 1577, 1870, 584, 274, 16434, 4247, 29892, 302, 29892, 1962, 416, 13, 3986, 500, 13, 4706, 500, 13, 13, 4706, 565, 313, 29876, 29889, 275, 1170, 3101, 426, 13, 3986, 788, 1762, 11403, 3644, 7717, 29898, 29876, 29889, 13719, 3285, 274, 16434, 4247, 29892, 1962, 416, 13, 4706, 500]}
{"line_number": 259, "line_type": "original", "code": "        computeMustDef(n.getLastChild(), cfgNode, output, true);", "entropy": 1.0667641162872314, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [7.596188545227051, 6.364137649536133, 0.004509161692112684, 0.00012313561455812305, 0.0012198395561426878, 0.004654407035559416, 2.184741735458374, 0.12391107529401779, 0.0067178355529904366, 1.9643439054489136, 7.86750388215296e-05, 0.002000237349420786, 0.09062417596578598, 0.00020180096908006817, 0.00012087091454304755, 0.0001668790791882202, 0.06677225977182388, 0.007902192883193493, 2.9138214588165283, 0.0030448525212705135], "tokens": [308, 10272, 29924, 504, 3206, 29898, 29876, 29889, 657, 8897, 5938, 3285, 274, 16434, 4247, 29892, 1962, 29892, 1565, 416]}
{"line_number": 259, "line_type": "generated", "code": "\n          }\n        }\n\n        // For all other nodes, we just look at the children.\n        for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {\n          computeMust", "entropy": 0.362754762172699, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [0.03368864953517914, 0.2912716865539551, 0.004701749421656132, 0.07573368400335312, 0.1647706776857376, 0.0022555168252438307, 0.05221882462501526, 0.5328208804130554, 0.08336393535137177, 1.099173665046692, 4.090480804443359, 1.8397964239120483, 0.5132762789726257, 1.1245125532150269, 0.36371049284935, 1.274549961090088, 1.8933866024017334, 2.988337755203247, 0.1911521553993225, 0.7654988169670105, 0.4126933515071869, 0.3860197067260742, 0.06232184171676636, 0.04891885817050934, 0.2671833336353302, 0.0012004319578409195, 0.017023393884301186, 0.06111951172351837, 0.04653896018862724, 0.0017852336168289185, 0.00041631137719377875, 5.185469490243122e-05, 0.00027259447961114347, 0.0001728385395836085, 0.0015625660307705402, 0.008334734477102757, 0.0010708795161917806, 0.0021851013880223036, 0.0008229206432588398, 0.0038832034915685654, 0.0014687713701277971, 0.0011449456214904785, 0.00028618055512197316, 0.0002779574424494058, 0.00037377048283815384, 0.0015757775399833918, 0.0008440031087957323, 0.0002740246127359569, 0.04218344762921333, 0.10595004260540009, 0.00041261743172071874, 0.000176652567461133], "tokens": [13, 3986, 500, 13, 4706, 500, 13, 13, 4706, 849, 1152, 599, 916, 7573, 29892, 591, 925, 1106, 472, 278, 4344, 29889, 13, 4706, 363, 313, 4247, 274, 353, 302, 29889, 657, 6730, 5938, 890, 274, 2804, 1870, 29936, 274, 353, 274, 29889, 657, 9190, 3101, 426, 13, 3986, 10272, 29924, 504]}
{"line_number": 260, "line_type": "original", "code": "        return;", "entropy": 4.306385517120361, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [7.19004487991333, 5.719310283660889, 0.00980076752603054], "tokens": [308, 736, 29936]}
{"line_number": 260, "line_type": "generated", "code": "\n          }\n        }\n\n        if (n.isName()) {\n          addToDefIfLocal(n.getString(), conditional ? null : cfgNode, null,\n              output);\n        }\n\n        for (Node", "entropy": 0.2078506499528885, "is_bug_line": false, "sus_score": 0.23570226039551587, "per_token_entropy": [0.057235922664403915, 0.19245778024196625, 0.006302481517195702, 0.24455125629901886, 0.16534556448459625, 0.004958237987011671, 0.05469835549592972, 0.40990057587623596, 0.08235540241003036, 1.3600178956985474, 0.0781165212392807, 0.5943069458007812, 0.005730035714805126, 0.0988900363445282, 1.5815855264663696, 0.3921806216239929, 0.0006295844214037061, 0.006296913605183363, 0.06767541170120239, 0.8728143572807312, 0.06582487374544144, 0.40284264087677, 0.06959392130374908, 0.007649179082363844, 0.005292571149766445, 0.06275151669979095, 0.0023442425299435854, 0.0013271104544401169, 0.00025686301523819566, 0.5831578373908997, 0.004301818553358316, 0.005763578694313765, 0.0021015957463532686, 0.003767061745747924, 0.00011216964776394889, 2.253030106658116e-05, 0.0003587556129787117, 0.44475317001342773, 0.00026901919045485556, 0.1967633217573166, 0.19784168899059296, 0.0005701346672140062, 0.0009304723353125155, 0.003184131346642971, 0.585019588470459, 0.003291191766038537, 0.10313862562179565, 0.8016625046730042, 0.07280097901821136, 0.8895049691200256, 0.0015829188050702214, 0.013402958400547504], "tokens": [13, 3986, 500, 13, 4706, 500, 13, 13, 4706, 565, 313, 29876, 29889, 275, 1170, 3101, 426, 13, 3986, 788, 1762, 3206, 3644, 7717, 29898, 29876, 29889, 13719, 3285, 15047, 1577, 1870, 584, 274, 16434, 4247, 29892, 1870, 29892, 13, 795, 1962, 416, 13, 4706, 500, 13, 13, 4706, 363, 313, 4247]}
{"line_number": 271, "line_type": "original", "code": "            computeMustDef(c.getFirstChild(), cfgNode, output, conditional);", "entropy": 1.2371219396591187, "is_bug_line": false, "sus_score": 0.21997067253202995, "per_token_entropy": [9.152670860290527, 6.536986351013184, 0.5551645755767822, 0.009585308842360973, 0.07920323312282562, 0.303343802690506, 5.136293411254883, 1.1696220636367798, 0.1641271710395813, 0.5383628606796265, 0.0007408496458083391, 0.10275941342115402, 0.321298748254776, 0.009854476898908615, 0.003868597326800227, 0.005683571565896273, 0.23886659741401672, 0.07209601253271103, 0.31205180287361145, 0.029862191528081894], "tokens": [632, 10272, 29924, 504, 3206, 29898, 29883, 29889, 657, 6730, 5938, 3285, 274, 16434, 4247, 29892, 1962, 29892, 15047, 416]}
{"line_number": 271, "line_type": "generated", "code": "\n   * lattice.\n   *\n   * @param name The name of the variable to set.\n   * @param value The value to set it to.\n   */\n  private void setVarLatticeValue(String name, Node", "entropy": 0.3633577525615692, "is_bug_line": false, "sus_score": 0.21997067253202995, "per_token_entropy": [0.4562712013721466, 0.16759122908115387, 0.23349995911121368, 1.5628459453582764, 0.35171616077423096, 0.2881336808204651, 0.062002796679735184, 0.4346316158771515, 0.573284387588501, 0.023086220026016235, 0.005823194514960051, 0.08575701713562012, 0.03270822763442993, 0.4015636444091797, 0.3309304416179657, 0.3221765160560608, 0.8442689180374146, 0.041633930057287216, 0.11316827684640884, 0.919326663017273, 0.7669598460197449, 0.831203043460846, 0.018000340089201927, 0.10176369547843933, 0.019100312143564224, 0.0037325017619878054, 0.0033976465929299593, 1.5809454917907715, 0.13931328058242798, 0.8533722162246704, 0.6044740676879883, 0.1860690712928772, 1.3593132495880127, 0.025463838130235672, 0.11020233482122421, 0.13035228848457336, 0.0768461674451828, 0.46884584426879883, 0.00028236693469807506, 0.03069605492055416, 0.16109754145145416, 0.047690972685813904, 0.11923717707395554, 1.316525936126709, 1.0503318309783936, 0.0006176709430292249, 1.0302188396453857, 0.06093793734908104, 0.33657678961753845, 0.0028773832600563765, 0.0003510097449179739, 0.2073851227760315], "tokens": [13, 259, 334, 24094, 29889, 13, 259, 334, 13, 259, 334, 732, 3207, 1024, 450, 1024, 310, 278, 2286, 304, 731, 29889, 13, 259, 334, 732, 3207, 995, 450, 995, 304, 731, 372, 304, 29889, 13, 259, 3776, 13, 29871, 2024, 1780, 731, 9037, 29931, 19704, 1917, 29898, 1231, 1024, 29892, 9071]}
{"line_number": 272, "line_type": "original", "code": "            addToDefIfLocal(c.getString(), conditional ? null : cfgNode,", "entropy": 1.348159909248352, "is_bug_line": false, "sus_score": 0.21997067253202995, "per_token_entropy": [9.746685028076172, 5.710659503936768, 0.434916228055954, 0.36784666776657104, 0.3440552353858948, 0.012451647780835629, 0.0907335951924324, 5.184640407562256, 0.19274616241455078, 0.9207658767700195, 0.02816641330718994, 1.7289869785308838, 0.18555112183094025, 0.5203711986541748, 0.04013221338391304, 0.0797237977385521, 0.015317659825086594, 0.005872852168977261, 0.005416598170995712], "tokens": [632, 788, 1762, 3206, 3644, 7717, 29898, 29883, 29889, 13719, 3285, 15047, 1577, 1870, 584, 274, 16434, 4247, 29892]}
{"line_number": 272, "line_type": "generated", "code": "\n   */\n  private void addToDefIfLocal(\n      String name, Node cfgNode, Node value, MustDef output) {\n    if (escaped.contains(name)) {\n      return;\n    }\n", "entropy": 0.18807747960090637, "is_bug_line": false, "sus_score": 0.21997067253202995, "per_token_entropy": [0.13128744065761566, 0.2371096909046173, 0.8442984819412231, 0.001840446493588388, 0.05267322063446045, 0.09993381053209305, 0.08950294554233551, 0.3982502818107605, 0.03218279406428337, 0.03622645139694214, 0.06888368725776672, 0.002422614488750696, 0.007513123564422131, 0.9885624647140503, 0.0362858884036541, 0.014655555598437786, 0.2541513741016388, 0.0021922383457422256, 0.3865067660808563, 0.7276991009712219, 0.0018922057934105396, 0.035000599920749664, 0.005161531735211611, 0.020302461460232735, 1.2853331565856934, 0.15965601801872253, 0.0467931292951107, 0.00015293381875380874, 0.19842056930065155, 0.005198413971811533, 0.0014717471785843372, 0.001610055100172758, 0.15806105732917786, 0.26324352622032166, 0.4593096375465393, 0.8359631299972534, 0.00030155404238030314, 0.031499654054641724, 1.4327844381332397, 0.052132830023765564, 0.05682019889354706, 0.006669049151241779, 0.07853395491838455, 0.007403556257486343, 0.014703953638672829, 0.036503370851278305, 0.09142935276031494, 0.000824230897706002, 0.013522572815418243, 0.04178359732031822, 0.0007020154735073447, 0.0246659554541111], "tokens": [13, 259, 3776, 13, 29871, 2024, 1780, 788, 1762, 3206, 3644, 7717, 29898, 13, 418, 1714, 1024, 29892, 9071, 274, 16434, 4247, 29892, 9071, 995, 29892, 19928, 3206, 1962, 29897, 426, 13, 1678, 565, 313, 267, 5030, 287, 29889, 11516, 29898, 978, 876, 426, 13, 418, 736, 29936, 13, 1678, 500, 13]}
{"line_number": 333, "line_type": "original", "code": "      return;", "entropy": 4.495056629180908, "is_bug_line": false, "sus_score": 0.2182178902359924, "per_token_entropy": [10.322662353515625, 2.943189859390259, 0.2193172574043274], "tokens": [539, 736, 29936]}
{"line_number": 333, "line_type": "generated", "code": "\n\n  /**\n   * Compute the dependence relation between the definition and the rValue.\n   * @param definition The definition.\n   * @param rValue The right hand side of the assignment.\n   */\n  private void compute", "entropy": 0.43879666924476624, "is_bug_line": false, "sus_score": 0.2182178902359924, "per_token_entropy": [0.06572050601243973, 0.6620284914970398, 0.07269655913114548, 0.707406759262085, 0.08728641271591187, 0.006186976097524166, 0.001167450100183487, 1.1570886373519897, 0.2901681065559387, 0.35947468876838684, 1.7320505380630493, 2.404157876968384, 0.9521424770355225, 1.024306058883667, 0.9923485517501831, 0.4844666123390198, 0.4367854595184326, 1.7786614894866943, 0.3144625425338745, 0.28090882301330566, 0.05582128465175629, 0.002918985905125737, 0.3823120594024658, 2.245718002319336, 0.061782386153936386, 0.37382805347442627, 0.647873044013977, 0.16705656051635742, 1.3947842121124268, 0.030194895341992378, 0.002509304089471698, 0.012129358015954494, 0.0015169790713116527, 0.002891409443691373, 0.03490586206316948, 0.013223215006291866, 0.07735295593738556, 0.7757130265235901, 0.7531875371932983, 0.13320636749267578, 0.3585004508495331, 0.12363573908805847, 0.9202588200569153, 0.18406659364700317, 0.02570762112736702, 0.0032100360840559006, 0.03387327864766121, 0.0006124289939180017, 0.027047598734498024, 0.0929098054766655, 0.06836123019456863, 0.0008014804334379733], "tokens": [13, 13, 29871, 7762, 13, 259, 334, 11796, 29872, 278, 26307, 8220, 1546, 278, 5023, 322, 278, 364, 1917, 29889, 13, 259, 334, 732, 3207, 5023, 450, 5023, 29889, 13, 259, 334, 732, 3207, 364, 1917, 450, 1492, 1361, 2625, 310, 278, 12827, 29889, 13, 259, 3776, 13, 29871, 2024, 1780, 10272]}
{"line_number": 436, "line_type": "original", "code": "    return false;", "entropy": 3.1054604053497314, "is_bug_line": false, "sus_score": 0.21004201260420147, "per_token_entropy": [8.59084701538086, 3.7710182666778564, 0.05146545171737671, 0.008510512299835682], "tokens": [268, 736, 2089, 29936]}
{"line_number": 436, "line_type": "generated", "code": "\n\n  /**\n   * Gets the must reaching definition of a given node. The node must be one of\n   * the control flow graph nodes.\n   *\n   * @param var the variable to get the definition of.\n  ", "entropy": 0.28518858551979065, "is_bug_line": false, "sus_score": 0.21004201260420147, "per_token_entropy": [0.08298657834529877, 0.8896100521087646, 0.15386347472667694, 0.744269609451294, 0.05203200504183769, 0.006553467363119125, 0.0006649667047895491, 1.3550894260406494, 0.006468312349170446, 0.23209896683692932, 1.1991240978240967, 0.028454262763261795, 0.2509911358356476, 0.10434488207101822, 0.06024700775742531, 0.03313663229346275, 0.28955137729644775, 0.18243186175823212, 0.10325828939676285, 0.010525546967983246, 0.01262693852186203, 0.0034356636460870504, 0.009879973717033863, 0.008699021302163601, 0.00334596517495811, 0.003516206983476877, 0.0009687021956779063, 0.0035286799538880587, 0.004896079655736685, 0.0006156456656754017, 0.0027774113696068525, 0.003485914785414934, 0.02001132071018219, 0.10313346236944199, 0.012850922532379627, 0.13157342374324799, 0.03935626894235611, 0.007779065053910017, 0.002719396958127618, 0.047287747263908386, 0.02257610112428665, 1.9149705171585083, 0.7790836095809937, 0.54837965965271, 2.0322766304016113, 0.9124500751495361, 0.26239678263664246, 0.5414257645606995, 1.0403132438659668, 0.12297289818525314, 0.4387049376964569, 0.006064821965992451], "tokens": [13, 13, 29871, 7762, 13, 259, 334, 402, 1691, 278, 1818, 20888, 5023, 310, 263, 2183, 2943, 29889, 450, 2943, 1818, 367, 697, 310, 13, 259, 334, 278, 2761, 4972, 3983, 7573, 29889, 13, 259, 334, 13, 259, 334, 732, 3207, 722, 278, 2286, 304, 679, 278, 5023, 310, 29889, 13, 259]}
{"line_number": 426, "line_type": "original", "code": "    Preconditions.checkArgument(getCfg().hasNode(useNode));", "entropy": 0.7152345180511475, "is_bug_line": false, "sus_score": 0.20851441405707474, "per_token_entropy": [8.990236282348633, 3.715672016143799, 0.0023808723781257868, 0.001311990898102522, 0.0022244728170335293, 0.0015393561916425824, 0.06073232367634773, 0.008370081894099712, 0.06271703541278839, 0.0013703251024708152, 0.001387705677188933, 0.002390980953350663, 0.004130167420953512, 0.002507163677364588, 0.0012025751639157534, 0.007836077362298965, 0.001943010720424354, 0.006268245633691549], "tokens": [268, 4721, 1116, 2187, 29889, 3198, 15730, 29898, 657, 29907, 16434, 2141, 5349, 4247, 29898, 1509, 4247, 2483]}
{"line_number": 426, "line_type": "generated", "code": "\n\n  /**\n   * Gets the must reaching definition of a given node. The node must be one of\n   * the control flow graph nodes.\n   *\n   * @param name name of the variable. It can only be names", "entropy": 0.11109750717878342, "is_bug_line": false, "sus_score": 0.20851441405707474, "per_token_entropy": [0.04497997835278511, 0.297778457403183, 0.058605171740055084, 0.7619491815567017, 0.04742998257279396, 0.004405554849654436, 0.0009545299108140171, 1.2106618881225586, 0.005775194149464369, 0.21952784061431885, 1.1023794412612915, 0.02341279946267605, 0.21878761053085327, 0.08613616973161697, 0.05055626109242439, 0.028165021911263466, 0.25207599997520447, 0.15265484154224396, 0.09557545930147171, 0.008690040558576584, 0.012170223519206047, 0.00306018372066319, 0.008137878961861134, 0.009008596651256084, 0.001879355520941317, 0.0013819915475323796, 0.0009002208826132119, 0.002736159600317478, 0.0036377226933836937, 0.0005621521850116551, 0.0024284415412694216, 0.0026553154457360506, 0.01867333985865116, 0.09877588599920273, 0.006128448061645031, 0.11025720834732056, 0.03301022946834564, 0.004218014422804117, 0.0009473841637372971, 0.041484806686639786, 0.015668615698814392, 0.517419695854187, 0.04875628650188446, 0.0015548295341432095, 0.004651677794754505, 0.0057305097579956055, 0.02877759002149105, 0.06805144995450974, 0.01727147027850151, 0.015886053442955017, 0.001292227883823216, 0.019455088302493095], "tokens": [13, 13, 29871, 7762, 13, 259, 334, 402, 1691, 278, 1818, 20888, 5023, 310, 263, 2183, 2943, 29889, 450, 2943, 1818, 367, 697, 310, 13, 259, 334, 278, 2761, 4972, 3983, 7573, 29889, 13, 259, 334, 13, 259, 334, 732, 3207, 1024, 1024, 310, 278, 2286, 29889, 739, 508, 871, 367, 2983]}
{"line_number": 427, "line_type": "original", "code": "    GraphNode<Node, Branch> n = getCfg().getNode(useNode);", "entropy": 0.5885137915611267, "is_bug_line": false, "sus_score": 0.20851441405707474, "per_token_entropy": [8.546942710876465, 3.0649890899658203, 0.001946698990650475, 0.009143976494669914, 0.017512690275907516, 0.0020679295994341373, 0.014691853895783424, 0.0013899675104767084, 0.007169235497713089, 0.007769957184791565, 0.04758503660559654, 0.0021553635597229004, 0.0013504442758858204, 0.003685350762680173, 0.009029507637023926, 0.005615768022835255, 0.002685989486053586, 0.017989568412303925, 0.0024760086089372635, 0.004077455028891563], "tokens": [268, 12367, 4247, 29966, 4247, 29892, 25889, 29958, 302, 353, 679, 29907, 16434, 2141, 657, 4247, 29898, 1509, 4247, 416]}
{"line_number": 427, "line_type": "generated", "code": "\n\n  /**\n   * Gets the must reaching definition of a given node. The node must be one of\n   * the control flow graph nodes.\n   *\n   * @param name name of the variable. It can only be names", "entropy": 0.11017400771379471, "is_bug_line": false, "sus_score": 0.20851441405707474, "per_token_entropy": [0.04693782329559326, 0.4558885395526886, 0.06918029487133026, 0.7426152229309082, 0.04619650915265083, 0.004930362105369568, 0.0011512563796713948, 1.1743723154067993, 0.005180981010198593, 0.23174162209033966, 1.1476771831512451, 0.02238459512591362, 0.23464277386665344, 0.07663363963365555, 0.04043106362223625, 0.023722976446151733, 0.22877655923366547, 0.1397988200187683, 0.08660044521093369, 0.007459406275302172, 0.009588968940079212, 0.0028084381483495235, 0.007276935037225485, 0.008510629646480083, 0.001999285537749529, 0.0013991338200867176, 0.0010139568476006389, 0.0026884861290454865, 0.0034913793206214905, 0.0005585778853856027, 0.002284181071445346, 0.0025515162851661444, 0.01578971929848194, 0.07786809653043747, 0.012546537443995476, 0.09515988081693649, 0.029708990827202797, 0.005431181751191616, 0.0014678190927952528, 0.0353776291012764, 0.01501461211591959, 0.44421470165252686, 0.03981723263859749, 0.0014178233686834574, 0.0039704786613583565, 0.004958237987011671, 0.02427881769835949, 0.05098332092165947, 0.012796902097761631, 0.009936157613992691, 0.0011888825101777911, 0.016627658158540726], "tokens": [13, 13, 29871, 7762, 13, 259, 334, 402, 1691, 278, 1818, 20888, 5023, 310, 263, 2183, 2943, 29889, 450, 2943, 1818, 367, 697, 310, 13, 259, 334, 278, 2761, 4972, 3983, 7573, 29889, 13, 259, 334, 13, 259, 334, 732, 3207, 1024, 1024, 310, 278, 2286, 29889, 739, 508, 871, 367, 2983]}
{"line_number": 428, "line_type": "original", "code": "    FlowState<MustDef> state = n.getAnnotation();", "entropy": 0.6668735146522522, "is_bug_line": false, "sus_score": 0.20851441405707474, "per_token_entropy": [8.326384544372559, 1.6023064851760864, 0.0020552005153149366, 0.012181175872683525, 0.015662161633372307, 0.002810459118336439, 0.0011137479450553656, 0.005047554615885019, 0.0051250034011900425, 0.004932141397148371, 0.017515501007437706, 0.004186437930911779, 0.0009454786195419729, 0.0006985607906244695, 0.0021384721621870995], "tokens": [268, 22787, 2792, 29966, 29924, 504, 3206, 29958, 2106, 353, 302, 29889, 657, 21978, 890]}
{"line_number": 428, "line_type": "generated", "code": "\n  /**\n   * Gets the must reaching definition of a given node. The node must be one of\n   * the control flow graph nodes.\n   *\n   * @param name name of the variable. It can only be names of", "entropy": 0.1228448897600174, "is_bug_line": false, "sus_score": 0.20851441405707474, "per_token_entropy": [0.04512060433626175, 1.1181676387786865, 1.2997082471847534, 0.03729531168937683, 0.00787404365837574, 0.0011236312566325068, 1.116546392440796, 0.004004080779850483, 0.19367879629135132, 1.0146362781524658, 0.017004525288939476, 0.17243453860282898, 0.062497228384017944, 0.03131793439388275, 0.018668191507458687, 0.20874935388565063, 0.12295402586460114, 0.07829786837100983, 0.006152025423943996, 0.007632853463292122, 0.0026175067760050297, 0.006471510045230389, 0.008561218157410622, 0.002167496830224991, 0.0017327546374872327, 0.001043133088387549, 0.002778481226414442, 0.0037278698291629553, 0.0005884823040105402, 0.0024362902622669935, 0.002687772735953331, 0.015184522606432438, 0.06924714893102646, 0.013310973532497883, 0.08715793490409851, 0.028234906494617462, 0.0063717784360051155, 0.002539031207561493, 0.028492730110883713, 0.011565541848540306, 0.3784995675086975, 0.03222134709358215, 0.0012665116228163242, 0.0031832996755838394, 0.004490648861974478, 0.020541083067655563, 0.04843651503324509, 0.01210874691605568, 0.008795921690762043, 0.001207456924021244, 0.015434111468493938, 0.0009683449170552194], "tokens": [13, 29871, 7762, 13, 259, 334, 402, 1691, 278, 1818, 20888, 5023, 310, 263, 2183, 2943, 29889, 450, 2943, 1818, 367, 697, 310, 13, 259, 334, 278, 2761, 4972, 3983, 7573, 29889, 13, 259, 334, 13, 259, 334, 732, 3207, 1024, 1024, 310, 278, 2286, 29889, 739, 508, 871, 367, 2983, 310]}
{"line_number": 429, "line_type": "original", "code": "    Definition def = state.getIn().reachingDef.get(jsScope.getVar(name));", "entropy": 0.4660795032978058, "is_bug_line": true, "sus_score": 0.20851441405707474, "per_token_entropy": [8.137530326843262, 1.9022407531738281, 0.031002594158053398, 0.008064565248787403, 0.03426916152238846, 0.010546780191361904, 0.016005488112568855, 0.04733936861157417, 0.004969625733792782, 0.016482148319482803, 0.0012367465533316135, 0.002528686309233308, 0.006277130451053381, 0.003990901168435812, 0.0026594768278300762, 0.43844538927078247, 0.0032623186707496643, 0.025670673698186874, 0.008349275216460228, 0.0030190625693649054, 0.004360334947705269, 0.007601266261190176, 0.003976534586399794], "tokens": [268, 21940, 822, 353, 2106, 29889, 657, 797, 2141, 276, 9733, 3206, 29889, 657, 29898, 1315, 15289, 29889, 657, 9037, 29898, 978, 2483]}
{"line_number": 429, "line_type": "generated", "code": "\n\n  /**\n   * Gets the must reaching definition of a given node. The node must be one of\n   * the control flow graph nodes.\n   *\n   * @param name name of the variable. It can only be names", "entropy": 0.11311397701501846, "is_bug_line": true, "sus_score": 0.20851441405707474, "per_token_entropy": [0.04394406080245972, 0.23968105018138885, 0.08776096999645233, 0.7906067967414856, 0.0474814809858799, 0.004777564201503992, 0.0011033882619813085, 1.2782771587371826, 0.0064398860558867455, 0.22733692824840546, 1.2262071371078491, 0.026121845468878746, 0.213088259100914, 0.08430811017751694, 0.04664796218276024, 0.0265726987272501, 0.26916640996932983, 0.1574556827545166, 0.08477773517370224, 0.007605525199323893, 0.008533560670912266, 0.002784187439829111, 0.007512295618653297, 0.008544670417904854, 0.0021282420493662357, 0.0013397298753261566, 0.0011620919685810804, 0.00284077157266438, 0.0037905762437731028, 0.0006206493126228452, 0.0026525810826569796, 0.0032194233499467373, 0.017029019072651863, 0.0783081203699112, 0.01339484192430973, 0.11378179490566254, 0.032919105142354965, 0.005628807470202446, 0.001293775625526905, 0.033711355179548264, 0.015860004350543022, 0.4520546793937683, 0.04238194227218628, 0.0014846028061583638, 0.004605519585311413, 0.005898213014006615, 0.027299001812934875, 0.0640903189778328, 0.019110020250082016, 0.014514457434415817, 0.0014643670292571187, 0.02260710299015045], "tokens": [13, 13, 29871, 7762, 13, 259, 334, 402, 1691, 278, 1818, 20888, 5023, 310, 263, 2183, 2943, 29889, 450, 2943, 1818, 367, 697, 310, 13, 259, 334, 278, 2761, 4972, 3983, 7573, 29889, 13, 259, 334, 13, 259, 334, 732, 3207, 1024, 1024, 310, 278, 2286, 29889, 739, 508, 871, 367, 2983]}
{"line_number": 431, "line_type": "original", "code": "    for (Var s : def.depends) {", "entropy": 1.380656123161316, "is_bug_line": true, "sus_score": 0.20851441405707474, "per_token_entropy": [7.934151649475098, 4.057652473449707, 0.010450403206050396, 0.6868958473205566, 3.3189446926116943, 0.19048984348773956, 0.2959745526313782, 0.012063520960509777, 0.04400680586695671, 0.0014948395546525717, 0.008182810619473457, 0.007566601503640413], "tokens": [268, 363, 313, 9037, 269, 584, 822, 29889, 2716, 1975, 29897, 426]}
{"line_number": 431, "line_type": "generated", "code": "\n\n  /**\n   * Gets the must reaching definition of a given node. The node must be one of\n   * the control flow graph nodes.\n   *\n   * @param name name of the variable. It can only be names", "entropy": 0.11628114432096481, "is_bug_line": true, "sus_score": 0.20851441405707474, "per_token_entropy": [0.04340212792158127, 0.2776835262775421, 0.12527398765087128, 0.7990808486938477, 0.04764323681592941, 0.006416552234441042, 0.00099323526956141, 1.194682240486145, 0.005052892025560141, 0.22918842732906342, 1.239349365234375, 0.025264397263526917, 0.26129892468452454, 0.09054316580295563, 0.048323843628168106, 0.027733322232961655, 0.24830405414104462, 0.16473691165447235, 0.08778423070907593, 0.00796002522110939, 0.009283353574573994, 0.003104868344962597, 0.00778474286198616, 0.009206934832036495, 0.002444376703351736, 0.0020649556536227465, 0.0011156531982123852, 0.002863119123503566, 0.0037804816383868456, 0.0006108802044764161, 0.0026361735071986914, 0.002900799736380577, 0.016735047101974487, 0.08432794362306595, 0.009125548414885998, 0.10884168744087219, 0.03202371299266815, 0.006968835834413767, 0.001904937089420855, 0.03569308668375015, 0.01606801524758339, 0.5569819211959839, 0.0510510616004467, 0.0016456407029181719, 0.004571700468659401, 0.005819046404212713, 0.026368720456957817, 0.060753192752599716, 0.016263434663414955, 0.012122998014092445, 0.0013704441953450441, 0.01947098784148693], "tokens": [13, 13, 29871, 7762, 13, 259, 334, 402, 1691, 278, 1818, 20888, 5023, 310, 263, 2183, 2943, 29889, 450, 2943, 1818, 367, 697, 310, 13, 259, 334, 278, 2761, 4972, 3983, 7573, 29889, 13, 259, 334, 13, 259, 334, 732, 3207, 1024, 1024, 310, 278, 2286, 29889, 739, 508, 871, 367, 2983]}
{"line_number": 342, "line_type": "original", "code": "        def.reachingDef.put(other, null);", "entropy": 2.2113072872161865, "is_bug_line": false, "sus_score": 0.20412414523193154, "per_token_entropy": [9.00426959991455, 2.861243724822998, 0.017564699053764343, 5.936315059661865, 0.5953018665313721, 0.3636590242385864, 0.09795531630516052, 0.802367091178894, 0.05708066746592522, 8.321974754333496, 0.27531182765960693, 0.3978956639766693, 0.01605616696178913], "tokens": [308, 822, 29889, 276, 9733, 3206, 29889, 649, 29898, 1228, 29892, 1870, 416]}
{"line_number": 342, "line_type": "generated", "code": "\n    rValue.accept(new NodeTraversal.AbstractPostOrderCallback() {\n      @Override\n      public void visit(NodeTraversal t, Node n, Node parent) {\n        if (n.isName()) {", "entropy": 0.1489887535572052, "is_bug_line": false, "sus_score": 0.20412414523193154, "per_token_entropy": [0.09651024639606476, 0.6730333566665649, 1.939640760421753, 0.0016538526397198439, 0.006344652269035578, 0.1892937272787094, 0.04912453144788742, 0.2987087070941925, 0.615755558013916, 0.9283390641212463, 0.00629987521097064, 0.010442499071359634, 0.004850407131016254, 0.2895524501800537, 0.16474883258342743, 0.00030155404238030314, 0.0009226117981597781, 0.02740037813782692, 0.002496223896741867, 0.0035681172739714384, 0.266173779964447, 0.3613733947277069, 0.0037469910457730293, 0.0657099038362503, 0.010332426056265831, 0.003514187643304467, 0.02308155968785286, 0.0008624648326076567, 0.0014505588915199041, 0.013722368516027927, 0.029279693961143494, 0.0002867764269467443, 0.00043215948971919715, 0.1728595346212387, 0.0010502781951799989, 0.008195816539227962, 0.08053725212812424, 0.0038349907845258713, 0.009183429181575775, 0.027801847085356712, 0.004481985233724117, 0.0025541323702782393, 0.0013235389487817883, 0.14994120597839355, 0.3586820065975189, 0.09796407073736191, 0.1722930669784546, 0.017167067155241966, 0.015471203252673149, 0.2635580003261566, 0.2707962989807129, 0.0007651500636711717], "tokens": [13, 1678, 364, 1917, 29889, 16044, 29898, 1482, 9071, 5323, 874, 284, 29889, 9118, 6747, 7514, 10717, 580, 426, 13, 418, 732, 4640, 13, 418, 970, 1780, 6493, 29898, 4247, 5323, 874, 284, 260, 29892, 9071, 302, 29892, 9071, 3847, 29897, 426, 13, 4706, 565, 313, 29876, 29889, 275, 1170, 3101, 426]}
{"line_number": 419, "line_type": "original", "code": "      return null;", "entropy": 3.3687753677368164, "is_bug_line": false, "sus_score": 0.19245008972987526, "per_token_entropy": [10.629643440246582, 1.121954083442688, 1.7198169231414795, 0.003686419688165188], "tokens": [539, 736, 1870, 29936]}
{"line_number": 419, "line_type": "generated", "code": "\n  private static class Definition {\n    final Node node;\n    final Set<Var> depends = new HashSet<Var>();\n\n    Definition(Node node) {\n      this.node = node;\n    }\n  }\n", "entropy": 0.1720477193593979, "is_bug_line": false, "sus_score": 0.19245008972987526, "per_token_entropy": [0.059294089674949646, 0.3568056523799896, 1.7070045471191406, 1.7159295082092285, 0.3330793082714081, 0.8451032638549805, 0.024420754984021187, 0.0027938163839280605, 0.055969297885894775, 0.9850456714630127, 0.022078899666666985, 0.004210180137306452, 0.0035993570927530527, 0.018586987629532814, 0.0664283037185669, 0.16541649401187897, 0.08850124478340149, 0.005399168934673071, 0.0018880413845181465, 0.004542271140962839, 0.0010563514661043882, 0.3335857391357422, 0.43858402967453003, 0.1623963564634323, 0.0019431296968832612, 0.3312777280807495, 0.005052180495113134, 0.017325013875961304, 0.006424606777727604, 0.14136643707752228, 0.012929887510836124, 0.1771712303161621, 0.01040238793939352, 0.004986113402992487, 0.29808032512664795, 0.007754224818199873, 0.005238022655248642, 0.02019580453634262, 0.010444032959640026, 0.04729047790169716, 0.005853415932506323, 0.004452909342944622, 0.004274399019777775, 0.01034835446625948, 0.0041139028035104275, 0.0033614104613661766, 0.02159743383526802, 0.0023004752583801746, 0.00455651106312871, 0.3703361451625824, 0.009192051365971565, 0.006493065971881151], "tokens": [13, 29871, 2024, 2294, 770, 21940, 426, 13, 1678, 2186, 9071, 2943, 29936, 13, 1678, 2186, 3789, 29966, 9037, 29958, 7111, 353, 716, 11874, 2697, 29966, 9037, 8295, 13, 13, 1678, 21940, 29898, 4247, 2943, 29897, 426, 13, 418, 445, 29889, 3177, 353, 2943, 29936, 13, 1678, 500, 13, 29871, 500, 13]}
{"line_number": 421, "line_type": "original", "code": "      return def.node;", "entropy": 2.516237258911133, "is_bug_line": false, "sus_score": 0.19245008972987526, "per_token_entropy": [10.6390380859375, 1.5958315134048462, 0.463193416595459, 0.08145366609096527, 1.747902750968933, 0.5700033903121948], "tokens": [539, 736, 822, 29889, 3177, 29936]}
{"line_number": 421, "line_type": "generated", "code": "\n  /**\n   * Gets the must reaching definition of a given node. The node must be one of\n   * the control flow graph nodes.\n   *\n   * @param name name of the variable. It can only be names of", "entropy": 0.11465281248092651, "is_bug_line": false, "sus_score": 0.19245008972987526, "per_token_entropy": [0.07668431848287582, 0.8000433444976807, 0.9831792116165161, 0.038123808801174164, 0.0074725402519106865, 0.0011876918142661452, 1.0581341981887817, 0.004214572254568338, 0.17080990970134735, 0.8916598558425903, 0.020085982978343964, 0.1271030604839325, 0.07376480847597122, 0.043774060904979706, 0.025523684918880463, 0.2179899960756302, 0.14317408204078674, 0.087437704205513, 0.007310544606298208, 0.00943546462804079, 0.0027782435063272715, 0.007538679987192154, 0.008693703450262547, 0.002191167790442705, 0.0015768486773595214, 0.000774917658418417, 0.002775509376078844, 0.003857553703710437, 0.0005726366653107107, 0.0024995533749461174, 0.002794410800561309, 0.015992818400263786, 0.09474845975637436, 0.028361914679408073, 0.11522827297449112, 0.03246591240167618, 0.005439243745058775, 0.0015636371681466699, 0.039426062256097794, 0.01576179265975952, 0.5770407915115356, 0.0435304194688797, 0.0014063954586163163, 0.004331492818892002, 0.005370119586586952, 0.027872104197740555, 0.06892863661050797, 0.01940668560564518, 0.017487620934844017, 0.0014791273279115558, 0.02181055396795273, 0.0011313711293041706], "tokens": [13, 29871, 7762, 13, 259, 334, 402, 1691, 278, 1818, 20888, 5023, 310, 263, 2183, 2943, 29889, 450, 2943, 1818, 367, 697, 310, 13, 259, 334, 278, 2761, 4972, 3983, 7573, 29889, 13, 259, 334, 13, 259, 334, 732, 3207, 1024, 1024, 310, 278, 2286, 29889, 739, 508, 871, 367, 2983, 310]}
{"line_number": 269, "line_type": "original", "code": "        for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {", "entropy": 0.6985108256340027, "is_bug_line": false, "sus_score": 0.1901172751573434, "per_token_entropy": [9.490849494934082, 3.7093613147735596, 0.008759998716413975, 0.8138115406036377, 0.7185522317886353, 0.26601773500442505, 0.08380505442619324, 0.013301679864525795, 0.0007357274298556149, 0.02199179120361805, 0.00046921687317080796, 0.010594552382826805, 0.11586940288543701, 0.002946204738691449, 0.006966704968363047, 0.0013319915160536766, 1.3626418113708496, 0.006816940847784281, 0.06901241838932037, 0.021111300215125084, 0.011259703896939754, 0.0024067978374660015, 0.016414837911725044, 0.00923043955117464], "tokens": [308, 363, 313, 4247, 274, 353, 302, 29889, 657, 6730, 5938, 890, 274, 2804, 1870, 29936, 274, 353, 274, 29889, 657, 9190, 3101, 426]}
{"line_number": 269, "line_type": "generated", "code": "\n  /**\n   * @param n The node in question.\n   * @param cfgNode The node to add\n   * @param conditional true if the definition is not always executed.\n   */\n  private void computeMustUse", "entropy": 0.14762882888317108, "is_bug_line": false, "sus_score": 0.1901172751573434, "per_token_entropy": [0.10006669908761978, 0.5355036854743958, 0.5135046243667603, 0.07043775916099548, 0.010064449161291122, 0.0010480155469849706, 1.469958782196045, 0.104079470038414, 0.593880832195282, 0.10424983501434326, 0.13864248991012573, 0.20405614376068115, 0.0017199022695422173, 0.03020738624036312, 0.010590777732431889, 0.0024559118319302797, 0.025929972529411316, 0.0012318650260567665, 0.013079444877803326, 0.15361140668392181, 0.004128030501306057, 0.008658249862492085, 0.01784496009349823, 0.055942244827747345, 0.022426676005125046, 0.04894110560417175, 0.07231272011995316, 0.005581508856266737, 0.04050204157829285, 0.0008840228547342122, 0.006408261135220528, 1.6445558071136475, 0.03062772937119007, 0.003072781255468726, 0.009081132709980011, 0.10576699674129486, 0.004187981132417917, 0.01704695075750351, 0.0018995827995240688, 0.008110682480037212, 0.004092058166861534, 0.0011127954348921776, 0.007526966743171215, 0.038791317492723465, 0.0003578022588044405, 0.024522308260202408, 0.026707811281085014, 0.0328478179872036, 0.07265310734510422, 0.6571093797683716, 0.00904108490794897, 0.6096376776695251], "tokens": [13, 29871, 7762, 13, 259, 334, 732, 3207, 302, 450, 2943, 297, 1139, 29889, 13, 259, 334, 732, 3207, 274, 16434, 4247, 450, 2943, 304, 788, 13, 259, 334, 732, 3207, 15047, 1565, 565, 278, 5023, 338, 451, 2337, 8283, 29889, 13, 259, 3776, 13, 29871, 2024, 1780, 10272, 29924, 504, 11403]}
{"line_number": 270, "line_type": "original", "code": "          if (c.hasChildren()) {", "entropy": 2.353667974472046, "is_bug_line": false, "sus_score": 0.1901172751573434, "per_token_entropy": [8.829521179199219, 3.0757246017456055, 0.1871473491191864, 2.964130401611328, 0.7139135003089905, 5.134692668914795, 0.12672685086727142, 0.11341883987188339, 0.03773713856935501], "tokens": [965, 565, 313, 29883, 29889, 5349, 19334, 3101, 426]}
{"line_number": 270, "line_type": "generated", "code": "\n   * Adds a variable to the output must-def set if it's a local variable.\n   *\n   * @param varName The name of the variable.\n   * @param cfgNode The node where the variable is", "entropy": 0.526318371295929, "is_bug_line": false, "sus_score": 0.1901172751573434, "per_token_entropy": [0.25882819294929504, 0.22614578902721405, 0.04887254163622856, 1.6838486194610596, 0.6323869228363037, 0.8959656357765198, 2.147352933883667, 0.5568569898605347, 0.1625639647245407, 2.3176560401916504, 3.073720932006836, 0.8792477250099182, 0.1892349272966385, 0.589826226234436, 0.8074629306793213, 0.3351404368877411, 1.4240000247955322, 0.0002812943421304226, 0.855190098285675, 0.09254278242588043, 0.8436271548271179, 0.3202499747276306, 0.04449835792183876, 0.15098339319229126, 0.1878480464220047, 0.8176412582397461, 0.04097277671098709, 0.004490530118346214, 0.054556023329496384, 0.01147821918129921, 1.253774881362915, 0.06528428196907043, 0.18075306713581085, 0.6295410990715027, 0.05845822021365166, 0.04163598641753197, 0.08093168586492538, 0.7468760013580322, 0.011595354415476322, 0.08421256393194199, 0.005279645789414644, 0.0017923733685165644, 0.0014140140265226364, 0.46536850929260254, 0.0014522254932671785, 0.015323176980018616, 0.10551472753286362, 0.7034733295440674, 2.136683464050293, 0.25351276993751526, 0.5971999764442444, 0.2750076353549957], "tokens": [13, 259, 334, 3462, 29879, 263, 2286, 304, 278, 1962, 1818, 29899, 1753, 731, 565, 372, 29915, 29879, 263, 1887, 2286, 29889, 13, 259, 334, 13, 259, 334, 732, 3207, 722, 1170, 450, 1024, 310, 278, 2286, 29889, 13, 259, 334, 732, 3207, 274, 16434, 4247, 450, 2943, 988, 278, 2286, 338]}
{"line_number": 276, "line_type": "original", "code": "        return;", "entropy": 5.082859516143799, "is_bug_line": false, "sus_score": 0.1901172751573434, "per_token_entropy": [10.509751319885254, 4.656296730041504, 0.08253027498722076], "tokens": [308, 736, 29936]}
{"line_number": 276, "line_type": "generated", "code": "\n  private void addToDefIfLocal(String name, Node node, Node rValue,\n      Map<String, Node> output) {\n    if (escapedNames.contains(name)) {\n      return;\n    }", "entropy": 0.23476292192935944, "is_bug_line": false, "sus_score": 0.1901172751573434, "per_token_entropy": [0.1113736629486084, 0.411898672580719, 0.19944851100444794, 0.14188821613788605, 0.07389635592699051, 0.013303915038704872, 0.007788054645061493, 0.06873467564582825, 0.0013011569390073419, 0.02484586276113987, 0.25102823972702026, 0.1682768315076828, 0.0015957729192450643, 0.9376512765884399, 0.12644587457180023, 0.006878625135868788, 0.128843292593956, 1.0606144666671753, 0.4031096398830414, 0.011556114070117474, 0.051022741943597794, 0.23764052987098694, 0.8735800981521606, 0.010517762042582035, 0.45494315028190613, 0.0007479969062842429, 2.1172945499420166, 0.06485424190759659, 0.40081387758255005, 0.008418548852205276, 0.003501951927319169, 0.0039552804082632065, 0.15647925436496735, 0.1826210618019104, 0.3954674303531647, 0.7728826403617859, 0.00038914260221645236, 0.028697434812784195, 1.9542200565338135, 0.06365931779146194, 0.020794358104467392, 0.023393934592604637, 0.0022749039344489574, 0.0760209858417511, 0.010297856293618679, 0.015474607236683369, 0.019684210419654846, 0.0862564668059349, 0.0010245556477457285, 0.009794038720428944, 0.010004613548517227, 0.00046361665590666234], "tokens": [13, 29871, 2024, 1780, 788, 1762, 3206, 3644, 7717, 29898, 1231, 1024, 29892, 9071, 2943, 29892, 9071, 364, 1917, 29892, 13, 418, 7315, 29966, 1231, 29892, 9071, 29958, 1962, 29897, 426, 13, 1678, 565, 313, 267, 5030, 287, 8659, 29889, 11516, 29898, 978, 876, 426, 13, 418, 736, 29936, 13, 1678, 500]}
{"line_number": 352, "line_type": "original", "code": "          computeDependence(definition, rValue);", "entropy": 2.136935234069824, "is_bug_line": false, "sus_score": 0.1889822365046136, "per_token_entropy": [10.857439994812012, 6.022341251373291, 0.3432961702346802, 0.019118674099445343, 0.0052260453812778, 0.11758295446634293, 4.894731521606445, 0.04277869686484337, 1.0729365348815918, 0.020104676485061646, 0.11072995513677597], "tokens": [965, 10272, 8498, 355, 663, 29898, 16553, 29892, 364, 1917, 416]}
{"line_number": 352, "line_type": "generated", "code": "\n  }\n\n  /**\n   * A definition is the variable that must be defined in the CFG node.\n   *\n   *", "entropy": 0.8881929516792297, "is_bug_line": false, "sus_score": 0.1889822365046136, "per_token_entropy": [0.05276595056056976, 0.15412887930870056, 0.005405571311712265, 0.009923646226525307, 0.11847008019685745, 0.08827230334281921, 0.4497283101081848, 0.06567072123289108, 0.005460347980260849, 0.0006181474891491234, 2.3260772228240967, 1.710288405418396, 1.5975340604782104, 2.207087993621826, 3.9482293128967285, 1.8871327638626099, 2.9530487060546875, 0.22456227242946625, 0.5263605117797852, 2.1385068893432617, 1.4019293785095215, 2.0486626625061035, 0.0017739288741722703, 0.5384988188743591, 0.6229302287101746, 0.3535790741443634, 0.0029006809927523136, 0.7590705156326294, 1.2859795093536377, 0.003173674223944545, 0.04621267318725586], "tokens": [13, 29871, 500, 13, 13, 29871, 7762, 13, 259, 334, 319, 5023, 338, 278, 2286, 393, 1818, 367, 3342, 297, 278, 17861, 29954, 2943, 29889, 13, 259, 334, 13, 259, 334]}
