{"line_number": 57, "line_type": "original", "code": "      Supplier<String> safeNameIdSupplier) {", "entropy": 1.6403368711471558, "is_bug_line": false, "sus_score": 0.10153461651336192, "per_token_entropy": [9.78750991821289, 9.607887268066406, 0.0725162997841835, 0.04231589660048485, 0.08549570292234421, 0.001604342251084745, 0.1384192407131195, 0.004992756061255932, 0.003243782324716449, 0.0029604677110910416, 0.001991790486499667, 1.4672877788543701, 0.10815227776765823], "tokens": [539, 9179, 4926, 29966, 1231, 29958, 9109, 1170, 1204, 20182, 4926, 29897, 426]}
{"line_number": 57, "line_type": "generated", "code": "\n    /**\n     * Splits up the object literal into individual variables, and\n     * replaces the object literal with a reference to the first variable.\n     */\n    private void splitObject(Var v, Reference declaration, Reference init", "entropy": 0.4619758725166321, "is_bug_line": false, "sus_score": 0.10153461651336192, "per_token_entropy": [0.045724015682935715, 0.3276435434818268, 0.7218432426452637, 0.026956049725413322, 0.004451722372323275, 0.0001245659514097497, 3.3256680965423584, 0.020045671612024307, 0.0010278901318088174, 0.7832155823707581, 0.7915571928024292, 0.7257058620452881, 0.735319972038269, 0.9601864814758301, 0.47189462184906006, 0.3638288080692291, 1.5155665874481201, 1.01853346824646, 0.7883228063583374, 0.0005915798828937113, 0.00015698630886618048, 0.867027223110199, 0.0006100462633185089, 1.1997907161712646, 1.4066030979156494, 0.6285305023193359, 0.4041166603565216, 1.355295181274414, 0.9101595878601074, 0.011508741416037083, 0.25397995114326477, 0.6627971529960632, 0.794745147228241, 0.23547808825969696, 0.0010277710389345884, 0.0020691193640232086, 0.5233480930328369, 0.00016056202002801, 0.009241778403520584, 0.045583248138427734, 0.00967681035399437, 0.0023859862703830004, 5.543078441405669e-05, 0.003320420393720269, 0.35961320996284485, 0.5525899529457092, 0.001829380402341485, 0.2768267095088959, 0.07317199558019638, 0.004876387305557728, 0.7679087519645691, 0.03005354478955269], "tokens": [13, 1678, 7762, 13, 268, 334, 317, 572, 1169, 701, 278, 1203, 16333, 964, 5375, 3651, 29892, 322, 13, 268, 334, 1634, 6048, 278, 1203, 16333, 411, 263, 3407, 304, 278, 937, 2286, 29889, 13, 268, 3776, 13, 1678, 2024, 1780, 6219, 2061, 29898, 9037, 325, 29892, 12105, 12029, 29892, 12105, 2069]}
{"line_number": 58, "line_type": "original", "code": "    this.compiler = compiler;", "entropy": 2.6783361434936523, "is_bug_line": false, "sus_score": 0.10153461651336192, "per_token_entropy": [6.342144966125488, 10.078510284423828, 0.05981849879026413, 1.8486480712890625, 0.37077394127845764, 0.04046117514371872, 0.00799574051052332], "tokens": [268, 445, 29889, 21789, 353, 6516, 29936]}
{"line_number": 58, "line_type": "generated", "code": "\n    private boolean isVarInlineForbidden(Var v) {\n      return false;\n    }\n\n    /**\n     * Returns true if the given variable is a candidate for inlining.\n     */\n    private boolean", "entropy": 0.3561913073062897, "is_bug_line": false, "sus_score": 0.10153461651336192, "per_token_entropy": [0.06796658784151077, 0.3513411283493042, 1.0840964317321777, 0.28919050097465515, 0.028909046202898026, 0.4249960780143738, 0.005019681062549353, 0.00027259447961114347, 0.0012838939437642694, 5.1616290875244886e-05, 2.4199192921514623e-05, 0.0029661727603524923, 0.00931642297655344, 0.2054654061794281, 0.004192848224192858, 0.0010296764085069299, 0.0006494796834886074, 0.4863068163394928, 0.7760051488876343, 1.822426438331604, 0.004270244389772415, 0.011006594635546207, 0.02254125289618969, 0.0014918637461960316, 0.009549178183078766, 0.2552894949913025, 0.18748272955417633, 0.8191770315170288, 0.029533427208662033, 0.0017215682892128825, 0.0001062098381225951, 2.2409310340881348, 0.7175298929214478, 0.02216401882469654, 0.6466782093048096, 1.079169750213623, 1.0332682132720947, 0.7343809008598328, 1.8767881393432617, 1.281814455986023, 0.08360211551189423, 0.41778334975242615, 0.004671018570661545, 0.0006232702871784568, 0.48441725969314575, 0.07546620815992355, 0.0005465444410219789, 0.835059404373169, 4.494089080253616e-05, 0.012271733954548836, 0.061490293592214584, 0.00956795271486044], "tokens": [13, 1678, 2024, 7223, 338, 9037, 797, 1220, 2831, 29890, 4215, 29898, 9037, 325, 29897, 426, 13, 418, 736, 2089, 29936, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 16969, 1565, 565, 278, 2183, 2286, 338, 263, 14020, 363, 297, 1915, 292, 29889, 13, 268, 3776, 13, 1678, 2024, 7223]}
{"line_number": 59, "line_type": "original", "code": "    this.safeNameIdSupplier = safeNameIdSupplier;", "entropy": 1.4363656044006348, "is_bug_line": false, "sus_score": 0.10153461651336192, "per_token_entropy": [3.93237566947937, 12.195879936218262, 0.7756373882293701, 3.647066593170166, 0.021042201668024063, 0.005385296419262886, 0.0799025446176529, 0.0029841200448572636, 0.5907573103904724, 0.27569320797920227, 0.0023834886960685253, 0.0023092764895409346, 0.003107126336544752, 0.0009829933987930417, 0.009974989108741283], "tokens": [268, 445, 29889, 11177, 1170, 1204, 20182, 4926, 353, 9109, 1170, 1204, 20182, 4926, 29936]}
{"line_number": 59, "line_type": "generated", "code": "\n     * Checks if a variable is not inlinable because it is a function\n     * expression.\n     */\n    private boolean isVarInlineForbidden(Var v) {\n      return v.isFunction() && v", "entropy": 0.5545612573623657, "is_bug_line": false, "sus_score": 0.10153461651336192, "per_token_entropy": [0.23068852722644806, 0.5824115872383118, 0.13465170562267303, 2.2323110103607178, 0.5638332366943359, 0.9950050115585327, 1.3395215272903442, 0.4030926525592804, 0.8242751955986023, 2.4785642623901367, 1.5871325731277466, 0.26806640625, 0.00662073353305459, 1.020376205444336, 0.5476897954940796, 0.6965530514717102, 2.288332939147949, 2.1059482097625732, 0.9770480990409851, 0.06845607608556747, 0.02469014748930931, 2.01385235786438, 1.314789891242981, 0.29640963673591614, 0.1462315320968628, 0.446031391620636, 0.0008138681878335774, 0.10070512443780899, 0.12278366088867188, 0.017577700316905975, 0.00736462464556098, 0.04358565807342529, 0.005218218546360731, 0.00037102968781255186, 0.000739539333153516, 1.7762025890988298e-05, 6.90197994117625e-05, 0.004559359047561884, 0.005826275795698166, 0.19037652015686035, 0.0037022160831838846, 0.0012397230602800846, 0.0011931689223274589, 0.4053559899330139, 1.023486852645874, 0.4671799838542938, 0.07200771570205688, 0.3447936475276947, 0.17491738498210907, 1.233116865158081, 0.43911030888557434, 0.5784882307052612], "tokens": [13, 268, 334, 5399, 29879, 565, 263, 2286, 338, 451, 297, 1915, 519, 1363, 372, 338, 263, 740, 13, 268, 334, 4603, 29889, 13, 268, 3776, 13, 1678, 2024, 7223, 338, 9037, 797, 1220, 2831, 29890, 4215, 29898, 9037, 325, 29897, 426, 13, 418, 736, 325, 29889, 275, 6678, 580, 2607, 325]}
{"line_number": 60, "line_type": "original", "code": "  }", "entropy": 5.968890190124512, "is_bug_line": false, "sus_score": 0.10153461651336192, "per_token_entropy": [4.72769021987915, 7.210089683532715], "tokens": [259, 500]}
{"line_number": 60, "line_type": "generated", "code": "\n     *\n     * @param n The node to check.\n     * @return Whether any variable references were found.\n     */\n    private boolean hasVariableReferences(Node n) {\n      for (Node c = n.get", "entropy": 0.37752923369407654, "is_bug_line": false, "sus_score": 0.10153461651336192, "per_token_entropy": [0.17454272508621216, 0.938644528388977, 0.28789567947387695, 3.1171436309814453, 0.04667310789227486, 0.08374091982841492, 0.23046787083148956, 0.3549865186214447, 1.121475100517273, 0.7789636254310608, 0.24670077860355377, 0.6453432440757751, 0.9409177303314209, 0.5451788902282715, 0.019224977120757103, 0.05092316493391991, 0.14920161664485931, 0.029515139758586884, 0.1708548367023468, 0.7465549111366272, 2.272007942199707, 1.195481777191162, 0.23029233515262604, 0.5327125787734985, 0.1493089199066162, 0.15228474140167236, 0.0020719743333756924, 0.06392493844032288, 0.006289095152169466, 0.0015710166189819574, 0.06312450021505356, 0.16406100988388062, 0.02427055686712265, 0.5397493243217468, 0.9447295665740967, 0.08782561123371124, 0.004381936509162188, 0.03316649794578552, 0.006685982458293438, 0.022366758435964584, 0.024507420137524605, 0.0012153151910752058, 0.004965948406606913, 0.16340023279190063, 1.80430006980896, 0.004129692446440458, 0.056376248598098755, 0.19725729525089264, 0.19751347601413727, 0.0007121411035768688, 0.0018581758486106992, 2.610649426060263e-05], "tokens": [13, 268, 334, 13, 268, 334, 732, 3207, 302, 450, 2943, 304, 1423, 29889, 13, 268, 334, 732, 2457, 26460, 738, 2286, 9282, 892, 1476, 29889, 13, 268, 3776, 13, 1678, 2024, 7223, 756, 16174, 1123, 10662, 29898, 4247, 302, 29897, 426, 13, 418, 363, 313, 4247, 274, 353, 302, 29889, 657]}
{"line_number": 64, "line_type": "original", "code": "    ReferenceCollectingCallback callback = new ReferenceCollectingCallback(", "entropy": 1.5031245946884155, "is_bug_line": false, "sus_score": 0.10153461651336192, "per_token_entropy": [5.839877605438232, 7.1143646240234375, 2.2371153831481934, 0.005804231856018305, 0.004828934092074633, 1.9997045993804932, 0.20749787986278534, 1.8915696144104004, 0.039364174008369446, 0.0005894353962503374, 0.00028761065914295614, 0.0003325386205688119, 0.1992807239294052], "tokens": [268, 12105, 28916, 292, 10717, 6939, 353, 716, 12105, 28916, 292, 10717, 29898]}
{"line_number": 64, "line_type": "generated", "code": "\n        ReferenceCollection refInfo = t.getScope().getVarReferenceMap().getReferences(v);\n        if (refInfo != null && refInfo.isSimpleAssignmentToName()) {\n            staleVars.add(", "entropy": 0.39365822076797485, "is_bug_line": false, "sus_score": 0.10153461651336192, "per_token_entropy": [0.1118212565779686, 1.5766279697418213, 2.2827506065368652, 0.4785071611404419, 1.9400545358657837, 1.5618846416473389, 0.031779155135154724, 1.028519630432129, 0.031246071681380272, 0.0013442536583170295, 0.07114288955926895, 0.02849747985601425, 0.03791172802448273, 0.07838086783885956, 0.6388093829154968, 1.134137749671936, 0.31240198016166687, 0.02722104638814926, 0.13642919063568115, 0.000288087350782007, 0.0074178739450871944, 0.26145637035369873, 0.01042846031486988, 0.0014022289542481303, 0.3703574538230896, 0.6915428042411804, 0.20005963742733002, 0.0675487294793129, 0.0003010773507412523, 0.717780351638794, 0.001632430125027895, 0.9688645005226135, 0.6016695499420166, 0.00046754872892051935, 0.011682430282235146, 1.2983653545379639, 0.7705634832382202, 0.5017272233963013, 0.2583686113357544, 0.12782812118530273, 0.19384919106960297, 0.2860812246799469, 0.0033233908470720053, 0.0033154303673654795, 0.2786741256713867, 1.204978108406067, 0.0003483880718704313, 0.0022354156244546175, 6.97350042173639e-05, 0.0006096888100728393, 0.0008998635457828641, 0.11662237346172333], "tokens": [13, 4706, 12105, 7196, 2143, 3401, 353, 260, 29889, 657, 15289, 2141, 657, 9037, 7422, 3388, 2141, 657, 1123, 10662, 29898, 29894, 416, 13, 4706, 565, 313, 999, 3401, 2804, 1870, 2607, 2143, 3401, 29889, 275, 15427, 7900, 10194, 1762, 1170, 3101, 426, 13, 9651, 380, 744, 29963, 1503, 29889, 1202, 29898]}
{"line_number": 66, "line_type": "original", "code": "    callback.process(externs, root);", "entropy": 2.767439126968384, "is_bug_line": false, "sus_score": 0.10153461651336192, "per_token_entropy": [7.611990928649902, 10.428595542907715, 0.24504008889198303, 2.9998557567596436, 0.5245996117591858, 8.207371711730957, 0.02765459008514881, 0.0356057770550251, 0.019581228494644165, 0.2492210566997528, 0.09231442958116531], "tokens": [268, 6939, 29889, 5014, 29898, 735, 725, 29879, 29892, 3876, 416]}
{"line_number": 66, "line_type": "generated", "code": "\n        @Override\n        public void visit(Node n) {\n          if (n.getType() == Token.NAME) {\n            Var var = scope.getVar(n.getString());\n            if (var != null && !", "entropy": 0.15670950710773468, "is_bug_line": false, "sus_score": 0.10153461651336192, "per_token_entropy": [0.08143948763608932, 0.9523576498031616, 0.2858249247074127, 0.002342220861464739, 0.09187454730272293, 0.02325359918177128, 0.006066598929464817, 0.008053095079958439, 0.0012867513578385115, 0.0006306566647253931, 0.0010170531459152699, 0.4503076374530792, 0.00732888700440526, 0.0087428642436862, 0.010064921341836452, 0.25727400183677673, 0.32911333441734314, 0.04883291944861412, 0.20282350480556488, 0.015080489218235016, 0.61275315284729, 0.08276855200529099, 0.0007587176514789462, 0.054399896413087845, 0.0025274972431361675, 0.00014602071314584464, 0.12933938205242157, 0.32147878408432007, 0.0007242917199619114, 0.0006575806182809174, 0.03486580029129982, 0.591998279094696, 0.9693417549133301, 0.0047578695230185986, 0.024713406339287758, 0.0007114263135008514, 0.0036061275750398636, 0.0058820960111916065, 0.027049222961068153, 0.011415168642997742, 0.0010456338059157133, 0.015229138545691967, 0.0008715168805792928, 0.0005681092734448612, 0.16258837282657623, 0.05114326253533363, 0.008361687883734703, 0.010829368606209755, 0.014116904698312283, 0.0005055579822510481, 1.6057132482528687, 0.6143110990524292], "tokens": [13, 4706, 732, 4640, 13, 4706, 970, 1780, 6493, 29898, 4247, 302, 29897, 426, 13, 3986, 565, 313, 29876, 29889, 657, 1542, 580, 1275, 25159, 29889, 5813, 29897, 426, 13, 9651, 11681, 722, 353, 6874, 29889, 657, 9037, 29898, 29876, 29889, 13719, 3310, 13, 9651, 565, 313, 1707, 2804, 1870, 2607, 1738]}
{"line_number": 67, "line_type": "original", "code": "  }", "entropy": 6.609820365905762, "is_bug_line": false, "sus_score": 0.10153461651336192, "per_token_entropy": [7.521494388580322, 5.698146343231201], "tokens": [259, 500]}
{"line_number": 67, "line_type": "generated", "code": "\n        public void visit(Node n) {\n          if (n.getType() == Token.NAME) {\n            Var var = scope.getVar(n.getString());\n            if (var != null) {\n              stale", "entropy": 0.09260771423578262, "is_bug_line": false, "sus_score": 0.10153461651336192, "per_token_entropy": [0.053143348544836044, 0.16100703179836273, 0.019046980887651443, 0.0036474622320383787, 0.0005554801900871098, 0.0007616956136189401, 0.0010729038622230291, 0.3306746482849121, 0.0042785536497831345, 0.008781859651207924, 0.00906034093350172, 0.14292818307876587, 0.31504809856414795, 0.04968991503119469, 0.21737706661224365, 0.011558588594198227, 0.5184115767478943, 0.07092803716659546, 0.0005754960584454238, 0.06139399856328964, 0.0022839431185275316, 9.870042413240299e-05, 0.1257149875164032, 0.33125582337379456, 0.0007023728103376925, 0.0007083290838636458, 0.03131701052188873, 0.6028187870979309, 0.9913464784622192, 0.004604688845574856, 0.026032302528619766, 0.0006194579764269292, 0.00335463834926486, 0.005586250685155392, 0.021624267101287842, 0.009503954090178013, 0.0008185135084204376, 0.014307181350886822, 0.0008622265886515379, 0.0005364171229302883, 0.1599722057580948, 0.05260932072997093, 0.009388345293700695, 0.012895524501800537, 0.01548693235963583, 0.0005179494037292898, 0.24734124541282654, 0.005154652986675501, 0.002267648698762059, 0.05140136182308197, 0.10451681166887283, 1.1205610462639015e-05], "tokens": [13, 4706, 970, 1780, 6493, 29898, 4247, 302, 29897, 426, 13, 3986, 565, 313, 29876, 29889, 657, 1542, 580, 1275, 25159, 29889, 5813, 29897, 426, 13, 9651, 11681, 722, 353, 6874, 29889, 657, 9037, 29898, 29876, 29889, 13719, 3310, 13, 9651, 565, 313, 1707, 2804, 1870, 29897, 426, 13, 795, 380, 744]}
