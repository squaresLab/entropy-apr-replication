{"line_number": 94, "line_type": "original", "code": "        for (Reduction reduction : reductions) {", "entropy": 1.9276551008224487, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [8.389391899108887, 9.756892204284668, 0.45116615295410156, 3.2861571311950684, 0.006126907654106617, 0.04520287364721298, 0.8644389510154724, 0.02844545803964138, 0.2460549771785736, 0.015166793018579483, 0.02321539632976055, 0.019603438675403595], "tokens": [308, 363, 313, 29934, 6085, 428, 20376, 584, 3724, 1953, 29897, 426]}
{"line_number": 94, "line_type": "generated", "code": "\n    */\n    int estimateSavings() {\n      return oldChild.getLength() - newChild.getLength();\n    }\n  }\n\n  /**\n   * Gathers possible reductions for a given set of redu", "entropy": 0.28444087505340576, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [0.1083204448223114, 1.1026170253753662, 0.6840203404426575, 0.0027895369566977024, 0.02911713905632496, 0.07828684896230698, 0.001593392575159669, 0.0010503972880542278, 8.415821503149346e-05, 8.487341256113723e-05, 0.0023363931104540825, 0.0024984830524772406, 0.006138281896710396, 0.10129304975271225, 0.6393769979476929, 1.2596211433410645, 0.005006277933716774, 0.008993002586066723, 0.18984632194042206, 0.4894500970840454, 0.01750776916742325, 0.012945655733346939, 0.018016263842582703, 0.0001995364436879754, 0.00030882356804795563, 0.0010141950333490968, 0.0006086166249588132, 0.017480943351984024, 0.0020391400903463364, 0.02756216749548912, 0.0010027624666690826, 0.001134109916165471, 0.0999496653676033, 0.006207827012985945, 0.0017201402224600315, 0.012925650924444199, 0.04068370163440704, 0.16186995804309845, 0.012340618297457695, 0.0015750633319839835, 0.00027414379292167723, 1.7335231304168701, 0.9353924989700317, 1.5440452098846436, 0.0624140202999115, 0.0023249757941812277, 1.9735002517700195, 0.7656865119934082, 0.9562751650810242, 1.5798649787902832, 0.0023544705472886562, 0.08565295487642288], "tokens": [13, 1678, 3776, 13, 1678, 938, 12678, 29903, 485, 886, 580, 426, 13, 418, 736, 2030, 5938, 29889, 657, 6513, 580, 448, 716, 5938, 29889, 657, 6513, 890, 13, 1678, 500, 13, 29871, 500, 13, 13, 29871, 7762, 13, 259, 334, 402, 19467, 1950, 3724, 1953, 363, 263, 2183, 731, 310, 3724]}
{"line_number": 95, "line_type": "original", "code": "          reduction.apply();", "entropy": 5.387641429901123, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [11.263996124267578, 11.643367767333984, 3.112372875213623, 0.7982505559921265, 0.12021956592798233], "tokens": [965, 20376, 29889, 7302, 890]}
{"line_number": 95, "line_type": "generated", "code": "\n  }\n\n  /**\n   * A reducer.  A reducer knows how to find candidate nodes to be\n   * reduced, and how to reduce them.\n   */\n  private interface Reducer {\n    /**\n", "entropy": 0.5354636311531067, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [0.07663574069738388, 0.7501651048660278, 0.016447322443127632, 0.005348776467144489, 0.018703525885939598, 0.025279391556978226, 0.14922328293323517, 0.010142218321561813, 0.001188525347970426, 0.00036638224264606833, 1.9301434755325317, 1.380126953125, 0.004539423156529665, 3.007326364517212, 0.8672500848770142, 1.8619321584701538, 0.38228970766067505, 0.001190192298963666, 2.233339309692383, 0.05690443888306618, 0.009870294481515884, 2.002544641494751, 3.277479648590088, 0.7516936659812927, 1.8341506719589233, 1.3302531242370605, 0.3333950340747833, 0.00023922442051116377, 2.5152843591058627e-05, 0.4604622721672058, 0.9686765670776367, 0.402551531791687, 0.5281966328620911, 0.014571087434887886, 0.7045454978942871, 0.6453908085823059, 0.20252661406993866, 0.22104613482952118, 0.002742460463196039, 0.06403005123138428, 0.00018630675913300365, 0.006511660758405924, 0.15488985180854797, 0.7404150366783142, 0.0011288706446066499, 4.434487345861271e-05, 9.775113539944869e-06, 0.018379617482423782, 0.00025042734341695905, 0.20075875520706177, 0.16208823025226593, 0.026510128751397133], "tokens": [13, 29871, 500, 13, 13, 29871, 7762, 13, 259, 334, 319, 3724, 2265, 29889, 29871, 319, 3724, 2265, 9906, 920, 304, 1284, 14020, 7573, 304, 367, 13, 259, 334, 12212, 29892, 322, 920, 304, 10032, 963, 29889, 13, 259, 3776, 13, 29871, 2024, 5067, 4367, 1682, 261, 426, 13, 1678, 7762, 13]}
{"line_number": 96, "line_type": "original", "code": "        }", "entropy": 7.040226936340332, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [8.836342811584473, 5.244110584259033], "tokens": [308, 500]}
{"line_number": 96, "line_type": "generated", "code": "\n    }\n  }\n\n  /**\n   * Gathers reductions.\n   */\n  private class ReductionGatherer extends AbstractPostOrderCallback {\n    private final Multimap<Reducer, Reduction", "entropy": 0.1931591033935547, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [0.17223596572875977, 1.1376296281814575, 0.011943378485739231, 0.002291436307132244, 0.11132929474115372, 0.005227468442171812, 0.0028572946321219206, 0.013087445870041847, 0.02582763135433197, 0.16026055812835693, 0.010130180977284908, 0.0007931424188427627, 0.0001867835089797154, 1.5616555213928223, 1.0930423736572266, 0.871451735496521, 0.012759593315422535, 2.4255824089050293, 0.27939867973327637, 0.0004906642716377974, 0.0814378410577774, 0.00027295202016830444, 0.0028501623310148716, 0.05755559355020523, 0.03493337705731392, 0.0005436849314719439, 7.223821739898995e-05, 1.9192511899746023e-05, 9.452849917579442e-05, 2.9682672902708873e-05, 1.5258672647178173e-05, 0.41317880153656006, 0.37276557087898254, 0.07838670909404755, 0.00023576818057335913, 2.6225699912174605e-05, 0.16795873641967773, 0.00016032364510465413, 0.10210485756397247, 0.14313338696956635, 0.07307492941617966, 0.6007710695266724, 1.9311717551317997e-05, 5.876845170860179e-05, 0.0010071687866002321, 0.002557461615651846, 1.9192511899746023e-05, 6.246371776796877e-05, 0.0019629988819360733, 0.008374573662877083, 0.0023732611443847418, 3.58813522325363e-05], "tokens": [13, 1678, 500, 13, 29871, 500, 13, 13, 29871, 7762, 13, 259, 334, 402, 19467, 3724, 1953, 29889, 13, 259, 3776, 13, 29871, 2024, 770, 4367, 29884, 428, 29954, 1624, 261, 4988, 25513, 6747, 7514, 10717, 426, 13, 1678, 2024, 2186, 9683, 326, 481, 29966, 9039, 1682, 261, 29892, 4367, 29884, 428]}
{"line_number": 98, "line_type": "original", "code": "        Node addingRoot = compiler.getNodeForCodeInsertion(null);", "entropy": 1.8047676086425781, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [8.759546279907227, 5.310821533203125, 8.321476936340332, 0.07267272472381592, 0.03215924650430679, 2.036653518676758, 0.020795058459043503, 0.418955534696579, 0.7618036270141602, 0.0038041146472096443, 0.000303818320389837, 0.007380363065749407, 7.211902266135439e-05, 0.01097145862877369, 3.0929195880889893, 0.025946930050849915], "tokens": [308, 9071, 4417, 10303, 353, 6516, 29889, 657, 4247, 2831, 3399, 17491, 291, 29898, 4304, 416]}
{"line_number": 98, "line_type": "generated", "code": "\n    }\n  }\n\n  /**\n   * A reducer is responsible for finding a specific type of\n   * reduction.  If a reduction is found, the reducer is responsible\n   * for applying it.\n   */\n", "entropy": 0.5872877240180969, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [0.11019069701433182, 0.20237571001052856, 0.003999925218522549, 0.0038859345950186253, 0.10792939364910126, 0.005498286336660385, 0.0022941718343645334, 0.015574139542877674, 0.038247156888246536, 0.16334253549575806, 0.01038587186485529, 0.0006716379430145025, 0.00019274283840786666, 1.925955057144165, 1.2762001752853394, 0.004562207031995058, 1.8447380065917969, 1.0194649696350098, 0.008890803903341293, 1.8745648860931396, 2.387765884399414, 2.0195693969726562, 1.4051707983016968, 0.0058573270216584206, 1.7946830987930298, 0.0005197366117499769, 0.00036113892565481365, 1.2315130233764648, 0.8717197775840759, 0.47439444065093994, 2.837550163269043, 1.0445083379745483, 1.123172402381897, 0.2975783348083496, 0.09338115900754929, 0.11176806688308716, 1.1315643787384033, 0.434495747089386, 0.002507758093997836, 2.007241725921631, 0.460546612739563, 0.20086349546909332, 7.271502545336261e-05, 7.056941103655845e-05, 0.005525791086256504, 1.1881582736968994, 0.37485271692276, 0.13670414686203003, 0.16675633192062378, 0.001261987374164164, 0.10973168909549713, 0.00012861855793744326], "tokens": [13, 1678, 500, 13, 29871, 500, 13, 13, 29871, 7762, 13, 259, 334, 319, 3724, 2265, 338, 14040, 363, 9138, 263, 2702, 1134, 310, 13, 259, 334, 20376, 29889, 29871, 960, 263, 20376, 338, 1476, 29892, 278, 3724, 2265, 338, 14040, 13, 259, 334, 363, 15399, 372, 29889, 13, 259, 3776, 13]}
{"line_number": 99, "line_type": "original", "code": "        addingRoot.addChildrenToFront(helperCode);", "entropy": 2.7668282985687256, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [11.037562370300293, 13.941048622131348, 0.23235459625720978, 2.8910598754882812, 0.1578700989484787, 1.5967525243759155, 0.09365659207105637, 0.3694952726364136, 0.011690913699567318, 1.3885513544082642, 0.08743737637996674, 1.3944578170776367], "tokens": [308, 4417, 10303, 29889, 1202, 19334, 1762, 29348, 29898, 20907, 3399, 416]}
{"line_number": 99, "line_type": "generated", "code": "\n  }\n\n  /**\n   * A reducer for a specific type of function.\n   */\n  private interface Reducer {\n    /**\n     * Gets the source code for a helper function that can be used\n    ", "entropy": 0.530521035194397, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [0.06871909648180008, 0.13366597890853882, 0.006037924438714981, 0.006046455819159746, 0.030739637091755867, 0.029093865305185318, 0.1581183671951294, 0.008086323738098145, 0.0007475204183720052, 0.00019596086349338293, 1.9068140983581543, 1.4073187112808228, 0.004359385464340448, 3.1604180335998535, 0.628170371055603, 1.2118408679962158, 1.7146663665771484, 0.016540542244911194, 0.7453757524490356, 0.7405318021774292, 0.307340145111084, 0.002544738817960024, 0.11810500919818878, 9.107174992095679e-05, 0.0024205928202718496, 0.164256751537323, 0.8773069977760315, 0.0014316319720819592, 0.00012194366718176752, 1.847726889536716e-05, 0.02614309825003147, 0.0004078510100953281, 0.25239574909210205, 0.15596412122249603, 0.0202009454369545, 0.0007021345663815737, 2.13382354559144e-05, 2.5033681392669678, 0.24056024849414825, 0.409557044506073, 0.8912264108657837, 0.70607990026474, 0.36134764552116394, 1.7820982933044434, 0.1766592562198639, 0.19948366284370422, 1.3383171558380127, 2.617600679397583, 0.4921565651893616, 0.5942788124084473, 1.3673009872436523, 9.524368942948058e-05], "tokens": [13, 29871, 500, 13, 13, 29871, 7762, 13, 259, 334, 319, 3724, 2265, 363, 263, 2702, 1134, 310, 740, 29889, 13, 259, 3776, 13, 29871, 2024, 5067, 4367, 1682, 261, 426, 13, 1678, 7762, 13, 268, 334, 402, 1691, 278, 2752, 775, 363, 263, 16876, 740, 393, 508, 367, 1304, 13, 268]}
{"line_number": 100, "line_type": "original", "code": "        compiler.reportCodeChange();", "entropy": 3.5665905475616455, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [12.509637832641602, 10.233603477478027, 1.0577610731124878, 0.7604259848594666, 0.38703683018684387, 0.0005739472107961774, 0.017095819115638733], "tokens": [308, 6516, 29889, 12276, 3399, 7277, 890]}
{"line_number": 100, "line_type": "generated", "code": "\n  /**\n   * Gather reductions for a given reducer.\n   */\n  private class ReductionGatherer extends AbstractPostOrderCallback {\n    private final Multimap<Reducer, Reduction> reduction", "entropy": 0.22412201762199402, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [0.04467666894197464, 0.19547028839588165, 0.20350901782512665, 0.009412318468093872, 0.0017792837461456656, 0.0004294188693165779, 1.528119444847107, 0.6012428402900696, 0.8813242316246033, 0.01923222839832306, 1.7290457487106323, 0.7495315670967102, 1.1326603889465332, 1.1852304935455322, 0.003200292121618986, 0.21500304341316223, 0.15434344112873077, 0.0007612191257067025, 0.058603595942258835, 0.0005696581210941076, 0.005049452651292086, 0.09906959533691406, 0.03478210046887398, 0.0023221212904900312, 8.67805938469246e-05, 3.6954195820726454e-05, 0.00012683063687290996, 4.51792984677013e-05, 2.729855441430118e-05, 0.662398636341095, 0.40234601497650146, 0.11218298226594925, 0.00017331528943032026, 4.851700214203447e-05, 0.16775907576084137, 0.00026890001026913524, 0.09731069952249527, 0.10893341898918152, 0.11122786998748779, 0.7608374357223511, 1.5020257706055418e-05, 7.497983460780233e-05, 0.0013372297398746014, 0.0021046886686235666, 3.0874729418428615e-05, 7.73638384998776e-05, 0.0022670540492981672, 0.008272194303572178, 0.00311211752705276, 3.707340147229843e-05, 0.0003054867556784302, 0.35753175616264343], "tokens": [13, 29871, 7762, 13, 259, 334, 402, 1624, 3724, 1953, 363, 263, 2183, 3724, 2265, 29889, 13, 259, 3776, 13, 29871, 2024, 770, 4367, 29884, 428, 29954, 1624, 261, 4988, 25513, 6747, 7514, 10717, 426, 13, 1678, 2024, 2186, 9683, 326, 481, 29966, 9039, 1682, 261, 29892, 4367, 29884, 428, 29958, 20376]}
{"line_number": 78, "line_type": "original", "code": "      Node helperCode = parseHelperCode(reducer);", "entropy": 1.4579267501831055, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [9.825608253479004, 3.410916805267334, 0.41609159111976624, 0.35879525542259216, 1.1757698059082031, 1.6826341152191162, 0.0007066613179631531, 0.0002687808300834149, 0.026738103479146957, 0.5468866229057312, 0.0014099667314440012, 0.049295663833618164], "tokens": [539, 9071, 16876, 3399, 353, 6088, 10739, 3399, 29898, 9313, 2265, 416]}
{"line_number": 78, "line_type": "generated", "code": "\n    private final String helperName;\n    private final Node helperCall;\n\n    Reduction(Node parent, Node oldChild, Node newChild) {\n      this.parent = parent;\n      this.oldChild = oldChild", "entropy": 0.2110019326210022, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [0.05221305415034294, 0.16571591794490814, 1.071864128112793, 0.6858429312705994, 1.292799711227417, 0.9909318685531616, 0.4641944169998169, 0.006394520867615938, 0.004160083830356598, 1.0836292505264282, 0.029357487335801125, 0.13595199584960938, 0.8744997382164001, 0.23319806158542633, 1.2877906560897827, 0.11682020872831345, 0.0018283093813806772, 0.33274877071380615, 0.15069982409477234, 0.6737115979194641, 0.0002109781780745834, 7.748573807475623e-06, 0.0018506796332076192, 0.06787458807229996, 0.07525106519460678, 0.002078874269500375, 0.0881604328751564, 0.033131327480077744, 0.005340713541954756, 0.021254271268844604, 0.09906689822673798, 0.011789292097091675, 0.0019426537910476327, 0.4255283772945404, 0.005197109654545784, 0.0025043098721653223, 0.23909488320350647, 0.06642328202724457, 0.14825430512428284, 0.0020536540541797876, 0.006244078744202852, 0.0030680273193866014, 0.0007373951375484467, 0.0007190502947196364, 0.0044657266698777676, 0.0007488307310268283, 4.3748852476710454e-05, 0.001347110839560628, 4.410734163684538e-06, 0.00025829317746683955, 0.0030884684529155493, 7.748573807475623e-06], "tokens": [13, 1678, 2024, 2186, 1714, 16876, 1170, 29936, 13, 1678, 2024, 2186, 9071, 16876, 5594, 29936, 13, 13, 1678, 4367, 29884, 428, 29898, 4247, 3847, 29892, 9071, 2030, 5938, 29892, 9071, 716, 5938, 29897, 426, 13, 418, 445, 29889, 3560, 353, 3847, 29936, 13, 418, 445, 29889, 1025, 5938, 353, 2030, 5938]}
{"line_number": 79, "line_type": "original", "code": "      if (helperCode == null) {", "entropy": 2.181537628173828, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [6.48077917098999, 3.7511730194091797, 0.3442322611808777, 7.829882621765137, 0.5591750741004944, 0.5641058087348938, 0.0039267828688025475, 0.07523392140865326, 0.02532879076898098], "tokens": [539, 565, 313, 20907, 3399, 1275, 1870, 29897, 426]}
{"line_number": 79, "line_type": "generated", "code": "\n        this.parent = parent;\n        this.oldChild = oldChild;\n        this.newChild = newChild;\n    }\n\n    /**\n     * Estimate the savings that will be made by applying the reduction.", "entropy": 0.2915443778038025, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [0.1137620061635971, 2.0739781856536865, 0.29269179701805115, 0.01020464114844799, 0.021995173767209053, 0.008206221275031567, 0.06835009157657623, 0.006776447407901287, 0.005995148327201605, 0.07201337814331055, 0.004685850348323584, 0.00011932138295378536, 0.00943593680858612, 8.201262971851975e-05, 0.0006663962849415839, 0.007967239245772362, 6.69933797325939e-05, 0.0012181727215647697, 0.0013458014000207186, 0.0151623310521245, 0.002039021346718073, 0.0001941730733960867, 0.0011288706446066499, 4.4225667807040736e-05, 0.0006515049026347697, 0.004329237621277571, 9.727005090098828e-05, 0.00391455227509141, 0.001913860673084855, 0.9512808322906494, 0.004815409891307354, 0.005051350221037865, 0.024738410487771034, 0.020767271518707275, 1.1446735858917236, 0.028375588357448578, 0.0016857474111020565, 0.00019977481861133128, 0.915582537651062, 0.45393070578575134, 0.8360564708709717, 0.7505874037742615, 0.0003262225945945829, 1.8657609224319458, 0.6509802937507629, 0.3951023817062378, 1.4083771705627441, 0.48132801055908203, 0.3012526035308838, 1.6893434524536133, 0.4371301531791687, 0.06392572075128555], "tokens": [13, 4706, 445, 29889, 3560, 353, 3847, 29936, 13, 4706, 445, 29889, 1025, 5938, 353, 2030, 5938, 29936, 13, 4706, 445, 29889, 1482, 5938, 353, 716, 5938, 29936, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 2661, 6490, 278, 4048, 886, 393, 674, 367, 1754, 491, 15399, 278, 20376, 29889]}
{"line_number": 83, "line_type": "original", "code": "      int helperCodeCost = InlineCostEstimator.getCost(helperCode);", "entropy": 1.754152774810791, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [9.809187889099121, 3.7301125526428223, 6.2054572105407715, 0.3543602228164673, 0.05479157716035843, 0.3675152063369751, 8.485880851745605, 0.26877614855766296, 0.10755584388971329, 0.004362115170806646, 0.0005397531786002219, 0.0020274813286960125, 0.029500672593712807, 1.4647884368896484, 0.3245900571346283, 0.06390794366598129, 1.8438528776168823, 0.03980829566717148, 0.17188729345798492], "tokens": [539, 938, 16876, 3399, 25733, 353, 512, 1220, 25733, 12787, 326, 1061, 29889, 657, 25733, 29898, 20907, 3399, 416]}
{"line_number": 83, "line_type": "generated", "code": "\n\n    void apply() {\n      Node replacement = newChild.cloneNode();\n      replacement.copyInformationFromForTree(oldChild);\n      parent.replaceChild(oldChild, replacement);\n    }\n\n    int estimateS", "entropy": 0.27644187211990356, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [0.020138442516326904, 0.8506725430488586, 0.09450434893369675, 1.66670823097229, 0.012194836512207985, 0.0018903020536527038, 0.0012254356406629086, 0.024722129106521606, 0.06488049775362015, 1.7717013359069824, 1.2589601278305054, 0.19974933564662933, 0.6089526414871216, 0.024034105241298676, 0.19015881419181824, 0.19571712613105774, 0.6831073760986328, 0.034147392958402634, 0.004096925724297762, 0.14659450948238373, 0.7921029925346375, 0.008407673798501492, 1.9373655319213867, 0.018390735611319542, 0.00819262396544218, 1.481825351715088, 0.027486437931656837, 0.03356946259737015, 0.1266418844461441, 0.00010179955279454589, 0.005154178477823734, 0.002988755237311125, 0.16766874492168427, 0.3744438886642456, 0.0004060635983478278, 0.003606602782383561, 0.0007956438348628581, 0.00022980909852776676, 0.006314327474683523, 0.00011657988943625242, 0.00029488030122593045, 0.004314756486564875, 0.001086002797819674, 0.0023900296073406935, 0.2364499419927597, 0.002113253576681018, 0.004750632215291262, 0.7573595643043518, 0.07455158978700638, 0.420370489358902, 0.01844632625579834, 0.002883683191612363], "tokens": [13, 13, 1678, 1780, 3394, 580, 426, 13, 418, 9071, 16920, 353, 716, 5938, 29889, 16513, 4247, 890, 13, 418, 16920, 29889, 8552, 20350, 4591, 2831, 9643, 29898, 1025, 5938, 416, 13, 418, 3847, 29889, 6506, 5938, 29898, 1025, 5938, 29892, 16920, 416, 13, 1678, 500, 13, 13, 1678, 938, 12678, 29903]}
{"line_number": 86, "line_type": "original", "code": "      int savings = 0;", "entropy": 2.238358497619629, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [7.486739158630371, 5.690252780914307, 2.2539126873016357, 0.003189241047948599, 0.21240417659282684, 2.1546146869659424, 0.09825531393289566, 0.007499517407268286], "tokens": [539, 938, 4048, 886, 353, 29871, 29900, 29936]}
{"line_number": 86, "line_type": "generated", "code": "\n     */\n    void apply() {\n      parent.replaceChild(oldChild, newChild);\n      compiler.reportChangeToEnclosingScope(parent);\n    }\n\n    /**\n     * Estimate the number of bytes", "entropy": 0.17536556720733643, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [0.08829566091299057, 0.37424540519714355, 0.12692679464817047, 0.0018989879172295332, 0.03116784617304802, 0.2661106586456299, 0.001485078944824636, 0.003053647233173251, 0.002622500527650118, 0.022098256275057793, 0.105411097407341, 0.7845926284790039, 0.0015310243470594287, 0.0106643782928586, 0.0009098681039176881, 0.0003516055876389146, 0.007800829131156206, 0.0001370812824461609, 0.0006808108882978559, 0.0027096483390778303, 0.0001308832288486883, 0.014722983352839947, 0.003258516313508153, 1.4414341449737549, 0.794441282749176, 0.0006501944735646248, 0.013495286926627159, 0.4937037527561188, 0.003777512814849615, 0.007043768186122179, 0.0001746263587847352, 0.0005153281381353736, 0.0007803970365785062, 0.0007832558476366103, 0.690068781375885, 0.009946544654667377, 0.002182603348046541, 0.0860023945569992, 0.001319729257375002, 0.0009839460253715515, 0.027797440066933632, 0.02912570722401142, 0.06983740627765656, 0.011469969525933266, 0.003211937379091978, 9.965400386136025e-05, 0.26200607419013977, 0.10066750645637512, 0.6360943913459778, 2.2218081951141357, 0.002281683497130871, 0.3564988672733307], "tokens": [13, 268, 3776, 13, 1678, 1780, 3394, 580, 426, 13, 418, 3847, 29889, 6506, 5938, 29898, 1025, 5938, 29892, 716, 5938, 416, 13, 418, 6516, 29889, 12276, 7277, 1762, 2369, 11291, 292, 15289, 29898, 3560, 416, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 2661, 6490, 278, 1353, 310, 6262]}
{"line_number": 87, "line_type": "original", "code": "      for (Reduction reduction : reductions) {", "entropy": 1.913854956626892, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [8.222315788269043, 7.904410362243652, 0.03444792702794075, 3.9315531253814697, 0.020308302715420723, 0.032280098646879196, 2.4026899337768555, 0.09000303596258163, 0.2666560709476471, 0.009397557005286217, 0.03164391964673996, 0.020551476627588272], "tokens": [539, 363, 313, 29934, 6085, 428, 20376, 584, 3724, 1953, 29897, 426]}
{"line_number": 87, "line_type": "generated", "code": "\n    void apply() {\n      oldChild.replaceWith(newChild);\n      newChild.useSourceInfoIfMissingFromForTree(oldChild);\n    }\n\n    /**\n     * Estimate the savings by removing", "entropy": 0.24514947831630707, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [0.08090639859437943, 0.3273276388645172, 0.3956151306629181, 0.00395266804844141, 0.005263874307274818, 0.00423902552574873, 0.022771766409277916, 0.042096931487321854, 2.1922595500946045, 0.0005619138828478754, 0.002103260951116681, 0.22866550087928772, 0.019403645768761635, 0.0007115454645827413, 0.006657443940639496, 0.0004419303731992841, 0.11884783208370209, 0.002834590384736657, 0.9457361698150635, 1.2594695091247559, 0.0010313435923308134, 0.0014630577061325312, 0.564022958278656, 0.002442830940708518, 0.0004102342063561082, 0.4503834843635559, 0.00017581824795342982, 0.00024041623692028224, 0.00070296844933182, 0.09388930350542068, 0.0009055804111994803, 0.0009166568052023649, 0.05162067711353302, 0.00017045476124621928, 0.0015751824248582125, 0.0023737368173897266, 0.3296411633491516, 0.0023073735646903515, 0.005530295893549919, 0.11305127292871475, 0.05437042936682701, 0.06269184499979019, 0.008302105590701103, 0.0012825843878090382, 0.00019000156316906214, 0.263179749250412, 0.09349386394023895, 0.6981972455978394, 0.6943275928497314, 0.0004152389301452786, 1.7822539806365967, 1.8063464164733887], "tokens": [13, 1678, 1780, 3394, 580, 426, 13, 418, 2030, 5938, 29889, 6506, 3047, 29898, 1482, 5938, 416, 13, 418, 716, 5938, 29889, 1509, 4435, 3401, 3644, 18552, 292, 4591, 2831, 9643, 29898, 1025, 5938, 416, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 2661, 6490, 278, 4048, 886, 491, 11077]}
{"line_number": 88, "line_type": "original", "code": "        savings += reduction.estimateSavings();", "entropy": 2.7939257621765137, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [9.141631126403809, 13.928315162658691, 0.0009157040040008724, 0.49764251708984375, 5.7562150955200195, 0.35968852043151855, 2.7884860038757324, 0.23030029237270355, 0.5028643012046814, 0.10680930316448212, 8.892617915989831e-05, 0.21415138244628906], "tokens": [308, 4048, 886, 4619, 20376, 29889, 342, 6490, 29903, 485, 886, 890]}
{"line_number": 88, "line_type": "generated", "code": "\n    }\n  }\n\n  /**\n   * A reducer that replaces a function expression with a constant.\n   */\n  private class ReturnConstantReducer implements Reducer {\n    private static final String HEL", "entropy": 0.32397425174713135, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [0.0712989792227745, 0.2605721950531006, 0.0036176491994410753, 0.004071993753314018, 0.15994101762771606, 0.007896633818745613, 0.0016600412782281637, 0.009826265275478363, 0.025436295196413994, 0.15337827801704407, 0.011154082603752613, 0.000849601230584085, 0.00019238528329879045, 1.8301622867584229, 1.3697559833526611, 0.004719784017652273, 2.3897790908813477, 1.7954967021942139, 0.0003404037852305919, 0.8355830907821655, 0.5136744976043701, 0.9466805458068848, 0.5105737447738647, 0.5279344320297241, 1.0043692588806152, 0.7317230105400085, 0.04479430988430977, 0.0005881248507648706, 0.4181302785873413, 9.369411418447271e-05, 0.008002008311450481, 0.1209709569811821, 0.06328463554382324, 0.014739545993506908, 0.00014911970356479287, 2.3841830625315197e-06, 2.47952248173533e-05, 9.536738616588991e-07, 1.6689286894688848e-06, 0.3101736307144165, 0.004251845646649599, 0.0008349508279934525, 4.172316494077677e-06, 0.01593368873000145, 6.711257447022945e-05, 0.14633524417877197, 1.0789705514907837, 0.485891193151474, 0.01435265876352787, 0.15716589987277985, 0.7893380522727966, 0.0018725732807070017], "tokens": [13, 1678, 500, 13, 29871, 500, 13, 13, 29871, 7762, 13, 259, 334, 319, 3724, 2265, 393, 1634, 6048, 263, 740, 4603, 411, 263, 4868, 29889, 13, 259, 3776, 13, 29871, 2024, 770, 7106, 12075, 424, 9039, 1682, 261, 10703, 4367, 1682, 261, 426, 13, 1678, 2024, 2294, 2186, 1714, 379, 6670]}
{"line_number": 89, "line_type": "original", "code": "      }", "entropy": 5.006999492645264, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [8.312314987182617, 1.7016843557357788], "tokens": [539, 500]}
{"line_number": 89, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Estimate the savings by computing the size of the old child\n     * and the new child.\n     */\n    int estimateSavings() {\n      return oldChild.getLength()", "entropy": 0.30936333537101746, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [0.03941655158996582, 0.4403645992279053, 0.023252785205841064, 0.0009648911654949188, 0.020541783422231674, 0.0114511139690876, 0.04060724377632141, 0.005514172837138176, 0.0006587718962691724, 8.21318244561553e-05, 0.23727133870124817, 0.09059260040521622, 0.6575415730476379, 0.7048380970954895, 0.0002766464895103127, 1.739379644393921, 2.661343812942505, 0.09651684761047363, 1.646246314048767, 0.3314627707004547, 0.06958713382482529, 0.7902646064758301, 0.29696324467658997, 1.4053672552108765, 0.00010978573118336499, 0.0032450894359499216, 1.2845031023025513, 0.1897590607404709, 0.611189603805542, 0.012885050848126411, 0.2744468152523041, 0.16516923904418945, 0.0011202972382307053, 0.3723504841327667, 0.00013136000779923052, 0.006523503921926022, 0.03804875910282135, 0.0004625442670658231, 0.0002980979916173965, 7.819823804311454e-05, 5.8410845667822286e-05, 0.0007113072206266224, 0.0008428120636381209, 0.0012142435880377889, 0.07335224747657776, 0.41636526584625244, 0.7073286175727844, 0.003403468057513237, 0.008265100419521332, 0.2506676912307739, 0.34943848848342896, 0.004417660646140575], "tokens": [13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 2661, 6490, 278, 4048, 886, 491, 20602, 278, 2159, 310, 278, 2030, 2278, 13, 268, 334, 322, 278, 716, 2278, 29889, 13, 268, 3776, 13, 1678, 938, 12678, 29903, 485, 886, 580, 426, 13, 418, 736, 2030, 5938, 29889, 657, 6513, 580]}
{"line_number": 93, "line_type": "original", "code": "      if (savings > (helperCodeCost + SAVINGS_THRESHOLD)) {", "entropy": 0.9983944296836853, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [6.65527868270874, 6.44297456741333, 0.4068700671195984, 3.1824116706848145, 0.022732730954885483, 0.0003847335756290704, 0.8763282299041748, 4.271989345550537, 0.764859676361084, 0.22693246603012085, 0.03840869292616844, 0.6973447799682617, 0.11566002666950226, 0.00037520044133998454, 0.00038699767901562154, 0.0011817384511232376, 0.00012790338951162994, 0.001277822069823742, 0.0005576247931458056, 0.00029690624796785414, 0.00042691652197390795, 0.00012563870404846966, 0.029784783720970154, 0.22474873065948486], "tokens": [539, 565, 313, 29879, 485, 886, 1405, 313, 20907, 3399, 25733, 718, 317, 7520, 4214, 29903, 29918, 4690, 1525, 7068, 5607, 29928, 876, 426]}
{"line_number": 93, "line_type": "generated", "code": "\n     * Estimate the savings by comparing the old and new child nodes.\n     *\n     * @return Estimated savings.\n     */\n    int estimateSavings() {\n      int oldCost = InlineCost", "entropy": 0.3329944610595703, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [0.23368144035339355, 0.15776504576206207, 0.15517181158065796, 0.3400668203830719, 0.06053934991359711, 0.5712755918502808, 0.7317925095558167, 0.00021360022947192192, 1.7401138544082642, 1.802600622177124, 0.15926145017147064, 1.3780473470687866, 1.025339126586914, 0.12102556228637695, 0.8901890516281128, 1.4951462745666504, 0.10918141156435013, 0.03682227060198784, 0.03844861313700676, 0.6551837921142578, 0.5456278920173645, 0.02749803476035595, 0.005202446132898331, 0.2522580325603485, 0.017473330721259117, 1.0319104194641113, 0.07493069767951965, 0.001746558933518827, 0.3428555428981781, 0.00018714107864070684, 0.9866730570793152, 0.3008458912372589, 0.03176010027527809, 0.013284152373671532, 0.0009141556802205741, 0.026371855288743973, 0.05751125141978264, 0.0012648447882384062, 0.00035375059815123677, 3.9219088648678735e-05, 6.735097849741578e-05, 0.002592656761407852, 0.0012857988476753235, 0.002319504739716649, 0.08168186992406845, 0.9266420602798462, 0.26805245876312256, 0.4754287898540497, 0.025764433667063713, 0.11037400364875793, 0.0008518642862327397, 7.712543447269127e-05], "tokens": [13, 268, 334, 2661, 6490, 278, 4048, 886, 491, 17420, 278, 2030, 322, 716, 2278, 7573, 29889, 13, 268, 334, 13, 268, 334, 732, 2457, 2661, 326, 630, 4048, 886, 29889, 13, 268, 3776, 13, 1678, 938, 12678, 29903, 485, 886, 580, 426, 13, 418, 938, 2030, 25733, 353, 512, 1220, 25733]}
{"line_number": 102, "line_type": "original", "code": "    }", "entropy": 6.999782562255859, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [7.554537773132324, 6.4450273513793945], "tokens": [268, 500]}
{"line_number": 102, "line_type": "generated", "code": "\n   * Gathers reductions for a given reducer.\n   */\n  private class ReductionGatherer extends AbstractPostOrderCallback {\n    private final Multimap<Reducer, Reduction> reductionMap;\n", "entropy": 0.2377110719680786, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [0.21868406236171722, 0.5287185907363892, 0.14601388573646545, 1.1773250102996826, 1.2628836631774902, 0.8403635621070862, 0.013826778158545494, 1.692197561264038, 0.976547122001648, 1.083964467048645, 0.9250407218933105, 0.0022278032265603542, 0.2812258005142212, 0.1838872730731964, 0.08037808537483215, 0.08924893289804459, 0.0009349980391561985, 0.013819371350109577, 0.09164942055940628, 0.02791696786880493, 0.005052180495113134, 0.0001134808044298552, 2.1934269170742482e-05, 9.583967766957358e-05, 3.4927710657939315e-05, 1.645074735279195e-05, 0.6263890862464905, 0.3631899654865265, 0.09576829522848129, 0.00019238528329879045, 3.433168603805825e-05, 0.1533687710762024, 0.00022873646230436862, 0.14973954856395721, 0.1301916539669037, 0.10632601380348206, 0.7686412334442139, 1.2397689715726301e-05, 4.088794958079234e-05, 0.0012198395561426878, 0.0019055319717153907, 1.6212332411669195e-05, 5.3165931603871286e-05, 0.0018328310688957572, 0.008809038437902927, 0.003764805383980274, 4.565611743601039e-05, 0.0002814135223161429, 0.278145968914032, 0.023209108039736748, 0.004637439269572496, 0.0007425173535011709], "tokens": [13, 259, 334, 402, 19467, 3724, 1953, 363, 263, 2183, 3724, 2265, 29889, 13, 259, 3776, 13, 29871, 2024, 770, 4367, 29884, 428, 29954, 1624, 261, 4988, 25513, 6747, 7514, 10717, 426, 13, 1678, 2024, 2186, 9683, 326, 481, 29966, 9039, 1682, 261, 29892, 4367, 29884, 428, 29958, 20376, 3388, 29936, 13]}
{"line_number": 111, "line_type": "original", "code": "    Node root = compiler.parseSyntheticCode(", "entropy": 1.7630189657211304, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [3.0306811332702637, 7.260619163513184, 2.3739264011383057, 1.663088083267212, 1.133960485458374, 0.046309877187013626, 4.848673343658447, 0.14482635259628296, 0.0476205013692379, 0.0004372832481749356, 0.0009308296139352024, 0.6051561236381531], "tokens": [268, 9071, 3876, 353, 6516, 29889, 5510, 29216, 386, 7492, 3399, 29898]}
{"line_number": 111, "line_type": "generated", "code": "\n     */\n    ReductionGatherer(List<Reducer> reducers,\n                      Multimap<Reducer, Reduction> reductions) {\n      this.reducers = reducers;\n     ", "entropy": 0.04402628168463707, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [0.33449044823646545, 0.4652673602104187, 0.6968647241592407, 0.0024261821527034044, 0.0669470876455307, 0.20769277215003967, 0.0007070187130011618, 0.00011193125828867778, 0.00027855331427417696, 1.883488948806189e-05, 1.2636104656849056e-05, 0.010257857851684093, 0.13056762516498566, 0.002649251837283373, 0.001090289675630629, 3.40932747349143e-05, 0.00011896379146492109, 0.0014432977186515927, 0.006886083632707596, 0.0014527016319334507, 0.004800698719918728, 0.09099680930376053, 0.06027832254767418, 0.07908549159765244, 0.008171932771801949, 2.038458114839159e-05, 2.932505594799295e-05, 0.00025960413040593266, 0.00018749863374978304, 2.5748875486897305e-05, 2.9682672902708873e-05, 7.30726242181845e-05, 0.0018378286622464657, 8.916457591112703e-05, 1.2636104656849056e-05, 0.00014768941036891192, 0.034032758325338364, 0.00029666791670024395, 0.00396418571472168, 0.0017049076268449426, 0.00037055302527733147, 0.047199398279190063, 0.008419140242040157, 0.0009028411004692316, 0.00016032364510465413, 0.0004589696181938052, 0.0025899221654981375, 0.009436173364520073, 9.536697689327411e-06, 0.0002022777043748647, 0.0004372832481749356, 0.0038180090487003326], "tokens": [13, 268, 3776, 13, 1678, 4367, 29884, 428, 29954, 1624, 261, 29898, 1293, 29966, 9039, 1682, 261, 29958, 3724, 22543, 29892, 13, 462, 418, 9683, 326, 481, 29966, 9039, 1682, 261, 29892, 4367, 29884, 428, 29958, 3724, 1953, 29897, 426, 13, 418, 445, 29889, 9313, 22543, 353, 3724, 22543, 29936, 13, 418]}
{"line_number": 113, "line_type": "original", "code": "    return (root != null) ? root.removeFirstChild() : null;", "entropy": 2.436105489730835, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [2.89390230178833, 11.947844505310059, 7.056887626647949, 6.24029016494751, 6.018096446990967, 0.0461743138730526, 0.34914374351501465, 1.0446908473968506, 1.40590238571167, 0.6326281428337097, 3.0180435180664062, 0.3527580797672272, 0.0035900920629501343, 0.07328810542821884, 0.04190786927938461, 0.20849265158176422, 0.08014606684446335], "tokens": [268, 736, 313, 4632, 2804, 1870, 29897, 1577, 3876, 29889, 5992, 6730, 5938, 580, 584, 1870, 29936]}
{"line_number": 113, "line_type": "generated", "code": "\n     */\n    ReductionGatherer(List<Reducer> reducers,\n                      Multimap<Reducer, Reduction> reductions) {\n      this.reducers = reducers;\n     ", "entropy": 0.03980256989598274, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [0.42604196071624756, 0.5242283940315247, 0.2263992428779602, 0.004022484179586172, 0.04151122644543648, 0.1713293194770813, 0.0010342017048969865, 0.0002669931564014405, 0.00021801002731081098, 0.0001280225842492655, 0.0001711698860162869, 0.0024512740783393383, 0.09348441660404205, 0.001437702914699912, 0.0013387774815782905, 0.00039498155820183456, 0.00023850933939684182, 0.0018140303436666727, 0.0012451999355107546, 0.0006445952458307147, 0.00813645962625742, 0.18032871186733246, 0.1532314270734787, 0.055311016738414764, 0.021436311304569244, 0.00022849810193292797, 0.0005193791585043073, 0.0009234455064870417, 0.0004866131057497114, 0.00019560330838430673, 0.0001560327800689265, 0.0004164305282756686, 0.0028490927070379257, 0.0012935374397784472, 0.00012039413559250534, 0.0005055579822510481, 0.024837490171194077, 0.0004400238685775548, 0.005256284959614277, 0.003082169685512781, 0.0024164305068552494, 0.06333689391613007, 0.00953689869493246, 0.0006423317245207727, 0.0002416080387774855, 0.0005926521262153983, 0.002197947818785906, 0.009267526678740978, 5.721882189391181e-05, 0.0005451146862469614, 0.0016990762669593096, 0.021044885739684105], "tokens": [13, 268, 3776, 13, 1678, 4367, 29884, 428, 29954, 1624, 261, 29898, 1293, 29966, 9039, 1682, 261, 29958, 3724, 22543, 29892, 13, 462, 418, 9683, 326, 481, 29966, 9039, 1682, 261, 29892, 4367, 29884, 428, 29958, 3724, 1953, 29897, 426, 13, 418, 445, 29889, 9313, 22543, 353, 3724, 22543, 29936, 13, 418]}
{"line_number": 52, "line_type": "original", "code": "  FunctionRewriter(AbstractCompiler compiler) {", "entropy": 1.7920106649398804, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [6.0374908447265625, 10.552765846252441, 0.2162971943616867, 0.0021476317197084427, 0.0006984416977502406, 1.8782124519348145, 0.5714130401611328, 0.0013718727277591825, 0.2615690529346466, 0.12001700699329376, 0.07013396173715591], "tokens": [259, 6680, 29934, 809, 5385, 29898, 9118, 25333, 6516, 29897, 426]}
{"line_number": 52, "line_type": "generated", "code": "\n    }\n  }\n\n  private Node parseHelperCode(Reducer reducer) {\n    String code = reducer.getHelperCode();\n    if (code == null) {\n      return null;\n    }\n", "entropy": 0.16055960953235626, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [0.14038565754890442, 1.336928367614746, 0.028465155512094498, 0.005934357643127441, 0.21248167753219604, 0.0018970841774716973, 0.010693391785025597, 0.10222142934799194, 0.11730067431926727, 0.7504355907440186, 0.5717804431915283, 0.011347752064466476, 0.0005270045949146152, 0.00020382710499688983, 0.0016693241195753217, 0.06530583649873734, 0.0001311216183239594, 0.00012313561455812305, 0.023516669869422913, 0.00024768622824922204, 0.001821407931856811, 0.001729065552353859, 0.0006304183625616133, 0.11706200987100601, 1.1546236276626587, 1.1436073780059814, 0.07268824428319931, 0.2685001492500305, 0.0004190520558040589, 0.0046688830479979515, 0.2923831343650818, 0.3905801475048065, 0.2175978422164917, 0.08185476809740067, 0.0011948358733206987, 0.12422150373458862, 0.6600427627563477, 0.0179949551820755, 0.011596296913921833, 0.21450650691986084, 0.006612088996917009, 0.052031099796295166, 0.013731658458709717, 0.00485799927264452, 0.02005922608077526, 0.03655290976166725, 0.0017863045213744044, 0.0003983181086368859, 0.0010509926360100508, 0.003959317691624165, 0.0008033862104639411, 0.04793621599674225], "tokens": [13, 1678, 500, 13, 29871, 500, 13, 13, 29871, 2024, 9071, 6088, 10739, 3399, 29898, 9039, 1682, 261, 3724, 2265, 29897, 426, 13, 1678, 1714, 775, 353, 3724, 2265, 29889, 657, 10739, 3399, 890, 13, 1678, 565, 313, 401, 1275, 1870, 29897, 426, 13, 418, 736, 1870, 29936, 13, 1678, 500, 13]}
{"line_number": 53, "line_type": "original", "code": "    this.compiler = compiler;", "entropy": 2.4433274269104004, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [8.524840354919434, 7.851212024688721, 0.05985274538397789, 0.5557284951210022, 0.08076687157154083, 0.016901852563023567, 0.013988545164465904], "tokens": [268, 445, 29889, 21789, 353, 6516, 29936]}
{"line_number": 53, "line_type": "generated", "code": "\n  }\n\n  private static Node parseHelperCode(Reducer reducer) {\n    return NodeUtil.parseExpr(reducer.getHelperCode());\n  }\n\n  private static class ReductionGatherer implements", "entropy": 0.2470403015613556, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [0.024619897827506065, 0.08329285681247711, 0.0012304362608119845, 0.01396327093243599, 0.07156102359294891, 0.03867388516664505, 0.7686762809753418, 1.1572412252426147, 0.6735399961471558, 0.027229050174355507, 0.001166854752227664, 0.0003995097358711064, 0.001364372787065804, 0.057514626532793045, 9.953480184776708e-05, 8.785339014139026e-05, 0.03248126059770584, 0.00023100091493688524, 0.0017219253350049257, 0.0016137446509674191, 0.0005499995895661414, 0.13979364931583405, 2.238142728805542, 1.296331524848938, 0.6880877614021301, 0.0014643670292571187, 0.2494744062423706, 0.3174993395805359, 0.44700226187705994, 0.06306741386651993, 0.00042417587246745825, 0.003417961997911334, 0.32931292057037354, 0.5357160568237305, 0.32666075229644775, 0.08465210348367691, 0.002059602178633213, 0.013284269720315933, 0.0008891443139873445, 0.0050627365708351135, 0.10879058390855789, 0.053107742220163345, 0.8635500073432922, 0.460313618183136, 0.7817153334617615, 0.10664376616477966, 0.059427548199892044, 0.0034623933024704456, 0.4452723264694214, 6.031808152329177e-05, 4.7801782784517854e-05, 0.26410171389579773], "tokens": [13, 29871, 500, 13, 13, 29871, 2024, 2294, 9071, 6088, 10739, 3399, 29898, 9039, 1682, 261, 3724, 2265, 29897, 426, 13, 1678, 736, 9071, 7270, 29889, 5510, 21176, 29898, 9313, 2265, 29889, 657, 10739, 3399, 3310, 13, 29871, 500, 13, 13, 29871, 2024, 2294, 770, 4367, 29884, 428, 29954, 1624, 261, 10703]}
{"line_number": 54, "line_type": "original", "code": "  }", "entropy": 5.018466949462891, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [7.404774188995361, 2.632160186767578], "tokens": [259, 500]}
{"line_number": 54, "line_type": "generated", "code": "\n\n  private Node parseHelperCode(Reducer reducer) {\n    String code = reducer.getHelperCode();\n    if (code == null) {\n      return null;\n    }\n\n    Node helperCode =", "entropy": 0.17269721627235413, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [0.02958597242832184, 0.2098192274570465, 0.051285628229379654, 0.9229254126548767, 0.6267330646514893, 0.018197957426309586, 0.0007439468172378838, 0.00033122775494121015, 0.0011474461061879992, 0.06420078128576279, 6.627816765103489e-05, 6.5205356804654e-05, 0.02843642048537731, 0.00020287363440729678, 0.0014971011551097035, 0.0016830102540552616, 0.00048530244384892285, 0.04268994554877281, 1.1045873165130615, 1.1680015325546265, 0.07922624796628952, 0.20954017341136932, 0.00017128908075392246, 0.0017065736465156078, 0.29468241333961487, 0.3765299916267395, 0.19589325785636902, 0.07914519309997559, 0.0005719218170270324, 0.08583305031061172, 0.6994487047195435, 0.017621388658881187, 0.01228103693574667, 0.20107176899909973, 0.006455757189542055, 0.04742179438471794, 0.013660870492458344, 0.0049628643319010735, 0.005700521636754274, 0.035615671426057816, 0.0016580180963501334, 0.0002530493075028062, 0.000912250077817589, 0.0009279712685383856, 0.00038223114097490907, 0.04411870986223221, 0.3353175222873688, 0.021082937717437744, 0.425578236579895, 1.0171782970428467, 0.3854895532131195, 0.10713064670562744], "tokens": [13, 13, 29871, 2024, 9071, 6088, 10739, 3399, 29898, 9039, 1682, 261, 3724, 2265, 29897, 426, 13, 1678, 1714, 775, 353, 3724, 2265, 29889, 657, 10739, 3399, 890, 13, 1678, 565, 313, 401, 1275, 1870, 29897, 426, 13, 418, 736, 1870, 29936, 13, 1678, 500, 13, 13, 1678, 9071, 16876, 3399, 353]}
{"line_number": 58, "line_type": "original", "code": "    List<Reducer> reducers = ImmutableList.of(new ReturnConstantReducer(),", "entropy": 1.4053276777267456, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [5.027291774749756, 6.604190826416016, 0.1253112256526947, 4.347039222717285, 0.0004898302140645683, 0.003449800657108426, 0.02300455793738365, 0.22614626586437225, 0.003832853166386485, 0.8436232805252075, 0.27424222230911255, 0.00027652730932459235, 0.0009710840531624854, 0.11494607478380203, 0.013842297717928886, 0.03326232731342316, 2.8546769618988037, 7.465274333953857, 4.9367451667785645, 0.21281136572360992, 0.16640736162662506, 0.00036066226311959326, 0.00030763185350224376, 0.44935834407806396], "tokens": [268, 2391, 29966, 9039, 1682, 261, 29958, 3724, 22543, 353, 1954, 23975, 1293, 29889, 974, 29898, 1482, 7106, 12075, 424, 9039, 1682, 261, 3285]}
{"line_number": 58, "line_type": "generated", "code": "\n   * @param reducer The reducer that needs helper code.\n   * @return The helper code.\n   */\n  private Node parseHelperCode(Reducer reducer) {\n    String code = reducer.getHelper", "entropy": 0.2693402171134949, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [0.4883190393447876, 0.42427754402160645, 0.38013309240341187, 0.5545458197593689, 0.3299978971481323, 0.08660547435283661, 0.0018424693262204528, 0.8347583413124084, 0.11162254214286804, 0.0008794969180598855, 1.1905287504196167, 0.4100814163684845, 1.2563438415527344, 0.06299734860658646, 0.3002963960170746, 0.011411278508603573, 0.04332872852683067, 0.1165047213435173, 0.02806430123746395, 0.005030118860304356, 0.6185216903686523, 0.8376128077507019, 0.11566714197397232, 1.864478349685669, 0.18570953607559204, 0.03228483349084854, 0.023877913132309914, 0.0014737708261236548, 0.03493187949061394, 0.2448035329580307, 0.14354664087295532, 0.02212635800242424, 0.00041571559268049896, 0.00013529339048545808, 0.0065924301743507385, 0.03271353244781494, 3.218599158572033e-05, 0.00014411364099942148, 0.0036011389456689358, 0.0001958416833076626, 0.002302616136148572, 0.0034512262791395187, 0.012140781618654728, 0.2513172924518585, 1.0611915588378906, 1.1238844394683838, 0.0957920178771019, 0.28286921977996826, 0.0013231817865744233, 0.013518809340894222, 0.1707485169172287, 0.18071873486042023], "tokens": [13, 259, 334, 732, 3207, 3724, 2265, 450, 3724, 2265, 393, 4225, 16876, 775, 29889, 13, 259, 334, 732, 2457, 450, 16876, 775, 29889, 13, 259, 3776, 13, 29871, 2024, 9071, 6088, 10739, 3399, 29898, 9039, 1682, 261, 3724, 2265, 29897, 426, 13, 1678, 1714, 775, 353, 3724, 2265, 29889, 657, 10739]}
