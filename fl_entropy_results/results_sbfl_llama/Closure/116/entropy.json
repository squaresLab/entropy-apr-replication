{"line_number": 744, "line_type": "original", "code": "        cArg = cArg.getNext();", "entropy": 2.875782012939453, "is_bug_line": false, "sus_score": 0.3746343246326776, "per_token_entropy": [8.901406288146973, 9.278897285461426, 7.1224846839904785, 0.2640931010246277, 3.0240843296051025, 0.061558786779642105, 0.07350001484155655, 0.004179790150374174, 0.005467817187309265, 0.0221488606184721], "tokens": [308, 274, 8559, 353, 274, 8559, 29889, 657, 9190, 890]}
{"line_number": 744, "line_type": "generated", "code": "\n\n    if (isRemovable) {\n      if (referencesUsingBlockInlining > 0) {\n        // If the function is removed and inlined into call sites using\n        // block inlining, then the", "entropy": 0.6449541449546814, "is_bug_line": false, "sus_score": 0.3746343246326776, "per_token_entropy": [0.15151144564151764, 1.3707537651062012, 0.14725206792354584, 1.209452509880066, 0.19936706125736237, 1.1122347116470337, 0.0570705309510231, 0.00022396916756406426, 8.201262971851975e-05, 0.6670377850532532, 0.0018023689044639468, 0.003183418419212103, 0.07690335065126419, 1.7170459032058716, 0.1048445850610733, 0.4758642911911011, 0.00019822540343739092, 0.08485504984855652, 0.8268506526947021, 0.0001382732152706012, 6.854299135738984e-05, 9.321732068201527e-05, 0.7068861126899719, 0.06990010291337967, 0.13992196321487427, 0.384900838136673, 0.0011260127648711205, 0.0011330381967127323, 0.05774284526705742, 0.9930459260940552, 2.1949641704559326, 1.4106314182281494, 0.5343366861343384, 0.4977075457572937, 1.825770378112793, 2.1673521995544434, 1.8476555347442627, 0.3714330196380615, 3.5710220336914062, 1.9686192274093628, 0.6415740251541138, 1.2051929235458374, 1.0179541110992432, 0.0009896624833345413, 0.00062851223628968, 0.45218127965927124, 0.2652876377105713, 0.0073884096927940845, 0.0012693690368905663, 0.8780762553215027, 1.3290784358978271, 0.7870078086853027], "tokens": [13, 13, 1678, 565, 313, 275, 7301, 586, 519, 29897, 426, 13, 418, 565, 313, 276, 10662, 15156, 7445, 797, 1915, 292, 1405, 29871, 29900, 29897, 426, 13, 4706, 849, 960, 278, 740, 338, 6206, 322, 297, 21354, 964, 1246, 11840, 773, 13, 4706, 849, 2908, 297, 1915, 292, 29892, 769, 278]}
{"line_number": 735, "line_type": "original", "code": "        fnParam = fnParam.getNext();", "entropy": 2.6017892360687256, "is_bug_line": false, "sus_score": 0.3713906763541037, "per_token_entropy": [10.107129096984863, 8.832939147949219, 4.079483985900879, 0.375106543302536, 1.4082435369491577, 1.1741256713867188, 0.023677457123994827, 0.002233869396150112, 0.0034274663776159286, 0.011525829322636127], "tokens": [308, 7876, 4736, 353, 7876, 4736, 29889, 657, 9190, 890]}
{"line_number": 735, "line_type": "generated", "code": "\n\n    // If there are multiple references using block inlining, then\n    // the inlining will reduce the code size.\n    return referencesUsingBlockInlining > 1;\n  }\n\n  /**\n   *", "entropy": 0.5345340967178345, "is_bug_line": false, "sus_score": 0.3713906763541037, "per_token_entropy": [0.05212581530213356, 0.7915374636650085, 0.1761579066514969, 0.9299513697624207, 1.5019210577011108, 2.1183252334594727, 0.6834007501602173, 1.8547444343566895, 0.32976675033569336, 1.3545664548873901, 0.5112992525100708, 0.17227259278297424, 0.005347235128283501, 0.000990257947705686, 0.707302987575531, 1.8455315828323364, 1.3291822671890259, 0.0013365155318751931, 0.003064580960199237, 2.0946004390716553, 2.4447553157806396, 0.41656413674354553, 0.053590547293424606, 1.397053837776184, 2.2669105529785156, 0.19623227417469025, 1.0249183177947998, 0.04727126285433769, 0.8335312008857727, 0.1180495023727417, 0.04068484529852867, 0.6295847296714783, 0.4370417594909668, 0.0030453279614448547, 0.00015043080202303827, 0.00025006983196362853, 2.074220174108632e-05, 4.756337511935271e-05, 0.5441715121269226, 0.005311425309628248, 0.1733407974243164, 0.19166052341461182, 0.0010596857173368335, 0.025218600407242775, 0.0003513672563713044, 0.0010750473011285067, 0.014317288063466549, 0.07630510628223419, 0.36034804582595825, 0.02809130772948265, 0.0013405631761997938, 5.4238757002167404e-05], "tokens": [13, 13, 1678, 849, 960, 727, 526, 2999, 9282, 773, 2908, 297, 1915, 292, 29892, 769, 13, 1678, 849, 278, 297, 1915, 292, 674, 10032, 278, 775, 2159, 29889, 13, 1678, 736, 9282, 15156, 7445, 797, 1915, 292, 1405, 29871, 29896, 29936, 13, 29871, 500, 13, 13, 29871, 7762, 13, 259, 334]}
{"line_number": 727, "line_type": "original", "code": "          if (NodeUtil.mayEffectMutableState(cArg, compiler)", "entropy": 2.0178990364074707, "is_bug_line": true, "sus_score": 0.3508232077228117, "per_token_entropy": [6.093212127685547, 3.7445168495178223, 0.252799391746521, 3.37629771232605, 0.0013318725395947695, 0.0005417786305770278, 1.9708313941955566, 3.252422571182251, 0.1684265285730362, 0.002594083547592163, 0.007709747180342674, 8.162410736083984, 2.0919456481933594, 0.7239816188812256, 0.024409586563706398, 2.4129557609558105], "tokens": [965, 565, 313, 4247, 7270, 29889, 13029, 13971, 15211, 2792, 29898, 29883, 8559, 29892, 6516, 29897]}
{"line_number": 727, "line_type": "generated", "code": "\n          return false;\n        }\n      }\n    }\n\n    // If there is more than one reference using block inlining, don't inline.\n    // This is because block inlining will duplicate the code and it", "entropy": 0.6996156573295593, "is_bug_line": true, "sus_score": 0.3508232077228117, "per_token_entropy": [0.07716084271669388, 0.3125961422920227, 0.2821010649204254, 0.086637943983078, 0.0006765222642570734, 0.026620641350746155, 0.02946363389492035, 0.0009482178138568997, 0.015896964818239212, 0.06277716159820557, 0.00022980909852776676, 0.028453221544623375, 0.2694328725337982, 0.0002644904307089746, 0.0005740663618780673, 0.09068993479013443, 0.09070245921611786, 0.6076526045799255, 1.3176531791687012, 2.395066738128662, 1.188933253288269, 1.8365528583526611, 0.0781584158539772, 0.1619900017976761, 0.49724283814430237, 1.498305082321167, 0.5536547899246216, 0.14916445314884186, 0.004191186279058456, 0.0011177966371178627, 0.5726110935211182, 2.6490087509155273, 0.00041261743172071874, 0.00013863079948350787, 1.2642560005187988, 0.5227609276771545, 0.005428573116660118, 0.047219980508089066, 1.1740989685058594, 2.2445101737976074, 1.0519587993621826, 1.0807783603668213, 1.409822702407837, 0.040973350405693054, 0.013572908006608486, 0.00417480431497097, 2.019362449645996, 2.839759349822998, 0.5527044534683228, 1.885428786277771, 2.7256979942321777, 2.6104249954223633], "tokens": [13, 3986, 736, 2089, 29936, 13, 4706, 500, 13, 418, 500, 13, 1678, 500, 13, 13, 1678, 849, 960, 727, 338, 901, 1135, 697, 3407, 773, 2908, 297, 1915, 292, 29892, 1016, 29915, 29873, 10583, 29889, 13, 1678, 849, 910, 338, 1363, 2908, 297, 1915, 292, 674, 7929, 278, 775, 322, 372]}
{"line_number": 722, "line_type": "original", "code": "        if (cArg != null) {", "entropy": 2.8504536151885986, "is_bug_line": false, "sus_score": 0.34554737023254406, "per_token_entropy": [8.640811920166016, 1.5211113691329956, 0.05691750347614288, 8.066441535949707, 6.811378479003906, 0.3793627619743347, 0.00833154283463955, 0.16559955477714539, 0.004128030501306057], "tokens": [308, 565, 313, 29883, 8559, 2804, 1870, 29897, 426]}
{"line_number": 722, "line_type": "generated", "code": "\n      if (checkModules) {\n        JSModule refModule = moduleGraph.getModule(ref.getNode());\n        if (refModule != null && !moduleGraph.dependsOn(refModule, fnModule)) {\n", "entropy": 0.2022896260023117, "is_bug_line": false, "sus_score": 0.34554737023254406, "per_token_entropy": [0.046598922461271286, 1.4306390285491943, 0.3994158208370209, 0.053916580975055695, 0.11793169379234314, 0.0002746204845607281, 2.0265373677830212e-05, 0.38016197085380554, 0.00041214076918549836, 0.0015284058172255754, 0.03169381245970726, 0.9569621086120605, 0.0032206117175519466, 0.5631421804428101, 0.013457768596708775, 0.0048155286349356174, 0.507938802242279, 0.00038926175329834223, 0.004548323340713978, 0.0006516240537166595, 0.3303014934062958, 0.12543310225009918, 0.07363945245742798, 0.00911031011492014, 0.9377347230911255, 0.3003327548503876, 0.2559435963630676, 0.00045468006283044815, 0.05034838989377022, 0.15305611491203308, 0.2083493173122406, 0.40695688128471375, 0.0038036394398659468, 0.2229364812374115, 0.4639175534248352, 0.17256957292556763, 0.5640276074409485, 0.592154324054718, 0.0004689785710070282, 0.0019759670831263065, 0.027223482728004456, 0.00031287543242797256, 0.0002184867626056075, 0.001057542278431356, 1.0877060890197754, 0.0001510267611593008, 0.00036590558011084795, 0.0011363723315298557, 5.1973900554003194e-05, 0.009009305387735367, 0.0004766043566633016, 0.00011681827891152352], "tokens": [13, 418, 565, 313, 3198, 2111, 2540, 29897, 426, 13, 4706, 7649, 7355, 2143, 7355, 353, 3883, 9527, 29889, 657, 7355, 29898, 999, 29889, 657, 4247, 3310, 13, 4706, 565, 313, 999, 7355, 2804, 1870, 2607, 1738, 5453, 9527, 29889, 2716, 1975, 2951, 29898, 999, 7355, 29892, 7876, 7355, 876, 426, 13]}
{"line_number": 741, "line_type": "original", "code": "        if (NodeUtil.mayHaveSideEffects(cArg, compiler)) {", "entropy": 1.360566258430481, "is_bug_line": false, "sus_score": 0.34554737023254406, "per_token_entropy": [6.414358139038086, 3.468357801437378, 0.14837495982646942, 4.925188064575195, 0.0007472821744158864, 0.0006568658282049, 2.5758445262908936, 0.43872955441474915, 0.02509700506925583, 0.0009023646707646549, 0.0021633333526551723, 0.007369831670075655, 4.9779815673828125, 0.4102856516838074, 0.42806529998779297, 0.08061841130256653, 0.5679246187210083, 0.017528504133224487], "tokens": [308, 565, 313, 4247, 7270, 29889, 13029, 25559, 23908, 13971, 29879, 29898, 29883, 8559, 29892, 6516, 876, 426]}
{"line_number": 741, "line_type": "generated", "code": "\n\n    // If there are no references using block inlining, then the function can\n    // not be inlined.\n    if (referencesUsingBlockInlining == 0) {\n      return false;\n    }\n", "entropy": 0.49763134121894836, "is_bug_line": false, "sus_score": 0.34554737023254406, "per_token_entropy": [0.3057717978954315, 1.6721196174621582, 0.2925162613391876, 0.7577695846557617, 2.2766592502593994, 1.898162841796875, 0.7118487358093262, 1.5015895366668701, 0.501296877861023, 0.8106810450553894, 0.8020983338356018, 0.1231551468372345, 0.0039907824248075485, 0.0016189813613891602, 0.6183056831359863, 1.354145884513855, 1.7326626777648926, 1.6596088409423828, 2.345663070678711, 0.5029561519622803, 0.030903546139597893, 0.001431155833415687, 2.4157564640045166, 0.08238910883665085, 0.29564693570137024, 0.009791087359189987, 1.9867007732391357, 0.11396434158086777, 0.07362129539251328, 0.4274040460586548, 0.06429558247327805, 0.09627965837717056, 4.100715523236431e-05, 0.003178665181621909, 0.04253378510475159, 8.5588610090781e-05, 4.0411134250462055e-05, 1.5020257706055418e-05, 0.03531825169920921, 0.0022435036953538656, 0.00026079590315930545, 0.10823508352041245, 0.0023283057380467653, 0.0016752745723351836, 0.04425238445401192, 0.06608077138662338, 0.06504248082637787, 0.0001833270798670128, 0.0023210509680211544, 0.008699612691998482, 0.0004104725376237184, 0.02307736687362194], "tokens": [13, 13, 1678, 849, 960, 727, 526, 694, 9282, 773, 2908, 297, 1915, 292, 29892, 769, 278, 740, 508, 13, 1678, 849, 451, 367, 297, 21354, 29889, 13, 1678, 565, 313, 276, 10662, 15156, 7445, 797, 1915, 292, 1275, 29871, 29900, 29897, 426, 13, 418, 736, 2089, 29936, 13, 1678, 500, 13]}
{"line_number": 740, "line_type": "original", "code": "      if (cArg != null) {", "entropy": 3.146010637283325, "is_bug_line": false, "sus_score": 0.34050261230349943, "per_token_entropy": [7.858941555023193, 0.8543787002563477, 0.205211341381073, 6.354542255401611, 10.695534706115723, 1.2094027996063232, 0.034275151789188385, 1.0907008647918701, 0.011107044294476509], "tokens": [539, 565, 313, 29883, 8559, 2804, 1870, 29897, 426]}
{"line_number": 740, "line_type": "generated", "code": "\n    if (referencesUsingDirectInlining == 0 && referencesUsingBlockInlining == 0) {\n      return true;\n    }\n\n    // Calculate the cost of inlining the function.\n    int", "entropy": 0.27983739972114563, "is_bug_line": false, "sus_score": 0.34050261230349943, "per_token_entropy": [0.12497683614492416, 0.20989151298999786, 0.5104551315307617, 0.21688410639762878, 0.8882594108581543, 0.00014804698002990335, 0.030139721930027008, 0.5497500896453857, 1.168244216387393e-05, 4.5298504119273275e-05, 1.0371154530730564e-05, 0.48028433322906494, 0.029915297403931618, 0.053543880581855774, 1.4467791318893433, 0.902575671672821, 0.12802374362945557, 0.0007365613128058612, 2.5987286790041253e-05, 1.9907753085135482e-05, 4.911301948595792e-05, 0.4507629871368408, 0.004019159823656082, 0.032805364578962326, 0.06958168745040894, 0.0036235882434993982, 0.00025662468397058547, 0.04169052839279175, 0.13814549148082733, 0.38281986117362976, 0.00015579440514557064, 0.01412513293325901, 0.017233623191714287, 0.00039891392225399613, 0.07381010055541992, 0.19465501606464386, 0.10212735831737518, 0.8775918483734131, 1.6537057161331177, 0.020422421395778656, 0.12279462814331055, 0.8088402152061462, 0.31757545471191406, 0.8937397599220276, 0.02922481670975685, 0.0018010600470006466, 0.809023380279541, 0.1662829965353012, 0.8666266798973083, 0.07740790396928787, 0.1523045003414154, 0.6554662585258484], "tokens": [13, 1678, 565, 313, 276, 10662, 15156, 17392, 797, 1915, 292, 1275, 29871, 29900, 2607, 9282, 15156, 7445, 797, 1915, 292, 1275, 29871, 29900, 29897, 426, 13, 418, 736, 1565, 29936, 13, 1678, 500, 13, 13, 1678, 849, 20535, 403, 278, 3438, 310, 297, 1915, 292, 278, 740, 29889, 13, 1678, 938]}
{"line_number": 721, "line_type": "original", "code": "      if (fnParam != null) {", "entropy": 2.8788788318634033, "is_bug_line": false, "sus_score": 0.32025630761017426, "per_token_entropy": [6.52346658706665, 1.379209280014038, 0.09032034873962402, 6.021819591522217, 7.44645357131958, 3.864470958709717, 0.07340087741613388, 0.5060793161392212, 0.004686680622398853], "tokens": [539, 565, 313, 9144, 4736, 2804, 1870, 29897, 426]}
{"line_number": 721, "line_type": "generated", "code": "\n        if (checkModules) {\n          JSModule refModule = moduleGraph.getModule(ref.callNode);\n          if (fnModule != refModule) {\n            return false;\n          }\n        }\n      }", "entropy": 0.18311196565628052, "is_bug_line": false, "sus_score": 0.32025630761017426, "per_token_entropy": [0.0781533420085907, 0.9730803370475769, 0.7296286225318909, 0.09002471715211868, 0.13523666560649872, 0.0003669780562631786, 1.0490362910786644e-05, 0.34254735708236694, 0.0004891153075732291, 0.0016826532082632184, 0.04268663376569748, 1.0641374588012695, 0.003693902399390936, 0.6441455483436584, 0.01568586751818657, 0.004650253802537918, 0.47659265995025635, 0.0003430254873819649, 0.005012208595871925, 0.0007298904820345342, 0.27127355337142944, 0.10906800627708435, 0.08802299946546555, 0.009055497124791145, 1.3211885690689087, 0.17716065049171448, 0.054476212710142136, 0.0005541696446016431, 0.05164501816034317, 0.15503013134002686, 0.1717444509267807, 1.1538729667663574, 0.0005125877796672285, 0.1525087058544159, 0.059133533388376236, 0.0001411338453181088, 0.23220406472682953, 0.0004663571889977902, 0.0019258777610957623, 0.027629775926470757, 0.43495413661003113, 0.087419793009758, 0.0001262346631847322, 0.0317753441631794, 0.002014275873079896, 5.5549986427649856e-05, 0.004435107111930847, 0.04557379335165024, 0.0004353767435532063, 0.021830614656209946, 0.24553148448467255, 0.0011582816950976849], "tokens": [13, 4706, 565, 313, 3198, 2111, 2540, 29897, 426, 13, 3986, 7649, 7355, 2143, 7355, 353, 3883, 9527, 29889, 657, 7355, 29898, 999, 29889, 4804, 4247, 416, 13, 3986, 565, 313, 9144, 7355, 2804, 2143, 7355, 29897, 426, 13, 9651, 736, 2089, 29936, 13, 3986, 500, 13, 4706, 500, 13, 418, 500]}
{"line_number": 748, "line_type": "original", "code": "    return CanInlineResult.YES;", "entropy": 2.616459608078003, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [7.5264410972595215, 3.4839296340942383, 7.606061935424805, 0.005612330511212349, 0.005052180495113134, 0.0896041989326477, 0.02855309098958969, 3.866067886352539, 0.936814546585083], "tokens": [268, 736, 1815, 797, 1220, 3591, 29889, 21143, 29936]}
{"line_number": 748, "line_type": "generated", "code": "\n\n    // TODO(johnlenz): this is a very rough estimate and needs to be improved.\n    int fnSize = fnNode.getSourceFileInputSize();\n\n    // TODO(johnlenz): this is a", "entropy": 0.7111106514930725, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [0.02600175514817238, 0.27632975578308105, 0.08276964724063873, 0.8173449039459229, 2.6353211402893066, 0.04186579957604408, 0.14644840359687805, 0.0018621024210005999, 0.0026013364549726248, 1.764281842042692e-05, 0.04327290877699852, 4.153817176818848, 1.283150553703308, 1.161763072013855, 1.5694067478179932, 1.6091259717941284, 0.4822680950164795, 2.355105400085449, 2.6790664196014404, 0.4449044466018677, 0.12070157378911972, 1.5428290367126465, 0.1865859478712082, 0.0023685041815042496, 0.11882877349853516, 0.793280303478241, 1.7533961534500122, 1.3829642534255981, 0.04557732492685318, 2.005108594894409, 0.015823278576135635, 0.008691694587469101, 0.03427146375179291, 0.5504745841026306, 0.29143184423446655, 0.10975967347621918, 0.048115622252225876, 0.29340001940727234, 0.004107373300939798, 1.408160924911499, 0.07123270630836487, 0.8908726572990417, 2.252382516860962, 0.012626702897250652, 0.050969384610652924, 0.002854204038158059, 0.004009423777461052, 5.364403477869928e-06, 0.020428495481610298, 2.483379364013672, 0.4593466520309448, 0.2013259083032608], "tokens": [13, 13, 1678, 849, 14402, 29898, 29926, 6547, 2435, 29920, 1125, 445, 338, 263, 1407, 12164, 12678, 322, 4225, 304, 367, 16710, 29889, 13, 1678, 938, 7876, 3505, 353, 7876, 4247, 29889, 657, 4435, 2283, 4290, 3505, 890, 13, 13, 1678, 849, 14402, 29898, 29926, 6547, 2435, 29920, 1125, 445, 338, 263]}
{"line_number": 718, "line_type": "original", "code": "    Node fnParam = NodeUtil.getFunctionParameters(fnNode).getFirstChild();", "entropy": 0.9768784046173096, "is_bug_line": false, "sus_score": 0.2286647801900118, "per_token_entropy": [6.267993450164795, 2.9396886825561523, 2.110572099685669, 5.315174102783203, 0.14644882082939148, 1.6279830932617188, 0.007230306044220924, 0.0008872386533766985, 0.002115632640197873, 0.026857411488890648, 0.005244782194495201, 0.0005488081369549036, 0.01374365109950304, 0.00036399890086613595, 0.057072896510362625, 0.022813597694039345, 0.008709421381354332, 0.002534037223085761, 0.004708749707788229], "tokens": [268, 9071, 7876, 4736, 353, 9071, 7270, 29889, 657, 6678, 11507, 29898, 9144, 4247, 467, 657, 6730, 5938, 890]}
{"line_number": 718, "line_type": "generated", "code": "\n    for (Reference ref : refs) {\n      Node callNode = ref.getNode();\n      JSModule callSiteModule = checkModules ?\n          moduleGraph.getContainingModule(callNode) : null;\n     ", "entropy": 0.2486744076013565, "is_bug_line": false, "sus_score": 0.2286647801900118, "per_token_entropy": [0.06478184461593628, 0.18282879889011383, 0.6683785319328308, 0.0009217780898325145, 0.03691280633211136, 0.3433394730091095, 0.006653773132711649, 0.0033403809648007154, 1.2993727978027891e-05, 0.0006149308173917234, 0.0005228344234637916, 0.0005131834768690169, 0.09579797089099884, 0.47583073377609253, 0.15329687297344208, 0.40491920709609985, 0.007360956631600857, 0.017836645245552063, 0.0035536254290491343, 0.02819550409913063, 1.4613090753555298, 0.11355377733707428, 0.000972036796156317, 0.39054280519485474, 2.7206807136535645, 0.0025460466276854277, 0.9005386829376221, 1.0707032680511475, 0.021660663187503815, 0.021675245836377144, 0.7939125299453735, 0.00014828535495325923, 1.2636104656849056e-05, 0.2866534888744354, 0.520427942276001, 0.090168297290802, 0.0420885868370533, 0.0001821352052502334, 0.0006343498243950307, 0.0003665013937279582, 1.0724759101867676, 0.0001264730526600033, 0.00034409802174195647, 0.0005974177038297057, 0.04836655035614967, 0.006249409634619951, 0.053097791969776154, 0.0031880526803433895, 0.09095729887485504, 0.0002932118659373373, 0.00018463814922142774, 0.7207974791526794], "tokens": [13, 1678, 363, 313, 7422, 2143, 584, 2143, 29879, 29897, 426, 13, 418, 9071, 1246, 4247, 353, 2143, 29889, 657, 4247, 890, 13, 418, 7649, 7355, 1246, 17033, 7355, 353, 1423, 2111, 2540, 1577, 13, 3986, 3883, 9527, 29889, 657, 1323, 17225, 7355, 29898, 4804, 4247, 29897, 584, 1870, 29936, 13, 418]}
{"line_number": 719, "line_type": "original", "code": "    while (cArg != null || fnParam != null) {", "entropy": 2.090947151184082, "is_bug_line": false, "sus_score": 0.2286647801900118, "per_token_entropy": [6.428799629211426, 8.912362098693848, 0.07652255892753601, 5.906818389892578, 0.7742831110954285, 0.031655583530664444, 0.00401702243834734, 5.900058746337891, 1.1730784177780151, 0.031279925256967545, 0.014377100393176079, 0.002392170252278447, 0.009804191067814827, 0.007811356335878372], "tokens": [268, 1550, 313, 29883, 8559, 2804, 1870, 3830, 7876, 4736, 2804, 1870, 29897, 426]}
{"line_number": 719, "line_type": "generated", "code": "\n      Node call = ref.getBasicBlock().getParent();\n      Node parent = call.getParent();\n\n      // Don't inline into a call whose result is not used.\n      if (call.getFirstChild().is", "entropy": 0.5515314936637878, "is_bug_line": false, "sus_score": 0.2286647801900118, "per_token_entropy": [0.09372726082801819, 0.3037024736404419, 0.8608986139297485, 0.17442457377910614, 1.3973591327667236, 0.03812449797987938, 0.005142081528902054, 0.03740636259317398, 0.8530017137527466, 0.029180821031332016, 0.20906326174736023, 0.005254032090306282, 0.28754135966300964, 0.01642867550253868, 0.0025185791309922934, 0.33552688360214233, 0.8847259283065796, 0.8011088967323303, 0.030422264710068703, 0.03512134402990341, 0.010539938695728779, 4.8040190449682996e-05, 0.001474485034123063, 0.0005222387262620032, 0.0025402202736586332, 0.7772589921951294, 0.04313327744603157, 0.9433296918869019, 3.0013039112091064, 0.00014447122521232814, 3.8265450712060556e-05, 0.5996828079223633, 3.0828919410705566, 1.3664206266403198, 1.7784303426742554, 2.14548397064209, 1.9962527751922607, 0.26067113876342773, 0.9969338178634644, 0.069654181599617, 0.16487450897693634, 0.048671357333660126, 0.013959509320557117, 0.32050782442092896, 0.5830644369125366, 1.3732322454452515, 0.2828512489795685, 0.183243066072464, 0.895656168460846, 0.0036473434884101152, 0.25902870297431946, 1.073465347290039], "tokens": [13, 418, 9071, 1246, 353, 2143, 29889, 657, 16616, 7445, 2141, 657, 9780, 890, 13, 418, 9071, 3847, 353, 1246, 29889, 657, 9780, 890, 13, 13, 418, 849, 3872, 29915, 29873, 10583, 964, 263, 1246, 5069, 1121, 338, 451, 1304, 29889, 13, 418, 565, 313, 4804, 29889, 657, 6730, 5938, 2141, 275]}
{"line_number": 695, "line_type": "original", "code": "    Node block = fnNode.getLastChild();", "entropy": 2.0925140380859375, "is_bug_line": true, "sus_score": 0.22573305919324013, "per_token_entropy": [7.061220169067383, 7.521801471710205, 4.81800651550293, 0.700402557849884, 1.9089964628219604, 0.09691660851240158, 0.39729252457618713, 0.002811172278597951, 0.30370795726776123, 1.3947389561508317e-05, 0.2064845860004425], "tokens": [268, 9071, 2908, 353, 7876, 4247, 29889, 657, 8897, 5938, 890]}
{"line_number": 695, "line_type": "generated", "code": "\n      }\n    }\n\n    return CanInlineResult.YES;\n  }\n\n  /**\n   * Determines whether a function can be inlined at a particular call site.\n   * There are several criteria that the", "entropy": 0.10670606046915054, "is_bug_line": true, "sus_score": 0.22573305919324013, "per_token_entropy": [0.09872706979513168, 0.15604010224342346, 0.0030190625693649054, 0.06642595678567886, 0.19132603704929352, 0.0019474128494039178, 0.016341542825102806, 0.44979968667030334, 0.22918406128883362, 0.6622284650802612, 0.05604718253016472, 0.00013910756388213485, 0.0007689617923460901, 0.0001501924270996824, 0.0013249675976112485, 0.05016462132334709, 0.04486976936459541, 0.0022724061273038387, 0.30695268511772156, 0.0014734136639162898, 0.006700784433633089, 0.050093647092580795, 0.10478844493627548, 0.3848801553249359, 0.034990012645721436, 0.0019471748964861035, 0.0002162222663173452, 0.7479758858680725, 0.005646351259201765, 0.047811441123485565, 0.12346222251653671, 0.19595636427402496, 0.16411139070987701, 0.20026320219039917, 0.008106307126581669, 0.038025349378585815, 0.0026038335636258125, 0.4370071291923523, 0.030907707288861275, 0.0302963275462389, 0.015328812412917614, 0.011011193506419659, 0.12209756672382355, 0.007314804941415787, 0.00445623230189085, 0.045762162655591965, 0.3757527768611908, 0.001996787264943123, 0.005284507758915424, 0.00044431351125240326, 0.0013965149410068989, 0.0028767890762537718], "tokens": [13, 418, 500, 13, 1678, 500, 13, 13, 1678, 736, 1815, 797, 1220, 3591, 29889, 21143, 29936, 13, 29871, 500, 13, 13, 29871, 7762, 13, 259, 334, 5953, 837, 1475, 3692, 263, 740, 508, 367, 297, 21354, 472, 263, 3153, 1246, 3268, 29889, 13, 259, 334, 1670, 526, 3196, 16614, 393, 278]}
{"line_number": 699, "line_type": "original", "code": "    Node cArg = callNode.getFirstChild().getNext();", "entropy": 0.9549719095230103, "is_bug_line": true, "sus_score": 0.22573305919324013, "per_token_entropy": [8.094545364379883, 4.125733375549316, 1.351161241531372, 0.23383411765098572, 0.062232568860054016, 0.08549953252077103, 0.030556509271264076, 0.011039018630981445, 0.0020950529724359512, 0.18966419994831085, 0.010681361891329288, 0.12215960770845413, 0.0008966478053480387, 0.0010161004029214382, 0.0034644128754734993], "tokens": [268, 9071, 274, 8559, 353, 1246, 4247, 29889, 657, 6730, 5938, 2141, 657, 9190, 890]}
{"line_number": 699, "line_type": "generated", "code": "\n  }\n\n  /**\n   * Determines whether a function can be inlined at a particular call site.\n   * There are several criteria that the function and reference must hold in\n   * order for the functions to be inlined", "entropy": 0.06610337644815445, "is_bug_line": true, "sus_score": 0.22573305919324013, "per_token_entropy": [0.03203745186328888, 0.3660426437854767, 0.0019125519320368767, 0.0023266407661139965, 0.032104525715112686, 0.08442775905132294, 0.3505009412765503, 0.05123092979192734, 0.0020019030198454857, 0.00019929806876461953, 0.758499026298523, 0.004833442624658346, 0.04168950021266937, 0.11906246840953827, 0.18635840713977814, 0.15656182169914246, 0.18898628652095795, 0.007837023586034775, 0.037763770669698715, 0.002228278899565339, 0.4045179784297943, 0.0253963153809309, 0.025855977088212967, 0.0140001829713583, 0.00895153358578682, 0.10947015881538391, 0.008988630957901478, 0.0030734941828995943, 0.036370035260915756, 0.314743310213089, 0.0016287406906485558, 0.0047086309641599655, 0.0004085659747943282, 0.0013867533998563886, 0.002625472843647003, 0.0033784001134335995, 0.00932598952203989, 0.0060500106774270535, 0.00030727434204891324, 0.002160359639674425, 0.006090888753533363, 0.0010681406129151583, 0.00017712931730784476, 4.625213477993384e-05, 0.00022456508304458112, 0.00037281715776771307, 0.001303776167333126, 0.01740315742790699, 0.00011646069469861686, 8.05822346592322e-05, 0.00038115866482257843, 0.00015805903240107], "tokens": [13, 29871, 500, 13, 13, 29871, 7762, 13, 259, 334, 5953, 837, 1475, 3692, 263, 740, 508, 367, 297, 21354, 472, 263, 3153, 1246, 3268, 29889, 13, 259, 334, 1670, 526, 3196, 16614, 393, 278, 740, 322, 3407, 1818, 4808, 297, 13, 259, 334, 1797, 363, 278, 3168, 304, 367, 297, 21354]}
{"line_number": 704, "line_type": "original", "code": "    if (!callNode.getFirstChild().isName()) {", "entropy": 1.599096417427063, "is_bug_line": false, "sus_score": 0.22573305919324013, "per_token_entropy": [4.184206485748291, 5.4610395431518555, 3.0544090270996094, 4.482846736907959, 1.2006808519363403, 0.026611121371388435, 1.1072574853897095, 1.7795546054840088, 0.0234886072576046, 0.0030213205609470606, 0.4370083510875702, 0.26931232213974, 0.3423209488391876, 0.015591861680150032], "tokens": [268, 565, 5384, 4804, 4247, 29889, 657, 6730, 5938, 2141, 275, 1170, 3101, 426]}
{"line_number": 704, "line_type": "generated", "code": "\n   * @return true if inlining the function is likely to reduce the code size.\n   */\n  private boolean isInliningLikelyToShrinkCodeSize(\n      Node fnNode, Set<String> names", "entropy": 0.29153329133987427, "is_bug_line": false, "sus_score": 0.22573305919324013, "per_token_entropy": [0.5723015069961548, 0.13064178824424744, 0.6791260242462158, 0.49311548471450806, 0.8401131629943848, 1.4982683658599854, 0.10217192023992538, 0.8550930023193359, 0.02670815959572792, 0.0012478192802518606, 1.3531168699264526, 0.11294224858283997, 0.34564608335494995, 0.13556963205337524, 0.026662427932024002, 0.08131981641054153, 0.08762992918491364, 0.04499627649784088, 0.019908372312784195, 0.3481983542442322, 0.002292625606060028, 0.0823209285736084, 0.03452174738049507, 0.0003393312799744308, 0.02956976927816868, 0.16958889365196228, 0.09041357785463333, 0.8912680149078369, 0.9241313338279724, 0.5263286232948303, 0.008642295375466347, 0.1405993551015854, 0.0005073452484793961, 3.480850500636734e-05, 0.04721270129084587, 1.0307178497314453, 0.27808719873428345, 0.00011300401820335537, 0.026040781289339066, 0.04381810501217842, 0.012788546271622181, 0.2919048070907593, 0.07481599599123001, 0.7898513674736023, 0.37991926074028015, 0.08154948055744171, 0.005256047938019037, 1.4327250719070435, 0.0017339446349069476, 0.0021885510068386793, 7.891343557275832e-05, 0.005593600682914257], "tokens": [13, 259, 334, 732, 2457, 1565, 565, 297, 1915, 292, 278, 740, 338, 5517, 304, 10032, 278, 775, 2159, 29889, 13, 259, 3776, 13, 29871, 2024, 7223, 338, 797, 1915, 292, 29931, 638, 873, 1762, 29903, 1092, 682, 3399, 3505, 29898, 13, 418, 9071, 7876, 4247, 29892, 3789, 29966, 1231, 29958, 2983]}
{"line_number": 208, "line_type": "original", "code": "      return canInlineReferenceDirectly(callNode, fnNode);", "entropy": 1.7998275756835938, "is_bug_line": false, "sus_score": 0.22430886163681774, "per_token_entropy": [9.08432388305664, 2.634495973587036, 8.621456146240234, 0.29484426975250244, 0.009692984633147717, 1.8906652927398682, 0.4623335897922516, 0.0006092122639529407, 0.12927329540252686, 0.7675898671150208, 0.0033326582051813602, 0.06109091639518738, 0.7261356115341187, 0.02143339440226555, 2.2901337146759033], "tokens": [539, 736, 508, 797, 1220, 7422, 17392, 368, 29898, 4804, 4247, 29892, 7876, 4247, 416]}
{"line_number": 208, "line_type": "generated", "code": "\n    return block;\n  }\n\n  /**\n   * Inline a function that fulfills the requirements of\n   * canInlineReferenceAsStatementBlock into the call site, replacing the\n   * CALL node and all of", "entropy": 0.20772597193717957, "is_bug_line": false, "sus_score": 0.22430886163681774, "per_token_entropy": [0.04528376832604408, 0.7356613278388977, 1.1192861795425415, 0.5775159001350403, 0.803809642791748, 0.004361521918326616, 0.023344790562987328, 0.0006472161621786654, 0.002393716247752309, 0.01162575464695692, 0.031783197075128555, 0.05637117847800255, 0.004383716732263565, 0.0008062449633143842, 6.270212179515511e-05, 0.11701811105012894, 0.019307885318994522, 0.06238434091210365, 0.03894679993391037, 0.3299219012260437, 0.14362791180610657, 0.002401327481493354, 0.0006901028100401163, 0.009594046510756016, 0.017333919182419777, 0.019366230815649033, 0.09097220748662949, 0.00026901919045485556, 0.00016544880054425448, 0.015670141205191612, 0.0015137653099372983, 0.0014661526074633002, 0.04227064549922943, 0.2775883376598358, 0.10058406740427017, 0.0790138989686966, 0.08184927701950073, 0.026501072570681572, 0.013350849971175194, 0.004972472321242094, 0.41320380568504333, 0.30662795901298523, 0.27327632904052734, 0.6637982130050659, 0.00019047829846385866, 0.0004419303731992841, 0.8270321488380432, 7.86750388215296e-05, 0.33327075839042664, 0.45566385984420776, 1.514159083366394, 1.0998902320861816], "tokens": [13, 1678, 736, 2908, 29936, 13, 29871, 500, 13, 13, 29871, 7762, 13, 259, 334, 512, 1220, 263, 740, 393, 6095, 5589, 29879, 278, 11780, 310, 13, 259, 334, 508, 797, 1220, 7422, 2887, 14473, 7445, 964, 278, 1246, 3268, 29892, 15270, 278, 13, 259, 334, 315, 9818, 2943, 322, 599, 310]}
{"line_number": 691, "line_type": "original", "code": "    if (!isDirectCallNodeReplacementPossible(fnNode)) {", "entropy": 2.693450450897217, "is_bug_line": false, "sus_score": 0.22430886163681774, "per_token_entropy": [7.7184953689575195, 1.7730598449707031, 2.9362237453460693, 2.9363627433776855, 5.446787357330322, 0.8632193803787231, 4.09595251083374, 8.560713768005371, 0.16462881863117218, 0.9647783041000366, 0.0003215749457012862, 0.03149930760264397, 3.2447502613067627, 0.21190547943115234, 4.135509490966797, 0.010997751727700233], "tokens": [268, 565, 5384, 275, 17392, 5594, 4247, 5612, 9552, 9135, 1687, 29898, 9144, 4247, 876, 426]}
{"line_number": 691, "line_type": "generated", "code": "\n\n        cArg = cArg.getNext();\n      }\n    }\n\n    return CanInlineResult.YES;\n  }\n\n  /**\n   * Determines whether a function can be inlined at a particular", "entropy": 0.1478624939918518, "is_bug_line": false, "sus_score": 0.22430886163681774, "per_token_entropy": [0.06918107718229294, 1.5293797254562378, 0.1935417801141739, 1.0303539037704468, 0.00018130090029444546, 0.0012534151319414377, 0.001039322349242866, 0.0003426679759286344, 0.001755721983499825, 0.0031836561392992735, 0.0009054613183252513, 0.0011697123991325498, 0.0026173877995461226, 0.03753496706485748, 0.0006540066679008305, 0.048564162105321884, 0.10533749312162399, 0.00126151111908257, 0.008121206425130367, 0.3386733829975128, 0.11045663058757782, 0.7131056785583496, 0.07476754486560822, 0.00020466140995267779, 0.0005433275364339352, 0.00020430385484360158, 0.002740914933383465, 0.051584336906671524, 0.04750648885965347, 0.0038832034915685654, 0.14989759027957916, 0.014064246788620949, 0.05280202627182007, 0.09060914814472198, 0.1657806634902954, 0.4164424538612366, 0.03603466600179672, 0.002371120499446988, 0.0002431573811918497, 1.0989203453063965, 0.008459567092359066, 0.05565430596470833, 0.1323716938495636, 0.1541377753019333, 0.17564870417118073, 0.19634944200515747, 0.006859563756734133, 0.03453902155160904, 0.0022226886358112097, 0.4547019898891449, 0.02566869929432869, 0.035022128373384476], "tokens": [13, 13, 4706, 274, 8559, 353, 274, 8559, 29889, 657, 9190, 890, 13, 418, 500, 13, 1678, 500, 13, 13, 1678, 736, 1815, 797, 1220, 3591, 29889, 21143, 29936, 13, 29871, 500, 13, 13, 29871, 7762, 13, 259, 334, 5953, 837, 1475, 3692, 263, 740, 508, 367, 297, 21354, 472, 263, 3153]}
{"line_number": 796, "line_type": "original", "code": "      return true;", "entropy": 3.366534948348999, "is_bug_line": false, "sus_score": 0.22360679774997896, "per_token_entropy": [10.152978897094727, 2.683788776397705, 0.6231130361557007, 0.006259834859520197], "tokens": [539, 736, 1565, 29936]}
{"line_number": 796, "line_type": "generated", "code": "\n\n  /**\n   * Determines the cost of inlining a function.\n   *\n   * @return The cost of inlining a function.\n   */\n  private int estimateCallCost(Node fnNode, boolean", "entropy": 0.3629256784915924, "is_bug_line": false, "sus_score": 0.22360679774997896, "per_token_entropy": [0.09685861319303513, 0.43860846757888794, 0.07298173755407333, 0.3683457672595978, 0.04001619666814804, 0.002844575559720397, 0.0003641180810518563, 1.516537070274353, 0.005212289281189442, 1.2136468887329102, 0.7772489786148071, 1.0942083597183228, 0.767133891582489, 0.6956655383110046, 0.019516348838806152, 0.0012305553536862135, 0.9557958841323853, 0.3960379958152771, 1.1790144443511963, 0.20179492235183716, 0.0013683013385161757, 0.2102556824684143, 0.9652714729309082, 0.0009286858257837594, 0.0005477358354255557, 0.4336520731449127, 1.4770290851593018, 0.7645514011383057, 0.9211676120758057, 0.3622001111507416, 0.2632765769958496, 0.003951836843043566, 0.0011062461417168379, 1.0688503980636597, 0.1794920414686203, 0.6890852451324463, 0.1555546224117279, 0.0015398323303088546, 0.04180474951863289, 0.0001472126314183697, 0.013233097270131111, 0.8009122014045715, 0.11962362378835678, 0.22121469676494598, 0.02373659797012806, 0.0002829628065228462, 0.003304261714220047, 0.07279232889413834, 0.10777206718921661, 0.09940952062606812, 0.003243901301175356, 0.02176564745604992], "tokens": [13, 13, 29871, 7762, 13, 259, 334, 5953, 837, 1475, 278, 3438, 310, 297, 1915, 292, 263, 740, 29889, 13, 259, 334, 13, 259, 334, 732, 2457, 450, 3438, 310, 297, 1915, 292, 263, 740, 29889, 13, 259, 3776, 13, 29871, 2024, 938, 12678, 5594, 25733, 29898, 4247, 7876, 4247, 29892, 7223]}
{"line_number": 555, "line_type": "original", "code": "        return true;", "entropy": 4.305906772613525, "is_bug_line": false, "sus_score": 0.22086305214969307, "per_token_entropy": [12.360560417175293, 2.863527774810791, 1.9947383403778076, 0.004800224211066961], "tokens": [308, 736, 1565, 29936]}
{"line_number": 555, "line_type": "generated", "code": "\n  /**\n   * Determines whether a function can be inlined at a particular call site.\n   * There are several criteria that the function and reference must hold in\n   * order for the functions to be inlined:\n   *", "entropy": 0.05868911370635033, "is_bug_line": false, "sus_score": 0.22086305214969307, "per_token_entropy": [0.05971047282218933, 0.654242992401123, 0.5280685424804688, 0.02623681351542473, 0.005127849988639355, 0.00023505308490712196, 0.6966726779937744, 0.001347468001767993, 0.02730085700750351, 0.14067071676254272, 0.12177444994449615, 0.11490973085165024, 0.10651464015245438, 0.0035185827873647213, 0.017044372856616974, 0.0014511541230604053, 0.1573026031255722, 0.022666072472929955, 0.018098216503858566, 0.02503899298608303, 0.011316164396703243, 0.10286428034305573, 0.005237311124801636, 0.0010593285551294684, 0.031198235228657722, 0.10934706032276154, 0.0006937957368791103, 0.00330901425331831, 0.0004127365828026086, 0.0011504229623824358, 0.002301902510225773, 0.0020818482153117657, 0.007933060638606548, 0.004711953457444906, 0.0003636414185166359, 0.0024000192061066628, 0.007821883074939251, 0.001328658196143806, 0.0003081085451412946, 0.00012587709352374077, 0.00020776021119672805, 0.0003120412293355912, 0.0008588915807195008, 0.012344739399850368, 6.067568756407127e-05, 9.989239333663136e-05, 0.00034278715611435473, 6.472854875028133e-05, 0.009604082442820072, 0.0004259632551111281, 0.0022730010095983744, 0.001341872732155025], "tokens": [13, 29871, 7762, 13, 259, 334, 5953, 837, 1475, 3692, 263, 740, 508, 367, 297, 21354, 472, 263, 3153, 1246, 3268, 29889, 13, 259, 334, 1670, 526, 3196, 16614, 393, 278, 740, 322, 3407, 1818, 4808, 297, 13, 259, 334, 1797, 363, 278, 3168, 304, 367, 297, 21354, 29901, 13, 259, 334]}
{"line_number": 274, "line_type": "original", "code": "      Node returnNode = block.getFirstChild();", "entropy": 2.139298915863037, "is_bug_line": false, "sus_score": 0.20801257358446093, "per_token_entropy": [5.177117824554443, 6.502740859985352, 5.63584566116333, 1.4202778339385986, 0.4389849007129669, 3.1898536682128906, 0.13358567655086517, 0.3061675429344177, 0.615955650806427, 0.0069757020100951195, 0.10478103905916214], "tokens": [539, 9071, 736, 4247, 353, 2908, 29889, 657, 6730, 5938, 890]}
{"line_number": 274, "line_type": "generated", "code": "\n     */\n    ASSIGN() {\n      @Override\n      public void prepare(FunctionInjector injector, Node callNode) {\n        // Nothing to do.\n      }\n    },\n\n    /**\n     * An", "entropy": 0.09757615625858307, "is_bug_line": false, "sus_score": 0.20801257358446093, "per_token_entropy": [0.12072766572237015, 0.17522357404232025, 0.4960571229457855, 0.00034397884155623615, 0.004032695200294256, 0.4390813410282135, 0.0018754289485514164, 0.0017993940273299813, 0.6043058633804321, 0.0004253674705978483, 0.0037632614839822054, 0.02091391012072563, 0.020192183554172516, 0.0002982171718031168, 0.0044632344506680965, 0.0005557184922508895, 0.04839926213026047, 0.040665846318006516, 0.004906162619590759, 0.0003768687602132559, 0.014753524214029312, 1.5258672647178173e-05, 1.0728830375228426e-06, 0.0006565084331668913, 3.099436753473128e-06, 6.55629628454335e-05, 0.002202943665906787, 0.009305203333497047, 0.002717257011681795, 0.00036054308293387294, 0.0038001956418156624, 0.0008743754005990922, 0.06199965998530388, 1.498671293258667, 0.9391152858734131, 0.005052655003964901, 0.0007115454645827413, 0.03554123640060425, 0.008054041303694248, 0.006526820361614227, 0.00029202012228779495, 0.0005586970364674926, 0.05144178867340088, 0.010811444371938705, 0.0007135705673135817, 0.01468715537339449, 0.00983488280326128, 0.003450751071795821, 0.0011200590524822474, 0.0008964095613919199, 7.462222856702283e-05, 0.4012433588504791], "tokens": [13, 268, 3776, 13, 1678, 319, 1799, 17298, 580, 426, 13, 418, 732, 4640, 13, 418, 970, 1780, 19012, 29898, 6678, 28329, 272, 11658, 272, 29892, 9071, 1246, 4247, 29897, 426, 13, 4706, 849, 9531, 304, 437, 29889, 13, 418, 500, 13, 1678, 2981, 13, 13, 1678, 7762, 13, 268, 334, 530]}
{"line_number": 275, "line_type": "original", "code": "      Preconditions.checkArgument(returnNode.isReturn());", "entropy": 3.17622447013855, "is_bug_line": false, "sus_score": 0.20801257358446093, "per_token_entropy": [8.76622200012207, 13.003175735473633, 1.7911593914031982, 0.00014149141497910023, 0.011398314498364925, 0.003127804258838296, 1.508440375328064, 0.0264606736600399, 8.209601402282715, 1.5918042659759521, 0.21712763607501984, 1.0610554218292236, 8.039532661437988, 0.23789164423942566], "tokens": [539, 4721, 1116, 2187, 29889, 3198, 15730, 29898, 2457, 4247, 29889, 275, 11609, 3310]}
{"line_number": 275, "line_type": "generated", "code": "\n    SIMPLE_ASSIGNMENT() {\n      @Override\n      public void prepare(FunctionInjector injector, Node callNode) {\n        Node lhs = callNode.getFirstChild();\n        Node rhs = callNode", "entropy": 0.20697122812271118, "is_bug_line": false, "sus_score": 0.20801257358446093, "per_token_entropy": [0.22714868187904358, 0.062362052500247955, 1.8230597972869873, 1.6927575416048057e-05, 0.00026806574896909297, 0.0011232740944251418, 0.24436332285404205, 0.002437717281281948, 1.1152726411819458, 0.20805589854717255, 0.0011450645979493856, 0.014952017925679684, 0.024340365082025528, 0.01786990277469158, 0.00037293630884960294, 0.00592890614643693, 0.0010089550632983446, 0.028472337871789932, 0.02686762437224388, 0.004778275731950998, 0.0004884004010818899, 0.01708703115582466, 2.5629668016335927e-05, 1.6689286894688848e-06, 0.0007812308613210917, 4.410734163684538e-06, 9.214453893946484e-05, 0.002626899629831314, 0.008207639679312706, 0.001720973290503025, 0.0004129749140702188, 0.0050531295128166676, 0.0017459639348089695, 0.05354173481464386, 0.8820936679840088, 1.707317590713501, 0.7979493737220764, 0.17257699370384216, 0.06262343376874924, 0.0005382042727433145, 0.0023112983908504248, 0.004927396308630705, 0.22615434229373932, 0.06027158722281456, 0.11895430833101273, 0.0047048344276845455, 0.08410187810659409, 1.1490691900253296, 1.066667079925537, 0.012340736575424671, 0.5076429843902588, 0.0006243425305001438], "tokens": [13, 1678, 22717, 3580, 1307, 29918, 22933, 17298, 13780, 580, 426, 13, 418, 732, 4640, 13, 418, 970, 1780, 19012, 29898, 6678, 28329, 272, 11658, 272, 29892, 9071, 1246, 4247, 29897, 426, 13, 4706, 9071, 301, 9499, 353, 1246, 4247, 29889, 657, 6730, 5938, 890, 13, 4706, 9071, 29365, 353, 1246, 4247]}
{"line_number": 278, "line_type": "original", "code": "      Node safeReturnNode = returnNode.cloneTree();", "entropy": 2.416821241378784, "is_bug_line": false, "sus_score": 0.20801257358446093, "per_token_entropy": [6.003037929534912, 1.3622219562530518, 7.510459899902344, 4.1752424240112305, 0.6851183772087097, 0.02565952017903328, 6.373682975769043, 0.5554020404815674, 0.5806423425674438, 0.7151373624801636, 0.9953924417495728, 0.019856369122862816], "tokens": [539, 9071, 9109, 11609, 4247, 353, 736, 4247, 29889, 16513, 9643, 890]}
{"line_number": 278, "line_type": "generated", "code": "\n      }\n    },\n\n    /**\n     * An assignment, where the result of the call is assigned to a name that\n     * is not a simple name. For example: \"a.b = foo();\".\n     *  ", "entropy": 0.24078255891799927, "is_bug_line": false, "sus_score": 0.20801257358446093, "per_token_entropy": [0.08901187032461166, 1.4576081037521362, 0.02134774625301361, 0.0012942517641931772, 0.08401135355234146, 0.03637934848666191, 0.0014541300479322672, 0.008138706907629967, 0.0068883332423865795, 0.003955517895519733, 0.0011098184622824192, 0.000819466426037252, 8.797258487902582e-05, 0.2607479989528656, 0.07317963987588882, 0.18256723880767822, 0.011123549193143845, 0.015433171764016151, 0.06596794724464417, 0.007122246082872152, 0.011067314073443413, 0.004868913441896439, 0.01926368474960327, 0.021937331184744835, 0.030788997188210487, 0.19817164540290833, 2.466912269592285, 1.351841926574707, 0.0670984759926796, 5.745722592109814e-05, 1.3828182090946939e-05, 0.7550833225250244, 2.085155487060547, 1.010453701019287, 0.3814396262168884, 0.05836950242519379, 0.1906546801328659, 0.2371353656053543, 0.0016192194307222962, 0.06353112310171127, 0.06756700575351715, 0.2877906262874603, 0.2485758513212204, 0.09009084105491638, 0.2911071181297302, 0.004272500053048134, 0.031173162162303925, 0.10365031659603119, 0.023596659302711487, 0.0007563352701254189, 0.01464521698653698, 0.07375451177358627], "tokens": [13, 418, 500, 13, 1678, 2981, 13, 13, 1678, 7762, 13, 268, 334, 530, 12827, 29892, 988, 278, 1121, 310, 278, 1246, 338, 9859, 304, 263, 1024, 393, 13, 268, 334, 338, 451, 263, 2560, 1024, 29889, 1152, 1342, 29901, 376, 29874, 29889, 29890, 353, 7953, 890, 1642, 13, 268, 334, 259]}
{"line_number": 279, "line_type": "original", "code": "      Node inlineResult = FunctionArgumentInjector.inject(", "entropy": 2.1856369972229004, "is_bug_line": false, "sus_score": 0.20801257358446093, "per_token_entropy": [6.1693596839904785, 2.4130101203918457, 9.17621898651123, 0.5915182828903198, 0.12988203763961792, 5.266602516174316, 0.10257147252559662, 0.0026491330936551094, 3.0278701160568744e-05, 0.06751050800085068, 2.1742098331451416, 0.13408078253269196], "tokens": [539, 9071, 10583, 3591, 353, 6680, 15730, 28329, 272, 29889, 21920, 29898]}
{"line_number": 279, "line_type": "generated", "code": "\n      }\n    },\n\n    /**\n     * An assignment, where the result of the call is assigned to a qualified\n     * name. For example: \"a.b = foo();\".\n     *   EXPR_RESULT", "entropy": 0.08570138365030289, "is_bug_line": false, "sus_score": 0.20801257358446093, "per_token_entropy": [0.09845173358917236, 0.22446484863758087, 0.002418452175334096, 0.002769684186205268, 0.10763099789619446, 0.02318674325942993, 0.004025808535516262, 0.019036922603845596, 0.009838541969656944, 0.004037325270473957, 0.001110175740905106, 0.0009423820883966982, 0.00011359999916749075, 0.28057318925857544, 0.0711054727435112, 0.18251846730709076, 0.010614603757858276, 0.015163740143179893, 0.066313736140728, 0.006742583122104406, 0.011601835489273071, 0.004827510565519333, 0.019623661413788795, 0.02067093923687935, 0.02936362288892269, 0.1873549371957779, 1.9739583730697632, 0.04619947075843811, 0.00010048838157672435, 1.4781842764932662e-05, 0.014098686166107655, 0.14503879845142365, 0.11925876140594482, 0.0009734659106470644, 0.029753077775239944, 0.017290685325860977, 0.1174304336309433, 0.03556839004158974, 0.0510002002120018, 0.29326337575912476, 0.003627151483669877, 0.020331546664237976, 0.0603739432990551, 0.024353744462132454, 0.01165097113698721, 0.013553268276154995, 0.06167008727788925, 0.011138403788208961, 0.0005526207387447357, 0.0002543602604418993, 0.00014161060971673578, 0.0003741279651876539], "tokens": [13, 418, 500, 13, 1678, 2981, 13, 13, 1678, 7762, 13, 268, 334, 530, 12827, 29892, 988, 278, 1121, 310, 278, 1246, 338, 9859, 304, 263, 18698, 13, 268, 334, 1024, 29889, 1152, 1342, 29901, 376, 29874, 29889, 29890, 353, 7953, 890, 1642, 13, 268, 334, 259, 8528, 10593, 29918, 15989, 8647]}
