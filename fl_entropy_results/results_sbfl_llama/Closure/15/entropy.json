{"line_number": 148, "line_type": "original", "code": "        c.inlineVariable();", "entropy": 4.176013469696045, "is_bug_line": false, "sus_score": 0.2, "per_token_entropy": [8.76630973815918, 5.405312538146973, 1.1595783233642578, 3.754422187805176, 4.246351718902588, 1.7241053581237793], "tokens": [308, 274, 29889, 14764, 16174, 890]}
{"line_number": 148, "line_type": "generated", "code": "\n              } else if (n.getParent().isName()) {\n<|mask:1|><|mask:0|>\n              } else if (n.getParent().isGetProp()\n                  && n.getParent", "entropy": 0.309774786233902, "is_bug_line": false, "sus_score": 0.2, "per_token_entropy": [0.07108693569898605, 0.49605241417884827, 0.7892187237739563, 1.2856383323669434, 0.4732332229614258, 0.16380076110363007, 1.58720862865448, 0.29216018319129944, 0.5958724617958069, 0.03913608193397522, 0.0309495460242033, 0.015406291000545025, 1.6085505485534668, 0.5048811435699463, 0.001141492510214448, 0.007239773869514465, 0.7728370428085327, 0.0008895016508176923, 0.004374933894723654, 0.0009713222389109433, 0.4727689027786255, 0.007809109054505825, 0.18129080533981323, 0.0005004345439374447, 0.002854085061699152, 0.0003666205739136785, 0.052212148904800415, 0.0008909308817237616, 0.015645965933799744, 0.010668152011930943, 0.1335139125585556, 0.020241834223270416, 0.28276219964027405, 0.3845870792865753, 0.0805351585149765, 0.9169461727142334, 0.036813996732234955, 0.0767250657081604, 0.015489280223846436, 0.010149888694286346, 0.00863284058868885, 0.7818856239318848, 0.07725585997104645, 1.39485502243042, 1.3419826030731201, 0.06544630974531174, 0.08778619766235352, 0.44645485281944275, 0.30130860209465027, 0.03616758808493614, 0.0894971638917923, 0.03359343856573105], "tokens": [13, 795, 500, 1683, 565, 313, 29876, 29889, 657, 9780, 2141, 275, 1170, 3101, 426, 13, 29966, 29989, 13168, 29901, 29896, 29989, 5299, 29989, 13168, 29901, 29900, 29989, 29958, 13, 795, 500, 1683, 565, 313, 29876, 29889, 657, 9780, 2141, 275, 2577, 20420, 580, 13, 462, 29871, 2607, 302, 29889, 657, 9780]}
{"line_number": 468, "line_type": "original", "code": "    for (Node p = n; p != expressionRoot; p = p.getParent()) {", "entropy": 0.8336107134819031, "is_bug_line": false, "sus_score": 0.1690308509457033, "per_token_entropy": [9.081551551818848, 4.343740463256836, 0.01446264237165451, 0.08890139311552048, 0.9428600072860718, 0.019948337227106094, 0.09524842351675034, 1.7552446126937866, 0.20430339872837067, 0.09588874131441116, 0.6388493776321411, 0.0035507744178175926, 0.05180949717760086, 0.10181441158056259, 0.0030648186802864075, 0.009433811530470848, 0.0024217821191996336, 0.0017457258654758334, 0.028412899002432823, 0.008991939015686512, 0.013580081053078175], "tokens": [268, 363, 313, 4247, 282, 353, 302, 29936, 282, 2804, 4603, 10303, 29936, 282, 353, 282, 29889, 657, 9780, 3101, 426]}
{"line_number": 468, "line_type": "generated", "code": "\n  /**\n   * Given a node n, return true if n is a call or new expression that is\n   * checked.\n   */\n  private static boolean isCheckedCall(Node n) {\n    return n.isCall()", "entropy": 0.6070683598518372, "is_bug_line": false, "sus_score": 0.1690308509457033, "per_token_entropy": [0.04257182776927948, 0.44334086775779724, 0.4587610960006714, 0.04005547985434532, 0.0046449145302176476, 0.0007066613179631531, 1.2251108884811401, 1.487104892730713, 1.677690029144287, 0.9479243755340576, 0.4837421774864197, 0.7578340768814087, 0.44519177079200745, 0.03315439075231552, 1.6121280193328857, 0.458455353975296, 1.4904885292053223, 2.4619088172912598, 2.3566644191741943, 1.0525938272476196, 1.1524971723556519, 1.9292470216751099, 1.5072866678237915, 0.9361785054206848, 0.0009378563845530152, 0.0005594118847511709, 2.983318328857422, 1.041771650314331, 0.147483229637146, 0.0024873053189367056, 0.15421012043952942, 0.0010010951664298773, 0.01787048764526844, 0.08731525391340256, 0.3580934703350067, 0.05733386054635048, 0.2308426946401596, 0.20880547165870667, 0.4116348922252655, 0.88388991355896, 0.01558106392621994, 0.02555796504020691, 0.07481090724468231, 0.0008379285573028028, 0.0012656782055273652, 0.0774780735373497, 0.932591438293457, 0.6549234390258789, 0.04996449127793312, 0.07760791480541229, 0.060352955013513565, 0.0037433092948049307], "tokens": [13, 29871, 7762, 13, 259, 334, 11221, 263, 2943, 302, 29892, 736, 1565, 565, 302, 338, 263, 1246, 470, 716, 4603, 393, 338, 13, 259, 334, 7120, 29889, 13, 259, 3776, 13, 29871, 2024, 2294, 7223, 338, 17817, 5594, 29898, 4247, 302, 29897, 426, 13, 1678, 736, 302, 29889, 275, 5594, 580]}
{"line_number": 469, "line_type": "original", "code": "      for (Node cur = p.getNext(); cur != null; cur = cur.getNext()) {", "entropy": 1.033733606338501, "is_bug_line": false, "sus_score": 0.1690308509457033, "per_token_entropy": [10.010930061340332, 4.2353434562683105, 0.023974400013685226, 0.1424872726202011, 1.0966471433639526, 0.08238998800516129, 2.339456081390381, 0.2722500264644623, 0.0019288521725684404, 2.567902088165283, 0.024637576192617416, 0.1702912449836731, 0.012811495922505856, 0.6515993475914001, 0.03955474868416786, 1.8983197212219238, 0.005389327649027109, 0.11321447789669037, 0.03718632087111473, 0.007264390587806702, 0.0069616143591701984, 0.018942411988973618, 0.016389859840273857], "tokens": [539, 363, 313, 4247, 3151, 353, 282, 29889, 657, 9190, 890, 3151, 2804, 1870, 29936, 3151, 353, 3151, 29889, 657, 9190, 3101, 426]}
{"line_number": 469, "line_type": "generated", "code": "\n  /**\n   * Given a CFG node n, return true if there is a call to a function in the\n   * right of n.\n   */\n  private static boolean checkRightOfForCall(Node n, Node cfg", "entropy": 0.6179795861244202, "is_bug_line": false, "sus_score": 0.1690308509457033, "per_token_entropy": [0.042370401322841644, 0.3301151394844055, 0.4870215654373169, 0.04103822633624077, 0.005948815029114485, 0.0009494088008068502, 1.3006432056427002, 1.4229085445404053, 2.6633338928222656, 0.00237266649492085, 0.5772911310195923, 1.5824062824249268, 0.49041223526000977, 0.7535132765769958, 0.37757328152656555, 0.03033645637333393, 1.061932921409607, 0.5459007620811462, 0.6753318309783936, 2.1249799728393555, 1.5705386400222778, 1.1014595031738281, 1.1732763051986694, 2.4402973651885986, 0.8702791929244995, 0.12544919550418854, 0.0012549628736451268, 0.00044586253352463245, 2.6077098846435547, 1.0952041149139404, 0.29049304127693176, 0.36386916041374207, 0.08866871893405914, 0.00934169627726078, 0.2360011339187622, 0.0014998388942331076, 0.015571440570056438, 0.07573655992746353, 0.3996719419956207, 0.024528007954359055, 0.8670812249183655, 0.24414119124412537, 0.18793527781963348, 1.0594592094421387, 0.7906887531280518, 0.075779989361763, 0.21357221901416779, 0.14596515893936157, 0.4469693899154663, 0.2804425060749054, 0.8120104670524597, 0.0032147890888154507], "tokens": [13, 29871, 7762, 13, 259, 334, 11221, 263, 17861, 29954, 2943, 302, 29892, 736, 1565, 565, 727, 338, 263, 1246, 304, 263, 740, 297, 278, 13, 259, 334, 1492, 310, 302, 29889, 13, 259, 3776, 13, 29871, 2024, 2294, 7223, 1423, 7341, 2776, 2831, 5594, 29898, 4247, 302, 29892, 9071, 274, 16434]}
{"line_number": 475, "line_type": "original", "code": "    return false;", "entropy": 3.478161096572876, "is_bug_line": false, "sus_score": 0.1690308509457033, "per_token_entropy": [9.605352401733398, 4.026601791381836, 0.27584168314933777, 0.004848390351980925], "tokens": [268, 736, 2089, 29936]}
{"line_number": 475, "line_type": "generated", "code": "\n\n  /**\n   * Returns true if the expression is a valid candidate for inlining.\n   */\n  private static boolean isInlineableExpression(Node n) {\n    // TODO(user): This is too restrictive.", "entropy": 0.6735086441040039, "is_bug_line": false, "sus_score": 0.1690308509457033, "per_token_entropy": [0.019463155418634415, 0.3436238467693329, 0.06266654282808304, 0.29652732610702515, 0.047625843435525894, 0.0036693166475743055, 0.000675807474181056, 2.4535913467407227, 0.3564607501029968, 0.06275375932455063, 0.8521692752838135, 2.036809206008911, 1.2298107147216797, 1.7581628561019897, 3.2392332553863525, 1.9298151731491089, 0.20795898139476776, 0.4924702048301697, 0.0327359139919281, 0.005698625463992357, 0.323956698179245, 0.18572498857975006, 0.00621221074834466, 0.7498742341995239, 0.0007128558354452252, 0.0194960068911314, 0.14371557533740997, 0.645440936088562, 0.06323181837797165, 0.22758248448371887, 1.4226579666137695, 1.0792499780654907, 0.4456339478492737, 0.9308037757873535, 0.02096364088356495, 0.09047956764698029, 0.2872907817363739, 0.24089309573173523, 0.0011080323019996285, 0.0004457433824427426, 0.12283321470022202, 2.2926065921783447, 1.1459187269210815, 0.08252917975187302, 0.3328321874141693, 0.1265074461698532, 3.583164691925049, 1.1465787887573242, 2.2906603813171387, 1.1087849140167236, 0.01906171813607216, 0.4535752534866333], "tokens": [13, 13, 29871, 7762, 13, 259, 334, 16969, 1565, 565, 278, 4603, 338, 263, 2854, 14020, 363, 297, 1915, 292, 29889, 13, 259, 3776, 13, 29871, 2024, 2294, 7223, 338, 797, 1220, 519, 10960, 29898, 4247, 302, 29897, 426, 13, 1678, 849, 14402, 29898, 1792, 1125, 910, 338, 2086, 9250, 573, 29889]}
{"line_number": 488, "line_type": "original", "code": "    for (Node p = n.getParent(); p != expressionRoot; p = p.getParent()) {", "entropy": 0.7891184091567993, "is_bug_line": false, "sus_score": 0.1690308509457033, "per_token_entropy": [8.678323745727539, 3.376638174057007, 0.0072387089021503925, 0.022735759615898132, 0.6872195601463318, 0.00510235084220767, 0.022477148100733757, 2.744534492492676, 0.0046006543561816216, 0.15097467601299286, 0.06741044670343399, 0.3165622055530548, 0.010387877002358437, 0.06475815176963806, 0.0026077572256326675, 0.030550265684723854, 2.5342066287994385, 0.014399192295968533, 0.12005528062582016, 0.03970897197723389, 0.010817458853125572, 0.005213712342083454, 0.013037203811109066, 0.009280400350689888], "tokens": [268, 363, 313, 4247, 282, 353, 302, 29889, 657, 9780, 890, 282, 2804, 4603, 10303, 29936, 282, 353, 282, 29889, 657, 9780, 3101, 426]}
{"line_number": 488, "line_type": "generated", "code": "\n\n  /**\n   * Given an expression by its root and sub-expression n, return true if there\n   * the predicate is true for some expression on the left of n.\n   *\n   * Example:\n   *\n  ", "entropy": 0.13532547652721405, "is_bug_line": false, "sus_score": 0.1690308509457033, "per_token_entropy": [0.04545647278428078, 0.6414421796798706, 0.06713882833719254, 0.3305460810661316, 0.04821468144655228, 0.0029805542435497046, 0.00084436044562608, 1.1778419017791748, 0.3521306812763214, 0.06647827476263046, 0.08688780665397644, 0.006081646773964167, 0.007302852347493172, 0.04362183436751366, 0.051784031093120575, 0.00925961323082447, 0.0033824394922703505, 0.01528056152164936, 0.009653434157371521, 0.11746519804000854, 0.08639490604400635, 0.02162414975464344, 0.3172799348831177, 0.005219048820436001, 0.0012191252317279577, 0.00040415700641460717, 0.2151217758655548, 0.011928771622478962, 0.006968717556446791, 0.009383267723023891, 0.020653074607253075, 0.11266057193279266, 0.1314460188150406, 0.42425134778022766, 0.0937640517950058, 0.6345717310905457, 0.9652870893478394, 0.06019110977649689, 0.6565203070640564, 0.07033709436655045, 0.009335791692137718, 0.02227536216378212, 0.018613899126648903, 0.0021940225269645452, 0.0009567927336320281, 0.027143782004714012, 0.003112474223598838, 0.003204451175406575, 0.0039031526539474726, 0.0016857474111020565, 0.012679084204137325, 0.0027995225973427296], "tokens": [13, 13, 29871, 7762, 13, 259, 334, 11221, 385, 4603, 491, 967, 3876, 322, 1014, 29899, 17471, 302, 29892, 736, 1565, 565, 727, 13, 259, 334, 278, 24384, 338, 1565, 363, 777, 4603, 373, 278, 2175, 310, 302, 29889, 13, 259, 334, 13, 259, 334, 8741, 29901, 13, 259, 334, 13, 259]}
{"line_number": 496, "line_type": "original", "code": "    return false;", "entropy": 2.9614267349243164, "is_bug_line": false, "sus_score": 0.1690308509457033, "per_token_entropy": [8.30063533782959, 3.3608245849609375, 0.17523407936096191, 0.009012850001454353], "tokens": [268, 736, 2089, 29936]}
{"line_number": 496, "line_type": "generated", "code": "\n\n  /**\n   * Given an expression by its root and sub-expression n, return true if there\n   * the predicate is true for some expression on the left or right of n.\n   *\n   * Example:\n   *", "entropy": 0.1331011801958084, "is_bug_line": false, "sus_score": 0.1690308509457033, "per_token_entropy": [0.06626107543706894, 0.6860809922218323, 0.12019947916269302, 0.3303721845149994, 0.05282249301671982, 0.004332086071372032, 0.0004337085410952568, 1.1382865905761719, 0.33441227674484253, 0.0628657117486, 0.0840156227350235, 0.006368106231093407, 0.007089104037731886, 0.04454442113637924, 0.06177644431591034, 0.009272369556128979, 0.0029898248612880707, 0.01707683503627777, 0.010614132508635521, 0.12561091780662537, 0.09482739865779877, 0.02396264672279358, 0.3281632959842682, 0.006649865303188562, 0.002997193718329072, 0.00036376056959852576, 0.26820698380470276, 0.015857307240366936, 0.007716844789683819, 0.008903918787837029, 0.021504800766706467, 0.12048020213842392, 0.14270640909671783, 0.48321056365966797, 0.09390590339899063, 0.8513143062591553, 0.610026478767395, 0.2797888517379761, 0.04006876423954964, 0.010184935294091702, 0.03605318069458008, 0.012296108528971672, 0.002558531705290079, 0.21687336266040802, 0.02155485190451145, 0.0030008782632648945, 0.0023085628636181355, 0.027294013649225235, 0.010152248665690422, 0.004870336968451738, 0.007252674084156752, 0.0007815881981514394], "tokens": [13, 13, 29871, 7762, 13, 259, 334, 11221, 385, 4603, 491, 967, 3876, 322, 1014, 29899, 17471, 302, 29892, 736, 1565, 565, 727, 13, 259, 334, 278, 24384, 338, 1565, 363, 777, 4603, 373, 278, 2175, 470, 1492, 310, 302, 29889, 13, 259, 334, 13, 259, 334, 8741, 29901, 13, 259, 334]}
{"line_number": 147, "line_type": "original", "code": "      if (c.canInline()) {", "entropy": 2.1870644092559814, "is_bug_line": false, "sus_score": 0.1259881576697424, "per_token_entropy": [8.2139253616333, 1.09691321849823, 0.19971917569637299, 6.142143726348877, 4.557178497314453, 1.04707932472229, 0.03856859356164932, 0.0011235122801735997, 0.5557349920272827, 0.018257537856698036], "tokens": [539, 565, 313, 29883, 29889, 3068, 797, 1220, 3101, 426]}
{"line_number": 147, "line_type": "generated", "code": "\n            if (n.getParent() != null &&\n                NodeUtil.isAssignmentOp(n.getParent()) &&\n                n.getParent().getFirstChild() == n) {\n              // Skip cases like:\n", "entropy": 0.39818981289863586, "is_bug_line": false, "sus_score": 0.1259881576697424, "per_token_entropy": [0.09648989140987396, 0.6511609554290771, 0.9316306114196777, 0.270803302526474, 0.8365407586097717, 0.26988649368286133, 0.1997198611497879, 0.023404067382216454, 0.6642453670501709, 0.47204798460006714, 0.09026698023080826, 0.5157627463340759, 1.2353222370147705, 0.07967998832464218, 1.7559468746185303, 0.0004017737810499966, 0.000673424918204546, 0.09921491146087646, 0.6047888994216919, 0.1833394318819046, 0.14580382406711578, 0.0008706831140443683, 0.05522957444190979, 0.027638008818030357, 0.00012909532233607024, 0.0014494876377284527, 0.5002717971801758, 0.02589779533445835, 0.03425119072198868, 0.02902311459183693, 0.3314405381679535, 0.190063014626503, 0.031006986275315285, 0.04759902134537697, 0.001783448620699346, 0.002337463665753603, 0.10545700788497925, 0.00019798702851403505, 0.027818888425827026, 0.04567880183458328, 0.0054943738505244255, 0.270982950925827, 0.0024921807926148176, 0.004490885883569717, 0.20914363861083984, 0.6369439959526062, 2.8195271492004395, 0.00036900385748595, 3.101290702819824, 0.5100336074829102, 1.8602796792984009, 0.6995471715927124], "tokens": [13, 9651, 565, 313, 29876, 29889, 657, 9780, 580, 2804, 1870, 2607, 13, 18884, 9071, 7270, 29889, 275, 7900, 10194, 11746, 29898, 29876, 29889, 657, 9780, 3101, 2607, 13, 18884, 302, 29889, 657, 9780, 2141, 657, 6730, 5938, 580, 1275, 302, 29897, 426, 13, 795, 849, 4971, 666, 4251, 763, 29901, 13]}
{"line_number": 150, "line_type": "original", "code": "    }", "entropy": 4.781905174255371, "is_bug_line": false, "sus_score": 0.1259881576697424, "per_token_entropy": [8.318916320800781, 1.2448945045471191], "tokens": [268, 500]}
{"line_number": 150, "line_type": "generated", "code": "\n            if (NodeUtil.isAssignmentOp(parent) && parent.getFirstChild() == n) {\n              // Don't inline the LHS of an assignment.\n              return;\n            }\n\n            if (Node", "entropy": 0.4450092613697052, "is_bug_line": false, "sus_score": 0.1259881576697424, "per_token_entropy": [0.0698939859867096, 0.4849309027194977, 1.1828235387802124, 0.32144612073898315, 2.8189146518707275, 0.000717144284863025, 0.0007814691052772105, 0.05122051015496254, 0.8490971326828003, 0.14417587220668793, 0.08032319694757462, 0.0008206575294025242, 0.13810592889785767, 0.7758615016937256, 0.33460646867752075, 1.2175672054290771, 0.0013227055314928293, 0.0016801540041342378, 0.05991651862859726, 0.00015090756642166525, 0.01360124908387661, 0.07939539104700089, 0.015668146312236786, 0.07903493940830231, 0.003767418209463358, 0.002605973742902279, 0.1213596910238266, 0.7095046639442444, 2.897385835647583, 0.0005249790847301483, 0.0001833270798670128, 1.030370831489563, 2.305832624435425, 1.9146915674209595, 0.017900580540299416, 0.16521389782428741, 0.32424789667129517, 0.10711211711168289, 0.5763753056526184, 0.21723970770835876, 0.04899457097053528, 0.12619541585445404, 0.0009127265075221658, 0.0007332258974201977, 0.0170462466776371, 0.0003033416287507862, 0.06140229478478432, 0.798940896987915, 0.047071803361177444, 1.2784299850463867, 0.3170614242553711, 1.3270161151885986], "tokens": [13, 9651, 565, 313, 4247, 7270, 29889, 275, 7900, 10194, 11746, 29898, 3560, 29897, 2607, 3847, 29889, 657, 6730, 5938, 580, 1275, 302, 29897, 426, 13, 795, 849, 3872, 29915, 29873, 10583, 278, 365, 14851, 310, 385, 12827, 29889, 13, 795, 736, 29936, 13, 9651, 500, 13, 13, 9651, 565, 313, 4247]}
{"line_number": 123, "line_type": "original", "code": "    if (LiveVariablesAnalysis.MAX_VARIABLES_TO_ANALYZE <", "entropy": 1.256278157234192, "is_bug_line": false, "sus_score": 0.07905694150420949, "per_token_entropy": [5.640199661254883, 4.981103420257568, 0.7475541830062866, 10.460529327392578, 0.32536888122558594, 0.0012691308511421084, 0.1936129927635193, 0.0016023189527913928, 0.1505133956670761, 3.356396198272705, 0.09299834072589874, 0.36931976675987244, 0.1680280715227127, 0.00039986721822060645, 0.13202138245105743, 0.13458877801895142, 0.05172448977828026, 0.001978346612304449, 0.11925294250249863, 0.0008176797418855131, 0.002987685613334179, 0.05451188609004021, 1.9076175689697266], "tokens": [268, 565, 313, 23859, 10444, 1849, 21067, 4848, 29889, 12648, 29918, 26865, 29902, 6181, 29903, 29918, 4986, 29918, 2190, 1964, 29979, 10721, 529]}
{"line_number": 123, "line_type": "generated", "code": "\n   * in {@link #candidates}.\n   */\n  private class GatherCandiates implements Callback {\n    @Override\n    public boolean shouldTraverse(NodeTraversal t, Node n, Node parent)", "entropy": 0.15218493342399597, "is_bug_line": false, "sus_score": 0.07905694150420949, "per_token_entropy": [0.265326589345932, 0.9965893030166626, 0.20231105387210846, 0.3581230640411377, 0.8687607049942017, 0.3890739679336548, 0.4550117552280426, 0.031709980219602585, 0.0013454442378133535, 0.007270899601280689, 0.3512381911277771, 0.17445321381092072, 0.058784469962120056, 0.18926531076431274, 0.0005134217790327966, 0.012660839594900608, 0.11172382533550262, 0.0857791155576706, 0.0024911104701459408, 2.276871418871451e-05, 5.531158240046352e-05, 0.000161038784426637, 9.953480184776708e-05, 1.168244216387393e-05, 1.3573782444000244, 0.47787681221961975, 0.0005720409681089222, 0.01924380473792553, 0.000589792791288346, 0.49205926060676575, 0.30446159839630127, 0.005629044491797686, 0.006575140170753002, 0.007224033586680889, 0.0029483442194759846, 0.021471897140145302, 9.97731985989958e-05, 0.0003237200144212693, 0.00011550712952157483, 0.0001401803019689396, 0.31017521023750305, 0.011961753480136395, 0.00020966715237591416, 2.729855441430118e-05, 0.2597830593585968, 0.0002658013836480677, 0.0021665452513843775, 0.005167105700820684, 0.0008830699953250587, 0.05945001542568207, 0.0025724435690790415, 0.001462581567466259], "tokens": [13, 259, 334, 297, 26633, 2324, 396, 29883, 5380, 1078, 1836, 13, 259, 3776, 13, 29871, 2024, 770, 402, 1624, 29907, 392, 29875, 1078, 10703, 8251, 1627, 426, 13, 1678, 732, 4640, 13, 1678, 970, 7223, 881, 5323, 3901, 29898, 4247, 5323, 874, 284, 260, 29892, 9071, 302, 29892, 9071, 3847, 29897]}
{"line_number": 129, "line_type": "original", "code": "    ControlFlowAnalysis cfa = new ControlFlowAnalysis(compiler, false, true);", "entropy": 1.4963911771774292, "is_bug_line": false, "sus_score": 0.07905694150420949, "per_token_entropy": [6.912735462188721, 12.020246505737305, 0.002004758222028613, 6.34793758392334, 0.00015364897262770683, 0.5150949954986572, 0.0915270447731018, 0.633398175239563, 1.134468913078308, 0.04640945792198181, 2.706014311115723e-05, 0.005515002645552158, 0.00011562632425921038, 0.0262775719165802, 1.5821826457977295, 0.07631449401378632, 0.17730343341827393, 0.15701207518577576, 0.18070988357067108, 0.018391085788607597], "tokens": [268, 11264, 17907, 21067, 4848, 274, 5444, 353, 716, 11264, 17907, 21067, 4848, 29898, 21789, 29892, 2089, 29892, 1565, 416]}
{"line_number": 129, "line_type": "generated", "code": "\n    public void visit(NodeTraversal t, Node n, Node parent) {\n      if (n.isName()) {\n        Node defSite = reachingDef.getDefSite(n.getString());\n        if (defSite", "entropy": 0.21738570928573608, "is_bug_line": false, "sus_score": 0.07905694150420949, "per_token_entropy": [0.03773530200123787, 0.04877842590212822, 0.030736979097127914, 0.049280572682619095, 0.0006168370018713176, 0.013154391199350357, 0.0004592079494614154, 0.006380307022482157, 2.682172998902388e-05, 4.0531076592742465e-06, 0.028081804513931274, 0.00017355366435367614, 0.0010332489619031549, 0.03401362895965576, 0.0012262690579518676, 0.0021108745131641626, 0.006865956820547581, 0.0033489353954792023, 0.0031166335102170706, 0.001796657219529152, 0.08526191115379333, 0.497768759727478, 0.36938801407814026, 0.25612741708755493, 0.0254337377846241, 0.04855303466320038, 0.1847025454044342, 0.6933615207672119, 0.0005133026279509068, 0.002756131812930107, 0.05376216024160385, 2.117523193359375, 2.0583152770996094, 1.5575151443481445, 0.020717646926641464, 0.07495923340320587, 0.001105650793761015, 0.003619549795985222, 0.046704620122909546, 0.5740950107574463, 0.21646110713481903, 0.18388965725898743, 0.03895058482885361, 1.2784935235977173, 0.07690037041902542, 0.15427060425281525, 0.000801837770268321, 0.1455525904893875, 0.18368859589099884, 0.03300273045897484, 0.05073179677128792, 0.00018749863374978304], "tokens": [13, 1678, 970, 1780, 6493, 29898, 4247, 5323, 874, 284, 260, 29892, 9071, 302, 29892, 9071, 3847, 29897, 426, 13, 418, 565, 313, 29876, 29889, 275, 1170, 3101, 426, 13, 4706, 9071, 822, 17033, 353, 20888, 3206, 29889, 657, 3206, 17033, 29898, 29876, 29889, 13719, 3310, 13, 4706, 565, 313, 1753, 17033]}
{"line_number": 131, "line_type": "original", "code": "    Preconditions.checkState(t.getScopeRoot().isFunction());", "entropy": 1.6403425931930542, "is_bug_line": false, "sus_score": 0.07905694150420949, "per_token_entropy": [7.2808685302734375, 4.318450927734375, 0.0030340375378727913, 2.5629668016335927e-05, 0.0036476997192949057, 0.0022545652464032173, 2.0746843814849854, 0.018715577200055122, 6.150614261627197, 0.04046621173620224, 0.8339349031448364, 0.14668232202529907, 4.414520740509033, 0.9552198648452759, 0.8820047974586487, 0.45712757110595703, 0.30357128381729126], "tokens": [268, 4721, 1116, 2187, 29889, 3198, 2792, 29898, 29873, 29889, 657, 15289, 10303, 2141, 275, 6678, 3310]}
{"line_number": 131, "line_type": "generated", "code": "\n      if (graphNode != null &&\n          graphNode.getAnnotation() == MustBeReachingVariableDef.NON_DEFINING) {\n        Node nameNode = n.getFirstChild();\n        if (nameNode.", "entropy": 0.4799584150314331, "is_bug_line": false, "sus_score": 0.07905694150420949, "per_token_entropy": [0.06990955024957657, 0.07392812520265579, 0.34635835886001587, 0.12441477924585342, 0.21897734701633453, 4.649054244509898e-05, 0.8535510301589966, 0.0005477358354255557, 0.776865541934967, 1.0788917541503906, 0.029745671898126602, 1.8073222637176514, 0.00016962042718660086, 0.02567439153790474, 0.23962514102458954, 0.6526604294776917, 0.06202990934252739, 1.6753298044204712, 1.3101037740707397, 0.0028186615090817213, 0.024074021726846695, 0.0010362261673435569, 0.007666096091270447, 0.016314569860696793, 0.003997075371444225, 4.130891799926758, 0.8500072956085205, 0.11868491023778915, 1.2693666219711304, 1.5814106464385986, 0.2908245623111725, 0.8615608215332031, 0.00176214799284935, 0.00062851223628968, 0.12876185774803162, 2.078843593597412, 1.1779239177703857, 0.4958134889602661, 0.011557293124496937, 0.4099821448326111, 0.12977640330791473, 0.21928000450134277, 0.05689588189125061, 0.013317560777068138, 0.03203248605132103, 0.004898452199995518, 0.11050060391426086, 0.8683604598045349, 0.1410110741853714, 0.3568410873413086, 0.00017355366435367614, 0.21467021107673645], "tokens": [13, 418, 565, 313, 4262, 4247, 2804, 1870, 2607, 13, 3986, 3983, 4247, 29889, 657, 21978, 580, 1275, 19928, 3629, 1123, 9733, 16174, 3206, 29889, 29940, 1164, 29918, 24405, 1177, 4214, 29897, 426, 13, 4706, 9071, 1024, 4247, 353, 302, 29889, 657, 6730, 5938, 890, 13, 4706, 565, 313, 978, 4247, 29889]}
{"line_number": 132, "line_type": "original", "code": "    cfa.process(null, t.getScopeRoot().getLastChild());", "entropy": 1.649105191230774, "is_bug_line": false, "sus_score": 0.07905694150420949, "per_token_entropy": [7.255387306213379, 6.823960304260254, 2.536041736602783, 0.0582612082362175, 2.8584694862365723, 1.9424926042556763, 3.3477466106414795, 0.07502293586730957, 3.044940233230591, 0.5455865859985352, 0.0033976465929299593, 0.06545300781726837, 0.33332857489585876, 0.6666427850723267, 0.00409490754827857, 0.059033188968896866, 7.486063259420916e-05, 0.06395893543958664], "tokens": [268, 274, 5444, 29889, 5014, 29898, 4304, 29892, 260, 29889, 657, 15289, 10303, 2141, 657, 8897, 5938, 3310]}
{"line_number": 132, "line_type": "generated", "code": "\n        return;\n      }\n\n      if (n.isName() && n.getString().equals(\"undefined\")) {\n<|mask:1|><|mask:0|>\n        return;\n      }\n\n      //", "entropy": 0.24857324361801147, "is_bug_line": false, "sus_score": 0.07905694150420949, "per_token_entropy": [0.20844638347625732, 0.1358005851507187, 0.2711305022239685, 0.0013074668822810054, 0.1621197611093521, 0.01620255969464779, 0.00024482590379193425, 0.008150176145136356, 0.3826742470264435, 0.05949854105710983, 1.1232397556304932, 0.26092782616615295, 0.5616652369499207, 0.007350779604166746, 0.054141104221343994, 0.3094319701194763, 0.7250593304634094, 0.12654367089271545, 1.8281397819519043, 0.013195568695664406, 1.41532301902771, 0.02303379774093628, 0.3325808048248291, 0.6773055791854858, 0.9060236215591431, 0.12389633059501648, 0.0029355075675994158, 0.0019243309507146478, 1.1146368980407715, 0.0006501944735646248, 0.005768556613475084, 0.0010087168775498867, 0.22869405150413513, 0.003711004974320531, 0.2175079882144928, 0.0003474347176961601, 0.0026647080667316914, 0.00024685196694917977, 0.018086042255163193, 0.0005246216314844787, 0.00633896654471755, 0.0035652664955705404, 0.02266945317387581, 0.04484526067972183, 0.0003618539194576442, 0.019340625032782555, 0.0012680593645200133, 0.00017355366435367614, 0.0053314645774662495, 0.05952718108892441, 0.06263116002082825, 1.3676140308380127], "tokens": [13, 4706, 736, 29936, 13, 418, 500, 13, 13, 418, 565, 313, 29876, 29889, 275, 1170, 580, 2607, 302, 29889, 13719, 2141, 10954, 703, 15955, 5783, 426, 13, 29966, 29989, 13168, 29901, 29896, 29989, 5299, 29989, 13168, 29901, 29900, 29989, 29958, 13, 4706, 736, 29936, 13, 418, 500, 13, 13, 418, 849]}
{"line_number": 133, "line_type": "original", "code": "    cfg = cfa.getCfg();", "entropy": 2.224870204925537, "is_bug_line": false, "sus_score": 0.07905694150420949, "per_token_entropy": [7.569954872131348, 6.957686901092529, 0.4752945899963379, 3.801412582397461, 3.960009813308716, 1.6578311920166016, 0.011951623484492302, 0.0081344498321414, 0.012595273554325104, 8.666139910928905e-05, 0.01861647330224514], "tokens": [268, 274, 16434, 353, 274, 5444, 29889, 657, 29907, 16434, 890]}
{"line_number": 133, "line_type": "generated", "code": "\n        return;\n      }\n\n      // Gather all the references to the variable.\n      if (n.isName() && !n.getString().equals(\"undefined\")) {\n        Node parentOfName = n.getParent();", "entropy": 0.5458133816719055, "is_bug_line": false, "sus_score": 0.07905694150420949, "per_token_entropy": [0.18492570519447327, 0.106170155107975, 0.12592385709285736, 0.001663373550400138, 0.012569492682814598, 0.020113440230488777, 0.00011240804451517761, 0.014250301755964756, 0.36238226294517517, 0.07128343731164932, 1.6041338443756104, 3.96161150932312, 0.13605636358261108, 1.1313097476959229, 0.41446688771247864, 3.602651596069336, 0.7865102291107178, 0.8989523649215698, 1.143455982208252, 1.355991244316101, 0.15683211386203766, 0.04850942641496658, 0.7268711924552917, 0.10623983293771744, 0.3017530143260956, 0.00249396450817585, 0.03651624545454979, 0.07902579009532928, 0.6039903163909912, 0.07930399477481842, 1.5846176147460938, 0.7360928654670715, 0.0007200032705441117, 0.17601695656776428, 0.00018630675913300365, 0.36651214957237244, 0.2181605100631714, 0.3018818795681, 0.2291472852230072, 0.0018679328495636582, 0.008686967194080353, 0.08099193125963211, 2.004185676574707, 2.4343810081481934, 1.2370656728744507, 0.5441139936447144, 0.07760725170373917, 0.29697856307029724, 0.00253700977191329, 0.0001245659514097497, 0.0031261404510587454, 0.0012236495967954397], "tokens": [13, 4706, 736, 29936, 13, 418, 500, 13, 13, 418, 849, 402, 1624, 599, 278, 9282, 304, 278, 2286, 29889, 13, 418, 565, 313, 29876, 29889, 275, 1170, 580, 2607, 1738, 29876, 29889, 13719, 2141, 10954, 703, 15955, 5783, 426, 13, 4706, 9071, 3847, 2776, 1170, 353, 302, 29889, 657, 9780, 890]}
{"line_number": 134, "line_type": "original", "code": "    reachingDef = new MustBeReachingVariableDef(cfg, t.getScope(), compiler);", "entropy": 1.3906364440917969, "is_bug_line": false, "sus_score": 0.07905694150420949, "per_token_entropy": [7.147280693054199, 8.63832950592041, 0.05356602743268013, 4.7357001304626465, 2.5392274856567383, 1.5059900283813477, 0.00022897482267580926, 0.0023755207657814026, 0.0003997480380348861, 0.005482755601406097, 0.003839384764432907, 0.07735174894332886, 1.7535881996154785, 0.10565942525863647, 1.0782538652420044, 0.1978570520877838, 0.008274558931589127, 0.0016224328428506851, 0.410592645406723, 0.8073635101318359, 0.1303829550743103], "tokens": [268, 20888, 3206, 353, 716, 19928, 3629, 1123, 9733, 16174, 3206, 29898, 16859, 29892, 260, 29889, 657, 15289, 3285, 6516, 416]}
{"line_number": 134, "line_type": "generated", "code": "\n      }\n      if (n.isName() && !n.getString().equals(\"undefined\")) {\n        // TODO(user): We only care about the definition of the variable\n        // in the function scope.\n        // TODO(", "entropy": 0.7401154637336731, "is_bug_line": false, "sus_score": 0.07905694150420949, "per_token_entropy": [0.06226259097456932, 0.3403875529766083, 0.5881443619728088, 0.054608963429927826, 1.295379877090454, 0.8328489661216736, 0.35892656445503235, 0.7085761427879333, 0.009913141839206219, 0.05659909173846245, 0.326180636882782, 0.6856268048286438, 0.1245463564991951, 1.3903658390045166, 0.7331169843673706, 0.0017072877380996943, 0.259260356426239, 0.0002798642381094396, 0.4249247610569, 0.17055834829807281, 0.4278377890586853, 0.2975844442844391, 0.0024732735473662615, 0.011720605194568634, 0.06969699263572693, 1.5362727642059326, 2.2470264434814453, 0.006855064537376165, 0.03154308721423149, 0.0357249490916729, 1.8629618883132935, 1.738136649131775, 0.5763936042785645, 0.036444291472435, 1.989905834197998, 2.765377998352051, 0.6876582503318787, 1.1159062385559082, 1.0036386251449585, 1.4877476692199707, 0.010677115991711617, 0.13452155888080597, 2.747396469116211, 0.4835996627807617, 2.49056339263916, 2.105900287628174, 0.4387420117855072, 0.5945076942443848, 0.0828462466597557, 2.3258538246154785, 0.7134304642677307, 0.0028439811430871487], "tokens": [13, 418, 500, 13, 418, 565, 313, 29876, 29889, 275, 1170, 580, 2607, 1738, 29876, 29889, 13719, 2141, 10954, 703, 15955, 5783, 426, 13, 4706, 849, 14402, 29898, 1792, 1125, 1334, 871, 2562, 1048, 278, 5023, 310, 278, 2286, 13, 4706, 849, 297, 278, 740, 6874, 29889, 13, 4706, 849, 14402, 29898]}
{"line_number": 135, "line_type": "original", "code": "    reachingDef.analyze();", "entropy": 2.397158622741699, "is_bug_line": false, "sus_score": 0.07905694150420949, "per_token_entropy": [7.47995662689209, 6.339828968048096, 0.24821151793003082, 0.07886738330125809, 0.9320884943008423, 0.000356253091013059, 1.7008001804351807], "tokens": [268, 20888, 3206, 29889, 24209, 911, 890]}
{"line_number": 135, "line_type": "generated", "code": "\n      if (graphNode.getAnnotation() != null) {\n        // The node has already been marked.\n        return;\n      }\n      if (!NodeUtil.isName(n)) {\n        return;\n      }\n", "entropy": 0.4496506452560425, "is_bug_line": false, "sus_score": 0.07905694150420949, "per_token_entropy": [0.0748489573597908, 0.09049317985773087, 0.7871966361999512, 0.3319737911224365, 2.248147487640381, 0.00020847532141488045, 0.06415349245071411, 0.22942906618118286, 1.1385860443115234, 0.08426187187433243, 0.6889833807945251, 0.2648565471172333, 0.3527403175830841, 0.0019557413179427385, 0.004232971463352442, 0.04839710518717766, 0.44886791706085205, 2.602372169494629, 0.7215271592140198, 0.869780421257019, 0.973612904548645, 0.05036856606602669, 1.7700424194335938, 1.6903948783874512, 0.23288126289844513, 0.0057401107624173164, 0.03269299864768982, 0.0006548406090587378, 0.0005265279905870557, 0.0020450884476304054, 0.0003711488388944417, 0.00959074031561613, 1.6718565225601196, 0.7100635766983032, 1.24714994430542, 1.6499096155166626, 0.0003923600015696138, 0.0001854724541772157, 0.06657062470912933, 0.7951115369796753, 0.33889240026474, 0.007803549990057945, 0.3907572031021118, 0.0013330630026757717, 0.0010407513473182917, 0.008136224001646042, 0.6440794467926025, 0.0005895545473322272, 0.019877521321177483, 0.0008400725200772285, 0.0004094000905752182, 0.0048969099298119545], "tokens": [13, 418, 565, 313, 4262, 4247, 29889, 657, 21978, 580, 2804, 1870, 29897, 426, 13, 4706, 849, 450, 2943, 756, 2307, 1063, 10902, 29889, 13, 4706, 736, 29936, 13, 418, 500, 13, 418, 565, 5384, 4247, 7270, 29889, 275, 1170, 29898, 29876, 876, 426, 13, 4706, 736, 29936, 13, 418, 500, 13]}
{"line_number": 136, "line_type": "original", "code": "    candidates = Lists.newLinkedList();", "entropy": 2.3985817432403564, "is_bug_line": false, "sus_score": 0.07905694150420949, "per_token_entropy": [7.193228244781494, 10.463106155395508, 2.7215025424957275, 4.592291355133057, 0.002661616774275899, 0.013358849100768566, 0.002923621330410242, 1.3833717107772827, 0.00018380382971372455, 0.0015254301251843572, 0.010249480605125427], "tokens": [268, 21669, 353, 2391, 29879, 29889, 1482, 6595, 287, 1293, 890]}
{"line_number": 136, "line_type": "generated", "code": "\n      if (state == null) {\n        return;\n      }\n\n      if (n.isName() && !NodeUtil.isFunctionExpression(n.getParent())) {\n        // TODO(user): We only care about", "entropy": 0.42469245195388794, "is_bug_line": false, "sus_score": 0.07905694150420949, "per_token_entropy": [0.09948668628931046, 0.41858670115470886, 0.4387049376964569, 0.11338137090206146, 0.4531228244304657, 0.584787130355835, 0.014558046124875546, 0.2742183804512024, 0.0020763759966939688, 0.003836059710010886, 0.04127972945570946, 0.8083895444869995, 0.001053850632160902, 0.07809028029441833, 0.0013338964199647307, 0.00021145492792129517, 0.009902400895953178, 0.7172940373420715, 0.053480375558137894, 1.3792818784713745, 0.25742843747138977, 0.8506688475608826, 0.019124522805213928, 0.06556544452905655, 0.36107850074768066, 0.733199954032898, 0.15289939939975739, 1.5538743734359741, 1.0628907680511475, 0.0001134808044298552, 0.00025376438861712813, 0.019708989188075066, 0.8885197043418884, 1.0507831573486328, 0.010696222074329853, 0.3418157696723938, 0.8971834182739258, 0.001388658070936799, 0.010564827360212803, 0.22139336168766022, 0.0007285801111720502, 0.002236486179754138, 0.08345309644937515, 1.3664138317108154, 2.087749481201172, 0.007148995995521545, 0.030384564772248268, 0.04205109551548958, 1.929883599281311, 1.7442814111709595, 0.7651811838150024, 0.03226636350154877], "tokens": [13, 418, 565, 313, 3859, 1275, 1870, 29897, 426, 13, 4706, 736, 29936, 13, 418, 500, 13, 13, 418, 565, 313, 29876, 29889, 275, 1170, 580, 2607, 1738, 4247, 7270, 29889, 275, 6678, 10960, 29898, 29876, 29889, 657, 9780, 22130, 426, 13, 4706, 849, 14402, 29898, 1792, 1125, 1334, 871, 2562, 1048]}
{"line_number": 140, "line_type": "original", "code": "    new NodeTraversal(compiler, new GatherCandiates()).traverse(", "entropy": 1.1514049768447876, "is_bug_line": false, "sus_score": 0.07905694150420949, "per_token_entropy": [6.663637161254883, 7.680121421813965, 2.782857894897461, 0.18208305537700653, 0.0008299481705762446, 0.0014138950500637293, 0.010892811231315136, 0.3068697154521942, 0.008692994713783264, 1.5964463949203491, 1.169523000717163, 0.002864426700398326, 0.23810559511184692, 0.29419782757759094, 0.012886581011116505, 0.0009590555564500391, 1.3006014823913574, 0.3658241331577301, 0.0013974672183394432, 0.40789300203323364], "tokens": [268, 716, 9071, 5323, 874, 284, 29898, 21789, 29892, 716, 402, 1624, 29907, 392, 29875, 1078, 16655, 3018, 3901, 29898]}
{"line_number": 140, "line_type": "generated", "code": "\n            }\n          };\n      if (defs != null) {\n        for (MustDef def : defs.getDefs()) {\n          if (def.isInlineCandidate()) {\n            if (def", "entropy": 0.4697071313858032, "is_bug_line": false, "sus_score": 0.07905694150420949, "per_token_entropy": [0.21852752566337585, 1.2954294681549072, 1.7157526016235352, 0.11878982186317444, 0.7108206748962402, 0.028168266639113426, 0.002539031207561493, 0.25418972969055176, 2.397362232208252, 0.09883971512317657, 1.177677869796753, 0.0027402015402913094, 0.49906694889068604, 0.010216559283435345, 0.18193478882312775, 0.0016671819612383842, 0.004205550067126751, 0.05255028232932091, 1.4164321422576904, 0.0036112351808696985, 0.7312363386154175, 0.00339099345728755, 0.01261257752776146, 0.3667220175266266, 0.034900911152362823, 0.016649113968014717, 0.000708090839907527, 0.5438703298568726, 1.414260983467102, 0.3561710715293884, 0.33922335505485535, 0.028782803565263748, 0.0009776342194527388, 0.0013542537344619632, 0.06316142529249191, 1.009042739868164, 0.2611813545227051, 0.2094862163066864, 0.16039785742759705, 0.8291193842887878, 1.8119083642959595, 0.0498209185898304, 1.6000313758850098, 0.009285243228077888, 0.003958605229854584, 0.37641897797584534, 0.0019033902790397406, 0.003946137614548206, 0.07368241995573044, 2.899738311767578, 0.17601095139980316, 0.8442937135696411], "tokens": [13, 9651, 500, 13, 3986, 3980, 13, 418, 565, 313, 1753, 29879, 2804, 1870, 29897, 426, 13, 4706, 363, 313, 29924, 504, 3206, 822, 584, 822, 29879, 29889, 657, 3206, 29879, 3101, 426, 13, 3986, 565, 313, 1753, 29889, 275, 797, 1220, 29907, 5380, 403, 3101, 426, 13, 9651, 565, 313, 1753]}
{"line_number": 144, "line_type": "original", "code": "    reachingUses = new MaybeReachingVariableUse(cfg, t.getScope(), compiler);", "entropy": 1.23231840133667, "is_bug_line": false, "sus_score": 0.07905694150420949, "per_token_entropy": [7.517698764801025, 6.6538591384887695, 0.026667186990380287, 0.00033790123416110873, 5.750836372375488, 1.2293674945831299, 0.2964980900287628, 0.0016592082101851702, 0.0015024575404822826, 0.0028519455809146166, 0.010825477540493011, 0.0574541874229908, 1.066878318786621, 0.2131870985031128, 1.2570245265960693, 0.16733966767787933, 0.009569015353918076, 0.004778275731950998, 0.2016427367925644, 1.117323875427246, 0.2913838326931], "tokens": [268, 20888, 15922, 267, 353, 716, 7198, 1123, 9733, 16174, 11403, 29898, 16859, 29892, 260, 29889, 657, 15289, 3285, 6516, 416]}
{"line_number": 144, "line_type": "generated", "code": "\n            if (n.getString().equals(candidate.name)) {\n              candidate.addUse(n, cfgNode);\n            }\n          }\n        }\n      };\n\n      for (MustDef def :", "entropy": 0.37565866112709045, "is_bug_line": false, "sus_score": 0.07905694150420949, "per_token_entropy": [0.10379517823457718, 0.20200952887535095, 1.4145729541778564, 0.23747602105140686, 1.877626895904541, 0.14056019484996796, 1.0018366575241089, 0.033465251326560974, 0.22299839556217194, 0.7184897065162659, 1.9159876108169556, 0.15724138915538788, 0.041537072509527206, 0.5485160946846008, 0.4713188409805298, 0.26421988010406494, 0.00281331199221313, 0.00923421885818243, 0.10797679424285889, 1.7309048175811768, 0.013949986547231674, 1.2449836730957031, 0.25195425748825073, 0.15775546431541443, 0.3085172772407532, 0.9595500230789185, 1.306612253189087, 0.017950579524040222, 0.06734781712293625, 0.2781946063041687, 0.003976772073656321, 0.16329848766326904, 0.0013709203340113163, 0.03445356711745262, 0.3251045048236847, 0.00370352272875607, 0.08550839871168137, 0.10327839851379395, 0.008059362880885601, 0.007475616410374641, 0.2390664517879486, 0.0030286891851574183, 0.0025630502495914698, 0.7984105348587036, 0.08386798202991486, 0.6217405200004578, 0.002399781486019492, 0.9582657814025879, 0.0030569748487323523, 0.019357696175575256, 0.22754336893558502, 0.029323799535632133], "tokens": [13, 9651, 565, 313, 29876, 29889, 13719, 2141, 10954, 29898, 29883, 5380, 403, 29889, 978, 876, 426, 13, 795, 14020, 29889, 1202, 11403, 29898, 29876, 29892, 274, 16434, 4247, 416, 13, 9651, 500, 13, 3986, 500, 13, 4706, 500, 13, 418, 3980, 13, 13, 418, 363, 313, 29924, 504, 3206, 822, 584]}
{"line_number": 145, "line_type": "original", "code": "    reachingUses.analyze();", "entropy": 3.0079455375671387, "is_bug_line": false, "sus_score": 0.07905694150420949, "per_token_entropy": [7.70650577545166, 8.225738525390625, 0.13644905388355255, 0.00029452278977259994, 0.042991116642951965, 3.967116117477417, 0.0014382981462404132, 3.983032464981079], "tokens": [268, 20888, 15922, 267, 29889, 24209, 911, 890]}
{"line_number": 145, "line_type": "generated", "code": "\n            // TODO(user): The current implementation will fail to inline\n            // variables that are only used in a loop.\n            //\n            // TODO(user): The current implementation will fail to inline\n            // variables that are only used in", "entropy": 0.8703510165214539, "is_bug_line": false, "sus_score": 0.07905694150420949, "per_token_entropy": [0.16710034012794495, 0.32597336173057556, 1.5056740045547485, 2.5946643352508545, 0.018482137471437454, 0.10330279916524887, 0.04941514879465103, 3.283548355102539, 2.8489623069763184, 0.6758309602737427, 2.808272123336792, 3.2594709396362305, 0.7131479978561401, 0.41638609766960144, 0.8613827228546143, 0.0031735554803162813, 0.0010030006524175406, 1.455497145652771, 0.9663178324699402, 0.3780471682548523, 3.158670425415039, 0.8927866220474243, 1.009416937828064, 2.0214016437530518, 2.053399085998535, 1.7752249240875244, 1.3191921710968018, 0.17901822924613953, 1.1328983306884766, 1.939513921737671, 0.010108822025358677, 0.007147457450628281, 2.140054702758789, 0.0038845096714794636, 0.026008492335677147, 0.010248417966067791, 1.4170215129852295, 0.21240928769111633, 0.0688885822892189, 0.5564273595809937, 0.5470196604728699, 0.04230332747101784, 0.03475987911224365, 0.11777667701244354, 0.0006031363154761493, 0.0006647284608334303, 0.2536754906177521, 0.23716601729393005, 0.15658017992973328, 0.8414947986602783, 0.21290810406208038, 0.44392722845077515], "tokens": [13, 9651, 849, 14402, 29898, 1792, 1125, 450, 1857, 5314, 674, 4418, 304, 10583, 13, 9651, 849, 3651, 393, 526, 871, 1304, 297, 263, 2425, 29889, 13, 9651, 849, 13, 9651, 849, 14402, 29898, 1792, 1125, 450, 1857, 5314, 674, 4418, 304, 10583, 13, 9651, 849, 3651, 393, 526, 871, 1304, 297]}
{"line_number": 146, "line_type": "original", "code": "    for (Candidate c : candidates) {", "entropy": 1.449013590812683, "is_bug_line": false, "sus_score": 0.07905694150420949, "per_token_entropy": [6.475658416748047, 4.457084655761719, 0.0176401287317276, 4.353590965270996, 0.11134859919548035, 0.0009068905492313206, 0.35571229457855225, 0.0824197381734848, 0.06742481887340546, 0.0053735580295324326, 0.011988845653831959], "tokens": [268, 363, 313, 29907, 5380, 403, 274, 584, 21669, 29897, 426]}
{"line_number": 146, "line_type": "generated", "code": "           Node cfgParent = cfg.getDirectedGraphNode(n.getParent()).getValue();\n            if (cfgParent == null) {\n              // Not a CFG node.\n              return;\n            }\n            FlowState", "entropy": 0.4038081765174866, "is_bug_line": false, "sus_score": 0.07905694150420949, "per_token_entropy": [1.904698133468628, 2.568955421447754, 3.106172561645508, 0.2576414942741394, 0.43044644594192505, 0.07962054759263992, 0.2974521815776825, 0.0030826451256871223, 0.17912088334560394, 0.004142276477068663, 0.2777530550956726, 0.00039867559098638594, 0.0008177988929674029, 0.0028965207748115063, 0.003944950178265572, 0.8565458059310913, 0.34385451674461365, 0.004338139668107033, 0.0021807001903653145, 0.6587486267089844, 0.11178074777126312, 0.00488706398755312, 0.010785499587655067, 0.44125938415527344, 0.6680369973182678, 0.24101993441581726, 1.1108944416046143, 0.06052801385521889, 0.7984553575515747, 0.7635729312896729, 0.2982886731624603, 0.004932260140776634, 0.009201264940202236, 0.12816396355628967, 0.6535108089447021, 1.090693712234497, 0.10360227525234222, 0.052545417100191116, 0.00047708096099086106, 0.02361913025379181, 0.162120059132576, 0.0848478227853775, 0.04735221713781357, 0.008881470188498497, 0.0008467426523566246, 0.0008644896443001926, 0.0172418262809515, 0.00022802136663813144, 0.018921708688139915, 0.8415077924728394, 2.2554850578308105, 0.0006603206275030971], "tokens": [9651, 9071, 274, 16434, 9780, 353, 274, 16434, 29889, 657, 17392, 287, 9527, 4247, 29898, 29876, 29889, 657, 9780, 16655, 23433, 890, 13, 9651, 565, 313, 16859, 9780, 1275, 1870, 29897, 426, 13, 795, 849, 2216, 263, 17861, 29954, 2943, 29889, 13, 795, 736, 29936, 13, 9651, 500, 13, 9651, 22787, 2792]}
{"line_number": 151, "line_type": "original", "code": "  }", "entropy": 5.382534503936768, "is_bug_line": false, "sus_score": 0.07905694150420949, "per_token_entropy": [8.037198066711426, 2.7278709411621094], "tokens": [259, 500]}
{"line_number": 151, "line_type": "generated", "code": "\n\n            // We don't want to inline variables that are declared in the\n            // current scope because the inlined variable may shadow the\n            // original variable.\n            if (t.getScope().isDeclared(n,", "entropy": 0.8033865094184875, "is_bug_line": false, "sus_score": 0.07905694150420949, "per_token_entropy": [0.14536644518375397, 1.44362211227417, 0.5833469033241272, 1.2786543369293213, 3.2881178855895996, 2.175126552581787, 0.001257344032637775, 0.0004957877099514008, 1.1738677024841309, 0.04807574301958084, 0.3708946406841278, 1.687487006187439, 0.6338590383529663, 0.45871105790138245, 3.14797306060791, 0.8976795077323914, 1.0844223499298096, 1.040152668952942, 0.0012328175362199545, 0.0014285369543358684, 1.3567302227020264, 0.7144749760627747, 2.367023468017578, 2.1275224685668945, 1.914887547492981, 1.5030896663665771, 1.093225359916687, 1.8140449523925781, 2.348482608795166, 0.6496018171310425, 0.2872612774372101, 0.00096941675292328, 0.0013623490231111646, 1.197843313217163, 0.6682775616645813, 0.633668839931488, 0.3481656312942505, 0.055096570402383804, 0.8510722517967224, 0.10133678466081619, 0.6547278761863708, 0.002354827243834734, 0.2014368176460266, 0.022728068754076958, 0.0753670409321785, 0.32572853565216064, 0.03384273871779442, 0.007846604101359844, 6.782778655178845e-05, 0.05038148909807205, 0.0047050719149410725, 0.9010024070739746], "tokens": [13, 13, 9651, 849, 1334, 1016, 29915, 29873, 864, 304, 10583, 3651, 393, 526, 8052, 297, 278, 13, 9651, 849, 1857, 6874, 1363, 278, 297, 21354, 2286, 1122, 15504, 278, 13, 9651, 849, 2441, 2286, 29889, 13, 9651, 565, 313, 29873, 29889, 657, 15289, 2141, 275, 6185, 433, 1127, 29898, 29876, 29892]}
