{"line_number": 347, "line_type": "original", "code": "            columnsToDrop.add(col);", "entropy": 2.7177062034606934, "is_bug_line": false, "sus_score": 0.25, "per_token_entropy": [9.839653015136719, 9.572807312011719, 0.47625166177749634, 0.2037573754787445, 0.9977195262908936, 0.12148015946149826, 0.042426615953445435, 2.933358669281006, 0.2719014585018158], "tokens": [632, 4341, 1762, 15063, 29889, 1202, 29898, 1054, 416]}
{"line_number": 347, "line_type": "generated", "code": "\n        final RealVector coefficients = getCoefficients();\n        final double[] objectiveFunctionValues = new double[getNumObjectiveFunctions()];\n        for (int i = 0; i", "entropy": 0.3865407705307007, "is_bug_line": false, "sus_score": 0.25, "per_token_entropy": [0.14432653784751892, 0.48304814100265503, 1.2575751543045044, 0.905714750289917, 0.3766591548919678, 1.1518762111663818, 0.025352034717798233, 0.8402373194694519, 1.2115134000778198, 0.004446737933903933, 0.00041166413575410843, 0.15769988298416138, 0.2744692862033844, 0.003708629636093974, 0.23937830328941345, 0.571479082107544, 0.5714510679244995, 1.0833860635757446, 3.0694594383239746, 0.8357217311859131, 1.0284698009490967, 0.01152476854622364, 0.7710009217262268, 0.00410274276509881, 0.018471019342541695, 0.4811870753765106, 0.08743912726640701, 0.011815681122243404, 0.016547108069062233, 0.0010187203297391534, 0.0001705739414319396, 0.0006367324967868626, 0.0481128953397274, 0.0038149214815348387, 0.10331817716360092, 1.1046254634857178, 0.0030201321933418512, 0.0018966082716360688, 0.04341011866927147, 0.0023333008866757154, 0.021563252434134483, 0.027811354026198387, 0.0065300180576741695, 0.0010596857173368335], "tokens": [13, 4706, 2186, 8195, 12877, 16127, 353, 679, 29907, 7297, 4543, 29879, 890, 13, 4706, 2186, 3765, 2636, 12091, 6678, 9065, 353, 716, 3765, 29961, 657, 8009, 2061, 573, 6678, 29879, 580, 1385, 13, 4706, 363, 313, 524, 474, 353, 29871, 29900, 29936, 474]}
{"line_number": 332, "line_type": "original", "code": "        List<Integer> columnsToDrop = new ArrayList<Integer>();", "entropy": 1.6091252565383911, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [7.0586934089660645, 8.458074569702148, 0.10359454154968262, 1.3506771326065063, 0.0011449456214904785, 3.244215488433838, 0.6097044348716736, 0.11784183979034424, 0.03263865411281586, 0.22200116515159607, 0.01909867487847805, 1.0685895681381226, 0.10658901184797287, 0.1348896473646164], "tokens": [308, 2391, 29966, 7798, 29958, 4341, 1762, 15063, 353, 716, 9791, 29966, 7798, 8295]}
{"line_number": 332, "line_type": "generated", "code": "\n        return isOptimal;\n    }\n\n    /**\n     * Returns whether the problem is infeasible.\n     * @return whether the model is infeasible\n     */\n    boolean isInfeasible()", "entropy": 0.17884841561317444, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [0.12717193365097046, 0.23035217821598053, 0.48241233825683594, 1.9393619298934937, 0.721804678440094, 0.008186121471226215, 0.29268771409988403, 0.007868129760026932, 0.17702044546604156, 0.0040397001430392265, 0.004625929053872824, 0.03316269442439079, 0.09787413477897644, 0.05758879333734512, 0.0640263631939888, 0.0017325166845694184, 0.0005435658385977149, 1.0432698726654053, 0.5769209861755371, 0.1113925352692604, 0.30195972323417664, 0.2661702036857605, 1.4235455989837646, 0.045093368738889694, 0.0005625095800496638, 0.0021183686330914497, 0.07484044134616852, 0.017918847501277924, 0.00410179328173399, 0.0017094297800213099, 0.01872166059911251, 0.0019268295727670193, 0.11457332968711853, 0.015211879275739193, 0.6351896524429321, 0.2027970254421234, 0.05079139769077301, 0.001558043179102242, 0.0005747812101617455, 0.00270845927298069, 0.03048921562731266, 0.005554242990911007, 0.0056026098318398, 0.00024530262453481555, 0.012133480049669743, 0.055453017354011536, 0.0073090060614049435, 0.01434078998863697, 7.366862701019272e-05, 0.0005550036439672112, 0.0022475477308034897, 0.001997977029532194], "tokens": [13, 4706, 736, 338, 20624, 3039, 29936, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 16969, 3692, 278, 1108, 338, 297, 1725, 294, 1821, 29889, 13, 268, 334, 732, 2457, 3692, 278, 1904, 338, 297, 1725, 294, 1821, 13, 268, 3776, 13, 1678, 7223, 338, 797, 1725, 294, 1821, 580]}
{"line_number": 333, "line_type": "original", "code": "        columnsToDrop.add(0);", "entropy": 3.095870018005371, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [7.370262145996094, 12.90307331085205, 0.5004938840866089, 0.10325323790311813, 0.0790567472577095, 0.016067780554294586, 0.004989078734070063, 6.466793060302734, 0.41884151101112366], "tokens": [308, 4341, 1762, 15063, 29889, 1202, 29898, 29900, 416]}
{"line_number": 333, "line_type": "generated", "code": "\n            if (Precision.compareTo(getEntry(0, i), 0d, maxUlps) > 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n", "entropy": 0.13123595714569092, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [0.25961440801620483, 0.6665505170822144, 0.6808582544326782, 0.4417644739151001, 0.3512945771217346, 0.0008149401983246207, 0.00021252757869660854, 0.002010706812143326, 0.1683579385280609, 0.0006504327175207436, 0.0058665708638727665, 0.8682753443717957, 0.0458131805062294, 0.005924403201788664, 0.2305774986743927, 0.0005326044629327953, 0.008998436853289604, 0.003929632715880871, 0.030005652457475662, 0.016762245446443558, 0.24717675149440765, 0.0008083889842964709, 0.05075763165950775, 0.0002450642641633749, 0.0004258441040292382, 0.0005946775199845433, 0.0024062031880021095, 1.8004400730133057, 0.008073670789599419, 0.0031928059179335833, 0.042446840554475784, 0.004395229276269674, 0.005166749935597181, 0.10768076777458191, 0.03934847563505173, 0.018313487991690636, 0.0006133820279501379, 0.003109978511929512, 0.01302755530923605, 0.0007682471186853945, 0.017551813274621964, 0.21630920469760895, 0.0033646184019744396, 0.004696884658187628, 0.3382135331630707, 0.04564577341079712, 0.03392859175801277, 0.0005355831235647202, 0.0012475810945034027, 0.022517826408147812, 0.0007521660882048309, 0.0016994333127513528], "tokens": [13, 9651, 565, 313, 29925, 3757, 2459, 29889, 18307, 1762, 29898, 657, 9634, 29898, 29900, 29892, 474, 511, 29871, 29900, 29881, 29892, 4236, 29965, 29880, 567, 29897, 1405, 29871, 29900, 29897, 426, 13, 18884, 736, 2089, 29936, 13, 9651, 500, 13, 4706, 500, 13, 4706, 736, 1565, 29936, 13, 1678, 500, 13]}
{"line_number": 336, "line_type": "original", "code": "        for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {", "entropy": 1.136046290397644, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [8.256244659423828, 6.269851207733154, 0.0033949140924960375, 0.050073008984327316, 4.650458812713623, 0.03584549203515053, 0.8908677697181702, 0.0838308185338974, 0.027653083205223083, 0.0013718727277591825, 0.0007418026216328144, 0.00042381841922178864, 0.14504703879356384, 0.0067038629204034805, 0.0035464982502162457, 0.038779161870479584, 7.831216335296631, 0.0021629766561090946, 0.000770391256082803, 0.01910288631916046, 0.004135034512728453, 0.06372620165348053, 0.01010964810848236, 0.0032611305359750986, 0.0018391376361250877], "tokens": [308, 363, 313, 524, 474, 353, 679, 8009, 2061, 573, 6678, 29879, 890, 474, 529, 679, 9986, 928, 616, 16174, 10302, 890, 474, 4862, 426]}
{"line_number": 336, "line_type": "generated", "code": "\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Returns whether the problem is at a basic optimal state.\n     * @return whether the model has been solved\n     */\n    boolean isBasicOpt", "entropy": 0.19539499282836914, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [0.1638394147157669, 0.5196826457977295, 0.14711183309555054, 0.29657649993896484, 0.07164791971445084, 0.002068405505269766, 0.0021346656139940023, 0.2521021068096161, 0.03657704219222069, 0.02799881063401699, 0.0006687788409180939, 0.0011319665936753154, 0.01654241792857647, 0.0008247073274105787, 0.0018154582940042019, 0.029548589140176773, 0.05673933029174805, 0.05014534667134285, 0.06006437912583351, 0.0017903504194691777, 0.001046467456035316, 1.1497570276260376, 0.4783550500869751, 0.11451539397239685, 0.3530143201351166, 0.22231446206569672, 1.1651077270507812, 1.0145431756973267, 1.2802951335906982, 1.030026912689209, 0.04919477924704552, 0.05734770745038986, 0.03907394781708717, 0.006953090894967318, 0.0020950529724359512, 0.06814844906330109, 0.020755477249622345, 0.05696265771985054, 0.017229054123163223, 0.187343567609787, 0.21061266958713531, 0.0362609401345253, 0.04409680888056755, 0.3756048381328583, 0.007921825163066387, 0.025009460747241974, 0.0002602000313345343, 0.011269251815974712, 0.09516822546720505, 0.011855618096888065, 0.14146319031715393, 0.14792606234550476], "tokens": [13, 9651, 500, 13, 4706, 500, 13, 4706, 736, 1565, 29936, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 16969, 3692, 278, 1108, 338, 472, 263, 6996, 14413, 2106, 29889, 13, 268, 334, 732, 2457, 3692, 278, 1904, 756, 1063, 7484, 13, 268, 3776, 13, 1678, 7223, 338, 16616, 20624]}
{"line_number": 337, "line_type": "original", "code": "            final double entry = tableau.getEntry(0, i);", "entropy": 0.8942226767539978, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [7.593540668487549, 4.238103866577148, 0.23153121769428253, 0.6866796612739563, 0.20910455286502838, 0.15161634981632233, 0.00012444675667211413, 0.0008250646642409265, 0.0005380851216614246, 0.000990615226328373, 0.0019873883575201035, 0.20347575843334198, 0.0005208089714869857, 0.040611933916807175, 0.05368918180465698], "tokens": [632, 2186, 3765, 6251, 353, 1591, 585, 29889, 657, 9634, 29898, 29900, 29892, 474, 416]}
{"line_number": 337, "line_type": "generated", "code": "\n        }\n        return true;\n    }\n\n    /**\n     * Returns whether the problem is feasible.\n     * @return whether the model is feasible\n     */\n    boolean isFeasible() {\n        for", "entropy": 0.1427690088748932, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [0.10099266469478607, 0.5768575668334961, 0.004840560257434845, 0.0027769359294325113, 0.23711363971233368, 0.03351401537656784, 0.02577175199985504, 0.0005709686665795743, 0.0008912881603464484, 0.01376305241137743, 0.0006420934805646539, 0.0013448490062728524, 0.026443954557180405, 0.04884268343448639, 0.05130499601364136, 0.05937553942203522, 0.00145329674705863, 0.0008370947907678783, 1.1670607328414917, 0.5063076615333557, 0.11100705713033676, 0.3482711613178253, 0.22326228022575378, 1.9685919284820557, 0.0014178233686834574, 0.12492507696151733, 0.025024576112627983, 0.0024969372898340225, 0.0017667888896539807, 0.035152532160282135, 0.015718961134552956, 0.09130237996578217, 0.022819891571998596, 0.5896924734115601, 0.3751838803291321, 0.04433392360806465, 0.0011094611836597323, 0.037945814430713654, 0.002069951966404915, 0.014576961286365986, 0.00023147765023168176, 0.004254101309925318, 0.07731401175260544, 0.008430487476289272, 0.004963101353496313, 0.00013207517622504383, 0.0011372057488188148, 0.0045169941149652, 0.001010503270663321, 0.0012880609137937427, 0.10363570600748062, 0.31969863176345825], "tokens": [13, 4706, 500, 13, 4706, 736, 1565, 29936, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 16969, 3692, 278, 1108, 338, 28326, 1821, 29889, 13, 268, 334, 732, 2457, 3692, 278, 1904, 338, 28326, 1821, 13, 268, 3776, 13, 1678, 7223, 338, 8263, 294, 1821, 580, 426, 13, 4706, 363]}
{"line_number": 338, "line_type": "original", "code": "            if (Precision.compareTo(entry, 0d, maxUlps) > 0) {", "entropy": 0.9188882112503052, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [9.356752395629883, 2.4957985877990723, 0.1881367713212967, 1.6494543552398682, 0.0005737089086323977, 0.0004924515378661454, 0.002278947737067938, 0.0854511633515358, 0.00042000532266683877, 0.0052923341281712055, 3.522364377975464, 0.014832221902906895, 0.16568399965763092, 0.13475297391414642, 0.040192220360040665, 0.002221023431047797, 4.947429656982422, 0.03705227002501488, 0.0015442363219335675, 0.0003935516288038343, 0.02847326546907425, 1.1661779880523682, 0.015221741981804371, 0.0032982020638883114, 0.022002752870321274, 0.004804020747542381], "tokens": [632, 565, 313, 29925, 3757, 2459, 29889, 18307, 1762, 29898, 8269, 29892, 29871, 29900, 29881, 29892, 4236, 29965, 29880, 567, 29897, 1405, 29871, 29900, 29897, 426]}
{"line_number": 338, "line_type": "generated", "code": "\n        return true;\n    }\n\n    /**\n     * Returns the number of artificial variables.\n     * @return the number of artificial variables\n     */\n    public int getNumArtificialVariables() {\n        return num", "entropy": 0.20935092866420746, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [0.09040617197751999, 0.30958303809165955, 0.25401294231414795, 0.2533379793167114, 0.0009654866298660636, 0.002646517474204302, 0.059101399034261703, 0.0014965059235692024, 0.0031969649717211723, 0.043512843549251556, 0.07432960718870163, 0.061196327209472656, 0.06617840379476547, 0.0022306579630821943, 0.0005465444410219789, 1.1689975261688232, 1.2436771392822266, 1.9884223937988281, 0.003925595432519913, 1.4316424131393433, 0.09909690916538239, 1.3034043312072754, 0.025332625955343246, 0.0032228692434728146, 0.004091464448720217, 0.05205430090427399, 0.0018252156442031264, 0.24230821430683136, 0.01137804239988327, 0.0018104605842381716, 0.014503413811326027, 0.007406987715512514, 0.1906445324420929, 0.004149636719375849, 0.012816439382731915, 0.001178523525595665, 0.007634272798895836, 1.712501049041748, 0.01828446052968502, 0.0017720249015837908, 0.005084916017949581, 0.00433897040784359, 0.0003946240758523345, 0.00119304982945323, 0.0021771318279206753, 0.00025912740966305137, 0.0012887752382084727, 0.0006254147156141698, 0.003780362894758582, 0.04284985363483429, 0.006289569195359945, 0.04314446821808815], "tokens": [13, 4706, 736, 1565, 29936, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 16969, 278, 1353, 310, 23116, 3651, 29889, 13, 268, 334, 732, 2457, 278, 1353, 310, 23116, 3651, 13, 268, 3776, 13, 1678, 970, 938, 679, 8009, 9986, 928, 616, 10444, 1849, 580, 426, 13, 4706, 736, 954]}
{"line_number": 344, "line_type": "original", "code": "        for (int i = 0; i < getNumArtificialVariables(); i++) {", "entropy": 0.7190993428230286, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [5.2464799880981445, 3.8490865230560303, 0.025794290006160736, 0.11142261326313019, 0.22322499752044678, 0.007867065258324146, 0.2678021490573883, 0.28707796335220337, 0.01733626239001751, 0.003121030516922474, 0.011439328081905842, 0.7263571619987488, 0.3625568747520447, 4.540154457092285, 0.0014947204617783427, 0.0007994554471224546, 0.06195349618792534, 0.00011324241495458409, 0.035337354987859726, 0.028974825516343117, 0.005211340729147196, 0.006579285021871328], "tokens": [308, 363, 313, 524, 474, 353, 29871, 29900, 29936, 474, 529, 679, 8009, 9986, 928, 616, 10444, 1849, 890, 474, 4862, 426]}
{"line_number": 344, "line_type": "generated", "code": "\n     * @return the current solution\n     */\n    RealVector getSolution() {\n        final RealVector solution = new ArrayRealVector(getNumDecisionVariables());\n        for (int i = 1; i", "entropy": 0.26379096508026123, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [0.4260592460632324, 0.7422663569450378, 0.021943161264061928, 0.26558756828308105, 0.40543386340141296, 0.49354034662246704, 0.5281053781509399, 0.08015795052051544, 0.5183960199356079, 0.09126625955104828, 0.15546973049640656, 0.006308996584266424, 0.07117186486721039, 1.2195887565612793, 0.2588465213775635, 0.09298747777938843, 0.4614483714103699, 0.0009526243666186929, 0.09614302217960358, 0.0036956837866455317, 0.004731530323624611, 0.2315504252910614, 0.8434168100357056, 0.7250324487686157, 0.03622139245271683, 0.5443940162658691, 0.05743438005447388, 0.4541154205799103, 0.009138306602835655, 0.0005847889697179198, 8.5588610090781e-05, 0.016068249940872192, 0.19542460143566132, 0.9232401847839355, 0.6641928553581238, 0.0029592791106551886, 0.002481597475707531, 3.182837463100441e-05, 0.3013817071914673, 0.0026102541014552116, 0.25064876675605774, 0.3634435534477234, 0.0018256916664540768, 0.08421903103590012, 0.10896238684654236, 0.002577556297183037, 0.2839958667755127, 1.1190972328186035, 0.018835844472050667, 0.0014790082350373268], "tokens": [13, 268, 334, 732, 2457, 278, 1857, 1650, 13, 268, 3776, 13, 1678, 8195, 12877, 679, 13296, 918, 580, 426, 13, 4706, 2186, 8195, 12877, 1650, 353, 716, 4398, 21713, 12877, 29898, 657, 8009, 6185, 2459, 10444, 1849, 3310, 13, 4706, 363, 313, 524, 474, 353, 29871, 29896, 29936, 474]}
{"line_number": 345, "line_type": "original", "code": "          int col = i + getArtificialVariableOffset();", "entropy": 1.753625512123108, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [7.214987277984619, 4.130287170410156, 2.861957550048828, 0.12932230532169342, 4.13007926940918, 0.5223018527030945, 0.8646724820137024, 2.7698867321014404, 0.000925112864933908, 0.0008092227508313954, 0.011120484210550785, 0.004952544346451759, 0.15582896769046783], "tokens": [965, 938, 784, 353, 474, 718, 679, 9986, 928, 616, 16174, 10302, 890]}
{"line_number": 345, "line_type": "generated", "code": "\n     * @return current solution\n     */\n    public RealVector getSolution() {\n        final RealVector sol = new ArrayRealVector(getWidth() - 1);\n        for (int i = 0; i", "entropy": 0.29558613896369934, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [0.3315092623233795, 0.42160895466804504, 0.47629061341285706, 0.1667105257511139, 0.7678960561752319, 0.6150630712509155, 0.12186489999294281, 0.4387640655040741, 0.1968044489622116, 0.09407985210418701, 0.0020170120988041162, 0.03290930017828941, 1.2734196186065674, 0.5913830995559692, 0.32271069288253784, 0.05914140120148659, 0.3520578145980835, 0.0006423317245207727, 0.05383886396884918, 0.004362945910543203, 0.00924673955887556, 0.2790969908237457, 0.9540842771530151, 0.8556486368179321, 0.05374069884419441, 2.147747755050659, 0.3734073340892792, 0.34523478150367737, 0.006876138970255852, 0.0006930810050107539, 0.00010716341057559475, 0.011135691776871681, 0.18558111786842346, 0.783825159072876, 0.4530269503593445, 0.023423047736287117, 0.17596536874771118, 0.06281913816928864, 0.1740543246269226, 0.005742836743593216, 0.14119203388690948, 0.6579098701477051, 0.0015931545058265328, 0.01209461409598589, 0.10101884603500366, 0.0019104102393612266, 0.18613003194332123, 0.4421166479587555, 0.00956748053431511, 0.0012411518255248666], "tokens": [13, 268, 334, 732, 2457, 1857, 1650, 13, 268, 3776, 13, 1678, 970, 8195, 12877, 679, 13296, 918, 580, 426, 13, 4706, 2186, 8195, 12877, 899, 353, 716, 4398, 21713, 12877, 29898, 657, 6110, 580, 448, 29871, 29896, 416, 13, 4706, 363, 313, 524, 474, 353, 29871, 29900, 29936, 474]}
{"line_number": 346, "line_type": "original", "code": "          if (getBasicRow(col) == null) {", "entropy": 2.061415433883667, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [10.040886878967285, 3.8419203758239746, 0.21071985363960266, 2.1711583137512207, 4.0640106201171875, 0.9038670063018799, 0.02788589894771576, 4.4733076095581055, 0.3127743601799011, 0.5127643346786499, 0.17117613554000854, 0.04619525745511055, 0.021733103320002556], "tokens": [965, 565, 313, 657, 16616, 4301, 29898, 1054, 29897, 1275, 1870, 29897, 426]}
{"line_number": 346, "line_type": "generated", "code": "\n    public double[] getSolution() {\n        double[] solution = new double[getWidth() - 1];\n        copyArray(getObjective(), solution);\n        return solution;\n    }\n\n    /**\n     *", "entropy": 0.30634963512420654, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [0.227248415350914, 0.23011837899684906, 1.1294268369674683, 1.288728952407837, 0.1152460128068924, 0.05668819323182106, 0.4849245846271515, 0.0011805477552115917, 0.038231782615184784, 0.00949887651950121, 0.02508072927594185, 0.27018749713897705, 1.7408305406570435, 0.014838212169706821, 0.5939347147941589, 0.031801559031009674, 0.06163186579942703, 0.001992742298170924, 0.004796427674591541, 0.3677156865596771, 1.1199997663497925, 0.000542612629942596, 0.5409222841262817, 0.2729915678501129, 0.04918729141354561, 0.07380987703800201, 0.008053923025727272, 0.1343039572238922, 0.663531482219696, 0.03434702754020691, 0.004696766380220652, 1.7931621074676514, 1.6528892517089844, 0.012472368776798248, 1.485360860824585, 0.06737466901540756, 0.005964575335383415, 0.0037252570036798716, 0.17835919559001923, 0.2993772625923157, 0.005760615691542625, 0.0009130837861448526, 0.0015555436257272959, 0.046759456396102905, 0.0012196014868095517, 0.02113102562725544, 0.283560186624527, 0.32818424701690674, 0.10204748809337616, 0.03946525603532791, 0.0034451675601303577, 0.0009639384225010872], "tokens": [13, 1678, 970, 3765, 2636, 679, 13296, 918, 580, 426, 13, 4706, 3765, 2636, 1650, 353, 716, 3765, 29961, 657, 6110, 580, 448, 29871, 29896, 1385, 13, 4706, 3509, 2588, 29898, 657, 2061, 573, 3285, 1650, 416, 13, 4706, 736, 1650, 29936, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334]}
{"line_number": 351, "line_type": "original", "code": "        double[][] matrix = new double[getHeight() - 1][getWidth() - columnsToDrop.size()];", "entropy": 1.222011685371399, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [7.854865550994873, 2.187288284301758, 0.7492684125900269, 4.4332170486450195, 2.524658679962158, 0.3312785029411316, 1.2047233581542969, 0.015566745772957802, 0.07676050066947937, 0.5463531613349915, 0.3590319752693176, 0.001082073082216084, 0.6516085863113403, 0.1540849357843399, 0.023425843566656113, 0.02560270205140114, 0.1545005440711975, 0.19193123281002045, 0.000849482137709856, 0.26703009009361267, 10.424846649169922, 0.17538975179195404, 0.21089625358581543, 0.13437336683273315, 0.0042774854227900505, 0.0001677133986959234, 0.29123935103416443], "tokens": [308, 3765, 2636, 2636, 4636, 353, 716, 3765, 29961, 657, 7011, 580, 448, 29871, 29896, 3816, 657, 6110, 580, 448, 4341, 1762, 15063, 29889, 2311, 580, 1385]}
{"line_number": 351, "line_type": "generated", "code": "\n      int positiveVarColumn = columnLabels.indexOf(POSITIVE_VAR_COLUMN_LABEL);\n      Integer positiveVarBasicRow = positiveVarColumn > 0 ? getBasicRow(positiveVarColumn) : null;", "entropy": 0.061780739575624466, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [0.08034838736057281, 0.4731917977333069, 1.1765856742858887, 1.2412495613098145, 0.017786173149943352, 0.00814095325767994, 0.005508481990545988, 0.024147333577275276, 0.00015007323236204684, 2.253030106658116e-05, 0.00018630675913300365, 0.0038764348719269037, 0.0011724510695785284, 0.026418644934892654, 0.0007210753974504769, 0.00013445904187392443, 8.582700684200972e-05, 0.0029031771700829268, 0.0003274143091402948, 0.0019263536669313908, 0.00015817821258679032, 0.00030751267331652343, 0.00014661667228210717, 0.00014232576359063387, 0.007577367592602968, 0.0007909983396530151, 0.026977168396115303, 0.03571942821145058, 0.009993164800107479, 0.0020204621832817793, 0.0013459203764796257, 0.0002474478678777814, 0.0012206730898469687, 0.02557922899723053, 0.00018165845540352166, 0.0002165798214264214, 0.017365550622344017, 0.0032865579705685377, 0.0004988856380805373, 0.0024509173817932606, 0.003484489396214485, 0.00013362467871047556, 7.152301259338856e-05, 0.0002805792901199311, 0.002448301063850522, 0.00016902448260225356, 0.0001284993631998077, 0.00018380382971372455, 0.0029712836258113384, 0.0004037995240651071, 0.0005342725198715925, 0.0006796196103096008], "tokens": [13, 418, 938, 6374, 9037, 4409, 353, 1897, 4775, 29879, 29889, 19402, 29898, 24815, 1806, 18474, 29918, 26865, 29918, 15032, 29127, 29918, 24461, 6670, 416, 13, 418, 8102, 6374, 9037, 16616, 4301, 353, 6374, 9037, 4409, 1405, 29871, 29900, 1577, 679, 16616, 4301, 29898, 1066, 3321, 9037, 4409, 29897, 584, 1870, 29936]}
{"line_number": 352, "line_type": "original", "code": "        for (int i = 1; i < getHeight(); i++) {", "entropy": 0.6558143496513367, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [7.4002251625061035, 1.0214476585388184, 0.004135509487241507, 0.06328608840703964, 0.3153006136417389, 0.0039429315365850925, 0.22929410636425018, 0.9102842211723328, 0.013243096880614758, 0.0026440205983817577, 0.09281399101018906, 0.16178984940052032, 0.8294328451156616, 0.07224562764167786, 0.022035988047719002, 0.004666272550821304, 0.002056509256362915], "tokens": [308, 363, 313, 524, 474, 353, 29871, 29896, 29936, 474, 529, 679, 7011, 890, 474, 4862, 426]}
{"line_number": 352, "line_type": "generated", "code": "\n      for (int i = 0; i", "entropy": 0.2703607976436615, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [0.08846065402030945, 0.9041730165481567, 0.7436825633049011, 0.003924764227122068, 0.07910586893558502, 0.31557294726371765, 0.004015716724097729, 0.3314490020275116, 0.49194204807281494, 0.009511629119515419, 0.0021305023692548275], "tokens": [13, 418, 363, 313, 524, 474, 353, 29871, 29900, 29936, 474]}
{"line_number": 353, "line_type": "original", "code": "          int col = 0;", "entropy": 2.142406463623047, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [9.679926872253418, 2.1065032482147217, 1.9442789554595947, 0.23628702759742737, 0.7258910536766052, 0.2949015200138092, 0.009056324139237404], "tokens": [965, 938, 784, 353, 29871, 29900, 29936]}
{"line_number": 353, "line_type": "generated", "code": "\n      for (int i = 1; i", "entropy": 0.25558292865753174, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [0.0694049820303917, 0.6281520128250122, 0.45341169834136963, 0.002697521820664406, 0.0656052976846695, 0.30875706672668457, 0.0038121899124234915, 0.28062549233436584, 0.987024188041687, 0.009879973717033863, 0.002041757572442293], "tokens": [13, 418, 363, 313, 524, 474, 353, 29871, 29896, 29936, 474]}
{"line_number": 354, "line_type": "original", "code": "          for (int j = 0; j < getWidth(); j++) {", "entropy": 0.9006830453872681, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [7.339910984039307, 5.184556007385254, 0.004155453760176897, 0.10157255828380585, 0.1065588966012001, 0.0035545756109058857, 0.40118756890296936, 0.30679410696029663, 0.012242059223353863, 0.005131526384502649, 0.008691339753568172, 0.2355014532804489, 1.4503730535507202, 0.1368749737739563, 0.009421175345778465, 0.0037800066638737917, 0.0013062763027846813], "tokens": [965, 363, 313, 524, 432, 353, 29871, 29900, 29936, 432, 529, 679, 6110, 890, 432, 4862, 426]}
{"line_number": 354, "line_type": "generated", "code": "\n        int col = i + getOriginalNumDecisionVariables();\n        Integer basicRow = getBasicRow(col);\n        if (basicRow != null) {\n          basicRows.add(basicRow);\n          coefficients[i", "entropy": 0.20487041771411896, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [0.1449970304965973, 0.8428114056587219, 1.2576860189437866, 1.34316885471344, 0.044026199728250504, 1.3227043151855469, 0.06277133524417877, 0.40256139636039734, 1.412663459777832, 0.039530228823423386, 0.31012198328971863, 0.00044312194222584367, 0.0025913489516824484, 2.3364747903542593e-05, 0.41425177454948425, 0.01146773062646389, 0.2349720299243927, 0.26843205094337463, 0.742196798324585, 0.02503492310643196, 0.007702058181166649, 0.11480876803398132, 0.0011710221879184246, 0.003908258862793446, 0.0005545270396396518, 0.010098318569362164, 0.007481532637029886, 0.006238747853785753, 0.11517611145973206, 0.16667671501636505, 0.03034975752234459, 0.022614911198616028, 0.02094683051109314, 0.2690034508705139, 0.001520192832686007, 0.06954098492860794, 0.0028714400250464678, 0.0056823864579200745, 0.14816580712795258, 0.20974084734916687, 0.0008830699953250587, 0.0006980843027122319, 0.00040713604539632797, 0.003056856105104089, 0.009188390336930752, 0.0002196785935666412, 0.00652954401448369, 0.001796657219529152, 0.1662672460079193, 0.35667288303375244, 0.0013761583250015974, 0.009456956759095192], "tokens": [13, 4706, 938, 784, 353, 474, 718, 679, 26036, 8009, 6185, 2459, 10444, 1849, 890, 13, 4706, 8102, 6996, 4301, 353, 679, 16616, 4301, 29898, 1054, 416, 13, 4706, 565, 313, 16121, 4301, 2804, 1870, 29897, 426, 13, 3986, 6996, 10661, 29889, 1202, 29898, 16121, 4301, 416, 13, 3986, 16127, 29961, 29875]}
{"line_number": 355, "line_type": "original", "code": "            if (!columnsToDrop.contains(j)) {", "entropy": 2.5922601222991943, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [8.50438117980957, 1.4634530544281006, 4.920688629150391, 4.718667507171631, 0.5330537557601929, 0.6645506620407104, 0.030402837321162224, 0.0184086412191391, 0.008980479091405869, 9.955791473388672, 0.2663388252258301, 0.02240266278386116], "tokens": [632, 565, 5384, 13099, 1762, 15063, 29889, 11516, 29898, 29926, 876, 426]}
{"line_number": 355, "line_type": "generated", "code": "\n          if (colIndex > 0) {\n            Integer basicRow = getBasicRow(colIndex);\n            if (basicRow != null) {\n              basicRows.add(basicRow);\n              coefficients[i] = get", "entropy": 0.1213729977607727, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [0.08241347968578339, 0.43880364298820496, 1.4443864822387695, 0.028987910598516464, 0.05350704491138458, 0.00033361115492880344, 0.8107041716575623, 0.07262284308671951, 0.002591705648228526, 0.07093092799186707, 0.0014996008248999715, 0.009044983424246311, 0.7044546008110046, 0.27514490485191345, 0.7556267380714417, 0.03336252644658089, 0.08842704445123672, 0.016569621860980988, 0.00029940891545265913, 0.0012336509535089135, 0.00043215948971919715, 0.010072002187371254, 0.00018916724366135895, 0.005988867953419685, 0.0029137558303773403, 0.06763295829296112, 0.10037027299404144, 0.028383467346429825, 0.008381311781704426, 0.019481860101222992, 0.13784538209438324, 0.0012721073580905795, 0.06424941122531891, 0.003158226143568754, 0.0047657000832259655, 0.052855733782052994, 0.24319614470005035, 0.00041869457345455885, 0.0002649671514518559, 0.0001429217227268964, 0.0023976408410817385, 0.006477550603449345, 0.000289159914245829, 0.008684367872774601, 0.001557924086228013, 0.1171693205833435, 0.21813367307186127, 0.0008441222598776221, 0.004484239965677261, 0.0011135098757222295, 0.009827091358602047, 0.2974569499492645], "tokens": [13, 3986, 565, 313, 1054, 3220, 1405, 29871, 29900, 29897, 426, 13, 9651, 8102, 6996, 4301, 353, 679, 16616, 4301, 29898, 1054, 3220, 416, 13, 9651, 565, 313, 16121, 4301, 2804, 1870, 29897, 426, 13, 795, 6996, 10661, 29889, 1202, 29898, 16121, 4301, 416, 13, 795, 16127, 29961, 29875, 29962, 353, 679]}
{"line_number": 356, "line_type": "original", "code": "              matrix[i - 1][col++] = tableau.getEntry(i, j);", "entropy": 2.072100877761841, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [7.002618789672852, 10.025097846984863, 1.9009201526641846, 1.0035953521728516, 5.922177314758301, 1.467305302619934, 0.028340013697743416, 0.6651322841644287, 2.756633758544922, 4.357890605926514, 0.004874370526522398, 0.014306123368442059, 4.3820109367370605, 0.0010991015005856752, 0.013215920887887478, 0.0028471907135099173, 0.004004080779850483, 0.007149114273488522, 2.4918594360351562, 0.23282213509082794, 3.1350150108337402, 0.16730719804763794], "tokens": [1669, 4636, 29961, 29875, 448, 29871, 29896, 3816, 1054, 1817, 29962, 353, 1591, 585, 29889, 657, 9634, 29898, 29875, 29892, 432, 416]}
{"line_number": 356, "line_type": "generated", "code": "\n              colIndex = columnLabels.indexOf(\"s\" + i);\n              if (colIndex", "entropy": 0.30981412529945374, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [0.0729312002658844, 1.7975636720657349, 1.2858787775039673, 0.0006696127820760012, 0.0211027804762125, 0.21426965296268463, 0.0010713557712733746, 9.846202738117427e-05, 0.0005850272136740386, 0.0693574920296669, 0.32434624433517456, 1.266332745552063, 0.01851513795554638, 0.0006754500791430473, 0.13386119902133942, 0.020811637863516808, 0.0072426144033670425, 0.7759013772010803, 0.7239823937416077, 0.019708288833498955, 0.060720883309841156, 0.0002843929105438292], "tokens": [13, 795, 784, 3220, 353, 1897, 4775, 29879, 29889, 19402, 703, 29879, 29908, 718, 474, 416, 13, 795, 565, 313, 1054, 3220]}
{"line_number": 361, "line_type": "original", "code": "        for (int i = columnsToDrop.size() - 1; i >= 0; i--) {", "entropy": 1.1701847314834595, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [6.04602575302124, 6.010499000549316, 0.009084203280508518, 0.1153249442577362, 3.438499689102173, 0.1170627549290657, 8.2365083694458, 0.41131243109703064, 0.6521902084350586, 0.06476485729217529, 0.16634498536586761, 1.449465036392212, 1.6219040155410767, 0.0715939849615097, 0.030277011916041374, 0.021575968712568283, 0.017580511048436165, 0.6047059297561646, 0.02330239862203598, 0.02278679795563221, 0.0216215830296278, 0.07734567672014236, 0.01274370402097702, 0.0054565537720918655, 0.0066399178467690945], "tokens": [308, 363, 313, 524, 474, 353, 4341, 1762, 15063, 29889, 2311, 580, 448, 29871, 29896, 29936, 474, 6736, 29871, 29900, 29936, 474, 489, 29897, 426]}
{"line_number": 361, "line_type": "generated", "code": "\n          } else if (basicRow == 0) {\n              basicRows.add(basicRow);\n              coefficients[i] = tableau.getEntry(basicRow, getRhsOffset());\n          } else {\n              basic", "entropy": 0.2758805751800537, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [0.25621718168258667, 0.8857606053352356, 1.9932568073272705, 0.4090648591518402, 0.5792735815048218, 0.055513013154268265, 0.22676409780979156, 0.02057693526148796, 0.3875291347503662, 0.19129808247089386, 0.0033030735794454813, 0.0541079007089138, 0.0025273782666772604, 0.011729087680578232, 0.8204912543296814, 1.3636752367019653, 0.07797219604253769, 0.0004240567213855684, 0.06440512090921402, 0.0181602630764246, 0.837497353553772, 0.0006739014061167836, 0.0035115741193294525, 0.008861028589308262, 0.28906702995300293, 0.3137528598308563, 0.0006300609675236046, 0.008221118710935116, 0.0012365083675831556, 0.011115415021777153, 1.2698705196380615, 2.253030106658116e-05, 0.0009202298242598772, 0.0005453529884107411, 0.0015349523164331913, 0.0012167439563199878, 0.4958009123802185, 0.0005354639724828303, 0.012911882251501083, 0.39558568596839905, 0.2230905294418335, 0.0023463834077119827, 0.0007770617958158255, 0.1242549791932106, 0.006216712296009064, 0.27831193804740906, 0.016299204900860786, 0.21595415472984314, 0.39796966314315796, 0.018058646470308304, 0.25885578989982605, 1.7280933856964111], "tokens": [13, 3986, 500, 1683, 565, 313, 16121, 4301, 1275, 29871, 29900, 29897, 426, 13, 795, 6996, 10661, 29889, 1202, 29898, 16121, 4301, 416, 13, 795, 16127, 29961, 29875, 29962, 353, 1591, 585, 29889, 657, 9634, 29898, 16121, 4301, 29892, 679, 29934, 9499, 10302, 3310, 13, 3986, 500, 1683, 426, 13, 795, 6996]}
{"line_number": 362, "line_type": "original", "code": "          columnLabels.remove((int) columnsToDrop.get(i));", "entropy": 1.9206300973892212, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [5.034928321838379, 8.663187026977539, 0.9663246870040894, 0.01686692424118519, 0.06159476563334465, 2.6038527488708496, 6.157907485961914, 1.678558588027954, 0.07247915863990784, 6.301031589508057, 0.10435348004102707, 0.3979943096637726, 0.13270945847034454, 0.09498448669910431, 0.014474157243967056, 0.24198642373085022, 0.10747630149126053], "tokens": [965, 1897, 4775, 29879, 29889, 5992, 3552, 524, 29897, 4341, 1762, 15063, 29889, 657, 29898, 29875, 2483]}
{"line_number": 362, "line_type": "generated", "code": "\n              if (basicRow != null && basicRow == 0) {\n                  coefficients[i] = 0;\n              } else {\n                  coefficients[i] = getEntry(basicRow, getRhsOffset());\n", "entropy": 0.2151869684457779, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [0.3317519724369049, 2.219326972961426, 1.3818044662475586, 0.06574249267578125, 0.05867442116141319, 0.02512618526816368, 0.9744117259979248, 0.038928572088479996, 0.5059495568275452, 0.1955041140317917, 0.01190356258302927, 0.5305188894271851, 0.10918857157230377, 0.00296926312148571, 0.053801700472831726, 0.005172916688024998, 0.013059207238256931, 1.0361614227294922, 0.04064295440912247, 0.405269980430603, 0.00035529976594261825, 0.0019537187181413174, 0.0005922947311773896, 0.0011511372867971659, 0.02136700041592121, 0.0013252056669443846, 0.03924360126256943, 0.005991000682115555, 0.2697862684726715, 0.025075847283005714, 0.1882462054491043, 0.43240997195243835, 0.03536071255803108, 0.21013540029525757, 0.01072629727423191, 0.9584801197052002, 0.0002559096028562635, 0.001321038813330233, 0.0002302858338225633, 0.003830359550192952, 0.6888298988342285, 0.06234816461801529, 0.00535174086689949, 0.015772471204400063, 0.006695929449051619, 0.06255960464477539, 0.06292179226875305, 0.021422425284981728, 0.00028689560713246465, 0.000552263343706727, 0.04042396694421768, 0.008809983730316162], "tokens": [13, 795, 565, 313, 16121, 4301, 2804, 1870, 2607, 6996, 4301, 1275, 29871, 29900, 29897, 426, 13, 462, 29871, 16127, 29961, 29875, 29962, 353, 29871, 29900, 29936, 13, 795, 500, 1683, 426, 13, 462, 29871, 16127, 29961, 29875, 29962, 353, 679, 9634, 29898, 16121, 4301, 29892, 679, 29934, 9499, 10302, 3310, 13]}
{"line_number": 365, "line_type": "original", "code": "        this.tableau = new Array2DRowRealMatrix(matrix);", "entropy": 1.8465608358383179, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [6.32925271987915, 8.761031150817871, 0.03089325875043869, 4.851524353027344, 0.002625829540193081, 1.9952397346496582, 2.0687317848205566, 0.6179459095001221, 0.04193678870797157, 0.00010311071673640981, 0.00047231485950760543, 0.04832225292921066, 6.05564855504781e-05, 0.03813952952623367, 3.4465742111206055, 1.3121206760406494], "tokens": [308, 445, 29889, 2371, 585, 353, 716, 4398, 29906, 29928, 4301, 21713, 14609, 29898, 5344, 416]}
{"line_number": 365, "line_type": "generated", "code": "\n              coefficients[i] = 0;\n          } else if (basicRow == null) {\n              // if the variable is not basic\n              coefficients[i] = 0;\n          } else if (basicRow == 0", "entropy": 0.25565972924232483, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [0.2674825191497803, 0.5912790298461914, 0.6115454435348511, 0.0010488491971045732, 0.006362539250403643, 0.0014641289599239826, 0.003561584046110511, 0.10037728399038315, 0.005382213741540909, 0.028753729537129402, 0.012577380053699017, 0.5496557950973511, 0.008340172469615936, 0.03865599259734154, 0.5855708718299866, 0.025303103029727936, 0.06868837773799896, 0.015746185556054115, 0.5893403887748718, 0.32360130548477173, 0.14636798202991486, 0.001412466517649591, 0.027533290907740593, 0.46828293800354004, 0.6955469846725464, 0.5386894941329956, 0.5258978605270386, 0.42028939723968506, 0.1895291805267334, 1.403713345527649, 1.0889203548431396, 0.6943356990814209, 0.5998626351356506, 0.8446415066719055, 0.0002426806604489684, 0.0007954055909067392, 0.0003630455757956952, 0.000697846058756113, 0.27161967754364014, 0.015980850905179977, 0.004878522362560034, 0.004610147327184677, 0.18930034339427948, 0.003278478281572461, 0.006663483567535877, 0.6422284245491028, 0.0206155888736248, 0.17733538150787354, 0.010520121082663536, 0.2488747090101242, 0.21149300038814545, 0.00504648732021451], "tokens": [13, 795, 16127, 29961, 29875, 29962, 353, 29871, 29900, 29936, 13, 3986, 500, 1683, 565, 313, 16121, 4301, 1275, 1870, 29897, 426, 13, 795, 849, 565, 278, 2286, 338, 451, 6996, 13, 795, 16127, 29961, 29875, 29962, 353, 29871, 29900, 29936, 13, 3986, 500, 1683, 565, 313, 16121, 4301, 1275, 29871, 29900]}
{"line_number": 366, "line_type": "original", "code": "        this.numArtificialVariables = 0;", "entropy": 2.2790257930755615, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [6.2277374267578125, 9.194877624511719, 0.052383434027433395, 5.8629655838012695, 5.581769943237305, 0.00943499244749546, 0.00128020322881639, 0.7917020916938782, 0.00016366096679121256, 1.219172477722168, 0.5121170878410339, 0.16874489188194275, 0.0049840970896184444], "tokens": [308, 445, 29889, 1949, 9986, 928, 616, 10444, 1849, 353, 29871, 29900, 29936]}
{"line_number": 366, "line_type": "generated", "code": "\n          }\n          if (basicRow == null) {\n              coefficients[i] = 0;\n              continue;\n          }\n          if (basicRow == 0) {\n              coefficients[i] = 1;\n", "entropy": 0.27708131074905396, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [0.24295111000537872, 1.7793066501617432, 0.0862991139292717, 1.2701482772827148, 0.21302363276481628, 0.4541737139225006, 0.021108733490109444, 0.04938485473394394, 0.028232820332050323, 0.7573341131210327, 0.07992587238550186, 0.15081404149532318, 0.0024263011291623116, 0.015460287220776081, 0.6275748014450073, 0.7522696852684021, 0.00046528480015695095, 0.0015711355954408646, 0.0006526962388306856, 0.0007728926721028984, 0.06819777935743332, 0.003265526844188571, 0.023944256827235222, 0.00784920621663332, 1.3849221467971802, 0.047875650227069855, 0.00023922442051116377, 0.004443058744072914, 0.01661921665072441, 0.0014297273010015488, 0.043589767068624496, 0.23920412361621857, 1.8743581771850586, 0.07787735760211945, 0.4206044375896454, 0.15879656374454498, 0.5085962414741516, 0.4054345190525055, 0.0051937890239059925, 0.10766246914863586, 0.0012497241841629148, 0.019863612949848175, 0.4344129264354706, 0.4284057021141052, 0.00023648326168768108, 0.002833995968103409, 0.00063744728686288, 0.014537720941007137, 1.0576367378234863, 0.44283097982406616, 0.06183438375592232, 0.009747881442308426], "tokens": [13, 3986, 500, 13, 3986, 565, 313, 16121, 4301, 1275, 1870, 29897, 426, 13, 795, 16127, 29961, 29875, 29962, 353, 29871, 29900, 29936, 13, 795, 6773, 29936, 13, 3986, 500, 13, 3986, 565, 313, 16121, 4301, 1275, 29871, 29900, 29897, 426, 13, 795, 16127, 29961, 29875, 29962, 353, 29871, 29896, 29936, 13]}
{"line_number": 367, "line_type": "original", "code": "    }", "entropy": 3.7369003295898438, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [6.68129825592041, 0.7925026416778564], "tokens": [268, 500]}
{"line_number": 367, "line_type": "generated", "code": "\n              continue;\n          }\n          basicRows.add(basicRow);\n          coefficients[i] = getEntry(basicRow, getRhsOffset());\n      }\n      double[] point = new double[coefficients.length", "entropy": 0.2581348121166229, "is_bug_line": false, "sus_score": 0.24253562503633297, "per_token_entropy": [0.12809108197689056, 1.6651275157928467, 0.7080259323120117, 0.000685576000250876, 0.006739267613738775, 0.032751258462667465, 0.0021658313926309347, 0.08484037965536118, 0.29663321375846863, 0.5118951201438904, 0.00025042734341695905, 0.00016759421851020306, 6.532455881824717e-05, 0.0006791430641897023, 0.0028588399291038513, 8.689979586051777e-05, 0.0011922164121642709, 0.004216471221297979, 0.22392040491104126, 0.7129014134407043, 0.0003921216703020036, 0.000730247818864882, 0.0005925330333411694, 0.005572973750531673, 0.4112181067466736, 0.08166670799255371, 0.004004793241620064, 0.007697563152760267, 0.0006338732782751322, 0.0042399754747748375, 0.08246485143899918, 0.020662998780608177, 0.0005068686441518366, 0.000814582861494273, 0.22956041991710663, 0.014373340643942356, 0.6381523609161377, 0.003052221145480871, 0.0076443287543952465, 0.9686750173568726, 2.1819233894348145, 1.2117884159088135, 2.0511481761932373, 0.03385011479258537, 0.6069315075874329, 0.021112585440278053, 0.012029128149151802, 0.4360010623931885, 0.0005281960475258529, 0.0006398299592547119, 0.0008001701789908111, 0.00030655929003842175], "tokens": [13, 795, 6773, 29936, 13, 3986, 500, 13, 3986, 6996, 10661, 29889, 1202, 29898, 16121, 4301, 416, 13, 3986, 16127, 29961, 29875, 29962, 353, 679, 9634, 29898, 16121, 4301, 29892, 679, 29934, 9499, 10302, 3310, 13, 418, 500, 13, 418, 3765, 2636, 1298, 353, 716, 3765, 29961, 1111, 8462, 29879, 29889, 2848]}
{"line_number": 317, "line_type": "original", "code": "                return null;", "entropy": 5.658044815063477, "is_bug_line": false, "sus_score": 0.22941573387056174, "per_token_entropy": [10.279570579528809, 7.583659648895264, 4.759555339813232, 0.009394722990691662], "tokens": [462, 736, 1870, 29936]}
{"line_number": 317, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Checks whether the given column is non-basic.\n     * @param col index of the column to check\n     * @return true if the column is non-basic\n     */\n    protected", "entropy": 0.22093521058559418, "is_bug_line": false, "sus_score": 0.22941573387056174, "per_token_entropy": [0.029601480811834335, 0.3370906412601471, 0.0017973711946979165, 0.008958621881902218, 0.07987833023071289, 0.08183730393648148, 0.032734762877225876, 0.09570124000310898, 0.0011197017738595605, 0.00013136000779923052, 2.3567206859588623, 0.49058592319488525, 0.5964438915252686, 0.39985132217407227, 0.9334852695465088, 0.7829073667526245, 0.1975967437028885, 2.055067777633667, 0.09798114746809006, 0.18650245666503906, 0.24563293159008026, 0.019133878871798515, 0.0012319840025156736, 0.0002083561266772449, 0.019645286723971367, 0.0007949291029945016, 0.03127576410770416, 0.061846598982810974, 0.0012359131360426545, 0.005852112080901861, 0.003722406690940261, 0.0053626494482159615, 0.002948225475847721, 0.009307210333645344, 0.0011410161387175322, 0.0010012142593041062, 0.0011931689223274589, 0.016243260353803635, 0.923149824142456, 0.031867723912000656, 0.05091387405991554, 0.23669157922267914, 0.07133360952138901, 0.1807127594947815, 0.013651815243065357, 0.0010284854797646403, 0.5779924392700195, 0.0028769078198820353, 0.025305893272161484, 0.0005660838796757162, 0.009564528241753578, 0.1692044883966446], "tokens": [13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 5399, 29879, 3692, 278, 2183, 1897, 338, 1661, 29899, 16121, 29889, 13, 268, 334, 732, 3207, 784, 2380, 310, 278, 1897, 304, 1423, 13, 268, 334, 732, 2457, 1565, 565, 278, 1897, 338, 1661, 29899, 16121, 13, 268, 3776, 13, 1678, 6364]}
