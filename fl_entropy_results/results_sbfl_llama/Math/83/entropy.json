{"line_number": 349, "line_type": "original", "code": "              coefficients[i] = 0;", "entropy": 3.382634401321411, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [10.456910133361816, 14.430124282836914, 1.3581278324127197, 1.0881702899932861, 0.255262166261673, 0.16368083655834198, 2.0784568786621094, 0.41377246379852295, 0.19920463860034943], "tokens": [1669, 16127, 29961, 29875, 29962, 353, 29871, 29900, 29936]}
{"line_number": 349, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Get the height of the tableau.\n     * @return height of the tableau\n     */\n    protected final int getHeight() {\n        return tableau.getRowDimension();\n", "entropy": 0.026628151535987854, "is_bug_line": false, "sus_score": 0.5, "per_token_entropy": [0.16938292980194092, 0.2991630434989929, 0.011716834269464016, 0.01376704964786768, 0.07695335149765015, 0.03470967710018158, 0.015717435628175735, 0.014195652678608894, 0.0013875867007300258, 0.000513064325787127, 0.19400198757648468, 0.01533045619726181, 0.07226381450891495, 0.003679649904370308, 0.0014674619305878878, 0.003559564705938101, 0.0012411518255248666, 0.022991858422756195, 0.0047187162563204765, 0.006273932289332151, 0.001105650793761015, 0.053599923849105835, 0.0005818104837089777, 0.03031887859106064, 0.004219320602715015, 0.0015899409772828221, 0.001701099332422018, 0.0004957877099514008, 0.011178366839885712, 0.002815451705828309, 0.003840334713459015, 0.0035741752944886684, 0.004453621339052916, 0.025564704090356827, 0.06758939474821091, 0.0011700696777552366, 0.0005389191792346537, 0.0007223857101053, 0.0010998159414157271, 0.000614216027315706, 0.0022749039344489574, 0.018556445837020874, 0.004114852286875248, 0.012609870173037052, 8.046303264563903e-05, 0.00098525604698807, 0.0003233625029679388, 0.0022852513939142227, 0.0001714082609396428, 0.00027247529942542315, 0.15825504064559937, 0.004925261251628399], "tokens": [13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 3617, 278, 3171, 310, 278, 1591, 585, 29889, 13, 268, 334, 732, 2457, 3171, 310, 278, 1591, 585, 13, 268, 3776, 13, 1678, 6364, 2186, 938, 679, 7011, 580, 426, 13, 4706, 736, 1591, 585, 29889, 657, 4301, 16142, 2673, 890, 13]}
{"line_number": 297, "line_type": "original", "code": "                return null;", "entropy": 3.53466534614563, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [5.997305870056152, 7.89350700378418, 0.2443852722644806, 0.0034629872534424067], "tokens": [462, 736, 1870, 29936]}
{"line_number": 297, "line_type": "generated", "code": "\n          }\n          if (basicRow == null) {\n              coefficients[i] = 0;\n          } else {\n              coefficients[i] = getEntry(basicRow, getRhsOffset());\n          }\n      }", "entropy": 0.16355416178703308, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [0.19165107607841492, 0.6875734329223633, 0.019571293145418167, 0.9059348702430725, 0.1792283058166504, 0.5178170204162598, 0.02691984362900257, 0.03528062254190445, 0.02631472982466221, 1.0010249614715576, 0.038433242589235306, 0.059092745184898376, 0.0023788507096469402, 0.015134620480239391, 0.43989434838294983, 0.4492363929748535, 0.001423299196176231, 0.004194747656583786, 0.0013677061069756746, 0.003239148296415806, 0.3047401010990143, 0.007267585955560207, 0.20322692394256592, 0.019903814420104027, 0.2003312110900879, 0.0015509016811847687, 0.012469661422073841, 0.370129257440567, 0.008995365351438522, 0.13408422470092773, 0.635158896446228, 0.0009204680100083351, 0.0018616265151649714, 0.0007630059262737632, 0.006284001283347607, 0.32582613825798035, 0.16508950293064117, 0.001778450678102672, 0.016229890286922455, 0.0007900454220362008, 0.002731166547164321, 0.014666715636849403, 0.020029431208968163, 0.0007695574313402176, 0.0009012927766889334, 0.22826263308525085, 0.02225029654800892, 0.8341153860092163, 0.004674578085541725, 0.011196402832865715, 0.3405033051967621, 0.0016033900901675224], "tokens": [13, 3986, 500, 13, 3986, 565, 313, 16121, 4301, 1275, 1870, 29897, 426, 13, 795, 16127, 29961, 29875, 29962, 353, 29871, 29900, 29936, 13, 3986, 500, 1683, 426, 13, 795, 16127, 29961, 29875, 29962, 353, 679, 9634, 29898, 16121, 4301, 29892, 679, 29934, 9499, 10302, 3310, 13, 3986, 500, 13, 418, 500]}
{"line_number": 310, "line_type": "original", "code": "        int width = getWidth() - numArtificialVariables - 1;", "entropy": 1.438035011291504, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [8.09063720703125, 6.811092376708984, 3.3793692588806152, 0.11766541004180908, 0.31302833557128906, 0.3657258152961731, 0.927104115486145, 0.12011417001485825, 2.889143466949463, 0.7496232390403748, 0.0021828413009643555, 0.0009565545478835702, 0.005126070696860552, 0.0003150205302517861, 1.7011127471923828, 0.2762105464935303, 0.09650948643684387, 0.038712188601493835], "tokens": [308, 938, 2920, 353, 679, 6110, 580, 448, 954, 9986, 928, 616, 10444, 1849, 448, 29871, 29896, 29936]}
{"line_number": 310, "line_type": "generated", "code": "\n    /**\n     * @param coefficients the coefficients to check\n     * @return true if the coefficients are all non-negative\n     */\n    protected boolean isFeasible(final double[] coefficients) {\n        for (double coefficient :", "entropy": 0.44729167222976685, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [0.07564184069633484, 0.38448864221572876, 0.2267715185880661, 0.15958426892757416, 0.0030151403043419123, 0.0005266471416689456, 2.1233267784118652, 0.8123291730880737, 2.371549367904663, 1.314046859741211, 0.29932716488838196, 1.5091471672058105, 1.8315200805664062, 0.13535943627357483, 0.001636119675822556, 0.04347837343811989, 0.006533452309668064, 0.21025404334068298, 0.6087843775749207, 0.027753962203860283, 0.7511521577835083, 0.5766955614089966, 0.595112681388855, 1.8908075094223022, 1.2411682605743408, 0.11037421971559525, 0.047784507274627686, 0.30626925826072693, 0.0015900599537417293, 0.026942355558276176, 0.0026150099001824856, 0.01127432007342577, 1.1402243375778198, 0.032872274518013, 1.0737104415893555, 1.3910871744155884, 0.00013612773909699172, 0.0035024271346628666, 0.08287247270345688, 0.26517564058303833, 0.033710088580846786, 0.030747730284929276, 0.005222250707447529, 0.010876302607357502, 0.0021532224491238594, 0.006542334798723459, 0.19440889358520508, 0.5858032703399658, 0.005123936105519533, 0.5060118436813354, 0.16959594190120697, 0.012529231607913971], "tokens": [13, 1678, 7762, 13, 268, 334, 732, 3207, 16127, 278, 16127, 304, 1423, 13, 268, 334, 732, 2457, 1565, 565, 278, 16127, 526, 599, 1661, 29899, 22198, 13, 268, 3776, 13, 1678, 6364, 7223, 338, 8263, 294, 1821, 29898, 8394, 3765, 2636, 16127, 29897, 426, 13, 4706, 363, 313, 8896, 10825, 584]}
{"line_number": 311, "line_type": "original", "code": "        int height = getHeight() - 1;", "entropy": 1.9842703342437744, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [7.307604789733887, 6.403234481811523, 4.2251996994018555, 0.09175840020179749, 0.5205047130584717, 0.22425197064876556, 1.3201792240142822, 0.16940012574195862, 1.3383643627166748, 0.13500943779945374, 0.09146492928266525], "tokens": [308, 938, 3171, 353, 679, 7011, 580, 448, 29871, 29896, 29936]}
{"line_number": 311, "line_type": "generated", "code": "\n     * Get the current solution.\n<|mask:1|><|mask:0|>\n     * Get the current solution.\n<|mask:1|><|mask:0|>\n     * Get the current solution.", "entropy": 0.20385922491550446, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [0.2605131268501282, 0.4183407723903656, 0.08731722086668015, 2.0997626781463623, 0.13415813446044922, 0.8114041686058044, 0.41146042943000793, 0.40536949038505554, 0.03328757733106613, 1.510723352432251, 0.0010831448016688228, 0.06968242675065994, 0.007312201429158449, 0.7068094611167908, 0.007744525093585253, 0.6501791477203369, 0.002922432729974389, 0.01458354014903307, 0.005474337842315435, 0.1710665374994278, 0.0016318351263180375, 0.009902400895953178, 0.037487659603357315, 0.08737107366323471, 0.025409448891878128, 1.372818946838379, 0.010841043666005135, 0.0487087108194828, 0.038803473114967346, 0.0874401107430458, 0.007005533203482628, 0.46461647748947144, 0.0008049347088672221, 0.011869636364281178, 0.002307730494067073, 0.29473915696144104, 0.0038769098464399576, 0.08379080146551132, 0.0007584794075228274, 0.003232137765735388, 0.0009627474937587976, 0.021007182076573372, 0.0007089247228577733, 0.004102268256247044, 0.012940831482410431, 0.03468400239944458, 0.012928592972457409, 0.08301401138305664, 0.0026020498480647802, 0.008723129518330097, 0.006895081140100956, 0.009499230422079563], "tokens": [13, 268, 334, 3617, 278, 1857, 1650, 29889, 13, 29966, 29989, 13168, 29901, 29896, 29989, 5299, 29989, 13168, 29901, 29900, 29989, 29958, 13, 268, 334, 3617, 278, 1857, 1650, 29889, 13, 29966, 29989, 13168, 29901, 29896, 29989, 5299, 29989, 13168, 29901, 29900, 29989, 29958, 13, 268, 334, 3617, 278, 1857, 1650, 29889]}
{"line_number": 312, "line_type": "original", "code": "        double[][] matrix = new double[height][width];", "entropy": 1.7490044832229614, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [6.930335998535156, 4.321271896362305, 1.7913939952850342, 4.221697807312012, 1.1111962795257568, 0.11351674795150757, 1.7057454586029053, 0.027918823063373566, 0.13740772008895874, 1.8718055486679077, 0.2383132129907608, 0.17989154160022736, 0.08655989170074463], "tokens": [308, 3765, 2636, 2636, 4636, 353, 716, 3765, 29961, 3545, 3816, 2103, 1385]}
{"line_number": 312, "line_type": "generated", "code": "\n     * @param row1 the row to subtract from\n     * @param row2 the row to subtract\n     * @param factor the factor to multiply row2 by\n     */\n    protected void subtractRow(final int row1, final", "entropy": 0.2734616696834564, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [0.07865385711193085, 0.14285315573215485, 0.03397698700428009, 0.40761658549308777, 0.0029752058908343315, 1.1590555906295776, 1.4021557569503784, 1.5345641374588013, 0.4586946964263916, 0.3633691966533661, 0.13847891986370087, 0.058883603662252426, 0.10159226506948471, 0.07276029884815216, 0.0004920940846204758, 0.0025090661365538836, 0.00043847484630532563, 0.23854567110538483, 0.013498345389962196, 0.02215026132762432, 0.027522390708327293, 0.05089518055319786, 0.05450330674648285, 0.0472026951611042, 0.04793303459882736, 0.16991935670375824, 0.0022973830346018076, 0.06943222880363464, 1.2425787448883057, 0.49038898944854736, 0.4296712577342987, 0.3659549951553345, 0.5397132635116577, 0.40274742245674133, 0.08103381842374802, 0.44781944155693054, 0.5314798355102539, 0.06543313711881638, 0.41312605142593384, 0.004331017844378948, 0.020399412140250206, 1.1395578384399414, 0.02417200431227684, 0.24857008457183838, 0.7172909379005432, 0.12912693619728088, 0.10842559486627579, 0.03268999606370926, 0.0015048381173983216, 0.0019395602867007256, 0.0009727513534016907, 0.07810836285352707], "tokens": [13, 268, 334, 732, 3207, 1948, 29896, 278, 1948, 304, 23197, 515, 13, 268, 334, 732, 3207, 1948, 29906, 278, 1948, 304, 23197, 13, 268, 334, 732, 3207, 7329, 278, 7329, 304, 22932, 1948, 29906, 491, 13, 268, 3776, 13, 1678, 6364, 1780, 23197, 4301, 29898, 8394, 938, 1948, 29896, 29892, 2186]}
{"line_number": 313, "line_type": "original", "code": "        for (int i = 0; i < height; i++) {", "entropy": 0.6920797824859619, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [4.964690685272217, 1.692047119140625, 0.10262451320886612, 0.048096876591444016, 0.8427430987358093, 0.02259265072643757, 0.23861928284168243, 0.10536335408687592, 0.01937967725098133, 0.0030996394343674183, 0.03215070441365242, 2.837944507598877, 0.1088300347328186, 0.03326912969350815, 0.009947016835212708, 0.01187894307076931], "tokens": [308, 363, 313, 524, 474, 353, 29871, 29900, 29936, 474, 529, 3171, 29936, 474, 4862, 426]}
{"line_number": 313, "line_type": "generated", "code": "\n     * @param rowIndex index of the row to subtract from\n     * @param subtrahendIndex index of the row to subtract\n     * @param factor factor by which to multiply the subtrahend row\n     */\n   ", "entropy": 0.33953404426574707, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [0.2837771475315094, 0.2777450978755951, 0.06013981252908707, 0.5661627650260925, 0.007974216714501381, 1.277116298675537, 1.8743829727172852, 1.074981451034546, 0.008900847285985947, 0.13407880067825317, 0.08343116194009781, 0.26887375116348267, 0.3219456970691681, 0.3404582142829895, 0.14434820413589478, 0.03231288120150566, 0.00517517002299428, 0.014571674168109894, 0.001328658196143806, 2.4506664276123047, 0.15595075488090515, 0.02031262405216694, 0.002388721564784646, 0.5847991704940796, 0.06429725885391235, 0.004533014725893736, 0.028849517926573753, 0.07429319620132446, 0.1401766836643219, 0.07770806550979614, 0.04990348219871521, 0.006821084767580032, 0.05096326768398285, 0.0020772088319063187, 0.015616156160831451, 1.7017502784729004, 0.9476606845855713, 0.8509091734886169, 0.0020165364257991314, 0.4750749468803406, 0.3017021417617798, 0.14319391548633575, 0.2612033784389496, 0.0014985294546931982, 0.0006262486567720771, 0.0009213017183355987, 1.9069762229919434, 0.11428839713335037, 0.050419799983501434, 0.36814936995506287, 0.004398789722472429, 0.0179172083735466], "tokens": [13, 268, 334, 732, 3207, 1948, 3220, 2380, 310, 278, 1948, 304, 23197, 515, 13, 268, 334, 732, 3207, 1014, 3018, 29882, 355, 3220, 2380, 310, 278, 1948, 304, 23197, 13, 268, 334, 732, 3207, 7329, 7329, 491, 607, 304, 22932, 278, 1014, 3018, 29882, 355, 1948, 13, 268, 3776, 13, 1678]}
{"line_number": 314, "line_type": "original", "code": "            for (int j = 0; j < width - 1; j++) {", "entropy": 1.1544501781463623, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [7.242010593414307, 4.766857624053955, 1.8324382305145264, 0.35804498195648193, 1.1157617568969727, 0.025397246703505516, 0.29833918809890747, 0.11988981068134308, 0.017588242888450623, 0.0048087663017213345, 0.05096893385052681, 2.295433282852173, 3.4426753520965576, 0.22212441265583038, 0.03920428454875946, 0.01912265084683895, 0.03463529422879219, 0.018682114779949188, 0.03056992217898369], "tokens": [632, 363, 313, 524, 432, 353, 29871, 29900, 29936, 432, 529, 2920, 448, 29871, 29896, 29936, 432, 4862, 426]}
{"line_number": 314, "line_type": "generated", "code": "\n     * </p>\n     * @param row row to subtract from\n     * @param factor multiple to subtract\n     * @param toRow row to subtract from\n     */\n    private void subtractRow(final int row, final double", "entropy": 0.2979610562324524, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [0.18787935376167297, 0.12520530819892883, 0.026474952697753906, 0.9067380428314209, 0.014531259424984455, 0.009249810129404068, 0.009392951615154743, 0.013336499221622944, 0.007622679229825735, 0.3869483470916748, 0.00331578659825027, 0.9359239935874939, 2.3475141525268555, 0.4120904505252838, 0.3049605190753937, 0.19897691905498505, 0.15657131373882294, 0.0023230728693306446, 0.0014284178614616394, 0.0017035985365509987, 0.0008448368753306568, 2.0135746002197266, 1.4413127899169922, 0.7339810132980347, 0.0740276575088501, 0.14018341898918152, 0.0011043408885598183, 0.08138168603181839, 0.0010308672208338976, 0.032545305788517, 1.7197915315628052, 0.29697299003601074, 0.09250224381685257, 0.057563021779060364, 0.059466976672410965, 0.43785980343818665, 0.10747426748275757, 0.00488564046099782, 0.28539344668388367, 0.002248261356726289, 0.011158326640725136, 0.5978974103927612, 0.008944208733737469, 0.2594146728515625, 0.5440130233764648, 0.20411086082458496, 0.09762581437826157, 0.037042390555143356, 0.018668893724679947, 0.0008581769652664661, 0.05134904757142067, 0.02655934914946556], "tokens": [13, 268, 334, 1533, 29886, 29958, 13, 268, 334, 732, 3207, 1948, 1948, 304, 23197, 515, 13, 268, 334, 732, 3207, 7329, 2999, 304, 23197, 13, 268, 334, 732, 3207, 304, 4301, 1948, 304, 23197, 515, 13, 268, 3776, 13, 1678, 2024, 1780, 23197, 4301, 29898, 8394, 938, 1948, 29892, 2186, 3765]}
{"line_number": 315, "line_type": "original", "code": "                matrix[i][j] = getEntry(i + 1, j + 1);", "entropy": 1.536652684211731, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [7.9059529304504395, 7.859504699707031, 0.4271649122238159, 5.943727970123291, 0.5684484243392944, 0.4895177483558655, 0.038838788866996765, 0.13899588584899902, 5.342629432678223, 0.01754291169345379, 0.00706483842805028, 0.19826257228851318, 1.1094754934310913, 0.0519457682967186, 0.0014990055933594704, 0.0032802606001496315, 0.05548042058944702, 0.6689843535423279, 0.13587592542171478, 0.00997923780232668, 1.2955358028411865], "tokens": [462, 4636, 29961, 29875, 3816, 29926, 29962, 353, 679, 9634, 29898, 29875, 718, 29871, 29896, 29892, 432, 718, 29871, 29896, 416]}
{"line_number": 315, "line_type": "generated", "code": "\n     * </p>\n     * \n     * @param minuendRow index of the row to subtract from\n     * @param subtrahendRow index of the row to subtract\n     * @param multiple the multiple to use", "entropy": 0.22706909477710724, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [0.12559744715690613, 0.05684058368206024, 0.02609211578965187, 0.8455728888511658, 0.006295373663306236, 0.006322264205664396, 0.008892576210200787, 0.036379117518663406, 0.00575717817991972, 1.8289121389389038, 0.014292961917817593, 0.015155638568103313, 0.001500314916484058, 0.018550243228673935, 0.002589684445410967, 0.06330556422472, 0.0001397035230183974, 0.00015293381875380874, 0.03773507475852966, 1.5494945049285889, 0.009860379621386528, 0.13004417717456818, 0.5265495777130127, 0.308989018201828, 0.13115069270133972, 0.03520696982741356, 0.09236878156661987, 0.011446399614214897, 0.00010084597306558862, 0.003194232005625963, 0.00033098942367359996, 0.2706752419471741, 0.00048708971007727087, 0.0001793938863556832, 0.00032360086333937943, 0.005342966411262751, 0.09846275299787521, 0.0031751003116369247, 0.018509989604353905, 0.0352645106613636, 0.12323513627052307, 0.0871208906173706, 0.05991989001631737, 0.012056454084813595, 0.012383242137730122, 0.0007520469953306019, 0.004687392618507147, 0.04851885139942169, 2.360046625137329, 0.7364354133605957, 0.8068584203720093, 1.224336862564087], "tokens": [13, 268, 334, 1533, 29886, 29958, 13, 268, 334, 29871, 13, 268, 334, 732, 3207, 1375, 29884, 355, 4301, 2380, 310, 278, 1948, 304, 23197, 515, 13, 268, 334, 732, 3207, 1014, 3018, 29882, 355, 4301, 2380, 310, 278, 1948, 304, 23197, 13, 268, 334, 732, 3207, 2999, 278, 2999, 304, 671]}
{"line_number": 317, "line_type": "original", "code": "            matrix[i][width - 1] = getEntry(i + 1, getRhsOffset());", "entropy": 1.6295263767242432, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [7.85256814956665, 7.717270374298096, 0.8637599945068359, 5.2632622718811035, 0.8408836126327515, 7.460381507873535, 0.7114330530166626, 0.05914454534649849, 0.09603971242904663, 0.040857087820768356, 0.5469883680343628, 4.110838890075684, 0.11423224955797195, 0.005425490438938141, 0.3869103789329529, 0.7490963935852051, 0.045286159962415695, 0.0019624039996415377, 0.00419130502268672, 1.6235853433609009, 0.2685226500034332, 0.0021189635153859854, 0.003994700964540243, 0.3398781716823578], "tokens": [632, 4636, 29961, 29875, 3816, 2103, 448, 29871, 29896, 29962, 353, 679, 9634, 29898, 29875, 718, 29871, 29896, 29892, 679, 29934, 9499, 10302, 3310]}
{"line_number": 317, "line_type": "generated", "code": "\n     * @param divisorRow index of the row\n<|mask:0|>\n     */\n    private void subtract(final int dividendRow, final int divisorRow) {\n        double[] dividendRowArray = table", "entropy": 0.2829471528530121, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [0.14117619395256042, 0.05381084978580475, 0.11690229922533035, 0.034484896808862686, 0.013546446338295937, 0.4906899333000183, 0.0006943913758732378, 0.09411761164665222, 0.07527914643287659, 0.002434268593788147, 0.02211574651300907, 0.08878664672374725, 0.14275901019573212, 0.5770397782325745, 0.00047350639943033457, 0.006013988982886076, 0.002243860624730587, 1.4721710681915283, 0.005738095846027136, 1.3399817943572998, 0.05074414983391762, 0.0514354482293129, 1.4188334941864014, 0.0042532701045274734, 0.04811346158385277, 0.511174738407135, 0.014220215380191803, 0.5149123072624207, 1.3633732795715332, 0.0898057073354721, 0.032858315855264664, 0.12430477887392044, 0.00016616393986623734, 0.0052629257552325726, 0.03202671557664871, 0.17088668048381805, 0.024754110723733902, 0.0023489997256547213, 6.592056161025539e-05, 0.0007463291985914111, 0.06065884232521057, 0.005429521668702364, 0.009156261570751667, 0.14722850918769836, 1.2288895845413208, 0.9242197275161743, 0.5342826843261719, 0.0026312987320125103, 0.7888486385345459, 1.1046807765960693, 0.040277983993291855, 0.7262006402015686], "tokens": [13, 268, 334, 732, 3207, 8572, 272, 4301, 2380, 310, 278, 1948, 13, 29966, 29989, 13168, 29901, 29900, 29989, 29958, 13, 268, 3776, 13, 1678, 2024, 1780, 23197, 29898, 8394, 938, 25227, 355, 4301, 29892, 2186, 938, 8572, 272, 4301, 29897, 426, 13, 4706, 3765, 2636, 25227, 355, 4301, 2588, 353, 1591]}
{"line_number": 319, "line_type": "original", "code": "        this.tableau = new Array2DRowRealMatrix(matrix);", "entropy": 2.3063278198242188, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [8.750129699707031, 9.195743560791016, 0.0469934418797493, 3.1121339797973633, 0.03316638246178627, 5.722496509552002, 2.5689101219177246, 3.1911211013793945, 0.09782452136278152, 0.00025650550378486514, 0.0006785474251955748, 0.06233741343021393, 8.153582894010469e-05, 0.03473581373691559, 2.4288744926452637, 1.6557620763778687], "tokens": [308, 445, 29889, 2371, 585, 353, 716, 4398, 29906, 29928, 4301, 21713, 14609, 29898, 5344, 416]}
{"line_number": 319, "line_type": "generated", "code": "\n    private void subtractRow(final int dividendRow, final double divisor) {\n        for (int i = 1; i <= getWidth(); i++) {\n            setEntry(dividendRow, i, getEntry(", "entropy": 0.1981855034828186, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [0.09390981495380402, 0.29887616634368896, 0.5840630531311035, 0.031052635982632637, 1.377629041671753, 0.7899695634841919, 0.2330876886844635, 0.16784141957759857, 0.051340099424123764, 0.1341763734817505, 0.00019703354337252676, 0.007209121249616146, 0.0033098459243774414, 0.15777471661567688, 0.1551385372877121, 0.016334740445017815, 6.341733387671411e-05, 0.06892062723636627, 0.018498169258236885, 0.014276743866503239, 0.1947721689939499, 0.7943300008773804, 0.005079816095530987, 0.0034196253400295973, 0.6690622568130493, 0.0035810647532343864, 0.2099742293357849, 1.327073574066162, 0.02331765554845333, 0.0014913876075297594, 1.2473719120025635, 0.15447552502155304, 0.3749140799045563, 0.23694650828838348, 0.038039349019527435, 0.006350575014948845, 0.0018711454467847943, 0.011747114360332489, 0.06405800580978394, 0.3497055768966675, 0.017604991793632507, 0.006749450694769621, 0.015596908517181873, 0.0006921279709786177, 0.00033146608620882034, 0.00014757021563127637, 0.02289446070790291, 0.009679172188043594, 0.003049844177439809, 0.30466124415397644, 0.0024440200068056583, 0.0005440423847176135], "tokens": [13, 1678, 2024, 1780, 23197, 4301, 29898, 8394, 938, 25227, 355, 4301, 29892, 2186, 3765, 8572, 272, 29897, 426, 13, 4706, 363, 313, 524, 474, 353, 29871, 29896, 29936, 474, 5277, 679, 6110, 890, 474, 4862, 426, 13, 9651, 731, 9634, 29898, 29881, 3640, 355, 4301, 29892, 474, 29892, 679, 9634, 29898]}
{"line_number": 320, "line_type": "original", "code": "        this.numArtificialVariables = 0;", "entropy": 1.755786418914795, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [4.85434103012085, 5.79963493347168, 0.007166276220232248, 8.123197555541992, 1.9906408786773682, 0.0006244616815820336, 0.0006185048841871321, 0.01015295647084713, 0.00016211149340961128, 1.6065504550933838, 0.36801621317863464, 0.056268636137247086, 0.007848141714930534], "tokens": [308, 445, 29889, 1949, 9986, 928, 616, 10444, 1849, 353, 29871, 29900, 29936]}
{"line_number": 320, "line_type": "generated", "code": "\n        for (int i = 0; i", "entropy": 0.2775261104106903, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [0.1821470409631729, 0.4508245289325714, 1.3585413694381714, 0.006993695627897978, 0.003832615679129958, 0.49412801861763, 0.0063185920007526875, 0.24198538064956665, 0.29245343804359436, 0.014292021282017231, 0.0012703214306384325], "tokens": [13, 4706, 363, 313, 524, 474, 353, 29871, 29900, 29936, 474]}
{"line_number": 321, "line_type": "original", "code": "    }", "entropy": 4.452808380126953, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [5.685385704040527, 3.220231056213379], "tokens": [268, 500]}
{"line_number": 321, "line_type": "generated", "code": "\n            setEntry(dividendRow, j, getEntry(dividendRow, j) / divisor);\n<|mask:1|><|mask:1|>\n        }\n    }\n\n    /**\n    ", "entropy": 0.11836940795183182, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [0.5400000214576721, 0.8463724851608276, 0.6310490965843201, 0.011175066232681274, 0.007178703788667917, 0.025340063497424126, 0.0006853376980870962, 0.0003778220561798662, 0.00027176024741493165, 0.08900805562734604, 0.020798444747924805, 0.012870929203927517, 0.13668179512023926, 0.0030548356007784605, 0.00048530244384892285, 0.0014435357879847288, 0.0009576263837516308, 0.0001705739414319396, 0.0002057340752799064, 0.0005399914807640016, 0.007535603828728199, 0.04117780551314354, 0.029616178944706917, 0.003911108709871769, 8.463501580990851e-05, 0.01095943246036768, 0.04606924206018448, 0.4778037667274475, 0.0020035686902701855, 0.2686786651611328, 0.00597974332049489, 0.5359319448471069, 0.017297012731432915, 0.6607701182365417, 0.0032367717940360308, 0.05260932072997093, 0.006197520066052675, 0.3884003162384033, 0.005892998538911343, 0.10874460637569427, 0.04528023302555084, 0.5008060336112976, 0.0035094358026981354, 0.01326756551861763, 0.2817157506942749, 0.0013192531187087297, 0.005902716424316168, 0.1253773719072342, 0.10186780989170074, 0.04257674142718315, 0.02987503446638584, 0.0021433494985103607], "tokens": [13, 9651, 731, 9634, 29898, 29881, 3640, 355, 4301, 29892, 432, 29892, 679, 9634, 29898, 29881, 3640, 355, 4301, 29892, 432, 29897, 847, 8572, 272, 416, 13, 29966, 29989, 13168, 29901, 29896, 29989, 5299, 29989, 13168, 29901, 29896, 29989, 29958, 13, 4706, 500, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268]}
{"line_number": 340, "line_type": "original", "code": "      double[] coefficients = new double[getOriginalNumDecisionVariables()];", "entropy": 1.74019455909729, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [6.24868631362915, 4.706347465515137, 2.635584831237793, 3.959508180618286, 0.16873492300510406, 1.7772725820541382, 0.030639639124274254, 0.061553291976451874, 0.9682573080062866, 7.410690784454346, 0.7547765970230103, 0.6155579686164856, 0.007808990776538849, 0.02088717557489872, 8.368142152903602e-05, 0.005236006807535887, 0.2116813212633133], "tokens": [539, 3765, 2636, 16127, 353, 716, 3765, 29961, 657, 26036, 8009, 6185, 2459, 10444, 1849, 580, 1385]}
{"line_number": 340, "line_type": "generated", "code": "\n        }\n    }\n\n    /**\n     * Subtracts a multiple of one column from another.\n     *", "entropy": 0.14740808308124542, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [0.19210004806518555, 0.5339176058769226, 0.010885382071137428, 0.008767680265009403, 0.1353958696126938, 0.0019821536261588335, 0.006279381457716227, 0.06603635847568512, 0.08935228735208511, 0.03754908964037895, 0.037271883338689804, 0.001661945367231965, 0.0012044801842421293, 1.7179858684539795, 0.0412525050342083, 4.482168878894299e-05, 0.05333131551742554, 0.1598636955022812, 0.05347144976258278, 0.0023744504433125257, 0.12765584886074066, 0.7626758813858032, 0.033737171441316605, 0.0172417089343071, 0.03043139912188053, 0.0030914393719285727, 0.0017295415746048093, 0.00013469743134919554], "tokens": [13, 4706, 500, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 3323, 29873, 1461, 29879, 263, 2999, 310, 697, 1897, 515, 1790, 29889, 13, 268, 334]}
{"line_number": 341, "line_type": "original", "code": "      Integer negativeVarBasicRow = getBasicRow(getNegativeDecisionVariableOffset());", "entropy": 1.4571917057037354, "is_bug_line": true, "sus_score": 0.30151134457776363, "per_token_entropy": [6.288148880004883, 4.964699745178223, 3.5195367336273193, 0.24795934557914734, 0.12280654162168503, 0.0544334277510643, 0.08627418428659439, 0.44434940814971924, 0.14677013456821442, 0.031786199659109116, 0.06430776417255402, 0.46381860971450806, 1.9034185409545898, 0.008410274051129818, 0.006228322628885508, 8.073847770690918, 0.0036811938043683767, 0.07037420570850372, 2.503574848175049, 0.13940806686878204], "tokens": [539, 8102, 8178, 9037, 16616, 4301, 353, 679, 16616, 4301, 29898, 657, 29940, 387, 1230, 6185, 2459, 16174, 10302, 3310]}
{"line_number": 341, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Subtracts a multiple of one row from another.\n     *", "entropy": 0.16567334532737732, "is_bug_line": true, "sus_score": 0.30151134457776363, "per_token_entropy": [0.14613451063632965, 0.7153713703155518, 0.0067809466272592545, 0.0075667197816073895, 0.07594176381826401, 0.08426275104284286, 0.031014498323202133, 0.04143025353550911, 0.001383539172820747, 0.0005681092734448612, 1.7305750846862793, 0.03863706812262535, 3.540453326422721e-05, 0.055605143308639526, 0.18157686293125153, 0.061927054077386856, 0.00243200920522213, 0.13785067200660706, 0.6573861241340637, 0.011359774507582188, 0.05827571451663971, 0.08634438365697861, 0.008312036283314228, 0.0008282806375063956, 0.00023362292267847806], "tokens": [13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 3323, 29873, 1461, 29879, 263, 2999, 310, 697, 1948, 515, 1790, 29889, 13, 268, 334]}
{"line_number": 342, "line_type": "original", "code": "      double mostNegative = negativeVarBasicRow == null ? 0 : getEntry(negativeVarBasicRow, getRhsOffset());", "entropy": 0.9290767312049866, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [8.159194946289062, 6.069928169250488, 3.0979299545288086, 0.028904413804411888, 0.00041762212640605867, 0.006419158075004816, 0.15080490708351135, 6.979931354522705, 0.3696816861629486, 0.05071627348661423, 0.0068812295794487, 0.18869473040103912, 0.019126860424876213, 0.03551040589809418, 1.1764451265335083, 0.13958454132080078, 0.18445584177970886, 0.9309698343276978, 0.018580082803964615, 0.0019315887475386262, 0.007824958302080631, 0.0012837749673053622, 0.0004539651272352785, 0.00020680672605521977, 0.003854466136544943, 0.07321498543024063, 0.05584867671132088, 0.0008453133050352335, 0.0014112761709839106, 0.11124888062477112], "tokens": [539, 3765, 1556, 29940, 387, 1230, 353, 8178, 9037, 16616, 4301, 1275, 1870, 1577, 29871, 29900, 584, 679, 9634, 29898, 22198, 9037, 16616, 4301, 29892, 679, 29934, 9499, 10302, 3310]}
{"line_number": 342, "line_type": "generated", "code": "\n    /**\n     * @param row row index\n     * @param col column index\n     * @return entry value\n     */\n    protected double getEntry(final int row, final int col) {\n        return tableau.get", "entropy": 0.24518615007400513, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [0.042611125856637955, 0.3136473000049591, 0.10773824900388718, 0.07030920684337616, 0.00264140497893095, 0.0005276002921164036, 3.0287094116210938, 0.4412098526954651, 1.247894525527954, 0.728530764579773, 0.25914785265922546, 0.06765423715114594, 0.0014515112852677703, 0.1052153930068016, 0.003567998530343175, 0.6249369978904724, 0.5662506818771362, 0.11228805035352707, 0.020485958084464073, 0.035617396235466, 0.00109576724935323, 0.07281494140625, 0.0040556094609200954, 0.22990451753139496, 1.8533655405044556, 1.816266655921936, 0.3297087848186493, 0.002512514591217041, 0.02951236255466938, 0.002646160777658224, 0.01580638252198696, 0.16844618320465088, 0.012153382413089275, 0.0072727929800748825, 0.028716200962662697, 0.005280831828713417, 0.06697127968072891, 0.0028965207748115063, 0.000773369160015136, 0.000910106289666146, 0.014066832140088081, 0.0008724696817807853, 0.0004456242313608527, 0.0022511158604174852, 0.001963593764230609, 0.00705726258456707, 0.07178273051977158, 0.13887108862400055, 0.07606760412454605, 0.0013668728061020374, 0.002772775012999773, 0.0006152882124297321], "tokens": [13, 1678, 7762, 13, 268, 334, 732, 3207, 1948, 1948, 2380, 13, 268, 334, 732, 3207, 784, 1897, 2380, 13, 268, 334, 732, 2457, 6251, 995, 13, 268, 3776, 13, 1678, 6364, 3765, 679, 9634, 29898, 8394, 938, 1948, 29892, 2186, 938, 784, 29897, 426, 13, 4706, 736, 1591, 585, 29889, 657]}
{"line_number": 343, "line_type": "original", "code": "      Set<Integer> basicRows = new HashSet<Integer>();", "entropy": 1.391634464263916, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [8.011162757873535, 10.134262084960938, 0.2044246792793274, 0.1131957396864891, 0.001726209418848157, 0.4414370357990265, 0.015791479498147964, 0.0349300354719162, 0.06528294086456299, 0.1195588931441307, 0.0003880701260641217, 0.22703412175178528, 0.015244166366755962, 0.0984455794095993], "tokens": [539, 3789, 29966, 7798, 29958, 6996, 10661, 353, 716, 11874, 2697, 29966, 7798, 8295]}
{"line_number": 343, "line_type": "generated", "code": "\n    /**\n     * Adds a multiple of one row to another.\n     *", "entropy": 0.21098722517490387, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [0.06497713178396225, 0.2682127356529236, 0.12012706696987152, 0.07750212401151657, 0.00292017450556159, 0.0004920940846204758, 2.7625088691711426, 0.1769912838935852, 0.14546746015548706, 0.12212035804986954, 0.0024176198057830334, 0.060920216143131256, 0.027636732906103134, 0.12826359272003174, 0.011847960762679577, 0.031802598387002945, 0.0033340840600430965, 0.0010091932490468025, 0.0002060916303889826], "tokens": [13, 1678, 7762, 13, 268, 334, 3462, 29879, 263, 2999, 310, 697, 1948, 304, 1790, 29889, 13, 268, 334]}
{"line_number": 344, "line_type": "original", "code": "      for (int i = 0; i < coefficients.length; i++) {", "entropy": 0.8922327160835266, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [6.49987268447876, 3.6161890029907227, 0.07112812250852585, 0.07445576786994934, 0.4590563178062439, 0.03529259189963341, 0.218403160572052, 0.10281103849411011, 0.016726020723581314, 0.007596652023494244, 0.04884699732065201, 4.643311977386475, 0.04085056483745575, 0.00391763960942626, 0.05545707419514656, 0.13294975459575653, 0.013252037577331066, 0.02007114328444004], "tokens": [539, 363, 313, 524, 474, 353, 29871, 29900, 29936, 474, 529, 16127, 29889, 2848, 29936, 474, 4862, 426]}
{"line_number": 344, "line_type": "generated", "code": "\n     * @param row row index\n     * @param col column index\n     * @return the value of the entry\n     */\n    protected double getEntry(final int row, final int col) {\n        return tableau.get", "entropy": 0.26979297399520874, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [0.21959838271141052, 0.42949265241622925, 0.047364380210638046, 2.04834246635437, 0.4123266339302063, 1.4750200510025024, 0.7360300421714783, 0.21130406856536865, 0.07426464557647705, 0.15408238768577576, 0.10116732120513916, 0.02167699486017227, 0.3501923382282257, 0.9442876577377319, 0.1055145114660263, 0.020252464339137077, 0.037789486348629, 0.040379200130701065, 0.12254376709461212, 0.011875055730342865, 0.3840812146663666, 1.0755574703216553, 1.0878777503967285, 0.7314741611480713, 0.30245158076286316, 0.9573197364807129, 1.0216360092163086, 0.03175640478730202, 0.043827347457408905, 0.008637686260044575, 0.05147835984826088, 0.147013857960701, 0.012497562915086746, 0.006208182778209448, 0.0350838229060173, 0.012095320969820023, 0.04399345815181732, 0.008031454868614674, 0.002060435013845563, 0.003480806713923812, 0.01749441586434841, 0.0018358058296144009, 0.0007724162423983216, 0.004216115456074476, 0.003063154872506857, 0.008799584582448006, 0.1766233891248703, 0.16816480457782745, 0.11218511313199997, 0.0014061573892831802, 0.003926070407032967, 0.0006793813081458211], "tokens": [13, 268, 334, 732, 3207, 1948, 1948, 2380, 13, 268, 334, 732, 3207, 784, 1897, 2380, 13, 268, 334, 732, 2457, 278, 995, 310, 278, 6251, 13, 268, 3776, 13, 1678, 6364, 3765, 679, 9634, 29898, 8394, 938, 1948, 29892, 2186, 938, 784, 29897, 426, 13, 4706, 736, 1591, 585, 29889, 657]}
{"line_number": 345, "line_type": "original", "code": "          Integer basicRow = getBasicRow(getNumObjectiveFunctions() + i);", "entropy": 1.5651096105575562, "is_bug_line": true, "sus_score": 0.30151134457776363, "per_token_entropy": [8.23987102508545, 7.616489410400391, 5.676001071929932, 1.0410813093185425, 0.1878383606672287, 0.2944762408733368, 0.012224866077303886, 0.04080948233604431, 0.038223061710596085, 1.0495665073394775, 3.3218278884887695, 0.2541253864765167, 0.01802375726401806, 0.0036390291061252356, 0.0007061848300509155, 0.4889577031135559, 0.212222158908844, 1.1368576288223267, 0.10414306819438934], "tokens": [965, 8102, 6996, 4301, 353, 679, 16616, 4301, 29898, 657, 8009, 2061, 573, 6678, 29879, 580, 718, 474, 416]}
{"line_number": 345, "line_type": "generated", "code": "\n     * @return the width of the tableau\n     */\n    protected int getWidth() {\n        return getNumObjectiveFunctions() + getNumDecisionVariables() + 1;\n    }\n\n    /**\n", "entropy": 0.16440020501613617, "is_bug_line": true, "sus_score": 0.30151134457776363, "per_token_entropy": [0.1596316248178482, 0.11423182487487793, 0.014774197712540627, 0.619910478591919, 0.015495148487389088, 0.95036780834198, 0.15482357144355774, 0.4908897280693054, 0.01165886502712965, 0.030204957351088524, 0.0030415249057114124, 0.193013533949852, 0.07249235361814499, 0.03147909417748451, 0.003488290822133422, 0.047686200588941574, 0.277421236038208, 0.05722399055957794, 0.002120034070685506, 0.029845992103219032, 0.00838426686823368, 0.001982629531994462, 0.022389840334653854, 0.25542977452278137, 0.03523631766438484, 0.9472513198852539, 0.8517614603042603, 0.5262207984924316, 0.01689622737467289, 0.002201635157689452, 0.0006012300727888942, 0.014409414492547512, 0.03383605554699898, 0.3782398998737335, 0.37486451864242554, 0.09462722390890121, 0.0004407388041727245, 0.0011757849715650082, 9.691245941212401e-05, 0.16262708604335785, 0.09579233825206757, 0.6362207531929016, 0.0927937775850296, 0.32647284865379333, 0.04458717629313469, 0.16699835658073425, 0.0011435167398303747, 0.008949879556894302, 0.08742361515760422, 0.04982193931937218, 0.013812669552862644, 0.01631961204111576], "tokens": [13, 268, 334, 732, 2457, 278, 2920, 310, 278, 1591, 585, 13, 268, 3776, 13, 1678, 6364, 938, 679, 6110, 580, 426, 13, 4706, 736, 679, 8009, 2061, 573, 6678, 29879, 580, 718, 679, 8009, 6185, 2459, 10444, 1849, 580, 718, 29871, 29896, 29936, 13, 1678, 500, 13, 13, 1678, 7762, 13]}
{"line_number": 346, "line_type": "original", "code": "          if (basicRows.contains(basicRow)) {", "entropy": 2.053556442260742, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [7.855792999267578, 4.222987174987793, 0.9757995009422302, 5.285630226135254, 0.9294130206108093, 1.2665692567825317, 0.6992084383964539, 0.03240463510155678, 2.5392355918884277, 0.6087233424186707, 0.2010265290737152, 0.025886761024594307], "tokens": [965, 565, 313, 16121, 10661, 29889, 11516, 29898, 16121, 4301, 876, 426]}
{"line_number": 346, "line_type": "generated", "code": "\n     */\n    protected int getWidth() {\n        return tableau.getColumnDimension();\n<|mask:1|>\n    }\n\n    /**\n     * Get the height of the tableau.\n     * @", "entropy": 0.10686054080724716, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [0.18462583422660828, 0.14357028901576996, 0.4277154505252838, 0.0049263290129601955, 0.050099655985832214, 0.30992263555526733, 0.05148821324110031, 0.0043553500436246395, 0.05230707302689552, 0.018280597403645515, 0.004351077135652304, 0.029725654050707817, 0.24445509910583496, 0.03477058559656143, 0.7941689491271973, 0.0006619884516112506, 0.013745180331170559, 0.00020740265608765185, 0.018777234479784966, 0.0002548369811847806, 0.0001280225842492655, 0.48038309812545776, 0.02523510530591011, 0.585205614566803, 0.00047219570842571557, 0.027648793533444405, 0.00320504535920918, 0.3841475546360016, 0.004779580980539322, 0.28018635511398315, 0.08196976780891418, 0.5766018629074097, 0.01830272004008293, 0.007417637389153242, 0.09986639022827148, 0.04917333275079727, 0.01603293977677822, 0.014303773641586304, 0.0022047278471291065, 0.0006940339808352292, 0.22039949893951416, 0.02523568645119667, 0.13318507373332977, 0.0033435889054089785, 0.001585894264280796, 0.0035038527566939592, 0.001206861576065421, 0.019755274057388306, 0.003793188836425543, 0.04022382199764252, 0.0014659145381301641, 0.05668121203780174], "tokens": [13, 268, 3776, 13, 1678, 6364, 938, 679, 6110, 580, 426, 13, 4706, 736, 1591, 585, 29889, 657, 4409, 16142, 2673, 890, 13, 29966, 29989, 13168, 29901, 29896, 29989, 29958, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 3617, 278, 3171, 310, 278, 1591, 585, 29889, 13, 268, 334, 732]}
{"line_number": 351, "line_type": "original", "code": "              basicRows.add(basicRow);", "entropy": 2.7630133628845215, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [11.76052188873291, 10.318109512329102, 1.1108171939849854, 0.8532164096832275, 0.05184096470475197, 0.00944680068641901, 0.6371902823448181, 0.06858475506305695, 0.05739318206906319], "tokens": [1669, 6996, 10661, 29889, 1202, 29898, 16121, 4301, 416]}
{"line_number": 351, "line_type": "generated", "code": "\n    /**\n     * Get the height of the tableau.\n     * @return height of the tableau\n     */\n    protected final int getHeight() {\n        return tableau.getRowDimension();\n    }\n\n", "entropy": 0.04764576256275177, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [0.08780618011951447, 0.19992202520370483, 0.0716746598482132, 0.0352112278342247, 0.002585760550573468, 0.00044324109330773354, 0.6494172215461731, 0.06685766577720642, 0.5267094373703003, 0.00495029054582119, 0.002135260496288538, 0.006927045993506908, 0.002590278862044215, 0.0444197915494442, 0.008695240132510662, 0.0013392536202445626, 0.00154292699880898, 0.07117042690515518, 0.0008487674640491605, 0.033357568085193634, 0.005204580724239349, 0.0018284284742549062, 0.0023264028131961823, 0.00037674958002753556, 0.017740266397595406, 0.0014996008248999715, 0.004141089040786028, 0.0022607501596212387, 0.011682665906846523, 0.04483409225940704, 0.0863475576043129, 0.0015051951631903648, 0.000816250394564122, 0.0023755207657814026, 0.0015144795179367065, 0.0006529344827868044, 0.0031589390709996223, 0.022072020918130875, 0.006702205166220665, 0.026004426181316376, 0.00013660451804753393, 0.0008310201810672879, 0.0004101150552742183, 0.004042549524456263, 0.00019012074335478246, 0.0013183006085455418, 0.16769304871559143, 0.005020511336624622, 0.004446262959390879, 0.0007889734115451574, 0.007285574451088905, 0.22376811504364014], "tokens": [13, 1678, 7762, 13, 268, 334, 3617, 278, 3171, 310, 278, 1591, 585, 29889, 13, 268, 334, 732, 2457, 3171, 310, 278, 1591, 585, 13, 268, 3776, 13, 1678, 6364, 2186, 938, 679, 7011, 580, 426, 13, 4706, 736, 1591, 585, 29889, 657, 4301, 16142, 2673, 890, 13, 1678, 500, 13, 13]}
{"line_number": 352, "line_type": "original", "code": "              coefficients[i] =", "entropy": 3.2208621501922607, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [9.368483543395996, 8.332764625549316, 0.4832753539085388, 0.7071681618690491, 0.10617883503437042, 0.32730141282081604], "tokens": [1669, 16127, 29961, 29875, 29962, 353]}
{"line_number": 352, "line_type": "generated", "code": "\n     * Get the entry at the specified row and column.\n     * @param row row index\n     * @param column column index\n     * @return entry at the specified row and column\n     */\n    protected final double getEntry(", "entropy": 0.24994036555290222, "is_bug_line": false, "sus_score": 0.30151134457776363, "per_token_entropy": [0.2656403183937073, 0.2272748053073883, 0.026349445804953575, 0.9835727214813232, 0.07941554486751556, 2.408463954925537, 1.5310118198394775, 0.9214479327201843, 0.8515790104866028, 1.1048511266708374, 0.11943481117486954, 0.01563047431409359, 0.5336129665374756, 0.015792418271303177, 0.12135673314332962, 0.003599475836381316, 0.4365450441837311, 0.004242230672389269, 0.07969440519809723, 0.2776300609111786, 0.1464153528213501, 0.0861244648694992, 0.0842888280749321, 0.0008000510279089212, 0.0026737437583506107, 0.01574583351612091, 0.1053546592593193, 0.013765404000878334, 0.004893469624221325, 0.01854649931192398, 0.04529869183897972, 0.004930480848997831, 0.01293153502047062, 0.006989078596234322, 0.5740501880645752, 0.32383158802986145, 0.38968315720558167, 0.16479352116584778, 0.049403347074985504, 0.014254885725677013, 0.0035074164625257254, 0.05147621035575867, 0.09728831052780151, 0.08062413334846497, 0.019597945734858513, 0.14772410690784454, 0.09047281742095947, 0.418167382478714, 0.004008711315691471, 0.005504332482814789, 0.0025184601545333862, 0.0040879026055336], "tokens": [13, 268, 334, 3617, 278, 6251, 472, 278, 6790, 1948, 322, 1897, 29889, 13, 268, 334, 732, 3207, 1948, 1948, 2380, 13, 268, 334, 732, 3207, 1897, 1897, 2380, 13, 268, 334, 732, 2457, 6251, 472, 278, 6790, 1948, 322, 1897, 13, 268, 3776, 13, 1678, 6364, 2186, 3765, 679, 9634, 29898]}
