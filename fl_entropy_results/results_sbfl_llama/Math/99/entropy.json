{"line_number": 710, "line_type": "original", "code": "        if (a==0 || b==0){", "entropy": 1.6963214874267578, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [5.47663688659668, 4.364720821380615, 0.2712581157684326, 0.7305157780647278, 4.019332408905029, 0.49380505084991455, 0.3815307915210724, 0.02268926426768303, 0.056834615767002106, 0.044311799108982086, 2.797900438308716], "tokens": [308, 565, 313, 29874, 1360, 29900, 3830, 289, 1360, 29900, 2597]}
{"line_number": 710, "line_type": "generated", "code": "\n        return a * b;\n    }\n\n    /**\n     *", "entropy": 0.2048448920249939, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.14065124094486237, 1.2721980810165405, 0.4235982596874237, 1.029283046722412, 0.2615836560726166, 0.008683186024427414, 0.008421622216701508, 0.01832214929163456, 0.07490935176610947, 0.0021634523291140795, 0.0061305807903409, 0.052287500351667404, 0.03885163366794586, 0.03341371566057205, 0.10248970240354538, 0.008818727917969227, 0.000557267339900136], "tokens": [13, 4706, 736, 263, 334, 289, 29936, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334]}
{"line_number": 711, "line_type": "original", "code": "            return 0;", "entropy": 3.7925708293914795, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [7.619509696960449, 6.437112331390381, 3.997763156890869, 0.33352023363113403, 0.574949324131012], "tokens": [632, 736, 29871, 29900, 29936]}
{"line_number": 711, "line_type": "generated", "code": "\n        return a * b;\n    }\n\n    /**\n     * Returns the positive square root of a number.\n     * \n     * @param x\n     *            a number greater than or equal to 0\n     *", "entropy": 0.34872710704803467, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.12550251185894012, 1.4464759826660156, 1.176885724067688, 0.5490360260009766, 0.09397145360708237, 0.006220503710210323, 0.005507889203727245, 0.024376779794692993, 0.09546992927789688, 0.0020459212828427553, 0.007246165070682764, 0.03494557738304138, 0.038801293820142746, 0.028390420600771904, 0.08429956436157227, 0.004182045813649893, 0.0002653246629051864, 1.9914807081222534, 0.22629514336585999, 3.494234561920166, 0.4800366163253784, 0.004207093268632889, 0.0008182753226719797, 0.45172926783561707, 1.2609041929244995, 0.11499930918216705, 0.1685153841972351, 0.04496322572231293, 0.0020096360240131617, 0.3563934564590454, 0.0013904437655583024, 0.007898171432316303, 0.0001397035230183974, 0.032197337597608566, 0.007017252501100302, 0.3326932191848755, 1.4614746570587158, 0.002689674962311983, 0.0003212174342479557, 0.03863397240638733, 0.3589053452014923, 0.16152404248714447, 1.8489042520523071, 0.010586177930235863, 0.10657143592834473, 0.0014322272036224604, 0.004112715367227793, 1.219948172569275, 0.001782139646820724, 0.1949530690908432, 0.02020503394305706, 0.00021753329201601446], "tokens": [13, 4706, 736, 263, 334, 289, 29936, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 16969, 278, 6374, 6862, 3876, 310, 263, 1353, 29889, 13, 268, 334, 29871, 13, 268, 334, 732, 3207, 921, 13, 268, 334, 9651, 263, 1353, 7621, 1135, 470, 5186, 304, 29871, 29900, 13, 268, 334]}
{"line_number": 713, "line_type": "original", "code": "        int lcm = Math.abs(mulAndCheck(a / gcd(a, b), b));", "entropy": 1.4980740547180176, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [4.8091936111450195, 7.952354431152344, 4.64007043838501, 0.31734582781791687, 0.6418597102165222, 3.906395196914673, 2.6445679664611816, 0.23676279187202454, 0.07069770246744156, 5.946985721588135, 0.23052874207496643, 0.004205431789159775, 0.027387039735913277, 0.49598121643066406, 1.3260834217071533, 0.09841024875640869, 0.021967535838484764, 2.202531337738037, 0.010756488889455795, 0.0013775869738310575, 0.23535403609275818, 0.018649587407708168, 0.03319394588470459, 0.08111703395843506], "tokens": [308, 938, 301, 4912, 353, 5792, 29889, 6897, 29898, 16109, 2855, 5596, 29898, 29874, 847, 330, 2252, 29898, 29874, 29892, 289, 511, 289, 2483]}
{"line_number": 713, "line_type": "generated", "code": "\n        return result;\n    }\n\n    /**\n     * Raise an int to an int power.\n     * \n     * @param k the base\n     * @param e the exponent\n     * @return", "entropy": 0.1687905192375183, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [0.19688943028450012, 0.9157260060310364, 0.12049932777881622, 2.0886383056640625, 0.011690442450344563, 0.00861463975161314, 0.04054062068462372, 0.0007714632665738463, 0.005353282205760479, 0.04929521307349205, 0.05277884379029274, 0.02008972130715847, 0.08076654374599457, 0.005507652182132006, 0.00026854246971197426, 1.5740368366241455, 7.73638384998776e-05, 0.07384553551673889, 0.20963364839553833, 0.04901500046253204, 0.02424088679254055, 0.017607802525162697, 0.00958589930087328, 0.13548342883586884, 0.10745938867330551, 0.03141416981816292, 0.0006873629172332585, 0.2398921698331833, 0.001105769770219922, 0.009043092839419842, 0.00012242044613230973, 0.05531293526291847, 0.0010508735431358218, 0.21099954843521118, 0.5727653503417969, 0.1285480260848999, 0.5818932056427002, 0.009812218137085438, 2.992108420585282e-05, 0.00018869050836656243, 0.00033182359766215086, 0.42580363154411316, 0.006860510911792517, 0.014431152492761612, 0.168821319937706, 0.002062219427898526, 0.0001357701694360003, 0.002031288342550397, 0.008975989185273647], "tokens": [13, 4706, 736, 1121, 29936, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 6981, 895, 385, 938, 304, 385, 938, 3081, 29889, 13, 268, 334, 29871, 13, 268, 334, 732, 3207, 413, 278, 2967, 13, 268, 334, 732, 3207, 321, 278, 28869, 13, 268, 334, 732, 2457]}
{"line_number": 714, "line_type": "original", "code": "        return lcm;", "entropy": 4.846035003662109, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [6.629866600036621, 6.8967204093933105, 6.547079563140869, 2.0504097938537598, 2.106100559234619], "tokens": [308, 736, 301, 4912, 29936]}
{"line_number": 714, "line_type": "generated", "code": "\n    }\n\n    /**\n     *", "entropy": 0.07957449555397034, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [0.09864412248134613, 0.3529261350631714, 0.0935996025800705, 0.007980485446751118, 0.05452023819088936, 0.05117543041706085, 0.02422971837222576, 0.10642954707145691, 0.005842868238687515, 0.0003967689990531653], "tokens": [13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334]}
{"line_number": 560, "line_type": "original", "code": "            u /= 2;", "entropy": 4.061720848083496, "is_bug_line": false, "sus_score": 0.2773500981126146, "per_token_entropy": [8.569328308105469, 10.203471183776855, 7.457186222076416, 0.4944339394569397, 0.3918929100036621, 1.0923340320587158, 0.22339509427547455], "tokens": [632, 318, 847, 29922, 29871, 29906, 29936]}
{"line_number": 560, "line_type": "generated", "code": "\n     */\n    public static int hash(double[] value) {\n        return new Double(value).hashCode();\n    }\n\n    /**\n     * Returns an integer hash code representing the given float value.\n     * \n", "entropy": 0.08887588977813721, "is_bug_line": false, "sus_score": 0.2773500981126146, "per_token_entropy": [0.1890326589345932, 0.2536751925945282, 0.05668853223323822, 0.0011014830088242888, 0.03345475718379021, 0.0118888383731246, 0.000902126485016197, 0.002657931065186858, 0.0004465774691198021, 0.014471807517111301, 0.07615476846694946, 0.03784354776144028, 0.0136897973716259, 0.007529333233833313, 0.0021290748845785856, 0.004226324148476124, 0.203545480966568, 0.9678539037704468, 1.7456620931625366, 0.1437033861875534, 0.1463639736175537, 0.07790691405534744, 0.13438473641872406, 0.0009667966514825821, 6.770858453819528e-05, 0.001261034864000976, 0.0034765300806611776, 0.022157955914735794, 0.0002814135223161429, 0.003070404287427664, 0.01739823818206787, 0.010412652045488358, 0.008971263654530048, 0.004621538799256086, 0.002065312582999468, 5.4834770708112046e-05, 0.055637843906879425, 0.03173030540347099, 0.001640761154703796, 0.002040805760771036, 0.00017069313616957515, 0.0021503677126020193, 0.0008275659638457, 0.0017408467829227448, 0.2974296808242798, 0.008434507064521313, 0.001427584677003324, 0.0011926926672458649, 0.005388734862208366, 4.875540980719961e-05, 0.011491771787405014, 7.509902934543788e-05], "tokens": [13, 268, 3776, 13, 1678, 970, 2294, 938, 6608, 29898, 8896, 2636, 995, 29897, 426, 13, 4706, 736, 716, 11599, 29898, 1767, 467, 8568, 3399, 890, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 16969, 385, 6043, 6608, 775, 15783, 278, 2183, 5785, 995, 29889, 13, 268, 334, 29871, 13]}
{"line_number": 561, "line_type": "original", "code": "            v /= 2;", "entropy": 4.604878902435303, "is_bug_line": false, "sus_score": 0.2773500981126146, "per_token_entropy": [10.444230079650879, 10.69112777709961, 8.555639266967773, 0.3694666028022766, 0.5616913437843323, 1.359235167503357, 0.25276219844818115], "tokens": [632, 325, 847, 29922, 29871, 29906, 29936]}
{"line_number": 561, "line_type": "generated", "code": "\n    public static int hash(double[] value) {\n        return Arrays.hashCode(value);\n    }\n\n    /**\n     * Returns an integer hash code representing the given float value.\n     * \n     * @", "entropy": 0.05978422239422798, "is_bug_line": false, "sus_score": 0.2773500981126146, "per_token_entropy": [0.12404092401266098, 0.2749549150466919, 0.19998399913311005, 0.002561979927122593, 0.004352145362645388, 0.001090765930712223, 0.024926792830228806, 0.10325775295495987, 0.028730330988764763, 0.019981639459729195, 0.014122663997113705, 0.004062258172780275, 0.006892003118991852, 0.1394096165895462, 0.905169665813446, 0.5772292613983154, 0.006404588930308819, 0.0021356174256652594, 0.0025598397478461266, 0.00040713604539632797, 0.006588995922356844, 0.0027619570028036833, 0.0055785453878343105, 0.00322548346593976, 0.019564513117074966, 0.0005896736984141171, 0.006887504365295172, 0.026984594762325287, 0.017274048179388046, 0.013031673617661, 0.006084135267883539, 0.0014453213661909103, 6.174850568640977e-05, 0.07334227859973907, 0.04020996764302254, 0.0020535350777208805, 0.0030497252009809017, 0.0001662831346038729, 0.0021341899409890175, 0.0007898071780800819, 0.0014396075857803226, 0.39745667576789856, 0.012594331055879593, 0.002292744582518935, 0.0015087660867720842, 0.0007950482540763915, 4.088794958079234e-05, 0.01623399369418621, 2.825220326485578e-05, 0.0002449450839776546, 2.5033637939486653e-05, 0.002021057065576315], "tokens": [13, 1678, 970, 2294, 938, 6608, 29898, 8896, 2636, 995, 29897, 426, 13, 4706, 736, 4398, 29879, 29889, 8568, 3399, 29898, 1767, 416, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 16969, 385, 6043, 6608, 775, 15783, 278, 2183, 5785, 995, 29889, 13, 268, 334, 29871, 13, 268, 334, 732]}
{"line_number": 562, "line_type": "original", "code": "            k++; // cast out twos.", "entropy": 6.082045555114746, "is_bug_line": false, "sus_score": 0.2773500981126146, "per_token_entropy": [8.388124465942383, 15.132902145385742, 4.508943557739258, 4.054087162017822, 8.41421127319336, 3.017381429672241, 6.714942932128906, 0.00010084597306558862, 4.507717609405518], "tokens": [632, 413, 9107, 849, 4320, 714, 3252, 359, 29889]}
{"line_number": 562, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Returns an integer hash code representing the given float value.\n     * \n     * @param value the value to be hashed\n     * @return the hash code\n     */\n    public static", "entropy": 0.028327576816082, "is_bug_line": false, "sus_score": 0.2773500981126146, "per_token_entropy": [0.12991668283939362, 0.7726889252662659, 0.02068938873708248, 0.0051548900082707405, 0.014244308695197105, 0.013336499221622944, 0.008696540258824825, 0.005047198850661516, 0.001142325927503407, 3.635817120084539e-05, 0.03019246645271778, 0.03101184032857418, 0.001972754718735814, 0.0026362924836575985, 0.00021073981770314276, 0.0024584089405834675, 0.0009140365873463452, 0.001751794945448637, 0.286213219165802, 0.010884084738790989, 0.0028329261112958193, 0.002430344233289361, 0.00043704494601115584, 3.766942609217949e-05, 0.015541980974376202, 1.7404405298293568e-05, 0.00018416139937471598, 2.098061486321967e-05, 0.0023017835337668657, 0.00018130090029444546, 0.000819347333163023, 0.004833679646253586, 0.00026222606538794935, 0.0008521024719811976, 0.00010799778101500124, 8.606540359323844e-05, 5.185469490243122e-05, 0.004504414740949869, 0.00011896379146492109, 2.706014311115723e-05, 0.000198821333469823, 0.00020692592079285532, 0.0005081792478449643, 8.606540359323844e-05, 0.0006286313873715699, 0.0008818790083751082, 0.0012959185987710953, 0.09168237447738647, 0.0002797450579237193, 0.0016496871830895543, 0.0006625840906053782, 0.00010501786891836673], "tokens": [13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 16969, 385, 6043, 6608, 775, 15783, 278, 2183, 5785, 995, 29889, 13, 268, 334, 29871, 13, 268, 334, 732, 3207, 995, 278, 995, 304, 367, 6608, 287, 13, 268, 334, 732, 2457, 278, 6608, 775, 13, 268, 3776, 13, 1678, 970, 2294]}
{"line_number": 582, "line_type": "original", "code": "                u = -t;", "entropy": 5.645886421203613, "is_bug_line": false, "sus_score": 0.22645540682891913, "per_token_entropy": [7.732355117797852, 12.549905776977539, 2.899102210998535, 3.9940857887268066, 6.152769088745117, 0.547101616859436], "tokens": [462, 318, 353, 448, 29873, 29936]}
{"line_number": 582, "line_type": "generated", "code": "\n     * @return +1.0 or -1.0, depending on the sign of x\n     */\n    public static double indicator(final double x) {\n        return Math.copySign(1d, x);\n    }", "entropy": 0.1022493913769722, "is_bug_line": false, "sus_score": 0.22645540682891913, "per_token_entropy": [0.09952618926763535, 0.5845469832420349, 0.11205926537513733, 0.014899286441504955, 0.010729598812758923, 0.09867933392524719, 0.0003939091111533344, 0.0006444760947488248, 2.6940935640595853e-05, 0.08297549933195114, 0.00027855331427417696, 0.00016842853801790625, 8.940297266235575e-05, 4.362964682513848e-05, 0.027064424008131027, 0.000763363263104111, 0.00012170527770649642, 0.0008758046315051615, 0.0022394596599042416, 4.875540980719961e-05, 0.006262204144150019, 0.025854118168354034, 0.07973546534776688, 0.16824671626091003, 0.0014177043922245502, 0.029328547418117523, 0.01051233522593975, 0.0003500564198475331, 0.009555436670780182, 0.00531782815232873, 0.0011830481234937906, 0.06484831869602203, 0.0024743436370044947, 0.002092316746711731, 0.004137290176004171, 0.004756208509206772, 0.005259131081402302, 0.27479100227355957, 0.40207749605178833, 2.0571019649505615, 0.03437501937150955, 0.16667237877845764, 1.0847986231965479e-05, 0.009603019803762436, 0.34867650270462036, 0.505865216255188, 0.00041237910045310855, 0.010536517947912216, 0.0031986285466700792, 0.016475582495331764, 0.029600555077195168, 6.48477507638745e-05], "tokens": [13, 268, 334, 732, 2457, 718, 29896, 29889, 29900, 470, 448, 29896, 29889, 29900, 29892, 8679, 373, 278, 1804, 310, 921, 13, 268, 3776, 13, 1678, 970, 2294, 3765, 27717, 29898, 8394, 3765, 921, 29897, 426, 13, 4706, 736, 5792, 29889, 8552, 10140, 29898, 29896, 29881, 29892, 921, 416, 13, 1678, 500]}
{"line_number": 578, "line_type": "original", "code": "                t /= 2; // cast out twos", "entropy": 3.050111770629883, "is_bug_line": false, "sus_score": 0.2182178902359924, "per_token_entropy": [5.172413349151611, 12.659658432006836, 8.657218933105469, 2.166196346282959, 1.1406710147857666, 1.4901478290557861, 0.5976262092590332, 2.5978050231933594, 2.0505127906799316, 0.015809550881385803, 0.053253330290317535, 2.753696753643453e-05], "tokens": [462, 260, 847, 29922, 29871, 29906, 29936, 849, 4320, 714, 3252, 359]}
{"line_number": 578, "line_type": "generated", "code": "\n     * -1.0 if x", "entropy": 0.15949641168117523, "is_bug_line": false, "sus_score": 0.2182178902359924, "per_token_entropy": [0.4421263039112091, 0.18100784718990326, 0.016904549673199654, 0.7672878503799438, 0.003425090340897441, 0.0062348381616175175, 0.00027378625236451626, 0.01746360771358013, 0.0007439468172378838], "tokens": [13, 268, 334, 448, 29896, 29889, 29900, 565, 921]}
{"line_number": 551, "line_type": "original", "code": "            u = -u;", "entropy": 5.437164306640625, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [8.284472465515137, 9.904738426208496, 0.713738739490509, 6.604099750518799, 6.9794111251831055, 0.13652653992176056], "tokens": [632, 318, 353, 448, 29884, 29936]}
{"line_number": 551, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Returns an integer hash code representing the given float value.\n     * \n     * @param value the value to be hashed\n     * @return the hash code\n     */\n    public static", "entropy": 0.028521694242954254, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [0.12015561014413834, 0.6212342977523804, 0.01626296527683735, 0.005438769701868296, 0.040600258857011795, 0.01857142336666584, 0.0227521900087595, 0.007712468039244413, 0.0020260538440197706, 6.770858453819528e-05, 0.08993624895811081, 0.06299734860658646, 0.004349652677774429, 0.010650224052369595, 0.0003392120997887105, 0.0032269093208014965, 0.004398789722472429, 0.0012993711279705167, 0.3202788829803467, 0.0007964776013977826, 0.003350479993969202, 0.012645301409065723, 0.0003393312799744308, 0.00034731553751043975, 0.04827488958835602, 0.00018463814922142774, 0.00027652730932459235, 0.0002615109842736274, 0.002785732736811042, 0.0003123987407889217, 0.0009243983076885343, 0.011918523348867893, 0.0007645544828847051, 0.00034421717282384634, 0.00047338721924461424, 0.000624104228336364, 0.0003519630990922451, 0.014598695561289787, 0.0021046886686235666, 0.0003636414185166359, 0.0005735897575505078, 0.0003438596613705158, 0.0009899006690829992, 0.00023779425828251988, 0.001517812255769968, 0.002141922013834119, 0.0004447901446837932, 0.015853317454457283, 0.0010372978867962956, 0.0031632171012461185, 0.0022193582262843847, 0.0002641328901518136], "tokens": [13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 16969, 385, 6043, 6608, 775, 15783, 278, 2183, 5785, 995, 29889, 13, 268, 334, 29871, 13, 268, 334, 732, 3207, 995, 278, 995, 304, 367, 6608, 287, 13, 268, 334, 732, 2457, 278, 6608, 775, 13, 268, 3776, 13, 1678, 970, 2294]}
{"line_number": 584, "line_type": "original", "code": "                v = t;", "entropy": 7.0929412841796875, "is_bug_line": false, "sus_score": 0.20851441405707477, "per_token_entropy": [9.206796646118164, 13.518467903137207, 2.131145715713501, 9.198570251464844, 1.4097260236740112], "tokens": [462, 325, 353, 260, 29936]}
{"line_number": 584, "line_type": "generated", "code": "\n    public static double indicator(final double x) {\n        return (x >= 0.0) ? 1.0 : -1.0;\n    }\n\n    /**\n     * For a float value x, this method", "entropy": 0.07624596357345581, "is_bug_line": false, "sus_score": 0.20851441405707477, "per_token_entropy": [0.11435357481241226, 0.33958062529563904, 0.13447435200214386, 0.0010078833438456059, 0.02105048857629299, 0.00553598627448082, 0.0012898467248305678, 0.08102084696292877, 0.004544881638139486, 0.0026622111909091473, 0.0027350897435098886, 0.0049435291439294815, 0.008268056437373161, 0.1763520985841751, 0.44076675176620483, 0.6352636814117432, 0.04170333594083786, 0.2215695083141327, 0.2438703328371048, 0.0007608617888763547, 0.5386123657226562, 0.0012812747154384851, 0.14172963798046112, 0.0009829933987930417, 0.20841337740421295, 0.0011511372867971659, 0.007028498221188784, 0.00013398226292338222, 0.006512607913464308, 0.04371986165642738, 0.00042298430344089866, 0.00018749863374978304, 3.075552376685664e-05, 0.0017143089789897203, 0.025860855355858803, 0.024612803012132645, 0.00022075122979003936, 0.006446518935263157, 0.019828086718916893, 0.023670239374041557, 0.005057280883193016, 0.002500266768038273, 0.0004391897819004953, 2.062299427052494e-05, 0.07659643143415451, 0.19872531294822693, 0.06005651876330376, 0.08492075651884079, 0.0013298486592248082, 0.00014125302550382912, 0.000539634027518332, 0.0001481661747675389], "tokens": [13, 1678, 970, 2294, 3765, 27717, 29898, 8394, 3765, 921, 29897, 426, 13, 4706, 736, 313, 29916, 6736, 29871, 29900, 29889, 29900, 29897, 1577, 29871, 29896, 29889, 29900, 584, 448, 29896, 29889, 29900, 29936, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 1152, 263, 5785, 995, 921, 29892, 445, 1158]}
{"line_number": 550, "line_type": "original", "code": "        if (u > 0) {", "entropy": 3.0680062770843506, "is_bug_line": false, "sus_score": 0.20628424925175867, "per_token_entropy": [7.950838565826416, 4.8569817543029785, 0.06278924643993378, 10.288458824157715, 3.0485901832580566, 0.39616554975509644, 0.1311872899532318, 0.8425281047821045, 0.03451645001769066], "tokens": [308, 565, 313, 29884, 1405, 29871, 29900, 29897, 426]}
{"line_number": 550, "line_type": "generated", "code": "\n    public static int hash(final double value) {\n        return new Double(value).hashCode();\n    }\n\n    /**\n     * Returns an integer hash code representing the given float value.\n     * \n     * @", "entropy": 0.08382492512464523, "is_bug_line": false, "sus_score": 0.20628424925175867, "per_token_entropy": [0.11533726006746292, 0.4834785461425781, 0.21386227011680603, 0.06176748126745224, 0.03414151817560196, 0.008016908541321754, 0.12843899428844452, 0.40159621834754944, 0.08100996166467667, 0.0184574443846941, 0.012431868351995945, 0.01018753182142973, 0.005151806864887476, 0.1190161183476448, 0.8508686423301697, 0.8701584339141846, 0.11271819472312927, 0.003844728460535407, 0.01052047498524189, 0.0035206021275371313, 0.019723834469914436, 0.00031442465842701495, 0.004430597182363272, 0.010442735627293587, 0.02764461748301983, 0.004277010448276997, 0.012036195956170559, 0.11913030594587326, 0.051774635910987854, 0.03239643946290016, 0.009018520824611187, 0.0025533000007271767, 9.16677454370074e-05, 0.10736281424760818, 0.06275151669979095, 0.004301106557250023, 0.006702915765345097, 0.00034648136352188885, 0.003115682862699032, 0.0019828674849122763, 0.0010275328531861305, 0.28312259912490845, 0.0009369035833515227, 0.0018206939566880465, 0.005574870388954878, 0.0009750141180120409, 0.00046993177966214716, 0.037486396729946136, 0.00025900822947733104, 0.0006906984490342438, 0.0003327769518364221, 0.0012769886525347829], "tokens": [13, 1678, 970, 2294, 938, 6608, 29898, 8394, 3765, 995, 29897, 426, 13, 4706, 736, 716, 11599, 29898, 1767, 467, 8568, 3399, 890, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 16969, 385, 6043, 6608, 775, 15783, 278, 2183, 5785, 995, 29889, 13, 268, 334, 29871, 13, 268, 334, 732]}
{"line_number": 553, "line_type": "original", "code": "        if (v > 0) {", "entropy": 2.3319051265716553, "is_bug_line": false, "sus_score": 0.20628424925175867, "per_token_entropy": [8.063326835632324, 6.294029712677002, 0.11913030594587326, 3.4616990089416504, 2.179779052734375, 0.5091821551322937, 0.08346197754144669, 0.2594391405582428, 0.017097225412726402], "tokens": [308, 565, 313, 29894, 1405, 29871, 29900, 29897, 426]}
{"line_number": 553, "line_type": "generated", "code": "\n    /**\n     * Returns an integer hash code representing the given float value.\n     * \n     * @param value the value to be hashed\n     * @return the hash code\n     */\n    public static int hash(float", "entropy": 0.03275540471076965, "is_bug_line": false, "sus_score": 0.20628424925175867, "per_token_entropy": [0.0641503632068634, 0.3259497880935669, 0.06221307814121246, 0.016758376732468605, 0.006757265888154507, 0.00023588736075907946, 0.20798473060131073, 0.15780973434448242, 0.00795706920325756, 0.01465579029172659, 0.0005448763840831816, 0.004092651419341564, 0.0026303476188331842, 0.0014563917648047209, 0.6061466336250305, 0.0012475810945034027, 0.0021647608373314142, 0.007904794998466969, 0.00096941675292328, 0.0007388246012851596, 0.049386780709028244, 0.0004058252670802176, 0.0007521660882048309, 0.0011711412807926536, 0.0021418030373752117, 0.0005940818227827549, 0.0013297295663505793, 0.013908017426729202, 0.0011861439561471343, 0.0005467826849780977, 0.0007931424188427627, 0.0010332489619031549, 0.000662703241687268, 0.012361695058643818, 0.0009202298242598772, 0.0006881968001835048, 0.0007231004419736564, 0.000579546787776053, 0.0010531361913308501, 0.00037496211007237434, 0.0010339635191485286, 0.0021429925691336393, 0.0009051040397025645, 0.024262413382530212, 0.0015549485106021166, 0.013992072083055973, 0.004786936566233635, 0.001141968765296042, 0.0018195039592683315, 0.0007402540650218725, 0.0020549625623971224, 0.06586504727602005], "tokens": [13, 1678, 7762, 13, 268, 334, 16969, 385, 6043, 6608, 775, 15783, 278, 2183, 5785, 995, 29889, 13, 268, 334, 29871, 13, 268, 334, 732, 3207, 995, 278, 995, 304, 367, 6608, 287, 13, 268, 334, 732, 2457, 278, 6608, 775, 13, 268, 3776, 13, 1678, 970, 2294, 938, 6608, 29898, 7411]}
{"line_number": 554, "line_type": "original", "code": "            v = -v;", "entropy": 4.00618839263916, "is_bug_line": false, "sus_score": 0.20628424925175867, "per_token_entropy": [10.015838623046875, 8.936234474182129, 1.0741983652114868, 3.1802446842193604, 0.7949098944664001, 0.03570585697889328], "tokens": [632, 325, 353, 448, 29894, 29936]}
{"line_number": 554, "line_type": "generated", "code": "\n    /**\n     * Returns an integer hash code representing the given float value.\n     * \n     * @param value the value to be hashed\n     * @return the hash code\n     */\n    public static int hash(float", "entropy": 0.05014919862151146, "is_bug_line": false, "sus_score": 0.20628424925175867, "per_token_entropy": [0.07828684896230698, 0.8793831467628479, 0.12121935933828354, 0.02990870177745819, 0.006825702264904976, 0.00039307496626861393, 0.31477513909339905, 0.24385324120521545, 0.01171636302024126, 0.023906895890831947, 0.0006753309280611575, 0.00402046600356698, 0.0034890035167336464, 0.001570183434523642, 0.6106845140457153, 0.0015330478781834245, 0.0029034148901700974, 0.011807198636233807, 0.0014099667314440012, 0.0010839784517884254, 0.05842786282300949, 0.001090289675630629, 0.0009450022480450571, 0.001122083282098174, 0.0036759679205715656, 0.0008989107445813715, 0.0015904169995337725, 0.019054114818572998, 0.0017484629061073065, 0.0008431693422608078, 0.0010968389688059688, 0.0016941969515755773, 0.0010108605492860079, 0.01710730418562889, 0.001061233808286488, 0.0011188682401552796, 0.001082192175090313, 0.0008976006065495312, 0.0016166010173037648, 0.0004966217675246298, 0.001501148217357695, 0.0024801704566925764, 0.0008230397943407297, 0.028206512331962585, 0.0017742858035489917, 0.020507214590907097, 0.008151477202773094, 0.0014893640764057636, 0.0029149444308131933, 0.0013996100751683116, 0.0032092041801661253, 0.0692770704627037], "tokens": [13, 1678, 7762, 13, 268, 334, 16969, 385, 6043, 6608, 775, 15783, 278, 2183, 5785, 995, 29889, 13, 268, 334, 29871, 13, 268, 334, 732, 3207, 995, 278, 995, 304, 367, 6608, 287, 13, 268, 334, 732, 2457, 278, 6608, 775, 13, 268, 3776, 13, 1678, 970, 2294, 938, 6608, 29898, 7411]}
{"line_number": 557, "line_type": "original", "code": "        int k = 0;", "entropy": 2.5169408321380615, "is_bug_line": false, "sus_score": 0.20628424925175867, "per_token_entropy": [6.260823726654053, 3.8309078216552734, 6.092229843139648, 0.09383471310138702, 0.08381371200084686, 1.2392956018447876, 0.017680654302239418], "tokens": [308, 938, 413, 353, 29871, 29900, 29936]}
{"line_number": 557, "line_type": "generated", "code": "\n     * @param array the array to be hashed\n     * @return the hash code\n     */\n    public static int hash(double[] array) {\n        int result = 1;\n        for (int i = 0", "entropy": 0.17466534674167633, "is_bug_line": false, "sus_score": 0.20628424925175867, "per_token_entropy": [0.13563114404678345, 0.4485224485397339, 0.03521502763032913, 0.07103963196277618, 0.004541321657598019, 1.0345515012741089, 0.12447362393140793, 0.08916857093572617, 0.13223132491111755, 0.007312911096960306, 0.0003219324571546167, 0.0002374367177253589, 0.04032080993056297, 0.06506090611219406, 0.0005218812730163336, 0.006303903181105852, 0.17510361969470978, 0.0032456836197525263, 0.0002361257211305201, 0.004235464613884687, 0.007936608977615833, 0.05179851874709129, 0.21958211064338684, 0.0016161249950528145, 0.055885203182697296, 0.018545914441347122, 0.0018554391572251916, 0.0078547652810812, 0.0006149308173917234, 0.012173638679087162, 0.158502995967865, 0.1079309955239296, 0.05527142435312271, 0.0210542231798172, 0.004383123014122248, 0.004082085099071264, 0.15203984081745148, 0.7663814425468445, 1.507469892501831, 0.009825320914387703, 0.027573416009545326, 1.6904759407043457, 0.4802326560020447, 0.01992344669997692, 0.4671739935874939, 0.22272594273090363, 0.013614420779049397, 0.4417184293270111, 0.14514313638210297, 0.007688454352319241, 0.020098835229873657, 0.003149432362988591], "tokens": [13, 268, 334, 732, 3207, 1409, 278, 1409, 304, 367, 6608, 287, 13, 268, 334, 732, 2457, 278, 6608, 775, 13, 268, 3776, 13, 1678, 970, 2294, 938, 6608, 29898, 8896, 2636, 1409, 29897, 426, 13, 4706, 938, 1121, 353, 29871, 29896, 29936, 13, 4706, 363, 313, 524, 474, 353, 29871, 29900]}
{"line_number": 558, "line_type": "original", "code": "        while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are", "entropy": 1.3364137411117554, "is_bug_line": false, "sus_score": 0.20628424925175867, "per_token_entropy": [4.866615295410156, 10.659793853759766, 4.699957370758057, 6.425887584686279, 2.1728901863098145, 0.19168463349342346, 0.34828999638557434, 0.017394723370671272, 0.0190782081335783, 0.00270845927298069, 0.0896412581205368, 3.063163995742798, 1.6281572580337524, 0.09247713536024094, 0.013339675031602383, 0.001807366730645299, 0.004571937955915928, 0.00524691678583622, 0.0062376814894378185, 0.0035539816599339247, 0.05181006342172623, 2.3797225952148438, 3.438288927078247, 0.3756904602050781, 0.11045555770397186, 0.03545805439352989, 0.3108825385570526, 0.03067617118358612, 0.026455912739038467, 2.2598729133605957, 0.7016338109970093, 2.394916296005249, 0.17093230783939362, 0.10636802762746811, 0.06882192939519882], "tokens": [308, 1550, 5135, 29884, 669, 29871, 29896, 29897, 1275, 29871, 29900, 2607, 313, 29894, 669, 29871, 29896, 29897, 1275, 29871, 29900, 2607, 413, 529, 29871, 29941, 29896, 29897, 426, 849, 1550, 318, 322, 325, 526]}
{"line_number": 558, "line_type": "generated", "code": "\n     * @return the hash code\n     */\n    public static int hash(double[] value) {\n        if (value == null) {\n            return 0;\n        }\n        int result = 1;\n        for", "entropy": 0.1083265095949173, "is_bug_line": false, "sus_score": 0.20628424925175867, "per_token_entropy": [0.17866364121437073, 0.7629904747009277, 0.05052044615149498, 0.015487519092857838, 0.16027924418449402, 0.0031526407692581415, 0.0005007919971831143, 0.0034623933024704456, 0.034291625022888184, 0.03699931502342224, 0.09762711077928543, 0.0027646913658827543, 0.02772381529211998, 0.014479797333478928, 0.003305212128907442, 0.005438769701868296, 0.001090289675630629, 0.03593508154153824, 0.08800586313009262, 0.06035104766488075, 0.04763675481081009, 0.02127061039209366, 0.005759074818342924, 0.007052883040159941, 0.17667962610721588, 1.0901024341583252, 0.008826290257275105, 0.01660807803273201, 0.012672139331698418, 0.000589792791288346, 0.018192103132605553, 0.013110741972923279, 0.0060687316581606865, 0.05638604983687401, 0.019875651225447655, 0.019648676738142967, 0.02709714137017727, 0.0005048430757597089, 0.0064792088232934475, 0.02335107885301113, 0.0013073477894067764, 0.027079390361905098, 0.2163630723953247, 0.14364299178123474, 0.7857154011726379, 0.004411845467984676, 0.05524198338389397, 0.5908651351928711, 0.23914968967437744, 0.011533606797456741, 0.29750680923461914, 0.09917949885129929], "tokens": [13, 268, 334, 732, 2457, 278, 6608, 775, 13, 268, 3776, 13, 1678, 970, 2294, 938, 6608, 29898, 8896, 2636, 995, 29897, 426, 13, 4706, 565, 313, 1767, 1275, 1870, 29897, 426, 13, 9651, 736, 29871, 29900, 29936, 13, 4706, 500, 13, 4706, 938, 1121, 353, 29871, 29896, 29936, 13, 4706, 363]}
{"line_number": 564, "line_type": "original", "code": "        if (k == 31) {", "entropy": 2.8005406856536865, "is_bug_line": false, "sus_score": 0.20628424925175867, "per_token_entropy": [8.327898979187012, 5.67869234085083, 0.11199350655078888, 6.347653388977051, 1.0457866191864014, 0.23025919497013092, 4.679948329925537, 1.4388904571533203, 0.1256152242422104, 0.018667489290237427], "tokens": [308, 565, 313, 29895, 1275, 29871, 29941, 29896, 29897, 426]}
{"line_number": 564, "line_type": "generated", "code": "\n    /**\n     * Returns an integer hash code representing the given float value.\n     * \n     * @param value the value to be hashed\n     * @return the hash code\n     */\n    public static int hash(float", "entropy": 0.034818101674318314, "is_bug_line": false, "sus_score": 0.20628424925175867, "per_token_entropy": [0.10897735506296158, 0.37060296535491943, 0.09197045117616653, 0.019564161077141762, 0.007640306372195482, 0.00023707917716819793, 0.17488716542720795, 0.15101629495620728, 0.0060438490472733974, 0.008557317778468132, 0.00037508129025809467, 0.003193875541910529, 0.0013821106404066086, 0.002314509591087699, 0.5276281237602234, 0.0201845895498991, 0.0034969625994563103, 0.006457060109823942, 0.002184744458645582, 0.00021443451987579465, 0.06790020316839218, 0.00013648532330989838, 0.0008347125840373337, 7.784063927829266e-05, 0.005881147924810648, 0.0005175919504836202, 0.0016001766780391335, 0.012797726318240166, 0.0003326578007545322, 0.0021046886686235666, 0.00015889335190877318, 0.00015317220822907984, 8.546940807718784e-05, 0.006947526708245277, 0.0003496989083942026, 6.949660019017756e-05, 0.0004514628672040999, 0.0003381395654287189, 0.0007862337515689433, 0.00011395759065635502, 0.0006970121758058667, 0.0012167439563199878, 0.0029801977798342705, 0.1428692787885666, 0.002552467631176114, 0.005886006634682417, 0.0034370890352874994, 0.0008965287124738097, 0.0009564354550093412, 0.00030787018476985395, 0.0012278169160708785, 0.0389481782913208], "tokens": [13, 1678, 7762, 13, 268, 334, 16969, 385, 6043, 6608, 775, 15783, 278, 2183, 5785, 995, 29889, 13, 268, 334, 29871, 13, 268, 334, 732, 3207, 995, 278, 995, 304, 367, 6608, 287, 13, 268, 334, 732, 2457, 278, 6608, 775, 13, 268, 3776, 13, 1678, 970, 2294, 938, 6608, 29898, 7411]}
{"line_number": 571, "line_type": "original", "code": "        int t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;", "entropy": 2.617173671722412, "is_bug_line": false, "sus_score": 0.20628424925175867, "per_token_entropy": [6.739118576049805, 6.315219402313232, 4.1236371994018555, 0.13440880179405212, 2.7007017135620117, 8.212259292602539, 1.183176040649414, 0.40389445424079895, 2.390528678894043, 1.0307013988494873, 2.1744704246520996, 0.032145507633686066, 1.8718435764312744, 0.516482412815094, 0.013108741492033005, 6.812549591064453, 0.24384669959545135, 4.375236511230469, 1.948191523551941, 2.591501235961914, 0.127369686961174, 0.00726001150906086, 2.65183424949646, 6.9420084953308105, 5.431116104125977, 1.7782220840454102, 2.431645393371582, 0.09838021546602249], "tokens": [308, 938, 260, 353, 5135, 29884, 669, 29871, 29896, 29897, 1275, 29871, 29896, 29897, 1577, 325, 584, 19691, 29884, 847, 29871, 29906, 29897, 5515, 350, 29941, 3776, 29936]}
{"line_number": 571, "line_type": "generated", "code": "\n     */\n    public static byte sign(final byte x) {\n        return (x == (byte) 0) ? (byte) 0 : (x > (byte) 0) ? (byte) 1 : (byte", "entropy": 0.13972210884094238, "is_bug_line": false, "sus_score": 0.20628424925175867, "per_token_entropy": [0.13743983209133148, 0.21767236292362213, 0.3827306032180786, 0.0024279658682644367, 0.02251083217561245, 0.03154966980218887, 0.0018961322493851185, 0.1437041163444519, 0.03845572471618652, 0.20860692858695984, 0.4263138771057129, 0.020712977275252342, 0.06330958753824234, 0.002793222200125456, 0.004081966355443001, 0.00798426941037178, 0.1158580482006073, 0.20840254426002502, 0.2339569479227066, 0.8405808210372925, 0.4693445563316345, 1.4113237857818604, 0.03983338549733162, 0.005906982813030481, 0.38935619592666626, 0.00032884435495361686, 0.09112849831581116, 0.0036953275557607412, 0.0982038825750351, 0.0026749325916171074, 0.0032458023633807898, 0.051117438822984695, 0.007221666630357504, 0.05452791601419449, 0.2870859205722809, 0.03900137543678284, 0.37673938274383545, 0.0407881960272789, 0.00035148640745319426, 4.1483970562694594e-05, 0.002018796745687723, 0.00014053787162993103, 0.3280054032802582, 0.003912058658897877, 0.01633216068148613, 0.0001995364436879754, 0.0007159530650824308, 0.08279795944690704, 0.0003194298769813031, 0.27578800916671753, 0.0714823380112648, 0.0009317824151366949], "tokens": [13, 268, 3776, 13, 1678, 970, 2294, 7023, 1804, 29898, 8394, 7023, 921, 29897, 426, 13, 4706, 736, 313, 29916, 1275, 313, 10389, 29897, 29871, 29900, 29897, 1577, 313, 10389, 29897, 29871, 29900, 584, 313, 29916, 1405, 313, 10389, 29897, 29871, 29900, 29897, 1577, 313, 10389, 29897, 29871, 29896, 584, 313, 10389]}
{"line_number": 577, "line_type": "original", "code": "            while ((t & 1) == 0) { // while t is even..", "entropy": 1.6384446620941162, "is_bug_line": false, "sus_score": 0.20628424925175867, "per_token_entropy": [9.010292053222656, 7.919244289398193, 1.9079580307006836, 5.131811141967773, 0.9615782499313354, 1.046669602394104, 0.3940047025680542, 0.027733322232961655, 0.04195759445428848, 0.004549035336822271, 0.004677781835198402, 0.702255129814148, 0.08429452776908875, 2.184964656829834, 0.15527653694152832, 0.30640071630477905, 0.005798779893666506, 0.01116186287254095, 1.2298190593719482], "tokens": [632, 1550, 5135, 29873, 669, 29871, 29896, 29897, 1275, 29871, 29900, 29897, 426, 849, 1550, 260, 338, 1584, 636]}
{"line_number": 577, "line_type": "generated", "code": "\n     * For an int value x, this method returns (+1) if x >= 0 and (-1) if x", "entropy": 0.13903211057186127, "is_bug_line": false, "sus_score": 0.20628424925175867, "per_token_entropy": [0.22016911208629608, 0.2941250801086426, 0.0875401571393013, 0.5856643915176392, 0.9746106863021851, 0.12521131336688995, 0.004665798041969538, 0.02998633123934269, 0.000581572181545198, 0.002794410800561309, 0.0012154342839494348, 0.0013043713988736272, 1.0525825023651123, 0.0007198841194622219, 0.0016750366194173694, 0.0025754161179065704, 0.0023831319995224476, 0.09329146891832352, 0.0015967250801622868, 6.878139538457617e-05, 0.0017664319602772593, 0.019227901473641396, 0.00012563870404846966, 6.735097849741578e-05, 0.03636670485138893, 0.07451927661895752], "tokens": [13, 268, 334, 1152, 385, 938, 995, 921, 29892, 445, 1158, 3639, 20532, 29896, 29897, 565, 921, 6736, 29871, 29900, 322, 8521, 29896, 29897, 565, 921]}
{"line_number": 581, "line_type": "original", "code": "            if (t > 0) {", "entropy": 2.975369930267334, "is_bug_line": false, "sus_score": 0.20628424925175867, "per_token_entropy": [7.595381736755371, 3.721451759338379, 0.2735437750816345, 11.3811616897583, 2.8001255989074707, 0.3151739537715912, 0.04884007200598717, 0.5159386396408081, 0.12671224772930145], "tokens": [632, 565, 313, 29873, 1405, 29871, 29900, 29897, 426]}
{"line_number": 581, "line_type": "generated", "code": "\n     * @param x the value, a double\n     * @return +1.0 or -1.0, depending on the sign of x\n     */\n    public static double indicator(final double x) {\n        return (x", "entropy": 0.06606576591730118, "is_bug_line": false, "sus_score": 0.20628424925175867, "per_token_entropy": [0.1971261352300644, 0.4132993817329407, 0.03873477876186371, 0.18653491139411926, 0.012051742523908615, 0.03392455726861954, 0.09371434152126312, 0.0018762619001790881, 0.3770548105239868, 0.007966766133904457, 0.06236552447080612, 0.0811929851770401, 0.04180886596441269, 0.0007371568935923278, 0.0021583375055342913, 0.0036493625957518816, 0.06852832436561584, 0.0005096090608276427, 0.0007540719816461205, 4.029192859889008e-05, 0.09762278944253922, 0.000428108120104298, 0.00017248096992261708, 0.00013493580627255142, 3.099393507000059e-05, 0.013805967755615711, 0.0009800160769373178, 0.00013982271775603294, 0.0007334641413763165, 0.0015250729629769921, 4.756337511935271e-05, 0.007665504235774279, 0.018850702792406082, 0.03288450092077255, 0.1998472511768341, 0.0013192531187087297, 0.035241495817899704, 0.009089755825698376, 0.0004844683862756938, 0.007710812147706747, 0.007230069488286972, 0.0016025570221245289, 0.06974302232265472, 0.0014521064003929496, 0.0014391313306987286, 0.0019056509481742978, 0.002991488901898265, 0.003006464336067438, 0.16880571842193604, 0.40753838419914246, 0.674537181854248, 0.04242444783449173], "tokens": [13, 268, 334, 732, 3207, 921, 278, 995, 29892, 263, 3765, 13, 268, 334, 732, 2457, 718, 29896, 29889, 29900, 470, 448, 29896, 29889, 29900, 29892, 8679, 373, 278, 1804, 310, 921, 13, 268, 3776, 13, 1678, 970, 2294, 3765, 27717, 29898, 8394, 3765, 921, 29897, 426, 13, 4706, 736, 313, 29916]}
{"line_number": 587, "line_type": "original", "code": "            t = (v - u) / 2;", "entropy": 3.5015482902526855, "is_bug_line": false, "sus_score": 0.20628424925175867, "per_token_entropy": [6.8131866455078125, 11.182367324829102, 0.3218381404876709, 1.8643505573272705, 8.707958221435547, 4.389805316925049, 5.086965560913086, 0.433552622795105, 1.0321292877197266, 1.7763299942016602, 0.09406564384698868, 0.31602898240089417], "tokens": [632, 260, 353, 313, 29894, 448, 318, 29897, 847, 29871, 29906, 29936]}
{"line_number": 587, "line_type": "generated", "code": "\n        }\n        return (x >= 0) ? 1.0 : -1.0;\n    }\n\n    /**\n     * For a float value x, this method returns +1f if x >= 0 and -", "entropy": 0.10877936333417892, "is_bug_line": false, "sus_score": 0.20628424925175867, "per_token_entropy": [0.09435227513313293, 0.3254835605621338, 0.024412378668785095, 0.24656431376934052, 0.2742280662059784, 0.11724724620580673, 0.566386342048645, 0.010891985148191452, 0.12041351199150085, 0.11266909539699554, 0.00047910655848681927, 0.7740494608879089, 0.0006543640629388392, 0.2643089294433594, 0.0007459718617610633, 0.4573264718055725, 0.00129413278773427, 0.1061616837978363, 0.003976534586399794, 0.00036054308293387294, 0.0006378046819008887, 6.949660019017756e-05, 0.001321515068411827, 0.02139243669807911, 0.025196397677063942, 0.0002299282787134871, 0.0008074360666796565, 0.008156797848641872, 0.00570395914837718, 0.002158218529075384, 0.0019050560658797622, 0.0003759154351428151, 1.680836794548668e-05, 0.06448570638895035, 0.2252943515777588, 0.05295919254422188, 0.0858924612402916, 0.0014455594355240464, 0.00013851160474587232, 0.0004714807728305459, 0.00012790338951162994, 0.00019536493346095085, 0.1205562874674797, 0.00011359999916749075, 1.2364981174468994, 0.00011383838864276186, 0.00016080040950328112, 0.0027632645796984434, 0.00018439977429807186, 6.318072337307967e-06, 0.009360828436911106, 0.28578120470046997], "tokens": [13, 4706, 500, 13, 4706, 736, 313, 29916, 6736, 29871, 29900, 29897, 1577, 29871, 29896, 29889, 29900, 584, 448, 29896, 29889, 29900, 29936, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 1152, 263, 5785, 995, 921, 29892, 445, 1158, 3639, 718, 29896, 29888, 565, 921, 6736, 29871, 29900, 322, 448]}
