{"line_number": 313, "line_type": "original", "code": "  public Rotation(Vector3D u1, Vector3D u2, Vector3D v1, Vector3D v2) {", "entropy": 0.7419514060020447, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [6.858620643615723, 11.215271949768066, 1.0818262100219727, 0.00016127715934999287, 0.28182798624038696, 1.132299780845642, 0.0027774113696068525, 0.001437702914699912, 0.3506253659725189, 0.1378878504037857, 0.014603512361645699, 0.025643136352300644, 9.107174992095679e-05, 7.402622577501461e-05, 0.03015637770295143, 0.001142206834629178, 0.0930132195353508, 0.25101980566978455, 0.0002649671514518559, 0.0001573438785271719, 0.13344548642635345, 0.00554867135360837, 0.011720486916601658, 0.04175535961985588, 0.00020418466010596603, 6.961580220377073e-05, 0.0023375824093818665, 0.0003668589051812887, 0.18655359745025635, 0.3976362645626068], "tokens": [259, 970, 9664, 362, 29898, 12877, 29941, 29928, 318, 29896, 29892, 16510, 29941, 29928, 318, 29906, 29892, 16510, 29941, 29928, 325, 29896, 29892, 16510, 29941, 29928, 325, 29906, 29897, 426]}
{"line_number": 313, "line_type": "generated", "code": "\n        q1 = q2 = q3 = 0.0;\n<|mask:0|><|mask:1|>\n      } else {\n        // the (q1, q2, q3) vector is close", "entropy": 0.18249736726284027, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.139794260263443, 0.346070796251297, 0.22195199131965637, 0.016474643722176552, 0.011056939139962196, 1.1522332429885864, 0.009234337136149406, 0.0009076051646843553, 0.016451425850391388, 0.0003067976504098624, 0.0007333449902944267, 0.016816753894090652, 0.0004843492351938039, 0.1878029853105545, 0.0007376333815045655, 0.0038689535576850176, 0.007398586254566908, 0.7154160141944885, 0.0010833829874172807, 0.11959104984998703, 0.004254101309925318, 1.433559536933899, 0.005688668694347143, 1.0088363885879517, 0.0013072286965325475, 0.04013553261756897, 0.018640344962477684, 0.1712050586938858, 0.0034828262869268656, 0.011743579991161823, 0.02547871321439743, 0.6749854683876038, 0.0028455264400690794, 0.3520643711090088, 0.026387877762317657, 0.00442679924890399, 0.12121503055095673, 0.26333796977996826, 1.275367259979248, 0.23484402894973755, 0.029483426362276077, 0.008359796367585659, 0.0006519814487546682, 0.001401276676915586, 0.0012524626217782497, 0.0010794533882290125, 0.0001517419150331989, 0.0005103239673189819, 0.0003256267518736422, 0.03315623477101326, 0.06166582927107811, 0.7036027908325195], "tokens": [13, 4706, 3855, 29896, 353, 3855, 29906, 353, 3855, 29941, 353, 29871, 29900, 29889, 29900, 29936, 13, 29966, 29989, 13168, 29901, 29900, 29989, 5299, 29989, 13168, 29901, 29896, 29989, 29958, 13, 418, 500, 1683, 426, 13, 4706, 849, 278, 313, 29939, 29896, 29892, 3855, 29906, 29892, 3855, 29941, 29897, 4608, 338, 3802]}
{"line_number": 316, "line_type": "original", "code": "  double u1u1 = u1.getNormSq();", "entropy": 1.0645586252212524, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [6.078228950500488, 5.730704307556152, 2.474149227142334, 0.6679486632347107, 0.5255103707313538, 1.0037130117416382, 0.37864816188812256, 0.057308197021484375, 0.016361363232135773, 0.005416953936219215, 0.05744203180074692, 0.0011934071080759168, 1.4781842764932662e-05, 0.025979919359087944, 0.0010869554243981838, 0.009232565760612488], "tokens": [259, 3765, 318, 29896, 29884, 29896, 353, 318, 29896, 29889, 657, 29940, 555, 29903, 29939, 890]}
{"line_number": 316, "line_type": "generated", "code": "\n      } else {\n        // the (q1, q2, q3) vector is not aligned with anything\n        // we try a rotation around the (u1, u2, u3) axis\n        q0 = 0", "entropy": 0.4275098443031311, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.15625761449337006, 1.2746961116790771, 0.00821012258529663, 0.5063983798027039, 0.019913513213396072, 0.00843119714409113, 0.1699538677930832, 0.26389288902282715, 1.4027793407440186, 0.28220677375793457, 0.031029406934976578, 0.011300605721771717, 0.0006011109799146652, 0.0013473490253090858, 0.0008509114268235862, 0.0011606630869209766, 0.00013851160474587232, 0.0007320346776396036, 0.00032824851223267615, 0.0385199636220932, 0.07336299121379852, 1.9268157482147217, 0.3796657621860504, 0.060509949922561646, 0.8372233510017395, 0.3391973674297333, 0.02131110429763794, 0.22006072103977203, 1.0830237865447998, 1.5055140256881714, 2.681440830230713, 1.9029557704925537, 0.6560938954353333, 1.0371488332748413, 0.9522653818130493, 0.3019658029079437, 0.19923052191734314, 0.05161592364311218, 0.04523317888379097, 0.08937627077102661, 0.6573663353919983, 0.004993823356926441, 0.0025013370905071497, 0.003973803482949734, 0.791900634765625, 0.11385168880224228, 0.07540783286094666, 1.1392645835876465, 0.28799113631248474, 0.025835879147052765, 0.4390161633491516, 0.14564678072929382], "tokens": [13, 418, 500, 1683, 426, 13, 4706, 849, 278, 313, 29939, 29896, 29892, 3855, 29906, 29892, 3855, 29941, 29897, 4608, 338, 451, 26118, 411, 3099, 13, 4706, 849, 591, 1018, 263, 13733, 2820, 278, 313, 29884, 29896, 29892, 318, 29906, 29892, 318, 29941, 29897, 9685, 13, 4706, 3855, 29900, 353, 29871, 29900]}
{"line_number": 317, "line_type": "original", "code": "  double u2u2 = u2.getNormSq();", "entropy": 1.1296069622039795, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [6.260692596435547, 7.025182247161865, 2.219918966293335, 1.511857271194458, 0.38165393471717834, 0.4191071689128876, 0.1650611013174057, 0.020806385204195976, 0.014767855405807495, 0.0040368507616221905, 0.035673994570970535, 0.0017708349041640759, 3.6954811548639555e-06, 0.006757265888154507, 0.002937528071925044, 0.0034828262869268656], "tokens": [259, 3765, 318, 29906, 29884, 29906, 353, 318, 29906, 29889, 657, 29940, 555, 29903, 29939, 890]}
{"line_number": 317, "line_type": "generated", "code": "\n      }\n\n      // the (q1, q2, q3) vector is close to the (u2, u3) plane\n      // we try other vectors\n      Vector3D v1Prime = u2.cross", "entropy": 0.21453407406806946, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.11266792565584183, 0.22990289330482483, 0.0045008547604084015, 0.09152498096227646, 0.6814086437225342, 0.22182346880435944, 0.5121028423309326, 1.840967059135437, 0.5127450227737427, 0.06831636279821396, 0.012374293990433216, 0.0008049347088672221, 0.002026410773396492, 0.00113589596003294, 0.0021476317197084427, 0.00020418466010596603, 0.00115863885730505, 0.0004291805380489677, 0.04395832121372223, 0.0836651623249054, 0.578883171081543, 0.005660575814545155, 0.12324988842010498, 0.041499216109514236, 0.3544033169746399, 0.1468544453382492, 0.0022941718343645334, 0.007012517657130957, 0.001850322587415576, 0.0022381513845175505, 0.02412371151149273, 0.17756438255310059, 0.018284225836396217, 0.3290103077888489, 0.1842818558216095, 0.15696683526039124, 0.14052456617355347, 0.016425158828496933, 0.019398968666791916, 0.03472580015659332, 0.9197567701339722, 0.00032848684350028634, 8.880697714630514e-05, 0.4680461883544922, 0.45936882495880127, 0.20555731654167175, 0.00010299152199877426, 0.01226702332496643, 1.6909457445144653, 0.5838130116462708, 0.010833731852471828, 0.015546558424830437], "tokens": [13, 418, 500, 13, 13, 418, 849, 278, 313, 29939, 29896, 29892, 3855, 29906, 29892, 3855, 29941, 29897, 4608, 338, 3802, 304, 278, 313, 29884, 29906, 29892, 318, 29941, 29897, 10694, 13, 418, 849, 591, 1018, 916, 12047, 13, 418, 16510, 29941, 29928, 325, 29896, 4040, 603, 353, 318, 29906, 29889, 19128]}
{"line_number": 318, "line_type": "original", "code": "  double v1v1 = v1.getNormSq();", "entropy": 1.1444133520126343, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [6.404585838317871, 5.52333927154541, 3.0320544242858887, 1.1766307353973389, 0.6747738122940063, 1.1266112327575684, 0.21505284309387207, 0.021555552259087563, 0.0021081382874399424, 0.021034380421042442, 0.08711729198694229, 0.0009323778795078397, 1.9073468138230965e-06, 0.019631143659353256, 0.0009264229447580874, 0.0042580184526741505], "tokens": [259, 3765, 325, 29896, 29894, 29896, 353, 325, 29896, 29889, 657, 29940, 555, 29903, 29939, 890]}
{"line_number": 318, "line_type": "generated", "code": "\n    }\n\n    // we have found a good (q1, q2, q3) vector\n    // we have to find the corresponding q0\n    double q123 = k.getNorm();\n    double s", "entropy": 0.6463857889175415, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.06097495183348656, 0.7768697738647461, 0.01227550208568573, 0.10870354622602463, 1.755472183227539, 0.521049439907074, 0.47332334518432617, 1.4729325771331787, 1.2991881370544434, 1.4171454906463623, 0.6765965819358826, 1.3119224309921265, 1.0096205472946167, 0.18331818282604218, 0.04575237259268761, 0.001989767886698246, 0.0050844415090978146, 0.0014463926199823618, 0.0009274948388338089, 0.0005312938592396677, 0.001259606215171516, 0.019006511196494102, 0.23499615490436554, 0.4009256660938263, 0.0939083993434906, 0.5888379812240601, 0.5521686673164368, 3.0233044624328613, 0.4497493505477905, 2.185664653778076, 1.0028352737426758, 1.7400412559509277, 1.191406011581421, 0.017614595592021942, 0.3608774244785309, 0.15182366967201233, 1.2313772439956665, 1.5513159036636353, 0.8482940793037415, 1.6547901630401611, 1.135221004486084, 0.4307362735271454, 0.7821485996246338, 0.00047994061606004834, 0.09077006578445435, 0.0012694880133494735, 7.510157047363464e-06, 0.13524271547794342, 0.004435344599187374, 0.04182841628789902, 0.7290626168251038, 1.825535535812378], "tokens": [13, 1678, 500, 13, 13, 1678, 849, 591, 505, 1476, 263, 1781, 313, 29939, 29896, 29892, 3855, 29906, 29892, 3855, 29941, 29897, 4608, 13, 1678, 849, 591, 505, 304, 1284, 278, 6590, 3855, 29900, 13, 1678, 3765, 3855, 29896, 29906, 29941, 353, 413, 29889, 657, 29940, 555, 890, 13, 1678, 3765, 269]}
{"line_number": 319, "line_type": "original", "code": "  double v2v2 = v2.getNormSq();", "entropy": 1.1388745307922363, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [5.851316928863525, 4.741700172424316, 3.4863839149475098, 1.3018414974212646, 0.5627229809761047, 2.060068368911743, 0.13503682613372803, 0.012255130335688591, 0.006290161516517401, 0.016097459942102432, 0.028435146436095238, 0.0008780676289461553, 3.6954811548639555e-06, 0.010218211449682713, 0.0041287424974143505, 0.004614181816577911], "tokens": [259, 3765, 325, 29906, 29894, 29906, 353, 325, 29906, 29889, 657, 29940, 555, 29903, 29939, 890]}
{"line_number": 319, "line_type": "generated", "code": "\n    }\n\n  }\n\n  // normalization\n  double n = 1.0 / FastMath.sqrt(c * c + k.getNormSq());\n  c *= n;\n  k = new", "entropy": 0.3480857014656067, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.13379426300525665, 1.1201950311660767, 0.04315987974405289, 0.04405425861477852, 0.7218878269195557, 1.0390515327453613, 0.0319962352514267, 0.019290344789624214, 0.23543231189250946, 0.049710556864738464, 0.22510886192321777, 3.0071537494659424, 1.1816190481185913, 0.6919609904289246, 0.023513292893767357, 0.23695985972881317, 2.3255245685577393, 0.23540395498275757, 1.9594999551773071, 0.29842376708984375, 0.24351903796195984, 0.004897977691143751, 0.011922646313905716, 0.15012866258621216, 0.00037889453233219683, 7.795983401592821e-05, 0.0060546319000422955, 0.016141800209879875, 0.3100617527961731, 0.5566205978393555, 0.01371778268367052, 0.023283647373318672, 0.21865206956863403, 0.00041929035796783864, 0.07970640808343887, 0.0015751824248582125, 5.364403477869928e-06, 0.01687641814351082, 0.0026497275102883577, 0.015227142721414566, 0.005265890154987574, 0.14860154688358307, 1.4807831048965454, 0.10106421262025833, 9.131014667218551e-05, 0.011434260755777359, 0.0012057899730280042, 0.006447111256420612, 0.08963046967983246, 0.38313719630241394, 0.38104048371315, 0.19609688222408295], "tokens": [13, 1678, 500, 13, 13, 29871, 500, 13, 13, 29871, 849, 4226, 2133, 13, 29871, 3765, 302, 353, 29871, 29896, 29889, 29900, 847, 23786, 11309, 29889, 3676, 29898, 29883, 334, 274, 718, 413, 29889, 657, 29940, 555, 29903, 29939, 3310, 13, 29871, 274, 334, 29922, 302, 29936, 13, 29871, 413, 353, 716]}
{"line_number": 320, "line_type": "original", "code": "  if ((u1u1 == 0) || (u2u2 == 0) || (v1v1 == 0) || (v2v2 == 0)) {", "entropy": 0.49646976590156555, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [6.182210922241211, 3.8708629608154297, 3.1362500190734863, 0.5613956451416016, 0.8449418544769287, 0.8580520153045654, 0.17001691460609436, 2.6244778633117676, 0.07852756232023239, 0.07860106974840164, 0.5760109424591064, 0.03063640184700489, 0.01919410564005375, 0.3691664934158325, 0.05093109607696533, 0.021766580641269684, 0.0038720411248505116, 0.0032795476727187634, 0.0008955758530646563, 0.0001662831346038729, 0.6774768829345703, 0.007066850550472736, 0.023553580045700073, 0.09412076324224472, 0.3307154178619385, 0.00500817596912384, 0.007162607274949551, 0.001793206320144236, 0.0008654424455016851, 0.00011014331539627165, 0.10068981349468231, 0.005740466061979532, 0.009104521945118904, 0.0045929416082799435, 0.0028805925976485014, 0.0014969820622354746, 0.0006766413571313024, 0.0008175606490112841, 0.0008578196284361184, 0.00018439977429807186, 0.07839729636907578, 0.01716296561062336], "tokens": [259, 565, 5135, 29884, 29896, 29884, 29896, 1275, 29871, 29900, 29897, 3830, 313, 29884, 29906, 29884, 29906, 1275, 29871, 29900, 29897, 3830, 313, 29894, 29896, 29894, 29896, 1275, 29871, 29900, 29897, 3830, 313, 29894, 29906, 29894, 29906, 1275, 29871, 29900, 876, 426]}
{"line_number": 320, "line_type": "generated", "code": "\n    }\n\n    // we will have to use v1 and v2 to compute the scalar part\n<|mask:1|><|mask:0|>\n  }\n\n  // we will have to use u1 and u", "entropy": 0.22492071986198425, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.11941757053136826, 1.1535743474960327, 0.20130641758441925, 0.0791991576552391, 0.5170056819915771, 0.21381482481956482, 0.20844638347625732, 0.6447888016700745, 0.4214002192020416, 0.04620254412293434, 0.002394310897216201, 0.011565541848540306, 1.8073101043701172, 0.4810624122619629, 0.18247079849243164, 0.09443124383687973, 0.3022928237915039, 0.029352277517318726, 0.0031098597683012486, 0.005496507976204157, 0.013668866828083992, 0.001805105828680098, 0.007470410317182541, 0.2836015820503235, 0.0007830176036804914, 0.0037796504329890013, 0.0007333449902944267, 0.3628687560558319, 0.005114566534757614, 0.268362432718277, 0.0010194348869845271, 0.007594404276460409, 0.0007795632118359208, 0.20048360526561737, 0.0011252983240410686, 0.024265671148896217, 0.008084194734692574, 0.34024080634117126, 0.0023935975041240454, 0.0154616953805089, 0.12042387574911118, 0.035009004175662994, 0.21183758974075317, 1.7168066501617432, 0.6189942359924316, 0.04192901775240898, 0.0021898592822253704, 0.006867377553135157, 0.1716705560684204, 0.10468173027038574, 0.10448417067527771, 0.48670417070388794], "tokens": [13, 1678, 500, 13, 13, 1678, 849, 591, 674, 505, 304, 671, 325, 29896, 322, 325, 29906, 304, 10272, 278, 17336, 760, 13, 29966, 29989, 13168, 29901, 29896, 29989, 5299, 29989, 13168, 29901, 29900, 29989, 29958, 13, 29871, 500, 13, 13, 29871, 849, 591, 674, 505, 304, 671, 318, 29896, 322, 318]}
{"line_number": 325, "line_type": "original", "code": "  v1 = new Vector3D(FastMath.sqrt(u1u1 / v1v1), v1);", "entropy": 0.8513867259025574, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [6.01117467880249, 3.8582193851470947, 1.6643354892730713, 0.8841404914855957, 2.1573352813720703, 0.009827563539147377, 0.0016764646861702204, 3.93382906622719e-05, 0.08766192942857742, 5.400421142578125, 0.0009548871894367039, 6.401333666872233e-05, 0.00021455370006151497, 0.19290904700756073, 0.1267334669828415, 1.0690631866455078, 0.25449690222740173, 0.02681679278612137, 0.038649797439575195, 1.017681360244751, 0.30753132700920105, 0.01405919250100851, 0.02124365232884884, 0.0021630956325680017, 0.01679612323641777, 0.20780646800994873, 0.1629379838705063, 0.30387431383132935], "tokens": [259, 325, 29896, 353, 716, 16510, 29941, 29928, 29898, 29943, 579, 11309, 29889, 3676, 29898, 29884, 29896, 29884, 29896, 847, 325, 29896, 29894, 29896, 511, 325, 29896, 416]}
{"line_number": 325, "line_type": "generated", "code": "\n\n    // we will have to use u1 and v1 to compute the scalar part\n    uRef = u1;\n    vRef = v1;\n\n  }\n\n  // compute the scalar part\n  double s =", "entropy": 0.2183229625225067, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.072549007833004, 0.4417399764060974, 1.5260931253433228, 0.23440611362457275, 0.6552324891090393, 0.4812251031398773, 0.03966474533081055, 0.0018487757770344615, 0.021789558231830597, 0.24250653386116028, 0.8335564732551575, 0.047951895743608475, 0.01589673012495041, 0.08793184161186218, 0.015795351937413216, 0.00261084851808846, 0.0018271195003762841, 0.002764096949249506, 0.0011631635716184974, 0.006613628473132849, 0.4527353048324585, 0.10747159272432327, 0.007391604594886303, 0.026333538815379143, 0.0037121926434338093, 0.0029294455889612436, 0.002984357764944434, 0.00045253525604493916, 0.0047950041480362415, 0.0004961451631970704, 4.23184028477408e-05, 0.00028725311858579516, 0.0006462631281465292, 0.0011660212185233831, 0.0015679220668971539, 0.00025519452174194157, 0.1415155529975891, 0.5416043996810913, 0.010060318745672703, 0.04444009065628052, 0.21925827860832214, 0.10830279439687729, 0.11994479596614838, 1.5648177862167358, 0.30375614762306213, 0.346584290266037, 0.046717021614313126, 0.30907586216926575, 0.05072171241044998, 0.3960389792919159, 1.463769555091858, 0.3397526741027832], "tokens": [13, 13, 1678, 849, 591, 674, 505, 304, 671, 318, 29896, 322, 325, 29896, 304, 10272, 278, 17336, 760, 13, 1678, 318, 5620, 353, 318, 29896, 29936, 13, 1678, 325, 5620, 353, 325, 29896, 29936, 13, 13, 29871, 500, 13, 13, 29871, 849, 10272, 278, 17336, 760, 13, 29871, 3765, 269, 353]}
{"line_number": 328, "line_type": "original", "code": "  double u1u2   = u1.dotProduct(u2);", "entropy": 0.9126994013786316, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [5.615571022033691, 1.3339056968688965, 3.395660400390625, 1.3081860542297363, 0.7252386808395386, 0.7679651975631714, 2.0264015197753906, 3.9934315282152966e-05, 0.06270404905080795, 0.21828404068946838, 0.03552259877324104, 0.016897985711693764, 7.045020902296528e-05, 0.0008351890719495714, 0.0016195764765143394, 0.0007857572636567056, 0.006200837437063456], "tokens": [259, 3765, 318, 29896, 29884, 29906, 259, 353, 318, 29896, 29889, 6333, 7566, 29898, 29884, 29906, 416]}
{"line_number": 328, "line_type": "generated", "code": "\n  double s = FastMath.sqrt((1.0 + c) / 2.0);\n  q1 = (k.getX() - vRef.getY() * uRef.getZ() + vRef.get", "entropy": 0.3053920269012451, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.11557071655988693, 0.08970359712839127, 0.5219817757606506, 1.433985710144043, 0.4798157513141632, 0.8787381052970886, 0.00022682955022901297, 8.511180931236595e-05, 0.044546131044626236, 0.46288836002349854, 0.18582695722579956, 0.41298139095306396, 0.0016196954529732466, 0.3757089078426361, 0.005586250685155392, 0.010883730836212635, 0.48637089133262634, 0.018141064792871475, 0.006771829444915056, 0.09725067019462585, 0.000824230897706002, 0.012765360064804554, 0.0072654555551707745, 0.07639478892087936, 0.7183913588523865, 1.1542242765426636, 0.02846364863216877, 2.190521717071533, 0.6788428425788879, 0.0027562507893890142, 0.404485285282135, 0.5805684328079224, 0.0073895929381251335, 1.6151036024093628, 1.5133841037750244, 0.3634353578090668, 0.0004190520558040589, 0.006148352753371, 0.27544406056404114, 0.0005274811992421746, 0.003983658738434315, 0.23602400720119476, 0.02378944680094719, 8.225102646974847e-05, 5.924526340095326e-05, 0.0007234578370116651, 0.32719409465789795, 0.01104797888547182, 0.011239429004490376, 0.00014149141497910023, 2.3364747903542593e-05, 3.7788631743751466e-05], "tokens": [13, 29871, 3765, 269, 353, 23786, 11309, 29889, 3676, 3552, 29896, 29889, 29900, 718, 274, 29897, 847, 29871, 29906, 29889, 29900, 416, 13, 29871, 3855, 29896, 353, 313, 29895, 29889, 657, 29990, 580, 448, 325, 5620, 29889, 657, 29979, 580, 334, 318, 5620, 29889, 657, 29999, 580, 718, 325, 5620, 29889, 657]}
{"line_number": 329, "line_type": "original", "code": "  double v1v2   = v1.dotProduct(v2);", "entropy": 1.04029381275177, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [5.523126602172852, 1.703115463256836, 4.154438018798828, 0.9491653442382812, 1.7980343103408813, 0.6698107123374939, 2.7318553924560547, 5.9126061387360096e-05, 0.03911074623465538, 0.004988485481590033, 0.06357888877391815, 0.020098835229873657, 0.00015496007108595222, 0.0007857572636567056, 0.0028546794783324003, 0.00100514420773834, 0.02281021885573864], "tokens": [259, 3765, 325, 29896, 29894, 29906, 259, 353, 325, 29896, 29889, 6333, 7566, 29898, 29894, 29906, 416]}
{"line_number": 329, "line_type": "generated", "code": "\n  double s = (k.dotProduct(v1Su1) > 0) ? 1.0 : -1.0;\n  q1 = s * c;\n  q2 = k.getX() / c", "entropy": 0.34256261587142944, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.1720905601978302, 0.10236186534166336, 0.9779630899429321, 0.8024721145629883, 0.5190852880477905, 2.3299942016601562, 1.5820612907409668, 0.002445090329274535, 0.26134970784187317, 6.794698856538162e-05, 0.003030471969395876, 0.6750797033309937, 1.0330405235290527, 0.44673439860343933, 0.0012020989088341594, 0.13111817836761475, 1.2719368934631348, 0.004448280669748783, 0.00043358939001336694, 0.12011406570672989, 0.005468884017318487, 1.775158405303955, 0.1477774828672409, 0.44478878378868103, 0.0037764438893646, 0.05531710758805275, 0.03752187639474869, 0.008578119799494743, 0.0009077242575585842, 5.2927523938706145e-05, 0.00630473205819726, 0.008203974924981594, 0.5922228097915649, 0.30744946002960205, 0.5764771699905396, 0.021817784756422043, 0.3675108253955841, 0.011498489417135715, 0.20748741924762726, 0.11930933594703674, 0.005346049088984728, 0.12729768455028534, 0.38668957352638245, 0.06450124830007553, 0.0037984142545610666, 1.0522079467773438, 0.0010527789127081633, 0.2851424813270569, 0.549889862537384, 0.05907768756151199, 0.03986167907714844, 0.10372995585203171], "tokens": [13, 29871, 3765, 269, 353, 313, 29895, 29889, 6333, 7566, 29898, 29894, 29896, 5091, 29896, 29897, 1405, 29871, 29900, 29897, 1577, 29871, 29896, 29889, 29900, 584, 448, 29896, 29889, 29900, 29936, 13, 29871, 3855, 29896, 353, 269, 334, 274, 29936, 13, 29871, 3855, 29906, 353, 413, 29889, 657, 29990, 580, 847, 274]}
{"line_number": 330, "line_type": "original", "code": "  double coeffU = u1u2 / u1u1;", "entropy": 1.0567073822021484, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [5.292932510375977, 2.6378400325775146, 3.1770901679992676, 0.01412983424961567, 1.2293211221694946, 0.3598036468029022, 1.0837985277175903, 0.7653976678848267, 0.5750239491462708, 0.3869030773639679, 0.19917991757392883, 0.8998612761497498, 0.18308037519454956, 0.035929907113313675, 0.044427547603845596, 0.02259894460439682], "tokens": [259, 3765, 1302, 12352, 29965, 353, 318, 29896, 29884, 29906, 847, 318, 29896, 29884, 29896, 29936]}
{"line_number": 330, "line_type": "generated", "code": "\n  q0 = (uRef.dotProduct(vRef) - c) * inv;\n  q1 = k.getZ() * inv;\n  q2 = k.getY() * inv;\n  q3 =", "entropy": 0.22002190351486206, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.26950597763061523, 0.08228151500225067, 0.33890920877456665, 0.7617269158363342, 0.038258057087659836, 1.8654720783233643, 0.8524834513664246, 0.38855066895484924, 0.03876723349094391, 0.22583377361297607, 0.0002752163854893297, 0.002866566414013505, 0.5452038049697876, 0.10155069082975388, 0.1782604455947876, 1.4750072956085205, 0.5659389495849609, 0.05383649468421936, 0.009250282309949398, 0.030738597735762596, 0.006373791955411434, 0.011354116722941399, 0.5654953718185425, 0.053718555718660355, 0.02049623616039753, 0.00210111984051764, 0.19021549820899963, 0.0016321921721100807, 0.40014737844467163, 1.4170249700546265, 0.018655087798833847, 0.17641104757785797, 0.002093387534841895, 0.002331873867660761, 0.0027465024031698704, 0.024088451638817787, 0.007935426197946072, 0.0018390186596661806, 0.00020096666412428021, 0.656627357006073, 9.989239333663136e-05, 0.00044204952428117394, 0.01800127699971199, 0.00020859450160060078, 0.003009435487911105, 0.018785890191793442, 0.0006658005877397954, 0.000714523543138057, 0.012093436904251575, 0.0003522014303598553, 0.0004231034545227885, 0.00013720047718379647], "tokens": [13, 29871, 3855, 29900, 353, 313, 29884, 5620, 29889, 6333, 7566, 29898, 29894, 5620, 29897, 448, 274, 29897, 334, 2437, 29936, 13, 29871, 3855, 29896, 353, 413, 29889, 657, 29999, 580, 334, 2437, 29936, 13, 29871, 3855, 29906, 353, 413, 29889, 657, 29979, 580, 334, 2437, 29936, 13, 29871, 3855, 29941, 353]}
{"line_number": 331, "line_type": "original", "code": "  double coeffV = v1v2 / u1u1;", "entropy": 1.2515398263931274, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [5.691434860229492, 3.551576614379883, 3.365673303604126, 0.01739238016307354, 0.680460512638092, 0.1883818805217743, 1.3889126777648926, 0.5869053602218628, 0.9106711745262146, 0.20435354113578796, 0.06919820606708527, 1.099116563796997, 0.047284793108701706, 0.20453135669231415, 1.9771729707717896, 0.04157035052776337], "tokens": [259, 3765, 1302, 12352, 29963, 353, 325, 29896, 29894, 29906, 847, 318, 29896, 29884, 29896, 29936]}
{"line_number": 331, "line_type": "generated", "code": "\n  q2 = inv * k.getY();\n<|mask:1|><|mask:0|>\n  q3 = inv * k.getZ();\n\n  // compute the scalar part\n  double alpha2 =", "entropy": 0.1723780632019043, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.14497599005699158, 0.05688180401921272, 0.02770201675593853, 0.016199510544538498, 0.002302140463143587, 0.06780040264129639, 0.0004471732536330819, 0.010948938317596912, 0.0001113352773245424, 0.0005052005290053785, 0.012425628490746021, 0.0012757980730384588, 0.018652044236660004, 0.46037358045578003, 0.0011731653939932585, 0.0356101468205452, 0.0008672290714457631, 0.42602404952049255, 0.011040904559195042, 0.3325888514518738, 0.0011094611836597323, 0.0059277210384607315, 0.005157855339348316, 0.5783308744430542, 0.002915301127359271, 0.11838949471712112, 0.006564362905919552, 0.018786592409014702, 0.0015962490579113364, 0.0010127659188583493, 0.0003305127320345491, 0.008159044198691845, 0.0007381098694168031, 0.012757827527821064, 0.00022897482267580926, 0.0035112176556140184, 0.000508417550008744, 0.0003771070914808661, 0.009505725465714931, 0.2697569727897644, 0.02664722129702568, 0.027585593983530998, 0.1516791433095932, 0.044346582144498825, 0.08129969984292984, 0.003254001261666417, 0.08843588829040527, 0.11339638382196426, 0.7613869309425354, 3.277332305908203, 1.467199444770813, 0.24752545356750488], "tokens": [13, 29871, 3855, 29906, 353, 2437, 334, 413, 29889, 657, 29979, 890, 13, 29966, 29989, 13168, 29901, 29896, 29989, 5299, 29989, 13168, 29901, 29900, 29989, 29958, 13, 29871, 3855, 29941, 353, 2437, 334, 413, 29889, 657, 29999, 890, 13, 13, 29871, 849, 10272, 278, 17336, 760, 13, 29871, 3765, 15595, 29906, 353]}
{"line_number": 332, "line_type": "original", "code": "  double beta   = FastMath.sqrt((u2u2 - u1u2 * coeffU) / (v2v2 - v1v2 * coeffV));", "entropy": 0.9243194460868835, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [6.016997337341309, 4.241726875305176, 3.2126388549804688, 3.589858055114746, 0.0005411829333752394, 2.7157015800476074, 0.00018892886873800308, 0.0009417866240255535, 0.2237248420715332, 2.096895217895508, 1.5865051746368408, 1.6871166229248047, 0.10081225633621216, 0.023271769285202026, 0.48172086477279663, 0.47856006026268005, 0.0408131442964077, 0.007620431482791901, 0.7336549162864685, 3.452282428741455, 1.0775878429412842, 0.00011681827891152352, 0.11845197528600693, 1.655621886253357, 0.0748424306511879, 0.6692589521408081, 1.9179376363754272, 0.24193017184734344, 0.030773160979151726, 0.01580016314983368, 0.06556354463100433, 0.0835898369550705, 0.008375046774744987, 0.0018344969721511006, 0.16025914251804352, 0.006493776571005583, 0.01357890572398901, 1.7046782886609435e-05, 0.09037916362285614, 0.048795342445373535], "tokens": [259, 3765, 21762, 259, 353, 23786, 11309, 29889, 3676, 3552, 29884, 29906, 29884, 29906, 448, 318, 29896, 29884, 29906, 334, 1302, 12352, 29965, 29897, 847, 313, 29894, 29906, 29894, 29906, 448, 325, 29896, 29894, 29906, 334, 1302, 12352, 29963, 2483]}
{"line_number": 332, "line_type": "generated", "code": "\n  q3 = inv * k.getZ();\n<|mask:1|>\n  q3 = -inv * k.getZ();\n\n  // compute the scalar part\n  double s = uRef.getNorm", "entropy": 0.2943015992641449, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.1574455052614212, 0.0471801795065403, 0.04133623465895653, 0.028627581894397736, 0.007676269393414259, 0.15487442910671234, 0.0010257464600726962, 0.09160536527633667, 0.0001463782973587513, 0.001602795091457665, 0.0012684165267273784, 0.0033448957838118076, 0.03134601190686226, 0.3771508038043976, 0.002919223625212908, 0.20095135271549225, 0.005889324937015772, 0.420865923166275, 0.009678345173597336, 0.6441223621368408, 0.09420029073953629, 0.8892248868942261, 0.688071608543396, 0.9928674101829529, 0.025505905970931053, 1.065605640411377, 0.7193334698677063, 0.0017216873820871115, 0.02738286554813385, 6.735097849741578e-05, 0.015011323615908623, 0.012902938760817051, 0.0007059465860947967, 0.006851749494671822, 1.0948529243469238, 0.054838184267282486, 0.03335918113589287, 0.1267026960849762, 0.04307207837700844, 0.08888176083564758, 0.0032587540335953236, 0.07884006202220917, 0.08593610674142838, 0.7041787505149841, 1.8243844509124756, 0.7132014036178589, 0.9711987972259521, 0.1018359437584877, 0.0011887634173035622, 1.3973870277404785, 1.2118644714355469, 0.00019143179815728217], "tokens": [13, 29871, 3855, 29941, 353, 2437, 334, 413, 29889, 657, 29999, 890, 13, 29966, 29989, 13168, 29901, 29896, 29989, 29958, 13, 29871, 3855, 29941, 353, 448, 11569, 334, 413, 29889, 657, 29999, 890, 13, 13, 29871, 849, 10272, 278, 17336, 760, 13, 29871, 3765, 269, 353, 318, 5620, 29889, 657, 29940, 555]}
{"line_number": 333, "line_type": "original", "code": "  double alpha  = coeffU - beta * coeffV;", "entropy": 1.932009220123291, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [6.813392639160156, 3.0532970428466797, 2.7328062057495117, 3.573768377304077, 0.0004928089329041541, 3.9594922065734863, 0.00011538793478393927, 0.7191954255104065, 2.1543827056884766, 5.1373701095581055, 0.1251554638147354, 0.6516295671463013, 4.5060096454108134e-05, 0.009270597249269485, 0.04972292110323906], "tokens": [259, 3765, 15595, 29871, 353, 1302, 12352, 29965, 448, 21762, 334, 1302, 12352, 29963, 29936]}
{"line_number": 333, "line_type": "generated", "code": "\n\n  // compute the scalar part\n  double alpha = vRef.dotProduct(uRef);\n  double beta  = vRef.dotProduct(vRef) - alpha * alpha;\n  if (beta == 0) {", "entropy": 0.28826817870140076, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.0325942300260067, 0.9990317225456238, 0.0558755099773407, 0.0684458389878273, 0.12580476701259613, 0.015918200835585594, 0.08009237051010132, 0.0034288919996470213, 0.0708744004368782, 0.0508878156542778, 0.7616739273071289, 2.77005934715271, 0.6464169025421143, 2.0743331909179688, 0.27733027935028076, 0.0017584589077159762, 0.5749936699867249, 0.00010883215873036534, 0.0012032896047458053, 0.12271185219287872, 0.11658832430839539, 0.4253774881362915, 0.005625132936984301, 0.133562833070755, 0.3098859190940857, 0.2729744017124176, 0.08013759553432465, 4.9470632802695036e-05, 0.3395886719226837, 0.3043159246444702, 0.00040570611599832773, 0.14537139236927032, 0.0002366024418734014, 0.00325388228520751, 0.7869255542755127, 0.3154304325580597, 0.37291204929351807, 0.07149121910333633, 0.05077972635626793, 0.009401336312294006, 0.0008037435472942889, 0.008140361867845058, 0.001329015358351171, 0.07315615564584732, 1.3612182140350342, 0.0261305570602417, 0.19925786554813385, 0.7255589962005615, 0.0031478875316679478, 0.00974870752543211, 0.10301807522773743, 0.0005771639989688993], "tokens": [13, 13, 29871, 849, 10272, 278, 17336, 760, 13, 29871, 3765, 15595, 353, 325, 5620, 29889, 6333, 7566, 29898, 29884, 5620, 416, 13, 29871, 3765, 21762, 29871, 353, 325, 5620, 29889, 6333, 7566, 29898, 29894, 5620, 29897, 448, 15595, 334, 15595, 29936, 13, 29871, 565, 313, 3571, 1275, 29871, 29900, 29897, 426]}
{"line_number": 334, "line_type": "original", "code": "  v2 = new Vector3D(alpha, v1, beta, v2);", "entropy": 1.120999813079834, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [6.604869842529297, 5.344699859619141, 1.3698463439941406, 0.2743004858493805, 0.9932072162628174, 0.005622880533337593, 0.0008293526479974389, 0.00031013446277938783, 0.0798942893743515, 1.3510425090789795, 0.2005130499601364, 0.2617896497249603, 2.2810733318328857, 1.9247552156448364, 0.24749548733234406, 0.014399897307157516, 0.10023710131645203, 0.082517109811306, 0.16159118711948395], "tokens": [259, 325, 29906, 353, 716, 16510, 29941, 29928, 29898, 2312, 29892, 325, 29896, 29892, 21762, 29892, 325, 29906, 416]}
{"line_number": 334, "line_type": "generated", "code": "\n\n  // compute the scalar part\n  double inv2 = 1.0 / (uRef.getNorm() + vRef.getNorm());\n  double s    = (uRef.getNorm() - vRef", "entropy": 0.3829284906387329, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.03454431891441345, 0.41494816541671753, 0.08764249086380005, 0.07213139533996582, 0.17253977060317993, 0.01881689392030239, 0.08874901384115219, 0.0038257280830293894, 0.0738997831940651, 0.030613740906119347, 0.618726909160614, 2.191887855529785, 1.5954184532165527, 0.18327005207538605, 0.06797616928815842, 0.9556954503059387, 0.025343434885144234, 0.0011242267210036516, 0.007984387688338757, 0.21083678305149078, 1.3487519025802612, 0.2995227873325348, 0.001665158779360354, 0.6466472148895264, 0.1928064227104187, 2.6464111215318553e-05, 0.2860628664493561, 1.1657688617706299, 0.1553093045949936, 0.0028439811430871487, 9.786603914108127e-05, 0.0005311747081577778, 0.0001501924270996824, 2.1815061700181104e-05, 0.13137243688106537, 0.004010254982858896, 0.021861756220459938, 1.2099130153656006, 1.791508436203003, 0.8242229223251343, 8.451581379631534e-05, 0.983690619468689, 0.26801982522010803, 0.0313028022646904, 0.0011014830088242888, 1.6160774230957031, 1.248362421989441, 2.682172998902388e-05, 0.4350082278251648, 0.36993607878685, 0.018703993409872055, 0.0008968859910964966], "tokens": [13, 13, 29871, 849, 10272, 278, 17336, 760, 13, 29871, 3765, 2437, 29906, 353, 29871, 29896, 29889, 29900, 847, 313, 29884, 5620, 29889, 657, 29940, 555, 580, 718, 325, 5620, 29889, 657, 29940, 555, 3310, 13, 29871, 3765, 269, 1678, 353, 313, 29884, 5620, 29889, 657, 29940, 555, 580, 448, 325, 5620]}
{"line_number": 337, "line_type": "original", "code": "  Vector3D uRef  = u1;", "entropy": 2.396881580352783, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [4.798012733459473, 8.988731384277344, 0.007398231420665979, 0.0033805386628955603, 5.932883262634277, 1.6342202425003052, 4.3668365478515625, 0.0025599587243050337, 0.19355395436286926, 0.3348831832408905, 0.10323657095432281], "tokens": [259, 16510, 29941, 29928, 318, 5620, 29871, 353, 318, 29896, 29936]}
{"line_number": 337, "line_type": "generated", "code": "                   uRef.getX() * q2 - uRef.getY() * q1<|mask:1|><|mask:0|><|mask:1|>);\n  c = vRef.dotProduct(k", "entropy": 0.21298716962337494, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [1.2659697532653809, 0.5688376426696777, 0.04514749348163605, 0.00043561504571698606, 0.0018605556106194854, 0.0008320921915583313, 0.0024323659017682076, 0.00019608005823101848, 0.0011557810939848423, 0.0009098681039176881, 0.0008706831140443683, 0.0035681172739714384, 0.0010893370490521193, 8.904537389753386e-05, 0.00019786784832831472, 9.810443589231e-05, 0.00097977789118886, 0.0002953569928649813, 0.0006323245470412076, 0.0004717191040981561, 0.0005634627304971218, 1.8660998344421387, 0.013190509751439095, 0.4537566900253296, 0.009194650687277317, 0.24661312997341156, 0.008451765403151512, 0.46478134393692017, 0.0024927754420787096, 0.0647132396697998, 0.01831512711942196, 0.28089144825935364, 0.0041033364832401276, 1.4815136194229126, 0.0070499237626791, 0.16853339970111847, 0.008879224769771099, 0.22807341814041138, 0.0027214179281145334, 0.5297445058822632, 0.3402065336704254, 0.022743217647075653, 0.6481715440750122, 1.293074369430542, 0.030312171205878258, 0.8653782606124878, 0.011472562327980995, 0.0009601273923180997, 0.09546787291765213, 0.00018726025882642716, 0.0012175773736089468, 0.01038870308548212], "tokens": [462, 1678, 318, 5620, 29889, 657, 29990, 580, 334, 3855, 29906, 448, 318, 5620, 29889, 657, 29979, 580, 334, 3855, 29896, 29966, 29989, 13168, 29901, 29896, 29989, 5299, 29989, 13168, 29901, 29900, 29989, 5299, 29989, 13168, 29901, 29896, 29989, 29958, 416, 13, 29871, 274, 353, 325, 5620, 29889, 6333, 7566, 29898, 29895]}
{"line_number": 338, "line_type": "original", "code": "  Vector3D vRef  = v1;", "entropy": 1.328729271888733, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [4.530900955200195, 3.9091615676879883, 0.0024672087747603655, 0.00023266946664080024, 0.8848596811294556, 0.418303519487381, 4.054194450378418, 0.00029273517429828644, 0.2306867241859436, 0.3086644411087036, 0.2762577533721924], "tokens": [259, 16510, 29941, 29928, 325, 5620, 29871, 353, 325, 29896, 29936]}
{"line_number": 338, "line_type": "generated", "code": "\n  k = k.crossProduct(vRef);\n<|mask:1|>\n  q0 = k.getX();\n\n  }\n\n  /** Build a rotation from its axis and angle.\n\n   *", "entropy": 0.38966551423072815, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.10696441680192947, 0.5303016901016235, 2.6349587440490723, 0.16836892068386078, 0.678691029548645, 0.003262199927121401, 0.7094070911407471, 0.0002686616498976946, 0.002150248736143112, 0.6585099101066589, 0.09555844962596893, 0.2994786202907562, 0.016345178708434105, 0.3399416506290436, 0.002178916009142995, 0.5612906217575073, 0.009107593446969986, 0.30128541588783264, 0.011837475933134556, 0.4426676630973816, 0.03433286026120186, 0.21407189965248108, 0.9168755412101746, 0.003466313472017646, 0.01834169588983059, 1.869673728942871, 0.0008382858941331506, 0.521257221698761, 0.23602524399757385, 0.4746013283729553, 0.012640593573451042, 0.8433167934417725, 0.917582631111145, 0.7225543260574341, 0.04521232843399048, 0.1579817682504654, 0.14746759831905365, 0.056257255375385284, 0.6746236085891724, 0.15976199507713318, 0.13470786809921265, 0.5587765574455261, 1.0374584197998047, 1.1467795372009277, 0.14510942995548248, 0.5858185291290283, 0.1217750832438469, 0.0024758896324783564, 0.5071555376052856, 0.03256561607122421, 0.0008599635912105441], "tokens": [13, 29871, 413, 353, 413, 29889, 19128, 7566, 29898, 29894, 5620, 416, 13, 29966, 29989, 13168, 29901, 29896, 29989, 29958, 13, 29871, 3855, 29900, 353, 413, 29889, 657, 29990, 890, 13, 13, 29871, 500, 13, 13, 29871, 7762, 8878, 263, 13733, 515, 967, 9685, 322, 10696, 29889, 13, 13, 259, 334]}
{"line_number": 339, "line_type": "original", "code": "  Vector3D v1Su1 = v1.subtract(u1);", "entropy": 0.7031230926513672, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [5.997498989105225, 4.497586727142334, 0.004446856677532196, 0.0002232540718978271, 1.0744181871414185, 1.1918351650238037, 0.31431055068969727, 0.16907534003257751, 0.06484608352184296, 0.026002567261457443, 0.002723082434386015, 0.006299993954598904, 0.003325172932818532, 0.00010847456724150106, 5.6265202147187665e-05, 0.0006715188501402736, 0.0006432848167605698, 0.0017116909148171544, 0.0035551695618778467], "tokens": [259, 16510, 29941, 29928, 325, 29896, 5091, 29896, 353, 325, 29896, 29889, 1491, 29873, 1461, 29898, 29884, 29896, 416]}
{"line_number": 339, "line_type": "generated", "code": "\n  }\n\n  /** Build a rotation from its axis and angle.\n\n   * @param axis axis of the rotation\n   * @param angle angle of the rotation (magnitude)\n   * @exception IllegalArgumentException if", "entropy": 0.31556811928749084, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.04435411095619202, 0.5333201885223389, 1.85234797000885, 0.1740715503692627, 0.35819971561431885, 0.16299934685230255, 0.09226236492395401, 0.6611738204956055, 0.1908821314573288, 0.15579265356063843, 0.49291902780532837, 0.9384638071060181, 1.078191876411438, 0.15174223482608795, 0.5510522127151489, 0.11522136628627777, 0.002662686863914132, 0.6732131242752075, 0.041619978845119476, 0.0013321106089279056, 0.7954955101013184, 0.0015675650211051106, 0.26034829020500183, 0.47573161125183105, 0.13327188789844513, 0.06079525873064995, 0.005033558700233698, 0.2997998297214508, 0.001785828499123454, 0.00017867876158561558, 0.003980690147727728, 0.00012087091454304755, 0.2084091305732727, 0.3854302763938904, 0.3342725336551666, 0.011871756985783577, 0.0006145734223537147, 1.0877206325531006, 1.7938038110733032, 0.3100467920303345, 0.001215077005326748, 1.277976632118225, 0.029224352911114693, 0.02219025231897831, 0.2555936574935913, 0.02586294710636139, 0.20949696004390717, 0.1417371928691864, 5.602820692729438e-06, 0.0011360150529071689, 0.0002828436263371259, 0.002718208124861121], "tokens": [13, 29871, 500, 13, 13, 29871, 7762, 8878, 263, 13733, 515, 967, 9685, 322, 10696, 29889, 13, 13, 259, 334, 732, 3207, 9685, 9685, 310, 278, 13733, 13, 259, 334, 732, 3207, 10696, 10696, 310, 278, 13733, 313, 29885, 4211, 4279, 29897, 13, 259, 334, 732, 11739, 1720, 12018, 15730, 2451, 565]}
{"line_number": 340, "line_type": "original", "code": "  Vector3D v2Su2 = v2.subtract(u2);", "entropy": 0.6093150973320007, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [5.510843276977539, 3.836315393447876, 0.003871447406709194, 0.00017891713650897145, 1.1574485301971436, 0.7179125547409058, 0.2350417673587799, 0.018314892426133156, 0.055295903235673904, 0.017254481092095375, 0.005199244245886803, 0.004042312037199736, 0.002659238874912262, 0.00011467275908216834, 3.433168603805825e-05, 0.000708090839907527, 0.004408165812492371, 0.0031073640566319227, 0.004235820844769478], "tokens": [259, 16510, 29941, 29928, 325, 29906, 5091, 29906, 353, 325, 29906, 29889, 1491, 29873, 1461, 29898, 29884, 29906, 416]}
{"line_number": 340, "line_type": "generated", "code": "\n  // compute the vectorial part\n  c = FastMath.sqrt(c);\n  double inv = 1.0 / (c + c);\n  q1 = inv * k.getX();\n  q2 = inv", "entropy": 0.08145982027053833, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.07323072105646133, 0.45163917541503906, 0.6599187254905701, 1.2842285633087158, 0.04180200397968292, 0.11219225823879242, 0.003789269831031561, 0.006983514875173569, 0.08264070004224777, 0.044862471520900726, 0.6334556341171265, 0.021224629133939743, 0.21588844060897827, 2.610649426060263e-05, 3.766942609217949e-05, 0.009015566669404507, 0.025352034717798233, 0.07128620892763138, 0.04762425273656845, 0.001039560534991324, 0.010384456254541874, 0.11086675524711609, 0.04427359625697136, 0.02143467776477337, 0.004796190652996302, 0.0066682202741503716, 0.0057165236212313175, 0.0005676327273249626, 0.0014477020595222712, 0.009899449534714222, 0.01891387067735195, 0.0032914294861257076, 0.0013949673157185316, 0.0007655074005015194, 0.0008972433279268444, 0.006420698016881943, 0.037839531898498535, 0.06530505418777466, 0.003430792596191168, 0.03754541650414467, 0.0008625839254818857, 0.025889895856380463, 0.0038194339722394943, 0.006032947916537523, 0.014282384887337685, 0.0004807746736332774, 0.000922969076782465, 0.0006417360855266452, 0.0005127069307491183, 0.003174030687659979, 5.6265202147187665e-05, 0.0011375630274415016], "tokens": [13, 29871, 849, 10272, 278, 4608, 616, 760, 13, 29871, 274, 353, 23786, 11309, 29889, 3676, 29898, 29883, 416, 13, 29871, 3765, 2437, 353, 29871, 29896, 29889, 29900, 847, 313, 29883, 718, 274, 416, 13, 29871, 3855, 29896, 353, 2437, 334, 413, 29889, 657, 29990, 890, 13, 29871, 3855, 29906, 353, 2437]}
{"line_number": 341, "line_type": "original", "code": "  Vector3D k     = v1Su1.crossProduct(v2Su2);", "entropy": 0.9906843304634094, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [6.666828632354736, 5.022366046905518, 0.0040394626557827, 0.0002113357331836596, 2.091022491455078, 3.5362586975097656, 0.0009689403814263642, 1.5171852111816406, 0.2448897659778595, 0.6368432641029358, 0.013686739839613438, 0.008318774402141571, 0.009263629093766212, 6.0437283536884934e-05, 0.0007068996201269329, 0.028456348925828934, 0.001711214892566204, 0.0033983595203608274, 0.00024720950750634074, 0.027224062010645866], "tokens": [259, 16510, 29941, 29928, 413, 268, 353, 325, 29896, 5091, 29896, 29889, 19128, 7566, 29898, 29894, 29906, 5091, 29906, 416]}
{"line_number": 341, "line_type": "generated", "code": "\n\n  /** Build a rotation from an axis and an angle.\n   * @param axis axis of the rotation\n   * @param angle angle of the rotation\n   * @exception IllegalArgumentException if the norm of the axis is zero\n", "entropy": 0.18739064037799835, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.03401593491435051, 0.5113054513931274, 0.10601577162742615, 0.041130900382995605, 0.5233277082443237, 0.1770167499780655, 0.1782090812921524, 0.4926674962043762, 1.6555607318878174, 0.22950762510299683, 0.20120824873447418, 0.035154834389686584, 0.01116987969726324, 0.038676176220178604, 0.0027228444814682007, 0.776172399520874, 0.003606365295127034, 0.34456121921539307, 0.0012966329231858253, 0.3060150742530823, 0.32322898507118225, 0.21092772483825684, 0.10956962406635284, 0.0036208562087267637, 0.14754268527030945, 0.0013715155655518174, 8.701899787411094e-05, 0.0003819928097072989, 0.00010024998482549563, 0.1743488758802414, 0.2857375741004944, 0.17623935639858246, 0.008420203812420368, 0.0005980133428238332, 0.5163143873214722, 0.01827404275536537, 0.34407925605773926, 0.03622691333293915, 0.20001649856567383, 0.17105045914649963, 8.583032467868179e-06, 0.001191978226415813, 0.0003274143091402948, 0.0033049744088202715, 0.3627243638038635, 0.1927339732646942, 0.00801501702517271, 0.024918537586927414, 0.1890154927968979, 0.1156444177031517, 0.4077919125556946, 0.04115915670990944], "tokens": [13, 13, 29871, 7762, 8878, 263, 13733, 515, 385, 9685, 322, 385, 10696, 29889, 13, 259, 334, 732, 3207, 9685, 9685, 310, 278, 13733, 13, 259, 334, 732, 3207, 10696, 10696, 310, 278, 13733, 13, 259, 334, 732, 11739, 1720, 12018, 15730, 2451, 565, 278, 6056, 310, 278, 9685, 338, 5225, 13]}
{"line_number": 342, "line_type": "original", "code": "  Vector3D u3    = u1.crossProduct(u2);", "entropy": 1.1943879127502441, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [6.063929080963135, 6.084569454193115, 0.005687720142304897, 0.000533795915544033, 0.6759464144706726, 1.5663394927978516, 3.4128434658050537, 0.0006719953380525112, 1.6493089199066162, 0.6855675578117371, 0.024996671825647354, 0.07860217243432999, 6.997340824455023e-05, 0.0008197046699933708, 0.00490592559799552, 0.0007913556764833629, 0.04900864511728287], "tokens": [259, 16510, 29941, 29928, 318, 29941, 1678, 353, 318, 29896, 29889, 19128, 7566, 29898, 29884, 29906, 416]}
{"line_number": 342, "line_type": "generated", "code": "\n  /** Build a rotation from a rotation axis and an angle.\n\n   *", "entropy": 0.40697064995765686, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.06397224217653275, 0.4765542149543762, 0.09909183531999588, 0.32612109184265137, 0.3410723805427551, 0.14880672097206116, 0.5456485152244568, 1.7939327955245972, 2.2443504333496094, 0.2531633675098419, 0.3399355411529541, 0.027287516742944717, 0.011732622049748898, 0.039115216583013535, 0.002837562235072255, 0.5588821172714233, 0.05138607695698738, 0.00158184755127877], "tokens": [13, 29871, 7762, 8878, 263, 13733, 515, 263, 13733, 9685, 322, 385, 10696, 29889, 13, 13, 259, 334]}
{"line_number": 343, "line_type": "original", "code": "  double c       = k.dotProduct(u3);", "entropy": 2.5333003997802734, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [4.492537975311279, 10.324384689331055, 3.210925579071045, 6.0751261711120605, 0.010716980323195457, 4.924907684326172, 0.09616824984550476, 0.6377156376838684, 0.0005951540661044419, 0.00357512547634542, 0.5264930129051208, 2.4092016220092773, 0.2205551713705063], "tokens": [259, 3765, 274, 539, 353, 413, 29889, 6333, 7566, 29898, 29884, 29941, 416]}
{"line_number": 343, "line_type": "generated", "code": "\n   * @param u vector to be transformed into v by the built rotation\n   * @param v desired image of u by the rotation\n   * @exception IllegalArgumentException if the norm of one of the vectors is zero\n   */\n", "entropy": 0.243622288107872, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.07841482013463974, 0.3884687125682831, 0.004707444459199905, 1.0717971324920654, 0.004451722372323275, 0.2911478579044342, 1.8083292245864868, 0.10652610659599304, 0.7942719459533691, 0.03065466694533825, 1.5539577007293701, 0.032298337668180466, 1.2527145147323608, 0.138665109872818, 1.6766111850738525, 0.006557967979460955, 0.024752600118517876, 0.16402892768383026, 0.0009420248097740114, 0.007489814888685942, 0.0013767535565420985, 0.00587060023099184, 0.24195675551891327, 0.01072759460657835, 0.2988816499710083, 0.011061537079513073, 0.037925731390714645, 0.0035223839804530144, 0.4324415326118469, 0.013072149828076363, 0.17484642565250397, 0.027516590431332588, 0.01483656745404005, 0.39132416248321533, 0.04633844271302223, 1.7881233361549675e-05, 0.0006742588011547923, 0.0001486429391661659, 0.003827153006568551, 0.25028833746910095, 0.0327724888920784, 0.022226978093385696, 0.7697293758392334, 0.027957890182733536, 0.004470829851925373, 0.031135261058807373, 0.029979506507515907, 0.028780486434698105, 0.006663483567535877, 0.21730992197990417, 0.0923810601234436, 0.00150781380943954], "tokens": [13, 259, 334, 732, 3207, 318, 4608, 304, 367, 27615, 964, 325, 491, 278, 4240, 13733, 13, 259, 334, 732, 3207, 325, 7429, 1967, 310, 318, 491, 278, 13733, 13, 259, 334, 732, 11739, 1720, 12018, 15730, 2451, 565, 278, 6056, 310, 697, 310, 278, 12047, 338, 5225, 13, 259, 3776, 13]}
