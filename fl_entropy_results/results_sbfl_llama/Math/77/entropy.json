{"line_number": 709, "line_type": "original", "code": "        double sum = 0;", "entropy": 1.2817119359970093, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [6.0968756675720215, 2.0988705158233643, 0.6997566819190979, 0.04018821194767952, 0.01664852723479271, 0.0004190520558040589, 0.019224626943469048], "tokens": [308, 3765, 2533, 353, 29871, 29900, 29936]}
{"line_number": 709, "line_type": "generated", "code": "\n     * @param v Vector to which distance is requested\n     * @return the distance between instance and v\n     * @exception IllegalArgumentException if v is not the same size as this\n     */\n    public double getDistance(Array", "entropy": 0.06497542560100555, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.10504090040922165, 0.3914188742637634, 0.027360478416085243, 0.34772899746894836, 0.01672203466296196, 0.006658865138888359, 0.17419345676898956, 0.032097022980451584, 0.12602391839027405, 0.0031773580703884363, 0.1584855020046234, 0.007194326724857092, 0.3355524241924286, 0.06794030219316483, 0.0012660353677347302, 0.003513474715873599, 0.02681864984333515, 0.19242306053638458, 0.0096326544880867, 0.02453254535794258, 0.19624216854572296, 0.0001892864383989945, 0.018205448985099792, 0.12036120146512985, 0.049725644290447235, 0.03536554425954819, 0.0023864619433879852, 0.09819371998310089, 0.24632999300956726, 2.932505594799295e-05, 7.152301259338856e-05, 0.00018749863374978304, 0.0020582936704158783, 0.1192961111664772, 0.010330184362828732, 0.0024882566649466753, 0.008318656124174595, 0.011295890435576439, 0.018409110605716705, 0.022624468430876732, 0.0654207393527031, 0.006459073629230261, 0.11747367680072784, 0.078933484852314, 0.0014435357879847288, 0.051932528614997864, 0.019614310935139656, 0.0015669699059799314, 0.00448732590302825, 0.00252832961268723, 0.0019496734021231532, 0.0070226979441940784], "tokens": [13, 268, 334, 732, 3207, 325, 16510, 304, 607, 5418, 338, 13877, 13, 268, 334, 732, 2457, 278, 5418, 1546, 2777, 322, 325, 13, 268, 334, 732, 11739, 1720, 12018, 15730, 2451, 565, 325, 338, 451, 278, 1021, 2159, 408, 445, 13, 268, 3776, 13, 1678, 970, 3765, 679, 27469, 29898, 2588]}
{"line_number": 710, "line_type": "original", "code": "        for (double a : data) {", "entropy": 1.8180876970291138, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [5.766511917114258, 6.00998067855835, 0.21255618333816528, 2.8487162590026855, 0.5211467742919922, 0.3495938777923584, 0.6286579370498657, 0.01711363159120083, 0.008512048050761223], "tokens": [308, 363, 313, 8896, 263, 584, 848, 29897, 426]}
{"line_number": 710, "line_type": "generated", "code": "\n     * @return distance between instance and v according to L<sub>2</sub> norm\n     * @exception IllegalArgumentException if v is not the same size as this\n     */\n    public double getDistance(ArrayRealVector", "entropy": 0.09766743332147598, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.26227766275405884, 0.36860695481300354, 0.049195460975170135, 0.012713219039142132, 0.08853310346603394, 0.351755827665329, 0.009684012271463871, 0.16261786222457886, 0.0004493180604185909, 0.024538593366742134, 1.2954449653625488, 0.03645486757159233, 0.7828943729400635, 0.022889915853738785, 0.0007426364463753998, 0.0011338717304170132, 0.014352776110172272, 0.0019221893744543195, 0.0004239375703036785, 0.0003955773718189448, 0.011971177533268929, 0.2906588613986969, 0.06998669356107712, 0.0722324326634407, 0.018526488915085793, 0.16329677402973175, 0.36204689741134644, 3.4450891689630225e-05, 6.83045873302035e-05, 0.0001512651506345719, 0.002518341178074479, 0.1607227474451065, 0.030860895290970802, 0.0030534095130860806, 0.00860033929347992, 0.007580325473099947, 0.004317605402320623, 0.0111839072778821, 0.04504117742180824, 0.01001700572669506, 0.15760192275047302, 0.08720120042562485, 0.0013467537937685847, 0.038409266620874405, 0.019266489893198013, 0.001291870721615851, 0.003788794856518507, 0.0017163321608677506, 0.0017792837461456656, 0.0060233501717448235, 0.00032908268622122705, 5.531158240046352e-05], "tokens": [13, 268, 334, 732, 2457, 5418, 1546, 2777, 322, 325, 5034, 304, 365, 29966, 1491, 29958, 29906, 829, 1491, 29958, 6056, 13, 268, 334, 732, 11739, 1720, 12018, 15730, 2451, 565, 325, 338, 451, 278, 1021, 2159, 408, 445, 13, 268, 3776, 13, 1678, 970, 3765, 679, 27469, 29898, 2588, 21713, 12877]}
{"line_number": 711, "line_type": "original", "code": "            sum += Math.abs(a);", "entropy": 2.481083631515503, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [7.06751823425293, 6.588197231292725, 0.23420466482639313, 1.0864357948303223, 0.0017034795600920916, 0.14296723902225494, 0.01063630636781454, 3.374316930770874, 3.8237719535827637], "tokens": [632, 2533, 4619, 5792, 29889, 6897, 29898, 29874, 416]}
{"line_number": 711, "line_type": "generated", "code": "\n     * @exception IllegalArgumentException if v is not the same size as this\n     */\n    public double getDistance(ArrayRealVector v)\n        throws IllegalArgumentException {\n        return getDistance(v.data);\n", "entropy": 0.07160196453332901, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.1462872475385666, 0.5445278882980347, 0.718254566192627, 0.034556757658720016, 0.3831706643104553, 0.20011605322360992, 3.611976353568025e-05, 0.00014685506175737828, 0.00021228920377325267, 0.006413828115910292, 0.6959512233734131, 0.03953389450907707, 0.008626103401184082, 0.020122786983847618, 0.020594218745827675, 0.013399076648056507, 0.02399849146604538, 0.07726093381643295, 0.06508883088827133, 0.0733623281121254, 0.07385516166687012, 0.004041480831801891, 0.02458605170249939, 0.01960975117981434, 0.0012892514932900667, 0.004364844877272844, 0.0016694430960342288, 0.0013762774178758264, 0.004252083133906126, 0.00029988560709170997, 3.635817120084539e-05, 0.0007844470092095435, 0.0014569868799299002, 0.03578660264611244, 0.025687403976917267, 0.00034588552080094814, 0.0006108802044764161, 2.9802276912960224e-06, 5.709961988031864e-05, 4.9828242481453344e-05, 0.0034722534473985434, 0.001026341924443841, 0.04651995748281479, 0.2172497808933258, 0.1647014170885086, 0.0029443029779940844, 0.005327077116817236, 0.0014992436626926064, 0.0005508335889317095, 0.005865622777491808, 0.00043275527423247695, 0.0018893502419814467], "tokens": [13, 268, 334, 732, 11739, 1720, 12018, 15730, 2451, 565, 325, 338, 451, 278, 1021, 2159, 408, 445, 13, 268, 3776, 13, 1678, 970, 3765, 679, 27469, 29898, 2588, 21713, 12877, 325, 29897, 13, 4706, 8026, 1720, 12018, 15730, 2451, 426, 13, 4706, 736, 679, 27469, 29898, 29894, 29889, 1272, 416, 13]}
{"line_number": 713, "line_type": "original", "code": "        return sum;", "entropy": 5.112103462219238, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [6.447057247161865, 4.795433521270752, 8.676318168640137, 0.5296043157577515], "tokens": [308, 736, 2533, 29936]}
{"line_number": 713, "line_type": "generated", "code": "\n    }\n\n    /** {@inheritDoc} */\n    public double getDistance(ArrayRealVector v)\n        throws IllegalArgumentException {\n        checkVectorDimensions(v.data.length);\n        double sum = ", "entropy": 0.10249955207109451, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.15586619079113007, 0.784704327583313, 0.18787866830825806, 0.004533607978373766, 0.0702589750289917, 0.08594387769699097, 0.014053667895495892, 0.5070003867149353, 0.00019405389321036637, 1.3351351299206726e-05, 0.00013159839727450162, 0.00024291902082040906, 0.007309597916901112, 0.0019367048516869545, 0.01939323917031288, 0.34820544719696045, 0.41820356249809265, 0.05486143007874489, 1.1884806156158447, 0.34369993209838867, 0.02143782749772072, 0.0005639393348246813, 1.966933996300213e-05, 0.0012325793504714966, 0.0007560970261693001, 0.03804611787199974, 0.02323729358613491, 0.0004409771354403347, 0.001258772797882557, 1.0132738680113107e-05, 6.818538531661034e-05, 4.7801782784517854e-05, 0.005223199259489775, 0.001401276676915586, 0.09628258645534515, 0.35498133301734924, 0.000552263343706727, 5.602820692729438e-06, 4.303362584323622e-05, 0.00031573555315844715, 0.0011086276499554515, 0.1513744592666626, 0.19756817817687988, 0.008802066557109356, 0.00012730741582345217, 0.0006671110168099403, 0.002045564353466034, 0.06350807100534439, 0.13560886681079865, 0.024449024349451065, 0.004849813878536224, 0.0010307481279596686], "tokens": [13, 1678, 500, 13, 13, 1678, 7762, 26633, 262, 27069, 14526, 29913, 3776, 13, 1678, 970, 3765, 679, 27469, 29898, 2588, 21713, 12877, 325, 29897, 13, 4706, 8026, 1720, 12018, 15730, 2451, 426, 13, 4706, 1423, 12877, 16142, 5580, 29898, 29894, 29889, 1272, 29889, 2848, 416, 13, 4706, 3765, 2533, 353, 29871]}
{"line_number": 719, "line_type": "original", "code": "        double max = 0;", "entropy": 1.6744078397750854, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [6.133028984069824, 1.6554495096206665, 3.6618704795837402, 0.06013375148177147, 0.1563897430896759, 0.003757798345759511, 0.050224028527736664], "tokens": [308, 3765, 4236, 353, 29871, 29900, 29936]}
{"line_number": 719, "line_type": "generated", "code": "\n        checkVectorDimensions(v.data.length);\n        double sum = 0;\n        for (int i = 0; i", "entropy": 0.08392011374235153, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.05490024760365486, 0.10094373673200607, 1.0312788486480713, 0.001023483811877668, 4.768360213347478e-06, 3.9457496313843876e-05, 0.0012957995058968663, 0.005587554536759853, 0.11156155169010162, 0.1531873494386673, 0.023594563826918602, 0.00017045476124621928, 0.0015357855008915067, 0.007437161169946194, 0.5117440223693848, 0.24729135632514954, 0.09708462655544281, 0.01740304008126259, 0.005170544609427452, 0.00031609306461177766, 0.011598181910812855, 0.0026104918215423822, 0.16541852056980133, 0.10318969935178757, 0.0013513966696336865, 0.0024328415747731924, 0.005163310561329126, 0.002603476867079735, 0.017004994675517082, 0.00010322991875000298, 0.0015749443555250764, 0.0008222059695981443], "tokens": [13, 4706, 1423, 12877, 16142, 5580, 29898, 29894, 29889, 1272, 29889, 2848, 416, 13, 4706, 3765, 2533, 353, 29871, 29900, 29936, 13, 4706, 363, 313, 524, 474, 353, 29871, 29900, 29936, 474]}
{"line_number": 720, "line_type": "original", "code": "        for (double a : data) {", "entropy": 1.960244059562683, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [6.582137584686279, 5.554916858673096, 0.006698179058730602, 4.488689422607422, 0.347940057516098, 0.1703605204820633, 0.4710160493850708, 0.013089681044220924, 0.007347584702074528], "tokens": [308, 363, 313, 8896, 263, 584, 848, 29897, 426]}
{"line_number": 720, "line_type": "generated", "code": "\n        double sum = 0;\n        for (int i = 0; i", "entropy": 0.2117111086845398, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.09878852218389511, 0.876534640789032, 1.8881789445877075, 0.7735121846199036, 0.03247872367501259, 0.02512502111494541, 0.0005285535007715225, 0.029562709853053093, 0.005659627728164196, 0.08007773756980896, 0.14702342450618744, 0.0018706695409491658, 0.007216340862214565, 0.008998909033834934, 0.003822996746748686, 0.035881489515304565, 0.00042250767000950873, 0.005597986746579409, 0.0012300790986046195], "tokens": [13, 4706, 3765, 2533, 353, 29871, 29900, 29936, 13, 4706, 363, 313, 524, 474, 353, 29871, 29900, 29936, 474]}
{"line_number": 721, "line_type": "original", "code": "            max += Math.max(max, Math.abs(a));", "entropy": 1.9405877590179443, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [10.636702537536621, 5.333480358123779, 2.077058792114258, 0.5741305351257324, 0.0009204680100083351, 2.9474446773529053, 0.04932006075978279, 4.787426471710205, 0.07368984073400497, 0.2174762338399887, 0.0015418557450175285, 0.01204102486371994, 0.006984225008636713, 2.0177905559539795, 0.3728061318397522], "tokens": [632, 4236, 4619, 5792, 29889, 3317, 29898, 3317, 29892, 5792, 29889, 6897, 29898, 29874, 2483]}
{"line_number": 721, "line_type": "generated", "code": "\n    /**\n     * Distance between two vectors.\n     *", "entropy": 0.1573820412158966, "is_bug_line": true, "sus_score": 0.7071067811865475, "per_token_entropy": [0.04295297712087631, 0.46804079413414, 0.03974081948399544, 0.5767163038253784, 0.004996669944375753, 0.00014065706636756659, 0.9986560344696045, 0.0012952042743563652, 0.03148937225341797, 0.1146344542503357, 0.006633286364376545, 0.07245620340108871, 0.0005659647285938263, 0.0021458473056554794, 0.0002658013836480677], "tokens": [13, 1678, 7762, 13, 268, 334, 6652, 749, 1546, 1023, 12047, 29889, 13, 268, 334]}
{"line_number": 723, "line_type": "original", "code": "        return max;", "entropy": 5.0533576011657715, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [8.738039016723633, 4.834797382354736, 6.402648448944092, 0.23794512450695038], "tokens": [308, 736, 4236, 29936]}
{"line_number": 723, "line_type": "generated", "code": "\n    public double getL1Distance(RealVector v)\n        throws IllegalArgumentException {\n        if (v instanceof ArrayRealVector) {\n            return getL1Distance((ArrayRealVector) v);\n        } else {\n", "entropy": 0.061022914946079254, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.07397142052650452, 0.4123596251010895, 1.0421664714813232, 0.15888860821723938, 0.026220325380563736, 0.1090569943189621, 0.03437789902091026, 0.006122168619185686, 0.0038338033482432365, 0.5840020775794983, 0.0002915434306487441, 0.0021673778537660837, 0.002166188322007656, 0.05126116797327995, 0.03962361440062523, 0.0009773960337042809, 0.0010297955013811588, 3.9934315282152966e-05, 0.0001399419124936685, 0.00016902448260225356, 0.007384149823337793, 0.0024835001677274704, 0.05237053707242012, 0.44258204102516174, 0.0016945539973676205, 0.0019155264599248767, 0.001303180935792625, 0.0031919742468744516, 0.0006997520686127245, 7.366862701019272e-05, 0.0016931259306147695, 0.00044490929576568305, 0.0006025406182743609, 0.011565777473151684, 0.016490239650011063, 0.0058862436562776566, 0.010189891792833805, 0.0012496052077040076, 0.00031668893643654883, 0.0018020119750872254, 0.001769763883203268, 0.00027724236133508384, 8.666139910928905e-05, 0.0004037995240651071, 0.009205044247210026, 0.0005411829333752394, 0.0009958551963791251, 0.009504781104624271, 0.0005603650351986289, 0.033406566828489304, 0.0027598170563578606, 0.0008753282018005848], "tokens": [13, 1678, 970, 3765, 679, 29931, 29896, 27469, 29898, 21713, 12877, 325, 29897, 13, 4706, 8026, 1720, 12018, 15730, 2451, 426, 13, 4706, 565, 313, 29894, 28919, 4398, 21713, 12877, 29897, 426, 13, 9651, 736, 679, 29931, 29896, 27469, 3552, 2588, 21713, 12877, 29897, 325, 416, 13, 4706, 500, 1683, 426, 13]}
{"line_number": 699, "line_type": "original", "code": "        double sum = 0;", "entropy": 2.1829984188079834, "is_bug_line": false, "sus_score": 0.20412414523193154, "per_token_entropy": [6.571989059448242, 5.054803848266602, 3.2074077129364014, 0.3308333456516266, 0.0897531807422638, 0.0020787552930414677, 0.024121267721056938], "tokens": [308, 3765, 2533, 353, 29871, 29900, 29936]}
{"line_number": 699, "line_type": "generated", "code": "\n            sum += delta * delta;\n        }\n        return Math.sqrt(sum);\n    }\n\n    /**\n     * Get the distance between instance and v.\n     * @param v vector with which distance should be computed\n", "entropy": 0.12047907710075378, "is_bug_line": false, "sus_score": 0.20412414523193154, "per_token_entropy": [0.3088610768318176, 0.23925621807575226, 0.03955589607357979, 0.008069886825978756, 0.13260558247566223, 0.013197686523199081, 0.0036118291318416595, 0.006886675488203764, 0.0067804730497300625, 0.5988979339599609, 0.008995719254016876, 0.010159565135836601, 0.11756610125303268, 0.00472500454634428, 0.03912220895290375, 0.0003095386200584471, 0.0006082591717131436, 0.0002112165529979393, 0.0016957441112026572, 0.0008233971311710775, 0.0021318108774721622, 0.03678768500685692, 0.0005777596961706877, 0.000686767278239131, 0.00913582555949688, 0.012738524936139584, 0.0023252135142683983, 0.19142970442771912, 0.0015655416063964367, 0.00018368464952800423, 1.8178949356079102, 0.008675267919898033, 0.07291513681411743, 0.46754229068756104, 0.17417722940444946, 0.005432604346424341, 0.38118976354599, 0.05119287222623825, 0.0012303171679377556, 0.0029605866875499487, 0.0001705739414319396, 0.09711578488349915, 0.0006935574929229915, 0.0015484021278098226, 0.6983516216278076, 0.0887083187699318, 0.0014680571621283889, 0.022328872233629227, 0.532683789730072, 0.0013555632904171944, 0.024371661245822906, 0.013401899486780167], "tokens": [13, 9651, 2533, 4619, 19471, 334, 19471, 29936, 13, 4706, 500, 13, 4706, 736, 5792, 29889, 3676, 29898, 2083, 416, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 3617, 278, 5418, 1546, 2777, 322, 325, 29889, 13, 268, 334, 732, 3207, 325, 4608, 411, 607, 5418, 881, 367, 15712, 13]}
{"line_number": 700, "line_type": "original", "code": "        for (double a : data) {", "entropy": 1.7196018695831299, "is_bug_line": false, "sus_score": 0.20412414523193154, "per_token_entropy": [6.584953308105469, 5.425872802734375, 0.0387604683637619, 2.4106976985931396, 0.41137635707855225, 0.18461602926254272, 0.3795328438282013, 0.027631979435682297, 0.012975192628800869], "tokens": [308, 363, 313, 8896, 263, 584, 848, 29897, 426]}
{"line_number": 700, "line_type": "generated", "code": "\n            sum += a * a;\n        }\n        return Math.sqrt(sum);\n    }\n\n    /**\n     * Compute the distance to another vector.\n     * @param v vector with which distance should be computed\n", "entropy": 0.11325086653232574, "is_bug_line": false, "sus_score": 0.20412414523193154, "per_token_entropy": [0.17882055044174194, 1.063879132270813, 0.3666551113128662, 0.05213509500026703, 0.987394392490387, 0.05509916692972183, 0.05812714248895645, 0.005938623566180468, 0.006724584847688675, 0.12257783114910126, 0.003736658487468958, 0.007025538943707943, 0.028889937326312065, 0.0021476317197084427, 0.006648444104939699, 0.00021741411183029413, 0.00048685140791349113, 0.00012373158824630082, 0.0006156456656754017, 0.0007269124034792185, 0.0005944392178207636, 0.015303454361855984, 0.00044288364006206393, 0.0003700763627421111, 0.007047438062727451, 0.010911324061453342, 0.0018952994141727686, 0.20913735032081604, 0.0011310139670968056, 0.0002076410164590925, 0.5266038179397583, 0.022590553387999535, 0.005091439001262188, 0.10406593233346939, 0.1734926402568817, 0.13971972465515137, 0.33830976486206055, 0.016772208735346794, 0.0006392342620529234, 0.0025197681970894337, 0.00011276562872808427, 0.07763361185789108, 0.0008201810996979475, 0.002089461777359247, 0.47045281529426575, 0.5639190673828125, 0.0006987990345805883, 0.011996973305940628, 0.21444763243198395, 0.0009812070056796074, 0.014385678805410862, 0.006690482143312693], "tokens": [13, 9651, 2533, 4619, 263, 334, 263, 29936, 13, 4706, 500, 13, 4706, 736, 5792, 29889, 3676, 29898, 2083, 416, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 11796, 29872, 278, 5418, 304, 1790, 4608, 29889, 13, 268, 334, 732, 3207, 325, 4608, 411, 607, 5418, 881, 367, 15712, 13]}
{"line_number": 701, "line_type": "original", "code": "            sum += a * a;", "entropy": 2.8366219997406006, "is_bug_line": false, "sus_score": 0.20412414523193154, "per_token_entropy": [8.484122276306152, 3.303507089614868, 1.54836106300354, 5.987751483917236, 0.41109418869018555, 0.07610593736171722, 0.045410335063934326], "tokens": [632, 2533, 4619, 263, 334, 263, 29936]}
{"line_number": 701, "line_type": "generated", "code": "\n        return Math.sqrt(sum);\n    }\n\n    /**\n     * Compute the distance to another vector.\n     * @param v vector to which distance should be computed\n     * @return the distance to the v\n    ", "entropy": 0.17197664082050323, "is_bug_line": false, "sus_score": 0.20412414523193154, "per_token_entropy": [0.12469884753227234, 0.29454293847084045, 0.060780562460422516, 0.4144759476184845, 0.0013238961109891534, 0.008082658052444458, 0.0008038626983761787, 0.0033201829064637423, 0.004690240137279034, 0.006077737081795931, 0.07423442602157593, 0.0009914488764479756, 0.0009167758980765939, 0.0076345098204910755, 0.013899670913815498, 0.002840415108948946, 0.23261810839176178, 0.0017561980057507753, 0.0004752936656586826, 0.5605118274688721, 0.021568618714809418, 0.0065045543015003204, 0.09816821664571762, 0.21749292314052582, 0.13343922793865204, 0.3305279314517975, 0.017566220834851265, 0.0006766413571313024, 0.004519011825323105, 0.00013636612857226282, 0.08953586220741272, 0.0008208957733586431, 0.002500504720956087, 0.47711262106895447, 1.0584694147109985, 0.26771286129951477, 0.0026915771886706352, 0.3780701160430908, 0.0008244690834544599, 0.16227129101753235, 0.005439125467091799, 0.009519068524241447, 0.00016366096679121256, 0.0005455912905745208, 0.004686087369918823, 0.39733386039733887, 0.016587795689702034, 0.7207871675491333, 0.27220144867897034, 2.054880142211914, 0.36215221881866455, 0.013204745016992092], "tokens": [13, 4706, 736, 5792, 29889, 3676, 29898, 2083, 416, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 11796, 29872, 278, 5418, 304, 1790, 4608, 29889, 13, 268, 334, 732, 3207, 325, 4608, 304, 607, 5418, 881, 367, 15712, 13, 268, 334, 732, 2457, 278, 5418, 304, 278, 325, 13, 268]}
{"line_number": 703, "line_type": "original", "code": "        return Math.sqrt(sum);", "entropy": 1.8388508558273315, "is_bug_line": false, "sus_score": 0.20412414523193154, "per_token_entropy": [8.353809356689453, 4.05104923248291, 1.57039213180542, 0.011524179019033909, 0.16184653341770172, 0.016145436093211174, 0.4904884099960327, 0.05555180460214615], "tokens": [308, 736, 5792, 29889, 3676, 29898, 2083, 416]}
{"line_number": 703, "line_type": "generated", "code": "\n    /**\n     * Compute the distance to another vector.\n     * @param v vector with which distance should be computed\n     * @return the distance between instance and v\n     * @exception IllegalArgumentException if v is not the", "entropy": 0.09016233682632446, "is_bug_line": false, "sus_score": 0.20412414523193154, "per_token_entropy": [0.025761760771274567, 0.8490779995918274, 0.14874127507209778, 0.2088124305009842, 0.0033494106028229, 0.0005354639724828303, 0.4663568139076233, 0.034859929233789444, 0.004531353246420622, 0.07013162225484848, 0.26385343074798584, 0.12487688660621643, 0.4311940670013428, 0.01786557026207447, 0.001416275859810412, 0.002453771186992526, 0.0003694805200211704, 0.10187524557113647, 0.001319729257375002, 0.0034728473983705044, 0.3208862841129303, 0.481758713722229, 0.0008596062543801963, 0.012160331010818481, 0.20049569010734558, 0.0011594723910093307, 0.014554756693542004, 0.010013346560299397, 0.008001653477549553, 0.000248401309363544, 0.0005983707960695028, 0.0048444755375385284, 0.1280054897069931, 0.03480340167880058, 0.47845160961151123, 0.006246211007237434, 0.0015046000480651855, 0.008167912252247334, 0.09408625960350037, 0.00750637985765934, 0.011356356553733349, 0.0011089849285781384, 0.04271792992949486, 0.03439263999462128, 0.00014280252798926085, 0.00018404220463708043, 0.0003970073303207755, 0.002531896810978651, 0.01298943068832159, 0.0032663585152477026, 0.0008163695456460118, 0.0033292127773165703], "tokens": [13, 1678, 7762, 13, 268, 334, 11796, 29872, 278, 5418, 304, 1790, 4608, 29889, 13, 268, 334, 732, 3207, 325, 4608, 411, 607, 5418, 881, 367, 15712, 13, 268, 334, 732, 2457, 278, 5418, 1546, 2777, 322, 325, 13, 268, 334, 732, 11739, 1720, 12018, 15730, 2451, 565, 325, 338, 451, 278]}
{"line_number": 82, "line_type": "original", "code": "    public ArrayRealVector(double[] d) {", "entropy": 1.7745932340621948, "is_bug_line": false, "sus_score": 0.06375767130633382, "per_token_entropy": [6.401765823364258, 11.607091903686523, 0.09158980846405029, 0.0018149822717532516, 0.0002719986077863723, 0.01153478492051363, 1.0919939279556274, 0.056142646819353104, 0.059851959347724915, 0.15371781587600708, 0.044750310480594635], "tokens": [268, 970, 4398, 21713, 12877, 29898, 8896, 2636, 270, 29897, 426]}
{"line_number": 82, "line_type": "generated", "code": "\n        for (int i = 0; i", "entropy": 0.05743716284632683, "is_bug_line": false, "sus_score": 0.06375767130633382, "per_token_entropy": [0.14395323395729065, 0.29966697096824646, 0.12051000446081161, 0.010819816961884499, 0.0019739444833248854, 0.02163499966263771, 0.026532765477895737, 0.0038264405447989702, 4.2676016164477915e-05, 0.0017711918335407972, 0.0010767144849523902], "tokens": [13, 4706, 363, 313, 524, 474, 353, 29871, 29900, 29936, 474]}
{"line_number": 83, "line_type": "original", "code": "        data = d.clone();", "entropy": 2.505244493484497, "is_bug_line": false, "sus_score": 0.06375767130633382, "per_token_entropy": [5.9859538078308105, 0.3172159492969513, 8.065156936645508, 1.8619827032089233, 1.1380932331085205, 0.15906015038490295, 0.009248747490346432], "tokens": [308, 848, 353, 270, 29889, 16513, 890]}
{"line_number": 83, "line_type": "generated", "code": "\n        }\n    }\n\n    /**\n     * Construct a vector from an array.\n     * @param d array of Doubles.\n     */\n    public ArrayRealVector(Double[] d, boolean ignoreNullElements) {", "entropy": 0.1510854810476303, "is_bug_line": false, "sus_score": 0.06375767130633382, "per_token_entropy": [0.21246200799942017, 0.45509403944015503, 0.005083848722279072, 0.00668006157502532, 0.06984696537256241, 0.0017511999467387795, 0.0029621317517012358, 0.013610539957880974, 0.02182023413479328, 0.0019093393348157406, 0.09504563361406326, 0.00042512916843406856, 2.8132995794294402e-05, 0.30225035548210144, 0.008855239488184452, 0.011575557291507721, 0.023205729201436043, 0.02146081253886223, 1.5400067567825317, 0.03603742644190788, 0.4928070902824402, 0.00786387175321579, 0.002523573115468025, 0.0002656822034623474, 0.1860339343547821, 0.0007879013428464532, 0.3576224744319916, 0.03430210426449776, 0.008682476356625557, 0.47219544649124146, 0.0001586549769854173, 0.02411731146275997, 0.004905451089143753, 0.0010481346398591995, 1.2016055583953857, 0.003242237726226449, 0.012995196506381035, 0.007950563915073872, 0.0013191340258345008, 1.8715683836489916e-05, 2.50339189733495e-06, 0.0011043408885598183, 0.1355801373720169, 0.004900112748146057, 0.001479603466577828, 0.014627831056714058, 0.26821738481521606, 1.5938899517059326, 0.02747020125389099, 0.0383329764008522, 0.09725639969110489, 0.023026809096336365], "tokens": [13, 4706, 500, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 1281, 4984, 263, 4608, 515, 385, 1409, 29889, 13, 268, 334, 732, 3207, 270, 1409, 310, 19176, 7586, 29889, 13, 268, 3776, 13, 1678, 970, 4398, 21713, 12877, 29898, 11843, 2636, 270, 29892, 7223, 11455, 7327, 18868, 29897, 426]}
{"line_number": 84, "line_type": "original", "code": "    }", "entropy": 3.5917184352874756, "is_bug_line": false, "sus_score": 0.06375767130633382, "per_token_entropy": [6.977315425872803, 0.20612165331840515], "tokens": [268, 500]}
{"line_number": 84, "line_type": "generated", "code": "\n\n    /**\n     * Construct a vector from a set of values.\n     * @param first value\n     * @param rest values\n     */\n    public ArrayRealVector(double first, double ... rest) {\n        data", "entropy": 0.21221044659614563, "is_bug_line": false, "sus_score": 0.06375767130633382, "per_token_entropy": [0.0776662603020668, 0.9476718306541443, 0.12110118567943573, 0.008714266121387482, 0.01872236281633377, 0.0005969410995021462, 0.00012337400403339416, 0.6576200723648071, 0.008175834082067013, 0.01605452597141266, 0.037125326693058014, 0.0244097039103508, 1.1616634130477905, 1.5696860551834106, 0.01213960349559784, 0.05716026946902275, 0.08718907088041306, 0.011255932040512562, 0.002618220169097185, 0.000841025379486382, 0.23748664557933807, 0.0007531190640293062, 1.163421869277954, 1.1235911846160889, 1.3497331142425537, 0.1217184066772461, 0.0012374608777463436, 0.0011599486460909247, 0.0009403574513271451, 0.2691558599472046, 0.37087342143058777, 0.5179139375686646, 0.016740674152970314, 0.1971651017665863, 0.006754305679351091, 0.01204232033342123, 0.026007330045104027, 0.009130982682108879, 0.00012885693286079913, 4.184158387943171e-05, 0.016798468306660652, 0.1386580616235733, 0.000727508042473346, 0.0005367745761759579, 0.03574496507644653, 0.32679814100265503, 0.04796416684985161, 0.013669337145984173, 0.007326402235776186, 0.00210564024746418, 0.02848879061639309, 0.16959162056446075], "tokens": [13, 13, 1678, 7762, 13, 268, 334, 1281, 4984, 263, 4608, 515, 263, 731, 310, 1819, 29889, 13, 268, 334, 732, 3207, 937, 995, 13, 268, 334, 732, 3207, 1791, 1819, 13, 268, 3776, 13, 1678, 970, 4398, 21713, 12877, 29898, 8896, 937, 29892, 3765, 2023, 1791, 29897, 426, 13, 4706, 848]}
