{"line_number": 339, "line_type": "original", "code": "                         coefficients[i] = 0;", "entropy": 2.6756839752197266, "is_bug_line": true, "sus_score": 0.5773502691896258, "per_token_entropy": [7.912252426147461, 3.7191503047943115, 9.779475212097168, 1.2311919927597046, 0.7912034392356873, 0.07928626984357834, 0.7850793600082397, 1.4730087518692017, 0.43991798162460327, 0.5462749004364014], "tokens": [462, 3986, 16127, 29961, 29875, 29962, 353, 29871, 29900, 29936]}
{"line_number": 339, "line_type": "generated", "code": "\n     * @param row row index\n     * @param column column index\n     * @return value of the entry\n     */\n    protected double getEntry(final int row, final int column) {\n        return tableau.getEntry", "entropy": 0.2486777901649475, "is_bug_line": true, "sus_score": 0.5773502691896258, "per_token_entropy": [0.27821168303489685, 0.21855752170085907, 0.08474947512149811, 2.034357786178589, 0.4119586944580078, 1.4142495393753052, 0.5937821865081787, 0.16947248578071594, 0.070091612637043, 0.10768751055002213, 0.0161921214312315, 0.01028688345104456, 0.409701406955719, 0.8043124675750732, 0.041433341801166534, 0.011144298128783703, 0.028290996327996254, 0.02241012267768383, 0.028670212253928185, 0.008798639290034771, 0.05028456822037697, 1.6801775693893433, 1.159584403038025, 0.41231757402420044, 0.8080139756202698, 0.5691643357276917, 0.03209148347377777, 0.03217783197760582, 0.006895436439663172, 0.039391450583934784, 0.14517664909362793, 0.8626307249069214, 0.0021327624563127756, 0.00651201605796814, 0.002791557926684618, 0.03792412206530571, 0.014734847471117973, 0.0012743694242089987, 0.0011021974496543407, 0.014396724291145802, 0.0010921949287876487, 0.0007583603146485984, 0.0017229963559657335, 0.002001070184633136, 0.007548618130385876, 0.1603279858827591, 0.06880011409521103, 0.03989432752132416, 0.0006696127820760012, 0.003945781383663416, 0.0006191005813889205, 0.0007312007946893573], "tokens": [13, 268, 334, 732, 3207, 1948, 1948, 2380, 13, 268, 334, 732, 3207, 1897, 1897, 2380, 13, 268, 334, 732, 2457, 995, 310, 278, 6251, 13, 268, 3776, 13, 1678, 6364, 3765, 679, 9634, 29898, 8394, 938, 1948, 29892, 2186, 938, 1897, 29897, 426, 13, 4706, 736, 1591, 585, 29889, 657, 9634]}
{"line_number": 172, "line_type": "original", "code": "                        matrix[row][getSlackVariableOffset() + slackVar++] = -1; // excess", "entropy": 1.6804307699203491, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [6.408911228179932, 3.4251198768615723, 10.379542350769043, 0.6999189853668213, 2.436314582824707, 0.10785780102014542, 1.8666269779205322, 1.0036633014678955, 0.0010713557712733746, 0.0045465431176126, 0.001978108659386635, 0.006034843623638153, 0.17561060190200806, 0.14392629265785217, 0.004429410211741924, 0.02297438308596611, 0.1568569839000702, 0.007838324643671513, 0.02203645370900631, 3.408623456954956, 0.017018472775816917, 0.023668959736824036, 1.9088950157165527, 8.096874237060547], "tokens": [462, 308, 4636, 29961, 798, 3816, 657, 29903, 2364, 16174, 10302, 580, 718, 269, 2364, 9037, 1817, 29962, 353, 448, 29896, 29936, 849, 19163]}
{"line_number": 172, "line_type": "generated", "code": "\n     * @return number of objective functions\n     */\n    public int getNumObjectiveFunctions() {\n        return (f.getCoefficients().getDimension() == 1) ? 1 : 2;\n", "entropy": 0.15238986909389496, "is_bug_line": false, "sus_score": 0.4082482904638631, "per_token_entropy": [0.17623315751552582, 0.10574554651975632, 0.027902014553546906, 0.04936476796865463, 0.004509280435740948, 0.25252875685691833, 0.006014226004481316, 0.09243062138557434, 0.010270718485116959, 0.1482292264699936, 0.043939270079135895, 0.010013583116233349, 0.002953574061393738, 0.03144871070981026, 0.5400264859199524, 0.0087893046438694, 0.0011951930355280638, 0.00038235029205679893, 0.0003623305819928646, 0.0006908176001161337, 0.00016866691294126213, 0.00015567521040793508, 0.0025547267869114876, 0.0028363734018057585, 0.015935681760311127, 0.19495640695095062, 0.11263160407543182, 2.3306190967559814, 1.1063159704208374, 0.6710203886032104, 0.08052899688482285, 0.2552514374256134, 0.002765761222690344, 0.0003721021639648825, 0.030501818284392357, 0.024738643318414688, 0.016480155289173126, 0.0955979973077774, 9.357491217087954e-05, 0.008903446607291698, 0.5870250463485718, 0.023351196199655533, 0.5335025787353516, 0.028268050402402878, 0.005684757139533758, 0.01962529867887497, 0.17636917531490326, 0.007796925958245993, 0.02914620190858841, 0.017569031566381454, 0.002465306082740426, 0.028010865673422813], "tokens": [13, 268, 334, 732, 2457, 1353, 310, 12091, 3168, 13, 268, 3776, 13, 1678, 970, 938, 679, 8009, 2061, 573, 6678, 29879, 580, 426, 13, 4706, 736, 313, 29888, 29889, 657, 29907, 7297, 4543, 29879, 2141, 657, 16142, 2673, 580, 1275, 29871, 29896, 29897, 1577, 29871, 29896, 584, 29871, 29906, 29936, 13]}
{"line_number": 279, "line_type": "original", "code": "                    return null;", "entropy": 3.578498601913452, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [7.229194164276123, 2.7329459190368652, 5.4265594482421875, 2.496615171432495, 0.007177875377237797], "tokens": [462, 268, 736, 1870, 29936]}
{"line_number": 279, "line_type": "generated", "code": "\n        for (int i = 0; i", "entropy": 0.24548757076263428, "is_bug_line": false, "sus_score": 0.35355339059327373, "per_token_entropy": [0.10563990473747253, 0.18164724111557007, 1.1519163846969604, 0.002267410745844245, 0.03743415325880051, 0.6204937100410461, 0.005337512120604515, 0.3193548917770386, 0.2351020723581314, 0.034155458211898804, 0.007014529779553413], "tokens": [13, 4706, 363, 313, 524, 474, 353, 29871, 29900, 29936, 474]}
{"line_number": 325, "line_type": "original", "code": "        double[] coefficients = new double[getOriginalNumDecisionVariables()];", "entropy": 1.6550666093826294, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [6.232367515563965, 3.7712128162384033, 5.158069133758545, 5.1664581298828125, 0.16406475007534027, 2.865079402923584, 0.03977816924452782, 0.19950583577156067, 0.8656291961669922, 3.207310438156128, 0.018244896084070206, 0.07730816304683685, 0.00021789084712509066, 0.0003636414185166359, 0.00032646095496602356, 0.001501148217357695, 0.3686920404434204], "tokens": [308, 3765, 2636, 16127, 353, 716, 3765, 29961, 657, 26036, 8009, 6185, 2459, 10444, 1849, 580, 1385]}
{"line_number": 325, "line_type": "generated", "code": "\n            tableau.setEntry(minuendRow, j,\n                             tableau.getEntry(minuendRow, j) -\n                             tableau.getEntry(subtrahendRow, j) * multiple);", "entropy": 0.07313892990350723, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [0.2875809669494629, 0.4802235960960388, 0.3505975604057312, 0.00010024998482549563, 0.0028607419226318598, 0.04118901491165161, 0.00035982808913104236, 0.002545808907598257, 0.036141831427812576, 0.0002426806604489684, 0.00033849707688204944, 0.00021407696476671845, 0.0019615711644291878, 0.015512872487306595, 0.0020068997982889414, 0.6910885572433472, 0.15384437143802643, 0.16300006210803986, 0.020065302029252052, 0.0001591317413840443, 0.001117082079872489, 0.0006112375995144248, 0.00018523407925385982, 0.00042882305569946766, 0.0023670769296586514, 0.00017641419253777713, 1.6689160474925302e-05, 0.00015221867943182588, 0.0005801424849778414, 0.006509528495371342, 0.001800226978957653, 0.10711383074522018, 0.2882175147533417, 0.007966647855937481, 0.028822414577007294, 1.0728683471679688, 0.00021073981770314276, 0.0008465044084005058, 0.0003943857445847243, 0.0005266471416689456, 0.00034981805947609246, 0.0018556771101430058, 0.0003526780928950757, 0.0003000047872774303, 0.0006380429258570075, 0.0002330270071979612, 0.0008017186191864312, 0.0033515493851155043, 0.004188693594187498, 0.004163170233368874, 0.009241541847586632, 0.006802969612181187], "tokens": [13, 9651, 1591, 585, 29889, 842, 9634, 29898, 1195, 29884, 355, 4301, 29892, 432, 29892, 13, 462, 632, 1591, 585, 29889, 657, 9634, 29898, 1195, 29884, 355, 4301, 29892, 432, 29897, 448, 13, 462, 632, 1591, 585, 29889, 657, 9634, 29898, 1491, 3018, 29882, 355, 4301, 29892, 432, 29897, 334, 2999, 416]}
{"line_number": 326, "line_type": "original", "code": "        Integer basicRow =", "entropy": 6.036993026733398, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [5.792357921600342, 10.680769920349121, 12.340210914611816, 1.026557445526123, 0.34506747126579285], "tokens": [308, 8102, 6996, 4301, 353]}
{"line_number": 326, "line_type": "generated", "code": "\n                                              tableau.getEntry(subtrahendRow, j) * multiple);\n        }\n    }\n\n    /**\n     * Subtracts a multiple of one column from another.\n     *", "entropy": 0.1971752941608429, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [1.0570123195648193, 0.771371066570282, 0.5603936910629272, 2.5358457565307617, 0.9316425323486328, 0.00027366707217879593, 0.002775865839794278, 0.000797192333266139, 0.0007767044589854777, 0.000982397934421897, 0.028650635853409767, 0.0004077318590134382, 0.00026651646476238966, 0.000494715350214392, 0.00027414379292167723, 0.0034423163160681725, 0.013323207385838032, 0.02564801648259163, 0.09821154922246933, 0.041780054569244385, 0.20019890367984772, 0.02386755309998989, 0.07931886613368988, 0.0020122535061091185, 0.002620122628286481, 0.03329369053244591, 0.0007842087652534246, 0.0016130305593833327, 0.0383501835167408, 0.055193591862916946, 0.017772706225514412, 0.03572310879826546, 0.001019553979858756, 0.00044431351125240326, 1.8633438348770142, 0.039554063230752945, 2.539125671319198e-05, 0.044218167662620544, 0.16921213269233704, 0.05540779232978821, 0.0023884836118668318, 0.12382607907056808, 0.7255049347877502, 0.027070457115769386, 0.015203190967440605, 0.025530308485031128, 0.0018716213526204228, 0.0017567930044606328, 9.452849917579442e-05], "tokens": [13, 462, 462, 795, 1591, 585, 29889, 657, 9634, 29898, 1491, 3018, 29882, 355, 4301, 29892, 432, 29897, 334, 2999, 416, 13, 4706, 500, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 3323, 29873, 1461, 29879, 263, 2999, 310, 697, 1897, 515, 1790, 29889, 13, 268, 334]}
{"line_number": 328, "line_type": "original", "code": "        double mostNegative = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset());", "entropy": 1.3751661777496338, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [5.672064304351807, 6.123800277709961, 6.7036590576171875, 0.0417458675801754, 0.0020277192816138268, 0.13022923469543457, 0.2848255932331085, 9.01589298248291, 3.9559807777404785, 1.1415085792541504, 0.2612222731113434, 0.048770591616630554, 0.8107510209083557, 0.06271031498908997, 0.11852916330099106, 1.0347180366516113, 0.04132594168186188, 0.0013946102699264884, 0.030525406822562218, 0.00022599527437705547, 0.002214600332081318, 0.1588706076145172, 0.010908612050116062, 0.0005343916127458215, 0.0008024332928471267, 0.09907747805118561], "tokens": [308, 3765, 1556, 29940, 387, 1230, 353, 6996, 4301, 1275, 1870, 1577, 29871, 29900, 584, 679, 9634, 29898, 16121, 4301, 29892, 679, 29934, 9499, 10302, 3310]}
{"line_number": 328, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Subtracts a multiple of one row from another.\n     *", "entropy": 0.1664731502532959, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [0.12513914704322815, 0.5690284967422485, 0.009721319191157818, 0.007389001548290253, 0.06259879469871521, 0.0681183859705925, 0.02189522795379162, 0.03512122854590416, 0.0010009760735556483, 0.0005049622268415987, 1.9445103406906128, 0.04501986503601074, 3.075552376685664e-05, 0.05144042894244194, 0.18105141818523407, 0.06502460688352585, 0.0026179824490100145, 0.13045231997966766, 0.6760358810424805, 0.010811208747327328, 0.055237360298633575, 0.09216202795505524, 0.005647655110806227, 0.0009666775586083531, 0.00030298411729745567], "tokens": [13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 3323, 29873, 1461, 29879, 263, 2999, 310, 697, 1948, 515, 1790, 29889, 13, 268, 334]}
{"line_number": 329, "line_type": "original", "code": "        for (int i = 0; i < coefficients.length; i++) {", "entropy": 0.9131882786750793, "is_bug_line": true, "sus_score": 0.3333333333333333, "per_token_entropy": [7.381908893585205, 4.498021125793457, 0.009929075837135315, 0.06616713851690292, 0.5758956074714661, 0.01514730229973793, 0.41497838497161865, 0.10693356394767761, 0.011459480971097946, 0.00453562568873167, 0.04465444013476372, 3.053377628326416, 0.05732935667037964, 0.005985668394714594, 0.05291792377829552, 0.1200525313615799, 0.01242727693170309, 0.0056686364114284515], "tokens": [308, 363, 313, 524, 474, 353, 29871, 29900, 29936, 474, 529, 16127, 29889, 2848, 29936, 474, 4862, 426]}
{"line_number": 329, "line_type": "generated", "code": "\n    /**\n     * Subtracts a multiple of one row from another.\n     *", "entropy": 0.1638040989637375, "is_bug_line": true, "sus_score": 0.3333333333333333, "per_token_entropy": [0.05409073829650879, 0.45488935708999634, 0.10760680586099625, 0.050841137766838074, 0.00217475276440382, 0.0004854215949308127, 1.9334959983825684, 0.04539404436945915, 3.373566141817719e-05, 0.040821611881256104, 0.1390845775604248, 0.047091592103242874, 0.0020459212828427553, 0.09745042771100998, 0.35189300775527954, 0.008117777295410633, 0.037128888070583344, 0.06145801022648811, 0.004845068324357271, 0.0006407829932868481, 0.0002964295563288033], "tokens": [13, 1678, 7762, 13, 268, 334, 3323, 29873, 1461, 29879, 263, 2999, 310, 697, 1948, 515, 1790, 29889, 13, 268, 334]}
{"line_number": 330, "line_type": "original", "code": "            basicRow = getBasicRow(getNumObjectiveFunctions() + i);", "entropy": 1.4676405191421509, "is_bug_line": true, "sus_score": 0.3333333333333333, "per_token_entropy": [9.620625495910645, 10.225316047668457, 1.759040355682373, 0.4280558228492737, 0.6855257749557495, 0.04781246557831764, 0.05796965956687927, 0.03819632902741432, 1.717045783996582, 0.5971046090126038, 0.04400098696351051, 0.0013247294118627906, 0.0019876263104379177, 0.0002668739762157202, 0.28725534677505493, 0.05912128835916519, 0.7576054930686951, 0.08927248418331146], "tokens": [632, 6996, 4301, 353, 679, 16616, 4301, 29898, 657, 8009, 2061, 573, 6678, 29879, 580, 718, 474, 416]}
{"line_number": 330, "line_type": "generated", "code": "\n    /**\n     * Subtracts a multiple of one row from another.\n     *", "entropy": 0.21294528245925903, "is_bug_line": true, "sus_score": 0.3333333333333333, "per_token_entropy": [0.09719453006982803, 0.2835666537284851, 0.08800487965345383, 0.06732463091611862, 0.0025034775026142597, 0.0005200940649956465, 2.704132318496704, 0.06478843092918396, 5.1020273531321436e-05, 0.059001948684453964, 0.19522906839847565, 0.06601761281490326, 0.003058400936424732, 0.14474239945411682, 0.5066131949424744, 0.013132625259459019, 0.057747457176446915, 0.10909419506788254, 0.0077841514721512794, 0.0008914072532206774, 0.00045253525604493916], "tokens": [13, 1678, 7762, 13, 268, 334, 3323, 29873, 1461, 29879, 263, 2999, 310, 697, 1948, 515, 1790, 29889, 13, 268, 334]}
{"line_number": 333, "line_type": "original", "code": "                coefficients[i] =", "entropy": 4.732146739959717, "is_bug_line": true, "sus_score": 0.3333333333333333, "per_token_entropy": [6.909788608551025, 14.101116180419922, 5.3272199630737305, 1.1474860906600952, 0.2546747028827667, 0.6525963544845581], "tokens": [462, 16127, 29961, 29875, 29962, 353]}
{"line_number": 333, "line_type": "generated", "code": "\n     */\n    protected int getWidth() {\n        return tableau.getColumnDimension();\n    }\n\n    /**\n     * Get the height of the tableau.\n     * @return height of the tableau\n<", "entropy": 0.08955951035022736, "is_bug_line": true, "sus_score": 0.3333333333333333, "per_token_entropy": [0.21425454318523407, 0.15774895250797272, 0.36216723918914795, 0.006147049367427826, 0.053408052772283554, 0.2956617474555969, 0.04742543399333954, 0.003496843855828047, 0.041091542690992355, 0.011862450279295444, 0.0030115749686956406, 0.023014342412352562, 0.18610745668411255, 0.0425705723464489, 0.969929575920105, 0.0006042085005901754, 0.02673822082579136, 0.00046957432641647756, 0.032879311591386795, 0.00015937011630740017, 0.00011288482346571982, 0.45149362087249756, 0.023343976587057114, 0.29865574836730957, 0.0030340375378727913, 0.010172663256525993, 0.06672129780054092, 0.03153950348496437, 0.008095192722976208, 0.010614486411213875, 0.0011019593803212047, 0.0006237468332983553, 0.21396902203559875, 0.034071698784828186, 0.14899243414402008, 0.003029045881703496, 0.0014611531514674425, 0.0032835875172168016, 0.0011036264477297664, 0.018085690215229988, 0.0032450894359499216, 0.040224626660346985, 0.0016456407029181719, 0.03603949770331383, 0.0007889734115451574, 0.029227364808321, 0.0050884741358459, 0.0018171241972595453, 0.0017577449325472116, 0.002370525849983096, 0.01358737237751484, 0.7130483388900757], "tokens": [13, 268, 3776, 13, 1678, 6364, 938, 679, 6110, 580, 426, 13, 4706, 736, 1591, 585, 29889, 657, 4409, 16142, 2673, 890, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 3617, 278, 3171, 310, 278, 1591, 585, 29889, 13, 268, 334, 732, 2457, 3171, 310, 278, 1591, 585, 13, 29966]}
{"line_number": 336, "line_type": "original", "code": "            if (basicRow != null) {", "entropy": 2.7378780841827393, "is_bug_line": true, "sus_score": 0.3333333333333333, "per_token_entropy": [8.89190673828125, 4.260300159454346, 0.04514909163117409, 5.975172996520996, 3.301816940307617, 1.8616589307785034, 0.1688806265592575, 0.12799878418445587, 0.008020693436264992], "tokens": [632, 565, 313, 16121, 4301, 2804, 1870, 29897, 426]}
{"line_number": 336, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Get the height of the tableau.\n     * @return height of the tableau\n     */\n    protected final int getHeight() {\n        return tableau.getRowDimension();\n", "entropy": 0.033121246844530106, "is_bug_line": true, "sus_score": 0.3333333333333333, "per_token_entropy": [0.17315003275871277, 0.5524521470069885, 0.04588514193892479, 0.010836444795131683, 0.0850398913025856, 0.041076213121414185, 0.014700664207339287, 0.012528290040791035, 0.0012437711702659726, 0.0003280101518612355, 0.21948496997356415, 0.03522837534546852, 0.13924182951450348, 0.003378875320777297, 0.0011636398267000914, 0.0032414060551673174, 0.0011214879341423512, 0.020245105028152466, 0.003173674223944545, 0.0029756813310086727, 0.0009578645695000887, 0.025352152064442635, 0.0005463061388581991, 0.026279082521796227, 0.00396181084215641, 0.0015607806853950024, 0.0014869834994897246, 0.002257063053548336, 0.009830396622419357, 0.0026240460574626923, 0.00394043792039156, 0.002257063053548336, 0.005682504735887051, 0.02916518971323967, 0.05555586516857147, 0.001277822069823742, 0.0004889961564913392, 0.0007609808817505836, 0.0009099871967919171, 0.0006011109799146652, 0.0022775204852223396, 0.01201570127159357, 0.004705308936536312, 0.01235380582511425, 0.0004058252670802176, 0.0006877202540636063, 0.00035494225448928773, 0.004456113558262587, 0.0001961992384167388, 0.00016532962035853416, 0.13491465151309967, 0.007779774721711874], "tokens": [13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 3617, 278, 3171, 310, 278, 1591, 585, 29889, 13, 268, 334, 732, 2457, 3171, 310, 278, 1591, 585, 13, 268, 3776, 13, 1678, 6364, 2186, 938, 679, 7011, 580, 426, 13, 4706, 736, 1591, 585, 29889, 657, 4301, 16142, 2673, 890, 13]}
{"line_number": 337, "line_type": "original", "code": "                for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {", "entropy": 1.3608773946762085, "is_bug_line": true, "sus_score": 0.3333333333333333, "per_token_entropy": [9.16937255859375, 11.996886253356934, 0.08724894374608994, 0.09292566776275635, 0.8115555047988892, 0.02494039759039879, 1.9017595052719116, 0.9844427108764648, 0.17182235419750214, 0.011933011934161186, 0.001983462367206812, 0.0004789874074049294, 0.870574951171875, 0.228912353515625, 0.04843231290578842, 0.20715132355690002, 3.2320423126220703, 0.3745400607585907, 0.02236909046769142, 0.007941457442939281, 0.0004574206250254065, 0.013287446461617947, 0.05388879403471947, 7.468218803405762, 0.1777082085609436, 0.0764869973063469, 0.027001651003956795, 0.04019954800605774], "tokens": [462, 363, 313, 524, 432, 353, 679, 8009, 2061, 573, 6678, 29879, 890, 432, 529, 679, 8009, 2061, 573, 6678, 29879, 580, 718, 474, 29936, 432, 4862, 426]}
{"line_number": 337, "line_type": "generated", "code": "\n    /**\n     * Get the height of the tableau.\n     * @return height of the tableau\n     */\n    protected final int getHeight() {\n        return tableau.getRowDimension();\n    }\n\n", "entropy": 0.06358689069747925, "is_bug_line": true, "sus_score": 0.3333333333333333, "per_token_entropy": [0.059949081391096115, 0.3502151668071747, 0.12618543207645416, 0.037432312965393066, 0.006637549493461847, 0.000606710382271558, 0.6042256951332092, 0.06429547071456909, 0.5370193123817444, 0.004779936745762825, 0.0022521864157170057, 0.0058103944174945354, 0.003545429091900587, 0.03871700540184975, 0.005908760242164135, 0.0013190149329602718, 0.0017686928622424603, 0.03461640700697899, 0.0009438112610951066, 0.03134404495358467, 0.004759649280458689, 0.0018716213526204228, 0.001719426247291267, 0.0015072186943143606, 0.01504866685718298, 0.001883281976915896, 0.004088021349161863, 0.0021999699529260397, 0.011812265031039715, 0.05065757408738136, 0.07891111820936203, 0.0018787605222314596, 0.0009539344464428723, 0.0020642417948693037, 0.0014319891342893243, 0.0007142852991819382, 0.0034944680519402027, 0.013263683766126633, 0.005876644514501095, 0.02247225120663643, 0.0006106419023126364, 0.0011186301708221436, 0.0006475735572166741, 0.006233653519302607, 0.000284154579276219, 0.000653530121780932, 0.15391182899475098, 0.00597832165658474, 0.003935925662517548, 0.0011318475008010864, 0.014786765910685062, 0.9730440974235535], "tokens": [13, 1678, 7762, 13, 268, 334, 3617, 278, 3171, 310, 278, 1591, 585, 29889, 13, 268, 334, 732, 2457, 3171, 310, 278, 1591, 585, 13, 268, 3776, 13, 1678, 6364, 2186, 938, 679, 7011, 580, 426, 13, 4706, 736, 1591, 585, 29889, 657, 4301, 16142, 2673, 890, 13, 1678, 500, 13, 13]}
{"line_number": 338, "line_type": "original", "code": "                    if (tableau.getEntry(basicRow, j) == 1) {", "entropy": 1.6145988702774048, "is_bug_line": true, "sus_score": 0.3333333333333333, "per_token_entropy": [8.688970565795898, 2.7890849113464355, 6.356170654296875, 0.17740467190742493, 3.1717748641967773, 0.007192906457930803, 0.13436472415924072, 0.05260163173079491, 0.5798056721687317, 0.005367629695683718, 2.762629508972168, 0.14206840097904205, 0.03697403892874718, 1.8779659271240234, 0.127055823802948, 1.5730199813842773, 0.10752501338720322, 3.245147943496704, 0.4282224774360657, 0.028626656159758568], "tokens": [462, 268, 565, 313, 2371, 585, 29889, 657, 9634, 29898, 16121, 4301, 29892, 432, 29897, 1275, 29871, 29896, 29897, 426]}
{"line_number": 338, "line_type": "generated", "code": "\n    /**\n     * Get the height of the tableau.\n     * @return height of the tableau\n     */\n    protected final int getHeight() {\n        return tableau.getRowDimension();\n    }\n\n", "entropy": 0.0638536810874939, "is_bug_line": true, "sus_score": 0.3333333333333333, "per_token_entropy": [0.11865822970867157, 0.38567203283309937, 0.12527652084827423, 0.07719770818948746, 0.005902005359530449, 0.0005498804384842515, 0.857677698135376, 0.10551783442497253, 0.8237667083740234, 0.005457146558910608, 0.0014488924061879516, 0.008762717247009277, 0.004012866877019405, 0.03996121883392334, 0.005409009754657745, 0.000947622349485755, 0.0017475108616054058, 0.034939590841531754, 0.001060757553204894, 0.03671851009130478, 0.005230196285992861, 0.0018199799815192819, 0.002130740089341998, 0.0016362386522814631, 0.015866810455918312, 0.0015931545058265328, 0.004633879289031029, 0.0028477851301431656, 0.01764645427465439, 0.06055404618382454, 0.09493733197450638, 0.0019508631667122245, 0.0009358317474834621, 0.003364499658346176, 0.0013961577787995338, 0.0007258402765728533, 0.0036712170112878084, 0.015207535587251186, 0.006804508622735739, 0.03262215480208397, 0.0002269487304147333, 0.0009243983076885343, 0.0005886013968847692, 0.008901437744498253, 0.0002873722987715155, 0.0008229206432588398, 0.09630899876356125, 0.0046497792936861515, 0.004144532140344381, 0.0009036748087964952, 0.008914080448448658, 0.27745872735977173], "tokens": [13, 1678, 7762, 13, 268, 334, 3617, 278, 3171, 310, 278, 1591, 585, 29889, 13, 268, 334, 732, 2457, 3171, 310, 278, 1591, 585, 13, 268, 3776, 13, 1678, 6364, 2186, 938, 679, 7011, 580, 426, 13, 4706, 736, 1591, 585, 29889, 657, 4301, 16142, 2673, 890, 13, 1678, 500, 13, 13]}
{"line_number": 344, "line_type": "original", "code": "        return new RealPointValuePair(coefficients, f.getValue(coefficients));", "entropy": 1.911969780921936, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [6.282732009887695, 2.179392099380493, 8.070113182067871, 5.438750267028809, 0.5027035474777222, 0.04266207292675972, 0.001278060139156878, 0.06525938212871552, 0.4896915555000305, 0.018289728090167046, 0.004288999363780022, 0.1990557610988617, 3.926833152770996, 3.616055488586426, 3.5594730377197266, 3.65053129196167, 0.11376605182886124, 0.0010520643554627895, 0.0006737822550348938, 0.07679019868373871], "tokens": [308, 736, 716, 8195, 5228, 1917, 20547, 29898, 1111, 8462, 29879, 29892, 285, 29889, 23433, 29898, 1111, 8462, 29879, 2483]}
{"line_number": 344, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Get the entry in the tableau at the given row and column.\n     * @param row row index\n     * @param column column index\n     * @return entry in the tableau at the", "entropy": 0.21716900169849396, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [0.1030445322394371, 0.39012566208839417, 0.059994887560606, 0.012046677991747856, 0.08087088912725449, 0.06094556674361229, 0.019501734524965286, 0.014372870326042175, 0.0014631766825914383, 0.00018916724366135895, 0.5039780139923096, 0.2487078607082367, 1.7263176441192627, 1.2072817087173462, 0.19638383388519287, 0.2526232898235321, 0.013726719655096531, 1.1464935541152954, 0.6428130865097046, 0.5059604048728943, 0.8337861895561218, 0.09664986282587051, 0.013422835618257523, 0.4548475444316864, 0.004749564453959465, 0.003241524798795581, 0.0005449955351650715, 0.09605563431978226, 0.0014787701657041907, 0.04457280784845352, 0.2015494853258133, 0.19854216277599335, 0.06614169478416443, 0.0010112178279086947, 0.0008499585674144328, 0.0009778724052011967, 0.0016298118280246854, 0.11043741554021835, 0.008335207588970661, 0.0035723934415727854, 0.010939033702015877, 0.005832438822835684, 0.0023789696861058474, 0.0028400584124028683, 0.0024131007958203554, 0.5994359254837036, 0.6220337152481079, 0.04405232146382332, 0.02124166674911976, 0.00555483577772975, 0.5794726014137268, 0.06735461205244064], "tokens": [13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 3617, 278, 6251, 297, 278, 1591, 585, 472, 278, 2183, 1948, 322, 1897, 29889, 13, 268, 334, 732, 3207, 1948, 1948, 2380, 13, 268, 334, 732, 3207, 1897, 1897, 2380, 13, 268, 334, 732, 2457, 6251, 297, 278, 1591, 585, 472, 278]}
{"line_number": 459, "line_type": "original", "code": "        return restrictToNonNegative ? numDecisionVariables : numDecisionVariables - 1;", "entropy": 1.6740195751190186, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [7.002816677093506, 3.692535877227783, 6.392136573791504, 0.0021845067385584116, 0.0009029601933434606, 0.0005975367967039347, 0.000120751719805412, 0.000605638197157532, 6.926639080047607, 6.465030670166016, 0.26364418864250183, 0.0018264055252075195, 0.002169043058529496, 0.00039891392225399613, 5.441978454589844, 0.8116303086280823, 0.08008114993572235, 0.0010421803453937173, 0.0008119623525999486, 0.00021109737281221896, 2.2320284843444824, 0.03168134018778801, 0.00569056486710906, 0.8197008371353149], "tokens": [308, 736, 9250, 1762, 12283, 29940, 387, 1230, 1577, 954, 6185, 2459, 10444, 1849, 584, 954, 6185, 2459, 10444, 1849, 448, 29871, 29896, 29936]}
{"line_number": 459, "line_type": "generated", "code": "\n      } catch (ClassCastException ex) {\n          return false;\n      }\n\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public int hashCode() {\n        int hash = 3", "entropy": 0.1680881828069687, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [0.0656571015715599, 0.7144229412078857, 0.006262678187340498, 0.0416167750954628, 0.023681532591581345, 0.04977453127503395, 0.000417741306591779, 0.001190311275422573, 2.155761957168579, 0.010823355056345463, 0.0022768068592995405, 0.04728899896144867, 0.14174577593803406, 0.12370052933692932, 0.008876270614564419, 0.0013547299895435572, 0.01697217859327793, 0.009661816991865635, 0.002687891712412238, 0.04708795249462128, 0.6945921182632446, 0.36233994364738464, 0.002738299546763301, 0.004889911040663719, 0.05150282010436058, 0.05590977892279625, 0.020159704610705376, 0.1508631408214569, 0.0016703951405361295, 0.0006515049026347697, 0.0008089845650829375, 0.000865680689457804, 0.006089230068027973, 0.0026548400055617094, 0.006589824799448252, 0.013552679680287838, 0.0038656287360936403, 0.002253851620480418, 0.002552586607635021, 0.00893227569758892, 0.13953539729118347, 0.002444376703351736, 0.0005532164941541851, 0.0022374375257641077, 0.0017798787448555231, 0.0064726946875452995, 0.46741053462028503, 0.7223821878433228, 0.7840641140937805, 0.02881789766252041, 0.07874288409948349, 1.6413997411727905], "tokens": [13, 418, 500, 4380, 313, 2385, 15738, 2451, 429, 29897, 426, 13, 3986, 736, 2089, 29936, 13, 418, 500, 13, 13, 1678, 500, 13, 13, 1678, 7762, 26633, 262, 27069, 14526, 29913, 3776, 13, 1678, 732, 4640, 13, 1678, 970, 938, 6608, 3399, 580, 426, 13, 4706, 938, 6608, 353, 29871, 29941]}
{"line_number": 293, "line_type": "original", "code": "        int width = getWidth() - numArtificialVariables - 1;", "entropy": 1.5327014923095703, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [5.956243515014648, 6.403974533081055, 6.778530597686768, 0.15171653032302856, 0.22724109888076782, 0.29440850019454956, 1.240289330482483, 0.05167524516582489, 4.275393486022949, 0.3368874192237854, 0.0011749514378607273, 0.0007765853079035878, 0.0017849955474957824, 0.00016306500765495002, 1.4325884580612183, 0.26705044507980347, 0.13722680509090424, 0.031501732766628265], "tokens": [308, 938, 2920, 353, 679, 6110, 580, 448, 954, 9986, 928, 616, 10444, 1849, 448, 29871, 29896, 29936]}
{"line_number": 293, "line_type": "generated", "code": "\n            if (restrictToNonNegative) {\n                for (int j = getNumObjectiveFunctions(); j", "entropy": 0.2491874098777771, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [0.09635501354932785, 1.446211338043213, 0.9564789533615112, 0.13953819870948792, 0.5429788827896118, 0.0013138956855982542, 0.004785750061273575, 0.07792963087558746, 0.00907569844275713, 0.0008314966107718647, 0.0003215749457012862, 0.4970210790634155, 0.005982468836009502, 0.013419072143733501, 0.0640423521399498, 2.325469493865967, 0.0019293281948193908, 0.016620155423879623, 0.08332554250955582, 0.002157385926693678, 0.2785467505455017, 0.060561005026102066, 0.006463219411671162, 0.0010436094598844647, 0.0003618539194576442, 0.00014602071314584464, 0.31443503499031067, 0.02990187704563141], "tokens": [13, 9651, 565, 313, 5060, 4146, 1762, 12283, 29940, 387, 1230, 29897, 426, 13, 18884, 363, 313, 524, 432, 353, 679, 8009, 2061, 573, 6678, 29879, 890, 432]}
{"line_number": 294, "line_type": "original", "code": "        int height = getHeight() - 1;", "entropy": 2.185549020767212, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [5.531683921813965, 7.034300327301025, 7.925631523132324, 0.0444335900247097, 0.33508554100990295, 0.3651677072048187, 1.6177117824554443, 0.07127111405134201, 0.9437751770019531, 0.08662832528352737, 0.0853489339351654], "tokens": [308, 938, 3171, 353, 679, 7011, 580, 448, 29871, 29896, 29936]}
{"line_number": 294, "line_type": "generated", "code": "\n        return new RealPointValuePair(new ArrayRealVector(coefficients), 0);\n    }\n\n    /**\n     * Get the current solution.\n     *", "entropy": 0.28488320112228394, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [0.05440418794751167, 0.15883216261863708, 0.6055776476860046, 0.10525874048471451, 0.10158827900886536, 0.00043084874050691724, 0.002835422521457076, 0.0004993622424080968, 0.013325206935405731, 1.1491222381591797, 0.26884859800338745, 0.0010521834483370185, 0.0005949157639406621, 0.02507026679813862, 0.022406859323382378, 0.001589822000823915, 0.001278655487112701, 0.8059656023979187, 1.259711503982544, 0.17540866136550903, 0.3167659342288971, 0.02738286554813385, 0.041453469544649124, 0.0012735360069200397, 0.004797614179551601, 0.07702333480119705, 0.20769742131233215, 0.03749730437994003, 0.09516150504350662, 0.0021766559220850468, 0.0006809299811720848, 1.4910719394683838, 0.13515648245811462, 1.982154130935669, 1.2483317852020264, 0.6673551797866821, 0.017457280308008194, 0.0007161913090385497, 0.0024900403805077076], "tokens": [13, 4706, 736, 716, 8195, 5228, 1917, 20547, 29898, 1482, 4398, 21713, 12877, 29898, 1111, 8462, 29879, 511, 29871, 29900, 416, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 3617, 278, 1857, 1650, 29889, 13, 268, 334]}
{"line_number": 295, "line_type": "original", "code": "        double[][] matrix = new double[height][width];", "entropy": 1.8846948146820068, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [6.228175163269043, 5.3667988777160645, 0.6607112884521484, 4.376453876495361, 2.204108238220215, 0.3181481659412384, 0.8308987617492676, 0.009623563848435879, 0.04731469601392746, 3.728226661682129, 0.42820194363594055, 0.16812601685523987, 0.1342446506023407], "tokens": [308, 3765, 2636, 2636, 4636, 353, 716, 3765, 29961, 3545, 3816, 2103, 1385]}
{"line_number": 295, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Get the number of variables in the problem.\n     * @return number of variables in the problem\n     */\n    protected int getOriginalNumDecisionVariables() {\n        return numDecision", "entropy": 0.2981906533241272, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [0.07924221456050873, 0.2737015187740326, 0.009614590555429459, 0.006944330409169197, 0.10581332445144653, 0.17414137721061707, 0.05348365381360054, 0.12023065984249115, 0.0028601475059986115, 0.00047302976599894464, 1.2711865901947021, 0.14486832916736603, 2.6646580696105957, 0.003604583442211151, 2.733370304107666, 0.8916645050048828, 0.057320352643728256, 1.5166771411895752, 0.44911620020866394, 0.16654613614082336, 0.0025899221654981375, 0.005559814628213644, 0.25339850783348083, 0.017860066145658493, 0.641599178314209, 0.0031123552471399307, 0.03951945900917053, 0.36695727705955505, 0.011899322271347046, 0.006594088394194841, 0.2657478153705597, 0.0012492479290813208, 0.019341208040714264, 0.0009689403814263642, 0.014746828936040401, 0.3655509650707245, 0.05897025763988495, 0.001591607229784131, 0.8450512290000916, 0.0023767100647091866, 0.113018698990345, 0.00033504117163829505, 0.00040463366894982755, 0.0002549561613705009, 0.002156077418476343, 0.0009128456003963947, 0.004697240889072418, 0.03677550330758095, 0.021370267495512962, 1.3833624124526978, 0.28173184394836426, 0.010691151022911072], "tokens": [13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 3617, 278, 1353, 310, 3651, 297, 278, 1108, 29889, 13, 268, 334, 732, 2457, 1353, 310, 3651, 297, 278, 1108, 13, 268, 3776, 13, 1678, 6364, 938, 679, 26036, 8009, 6185, 2459, 10444, 1849, 580, 426, 13, 4706, 736, 954, 6185, 2459]}
{"line_number": 296, "line_type": "original", "code": "        for (int i = 0; i < height; i++) {", "entropy": 1.0786168575286865, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [7.4450602531433105, 3.8027687072753906, 0.00812002457678318, 0.06237056478857994, 0.49368971586227417, 0.007774688303470612, 0.2479405552148819, 0.10293763130903244, 0.014043441042304039, 0.00527063338086009, 0.012124882079660892, 4.829475402832031, 0.172573983669281, 0.03776710107922554, 0.012358162552118301, 0.003594605950638652], "tokens": [308, 363, 313, 524, 474, 353, 29871, 29900, 29936, 474, 529, 3171, 29936, 474, 4862, 426]}
{"line_number": 296, "line_type": "generated", "code": "\n    /**\n     * Get the current solution.\n     *", "entropy": 0.3149498701095581, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [0.07748744636774063, 0.5688765048980713, 0.2314675748348236, 0.12447457015514374, 0.005768556613475084, 0.0005137792322784662, 1.3252136707305908, 0.11549201607704163, 1.3384863138198853, 0.4201850891113281, 0.18537703156471252, 0.010209597647190094, 0.001583870965987444, 0.004162220750004053], "tokens": [13, 1678, 7762, 13, 268, 334, 3617, 278, 1857, 1650, 29889, 13, 268, 334]}
{"line_number": 297, "line_type": "original", "code": "            for (int j = 0; j < width - 1; j++) {", "entropy": 1.117509126663208, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [9.023090362548828, 4.14365291595459, 0.014455827884376049, 0.07837513834238052, 1.4882786273956299, 0.017765913158655167, 0.49075981974601746, 0.12469211220741272, 0.0122537175193429, 0.009493563324213028, 0.017176441848278046, 3.0375757217407227, 2.4639859199523926, 0.1622755527496338, 0.05170377343893051, 0.029741737991571426, 0.04621381312608719, 0.012053744867444038, 0.00912861991673708], "tokens": [632, 363, 313, 524, 432, 353, 29871, 29900, 29936, 432, 529, 2920, 448, 29871, 29896, 29936, 432, 4862, 426]}
{"line_number": 297, "line_type": "generated", "code": "\n    /**\n     * Get the number of artificial variables used in the problem.\n     * @return the number of artificial variables used in the problem.\n     */\n    public int getNumArtificialVariables() {\n        return num", "entropy": 0.35080796480178833, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [0.0933331698179245, 0.43115943670272827, 0.1990351527929306, 0.15721194446086884, 0.003797701792791486, 0.0005181877058930695, 1.3997337818145752, 0.14567789435386658, 2.75242280960083, 0.0048182569444179535, 1.8147177696228027, 0.04927206039428711, 2.511664390563965, 0.9996428489685059, 0.7984897494316101, 2.5162596702575684, 0.11990398168563843, 0.08016609400510788, 0.003939369227737188, 0.010064803063869476, 0.1557522565126419, 0.004310721065849066, 0.7033714056015015, 0.014837860129773617, 0.003217284567654133, 0.023013295605778694, 0.007055132184177637, 0.2712583839893341, 0.04187631607055664, 0.003689864184707403, 0.004034238401800394, 1.023712396621704, 0.016937367618083954, 0.007000916637480259, 0.019473910331726074, 0.001719545223750174, 0.01465860940515995, 1.6244699954986572, 0.029706213623285294, 0.004613588564097881, 0.0677090510725975, 0.009513990953564644, 0.0021014767698943615, 0.002775390399619937, 0.007351253181695938, 0.0005783553933724761, 0.005606403108686209, 0.0017467968864366412, 0.014933227561414242, 0.014444783329963684, 0.0075806803070008755, 0.041134558618068695], "tokens": [13, 1678, 7762, 13, 268, 334, 3617, 278, 1353, 310, 23116, 3651, 1304, 297, 278, 1108, 29889, 13, 268, 334, 732, 2457, 278, 1353, 310, 23116, 3651, 1304, 297, 278, 1108, 29889, 13, 268, 3776, 13, 1678, 970, 938, 679, 8009, 9986, 928, 616, 10444, 1849, 580, 426, 13, 4706, 736, 954]}
{"line_number": 298, "line_type": "original", "code": "                matrix[i][j] = getEntry(i + 1, j + 1);", "entropy": 1.2081408500671387, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [6.9625749588012695, 9.676385879516602, 1.524751901626587, 1.005496621131897, 0.3367874026298523, 0.7580629587173462, 0.31747859716415405, 0.29835307598114014, 2.372556686401367, 0.15360629558563232, 0.028016313910484314, 0.15211182832717896, 0.5660899877548218, 0.08647505193948746, 0.0037857070565223694, 0.010019483976066113, 0.1027570441365242, 0.5787451863288879, 0.3345656096935272, 0.013639586046338081, 0.08869795501232147], "tokens": [462, 4636, 29961, 29875, 3816, 29926, 29962, 353, 679, 9634, 29898, 29875, 718, 29871, 29896, 29892, 432, 718, 29871, 29896, 416]}
{"line_number": 298, "line_type": "generated", "code": "\n     * @param coefficients coefficients to evaluate\n     * @return the value of the objective function\n     */\n    protected double getObjectiveFunctionValue(final double[] coefficients) {\n        double value = 0;\n        for (int", "entropy": 0.35561323165893555, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [0.25821587443351746, 0.35232722759246826, 0.1274518519639969, 1.609395146369934, 0.4502878785133362, 1.7996413707733154, 1.0518124103546143, 0.9255439043045044, 2.1334733963012695, 0.42708972096443176, 0.14008529484272003, 0.0505354069173336, 0.008465004153549671, 0.1481422632932663, 0.8830001354217529, 0.5545507669448853, 0.16161340475082397, 0.058249060064554214, 0.5484822988510132, 0.18087802827358246, 1.2668683528900146, 0.042311325669288635, 0.14739568531513214, 0.006695810705423355, 0.07072669267654419, 0.6435268521308899, 0.045344945043325424, 0.5541802048683167, 0.6558724045753479, 0.006160555873066187, 0.27050718665122986, 0.2504832148551941, 0.010533686727285385, 0.07013240456581116, 0.278366357088089, 0.030080612748861313, 0.0068702190183103085, 0.011775861494243145, 0.006769461557269096, 0.010622742585837841, 0.18183758854866028, 0.49288105964660645, 0.8275821208953857, 0.008685313165187836, 0.1503056138753891, 0.003980808891355991, 0.059397779405117035, 0.013149802573025227, 0.288900762796402, 0.1958833485841751, 0.0034994573798030615, 0.011320643126964569], "tokens": [13, 268, 334, 732, 3207, 16127, 16127, 304, 14707, 13, 268, 334, 732, 2457, 278, 995, 310, 278, 12091, 740, 13, 268, 3776, 13, 1678, 6364, 3765, 679, 2061, 573, 6678, 1917, 29898, 8394, 3765, 2636, 16127, 29897, 426, 13, 4706, 3765, 995, 353, 29871, 29900, 29936, 13, 4706, 363, 313, 524]}
{"line_number": 300, "line_type": "original", "code": "            matrix[i][width - 1] = getEntry(i + 1, getRhsOffset());", "entropy": 1.4490903615951538, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [5.116271495819092, 4.66603946685791, 1.357028841972351, 2.634469747543335, 0.5968717932701111, 7.618640899658203, 1.1421853303909302, 0.07810163497924805, 0.04555830359458923, 0.025966212153434753, 1.4277294874191284, 3.936652660369873, 0.3376411497592926, 0.0031175841577351093, 0.3211572766304016, 1.4662728309631348, 0.034497104585170746, 0.002142516663298011, 0.003190310439094901, 2.881168842315674, 0.34707018733024597, 0.0023755207657814026, 0.005364665295928717, 0.7286518216133118], "tokens": [632, 4636, 29961, 29875, 3816, 2103, 448, 29871, 29896, 29962, 353, 679, 9634, 29898, 29875, 718, 29871, 29896, 29892, 679, 29934, 9499, 10302, 3310]}
{"line_number": 300, "line_type": "generated", "code": "\n     * </p>\n     * @param rowIndex row to subtract from\n     * @param subtractFromRow row to subtract from\n     * @param factor multiple to subtract\n     */\n    private void subtractRow(final int rowIndex", "entropy": 0.32125377655029297, "is_bug_line": false, "sus_score": 0.31622776601683794, "per_token_entropy": [0.2179032415151596, 0.09222812205553055, 0.004061664454638958, 0.5637305378913879, 0.0021058782003819942, 0.009915738366544247, 0.005553887225687504, 0.02280217967927456, 0.004217896144837141, 0.07521214336156845, 0.0012031705118715763, 1.2314993143081665, 1.5726981163024902, 1.4686914682388306, 0.8916143178939819, 0.19583621621131897, 0.1295807957649231, 0.14099368453025818, 0.007858905009925365, 0.0002885640424210578, 0.0017273995326831937, 0.00023803261865396053, 2.397136926651001, 1.1519155502319336, 0.3400842845439911, 0.6903267502784729, 0.0473274290561676, 0.21968959271907806, 0.24412418901920319, 0.15532441437244415, 0.0007925468380562961, 0.006279499735683203, 0.0006828360492363572, 0.0010870745172724128, 1.1234557628631592, 1.3097683191299438, 0.6389687061309814, 0.09483140707015991, 0.241319477558136, 0.02178209275007248, 0.14379312098026276, 0.004627353046089411, 0.017836177721619606, 1.1263080835342407, 0.005278578493744135, 0.009119406342506409, 0.005149197764694691, 0.0029046034906059504, 0.05027810484170914, 0.005641017109155655, 0.008127355016767979, 0.0012752028414979577], "tokens": [13, 268, 334, 1533, 29886, 29958, 13, 268, 334, 732, 3207, 1948, 3220, 1948, 304, 23197, 515, 13, 268, 334, 732, 3207, 23197, 4591, 4301, 1948, 304, 23197, 515, 13, 268, 334, 732, 3207, 7329, 2999, 304, 23197, 13, 268, 3776, 13, 1678, 2024, 1780, 23197, 4301, 29898, 8394, 938, 1948, 3220]}
