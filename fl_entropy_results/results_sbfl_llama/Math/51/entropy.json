{"line_number": 124, "line_type": "original", "code": "        return solve(maxEval, f, min, max, startValue, AllowedSolution.ANY_SIDE);", "entropy": 1.0108957290649414, "is_bug_line": false, "sus_score": 0.2773500981126146, "per_token_entropy": [6.85275936126709, 7.335498332977295, 4.315175533294678, 0.5242346525192261, 1.8167717456817627, 0.011359302327036858, 0.3050912618637085, 0.5384411811828613, 0.0596894696354866, 0.018610507249832153, 2.065356492996216, 0.018576456233859062, 0.23656022548675537, 0.009493090212345123, 0.7003554701805115, 0.016640555113554, 0.3091960847377777, 2.3422484397888184, 7.366862701019272e-05, 0.0008859285153448582, 0.000254241080256179, 0.03201563283801079, 0.7417278289794922, 9.119095193454996e-05, 0.005947155877947807, 0.0019996424671262503, 0.0007070187130011618, 0.045319538563489914], "tokens": [308, 736, 4505, 29898, 3317, 29923, 791, 29892, 285, 29892, 1375, 29892, 4236, 29892, 1369, 1917, 29892, 2178, 20937, 13296, 918, 29889, 2190, 29979, 29918, 29903, 22027, 416]}
{"line_number": 124, "line_type": "generated", "code": "\n                if (inverted) {\n                    // The interval has been inverted, so the approximation has\n                    // switched to the other bound.\n                    x0 = x1;\n                    f0 = f1;", "entropy": 0.5432937741279602, "is_bug_line": false, "sus_score": 0.2773500981126146, "per_token_entropy": [0.4453281760215759, 0.5695325136184692, 1.2856981754302979, 0.09984751045703888, 0.11499133706092834, 6.389413465512916e-05, 0.0001102625101339072, 0.09797660261392593, 0.002328781643882394, 0.010072709992527962, 0.21220354735851288, 0.007590736728161573, 0.444941908121109, 1.495858073234558, 0.6281093955039978, 0.6413841843605042, 0.5709410905838013, 0.1231413409113884, 0.00016366096679121256, 2.480663776397705, 1.4716130495071411, 1.4950534105300903, 4.247734069824219, 2.4462742805480957, 0.37825068831443787, 0.0010663543362170458, 0.0002485204895492643, 0.0003097769513260573, 3.382429599761963, 1.047419786453247, 0.17066258192062378, 0.7210149765014648, 0.27857598662376404, 0.49269407987594604, 0.9517679214477539, 0.3810259997844696, 0.0018519884906709194, 0.4366362690925598, 0.367710143327713, 0.0044461446814239025, 0.022686000913381577, 0.2296423763036728, 0.004811257589608431, 0.029805148020386696, 0.06391364336013794, 0.0003051292151212692, 0.20650601387023926, 0.0016371908131986856, 0.0001839230244513601, 0.020908072590827942, 0.16293948888778687, 0.0002029928145930171], "tokens": [13, 18884, 565, 313, 262, 1765, 287, 29897, 426, 13, 462, 1678, 849, 450, 7292, 756, 1063, 21292, 287, 29892, 577, 278, 16845, 756, 13, 462, 1678, 849, 26263, 304, 278, 916, 3216, 29889, 13, 462, 1678, 921, 29900, 353, 921, 29896, 29936, 13, 462, 1678, 285, 29900, 353, 285, 29896, 29936]}
{"line_number": 171, "line_type": "original", "code": "            if (f1 * fx < 0) {", "entropy": 1.6499892473220825, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [7.51175594329834, 3.274569034576416, 0.12305670231580734, 2.1855008602142334, 0.24207663536071777, 2.632871150970459, 0.23736132681369781, 3.454054355621338, 1.523573398590088, 0.02565266378223896, 0.0011156531982123852, 0.23411166667938232, 0.004159846343100071], "tokens": [632, 565, 313, 29888, 29896, 334, 285, 29916, 529, 29871, 29900, 29897, 426]}
{"line_number": 171, "line_type": "generated", "code": "\n                    // Update the search interval.\n                default:\n                    // Should never happen.\n                }\n            }\n\n            // If the root is bracketed, then we can use the root-finding\n            // toler", "entropy": 0.5161885023117065, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [0.1611880511045456, 1.0799686908721924, 0.2849166691303253, 0.7128469347953796, 2.373450994491577, 1.2143551111221313, 0.9670205116271973, 0.03535012528300285, 0.6457462906837463, 0.06054069474339485, 0.6836853623390198, 0.301501989364624, 0.004041243344545364, 0.013935292139649391, 0.04349983111023903, 0.009647767059504986, 0.08766160160303116, 0.1014188602566719, 0.008357550948858261, 0.003096668515354395, 0.019821541383862495, 0.007218826096504927, 0.2040010243654251, 0.006414894014596939, 0.007022934500128031, 0.26953357458114624, 0.012035489082336426, 0.0598992295563221, 0.1789419800043106, 0.035076916217803955, 0.0488666370511055, 0.8299853801727295, 0.19318217039108276, 2.7655065059661865, 0.42901211977005005, 0.4779013395309448, 0.0017982041463255882, 0.009607152082026005, 0.7466549873352051, 1.6110581159591675, 1.23680579662323, 0.6187664866447449, 1.6856346130371094, 0.41065359115600586, 2.149899959564209, 0.6893171668052673, 1.1474475860595703, 0.07695864886045456, 0.2458958625793457, 0.0006079017766751349, 0.0010599239030852914, 1.872984766960144], "tokens": [13, 462, 1678, 849, 10318, 278, 2740, 7292, 29889, 13, 18884, 2322, 29901, 13, 462, 1678, 849, 10575, 2360, 3799, 29889, 13, 18884, 500, 13, 9651, 500, 13, 13, 9651, 849, 960, 278, 3876, 338, 4105, 3522, 287, 29892, 769, 591, 508, 671, 278, 3876, 29899, 2886, 292, 13, 9651, 849, 20341]}
{"line_number": 174, "line_type": "original", "code": "                x0 = x1;", "entropy": 2.087003469467163, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [4.113156318664551, 9.446743965148926, 0.7271265983581543, 0.015858596190810204, 0.10997670143842697, 0.04193747788667679, 0.1542229801416397], "tokens": [462, 921, 29900, 353, 921, 29896, 29936]}
{"line_number": 174, "line_type": "generated", "code": "\n                }\n            }\n\n            // If the absolute value of the last approximation is too small,\n            // given the absolute accuracy, then we can't get closer to the\n            // root than we already are.\n            if (", "entropy": 0.16691939532756805, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [0.11943703144788742, 0.2572444975376129, 0.11204508692026138, 0.004850050900131464, 0.11555850505828857, 0.00547990994527936, 0.019774675369262695, 0.10042828321456909, 0.027099579572677612, 0.03593071177601814, 0.8960201144218445, 0.19758744537830353, 2.047386884689331, 2.02626895904541, 0.021685393527150154, 0.1260446161031723, 0.3970213234424591, 0.05251510441303253, 0.04392637684941292, 0.9956759214401245, 0.0731593668460846, 0.07495270669460297, 0.036976106464862823, 0.00018261195509694517, 0.00024029705673456192, 0.063260018825531, 0.004083510022610426, 0.15014620125293732, 0.041122205555438995, 0.01446499302983284, 0.03399277478456497, 0.01812444068491459, 0.05360659211874008, 0.07358485460281372, 0.0001820160250645131, 0.005685468204319477, 0.003888903185725212, 0.032020825892686844, 0.08043792843818665, 0.01973891071975231, 0.0002562671434134245, 0.00047052756417542696, 0.005891932174563408, 0.005282254423946142, 0.001320562674663961, 0.014480854384601116, 0.0004930472350679338, 0.01028641127049923, 0.025910573080182076, 0.025062941014766693, 0.17433816194534302, 0.03418333828449249], "tokens": [13, 18884, 500, 13, 9651, 500, 13, 13, 9651, 849, 960, 278, 8380, 995, 310, 278, 1833, 16845, 338, 2086, 2319, 29892, 13, 9651, 849, 2183, 278, 8380, 13600, 29892, 769, 591, 508, 29915, 29873, 679, 17649, 304, 278, 13, 9651, 849, 3876, 1135, 591, 2307, 526, 29889, 13, 9651, 565, 313]}
{"line_number": 175, "line_type": "original", "code": "                f0 = f1;", "entropy": 2.465965747833252, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [5.557894229888916, 9.693585395812988, 0.8569386601448059, 0.15427365899085999, 0.9029505252838135, 0.03968239203095436, 0.056433260440826416], "tokens": [462, 285, 29900, 353, 285, 29896, 29936]}
{"line_number": 175, "line_type": "generated", "code": "\n            }\n\n            // If the absolute accuracy is satisfied, return the current\n            // approximation.\n            if (FastMath.abs(x1 - x0) <= atol) {\n                return x1;\n            }", "entropy": 0.22323253750801086, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [0.11284034699201584, 0.4015190601348877, 0.024558018893003464, 0.036851223558187485, 0.13601630926132202, 0.032100025564432144, 0.03806987404823303, 0.8686160445213318, 0.20740875601768494, 2.0835413932800293, 1.1206693649291992, 0.35297712683677673, 1.1330205202102661, 0.1681251972913742, 0.6860959529876709, 0.1939169466495514, 1.2761746644973755, 0.755398690700531, 0.0006982034537941217, 0.0013848486123606563, 0.17005111277103424, 0.13889390230178833, 0.055821508169174194, 0.023228907957673073, 0.1723576933145523, 0.05589117854833603, 0.0619642548263073, 0.0001530530134914443, 0.00027426297310739756, 0.000388665939681232, 0.0007460909546352923, 0.008639222010970116, 0.08801154047250748, 0.07199972867965698, 0.10589632391929626, 0.07243868708610535, 0.00312816072255373, 0.0008874768391251564, 0.060249701142311096, 0.18757641315460205, 0.0004472924047149718, 0.1377680003643036, 0.0012523435289040208, 0.0014699617167934775, 0.10392992198467255, 0.41523095965385437, 0.020077921450138092, 0.0039107524789869785, 0.0010325344046577811, 0.0012466285843402147, 0.01257431972771883, 0.000570253818295896], "tokens": [13, 9651, 500, 13, 13, 9651, 849, 960, 278, 8380, 13600, 338, 15787, 29892, 736, 278, 1857, 13, 9651, 849, 16845, 29889, 13, 9651, 565, 313, 29943, 579, 11309, 29889, 6897, 29898, 29916, 29896, 448, 921, 29900, 29897, 5277, 472, 324, 29897, 426, 13, 18884, 736, 921, 29896, 29936, 13, 9651, 500]}
{"line_number": 176, "line_type": "original", "code": "                inverted = !inverted;", "entropy": 2.1916987895965576, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [7.395791530609131, 10.420614242553711, 0.002083751605823636, 0.0812358483672142, 1.680984616279602, 0.12665028870105743, 0.0016502822982147336, 0.003045446705073118, 0.013231215067207813], "tokens": [462, 21292, 287, 353, 1738, 262, 1765, 287, 29936]}
{"line_number": 176, "line_type": "generated", "code": "\n            // If the relative error is less than the function value\n            // accuracy, then we can't get closer to the root than we\n            // already are.\n            if (FastMath.abs(x1 - x0)", "entropy": 0.28716766834259033, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [0.05195968970656395, 0.3709121644496918, 0.11455005407333374, 0.6059140563011169, 0.18301843106746674, 2.5176632404327393, 1.3640657663345337, 0.33735722303390503, 1.9437576532363892, 0.049846209585666656, 0.14349377155303955, 0.6388093829154968, 0.2555650472640991, 1.7503424882888794, 0.0014907924924045801, 0.002002259949222207, 0.05704643577337265, 0.05356105417013168, 1.1185804605484009, 0.44099941849708557, 0.23230677843093872, 0.3693254590034485, 0.0005385617259889841, 0.024463333189487457, 0.08793894201517105, 0.1624130755662918, 0.004067007452249527, 0.023258958011865616, 0.027628500014543533, 0.05276482179760933, 0.15152527391910553, 0.0007842087652534246, 0.001608269871212542, 0.031002363190054893, 0.0009279712685383856, 0.06254638731479645, 0.053537555038928986, 0.024111026898026466, 0.41369128227233887, 0.15690253674983978, 0.10048747062683105, 0.00015960850578267127, 0.000271879427600652, 0.0008515069494023919, 0.0055434550158679485, 0.5838980078697205, 0.21118536591529846, 0.07756202667951584, 0.02489260770380497, 0.03892363980412483, 0.005335852038115263, 0.0013299677520990372], "tokens": [13, 9651, 849, 960, 278, 6198, 1059, 338, 3109, 1135, 278, 740, 995, 13, 9651, 849, 13600, 29892, 769, 591, 508, 29915, 29873, 679, 17649, 304, 278, 3876, 1135, 591, 13, 9651, 849, 2307, 526, 29889, 13, 9651, 565, 313, 29943, 579, 11309, 29889, 6897, 29898, 29916, 29896, 448, 921, 29900, 29897]}
{"line_number": 178, "line_type": "original", "code": "                switch (method) {", "entropy": 3.236534595489502, "is_bug_line": true, "sus_score": 0.21320071635561041, "per_token_entropy": [5.414346694946289, 6.416650772094727, 0.02046470157802105, 7.536578178405762, 0.02596656046807766, 0.005199007224291563], "tokens": [462, 4607, 313, 5696, 29897, 426]}
{"line_number": 178, "line_type": "generated", "code": "\n            if (FastMath.abs(x1 - x0) <=\n                    (rtol * FastMath.abs(x1)) + atol) {\n                return x1;\n            }\n        }\n    }", "entropy": 0.23628000915050507, "is_bug_line": true, "sus_score": 0.21320071635561041, "per_token_entropy": [0.4187578558921814, 0.30980589985847473, 0.8676397204399109, 0.20768192410469055, 0.2605368196964264, 0.0002949994814116508, 0.0004234609368722886, 0.0023725475184619427, 0.0072615500539541245, 0.01579499989748001, 0.04134264215826988, 0.2013808786869049, 0.009780699387192726, 0.0017203782917931676, 0.00096703483723104, 0.0014431786257773638, 0.1870567798614502, 2.1784043312072754, 0.9446046352386475, 0.23221085965633392, 0.9468111991882324, 1.3629287481307983, 0.0003880701260641217, 0.2589012682437897, 0.513719916343689, 0.0007811117684468627, 0.0020334296859800816, 0.5369417667388916, 0.0033635490108281374, 0.002861573826521635, 0.016833750531077385, 0.916266918182373, 0.02513594925403595, 0.17419776320457458, 0.0011021974496543407, 0.022915897890925407, 0.02002873085439205, 0.006271681282669306, 0.16592952609062195, 0.5372229814529419, 0.043652988970279694, 0.004361521918326616, 0.0037804816383868456, 0.00562560698017478, 0.020844096317887306, 0.005015529692173004, 0.020509550347924232, 0.5577911138534546, 0.010550200939178467, 0.029487477615475655, 0.17223206162452698, 0.008592420257627964], "tokens": [13, 9651, 565, 313, 29943, 579, 11309, 29889, 6897, 29898, 29916, 29896, 448, 921, 29900, 29897, 5277, 13, 462, 1678, 313, 2273, 324, 334, 23786, 11309, 29889, 6897, 29898, 29916, 29896, 876, 718, 472, 324, 29897, 426, 13, 18884, 736, 921, 29896, 29936, 13, 9651, 500, 13, 4706, 500, 13, 1678, 500]}
{"line_number": 192, "line_type": "original", "code": "            x1 = x;", "entropy": 2.2391209602355957, "is_bug_line": true, "sus_score": 0.21320071635561041, "per_token_entropy": [7.128751754760742, 4.781859397888184, 0.8499852418899536, 0.03768100589513779, 0.34093141555786133, 0.29551565647125244], "tokens": [632, 921, 29896, 353, 921, 29936]}
{"line_number": 192, "line_type": "generated", "code": "\n                default:\n                    throw new MathInternalError();\n                }\n            }\n\n            // Update the new interval with the new approximation.\n            if (inverted) {\n                x0 = x;\n            } else", "entropy": 0.29580622911453247, "is_bug_line": true, "sus_score": 0.21320071635561041, "per_token_entropy": [0.11344895511865616, 0.15853311121463776, 0.12138345092535019, 0.0015581621555611491, 0.003887834493070841, 0.01778102107346058, 0.0031223376281559467, 0.08513590693473816, 0.002080777660012245, 0.0037762064021080732, 0.0025601964443922043, 0.00086198840290308, 0.013738947920501232, 0.008356604725122452, 0.05154765397310257, 0.0022649129386991262, 0.0026751705445349216, 0.03430464118719101, 0.0016280265990644693, 0.013385784812271595, 0.23035426437854767, 0.08256211131811142, 0.11774817109107971, 1.2338870763778687, 0.5844969749450684, 2.5729823112487793, 2.232231616973877, 2.0963335037231445, 0.08640430867671967, 0.3738587498664856, 0.053808704018592834, 0.07881218940019608, 0.03589919954538345, 0.1485491394996643, 1.0531928539276123, 0.068172387778759, 1.576892614364624, 0.0009664393728598952, 0.0009738231892697513, 0.020810354501008987, 0.0009848987683653831, 0.0032820426858961582, 0.06312919408082962, 0.20839819312095642, 1.2249348163604736, 0.0018130784155800939, 0.01273522898554802, 0.42494386434555054, 0.0061237090267241, 0.14035841822624207, 0.0010443239007145166, 0.0032071841415017843], "tokens": [13, 18884, 2322, 29901, 13, 462, 1678, 3183, 716, 5792, 16491, 2392, 890, 13, 18884, 500, 13, 9651, 500, 13, 13, 9651, 849, 10318, 278, 716, 7292, 411, 278, 716, 16845, 29889, 13, 9651, 565, 313, 262, 1765, 287, 29897, 426, 13, 18884, 921, 29900, 353, 921, 29936, 13, 9651, 500, 1683]}
{"line_number": 193, "line_type": "original", "code": "            f1 = fx;", "entropy": 2.7894785404205322, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [7.618275165557861, 8.317090034484863, 0.8059971332550049, 0.2029658704996109, 1.7415087223052979, 0.8298099040985107, 0.01069999672472477], "tokens": [632, 285, 29896, 353, 285, 29916, 29936]}
{"line_number": 193, "line_type": "generated", "code": "\n                    throw new MathInternalError();\n                }\n            }\n\n            // Calculate the function value at the new approximation.\n            f1 = computeObjectiveValue(x1);\n\n            // If the new approximation is the", "entropy": 0.21702462434768677, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [0.13374556601047516, 0.6738589406013489, 0.05507897213101387, 0.3124689757823944, 0.007453963626176119, 0.015965599566698074, 0.015358395874500275, 0.0009085579658858478, 0.021971967071294785, 0.045309629291296005, 0.12307588011026382, 0.004558291286230087, 0.004188218619674444, 0.04639477655291557, 0.002029028022661805, 0.011430725455284119, 0.24688082933425903, 0.06982839852571487, 0.09503890573978424, 2.4140818119049072, 0.00862291269004345, 0.17769841849803925, 1.1254310607910156, 0.20041930675506592, 0.8219896554946899, 0.2672090530395508, 0.3944140374660492, 0.055489666759967804, 0.06645998358726501, 0.029385732486844063, 0.013708493672311306, 0.1250912994146347, 0.006323448847979307, 0.0018262865487486124, 0.34699875116348267, 0.0004477690381463617, 0.0008313775178976357, 0.0003927174839191139, 0.0007098776986822486, 0.0012025751639157534, 0.02919691428542137, 0.003190429415553808, 0.005792024079710245, 0.43053650856018066, 0.08700627088546753, 0.04896199330687523, 0.7213274836540222, 0.1764761060476303, 0.9531519412994385, 0.06014856696128845, 0.23649924993515015, 0.5887123942375183], "tokens": [13, 462, 1678, 3183, 716, 5792, 16491, 2392, 890, 13, 18884, 500, 13, 9651, 500, 13, 13, 9651, 849, 20535, 403, 278, 740, 995, 472, 278, 716, 16845, 29889, 13, 9651, 285, 29896, 353, 10272, 2061, 573, 1917, 29898, 29916, 29896, 416, 13, 13, 9651, 849, 960, 278, 716, 16845, 338, 278]}
{"line_number": 198, "line_type": "original", "code": "            if (FastMath.abs(f1) <= ftol) {", "entropy": 1.1940664052963257, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [9.989574432373047, 3.919232130050659, 0.13421036303043365, 2.399362325668335, 0.0010068115079775453, 0.00048160876031033695, 0.0016189813613891602, 0.028067894279956818, 0.005004379898309708, 1.353574514389038, 0.9490874409675598, 0.10112670809030533, 0.9621293544769287, 0.343010276556015, 5.590759246842936e-05, 0.10746634751558304, 0.004121026024222374], "tokens": [632, 565, 313, 29943, 579, 11309, 29889, 6897, 29898, 29888, 29896, 29897, 5277, 11791, 324, 29897, 426]}
{"line_number": 198, "line_type": "generated", "code": "\n\n    /**\n     * Returns the value of the objective function at the specified point.\n     *\n     * @param point Point at which the objective function must be evaluated.\n     * @return the value of the objective function at the specified", "entropy": 0.30025994777679443, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [0.10288751870393753, 1.3561336994171143, 0.2583349049091339, 0.04491843655705452, 0.2995145618915558, 0.005174814257770777, 0.0006083783227950335, 2.87158203125, 0.43673864006996155, 2.1616084575653076, 0.05458345264196396, 0.08661772310733795, 0.46949151158332825, 0.014527382329106331, 1.4620592594146729, 0.43096083402633667, 1.0120911598205566, 0.361213743686676, 0.040436215698719025, 0.048902057111263275, 0.003844253486022353, 0.008507792837917805, 0.5071918964385986, 0.005636986810714006, 0.002328781643882394, 0.04043976590037346, 0.007822947576642036, 1.2500452995300293, 0.3529735207557678, 0.036520496010780334, 0.0012232924345880747, 0.01544103678315878, 0.060590848326683044, 0.007090642582625151, 0.25887125730514526, 0.0010640918044373393, 0.08580394834280014, 0.005293519701808691, 0.0030946482438594103, 0.004709105938673019, 0.004688342101871967, 0.025920098647475243, 0.007036547642201185, 0.4607762098312378, 0.1573113650083542, 0.05345755070447922, 0.017561066895723343, 0.04294053092598915, 0.005485363770276308, 0.5504686832427979, 0.09480657428503036, 0.01618543453514576], "tokens": [13, 13, 1678, 7762, 13, 268, 334, 16969, 278, 995, 310, 278, 12091, 740, 472, 278, 6790, 1298, 29889, 13, 268, 334, 13, 268, 334, 732, 3207, 1298, 8984, 472, 607, 278, 12091, 740, 1818, 367, 19030, 29889, 13, 268, 334, 732, 2457, 278, 995, 310, 278, 12091, 740, 472, 278, 6790]}
{"line_number": 229, "line_type": "original", "code": "            if (FastMath.abs(x1 - x0) < FastMath.max(rtol * FastMath.abs(x1),", "entropy": 0.9437729716300964, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [9.22343635559082, 4.293277263641357, 0.1138617992401123, 3.6817054748535156, 0.004109272733330727, 0.0012973472476005554, 0.00259515387006104, 0.06076250225305557, 0.010704124346375465, 1.4913840293884277, 0.9956197738647461, 0.20954635739326477, 0.02534099481999874, 0.04286344349384308, 0.0035669293720275164, 1.3380093574523926, 1.4969197511672974, 0.0016445695655420423, 0.004912331234663725, 3.2801740169525146, 0.019195040687918663, 3.1757469177246094, 0.0012422234285622835, 0.271451860666275, 0.10830258578062057, 0.0012662734370678663, 0.002839107532054186, 0.07269001752138138, 0.003475460922345519, 0.009110900573432446, 0.15537665784358978, 0.0983063131570816], "tokens": [632, 565, 313, 29943, 579, 11309, 29889, 6897, 29898, 29916, 29896, 448, 921, 29900, 29897, 529, 23786, 11309, 29889, 3317, 29898, 2273, 324, 334, 23786, 11309, 29889, 6897, 29898, 29916, 29896, 511]}
{"line_number": 229, "line_type": "generated", "code": "\n\n    /**\n     * Class used to compute the root of a real polynomial function.\n     *", "entropy": 0.8702418804168701, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [0.09197067469358444, 1.2607090473175049, 0.22325456142425537, 0.09601328521966934, 0.6514940857887268, 0.00355897075496614, 0.003106769872829318, 3.624115228652954, 2.201900005340576, 0.41115695238113403, 2.2515881061553955, 0.687579333782196, 1.9315437078475952, 0.11991783231496811, 0.28749746084213257, 1.1504204273223877, 1.270729422569275, 1.5649853944778442, 1.007235050201416, 0.10371533781290054, 0.014592821709811687, 0.18823681771755219], "tokens": [13, 13, 1678, 7762, 13, 268, 334, 4134, 1304, 304, 10272, 278, 3876, 310, 263, 1855, 10159, 740, 29889, 13, 268, 334]}
{"line_number": 246, "line_type": "original", "code": "        }", "entropy": 7.178691387176514, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [9.774968147277832, 4.582414627075195], "tokens": [308, 500]}
{"line_number": 246, "line_type": "generated", "code": "\n    /**\n     * Allowed solutions.\n     */\n    protected enum AllowedSolution {\n\n        /** Any solution is allowed. */\n        ANY_SIDE,\n\n        /** Only solutions below the starting point are allowed", "entropy": 0.32228222489356995, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [0.048563141375780106, 0.9035582542419434, 0.09799163043498993, 1.0373859405517578, 0.003511455375701189, 0.002171184169128537, 2.365595579147339, 0.16985438764095306, 0.7374029755592346, 0.7144676446914673, 0.08950163424015045, 0.008572682738304138, 0.6882169246673584, 0.025951577350497246, 0.007423317059874535, 0.3708326816558838, 0.026998287066817284, 0.018512681126594543, 0.00018571082910057157, 0.0062254793010652065, 0.011585809290409088, 0.005461770575493574, 0.008170749992132187, 0.1831701099872589, 0.004484002944082022, 0.006330674514174461, 0.5294141173362732, 1.397462010383606, 0.7984530329704285, 1.0923027992248535, 0.07740647345781326, 0.03350041061639786, 0.002536058658733964, 0.003873941022902727, 0.007554297335445881, 0.0016304069431498647, 0.0036510254722088575, 0.0013859200989827514, 0.001654209685511887, 0.020670706406235695, 0.0029685499612241983, 0.013594076037406921, 0.0019647832959890366, 0.0026043090038001537, 1.256258249282837, 0.6884458065032959, 0.6544333696365356, 0.08810530602931976, 1.9923120737075806, 0.21960344910621643, 0.30631023645401, 0.018451591953635216], "tokens": [13, 1678, 7762, 13, 268, 334, 2178, 20937, 6851, 29889, 13, 268, 3776, 13, 1678, 6364, 14115, 2178, 20937, 13296, 918, 426, 13, 13, 4706, 7762, 3139, 1650, 338, 6068, 29889, 3776, 13, 4706, 13764, 29979, 29918, 29903, 22027, 29892, 13, 13, 4706, 7762, 9333, 6851, 2400, 278, 6257, 1298, 526, 6068]}
{"line_number": 68, "line_type": "original", "code": "        super(absoluteAccuracy);", "entropy": 2.5301742553710938, "is_bug_line": false, "sus_score": 0.2, "per_token_entropy": [7.524962425231934, 4.60004186630249, 3.3360953330993652, 3.0068130493164062, 0.0018938715802505612, 0.0008702066843397915, 0.00015198028995655477, 1.7705649137496948], "tokens": [308, 2428, 29898, 23552, 7504, 332, 4135, 416]}
{"line_number": 68, "line_type": "generated", "code": "\n        this.allowed = AllowedSolution.ANY_SIDE;\n        return super.solve(maxEval, f, min, max, startValue);\n    }\n\n    /**\n     * Find a zero near", "entropy": 0.1578897088766098, "is_bug_line": false, "sus_score": 0.2, "per_token_entropy": [0.18708595633506775, 1.0043038129806519, 0.6600188612937927, 0.0006322053959593177, 0.01447216048836708, 0.00468573160469532, 0.7136902809143066, 6.329813186312094e-05, 0.00011097769311163574, 3.528532761265524e-05, 0.00042822727118618786, 0.04234743490815163, 6.246371776796877e-05, 0.005958887282758951, 0.00016473367577418685, 0.00016139635408762842, 0.0011810240102931857, 0.0061414809897542, 0.42733243107795715, 0.05039089545607567, 0.11355196684598923, 0.00036435641231946647, 0.00040987672400660813, 2.312633478140924e-05, 0.000532008707523346, 0.002238389104604721, 0.00017569905321579427, 2.7418097943154862e-06, 0.00021896349790040404, 0.0013813963159918785, 0.0001597276859683916, 0.003953380510210991, 0.00044324109330773354, 0.0009184433147311211, 0.028616461902856827, 0.019811607897281647, 0.00019524575327523053, 0.019296541810035706, 0.007661482319235802, 0.8121192455291748, 0.020180150866508484, 0.020043453201651573, 0.07153117656707764, 0.0708087682723999, 0.016578180715441704, 0.700838565826416, 0.002889388706535101, 0.00027783826226368546, 2.4516470432281494, 0.14148057997226715, 0.1663830280303955, 0.4162643253803253], "tokens": [13, 4706, 445, 29889, 24622, 353, 2178, 20937, 13296, 918, 29889, 2190, 29979, 29918, 29903, 22027, 29936, 13, 4706, 736, 2428, 29889, 2929, 345, 29898, 3317, 29923, 791, 29892, 285, 29892, 1375, 29892, 4236, 29892, 1369, 1917, 416, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 10987, 263, 5225, 2978]}
{"line_number": 69, "line_type": "original", "code": "        this.allowed = AllowedSolution.ANY_SIDE;", "entropy": 0.9132452011108398, "is_bug_line": false, "sus_score": 0.2, "per_token_entropy": [9.361538887023926, 4.268197059631348, 0.04232572391629219, 0.24922487139701843, 0.017468057572841644, 0.5264354944229126, 8.749579137656838e-05, 0.00022682955022901297, 0.00012420836719684303, 0.001168402610346675, 0.1309850662946701, 7.760223525110632e-05, 0.0077669997699558735, 0.0002586507180240005, 0.00031025364296510816, 0.005727190990000963], "tokens": [308, 445, 29889, 24622, 353, 2178, 20937, 13296, 918, 29889, 2190, 29979, 29918, 29903, 22027, 29936]}
{"line_number": 69, "line_type": "generated", "code": "\n    /**\n     * {@inheritDoc}\n     *\n     * @since 3.1\n     */\n    public AllowedSolution getAllowedSolution() {\n        return allowed;\n    }\n<|mask", "entropy": 0.19103828072547913, "is_bug_line": false, "sus_score": 0.2, "per_token_entropy": [0.056867726147174835, 0.4052598774433136, 0.0413268581032753, 0.8274600505828857, 0.0038975717034190893, 0.000300958170555532, 1.8789253234863281, 0.0010712367948144674, 0.00010227633902104571, 0.0003840185818262398, 0.0012218636693432927, 0.032976895570755005, 0.005388142075389624, 0.1329793930053711, 0.3007572293281555, 0.0030629171524196863, 0.004199970979243517, 0.3974807858467102, 1.9600536823272705, 0.01177762821316719, 0.347387433052063, 0.00017128908075392246, 0.4820123612880707, 0.012608104385435581, 0.0021815330255776644, 0.03582317754626274, 0.001852583372965455, 0.018649470061063766, 0.17051884531974792, 0.8226056098937988, 0.0003761537664104253, 0.0002047805901383981, 4.482168878894299e-05, 0.0009628665866330266, 0.005092862527817488, 1.4185804502631072e-05, 0.0006992755807004869, 0.00038747431244701147, 0.009179295040667057, 0.006638141814619303, 0.008140480145812035, 0.01689271070063114, 0.007223323453217745, 0.2585136890411377, 0.005618138704448938, 0.0007186928996816278, 0.006071575451642275, 0.0007066613179631531, 0.022547664120793343, 0.9962133169174194, 0.0014774608425796032, 0.6269622445106506], "tokens": [13, 1678, 7762, 13, 268, 334, 26633, 262, 27069, 14526, 29913, 13, 268, 334, 13, 268, 334, 732, 16076, 29871, 29941, 29889, 29896, 13, 268, 3776, 13, 1678, 970, 2178, 20937, 13296, 918, 679, 15930, 287, 13296, 918, 580, 426, 13, 4706, 736, 6068, 29936, 13, 1678, 500, 13, 29966, 29989, 13168]}
{"line_number": 70, "line_type": "original", "code": "        this.method = method;", "entropy": 2.2725582122802734, "is_bug_line": false, "sus_score": 0.2, "per_token_entropy": [9.015327453613281, 5.018025875091553, 0.059489667415618896, 1.5075809955596924, 0.020169051364064217, 0.2752302587032318, 0.01208307221531868], "tokens": [308, 445, 29889, 5696, 353, 1158, 29936]}
{"line_number": 70, "line_type": "generated", "code": "\n    /**\n     * Find a zero near the midpoint of {@code min} and {@code max}.\n     *\n     * @param f Function to solve.\n     * @param min Lower bound for the interval.\n     * @", "entropy": 0.12107326090335846, "is_bug_line": false, "sus_score": 0.2, "per_token_entropy": [0.12474273145198822, 0.5094112157821655, 0.048934634774923325, 0.6773462891578674, 0.00464135454967618, 0.0003369478799868375, 2.7285141944885254, 0.1686779260635376, 0.23177461326122284, 0.4896409213542938, 0.11463424563407898, 0.28155606985092163, 0.03574841469526291, 0.019006511196494102, 0.06734056770801544, 0.0003281293320469558, 0.011239311657845974, 0.0034063193015754223, 0.003700197208672762, 0.02411661297082901, 0.00019035911827813834, 0.00439914595335722, 0.08082833886146545, 0.025538094341754913, 0.007887882180511951, 0.009650246240198612, 0.16626451909542084, 0.0015594713622704148, 0.000490068516228348, 0.02685311809182167, 0.0027434115763753653, 0.17312195897102356, 0.07289563119411469, 0.058220382779836655, 0.024385739117860794, 0.0216977596282959, 0.00033087024348787963, 0.0017231153324246407, 5.566918844124302e-05, 0.0004717191040981561, 0.001073499326594174, 0.013066384010016918, 0.006490104831755161, 0.009428851306438446, 0.014838564209640026, 0.00012051333033014089, 0.007888355292379856, 0.018076442182064056, 0.00026341783814132214, 5.400034933700226e-05, 9.298280929215252e-06, 9.476689592702314e-05], "tokens": [13, 1678, 7762, 13, 268, 334, 10987, 263, 5225, 2978, 278, 7145, 3149, 310, 26633, 401, 1375, 29913, 322, 26633, 401, 4236, 1836, 13, 268, 334, 13, 268, 334, 732, 3207, 285, 6680, 304, 4505, 29889, 13, 268, 334, 732, 3207, 1375, 27723, 3216, 363, 278, 7292, 29889, 13, 268, 334, 732]}
{"line_number": 71, "line_type": "original", "code": "    }", "entropy": 6.194693565368652, "is_bug_line": false, "sus_score": 0.2, "per_token_entropy": [5.4530134201049805, 6.936373710632324], "tokens": [268, 500]}
{"line_number": 71, "line_type": "generated", "code": "\n    protected double doSolve() {\n\n        // check brackets\n        if (min > max) {\n            throw new NumberIsTooLargeException(min, max, true);\n        }\n\n        // check function values", "entropy": 0.30987459421157837, "is_bug_line": false, "sus_score": 0.2, "per_token_entropy": [0.1559663563966751, 0.7672305107116699, 0.9543273448944092, 0.29282575845718384, 0.11224105954170227, 0.0007739647408016026, 6.925819616299123e-05, 0.021697524935007095, 0.02539794333279133, 0.019559603184461594, 1.6434645652770996, 0.1123967170715332, 0.8574483394622803, 1.1291162967681885, 0.7683559060096741, 0.18278144299983978, 0.07107394188642502, 0.6589215993881226, 0.662889838218689, 1.6357214450836182, 0.2563571333885193, 0.043552447110414505, 0.021453579887747765, 0.004085171967744827, 0.0018399705877527595, 0.026274321600794792, 0.011077335104346275, 0.096023790538311, 0.6273435950279236, 6.341733387671411e-05, 5.1973900554003194e-05, 3.3378546504536644e-06, 0.02539341151714325, 2.6225699912174605e-05, 0.00013314791431184858, 0.014162274077534676, 0.24872542917728424, 0.0020170120988041162, 0.04658333584666252, 0.0007999319350346923, 0.0469898022711277, 0.0030175175052136183, 0.0010084786918014288, 0.00951458141207695, 0.0002818902430590242, 0.019262515008449554, 0.41892126202583313, 0.041279386729002, 0.382312536239624, 1.3000736236572266, 1.0980913639068604, 1.2944990396499634], "tokens": [13, 1678, 6364, 3765, 437, 13296, 345, 580, 426, 13, 13, 4706, 849, 1423, 20476, 13, 4706, 565, 313, 1195, 1405, 4236, 29897, 426, 13, 9651, 3183, 716, 9681, 3624, 1762, 29877, 24105, 479, 2451, 29898, 1195, 29892, 4236, 29892, 1565, 416, 13, 4706, 500, 13, 13, 4706, 849, 1423, 740, 1819]}
{"line_number": 149, "line_type": "original", "code": "        final double ftol = getFunctionValueAccuracy();", "entropy": 1.2486079931259155, "is_bug_line": false, "sus_score": 0.19611613513818404, "per_token_entropy": [7.838962078094482, 3.616318941116333, 0.056267060339450836, 2.104205846786499, 0.056619368493556976, 0.18104195594787598, 2.329582691192627, 0.030613509938120842, 0.0017974901711568236, 9.345571743324399e-05, 4.768370445162873e-07, 0.0001227780303452164, 0.016277976334095], "tokens": [308, 2186, 3765, 11791, 324, 353, 679, 6678, 1917, 7504, 332, 4135, 890]}
{"line_number": 149, "line_type": "generated", "code": "\n                if (FastMath.abs(x1 - x0) <= atol ||\n                    FastMath.abs(f1)     <= ftol) {\n                    return x1;\n                }\n<|mask:", "entropy": 0.2727735638618469, "is_bug_line": false, "sus_score": 0.19611613513818404, "per_token_entropy": [0.1284010410308838, 0.2237458974123001, 1.9842442274093628, 0.18322698771953583, 1.602701187133789, 0.00017128908075392246, 4.100715523236431e-05, 0.0003921216703020036, 0.008489826694130898, 0.005969434045255184, 0.6365327835083008, 0.14900650084018707, 0.4096198081970215, 0.69329833984375, 0.014156161807477474, 0.0006739014061167836, 0.20296616852283478, 0.5706984400749207, 0.0001961992384167388, 1.399585247039795, 0.9876732230186462, 0.05519675090909004, 0.1328418254852295, 0.0938468649983406, 8.487341256113723e-05, 0.00020597243565134704, 0.006510120816528797, 0.11475371569395065, 0.5687607526779175, 0.03116426430642605, 0.07790393382310867, 1.668079137802124, 0.00408730935305357, 0.2767893671989441, 1.2397689715726301e-05, 0.0667249783873558, 0.012643535621464252, 0.012548067606985569, 0.3038577735424042, 0.015308855101466179, 0.2154873013496399, 0.16023527085781097, 0.007354684639722109, 0.0013762774178758264, 0.00728604756295681, 0.04232435300946236, 0.0006118332967162132, 0.06956122815608978, 0.5665488243103027, 0.0029075751081109047, 0.45199263095855713, 0.015428123995661736], "tokens": [13, 18884, 565, 313, 29943, 579, 11309, 29889, 6897, 29898, 29916, 29896, 448, 921, 29900, 29897, 5277, 472, 324, 3830, 13, 462, 1678, 23786, 11309, 29889, 6897, 29898, 29888, 29896, 29897, 268, 5277, 11791, 324, 29897, 426, 13, 462, 1678, 736, 921, 29896, 29936, 13, 18884, 500, 13, 29966, 29989, 13168, 29901]}
{"line_number": 150, "line_type": "original", "code": "        final double atol = getAbsoluteAccuracy();", "entropy": 1.876153826713562, "is_bug_line": false, "sus_score": 0.19611613513818404, "per_token_entropy": [7.375269889831543, 8.659201622009277, 0.20016737282276154, 7.850991725921631, 0.11787436902523041, 0.05117916688323021, 0.12929412722587585, 0.001658732071518898, 2.3483953555114567e-05, 7.73638384998776e-05, 1.680836794548668e-05, 3.1470757676288486e-05, 0.004213622305542231], "tokens": [308, 2186, 3765, 472, 324, 353, 679, 4920, 14977, 7504, 332, 4135, 890]}
{"line_number": 150, "line_type": "generated", "code": "\n                case ANY_SIDE:\n                    return x;\n                case LEFT_SIDE:\n                    return x0;\n                case RIGHT_SIDE:\n                    return x1;\n                default:\n                ", "entropy": 0.16903334856033325, "is_bug_line": false, "sus_score": 0.19611613513818404, "per_token_entropy": [0.27382928133010864, 0.13159099221229553, 0.09594213217496872, 0.5525083541870117, 1.311301275563892e-06, 0.00741917546838522, 0.0011598295532166958, 0.00020013237372040749, 0.007349714636802673, 0.030109068378806114, 0.44699937105178833, 0.002588138682767749, 0.5962513089179993, 0.5436753034591675, 1.4516563415527344, 0.012104743160307407, 0.6886904239654541, 0.11029724776744843, 0.6837818622589111, 0.03151501715183258, 9.727005090098828e-05, 1.0490362910786644e-05, 0.0012410327326506376, 0.007110764738172293, 0.10537011176347733, 0.001069212332367897, 0.3251614272594452, 0.4855496287345886, 0.6454145312309265, 0.029789412394165993, 0.0015563768101856112, 0.044952284544706345, 0.09307252615690231, 0.0022469530813395977, 0.00010156115604331717, 0.00014327930693980306, 0.00025817399728111923, 2.884823152271565e-05, 0.0006890306831337512, 0.0020666210912168026, 0.031064076349139214, 0.0011375630274415016, 0.0036373662296682596, 0.0020778034813702106, 0.007421897258609533, 0.0005399914807640016, 0.0018636492313817143, 0.6288555860519409, 0.590172290802002, 0.007362968288362026, 0.030917299911379814, 0.07108426839113235], "tokens": [13, 18884, 1206, 13764, 29979, 29918, 29903, 22027, 29901, 13, 462, 1678, 736, 921, 29936, 13, 18884, 1206, 19246, 29918, 29903, 22027, 29901, 13, 462, 1678, 736, 921, 29900, 29936, 13, 18884, 1206, 390, 22530, 29918, 29903, 22027, 29901, 13, 462, 1678, 736, 921, 29896, 29936, 13, 18884, 2322, 29901, 13, 462]}
{"line_number": 151, "line_type": "original", "code": "        final double rtol = getRelativeAccuracy();", "entropy": 1.847174048423767, "is_bug_line": false, "sus_score": 0.19611613513818404, "per_token_entropy": [7.799493789672852, 5.962588787078857, 0.08465670794248581, 3.7281336784362793, 4.0453267097473145, 0.10613156110048294, 0.39884188771247864, 0.03454063460230827, 9.119095193454996e-05, 8.940656698541716e-06, 9.047575440490618e-05, 0.006185554433614016], "tokens": [308, 2186, 3765, 364, 25027, 353, 679, 18278, 7504, 332, 4135, 890]}
{"line_number": 151, "line_type": "generated", "code": "\n                case LEFT_SIDE:\n                    return x1;\n                case RIGHT_SIDE:\n                    return x0;\n                default:\n                    // Should never happen.\n                }\n            }\n\n           ", "entropy": 0.15548141300678253, "is_bug_line": false, "sus_score": 0.19611613513818404, "per_token_entropy": [0.39590978622436523, 0.7427324056625366, 0.0650058388710022, 0.6265420913696289, 0.013849234208464622, 0.00033456450910307467, 1.1920858014491387e-05, 0.0018364008283242583, 0.013837830163538456, 0.7797440886497498, 0.0028923603240400553, 0.5672693252563477, 0.3363529145717621, 0.9710890054702759, 0.08573556691408157, 0.013463414274156094, 0.305620402097702, 0.11358942836523056, 0.004308347124606371, 0.00011181206355104223, 0.0001892864383989945, 0.0002361257211305201, 0.00020275443966966122, 0.0008120815036818385, 0.0031714164651930332, 0.2659122049808502, 0.0017532228957861662, 0.04982273280620575, 0.07195857912302017, 0.03966944292187691, 0.003215620992705226, 0.0033477472607046366, 0.2547377347946167, 0.7661123871803284, 0.008554480969905853, 0.028155403211712837, 0.05833149328827858, 0.005532074254006147, 0.4246140420436859, 0.1241784393787384, 0.02416316047310829, 0.007475379854440689, 0.062129173427820206, 0.003260892815887928, 0.5879548192024231, 0.010476828552782536, 0.004759411793202162, 0.09511001408100128, 0.003369132988154888, 0.01247166283428669, 0.09048338234424591, 0.03263496235013008], "tokens": [13, 18884, 1206, 19246, 29918, 29903, 22027, 29901, 13, 462, 1678, 736, 921, 29896, 29936, 13, 18884, 1206, 390, 22530, 29918, 29903, 22027, 29901, 13, 462, 1678, 736, 921, 29900, 29936, 13, 18884, 2322, 29901, 13, 462, 1678, 849, 10575, 2360, 3799, 29889, 13, 18884, 500, 13, 9651, 500, 13, 13, 9651]}
{"line_number": 155, "line_type": "original", "code": "        boolean inverted = false;", "entropy": 3.689873218536377, "is_bug_line": false, "sus_score": 0.19611613513818404, "per_token_entropy": [7.783597469329834, 11.344449043273926, 5.25037956237793, 0.16874146461486816, 0.48416435718536377, 0.7872061133384705, 0.010571668855845928], "tokens": [308, 7223, 21292, 287, 353, 2089, 29936]}
{"line_number": 155, "line_type": "generated", "code": "\n                    }\n                    break;\n                case RIGHT_SIDE:\n                    if (!inverted) {\n                        return x1;\n<|mask:1|><|mask:0|>\n                   ", "entropy": 0.04195675626397133, "is_bug_line": false, "sus_score": 0.19611613513818404, "per_token_entropy": [0.2224232703447342, 0.1444365233182907, 0.03770453855395317, 0.008732701651751995, 0.344940721988678, 0.22947683930397034, 0.004055846948176622, 0.5985835194587708, 0.003754829289391637, 0.010572612285614014, 0.06238904595375061, 0.02093398943543434, 0.0021131346002221107, 0.00010740180005086586, 0.00014041867689229548, 0.00020704510097857565, 4.637133679352701e-05, 0.0009035557159222662, 0.003278834745287895, 0.07174301147460938, 0.0018305702833458781, 0.004259442910552025, 0.17745018005371094, 0.0054971007630229, 0.0001858300092862919, 0.00027450130437500775, 0.006150366738438606, 0.0006274400511756539, 0.001149232150055468, 0.014098568819463253, 0.002457695547491312, 0.002028909046202898, 0.000795882020611316, 0.0030790797900408506, 0.0009557208395563066, 0.0009129646932706237, 0.049696266651153564, 0.0002978596603497863, 0.0010893370490521193, 0.0006637753685936332, 0.10103953629732132, 0.0015509016811847687, 0.024926792830228806, 0.00048601735034026206, 0.0005673944251611829, 0.00017391123401466757, 0.004815409891307354, 0.0005402297829277813, 0.0010508735431358218, 0.00266078463755548, 0.002811291255056858, 0.0010831448016688228], "tokens": [13, 462, 1678, 500, 13, 462, 1678, 2867, 29936, 13, 18884, 1206, 390, 22530, 29918, 29903, 22027, 29901, 13, 462, 1678, 565, 5384, 262, 1765, 287, 29897, 426, 13, 462, 4706, 736, 921, 29896, 29936, 13, 29966, 29989, 13168, 29901, 29896, 29989, 5299, 29989, 13168, 29901, 29900, 29989, 29958, 13, 462, 1678]}
{"line_number": 160, "line_type": "original", "code": "            final double x = x1 - ((f1 * (x1 - x0)) / (f1 - f0));", "entropy": 1.2028852701187134, "is_bug_line": false, "sus_score": 0.19611613513818404, "per_token_entropy": [6.863926410675049, 9.372676849365234, 0.09350080788135529, 1.7237567901611328, 4.134592056274414, 1.3963812589645386, 0.8557858467102051, 0.5409785509109497, 3.590545654296875, 2.22263503074646, 0.1273559331893921, 0.7288557887077332, 0.2448560744524002, 0.017916623502969742, 0.052479472011327744, 0.010352719575166702, 0.012993784621357918, 0.004329237621277571, 0.027479711920022964, 0.020780932158231735, 0.18952858448028564, 0.10584720969200134, 0.06674225628376007, 0.026630159467458725, 0.007493956014513969, 0.0019359909929335117, 0.03754334896802902], "tokens": [632, 2186, 3765, 921, 353, 921, 29896, 448, 5135, 29888, 29896, 334, 313, 29916, 29896, 448, 921, 29900, 876, 847, 313, 29888, 29896, 448, 285, 29900, 2483]}
{"line_number": 160, "line_type": "generated", "code": "\n                    }\n                    break;\n                case BELOW_SIDE:\n                    if (f1", "entropy": 0.17321600019931793, "is_bug_line": false, "sus_score": 0.19611613513818404, "per_token_entropy": [0.215375155210495, 0.4966163635253906, 0.10279694944620132, 0.03107805922627449, 0.020566074177622795, 0.2697654366493225, 0.005153466947376728, 0.03423010930418968, 0.001279607880860567, 0.0021211046259850264, 0.2770419716835022, 1.3507702350616455, 0.22614626586437225, 0.001985365990549326, 0.701912522315979, 0.0010489681735634804, 6.747018051100895e-05, 0.0029150634072721004, 0.011701282113790512, 0.09352882206439972, 0.0013624681159853935, 0.08753480762243271, 0.08383443206548691, 0.2755178213119507, 0.03605042025446892], "tokens": [13, 462, 1678, 500, 13, 462, 1678, 2867, 29936, 13, 18884, 1206, 20700, 27998, 29918, 29903, 22027, 29901, 13, 462, 1678, 565, 313, 29888, 29896]}
{"line_number": 161, "line_type": "original", "code": "            final double fx = computeObjectiveValue(x);", "entropy": 1.9452757835388184, "is_bug_line": false, "sus_score": 0.19611613513818404, "per_token_entropy": [7.9017839431762695, 7.840103626251221, 0.1010889932513237, 3.656846284866333, 2.3561441898345947, 2.342041492462158, 0.1651991456747055, 0.0012693690368905663, 0.00027652730932459235, 0.0003268184664193541, 0.009614590555429459, 0.04262152314186096, 0.8712664842605591], "tokens": [632, 2186, 3765, 285, 29916, 353, 10272, 2061, 573, 1917, 29898, 29916, 416]}
{"line_number": 161, "line_type": "generated", "code": "\n                }\n            }\n\n            // If the root is within the interval, then we can return the\n            // current approximation.\n            if (FastMath.abs(x1 - x0) <= atol + rtol *", "entropy": 0.47573524713516235, "is_bug_line": false, "sus_score": 0.19611613513818404, "per_token_entropy": [0.08799483627080917, 0.5375351309776306, 1.1323020458221436, 0.006528004538267851, 0.18336115777492523, 0.010322987101972103, 0.016842307522892952, 0.10928700119256973, 0.03914983570575714, 0.038490939885377884, 0.6938302516937256, 0.19506508111953735, 3.1370179653167725, 0.39773911237716675, 2.5409326553344727, 0.22891680896282196, 1.535085916519165, 0.4658730924129486, 1.4212594032287598, 0.6574013233184814, 0.8899840116500854, 1.7840629816055298, 1.1536917686462402, 0.7670785188674927, 0.0010844547068700194, 0.001061352901160717, 1.7104147672653198, 0.388451486825943, 0.3003445863723755, 0.11308588087558746, 0.04090847074985504, 0.1780351996421814, 0.205534890294075, 0.5431938171386719, 0.00020847532141488045, 0.0002348147245356813, 0.0005802616360597312, 0.03413218632340431, 0.005179557949304581, 0.1612844467163086, 0.1664903163909912, 0.2190164178609848, 0.23455575108528137, 0.03247930109500885, 0.0011987651232630014, 0.22537113726139069, 0.8069924116134644, 0.0010224120924249291, 1.2925690412521362, 0.03978126123547554, 0.0013402060139924288, 0.003927970305085182], "tokens": [13, 18884, 500, 13, 9651, 500, 13, 13, 9651, 849, 960, 278, 3876, 338, 2629, 278, 7292, 29892, 769, 591, 508, 736, 278, 13, 9651, 849, 1857, 16845, 29889, 13, 9651, 565, 313, 29943, 579, 11309, 29889, 6897, 29898, 29916, 29896, 448, 921, 29900, 29897, 5277, 472, 324, 718, 364, 25027, 334]}
