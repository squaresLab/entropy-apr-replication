{"line_number": 138, "line_type": "original", "code": "        return solve(f, min, yMin, max, yMax, initial, yInitial);", "entropy": 0.9219295382499695, "is_bug_line": true, "sus_score": 1.0, "per_token_entropy": [6.779226779937744, 3.0060150623321533, 0.06577765941619873, 0.010197797790169716, 0.007932232692837715, 0.0010324153117835522, 0.0730317160487175, 0.008729510940611362, 1.0007609128952026, 0.001690983772277832, 0.0026352223940193653, 0.022112248465418816, 0.0027371107134968042, 0.0028036832809448242, 0.0007862337515689433, 0.720224142074585, 6.117741107940674, 0.9496505260467529, 0.35100460052490234, 0.1487264782190323, 0.08770418912172318], "tokens": [308, 736, 4505, 29898, 29888, 29892, 1375, 29892, 343, 8140, 29892, 4236, 29892, 343, 7976, 29892, 2847, 29892, 343, 15514, 416]}
{"line_number": 138, "line_type": "generated", "code": "\n            ret = solve(f, min, yMin, max, yMax);\n        } else {\n            // zero is not bracketed\n            throw MathRuntimeException.createIllegalArgumentException(\n                    NON_BR", "entropy": 0.2910252511501312, "is_bug_line": true, "sus_score": 1.0, "per_token_entropy": [0.06824688613414764, 1.9150514602661133, 1.2581145763397217, 0.00681954575702548, 0.04519979655742645, 0.005136151798069477, 0.004955391399562359, 0.0008378094644285738, 0.044068291783332825, 0.004777682479470968, 0.4589563012123108, 0.00243200920522213, 0.0020404488313943148, 0.013469411991536617, 0.0030794364865869284, 0.002080420730635524, 0.0006805725861340761, 0.5000576972961426, 0.005796290934085846, 0.6866101026535034, 0.0016357626300305128, 0.15488187968730927, 0.1447344571352005, 0.06628105044364929, 0.09585126489400864, 0.28079673647880554, 2.272947072982788, 1.342293381690979, 2.811878204345703, 0.22117285430431366, 0.0025116822216659784, 0.018314307555556297, 1.1014900207519531, 0.045323871076107025, 0.43166178464889526, 0.041638731956481934, 0.0014280608156695962, 0.0004959068610332906, 0.0006909366929903626, 0.0006300609675236046, 0.0647088810801506, 0.0007649118197150528, 0.0009099871967919171, 0.0007219092221930623, 0.0030837147496640682, 0.048054952174425125, 0.025886643677949905, 0.08785629272460938, 0.6760262846946716, 0.003312935121357441, 0.0015017433324828744, 0.15541544556617737], "tokens": [13, 9651, 3240, 353, 4505, 29898, 29888, 29892, 1375, 29892, 343, 8140, 29892, 4236, 29892, 343, 7976, 416, 13, 4706, 500, 1683, 426, 13, 9651, 849, 5225, 338, 451, 4105, 3522, 287, 13, 9651, 3183, 5792, 7944, 2451, 29889, 3258, 14126, 12018, 15730, 2451, 29898, 13, 462, 1678, 405, 1164, 29918, 15176]}
{"line_number": 102, "line_type": "original", "code": "        clearResult();", "entropy": 5.439070701599121, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [5.398842811584473, 14.373869895935059, 1.9160406589508057, 0.06752844899892807], "tokens": [308, 2821, 3591, 890]}
{"line_number": 102, "line_type": "generated", "code": "\n     * @return the value where the function is zero\n     * @throws MaxIterationsExceededException the maximum iteration count\n     * is exceeded\n     * @throws FunctionEvaluationException if an error occurs evaluating", "entropy": 0.0339057520031929, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.289268434047699, 0.29486414790153503, 0.007033233065158129, 0.03601603955030441, 0.31452032923698425, 0.051919061690568924, 0.05800948292016983, 0.01381513848900795, 0.005455012433230877, 0.0026192902587354183, 0.0010372978867962956, 0.002474105916917324, 0.1083240881562233, 0.10949088633060455, 0.0017375147435814142, 0.010710964910686016, 0.005811105947941542, 1.9430925021879375e-05, 0.13716362416744232, 0.0004577780782710761, 8.618460560683161e-05, 0.0005339150666259229, 4.362964682513848e-05, 3.4570634852570947e-06, 0.00027616979787126184, 0.14582854509353638, 0.004442346747964621, 0.008884778246283531, 0.0036360598169267178, 0.047961100935935974, 0.006276775151491165, 9.274052717955783e-05, 0.010883849114179611, 0.00017081231635529548, 2.634490556374658e-05, 0.006831859238445759, 0.03631738945841789, 0.000346362212439999, 0.0007543102256022394, 0.00039891392225399613, 1.0132738680113107e-05, 0.015082603320479393, 6.341733387671411e-05, 8.725739462533966e-05, 0.0006690170848742127, 0.0001793938863556832, 0.00865151360630989, 0.004701156169176102, 0.0012828224571421742, 0.002242433140054345, 0.005456316750496626, 0.00013052565918769687], "tokens": [13, 268, 334, 732, 2457, 278, 995, 988, 278, 740, 338, 5225, 13, 268, 334, 732, 386, 5727, 5918, 13463, 800, 1252, 3947, 287, 2451, 278, 7472, 12541, 2302, 13, 268, 334, 338, 13461, 287, 13, 268, 334, 732, 386, 5727, 6680, 29923, 4387, 362, 2451, 565, 385, 1059, 10008, 6161, 1218]}
{"line_number": 103, "line_type": "original", "code": "        verifySequence(min, initial, max);", "entropy": 3.105492353439331, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [5.633476257324219, 13.557514190673828, 5.721577167510986, 0.12905296683311462, 0.5044010281562805, 0.035415828227996826, 4.793225288391113, 0.24131377041339874, 0.17533713579177856, 0.26360809803009033], "tokens": [308, 11539, 20529, 29898, 1195, 29892, 2847, 29892, 4236, 416]}
{"line_number": 103, "line_type": "generated", "code": "\n     * @throws MaxIterationsExceededException the maximum iteration count\n     * is exceeded\n     * @throws FunctionEvaluationException if an error occurs evaluating\n     *  the function\n     * @throws", "entropy": 0.034777652472257614, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.29762154817581177, 0.1441696733236313, 0.026252606883645058, 0.028810253366827965, 0.04593057557940483, 3.6477376852417365e-05, 0.40690839290618896, 0.0009710840531624854, 0.00010013079008786008, 0.0004949536523781717, 3.40932747349143e-05, 4.291525328881107e-06, 0.0003583981015253812, 0.18701991438865662, 0.005322452634572983, 0.012954010628163815, 0.003770268289372325, 0.07802258431911469, 0.04139033704996109, 0.00014029949670657516, 0.012418917380273342, 0.0002215855201939121, 3.5523738915799186e-05, 0.013282623142004013, 0.08665696531534195, 0.0008521024719811976, 0.01736508309841156, 0.0008442413527518511, 1.4424220353248529e-05, 0.026867739856243134, 7.1403817855753e-05, 0.00015698630886618048, 0.0009374991059303284, 0.0002019201492657885, 0.00980454497039318, 0.005284507758915424, 0.0014179424615576863, 0.0028360167052596807, 0.006287792231887579, 0.00014983485743869096, 0.025198722258210182, 0.008756217546761036, 0.00013326710904948413, 0.12256527692079544, 0.0010141950333490968, 0.0015453074593096972, 0.009087983518838882, 0.13333573937416077, 0.022168565541505814, 0.013326030224561691, 0.005249525420367718, 3.71926071238704e-05], "tokens": [13, 268, 334, 732, 386, 5727, 5918, 13463, 800, 1252, 3947, 287, 2451, 278, 7472, 12541, 2302, 13, 268, 334, 338, 13461, 287, 13, 268, 334, 732, 386, 5727, 6680, 29923, 4387, 362, 2451, 565, 385, 1059, 10008, 6161, 1218, 13, 268, 334, 29871, 278, 740, 13, 268, 334, 732, 386, 5727]}
{"line_number": 106, "line_type": "original", "code": "        double yInitial = f.value(initial);", "entropy": 1.6623141765594482, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [4.750001430511475, 9.224361419677734, 1.254022479057312, 2.468812942504883, 0.03063640184700489, 0.10519854724407196, 0.0028191369492560625, 0.002675289288163185, 0.004237363580614328, 0.36308369040489197, 0.07960589975118637], "tokens": [308, 3765, 343, 15514, 353, 285, 29889, 1767, 29898, 11228, 416]}
{"line_number": 106, "line_type": "generated", "code": "\n     * @throws IllegalArgumentException if min and max do not bracket a root\n     * (even if they", "entropy": 0.284577876329422, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.3481190800666809, 0.17296774685382843, 0.052933525294065475, 0.009639502502977848, 0.02217532880604267, 2.9205850296420977e-05, 0.02651337906718254, 6.23445157543756e-05, 0.0021972341928631067, 0.00023731753753963858, 0.02962520532310009, 1.61135733127594, 0.7848998308181763, 0.006798706948757172, 1.2369481325149536, 0.011626462452113628, 0.04672282561659813, 0.0006316096987575293, 0.14551188051700592, 0.3470151722431183, 0.25214019417762756, 0.4147730767726898, 0.3612380027770996, 0.8273615837097168, 0.2684130072593689, 0.01547660306096077, 0.6881880164146423], "tokens": [13, 268, 334, 732, 386, 5727, 1720, 12018, 15730, 2451, 565, 1375, 322, 4236, 437, 451, 4105, 3522, 263, 3876, 13, 268, 334, 313, 11884, 565, 896]}
{"line_number": 107, "line_type": "original", "code": "        if (Math.abs(yInitial) <= functionValueAccuracy) {", "entropy": 0.8519549369812012, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [3.5120279788970947, 1.1539255380630493, 4.809479713439941, 2.0755972862243652, 0.010220571421086788, 0.23094139993190765, 0.0024661386851221323, 0.8587666749954224, 2.2084107398986816, 0.04425261169672012, 0.0742068663239479, 0.11584700644016266, 0.0047532422468066216, 0.0002649671514518559, 0.0003120412293355912, 0.0006748544401489198, 0.1982034295797348, 0.03483863174915314], "tokens": [308, 565, 313, 11309, 29889, 6897, 29898, 29891, 15514, 29897, 5277, 740, 1917, 7504, 332, 4135, 29897, 426]}
{"line_number": 107, "line_type": "generated", "code": "\n     * function values at min and max have the same sign.\n     */\n    public double solve(final UnivariateRealFunction f,\n                        final double min, final double max)\n        throws MaxIterationsExceededException", "entropy": 0.14904649555683136, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.8629181981086731, 0.4801639914512634, 0.2764051556587219, 0.7239999771118164, 0.4880295395851135, 0.301259309053421, 1.5211763381958008, 0.088239885866642, 0.008322793990373611, 0.628603994846344, 0.03614941984415054, 0.0035211960785090923, 0.02423972450196743, 1.290170669555664, 0.03225632384419441, 0.2312639355659485, 0.12169697880744934, 0.01124296523630619, 0.05325378105044365, 0.02695860154926777, 0.006046692840754986, 0.0006895071710459888, 0.0008505540899932384, 0.065274678170681, 0.007095851004123688, 6.12716976320371e-05, 4.5298504119273275e-05, 0.008069650270044804, 7.593343616463244e-05, 0.0015355474315583706, 0.00037269797758199275, 0.214033305644989, 0.0469973087310791, 0.027330899611115456, 0.024821210652589798, 0.0005035324720665812, 0.0007706294418312609, 0.0001864259538706392, 0.02790769375860691, 0.00025042734341695905, 0.00027450130437500775, 0.003609334584325552, 0.007530161179602146, 0.06616189330816269, 0.0016061275964602828, 0.027640676125884056, 8.248942322097719e-05, 8.475421054754406e-05, 0.0002388668799540028, 0.0002559096028562635, 7.414542778860778e-05, 6.663577369181439e-05], "tokens": [13, 268, 334, 740, 1819, 472, 1375, 322, 4236, 505, 278, 1021, 1804, 29889, 13, 268, 3776, 13, 1678, 970, 3765, 4505, 29898, 8394, 853, 27432, 403, 21713, 6678, 285, 29892, 13, 462, 4706, 2186, 3765, 1375, 29892, 2186, 3765, 4236, 29897, 13, 4706, 8026, 5918, 13463, 800, 1252, 3947, 287, 2451]}
{"line_number": 113, "line_type": "original", "code": "        double yMin = f.value(min);", "entropy": 0.9802024364471436, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [6.619309425354004, 3.1202569007873535, 0.6338332891464233, 0.30839526653289795, 0.04821309447288513, 0.03912002965807915, 0.0013985387049615383, 0.00046230596490204334, 0.0007175016799010336, 0.006921718828380108, 0.0035976942162960768], "tokens": [308, 3765, 343, 8140, 353, 285, 29889, 1767, 29898, 1195, 416]}
{"line_number": 113, "line_type": "generated", "code": "\n        // return the first endpoint if it is good enough\n        double yMin = f.value(min);\n        if (Math.abs(yMin) <= functionValueAccuracy) {\n            setResult(min, 0", "entropy": 0.14191515743732452, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.1036229133605957, 0.2472885549068451, 1.3391090631484985, 2.315135955810547, 0.762191653251648, 0.5309536457061768, 0.039813682436943054, 0.03230410814285278, 0.01947624981403351, 0.01074162870645523, 0.07674703001976013, 0.0006224363460205495, 0.012368406169116497, 0.14694274961948395, 0.8091381192207336, 0.032367125153541565, 0.05335403233766556, 0.007233146578073502, 0.012531350366771221, 0.0009248746791854501, 0.00024577934527769685, 0.0003607814433053136, 0.022871972993016243, 0.0006096888100728393, 0.0017661938909441233, 0.07153061777353287, 0.021943511441349983, 0.0023535192012786865, 0.008316528052091599, 0.0005689432728104293, 0.0001532914029667154, 0.00013636612857226282, 0.000800408364739269, 0.0002090712368953973, 0.00042703570215962827, 0.01298684161156416, 0.006901474203914404, 0.00023362292267847806, 8.77341881277971e-05, 4.2914423829643056e-05, 9.798523387871683e-05, 0.0034964873921126127, 0.0003620922507252544, 0.00036054308293387294, 0.017812756821513176, 0.024392019957304, 0.004744343925267458, 0.0007014198345132172, 0.513671875, 0.009349373169243336, 0.09392935037612915, 0.005256047938019037], "tokens": [13, 4706, 849, 736, 278, 937, 16248, 565, 372, 338, 1781, 3307, 13, 4706, 3765, 343, 8140, 353, 285, 29889, 1767, 29898, 1195, 416, 13, 4706, 565, 313, 11309, 29889, 6897, 29898, 29891, 8140, 29897, 5277, 740, 1917, 7504, 332, 4135, 29897, 426, 13, 9651, 731, 3591, 29898, 1195, 29892, 29871, 29900]}
{"line_number": 114, "line_type": "original", "code": "        if (Math.abs(yMin) <= functionValueAccuracy) {", "entropy": 0.7239655256271362, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [5.980257987976074, 2.282928943634033, 0.13493704795837402, 2.3068113327026367, 0.03969774395227432, 0.13466963171958923, 0.008960867300629616, 1.372375726699829, 0.3893354535102844, 0.03231126442551613, 0.10178156942129135, 0.18922604620456696, 0.0004236992390360683, 0.00014137222024146467, 6.5205356804654e-05, 0.00011836781777674332, 0.055553045123815536, 0.001784638618119061], "tokens": [308, 565, 313, 11309, 29889, 6897, 29898, 29891, 8140, 29897, 5277, 740, 1917, 7504, 332, 4135, 29897, 426]}
{"line_number": 114, "line_type": "generated", "code": "\n        final double yMin = f.value(min);\n        final double yMax = f.value(max);\n        if (yMin * yMax > 0) {\n            throw new IllegalArgumentException(\"the signs of", "entropy": 0.25784969329833984, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.1832607239484787, 0.61467444896698, 2.2613954544067383, 0.12635837495326996, 0.7235941886901855, 0.188968226313591, 0.019221119582653046, 0.015265299007296562, 0.0006899837171658874, 0.00042441420373506844, 0.0005322470096871257, 0.0017133570509031415, 0.0024649493861943483, 0.006767093203961849, 0.23668865859508514, 0.28633132576942444, 0.000690460205078125, 0.0022638426162302494, 0.003428179072216153, 0.0005416594794951379, 0.0006425699684768915, 4.8993817472364753e-05, 8.237022848334163e-05, 0.00018475732940714806, 0.0005814530304633081, 0.00013743886665906757, 0.0037038789596408606, 0.9103926420211792, 0.39636656641960144, 0.0615103617310524, 0.698890745639801, 0.05675656348466873, 0.269418865442276, 0.0010835020802915096, 0.00027307120035402477, 0.5987330675125122, 0.011449463665485382, 0.000321336614433676, 0.1866055279970169, 0.0031974404118955135, 0.007163080852478743, 0.041903410106897354, 0.07224640250205994, 0.16761451959609985, 0.020779414102435112, 0.00018821375851985067, 0.0006571040721610188, 6.48477507638745e-05, 0.7167828679084778, 3.238243579864502, 1.192767858505249, 0.07411865144968033], "tokens": [13, 4706, 2186, 3765, 343, 8140, 353, 285, 29889, 1767, 29898, 1195, 416, 13, 4706, 2186, 3765, 343, 7976, 353, 285, 29889, 1767, 29898, 3317, 416, 13, 4706, 565, 313, 29891, 8140, 334, 343, 7976, 1405, 29871, 29900, 29897, 426, 13, 9651, 3183, 716, 1720, 12018, 15730, 2451, 703, 1552, 18906, 310]}
{"line_number": 120, "line_type": "original", "code": "        if (yInitial * yMin < 0) {", "entropy": 1.54189932346344, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [6.540476322174072, 1.2849681377410889, 0.038670558482408524, 0.7703463435173035, 9.706361770629883, 0.3631969392299652, 0.024096248671412468, 0.8607981204986572, 0.30870699882507324, 0.005797476042062044, 0.0007283418672159314, 0.13444548845291138, 0.006098116282373667], "tokens": [308, 565, 313, 29891, 15514, 334, 343, 8140, 529, 29871, 29900, 29897, 426]}
{"line_number": 120, "line_type": "generated", "code": "\n        double yMax = f.value(max);\n<|mask:0|><|mask:1|>\n\n        // check for endpoints\n        if (Math.abs(yMin) <= functionValueAccuracy)", "entropy": 0.2672852873802185, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.13468994200229645, 0.7629503607749939, 0.7789868116378784, 0.033752501010894775, 0.08230775594711304, 0.0037049478851258755, 0.014855360612273216, 0.00039772229501977563, 0.0008912881603464484, 0.0008291144040413201, 0.0037067292723804712, 0.0008429311565123498, 0.003161672269925475, 1.1919207572937012, 0.004784682299941778, 0.16381512582302094, 0.007575592957437038, 1.1281684637069702, 0.006498395465314388, 0.822506308555603, 0.004043261986225843, 0.017130272462964058, 0.00373832113109529, 0.14327634871006012, 0.0036873698700219393, 0.013184510171413422, 0.015622141771018505, 0.5699822902679443, 0.12081778794527054, 0.6837678551673889, 1.4314450025558472, 1.7311198711395264, 2.2109603881835938, 0.15555687248706818, 1.1268658638000488, 0.10811964422464371, 0.07560039311647415, 0.017427057027816772, 0.2039334625005722, 0.002964984392747283, 0.01064987014979124, 0.0005576247931458056, 0.0014281797921285033, 0.037037450820207596, 0.0017794027226045728, 0.02944800816476345, 0.006629615556448698, 0.0002803409588523209, 9.691245941212401e-05, 3.731181277544238e-05, 0.00014876213390380144, 0.025150131434202194], "tokens": [13, 4706, 3765, 343, 7976, 353, 285, 29889, 1767, 29898, 3317, 416, 13, 29966, 29989, 13168, 29901, 29900, 29989, 5299, 29989, 13168, 29901, 29896, 29989, 29958, 13, 13, 4706, 849, 1423, 363, 1095, 9748, 13, 4706, 565, 313, 11309, 29889, 6897, 29898, 29891, 8140, 29897, 5277, 740, 1917, 7504, 332, 4135, 29897]}
{"line_number": 125, "line_type": "original", "code": "        double yMax = f.value(max);", "entropy": 1.7445707321166992, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [6.205643177032471, 5.620082378387451, 2.732489585876465, 3.851106643676758, 0.600517749786377, 0.04847603663802147, 0.002441165968775749, 0.0008150592911988497, 0.0024434253573417664, 0.11887186020612717, 0.007391604594886303], "tokens": [308, 3765, 343, 7976, 353, 285, 29889, 1767, 29898, 3317, 416]}
{"line_number": 125, "line_type": "generated", "code": "\n            throw new IllegalArgumentException(\n                    \"function values at endpoints do not have opposite signs\");\n        }\n\n        // return the first endpoint if it is good enough\n        if (Math.abs(yMin) <=", "entropy": 0.2446766346693039, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.24533039331436157, 0.3870733380317688, 0.28204119205474854, 0.08301982283592224, 0.05478231981396675, 9.810443589231e-05, 0.0024371228646486998, 2.47952248173533e-05, 0.6886134743690491, 0.7134312987327576, 0.561812698841095, 0.5263491868972778, 0.10081710666418076, 1.7384140491485596, 0.05502718687057495, 0.4920703172683716, 0.2712969183921814, 0.04263705760240555, 0.692744791507721, 0.012328607961535454, 0.9780026078224182, 0.3759765923023224, 0.1102868914604187, 0.5680573582649231, 0.009729228913784027, 0.1540278196334839, 0.0016500442288815975, 0.04966575279831886, 0.09511522203683853, 0.09304320067167282, 0.30166396498680115, 1.5310019254684448, 0.6864094734191895, 0.5359170436859131, 0.040897827595472336, 0.023780949413776398, 0.012371703051030636, 0.007014174945652485, 0.07702178508043289, 0.0006602014764212072, 0.008693821728229523, 0.05492958426475525, 0.01283903606235981, 0.0033625985961407423, 0.018933406099677086, 0.00042989550274796784, 0.00023362292267847806, 0.000284154579276219, 0.0026689881924539804, 0.006250594276934862, 0.00023123928986024112, 0.011683844029903412], "tokens": [13, 9651, 3183, 716, 1720, 12018, 15730, 2451, 29898, 13, 462, 1678, 376, 2220, 1819, 472, 1095, 9748, 437, 451, 505, 11564, 18906, 1496, 13, 4706, 500, 13, 13, 4706, 849, 736, 278, 937, 16248, 565, 372, 338, 1781, 3307, 13, 4706, 565, 313, 11309, 29889, 6897, 29898, 29891, 8140, 29897, 5277]}
{"line_number": 126, "line_type": "original", "code": "        if (Math.abs(yMax) <= functionValueAccuracy) {", "entropy": 0.5378183126449585, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [6.120959281921387, 0.6292928457260132, 0.07865462452173233, 0.19737687706947327, 0.007451478857547045, 0.007986634969711304, 0.001696577062830329, 0.02479969710111618, 2.322448492050171, 0.016854850575327873, 0.18678011000156403, 0.027402235195040703, 0.0010064542293548584, 0.00019274283840786666, 3.349725011503324e-05, 0.00010311071673640981, 0.054869554936885834, 0.002821038942784071], "tokens": [308, 565, 313, 11309, 29889, 6897, 29898, 29891, 7976, 29897, 5277, 740, 1917, 7504, 332, 4135, 29897, 426]}
{"line_number": 126, "line_type": "generated", "code": "\n            setResult(yMax, 0);\n            return result;\n        }\n\n        // Brent algorithm\n        return solve(f, min, yMin, max, yMax, min, yMin);\n\n    }", "entropy": 0.2508537173271179, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.1906566470861435, 0.6588282585144043, 2.2608323097229004, 0.023603063076734543, 0.0407380685210228, 0.4873967170715332, 0.621717631816864, 0.03300296142697334, 0.0473962165415287, 0.009128266014158726, 0.012220391072332859, 0.006009841803461313, 0.06441440433263779, 0.03354087471961975, 0.06877919286489487, 0.0020435419864952564, 0.002641761675477028, 0.09669975936412811, 0.019244154915213585, 0.09219681471586227, 0.36737287044525146, 0.18156075477600098, 0.36341404914855957, 3.5520896911621094, 0.010807670652866364, 0.74640953540802, 0.7645320892333984, 0.19198071956634521, 1.0048503875732422, 0.01563645899295807, 0.00233556074090302, 0.0018705505644902587, 0.000714404450263828, 0.041171398013830185, 0.0010112178279086947, 0.012266905978322029, 0.0010014524450525641, 0.0008622265886515379, 0.002395500196143985, 0.0006387577159330249, 0.001207456924021244, 0.0004259632551111281, 0.1518685221672058, 0.3037988245487213, 0.08265375345945358, 0.14140762388706207, 0.01560805831104517, 0.01802586391568184, 0.003430555108934641, 0.24898892641067505, 0.041875746101140976, 0.0010888606775552034], "tokens": [13, 9651, 731, 3591, 29898, 29891, 7976, 29892, 29871, 29900, 416, 13, 9651, 736, 1121, 29936, 13, 4706, 500, 13, 13, 4706, 849, 1771, 296, 5687, 13, 4706, 736, 4505, 29898, 29888, 29892, 1375, 29892, 343, 8140, 29892, 4236, 29892, 343, 7976, 29892, 1375, 29892, 343, 8140, 416, 13, 13, 1678, 500]}
{"line_number": 132, "line_type": "original", "code": "        if (yInitial * yMax < 0) {", "entropy": 1.8869330883026123, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [7.11449670791626, 3.8136515617370605, 0.06349106878042221, 2.296873092651367, 8.25889778137207, 0.2829063832759857, 0.3243936598300934, 1.838441014289856, 0.4353907108306885, 0.008427650667726994, 0.00037508129025809467, 0.08905494958162308, 0.0037288200110197067], "tokens": [308, 565, 313, 29891, 15514, 334, 343, 7976, 529, 29871, 29900, 29897, 426]}
{"line_number": 132, "line_type": "generated", "code": "\n            } else {\n                throw new IllegalArgumentException(\"Cannot bracket root\");\n            }\n        } else {\n            ret = solve(f, min, yMin, max, yMax, min, yMin);\n       ", "entropy": 0.21875311434268951, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.20855826139450073, 0.5356485247612, 0.25080081820487976, 0.5889183282852173, 0.06596504896879196, 0.007258354686200619, 0.12343093007802963, 0.23331475257873535, 0.06153715029358864, 0.035827431827783585, 0.00013767725613433868, 0.0017028844449669123, 3.2543604902457446e-05, 0.7559775710105896, 3.7116167545318604, 0.16772791743278503, 0.0005243833875283599, 0.49953365325927734, 1.6717637777328491, 0.0038807096425443888, 0.05416842922568321, 0.0016963391099125147, 0.005423237569630146, 0.3135032057762146, 0.0057108341716229916, 0.24906745553016663, 0.1511046439409256, 0.018736403435468674, 0.22944384813308716, 0.8241528272628784, 0.0027942920569330454, 0.011949385516345501, 0.003488290822133422, 0.0012044801842421293, 0.0005457103834487498, 0.011745700612664223, 0.0008485292200930417, 0.17137280106544495, 0.000697965151630342, 0.0006537684239447117, 0.0018806643784046173, 0.0006612736615352333, 0.0009455977124162018, 0.0003736513026524335, 0.19102945923805237, 0.09991471469402313, 0.006579521577805281, 0.02079611085355282, 0.017604639753699303, 0.005691394675523043, 0.0022467151284217834, 0.044972002506256104], "tokens": [13, 9651, 500, 1683, 426, 13, 18884, 3183, 716, 1720, 12018, 15730, 2451, 703, 29089, 4105, 3522, 3876, 1496, 13, 9651, 500, 13, 4706, 500, 1683, 426, 13, 9651, 3240, 353, 4505, 29898, 29888, 29892, 1375, 29892, 343, 8140, 29892, 4236, 29892, 343, 7976, 29892, 1375, 29892, 343, 8140, 416, 13, 4706]}
{"line_number": 184, "line_type": "original", "code": "                throw MathRuntimeException.createIllegalArgumentException(", "entropy": 1.8600692749023438, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [5.210731506347656, 11.1799898147583, 4.71339225769043, 0.0148404436185956, 0.0007058274932205677, 0.009196658618748188, 0.01878787949681282, 1.0593407154083252, 0.00012337400403339416, 0.07828618586063385, 0.000717144284863025, 0.0347222276031971], "tokens": [462, 3183, 5792, 7944, 2451, 29889, 3258, 14126, 12018, 15730, 2451, 29898]}
{"line_number": 184, "line_type": "generated", "code": "\n                y0 = y1;\n                y1 = y2;\n            }\n\n            // use linear interpolation if no bracket point is known\n            double x = x1 - y1 * (x1 - x0) /", "entropy": 0.39388900995254517, "is_bug_line": false, "sus_score": 0.7071067811865475, "per_token_entropy": [0.11726325750350952, 0.4252918064594269, 0.2470293492078781, 0.06855036318302155, 0.007185450289398432, 0.008519258350133896, 0.027098650112748146, 0.0011035073548555374, 0.005118124652653933, 0.14262764155864716, 0.003085140837356448, 0.002755180699750781, 0.0006824786541983485, 0.001188525347970426, 0.0001784403866622597, 0.0003999863693024963, 0.002528686309233308, 0.8211344480514526, 0.004014766775071621, 0.46021002531051636, 0.4720238447189331, 0.07432905584573746, 0.8103200793266296, 2.877760887145996, 0.9378213882446289, 0.13368120789527893, 1.4293599128723145, 2.167773485183716, 0.4932662844657898, 0.0009459549910388887, 0.4324982464313507, 0.8582206964492798, 0.6031333208084106, 0.22656463086605072, 0.29550811648368835, 1.4126291275024414, 0.7085288166999817, 1.5848875045776367, 0.684266209602356, 0.48628219962120056, 0.3460201025009155, 0.8582150340080261, 0.007954585365951061, 0.010200276039540768, 0.10957614332437515, 0.04633946716785431, 0.014522681944072247, 0.015151645988225937, 0.0010880271438509226, 0.0026102541014552116, 0.0333799347281456, 0.0014027050929144025], "tokens": [13, 18884, 343, 29900, 353, 343, 29896, 29936, 13, 18884, 343, 29896, 353, 343, 29906, 29936, 13, 9651, 500, 13, 13, 9651, 849, 671, 5608, 29694, 565, 694, 4105, 3522, 1298, 338, 2998, 13, 9651, 3765, 921, 353, 921, 29896, 448, 343, 29896, 334, 313, 29916, 29896, 448, 921, 29900, 29897, 847]}
{"line_number": 176, "line_type": "original", "code": "            if (Math.abs(yMin) <= functionValueAccuracy) {", "entropy": 1.3579479455947876, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [8.366727828979492, 2.2514374256134033, 0.07155048102140427, 2.108497381210327, 0.016142738983035088, 0.010729598812758923, 0.005651804152876139, 2.5900871753692627, 8.118419647216797, 0.07801883667707443, 0.46314650774002075, 0.275354266166687, 0.0008233971311710775, 0.00015758226800244302, 1.4543427823809907e-05, 0.00014602071314584464, 0.082096166908741, 0.004061901941895485], "tokens": [632, 565, 313, 11309, 29889, 6897, 29898, 29891, 8140, 29897, 5277, 740, 1917, 7504, 332, 4135, 29897, 426]}
{"line_number": 176, "line_type": "generated", "code": "\n        double s = delta == 0 ? 0 : (y1 - y0) / delta;\n<|mask:0|>\n        double oldDelta = delta;\n        double oldS = s;\n        double oldSign", "entropy": 0.4719151258468628, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [0.13038839399814606, 0.4425201117992401, 0.9100446701049805, 2.2677831649780273, 0.4820554256439209, 0.5137141346931458, 1.2052383422851562, 0.00580956507474184, 0.0002834395272657275, 0.515916109085083, 0.9324359893798828, 0.169026717543602, 0.36251458525657654, 0.7098405957221985, 0.2757190763950348, 0.02316775731742382, 0.006238984875380993, 0.0011328000109642744, 0.0023641036823391914, 0.05255163833498955, 0.010229420848190784, 0.00921319518238306, 0.008238262496888638, 0.018263274803757668, 1.1712415218353271, 0.0028084381483495235, 0.21036368608474731, 0.012599158100783825, 0.9433203935623169, 0.005718538537621498, 0.5023279786109924, 0.08249109238386154, 0.31748414039611816, 0.5197696685791016, 3.339390277862549, 0.7892856597900391, 0.14678598940372467, 1.1545114517211914, 0.027046091854572296, 0.012608104385435581, 0.48071131110191345, 0.41198158264160156, 0.2860660254955292, 0.887021541595459, 0.3863024115562439, 0.009991866536438465, 0.0009672730811871588, 0.0025648337323218584, 0.6811698079109192, 0.390638142824173, 0.6520329713821411, 2.05769419670105], "tokens": [13, 4706, 3765, 269, 353, 19471, 1275, 29871, 29900, 1577, 29871, 29900, 584, 313, 29891, 29896, 448, 343, 29900, 29897, 847, 19471, 29936, 13, 29966, 29989, 13168, 29901, 29900, 29989, 29958, 13, 4706, 3765, 2030, 5268, 353, 19471, 29936, 13, 4706, 3765, 2030, 29903, 353, 269, 29936, 13, 4706, 3765, 2030, 10140]}
{"line_number": 179, "line_type": "original", "code": "            } else if (Math.abs(yMax) <= functionValueAccuracy) {", "entropy": 1.5513782501220703, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [8.537976264953613, 5.835079669952393, 3.6467792987823486, 1.336565375328064, 0.11405304819345474, 3.008481979370117, 0.030340157449245453, 0.018072227016091347, 0.014254532754421234, 0.5399384498596191, 6.555050849914551, 0.16329433023929596, 0.7653548717498779, 0.29102835059165955, 0.0024307011626660824, 0.0007811117684468627, 5.4596363042946905e-05, 0.0001629458274692297, 0.16448280215263367, 0.003382914699614048], "tokens": [632, 500, 1683, 565, 313, 11309, 29889, 6897, 29898, 29891, 7976, 29897, 5277, 740, 1917, 7504, 332, 4135, 29897, 426]}
{"line_number": 179, "line_type": "generated", "code": "\n        while (i", "entropy": 0.5539060831069946, "is_bug_line": false, "sus_score": 0.5773502691896258, "per_token_entropy": [0.20985613763332367, 0.4501405358314514, 1.2002129554748535, 0.21650400757789612, 0.6928166151046753], "tokens": [13, 4706, 1550, 313, 29875]}
{"line_number": 286, "line_type": "original", "code": "                    delta = 0.5 * dx;", "entropy": 1.7637884616851807, "is_bug_line": false, "sus_score": 0.2886751345948129, "per_token_entropy": [8.64467716217041, 2.3854827880859375, 5.778563022613525, 0.12866449356079102, 0.9602201581001282, 0.0900261327624321, 0.03704560920596123, 0.06462886929512024, 0.023385899141430855, 1.2793552875518799, 0.009621675126254559], "tokens": [462, 268, 19471, 353, 29871, 29900, 29889, 29945, 334, 15414, 29936]}
{"line_number": 286, "line_type": "generated", "code": "\n\n    /**\n     * Solve the equation.\n     *\n     * @param f Function to solve.\n     * @param x0 Lower bound for the interval.\n     * @param x1 Initial guess.\n     * @", "entropy": 0.27854201197624207, "is_bug_line": false, "sus_score": 0.2886751345948129, "per_token_entropy": [0.0904257744550705, 1.0580211877822876, 0.2337549477815628, 0.07948997616767883, 0.28606197237968445, 0.01638868823647499, 0.0003047717036679387, 2.39728045463562, 0.3104192614555359, 1.1352190971374512, 0.5024306774139404, 1.1401269435882568, 0.04982227832078934, 0.012761946767568588, 0.013444713316857815, 0.7801344394683838, 0.013731422834098339, 0.0016150538576766849, 0.02959187515079975, 0.10599100589752197, 0.33492743968963623, 0.8681219816207886, 0.1032775342464447, 0.0480797179043293, 0.2783272862434387, 0.005256996490061283, 0.014062601141631603, 0.0011193446116521955, 0.00921413954347372, 0.10972314327955246, 0.7294214367866516, 0.18233898282051086, 0.8153433799743652, 0.1505124717950821, 0.2191087305545807, 0.011377806775271893, 0.019388914108276367, 0.16822445392608643, 0.006351049058139324, 0.002639264799654484, 0.0002996472467202693, 0.003160246182233095, 0.012874224223196507, 0.6378578543663025, 0.05438363924622536, 0.7044119834899902, 0.4896830916404724, 0.21478985249996185, 0.018345557153224945, 0.005565505009144545, 0.001512932125478983, 0.007465559057891369], "tokens": [13, 13, 1678, 7762, 13, 268, 334, 4956, 345, 278, 6306, 29889, 13, 268, 334, 13, 268, 334, 732, 3207, 285, 6680, 304, 4505, 29889, 13, 268, 334, 732, 3207, 921, 29900, 27723, 3216, 363, 278, 7292, 29889, 13, 268, 334, 732, 3207, 921, 29896, 17250, 4140, 29889, 13, 268, 334, 732]}
{"line_number": 287, "line_type": "original", "code": "                    oldDelta = delta;", "entropy": 2.971245527267456, "is_bug_line": false, "sus_score": 0.2886751345948129, "per_token_entropy": [8.516956329345703, 2.4756364822387695, 9.316844940185547, 0.2195996195077896, 0.0818699300289154, 0.17697909474372864, 0.010831844992935658], "tokens": [462, 268, 2030, 5268, 353, 19471, 29936]}
{"line_number": 287, "line_type": "generated", "code": "\n    /**\n     * Compute the root of the function {@code f} in the given interval\n     * {@code [min, max]}.\n     * @param f function to solve\n     * @param min lower bound for the interval", "entropy": 0.30250340700149536, "is_bug_line": false, "sus_score": 0.2886751345948129, "per_token_entropy": [0.10289730131626129, 1.016524076461792, 0.19256378710269928, 0.26647281646728516, 0.016714531928300858, 0.0004226268210913986, 1.9323137998580933, 0.4806613326072693, 0.342126727104187, 0.9356247186660767, 0.3211478590965271, 0.3506828546524048, 0.7354653477668762, 1.4773014783859253, 0.06549979746341705, 0.048672039061784744, 0.3035740256309509, 0.4495687484741211, 0.01747005060315132, 0.5599777102470398, 0.2139439880847931, 0.30675289034843445, 0.0040984689258039, 0.00022718709078617394, 0.2505996823310852, 0.0007298904820345342, 0.33024221658706665, 1.2291784286499023, 0.034227460622787476, 0.10865435749292374, 0.4073503315448761, 0.18689195811748505, 0.2749975919723511, 0.01563493348658085, 0.0009949024533852935, 1.4213993549346924, 0.008784696459770203, 0.07758133113384247, 0.5678625702857971, 0.09765500575304031, 0.027332408353686333, 0.02099212445318699, 0.00873364694416523, 4.994744449504651e-05, 0.0011318475008010864, 0.002800949150696397, 0.07055307179689407, 0.09562670439481735, 0.013489289209246635, 0.32854822278022766, 0.00215512583963573, 0.005275139585137367], "tokens": [13, 1678, 7762, 13, 268, 334, 11796, 29872, 278, 3876, 310, 278, 740, 26633, 401, 285, 29913, 297, 278, 2183, 7292, 13, 268, 334, 26633, 401, 518, 1195, 29892, 4236, 29962, 1836, 13, 268, 334, 732, 3207, 285, 740, 304, 4505, 13, 268, 334, 732, 3207, 1375, 5224, 3216, 363, 278, 7292]}
{"line_number": 300, "line_type": "original", "code": "                x1 = x1 + 0.5 * tolerance;", "entropy": 1.3016053438186646, "is_bug_line": false, "sus_score": 0.16012815380508713, "per_token_entropy": [8.607542991638184, 5.4721879959106445, 1.1675896644592285, 0.1750829964876175, 0.778003990650177, 1.0490200519561768, 1.1130890846252441, 0.7966884970664978, 0.07640693336725235, 0.0036185993812978268, 0.0676337406039238, 0.024594075977802277, 0.140423983335495, 0.0026183391455560923, 0.049577951431274414], "tokens": [462, 921, 29896, 353, 921, 29896, 718, 29871, 29900, 29889, 29945, 334, 20341, 749, 29936]}
{"line_number": 300, "line_type": "generated", "code": "\n\n    /**\n     * Computes the objective function value.\n     *\n     * @param x Value at which the objective function must be computed.\n     * @return the value.\n     * @throws FunctionEvaluationException", "entropy": 0.2773444950580597, "is_bug_line": false, "sus_score": 0.16012815380508713, "per_token_entropy": [0.0994638130068779, 1.1234867572784424, 0.2238045185804367, 0.08715859055519104, 0.28091809153556824, 0.018220314756035805, 0.00032395837479270995, 1.977919101715088, 0.9746699333190918, 0.3965824246406555, 2.1754989624023438, 0.055396512150764465, 0.05576299503445625, 0.14672309160232544, 0.014146054163575172, 0.007236105389893055, 0.012981193140149117, 0.5948901772499084, 0.017383242025971413, 0.0017814256716519594, 0.02494167722761631, 0.04221418872475624, 0.5044265985488892, 1.524084448814392, 0.5367358922958374, 0.0019601434469223022, 0.0042729745618999004, 0.03407838195562363, 0.010842694900929928, 0.002351259347051382, 0.009407122619450092, 0.6548238396644592, 0.040514636784791946, 0.002209961414337158, 0.004757157526910305, 0.003850428620353341, 0.03529316559433937, 0.07630057632923126, 0.4064249098300934, 0.9466918706893921, 0.8810766935348511, 0.0020387833938002586, 0.012277503497898579, 0.09226355701684952, 0.013999712653458118, 0.12136581540107727, 0.001538880169391632, 0.15523162484169006, 0.001984295202419162, 0.000832568621262908, 0.003253644797950983, 0.005520930048078299], "tokens": [13, 13, 1678, 7762, 13, 268, 334, 11796, 267, 278, 12091, 740, 995, 29889, 13, 268, 334, 13, 268, 334, 732, 3207, 921, 7865, 472, 607, 278, 12091, 740, 1818, 367, 15712, 29889, 13, 268, 334, 732, 2457, 278, 995, 29889, 13, 268, 334, 732, 386, 5727, 6680, 29923, 4387, 362, 2451]}
{"line_number": 250, "line_type": "original", "code": "                setResult(x1, i);", "entropy": 1.7858768701553345, "is_bug_line": false, "sus_score": 0.10482848367219183, "per_token_entropy": [5.815564155578613, 9.745806694030762, 0.040430035442113876, 0.014263699762523174, 0.10640586167573929, 0.15770354866981506, 0.12931330502033234, 0.0384591668844223, 0.024943536147475243], "tokens": [462, 731, 3591, 29898, 29916, 29896, 29892, 474, 416]}
{"line_number": 250, "line_type": "generated", "code": "\n                x1 = x1 + tolerance;\n            } else {\n<|mask:1|><|mask:0|>\n                x1 = x1 - tolerance;\n            }\n            y1 = f.value", "entropy": 0.04139908030629158, "is_bug_line": false, "sus_score": 0.10482848367219183, "per_token_entropy": [0.049691274762153625, 0.2934240996837616, 0.10706724226474762, 0.0018540113233029842, 0.10391348600387573, 0.022117845714092255, 0.10254155844449997, 0.012237466871738434, 0.18351754546165466, 0.0007769426447339356, 0.014990185387432575, 0.00396691681817174, 0.43874990940093994, 0.0017257335130125284, 0.011783165857195854, 0.039808642119169235, 0.007152664940804243, 0.13606947660446167, 0.0003781795676331967, 0.0008908117306418717, 0.0006912940880283713, 0.09153444319963455, 0.001689436612650752, 0.026044730097055435, 0.00046588058467023075, 0.0011475651990622282, 0.0005529781919904053, 0.01536344364285469, 0.0006728292210027575, 0.001743940869346261, 0.001068616984412074, 0.0028023754712194204, 0.0007924277451820672, 0.00045694399159401655, 0.0010417040903121233, 0.0004681444843299687, 0.0011834054021164775, 0.0023660066071897745, 0.001142206834629178, 0.0004644507134798914, 0.0007270314963534474, 0.000898077036254108, 0.00695332745090127, 0.0009488132782280445, 0.00283447140827775, 0.1433582603931427, 0.25972485542297363, 0.0026532942429184914, 0.004317605402320623, 0.023141084238886833, 0.001967162825167179, 0.02087818644940853], "tokens": [13, 18884, 921, 29896, 353, 921, 29896, 718, 20341, 749, 29936, 13, 9651, 500, 1683, 426, 13, 29966, 29989, 13168, 29901, 29896, 29989, 5299, 29989, 13168, 29901, 29900, 29989, 29958, 13, 18884, 921, 29896, 353, 921, 29896, 448, 20341, 749, 29936, 13, 9651, 500, 13, 9651, 343, 29896, 353, 285, 29889, 1767]}
{"line_number": 251, "line_type": "original", "code": "                return result;", "entropy": 4.327596187591553, "is_bug_line": false, "sus_score": 0.10482848367219183, "per_token_entropy": [6.425853252410889, 8.877304077148438, 1.9909379482269287, 0.0162890013307333], "tokens": [462, 736, 1121, 29936]}
{"line_number": 251, "line_type": "generated", "code": "\n            } else {\n                x1 = x1 - 0.5 * tolerance;\n<|mask:1|><|mask:0|>\n            }\n            y1 = f.value(x1);\n           ", "entropy": 0.03474950045347214, "is_bug_line": false, "sus_score": 0.10482848367219183, "per_token_entropy": [0.07458510994911194, 0.11231287568807602, 0.0046355403028428555, 0.010884792543947697, 0.12044120579957962, 0.0024039437994360924, 0.1020948514342308, 0.0034563345834612846, 0.0008490057080052793, 0.0018249776912853122, 0.0012462714221328497, 0.0025450955145061016, 0.006457297131419182, 0.010409939102828503, 0.0014221088495105505, 0.0006715188501402736, 0.001488054753281176, 0.0017952292691916227, 0.0014544870937243104, 0.0008415018673986197, 0.0021208669058978558, 0.004256000276654959, 0.19702501595020294, 0.0013956816401332617, 0.002955713542178273, 0.0015467357588931918, 0.17808248102664948, 0.002859909785911441, 0.07799655944108963, 0.0009918061550706625, 0.0022640805691480637, 0.0007940953364595771, 0.027953600510954857, 0.0010211020708084106, 0.003016210161149502, 0.005119429435580969, 0.026846153661608696, 0.0020824430976063013, 0.012569610960781574, 0.18168491125106812, 0.31075412034988403, 0.005133305676281452, 0.006853762548416853, 0.020398594439029694, 0.002854204038158059, 0.023468345403671265, 0.01685180328786373, 0.004402113147079945, 0.002054486656561494, 0.006777512840926647, 0.00956807006150484, 0.20345503091812134], "tokens": [13, 9651, 500, 1683, 426, 13, 18884, 921, 29896, 353, 921, 29896, 448, 29871, 29900, 29889, 29945, 334, 20341, 749, 29936, 13, 29966, 29989, 13168, 29901, 29896, 29989, 5299, 29989, 13168, 29901, 29900, 29989, 29958, 13, 9651, 500, 13, 9651, 343, 29896, 353, 285, 29889, 1767, 29898, 29916, 29896, 416, 13, 9651]}
{"line_number": 299, "line_type": "original", "code": "            } else if (dx > 0.0) {", "entropy": 2.1173532009124756, "is_bug_line": false, "sus_score": 0.10482848367219183, "per_token_entropy": [10.239920616149902, 2.7535011768341064, 4.059731483459473, 1.9682551622390747, 0.07456652820110321, 5.978050708770752, 1.5782420635223389, 0.27259716391563416, 0.02598712034523487, 0.45929718017578125, 0.00976133905351162, 0.10010941326618195, 0.005571906454861164], "tokens": [632, 500, 1683, 565, 313, 8235, 1405, 29871, 29900, 29889, 29900, 29897, 426]}
{"line_number": 299, "line_type": "generated", "code": "\n<|mask:0|>\n    /**\n     * Compute the root of the function.\n     * @param f function to solve\n     * @param x0 first guess for the root\n     * @param y0 value of", "entropy": 0.3934018313884735, "is_bug_line": false, "sus_score": 0.10482848367219183, "per_token_entropy": [0.08406198769807816, 1.8922361135482788, 0.05390799418091774, 0.5172460079193115, 0.02338135801255703, 1.3001594543457031, 0.01598706841468811, 0.2541062533855438, 0.32742515206336975, 0.5794902443885803, 0.1155736893415451, 0.28236258029937744, 0.016202325001358986, 0.00046695294440723956, 1.8701362609863281, 0.42393893003463745, 0.34662389755249023, 0.9063494801521301, 0.29854580760002136, 0.3195360004901886, 0.7269178628921509, 2.0807313919067383, 0.08273354172706604, 0.017495587468147278, 0.006409682333469391, 1.009508728981018, 0.11315730959177017, 0.3403773009777069, 0.6722185611724854, 0.21123872697353363, 0.08392355591058731, 0.04721304401755333, 0.018910828977823257, 0.0009765623253770173, 0.005685349460691214, 0.15803998708724976, 0.45794421434402466, 0.22076942026615143, 0.2565215229988098, 0.3054634630680084, 1.649012565612793, 0.07321797311306, 0.03183262050151825, 0.22383463382720947, 0.02660578303039074, 0.0009005781612358987, 0.018110275268554688, 0.6743829250335693, 0.6973245739936829, 0.004005268216133118, 0.5914151668548584, 0.02227606251835823], "tokens": [13, 29966, 29989, 13168, 29901, 29900, 29989, 29958, 13, 1678, 7762, 13, 268, 334, 11796, 29872, 278, 3876, 310, 278, 740, 29889, 13, 268, 334, 732, 3207, 285, 740, 304, 4505, 13, 268, 334, 732, 3207, 921, 29900, 937, 4140, 363, 278, 3876, 13, 268, 334, 732, 3207, 343, 29900, 995, 310]}
{"line_number": 277, "line_type": "original", "code": "                    p1 = -p1;", "entropy": 2.9844601154327393, "is_bug_line": false, "sus_score": 0.10206207261596577, "per_token_entropy": [8.856429100036621, 2.4526262283325195, 8.144546508789062, 2.028459310531616, 0.16133050620555878, 3.112417697906494, 0.812454104423523, 1.262777328491211, 0.02910243347287178], "tokens": [462, 268, 282, 29896, 353, 448, 29886, 29896, 29936]}
{"line_number": 277, "line_type": "generated", "code": "\n    /**\n     * Compute the root of the function.\n     * @param f function to solve\n     * @param x0 first guess\n     * @return the root\n     * @throws MaxIterationsExceededException", "entropy": 0.30314013361930847, "is_bug_line": false, "sus_score": 0.10206207261596577, "per_token_entropy": [0.09095272421836853, 1.0265536308288574, 0.20909875631332397, 0.2817358076572418, 0.01966702751815319, 0.000497336674015969, 1.8845809698104858, 0.47474801540374756, 0.33468273282051086, 0.9813957214355469, 0.33615660667419434, 0.358896940946579, 0.7588968276977539, 2.0119595527648926, 0.08532682061195374, 0.01289375964552164, 0.0073789432644844055, 1.0285991430282593, 0.12754914164543152, 0.3790241777896881, 0.6479196548461914, 0.21643488109111786, 0.07768291980028152, 0.051019005477428436, 0.01130614522844553, 0.0010059778578579426, 0.00485894875600934, 0.15311318635940552, 0.4112892150878906, 0.22222597897052765, 0.25390198826789856, 0.30030953884124756, 0.4548850655555725, 0.014640283770859241, 0.0008384049870073795, 0.0070841326378285885, 1.0193568468093872, 0.6409797072410583, 0.19389043748378754, 0.07889150828123093, 0.014465227723121643, 0.015749823302030563, 0.00640849769115448, 0.14246121048927307, 0.0008718741592019796, 0.4013054370880127, 0.005270870868116617, 0.000301673193462193, 0.001303776167333126, 0.000364713923772797, 0.0003106111544184387, 0.002245049923658371], "tokens": [13, 1678, 7762, 13, 268, 334, 11796, 29872, 278, 3876, 310, 278, 740, 29889, 13, 268, 334, 732, 3207, 285, 740, 304, 4505, 13, 268, 334, 732, 3207, 921, 29900, 937, 4140, 13, 268, 334, 732, 2457, 278, 3876, 13, 268, 334, 732, 386, 5727, 5918, 13463, 800, 1252, 3947, 287, 2451]}
