{"line_number": 667, "line_type": "original", "code": "        throw new MockitoException(join(", "entropy": 1.5640851259231567, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [8.777741432189941, 4.020867824554443, 0.0815940871834755, 0.16142220795154572, 0.001934325322508812, 0.013480938039720058, 0.1183941513299942, 0.4450571537017822, 0.45627355575561523], "tokens": [308, 3183, 716, 26297, 2049, 2451, 29898, 7122, 29898]}
{"line_number": 667, "line_type": "generated", "code": "\n    public void invalidUseOfMatchersForVarargsParameter(String signature, String matcher) {\n        throw new MockitoException(join(\n                \"Invalid use of argument matchers for varargs parameter.\",\n                \"The method you", "entropy": 0.5627705454826355, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [0.06716892868280411, 0.4907970428466797, 0.6137204766273499, 0.17697928845882416, 1.6274412870407104, 1.7419407367706299, 0.011435674503445625, 0.775398850440979, 0.0029974314384162426, 1.5270644426345825, 0.44440239667892456, 0.17600855231285095, 1.9981799125671387, 0.2920098602771759, 1.4753621816635132, 2.287306547164917, 0.48861241340637207, 0.9214392900466919, 2.1624581813812256, 0.49481338262557983, 1.9459428787231445, 0.007136567961424589, 0.0010448002722114325, 0.04800302907824516, 0.06006808206439018, 0.015910575166344643, 0.10478028655052185, 0.00017557987303007394, 0.006024653557687998, 0.08634001016616821, 0.3135581612586975, 0.5581029653549194, 0.02381761744618416, 0.09550980478525162, 0.12574295699596405, 0.8635929822921753, 0.01030764915049076, 0.0025057366583496332, 0.0024373605847358704, 0.006750398315489292, 0.018771033734083176, 0.9993990659713745, 0.10176380723714828, 0.0027015639934688807, 0.2600741684436798, 1.8371888399124146, 0.006273339968174696, 0.00907286349684, 0.32283422350883484, 2.014876365661621, 0.8306314945220947, 0.8071945905685425], "tokens": [13, 1678, 970, 1780, 8340, 11403, 2776, 9652, 414, 2831, 9037, 5085, 9329, 29898, 1231, 12608, 29892, 1714, 1993, 261, 29897, 426, 13, 4706, 3183, 716, 26297, 2049, 2451, 29898, 7122, 29898, 13, 18884, 376, 13919, 671, 310, 2980, 1993, 414, 363, 722, 5085, 3443, 19602, 13, 18884, 376, 1576, 1158, 366]}
{"line_number": 668, "line_type": "original", "code": "                \"Mockito couldn't inject mock dependency '\" + safelyGetMockName(matchingMock) + \"' on field \",", "entropy": 2.788062334060669, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [6.504439830780029, 10.033881187438965, 6.756605625152588, 2.921880006790161, 3.0639431476593018, 0.0029541682451963425, 0.00044610086479224265, 8.440102577209473, 2.262985944747925, 4.080376148223877, 5.952964782714844, 0.03049742430448532, 4.271028995513916, 0.004713733214884996, 0.0462256483733654, 0.005702537018805742, 0.018666554242372513, 6.495107650756836, 0.04633184149861336, 0.0946134477853775, 0.1754123568534851, 0.03543711453676224, 0.5262371301651001, 4.13107967376709, 1.309514045715332, 5.278469562530518], "tokens": [462, 376, 18680, 2049, 8496, 29915, 29873, 11658, 11187, 10609, 18793, 718, 23511, 2577, 18680, 1170, 29898, 4352, 292, 18680, 29897, 718, 13577, 373, 1746, 9162]}
{"line_number": 668, "line_type": "generated", "code": "\n        return new StringBuilder(\"Possible arguments types: \").append(invocation.getArgumentTypes());\n    }\n\n    private String safelyGetMockName(Object mock) {\n        try {\n            return mock.getClass().getName", "entropy": 0.36448439955711365, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [0.17600645124912262, 0.38493311405181885, 1.0693670511245728, 0.23408949375152588, 0.019151771441102028, 1.0471081733703613, 2.244311809539795, 0.001704074558801949, 0.9102828502655029, 1.2287524938583374, 1.1336772441864014, 1.012086033821106, 0.5747873783111572, 0.058985427021980286, 0.04511593282222748, 1.2720338106155396, 0.004647287540137768, 0.03568526729941368, 0.00949002057313919, 1.8532264232635498, 0.3639923334121704, 0.6067901849746704, 0.011996855027973652, 0.5353954434394836, 0.006161740515381098, 0.0032051641028374434, 0.07992136478424072, 0.031703975051641464, 0.8316933512687683, 0.39941054582595825, 0.19899792969226837, 0.0013392536202445626, 0.0013146100100129843, 0.0007073761080391705, 0.004440329037606716, 0.002317720791324973, 0.13321304321289062, 0.061833932995796204, 0.0037802441511303186, 0.0020049961749464273, 0.24270182847976685, 0.4568746089935303, 0.005106145981699228, 0.003275745315477252, 0.045743487775325775, 0.15835699439048767, 0.28055956959724426, 0.15191471576690674, 0.2991430461406708, 0.0027437680400907993, 0.018598336726427078, 0.6925074458122253], "tokens": [13, 4706, 736, 716, 25844, 703, 9135, 1687, 6273, 4072, 29901, 376, 467, 4397, 29898, 11569, 10610, 29889, 657, 15730, 10562, 3310, 13, 1678, 500, 13, 13, 1678, 2024, 1714, 23511, 2577, 18680, 1170, 29898, 2061, 11187, 29897, 426, 13, 4706, 1018, 426, 13, 9651, 736, 11187, 29889, 657, 2385, 2141, 19629]}
{"line_number": 670, "line_type": "original", "code": "                \"whose type '\" + field.getDeclaringClass().getCanonicalName() + \"' was annotated by @InjectMocks in your test.\",", "entropy": 2.3111555576324463, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [6.158867835998535, 8.002001762390137, 9.920124053955078, 0.2955024540424347, 2.617058277130127, 10.54466438293457, 0.01891457289457321, 8.888505935668945, 1.866518497467041, 0.06948438286781311, 4.176844120025635, 0.008419140242040157, 0.00037293630884960294, 0.001848180778324604, 0.391494482755661, 0.6890389323234558, 3.427849292755127, 0.00020358874462544918, 0.0001951265730895102, 0.0009385710000060499, 0.03751395642757416, 0.05139966309070587, 0.32752594351768494, 3.051736831665039, 4.004337310791016, 0.0023092764895409346, 3.93050217628479, 1.396872639656067, 0.5101988315582275, 0.00556360837072134, 0.02146921493113041, 6.415559768676758, 2.658796787261963, 0.09501343220472336, 1.3028011322021484], "tokens": [462, 376, 1332, 852, 1134, 18793, 718, 1746, 29889, 657, 6185, 29880, 4362, 2385, 2141, 657, 6028, 265, 936, 1170, 580, 718, 13577, 471, 9732, 630, 491, 732, 28329, 18680, 29879, 297, 596, 1243, 19602]}
{"line_number": 670, "line_type": "generated", "code": "\n        }\n        return new StringBuilder(\"Possible argument types are : \").append(parameterTypes[0].getName());\n    }\n\n    public void invalidArgumentPositionRangeAtCreationTime(int argumentIndex) {\n        throw new", "entropy": 0.4401596784591675, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [0.27854907512664795, 1.0448323488235474, 0.055015113204717636, 0.6753650307655334, 0.27125847339630127, 0.9621238708496094, 0.35882481932640076, 0.05058300867676735, 0.7401558756828308, 1.9553841352462769, 0.0015745873097330332, 0.5716375112533569, 0.08040536940097809, 0.9151249527931213, 1.0843920707702637, 1.1800992488861084, 0.46563172340393066, 0.050522033125162125, 0.03898956626653671, 1.557517170906067, 0.02748005837202072, 1.0809880495071411, 0.41311782598495483, 0.15929155051708221, 1.074582576751709, 0.2280169427394867, 0.0019882211927324533, 0.039505135267972946, 0.0007645544828847051, 0.0007671750499866903, 0.01625944674015045, 0.03188192844390869, 0.16823260486125946, 0.21941183507442474, 1.3289321660995483, 0.6383978724479675, 0.4792129397392273, 0.19271451234817505, 0.4514150023460388, 2.4199228286743164, 0.0006020640721544623, 0.005376522429287434, 0.1698797345161438, 0.545966625213623, 0.3457150161266327, 0.08837401121854782, 0.37161219120025635, 0.0009066523634828627, 0.0006503135664388537, 0.013197215273976326, 0.03198261186480522, 0.0031690397299826145], "tokens": [13, 4706, 500, 13, 4706, 736, 716, 25844, 703, 9135, 1687, 2980, 4072, 526, 584, 376, 467, 4397, 29898, 15501, 10562, 29961, 29900, 1822, 19629, 3310, 13, 1678, 500, 13, 13, 1678, 970, 1780, 8340, 15730, 8003, 6069, 4178, 9832, 362, 2481, 29898, 524, 2980, 3220, 29897, 426, 13, 4706, 3183, 716]}
{"line_number": 671, "line_type": "original", "code": "                \"Also I failed because: \" + exceptionCauseMessageIfAvailable(details),", "entropy": 2.2571003437042236, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [6.354226589202881, 10.731654167175293, 6.999204158782959, 6.674462795257568, 3.8506689071655273, 1.072296380996704, 1.007524013519287, 0.3220537006855011, 0.04524138197302818, 1.7348874807357788, 0.10616404563188553, 0.0011461363174021244, 0.004548204597085714, 0.009298942983150482, 0.0034006168134510517, 0.038882821798324585, 0.9354411363601685, 0.7367061376571655], "tokens": [462, 376, 17351, 306, 5229, 1363, 29901, 376, 718, 3682, 29907, 1071, 3728, 3644, 27635, 29898, 14144, 511]}
{"line_number": 671, "line_type": "generated", "code": "\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i", "entropy": 0.3059619665145874, "is_bug_line": false, "sus_score": 0.3333333333333333, "per_token_entropy": [0.15714512765407562, 0.46954280138015747, 0.045474469661712646, 0.3343062102794647, 0.34848108887672424, 0.46919894218444824, 2.170175790786743, 0.005317117087543011, 0.029156044125556946, 0.0006517431465908885, 1.2125171422958374, 0.0006859333370812237, 0.03593439236283302, 1.1616489887237549, 0.037411876022815704, 0.07379060983657837, 0.0616956427693367, 0.056368809193372726, 0.008527295663952827, 0.028154591098427773, 0.023503977805376053, 0.001473889802582562], "tokens": [13, 4706, 500, 13, 4706, 25844, 17444, 353, 716, 25844, 890, 13, 4706, 363, 313, 524, 474, 353, 29871, 29900, 29936, 474]}
{"line_number": 677, "line_type": "original", "code": "        return details.getCause().getMessage();", "entropy": 3.2651195526123047, "is_bug_line": true, "sus_score": 0.3333333333333333, "per_token_entropy": [7.677517890930176, 5.629391193389893, 11.838118553161621, 2.1597869396209717, 1.5949612855911255, 1.0716214179992676, 0.006795747205615044, 1.7930715084075928, 0.7241137027740479, 0.15581580996513367], "tokens": [308, 736, 4902, 29889, 657, 29907, 1071, 2141, 28983, 890]}
{"line_number": 677, "line_type": "generated", "code": "\n\n            stringBuilder.append(\"]\\n\");\n        }\n        return stringBuilder;\n    }\n\n    public void invalidUseOfMatchers() {\n        throw new MockitoException(join(\"Invalid use of argument matchers!", "entropy": 0.21172143518924713, "is_bug_line": true, "sus_score": 0.3333333333333333, "per_token_entropy": [0.06827294081449509, 0.905051589012146, 0.3353108763694763, 0.13161158561706543, 0.0020718553569167852, 0.007566956337541342, 0.0017254954436793923, 0.2536187767982483, 0.783988893032074, 0.03726579621434212, 0.011442510411143303, 0.0017417988274246454, 0.02799660712480545, 0.001508409040980041, 0.001053374377079308, 0.4015004634857178, 0.11377296596765518, 0.005803876090794802, 0.0001494772732257843, 0.031133180484175682, 0.0006656814948655665, 0.0216565802693367, 0.0010674261720851064, 0.0012315078638494015, 0.017216164618730545, 0.04750228300690651, 0.16978135704994202, 0.1834038347005844, 1.428381085395813, 1.4830777645111084, 0.007062471006065607, 0.7618700861930847, 0.002768971025943756, 1.1104105710983276, 0.0028621682431548834, 0.0009402383584529161, 0.00870729424059391, 0.02041284367442131, 0.007094903849065304, 0.0675181970000267, 0.0001691436773398891, 0.002075662137940526, 0.2516237795352936, 0.125463604927063, 0.6924170851707458, 0.7709115147590637, 0.004242349416017532, 0.00145329674705863, 0.008042097091674805, 0.003683569375425577, 0.00026222606538794935, 0.6829497218132019], "tokens": [13, 13, 9651, 1347, 5627, 29889, 4397, 703, 10725, 29876, 1496, 13, 4706, 500, 13, 4706, 736, 1347, 5627, 29936, 13, 1678, 500, 13, 13, 1678, 970, 1780, 8340, 11403, 2776, 9652, 414, 580, 426, 13, 4706, 3183, 716, 26297, 2049, 2451, 29898, 7122, 703, 13919, 671, 310, 2980, 1993, 414, 29991]}
{"line_number": 431, "line_type": "original", "code": "        throw new VerificationInOrderFailure(join(", "entropy": 2.0826597213745117, "is_bug_line": true, "sus_score": 0.13608276348795434, "per_token_entropy": [5.98781156539917, 10.5785551071167, 0.3070419728755951, 5.53518009185791, 0.06672096252441406, 0.0318601056933403, 0.00011050090688513592, 0.002945372834801674, 0.21299906075000763, 0.13512618839740753, 0.050906285643577576], "tokens": [308, 3183, 716, 1798, 2450, 797, 7514, 24155, 29898, 7122, 29898]}
{"line_number": 431, "line_type": "generated", "code": "\n                \"***\",\n                \"If you're unsure why you're getting above error read on.\",\n                \"Due to the nature of the syntax above problem might occur because:\",\n                \"1. The return type of the", "entropy": 0.08187846094369888, "is_bug_line": true, "sus_score": 0.13608276348795434, "per_token_entropy": [0.4653777778148651, 0.2600049674510956, 0.33789753913879395, 0.9552403688430786, 0.23177358508110046, 0.0019169541774317622, 0.01217811368405819, 0.04528672993183136, 0.06565173715353012, 0.0017958242679014802, 0.0005832401220686734, 0.00031025364296510816, 0.027941197156906128, 1.5616295058862306e-05, 0.0002836778585333377, 0.000692961853928864, 8.284702198579907e-05, 3.7431014789035544e-05, 0.0002818902430590242, 0.0009371418273076415, 0.006183539982885122, 0.00442679924890399, 0.0010420613689348102, 0.008455547504127026, 0.00013481661153491586, 0.004193323198705912, 0.022761862725019455, 0.04115011915564537, 0.00017486473370809108, 0.00036125810584053397, 0.0008525789016857743, 0.0032145516015589237, 8.010543388081715e-05, 0.00023505308490712196, 0.0005895545473322272, 0.00047600860125385225, 0.013154156506061554, 3.349725011503324e-05, 0.0005664412747137249, 0.00029237763374112546, 0.00922606885433197, 0.0009872806258499622, 0.00019822540343739092, 0.007074189838021994, 0.008446563966572285, 0.05090968310832977, 0.00021884430316276848, 0.2310420721769333, 0.097077377140522, 0.00016008525562938303, 0.4422566890716553, 0.8934143781661987], "tokens": [13, 18884, 376, 17435, 613, 13, 18884, 376, 3644, 366, 29915, 276, 9644, 545, 2020, 366, 29915, 276, 2805, 2038, 1059, 1303, 373, 19602, 13, 18884, 376, 29928, 434, 304, 278, 5469, 310, 278, 5877, 2038, 1108, 1795, 6403, 1363, 29901, 613, 13, 18884, 376, 29896, 29889, 450, 736, 1134, 310, 278]}
{"line_number": 434, "line_type": "original", "code": "                \"But found this interaction on mock '\" + undesired.getMock() + \"':\",", "entropy": 2.089557647705078, "is_bug_line": false, "sus_score": 0.13608276348795434, "per_token_entropy": [6.181880950927734, 2.4820077419281006, 10.491241455078125, 10.914161682128906, 2.635803461074829, 6.536975383758545, 0.18589070439338684, 0.03145575895905495, 0.40436285734176636, 0.013689680024981499, 3.7803261280059814, 0.0006096888100728393, 0.0008945039589889348, 0.02984853833913803, 0.004494683817028999, 0.031596794724464417, 0.04772745445370674, 0.006064940243959427, 0.064585842192173, 0.0034300799015909433, 0.03365994989871979], "tokens": [462, 376, 6246, 1476, 445, 14881, 373, 11187, 18793, 718, 563, 267, 2859, 29889, 657, 18680, 580, 718, 376, 2396, 613]}
{"line_number": 434, "line_type": "generated", "code": "\n                \"Due to the nature of the syntax above problem might occur because:\",\n                \"1. The return type of the method specified in the stub is different than the return type of the method specified in when().\",\n                \"2.", "entropy": 0.14502759277820587, "is_bug_line": false, "sus_score": 0.13608276348795434, "per_token_entropy": [0.025609556585550308, 0.06623218208551407, 0.40877681970596313, 0.8555474877357483, 0.000514017534442246, 0.00024875884992070496, 0.0020927926525473595, 0.011025105603039265, 0.0001784403866622597, 0.000501030299346894, 0.0010057396721094847, 0.00042500998824834824, 0.058788854628801346, 3.862306402879767e-05, 0.0011062461417168379, 8.868777513271198e-05, 0.018369199708104134, 0.0018512745155021548, 0.00015245705435518175, 0.023102177307009697, 0.012714630924165249, 0.11151197552680969, 0.0003620922507252544, 0.04752115532755852, 0.04000817984342575, 0.00018726025882642716, 0.3174217641353607, 0.58077472448349, 0.011461719870567322, 0.43049511313438416, 0.00619669072329998, 0.4477241337299347, 0.1423427313566208, 0.18427740037441254, 1.7258352041244507, 0.31084033846855164, 0.05971889570355415, 0.0075147803872823715, 0.00030048147891648114, 0.31417515873908997, 0.0007631250191479921, 0.07413968443870544, 0.004369830247014761, 0.02231103554368019, 0.6687067151069641, 0.1453065425157547, 0.13553278148174286, 0.00043585337698459625, 0.03611963987350464, 0.031228508800268173, 0.1929040402173996, 0.0025782696902751923], "tokens": [13, 18884, 376, 29928, 434, 304, 278, 5469, 310, 278, 5877, 2038, 1108, 1795, 6403, 1363, 29901, 613, 13, 18884, 376, 29896, 29889, 450, 736, 1134, 310, 278, 1158, 6790, 297, 278, 19281, 338, 1422, 1135, 278, 736, 1134, 310, 278, 1158, 6790, 297, 746, 2141, 613, 13, 18884, 376, 29906, 29889]}
{"line_number": 418, "line_type": "original", "code": "        ScenarioPrinter scenarioPrinter = new ScenarioPrinter();", "entropy": 1.4615874290466309, "is_bug_line": false, "sus_score": 0.1259881576697424, "per_token_entropy": [7.008100986480713, 11.441638946533203, 0.07374631613492966, 1.6403322219848633, 0.0015997005393728614, 0.7440506219863892, 0.06961382180452347, 0.00031609306461177766, 0.3825574219226837, 0.1374567598104477, 0.06833528727293015, 0.0002177716523874551, 0.0018522264435887337, 2.932505594799295e-05, 0.3539634644985199], "tokens": [308, 2522, 24893, 4040, 1639, 10483, 4040, 1639, 353, 716, 2522, 24893, 4040, 1639, 890]}
{"line_number": 418, "line_type": "generated", "code": "\n                \"Only void methods can doNothing().\",\n                \"Example of correct use of doNothing():\",\n                \"    doNothing().\",\n                \"    doThrow(new RuntimeException())\",\n                \"    ...\",\n                \"", "entropy": 0.1308930367231369, "is_bug_line": false, "sus_score": 0.1259881576697424, "per_token_entropy": [0.16441282629966736, 0.24886281788349152, 0.1437789648771286, 0.5696374177932739, 0.0025898031890392303, 0.003584271762520075, 0.16920559108257294, 0.16593800485134125, 0.01384100504219532, 0.5338663458824158, 0.28160932660102844, 0.0027731317095458508, 0.2001926451921463, 0.09008267521858215, 0.6567902565002441, 0.002667204709723592, 0.3742421269416809, 0.46185237169265747, 0.004663543310016394, 0.002086249878630042, 0.0016750366194173694, 0.009320320561528206, 0.00828626286238432, 0.000785161682870239, 0.021716538816690445, 0.058318786323070526, 0.04299739748239517, 0.021408773958683014, 0.0039107524789869785, 0.00021455370006151497, 0.16258138418197632, 0.0025678062811493874, 0.006876967381685972, 0.015605711378157139, 0.32843106985092163, 0.023525169119238853, 0.0464448519051075, 0.0005718026659451425, 0.010580044239759445, 0.0016383809270337224, 0.0027612438425421715, 0.2915861904621124, 0.006002968642860651, 0.004397246986627579, 0.09461074322462082, 0.043298251926898956, 0.4085367023944855, 0.7200952172279358, 0.052996840327978134, 0.002248380333185196, 0.05690230056643486, 0.2628685534000397], "tokens": [13, 18884, 376, 11730, 1780, 3519, 508, 437, 26521, 2141, 613, 13, 18884, 376, 14023, 310, 1959, 671, 310, 437, 26521, 7295, 613, 13, 18884, 376, 1678, 437, 26521, 2141, 613, 13, 18884, 376, 1678, 437, 29473, 29898, 1482, 24875, 2451, 3101, 613, 13, 18884, 376, 1678, 2023, 613, 13, 18884, 376]}
{"line_number": 419, "line_type": "original", "code": "        String scenario = scenarioPrinter.print(invocations);", "entropy": 2.109961748123169, "is_bug_line": false, "sus_score": 0.1259881576697424, "per_token_entropy": [7.451272487640381, 6.3683977127075195, 8.12138843536377, 0.5449264645576477, 4.335109710693359, 0.06614481657743454, 0.0003721021639648825, 0.030616747215390205, 0.7135677337646484, 0.2740151882171631, 0.7607471942901611, 0.6766241788864136, 0.019609985873103142, 0.1766694337129593], "tokens": [308, 1714, 10483, 353, 10483, 4040, 1639, 29889, 2158, 29898, 11569, 542, 800, 416]}
{"line_number": 419, "line_type": "generated", "code": "\n                \"Example of correct use of doNothing():\",\n                \"    doNothing().\",\n                \"        when(mock.someMethod());\",\n                \"***\",\n                \"If you're unsure why you're getting above", "entropy": 0.16022606194019318, "is_bug_line": false, "sus_score": 0.1259881576697424, "per_token_entropy": [0.09184018522500992, 0.16754283010959625, 0.4146493673324585, 1.3178212642669678, 0.0018149822717532516, 0.11621025204658508, 0.6228943467140198, 0.005354705266654491, 0.002238389104604721, 0.0015810144832357764, 0.006593259517103434, 0.010537579655647278, 0.0010986251290887594, 0.030858352780342102, 0.07130519300699234, 0.030836505815386772, 0.02076750434935093, 0.005183590110391378, 0.0002494739310350269, 0.12304415553808212, 0.0033786376006901264, 0.021466298028826714, 0.0148755619302392, 0.9782608151435852, 0.17716054618358612, 0.0024414039216935635, 0.011851612478494644, 1.822367787361145, 0.6393520832061768, 0.3869720697402954, 0.06583145260810852, 0.04339870437979698, 0.0016536145703867078, 0.027376137673854828, 0.2927432060241699, 0.19650165736675262, 0.09056831896305084, 0.0006090931710787117, 0.008997373282909393, 0.03171275183558464, 0.42213743925094604, 0.005952251143753529, 0.0014638908905908465, 0.0019809638615697622, 0.03384435176849365, 2.706014311115723e-05, 0.000163541772053577, 0.0010034770239144564, 0.00030083899036981165, 5.1616290875244886e-05, 0.0006990373367443681, 0.004189049359411001], "tokens": [13, 18884, 376, 14023, 310, 1959, 671, 310, 437, 26521, 7295, 613, 13, 18884, 376, 1678, 437, 26521, 2141, 613, 13, 18884, 376, 4706, 746, 29898, 17640, 29889, 5372, 4062, 3310, 613, 13, 18884, 376, 17435, 613, 13, 18884, 376, 3644, 366, 29915, 276, 9644, 545, 2020, 366, 29915, 276, 2805, 2038]}
{"line_number": 421, "line_type": "original", "code": "        throw new NoInteractionsWanted(join(", "entropy": 2.429910182952881, "is_bug_line": true, "sus_score": 0.1259881576697424, "per_token_entropy": [5.5837907791137695, 11.780298233032227, 0.09689486026763916, 6.3550801277160645, 1.8506830930709839, 0.14749516546726227, 0.00493641197681427, 6.031808152329177e-05, 0.7378852963447571, 0.11093194782733917, 0.06095409020781517], "tokens": [308, 3183, 716, 1939, 4074, 7387, 29956, 9714, 29898, 7122, 29898]}
{"line_number": 421, "line_type": "generated", "code": "\n                \"doNothing().when(mock).someMethod();\",\n                \"***\",\n                \"If you're unsure why you're getting above error read on.\",\n                \"Due to the nature of the syntax above problem might", "entropy": 0.11458118259906769, "is_bug_line": true, "sus_score": 0.1259881576697424, "per_token_entropy": [0.23390629887580872, 0.32111120223999023, 0.08846349269151688, 1.79109525680542, 0.0650031566619873, 0.097209133207798, 0.07014907151460648, 0.003630714723840356, 0.015796173363924026, 0.18413372337818146, 0.04242638871073723, 1.3120574951171875, 0.008067995309829712, 0.14311334490776062, 0.0038390285335481167, 0.11824546009302139, 0.2957662343978882, 0.13952751457691193, 0.10985473543405533, 0.00048792376765049994, 0.0044590807519853115, 0.0322016105055809, 0.5601063370704651, 0.00892057828605175, 0.0026788560207933187, 0.0023756397422403097, 0.04326776787638664, 9.775113539944869e-06, 0.00012611546844709665, 0.0008263748604804277, 0.0002817710628733039, 3.158996332786046e-05, 0.0006799769471399486, 0.005232923664152622, 0.005963390693068504, 0.03937001898884773, 0.002137520583346486, 0.019685495644807816, 0.00011598391574807465, 0.0020682865288108587, 0.011977655813097954, 0.1482865810394287, 0.00015960850578267127, 0.0005843124235980213, 0.000683074293192476, 0.0012643685331568122, 7.652943895664066e-05, 0.00044955636258237064, 0.00019667598826345056, 0.0004676678800024092, 0.019472157582640648, 0.00017987063620239496], "tokens": [13, 18884, 376, 1867, 26521, 2141, 8256, 29898, 17640, 467, 5372, 4062, 890, 613, 13, 18884, 376, 17435, 613, 13, 18884, 376, 3644, 366, 29915, 276, 9644, 545, 2020, 366, 29915, 276, 2805, 2038, 1059, 1303, 373, 19602, 13, 18884, 376, 29928, 434, 304, 278, 5469, 310, 278, 5877, 2038, 1108, 1795]}
{"line_number": 424, "line_type": "original", "code": "                \"But found this interaction on mock '\" + undesired.getMock() + \"':\",", "entropy": 1.9892154932022095, "is_bug_line": false, "sus_score": 0.1259881576697424, "per_token_entropy": [6.571214199066162, 1.810692548751831, 14.46780776977539, 6.979707717895508, 2.7878713607788086, 5.430685043334961, 0.05215161293745041, 0.054475195705890656, 0.8145250082015991, 0.02796020917594433, 2.371708631515503, 0.0004220310365781188, 0.0008470999309793115, 0.08414505422115326, 0.004461928736418486, 0.03535933047533035, 0.034748248755931854, 0.008336744271218777, 0.1317843198776245, 0.006491171196103096, 0.09813104569911957], "tokens": [462, 376, 6246, 1476, 445, 14881, 373, 11187, 18793, 718, 563, 267, 2859, 29889, 657, 18680, 580, 718, 376, 2396, 613]}
{"line_number": 424, "line_type": "generated", "code": "\n                \"   do nothing when someVoidMethod() is called\",\n                \"   throw RuntimeException when someVoidMethod() is called\"\n        ));\n    }\n\n    public void cannotCallRealMethodOnAMock() {", "entropy": 0.21484552323818207, "is_bug_line": false, "sus_score": 0.1259881576697424, "per_token_entropy": [0.0944751724600792, 0.09851126372814178, 0.1367398053407669, 1.3079880475997925, 0.326604425907135, 0.0577947162091732, 0.06741523742675781, 0.496610164642334, 0.060950275510549545, 0.0004864939546678215, 0.0007238152320496738, 0.04293687641620636, 0.0021482266020029783, 0.0002798642381094396, 0.4553415775299072, 0.0014898402150720358, 0.07220426201820374, 0.060257334262132645, 0.12938809394836426, 0.5743833780288696, 0.04930667206645012, 0.004306328948587179, 0.17036573588848114, 0.000747877755202353, 0.15474627912044525, 0.00012766500003635883, 0.00160089076962322, 0.026653258129954338, 0.010531445033848286, 0.0007303669699467719, 0.6394457817077637, 0.005785505287349224, 0.07526930421590805, 0.000704278820194304, 0.0014962679706513882, 0.0007191693875938654, 0.008886905387043953, 0.0003418338019400835, 0.0003095386200584471, 0.008724193088710308, 0.013077914714813232, 0.034028492867946625, 0.012157504446804523, 1.1797627210617065, 1.492318034172058, 1.1872332096099854, 0.00485776225104928, 0.10954312980175018, 1.5469896793365479, 0.00018559163436293602, 0.44116735458374023, 0.003117465414106846], "tokens": [13, 18884, 376, 259, 437, 3078, 746, 777, 29963, 3398, 4062, 580, 338, 2000, 613, 13, 18884, 376, 259, 3183, 24875, 2451, 746, 777, 29963, 3398, 4062, 580, 338, 2000, 29908, 13, 4706, 1723, 416, 13, 1678, 500, 13, 13, 1678, 970, 1780, 2609, 5594, 21713, 4062, 2951, 5194, 1698, 580, 426]}
{"line_number": 799, "line_type": "original", "code": "        return new MockUtil().getMockName(mock);", "entropy": 1.9122521877288818, "is_bug_line": false, "sus_score": 0.10050378152592121, "per_token_entropy": [8.968334197998047, 5.705216884613037, 1.8296890258789062, 0.4468655586242676, 5.586329460144043, 0.1329781413078308, 0.03446243703365326, 0.012505685910582542, 0.11884984374046326, 0.028110316023230553, 0.011357180774211884, 0.07232491672039032], "tokens": [308, 736, 716, 26297, 7270, 2141, 657, 18680, 1170, 29898, 17640, 416]}
{"line_number": 799, "line_type": "generated", "code": "\n\n    private void throwUnsupportedOperationException() {\n        throw new UnsupportedOperationException();\n    }\n\n    public void wrongTypeOfParameterToStubbing(Class expectedType, Class actualType, String methodName)", "entropy": 0.6604795455932617, "is_bug_line": false, "sus_score": 0.10050378152592121, "per_token_entropy": [0.04651051014661789, 0.7827934622764587, 0.3393101394176483, 1.1282763481140137, 2.250577688217163, 1.9324071407318115, 3.973076820373535, 0.17019300162792206, 0.010869934223592281, 0.007678517140448093, 1.1417192220687866, 0.9134936332702637, 1.6881883144378662, 0.03261915594339371, 0.01592160388827324, 0.2460528314113617, 0.10114340484142303, 0.030500199645757675, 0.11355133354663849, 0.009267408400774002, 0.007951155304908752, 0.004162457771599293, 1.0774868726730347, 0.01645541377365589, 0.027031471952795982, 0.008328350260853767, 0.009223470464348793, 0.2736372649669647, 0.1618257462978363, 0.9631431698799133, 0.24151641130447388, 2.723210334777832, 0.6245293021202087, 0.26887375116348267, 2.3912205696105957, 0.5335365533828735, 1.1475650072097778, 0.009645524434745312, 0.6204606294631958, 0.6319829225540161, 1.3904651403427124, 1.6969035863876343, 0.5583917498588562, 0.020673159509897232, 0.2726716697216034, 0.14318130910396576, 0.019805530086159706, 0.7808126211166382, 1.4986295700073242, 0.6056774258613586, 0.09345445036888123, 0.5883330702781677], "tokens": [13, 13, 1678, 2024, 1780, 3183, 25807, 29884, 3016, 287, 10925, 2451, 580, 426, 13, 4706, 3183, 716, 853, 23765, 10925, 2451, 890, 13, 1678, 500, 13, 13, 1678, 970, 1780, 2743, 1542, 2776, 9329, 1762, 855, 431, 10549, 29898, 2385, 3806, 1542, 29892, 4134, 3935, 1542, 29892, 1714, 1158, 1170, 29897]}
{"line_number": 48, "line_type": "original", "code": "public class Reporter {", "entropy": 4.959988117218018, "is_bug_line": false, "sus_score": 0.06696495301824251, "per_token_entropy": [13.870146751403809, 3.454169988632202, 6.996524810791016, 0.020756645128130913, 0.45834219455718994], "tokens": [970, 770, 830, 18505, 426]}
{"line_number": 48, "line_type": "generated", "code": "\n                \"Also, this error might show up because you stub either of: final/private/equals()/hashCode() methods.\",\n                \"Those methods *cannot* be stubbed/verified.\",\n                \"\"\n        ));", "entropy": 0.0965304747223854, "is_bug_line": false, "sus_score": 0.06696495301824251, "per_token_entropy": [0.30099669098854065, 0.1711999475955963, 0.10883580893278122, 0.07585657387971878, 0.0024173820856958628, 0.0012657972984015942, 0.0010721894213929772, 0.00013255194062367082, 0.00040463366894982755, 2.50339189733495e-06, 2.455681169521995e-05, 0.41525962948799133, 0.02907753922045231, 0.0002805792901199311, 0.001379491644911468, 0.0015674459282308817, 0.1282854974269867, 1.1920922133867862e-06, 0.005413278471678495, 0.18688146770000458, 0.006782130803912878, 0.0009401192655786872, 0.006816822569817305, 0.0001501924270996824, 0.002474700566381216, 0.0008817598572932184, 0.0008499585674144328, 0.5423988699913025, 0.00183723377995193, 0.267179399728775, 0.011884951032698154, 0.051354143768548965, 0.01155446469783783, 0.0002743821241892874, 0.27431732416152954, 0.00028236693469807506, 1.9073468138230965e-06, 0.0002812943421304226, 9.417489309271332e-06, 1.3828182090946939e-05, 1.728519782773219e-05, 0.002434387570247054, 0.00025817399728111923, 0.000120751719805412, 0.03937219828367233, 0.000639710808172822, 0.31858402490615845, 1.809690237045288, 0.002144776750355959, 0.23276527225971222, 0.0016569469589740038, 0.00126079679466784], "tokens": [13, 18884, 376, 17351, 29892, 445, 1059, 1795, 1510, 701, 1363, 366, 19281, 2845, 310, 29901, 2186, 29914, 9053, 29914, 10954, 580, 29914, 8568, 3399, 580, 3519, 19602, 13, 18884, 376, 1349, 852, 3519, 334, 29883, 6735, 29930, 367, 19281, 2580, 29914, 369, 2164, 19602, 13, 18884, 5124, 13, 4706, 1723, 416]}
