{"line_number": 34, "line_type": "original", "code": "        return new OngoingInjecter() {", "entropy": 0.8580508232116699, "is_bug_line": false, "sus_score": 0.2182178902359924, "per_token_entropy": [7.3601555824279785, 1.8320749998092651, 0.09929381310939789, 0.07310640066862106, 0.007480231113731861, 0.010982071049511433, 0.009714826010167599, 0.004955391399562359, 0.008434388786554337, 0.01852496713399887, 0.013835948891937733], "tokens": [308, 736, 716, 438, 865, 29877, 292, 28329, 261, 580, 426]}
{"line_number": 34, "line_type": "generated", "code": "\n        public boolean thenInject() {\n            try {\n                new FieldSetter(fieldInstance, field).set(matchingMock);\n            } catch (Exception e) {\n                throw new MockitoException(\"Problems injecting dependency in", "entropy": 0.09616175293922424, "is_bug_line": false, "sus_score": 0.2182178902359924, "per_token_entropy": [0.09517429023981094, 1.3689234256744385, 0.7379373908042908, 0.09624230861663818, 0.019882429391145706, 0.010181749239563942, 0.011632000096142292, 0.011782458983361721, 0.016311638057231903, 0.06737088412046432, 0.8886165022850037, 0.008234478533267975, 0.009705617092549801, 0.2152406871318817, 0.22115249931812286, 0.030588652938604355, 0.017735112458467484, 0.018696974962949753, 0.017945662140846252, 0.014637111686170101, 0.012238172814249992, 0.017286935821175575, 0.01412983424961567, 0.014767972752451897, 0.010901418514549732, 0.32770729064941406, 0.006136386189609766, 0.00917149893939495, 0.026981577277183533, 0.011396192945539951, 0.08639523386955261, 0.01350763626396656, 0.013246625661849976, 0.02191435545682907, 0.031157562509179115, 0.020419150590896606, 0.014327864162623882, 0.01219236385077238, 0.013151920400559902, 0.04914291575551033, 0.13487392663955688, 0.01454265508800745, 0.01991339772939682, 0.018398342654109, 0.024953652173280716, 0.02220412716269493, 0.01787400059401989, 0.019305313006043434, 0.04135236516594887, 0.011595236137509346, 0.03584744408726692, 0.03538568317890167], "tokens": [13, 4706, 970, 7223, 769, 28329, 580, 426, 13, 9651, 1018, 426, 13, 18884, 716, 8989, 22304, 29898, 2671, 4998, 29892, 1746, 467, 842, 29898, 4352, 292, 18680, 416, 13, 9651, 500, 4380, 313, 2451, 321, 29897, 426, 13, 18884, 3183, 716, 26297, 2049, 2451, 703, 26604, 29879, 11658, 292, 10609, 297]}
{"line_number": 17, "line_type": "original", "code": "public class FinalMockCandidateFilter implements MockCandidateFilter {", "entropy": 1.5150216817855835, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [6.44618034362793, 2.401372194290161, 7.642505645751953, 2.463071823120117, 1.193800687789917, 0.030825063586235046, 0.07027753442525864, 0.661959171295166, 0.5595682263374329, 1.1839475631713867, 0.010977943427860737, 0.002922076266258955, 0.003854228649288416, 0.011666877195239067, 0.04239451140165329], "tokens": [970, 770, 9550, 18680, 29907, 5380, 403, 5072, 10703, 26297, 29907, 5380, 403, 5072, 426]}
{"line_number": 17, "line_type": "generated", "code": "\n    public OngoingInjecter filterCandidate(final Collection<Object> mocks, final Field field, final Object fieldInstance) {\n        if(mocks.size() == 1) {\n            final Object matchingMock", "entropy": 0.03477149084210396, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [0.039825595915317535, 0.29597657918930054, 0.08931870758533478, 0.04911306872963905, 0.00044347942457534373, 0.001490197260864079, 0.0008338788175024092, 0.0007830176036804914, 0.001029200037010014, 0.027314312756061554, 0.0074273403733968735, 0.0025185791309922934, 0.006219674367457628, 0.009292093105614185, 0.05461212247610092, 0.04665296897292137, 0.006146338768303394, 0.009255125187337399, 0.0015174552099779248, 0.015150824561715126, 0.0020680485758930445, 0.008492663502693176, 0.010908139869570732, 0.04906834661960602, 0.011710354126989841, 0.1071113720536232, 0.014257118105888367, 0.022249596193432808, 0.006352470256388187, 0.0039899516850709915, 0.060765981674194336, 0.009351144544780254, 0.003268853761255741, 0.05350455641746521, 0.2445351928472519, 0.08165736496448517, 0.00847126916050911, 0.0013497299514710903, 0.002703822683542967, 0.08097874373197556, 0.0010095505276694894, 0.15201905369758606, 0.002423565834760666, 0.06252343207597733, 0.00959440041333437, 0.0023682662285864353, 0.0034248526208102703, 0.014626068994402885, 0.09448286890983582, 0.0056412541307508945, 0.010673105716705322, 0.0016158869257196784], "tokens": [13, 1678, 970, 438, 865, 29877, 292, 28329, 261, 4175, 29907, 5380, 403, 29898, 8394, 14348, 29966, 2061, 29958, 11187, 29879, 29892, 2186, 8989, 1746, 29892, 2186, 4669, 1746, 4998, 29897, 426, 13, 4706, 565, 29898, 17640, 29879, 29889, 2311, 580, 1275, 29871, 29896, 29897, 426, 13, 9651, 2186, 4669, 9686, 18680]}
{"line_number": 19, "line_type": "original", "code": "        if(mocks.size() == 1) {", "entropy": 1.2500280141830444, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [7.369006156921387, 2.748610496520996, 2.6634678840637207, 0.48160791397094727, 0.05980098247528076, 0.02824881300330162, 0.46107226610183716, 0.007031220942735672, 1.5228557586669922, 0.013901904225349426, 0.6281249523162842, 0.21432526409626007, 0.0523114837706089], "tokens": [308, 565, 29898, 17640, 29879, 29889, 2311, 580, 1275, 29871, 29896, 29897, 426]}
{"line_number": 19, "line_type": "generated", "code": "\n\n    public OngoingInjecter filterCandidate(final Collection<Object> mocks, final Field field, final Object fieldInstance) {\n        if (mocks.size() == 0) {\n            return new O", "entropy": 0.1835392564535141, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [0.07186594605445862, 1.798682451248169, 0.8339875936508179, 0.7103389501571655, 0.24609924852848053, 0.0015826807357370853, 0.004436294082552195, 0.004956577438861132, 0.0017581019783392549, 0.0045822616666555405, 0.030859507620334625, 0.01859014667570591, 0.010205349884927273, 0.006546243093907833, 0.018358783796429634, 0.12532132863998413, 0.03886011615395546, 0.00883597880601883, 0.007705488707870245, 0.004044567700475454, 0.011275970377027988, 0.004052166361361742, 0.009919279254972935, 0.032682497054338455, 0.21341198682785034, 0.02178535982966423, 0.2009207308292389, 0.029776105657219887, 0.03143531084060669, 0.015053598210215569, 0.007323680445551872, 0.10263806581497192, 0.0067856828682124615, 0.003870378714054823, 0.4221596419811249, 1.0764402151107788, 0.3018055558204651, 0.04243884235620499, 0.0042046005837619305, 0.0239099208265543, 0.6437721848487854, 0.0031794970855116844, 0.7325226068496704, 0.005367510952055454, 1.4003610610961914, 0.016017336398363113, 0.04042121767997742, 0.010906960815191269, 0.04894110560417175, 0.067445769906044, 0.046589821577072144, 0.01900850050151348], "tokens": [13, 13, 1678, 970, 438, 865, 29877, 292, 28329, 261, 4175, 29907, 5380, 403, 29898, 8394, 14348, 29966, 2061, 29958, 11187, 29879, 29892, 2186, 8989, 1746, 29892, 2186, 4669, 1746, 4998, 29897, 426, 13, 4706, 565, 313, 17640, 29879, 29889, 2311, 580, 1275, 29871, 29900, 29897, 426, 13, 9651, 736, 716, 438]}
{"line_number": 20, "line_type": "original", "code": "            final Object matchingMock = mocks.iterator().next();", "entropy": 0.8961916565895081, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [8.115202903747559, 2.7312464714050293, 0.1463550180196762, 0.036135509610176086, 0.00658129807561636, 0.04767812788486481, 0.43257203698158264, 0.028593292459845543, 0.022314416244626045, 0.04038400948047638, 0.013324265368282795, 0.015216810628771782, 0.01488754153251648], "tokens": [632, 2186, 4669, 9686, 18680, 353, 11187, 29879, 29889, 17609, 2141, 4622, 890]}
{"line_number": 20, "line_type": "generated", "code": "\n    private final Object matchingMock = mocks.iterator().next();\n<|mask:1|>\n\n    public boolean isTestDoubleField(Field field) {\n        return field.isAnnotationPresent(<|type:org", "entropy": 0.49480465054512024, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [0.11523263156414032, 1.211280107498169, 0.47570091485977173, 0.9033151268959045, 0.241591677069664, 0.04919341951608658, 0.009843971580266953, 0.5605560541152954, 0.22330136597156525, 0.018219145014882088, 0.027457790449261665, 0.04440303146839142, 0.017176559194922447, 0.018770799040794373, 0.021047336980700493, 0.03309234604239464, 0.5906957387924194, 0.020391585305333138, 0.11631754040718079, 0.027291692793369293, 0.3154086172580719, 0.03558150306344032, 0.23950496315956116, 0.1375783234834671, 1.2685844898223877, 0.5505111217498779, 0.7721263766288757, 2.2632155418395996, 1.6208200454711914, 3.7196929454803467, 0.5791129469871521, 1.2767322063446045, 0.3235602378845215, 0.4500699043273926, 0.08325107395648956, 0.056891150772571564, 0.029073024168610573, 0.029723338782787323, 0.09771176427602768, 0.2786758542060852, 1.3261045217514038, 0.06216087564826012, 0.8626342415809631, 0.10345448553562164, 0.008982605300843716, 0.04008399695158005, 0.04637930169701576, 1.6370294094085693, 0.029256075620651245, 1.6718106269836426, 0.17738030850887299, 0.9118601679801941], "tokens": [13, 1678, 2024, 2186, 4669, 9686, 18680, 353, 11187, 29879, 29889, 17609, 2141, 4622, 890, 13, 29966, 29989, 13168, 29901, 29896, 29989, 29958, 13, 13, 1678, 970, 7223, 338, 3057, 11843, 3073, 29898, 3073, 1746, 29897, 426, 13, 4706, 736, 1746, 29889, 275, 21978, 13504, 296, 29898, 29966, 29989, 1853, 29901, 990]}
{"line_number": 22, "line_type": "original", "code": "            return new OngoingInjecter() {", "entropy": 0.9002557396888733, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [7.40359354019165, 1.881801962852478, 0.4056099057197571, 0.1452408730983734, 0.005961494520306587, 0.011496013961732388, 0.0072469934821128845, 0.006283645983785391, 0.009331894107162952, 0.015600547194480896, 0.010646450333297253], "tokens": [632, 736, 716, 438, 865, 29877, 292, 28329, 261, 580, 426]}
{"line_number": 22, "line_type": "generated", "code": "\n\n    private static class FieldSetterInjecter implements OngoingInjecter {\n        private final Object fieldInstance;\n        private final Field field;\n        private final Object matchingMock;\n\n        public FieldSetterInjecter(Object field", "entropy": 0.292024165391922, "is_bug_line": false, "sus_score": 0.21320071635561041, "per_token_entropy": [0.1302129030227661, 1.6005525588989258, 0.6181594729423523, 1.214120864868164, 1.3599714040756226, 0.833071231842041, 1.3160158395767212, 0.717155933380127, 1.5354899168014526, 0.07690809667110443, 0.31717202067375183, 0.05373866483569145, 0.001085883704945445, 0.0041644759476184845, 0.0034878156147897243, 0.0015511397505179048, 0.004291254561394453, 0.021750833839178085, 0.006927283015102148, 0.37198376655578613, 0.07865341007709503, 0.19577613472938538, 0.5662900805473328, 0.9239823818206787, 0.055740561336278915, 0.010723348706960678, 0.007320248521864414, 0.022999081760644913, 0.007335158996284008, 0.01398384291678667, 0.1383313238620758, 0.030145274475216866, 0.013516339473426342, 0.006177735049277544, 0.6904638409614563, 0.11743403226137161, 0.12937436997890472, 0.08507350087165833, 0.678909420967102, 0.008988512679934502, 0.006879335269331932, 0.00615214416757226, 0.1282583475112915, 0.05885662883520126, 0.5348824262619019, 0.03556792810559273, 0.00915791466832161, 0.003151452634483576, 0.004209942650049925, 0.0019300420535728335, 0.34801554679870605, 0.07916369289159775], "tokens": [13, 13, 1678, 2024, 2294, 770, 8989, 22304, 28329, 261, 10703, 438, 865, 29877, 292, 28329, 261, 426, 13, 4706, 2024, 2186, 4669, 1746, 4998, 29936, 13, 4706, 2024, 2186, 8989, 1746, 29936, 13, 4706, 2024, 2186, 4669, 9686, 18680, 29936, 13, 13, 4706, 970, 8989, 22304, 28329, 261, 29898, 2061, 1746]}
