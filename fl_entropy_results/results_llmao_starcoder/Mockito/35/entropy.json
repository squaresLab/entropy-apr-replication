{"line_number": 362, "line_type": "original", "code": "        return reportMatcher(new InstanceOf(clazz)).<T>returnNull();", "entropy": 2.240234375, "is_bug_line": true, "sus_score": 0.50213, "per_token_entropy": [4.03515625, 1.2685546875, 0.8623046875, 0.00830841064453125, 0.004016876220703125, 0.007045745849609375, 10.4609375, 0.11212158203125, 0.047027587890625, 3.9375, 0.159423828125, 4.453125, 10.046875, 0.431640625, 0.254638671875, 1.9560546875, 0.03778076171875], "tokens": [351, 442, 3639, 11945, 26, 890, 11617, 1419, 26, 20966, 3427, 46, 70, 48, 601, 1883, 473]}
{"line_number": 362, "line_type": "generated", "code": "\n    }\n\n    /**\n     * float argument that is equal to the given value.\n     * <p>\n     * See examples in javadoc for {@link Matchers} class\n     * \n     * @param value\n     *            the given value.\n     * @return", "entropy": 0.01383209228515625, "is_bug_line": true, "sus_score": 0.50213, "per_token_entropy": [0.364501953125, 0.083984375, 0.109375, 0.007732391357421875, 0.006771087646484375, 0.00012242794036865234, 0.10931396484375, 0.000347137451171875, 0.00019466876983642578, 0.00013697147369384766, 0.000514984130859375, 2.7060508728027344e-05, 0.00021922588348388672, 5.6624412536621094e-05, 0.0002472400665283203, 0.001708984375, 0.005161285400390625, 3.4809112548828125e-05, 0.00478363037109375, 6.830692291259766e-05, 2.6226043701171875e-05, 0.0016269683837890625, 2.288818359375e-05, 0.001232147216796875, 0.00016582012176513672, 2.4199485778808594e-05, 5.435943603515625e-05, 2.300739288330078e-05, 1.33514404296875e-05, 4.76837158203125e-07, 1.7404556274414062e-05, 1.1920928955078125e-06, 9.417533874511719e-06, 6.520748138427734e-05, 0.0015516281127929688, 0.00010848045349121094, 0.0019168853759765625, 1.3113021850585938e-05, 0.00016176700592041016, 0.00015115737915039062, 0.0006585121154785156, 0.0015468597412109375, 3.898143768310547e-05, 0.0003745555877685547, 0.0002193450927734375, 9.381771087646484e-05, 0.00018703937530517578, 0.0003647804260253906, 0.01287841796875, 0.00016105175018310547, 0.0002727508544921875, 5.3763389587402344e-05], "tokens": [284, 320, 446, 1022, 275, 319, 1897, 2793, 688, 438, 5040, 372, 322, 2702, 786, 32, 275, 319, 333, 98, 48, 275, 319, 2802, 8272, 328, 44070, 436, 3088, 1204, 12253, 483, 111, 443, 275, 319, 5384, 319, 477, 753, 786, 275, 319, 1468, 322, 2702, 786, 32, 275, 319, 477, 601]}
{"line_number": 516, "line_type": "original", "code": "        return reportMatcher(new Same(value)).<T>returnNull();", "entropy": 1.9482421875, "is_bug_line": true, "sus_score": 0.28353, "per_token_entropy": [4.5390625, 0.2271728515625, 1.73046875, 0.004909515380859375, 0.012176513671875, 0.2012939453125, 11.9765625, 0.80615234375, 7.3828125, 0.1937255859375, 1.9716796875, 1.982421875, 0.004604339599609375, 0.01294708251953125, 0.11328125, 0.0053863525390625], "tokens": [351, 442, 3639, 11945, 26, 890, 18993, 26, 853, 3427, 46, 70, 48, 601, 1883, 473]}
{"line_number": 516, "line_type": "generated", "code": "\n    }\n\n    /**\n     * String argument that matches the given regular expression.\n     * <p>\n     * See examples in javadoc for {@link Matchers} class\n     * \n     * @param regex\n     *            the regular expression.\n     * @return empty", "entropy": 0.06317138671875, "is_bug_line": true, "sus_score": 0.28353, "per_token_entropy": [0.30322265625, 0.0009274482727050781, 0.1563720703125, 0.0087432861328125, 0.003475189208984375, 3.325939178466797e-05, 0.2181396484375, 0.008636474609375, 0.034332275390625, 1.255859375, 0.1290283203125, 0.059814453125, 0.0928955078125, 0.00286865234375, 0.07525634765625, 0.0109100341796875, 2.753734588623047e-05, 0.04876708984375, 0.0005521774291992188, 0.0003254413604736328, 0.0007653236389160156, 2.0384788513183594e-05, 0.035308837890625, 0.01316070556640625, 0.00011241436004638672, 0.00010251998901367188, 6.341934204101562e-05, 8.96453857421875e-05, 7.62939453125e-06, 0.00020706653594970703, 2.384185791015625e-07, 2.4557113647460938e-05, 1.71661376953125e-05, 0.00803375244140625, 0.00018107891082763672, 0.0110321044921875, 2.396106719970703e-05, 0.00278472900390625, 0.0017175674438476562, 0.32421875, 0.00798797607421875, 4.76837158203125e-06, 0.0026569366455078125, 0.05279541015625, 0.06488037109375, 0.004802703857421875, 0.2322998046875, 0.005229949951171875, 6.508827209472656e-05, 0.00276947021484375, 0.004993438720703125, 0.09796142578125], "tokens": [284, 320, 446, 1022, 275, 319, 892, 2793, 688, 8001, 322, 2702, 10605, 6101, 32, 275, 319, 333, 98, 48, 275, 319, 2802, 8272, 328, 44070, 436, 3088, 1204, 12253, 483, 111, 443, 275, 319, 5384, 319, 477, 753, 9667, 275, 319, 1468, 322, 10605, 6101, 32, 275, 319, 477, 601, 3502]}
{"line_number": 479, "line_type": "original", "code": "        return reportMatcher(new Equals(value)).<T>returnNull();", "entropy": 1.119140625, "is_bug_line": true, "sus_score": 0.27865, "per_token_entropy": [5.87890625, 3.888671875, 1.3671875, 0.0302734375, 0.0435791015625, 0.322998046875, 3.669921875, 0.113525390625, 0.330078125, 0.175048828125, 1.9736328125, 0.0843505859375, 0.00395965576171875, 0.0087432861328125, 0.01349639892578125, 0.005870819091796875], "tokens": [351, 442, 3639, 11945, 26, 890, 21697, 26, 853, 3427, 46, 70, 48, 601, 1883, 473]}
{"line_number": 479, "line_type": "generated", "code": "\n\n    /**\n     * non-null argument.\n     * <p>\n     * See examples in javadoc for {@link Matchers} class\n     * \n     * @return <code>null</code>.\n     */\n    public static Object notNullValue() {\n        return", "entropy": 0.141845703125, "is_bug_line": true, "sus_score": 0.27865, "per_token_entropy": [1.1796875, 0.055511474609375, 0.01125335693359375, 6.80685043334961e-05, 2.646484375, 0.357421875, 0.00399017333984375, 0.02899169921875, 0.03741455078125, 0.007167816162109375, 0.00018513202667236328, 0.021209716796875, 0.00017082691192626953, 0.00043845176696777344, 0.0019550323486328125, 8.344650268554688e-06, 0.01123046875, 0.0009174346923828125, 3.421306610107422e-05, 8.058547973632812e-05, 7.426738739013672e-05, 7.534027099609375e-05, 1.3113021850585938e-06, 0.00011241436004638672, 5.0067901611328125e-06, 2.110004425048828e-05, 4.363059997558594e-05, 0.003894805908203125, 0.004871368408203125, 0.00838470458984375, 1.990795135498047e-05, 0.0024051666259765625, 0.216796875, 0.29931640625, 0.00470733642578125, 0.0034313201904296875, 0.37451171875, 0.00017201900482177734, 5.5909156799316406e-05, 0.01277923583984375, 0.0014848709106445312, 0.01422119140625, 0.0111236572265625, 0.0040435791015625, 0.00040268898010253906, 0.236328125, 0.150634765625, 1.6025390625, 0.0028285980224609375, 0.0033168792724609375, 0.0246734619140625, 0.032623291015625], "tokens": [446, 1022, 275, 319, 2979, 31, 1693, 2793, 32, 275, 319, 333, 98, 48, 275, 319, 2802, 8272, 328, 44070, 436, 3088, 1204, 12253, 483, 111, 443, 275, 319, 5384, 319, 477, 601, 333, 687, 48, 1693, 377, 687, 4503, 275, 569, 284, 562, 907, 2194, 646, 45107, 346, 301, 291, 442]}
{"line_number": 717, "line_type": "original", "code": "        return mockingProgress.getArgumentMatcherStorage().reportMatcher(matcher);", "entropy": 1.474609375, "is_bug_line": false, "sus_score": 0.26089, "per_token_entropy": [6.375, 0.80615234375, 7.73828125, 3.15234375, 3.375, 0.10174560546875, 1.58203125, 0.0341796875, 0.040374755859375, 0.00862884521484375, 0.06707763671875, 0.114501953125, 0.0045623779296875, 0.02349853515625, 0.08538818359375, 0.08734130859375], "tokens": [351, 442, 4395, 299, 5280, 32, 371, 3484, 11945, 3566, 922, 3734, 11945, 26, 16937, 293]}
{"line_number": 717, "line_type": "generated", "code": "\n    private static HandyReturnValues reportMatcher(Matcher<?> matcher) {", "entropy": 0.286865234375, "is_bug_line": false, "sus_score": 0.26089, "per_token_entropy": [1.5078125, 1.13671875, 0.1016845703125, 0.59912109375, 3.361701965332031e-05, 0.0032024383544921875, 0.0024814605712890625, 0.234130859375, 0.2249755859375, 0.046905517578125, 0.1007080078125, 0.1865234375, 0.01157379150390625, 0.1268310546875, 0.022003173828125], "tokens": [284, 945, 907, 17384, 107, 2891, 3354, 3639, 11945, 26, 11945, 11674, 20638, 27, 301]}
{"line_number": 102, "line_type": "original", "code": "     * @return <code>false</code>.", "entropy": 1.7568359375, "is_bug_line": false, "sus_score": 0.25045, "per_token_entropy": [5.1328125, 6.58984375, 1.806640625, 1.0419921875, 0.263427734375, 0.0149993896484375, 0.00726318359375, 4.390625, 0.003147125244140625, 0.0003452301025390625, 0.07513427734375], "tokens": [262, 319, 477, 601, 333, 687, 48, 1870, 377, 687, 4503]}
{"line_number": 102, "line_type": "generated", "code": "\n\n    /**\n     * any double, Double or null.\n     * <p>\n     * See examples in javadoc for {@link Matchers} class\n     * \n     * @return <code>0</code>.\n     */\n    public static double anyDouble() {", "entropy": 0.058441162109375, "is_bug_line": false, "sus_score": 0.25045, "per_token_entropy": [0.5078125, 0.031463623046875, 0.019012451171875, 8.666515350341797e-05, 0.08123779296875, 1.6611328125, 0.015350341796875, 0.03509521484375, 0.046539306640625, 0.0005817413330078125, 0.085693359375, 0.014862060546875, 0.00035858154296875, 0.0181732177734375, 0.0005731582641601562, 0.00024056434631347656, 0.0013036727905273438, 9.894371032714844e-06, 0.0060272216796875, 0.0017900466918945312, 4.4465065002441406e-05, 4.088878631591797e-05, 4.4465065002441406e-05, 0.00015211105346679688, 1.4185905456542969e-05, 0.00010955333709716797, 3.5762786865234375e-07, 0.00010895729064941406, 0.00029540061950683594, 0.01009368896484375, 0.00461578369140625, 0.028289794921875, 0.0005555152893066406, 0.002101898193359375, 0.0016040802001953125, 0.01611328125, 0.0008540153503417969, 0.0011873245239257812, 0.0016803741455078125, 0.385986328125, 0.0009465217590332031, 0.012786865234375, 0.01265716552734375, 0.00695037841796875, 0.00727081298828125, 0.0020389556884765625, 0.0003631114959716797, 0.0131072998046875, 4.9233436584472656e-05, 0.000213623046875, 0.0008873939514160156, 0.0006899833679199219], "tokens": [446, 1022, 275, 319, 1346, 2064, 30, 6934, 556, 744, 32, 275, 319, 333, 98, 48, 275, 319, 2802, 8272, 328, 44070, 436, 3088, 1204, 12253, 483, 111, 443, 275, 319, 5384, 319, 477, 601, 333, 687, 48, 34, 377, 687, 4503, 275, 569, 284, 562, 907, 2064, 1346, 4075, 346, 301]}
