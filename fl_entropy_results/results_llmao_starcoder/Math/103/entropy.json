{"line_number": 56, "line_type": "original", "code": "     * Creates normal distribution with the mean equal to zero and standard", "entropy": 3.091796875, "is_bug_line": false, "sus_score": 0.35654, "per_token_entropy": [2.583984375, 0.0237579345703125, 20.03125, 6.28515625, 0.2001953125, 1.166015625, 2.892578125, 1.5458984375, 2.35546875, 0.1322021484375, 0.90283203125, 0.658203125, 1.40234375], "tokens": [262, 319, 9301, 4302, 7433, 623, 322, 5651, 5040, 372, 5934, 461, 6216]}
{"line_number": 56, "line_type": "generated", "code": "\n     * value of this function is 0 or 1\n     */\n    public double cumulativeProbability(double x) throws MathException {\n        // use the algorithm published in the paper\n        // <a href=\"http://mathworld.wolfram.com", "entropy": 0.4775390625, "is_bug_line": false, "sus_score": 0.35654, "per_token_entropy": [0.77294921875, 0.00940704345703125, 1.9287109375, 2.037109375, 0.73974609375, 0.9833984375, 0.1939697265625, 1.775390625, 0.179443359375, 0.85009765625, 0.007354736328125, 0.002666473388671875, 2.021484375, 0.168701171875, 0.07305908203125, 0.080078125, 0.01238250732421875, 0.02093505859375, 0.0009603500366210938, 0.0017671585083007812, 0.06805419921875, 0.00016832351684570312, 0.0382080078125, 0.160888671875, 0.0033817291259765625, 5.960464477539062e-07, 0.1650390625, 0.299560546875, 2.09375, 2.015625, 0.81787109375, 1.333984375, 1.19140625, 0.2099609375, 0.3916015625, 1.2333984375, 0.88623046875, 0.0211944580078125, 0.453857421875, 0.8271484375, 0.015838623046875, 0.1947021484375, 0.0062408447265625, 0.037750244140625, 0.487548828125, 0.002593994140625, 3.6954879760742188e-06, 0.0010280609130859375, 7.772445678710938e-05, 8.428096771240234e-05, 0.00879669189453125, 1.4424324035644531e-05], "tokens": [275, 319, 786, 432, 458, 667, 438, 225, 34, 556, 225, 35, 275, 569, 284, 562, 2064, 41008, 35567, 26, 2627, 816, 27, 2571, 4175, 984, 301, 291, 434, 793, 322, 8218, 9581, 328, 322, 12517, 291, 434, 333, 83, 976, 347, 525, 555, 3812, 5860, 32, 105, 362, 43579, 32, 508]}
{"line_number": 115, "line_type": "original", "code": "     * that P(X &lt; x) = <code>p</code>.", "entropy": 1.533203125, "is_bug_line": false, "sus_score": 0.31536, "per_token_entropy": [3.841796875, 0.016204833984375, 13.8203125, 1.6416015625, 0.0013895034790039062, 0.00948333740234375, 0.026702880859375, 0.002506256103515625, 0.00485992431640625, 7.15234375, 0.050628662109375, 0.9013671875, 0.10028076171875, 0.003108978271484375, 0.00028061866760253906, 0.0011720657348632812, 0.0005669593811035156, 0.0009646415710449219, 1.5439453125], "tokens": [262, 319, 688, 447, 26, 74, 549, 2159, 45, 816, 27, 280, 333, 687, 48, 98, 377, 687, 4503]}
{"line_number": 115, "line_type": "generated", "code": "\n     * @return domain value upper bound, i.e.\n     *         P(X &lt; <i>upper bound</i>) &gt; <code>p</code>\n     */\n    protected double getDomainUpperBound(double p", "entropy": 0.03082275390625, "is_bug_line": false, "sus_score": 0.31536, "per_token_entropy": [0.1978759765625, 0.003101348876953125, 0.00728607177734375, 0.0005550384521484375, 0.001789093017578125, 0.0022869110107421875, 0.0298614501953125, 0.0001119375228881836, 2.8133392333984375e-05, 0.00287628173828125, 0.0001442432403564453, 1.2040138244628906e-05, 0.00203704833984375, 0.1424560546875, 0.00020968914031982422, 0.08770751953125, 0.00026726722717285156, 0.0009579658508300781, 0.0004897117614746094, 0.0010290145874023438, 0.00018703937530517578, 0.0020122528076171875, 0.0007243156433105469, 0.01120758056640625, 6.198883056640625e-06, 0.002613067626953125, 0.00014460086822509766, 6.198883056640625e-06, 0.00020778179168701172, 0.0002225637435913086, 0.00014770030975341797, 0.05010986328125, 0.006023406982421875, 0.0010700225830078125, 8.058547973632812e-05, 1.8477439880371094e-05, 0.0002741813659667969, 0.00057220458984375, 0.0003714561462402344, 0.024169921875, 0.974609375, 0.0217742919921875, 0.0169525146484375, 0.00249481201171875, 0.00164794921875, 0.00010955333709716797, 4.291534423828125e-06, 4.029273986816406e-05, 0.00026535987854003906, 1.800060272216797e-05, 0.00365447998046875, 7.2479248046875e-05], "tokens": [275, 319, 477, 601, 5880, 786, 8342, 5085, 30, 595, 32, 87, 32, 275, 319, 263, 447, 26, 74, 549, 2159, 45, 333, 91, 48, 7607, 5085, 377, 91, 5103, 549, 1837, 45, 333, 687, 48, 98, 377, 687, 48, 275, 569, 284, 2522, 2064, 622, 5041, 9878, 4716, 26, 2627, 298]}
{"line_number": 151, "line_type": "original", "code": "            ret = -Double.MAX_VALUE;", "entropy": 1.5869140625, "is_bug_line": false, "sus_score": 0.31527, "per_token_entropy": [6.26953125, 3.658203125, 0.03106689453125, 3.677734375, 2.169921875, 0.00031638145446777344, 0.004680633544921875, 0.0004639625549316406, 0.0002853870391845703, 0.0511474609375], "tokens": [1468, 2152, 280, 429, 4075, 32, 3459, 81, 5975, 45]}
{"line_number": 151, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.31527, "per_token_entropy": [], "tokens": []}
{"line_number": 113, "line_type": "original", "code": "    /**", "entropy": 4.6484375, "is_bug_line": false, "sus_score": 0.31015, "per_token_entropy": [5.56640625, 3.732421875], "tokens": [264, 1022]}
{"line_number": 113, "line_type": "generated", "code": "\n     * @param p the desired probability for the critical value\n     * @return domain value upper bound, i.e.\n     *         P(X &lt; <i>upper bound</i>) &gt; <code>p</code>", "entropy": 0.0260162353515625, "is_bug_line": false, "sus_score": 0.31015, "per_token_entropy": [0.11480712890625, 0.0012607574462890625, 0.7724609375, 0.002437591552734375, 0.00039124488830566406, 0.005168914794921875, 5.4836273193359375e-05, 0.00036334991455078125, 0.0015649795532226562, 7.033348083496094e-06, 0.0001577138900756836, 0.0009007453918457031, 0.05426025390625, 0.0005049705505371094, 0.0021762847900390625, 0.0018358230590820312, 0.0027027130126953125, 0.0011157989501953125, 0.041259765625, 6.0558319091796875e-05, 1.2159347534179688e-05, 0.003032684326171875, 0.00041031837463378906, 1.5735626220703125e-05, 0.0005822181701660156, 0.1253662109375, 0.00015592575073242188, 0.049407958984375, 0.00028395652770996094, 0.0006103515625, 0.0003063678741455078, 0.0006527900695800781, 8.440017700195312e-05, 0.001346588134765625, 0.00048065185546875, 0.003757476806640625, 4.0531158447265625e-06, 0.003086090087890625, 0.00012969970703125, 6.198883056640625e-06, 0.0002536773681640625, 0.00011610984802246094, 4.029273986816406e-05, 0.126953125, 0.005748748779296875, 0.0007176399230957031, 3.719329833984375e-05, 1.1682510375976562e-05, 0.00013506412506103516, 0.0004496574401855469, 0.00042557716369628906, 0.024139404296875], "tokens": [275, 319, 477, 753, 298, 322, 10848, 16356, 436, 322, 18896, 786, 275, 319, 477, 601, 5880, 786, 8342, 5085, 30, 595, 32, 87, 32, 275, 319, 263, 447, 26, 74, 549, 2159, 45, 333, 91, 48, 7607, 5085, 377, 91, 5103, 549, 1837, 45, 333, 687, 48, 98, 377, 687, 48]}
{"line_number": 83, "line_type": "original", "code": "    public double getStandardDeviation() {", "entropy": 1.923828125, "is_bug_line": false, "sus_score": 0.31009, "per_token_entropy": [5.6953125, 6.890625, 0.16162109375, 2.892578125, 1.3662109375, 0.00885772705078125, 0.006740570068359375, 0.12176513671875, 0.162353515625], "tokens": [264, 562, 2064, 622, 8090, 685, 17029, 346, 301]}
{"line_number": 83, "line_type": "generated", "code": "\n            return Double.POSITIVE_INFINITY;\n        }\n        if (p < 0.5) {\n            return -inverseCumulativeProbability(1 - p);\n        }\n        final double x = mean;\n        final double sigma = standardDeviation;\n       ", "entropy": 0.24853515625, "is_bug_line": false, "sus_score": 0.31009, "per_token_entropy": [0.250244140625, 0.042816162109375, 0.04437255859375, 0.001255035400390625, 0.0066070556640625, 0.00033020973205566406, 0.0002467632293701172, 0.01004791259765625, 0.1461181640625, 0.0015287399291992188, 0.289306640625, 0.461181640625, 0.33740234375, 0.00589752197265625, 0.0019063949584960938, 0.00044918060302734375, 0.00011408329010009766, 0.626953125, 0.70947265625, 0.0198516845703125, 0.0101470947265625, 0.1055908203125, 0.1171875, 0.90185546875, 0.16650390625, 0.0345458984375, 2.777576446533203e-05, 0.00023734569549560547, 0.03521728515625, 0.0007452964782714844, 0.76708984375, 0.00519561767578125, 0.00681304931640625, 0.06280517578125, 0.0005207061767578125, 0.68896484375, 1.8291015625, 0.1358642578125, 1.5498046875, 1.28125, 0.36669921875, 0.20849609375, 0.07855224609375, 0.1416015625, 0.0052642822265625, 1.2548828125, 0.004642486572265625, 0.017852783203125, 3.8623809814453125e-05, -0.0, 0.004329681396484375, 0.1849365234375], "tokens": [324, 442, 6934, 32, 42270, 81, 36069, 45, 291, 320, 291, 415, 308, 98, 333, 225, 34, 32, 39, 27, 301, 324, 442, 429, 18139, 53, 10318, 35567, 26, 35, 429, 298, 293, 291, 320, 291, 1158, 2064, 816, 280, 5651, 45, 291, 1158, 2064, 16355, 280, 6216, 685, 17029, 45, 291]}
