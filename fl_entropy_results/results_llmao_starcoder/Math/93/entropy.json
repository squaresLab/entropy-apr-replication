{"line_number": 350, "line_type": "original", "code": "        return factorials[n];", "entropy": 2.201171875, "is_bug_line": false, "sus_score": 0.34177, "per_token_entropy": [4.33984375, 6.03515625, 6.6015625, 0.004413604736328125, 0.39794921875, 0.078125, 0.031829833984375, 0.1258544921875], "tokens": [351, 442, 10365, 564, 101, 77, 96, 970]}
{"line_number": 350, "line_type": "generated", "code": "\n        }\n        return logSum;\n    }", "entropy": 0.03375244140625, "is_bug_line": false, "sus_score": 0.34177, "per_token_entropy": [0.118896484375, 0.0179290771484375, 0.0650634765625, 0.0168914794921875, 0.02392578125, 0.00018513202667236328, 0.005657196044921875, 0.052947998046875, 0.0021686553955078125], "tokens": [291, 320, 291, 442, 1245, 4934, 45, 284, 320]}
{"line_number": 346, "line_type": "original", "code": "        if (result == Long.MAX_VALUE) {", "entropy": 1.8095703125, "is_bug_line": true, "sus_score": 0.34015, "per_token_entropy": [6.13671875, 3.59765625, 0.1112060546875, 3.2890625, 2.51953125, 5.30859375, 0.0005092620849609375, 0.4775390625, 0.0005741119384765625, 0.000904083251953125, 0.18115234375, 0.09942626953125], "tokens": [351, 415, 308, 1267, 610, 6359, 32, 3459, 81, 5975, 27, 301]}
{"line_number": 346, "line_type": "generated", "code": "\n        return Math.log(factorials[n]);\n    }\n\n    /**\n     * Returns the greatest common divisor of <code>a</code> and <code>b</code>\n     * using the <a\n     * href=\"http://en", "entropy": 0.2666015625, "is_bug_line": true, "sus_score": 0.34015, "per_token_entropy": [0.5576171875, 1.5654296875, 0.84521484375, 0.015655517578125, 0.10089111328125, 0.08184814453125, 0.275390625, 0.0002027750015258789, 0.1995849609375, 0.01290130615234375, 0.0226593017578125, 0.059661865234375, 0.2069091796875, 0.005794525146484375, 0.703125, 0.1011962890625, 0.0877685546875, 0.0006203651428222656, 0.47900390625, 0.6015625, 2.322265625, 0.047760009765625, 0.11761474609375, 0.1971435546875, 0.74462890625, 0.034423828125, 0.0021953582763671875, 0.49169921875, 0.022979736328125, 0.0007328987121582031, 0.0159912109375, 0.011627197265625, 0.29248046875, 0.0006275177001953125, 0.0001271963119506836, 0.00824737548828125, 0.0025348663330078125, 0.0006661415100097656, 1.4091796875, 0.0589599609375, 0.0018281936645507812, 0.36083984375, 0.1561279296875, 0.5068359375, 0.046417236328125, 0.828125, 0.00225067138671875, 0.0007734298706054688, 0.03173828125, 0.0033626556396484375, 0.0004134178161621094, 0.223388671875], "tokens": [291, 442, 4175, 32, 751, 26, 9410, 564, 101, 77, 96, 1989, 284, 320, 446, 1022, 275, 319, 3759, 322, 48299, 4942, 33482, 432, 333, 687, 48, 83, 377, 687, 48, 461, 333, 687, 48, 84, 377, 687, 48, 275, 319, 1471, 322, 333, 83, 275, 319, 976, 347, 525, 555, 272]}
{"line_number": 345, "line_type": "original", "code": "        long result = Math.round(factorialDouble(n));", "entropy": 1.7822265625, "is_bug_line": true, "sus_score": 0.3349, "per_token_entropy": [5.1875, 8.359375, 0.87939453125, 0.057464599609375, 3.96875, 0.237060546875, 1.1396484375, 0.037445068359375, 2.8046875, 0.001575469970703125, 1.9052734375, 0.0723876953125, 0.08160400390625, 0.2191162109375], "tokens": [351, 1946, 1056, 280, 4175, 32, 1497, 26, 9410, 564, 4075, 26, 96, 876]}
{"line_number": 345, "line_type": "generated", "code": "\n            throw new IllegalArgumentException(\"must have n >= 0 for n!\");\n        }\n        double result = 0;\n        for (int i = 2; i <= n; ++i) {\n            result += Math.log(i);\n        }\n       ", "entropy": 0.117919921875, "is_bug_line": true, "sus_score": 0.3349, "per_token_entropy": [0.41845703125, 0.06427001953125, 0.0035076141357421875, 0.00930023193359375, 0.08770751953125, 0.05584716796875, 0.002254486083984375, 0.003345489501953125, 0.01027679443359375, 0.0030956268310546875, 0.0011148452758789062, 0.07318115234375, 0.1336669921875, 0.020263671875, 0.1083984375, 0.0009016990661621094, 0.282470703125, 0.9755859375, 0.55615234375, 0.0238037109375, 0.135498046875, 0.003444671630859375, 1.07421875, 0.198974609375, 0.286376953125, 0.06414794921875, 0.033477783203125, 0.10186767578125, 0.00568389892578125, 0.06304931640625, 0.1419677734375, 0.0029277801513671875, 0.003231048583984375, 0.01371002197265625, 0.0017299652099609375, 0.0034694671630859375, 0.54296875, 0.0007691383361816406, 0.0032405853271484375, 0.019805908203125, 0.276611328125, 0.02520751953125, 0.0264739990234375, 0.07159423828125, 0.0035037994384765625, 0.00013625621795654297, 0.0091705322265625, 0.0025157928466796875, 0.004627227783203125, 0.0673828125, 0.00023889541625976562, 0.1116943359375], "tokens": [324, 1422, 537, 12137, 440, 12172, 1159, 310, 2377, 225, 34, 436, 310, 9311, 291, 320, 291, 2064, 1056, 280, 225, 34, 45, 291, 436, 308, 410, 595, 280, 225, 36, 45, 595, 2511, 310, 45, 3311, 91, 27, 301, 324, 1056, 1454, 4175, 32, 751, 26, 91, 293, 291, 320, 291]}
{"line_number": 399, "line_type": "original", "code": "            logSum += Math.log((double)i);", "entropy": 2.796875, "is_bug_line": false, "sus_score": 0.27966, "per_token_entropy": [6.19921875, 11.6015625, 3.62109375, 0.740234375, 1.0771484375, 0.0277099609375, 0.20361328125, 3.037109375, 0.56982421875, 0.0670166015625, 5.91796875, 0.496826171875], "tokens": [1468, 1245, 4934, 1454, 4175, 32, 751, 1162, 2627, 27, 91, 293]}
{"line_number": 399, "line_type": "generated", "code": "\n            // B4/B3: use -t if u is even (t is positive)\n            // B5/B3: use t if v is even (t is positive)\n            // B6/B3: use -t if u", "entropy": 0.2117919921875, "is_bug_line": false, "sus_score": 0.27966, "per_token_entropy": [0.7783203125, 0.50537109375, 0.62060546875, 0.1044921875, 0.01155853271484375, 0.002010345458984375, 0.0662841796875, 0.095458984375, 0.3173828125, 0.7392578125, 0.1275634765625, 0.078125, 0.2042236328125, 0.322509765625, 0.309326171875, 0.1888427734375, 0.5537109375, 0.167724609375, 0.51171875, 0.00441741943359375, 0.25927734375, 0.07489013671875, 0.020782470703125, 0.8212890625, 0.00023984909057617188, 0.0004642009735107422, 0.0183868408203125, 7.522106170654297e-05, 0.0305328369140625, 0.004032135009765625, 0.020782470703125, 0.9453125, 3.4332275390625e-05, 0.1519775390625, 0.0004665851593017578, 4.1484832763671875e-05, 0.0019817352294921875, 0.12646484375, 0.00023818016052246094, 0.07171630859375, 0.6337890625, 0.0670166015625, 0.019775390625, 1.431640625, 0.00010013580322265625, 0.435546875, 0.0009975433349609375, 0.15673828125, 0.009185791015625, 0.0005946159362792969, 0.0005216598510742188, 0.004558563232421875], "tokens": [324, 434, 551, 38, 33, 52, 37, 44, 793, 429, 102, 415, 1044, 438, 4444, 308, 102, 438, 11557, 27, 324, 434, 551, 39, 33, 52, 37, 44, 793, 273, 415, 354, 438, 4444, 308, 102, 438, 11557, 27, 324, 434, 551, 40, 33, 52, 37, 44, 793, 429, 102, 415, 1044]}
{"line_number": 377, "line_type": "original", "code": "        return Math.floor(Math.exp(factorialLog(n)) + 0.5);", "entropy": 2.630859375, "is_bug_line": true, "sus_score": 0.27477, "per_token_entropy": [3.44921875, 7.140625, 5.31640625, 0.2047119140625, 7.6328125, 1.7685546875, 1.9853515625, 0.01343536376953125, 7.68359375, 0.039215087890625, 6.31640625, 0.00048470497131347656, 0.009429931640625, 0.12127685546875, 6.8359375, 4.66796875, 2.51953125, 0.884765625, 1.1201171875, 0.02435302734375, 0.04266357421875, 0.11181640625], "tokens": [351, 442, 4175, 32, 9121, 26, 5717, 32, 2832, 26, 9410, 564, 1335, 26, 96, 490, 474, 225, 34, 32, 39, 293]}
{"line_number": 377, "line_type": "generated", "code": "\n        } else {", "entropy": 0.1156005859375, "is_bug_line": true, "sus_score": 0.27477, "per_token_entropy": [0.339599609375, 0.0054473876953125, 0.1044921875, 0.0129241943359375], "tokens": [291, 320, 813, 301]}
