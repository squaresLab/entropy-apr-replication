{"line_number": 944, "line_type": "original", "code": "                double diff = boundaries[1][i] - boundaries[0][i];", "entropy": 0.74755859375, "is_bug_line": false, "sus_score": 0.29306, "per_token_entropy": [9.015625, 2.48046875, 0.6875, 0.0296478271484375, 0.197509765625, 0.00568389892578125, 0.01342010498046875, 0.003009796142578125, 0.0207977294921875, 0.0022907257080078125, 0.0204010009765625, 0.220703125, 0.0005941390991210938, 0.0004703998565673828, 0.0013723373413085938, 0.00025081634521484375, 0.00846099853515625], "tokens": [2071, 2064, 5839, 280, 28116, 77, 35, 1674, 91, 79, 429, 28116, 77, 34, 1674, 91, 970]}
{"line_number": 944, "line_type": "generated", "code": "\n        /**\n         * @param x Normalized objective variables.\n         * @param repaired Repaired normalized objective variables.\n         * @return the penalty.\n         */\n        public double penalty(final double[] x, final double[] repaired) {\n            double", "entropy": 0.19287109375, "is_bug_line": false, "sus_score": 0.29306, "per_token_entropy": [0.26513671875, 0.1248779296875, 0.0355224609375, 0.0002849102020263672, 0.287353515625, 0.1044921875, 1.1865234375, 0.438232421875, 0.0007853507995605469, 0.042510986328125, 0.0166168212890625, 0.0628662109375, 0.0078277587890625, 0.003978729248046875, 0.0165252685546875, 1.0439453125, 0.73681640625, 0.00039076805114746094, 0.317626953125, 0.018218994140625, 1.2607421875, 0.06439208984375, 0.0171966552734375, 0.1309814453125, 0.0133819580078125, 0.0094757080078125, 0.00862884521484375, 0.00144195556640625, 0.68505859375, 0.323974609375, 1.318359375, 0.0185394287109375, 0.050933837890625, 0.003849029541015625, 0.6240234375, 0.011566162109375, 0.0014696121215820312, 0.0004773139953613281, 0.342529296875, 0.00031113624572753906, 0.0010576248168945312, 0.00638580322265625, 0.0008640289306640625, 0.194580078125, 0.00024044513702392578, 0.0005793571472167969, 0.0010385513305664062, 4.76837158203125e-07, 0.0008754730224609375, 0.0027217864990234375, 0.059539794921875, 0.1624755859375], "tokens": [291, 1022, 276, 319, 477, 753, 816, 13574, 1191, 25110, 4886, 32, 276, 319, 477, 753, 316, 41376, 902, 41376, 17666, 25110, 4886, 32, 276, 319, 477, 601, 322, 35806, 32, 276, 569, 291, 562, 2064, 35806, 26, 3220, 2064, 1178, 816, 30, 1158, 2064, 1178, 316, 41376, 27, 301, 324, 2064]}
{"line_number": 958, "line_type": "original", "code": "                value = CMAESOptimizer.this", "entropy": 1.263671875, "is_bug_line": false, "sus_score": 0.27848, "per_token_entropy": [4.96484375, 3.388671875, 2.11328125, 0.8759765625, 0.00015807151794433594, 0.000247955322265625, 0.0034732818603515625, 0.022674560546875, 0.004619598388671875], "tokens": [2071, 786, 280, 390, 1400, 940, 29248, 32, 578]}
{"line_number": 958, "line_type": "generated", "code": "\n            }\n            return repaired;\n        }\n\n        /**\n         * @param x Normalized objective variables.\n         * @param repaired Repaired objective variables.\n         * @return the penalty for violated bounds.\n         */\n        private double penalty(final double", "entropy": 0.16357421875, "is_bug_line": false, "sus_score": 0.27848, "per_token_entropy": [0.75244140625, 0.035247802734375, 0.060394287109375, 0.00952911376953125, 0.004627227783203125, 2.0265579223632812e-06, 0.0015687942504882812, 0.0498046875, 0.0004596710205078125, 0.241943359375, 0.043975830078125, 0.0122222900390625, 0.00020992755889892578, 0.188720703125, 0.023284912109375, 0.7001953125, 0.38330078125, 0.0005292892456054688, 0.029937744140625, 0.0070648193359375, 0.031768798828125, 0.001949310302734375, 0.001216888427734375, 0.0005092620849609375, 0.18798828125, 0.66748046875, 0.0004477500915527344, 0.204345703125, 0.0047454833984375, 0.86376953125, 0.032012939453125, 0.427001953125, 0.018402099609375, 0.007266998291015625, 0.004486083984375, 0.0019741058349609375, 0.340576171875, 0.279052734375, 1.033203125, 1.392578125, 0.0010499954223632812, 0.09893798828125, 0.1405029296875, 0.0159149169921875, 0.0158233642578125, 0.003963470458984375, 0.0694580078125, 0.01263427734375, 0.001316070556640625, 0.00021839141845703125, 0.104736328125, 0.0001888275146484375], "tokens": [324, 320, 324, 442, 316, 41376, 45, 291, 320, 584, 1022, 276, 319, 477, 753, 816, 13574, 1191, 25110, 4886, 32, 276, 319, 477, 753, 316, 41376, 902, 41376, 25110, 4886, 32, 276, 319, 477, 601, 322, 35806, 436, 8943, 23723, 11615, 32, 276, 569, 291, 945, 2064, 35806, 26, 3220, 2064]}
{"line_number": 943, "line_type": "original", "code": "            for (int i = 0; i < x.length; i++) {", "entropy": 0.59326171875, "is_bug_line": false, "sus_score": 0.27809, "per_token_entropy": [6.2734375, 3.802734375, 0.00908660888671875, 0.030609130859375, 0.0655517578125, 0.0038909912109375, 0.00740814208984375, 0.0037021636962890625, 0.004032135009765625, 0.0011806488037109375, 0.005096435546875, 0.410888671875, 0.020233154296875, 0.000614166259765625, 0.0037555694580078125, 0.0070037841796875, 0.00359344482421875, 0.024139404296875], "tokens": [1468, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 816, 32, 1322, 45, 595, 1987, 301]}
{"line_number": 943, "line_type": "generated", "code": "\n        /**\n         * @param point Normalized objective variables.\n         * @param repaired Repaired normalized objective variables.\n         * @return the penalty for violated bounds.\n         */\n        private double penalty(double[] point, double[] repaired) {", "entropy": 0.2081298828125, "is_bug_line": false, "sus_score": 0.27809, "per_token_entropy": [0.708984375, 0.0965576171875, 0.042022705078125, 0.00029540061950683594, 0.1591796875, 0.17919921875, 1.8466796875, 0.8916015625, 0.00103759765625, 0.045654296875, 0.017120361328125, 0.08245849609375, 0.0028171539306640625, 0.00316619873046875, 0.016510009765625, 0.106689453125, 0.1527099609375, 0.0002371072769165039, 0.2431640625, 0.01690673828125, 1.138671875, 0.044677734375, 0.0167388916015625, 0.10528564453125, 0.009246826171875, 0.01024627685546875, 0.00724029541015625, 0.0014524459838867188, 0.53955078125, 0.255126953125, 0.634765625, 1.1220703125, 0.0005712509155273438, 0.08612060546875, 0.1270751953125, 0.0218658447265625, 0.0233612060546875, 0.00630950927734375, 0.8759765625, 0.00965118408203125, 0.0006699562072753906, 0.00042247772216796875, 1.099609375, 0.0041351318359375, 0.0037059783935546875, 0.0008625984191894531, 0.053741455078125, 0.00106048583984375, 0.0007843971252441406, 8.344650268554688e-07, 0.0016002655029296875, 0.0028781890869140625], "tokens": [291, 1022, 276, 319, 477, 753, 2260, 13574, 1191, 25110, 4886, 32, 276, 319, 477, 753, 316, 41376, 902, 41376, 17666, 25110, 4886, 32, 276, 319, 477, 601, 322, 35806, 436, 8943, 23723, 11615, 32, 276, 569, 291, 945, 2064, 35806, 26, 2627, 1178, 2260, 30, 2064, 1178, 316, 41376, 27, 301]}
{"line_number": 570, "line_type": "original", "code": "            lambda = 4 + (int) (3. * Math.log(dimension));", "entropy": 1.16015625, "is_bug_line": false, "sus_score": 0.2734, "per_token_entropy": [4.84375, 5.76171875, 0.84765625, 1.947265625, 1.833984375, 0.0439453125, 1.578125, 0.44677734375, 0.10595703125, 0.48583984375, 0.0176849365234375, 3.64453125, 0.060577392578125, 0.150146484375, 0.00418853759765625, 0.11773681640625, 0.0018177032470703125, 0.078125, 0.0704345703125], "tokens": [1468, 9254, 280, 225, 38, 474, 308, 410, 27, 308, 37, 32, 319, 4175, 32, 751, 26, 11694, 876]}
{"line_number": 570, "line_type": "generated", "code": "\n        // initialize dynamic (internal) strategy parameters and constants\n        chiN = Math.sqrt(dimension) *\n                (1. - 1. / (4. * dimension) + 1 / (21. * dimension * dimension));\n        chi", "entropy": 0.21484375, "is_bug_line": false, "sus_score": 0.2734, "per_token_entropy": [0.5244140625, 1.1259765625, 1.251953125, 1.0576171875, 0.5361328125, 0.006206512451171875, 0.04241943359375, 0.41552734375, 0.111083984375, 0.1748046875, 0.0011453628540039062, 0.1815185546875, 2.1171875, 0.94091796875, 0.199462890625, 0.08892822265625, 0.0012807846069335938, 0.017181396484375, 0.00511932373046875, 0.0295257568359375, 0.00919342041015625, 0.00400543212890625, 0.430419921875, 0.0014448165893554688, 0.0014963150024414062, 0.09466552734375, 0.00849151611328125, 0.0042877197265625, 0.00021088123321533203, 0.00530242919921875, 0.001262664794921875, 0.0004303455352783203, 0.0005869865417480469, 0.01332855224609375, 0.001209259033203125, 0.0023670196533203125, 0.0006866455078125, 0.003971099853515625, 0.019073486328125, 0.00016427040100097656, 0.03814697265625, 0.004070281982421875, 0.0007848739624023438, 0.00022840499877929688, 0.005535125732421875, 0.0012664794921875, 0.0025043487548828125, 0.0017442703247070312, 0.01531219482421875, 0.0026569366455078125, 0.262939453125, 1.4072265625], "tokens": [291, 434, 7379, 7094, 308, 3259, 27, 13689, 3377, 461, 12388, 291, 25549, 64, 280, 4175, 32, 8663, 26, 11694, 27, 319, 400, 308, 35, 32, 429, 225, 35, 32, 517, 308, 38, 32, 319, 8742, 27, 474, 225, 35, 517, 308, 36, 35, 32, 319, 8742, 319, 8742, 876, 291, 25549]}
