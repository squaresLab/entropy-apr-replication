{"line_number": 349, "line_type": "original", "code": "              coefficients[i] = 0;", "entropy": 3.001953125, "is_bug_line": false, "sus_score": 0.3431, "per_token_entropy": [9.9453125, 11.6875, 0.26123046875, 0.05596923828125, 0.0087890625, 0.0219879150390625, 4.19921875, 0.274169921875, 0.55712890625], "tokens": [2850, 26370, 77, 91, 79, 280, 225, 34, 45]}
{"line_number": 349, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Get the height of the tableau.\n     * @return height of the tableau\n     */\n    protected final int getHeight() {\n        return tableau.getRowDimension();", "entropy": 0.019287109375, "is_bug_line": false, "sus_score": 0.3431, "per_token_entropy": [0.162109375, 0.058135986328125, 0.09478759765625, 0.007720947265625, 0.0055084228515625, 1.3232231140136719e-05, 0.05596923828125, 0.00603485107421875, 0.153076171875, 0.004268646240234375, 0.002712249755859375, 0.0030727386474609375, 0.00016438961029052734, 0.0294342041015625, 0.00258636474609375, 2.5510787963867188e-05, 0.024688720703125, 0.00018739700317382812, 0.07513427734375, 0.00312042236328125, 0.003177642822265625, 0.0022029876708984375, 0.00010263919830322266, 0.0067596435546875, 0.0008263587951660156, 0.004909515380859375, 0.01227569580078125, 0.026824951171875, 0.0004355907440185547, 0.00021195411682128906, 0.0001266002655029297, 0.0004210472106933594, 0.0003719329833984375, 0.029632568359375, 0.0016717910766601562, 0.0029430389404296875, 2.384185791015625e-07, 4.124641418457031e-05, 9.274482727050781e-05, 1.0728836059570312e-06, 0.00890350341796875], "tokens": [284, 320, 446, 1022, 275, 319, 1390, 322, 2384, 432, 322, 1858, 4452, 32, 275, 319, 477, 601, 2384, 432, 322, 1858, 4452, 275, 569, 284, 2522, 1158, 629, 622, 3024, 346, 301, 291, 442, 1858, 4452, 32, 30093, 9883, 473]}
{"line_number": 345, "line_type": "original", "code": "          Integer basicRow = getBasicRow(getNumObjectiveFunctions() + i);", "entropy": 2.30078125, "is_bug_line": true, "sus_score": 0.32403, "per_token_entropy": [7.765625, 9.65625, 6.77734375, 0.29248046875, 0.10791015625, 0.2276611328125, 0.01152801513671875, 0.002246856689453125, 0.0185546875, 7.62890625, 0.6689453125, 0.0012102127075195312, 1.720703125, 0.283935546875, 1.59375, 0.063720703125], "tokens": [2033, 4401, 6550, 2352, 280, 622, 7099, 2352, 26, 15207, 33312, 10905, 346, 474, 595, 293]}
{"line_number": 345, "line_type": "generated", "code": "\n     * @return the width of the tableau\n     */\n    protected int getWidth() {\n        return tableau.getColumnDimension() - 1;\n    }\n\n    /**\n     * Get the height of the tableau.", "entropy": 0.1597900390625, "is_bug_line": true, "sus_score": 0.32403, "per_token_entropy": [0.245361328125, 0.0288848876953125, 0.619140625, 0.0017347335815429688, 1.0126953125, 0.0841064453125, 0.281494140625, 0.01512908935546875, 0.0233306884765625, 0.0003502368927001953, 0.2626953125, 0.0290374755859375, 0.020965576171875, 0.45751953125, 0.022613525390625, 0.0025482177734375, 0.0129852294921875, 0.002681732177734375, 0.00262451171875, 0.2095947265625, 0.046234130859375, 0.865234375, 3.0994415283203125e-06, 0.004871368408203125, 0.00743865966796875, 0.0006852149963378906, 0.67822265625, 0.60498046875, 0.9267578125, 0.0282135009765625, 0.10302734375, 0.1434326171875, 0.0005016326904296875, 0.10540771484375, 0.010986328125, 0.0182952880859375, 2.276897430419922e-05, 0.06927490234375, 0.00649261474609375, 0.1712646484375, 0.005550384521484375, 0.0027923583984375, 0.004364013671875, 0.0001621246337890625, 0.050933837890625], "tokens": [275, 319, 477, 601, 322, 1861, 432, 322, 1858, 4452, 275, 569, 284, 2522, 629, 622, 2611, 346, 301, 291, 442, 1858, 4452, 32, 19239, 9883, 346, 429, 225, 35, 45, 284, 320, 446, 1022, 275, 319, 1390, 322, 2384, 432, 322, 1858, 4452, 32]}
{"line_number": 344, "line_type": "original", "code": "      for (int i = 0; i < coefficients.length; i++) {", "entropy": 0.93505859375, "is_bug_line": false, "sus_score": 0.31856, "per_token_entropy": [3.4765625, 4.69140625, 0.0135498046875, 0.0650634765625, 0.477783203125, 0.01174163818359375, 0.403076171875, 0.063232421875, 0.0262298583984375, 0.0026760101318359375, 0.028656005859375, 7.22265625, 0.07012939453125, 0.012603759765625, 0.09075927734375, 0.0968017578125, 0.0092620849609375, 0.06829833984375], "tokens": [647, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 26370, 32, 1322, 45, 595, 1987, 301]}
{"line_number": 344, "line_type": "generated", "code": "\n     * Checks if the given row is a basic feasible solution.\n     * @param row row index\n     * @return {@code true} if the row is a basic feasible solution\n     */\n    protected boolean isBasicFeasibleSolution(final int row", "entropy": 0.34521484375, "is_bug_line": false, "sus_score": 0.31856, "per_token_entropy": [0.9619140625, 0.1524658203125, 3.576171875, 0.84228515625, 0.65087890625, 1.849609375, 1.2578125, 0.52783203125, 0.9873046875, 0.16796875, 0.1915283203125, 0.0020427703857421875, 0.10205078125, 0.5615234375, 0.1522216796875, 0.003025054931640625, 0.9560546875, 0.027740478515625, 0.299072265625, 0.60009765625, 0.392822265625, 0.1334228515625, 0.010528564453125, 0.00205230712890625, 0.172607421875, 0.257080078125, 0.0213470458984375, 0.0119476318359375, 0.0078277587890625, 0.0438232421875, 0.250244140625, 0.453369140625, 0.50732421875, 0.11273193359375, 0.0305328369140625, 0.0262451171875, 0.0006165504455566406, 0.020355224609375, 0.39111328125, 0.069091796875, 0.04400634765625, 0.189453125, 0.01446533203125, 0.062042236328125, 0.1663818359375, 0.0166473388671875, 0.00022017955780029297, 0.46142578125, 0.12017822265625, 0.0777587890625, 0.009521484375, 0.001750946044921875], "tokens": [275, 319, 17279, 415, 322, 2702, 2698, 438, 312, 6550, 5246, 38294, 5295, 32, 275, 319, 477, 753, 2698, 2698, 1650, 275, 319, 477, 601, 3088, 687, 861, 111, 415, 322, 2698, 438, 312, 6550, 5246, 38294, 5295, 275, 569, 284, 2522, 1905, 438, 7099, 9008, 38294, 13628, 26, 3220, 629, 2698]}
{"line_number": 297, "line_type": "original", "code": "                return null;", "entropy": 2.234375, "is_bug_line": false, "sus_score": 0.3005, "per_token_entropy": [4.8359375, 3.951171875, 0.13916015625, 0.00873565673828125], "tokens": [2071, 442, 744, 45]}
{"line_number": 297, "line_type": "generated", "code": "\n          }\n          basicRows.add(basicRow);\n          coefficients[i] = getEntry(basicRow, getRhsOffset());\n          if (basicRow!= null) {\n              coefficients[i] -= getEntry(basicRow, getNumObjectiveFunctions", "entropy": 0.2369384765625, "is_bug_line": false, "sus_score": 0.3005, "per_token_entropy": [1.1455078125, 0.00421142578125, 0.82763671875, 1.333984375, 0.0010728836059570312, 0.0006661415100097656, 0.02252197265625, 0.0006880760192871094, 0.0060577392578125, 0.0001575946807861328, 0.0030803680419921875, 0.251220703125, 0.7421875, 0.000545501708984375, 0.037994384765625, 0.002887725830078125, 0.00629425048828125, 1.2333984375, 0.1201171875, 0.0139312744140625, 0.0309295654296875, 0.0017213821411132812, 0.01213836669921875, 0.139404296875, 0.1494140625, 1.1920928955078125e-06, 9.608268737792969e-05, 1.2421875, 0.84423828125, 0.296630859375, 0.1019287109375, 0.7109375, 0.01043701171875, 0.68994140625, 0.035064697265625, 0.2255859375, 0.00545501708984375, 0.249755859375, 0.63330078125, 0.00013506412506103516, 0.0024852752685546875, 0.000759124755859375, 0.151611328125, 0.250244140625, 0.1697998046875, 0.0011081695556640625, 0.0262603759765625, 0.0007104873657226562, 0.0016202926635742188, 0.57958984375, 0.005771636962890625, 0.000232696533203125], "tokens": [616, 320, 616, 6550, 7252, 32, 669, 26, 6390, 2352, 293, 616, 26370, 77, 91, 79, 280, 622, 2711, 26, 6390, 2352, 30, 622, 68, 3914, 3457, 1035, 616, 415, 308, 6390, 2352, 863, 744, 27, 301, 1090, 26370, 77, 91, 79, 5912, 622, 2711, 26, 6390, 2352, 30, 44929, 33312, 10905]}
{"line_number": 351, "line_type": "original", "code": "              basicRows.add(basicRow);", "entropy": 2.4765625, "is_bug_line": false, "sus_score": 0.28457, "per_token_entropy": [11.0703125, 11.0, 0.048919677734375, 0.01279449462890625, 0.026824951171875, 0.002483367919921875, 0.13427734375, 0.0003528594970703125, 0.007091522216796875], "tokens": [2850, 6550, 7252, 32, 669, 26, 6390, 2352, 293]}
{"line_number": 351, "line_type": "generated", "code": "    /**\n     * Get the height of the tableau.\n     * @return height of the tableau\n     */\n    protected final int getHeight() {\n        return tableau.getRowDimension();\n    }\n\n    /**\n     * Get the number of objective functions.", "entropy": 0.1651611328125, "is_bug_line": false, "sus_score": 0.28457, "per_token_entropy": [2.0078125, 0.11749267578125, 0.0589599609375, 0.0014619827270507812, 0.1978759765625, 0.01447296142578125, 0.255859375, 0.00466156005859375, 0.0029468536376953125, 0.00487518310546875, 0.00022780895233154297, 0.038482666015625, 0.005374908447265625, 0.0007023811340332031, 0.03533935546875, 0.0004296302795410156, 0.084228515625, 0.0029735565185546875, 0.003017425537109375, 0.0018987655639648438, 7.319450378417969e-05, 0.00669097900390625, 0.0012826919555664062, 0.03802490234375, 0.0330810546875, 0.049346923828125, 0.0003001689910888672, 0.00023114681243896484, 0.0002143383026123047, 0.0006198883056640625, 0.0019931793212890625, 0.0245513916015625, 0.0019207000732421875, 0.006397247314453125, 3.5762786865234375e-07, 5.1975250244140625e-05, 7.724761962890625e-05, 9.5367431640625e-07, 0.00926971435546875, 0.031341552734375, 0.00018322467803955078, 0.4404296875, 0.0293121337890625, 0.0081024169921875, 6.0439109802246094e-05, 0.59619140625, 0.5126953125, 1.865234375, 0.00335693359375, 1.74609375, 0.035614013671875, 0.304443359375], "tokens": [264, 1022, 275, 319, 1390, 322, 2384, 432, 322, 1858, 4452, 32, 275, 319, 477, 601, 2384, 432, 322, 1858, 4452, 275, 569, 284, 2522, 1158, 629, 622, 3024, 346, 301, 291, 442, 1858, 4452, 32, 30093, 9883, 473, 284, 320, 446, 1022, 275, 319, 1390, 322, 1451, 432, 25110, 4442, 32]}
