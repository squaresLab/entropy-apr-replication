{"line_number": 278, "line_type": "original", "code": "            return createComplex((imaginary * q + real) / denominator,", "entropy": 2.6328125, "is_bug_line": false, "sus_score": 0.61567, "per_token_entropy": [4.484375, 0.311767578125, 11.625, 0.37451171875, 4.23828125, 5.921875, 0.0015535354614257812, 2.787109375, 8.234375, 1.255859375, 0.023834228515625, 0.06298828125, 0.019744873046875, 0.052947998046875, 0.09136962890625], "tokens": [1468, 442, 1487, 12267, 1162, 17792, 3172, 319, 2678, 474, 4011, 27, 517, 39920, 30]}
{"line_number": 278, "line_type": "generated", "code": "\n            return (c.real == real) && (c.imaginary == imaginary);\n        }\n        return false;\n    }\n\n    /**\n     * Get a hashCode for the complex number.\n     * Any {@code NaN} value in real or imaginary", "entropy": 0.1475830078125, "is_bug_line": false, "sus_score": 0.61567, "per_token_entropy": [0.34619140625, 0.312255859375, 0.6845703125, 1.5068359375, 0.0018444061279296875, 0.2822265625, 0.0241546630859375, 0.07794189453125, 0.2314453125, 0.060943603515625, 0.46923828125, 0.0033721923828125, 5.459785461425781e-05, 0.00341796875, 0.005695343017578125, 0.013031005859375, 0.0011167526245117188, 4.9233436584472656e-05, 0.0205535888671875, 0.08123779296875, 0.0020599365234375, 0.0986328125, 0.01015472412109375, 0.0028743743896484375, 0.00024127960205078125, 0.0270843505859375, 0.0020618438720703125, 0.08831787109375, 0.04425048828125, 0.01508331298828125, 5.829334259033203e-05, 1.0146484375, 0.09307861328125, 0.051727294921875, 0.00011622905731201172, 0.1484375, 0.0460205078125, 0.03265380859375, 0.03851318359375, 0.0845947265625, 0.00037932395935058594, 0.238525390625, 0.8271484375, 0.001552581787109375, 0.51123046875, 0.022003173828125, 0.07794189453125, 0.050628662109375, 0.00439453125, 0.01285552978515625, 0.0001665353775024414, 1.5497207641601562e-06], "tokens": [324, 442, 308, 85, 32, 4543, 610, 4011, 27, 962, 308, 85, 32, 17792, 3172, 610, 17463, 3172, 293, 291, 320, 291, 442, 901, 45, 284, 320, 446, 1022, 275, 319, 1390, 312, 17772, 436, 322, 8640, 1451, 32, 275, 319, 6204, 3088, 687, 21644, 111, 786, 328, 4011, 556, 17463, 3172]}
{"line_number": 267, "line_type": "original", "code": "        final double c = divisor.getReal();", "entropy": 2.1875, "is_bug_line": false, "sus_score": 0.53848, "per_token_entropy": [2.79296875, 6.65625, 1.013671875, 5.45703125, 0.67724609375, 4.15625, 0.007205963134765625, 0.04962158203125, 1.0029296875, 0.061492919921875], "tokens": [351, 1158, 2064, 281, 280, 33482, 32, 371, 6877, 473]}
{"line_number": 267, "line_type": "generated", "code": "\n     * @return {@code true} if two Complex objects are equal, {@code false}\n     * otherwise\n     */\n    @Override\n    public boolean equals(Object other) {\n        if (this == other) {\n            return true;\n        }\n        if", "entropy": 0.10675048828125, "is_bug_line": false, "sus_score": 0.53848, "per_token_entropy": [0.509765625, 0.1158447265625, 0.0214080810546875, 0.004764556884765625, 0.272705078125, 0.0007119178771972656, 0.0006589889526367188, 0.00018918514251708984, 0.020538330078125, 0.6181640625, 0.0172119140625, 0.02886962890625, 0.0260772705078125, 0.0066375732421875, 0.05670166015625, 0.693359375, 0.000518798828125, 0.0021152496337890625, 8.416175842285156e-05, 0.2447509765625, 0.0004906654357910156, 1.251953125, 0.1514892578125, 0.1064453125, 0.01268768310546875, 0.68310546875, 0.0007543563842773438, 0.008514404296875, 0.003997802734375, 0.0024127960205078125, 0.00014674663543701172, 0.0062255859375, 0.040283203125, 0.001007080078125, 0.01056671142578125, 0.00519561767578125, 0.1385498046875, 0.0281982421875, 0.01556396484375, 0.0941162109375, 0.00554656982421875, 0.00019419193267822266, 0.015899658203125, 0.0045623779296875, 0.01444244384765625, 0.0140380859375, 0.0007791519165039062, 0.0002772808074951172, 0.0020751953125, 0.00027632713317871094, 0.283447265625, 0.0066375732421875], "tokens": [275, 319, 477, 601, 3088, 687, 861, 111, 415, 3134, 19915, 4684, 884, 5040, 30, 3088, 687, 901, 111, 275, 319, 5878, 275, 569, 284, 477, 1788, 284, 562, 1905, 12423, 26, 959, 1604, 27, 301, 291, 415, 308, 578, 610, 1604, 27, 301, 324, 442, 861, 45, 291, 320, 291, 415]}
{"line_number": 583, "line_type": "original", "code": "        if (isNaN) {", "entropy": 0.9609375, "is_bug_line": false, "sus_score": 0.44947, "per_token_entropy": [2.88671875, 2.25390625, 0.08160400390625, 0.2484130859375, 0.267822265625, 0.027069091796875], "tokens": [351, 415, 308, 26821, 27, 301]}
{"line_number": 583, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.44947, "per_token_entropy": [], "tokens": []}
{"line_number": 277, "line_type": "original", "code": "            double denominator = d * q + c;", "entropy": 3.12890625, "is_bug_line": false, "sus_score": 0.44202, "per_token_entropy": [4.5625, 4.3203125, 12.28125, 0.06591796875, 3.650390625, 1.5849609375, 4.36328125, 0.044097900390625, 0.32080078125, 0.0909423828125], "tokens": [1468, 2064, 39920, 280, 343, 319, 2678, 474, 281, 45]}
{"line_number": 277, "line_type": "generated", "code": "\n            if (Double.doubleToLongBits(real)!=\n                Double.doubleToLongBits(other.getReal())) {\n                return false;\n            }\n            if (Double.doubleToLongBits(imaginary)!=\n                Double.doubleTo", "entropy": 0.18896484375, "is_bug_line": false, "sus_score": 0.44202, "per_token_entropy": [0.292236328125, 1.8525390625, 0.2403564453125, 2.337890625, 0.00029778480529785156, 0.107421875, 5.412101745605469e-05, 0.061279296875, 0.00014460086822509766, 0.036407470703125, 0.2578125, 0.04290771484375, 0.8203125, 1.041015625, 0.002124786376953125, 7.557868957519531e-05, 2.9206275939941406e-05, 2.7418136596679688e-06, 0.000148773193359375, 1.7642974853515625e-05, 0.68603515625, 0.496826171875, 0.01201629638671875, 0.935546875, 0.0011758804321289062, 0.344970703125, 0.045135498046875, 0.0528564453125, 0.0015277862548828125, 0.0004286766052246094, 0.0005211830139160156, 0.00505828857421875, 0.0005011558532714844, 0.0538330078125, 0.06695556640625, 0.006206512451171875, 0.00164031982421875, 2.276897430419922e-05, 2.1338462829589844e-05, 1.239776611328125e-05, 0.0001291036605834961, 1.1444091796875e-05, 0.000606536865234375, 0.00518035888671875, 0.00029921531677246094, 0.00341796875, 0.0020599365234375, 0.00860595703125, 0.0017061233520507812, 3.0159950256347656e-05, 4.1484832763671875e-05, 1.7881393432617188e-06], "tokens": [324, 415, 308, 4075, 32, 2627, 705, 3952, 8733, 26, 4543, 27, 863, 400, 6934, 32, 2627, 705, 3952, 8733, 26, 2455, 32, 371, 6877, 5156, 301, 400, 442, 901, 45, 324, 320, 324, 415, 308, 4075, 32, 2627, 705, 3952, 8733, 26, 17792, 3172, 27, 863, 400, 6934, 32, 2627, 705]}
{"line_number": 425, "line_type": "original", "code": "        if (Double.isInfinite(real) ||", "entropy": 0.8955078125, "is_bug_line": false, "sus_score": 0.43573, "per_token_entropy": [3.24609375, 0.7490234375, 0.1475830078125, 3.451171875, 0.00023293495178222656, 1.205078125, 0.00019633769989013672, 0.0036678314208984375, 0.8349609375, 0.09515380859375, 0.121337890625], "tokens": [351, 415, 308, 4075, 32, 28823, 11949, 26, 4543, 27, 1276]}
{"line_number": 425, "line_type": "generated", "code": "\n     * Returns {@code NaN} if either {@code this} or {@code subtrahend} has one\n     * or more {@code NaN} parts.\n     * <br/>\n     * Returns {@link #INF} if neither {@code this}", "entropy": 0.0892333984375, "is_bug_line": false, "sus_score": 0.43573, "per_token_entropy": [0.319580078125, 0.0173187255859375, 0.8271484375, 0.007350921630859375, 0.1722412109375, 0.0008096694946289062, 6.115436553955078e-05, 0.0167388916015625, 0.0814208984375, 0.63330078125, 0.0002562999725341797, 0.028076171875, 0.0006833076477050781, 0.27099609375, 0.07720947265625, 7.271766662597656e-06, 0.004119873046875, 0.00028586387634277344, 1.4424324035644531e-05, 8.749961853027344e-05, 0.0001575946807861328, 0.053924560546875, 0.51513671875, 0.318359375, 1.5854835510253906e-05, 0.00028061866760253906, 0.00039887428283691406, 0.08123779296875, 0.001911163330078125, 0.0007958412170410156, 0.0001615285873413086, 0.0092315673828125, 0.474365234375, 0.1024169921875, 0.0003676414489746094, 0.17822265625, 0.02813720703125, 0.00919342041015625, 0.0017261505126953125, 6.210803985595703e-05, 0.0101165771484375, 0.327392578125, 0.0352783203125, 0.0014934539794921875, 0.01537322998046875, 0.00013005733489990234, 0.0064849853515625, 0.0013742446899414062, 0.0022068023681640625, 2.4318695068359375e-05, 0.00708770751953125, 0.0002079010009765625], "tokens": [275, 319, 3759, 3088, 687, 21644, 111, 415, 3154, 3088, 687, 458, 111, 556, 3088, 687, 1361, 359, 2371, 416, 111, 1401, 1591, 275, 319, 556, 1829, 3088, 687, 21644, 111, 8710, 32, 275, 319, 333, 839, 2039, 275, 319, 3759, 3088, 1204, 588, 10192, 111, 415, 25209, 3088, 687, 458, 111]}
