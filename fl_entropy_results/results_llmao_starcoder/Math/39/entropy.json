{"line_number": 267, "line_type": "original", "code": "        for (int j = 0; j < y0.length; ++j) {", "entropy": 0.52490234375, "is_bug_line": false, "sus_score": 0.40199, "per_token_entropy": [5.03515625, 3.384765625, 0.0153961181640625, 0.73193359375, 0.873046875, 0.0007491111755371094, 0.006305694580078125, 0.0029277801513671875, 0.0012950897216796875, 0.003063201904296875, 0.001712799072265625, 0.237548828125, 0.170654296875, 0.003444671630859375, 2.372264862060547e-05, 0.001506805419921875, 0.002483367919921875, 7.998943328857422e-05, 0.0015592575073242188, 0.0230560302734375], "tokens": [351, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 533, 34, 32, 1322, 45, 3311, 92, 27, 301]}
{"line_number": 267, "line_type": "generated", "code": "\n          // check if the stepsize was reduced too much in the stepsize filter\n          if (filteredNextIsLast || (hNew < 1.0e-10 * FastMath.abs(t))) {\n              hNew = t - step", "entropy": 0.630859375, "is_bug_line": false, "sus_score": 0.40199, "per_token_entropy": [0.9580078125, 1.6123046875, 2.6875, 0.81689453125, 0.97314453125, 0.478271484375, 1.4765625, 1.85546875, 1.8095703125, 0.43212890625, 0.054443359375, 0.5, 0.291015625, 1.302734375, 1.24609375, 0.73779296875, 0.1966552734375, 0.397216796875, 0.306640625, 0.7470703125, 0.0006570816040039062, 0.00946807861328125, 4.363059997558594e-05, 1.0859375, 0.904296875, 1.7236328125, 0.01202392578125, 0.84228515625, 1.19921875, 0.9755859375, 0.4833984375, 0.452880859375, 0.037261962890625, 0.0005159378051757812, 0.1361083984375, 1.8515625, 0.02020263671875, 0.401611328125, 8.225440979003906e-06, 0.0001271963119506836, 0.01021575927734375, 0.0005784034729003906, 0.4384765625, 0.16650390625, 0.0163421630859375, 0.49267578125, 1.9482421875, 0.0061492919921875, 0.036346435546875, 0.65966796875, 0.003566741943359375, 0.0132598876953125], "tokens": [616, 434, 1505, 415, 322, 3111, 891, 1597, 22974, 5133, 5610, 328, 322, 3111, 891, 2761, 616, 415, 308, 15688, 3353, 1622, 3267, 1276, 308, 90, 1812, 333, 225, 35, 32, 34, 87, 31, 35, 34, 319, 15938, 5717, 32, 3596, 26, 102, 2610, 301, 1090, 420, 1812, 280, 273, 429, 3111]}
{"line_number": 261, "line_type": "original", "code": "", "entropy": 4.23828125, "is_bug_line": false, "sus_score": 0.38701, "per_token_entropy": [4.23828125], "tokens": [203]}
{"line_number": 261, "line_type": "generated", "code": "\n\n          // check if the stepsize control allowed for sufficient progress\n          if (FastMath.abs(nextT - t) <= scaledMinStep) {\n              // the stepsize control failed to find a suitable step\n              throw new DerivativeException(Localized", "entropy": 0.79150390625, "is_bug_line": false, "sus_score": 0.38701, "per_token_entropy": [1.2490234375, 0.6005859375, 2.328125, 0.62451171875, 0.95703125, 0.6474609375, 1.375, 1.125, 4.60546875, 1.314453125, 1.6982421875, 1.470703125, 0.393310546875, 0.61328125, 0.347412109375, 2.1171875, 0.00014853477478027344, 4.935264587402344e-05, 0.045806884765625, 0.08624267578125, 1.7236328125, 0.0014781951904296875, 0.0068359375, 0.08978271484375, 0.0098876953125, 0.77587890625, 1.3251953125, 0.429443359375, 0.0013723373413085938, 0.0992431640625, 0.0041656494140625, 0.458740234375, 0.9658203125, 1.6025390625, 0.69970703125, 0.1925048828125, 0.1561279296875, 1.806640625, 0.775390625, 2.02734375, 0.307861328125, 1.470703125, 0.02752685546875, 1.0751953125, 1.5224609375, 0.382568359375, 0.720703125, 0.051361083984375, 0.0023326873779296875, 0.006175994873046875, 0.06219482421875, 0.7900390625], "tokens": [5678, 434, 1505, 415, 322, 3111, 891, 3498, 6660, 436, 21702, 6538, 616, 415, 308, 12200, 5717, 32, 3596, 26, 1978, 70, 429, 273, 27, 2511, 23205, 2928, 3533, 27, 301, 1090, 434, 322, 3111, 891, 3498, 3803, 372, 2290, 312, 19655, 3111, 1090, 1422, 537, 15944, 387, 1353, 984, 26, 24225]}
{"line_number": 244, "line_type": "original", "code": "          hNew = initializeStep(forward, getOrder(), scale,", "entropy": 2.71875, "is_bug_line": false, "sus_score": 0.34759, "per_token_entropy": [4.6796875, 3.46875, 0.12115478515625, 0.15576171875, 7.54296875, 0.01556396484375, 0.0157928466796875, 2.703125, 0.07672119140625, 7.46484375, 4.640625, 0.27978515625, 5.95703125, 0.93603515625], "tokens": [2033, 420, 1812, 280, 7379, 3533, 26, 7543, 30, 622, 2871, 1026, 5247, 30]}
{"line_number": 244, "line_type": "generated", "code": "\n      if (isLastStep) {\n        interpolator.storeTime(t);\n      }\n\n    } while (!isLastStep);\n\n    // set the state to the end of the integration\n    equations.setTime(t);\n    equations.setCompleteState(", "entropy": 0.39208984375, "is_bug_line": false, "sus_score": 0.34759, "per_token_entropy": [1.0419921875, 1.7021484375, 0.22509765625, 2.322265625, 0.20458984375, 0.09942626953125, 0.16015625, 0.038726806640625, 0.429443359375, 2.263671875, 0.00021266937255859375, 0.007457733154296875, 0.384521484375, 0.0225982666015625, 0.001003265380859375, 0.383056640625, 0.01172637939453125, 0.465087890625, 0.002315521240234375, 1.048828125, 0.01114654541015625, 0.0291900634765625, 0.2509765625, 0.0216827392578125, 0.0011615753173828125, 0.00025200843811035156, 0.1019287109375, 0.29833984375, 0.83447265625, 1.8583984375, 0.10272216796875, 0.341064453125, 0.568359375, 0.447998046875, 0.1356201171875, 0.2216796875, 0.0045013427734375, 0.396728515625, 0.417724609375, 0.5556640625, 0.002803802490234375, 0.923828125, 0.0017385482788085938, 1.3603515625, 0.003002166748046875, 0.19091796875, 0.3740234375, 0.001644134521484375, 0.11328125, 0.0018815994262695312, 0.0014619827270507812, 0.0003380775451660156], "tokens": [397, 415, 308, 297, 3267, 3533, 27, 301, 291, 14399, 717, 32, 2157, 1043, 26, 102, 293, 397, 320, 446, 320, 2218, 1429, 297, 3267, 3533, 293, 446, 434, 739, 322, 1603, 372, 322, 943, 432, 322, 10516, 284, 35116, 32, 34500, 26, 102, 293, 284, 35116, 32, 470, 7371, 1078, 26]}
