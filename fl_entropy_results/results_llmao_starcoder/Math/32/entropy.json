{"line_number": 331, "line_type": "original", "code": "            }", "entropy": 3.8984375, "is_bug_line": false, "sus_score": 0.28258, "per_token_entropy": [2.259765625, 5.53515625], "tokens": [1468, 320]}
{"line_number": 331, "line_type": "generated", "code": "\n            sortingKey = new OrderedTuple(start.getX(), start.getY());\n        }\n\n        /** {@inheritDoc} */\n        @Override\n        public int compareTo(final ComparableSegment other) {\n            return sortingKey.compareTo(other.sortingKey);\n       ", "entropy": 0.12457275390625, "is_bug_line": false, "sus_score": 0.28258, "per_token_entropy": [1.0078125, 0.2177734375, 6.783008575439453e-05, 0.00467681884765625, 0.1370849609375, 0.0006799697875976562, 6.186962127685547e-05, 0.018218994140625, 0.13720703125, 0.01371002197265625, 0.0018463134765625, 1.166015625, 0.0096282958984375, 0.00012540817260742188, 0.00148773193359375, 0.008819580078125, 0.52685546875, 0.005588531494140625, 0.06854248046875, 0.09912109375, 0.7958984375, 0.0013523101806640625, 0.01378631591796875, 0.03948974609375, 0.0081939697265625, 0.6416015625, 0.005908966064453125, 0.00659942626953125, 0.0382080078125, 0.1658935546875, 0.01363372802734375, 3.6597251892089844e-05, 0.002216339111328125, 0.033172607421875, 0.004055023193359375, 0.0007519721984863281, 0.373779296875, 0.004360198974609375, 0.0007486343383789062, 0.149169921875, 0.61181640625, 0.06878662109375, 3.4570693969726562e-06, 0.0006465911865234375, 0.047607421875, 0.003421783447265625, 0.0012750625610351562, 0.000514984130859375, 0.0026912689208984375, 1.1920928955078125e-06, 0.00304412841796875, 0.01433563232421875], "tokens": [324, 22311, 953, 280, 537, 24603, 8924, 26, 1366, 32, 18817, 1026, 1477, 32, 20431, 1035, 291, 320, 584, 1022, 3088, 18446, 111, 569, 291, 477, 1788, 291, 562, 629, 8868, 705, 26, 3220, 40409, 7707, 1604, 27, 301, 324, 442, 22311, 953, 32, 23908, 26, 2455, 32, 34427, 953, 293, 291]}
{"line_number": 427, "line_type": "original", "code": "        public void visitInternalNode(final BSPTree<Euclidean2D> node) {", "entropy": 0.9267578125, "is_bug_line": false, "sus_score": 0.27056, "per_token_entropy": [4.8671875, 4.98046875, 2.24609375, 3.205078125, 2.181640625, 0.0025119781494140625, 0.0014801025390625, 0.046417236328125, 0.035980224609375, 7.784366607666016e-05, 0.01097869873046875, 0.0011682510375976562, 4.649162292480469e-05, 0.001384735107421875, 1.52587890625e-05, 0.0009136199951171875, 0.001617431640625, 0.006847381591796875, 0.0229339599609375], "tokens": [351, 562, 763, 7725, 4292, 1212, 26, 3220, 38099, 3350, 46, 55, 34986, 36, 54, 48, 1541, 27, 301]}
{"line_number": 427, "line_type": "generated", "code": "\n    /** Simple class for computing the convex hull of a set of points.\n     * <p>\n     * The convex hull is the set of all points in the plane which are\n     * reachable from a point in the set by successive lines drawn", "entropy": 0.82080078125, "is_bug_line": false, "sus_score": 0.27056, "per_token_entropy": [0.51806640625, 0.042266845703125, 2.69140625, 0.8896484375, 1.3505859375, 2.943359375, 0.8623046875, 4.171875, 0.2008056640625, 0.00010836124420166016, 0.240966796875, 0.46826171875, 0.377685546875, 0.00479888916015625, 0.388671875, 0.245849609375, 0.409423828125, 0.180908203125, 0.50732421875, 0.01690673828125, 0.001583099365234375, 1.2216796875, 4.6253204345703125e-05, 0.6767578125, 2.115234375, 0.0127716064453125, 6.830692291259766e-05, 0.61865234375, 1.091796875, 1.390625, 0.00905609130859375, 0.249755859375, 0.775390625, 1.416015625, 0.234375, 1.310546875, 0.96484375, 0.6298828125, 0.7333984375, 2.1576881408691406e-05, 1.4638671875, 0.41162109375, 0.459228515625, 1.80859375, 0.23486328125, 0.11651611328125, 0.53955078125, 0.82666015625, 2.96484375, 0.2734375, 2.056640625, 1.568359375], "tokens": [284, 1022, 7155, 443, 436, 18721, 322, 48317, 420, 514, 432, 312, 739, 432, 4981, 32, 275, 319, 333, 98, 48, 275, 319, 886, 48317, 420, 514, 438, 322, 739, 432, 1169, 4981, 328, 322, 14442, 1510, 884, 275, 319, 45804, 645, 312, 2260, 328, 322, 739, 810, 3117, 661, 5430, 27000]}
{"line_number": 345, "line_type": "original", "code": "            throw new MathInternalError();", "entropy": 2.26171875, "is_bug_line": false, "sus_score": 0.22809, "per_token_entropy": [2.580078125, 9.6484375, 0.03961181640625, 2.255859375, 0.3779296875, 4.363059997558594e-05, 0.92822265625], "tokens": [1468, 1422, 537, 4175, 4292, 924, 473]}
{"line_number": 345, "line_type": "generated", "code": "\n            }\n            return false;\n        }\n\n        /** {@inheritDoc} */\n        @Override\n        public int hashCode() {\n            return sortingKey.hashCode();\n        }\n\n    }", "entropy": 0.056304931640625, "is_bug_line": false, "sus_score": 0.22809, "per_token_entropy": [0.39599609375, 0.0028171539306640625, 0.326171875, 0.00560760498046875, 0.01343536376953125, 0.00022554397583007812, 0.00841522216796875, 0.00069427490234375, 0.142822265625, 0.010528564453125, 0.063232421875, 0.00017201900482177734, 0.0003674030303955078, 0.005706787109375, 0.01026153564453125, 0.032257080078125, 0.00020623207092285156, 0.0004711151123046875, 0.0041656494140625, 0.02978515625, 0.0008392333984375, 0.0009822845458984375, 0.0005044937133789062, 0.1285400390625, 0.2464599609375, 0.1962890625, 1.4185905456542969e-05, 0.0008687973022460938, 0.00450897216796875, 0.015045166015625, 0.00522613525390625, 0.0001609325408935547, 0.2568359375, 0.004322052001953125], "tokens": [324, 320, 324, 442, 901, 45, 291, 320, 584, 1022, 3088, 18446, 111, 569, 291, 477, 1788, 291, 562, 629, 17772, 346, 301, 324, 442, 22311, 953, 32, 14948, 473, 291, 320, 446, 320]}
{"line_number": 287, "line_type": "original", "code": "     * @param node node containing the segment starting the loop", "entropy": 2.42578125, "is_bug_line": false, "sus_score": 0.22714, "per_token_entropy": [5.2890625, 6.0546875, 0.2435302734375, 0.4931640625, 3.029296875, 2.28125, 3.43359375, 0.49658203125, 1.587890625, 4.71875, 0.951171875, 0.53369140625], "tokens": [262, 319, 477, 753, 1541, 1541, 6621, 322, 8430, 8049, 322, 5258]}
{"line_number": 287, "line_type": "generated", "code": "        }\n\n        return loop;\n\n    }\n\n    /** Split a boundary loop at a given point.", "entropy": 0.7451171875, "is_bug_line": false, "sus_score": 0.22714, "per_token_entropy": [1.9140625, 0.50927734375, 0.19384765625, 0.2454833984375, 0.01253509521484375, 0.0015888214111328125, 0.08612060546875, 0.0186309814453125, 0.3505859375, 0.1387939453125, 3.669921875, 0.7890625, 1.38671875, 0.57470703125, 1.7841796875, 0.94970703125, 0.919921875, 0.48876953125, 0.1201171875], "tokens": [351, 320, 584, 442, 5258, 45, 446, 320, 446, 1022, 18968, 312, 14563, 5258, 821, 312, 2702, 2260, 32]}
