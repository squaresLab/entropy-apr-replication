{"line_number": 94, "line_type": "original", "code": "            throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p);", "entropy": 1.2958984375, "is_bug_line": true, "sus_score": 0.53033, "per_token_entropy": [6.39453125, 3.03515625, 1.857421875, 1.208984375, 0.003894805908203125, 0.053741455078125, 0.234130859375, 0.39111328125, 0.95361328125, 0.1309814453125, 0.0012569427490234375, 3.84765625, 5.137920379638672e-05, 0.344482421875, 1.958984375, 3.2265625, 1.10546875, 0.0014696121215820312, 0.024383544921875, 0.7705078125, 1.049041748046875e-05, 0.09271240234375, 5.43359375, 0.04583740234375], "tokens": [1468, 1422, 4175, 19304, 32, 1297, 25907, 26, 24225, 19298, 32, 3908, 81, 42270, 81, 1846, 1296, 1960, 81, 1023, 927, 30, 298, 293]}
{"line_number": 94, "line_type": "generated", "code": "\n        } else {\n            ret = FastMath.exp(-mean) * FastMath.pow(mean, x) / factorial(x);\n        }\n        return ret;\n    }\n\n    /**\n     * The probability density function P(X = x)", "entropy": 0.146484375, "is_bug_line": true, "sus_score": 0.53033, "per_token_entropy": [0.095947265625, 0.0014667510986328125, 0.06549072265625, 0.06427001953125, 0.03851318359375, 0.1611328125, 0.00203704833984375, 0.63720703125, 2.7179718017578125e-05, 9.894371032714844e-05, 0.32666015625, 0.167724609375, 0.1802978515625, 0.09222412109375, 0.0283355712890625, 0.07879638671875, 2.777576446533203e-05, 0.00025916099548339844, 0.0009365081787109375, 0.001453399658203125, 0.0042724609375, 0.0021419525146484375, 0.058319091796875, 0.038055419921875, 0.021026611328125, 1.6806640625, 0.0017900466918945312, 0.049835205078125, 0.002117156982421875, 0.00536346435546875, 0.06787109375, 0.0004429817199707031, 0.1319580078125, 0.00870513916015625, 0.0015087127685546875, 0.00508880615234375, 0.018280029296875, 0.0004527568817138672, 0.1021728515625, 0.032135009765625, 0.021820068359375, 3.886222839355469e-05, 0.83154296875, 0.974609375, 0.257080078125, 0.033660888671875, 1.0869140625, 0.0258636474609375, 0.07733154296875, 0.07745361328125, 0.004535675048828125, 0.050079345703125], "tokens": [291, 320, 813, 301, 324, 2152, 280, 15938, 5717, 32, 2832, 3736, 6009, 27, 319, 15938, 5717, 32, 7527, 26, 6009, 30, 816, 27, 517, 10365, 564, 26, 106, 293, 291, 320, 291, 442, 2152, 45, 284, 320, 446, 1022, 275, 319, 886, 16356, 19324, 667, 447, 26, 74, 280, 816, 27]}
{"line_number": 97, "line_type": "original", "code": "        normal = new NormalDistributionImpl(p, FastMath.sqrt(p));", "entropy": 1.564453125, "is_bug_line": false, "sus_score": 0.2063, "per_token_entropy": [4.0859375, 8.3125, 0.1614990234375, 0.1005859375, 0.008026123046875, 9.620189666748047e-05, 1.8681640625, 0.10809326171875, 8.0390625, 0.89697265625, 2.548828125, 2.7179718017578125e-05, 0.0001493692398071289, 0.0025882720947265625, 0.00955963134765625, 0.3193359375, 0.1312255859375], "tokens": [351, 4302, 280, 537, 13574, 16218, 3482, 26, 98, 30, 15938, 5717, 32, 8663, 26, 98, 876]}
{"line_number": 97, "line_type": "generated", "code": "\n            ret = FastMath.pow(mean, x) * FastMath.exp(-mean) / FastMath.factorial(x);\n        }\n        return ret;\n    }\n\n    /**\n     * The log probability mass function P(X = x)", "entropy": 0.168701171875, "is_bug_line": false, "sus_score": 0.2063, "per_token_entropy": [0.5244140625, 0.1793212890625, 0.0017232894897460938, 0.281982421875, 1.1682510375976562e-05, 8.797645568847656e-05, 1.0078125, 0.0496826171875, 0.0982666015625, 0.0158538818359375, 0.09783935546875, 0.0198822021484375, 0.65966796875, 0.04248046875, 1.3113021850585938e-05, 0.0009417533874511719, 0.00904083251953125, 0.0018157958984375, 0.00399017333984375, 0.0092926025390625, 0.01422882080078125, 0.7724609375, 0.0033664703369140625, 0.0011348724365234375, 0.126220703125, 0.00010538101196289062, 0.0224456787109375, 0.0026493072509765625, 0.003833770751953125, 0.07977294921875, 0.0005369186401367188, 0.1837158203125, 0.0139923095703125, 0.005947113037109375, 0.0087890625, 0.0168914794921875, 0.0006151199340820312, 0.10687255859375, 0.038116455078125, 0.02197265625, 4.2557716369628906e-05, 0.8154296875, 0.84619140625, 1.2158203125, 0.0538330078125, 0.0015125274658203125, 1.34765625, 0.00698089599609375, 0.0097808837890625, 0.0030670166015625, 0.0025463104248046875, 0.04437255859375], "tokens": [324, 2152, 280, 15938, 5717, 32, 7527, 26, 6009, 30, 816, 27, 319, 15938, 5717, 32, 2832, 3736, 6009, 27, 517, 15938, 5717, 32, 9410, 564, 26, 106, 293, 291, 320, 291, 442, 2152, 45, 284, 320, 446, 1022, 275, 319, 886, 1245, 16356, 12697, 667, 447, 26, 74, 280, 816, 27]}
{"line_number": 141, "line_type": "original", "code": "        double ret;", "entropy": 2.328125, "is_bug_line": false, "sus_score": 0.16516, "per_token_entropy": [5.25390625, 2.337890625, 0.6416015625, 1.0810546875], "tokens": [351, 2064, 2152, 45]}
{"line_number": 141, "line_type": "generated", "code": "\n        return normal.cumulativeProbability(x + 0.5);\n    }\n\n    /**\n     * The probability density function for the Poisson distribution.\n     *\n     * @param x the value at which the PDF is evaluated.\n     * @return Poisson", "entropy": 0.1746826171875, "is_bug_line": false, "sus_score": 0.16516, "per_token_entropy": [0.0977783203125, 0.701171875, 0.16943359375, 0.04351806640625, 0.0538330078125, 4.279613494873047e-05, 0.264892578125, 0.045257568359375, 0.016326904296875, 0.05010986328125, 0.0016956329345703125, 0.00011992454528808594, 0.00013840198516845703, 0.329833984375, 0.096923828125, 0.0005650520324707031, 0.40380859375, 0.054718017578125, 0.0220794677734375, 5.710124969482422e-05, 2.53515625, 0.849609375, 0.1402587890625, 0.05499267578125, 0.67919921875, 0.1868896484375, 0.052459716796875, 8.52346420288086e-05, 0.0031280517578125, 0.053619384765625, 0.1019287109375, 0.0003612041473388672, 0.1065673828125, 4.4345855712890625e-05, 0.05718994140625, 0.0054168701171875, 0.0135650634765625, 0.04058837890625, 0.07379150390625, 0.044281005859375, 8.749961853027344e-05, 0.00278472900390625, 1.166015625, 0.0025386810302734375, 0.004962921142578125, 0.08746337890625, 0.0042877197265625, 0.00023424625396728516, 0.0023632049560546875, 0.0031719207763671875, 0.458984375, 0.0007348060607910156], "tokens": [291, 442, 4302, 32, 12018, 35567, 26, 106, 474, 225, 34, 32, 39, 293, 284, 320, 446, 1022, 275, 319, 886, 16356, 19324, 667, 436, 322, 7228, 29276, 7433, 32, 275, 319, 275, 319, 477, 753, 816, 322, 786, 821, 1510, 322, 15341, 438, 22423, 32, 275, 319, 477, 601, 7228, 29276]}
{"line_number": 93, "line_type": "original", "code": "        if (p <= 0) {", "entropy": 2.412109375, "is_bug_line": false, "sus_score": 0.16399, "per_token_entropy": [6.92578125, 3.8984375, 0.07177734375, 8.046875, 2.3046875, 0.01029205322265625, 0.0216522216796875, 0.344970703125, 0.08087158203125], "tokens": [351, 415, 308, 98, 2511, 225, 34, 27, 301]}
{"line_number": 93, "line_type": "generated", "code": "\n            return 0.0;\n        }\n        ret = FastMath.exp(-mean);\n        for (int i = 1; i <= x; i++) {\n            ret *= mean / i;\n        }\n        return ret;\n    }\n\n    /**", "entropy": 0.17822265625, "is_bug_line": false, "sus_score": 0.16399, "per_token_entropy": [0.1439208984375, 0.99658203125, 0.042266845703125, 0.00014209747314453125, 0.7939453125, 1.239776611328125e-05, 0.027587890625, 0.040130615234375, 0.0032806396484375, 1.0048828125, 0.64306640625, 0.0033130645751953125, 0.63037109375, 4.00543212890625e-05, 7.963180541992188e-05, 0.3828125, 0.1416015625, 0.1395263671875, 1.2197265625, 0.25927734375, 0.5185546875, 0.0263519287109375, 0.0740966796875, 0.11663818359375, 0.01016998291015625, 0.0238494873046875, 0.2213134765625, 0.00365447998046875, 0.0029468536376953125, 0.1707763671875, 0.003604888916015625, 0.00904083251953125, 0.045074462890625, 0.01331329345703125, 0.0057220458984375, 0.384521484375, 0.012969970703125, 0.052093505859375, 0.058563232421875, 0.022674560546875, 0.00478363037109375, 0.0010623931884765625, 0.031890869140625, 0.0004513263702392578, 0.71142578125, 0.066162109375, 0.020538330078125, 0.0200653076171875, 0.048065185546875, 0.0006151199340820312, 0.08660888671875, 0.0218658447265625], "tokens": [324, 442, 225, 34, 32, 34, 45, 291, 320, 291, 2152, 280, 15938, 5717, 32, 2832, 3736, 6009, 293, 291, 436, 308, 410, 595, 280, 225, 35, 45, 595, 2511, 816, 45, 595, 1987, 301, 324, 2152, 10439, 5651, 517, 595, 45, 291, 320, 291, 442, 2152, 45, 284, 320, 446, 1022]}
{"line_number": 219, "line_type": "original", "code": "     * {@link #inverseCumulativeProbability(double)} to find critical values.", "entropy": 1.07421875, "is_bug_line": false, "sus_score": 0.15968, "per_token_entropy": [6.34765625, 1.1259765625, 5.33203125, 2.365234375, 0.094482421875, 0.416259765625, 0.0106658935546875, 0.0022907257080078125, 0.0027103424072265625, 0.0086669921875, 0.005542755126953125, 0.398193359375, 1.1806640625, 0.374267578125, 0.521484375, 0.052703857421875, 0.0311126708984375], "tokens": [262, 319, 3088, 1204, 588, 18139, 53, 10318, 35567, 26, 2627, 4370, 372, 2290, 18896, 2078, 32]}
{"line_number": 219, "line_type": "generated", "code": "\n    /**\n     * Returns the mean for this distribution.\n     *\n     * @return the mean for this distribution.\n     */\n    @Override\n    public double getNumericalMean() {\n        return mean;\n    }\n\n    /**\n     * Returns the variance for this distribution", "entropy": 0.146240234375, "is_bug_line": false, "sus_score": 0.15968, "per_token_entropy": [0.8466796875, 0.12152099609375, 0.042083740234375, 7.128715515136719e-05, 1.2509765625, 0.058074951171875, 1.0703125, 0.6220703125, 0.7666015625, 0.0010528564453125, 0.0333251953125, 0.03387451171875, 0.0014133453369140625, 0.0762939453125, 0.00014972686767578125, 0.05853271484375, 0.0003237724304199219, 0.00800323486328125, 0.0119171142578125, 0.78369140625, 0.060394287109375, 0.00013339519500732422, 0.4775390625, 0.007259368896484375, 0.05010986328125, 0.01091766357421875, 0.599609375, 7.68899917602539e-05, 0.005237579345703125, 0.0215301513671875, 0.049285888671875, 0.09197998046875, 0.0005598068237304688, 0.00034117698669433594, 0.00876617431640625, 0.004055023193359375, 0.01404571533203125, 0.01885986328125, 0.252685546875, 0.0018749237060546875, 0.00513458251953125, 0.000385284423828125, 0.0640869140625, 0.005279541015625, 0.0036602020263671875, 4.1365623474121094e-05, 0.0262298583984375, 0.00015246868133544922, 0.036529541015625, 0.0007295608520507812, 0.0008854866027832031, 0.0004737377166748047], "tokens": [284, 1022, 275, 319, 3759, 322, 5651, 436, 458, 7433, 32, 275, 319, 275, 319, 477, 601, 322, 5651, 436, 458, 7433, 32, 275, 569, 284, 477, 1788, 284, 562, 2064, 44929, 14856, 17081, 346, 301, 291, 442, 5651, 45, 284, 320, 446, 1022, 275, 319, 3759, 322, 25809, 436, 458, 7433]}
