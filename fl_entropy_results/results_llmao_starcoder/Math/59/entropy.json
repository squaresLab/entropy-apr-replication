{"line_number": 3482, "line_type": "original", "code": "        return (a <= b) ? b : (Float.isNaN(a + b) ? Float.NaN : b);", "entropy": 0.5419921875, "is_bug_line": true, "sus_score": 0.5137, "per_token_entropy": [4.91015625, 0.98583984375, 1.21875, 0.57568359375, 0.1612548828125, 0.0032329559326171875, 0.014678955078125, 0.0017728805541992188, 0.3447265625, 0.01904296875, 0.7587890625, 1.1552734375, 0.0008945465087890625, 0.0116424560546875, 0.0008668899536132812, 0.006694793701171875, 0.0088653564453125, 0.0009226799011230469, 0.002155303955078125, 0.0010595321655273438, 0.005878448486328125, 0.0006866455078125, 0.0034027099609375, 0.0018434524536132812, 3.892578125, 0.00597381591796875], "tokens": [351, 442, 308, 83, 2511, 323, 27, 1018, 323, 499, 308, 3670, 32, 26821, 26, 83, 474, 323, 27, 1018, 8174, 32, 11126, 499, 323, 293]}
{"line_number": 3482, "line_type": "generated", "code": "\n\n    /**\n     * Compute the sign of the argument.\n     *\n     * @param x number from which sign is requested\n     * @return -1.0, 0.0 or 1.0 depending on the sign of x\n     */\n    public", "entropy": 0.264892578125, "is_bug_line": true, "sus_score": 0.5137, "per_token_entropy": [1.3642578125, 0.11187744140625, 1.80859375, 0.00206756591796875, 2.544921875, 0.485595703125, 1.5390625, 0.10986328125, 1.076171875, 0.3359375, 0.078369140625, 0.0743408203125, 0.0006718635559082031, 0.99560546875, 0.00039577484130859375, 0.1536865234375, 0.006107330322265625, 0.05523681640625, 0.8017578125, 0.0111541748046875, 0.00015532970428466797, 0.060150146484375, 0.001888275146484375, 0.11846923828125, 0.006500244140625, 0.00016260147094726562, 0.0016145706176757812, 0.001865386962890625, 0.22265625, 0.0016202926635742188, 0.04107666015625, 8.940696716308594e-06, 0.206298828125, 0.2208251953125, 0.353271484375, 0.0005898475646972656, 3.6954879760742188e-06, 0.00576019287109375, 0.32568359375, 0.0003879070281982422, 0.00012445449829101562, 7.605552673339844e-05, 0.1407470703125, 0.002872467041015625, 0.27392578125, 0.0007429122924804688, 0.00811767578125, 0.09136962890625, 0.0023174285888671875, 0.10491943359375, 0.017578125, 0.0082550048828125], "tokens": [446, 1022, 275, 319, 12836, 322, 2596, 432, 322, 2793, 32, 275, 319, 275, 319, 477, 753, 816, 1451, 645, 1510, 2596, 438, 8843, 275, 319, 477, 601, 429, 35, 32, 34, 30, 225, 34, 32, 34, 556, 225, 35, 32, 34, 14714, 544, 322, 2596, 432, 816, 275, 569, 284, 562]}
{"line_number": 3446, "line_type": "original", "code": "        return (a <= b) ? a : (Float.isNaN(a + b) ? Float.NaN : b);", "entropy": 0.54541015625, "is_bug_line": false, "sus_score": 0.36351, "per_token_entropy": [5.546875, 1.5654296875, 1.728515625, 0.72216796875, 0.287109375, 0.00765228271484375, 0.03192138671875, 0.0034198760986328125, 1.2724609375, 0.0738525390625, 0.9140625, 1.798828125, 0.0013427734375, 0.03289794921875, 0.002162933349609375, 0.01251983642578125, 0.0158538818359375, 0.004222869873046875, 0.003047943115234375, 0.00345611572265625, 0.0171966552734375, 0.0002346038818359375, 0.004077911376953125, 0.001522064208984375, 0.12286376953125, 0.00577545166015625], "tokens": [351, 442, 308, 83, 2511, 323, 27, 1018, 312, 499, 308, 3670, 32, 26821, 26, 83, 474, 323, 27, 1018, 8174, 32, 11126, 499, 323, 293]}
{"line_number": 3446, "line_type": "generated", "code": "\n\n    /** Compute the absolute value\n     * @param a value to compute the absolute value\n     * @return absolute value of the argument\n     */\n    public static int abs(final int a) {\n        return (a < 0)? -a : a", "entropy": 0.30517578125, "is_bug_line": false, "sus_score": 0.36351, "per_token_entropy": [1.306640625, 0.10791015625, 1.361328125, 0.1871337890625, 2.21484375, 0.007320404052734375, 1.0673828125, 0.0005660057067871094, 0.01538848876953125, 0.0013170242309570312, 0.44677734375, 0.73486328125, 0.5859375, 0.8154296875, 0.287109375, 0.08282470703125, 0.0041961669921875, 1.1513671875, 0.0006251335144042969, 0.0009102821350097656, 0.0009937286376953125, 1.1640625, 0.0006346702575683594, 0.08184814453125, 1.3720703125, 0.9619140625, 0.030242919921875, 0.022735595703125, 0.013153076171875, 0.006687164306640625, 0.001537322998046875, 0.388916015625, 0.0006556510925292969, 0.0012445449829101562, 0.1668701171875, 0.0035247802734375, 0.003429412841796875, 0.0023784637451171875, 0.0018901824951171875, 0.0237579345703125, 0.055938720703125, 0.2607421875, 0.0006875991821289062, 0.89111328125, 0.0034637451171875, 1.0609626770019531e-05, 0.018768310546875, 0.0003845691680908203, 0.007740020751953125, 0.00498199462890625, 0.0017957687377929688, 0.0011701583862304688], "tokens": [446, 1022, 12836, 322, 7976, 786, 275, 319, 477, 753, 312, 786, 372, 7596, 322, 7976, 786, 275, 319, 477, 601, 7976, 786, 432, 322, 2793, 275, 569, 284, 562, 907, 629, 11366, 26, 3220, 629, 312, 27, 301, 291, 442, 308, 83, 333, 225, 34, 27, 1018, 429, 83, 499, 312]}
{"line_number": 365, "line_type": "original", "code": "          rb += -ya * denomb * denomr * denomr;   // denominator", "entropy": 1.9755859375, "is_bug_line": false, "sus_score": 0.25339, "per_token_entropy": [6.34375, 10.46875, 1.1064453125, 1.8037109375, 1.28125, 0.34716796875, 3.255859375, 0.035400390625, 0.90234375, 0.826171875, 0.00925445556640625, 2.146484375, 1.5224609375, 0.01885986328125, 0.1282958984375, 4.953125, 0.024139404296875, 0.399658203125], "tokens": [2033, 18635, 1454, 429, 9486, 319, 5537, 15140, 319, 24257, 100, 319, 24257, 100, 45, 261, 434, 39920]}
{"line_number": 365, "line_type": "generated", "code": "\n\n      if (negate) {\n          result = -result;\n      }\n\n      return result;\n    }\n\n    /** Compute the hyperbolic cosine of a number.\n     * @param x number on which evaluation is done\n     * @return hyperbolic", "entropy": 0.085205078125, "is_bug_line": false, "sus_score": 0.25339, "per_token_entropy": [0.666015625, 0.31298828125, 0.08184814453125, 0.9501953125, 0.0001308917999267578, 0.01271820068359375, 0.005786895751953125, 0.01332855224609375, 0.017303466796875, 0.0007662773132324219, 0.0191650390625, 0.00750732421875, 0.0007939338684082031, 0.0021839141845703125, 0.00015616416931152344, 0.0303802490234375, 0.0101165771484375, 0.0017948150634765625, 0.0004413127899169922, 0.032989501953125, 0.00044727325439453125, 0.23828125, 0.0848388671875, 0.392578125, 0.1942138671875, 0.873046875, 0.00018990039825439453, 2.384185791015625e-06, 0.394287109375, 0.004367828369140625, 0.00244903564453125, 0.019927978515625, 0.0004911422729492188, 0.01129913330078125, 0.0205230712890625, 4.6133995056152344e-05, 0.00533294677734375, 0.00015473365783691406, 0.00667572021484375, 0.008575439453125, 0.0006256103515625, 2.4080276489257812e-05, 0.0003311634063720703, 0.00017571449279785156, 0.0003147125244140625, 0.0010633468627929688, 3.993511199951172e-05, 0.00019502639770507812, 0.0013275146484375, 0.002429962158203125, 0.0004553794860839844, 4.649162292480469e-06], "tokens": [1687, 415, 308, 8095, 332, 27, 301, 616, 1056, 280, 429, 1267, 45, 397, 320, 1687, 442, 1056, 45, 284, 320, 446, 1022, 12836, 322, 15223, 84, 2073, 10712, 482, 432, 312, 1451, 32, 275, 319, 477, 753, 816, 1451, 544, 1510, 11903, 438, 3390, 275, 319, 477, 601, 15223, 84, 2073]}
{"line_number": 342, "line_type": "original", "code": "          double hiPrec[] = new double[2];", "entropy": 0.8173828125, "is_bug_line": false, "sus_score": 0.23146, "per_token_entropy": [7.65234375, 0.8037109375, 0.490234375, 0.00901031494140625, 0.00289154052734375, 0.002017974853515625, 0.0015230178833007812, 0.00013935565948486328, 0.007122039794921875, 0.01361846923828125, 0.006740570068359375], "tokens": [2033, 2064, 13677, 30532, 1178, 280, 537, 2064, 77, 36, 970]}
{"line_number": 342, "line_type": "generated", "code": "\n      if (Double.isNaN(x)) {\n          return x;\n      }\n\n      if (x == 0.0) {\n          return x;\n      }\n\n      if (x < 0.0) {\n          x = -x;\n          neg", "entropy": 0.1136474609375, "is_bug_line": false, "sus_score": 0.23146, "per_token_entropy": [0.2005615234375, 0.98779296875, 0.07037353515625, 1.7724609375, 0.0010280609130859375, 0.037628173828125, 0.0001264810562133789, 0.0002696514129638672, 0.2352294921875, 0.0176239013671875, 0.05596923828125, 0.002532958984375, 0.475341796875, 0.00614166259765625, 0.0292816162109375, 0.0013074874877929688, 0.12744140625, 0.1119384765625, 0.0276947021484375, 0.175048828125, 0.162109375, 0.024932861328125, 0.0007252693176269531, 0.77197265625, 0.00022530555725097656, 0.0255584716796875, 0.0013980865478515625, 0.0175933837890625, 0.015960693359375, 0.027374267578125, 0.00013208389282226562, 0.007137298583984375, 0.00031828880310058594, 0.0231475830078125, 0.06732177734375, 0.0033588409423828125, 0.2099609375, 0.0821533203125, 0.00261688232421875, 0.0005879402160644531, 0.0693359375, 7.963180541992188e-05, 0.0012598037719726562, 0.0012664794921875, 0.00972747802734375, 0.042388916015625, 0.00034046173095703125, 0.00035834312438964844, 0.0014963150024414062, 2.1219253540039062e-05, 0.0021686553955078125, 0.0013065338134765625], "tokens": [397, 415, 308, 4075, 32, 26821, 26, 106, 490, 301, 616, 442, 816, 45, 397, 320, 1687, 415, 308, 106, 610, 225, 34, 32, 34, 27, 301, 616, 442, 816, 45, 397, 320, 1687, 415, 308, 106, 333, 225, 34, 32, 34, 27, 301, 616, 816, 280, 429, 106, 45, 616, 7528]}
{"line_number": 439, "line_type": "original", "code": "          double dab = da - daa;", "entropy": 1.9267578125, "is_bug_line": false, "sus_score": 0.22423, "per_token_entropy": [5.8125, 5.58984375, 4.06640625, 2.13671875, 0.76171875, 0.767578125, 0.0413818359375, 0.05291748046875, 0.0021114349365234375, 0.0413818359375], "tokens": [2033, 2064, 343, 360, 280, 5282, 429, 343, 2321, 45]}
{"line_number": 439, "line_type": "generated", "code": "\n\n          // Account for nb\n          ratiob += nb / da;\n          // Account for db\n          ratiob += -db * na / da / da;\n\n          result = ratioa + ratiob;\n      }\n\n      if (negate) {\n          return -", "entropy": 0.05987548828125, "is_bug_line": false, "sus_score": 0.22423, "per_token_entropy": [0.251708984375, 0.189453125, 0.06591796875, 0.00033593177795410156, 0.004119873046875, 0.0296173095703125, 0.00241851806640625, 0.006237030029296875, 0.0020275115966796875, 0.006313323974609375, 0.005863189697265625, 0.0008192062377929688, 0.0011968612670898438, 0.039306640625, 0.0037136077880859375, 0.0017185211181640625, 3.1113624572753906e-05, 0.0017976760864257812, 0.0023288726806640625, 0.0024738311767578125, 0.0022640228271484375, 0.0023345947265625, 0.08203125, 0.0032253265380859375, 0.0251312255859375, 0.00995635986328125, 0.00887298583984375, 0.001544952392578125, 0.0021686553955078125, 0.0023593902587890625, 0.0015621185302734375, 0.060546875, 0.020263671875, 0.0004496574401855469, 0.01377105712890625, 0.00879669189453125, 0.0014047622680664062, 0.0002624988555908203, 5.924701690673828e-05, 0.0016660690307617188, 0.054229736328125, 0.00035953521728515625, 0.1824951171875, 0.1591796875, 0.04168701171875, 0.06353759765625, 4.76837158203125e-07, 0.005985260009765625, 0.036956787109375, 0.054351806640625, 1.625, 0.0241546630859375], "tokens": [5678, 434, 9035, 436, 12939, 616, 12488, 84, 1454, 12939, 517, 5282, 45, 616, 434, 9035, 436, 3082, 616, 12488, 84, 1454, 429, 1199, 319, 5499, 517, 5282, 517, 5282, 45, 5678, 1056, 280, 12488, 83, 474, 12488, 84, 45, 397, 320, 1687, 415, 308, 8095, 332, 27, 301, 616, 442, 429]}
