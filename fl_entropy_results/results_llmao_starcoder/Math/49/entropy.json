{"line_number": 356, "line_type": "original", "code": "        checkVectorDimensions(v.length);", "entropy": 1.9443359375, "is_bug_line": false, "sus_score": 0.37856, "per_token_entropy": [3.3046875, 5.25390625, 2.5625, 0.004062652587890625, 0.00394439697265625, 4.11328125, 0.0290985107421875, 2.216796875, 0.017364501953125], "tokens": [351, 1505, 2863, 16485, 26, 104, 32, 1322, 293]}
{"line_number": 356, "line_type": "generated", "code": "\n    /** {@inheritDoc} */\n    @Override\n    public OpenMapRealVector mapAdd(double d) {\n        OpenMapRealVector res = new OpenMapRealVector(this);\n        Iterator iter = res.entries.iterator();\n        while (iter.", "entropy": 0.134521484375, "is_bug_line": false, "sus_score": 0.37856, "per_token_entropy": [0.30517578125, 1.5458984375, 1.0068359375, 0.000530242919921875, 0.0007009506225585938, 0.003986358642578125, 0.02484130859375, 0.4296875, 0.0018777847290039062, 0.01015472412109375, 0.019134521484375, 0.2498779296875, 0.006771087646484375, 0.0003876686096191406, 0.0037059783935546875, 1.021484375, 1.0029296875, 0.00409698486328125, 0.6025390625, 0.1199951171875, 0.005695343017578125, 0.00997161865234375, 0.03265380859375, 0.1358642578125, 0.0010652542114257812, 0.00010657310485839844, 3.910064697265625e-05, 0.048583984375, 0.0022296905517578125, 0.041748046875, 0.00039505958557128906, 0.00014090538024902344, 1.2516975402832031e-05, 4.494190216064453e-05, 0.0028533935546875, 0.0408935546875, 0.01104736328125, 0.00881195068359375, 0.132568359375, 0.0195465087890625, 0.0011072158813476562, 0.025115966796875, 7.104873657226562e-05, 0.00580596923828125, 0.0003845691680908203, 0.00823211669921875, 0.0006508827209472656, 0.0038013458251953125, 0.003467559814453125, 0.091796875, 0.0003559589385986328, 0.00010645389556884766], "tokens": [284, 1022, 3088, 18446, 111, 569, 284, 477, 1788, 284, 562, 3927, 1208, 6877, 2863, 1992, 1103, 26, 2627, 343, 27, 301, 291, 3927, 1208, 6877, 2863, 736, 280, 537, 3927, 1208, 6877, 2863, 26, 578, 293, 291, 14743, 3850, 280, 736, 32, 9150, 32, 5162, 473, 291, 2218, 308, 1731, 32]}
{"line_number": 212, "line_type": "original", "code": "     * Determine if this value is within epsilon of zero.", "entropy": 2.421875, "is_bug_line": false, "sus_score": 0.37744, "per_token_entropy": [5.28125, 0.265625, 9.828125, 1.3720703125, 2.619140625, 8.0625, 0.2283935546875, 0.46484375, 0.0419921875, 0.42822265625, 0.333251953125, 0.14111328125], "tokens": [262, 319, 22022, 415, 458, 786, 438, 4797, 23477, 432, 5934, 32]}
{"line_number": 212, "line_type": "generated", "code": "\n     * {@inheritDoc}\n     *\n     * @throws org.apache.commons.math.exception.NullArgumentException if {@code v} is {@code null}.\n     * @throws org.apache.commons.math.exception.DimensionMismatchException if the", "entropy": 0.2149658203125, "is_bug_line": false, "sus_score": 0.37744, "per_token_entropy": [0.12371826171875, 0.05126953125, 1.2587890625, 0.00263214111328125, 0.0012979507446289062, 0.042144775390625, 0.708984375, 0.90234375, 0.0340576171875, 0.34033203125, 0.69189453125, 0.8232421875, 5.316734313964844e-05, 0.001865386962890625, 2.5033950805664062e-06, 0.0007266998291015625, 5.960464477539062e-07, 0.00018775463104248047, 0.009429931640625, 0.023681640625, 9.250640869140625e-05, 1.94140625, 0.01099395751953125, 0.301025390625, 0.74267578125, 0.0002887248992919922, 0.288330078125, 0.004894256591796875, 0.82470703125, 0.412353515625, 9.572505950927734e-05, 0.0040740966796875, 0.09014892578125, 0.0257110595703125, 0.6328125, 0.00928497314453125, 0.057861328125, 0.0229949951171875, 4.088878631591797e-05, 1.4066696166992188e-05, 3.0994415283203125e-06, 7.796287536621094e-05, 7.3909759521484375e-06, 1.1563301086425781e-05, 0.0007948875427246094, 0.0009508132934570312, 1.239776611328125e-05, 0.0280914306640625, 6.67572021484375e-05, 1.1563301086425781e-05, 0.337158203125, 0.429931640625], "tokens": [275, 319, 3088, 18446, 111, 275, 319, 275, 319, 477, 5117, 1086, 32, 2104, 32, 8369, 32, 3812, 32, 3893, 32, 1883, 8308, 415, 3088, 687, 354, 111, 438, 3088, 687, 744, 4009, 275, 319, 477, 5117, 1086, 32, 2104, 32, 8369, 32, 3812, 32, 3893, 32, 9883, 31102, 984, 415, 322]}
{"line_number": 667, "line_type": "original", "code": "            entries.remove(index);", "entropy": 2.099609375, "is_bug_line": false, "sus_score": 0.37602, "per_token_entropy": [5.33984375, 2.515625, 0.005985260009765625, 0.21044921875, 0.07879638671875, 6.375, 0.171875], "tokens": [1468, 8036, 32, 2546, 26, 1055, 293]}
{"line_number": 667, "line_type": "generated", "code": "\n        }\n        return res;\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public OpenMapRealVector subtract(double[] v) {\n        checkVectorDimensions(v.length);\n        return (OpenMapRealVector) subtract(new OpenMap", "entropy": 0.06707763671875, "is_bug_line": false, "sus_score": 0.37602, "per_token_entropy": [0.1365966796875, 0.097412109375, 0.042205810546875, 0.0164031982421875, 0.0012416839599609375, 0.0029430389404296875, 0.03424072265625, 0.0004906654357910156, 0.10626220703125, 0.0110015869140625, 1.1259765625, 8.440017700195312e-05, 0.0005388259887695312, 0.001850128173828125, 0.007587432861328125, 0.0687255859375, 0.0003216266632080078, 0.003932952880859375, 0.0151214599609375, 0.08355712890625, 0.00013637542724609375, 0.0002084970474243164, 0.0008449554443359375, 0.043609619140625, 0.005931854248046875, 0.2354736328125, 0.255859375, 0.0015611648559570312, 0.0006189346313476562, 0.006076812744140625, 0.00823211669921875, 0.350830078125, 0.0006747245788574219, 6.091594696044922e-05, 1.8477439880371094e-05, 0.00011050701141357422, 0.0016193389892578125, 6.783008575439453e-05, 0.00014162063598632812, 0.0045318603515625, 0.326171875, 0.43310546875, 0.0008959770202636719, 7.271766662597656e-06, 1.1444091796875e-05, 0.0004737377166748047, 0.0005822181701660156, 0.0083770751953125, 0.0216827392578125, 0.00251007080078125, 0.020965576171875, 4.112720489501953e-05], "tokens": [291, 320, 291, 442, 736, 45, 284, 320, 446, 1022, 3088, 18446, 111, 569, 284, 477, 1788, 284, 562, 3927, 1208, 6877, 2863, 27799, 26, 2627, 1178, 354, 27, 301, 291, 1505, 2863, 16485, 26, 104, 32, 1322, 293, 291, 442, 308, 2961, 1208, 6877, 2863, 27, 27799, 26, 890, 3927, 1208]}
{"line_number": 666, "line_type": "original", "code": "        } else if (entries.containsKey(index)) {", "entropy": 1.94140625, "is_bug_line": false, "sus_score": 0.37599, "per_token_entropy": [5.28515625, 0.3212890625, 7.22265625, 2.197265625, 0.5302734375, 2.166015625, 0.004119873046875, 0.0582275390625, 0.0296478271484375, 5.28515625, 0.09161376953125, 0.11029052734375], "tokens": [351, 320, 813, 415, 308, 9150, 32, 15943, 26, 1055, 490, 301]}
{"line_number": 666, "line_type": "generated", "code": "\n            }\n        }\n        return res;\n    }\n\n    /**\n     * Optimized method to subtract a scalar.\n     *\n     * @param d Value to subtract.\n     * @return the difference of {@code this} and {@code d}.\n     */\n   ", "entropy": 0.1417236328125, "is_bug_line": false, "sus_score": 0.37599, "per_token_entropy": [0.37939453125, 0.006519317626953125, 0.040924072265625, 0.0003120899200439453, 0.057281494140625, 0.017791748046875, 0.0005826950073242188, 0.0013685226440429688, 0.0211029052734375, 0.00022101402282714844, 0.109619140625, 0.00948333740234375, 0.4287109375, 2.7418136596679688e-05, 0.306640625, 0.00037789344787597656, 0.004497528076171875, 0.00823974609375, 0.059295654296875, 1.0498046875, 0.8876953125, 0.8603515625, 0.010528564453125, 0.0010595321655273438, 0.039398193359375, 3.445148468017578e-05, 0.00720977783203125, 0.0022792816162109375, 0.10528564453125, 0.41162109375, 0.0006108283996582031, 0.0472412109375, 0.412841796875, 0.0007524490356445312, 0.0004475116729736328, 0.0005331039428710938, 0.0016393661499023438, 0.9814453125, 0.0237884521484375, 0.3759765625, 0.03814697265625, 0.0002301931381225586, 0.0015363693237304688, 0.0002294778823852539, 0.066650390625, 0.01270294189453125, 0.00023865699768066406, 0.458984375, 0.0015716552734375, 0.002109527587890625, 0.109619140625, 0.0038299560546875], "tokens": [324, 320, 291, 320, 291, 442, 736, 45, 284, 320, 446, 1022, 275, 319, 22994, 1191, 1411, 372, 27799, 312, 13145, 32, 275, 319, 275, 319, 477, 753, 343, 3846, 372, 27799, 32, 275, 319, 477, 601, 322, 10563, 432, 3088, 687, 458, 111, 461, 3088, 687, 343, 4009, 275, 569, 284]}
{"line_number": 399, "line_type": "original", "code": "            iter.advance();", "entropy": 3.703125, "is_bug_line": false, "sus_score": 0.37303, "per_token_entropy": [5.58984375, 9.1796875, 0.340087890625, 3.359375, 0.053741455078125], "tokens": [1468, 3850, 32, 22545, 473]}
{"line_number": 399, "line_type": "generated", "code": "\n                res += value * value;\n            }\n        }\n        return Math.sqrt(res);\n    }\n\n    /**\n     * Get the entries map.\n     *\n     * @return the entries map.\n     */\n    public Map<Integer, Double> getEntries", "entropy": 0.239013671875, "is_bug_line": false, "sus_score": 0.37303, "per_token_entropy": [0.07421875, 0.1328125, 0.0112152099609375, 0.0224151611328125, 0.00803375244140625, 0.0006861686706542969, 0.0018148422241210938, 0.02398681640625, 0.0007700920104980469, 0.005523681640625, 0.00037288665771484375, 0.09423828125, 0.024505615234375, 0.308837890625, 0.005695343017578125, 0.0009927749633789062, 0.000499725341796875, 0.0003304481506347656, 0.0007648468017578125, 0.019561767578125, 0.0015821456909179688, 0.1990966796875, 0.055633544921875, 0.4638671875, 6.318092346191406e-05, 2.470703125, 0.70703125, 0.9072265625, 2.580078125, 0.147216796875, 0.1290283203125, 0.005977630615234375, 0.422119140625, 0.0004892349243164062, 0.0175018310546875, 0.0007925033569335938, 0.80810546875, 0.2003173828125, 0.156005859375, 0.153564453125, 0.0146331787109375, 0.07794189453125, 0.00432586669921875, 0.53271484375, 1.2666015625, 0.07305908203125, 0.004119873046875, 0.003696441650390625, 0.257080078125, 0.0004837512969970703, 0.0009708404541015625, 0.02850341796875], "tokens": [400, 736, 1454, 786, 319, 786, 45, 324, 320, 291, 320, 291, 442, 4175, 32, 8663, 26, 575, 293, 284, 320, 446, 1022, 275, 319, 1390, 322, 8036, 1992, 32, 275, 319, 275, 319, 477, 601, 322, 8036, 1992, 32, 275, 569, 284, 562, 3516, 46, 3061, 30, 6934, 48, 622, 9915]}
