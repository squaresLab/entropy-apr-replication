{"line_number": 1182, "line_type": "original", "code": "        return new Complex(realPart, imaginaryPart);", "entropy": 1.1416015625, "is_bug_line": false, "sus_score": 0.36507, "per_token_entropy": [4.78515625, 1.7060546875, 1.64453125, 0.52490234375, 0.395263671875, 0.76416015625, 3.591796875, 0.1539306640625, 0.0275115966796875, 0.0007648468017578125, 0.0047454833984375, 0.0968017578125], "tokens": [351, 442, 537, 19915, 26, 4543, 2639, 30, 17463, 3172, 2639, 293]}
{"line_number": 1182, "line_type": "generated", "code": "\n    /**\n     * Returns a hash code for this complex number.\n     * @return a hash code value for this complex number.\n     */\n    @Override\n    public int hashCode() {\n        if (isNaN) {\n            return 37;\n        }\n       ", "entropy": 0.2432861328125, "is_bug_line": false, "sus_score": 0.36507, "per_token_entropy": [1.4111328125, 0.18359375, 0.5263671875, 9.751319885253906e-05, 1.58984375, 0.890625, 0.72509765625, 0.036163330078125, 0.0156402587890625, 0.08123779296875, 0.50634765625, 0.006458282470703125, 0.002391815185546875, 0.040374755859375, 0.003215789794921875, 1.052734375, 0.1405029296875, 0.241455078125, 0.001026153564453125, 0.00632476806640625, 0.0556640625, 0.221923828125, 0.0031604766845703125, 0.67578125, 0.0151519775390625, 0.08062744140625, 0.0064544677734375, 0.1917724609375, 0.0081939697265625, 0.06256103515625, 0.00016701221466064453, 0.005584716796875, 0.0015707015991210938, 0.0033397674560546875, 0.0002651214599609375, 0.007671356201171875, 0.01137542724609375, 0.036102294921875, 1.287109375, 0.08270263671875, 0.1337890625, 0.262451171875, 0.0050811767578125, 0.01097869873046875, 0.06939697265625, 0.009185791015625, 0.32568359375, 0.82763671875, 0.45751953125, 0.0292205810546875, 0.0002942085266113281, 0.30029296875], "tokens": [284, 1022, 275, 319, 3759, 312, 3677, 1340, 436, 458, 8640, 1451, 32, 275, 319, 477, 601, 312, 3677, 1340, 786, 436, 458, 8640, 1451, 32, 275, 569, 284, 477, 1788, 284, 562, 629, 17772, 346, 301, 291, 415, 308, 26821, 27, 301, 324, 442, 225, 37, 41, 45, 291, 320, 291]}
{"line_number": 1070, "line_type": "original", "code": "        return createComplex(FastMath.sinh(real2) / d,", "entropy": 2.212890625, "is_bug_line": true, "sus_score": 0.35791, "per_token_entropy": [3.24609375, 1.923828125, 3.06640625, 1.927734375, 2.140625, 0.49072265625, 5.745887756347656e-05, 0.00023162364959716797, 6.90234375, 6.5546875, 0.1051025390625, 4.4296875, 5.2578125, 1.1376953125, 0.14404296875, 0.0794677734375, 0.21337890625], "tokens": [351, 442, 1487, 12267, 26, 12200, 5717, 32, 7102, 90, 26, 4543, 36, 27, 517, 343, 30]}
{"line_number": 1070, "line_type": "generated", "code": "\n        if (n <= 0) {\n            throw new NotPositiveException(LocalizedFormats.ROOTS_OF_NEGATIVE_NUMBER, n);\n        }\n\n        double nthRootOfAbs = nthRootOfPositiveAbs();\n        double a = FastMath.", "entropy": 0.355712890625, "is_bug_line": true, "sus_score": 0.35791, "per_token_entropy": [0.57568359375, 0.97802734375, 0.0311737060546875, 0.039215087890625, 0.42138671875, 0.0005321502685546875, 0.000980377197265625, 0.01029205322265625, 0.00978851318359375, 0.036529541015625, 0.0501708984375, 0.037322998046875, 0.00695037841796875, 0.0004410743713378906, 5.960464477539062e-07, 0.059539794921875, 0.04107666015625, 0.004375457763671875, 0.0001596212387084961, 1.4560546875, 0.1099853515625, 0.0029506683349609375, 0.1768798828125, 3.230571746826172e-05, 1.1123046875, 0.0007066726684570312, 0.311279296875, 0.425537109375, 0.496826171875, 0.0043182373046875, 0.03533935546875, 0.0009541511535644531, 0.9150390625, 1.4404296875, 1.3369140625, 0.1771240234375, 1.357421875, 0.077880859375, 0.0051727294921875, 1.388671875, 0.005741119384765625, 0.276123046875, 0.7509765625, 0.4912109375, 1.060546875, 0.67626953125, 0.60791015625, 1.029296875, 0.016845703125, 0.456298828125, 4.506111145019531e-05, 1.3113021850585938e-05], "tokens": [291, 415, 308, 96, 2511, 225, 34, 27, 301, 324, 1422, 537, 3182, 17991, 984, 26, 24225, 19298, 32, 7789, 69, 81, 2109, 81, 43518, 81, 10463, 30, 310, 293, 291, 320, 584, 2064, 46245, 4058, 1419, 14246, 280, 46245, 4058, 1419, 17991, 14246, 473, 291, 2064, 312, 280, 15938, 5717, 32]}
{"line_number": 1178, "line_type": "original", "code": "        if (Double.isNaN(realPart) ||", "entropy": 0.99853515625, "is_bug_line": false, "sus_score": 0.33455, "per_token_entropy": [3.478515625, 1.017578125, 0.11004638671875, 2.494140625, 0.0009541511535644531, 0.4638671875, 0.0018205642700195312, 0.99365234375, 1.4892578125, 0.70458984375, 0.2303466796875], "tokens": [351, 415, 308, 4075, 32, 26821, 26, 4543, 2639, 27, 1276]}
{"line_number": 1178, "line_type": "generated", "code": "\n    /**\n     * Returns a hash code for this complex number.\n     *\n     * @return hash code for this complex number.\n     */\n    @Override\n    public int hashCode() {\n        if (isNaN) {\n            return 3;\n        }\n        if", "entropy": 0.2626953125, "is_bug_line": false, "sus_score": 0.33455, "per_token_entropy": [0.9287109375, 0.1861572265625, 0.51953125, 0.00011742115020751953, 1.4951171875, 0.8720703125, 0.677734375, 0.029266357421875, 0.01617431640625, 0.0689697265625, 0.43896484375, 0.00653839111328125, 0.0023937225341796875, 0.04241943359375, 0.0021991729736328125, 0.6123046875, 0.00010919570922851562, 0.0426025390625, 0.016510009765625, 1.0537109375, 0.037322998046875, 0.89599609375, 0.018524169921875, 0.113525390625, 0.00913238525390625, 0.77880859375, 0.0013761520385742188, 0.1217041015625, 0.01236724853515625, 0.08111572265625, 0.00011110305786132812, 0.0079193115234375, 0.0014314651489257812, 0.004352569580078125, 0.00025844573974609375, 0.006011962890625, 0.010009765625, 0.05157470703125, 1.4404296875, 0.0849609375, 0.12261962890625, 0.303466796875, 0.003936767578125, 0.0111083984375, 0.06927490234375, 0.01349639892578125, 0.373291015625, 1.322265625, 0.033172607421875, 0.0005393028259277344, 0.292724609375, 0.4189453125], "tokens": [284, 1022, 275, 319, 3759, 312, 3677, 1340, 436, 458, 8640, 1451, 32, 275, 319, 275, 319, 477, 601, 3677, 1340, 436, 458, 8640, 1451, 32, 275, 569, 284, 477, 1788, 284, 562, 629, 17772, 346, 301, 291, 415, 308, 26821, 27, 301, 324, 442, 225, 37, 45, 291, 320, 291, 415]}
{"line_number": 1026, "line_type": "original", "code": "        return createComplex(FastMath.sin(real2) / d,", "entropy": 0.65185546875, "is_bug_line": true, "sus_score": 0.33189, "per_token_entropy": [4.46484375, 2.275390625, 0.6689453125, 0.070556640625, 0.054718017578125, 0.63671875, 0.0002665519714355469, 0.0016536712646484375, 0.49072265625, 1.3984375, 0.204833984375, 0.061859130859375, 0.03778076171875, 0.02996826171875, 0.00543975830078125, 0.0238037109375], "tokens": [351, 442, 1487, 12267, 26, 12200, 5717, 32, 7102, 26, 4543, 36, 27, 517, 343, 30]}
{"line_number": 1026, "line_type": "generated", "code": "\n    /**\n     * Compute the argument (also known as the phase angle) of this complex number.\n     * The argument is the angle between the positive real axis and the point\n     * representing this number in the complex plane.\n     * The value returned is between", "entropy": 0.1724853515625, "is_bug_line": true, "sus_score": 0.33189, "per_token_entropy": [1.146484375, 0.1593017578125, 0.053955078125, 0.00013530254364013672, 1.1064453125, 0.052490234375, 0.305419921875, 0.5244140625, 0.11553955078125, 0.1962890625, 0.0006036758422851562, 0.0264739990234375, 0.04095458984375, 0.6083984375, 1.2978515625, 0.0018453598022460938, 0.004261016845703125, 0.1572265625, 0.289306640625, 0.0021305084228515625, 0.004772186279296875, 8.630752563476562e-05, 0.59765625, 0.07672119140625, 0.01053619384765625, 0.09442138671875, 0.0163116455078125, 0.0482177734375, 0.012115478515625, 0.0015516281127929688, 0.0224151611328125, 0.003917694091796875, 0.01079559326171875, 0.02734375, 0.147705078125, 0.042510986328125, 1.4543533325195312e-05, 0.1424560546875, 0.00037026405334472656, 0.07318115234375, 0.00583648681640625, 0.0017642974853515625, 0.01473236083984375, 0.0017824172973632812, 0.0115966796875, 0.6337890625, 0.00010263919830322266, 0.51953125, 0.2177734375, 0.006435394287109375, 0.086669921875, 0.043731689453125], "tokens": [284, 1022, 275, 319, 12836, 322, 2793, 308, 12227, 8967, 619, 322, 11225, 8775, 27, 432, 458, 8640, 1451, 32, 275, 319, 886, 2793, 438, 322, 8775, 3733, 322, 11557, 4011, 6013, 461, 322, 2260, 275, 319, 12681, 458, 1451, 328, 322, 8640, 14442, 32, 275, 319, 886, 786, 4717, 438, 3733]}
{"line_number": 1024, "line_type": "original", "code": "        double d = FastMath.cos(real2) + FastMath.cosh(imaginary2);", "entropy": 0.63671875, "is_bug_line": true, "sus_score": 0.32787, "per_token_entropy": [5.82421875, 4.02734375, 2.341796875, 0.1732177734375, 0.25146484375, 7.581710815429688e-05, 0.00024771690368652344, 1.7060546875, 0.00164794921875, 0.141845703125, 0.135498046875, 0.0114593505859375, 0.0176849365234375, 0.0006928443908691406, 2.193450927734375e-05, 0.0008568763732910156, 0.0006866455078125, -0.0, 0.00013899803161621094, 0.00389862060546875, 7.748603820800781e-06, 0.00012958049774169922, 0.0029735565185546875], "tokens": [351, 2064, 343, 280, 15938, 5717, 32, 4952, 26, 4543, 36, 27, 474, 15938, 5717, 32, 331, 615, 26, 17792, 3172, 36, 293]}
{"line_number": 1024, "line_type": "generated", "code": "\n\n    /**\n     * Get the absolute value.\n     *\n     * @return {@code sqrt(a<sup>2</sup>&nbsp;+&nbsp;b<sup>2</sup>)}\n     */\n    public double abs() {\n        return", "entropy": 0.22998046875, "is_bug_line": true, "sus_score": 0.32787, "per_token_entropy": [0.9365234375, 0.0914306640625, 0.03192138671875, 6.854534149169922e-05, 1.6865234375, 0.272705078125, 1.60546875, 0.0276031494140625, 0.357177734375, 0.10223388671875, 0.0007691383361816406, 0.7548828125, 0.00030612945556640625, 0.02325439453125, 0.0123138427734375, 0.9072265625, 0.021270751953125, 0.90625, 0.04241943359375, 1.0849609375, 0.78125, 0.03448486328125, 2.2172927856445312e-05, 0.0004372596740722656, 0.001251220703125, 5.269050598144531e-05, 0.76904296875, 0.004825592041015625, 0.245361328125, 0.0005331039428710938, 0.00029730796813964844, 3.6954879760742188e-06, 5.507469177246094e-05, 5.269050598144531e-05, 3.635883331298828e-05, 4.57763671875e-05, 2.1457672119140625e-05, 0.00013065338134765625, 0.0014324188232421875, 5.0067901611328125e-05, 0.038726806640625, 0.006549835205078125, 0.06195068359375, 0.54931640625, 0.0192108154296875, 0.0726318359375, 0.0643310546875, 0.010009765625, 0.001800537109375, 0.01038360595703125, 0.04364013671875, 0.37744140625], "tokens": [446, 1022, 275, 319, 1390, 322, 7976, 786, 32, 275, 319, 275, 319, 477, 601, 3088, 687, 17058, 26, 83, 46, 5540, 48, 36, 377, 5540, 2878, 1655, 45, 29, 24, 1655, 45, 84, 46, 5540, 48, 36, 377, 5540, 48, 4370, 275, 569, 284, 562, 2064, 11366, 346, 301, 291, 442]}
