{"line_number": 189, "line_type": "original", "code": "                        f0 = computeObjectiveValue(x0);", "entropy": 1.6787109375, "is_bug_line": true, "sus_score": 0.52099, "per_token_entropy": [8.4296875, 7.95703125, 0.422119140625, 0.380615234375, 1.1611328125, 0.0017213821411132812, 8.165836334228516e-05, 0.00406646728515625, 0.043243408203125, 0.06683349609375, 0.00922393798828125], "tokens": [6797, 296, 34, 280, 7596, 33312, 882, 26, 106, 34, 293]}
{"line_number": 189, "line_type": "generated", "code": "\n                    return x1;\n                case LEFT_SIDE:\n                    if (inverted) {\n                        return x1;\n                    }\n                    break;\n                case RIGHT_SIDE:\n                    if (!inverted) {\n                        return x1;\n                    }\n                    break;\n                case BE", "entropy": 0.0504150390625, "is_bug_line": true, "sus_score": 0.52099, "per_token_entropy": [0.380859375, 0.57275390625, 0.053466796875, 0.08203125, 0.002033233642578125, 0.0278472900390625, 0.0106964111328125, 0.0256500244140625, 5.364418029785156e-06, 1.3589859008789062e-05, 0.0007367134094238281, 0.176513671875, 0.04541015625, 0.18017578125, 0.032440185546875, 0.01666259765625, 0.0015010833740234375, 0.34814453125, 0.22900390625, 0.05621337890625, 0.102294921875, 0.0024261474609375, 0.007083892822265625, 0.0003216266632080078, 0.0975341796875, 0.10845947265625, 0.0006422996520996094, 0.0013933181762695312, 0.0002837181091308594, 0.0004935264587402344, 1.9073486328125e-06, 6.556510925292969e-06, 0.00010466575622558594, 0.00577545166015625, 0.001239776611328125, 0.0115814208984375, 0.00016546249389648438, 0.0002282857894897461, 0.0015192031860351562, 0.0038318634033203125, 0.0005917549133300781, 0.0010633468627929688, 0.0004811286926269531, 3.933906555175781e-05, 0.0008788108825683594, 2.8848648071289062e-05, 0.00501251220703125, 0.0013189315795898438, 9.036064147949219e-05, 0.0020294189453125, 0.0150909423828125, 0.006237030029296875], "tokens": [528, 442, 816, 35, 45, 400, 1135, 17789, 81, 25590, 44, 528, 415, 308, 47910, 27, 301, 715, 442, 816, 35, 45, 528, 320, 528, 1626, 45, 400, 1135, 20169, 81, 25590, 44, 528, 415, 1429, 47910, 27, 301, 715, 442, 816, 35, 45, 528, 320, 528, 1626, 45, 400, 1135, 6744]}
{"line_number": 188, "line_type": "original", "code": "                        x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol));", "entropy": 1.0166015625, "is_bug_line": true, "sus_score": 0.43239, "per_token_entropy": [9.1953125, 5.90234375, 0.78662109375, 0.0479736328125, 4.3984375, 0.0721435546875, 0.873046875, 1.1865234375, 0.0139312744140625, 0.032135009765625, 0.031036376953125, 0.27587890625, 0.0204620361328125, 0.0107269287109375, 0.08489990234375, 3.4296875, 3.853515625, 7.939338684082031e-05, 0.0012664794921875, 1.64453125, 0.0025787353515625, 1.6376953125, 7.271766662597656e-06, 0.0762939453125, 0.01433563232421875, 2.5391578674316406e-05, 5.698204040527344e-05, 0.0167388916015625, 0.0020084381103515625, 0.00849151611328125, 0.2060546875, 0.0204925537109375, 0.69287109375, 0.0272064208984375], "tokens": [6797, 816, 34, 280, 225, 34, 32, 39, 319, 308, 106, 34, 474, 816, 35, 429, 15938, 5717, 32, 1449, 26, 2051, 362, 319, 15938, 5717, 32, 3596, 26, 106, 35, 471, 35012, 876]}
{"line_number": 188, "line_type": "generated", "code": "\n                    case ANY_SIDE:\n                        return x1;\n                    case LEFT_SIDE:\n                        if (inverted) {\n                            return x1;\n                        }\n                        break;\n                    case RIGHT_SIDE:\n                        if (!inverted) {\n                            return x1;\n                        }", "entropy": 0.06976318359375, "is_bug_line": true, "sus_score": 0.43239, "per_token_entropy": [0.55615234375, 0.65576171875, 0.44287109375, 0.00017762184143066406, 0.00011527538299560547, 0.007305145263671875, 0.268798828125, 0.1605224609375, 0.043792724609375, 0.0997314453125, 0.00081634521484375, 0.28515625, 0.0240325927734375, 0.054229736328125, 1.728534698486328e-05, 3.802776336669922e-05, 0.0006031990051269531, 0.033905029296875, 0.09747314453125, 0.1890869140625, 0.037689208984375, 0.00991058349609375, 0.0008525848388671875, 0.0261688232421875, 0.138427734375, 0.049224853515625, 0.179931640625, 0.001857757568359375, 0.00363922119140625, 0.0003457069396972656, 0.051910400390625, 0.1529541015625, 0.00044083595275878906, 0.0244293212890625, 0.0009503364562988281, 0.0009784698486328125, 3.2186508178710938e-06, 2.7418136596679688e-06, 5.7816505432128906e-05, 0.002758026123046875, 0.001323699951171875, 0.0183868408203125, 0.00016939640045166016, 0.000213623046875, 0.0005192756652832031, 0.001468658447265625, 0.00033664703369140625, 0.00015413761138916016, 0.0006427764892578125, 5.555152893066406e-05, 0.0007791519165039062, 2.288818359375e-05], "tokens": [528, 1135, 2964, 81, 25590, 44, 715, 442, 816, 35, 45, 528, 1135, 17789, 81, 25590, 44, 715, 415, 308, 47910, 27, 301, 1014, 442, 816, 35, 45, 715, 320, 715, 1626, 45, 528, 1135, 20169, 81, 25590, 44, 715, 415, 1429, 47910, 27, 301, 1014, 442, 816, 35, 45, 715, 320]}
{"line_number": 160, "line_type": "original", "code": "            final double x = x1 - ((f1 * (x1 - x0)) / (f1 - f0));", "entropy": 1.103515625, "is_bug_line": false, "sus_score": 0.42348, "per_token_entropy": [5.08984375, 8.0859375, 0.07891845703125, 1.80859375, 1.6826171875, 0.58544921875, 0.82080078125, 3.025390625, 4.0859375, 1.525390625, 0.325439453125, 1.6494140625, 0.2724609375, 0.06329345703125, 0.415771484375, 0.0065155029296875, 0.006542205810546875, 0.00836181640625, 0.085693359375, 0.005458831787109375, 0.057403564453125, 0.018096923828125, 0.0679931640625, 0.01131439208984375, 0.005130767822265625, 0.00048804283142089844, 0.0110931396484375], "tokens": [1468, 1158, 2064, 816, 280, 816, 35, 429, 1833, 88, 35, 319, 308, 106, 35, 429, 816, 34, 490, 517, 308, 88, 35, 429, 296, 34, 876]}
{"line_number": 160, "line_type": "generated", "code": "\n                        return x1;\n                    }\n                    break;\n                case RIGHT_SIDE:\n                    if (!inverted) {", "entropy": 0.1431884765625, "is_bug_line": false, "sus_score": 0.42348, "per_token_entropy": [0.376708984375, 0.2108154296875, 0.2012939453125, 0.6953125, 0.016082763671875, 0.060455322265625, 0.0013933181762695312, 0.70849609375, 0.7890625, 0.0005617141723632812, 0.002025604248046875, 0.00354766845703125, 0.01959228515625, 3.6954879760742188e-06, 7.152557373046875e-07, 0.00020265579223632812, 0.00189971923828125, 0.0024871826171875, 0.055633544921875, 0.0012769699096679688, 0.0010175704956054688, 0.001873016357421875], "tokens": [715, 442, 816, 35, 45, 528, 320, 528, 1626, 45, 400, 1135, 20169, 81, 25590, 44, 528, 415, 1429, 47910, 27, 301]}
{"line_number": 150, "line_type": "original", "code": "        final double atol = getAbsoluteAccuracy();", "entropy": 1.7158203125, "is_bug_line": false, "sus_score": 0.42103, "per_token_entropy": [6.78125, 4.328125, 0.044769287109375, 4.1875, 0.01837158203125, 0.058807373046875, 0.001056671142578125, 7.367134094238281e-05, 0.025604248046875], "tokens": [351, 1158, 2064, 35012, 280, 622, 12043, 26201, 473]}
{"line_number": 150, "line_type": "generated", "code": "\n\n            // If the interval has become inverted, switch back to the original\n            // interval and perform a bisection step.\n            if (inverted) {\n                x0 = 0.5 * (x0 + x1 - FastMath.max(", "entropy": 0.436279296875, "is_bug_line": false, "sus_score": 0.42103, "per_token_entropy": [0.307373046875, 0.06231689453125, 0.935546875, 0.369384765625, 1.283203125, 1.0771484375, 0.303955078125, 0.292724609375, 0.07861328125, 2.14453125, 1.087890625, 0.432373046875, 1.1474609375, 1.1748046875, 0.237548828125, 0.0005860328674316406, 1.1708984375, 1.1826171875, 2.62890625, 0.84716796875, 0.9111328125, 0.1044921875, 3.1948089599609375e-05, 0.6171875, 0.358642578125, 0.323974609375, 0.0413818359375, 0.0218963623046875, 0.0321044921875, 0.059600830078125, 0.0009479522705078125, 0.02215576171875, 0.5, 0.302734375, 0.0134429931640625, 1.3984375, 0.00662994384765625, 0.0012140274047851562, 0.00295257568359375, 0.0005078315734863281, 0.0025272369384765625, 0.2296142578125, 0.1689453125, 0.002643585205078125, 0.018768310546875, 0.061309814453125, 0.70068359375, 0.0165557861328125, 1.239776611328125e-05, 1.9073486328125e-05, 0.0030574798583984375, 0.0004372596740722656], "tokens": [1064, 434, 1670, 322, 7898, 1401, 9555, 37592, 30, 3578, 1751, 372, 322, 4707, 324, 434, 7898, 461, 4436, 312, 323, 1125, 382, 3111, 32, 324, 415, 308, 47910, 27, 301, 400, 816, 34, 280, 225, 34, 32, 39, 319, 308, 106, 34, 474, 816, 35, 429, 15938, 5717, 32, 1449, 26]}
{"line_number": 237, "line_type": "original", "code": "                switch (allowed) {", "entropy": 2.3203125, "is_bug_line": false, "sus_score": 0.28789, "per_token_entropy": [8.9609375, 4.49609375, 0.0095672607421875, 0.422607421875, 0.00199127197265625, 0.032318115234375], "tokens": [2071, 3578, 308, 11327, 27, 301]}
{"line_number": 237, "line_type": "generated", "code": "\n    /**\n     * Find the root of a univariate real function, starting with an\n     * initial approximation, using the {@link IllinoisSolver\n     * <em>Illinois</em>} method.\n     *\n     * @param f Function.\n     *", "entropy": 0.4384765625, "is_bug_line": false, "sus_score": 0.28789, "per_token_entropy": [1.3955078125, 0.224609375, 0.54736328125, 0.00025081634521484375, 4.41015625, 1.4384765625, 0.8583984375, 0.33544921875, 0.35498046875, 1.16796875, 0.001911163330078125, 0.12139892578125, 0.0169525146484375, 1.1640625, 0.38818359375, 0.9833984375, 0.03741455078125, 0.53369140625, 7.95125961303711e-05, 0.0926513671875, 1.10546875, 1.015625, 0.203125, 0.3310546875, 1.3212890625, 0.0099945068359375, 0.4970703125, 0.0017642974853515625, 0.00701141357421875, 0.380859375, 0.0002574920654296875, 0.040191650390625, 0.0002887248992919922, 3.349781036376953e-05, 0.005344390869140625, 0.002582550048828125, 0.00519561767578125, 1.2278556823730469e-05, 0.1710205078125, 0.54248046875, 0.07867431640625, 0.271484375, 0.002124786376953125, 0.45654296875, 0.00030922889709472656, 0.1981201171875, 0.00820159912109375, 1.064453125, 0.57470703125, 0.420654296875, 0.004299163818359375, 2.753734588623047e-05], "tokens": [284, 1022, 275, 319, 7477, 322, 3051, 432, 312, 707, 27623, 4011, 667, 30, 8049, 623, 600, 275, 319, 2815, 39431, 30, 1471, 322, 3088, 1204, 41643, 44094, 17766, 275, 319, 333, 405, 48, 30479, 44094, 377, 405, 14649, 1411, 32, 275, 319, 275, 319, 477, 753, 296, 4540, 32, 275, 319]}
