{"line_number": 184, "line_type": "original", "code": "        long result = Math.round(binomialCoefficientDouble(n, k));", "entropy": 1.4140625, "is_bug_line": true, "sus_score": 0.56158, "per_token_entropy": [5.734375, 4.84375, 0.5478515625, 0.1497802734375, 3.451171875, 0.3876953125, 0.433837890625, 0.10931396484375, 4.6171875, 0.108642578125, 0.14599609375, 1.466796875, 1.6513671875, 0.150390625, 0.0179443359375, 0.1494140625, 0.07733154296875], "tokens": [351, 1946, 1056, 280, 4175, 32, 1497, 26, 1771, 12563, 8973, 4075, 26, 96, 30, 831, 876]}
{"line_number": 184, "line_type": "generated", "code": "\n        // Use symmetry for large k\n        // We use the formula\n        // (n choose k) = n! / (n-k)! / k!\n        // (n choose k) == ((n-k+1)*...*n)", "entropy": 0.1043701171875, "is_bug_line": true, "sus_score": 0.56158, "per_token_entropy": [0.265380859375, 1.96875, 0.4560546875, 0.00296783447265625, 0.0006198883056640625, 0.004695892333984375, 0.00948333740234375, 0.0186920166015625, 0.67724609375, 0.806640625, 0.72509765625, 0.1204833984375, 0.006328582763671875, 0.0703125, 0.04150390625, 0.0010633468627929688, 0.01373291015625, 0.0008597373962402344, 0.0005970001220703125, 0.0003688335418701172, 0.0004038810729980469, 0.0157623291015625, 0.0218353271484375, 0.0160064697265625, 0.00208282470703125, 0.003025054931640625, 0.0015764236450195312, 0.0025424957275390625, 0.00019168853759765625, 0.00035190582275390625, 0.0005183219909667969, 0.0002932548522949219, 0.00716400146484375, 0.0238037109375, 0.01192474365234375, 0.0267791748046875, 0.0002472400665283203, 0.0004527568817138672, 0.0001188516616821289, 0.00031447410583496094, 0.041595458984375, 0.04779052734375, 0.0003592967987060547, 0.0008411407470703125, 0.0006914138793945312, 0.00025725364685058594, 5.078315734863281e-05, 0.005565643310546875, 0.0010089874267578125, 0.0012912750244140625, 0.0001455545425415039, 0.0007152557373046875], "tokens": [291, 434, 4417, 5013, 27261, 436, 7622, 831, 291, 434, 2688, 793, 322, 17568, 291, 434, 308, 96, 9173, 831, 27, 280, 310, 19, 517, 308, 96, 31, 93, 29511, 517, 831, 19, 291, 434, 308, 96, 9173, 831, 27, 610, 1833, 96, 31, 93, 29, 35, 4586, 1179, 28, 96, 27]}
{"line_number": 208, "line_type": "original", "code": "        return result;", "entropy": 2.748046875, "is_bug_line": true, "sus_score": 0.3119, "per_token_entropy": [4.8984375, 1.455078125, 4.5390625, 0.0975341796875], "tokens": [351, 442, 1056, 45]}
{"line_number": 208, "line_type": "generated", "code": "\n    }", "entropy": 0.260986328125, "is_bug_line": true, "sus_score": 0.3119, "per_token_entropy": [0.5146484375, 0.007282257080078125], "tokens": [284, 320]}
{"line_number": 182, "line_type": "original", "code": "            return n;", "entropy": 3.36328125, "is_bug_line": false, "sus_score": 0.3089, "per_token_entropy": [5.4921875, 2.150390625, 3.75390625, 2.052734375], "tokens": [1468, 442, 310, 45]}
{"line_number": 182, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Returns the <a\n     * href=\"http://mathworld.wolfram.com/StirlingNumber2.html\"> Stirling\n     * numbers of the second kind</a>, \"<code>S(n", "entropy": 0.27099609375, "is_bug_line": false, "sus_score": 0.3089, "per_token_entropy": [1.4765625, 0.11871337890625, 0.890625, 0.251708984375, 0.04937744140625, 0.0004763603210449219, 0.389404296875, 0.8056640625, 2.111328125, 0.10626220703125, 0.470458984375, 0.0236968994140625, 0.00045752525329589844, 0.00772857666015625, 0.0020160675048828125, 0.0003285408020019531, 0.09930419921875, 0.00019288063049316406, 5.602836608886719e-06, 2.6941299438476562e-05, 4.982948303222656e-05, 2.753734588623047e-05, 0.00020051002502441406, 4.1365623474121094e-05, 0.00010406970977783203, 2.23828125, 0.0034046173095703125, 5.173683166503906e-05, 0.23388671875, 0.97021484375, 0.1060791015625, 2.110004425048828e-05, 0.0013141632080078125, 0.4267578125, 0.0007648468017578125, 4.696846008300781e-05, 1.220703125, 2.562999725341797e-05, 1.2900390625, 0.041717529296875, 0.003238677978515625, 0.00695037841796875, 0.003208160400390625, 0.0806884765625, 0.00046181678771972656, 0.381591796875, 0.10260009765625, 0.0163116455078125, 0.02325439453125, 0.07330322265625, 0.040771484375, 0.019805908203125], "tokens": [284, 320, 446, 1022, 275, 319, 3759, 322, 333, 83, 275, 319, 976, 347, 525, 555, 3812, 5860, 32, 105, 362, 43579, 32, 508, 33, 501, 476, 2920, 1918, 36, 32, 916, 413, 1258, 476, 2920, 275, 319, 7515, 432, 322, 3100, 6186, 377, 83, 2717, 3778, 687, 48, 69, 26, 96]}
{"line_number": 181, "line_type": "original", "code": "        if ((k == 1) || (k == n - 1)) {", "entropy": 1.0908203125, "is_bug_line": false, "sus_score": 0.28359, "per_token_entropy": [3.462890625, 2.16015625, 2.3828125, 4.109375, 0.52001953125, 0.59423828125, 4.171875, 0.049957275390625, 0.0882568359375, 0.0124053955078125, 0.2191162109375, 0.0087127685546875, 0.1099853515625, 1.5322265625, 0.04132080078125, 0.0014820098876953125, 0.0810546875, 0.0888671875], "tokens": [351, 415, 1833, 93, 610, 225, 35, 27, 1276, 308, 93, 610, 310, 429, 225, 35, 490, 301]}
{"line_number": 181, "line_type": "generated", "code": "\n        if (n < k) {\n            throw new IllegalArgumentException(\n                \"must have n >= k for binomial coefficient (n,k)\");\n        }\n        if (n < 0) {\n            throw new IllegalArgumentException(\n                \"must have n >= ", "entropy": 0.10382080078125, "is_bug_line": false, "sus_score": 0.28359, "per_token_entropy": [1.4501953125, 2.10546875, 0.1611328125, 0.3916015625, 0.51025390625, 0.4013671875, 0.0062713623046875, 0.01332855224609375, 0.043548583984375, 0.022216796875, 0.001987457275390625, 0.0117340087890625, 0.038787841796875, 0.0325927734375, 0.0010538101196289062, 0.00817108154296875, 8.189678192138672e-05, 0.0033397674560546875, 0.006683349609375, 0.0010013580322265625, 0.001499176025390625, 0.0013570785522460938, 0.00037097930908203125, 0.0016813278198242188, 0.01216888427734375, 0.0007052421569824219, 0.0005488395690917969, 0.0013914108276367188, 0.0025043487548828125, 0.022125244140625, 0.000598907470703125, 0.06219482421875, 0.033935546875, 0.00905609130859375, 0.0054473876953125, 0.01320648193359375, 0.0005097389221191406, 0.001132965087890625, 0.00072479248046875, 0.0005207061767578125, 0.0027923583984375, 0.0012483596801757812, 0.0005135536193847656, 0.0004286766052246094, 0.0024204254150390625, 0.00272369384765625, 3.886222839355469e-05, 0.00060272216796875, 1.4543533325195312e-05, 0.0006418228149414062, 0.0018405914306640625, 0.002132415771484375], "tokens": [291, 415, 308, 96, 333, 831, 27, 301, 324, 1422, 537, 12137, 26, 400, 313, 12172, 1159, 310, 2377, 831, 436, 7395, 12563, 17134, 308, 96, 30, 93, 13372, 291, 320, 291, 415, 308, 96, 333, 225, 34, 27, 301, 324, 1422, 537, 12137, 26, 400, 313, 12172, 1159, 310, 2377, 225]}
{"line_number": 95, "line_type": "original", "code": "        return addAndCheck(a, b, \"overflow: add\");", "entropy": 0.732421875, "is_bug_line": false, "sus_score": 0.23916, "per_token_entropy": [4.40625, 3.07421875, 1.23046875, 0.00666046142578125, 0.001979827880859375, 0.0601806640625, 0.1856689453125, 0.12255859375, 0.0670166015625, 0.0926513671875, 0.8359375, 0.61865234375, 0.1654052734375, 0.01190948486328125, 0.101318359375], "tokens": [351, 442, 1015, 2185, 2140, 26, 83, 30, 323, 30, 313, 9642, 44, 1015, 724]}
{"line_number": 95, "line_type": "generated", "code": "\n     * \n     * @param a an addend\n     * @param b an addend\n     * @return the sum <code>a+b</code>\n     * @throws ArithmeticException if the result can not be represented as an\n     *         long", "entropy": 0.13525390625, "is_bug_line": false, "sus_score": 0.23916, "per_token_entropy": [0.873046875, 0.57666015625, 2.455078125, 0.09674072265625, 0.31005859375, 0.17529296875, 0.51416015625, 0.29541015625, 0.04852294921875, 0.0007429122924804688, 0.01505279541015625, 0.00018990039825439453, 0.0006747245788574219, 0.01096343994140625, 0.0196685791015625, 0.0022563934326171875, 0.0008597373962402344, 0.004909515380859375, 0.01375579833984375, 0.0012655258178710938, 0.00078582763671875, 0.66650390625, 0.04998779296875, 0.2298583984375, 0.026885986328125, 0.00223541259765625, 0.0009908676147460938, 0.00701141357421875, 0.04193115234375, 0.00106048583984375, 0.0014142990112304688, 0.0003037452697753906, 0.01158905029296875, 0.089111328125, 0.0228424072265625, 0.00249481201171875, 0.1151123046875, 0.007404327392578125, 5.078315734863281e-05, 0.0037670135498046875, 0.003170013427734375, 0.0013637542724609375, 0.004535675048828125, 0.0003190040588378906, 0.0004448890686035156, 0.0014524459838867188, 0.01020050048828125, 0.04278564453125, 0.0345458984375, 0.0013189315795898438, 0.00502777099609375, 0.233154296875], "tokens": [275, 319, 5384, 319, 477, 753, 312, 600, 1015, 416, 275, 319, 477, 753, 323, 600, 1015, 416, 275, 319, 477, 601, 322, 3632, 333, 687, 48, 83, 29, 84, 377, 687, 48, 275, 319, 477, 5117, 47721, 984, 415, 322, 1056, 883, 646, 526, 17718, 619, 600, 275, 319, 263, 1946]}
