{"line_number": 1136, "line_type": "original", "code": "            for (int i = 0; i < j; i += 4) {", "entropy": 1.0390625, "is_bug_line": false, "sus_score": 0.4164, "per_token_entropy": [4.53125, 1.587890625, 0.0029506683349609375, 0.006755828857421875, 3.1796875, 0.26953125, 0.11956787109375, 0.0156707763671875, 0.006519317626953125, 0.00299835205078125, 0.0016126632690429688, 7.3515625, 0.266357421875, 1.9169921875, 0.167236328125, 0.125732421875, 0.1654052734375, 0.0090179443359375, 0.009857177734375], "tokens": [1468, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 594, 45, 595, 1454, 225, 38, 27, 301]}
{"line_number": 1136, "line_type": "generated", "code": "\n            final double mid = 0.5 * (left + right);\n            work[lowerStart + index] = mid;\n            work[upperStart + index] = mid;\n            dqd(index, index + n);\n            if (Double.", "entropy": 0.281005859375, "is_bug_line": false, "sus_score": 0.4164, "per_token_entropy": [0.1741943359375, 1.3974609375, 0.140869140625, 1.158203125, 0.52783203125, 0.362060546875, 0.0025196075439453125, 0.00036263465881347656, 0.0023365020751953125, 0.0034427642822265625, 0.0084381103515625, 0.09552001953125, 0.0018739700317382812, 0.00372314453125, 0.0027980804443359375, 0.08746337890625, 1.1845703125, 0.00921630859375, 1.3369140625, 0.0033016204833984375, 0.058319091796875, 0.1868896484375, 0.1678466796875, 0.0904541015625, 0.04296875, 0.007549285888671875, 0.10150146484375, 0.72216796875, 0.0011243820190429688, 0.0863037109375, 0.0002841949462890625, 0.002872467041015625, 0.007598876953125, 0.06097412109375, 0.0006113052368164062, 0.159423828125, 0.01070404052734375, 0.1971435546875, 1.1767578125, 0.1663818359375, 0.052001953125, 0.156494140625, 0.0173187255859375, 0.39599609375, 0.0579833984375, 0.2298583984375, 0.25146484375, 0.390380859375, 1.48828125, 0.1241455078125, 1.689453125, 0.00989532470703125], "tokens": [324, 1158, 2064, 11906, 280, 225, 34, 32, 39, 319, 308, 1873, 474, 2091, 293, 324, 1389, 77, 5729, 2130, 474, 1650, 79, 280, 11906, 45, 324, 1389, 77, 7607, 2130, 474, 1650, 79, 280, 11906, 45, 324, 343, 24103, 26, 1055, 30, 1650, 474, 310, 293, 324, 415, 308, 4075, 32]}
{"line_number": 1135, "line_type": "original", "code": "            int j = 4 * n - 1;", "entropy": 1.7080078125, "is_bug_line": true, "sus_score": 0.41635, "per_token_entropy": [4.97265625, 6.1875, 2.015625, 0.1995849609375, 1.314453125, 2.986328125, 0.08807373046875, 1.8154296875, 0.48095703125, 0.066162109375, 0.2978515625, 0.067626953125], "tokens": [1468, 629, 594, 280, 225, 38, 319, 310, 429, 225, 35, 45]}
{"line_number": 1135, "line_type": "generated", "code": "\n            }\n\n            // bisect the range and update the eigenvalue range\n            final double midpoint = 0.5 * (left + right);\n            dqd(index, index + n, midpoint);\n            double mid = work[upperStart +", "entropy": 0.57470703125, "is_bug_line": true, "sus_score": 0.41635, "per_token_entropy": [0.06536865234375, 0.048858642578125, 0.212158203125, 0.5234375, 2.560546875, 0.1707763671875, 1.1279296875, 1.609375, 1.228515625, 2.486328125, 1.123046875, 1.4609375, 0.131103515625, 2.115234375, 0.09625244140625, 0.12139892578125, 0.0212554931640625, 0.47216796875, 1.6220703125, 0.0277557373046875, 0.2646484375, 0.0012187957763671875, 2.288818359375e-05, 0.0013399124145507812, 0.0017461776733398438, 0.0066070556640625, 0.120361328125, 0.0015230178833007812, 0.002529144287109375, 0.0014209747314453125, 0.0574951171875, 2.677734375, 0.284912109375, 0.0293121337890625, 0.0999755859375, 0.04998779296875, 0.53369140625, 0.11053466796875, 0.12091064453125, 1.630859375, 0.1993408203125, 0.0001277923583984375, 0.088134765625, 0.2064208984375, 1.373046875, 1.3505859375, 1.3603515625, 0.74609375, 0.0218505859375, 1.2998046875, 0.00021970272064208984, 0.01216888427734375], "tokens": [324, 320, 1064, 434, 323, 46975, 322, 2155, 461, 1974, 322, 30880, 853, 2155, 324, 1158, 2064, 11906, 1493, 280, 225, 34, 32, 39, 319, 308, 1873, 474, 2091, 293, 324, 343, 24103, 26, 1055, 30, 1650, 474, 310, 30, 11906, 1493, 293, 324, 2064, 11906, 280, 1389, 77, 7607, 2130, 474]}
{"line_number": 1137, "line_type": "original", "code": "                for (int k = 0; k < 4; k += step) {", "entropy": 1.2080078125, "is_bug_line": false, "sus_score": 0.4148, "per_token_entropy": [7.3203125, 4.63671875, 0.004459381103515625, 0.014312744140625, 1.412109375, 0.00885772705078125, 0.25732421875, 0.06005859375, 0.0117645263671875, 0.002910614013671875, 0.0026702880859375, 2.076171875, 0.429931640625, 0.6376953125, 2.7109375, 1.185546875, 2.13671875, 0.03131103515625, 0.0181884765625], "tokens": [2071, 436, 308, 410, 831, 280, 225, 34, 45, 831, 333, 225, 38, 45, 831, 1454, 3111, 27, 301]}
{"line_number": 1137, "line_type": "generated", "code": "\n            final double mid = 0.5 * (left + right);\n            work[index + k] = mid;\n            work[4 * (n - 1) + k] = mid;\n            work[5 * (n - 1", "entropy": 0.3759765625, "is_bug_line": false, "sus_score": 0.4148, "per_token_entropy": [0.1463623046875, 1.12890625, 0.0926513671875, 1.43359375, 0.4521484375, 0.389892578125, 0.00255584716796875, 0.00112152099609375, 0.002956390380859375, 0.00386810302734375, 0.0082855224609375, 0.09857177734375, 0.0022678375244140625, 0.00379180908203125, 0.003208160400390625, 0.1265869140625, 1.1416015625, 0.0112152099609375, 2.291015625, 0.2265625, 0.9658203125, 0.0814208984375, 0.03192138671875, 0.029052734375, 0.0085601806640625, 0.302001953125, 1.357421875, 0.009552001953125, 1.58203125, 0.01117706298828125, 1.310546875, 0.50341796875, 0.06488037109375, 0.01132965087890625, 0.00629425048828125, 0.0025424957275390625, 0.00736236572265625, 0.94482421875, 0.0322265625, 0.034393310546875, 1.2783203125, 0.044158935546875, 0.494873046875, 1.5986328125, 0.01561737060546875, 1.16015625, 0.0015325546264648438, 0.070556640625, 0.0033626556396484375, 0.0032215118408203125, 0.0006895065307617188, 0.006137847900390625], "tokens": [324, 1158, 2064, 11906, 280, 225, 34, 32, 39, 319, 308, 1873, 474, 2091, 293, 324, 1389, 77, 1055, 474, 831, 79, 280, 11906, 45, 324, 1389, 77, 38, 319, 308, 96, 429, 225, 35, 27, 474, 831, 79, 280, 11906, 45, 324, 1389, 77, 39, 319, 308, 96, 429, 225, 35]}
{"line_number": 1203, "line_type": "original", "code": "            if ((range < absoluteTolerance) ||", "entropy": 2.515625, "is_bug_line": false, "sus_score": 0.38127, "per_token_entropy": [7.48828125, 2.9375, 3.759765625, 7.60546875, 0.10186767578125, 0.73046875, 0.0015745162963867188, 0.00876617431640625, 0.0135040283203125], "tokens": [1468, 415, 1833, 3585, 333, 7976, 26265, 27, 1276]}
{"line_number": 1203, "line_type": "generated", "code": "\n    private void decompose(final double lambda, final int index, final int n) {\n\n        // compute the shift\n        double shift = -lambda;\n        for (int i = 0; i < n; ++i) {\n            shift = Math", "entropy": 0.373779296875, "is_bug_line": false, "sus_score": 0.38127, "per_token_entropy": [0.1536865234375, 0.08209228515625, 0.0255584716796875, 0.990234375, 0.00450897216796875, 1.123046875, 0.11639404296875, 0.0134735107421875, 0.01393890380859375, 0.01103973388671875, 0.06842041015625, 0.00569915771484375, 0.0035858154296875, 0.0033206939697265625, 0.0265350341796875, 0.0003285408020019531, 0.0005402565002441406, 0.01171112060546875, 0.019775390625, 0.309814453125, 0.42041015625, 2.5, 1.078125, 3.140625, 1.15234375, 0.7294921875, 1.162109375, 0.0926513671875, 2.60546875, 0.5107421875, 0.462890625, 0.088134765625, 0.46875, 0.0025691986083984375, 0.0019989013671875, 0.11834716796875, 0.0016613006591796875, 0.05999755859375, 0.0772705078125, 0.0021514892578125, 0.00235748291015625, 0.0031108856201171875, 0.06097412109375, 0.211181640625, 0.0147857666015625, 0.0009007453918457031, 0.0012464523315429688, 0.0040740966796875, 0.08587646484375, 0.326416015625, 0.9736328125, 0.093994140625], "tokens": [284, 945, 763, 409, 9307, 26, 3220, 2064, 9254, 30, 1158, 629, 1650, 30, 1158, 629, 310, 27, 301, 584, 434, 7596, 322, 5733, 291, 2064, 5733, 280, 429, 5962, 45, 291, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 310, 45, 3311, 91, 27, 301, 324, 5733, 280, 4175]}
{"line_number": 645, "line_type": "original", "code": "                final double oneFourth     = 0.25 * (3 * range[0] + range[1]);", "entropy": 1.1240234375, "is_bug_line": false, "sus_score": 0.38014, "per_token_entropy": [8.2734375, 2.640625, 1.029296875, 3.11328125, 0.43505859375, 0.0023937225341796875, 4.47265625, 0.00022780895233154297, 0.374755859375, 0.071044921875, 0.00121307373046875, 0.06060791015625, 0.0014448165893554688, 0.050567626953125, 0.263671875, 6.0546875, 0.1602783203125, 1.583984375, 0.036285400390625, 0.0968017578125, 0.0007719993591308594, 0.437255859375, 0.0628662109375, 0.00041174888610839844, 0.001621246337890625, 0.01404571533203125], "tokens": [2071, 1158, 2064, 1591, 19630, 349, 262, 280, 225, 34, 32, 36, 39, 319, 308, 37, 319, 2155, 77, 34, 79, 474, 2155, 77, 35, 1989]}
{"line_number": 645, "line_type": "generated", "code": "\n        // add one-row blocks\n        int begin = 0;\n        for (int i = 0; i < nRows - 1; ++i) {\n            if (main[i]!= 0.0) {\n                list.", "entropy": 0.4873046875, "is_bug_line": false, "sus_score": 0.38014, "per_token_entropy": [0.2066650390625, 1.1494140625, 2.427734375, 2.708984375, 2.369140625, 1.14453125, 0.228759765625, 0.45556640625, 1.61328125, 1.572265625, 0.188232421875, 0.046173095703125, 0.0122833251953125, 0.007232666015625, 0.01168060302734375, 0.497314453125, 0.0111236572265625, 0.10687255859375, 0.6083984375, 0.0097808837890625, 0.0233917236328125, 0.1119384765625, 0.0139312744140625, 0.004863739013671875, 0.02911376953125, 2.783203125, 0.71728515625, 1.2412109375, 0.07269287109375, 0.094970703125, 0.005504608154296875, 0.060089111328125, 0.001544952392578125, 0.007061004638671875, 0.003818511962890625, 0.040618896484375, 0.294189453125, 0.11602783203125, 1.3115234375, 0.0299072265625, 0.174072265625, 0.2374267578125, 0.794921875, 0.2362060546875, 0.025634765625, 0.64111328125, 0.0018033981323242188, 0.08905029296875, 0.005584716796875, 0.0264892578125, 0.767578125, 0.00017523765563964844], "tokens": [291, 434, 1015, 1591, 31, 643, 9058, 291, 629, 4240, 280, 225, 34, 45, 291, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 310, 7252, 429, 225, 35, 45, 3311, 91, 27, 301, 324, 415, 308, 1831, 77, 91, 79, 863, 225, 34, 32, 34, 27, 301, 400, 1149, 32]}
