{"line_number": 327, "line_type": "original", "code": "                return (real == c.real) && (imaginary == c.imaginary);", "entropy": 0.9990234375, "is_bug_line": false, "sus_score": 0.56356, "per_token_entropy": [8.5390625, 2.35546875, 3.396484375, 1.0986328125, 0.3212890625, 1.7431640625, 0.15478515625, 0.09442138671875, 0.15087890625, 0.19580078125, 0.82763671875, 0.0128021240234375, 0.0004818439483642578, 0.0252838134765625, 0.00910186767578125, 0.00013709068298339844, 0.00518035888671875, 0.0001475811004638672, 0.04595947265625], "tokens": [2071, 442, 308, 4543, 610, 281, 32, 4543, 27, 962, 308, 17792, 3172, 610, 281, 32, 17792, 3172, 293]}
{"line_number": 327, "line_type": "generated", "code": "\n\n    /**\n     * Get a string representation of this complex number.\n     *\n     * @return a string representation of this complex number.\n     */\n    @Override\n    public String toString() {\n        if (isNaN) {\n            return \"NaN\";\n        }\n       ", "entropy": 0.14208984375, "is_bug_line": false, "sus_score": 0.56356, "per_token_entropy": [1.28125, 0.056610107421875, 0.0382080078125, 0.00014066696166992188, 2.8046875, 0.183349609375, 0.384765625, 0.10028076171875, 0.0134124755859375, 0.246826171875, 0.1072998046875, 0.0007610321044921875, 0.006275177001953125, 0.0235137939453125, 0.00047659873962402344, 0.5634765625, 1.6570091247558594e-05, 0.06964111328125, 0.005489349365234375, 0.1265869140625, 0.0045928955078125, 0.0116119384765625, 0.0021343231201171875, 0.0218658447265625, 0.0164947509765625, 0.010223388671875, 0.2030029296875, 0.0034732818603515625, 0.04254150390625, 0.00788116455078125, 0.03228759765625, 0.00014913082122802734, 0.0035305023193359375, 0.00339508056640625, 0.00222015380859375, 0.000568389892578125, 0.04864501953125, 0.00823211669921875, 0.055328369140625, 0.344970703125, 0.018829345703125, 0.01045989990234375, 0.038970947265625, 0.006298065185546875, 0.01197052001953125, 0.001880645751953125, 0.10595703125, 0.01296234130859375, 0.06622314453125, 0.004486083984375, 0.00040078163146972656, 0.27783203125], "tokens": [446, 1022, 275, 319, 1390, 312, 802, 10293, 432, 458, 8640, 1451, 32, 275, 319, 275, 319, 477, 601, 312, 802, 10293, 432, 458, 8640, 1451, 32, 275, 569, 284, 477, 1788, 284, 562, 892, 11345, 346, 301, 291, 415, 308, 26821, 27, 301, 324, 442, 313, 11126, 866, 291, 320, 291]}
{"line_number": 319, "line_type": "original", "code": "        if (this == other) {", "entropy": 2.583984375, "is_bug_line": false, "sus_score": 0.4558, "per_token_entropy": [2.056640625, 11.5078125, 1.458984375, 2.076171875, 1.326171875, 1.9736328125, 0.13525390625, 0.135986328125], "tokens": [351, 415, 308, 578, 610, 1604, 27, 301]}
{"line_number": 319, "line_type": "generated", "code": "\n     * {@code Double.NaN}.\n     *\n     * @return {@code true} if either (or both) real and imaginary parts\n     * of this complex number is {@code Double.NaN}; {@code false}\n     * otherwise\n     */\n   ", "entropy": 0.223876953125, "is_bug_line": false, "sus_score": 0.4558, "per_token_entropy": [1.033203125, 0.0267791748046875, 1.2607421875, 0.031494140625, 0.9658203125, 0.0003380775451660156, 0.240478515625, 0.07135009765625, 0.08502197265625, 0.00081634521484375, 0.08172607421875, 0.00014483928680419922, 0.01520538330078125, 0.0028705596923828125, 0.0283355712890625, 0.0003714561462402344, 0.0035247802734375, 0.0005068778991699219, 0.0304107666015625, 0.05047607421875, 0.493896484375, 0.001323699951171875, 6.318092346191406e-06, 0.0013093948364257812, 0.119140625, 0.1099853515625, 0.04669189453125, 5.841255187988281e-06, 0.36865234375, 0.95361328125, 5.233287811279297e-05, 0.3095703125, 0.037567138671875, 0.32275390625, 0.0125885009765625, 0.112060546875, 0.328857421875, 0.0007047653198242188, 0.325927734375, 3.4809112548828125e-05, 0.00211334228515625, 1.970703125, 0.1806640625, 0.00016105175018310547, 0.0008535385131835938, 0.0008673667907714844, 0.5, 0.0008144378662109375, 0.0220794677734375, 1.4208984375, 0.059326171875, 0.0072784423828125], "tokens": [275, 319, 3088, 687, 6934, 32, 11126, 4009, 275, 319, 275, 319, 477, 601, 3088, 687, 861, 111, 415, 3154, 308, 271, 4335, 27, 4011, 461, 17463, 3172, 8710, 275, 319, 432, 458, 8640, 1451, 438, 3088, 687, 6934, 32, 11126, 1255, 3088, 687, 901, 111, 275, 319, 5878, 275, 569, 284]}
{"line_number": 252, "line_type": "original", "code": "        if (isNaN || divisor.isNaN) {", "entropy": 1.3916015625, "is_bug_line": false, "sus_score": 0.40989, "per_token_entropy": [4.18359375, 2.4609375, 0.14453125, 2.3828125, 0.1944580078125, 2.37109375, 0.150390625, 0.0024013519287109375, 1.9873046875, 0.035491943359375], "tokens": [351, 415, 308, 26821, 1276, 33482, 32, 26821, 27, 301]}
{"line_number": 252, "line_type": "generated", "code": "\n    /**\n     * Returns a {@code Complex} whose value is\n     * <pre>\n     *    <code>\n     *    this<sup>exponent</sup>\n     *    </code>\n     * </pre>\n     *\n     * @param", "entropy": 0.1942138671875, "is_bug_line": false, "sus_score": 0.40989, "per_token_entropy": [0.93798828125, 0.12060546875, 0.05987548828125, 0.000118255615234375, 0.379638671875, 0.431884765625, 0.049957275390625, 0.01264190673828125, 0.0009698867797851562, 0.005939483642578125, 0.0008273124694824219, 0.003978729248046875, 0.0007166862487792969, 0.650390625, 0.0011320114135742188, 0.314453125, 1.42578125, 0.01157379150390625, 0.0012826919555664062, 6.866455078125e-05, 0.9248046875, 0.12286376953125, 0.0024547576904296875, 0.0224456787109375, 0.11822509765625, 0.0001342296600341797, 2.205078125, 0.40185546875, 0.1053466796875, 0.004161834716796875, 0.027679443359375, 0.88623046875, 0.001865386962890625, 0.0004115104675292969, 0.1102294921875, 0.1639404296875, 0.000270843505859375, 0.00439453125, 0.0163116455078125, 0.0005712509155273438, 0.063232421875, 0.00017201900482177734, 0.0015039443969726562, 0.00649261474609375, 8.940696716308594e-06, 0.0084991455078125, 0.0021839141845703125, 0.0004763603210449219, 0.367431640625, 0.00021409988403320312, 0.1220703125, 0.0013217926025390625], "tokens": [284, 1022, 275, 319, 3759, 312, 3088, 687, 19915, 111, 13696, 786, 438, 275, 319, 333, 1001, 48, 275, 319, 264, 333, 687, 48, 275, 319, 264, 458, 46, 5540, 48, 28323, 377, 5540, 48, 275, 319, 264, 576, 687, 48, 275, 319, 576, 1001, 48, 275, 319, 275, 319, 477, 753]}
{"line_number": 324, "line_type": "original", "code": "            if (c.isNaN) {", "entropy": 2.140625, "is_bug_line": false, "sus_score": 0.27847, "per_token_entropy": [6.953125, 3.580078125, 0.191162109375, 5.22265625, 0.35009765625, 0.356689453125, 0.3271484375, 0.1402587890625], "tokens": [1468, 415, 308, 85, 32, 26821, 27, 301]}
{"line_number": 324, "line_type": "generated", "code": "\n    public boolean isNaN() {\n        return isNaN;\n    }\n\n    /**\n     * Checks whether either or both parts of this complex number is\n     * infinite.\n     *\n     * @return {@code true} if either or both parts of this complex number", "entropy": 0.10284423828125, "is_bug_line": false, "sus_score": 0.27847, "per_token_entropy": [0.67333984375, 0.364013671875, 0.0302886962890625, 0.0024318695068359375, 0.00026607513427734375, 0.08819580078125, 0.0213775634765625, 0.10955810546875, 0.015716552734375, 0.321533203125, 0.00038051605224609375, 0.01488494873046875, 0.05072021484375, 0.001903533935546875, 0.2242431640625, 0.020904541015625, 0.018310546875, 0.00020837783813476562, 0.5615234375, 0.046722412109375, 0.57470703125, 0.127685546875, 0.0004680156707763672, 0.00528717041015625, 0.0005002021789550781, 0.017578125, 0.0072479248046875, 0.0031280517578125, 0.07415771484375, 0.48046875, 2.6226043701171875e-05, 0.08648681640625, 0.10699462890625, 0.0281219482421875, 3.254413604736328e-05, 0.16845703125, 7.56978988647461e-05, 0.0085296630859375, 0.0012044906616210938, 0.64306640625, 0.0001806020736694336, 0.005390167236328125, 0.0005159378051757812, 0.0132293701171875, 0.1507568359375, 0.0921630859375, 0.0007753372192382812, 0.01140594482421875, 0.0013456344604492188, 0.01360321044921875, 0.0221710205078125, 0.134521484375], "tokens": [284, 562, 1905, 438, 11126, 346, 301, 291, 442, 438, 11126, 45, 284, 320, 446, 1022, 275, 319, 17279, 4946, 3154, 556, 4335, 8710, 432, 458, 8640, 1451, 438, 275, 319, 20280, 32, 275, 319, 275, 319, 477, 601, 3088, 687, 861, 111, 415, 3154, 556, 4335, 8710, 432, 458, 8640, 1451]}
{"line_number": 364, "line_type": "original", "code": "        return real;", "entropy": 4.91015625, "is_bug_line": false, "sus_score": 0.26414, "per_token_entropy": [4.71875, 2.486328125, 10.109375, 2.328125], "tokens": [351, 442, 4011, 45]}
{"line_number": 364, "line_type": "generated", "code": "\n     */\n    public Complex multiply(Complex factor) {\n        MathUtils.checkNotNull(factor);\n        if (isNaN || factor.isNaN) {\n            return NaN;\n        }\n        if (isInfinite || factor.isInfinite) {\n            return INF;\n       ", "entropy": 0.1302490234375, "is_bug_line": false, "sus_score": 0.26414, "per_token_entropy": [1.1337890625, 0.17724609375, 0.034637451171875, 0.11285400390625, 0.0293731689453125, 0.021759033203125, 0.001544952392578125, 0.1988525390625, 0.0015649795532226562, 0.2271728515625, 0.1622314453125, 0.317626953125, 0.239501953125, 0.0263214111328125, 6.651878356933594e-05, 0.0027370452880859375, 8.130073547363281e-05, 0.00371551513671875, 0.0078277587890625, 0.385986328125, 0.3212890625, 0.066162109375, 0.13134765625, 0.012176513671875, 0.0139312744140625, 0.0001417398452758789, 4.1604042053222656e-05, 0.246337890625, 0.0028171539306640625, 0.0194549560546875, 0.0293426513671875, 0.030609130859375, 0.0008983612060546875, 0.02398681640625, 0.0010557174682617188, 0.417724609375, 0.54541015625, 0.06890869140625, 0.11102294921875, 7.915496826171875e-05, 0.2154541015625, 0.004718780517578125, 0.000774383544921875, 0.0003190040588378906, 8.344650268554688e-07, 0.035736083984375, 0.0007548332214355469, 0.011566162109375, 0.039703369140625, 1.251953125, 0.0010814666748046875, 0.08514404296875], "tokens": [275, 569, 284, 562, 19915, 22213, 26, 12267, 10365, 27, 301, 291, 4175, 2755, 32, 42698, 26, 9410, 293, 291, 415, 308, 26821, 1276, 10365, 32, 26821, 27, 301, 324, 442, 21644, 45, 291, 320, 291, 415, 308, 28823, 11949, 1276, 10365, 32, 28823, 11949, 27, 301, 324, 442, 47257, 45, 291]}
