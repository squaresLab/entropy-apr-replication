{"line_number": 2331, "line_type": "original", "code": "        Dfp tempDfp = DfpMath.pow(getTwo(), exponent);", "entropy": 1.5498046875, "is_bug_line": false, "sus_score": 0.29197, "per_token_entropy": [6.19921875, 7.57421875, 0.003910064697265625, 2.537109375, 2.25, 0.01253509521484375, 0.10736083984375, 2.919921875, 0.00045800209045410156, 1.2392578125, 0.0012359619140625, 3.158203125, 0.00963592529296875, 0.54150390625, 0.028839111328125, 0.004367828369140625, 0.95556640625, 0.341796875], "tokens": [351, 475, 4426, 1779, 54, 4426, 280, 475, 4426, 5717, 32, 7527, 26, 371, 8617, 1026, 19715, 293]}
{"line_number": 2331, "line_type": "generated", "code": "\n        return x;\n\n    }\n\n    /** Convert the instance into a double.\n     * @return a double approximating the instance\n     * @see #toDouble()\n     */\n    public double toDoubleExact() {\n\n        if (isInfinite()) {\n            if", "entropy": 0.2232666015625, "is_bug_line": false, "sus_score": 0.29197, "per_token_entropy": [0.46533203125, 0.057098388671875, 0.007781982421875, 0.0028209686279296875, 0.66064453125, 0.0011854171752929688, 0.21435546875, 0.041290283203125, 0.677734375, 0.1544189453125, 0.03741455078125, 0.222412109375, 0.0665283203125, 1.3916015625, 0.8740234375, 0.111328125, 0.00545501708984375, 0.3046875, 0.06304931640625, 0.081787109375, 0.12164306640625, 0.043548583984375, 0.00011086463928222656, 1.1324882507324219e-05, 0.0022563934326171875, 0.005321502685546875, 0.130859375, 0.0755615234375, 0.01220703125, 0.0277862548828125, 0.0103302001953125, 0.1708984375, 0.01294708251953125, 0.0135040283203125, 0.1829833984375, 0.043060302734375, 0.055999755859375, 0.2470703125, 0.6142578125, 0.689453125, 1.3759765625, 0.00466156005859375, 0.06829833984375, 0.52978515625, 0.413330078125, 0.050537109375, 0.99462890625, 0.0026073455810546875, 0.06915283203125, 0.0009622573852539062, 0.01451873779296875, 0.185302734375], "tokens": [291, 442, 816, 45, 446, 320, 446, 1022, 8125, 322, 1980, 1991, 312, 2064, 32, 275, 319, 477, 601, 312, 2064, 16756, 449, 1741, 322, 1980, 275, 319, 477, 2970, 588, 39982, 346, 275, 569, 284, 562, 2064, 372, 4075, 16085, 346, 301, 584, 415, 308, 28823, 11949, 1157, 301, 324, 415]}
{"line_number": 2355, "line_type": "original", "code": "        String str = y.toString();", "entropy": 2.083984375, "is_bug_line": false, "sus_score": 0.28905, "per_token_entropy": [4.65234375, 4.8359375, 0.57666015625, 0.040618896484375, 6.296875, 0.0261077880859375, 0.0921630859375, 0.1500244140625], "tokens": [351, 892, 596, 280, 533, 32, 3108, 473]}
{"line_number": 2355, "line_type": "generated", "code": "\n    /** Convert the instance into a {@link BigDecimal}.\n     * @return a {@link BigDecimal} approximating the instance\n     */\n    public BigDecimal toBigDecimal() {\n        String str = toDfpString();\n        return new BigDecimal(str.substring(", "entropy": 0.342529296875, "is_bug_line": false, "sus_score": 0.28905, "per_token_entropy": [0.60107421875, 0.4931640625, 1.908203125, 0.424072265625, 0.06768798828125, 0.2437744140625, 0.11517333984375, 1.5068359375, 0.06793212890625, 0.396728515625, 0.1763916015625, 0.185791015625, 0.008270263671875, 0.420166015625, 0.08355712890625, 0.15771484375, 0.50146484375, 0.0046844482421875, 0.009033203125, 0.0133056640625, 0.76611328125, 0.00012958049774169922, 0.000274658203125, 0.028656005859375, 0.0132598876953125, 0.058929443359375, 0.54296875, 0.0218658447265625, 0.020965576171875, 0.00954437255859375, 0.0014333724975585938, 0.0196075439453125, 0.01168060302734375, 0.0065460205078125, 0.51123046875, 2.109375, 0.56201171875, 0.037384033203125, 1.6376953125, 0.49267578125, 0.28857421875, 0.0758056640625, 0.07672119140625, 0.427490234375, 1.8505859375, 0.043182373046875, 0.000652313232421875, 0.03057861328125, 0.026824951171875, 0.6552734375, 0.09112548828125, 0.0009832382202148438], "tokens": [284, 1022, 8125, 322, 1980, 1991, 312, 3088, 1204, 17280, 4009, 275, 319, 477, 601, 312, 3088, 1204, 17280, 111, 16756, 449, 1741, 322, 1980, 275, 569, 284, 562, 17280, 372, 20827, 346, 301, 291, 892, 596, 280, 372, 54, 4426, 652, 473, 291, 442, 537, 17280, 26, 466, 32, 8723, 26]}
{"line_number": 2357, "line_type": "original", "code": "        long mantissa = Long.parseLong(str);", "entropy": 1.3837890625, "is_bug_line": false, "sus_score": 0.28899, "per_token_entropy": [5.7109375, 3.33984375, 1.1875, 0.019805908203125, 6.9141387939453125e-06, 0.232421875, 4.46484375, 0.029449462890625, 1.27734375, 0.1591796875, 0.2392578125, 0.1470947265625, 1.1806640625], "tokens": [351, 1946, 345, 29913, 2496, 280, 6359, 32, 2208, 3952, 26, 466, 293]}
{"line_number": 2357, "line_type": "generated", "code": "\n\n    /**\n     * Convert the instance into a {@link java.math.BigDecimal}.\n     * @return a BigDecimal instance\n     */\n    public BigDecimal toBigDecimal() {\n        return new BigDecimal(toString());\n    }\n\n    /**\n     * Convert the instance into a {@", "entropy": 0.340087890625, "is_bug_line": false, "sus_score": 0.28899, "per_token_entropy": [0.921875, 0.1514892578125, 0.994140625, 0.000705718994140625, 1.767578125, 0.54931640625, 0.1326904296875, 0.368408203125, 0.1781005859375, 0.970703125, 0.07611083984375, 1.6103515625, 0.0002206563949584961, 0.221923828125, 0.0008521080017089844, 0.235595703125, 0.2568359375, 0.375, 0.0024929046630859375, 0.7265625, 0.07208251953125, 0.2164306640625, 1.197265625, 1.578125, 1.0322265625, 0.348876953125, 0.021270751953125, 0.022979736328125, 0.030181884765625, 0.00714111328125, 0.0140838623046875, 0.0142822265625, 0.0069427490234375, 0.39892578125, 0.634765625, 0.260986328125, 0.0017642974853515625, 0.0106201171875, 0.38427734375, 0.12359619140625, 0.011993408203125, 0.0011243820190429688, 0.402099609375, 0.069580078125, 0.2353515625, 0.0010023117065429688, 0.65478515625, 0.1241455078125, 0.0238494873046875, 0.0838623046875, 0.11181640625, 0.0538330078125], "tokens": [446, 1022, 275, 319, 8125, 322, 1980, 1991, 312, 3088, 1204, 1383, 32, 3812, 32, 20827, 4009, 275, 319, 477, 601, 312, 17280, 1980, 275, 569, 284, 562, 17280, 372, 20827, 346, 301, 291, 442, 537, 17280, 26, 3108, 1035, 284, 320, 446, 1022, 275, 319, 8125, 322, 1980, 1991, 312, 3088]}
{"line_number": 2326, "line_type": "original", "code": "        int exponent = (int)(y.log10() * 3.32);", "entropy": 1.8828125, "is_bug_line": false, "sus_score": 0.2878, "per_token_entropy": [5.06640625, 3.79296875, 2.41015625, 1.8896484375, 0.302978515625, 0.01413726806640625, 2.197265625, 6.8984375, 1.16796875, 4.7109375, 0.64013671875, 2.765655517578125e-05, 0.2113037109375, 0.67724609375, 0.389404296875, 0.2406005859375, 0.0210113525390625, 0.01345062255859375, 0.0037288665771484375, 7.00390625], "tokens": [351, 629, 19715, 280, 308, 410, 2502, 107, 32, 751, 35, 34, 346, 319, 225, 37, 32, 37, 36, 293]}
{"line_number": 2326, "line_type": "generated", "code": "\n        if (negate) {\n            bits |= 0x8000000000000000L;\n        }\n\n        return Double.longBitsToDouble(bits);\n    }\n\n    /** Convert the instance into a", "entropy": 0.13232421875, "is_bug_line": false, "sus_score": 0.2878, "per_token_entropy": [0.3466796875, 1.0400390625, 0.045654296875, 0.054901123046875, 9.179115295410156e-06, 0.01751708984375, 0.0316162109375, 0.016754150390625, 0.1175537109375, 0.98779296875, 0.222412109375, 0.0880126953125, 0.00035071372985839844, 0.0004973411560058594, 2.205371856689453e-05, 0.00012063980102539062, 0.00010669231414794922, 0.00835418701171875, 0.00015807151794433594, 9.238719940185547e-05, 0.0006761550903320312, 0.0008139610290527344, 4.8279762268066406e-05, 3.731250762939453e-05, 4.506111145019531e-05, 9.059906005859375e-06, 7.128715515136719e-05, 1.9311904907226562e-05, 6.508827209472656e-05, 0.505859375, 0.003269195556640625, 0.031402587890625, 0.0008392333984375, 0.2457275390625, 0.333984375, 0.03369140625, 0.00044727325439453125, 0.0011272430419921875, 0.00016808509826660156, 0.00014638900756835938, 0.0006146430969238281, 0.0036296844482421875, 0.0013666152954101562, 1.2646484375, 0.0029773712158203125, 0.283935546875, 0.04364013671875, 0.6982421875, 0.1363525390625, 0.041107177734375, 0.1982421875, 0.0653076171875], "tokens": [291, 415, 308, 8095, 332, 27, 301, 324, 7030, 6592, 225, 34, 106, 42, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 62, 45, 291, 320, 584, 442, 6934, 32, 3222, 8733, 40609, 26, 5960, 293, 284, 320, 446, 1022, 8125, 322, 1980, 1991, 312]}
{"line_number": 2340, "line_type": "original", "code": "        y = y.divide(DfpMath.pow(getTwo(), exponent));", "entropy": 1.08984375, "is_bug_line": false, "sus_score": 0.28763, "per_token_entropy": [6.78515625, 5.80859375, 0.058074951171875, 0.16943359375, 0.00102996826171875, 2.56640625, 0.005283355712890625, 2.078125, 0.00017070770263671875, 0.409912109375, 0.0007538795471191406, 0.10205078125, 0.0042266845703125, 0.271484375, 0.0112762451171875, 0.0006556510925292969, 1.1376953125, 0.2177734375], "tokens": [351, 533, 280, 533, 32, 23987, 26, 54, 4426, 5717, 32, 7527, 26, 371, 8617, 1026, 19715, 876]}
{"line_number": 2340, "line_type": "generated", "code": "\n    public double[] toSplitDouble() {\n\n        if (isNaN()) {\n            return new double[] {Double.NaN, Double.NaN};\n        }\n\n        if (isZero()) {\n            return new double[] {0.0, 0.0", "entropy": 0.12176513671875, "is_bug_line": false, "sus_score": 0.28763, "per_token_entropy": [0.06573486328125, 0.04736328125, 0.15966796875, 0.0127410888671875, 0.0011138916015625, 0.0023651123046875, 0.0011625289916992188, 0.0034465789794921875, 0.00814056396484375, 0.27587890625, 0.452392578125, 0.0087127685546875, 0.38671875, 0.259765625, 0.00270843505859375, 0.028839111328125, 0.142578125, 0.0498046875, 0.0025787353515625, 0.1468505859375, 0.0025043487548828125, 0.947265625, 7.140636444091797e-05, 0.003200531005859375, 0.007568359375, 0.1929931640625, 0.00018155574798583984, 0.00047898292541503906, 0.005657196044921875, 0.0090789794921875, 0.0009851455688476562, 0.11187744140625, 0.75146484375, 0.010528564453125, 1.3876953125, 0.0285797119140625, 0.031951904296875, 0.0015516281127929688, 0.0223236083984375, 0.050811767578125, 0.01123046875, 0.0008993148803710938, 0.0133514404296875, 0.00200653076171875, 0.09759521484375, 0.410888671875, 0.0007452964782714844, 0.0164031982421875, 0.139892578125, 0.0120391845703125, 0.0016021728515625, 0.0008258819580078125], "tokens": [284, 562, 2064, 1178, 372, 7334, 4075, 346, 301, 584, 415, 308, 26821, 1157, 301, 324, 442, 537, 2064, 1178, 301, 4075, 32, 11126, 30, 6934, 32, 11126, 1255, 291, 320, 584, 415, 308, 297, 8039, 1157, 301, 324, 442, 537, 2064, 1178, 301, 34, 32, 34, 30, 225, 34, 32, 34]}
