{"line_number": 328, "line_type": "original", "code": "        double mostNegative = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset());", "entropy": 1.05078125, "is_bug_line": false, "sus_score": 0.43484, "per_token_entropy": [5.62109375, 3.8671875, 1.623046875, 0.01666259765625, 0.10662841796875, 9.9921875, 1.390625, 0.55078125, 0.01111602783203125, 0.051666259765625, 0.9443359375, 0.0036144256591796875, 0.08447265625, 0.58251953125, 0.1077880859375, 0.0014638900756835938, 0.029754638671875, 0.00015211105346679688, 0.0014028549194335938, 0.11297607421875, 0.005565643310546875, 1.0848045349121094e-05, 0.0003809928894042969, 0.11419677734375], "tokens": [351, 2064, 4630, 17152, 280, 6550, 2352, 610, 744, 1018, 225, 34, 499, 622, 2711, 26, 6390, 2352, 30, 622, 68, 3914, 3457, 1035]}
{"line_number": 328, "line_type": "generated", "code": "\n\n    /**\n     * Get the basic variable for the specified column.\n     * <p>\n     * Note that the basic variable is the first non-zero entry in the\n     * corresponding column.\n     * </p>\n     * @param column column index\n    ", "entropy": 0.59814453125, "is_bug_line": false, "sus_score": 0.43484, "per_token_entropy": [1.4775390625, 0.08624267578125, 0.030059814453125, 1.1920928955078125e-05, 2.87109375, 0.158935546875, 1.974609375, 0.65283203125, 0.8720703125, 0.66748046875, 0.6103515625, 1.171875, 0.441650390625, 0.04736328125, 0.00048065185546875, 1.154296875, 0.0101318359375, 0.0033016204833984375, 0.018463134765625, 4.482269287109375e-05, 1.9404296875, 0.44677734375, 1.2421875, 0.96630859375, 0.2978515625, 2.083984375, 2.0703125, 1.798828125, 0.223876953125, 0.09527587890625, 0.7412109375, 0.4599609375, 0.65625, 0.19287109375, 1.4384765625, 0.00014007091522216797, 0.9482421875, 0.51904296875, 0.76513671875, 0.43212890625, 0.001438140869140625, 0.04852294921875, 0.00010585784912109375, 0.0038127899169921875, 0.003749847412109375, 0.00018537044525146484, 0.129638671875, 0.00667572021484375, 0.393310546875, 0.50927734375, 0.23974609375, 0.205322265625], "tokens": [446, 1022, 275, 319, 1390, 322, 6550, 2677, 436, 322, 3191, 2623, 32, 275, 319, 333, 98, 48, 275, 319, 5830, 688, 322, 6550, 2677, 438, 322, 1932, 2979, 31, 6158, 3414, 328, 322, 275, 319, 8435, 2623, 32, 275, 319, 576, 98, 48, 275, 319, 477, 753, 2623, 2623, 1650, 275]}
{"line_number": 261, "line_type": "original", "code": "        for (double coefficient : coefficients.getData()) {", "entropy": 2.1796875, "is_bug_line": false, "sus_score": 0.40572, "per_token_entropy": [2.30859375, 2.953125, 0.0562744140625, 5.7734375, 4.47265625, 0.04241943359375, 2.42578125, 2.427734375, 3.412109375, 0.02484130859375, 0.08441162109375], "tokens": [351, 436, 308, 2627, 17134, 499, 26370, 32, 11576, 1157, 301]}
{"line_number": 261, "line_type": "generated", "code": "            dest[destPos] = src[srcPos];\n            destPos++;\n        }\n    }\n\n    /**\n     * Gets the tableau.\n     * @return the tableau\n     */\n    protected RealMatrix getTableau() {\n        return tableau;", "entropy": 0.390380859375, "is_bug_line": false, "sus_score": 0.40572, "per_token_entropy": [2.74609375, 0.13525390625, 0.021209716796875, 0.0244903564453125, 0.003971099853515625, 1.3076171875, 0.036712646484375, 0.0703125, 0.028350830078125, 0.381103515625, 0.004581451416015625, 0.060546875, 0.92236328125, 0.37060546875, 0.011383056640625, 0.08416748046875, 0.2037353515625, 0.02056884765625, 0.82470703125, 0.1488037109375, 0.81640625, 0.04705810546875, 0.0469970703125, 0.00047588348388671875, 3.349609375, 0.2108154296875, 3.748046875, 0.0108642578125, 1.63671875, 0.12078857421875, 0.0018892288208007812, 0.06768798828125, 0.00555419921875, 0.280517578125, 0.07379150390625, 0.0004112720489501953, 0.2464599609375, 0.0124359130859375, 0.012359619140625, 0.6513671875, 0.40625, 0.0019779205322265625, 0.30712890625, 0.00864410400390625, 0.00021946430206298828, 0.0132293701171875, 0.0012798309326171875, 0.021636962890625, 0.03192138671875, 0.7451171875, 2.7418136596679688e-06, 0.01247406005859375], "tokens": [1468, 3466, 77, 3316, 2996, 79, 280, 1561, 77, 1617, 2996, 970, 324, 3466, 2996, 3334, 291, 320, 284, 320, 446, 1022, 275, 319, 7124, 322, 1858, 4452, 32, 275, 319, 477, 601, 322, 1858, 4452, 275, 569, 284, 2522, 11443, 4161, 622, 1599, 4452, 346, 301, 291, 442, 1858, 4452, 45]}
{"line_number": 161, "line_type": "original", "code": "                        matrix[row][getSlackVariableOffset() - 1] =", "entropy": 1.8603515625, "is_bug_line": false, "sus_score": 0.40318, "per_token_entropy": [9.0234375, 9.7421875, 0.1719970703125, 0.25341796875, 0.026275634765625, 1.96875, 0.72216796875, 0.00070953369140625, 0.0011005401611328125, 0.048553466796875, 5.74609375, 0.0290069580078125, 0.00330352783203125, 0.039276123046875, 0.12359619140625], "tokens": [6797, 5045, 77, 643, 1674, 371, 31185, 3818, 3457, 346, 429, 225, 35, 79, 280]}
{"line_number": 161, "line_type": "generated", "code": "\n        RealVector coefficients = constraint.getCoefficients();\n        double[] data = new double[coefficients.getDimension()];\n        copyArray(coefficients.getData(), data, coefficients.getDimension());\n        double rhs = constraint.getValue();\n        if (", "entropy": 0.30419921875, "is_bug_line": false, "sus_score": 0.40318, "per_token_entropy": [0.78955078125, 2.4140625, 0.068115234375, 0.53173828125, 0.024505615234375, 0.07861328125, 0.0008654594421386719, 0.0024566650390625, 0.0007162094116210938, 2.8371810913085938e-05, 0.281494140625, 0.10418701171875, 1.1162109375, 1.7880859375, 1.2353515625, 0.01352691650390625, 0.98095703125, 0.0026645660400390625, 0.0024471282958984375, 0.07757568359375, 8.022785186767578e-05, 0.00022280216217041016, 0.004596710205078125, 0.00023567676544189453, 0.022369384765625, 0.087890625, 0.80126953125, 0.009063720703125, 0.003505706787109375, 0.0283355712890625, 3.457069396972656e-05, 0.007534027099609375, 0.00600433349609375, 0.1170654296875, 0.01224517822265625, 0.331298828125, 0.409912109375, 0.0007643699645996094, 0.003192901611328125, 0.0003399848937988281, 0.01265716552734375, 0.1710205078125, 1.77734375, 1.2236328125, 0.03436279296875, 0.1121826171875, 0.00024437904357910156, 0.025299072265625, 0.01593017578125, 0.1729736328125, 0.8759765625, 0.042633056640625], "tokens": [291, 11443, 2863, 26370, 280, 13118, 32, 371, 8973, 101, 473, 291, 2064, 1178, 706, 280, 537, 2064, 77, 34036, 101, 32, 371, 9883, 22086, 291, 1933, 1261, 26, 34036, 101, 32, 11576, 1026, 706, 30, 26370, 32, 371, 9883, 1035, 291, 2064, 9322, 280, 13118, 32, 6682, 473, 291, 415, 308]}
{"line_number": 149, "line_type": "original", "code": "                // initialize the constraint rows", "entropy": 3.580078125, "is_bug_line": false, "sus_score": 0.37404, "per_token_entropy": [6.37109375, 3.689453125, 4.375, 1.025390625, 2.82421875, 3.19921875], "tokens": [2071, 434, 7379, 322, 13118, 5760]}
{"line_number": 149, "line_type": "generated", "code": "\n        for (int i = 0; i < constraints.size(); i++) {\n            LinearConstraint constraint = constraints.get(i);\n            if (Math.abs(constraint.getValue()) < epsilon) {\n                constraint = constraint.newZeroValue", "entropy": 0.2252197265625, "is_bug_line": false, "sus_score": 0.37404, "per_token_entropy": [0.316650390625, 0.1666259765625, 0.005893707275390625, 1.9462890625, 0.02423095703125, 0.004116058349609375, 0.0112457275390625, 0.0012731552124023438, 0.007049560546875, 0.0018339157104492188, 0.0013360977172851562, 0.1417236328125, 0.0006475448608398438, 0.0028324127197265625, 0.0014286041259765625, 0.040679931640625, 0.005794525146484375, 0.0028228759765625, 0.055816650390625, 0.181884765625, 0.0005049705505371094, 0.2208251953125, 0.0036945343017578125, 0.0672607421875, 0.00048804283142089844, 0.00032019615173339844, 0.0020198822021484375, 0.00043845176696777344, 0.044708251953125, 0.1827392578125, 0.70068359375, 0.11163330078125, 1.56640625, 0.031280517578125, 0.011810302734375, 0.00235748291015625, 0.01137542724609375, 9.78708267211914e-05, 0.018280029296875, 0.0084686279296875, 0.74853515625, 0.29541015625, 0.018890380859375, 0.00836944580078125, 0.04156494140625, 0.67578125, 0.01244354248046875, 0.93310546875, 0.0016183853149414062, 1.2861328125, 1.392578125, 0.392578125], "tokens": [291, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 13383, 32, 891, 473, 595, 1987, 301, 324, 13935, 9012, 13118, 280, 13383, 32, 371, 26, 91, 293, 324, 415, 308, 5717, 32, 3596, 26, 12704, 32, 6682, 1157, 333, 23477, 27, 301, 400, 13118, 280, 13118, 32, 890, 8039, 882]}
