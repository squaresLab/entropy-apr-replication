{"line_number": 198, "line_type": "original", "code": "        if (fa * fb >= 0.0 ) {", "entropy": 1.6396484375, "is_bug_line": true, "sus_score": 0.50055, "per_token_entropy": [4.4921875, 3.43359375, 0.128662109375, 3.205078125, 0.6728515625, 0.07989501953125, 2.771484375, 0.005702972412109375, 0.0015316009521484375, 0.83154296875, 0.0011377334594726562, 5.56640625, 0.1253662109375], "tokens": [351, 415, 308, 1919, 319, 22254, 2377, 225, 34, 32, 34, 829, 301]}
{"line_number": 198, "line_type": "generated", "code": "\n    /**\n     * Get a solver factory.\n     * @return a solver factory\n     */\n    public static UnivariateRealSolverFactory newInstance() {\n        return LazyHolder.FACTORY;\n    }", "entropy": 0.221923828125, "is_bug_line": true, "sus_score": 0.50055, "per_token_entropy": [1.2294921875, 0.260986328125, 0.365478515625, 0.0003027915954589844, 1.0, 1.0830078125, 0.60546875, 1.083984375, 0.5712890625, 0.055816650390625, 0.00078582763671875, 0.64306640625, 0.01259613037109375, 0.2568359375, 0.1265869140625, 0.01529693603515625, 0.57958984375, 0.056671142578125, 0.013214111328125, 0.030364990234375, 0.006809234619140625, 0.004039764404296875, 1.2159347534179688e-05, 6.031990051269531e-05, 0.00011432170867919922, 0.0006456375122070312, 0.2900390625, 0.11114501953125, 0.0225830078125, 0.01459503173828125, 0.0712890625, 0.017852783203125, 0.08148193359375, 2.86102294921875e-06, 0.0001493692398071289, 0.0004858970642089844, 0.0189971923828125, 0.0245361328125, 0.00348663330078125], "tokens": [284, 1022, 275, 319, 1390, 312, 17821, 7763, 32, 275, 319, 477, 601, 312, 17821, 7763, 275, 569, 284, 562, 907, 1683, 27623, 6877, 17766, 2214, 537, 1810, 346, 301, 291, 442, 23998, 6760, 32, 24845, 45, 284, 320]}
{"line_number": 104, "line_type": "original", "code": "     * <code>Integer.MAX_VALUE</code> iterations to throw a ", "entropy": 1.8125, "is_bug_line": false, "sus_score": 0.3865, "per_token_entropy": [2.080078125, 0.016357421875, 5.765625, 0.74169921875, 0.021087646484375, 2.345703125, 0.0224761962890625, 0.0235443115234375, 0.0010271072387695312, 0.0010223388671875, 0.1375732421875, 0.002902984619140625, 0.05926513671875, 0.1251220703125, 8.2734375, 8.28125, 1.0068359375, 3.720703125], "tokens": [262, 319, 333, 687, 48, 3061, 32, 3459, 81, 5975, 377, 687, 48, 17576, 372, 1422, 312, 225]}
{"line_number": 104, "line_type": "generated", "code": "\n     * @param upperBound upper bound (b never is greater than this\n     * value)\n     * @param maximumIterations maximum number of iterations to perform\n     * @return a two element array holding {a, b}\n     * @throws Convergence", "entropy": 0.0489501953125, "is_bug_line": false, "sus_score": 0.3865, "per_token_entropy": [0.401611328125, 0.0016431808471679688, 0.017425537109375, 0.0033435821533203125, 0.006954193115234375, 0.0016918182373046875, 0.0008935928344726562, 0.0003705024719238281, 0.00127410888671875, 0.002590179443359375, 0.00726318359375, 0.00487518310546875, 0.0007925033569335938, 0.0012359619140625, 0.002071380615234375, 0.07720947265625, 0.0003345012664794922, 0.00785064697265625, 0.006885528564453125, 0.19384765625, 0.00021445751190185547, 0.0028514862060546875, 0.01617431640625, 0.00433349609375, 0.0021495819091796875, 0.26220703125, 0.008514404296875, 0.00160980224609375, 0.1287841796875, 0.4658203125, 0.63525390625, 0.130615234375, 0.0001881122589111328, 0.02935791015625, 0.003910064697265625, 0.01090240478515625, 0.0033168792724609375, 0.0037708282470703125, 0.0018367767333984375, 0.00560760498046875, 0.00472259521484375, 0.0017023086547851562, 0.00020933151245117188, 0.0034427642822265625, 0.0098114013671875, 0.053985595703125, 0.00016033649444580078, 0.0029697418212890625, 0.0011720657348632812, 0.00989532470703125, 1.7881393432617188e-06, 7.152557373046875e-07], "tokens": [275, 319, 477, 753, 8342, 4716, 8342, 5085, 308, 84, 7152, 438, 10761, 2784, 458, 275, 319, 786, 27, 275, 319, 477, 753, 7091, 31219, 7091, 1451, 432, 17576, 372, 4436, 275, 319, 477, 601, 312, 3134, 1994, 1417, 21843, 301, 83, 30, 323, 111, 275, 319, 477, 5117, 1336, 424, 27976]}
{"line_number": 51, "line_type": "original", "code": "    public static double solve(UnivariateRealFunction f, double x0, double x1)", "entropy": 1.16015625, "is_bug_line": false, "sus_score": 0.3757, "per_token_entropy": [4.6640625, 9.578125, 0.0289306640625, 0.71337890625, 3.041015625, 0.0191497802734375, 0.06488037109375, 0.00013065338134765625, 0.0004322528839111328, 0.001087188720703125, 0.03680419921875, 0.01361083984375, 0.5078125, 3.478515625, 0.03564453125, 0.022216796875, 0.069580078125, 0.032623291015625, 0.00928497314453125, 0.88916015625], "tokens": [264, 562, 907, 2064, 10932, 26, 1061, 27623, 6877, 2447, 296, 30, 2064, 816, 34, 30, 2064, 816, 35, 27]}
{"line_number": 51, "line_type": "generated", "code": "\n     * </ul>\n     * \n     * @param f the function\n     * @param lower the lower bound of the search interval\n     * @param upper the upper bound of the search interval\n     * @param initial the initial value to use to start the search", "entropy": 0.224853515625, "is_bug_line": false, "sus_score": 0.3757, "per_token_entropy": [0.2271728515625, 0.019256591796875, 0.2347412109375, 0.0030651092529296875, 0.1827392578125, 0.2293701171875, 0.0010738372802734375, 1.345703125, 0.001110076904296875, 0.196044921875, 0.00977325439453125, 0.1795654296875, 0.2247314453125, 0.10369873046875, 0.97119140625, 0.00012111663818359375, 0.00034809112548828125, 0.004047393798828125, 0.299560546875, 0.71630859375, 0.034423828125, 0.0556640625, 1.013671875, 0.004055023193359375, 0.323486328125, 0.00571441650390625, 0.16650390625, 9.417533874511719e-06, 0.0009756088256835938, 0.00029206275939941406, 0.09698486328125, 0.004741668701171875, 0.01059722900390625, 0.0008077621459960938, 0.00197601318359375, 0.0003445148468017578, 0.0044403076171875, 0.0006251335144042969, 0.031646728515625, 8.249282836914062e-05, 0.0006966590881347656, 0.00839996337890625, 0.0097503662109375, 1.1162109375, 0.54833984375, 0.392333984375, 0.2440185546875, 0.666015625, 1.2490234375, 0.00856781005859375, 0.70849609375, 0.0352783203125], "tokens": [275, 319, 576, 338, 48, 275, 319, 5384, 319, 477, 753, 296, 322, 667, 275, 319, 477, 753, 7216, 322, 7216, 5085, 432, 322, 3233, 7898, 275, 319, 477, 753, 8342, 322, 8342, 5085, 432, 322, 3233, 7898, 275, 319, 477, 753, 2815, 322, 2815, 786, 372, 793, 372, 1477, 322, 3233]}
{"line_number": 199, "line_type": "original", "code": "            throw new ConvergenceException(", "entropy": 1.9033203125, "is_bug_line": false, "sus_score": 0.35218, "per_token_entropy": [7.88671875, 4.41015625, 0.97900390625, 1.42578125, 0.0017480850219726562, 0.0009775161743164062, 0.0016717910766601562, 0.5224609375], "tokens": [1468, 1422, 537, 1336, 424, 27976, 984, 26]}
{"line_number": 199, "line_type": "generated", "code": "\n    /**\n     * Get the default implementation of the univariate real solver factory.\n     * @return default solver factory\n     */\n    public static UnivariateRealSolverFactory newInstance() {\n        return LazyHolder.FACTORY;\n    }", "entropy": 0.257080078125, "is_bug_line": false, "sus_score": 0.35218, "per_token_entropy": [1.1630859375, 0.25439453125, 0.3701171875, 0.00040650367736816406, 0.95068359375, 0.50146484375, 0.208984375, 0.8984375, 0.493896484375, 0.529296875, 1.5888671875, 0.00012052059173583984, 0.01084136962890625, 0.1527099609375, 0.3740234375, 0.05145263671875, 0.0217437744140625, 0.0007777214050292969, 0.8544921875, 0.0019512176513671875, 1.462890625, 1.140625, 0.033935546875, 0.0919189453125, 0.043853759765625, 0.0124664306640625, 0.00989532470703125, 0.006038665771484375, 0.005023956298828125, 6.67572021484375e-06, 2.4557113647460938e-05, 5.5670738220214844e-05, 0.0001996755599975586, 0.298095703125, 0.05120849609375, 0.023712158203125, 0.0166168212890625, 0.08740234375, 0.017303466796875, 0.042266845703125, 2.5033950805664062e-06, 0.00032711029052734375, 0.0005364418029785156, 0.0136260986328125, 0.0264892578125, 0.004947662353515625], "tokens": [284, 1022, 275, 319, 1390, 322, 1244, 4736, 432, 322, 707, 27623, 4011, 17821, 7763, 32, 275, 319, 477, 601, 1244, 17821, 7763, 275, 569, 284, 562, 907, 1683, 27623, 6877, 17766, 2214, 537, 1810, 346, 301, 291, 442, 23998, 6760, 32, 24845, 45, 284, 320]}
{"line_number": 120, "line_type": "original", "code": "     * function", "entropy": 5.46484375, "is_bug_line": false, "sus_score": 0.33856, "per_token_entropy": [3.923828125, 5.9453125, 6.51953125], "tokens": [262, 319, 667]}
{"line_number": 120, "line_type": "generated", "code": "\n        double a = initial - 1;\n        double fa = function.value(a);\n        double b = initial + 1;\n        double fb = function.value(b);\n        int iter = 0;\n        while (iter++ < maximum", "entropy": 0.257080078125, "is_bug_line": false, "sus_score": 0.33856, "per_token_entropy": [1.103515625, 1.62109375, 1.224609375, 0.08941650390625, 0.204833984375, 0.546875, 0.112548828125, 0.0826416015625, 0.48974609375, 0.035064697265625, 0.0308380126953125, 1.037109375, 0.01033782958984375, 0.4287109375, 0.007343292236328125, 0.0018930435180664062, 0.003353118896484375, 0.10382080078125, 0.00327301025390625, 0.151123046875, 0.1800537109375, 0.1253662109375, 0.0023593902587890625, 0.003627777099609375, 0.007404327392578125, 0.002185821533203125, 0.00665283203125, 0.003520965576171875, 0.019866943359375, 0.04150390625, 0.00040984153747558594, 0.000732421875, 0.005092620849609375, 4.601478576660156e-05, 0.0009021759033203125, 0.00020051002502441406, 0.002704620361328125, 0.0002677440643310547, 0.88037109375, 1.0478515625, 1.6298828125, 0.07806396484375, 0.006908416748046875, 0.032958984375, 0.019805908203125, 0.349609375, 0.1624755859375, 0.271728515625, 0.6171875, 0.53515625, 0.032135009765625, 0.01032257080078125], "tokens": [291, 2064, 312, 280, 2815, 429, 225, 35, 45, 291, 2064, 2093, 280, 667, 32, 853, 26, 83, 293, 291, 2064, 323, 280, 2815, 474, 225, 35, 45, 291, 2064, 22254, 280, 667, 32, 853, 26, 84, 293, 291, 629, 3850, 280, 225, 34, 45, 291, 2218, 308, 1731, 1046, 333, 7091]}
