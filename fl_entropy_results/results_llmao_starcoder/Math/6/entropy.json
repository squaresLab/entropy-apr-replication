{"line_number": 375, "line_type": "original", "code": "    private void checkParameters() {", "entropy": 2.083984375, "is_bug_line": false, "sus_score": 0.37338, "per_token_entropy": [5.953125, 1.82421875, 2.03515625, 1.7958984375, 0.720703125, 2.048828125, 0.2059326171875], "tokens": [264, 945, 763, 1505, 3675, 346, 301]}
{"line_number": 375, "line_type": "generated", "code": "\n\n    /**\n     * @param initial Starting point.\n     * @return the optimum.\n     * @throws MathUnsupportedOperationException if bounds were passed to the\n     * {@link #optimize(OptimizationData[]) optimize} method.\n     * @throws TooManyEvalu", "entropy": 0.24951171875, "is_bug_line": false, "sus_score": 0.37338, "per_token_entropy": [0.64599609375, 0.1309814453125, 0.0831298828125, 6.854534149169922e-05, 1.380859375, 1.0107421875, 2.033203125, 1.2275390625, 0.134521484375, 0.035675048828125, 0.033111572265625, 0.010345458984375, 0.038665771484375, 0.52978515625, 0.368896484375, 0.55615234375, 2.86102294921875e-06, 0.03826904296875, 0.0465087890625, 0.30126953125, 0.006732940673828125, 0.01512908935546875, 1.4033203125, 0.17431640625, 3.8743019104003906e-05, 0.025054931640625, 0.14453125, 0.02099609375, 0.01306915283203125, 0.00738525390625, 0.009674072265625, 0.0038547515869140625, 0.0001323223114013672, 0.00858306884765625, 0.0018739700317382812, 0.03485107421875, 0.0002944469451904297, 0.0044097900390625, 0.0053558349609375, 1.6450881958007812e-05, 0.00894927978515625, 0.00608062744140625, 0.0011987686157226562, 0.001987457275390625, 0.012969970703125, 0.0367431640625, 1.279296875, 0.01641845703125, 0.059600830078125, 1.0517578125, 0.0005707740783691406, 0.0179901123046875], "tokens": [446, 1022, 275, 319, 477, 753, 2815, 23569, 2260, 32, 275, 319, 477, 601, 322, 2919, 3085, 32, 275, 319, 477, 5117, 4175, 16746, 14808, 415, 11615, 4528, 5403, 372, 322, 275, 319, 3088, 1204, 588, 22926, 26, 37672, 750, 9795, 22269, 111, 1411, 32, 275, 319, 477, 5117, 37327, 7434, 10491]}
{"line_number": 377, "line_type": "original", "code": "            getUpperBound() != null) {", "entropy": 1.318359375, "is_bug_line": false, "sus_score": 0.36648, "per_token_entropy": [7.04296875, 3.62109375, 0.0287322998046875, 0.0085601806640625, 0.17578125, 0.0098876953125, 0.0005602836608886719, 0.771484375, 0.20849609375], "tokens": [1468, 622, 9878, 4716, 346, 863, 744, 27, 301]}
{"line_number": 377, "line_type": "generated", "code": "\n\n    /**\n     * @param point Starting point.\n     * @return the optimum.\n     * @throws org.apache.commons.math3.exception.TooManyEvaluationsException\n     * if the number of evaluations is exceeded.\n     */\n   ", "entropy": 0.2044677734375, "is_bug_line": false, "sus_score": 0.36648, "per_token_entropy": [1.423828125, 0.1708984375, 0.04205322265625, 8.785724639892578e-05, 1.2412109375, 0.7216796875, 2.265625, 0.60595703125, 0.0185546875, 0.11163330078125, 0.024993896484375, 0.0280303955078125, 0.02374267578125, 0.37744140625, 0.277099609375, 1.607421875, 7.152557373046875e-06, 0.059356689453125, 0.013763427734375, 0.59716796875, 0.0080413818359375, 0.031951904296875, 0.47119140625, 1.239776611328125e-05, 0.0027294158935546875, 3.5762786865234375e-06, 0.00010657310485839844, 3.5762786865234375e-07, 0.00014388561248779297, 0.0017375946044921875, 3.4570693969726562e-06, 0.0004208087921142578, 0.00010609626770019531, 0.052947998046875, 1.7404556274414062e-05, 0.001705169677734375, 0.000179290771484375, 3.5643577575683594e-05, 0.019256591796875, 0.0012922286987304688, 0.040496826171875, 0.0034618377685546875, 0.087646484375, 0.00016450881958007812, 0.094970703125, 2.0623207092285156e-05, 0.022247314453125, 0.0005459785461425781, 0.00279998779296875, 0.00658416748046875, 0.1348876953125, 0.035064697265625], "tokens": [446, 1022, 275, 319, 477, 753, 2260, 23569, 2260, 32, 275, 319, 477, 601, 322, 2919, 3085, 32, 275, 319, 477, 5117, 1086, 32, 2104, 32, 8369, 32, 3812, 37, 32, 3893, 32, 20563, 7434, 10491, 993, 984, 275, 319, 415, 322, 1451, 432, 6130, 993, 438, 31793, 32, 275, 569, 284]}
{"line_number": 299, "line_type": "original", "code": "     * Class for finding the minimum of the objective function along a given", "entropy": 3.27734375, "is_bug_line": false, "sus_score": 0.36151, "per_token_entropy": [6.56640625, 4.01953125, 9.3359375, 4.11328125, 3.1953125, 1.2978515625, 2.939453125, 0.323974609375, 2.34765625, 4.44921875, 0.28271484375, 4.40625, 0.3662109375, 2.23828125], "tokens": [262, 319, 1709, 436, 17340, 322, 9340, 432, 322, 25110, 667, 7947, 312, 2702]}
{"line_number": 299, "line_type": "generated", "code": "\n                        for (int i = 0; i < n; i++) {\n                            x[i] = p[i] + alpha * d[i];\n                        }\n                        return f.value(x);\n                    }\n                };\n            bracket.search(", "entropy": 0.12115478515625, "is_bug_line": false, "sus_score": 0.36151, "per_token_entropy": [0.2255859375, 0.302978515625, 0.014190673828125, 0.0009717941284179688, 0.08673095703125, 0.00406646728515625, 0.0032825469970703125, 0.00027441978454589844, 0.0016374588012695312, 0.0006232261657714844, 0.0024261474609375, 0.04144287109375, 0.002960205078125, 0.053497314453125, 0.0031986236572265625, 0.0297393798828125, 0.028533935546875, 0.01076507568359375, 0.0001983642578125, 0.000301361083984375, 4.100799560546875e-05, 0.0012369155883789062, 0.037567138671875, 0.00403594970703125, 0.0003266334533691406, 0.001129150390625, 0.00255584716796875, 0.06768798828125, 0.002002716064453125, 0.003787994384765625, 3.695487976074219e-05, 6.771087646484375e-05, 0.0006852149963378906, 0.0262908935546875, 0.0015935897827148438, 0.88134765625, 0.148193359375, 0.7685546875, 0.2227783203125, 0.01041412353515625, 0.001323699951171875, 0.01404571533203125, 0.014892578125, 0.04095458984375, 0.0023822784423828125, 0.10308837890625, 0.0003566741943359375, 1.3076171875, 1.0537109375, 0.02337646484375, 0.7353515625, 0.01165008544921875], "tokens": [715, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 310, 45, 595, 1987, 301, 1014, 816, 77, 91, 79, 280, 298, 77, 91, 79, 474, 7377, 319, 343, 77, 91, 970, 715, 320, 715, 442, 296, 32, 853, 26, 106, 293, 528, 320, 400, 1472, 324, 33828, 32, 1903, 26]}
{"line_number": 378, "line_type": "original", "code": "            throw new MathUnsupportedOperationException(LocalizedFormats.CONSTRAINT);", "entropy": 1.33203125, "is_bug_line": false, "sus_score": 0.35666, "per_token_entropy": [8.0, 1.767578125, 0.2088623046875, 0.00968170166015625, 2.0265579223632812e-05, 5.3882598876953125e-05, 0.4921875, 0.0167999267578125, 0.2218017578125, 0.0027370452880859375, 4.94921875, 0.314697265625], "tokens": [1468, 1422, 537, 4175, 16746, 14808, 26, 24225, 19298, 32, 33495, 293]}
{"line_number": 378, "line_type": "generated", "code": "\n    /**\n     * @return the lower bound\n     */\n    public double[] getLowerBound() {\n        return lower;\n    }\n\n    /**\n     * @return the upper bound\n     */\n    public double[] getUpperBound() {\n        return upper;\n    }", "entropy": 0.2274169921875, "is_bug_line": false, "sus_score": 0.35666, "per_token_entropy": [1.021484375, 0.380859375, 0.07391357421875, 0.00010895729064941406, 1.2431640625, 1.4677734375, 0.419189453125, 1.66796875, 0.53271484375, 1.9619140625, 0.365234375, 0.018768310546875, 0.308837890625, 0.5673828125, 0.007781982421875, 0.0001354217529296875, 0.0036106109619140625, 0.01043701171875, 0.005474090576171875, 0.031768798828125, 0.05633544921875, 0.0196380615234375, 0.2900390625, 0.6669921875, 0.0123748779296875, 0.00023281574249267578, 0.14599609375, 0.0012750625610351562, 0.005580902099609375, 8.666515350341797e-05, 0.276611328125, 0.1710205078125, 0.0038623809814453125, 0.0256805419921875, 0.0026264190673828125, 0.0100860595703125, 0.0014219284057617188, 0.00027370452880859375, 0.0007076263427734375, 0.00017142295837402344, 0.0002422332763671875, 0.00010573863983154297, 3.731250762939453e-05, 2.181529998779297e-05, 4.792213439941406e-05, 0.0008053779602050781, 0.004505157470703125, 0.0004355907440185547, 0.0002493858337402344, 2.7894973754882812e-05, 0.0450439453125, 0.0002713203430175781], "tokens": [284, 1022, 275, 319, 477, 601, 322, 7216, 5085, 275, 569, 284, 562, 2064, 1178, 622, 6724, 4716, 346, 301, 291, 442, 7216, 45, 284, 320, 446, 1022, 275, 319, 477, 601, 322, 8342, 5085, 275, 569, 284, 562, 2064, 1178, 622, 9878, 4716, 346, 301, 291, 442, 8342, 45, 284, 320]}
{"line_number": 344, "line_type": "original", "code": "        public UnivariatePointValuePair search(final double[] p, final double[] d) {", "entropy": 1.5234375, "is_bug_line": false, "sus_score": 0.32904, "per_token_entropy": [5.56640625, 4.953125, 3.984375, 0.0509033203125, 0.159912109375, 0.060028076171875, 6.796875, 0.1177978515625, 0.86962890625, 0.8916015625, 0.076416015625, 0.63818359375, 0.5546875, 3.12109375, 0.1055908203125, 0.089599609375, 0.1058349609375, 0.66845703125, 0.1385498046875], "tokens": [351, 562, 1683, 27623, 1943, 14782, 3233, 26, 3220, 2064, 1178, 298, 30, 1158, 2064, 1178, 343, 27, 301]}
{"line_number": 344, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.32904, "per_token_entropy": [], "tokens": []}
