{"line_number": 187, "line_type": "original", "code": "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);", "entropy": 0.92236328125, "is_bug_line": true, "sus_score": 0.50852, "per_token_entropy": [5.734375, 4.03515625, 0.377197265625, 0.051483154296875, 11.6875, 0.043792724609375, 1.9755859375, 0.06732177734375, 0.004184722900390625, 2.19921875, 0.0015363693237304688, 0.0014429092407226562, 0.001224517822265625, 1.8477439880371094e-05, 0.002918243408203125, 1.2040138244628906e-05, 0.055084228515625, 0.0072021484375, 0.0182647705078125, 2.078125, 0.00030684471130371094, 0.03533935546875, 0.11102294921875, 0.0031280517578125, 0.0098724365234375, 0.0228729248046875, 0.0015964508056640625, 0.005062103271484375, 0.062042236328125, 0.0006632804870605469, 0.00664520263671875], "tokens": [351, 1158, 394, 1178, 541, 280, 308, 70, 9795, 1383, 32, 1581, 32, 9057, 32, 1261, 32, 20262, 26, 1738, 45422, 32, 371, 26, 34, 547, 9700, 1026, 3964, 1250, 293]}
{"line_number": 187, "line_type": "generated", "code": "\n\n    /**\n     * Return the mean of the distribution.\n     *\n     * @return the mean.\n     */\n    public T getMean() {\n        double mean = 0;\n\n        for (int i = 0; i < probabilities.length; i", "entropy": 0.2110595703125, "is_bug_line": true, "sus_score": 0.50852, "per_token_entropy": [0.72509765625, 0.2178955078125, 0.039794921875, 8.96453857421875e-05, 1.55859375, 0.52880859375, 1.900390625, 0.2900390625, 0.08453369140625, 0.0103759765625, 0.012847900390625, 0.12249755859375, 0.0004949569702148438, 0.058929443359375, 0.00036787986755371094, 0.1815185546875, 0.003650665283203125, 0.041046142578125, 0.0018186569213867188, 0.666015625, 0.004871368408203125, 0.21044921875, 0.006511688232421875, 0.0753173828125, 0.2161865234375, 0.021087646484375, 0.001308441162109375, 0.0312042236328125, 0.00717926025390625, 0.296875, 1.60546875, 0.935546875, 0.1546630859375, 0.044586181640625, 0.0001976490020751953, 0.2607421875, 0.444580078125, 0.042694091796875, 0.0014066696166992188, 0.008392333984375, 0.0014057159423828125, 0.00032901763916015625, 0.0003478527069091797, 0.00030112266540527344, 0.003841400146484375, 0.0023040771484375, 0.0005092620849609375, 0.149658203125, 6.020069122314453e-05, 3.600120544433594e-05, 0.001678466796875, 0.0023250579833984375], "tokens": [446, 1022, 275, 319, 2744, 322, 5651, 432, 322, 7433, 32, 275, 319, 275, 319, 477, 601, 322, 5651, 32, 275, 569, 284, 562, 394, 622, 17081, 346, 301, 291, 2064, 5651, 280, 225, 34, 45, 584, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 35992, 32, 1322, 45, 595]}
{"line_number": 190, "line_type": "original", "code": "            out[i] = sample();", "entropy": 1.443359375, "is_bug_line": false, "sus_score": 0.43944, "per_token_entropy": [6.8125, 3.013671875, 0.01007843017578125, 0.00917816162109375, 0.01224517822265625, 0.004436492919921875, 1.26171875, 0.421875], "tokens": [1468, 963, 77, 91, 79, 280, 3964, 473]}
{"line_number": 190, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.43944, "per_token_entropy": [], "tokens": []}
{"line_number": 158, "line_type": "original", "code": "        double sum = 0;", "entropy": 1.494140625, "is_bug_line": false, "sus_score": 0.43717, "per_token_entropy": [5.40234375, 4.03515625, 0.49951171875, 0.05303955078125, 0.0926513671875, 0.00244140625, 0.376953125], "tokens": [351, 2064, 3632, 280, 225, 34, 45]}
{"line_number": 158, "line_type": "generated", "code": "\n\n    @Override\n    public String toString() {\n        final StringBuilder sb = new StringBuilder();\n        sb.append(this.getClass().getSimpleName()).append('[');\n        sb.append(\"samples=\").append(Arrays.toString(singletons.toArray()));\n       ", "entropy": 0.300537109375, "is_bug_line": false, "sus_score": 0.43717, "per_token_entropy": [1.2939453125, 1.7060546875, 0.003265380859375, 0.01027679443359375, 0.0179901123046875, 0.454345703125, 0.006229400634765625, 0.054534912109375, 0.009307861328125, 0.1258544921875, 0.29150390625, 0.138916015625, 0.468017578125, 0.003253936767578125, 0.001735687255859375, 0.00030541419982910156, 0.1090087890625, 0.1854248046875, 0.432861328125, 0.0007467269897460938, 0.0009126663208007812, 0.55615234375, 1.4814453125, 0.01026153564453125, 0.050262451171875, 0.0119476318359375, 0.0546875, 1.078125, 0.033935546875, 0.5078125, 0.677734375, 0.16796875, 0.4482421875, 0.88671875, 0.0005106925964355469, 0.00012481212615966797, 0.2041015625, 1.46484375, 0.59033203125, 0.00823974609375, 0.0005793571472167969, 0.01458740234375, 1.10546875, 0.0030612945556640625, 0.1668701171875, 0.0025177001953125, 0.2076416015625, 4.0531158447265625e-06, 0.11602783203125, 0.00768280029296875, 0.44287109375, 0.0211944580078125], "tokens": [446, 477, 1788, 284, 562, 892, 11345, 346, 301, 291, 1158, 9706, 6115, 280, 537, 9706, 473, 291, 6115, 32, 1689, 26, 578, 32, 9700, 922, 27035, 4251, 1689, 463, 710, 293, 291, 6115, 32, 1689, 440, 7088, 347, 547, 1689, 26, 9978, 32, 3108, 26, 1738, 45422, 32, 14320, 5073, 291]}
{"line_number": 189, "line_type": "original", "code": "        for (int i = 0; i < sampleSize; i++) {", "entropy": 0.4775390625, "is_bug_line": false, "sus_score": 0.40911, "per_token_entropy": [4.84765625, 2.4140625, 0.0192718505859375, 0.049285888671875, 0.0247802734375, 0.00798797607421875, 0.08538818359375, 0.055633544921875, 0.0157470703125, 0.0021152496337890625, 0.00884246826171875, 0.43896484375, 0.004276275634765625, 0.00756072998046875, 0.04010009765625, 0.006092071533203125, 0.0882568359375], "tokens": [351, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 3964, 1250, 45, 595, 1987, 301]}
{"line_number": 189, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.40911, "per_token_entropy": [], "tokens": []}
{"line_number": 182, "line_type": "original", "code": "        if (sampleSize <= 0) {", "entropy": 1.048828125, "is_bug_line": false, "sus_score": 0.34289, "per_token_entropy": [4.4296875, 2.97265625, 0.1351318359375, 0.58251953125, 0.0211181640625, 2.134765625, 0.034210205078125, 0.038421630859375, 0.01177978515625, 0.1268310546875], "tokens": [351, 415, 308, 3287, 1250, 2511, 225, 34, 27, 301]}
{"line_number": 182, "line_type": "generated", "code": "\n\n    /**\n     * Return the lower bound of the support for the distribution.\n     *\n     * The lower bound of the support is the smallest value that the distribution\n     * can take.  In most cases, there is no lower bound, and in that case", "entropy": 0.310791015625, "is_bug_line": false, "sus_score": 0.34289, "per_token_entropy": [1.8232421875, 0.282470703125, 0.074462890625, 0.00018656253814697266, 1.607421875, 0.497314453125, 1.4091796875, 0.0037937164306640625, 0.0148773193359375, 0.0234527587890625, 0.025360107421875, 0.42138671875, 0.0850830078125, 0.12017822265625, 0.005645751953125, 0.343505859375, 0.0004763603210449219, 0.1285400390625, 0.0004107952117919922, 0.1348876953125, 0.005672454833984375, 0.00021255016326904297, 0.0015687942504882812, 0.032501220703125, 0.09735107421875, 0.040130615234375, 0.1773681640625, 0.251708984375, 0.7021484375, 0.17822265625, 0.1641845703125, 0.71875, 0.004970550537109375, 5.221366882324219e-05, 0.01152801513671875, 0.01140594482421875, 0.35693359375, 1.267578125, 0.75341796875, 1.2080078125, 0.32275390625, 0.00963592529296875, 0.75341796875, 0.0117950439453125, 0.0004801750183105469, 0.018280029296875, 0.00012981891632080078, 0.91259765625, 0.487548828125, 0.57421875, 0.06689453125, 0.0188751220703125], "tokens": [446, 1022, 275, 319, 2744, 322, 7216, 5085, 432, 322, 2193, 436, 322, 7433, 32, 275, 319, 275, 319, 886, 7216, 5085, 432, 322, 2193, 438, 322, 29044, 786, 688, 322, 7433, 275, 319, 883, 4818, 32, 225, 701, 4630, 6792, 30, 2017, 438, 1289, 7216, 5085, 30, 461, 328, 688, 1135]}
