{"line_number": 183, "line_type": "original", "code": "        return iValue - ((ValuedEnum) other).iValue;", "entropy": 0.7509765625, "is_bug_line": true, "sus_score": 0.53485, "per_token_entropy": [5.06640625, 2.4453125, 1.412109375, 0.362060546875, 0.71240234375, 0.5771484375, 0.061309814453125, 4.0650367736816406e-05, 0.0009293556213378906, 0.006931304931640625, 0.27978515625, 0.0013265609741210938, 0.32080078125, 0.0001386404037475586, 0.016357421875], "tokens": [351, 442, 595, 882, 429, 1833, 1402, 8396, 2759, 27, 1604, 547, 91, 882, 45]}
{"line_number": 183, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": true, "sus_score": 0.53485, "per_token_entropy": [], "tokens": []}
{"line_number": 127, "line_type": "original", "code": "        iValue = value;", "entropy": 2.865234375, "is_bug_line": false, "sus_score": 0.33714, "per_token_entropy": [2.5703125, 8.4140625, 0.14794921875, 1.0166015625, 4.8203125, 0.2188720703125], "tokens": [351, 595, 882, 280, 786, 45]}
{"line_number": 127, "line_type": "generated", "code": "\n     */\n    public final int compareTo(Object other) {\n        if (this == other) {\n            return 0;\n        }\n        if (other == null) {\n            return 1;\n        }\n        if (this.getClass().getClassLoader()", "entropy": 0.2254638671875, "is_bug_line": false, "sus_score": 0.33714, "per_token_entropy": [1.3779296875, 0.60498046875, 0.0298004150390625, 0.034576416015625, 1.19921875, 0.0377197265625, 0.0004105567932128906, 0.0005512237548828125, 0.0015888214111328125, 0.09881591796875, 0.00244140625, 0.003082275390625, 0.0389404296875, 0.114013671875, 0.376953125, 0.0911865234375, 1.1015625, 0.19091796875, 0.0007958412170410156, 0.004909515380859375, 0.0379638671875, 0.0231170654296875, 0.006443023681640625, 0.0034580230712890625, 0.00012254714965820312, 0.0009560585021972656, 0.0182952880859375, 0.00021409988403320312, 0.4833984375, 0.47705078125, 0.10931396484375, 0.233154296875, 0.306640625, 0.0003712177276611328, 0.0205841064453125, 0.0008535385131835938, 0.0146942138671875, 0.171142578125, 0.0413818359375, 0.0013895034790039062, 0.0006184577941894531, 0.03668212890625, 0.00026035308837890625, 0.5439453125, 0.5556640625, 0.30517578125, 0.83544921875, 0.004444122314453125, 0.033447265625, 0.8115234375, 1.326171875, 0.01013946533203125], "tokens": [275, 569, 284, 562, 1158, 629, 8868, 705, 26, 959, 1604, 27, 301, 291, 415, 308, 578, 610, 1604, 27, 301, 324, 442, 225, 34, 45, 291, 320, 291, 415, 308, 2455, 610, 744, 27, 301, 324, 442, 225, 35, 45, 291, 320, 291, 415, 308, 578, 32, 9700, 922, 43995, 346]}
{"line_number": 126, "line_type": "original", "code": "        super(name);", "entropy": 3.552734375, "is_bug_line": false, "sus_score": 0.31911, "per_token_entropy": [2.978515625, 6.17578125, 4.83203125, 2.498046875, 1.28515625], "tokens": [351, 2599, 26, 426, 293]}
{"line_number": 126, "line_type": "generated", "code": "\n     */\n    public int compareTo(Object obj) {\n        if (obj == null) {\n            return 1;\n        }\n        if (obj == this) {\n            return 0;\n        }\n        if (obj.getClass().getName().equals", "entropy": 0.24560546875, "is_bug_line": false, "sus_score": 0.31911, "per_token_entropy": [1.4169921875, 0.24169921875, 0.044647216796875, 0.0287017822265625, 0.374755859375, 0.0004382133483886719, 0.0004127025604248047, 0.0017728805541992188, 0.1505126953125, 0.9013671875, 0.003749847412109375, 0.02532958984375, 0.09368896484375, 0.4228515625, 0.1083984375, 0.387451171875, 0.193359375, 0.72607421875, 0.00962066650390625, 0.036285400390625, 0.015899658203125, 0.60107421875, 0.086669921875, 0.005126953125, 0.00017249584197998047, 0.0221710205078125, 0.00030159950256347656, 0.385498046875, 0.461669921875, 0.20263671875, 0.72802734375, 0.93994140625, 0.0011806488037109375, 0.001529693603515625, 0.001987457275390625, 0.01018524169921875, 0.0014400482177734375, 0.00019037723541259766, 0.00018465518951416016, 0.00026416778564453125, 0.01107025146484375, 0.0003459453582763672, 0.34521484375, 0.60693359375, 0.318603515625, 0.456298828125, 0.445068359375, 0.003520965576171875, 0.71240234375, 1.0859375, 0.08428955078125, 0.0731201171875], "tokens": [275, 569, 284, 562, 629, 8868, 705, 26, 959, 2830, 27, 301, 291, 415, 308, 2067, 610, 744, 27, 301, 324, 442, 225, 35, 45, 291, 320, 291, 415, 308, 2067, 610, 458, 27, 301, 324, 442, 225, 34, 45, 291, 320, 291, 415, 308, 2067, 32, 9700, 922, 5165, 922, 3574]}
{"line_number": 185, "line_type": "original", "code": "", "entropy": 0.94384765625, "is_bug_line": false, "sus_score": 0.22825, "per_token_entropy": [0.94384765625], "tokens": [203]}
{"line_number": 185, "line_type": "generated", "code": "\n    /**\n     * <p>Gets the enum list.</p>\n     *\n     * <p>This method loops through the list of <code>Enum</code>,\n     * thus if there are many <code>Enum</code>s this will", "entropy": 0.2020263671875, "is_bug_line": false, "sus_score": 0.22825, "per_token_entropy": [1.0908203125, 0.1187744140625, 0.0435791015625, 8.022785186767578e-05, 0.25732421875, 0.0008883476257324219, 0.00231170654296875, 1.6083984375, 0.483642578125, 2.01171875, 0.86376953125, 1.037109375, 0.000537872314453125, 0.001049041748046875, 0.00478363037109375, 0.00025272369384765625, 0.1611328125, 0.00010836124420166016, 0.56005859375, 0.003299713134765625, 0.0268707275390625, 0.50537109375, 0.317138671875, 0.70751953125, 0.030059814453125, 0.09271240234375, 0.1588134765625, 0.01013946533203125, 0.145263671875, 0.0006170272827148438, 0.00018215179443359375, 0.00843048095703125, 0.00112152099609375, 3.743171691894531e-05, 0.1046142578125, 0.057159423828125, 1.6570091247558594e-05, 0.0160369873046875, 0.01018524169921875, 0.003826141357421875, 0.0019435882568359375, 0.001148223876953125, 0.012420654296875, 4.291534423828125e-05, 0.00031185150146484375, 0.00167083740234375, 0.0001550912857055664, 4.76837158203125e-06, 0.0030765533447265625, 0.001407623291015625, 0.0294342041015625, 0.00833892822265625], "tokens": [284, 1022, 275, 319, 333, 98, 48, 20931, 322, 3833, 1149, 1730, 98, 48, 275, 319, 275, 319, 333, 98, 48, 2272, 1411, 23737, 3919, 322, 1149, 432, 333, 687, 48, 2759, 377, 687, 2717, 275, 319, 14966, 415, 2017, 884, 5075, 333, 687, 48, 2759, 377, 687, 48, 101, 458, 1098]}
