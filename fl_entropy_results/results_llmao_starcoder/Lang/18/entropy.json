{"line_number": 414, "line_type": "original", "code": "            String prior = cTimeZoneDisplayCache.putIfAbsent(key, value);", "entropy": 2.138671875, "is_bug_line": false, "sus_score": 0.42289, "per_token_entropy": [6.90234375, 3.1796875, 10.0546875, 1.2666015625, 6.69140625, 4.859375, 0.09033203125, 0.08697509765625, 0.0181427001953125, 1.474609375, 0.78076171875, 0.0028667449951171875, 0.1455078125, 0.228759765625, 0.018585205078125, 0.52392578125, 0.0221405029296875], "tokens": [1468, 892, 9553, 280, 281, 26223, 3933, 2597, 32, 524, 2797, 28772, 26, 678, 30, 786, 293]}
{"line_number": 414, "line_type": "generated", "code": "\n        List<Rule> rules = new ArrayList<Rule>();\n\n        int[] indexRef = new int[1];\n        int[] valueRef = new int[1];\n\n        String pattern = mPattern;\n        int patternLength = pattern.length();\n\n        for", "entropy": 0.372802734375, "is_bug_line": false, "sus_score": 0.42289, "per_token_entropy": [0.332763671875, 1.73828125, 0.03350830078125, 0.007110595703125, 0.0014581680297851562, 0.02545166015625, 0.37841796875, 0.01873779296875, 0.0482177734375, 0.045074462890625, 0.0044097900390625, 0.79443359375, 1.02734375, 1.34375, 1.630859375, 1.3388671875, 0.03564453125, 0.003353118896484375, 0.0172271728515625, 8.106231689453125e-05, 0.10565185546875, 0.044525146484375, 0.0012664794921875, 0.253173828125, 1.6064453125, 1.4267578125, 0.78564453125, 0.0214080810546875, 0.002147674560546875, 0.001461029052734375, 0.00010347366333007812, 0.00547027587890625, 0.002384185791015625, 0.00028395652770996094, 0.7763671875, 1.3623046875, 0.2705078125, 0.01509857177734375, 0.33642578125, 0.0005936622619628906, 0.005985260009765625, 0.1611328125, 0.45068359375, 0.44677734375, 0.12261962890625, 0.0016927719116210938, 0.021026611328125, 0.000301361083984375, 9.083747863769531e-05, 0.0003883838653564453, 0.73779296875, 1.59765625], "tokens": [291, 1682, 46, 3842, 48, 7019, 280, 537, 5059, 46, 3842, 2923, 584, 629, 1178, 1650, 2084, 280, 537, 629, 77, 35, 970, 291, 629, 1178, 786, 2084, 280, 537, 629, 77, 35, 970, 584, 892, 5257, 280, 345, 5516, 45, 291, 629, 5257, 2380, 280, 5257, 32, 1322, 473, 584, 436]}
{"line_number": 1023, "line_type": "original", "code": "            buffer.append(mValues[calendar.get(mField)]);", "entropy": 1.5, "is_bug_line": false, "sus_score": 0.38142, "per_token_entropy": [7.74609375, 6.390625, 0.004299163818359375, 0.0193328857421875, 1.005859375, 2.54296875, 1.5830078125, 0.1373291015625, 0.537109375, 0.005733489990234375, 0.0038547515869140625, 0.0116729736328125, 2.201171875, 0.0087127685546875, 0.296875], "tokens": [1468, 3112, 32, 1689, 26, 95, 3354, 77, 10542, 32, 371, 26, 95, 1176, 36263]}
{"line_number": 1023, "line_type": "generated", "code": "\n     */\n    private static class UnpaddedMonthField implements NumberRule {\n        /**\n         * {@inheritDoc}\n         */\n        public int estimateLength() {\n            return 2;\n        }\n\n        /**\n         * {@inheritDoc}\n         */\n        public void appendTo(", "entropy": 0.0465087890625, "is_bug_line": false, "sus_score": 0.38142, "per_token_entropy": [0.442626953125, 0.11181640625, 0.0251312255859375, 0.0168304443359375, 0.0046844482421875, 0.039764404296875, 0.07403564453125, 0.0007281303405761719, 0.007717132568359375, 0.0253448486328125, 0.4287109375, 0.2294921875, 0.0015153884887695312, 0.020782470703125, 0.25341796875, 0.318359375, 0.0287017822265625, 0.00098419189453125, 0.07501220703125, 0.00037384033203125, 9.1552734375e-05, 0.01399993896484375, 0.002063751220703125, 0.00494384765625, 0.0017604827880859375, 0.0474853515625, 0.00021922588348388672, 4.589557647705078e-05, 0.0007805824279785156, 0.00013327598571777344, 0.055511474609375, 0.00736236572265625, 0.0257568359375, 0.10406494140625, 0.0006527900695800781, 0.007282257080078125, 5.984306335449219e-05, 0.01500701904296875, 0.00151824951171875, 0.0018396377563476562, 8.368492126464844e-05, 0.002552032470703125, 0.00022852420806884766, 0.00014126300811767578, 0.0038318634033203125, 0.0014905929565429688, 0.0022182464599609375, 0.00022399425506591797, 0.01126861572265625, 2.0623207092285156e-05, 3.421306610107422e-05, 6.318092346191406e-05], "tokens": [275, 569, 284, 945, 907, 443, 1683, 34294, 7357, 1176, 4575, 5104, 3842, 301, 291, 1022, 276, 319, 3088, 18446, 111, 276, 569, 291, 562, 629, 20772, 2380, 346, 301, 324, 442, 225, 36, 45, 291, 320, 584, 1022, 276, 319, 3088, 18446, 111, 276, 569, 291, 562, 763, 5489, 705, 26]}
{"line_number": 410, "line_type": "original", "code": "        String value = cTimeZoneDisplayCache.get(key);", "entropy": 2.3515625, "is_bug_line": false, "sus_score": 0.3696, "per_token_entropy": [5.0390625, 3.78125, 7.9609375, 0.327392578125, 6.92578125, 6.0546875, 0.218505859375, 0.0271148681640625, 0.00811004638671875, 0.048553466796875, 0.0164337158203125, 0.138427734375, 0.008544921875], "tokens": [351, 892, 786, 280, 281, 26223, 3933, 2597, 32, 371, 26, 678, 293]}
{"line_number": 410, "line_type": "generated", "code": "\n     * @return a List of Rule objects\n     */\n    protected List<Rule> parsePattern() {\n        List<Rule> rules = new ArrayList<Rule>();\n        StringBuffer buf = new StringBuffer();\n        int length = mPattern.length();\n        int[]", "entropy": 0.241455078125, "is_bug_line": false, "sus_score": 0.3696, "per_token_entropy": [0.1876220703125, 0.259765625, 0.1832275390625, 0.08551025390625, 0.5693359375, 0.446533203125, 0.0280609130859375, 0.82177734375, 0.344970703125, 0.6484375, 0.238525390625, 0.005016326904296875, 1.4169921875, 0.1585693359375, 0.005870819091796875, 0.0007634162902832031, 0.0004355907440185547, 0.0002865791320800781, 9.655952453613281e-06, 0.0224151611328125, 0.01097869873046875, 0.10675048828125, 0.48046875, 0.004085540771484375, 0.0029926300048828125, 0.0014657974243164062, 0.02044677734375, 0.39599609375, 0.007305145263671875, 0.038726806640625, 0.0426025390625, 0.0018672943115234375, 0.509765625, 0.73095703125, 1.775390625, 0.213623046875, 0.0010528564453125, 0.0012044906616210938, 0.0001842975616455078, 0.1651611328125, 0.22021484375, 0.336669921875, 1.2431640625, 0.06280517578125, 0.003604888916015625, 0.00019609928131103516, 0.00028061866760253906, 0.00012969970703125, 0.00020635128021240234, 0.10992431640625, 0.458251953125, 0.186279296875], "tokens": [275, 319, 477, 601, 312, 1682, 432, 13708, 4684, 275, 569, 284, 2522, 1682, 46, 3842, 48, 3185, 5516, 346, 301, 291, 1682, 46, 3842, 48, 7019, 280, 537, 5059, 46, 3842, 2923, 291, 21933, 4845, 280, 537, 21933, 473, 291, 629, 3104, 280, 345, 5516, 32, 1322, 473, 291, 629, 1178]}
{"line_number": 413, "line_type": "original", "code": "            value = tz.getDisplayName(daylight, style, locale);", "entropy": 2.111328125, "is_bug_line": false, "sus_score": 0.35441, "per_token_entropy": [8.1328125, 10.1875, 0.591796875, 8.953125, 2.279296875, 0.5888671875, 0.01390838623046875, 0.0953369140625, 0.59326171875, 0.003143310546875, 0.022552490234375, 0.052581787109375, 0.043853759765625, 0.07025146484375, 0.03570556640625], "tokens": [1468, 786, 280, 25932, 32, 371, 12566, 26, 3368, 2429, 30, 1418, 30, 11259, 293]}
{"line_number": 413, "line_type": "generated", "code": "\n    private static List<Rule> parsePattern() {\n        List<Rule> rules = new ArrayList<Rule>(8);\n        ParsePosition pos = new ParsePosition(0);\n        int patternLength = mPattern.length();\n        while (pos.getIndex", "entropy": 0.26171875, "is_bug_line": false, "sus_score": 0.35441, "per_token_entropy": [0.476806640625, 0.42578125, 1.51171875, 0.03240966796875, 0.01471710205078125, 0.0021820068359375, 0.0021533966064453125, 0.001407623291015625, 0.00016260147094726562, 0.024261474609375, 0.06201171875, 0.1483154296875, 0.5830078125, 0.0074462890625, 0.006072998046875, 0.002109527587890625, 0.021942138671875, 0.4150390625, 0.00792694091796875, 0.041717529296875, 0.0794677734375, 0.0030765533447265625, 1.2666015625, 2.43359375, 0.00042700767517089844, 0.495849609375, 1.640625, 0.0021114349365234375, 0.232666015625, 0.00382232666015625, 0.0010089874267578125, 0.0006427764892578125, 2.384185791015625e-05, 0.0009064674377441406, 0.00045609474182128906, 3.159046173095703e-05, 0.271240234375, 1.12109375, 0.8974609375, 0.047698974609375, 0.0252838134765625, 0.077880859375, 0.0165557861328125, 0.003582000732421875, 0.0001043081283569336, 0.0008792877197265625, 0.5859375, 0.5693359375, 0.029052734375, 0.005401611328125, 4.0411949157714844e-05, 0.00783538818359375], "tokens": [284, 945, 907, 1682, 46, 3842, 48, 3185, 5516, 346, 301, 291, 1682, 46, 3842, 48, 7019, 280, 537, 5059, 46, 3842, 1563, 42, 293, 291, 8661, 2731, 3400, 280, 537, 8661, 2731, 26, 34, 293, 291, 629, 5257, 2380, 280, 345, 5516, 32, 1322, 473, 291, 2218, 308, 966, 32, 27829]}
{"line_number": 1248, "line_type": "original", "code": "            buffer.append((char)(value % 10 + '0'));", "entropy": 0.58642578125, "is_bug_line": false, "sus_score": 0.32026, "per_token_entropy": [3.630859375, 3.4375, 0.010711669921875, 0.017578125, 0.39013671875, 0.01544189453125, 0.16748046875, 0.07427978515625, 1.3837890625, 0.00838470458984375, 0.0240936279296875, 0.12890625, 0.021820068359375, 0.00682830810546875, 0.03375244140625, 0.0300445556640625], "tokens": [1468, 3112, 32, 1689, 1162, 1594, 2502, 853, 904, 225, 35, 34, 474, 330, 34, 4646]}
{"line_number": 1248, "line_type": "generated", "code": "\n         * @param rule the {@code NumberRule} to delegate to\n         */\n        TwelveHourField(NumberRule rule) {\n            super();\n            mRule = rule;\n        }\n\n        /**\n         * {@inheritDoc}\n         */\n        public int estimate", "entropy": 0.12347412109375, "is_bug_line": false, "sus_score": 0.32026, "per_token_entropy": [0.37353515625, 0.463134765625, 0.2164306640625, 0.002777099609375, 0.03375244140625, 0.65869140625, 0.65576171875, 0.0025539398193359375, 0.01520538330078125, 0.00151824951171875, 0.1341552734375, 0.865234375, 1.4072265625, 0.25439453125, 0.333740234375, 0.0244140625, 0.005931854248046875, 0.02520751953125, 9.5367431640625e-07, 1.0728836059570312e-06, 4.76837158203125e-07, 4.0531158447265625e-06, 0.00091552734375, 0.127685546875, 3.0875205993652344e-05, 0.00025963783264160156, 0.00125885009765625, 0.0027332305908203125, 0.0203399658203125, 0.2822265625, 0.0002524852752685547, 0.346435546875, 0.0362548828125, 4.935264587402344e-05, 0.002147674560546875, 0.0132598876953125, 0.00308990478515625, 0.00902557373046875, 3.4689903259277344e-05, 0.022705078125, 0.00363922119140625, 0.001953125, 0.00034809112548828125, 0.0279388427734375, 7.772445678710938e-05, 0.0001163482666015625, 0.009307861328125, 0.005950927734375, 0.004833221435546875, 0.001110076904296875, 0.0258636474609375, 0.00024509429931640625], "tokens": [276, 319, 477, 753, 5750, 322, 3088, 687, 5104, 3842, 111, 372, 11165, 372, 276, 569, 291, 12038, 342, 587, 14415, 1176, 26, 1918, 3842, 5750, 27, 301, 324, 2599, 473, 324, 345, 3842, 280, 5750, 45, 291, 320, 584, 1022, 276, 319, 3088, 18446, 111, 276, 569, 291, 562, 629, 20772]}
