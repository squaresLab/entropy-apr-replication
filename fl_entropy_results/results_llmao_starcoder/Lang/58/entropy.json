{"line_number": 464, "line_type": "original", "code": "                    throw new NumberFormatException(str + \" is not a valid number.\");", "entropy": 0.8857421875, "is_bug_line": false, "sus_score": 0.79726, "per_token_entropy": [5.09375, 7.94140625, 0.0204315185546875, 0.033660888671875, 0.0006966590881347656, 0.0257568359375, 0.01861572265625, 0.06475830078125, 0.06982421875, 0.0006017684936523438, 0.0025424957275390625, 0.0002562999725341797, 0.00022089481353759766, 0.00756072998046875, 0.00783538818359375], "tokens": [4696, 1422, 537, 5104, 25944, 26, 466, 474, 313, 438, 646, 312, 2080, 1451, 5368]}
{"line_number": 464, "line_type": "generated", "code": "\n                try {\n                    return createLong(str);\n                } catch (NumberFormatException nfe) {\n                    // ignore the bad number\n                }\n                try {\n                    return createBigInteger(str);\n                } catch (NumberFormatException nfe) {\n                    // ignore the", "entropy": 0.049346923828125, "is_bug_line": false, "sus_score": 0.79726, "per_token_entropy": [0.35791015625, 0.09722900390625, 0.001338958740234375, 0.007617950439453125, 0.055389404296875, 0.0018253326416015625, 0.016693115234375, 0.00022077560424804688, 0.0014743804931640625, 0.00040411949157714844, 0.0081939697265625, 0.0002529621124267578, 0.004497528076171875, 0.0004723072052001953, 0.0016155242919921875, 1.6689300537109375e-05, 0.00518035888671875, 0.0005049705505371094, 0.0015401840209960938, 0.0005230903625488281, 0.0107421875, 0.023040771484375, 0.133544921875, 0.0006194114685058594, 6.103515625e-05, 0.00122833251953125, 0.01531982421875, 0.0003380775451660156, 0.162109375, 1.3173828125, 0.0009489059448242188, 0.007045745849609375, 0.01535797119140625, 0.0005321502685546875, 0.00144195556640625, 6.639957427978516e-05, 0.0011663436889648438, 0.0010204315185546875, 0.005672454833984375, 0.0009217262268066406, 0.00670623779296875, 0.0004570484161376953, 0.0006856918334960938, 3.135204315185547e-05, 0.1873779296875, 0.01543426513671875, 0.00036835670471191406, 0.0009331703186035156, 0.0080108642578125, 0.0246429443359375, 0.059173583984375, 0.0012378692626953125], "tokens": [400, 1596, 301, 528, 442, 1487, 3952, 26, 466, 293, 400, 320, 2368, 308, 1918, 25944, 310, 1225, 27, 301, 528, 434, 5079, 322, 6658, 1451, 400, 320, 400, 1596, 301, 528, 442, 1487, 21541, 26, 466, 293, 400, 320, 2368, 308, 1918, 25944, 310, 1225, 27, 301, 528, 434, 5079, 322]}
{"line_number": 1508, "line_type": "original", "code": "            return false;", "entropy": 2.08984375, "is_bug_line": false, "sus_score": 0.73833, "per_token_entropy": [3.291015625, 4.859375, 0.2081298828125, 0.0021877288818359375], "tokens": [1468, 442, 901, 45]}
{"line_number": 1508, "line_type": "generated", "code": "\n            }\n        }\n        sz--; // don't want to loop to the last char, check it afterwords\n        // for type qualifiers\n        int i = start;\n        // loop to the next to last char or to the last char if we need another", "entropy": 0.03887939453125, "is_bug_line": false, "sus_score": 0.73833, "per_token_entropy": [0.2115478515625, 0.036407470703125, 0.1461181640625, 0.01131439208984375, 0.03857421875, 0.035430908203125, 0.0010099411010742188, 0.0063323974609375, 0.0313720703125, 9.417533874511719e-06, 0.0105438232421875, 0.0002675056457519531, 0.0286407470703125, 0.00016176700592041016, 0.00841522216796875, 0.0206146240234375, 0.0050048828125, 9.441375732421875e-05, 0.0014820098876953125, 3.838539123535156e-05, 0.0001348257064819336, 0.004848480224609375, 0.78369140625, 0.07275390625, 0.288818359375, 0.00038886070251464844, 0.00931549072265625, 0.0009899139404296875, 0.0009565353393554688, 0.0126190185546875, 0.0003752708435058594, 0.0007219314575195312, 0.00012028217315673828, 0.0006704330444335938, 0.024169921875, 0.064697265625, 0.111328125, 0.0004563331604003906, 0.00045180320739746094, 0.00048470497131347656, 0.001605987548828125, 0.00023889541625976562, 0.0240478515625, 0.0015668869018554688, 0.0002498626708984375, 5.8650970458984375e-05, 0.005794525146484375, 0.004489898681640625, 2.086162567138672e-05, 0.00905609130859375, 0.0006852149963378906, 0.0018377304077148438], "tokens": [324, 320, 291, 320, 291, 8549, 10612, 434, 2800, 1330, 2637, 372, 5258, 372, 322, 2401, 1351, 30, 1505, 561, 2685, 4068, 291, 434, 436, 827, 7193, 6667, 291, 629, 595, 280, 1477, 45, 291, 434, 5258, 372, 322, 2354, 372, 2401, 1351, 556, 372, 322, 2401, 1351, 415, 996, 1849, 4674]}
{"line_number": 452, "line_type": "original", "code": "                    if (dec == null", "entropy": 2.123046875, "is_bug_line": true, "sus_score": 0.5177, "per_token_entropy": [7.78125, 0.73486328125, 0.05572509765625, 4.140625, 0.017547607421875, 0.0004715919494628906], "tokens": [4696, 415, 308, 6114, 610, 744]}
{"line_number": 452, "line_type": "generated", "code": "\n                if (expPos > -1 && expPos < str.length() - 1) {\n                    exp = str.substring(expPos + 1, str.length());\n                } else {\n                    exp = null;\n                }\n                if (", "entropy": 0.08746337890625, "is_bug_line": true, "sus_score": 0.5177, "per_token_entropy": [1.421875, 0.81982421875, 0.057220458984375, 0.0887451171875, 0.101806640625, 0.0088043212890625, 0.0006427764892578125, 0.0003504753112792969, 0.271240234375, 0.005268096923828125, 0.01422882080078125, 0.0259552001953125, 0.00994873046875, 0.0001423358917236328, 4.7087669372558594e-05, 0.1683349609375, 0.000705718994140625, 0.006076812744140625, 0.00021839141845703125, 0.05499267578125, 0.004085540771484375, 0.07122802734375, 0.048492431640625, 0.0003228187561035156, 0.00281524658203125, 0.002044677734375, 3.4570693969726562e-06, 8.71419906616211e-05, 9.97781753540039e-05, 8.106231689453125e-06, 0.004802703857421875, 1.7762184143066406e-05, 1.728534698486328e-05, 0.07135009765625, 0.0036945343017578125, 0.0004487037658691406, 0.00012111663818359375, 0.042266845703125, 0.0626220703125, 0.0004131793975830078, 0.1351318359375, 0.00980377197265625, 0.0036468505859375, 0.00330352783203125, 0.0002200603485107422, 0.0002906322479248047, 4.410743713378906e-05, 0.0025577545166015625, 0.0006399154663085938, 0.298583984375, 0.67529296875, 0.045562744140625], "tokens": [400, 415, 308, 2832, 2996, 848, 429, 35, 962, 2910, 2996, 333, 596, 32, 1322, 346, 429, 225, 35, 27, 301, 528, 2910, 280, 596, 32, 8723, 26, 2832, 2996, 474, 225, 35, 30, 596, 32, 1322, 1035, 400, 320, 813, 301, 528, 2910, 280, 744, 45, 400, 320, 400, 415, 308]}
{"line_number": 404, "line_type": "original", "code": "        if (str.startsWith(\"--\")) {", "entropy": 1.939453125, "is_bug_line": false, "sus_score": 0.49886, "per_token_entropy": [5.4375, 3.21484375, 0.1485595703125, 5.10546875, 0.003032684326171875, 0.60546875, 1.3876953125, 1.3857421875, 0.1583251953125], "tokens": [351, 415, 308, 466, 32, 13912, 13692, 2131, 301]}
{"line_number": 404, "line_type": "generated", "code": "\n                        && (numeric.charAt(0) == '-' || numeric.charAt(0) == '+')) {\n                        try {\n                            return createInteger(numeric);\n                        } catch (NumberFormatException nfe) {\n                            // keep trying other types\n                        }\n                    }", "entropy": 0.2115478515625, "is_bug_line": false, "sus_score": 0.49886, "per_token_entropy": [0.364501953125, 0.088134765625, 0.62646484375, 1.09375, 0.00013577938079833984, 0.417724609375, 1.5616416931152344e-05, 0.072509765625, 0.00010883808135986328, 0.0010118484497070312, 0.023406982421875, 0.9267578125, 1.4326171875, 0.0003592967987060547, 0.0018215179443359375, 2.384185791015625e-05, 9.953975677490234e-05, 0.006954193115234375, 5.7816505432128906e-05, 0.0017881393432617188, 0.5625, 0.0203857421875, 0.490966796875, 0.2646484375, 0.016265869140625, 0.1297607421875, 0.460205078125, 0.0291290283203125, 0.43310546875, 0.0014324188232421875, 0.009918212890625, 0.020751953125, 0.0113983154296875, 4.589557647705078e-05, 0.129150390625, 0.005584716796875, 0.25537109375, 1.239776611328125e-05, 0.0033550262451171875, 0.00010085105895996094, 0.0073089599609375, 0.253662109375, 0.08013916015625, 0.10986328125, 1.7802734375, 0.27587890625, 0.50390625, 0.0313720703125, 0.00911712646484375, 0.00142669677734375, 0.047760009765625, 0.0004832744598388672], "tokens": [715, 962, 308, 10125, 32, 15611, 26, 34, 27, 610, 20514, 1276, 12738, 32, 15611, 26, 34, 27, 610, 10699, 2847, 301, 715, 1596, 301, 1014, 442, 1487, 3061, 26, 10125, 293, 715, 320, 2368, 308, 1918, 25944, 310, 1225, 27, 301, 1014, 434, 4986, 7667, 1604, 3738, 715, 320, 528, 320]}
{"line_number": 1507, "line_type": "original", "code": "        if (StringUtils.isEmpty(str)) {", "entropy": 1.822265625, "is_bug_line": false, "sus_score": 0.41291, "per_token_entropy": [4.48046875, 3.7109375, 0.0789794921875, 8.390625, 0.008697509765625, 1.3076171875, 0.044525146484375, 0.06939697265625, 0.09197998046875, 0.030517578125], "tokens": [351, 415, 308, 15209, 32, 6393, 26, 466, 490, 301]}
{"line_number": 1507, "line_type": "generated", "code": "\n                return true;\n            }\n        }\n        sz--; // don't want to loop to the last char, check it afterwords\n        // for type qualifiers\n        int i = start;\n        // loop to the next to last char or to the last char", "entropy": 0.07037353515625, "is_bug_line": false, "sus_score": 0.41291, "per_token_entropy": [0.380615234375, 0.029571533203125, 1.466796875, 0.0018281936645507812, 0.04547119140625, 0.004169464111328125, 0.074951171875, 0.00240325927734375, 0.07025146484375, 0.00859832763671875, 0.0015535354614257812, 0.008575439453125, 0.0252532958984375, 9.179115295410156e-06, 0.0101165771484375, 0.0002321004867553711, 0.027923583984375, 0.00014066696166992188, 0.00945281982421875, 0.02288818359375, 0.005107879638671875, 0.00010943412780761719, 0.00177001953125, 3.218650817871094e-05, 0.00014638900756835938, 0.005306243896484375, 0.75244140625, 0.0718994140625, 0.361328125, 0.0004892349243164062, 0.010833740234375, 0.0009126663208007812, 0.0024356842041015625, 0.00542449951171875, 0.0004787445068359375, 0.0008015632629394531, 9.393692016601562e-05, 0.0007276535034179688, 0.03216552734375, 0.059417724609375, 0.11529541015625, 0.000453948974609375, 0.00046563148498535156, 0.0005655288696289062, 0.001346588134765625, 0.00024962425231933594, 0.025482177734375, 0.0015125274658203125, 0.00029850006103515625, 4.7206878662109375e-05, 0.00579071044921875, 0.005229949951171875], "tokens": [400, 442, 861, 45, 324, 320, 291, 320, 291, 8549, 10612, 434, 2800, 1330, 2637, 372, 5258, 372, 322, 2401, 1351, 30, 1505, 561, 2685, 4068, 291, 434, 436, 827, 7193, 6667, 291, 629, 595, 280, 1477, 45, 291, 434, 5258, 372, 322, 2354, 372, 2401, 1351, 556, 372, 322, 2401, 1351]}
