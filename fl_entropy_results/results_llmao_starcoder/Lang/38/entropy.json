{"line_number": 1303, "line_type": "original", "code": "                buffer.append((char)(value / 10 + '0'));", "entropy": 0.708984375, "is_bug_line": false, "sus_score": 0.33228, "per_token_entropy": [8.3125, 1.765625, 0.0014562606811523438, 0.002109527587890625, 0.1820068359375, 0.004207611083984375, 0.16650390625, 0.03765869140625, 0.8544921875, 0.001613616943359375, 0.00015878677368164062, 9.882450103759766e-05, 0.01043701171875, 0.0025806427001953125, 0.00014507770538330078, 0.0022792816162109375], "tokens": [2071, 3112, 32, 1689, 1162, 1594, 2502, 853, 517, 225, 35, 34, 474, 330, 34, 4646]}
{"line_number": 1303, "line_type": "generated", "code": "\n        public void appendTo(StringBuffer buffer, int value) {\n            if (value < 10) {\n                buffer.append((char)(value + '0'));\n            } else {\n                buffer.append((char)(value / 10 +", "entropy": 0.08245849609375, "is_bug_line": false, "sus_score": 0.33228, "per_token_entropy": [0.1905517578125, 0.043304443359375, 0.33984375, 0.0003120899200439453, 0.0001811981201171875, 0.00029921531677246094, 0.0013761520385742188, 0.0005397796630859375, 9.226799011230469e-05, 0.01117706298828125, 0.0083465576171875, 0.0008220672607421875, 0.00791168212890625, 0.07525634765625, 1.1513671875, 0.006198883056640625, 0.00833892822265625, 0.212158203125, 0.006305694580078125, 0.322998046875, 0.0011587142944335938, 0.35009765625, 0.0014257431030273438, 0.1451416015625, 0.004909515380859375, 2.8014183044433594e-05, 0.00014352798461914062, 0.560546875, 0.00048160552978515625, 0.1199951171875, 0.0003867149353027344, 0.0260162353515625, 0.008575439453125, 0.00018537044525146484, 0.0001405477523803711, 0.08465576171875, 0.00033020973205566406, 0.0053863525390625, 0.1475830078125, 0.06640625, 0.1080322265625, 6.580352783203125e-05, 0.00015676021575927734, 0.1578369140625, 0.007171630859375, 0.09173583984375, 0.00013768672943115234, 0.0068817138671875, 0.00046515464782714844, 2.562999725341797e-05, 4.5299530029296875e-06, 0.005344390869140625], "tokens": [291, 562, 763, 5489, 705, 26, 35322, 3112, 30, 629, 786, 27, 301, 324, 415, 308, 853, 333, 225, 35, 34, 27, 301, 400, 3112, 32, 1689, 1162, 1594, 2502, 853, 474, 330, 34, 4646, 324, 320, 813, 301, 400, 3112, 32, 1689, 1162, 1594, 2502, 853, 517, 225, 35, 34, 474]}
{"line_number": 1300, "line_type": "original", "code": "                for (int i = mSize; --i >= 2; ) {", "entropy": 1.0078125, "is_bug_line": false, "sus_score": 0.30853, "per_token_entropy": [7.7578125, 6.34375, 0.0279083251953125, 0.04083251953125, 0.0672607421875, 0.01186370849609375, 1.9677734375, 0.2900390625, 0.1124267578125, 0.06280517578125, 0.0010423660278320312, 0.0653076171875, 0.265380859375, 0.0316162109375, 0.049285888671875, 0.005046844482421875, 0.031219482421875], "tokens": [2071, 436, 308, 410, 595, 280, 345, 1250, 45, 769, 91, 2377, 225, 36, 45, 829, 301]}
{"line_number": 1300, "line_type": "generated", "code": "\n        /**\n         * {@inheritDoc}\n         */\n        public void appendTo(StringBuffer buffer, int value) {\n            if (value < 10) {\n                buffer.append((char)(value + '0'));\n            } else {\n                buffer.append", "entropy": 0.0628662109375, "is_bug_line": false, "sus_score": 0.30853, "per_token_entropy": [0.8125, 0.318115234375, 0.014251708984375, 0.00016736984252929688, 0.04656982421875, 6.80685043334961e-05, 6.890296936035156e-05, 0.001201629638671875, 0.00992584228515625, 0.00711822509765625, 0.0027256011962890625, 0.334228515625, 0.0004096031188964844, 0.00024139881134033203, 0.00019478797912597656, 0.0012426376342773438, 0.0002872943878173828, 7.009506225585938e-05, 0.0199432373046875, 0.006465911865234375, 0.00033354759216308594, 0.0018100738525390625, 0.0516357421875, 0.80224609375, 0.004764556884765625, 0.004459381103515625, 0.09405517578125, 0.0023899078369140625, 0.173095703125, 0.0008563995361328125, 0.1683349609375, 0.0011301040649414062, 0.15185546875, 0.002170562744140625, 1.5139579772949219e-05, 0.00010466575622558594, 0.09661865234375, 0.0004627704620361328, 0.027587890625, 0.00011229515075683594, 0.0008902549743652344, 0.0022907257080078125, 3.0875205993652344e-05, 0.00011444091796875, 0.019866943359375, 0.00017952919006347656, 0.0027599334716796875, 0.01178741455078125, 0.04986572265625, 0.022186279296875, 2.658367156982422e-05, 0.00012803077697753906], "tokens": [291, 1022, 276, 319, 3088, 18446, 111, 276, 569, 291, 562, 763, 5489, 705, 26, 35322, 3112, 30, 629, 786, 27, 301, 324, 415, 308, 853, 333, 225, 35, 34, 27, 301, 400, 3112, 32, 1689, 1162, 1594, 2502, 853, 474, 330, 34, 4646, 324, 320, 813, 301, 400, 3112, 32, 1689]}
{"line_number": 182, "line_type": "original", "code": "        return getInstance(pattern, timeZone, null);", "entropy": 1.7353515625, "is_bug_line": false, "sus_score": 0.27968, "per_token_entropy": [4.37890625, 2.34375, 0.60400390625, 0.13623046875, 3.517578125, 0.037353515625, 2.509765625, 0.00203704833984375, 0.039398193359375, 5.5078125, 0.01424407958984375], "tokens": [351, 442, 31637, 26, 5607, 30, 1133, 6767, 30, 744, 293]}
{"line_number": 182, "line_type": "generated", "code": "\n    }\n\n    /**\n     * <p>Gets a time formatter instance using the specified style in the\n     * default time zone and locale.</p>\n     * \n     * @param style  time style: FULL, LONG, MEDIUM, or SHORT\n    ", "entropy": 0.050750732421875, "is_bug_line": false, "sus_score": 0.27968, "per_token_entropy": [1.521484375, 0.0738525390625, 0.09906005859375, 0.14013671875, 0.004726409912109375, 0.0007457733154296875, 0.01092529296875, 1.1086463928222656e-05, 8.571147918701172e-05, 0.00638580322265625, 0.0062255859375, 0.51025390625, 0.007965087890625, 0.0008478164672851562, 0.0010166168212890625, 0.0002472400665283203, 0.002628326416015625, 0.004852294921875, 0.10107421875, 0.0251312255859375, 0.0006451606750488281, 1.4901161193847656e-05, 0.007709503173828125, 0.019775390625, 0.00016379356384277344, 0.00272369384765625, 0.002300262451171875, 0.00919342041015625, 2.777576446533203e-05, 0.00015354156494140625, 0.0019588470458984375, 7.271766662597656e-06, 0.0152435302734375, 8.928775787353516e-05, 0.025787353515625, 0.00024044513702392578, 0.00026035308837890625, 0.0031890869140625, 0.00957489013671875, 0.0007901191711425781, 0.00021195411682128906, 4.947185516357422e-05, 9.21487808227539e-05, 0.00037980079650878906, 6.99758529663086e-05, 0.00039124488830566406, 1.430511474609375e-06, 0.004718780517578125, 0.0014028549194335938, 0.0024280548095703125, 5.602836608886719e-06, 0.010894775390625], "tokens": [284, 320, 446, 1022, 275, 319, 333, 98, 48, 20931, 312, 1133, 14971, 1980, 1471, 322, 3191, 1418, 328, 322, 275, 319, 1244, 1133, 10790, 461, 11259, 1730, 98, 48, 275, 319, 5384, 319, 477, 753, 1418, 225, 1133, 1418, 44, 39398, 30, 27040, 30, 27513, 34252, 30, 556, 5312, 2426, 275]}
{"line_number": 1301, "line_type": "original", "code": "                    buffer.append('0');", "entropy": 2.328125, "is_bug_line": false, "sus_score": 0.27783, "per_token_entropy": [9.75, 3.37109375, 0.0019369125366210938, 0.005474090576171875, 2.939453125, 0.2144775390625, 0.017578125], "tokens": [4696, 3112, 32, 1689, 463, 34, 895]}
{"line_number": 1301, "line_type": "generated", "code": "\n        /**\n         * {@inheritDoc}\n         */\n        public void appendTo(StringBuffer buffer, int value) {\n            buffer.append((char)(value / 10 + '0'));\n            buffer.append((char)(value % 10 + '", "entropy": 0.068603515625, "is_bug_line": false, "sus_score": 0.27783, "per_token_entropy": [0.58349609375, 1.318359375, 0.1192626953125, 0.0012273788452148438, 0.04119873046875, 9.751319885253906e-05, 9.72747802734375e-05, 0.01100921630859375, 0.00893402099609375, 0.0216827392578125, 0.0074462890625, 0.461669921875, 0.00040030479431152344, 0.0002512931823730469, 0.00020313262939453125, 0.0012826919555664062, 0.0004019737243652344, 6.508827209472656e-05, 0.01666259765625, 0.00530242919921875, 0.0003783702850341797, 0.005283355712890625, 0.0963134765625, 0.67138671875, 0.00043845176696777344, 0.0007481575012207031, 0.0731201171875, 0.00205230712890625, 0.0947265625, 0.0005545616149902344, 0.005519866943359375, 0.0008807182312011719, 3.921985626220703e-05, 1.1324882507324219e-05, 0.002254486083984375, 0.0017080307006835938, 3.528594970703125e-05, 0.0007271766662597656, 0.0108489990234375, 0.0010423660278320312, 5.7578086853027344e-05, 1.9311904907226562e-05, 4.7087669372558594e-05, 4.291534423828125e-05, 0.0002143383026123047, 4.470348358154297e-05, 0.00030541419982910156, 6.592273712158203e-05, 2.86102294921875e-06, 4.088878631591797e-05, 6.73532485961914e-05, 4.3511390686035156e-05], "tokens": [291, 1022, 276, 319, 3088, 18446, 111, 276, 569, 291, 562, 763, 5489, 705, 26, 35322, 3112, 30, 629, 786, 27, 301, 324, 3112, 32, 1689, 1162, 1594, 2502, 853, 517, 225, 35, 34, 474, 330, 34, 4646, 324, 3112, 32, 1689, 1162, 1594, 2502, 853, 904, 225, 35, 34, 474, 330]}
{"line_number": 1430, "line_type": "original", "code": "            buffer.append((char)(value / 10 + '0'));", "entropy": 0.8017578125, "is_bug_line": false, "sus_score": 0.26035, "per_token_entropy": [8.0703125, 3.23828125, 0.006687164306640625, 0.0079345703125, 0.12322998046875, 0.01129150390625, 0.1199951171875, 0.030029296875, 1.158203125, 0.00478363037109375, 0.0141754150390625, 0.0016021728515625, 0.0276641845703125, 0.004131317138671875, 0.005126953125, 0.000995635986328125], "tokens": [1468, 3112, 32, 1689, 1162, 1594, 2502, 853, 517, 225, 35, 34, 474, 330, 34, 4646]}
{"line_number": 1430, "line_type": "generated", "code": "\n    private static class TwentyFourHourField implements NumberRule {\n        private final NumberRule mRule;\n\n        /**\n         * Constructs an instance of <code>TwentyFourHourField</code> with the specified\n         * <code>NumberRule</code", "entropy": 0.0155487060546875, "is_bug_line": false, "sus_score": 0.26035, "per_token_entropy": [0.27880859375, 0.060089111328125, 0.00327301025390625, 0.006702423095703125, 0.0050201416015625, 0.00012040138244628906, 0.01192474365234375, 0.0006818771362304688, 0.0004916191101074219, 0.05242919921875, 0.00241851806640625, 0.00013184547424316406, 0.009613037109375, 0.042938232421875, 0.10400390625, 0.024383544921875, 0.01467132568359375, 0.00023877620697021484, 0.0013875961303710938, 0.0004878044128417969, 0.003047943115234375, 0.037506103515625, 0.01397705078125, 0.0016326904296875, 6.401538848876953e-05, 0.0026149749755859375, 0.0015707015991210938, 0.0005865097045898438, 0.0005331039428710938, 0.0026302337646484375, 0.00012576580047607422, 0.00016391277313232422, 0.0268707275390625, 0.00821685791015625, 0.0036220550537109375, 0.0012302398681640625, 0.00018727779388427734, 0.002655029296875, 3.647804260253906e-05, 0.007904052734375, 0.00675201416015625, 0.002727508544921875, 0.041412353515625, 0.0042572021484375, 0.00012612342834472656, 0.01096343994140625, 0.0002048015594482422, 5.2094459533691406e-05, 0.005863189697265625, 0.0009002685546875, 0.00034046173095703125, 2.193450927734375e-05], "tokens": [284, 945, 907, 443, 12038, 25570, 19630, 14415, 1176, 4575, 5104, 3842, 301, 291, 945, 1158, 5104, 3842, 345, 3842, 45, 584, 1022, 276, 319, 29799, 600, 1980, 432, 333, 687, 48, 10267, 25570, 19630, 14415, 1176, 377, 687, 48, 623, 322, 3191, 276, 319, 333, 687, 48, 1918, 3842, 377, 687]}
