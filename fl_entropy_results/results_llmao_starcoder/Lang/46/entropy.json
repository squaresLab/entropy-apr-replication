{"line_number": 244, "line_type": "original", "code": "                            out.write('\\\\');", "entropy": 3.349609375, "is_bug_line": true, "sus_score": 0.46973, "per_token_entropy": [11.7734375, 5.7578125, 0.029632568359375, 0.012298583984375, 2.44921875, 0.07275390625], "tokens": [9316, 963, 32, 1821, 40348, 895]}
{"line_number": 244, "line_type": "generated", "code": "\n     * <p>For example, it will turn a sequence of <code>'\\'</code> and\n     * <code>'n'</code> into a newline character, unless the <code>'\\'</code>\n     * is preceded by another", "entropy": 0.038360595703125, "is_bug_line": true, "sus_score": 0.46973, "per_token_entropy": [0.362548828125, 0.025665283203125, 1.3037109375, 0.0592041015625, 0.00962066650390625, 0.002498626708984375, 0.00020432472229003906, 0.0004074573516845703, 2.658367156982422e-05, 4.291534423828125e-05, 0.030731201171875, 2.3484230041503906e-05, 8.666515350341797e-05, 2.1457672119140625e-06, 0.004638671875, 0.024566650390625, 0.003017425537109375, 0.003101348876953125, 7.212162017822266e-05, 3.0994415283203125e-05, 0.0007557868957519531, 0.00353240966796875, 0.002017974853515625, 0.00013267993927001953, 0.0001519918441772461, 0.002254486083984375, 3.9577484130859375e-05, 5.7220458984375e-06, 0.0008997917175292969, 1.0728836059570312e-06, 9.882450103759766e-05, 0.00021195411682128906, 4.5299530029296875e-06, 5.435943603515625e-05, 0.0017461776733398438, 0.139892578125, 0.0035572052001953125, 0.00019025802612304688, 0.00019633769989013672, 7.128715515136719e-05, 0.00014507770538330078, 9.059906005859375e-06, 5.233287811279297e-05, 4.76837158203125e-07, 6.9141387939453125e-06, 0.00787353515625, 0.00013840198516845703, 5.6743621826171875e-05, 0.0005464553833007812, 1.1324882507324219e-05, 1.537799835205078e-05, 0.00022602081298828125], "tokens": [275, 319, 333, 98, 48, 1562, 2280, 30, 561, 1098, 6927, 312, 6613, 432, 333, 687, 6457, 6945, 377, 687, 48, 461, 275, 319, 333, 687, 6457, 96, 14679, 687, 48, 1991, 312, 25521, 5341, 30, 7351, 322, 333, 687, 6457, 6945, 377, 687, 48, 275, 319, 438, 48911, 981, 810, 4674]}
{"line_number": 86, "line_type": "original", "code": "        return escapeJavaStyleString(str, false);", "entropy": 1.8525390625, "is_bug_line": true, "sus_score": 0.46222, "per_token_entropy": [5.7421875, 4.421875, 0.603515625, 0.010772705078125, 0.021759033203125, 0.0016641616821289062, 0.0162200927734375, 4.8984375, 0.00601959228515625, 3.693359375, 0.96142578125], "tokens": [351, 442, 15820, 5433, 2275, 652, 26, 466, 30, 901, 293]}
{"line_number": 86, "line_type": "generated", "code": "\n    }\n\n    /**\n     * <p>Escapes the characters in a <code>String</code> using JSON String rules.</p>\n     * \n     * <p>Escapes any values it finds into their JSON String form.\n     * </p", "entropy": 0.159423828125, "is_bug_line": true, "sus_score": 0.46222, "per_token_entropy": [1.5810546875, 0.452392578125, 0.10595703125, 0.1490478515625, 0.01268768310546875, 5.710124969482422e-05, 0.035308837890625, 7.152557373046875e-05, 0.0031375885009765625, 0.52734375, 4.8995018005371094e-05, 0.002925872802734375, 0.013214111328125, 0.0002620220184326172, 0.00027060508728027344, 0.000789642333984375, 0.0017414093017578125, 0.0002486705780029297, 0.0037555694580078125, 2.6941299438476562e-05, 7.152557373046875e-07, 0.0035381317138671875, 0.021759033203125, 0.52392578125, 0.0098419189453125, 0.0032329559326171875, 0.042694091796875, 3.2782554626464844e-05, 0.0006947517395019531, 0.01146697998046875, 0.0002942085266113281, 0.96044921875, 0.0002396106719970703, 0.0068817138671875, 0.03363037109375, 0.0074615478515625, 0.81591796875, 0.0008668899536132812, 0.0714111328125, 0.0289306640625, 0.0017786026000976562, 0.0001932382583618164, 0.105712890625, 0.006954193115234375, 0.142333984375, 0.0287628173828125, 0.0004267692565917969, 0.02056884765625, 0.110595703125, 0.0001462697982788086, 2.4375, 0.0007710456848144531], "tokens": [284, 320, 446, 1022, 275, 319, 333, 98, 48, 24866, 10247, 322, 7125, 328, 312, 333, 687, 48, 652, 377, 687, 48, 1471, 3398, 892, 7019, 1730, 98, 48, 275, 319, 5384, 319, 333, 98, 48, 24866, 10247, 1346, 2078, 561, 27167, 1991, 3623, 3398, 892, 2234, 32, 275, 319, 576, 98]}
{"line_number": 187, "line_type": "original", "code": "        for (int i = 0; i < sz; i++) {", "entropy": 0.787109375, "is_bug_line": false, "sus_score": 0.42943, "per_token_entropy": [5.6328125, 6.296875, 0.08709716796875, 0.15625, 0.01108551025390625, 0.0083770751953125, 0.0016660690307617188, 0.0034160614013671875, 0.0180511474609375, 0.0005145072937011719, 0.1925048828125, 0.0423583984375, 0.0042877197265625, 0.0411376953125, 0.0159912109375, 0.08380126953125], "tokens": [351, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 8549, 45, 595, 1987, 301]}
{"line_number": 187, "line_type": "generated", "code": "\n                        out.write('\\\"');\n                        break;\n                    case '\\\\' :\n                        out.write('\\\\');\n                        out.write('\\\\');\n                        break;\n                    default :\n                        out.write(ch);\n                        break;\n                }\n            }", "entropy": 0.09600830078125, "is_bug_line": false, "sus_score": 0.42943, "per_token_entropy": [0.6826171875, 0.287841796875, 0.0001304149627685547, 0.0001481771469116211, 1.5361328125, 0.0287628173828125, 0.0008645057678222656, 0.2744140625, 0.0009245872497558594, 0.002437591552734375, 0.037445068359375, 0.0087738037109375, 0.0205841064453125, 0.2257080078125, 9.250640869140625e-05, 0.049957275390625, 0.0010557174682617188, 0.0009517669677734375, 3.0994415283203125e-06, 0.1356201171875, 0.00020134449005126953, 0.68212890625, 0.0015897750854492188, 5.078315734863281e-05, 9.179115295410156e-06, 0.006427764892578125, 9.882450103759766e-05, 0.0758056640625, 0.00015032291412353516, 0.0027332305908203125, 0.08587646484375, 0.2386474609375, 0.0465087890625, 0.024139404296875, 0.00507354736328125, 4.2438507080078125e-05, 4.267692565917969e-05, 0.00024509429931640625, 0.0003714561462402344, 5.924701690673828e-05, 0.01204681396484375, 4.947185516357422e-05, 0.00035834312438964844, 0.0161590576171875, 0.0007686614990234375, 0.0165863037109375, 0.0017805099487304688], "tokens": [715, 963, 32, 1821, 463, 1492, 895, 715, 1626, 45, 528, 1135, 17276, 25, 499, 715, 963, 32, 1821, 40348, 895, 715, 963, 32, 1821, 40348, 895, 715, 1626, 45, 528, 1244, 499, 715, 963, 32, 1821, 26, 380, 293, 715, 1626, 45, 400, 320, 324, 320]}
{"line_number": 245, "line_type": "original", "code": "                        out.write('/');", "entropy": 6.80078125, "is_bug_line": true, "sus_score": 0.40428, "per_token_entropy": [11.421875, 13.8984375, 0.037078857421875, 0.02056884765625, 8.609375], "tokens": [6797, 963, 32, 1821, 33048]}
{"line_number": 245, "line_type": "generated", "code": " into a newline character, unless the <code>'\\'</code>\n     * is preceded by another <code>'\\'</code>.</p>\n     * \n     * <p>A <code>null</code> string input has no effect.</p", "entropy": 0.07318115234375, "is_bug_line": true, "sus_score": 0.40428, "per_token_entropy": [0.896484375, 0.007503509521484375, 0.001987457275390625, 0.00884246826171875, 0.25927734375, 0.0183563232421875, 0.0013818740844726562, 0.0129852294921875, 0.0010499954223632812, 0.0027256011962890625, 0.0001163482666015625, 0.0006647109985351562, 0.0003192424774169922, 0.0006985664367675781, 0.28369140625, 0.00307464599609375, 0.0008821487426757812, 0.0011425018310546875, 3.266334533691406e-05, 2.8014183044433594e-05, 0.002208709716796875, 0.0004220008850097656, 0.00012433528900146484, 0.0011873245239257812, 3.0159950256347656e-05, 9.000301361083984e-05, 3.337860107421875e-06, 0.012420654296875, 0.00010704994201660156, 0.00131988525390625, 0.07183837890625, 0.0003941059112548828, 0.77392578125, 0.00018334388732910156, 1.03125, 0.047698974609375, 0.0002415180206298828, 0.002227783203125, 0.003421783447265625, 4.649162292480469e-06, 0.01088714599609375, 0.005779266357421875, 4.172325134277344e-06, 5.364418029785156e-06, 3.5762786865234375e-07, 0.001373291015625, 0.00011408329010009766, 0.0028228759765625, 0.0007371902465820312, 0.0019435882568359375, 0.3310546875, 9.5367431640625e-07], "tokens": [1991, 312, 25521, 5341, 30, 7351, 322, 333, 687, 6457, 6945, 377, 687, 48, 275, 319, 438, 48911, 981, 810, 4674, 333, 687, 6457, 6945, 377, 687, 12689, 98, 48, 275, 319, 5384, 319, 333, 98, 48, 51, 333, 687, 48, 1693, 377, 687, 48, 802, 1509, 1401, 1289, 5744, 1730, 98]}
{"line_number": 246, "line_type": "original", "code": "                        break;", "entropy": 8.0703125, "is_bug_line": false, "sus_score": 0.3851, "per_token_entropy": [9.5703125, 14.609375, 0.022705078125], "tokens": [6797, 1626, 45]}
{"line_number": 246, "line_type": "generated", "code": "\n     * is preceded by another <code>'\\'</code>.</p>\n     * \n     * @param out  the <code>Writer</code> used to write the unescaped character\n     *             data\n     * @param str  the <code", "entropy": 0.10650634765625, "is_bug_line": false, "sus_score": 0.3851, "per_token_entropy": [0.70556640625, 0.043731689453125, 0.1153564453125, 0.03033447265625, 4.8279762268066406e-05, 6.520748138427734e-05, 0.00203704833984375, 0.0005669593811035156, 0.0001373291015625, 0.0035648345947265625, 6.711483001708984e-05, 4.2438507080078125e-05, 0.0005121231079101562, 0.0310516357421875, 0.00018084049224853516, 0.0020046234130859375, 0.04119873046875, 0.0004372596740722656, 0.79052734375, 0.00020742416381835938, 0.472900390625, 0.01837158203125, 0.0099639892578125, 0.0167083740234375, 0.01436614990234375, 0.006755828857421875, 3.8743019104003906e-05, 4.5299530029296875e-06, 0.0005426406860351562, 1.3947486877441406e-05, 2.384185791015625e-06, 1.0251998901367188e-05, 0.0008935928344726562, 0.04107666015625, 0.11444091796875, 0.36181640625, 0.014495849609375, 0.0017862319946289062, 0.292236328125, 0.0311737060546875, 0.00017702579498291016, 0.71240234375, 1.548828125, 0.07965087890625, 0.000186920166015625, 0.0009608268737792969, 0.0006198883056640625, 0.005035400390625, 0.0257568359375, 0.0003399848937988281, 0.00015532970428466797, 5.328655242919922e-05], "tokens": [275, 319, 438, 48911, 981, 810, 4674, 333, 687, 6457, 6945, 377, 687, 12689, 98, 48, 275, 319, 5384, 319, 477, 753, 963, 225, 322, 333, 687, 48, 3976, 377, 687, 48, 1654, 372, 2866, 322, 707, 37349, 5341, 275, 319, 2407, 706, 275, 319, 477, 753, 596, 225, 322, 333, 687]}
