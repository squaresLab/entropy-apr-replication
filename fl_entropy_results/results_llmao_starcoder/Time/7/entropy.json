{"line_number": 710, "line_type": "original", "code": "        int defaultYear = chrono.year().get(instantLocal);", "entropy": 1.904296875, "is_bug_line": true, "sus_score": 0.5116, "per_token_entropy": [4.875, 7.6328125, 4.33203125, 0.0526123046875, 0.19921875, 2.919921875, 0.015716552734375, 1.9306640625, 0.059783935546875, 0.046600341796875, 0.082275390625, 1.927734375, 2.5390625, 0.039520263671875], "tokens": [351, 629, 1244, 6617, 280, 45868, 32, 4548, 922, 371, 26, 30241, 3325, 293]}
{"line_number": 710, "line_type": "generated", "code": "\n     * <p>\n     * This parse method ignores the {@link #getDefaultYear() default year} and\n     * parses using the year from the supplied instant based on the chronology\n     * and time-zone of the supplied instant.\n     * <", "entropy": 0.09625244140625, "is_bug_line": true, "sus_score": 0.5116, "per_token_entropy": [0.336181640625, 0.00823974609375, 0.23876953125, 0.0026531219482421875, 0.0005517005920410156, 0.0105133056640625, 0.00015914440155029297, 1.501953125, 0.272705078125, 0.394775390625, 0.72509765625, 0.007427215576171875, 0.1226806640625, 0.0007433891296386719, 0.01114654541015625, 0.014892578125, 0.000957489013671875, 0.00708770751953125, 0.001132965087890625, 0.0008640289306640625, 0.1405029296875, 0.0673828125, 0.01690673828125, 4.029273986816406e-05, 0.02789306640625, 0.034271240234375, 0.004825592041015625, 0.0176849365234375, 0.020263671875, 0.0076751708984375, 0.55859375, 0.06353759765625, 0.053375244140625, 0.0003285408020019531, 0.0005869865417480469, 0.0244140625, 3.838539123535156e-05, 5.5789947509765625e-05, 0.019500732421875, 5.4955482482910156e-05, 0.058807373046875, 0.01094818115234375, 0.0035572052001953125, 7.426738739013672e-05, 0.01824951171875, 0.01093292236328125, 0.04962158203125, 0.001857757568359375, 0.0057830810546875, 0.051513671875, 0.00013720989227294922, 0.0751953125], "tokens": [275, 319, 333, 98, 48, 275, 319, 1348, 3185, 1411, 39588, 322, 3088, 1204, 588, 13737, 6617, 346, 1244, 4947, 111, 461, 275, 319, 35228, 1471, 322, 4947, 645, 322, 13798, 23564, 4122, 544, 322, 663, 2558, 10537, 275, 319, 461, 1133, 31, 5634, 432, 322, 13798, 23564, 32, 275, 319, 333]}
{"line_number": 714, "line_type": "original", "code": "        int newPos = parser.parseInto(bucket, text, position);", "entropy": 0.98681640625, "is_bug_line": false, "sus_score": 0.33029, "per_token_entropy": [4.9453125, 5.6875, 0.49560546875, 0.00875091552734375, 0.00826263427734375, 0.64990234375, 0.005298614501953125, 0.00260162353515625, 1.1796875, 0.00934600830078125, 0.281005859375, 0.006473541259765625, 0.031219482421875, 0.007396697998046875, 2.384765625, 0.08477783203125], "tokens": [351, 629, 537, 2996, 280, 4118, 32, 2208, 13651, 26, 6452, 30, 1344, 30, 2747, 293]}
{"line_number": 714, "line_type": "generated", "code": "\n     * @param text  text to parse\n     * @return parsed date\n     * @throws UnsupportedOperationException if parsing is not supported\n     * @throws IllegalArgumentException if the text to parse is invalid\n     */\n    public LocalDate parseLocalDate(String text) {\n        DateTimeParser", "entropy": 0.1533203125, "is_bug_line": false, "sus_score": 0.33029, "per_token_entropy": [0.251708984375, 0.0158538818359375, 2.615234375, 0.0203399658203125, 0.0258026123046875, 0.039764404296875, 0.9970703125, 0.0012140274047851562, 0.0031375885009765625, 0.302734375, 9.608268737792969e-05, 0.0004086494445800781, 0.0206146240234375, 0.258544921875, 1.3623046875, 0.8056640625, 0.00907135009765625, 0.0006461143493652344, 0.01364898681640625, 0.086181640625, 0.001224517822265625, 0.0285186767578125, 0.11236572265625, 0.0006322860717773438, 0.0020046234130859375, 0.034088134765625, 0.01007843017578125, 0.0005135536193847656, 0.0019893646240234375, 0.007656097412109375, 0.0004892349243164062, 0.0294189453125, 0.0263214111328125, 0.0208282470703125, 0.0005464553833007812, 0.002044677734375, 0.0033721923828125, 0.0286865234375, 0.0721435546875, 0.015777587890625, 0.0204010009765625, 0.1522216796875, 0.0014352798461914062, 0.007701873779296875, 0.006343841552734375, 0.00109100341796875, 0.00024819374084472656, 0.0009613037109375, 0.006011962890625, 0.045196533203125, 0.38623046875, 0.1146240234375], "tokens": [275, 319, 477, 753, 1344, 225, 1344, 372, 3185, 275, 319, 477, 601, 8436, 2340, 275, 319, 477, 5117, 25820, 415, 11708, 438, 646, 5420, 275, 319, 477, 5117, 12137, 415, 322, 1344, 372, 3185, 438, 5535, 275, 569, 284, 562, 27490, 3185, 28726, 26, 652, 1344, 27, 301, 291, 6666, 2825]}
{"line_number": 712, "line_type": "original", "code": "        DateTimeParserBucket bucket = new DateTimeParserBucket(", "entropy": 0.69873046875, "is_bug_line": false, "sus_score": 0.29336, "per_token_entropy": [3.486328125, 2.912109375, 0.75732421875, 0.1986083984375, 0.05340576171875, 0.049407958984375, 0.12091064453125, 0.014312744140625, 0.00890350341796875, 0.0015268325805664062, 0.086181640625], "tokens": [351, 6666, 2825, 9001, 8105, 280, 537, 6666, 2825, 9001, 26]}
{"line_number": 712, "line_type": "generated", "code": "\n     *\n     * @param text  the text to parse, not null\n     * @return the parsed local date, not null\n     * @throws IllegalArgumentException if the text to parse is invalid\n     */\n    public LocalDate parseLocalDate(String text) {\n        DateTime", "entropy": 0.1448974609375, "is_bug_line": false, "sus_score": 0.29336, "per_token_entropy": [0.51220703125, 0.018280029296875, 1.5673828125, 6.61611557006836e-05, 0.0095062255859375, 0.007579803466796875, 0.025360107421875, 0.0235443115234375, 0.452392578125, 0.06158447265625, 0.0021820068359375, 0.001567840576171875, 0.404541015625, 0.0078582763671875, 0.0022144317626953125, 0.0030651092529296875, 7.605552673339844e-05, 0.00014030933380126953, 0.022216796875, 0.41748046875, 0.004383087158203125, 0.448486328125, 0.0142364501953125, 0.052703857421875, 0.2073974609375, 0.0009870529174804688, 0.008575439453125, 0.0156402587890625, 0.00025343894958496094, 0.01422882080078125, 1.3828125, 0.0015592575073242188, 0.0570068359375, 0.0740966796875, 0.51806640625, 0.002002716064453125, 0.003360748291015625, 0.0225982666015625, 0.03778076171875, 0.309326171875, 0.012237548828125, 0.033172607421875, 0.13037109375, 0.0006585121154785156, 0.004398345947265625, 0.00415802001953125, 0.0020122528076171875, 0.0001271963119506836, 0.0012445449829101562, 0.00514984130859375, 0.057464599609375, 0.5703125], "tokens": [275, 319, 275, 319, 477, 753, 1344, 225, 322, 1344, 372, 3185, 30, 646, 744, 275, 319, 477, 601, 322, 8436, 2196, 2340, 30, 646, 744, 275, 319, 477, 5117, 12137, 415, 322, 1344, 372, 3185, 438, 5535, 275, 569, 284, 562, 27490, 3185, 28726, 26, 652, 1344, 27, 301, 291, 6666]}
{"line_number": 433, "line_type": "original", "code": "     *", "entropy": 3.42578125, "is_bug_line": false, "sus_score": 0.29085, "per_token_entropy": [3.662109375, 3.189453125], "tokens": [262, 319]}
{"line_number": 433, "line_type": "generated", "code": "\n     */\n    public void printTo(Appendable appendable, ReadableInstant instant) throws IOException {\n        long millis = DateTimeUtils.getInstantMillis(instant);\n        Chronology chrono = DateTimeUtils.getInstantChronology(instant);\n       ", "entropy": 0.018829345703125, "is_bug_line": false, "sus_score": 0.29085, "per_token_entropy": [0.26171875, 0.1368408203125, 0.0211181640625, 0.032958984375, 0.09423828125, 0.0130767822265625, 0.00020444393157958984, 0.0006380081176757812, 0.027862548828125, 4.76837158203125e-07, 5.602836608886719e-05, 1.0728836059570312e-06, 4.7206878662109375e-05, 0.004917144775390625, 1.0728836059570312e-06, 0.00026869773864746094, 0.00022745132446289062, 0.0008258819580078125, 0.303466796875, 0.00016105175018310547, 0.00695037841796875, 0.0173187255859375, 0.037017822265625, 0.0029926300048828125, 0.00017058849334716797, 0.003093719482421875, 1.1920928955078125e-06, 1.7404556274414062e-05, 0.00014281272888183594, 3.1113624572753906e-05, 3.0994415283203125e-06, 4.029273986816406e-05, 1.6450881958007812e-05, 0.00017178058624267578, 0.0007638931274414062, 0.0038299560546875, 5.5909156799316406e-05, 1.430511474609375e-06, 1.1444091796875e-05, 4.3511390686035156e-05, 0.0003612041473388672, 5.125999450683594e-05, 2.467632293701172e-05, 7.987022399902344e-06, 1.811981201171875e-05, 1.4901161193847656e-05, 1.1920928955078125e-07, 2.5033950805664062e-06, 1.4424324035644531e-05, 1.6570091247558594e-05, 0.00022590160369873047, 0.007080078125], "tokens": [275, 569, 284, 562, 763, 1459, 705, 26, 6551, 444, 5489, 444, 30, 4841, 444, 22183, 23564, 27, 2571, 6291, 301, 291, 1946, 42302, 280, 6666, 2755, 32, 371, 22183, 10906, 26, 30241, 293, 291, 1884, 2558, 10537, 45868, 280, 6666, 2755, 32, 371, 22183, 828, 2558, 10537, 26, 30241, 293, 291]}
{"line_number": 708, "line_type": "original", "code": "        long instantLocal = instantMillis + chrono.getZone().getOffset(instantMillis);", "entropy": 0.78076171875, "is_bug_line": true, "sus_score": 0.26134, "per_token_entropy": [5.25390625, 3.416015625, 0.347412109375, 0.44287109375, 0.090087890625, 0.286865234375, 2.337890625, 1.046875, 1.5107421875, 0.004119873046875, 0.00392913818359375, 0.0008292198181152344, 0.0004341602325439453, 0.00140380859375, 0.004566192626953125, 0.0286712646484375, 0.01226806640625, 0.0076141357421875, 0.036285400390625], "tokens": [351, 1946, 23564, 3325, 280, 23564, 10906, 474, 45868, 32, 371, 6767, 922, 371, 3457, 26, 30241, 10906, 293]}
{"line_number": 708, "line_type": "generated", "code": "\n    /**\n     * Parses a datetime from the given text, returning the number of\n     * milliseconds since the epoch, 1970-01-01T00:00:00Z.\n     * <p>\n     *", "entropy": 0.05841064453125, "is_bug_line": true, "sus_score": 0.26134, "per_token_entropy": [0.444580078125, 0.489501953125, 0.028778076171875, 0.00012302398681640625, 0.11669921875, 0.051239013671875, 0.2186279296875, 0.01390838623046875, 0.00780487060546875, 0.0023059844970703125, 0.0121612548828125, 0.0540771484375, 0.1695556640625, 0.78466796875, 0.22021484375, 0.007785797119140625, 0.01457977294921875, 0.0001513957977294922, 0.00748443603515625, 0.0176239013671875, 0.05291748046875, 0.00775909423828125, 0.1617431640625, 0.00946807861328125, 0.000110626220703125, 0.00013446807861328125, 5.4717063903808594e-05, 2.4199485778808594e-05, 4.971027374267578e-05, 0.0001245737075805664, 5.0067901611328125e-06, 1.2278556823730469e-05, 4.8160552978515625e-05, 2.4199485778808594e-05, 0.0006952285766601562, 7.236003875732422e-05, 2.2292137145996094e-05, 0.00017786026000976562, 6.4373016357421875e-06, 1.3232231140136719e-05, 0.0010766983032226562, 5.435943603515625e-05, 9.965896606445312e-05, 0.008087158203125, 0.037353515625, 0.04052734375, 3.421306610107422e-05, 0.05316162109375, 0.0001800060272216797, 0.00016200542449951172, 0.0003306865692138672, 0.00010347366333007812], "tokens": [284, 1022, 275, 319, 44280, 312, 7138, 645, 322, 2702, 1344, 30, 14116, 322, 1451, 432, 275, 319, 18574, 4558, 322, 10900, 30, 225, 35, 43, 41, 34, 31, 34, 35, 31, 34, 35, 70, 34, 34, 44, 34, 34, 44, 34, 34, 76, 32, 275, 319, 333, 98, 48, 275, 319]}
