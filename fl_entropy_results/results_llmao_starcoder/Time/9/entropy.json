{"line_number": 220, "line_type": "original", "code": "                id = printOffset(offset);", "entropy": 3.19140625, "is_bug_line": false, "sus_score": 0.40946, "per_token_entropy": [7.53125, 8.8359375, 0.067138671875, 8.15625, 0.006076812744140625, 0.05078125, 0.78515625, 0.10455322265625], "tokens": [2071, 804, 280, 1459, 3457, 26, 2881, 293]}
{"line_number": 220, "line_type": "generated", "code": "\n        } catch (ArithmeticException ex) {\n            throw new IllegalArgumentException(\"Offset too large: \" + hoursOffset + \":\" + minutesOffset, ex);\n        }\n        if (offset == 0) {\n            return DateTimeZone.UTC;\n        } else {", "entropy": 0.1668701171875, "is_bug_line": false, "sus_score": 0.40946, "per_token_entropy": [0.393798828125, 0.0013742446899414062, 0.03167724609375, 0.007053375244140625, 0.055084228515625, 1.3470649719238281e-05, 0.2413330078125, 0.0019283294677734375, 0.0008554458618164062, 0.0277557373046875, 0.1175537109375, 0.004673004150390625, 0.004993438720703125, 0.371337890625, 1.0859375, 0.463134765625, 0.03515625, 0.2322998046875, 0.040740966796875, 0.0038051605224609375, 0.2213134765625, 0.0004031658172607422, 0.052764892578125, 0.2274169921875, 0.0032787322998046875, 0.017669677734375, 3.921985626220703e-05, 1.3837890625, 0.0006947517395019531, 0.0009188652038574219, 0.0095062255859375, 0.000331878662109375, 0.0673828125, 1.5791015625, 0.056488037109375, 0.2958984375, 0.525390625, 0.08209228515625, 0.0024547576904296875, 0.13720703125, 0.0003788471221923828, 0.004680633544921875, 0.005733489990234375, 0.020660400390625, 1.4781951904296875e-05, 5.245208740234375e-06, 0.00020873546600341797, 0.00019478797912597656, 0.0184783935546875, 8.106231689453125e-05, 0.77490234375, 0.0665283203125], "tokens": [291, 320, 2368, 308, 37375, 984, 538, 27, 301, 324, 1422, 537, 12137, 440, 3457, 5133, 7622, 44, 313, 474, 11632, 3457, 474, 17917, 474, 10135, 3457, 30, 538, 293, 291, 320, 291, 415, 308, 2881, 610, 225, 34, 27, 301, 324, 442, 6666, 6767, 32, 15689, 45, 291, 320, 813, 301]}
{"line_number": 619, "line_type": "original", "code": "        return -(int) offsetFormatter().withChronology(chrono).parseMillis(str);", "entropy": 2.306640625, "is_bug_line": false, "sus_score": 0.37726, "per_token_entropy": [3.59375, 1.5029296875, 12.921875, 4.71875, 0.1153564453125, 2.876953125, 6.74609375, 3.486328125, 1.6826171875, 3.064453125, 0.0052490234375, 0.0016412734985351562, 0.00513458251953125, 3.494140625, 0.1143798828125, 0.34033203125, 0.114013671875, 0.270263671875, 0.91943359375, 0.152587890625], "tokens": [351, 442, 25298, 410, 27, 3401, 8736, 922, 1793, 828, 2558, 10537, 26, 18317, 547, 2208, 10906, 26, 466, 293]}
{"line_number": 619, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Gets a printer/parser for managing the offset formatting.\n     * \n     * @return the formatter", "entropy": 0.2442626953125, "is_bug_line": false, "sus_score": 0.37726, "per_token_entropy": [0.849609375, 0.044097900390625, 0.52734375, 0.42138671875, 0.016845703125, 0.0001417398452758789, 0.60205078125, 0.15869140625, 0.27685546875, 0.02392578125, 0.0008869171142578125, 0.00787353515625, 0.0379638671875, 0.0233306884765625, 1.3251953125, 1.3779296875, 0.014862060546875, 0.031005859375, 0.003749847412109375, 0.038970947265625, 0.000263214111328125, 0.0003464221954345703, 0.0145263671875, 0.0008335113525390625, 0.3076171875], "tokens": [284, 320, 446, 1022, 275, 319, 7124, 312, 23307, 33, 3922, 436, 26934, 322, 3401, 17948, 32, 275, 319, 5384, 319, 477, 601, 322, 14971]}
{"line_number": 283, "line_type": "original", "code": "        String id = printOffset(millisOffset);", "entropy": 2.650390625, "is_bug_line": true, "sus_score": 0.37106, "per_token_entropy": [7.05859375, 7.609375, 2.064453125, 0.1773681640625, 8.03125, 0.007659912109375, 0.04046630859375, 1.3115234375, 0.0223388671875, 0.1806640625], "tokens": [351, 892, 804, 280, 1459, 3457, 26, 36916, 3457, 293]}
{"line_number": 283, "line_type": "generated", "code": "\n                    return fixedOffsetZone(id, offset);\n                }\n            }\n        }\n        throw new IllegalArgumentException(\"Invalid time zone ID: \" + id);\n    }\n\n    /**\n     * Parses a time zone offset in the form +/-hh:mm or +/-", "entropy": 0.337646484375, "is_bug_line": true, "sus_score": 0.37106, "per_token_entropy": [0.27587890625, 0.164306640625, 0.203857421875, 0.00939178466796875, 0.0003845691680908203, 0.0254364013671875, 0.26708984375, 0.00962066650390625, 0.10406494140625, 0.06231689453125, 0.01116943359375, 0.0013761520385742188, 0.0111236572265625, 0.00010597705841064453, 0.10052490234375, 0.00021970272064208984, 1.251953125, 0.399658203125, 0.00958251953125, 0.02508544921875, 0.037689208984375, 1.5244140625, 0.1903076171875, 0.0006494522094726562, 0.83349609375, 0.11590576171875, 0.11505126953125, 0.003978729248046875, 0.45361328125, 0.036285400390625, 0.0289764404296875, 0.0003566741943359375, 0.2237548828125, 0.257568359375, 0.01421356201171875, 0.0001157522201538086, 1.8857421875, 1.0361328125, 1.6064453125, 0.108154296875, 0.337158203125, 1.4599609375, 0.293212890625, 0.22509765625, 1.05078125, 0.0882568359375, 0.8466796875, 0.149169921875, 0.001026153564453125, 1.302734375, 0.39453125, 0.0037212371826171875], "tokens": [528, 442, 5253, 3457, 6767, 26, 314, 30, 3401, 293, 400, 320, 324, 320, 291, 320, 291, 1422, 537, 12137, 440, 3817, 1133, 10790, 2484, 44, 313, 474, 804, 293, 284, 320, 446, 1022, 275, 319, 44280, 312, 1133, 10790, 3401, 328, 322, 2234, 474, 15913, 10429, 44, 2840, 556, 474, 15913]}
{"line_number": 216, "line_type": "original", "code": "            int offset = parseOffset(id);", "entropy": 2.3359375, "is_bug_line": false, "sus_score": 0.36059, "per_token_entropy": [4.31640625, 6.1875, 2.37109375, 0.376708984375, 6.375, 0.058807373046875, 0.1112060546875, 0.52099609375, 0.7138671875], "tokens": [1468, 629, 3401, 280, 3185, 3457, 26, 314, 293]}
{"line_number": 216, "line_type": "generated", "code": "\n                if (minutesOffset == 0) {\n                    return DateTimeZone.UTC;\n                } else {\n                    offset = minutesOffset;\n                }\n            } else {\n                minutesOffset = FieldUtils.safeAdd(hoursInMinutes, minutesOffset);", "entropy": 0.219970703125, "is_bug_line": false, "sus_score": 0.36059, "per_token_entropy": [0.87890625, 1.1923828125, 0.070068359375, 0.5400390625, 0.004833221435546875, 2.220703125, 0.06829833984375, 0.111083984375, 0.07958984375, 0.0022487640380859375, 0.0592041015625, 0.4521484375, 0.0977783203125, 0.00021958351135253906, 8.666515350341797e-05, 0.00598907470703125, 0.006076812744140625, 0.0214996337890625, 0.0002586841583251953, 1.2109375, 0.1468505859375, 0.032073974609375, 0.9072265625, 0.003147125244140625, 1.42578125, 0.01103973388671875, 0.1331787109375, 0.4765625, 0.0003037452697753906, 0.02716064453125, 0.0006394386291503906, 0.0261383056640625, 0.0733642578125, 0.17822265625, 0.455078125, 0.0145111083984375, 0.002696990966796875, 0.004192352294921875, 4.5299530029296875e-06, 4.6253204345703125e-05, 0.00013947486877441406, 0.004283905029296875, 0.0007486343383789062, 0.0396728515625, 0.0016183853149414062, 0.0003502368927001953, 6.818771362304688e-05, 0.01342010498046875, 2.1219253540039062e-05, 0.0007824897766113281], "tokens": [400, 415, 308, 18461, 3457, 610, 225, 34, 27, 301, 528, 442, 6666, 6767, 32, 15689, 45, 400, 320, 813, 301, 528, 3401, 280, 10135, 3457, 45, 400, 320, 324, 320, 813, 301, 400, 10135, 3457, 280, 5692, 2755, 32, 4770, 1103, 26, 14991, 383, 16338, 30, 10135, 3457, 293]}
{"line_number": 269, "line_type": "original", "code": "            offset = FieldUtils.safeMultiply(minutesOffset, DateTimeConstants.MILLIS_PER_MINUTE);", "entropy": 1.3447265625, "is_bug_line": false, "sus_score": 0.33021, "per_token_entropy": [5.234375, 10.1171875, 0.298095703125, 4.33984375, 1.8715858459472656e-05, 0.0002124309539794922, 0.0271759033203125, 2.166015625, 0.033203125, 5.48828125, 1.4296875, 0.0153961181640625, 1.38671875, 0.2469482421875, 0.0009183883666992188, 0.0323486328125, 0.00016224384307861328, 2.6226043701171875e-05, 2.86102294921875e-06, 8.547306060791016e-05, 1.0967254638671875e-05, 0.07940673828125, 0.03204345703125], "tokens": [1468, 3401, 280, 5692, 2755, 32, 4770, 27732, 26, 18461, 3457, 30, 6666, 5229, 32, 63, 13142, 1296, 81, 3687, 81, 47229, 293]}
{"line_number": 269, "line_type": "generated", "code": "\n        }\n        if (dtz == null) {\n            throw new IllegalArgumentException(\"The time zone id '\" + id + \"' is not recognised\");\n        }\n        return dtz;\n    }\n\n    /**\n     * Gets a time zone instance for the given time", "entropy": 0.17041015625, "is_bug_line": false, "sus_score": 0.33021, "per_token_entropy": [0.2376708984375, 0.140869140625, 0.2044677734375, 0.1844482421875, 0.002719879150390625, 0.006114959716796875, 4.0411949157714844e-05, 0.1580810546875, 0.0032024383544921875, 0.026519775390625, 0.0004906654357910156, 0.0228424072265625, 0.3798828125, 0.00800323486328125, 0.01525115966796875, 0.0245513916015625, 0.2315673828125, 0.81201171875, 0.0013294219970703125, 0.43701171875, 0.0570068359375, 0.017181396484375, 0.053466796875, 0.015960693359375, 0.002330780029296875, 0.0087432861328125, 0.0021209716796875, 0.00191497802734375, 4.172325134277344e-06, 0.01267242431640625, 0.0321044921875, 4.8041343688964844e-05, 0.07354736328125, 0.070068359375, 0.004138946533203125, 5.7220458984375e-06, 0.012939453125, 0.0323486328125, 0.0003643035888671875, 0.2244873046875, 0.1898193359375, 0.01494598388671875, 0.00011157989501953125, 0.47509765625, 0.35498046875, 0.11895751953125, 0.0015048980712890625, 0.0714111328125, 0.5595703125, 0.80078125, 1.361328125, 1.39453125], "tokens": [291, 320, 291, 415, 308, 2632, 108, 610, 744, 27, 301, 324, 1422, 537, 12137, 440, 1318, 1133, 10790, 804, 6113, 474, 804, 474, 5335, 438, 646, 37768, 8593, 724, 291, 320, 291, 442, 8793, 108, 45, 284, 320, 446, 1022, 275, 319, 7124, 312, 1133, 10790, 1980, 436, 322, 2702, 1133]}
