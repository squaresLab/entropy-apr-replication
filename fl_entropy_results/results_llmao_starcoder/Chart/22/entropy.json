{"line_number": 376, "line_type": "original", "code": "        while (iterator.hasNext()) {", "entropy": 1.615234375, "is_bug_line": false, "sus_score": 0.63771, "per_token_entropy": [3.71484375, 8.7890625, 0.1142578125, 0.250732421875, 0.00279998779296875, 0.0064239501953125, 0.0089263916015625, 0.037078857421875], "tokens": [351, 2218, 308, 5162, 32, 16421, 1157, 301]}
{"line_number": 376, "line_type": "generated", "code": "\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Returns a hash code for this instance.\n     *\n     * @return A hash code.\n     */\n    public int hashCode() {\n        int result = 193;\n       ", "entropy": 0.1063232421875, "is_bug_line": false, "sus_score": 0.63771, "per_token_entropy": [0.80224609375, 0.404052734375, 0.41064453125, 0.0014772415161132812, 0.062744140625, 0.00226593017578125, 0.22314453125, 0.00920867919921875, 0.0086822509765625, 0.0006761550903320312, 0.12841796875, 0.0006337165832519531, 0.22509765625, 0.01299285888671875, 0.0019207000732421875, 1.4543533325195312e-05, 0.03448486328125, 0.0908203125, 0.6005859375, 0.0208587646484375, 0.38818359375, 0.050262451171875, 0.46142578125, 0.0023250579833984375, 0.1712646484375, 0.0035610198974609375, 0.39501953125, 2.205371856689453e-05, 7.581710815429688e-05, 0.0005173683166503906, 0.200927734375, 0.00400543212890625, 0.0009636878967285156, 0.031097412109375, 0.0140228271484375, 0.0026302337646484375, 0.005680084228515625, 0.0021114349365234375, 3.635883331298828e-05, 2.276897430419922e-05, 0.0003311634063720703, 0.0009293556213378906, 0.031463623046875, 0.16455078125, 0.31005859375, 0.12548828125, 0.00757598876953125, 0.07562255859375, 0.01214599609375, 0.00542449951171875, 0.0020084381103515625, 0.0160064697265625], "tokens": [400, 320, 324, 320, 291, 320, 291, 442, 861, 45, 284, 320, 446, 1022, 275, 319, 3759, 312, 3677, 1340, 436, 458, 1980, 32, 275, 319, 275, 319, 477, 601, 399, 3677, 1340, 32, 275, 569, 284, 562, 629, 17772, 346, 301, 291, 629, 1056, 280, 225, 35, 43, 37, 45, 291]}
{"line_number": 375, "line_type": "original", "code": "        Iterator iterator = this.rows.iterator();", "entropy": 1.138671875, "is_bug_line": false, "sus_score": 0.51151, "per_token_entropy": [4.0234375, 6.6328125, 0.09771728515625, 0.07708740234375, 0.2509765625, 0.0034027099609375, 0.2305908203125, 0.0235748291015625, 0.048583984375, 0.00150299072265625], "tokens": [351, 14743, 10032, 280, 458, 32, 2138, 32, 5162, 473]}
{"line_number": 375, "line_type": "generated", "code": "\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Returns a string representation of this instance, primarily for\n     * debugging purposes.\n     * \n     * @return A string.\n     */\n    public String toString() {\n        StringBuffer", "entropy": 0.1214599609375, "is_bug_line": false, "sus_score": 0.51151, "per_token_entropy": [0.322021484375, 0.0126190185546875, 0.09002685546875, 0.0022907257080078125, 0.09283447265625, 0.0004673004150390625, 0.034881591796875, 0.00121307373046875, 0.132568359375, 0.0047760009765625, 0.00635528564453125, 0.0004169940948486328, 0.12890625, 0.0006093978881835938, 0.23046875, 0.01230621337890625, 0.0019054412841796875, 1.3947486877441406e-05, 0.041229248046875, 0.09136962890625, 1.7763671875, 0.08782958984375, 0.01407623291015625, 0.4345703125, 0.28173828125, 0.058563232421875, 0.050323486328125, 0.158935546875, 0.2353515625, 4.935264587402344e-05, 0.0076904296875, 0.039794921875, 0.01029205322265625, 0.6728515625, 0.00792694091796875, 0.7861328125, 0.00011599063873291016, 0.0033893585205078125, 0.001049041748046875, 0.06781005859375, 0.0264892578125, 0.0162811279296875, 0.10906982421875, 0.005779266357421875, 0.008514404296875, 0.00815582275390625, 0.00039005279541015625, 0.0009713172912597656, 0.0006194114685058594, 0.002590179443359375, 0.056243896484375, 0.1793212890625], "tokens": [528, 320, 400, 320, 324, 320, 291, 320, 291, 442, 861, 45, 284, 320, 446, 1022, 275, 319, 3759, 312, 802, 10293, 432, 458, 1980, 30, 37897, 436, 275, 319, 15066, 14998, 32, 275, 319, 5384, 319, 477, 601, 399, 802, 32, 275, 569, 284, 562, 892, 11345, 346, 301, 291, 21933]}
{"line_number": 378, "line_type": "original", "code": "                rowData.removeValue(columnKey);", "entropy": 2.01953125, "is_bug_line": true, "sus_score": 0.33404, "per_token_entropy": [5.27734375, 6.140625, 0.38623046875, 0.94091796875, 1.8564453125, 4.15234375, 0.28662109375, 0.70361328125, 0.15478515625, 0.286376953125], "tokens": [2071, 2698, 750, 32, 2546, 882, 26, 2592, 953, 293]}
{"line_number": 378, "line_type": "generated", "code": "\n        }\n        return true;\n    }\n\n    /**\n     * Returns a hash code for this instance.\n     *\n     * @return A hash code.\n     */\n    public int hashCode() {\n        int hash = 37;\n        int rowCount = get", "entropy": 0.1341552734375, "is_bug_line": true, "sus_score": 0.33404, "per_token_entropy": [0.290771484375, 0.0367431640625, 0.142333984375, 0.0160064697265625, 0.019500732421875, 0.0005049705505371094, 0.0880126953125, 0.0005202293395996094, 0.2384033203125, 0.011688232421875, 0.0018205642700195312, 1.4066696166992188e-05, 0.033843994140625, 0.099609375, 0.6005859375, 0.02484130859375, 0.374755859375, 0.04315185546875, 0.5625, 0.0022678375244140625, 0.165771484375, 0.004238128662109375, 0.400390625, 2.09808349609375e-05, 8.487701416015625e-05, 0.0005331039428710938, 0.203857421875, 0.004245758056640625, 0.0012521743774414062, 0.030426025390625, 0.0146484375, 0.0030269622802734375, 0.0055999755859375, 0.0021419525146484375, 4.6372413635253906e-05, 2.002716064453125e-05, 0.0003330707550048828, 0.0008864402770996094, 0.04052734375, 0.1585693359375, 1.498046875, 0.004901885986328125, 0.10455322265625, 0.274169921875, 0.51171875, 0.0015935897827148438, 0.0277862548828125, 0.400146484375, 0.45458984375, 0.0102081298828125, 0.000461578369140625, 0.06378173828125], "tokens": [291, 320, 291, 442, 861, 45, 284, 320, 446, 1022, 275, 319, 3759, 312, 3677, 1340, 436, 458, 1980, 32, 275, 319, 275, 319, 477, 601, 399, 3677, 1340, 32, 275, 569, 284, 562, 629, 17772, 346, 301, 291, 629, 3677, 280, 225, 37, 41, 45, 291, 629, 2698, 1534, 280, 622]}
{"line_number": 266, "line_type": "original", "code": "            throw new IllegalArgumentException(\"Null 'columnKey' argument.\");", "entropy": 1.2216796875, "is_bug_line": false, "sus_score": 0.31325, "per_token_entropy": [5.67578125, 4.41015625, 0.0033740997314453125, 1.9619140625, 0.515625, 0.49951171875, 0.09844970703125, 1.4541015625, 0.01131439208984375, 0.016998291015625, 0.01184844970703125, 0.0026264190673828125], "tokens": [1468, 1422, 537, 12137, 440, 1883, 330, 2592, 953, 25, 2793, 5368]}
{"line_number": 266, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Returns the row index for a given row key.\n     *\n     * @param rowKey  the row key (<code>null</code> not permitted).\n     * \n     * @return The row index.\n     * \n     *", "entropy": 0.190673828125, "is_bug_line": false, "sus_score": 0.31325, "per_token_entropy": [0.92626953125, 0.009521484375, 0.33544921875, 0.0189971923828125, 0.004619598388671875, 6.663799285888672e-05, 0.74462890625, 0.54248046875, 1.29296875, 0.7900390625, 0.241943359375, 0.17431640625, 1.208984375, 0.143310546875, 0.01070404052734375, 0.216552734375, 0.2418212890625, 0.0008096694946289062, 0.68310546875, 3.0517578125e-05, 0.00043702125549316406, 0.0026988983154296875, 0.1171875, 0.002811431884765625, 0.007648468017578125, 0.0287933349609375, 0.054290771484375, 0.0052947998046875, 0.38427734375, 7.021427154541016e-05, 1.811981201171875e-05, 0.00026535987854003906, 0.00010466575622558594, 0.00977325439453125, 0.0015878677368164062, 0.01018524169921875, 0.002132415771484375, 0.0065460205078125, 0.006771087646484375, 0.0016374588012695312, 0.6083984375, 0.00018787384033203125, 0.0005679130554199219, 0.006664276123046875, 0.0200958251953125, 0.2265625, 0.007259368896484375, 0.50634765625, 0.0577392578125, 0.2255859375, 0.027557373046875, 0.00021755695343017578], "tokens": [284, 320, 446, 1022, 275, 319, 3759, 322, 2698, 1650, 436, 312, 2702, 2698, 1202, 32, 275, 319, 275, 319, 477, 753, 2698, 953, 225, 322, 2698, 1202, 11304, 687, 48, 1693, 377, 687, 48, 646, 15010, 547, 275, 319, 5384, 319, 477, 601, 886, 2698, 1650, 32, 275, 319, 5384, 319]}
{"line_number": 268, "line_type": "original", "code": "        KeyedObjects row;", "entropy": 2.52734375, "is_bug_line": false, "sus_score": 0.28044, "per_token_entropy": [4.3671875, 4.02734375, 0.004459381103515625, 0.01605224609375, 2.13671875, 4.61328125], "tokens": [351, 3891, 318, 6692, 2698, 45]}
{"line_number": 268, "line_type": "generated", "code": "\n        allNull = true;\n        int columnIndex = getColumnIndex(columnKey);\n        for (int row = 0, rowCount = this.rows.size(); row < rowCount; row++) {\n            KeyedObjects currentRow = (Key", "entropy": 0.181640625, "is_bug_line": false, "sus_score": 0.28044, "per_token_entropy": [0.197998046875, 1.3837890625, 0.0034389495849609375, 0.0006380081176757812, 0.002796173095703125, 0.0009098052978515625, 0.07330322265625, 0.611328125, 0.027587890625, 0.0011463165283203125, 0.337890625, 0.0081329345703125, 0.0032939910888671875, 0.0007815361022949219, 0.0045013427734375, 0.0008258819580078125, 0.0007443428039550781, 0.7724609375, 0.1832275390625, 0.0013179779052734375, 0.10162353515625, 0.8427734375, 0.10723876953125, 0.001800537109375, 0.00017178058624267578, 0.7412109375, 0.0267181396484375, 0.0015974044799804688, 0.0019016265869140625, 0.1612548828125, 0.0004165172576904297, 0.2152099609375, 0.00457000732421875, 0.0966796875, 0.0006690025329589844, 0.0121307373046875, 0.0006513595581054688, 0.0010509490966796875, 0.0003001689910888672, 0.0008578300476074219, 0.2548828125, 0.0233917236328125, 0.018707275390625, 0.0206756591796875, 0.268798828125, 9.298324584960938e-05, 0.022674560546875, 2.53125, 0.1324462890625, 0.1676025390625, 0.06591796875, 9.620189666748047e-05], "tokens": [291, 1169, 1883, 280, 861, 45, 291, 629, 46452, 280, 622, 2137, 1284, 26, 2592, 953, 293, 291, 436, 308, 410, 2698, 280, 225, 34, 30, 2698, 1534, 280, 458, 32, 2138, 32, 891, 473, 2698, 333, 2698, 1534, 45, 2698, 1987, 301, 324, 3891, 318, 6692, 1550, 2352, 280, 308, 953]}
