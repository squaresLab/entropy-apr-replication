{"line_number": 246, "line_type": "original", "code": "    if ((long) x == x && !isNegativeZero(x)) {", "entropy": 2.26953125, "is_bug_line": false, "sus_score": 0.26892, "per_token_entropy": [6.1328125, 6.90625, 4.84375, 9.0625, 0.148681640625, 1.4814453125, 1.9697265625, 3.22265625, 1.392578125, 2.908203125, 0.313720703125, 0.0034122467041015625, 0.00037860870361328125, 0.033233642578125, 0.005157470703125, 0.0906982421875, 0.0830078125], "tokens": [264, 415, 1833, 3222, 27, 816, 610, 816, 962, 653, 297, 17152, 8039, 26, 106, 490, 301]}
{"line_number": 246, "line_type": "generated", "code": "\n  void finishFile() {\n    maybeEndStatement();\n    maybeCutLine();\n  }\n\n  /**\n   * @return Whether the a line break can be added after the specified node.\n   */\n  boolean breakAfter(Node n) {\n    switch (n", "entropy": 0.3564453125, "is_bug_line": false, "sus_score": 0.26892, "per_token_entropy": [0.19580078125, 0.157470703125, 0.77734375, 0.08697509765625, 0.0199737548828125, 0.176513671875, 0.62255859375, 0.92919921875, 0.2587890625, 0.017181396484375, 0.038055419921875, 1.099609375, 1.443359375, 0.52490234375, 0.010406494140625, 0.016082763671875, 0.35107421875, 0.0005221366882324219, 0.53271484375, 0.6611328125, 0.5146484375, 0.0014820098876953125, 1.7734375, 0.28173828125, 0.91259765625, 1.046875, 1.6142578125, 0.0204620361328125, 0.00823974609375, 0.09521484375, 0.006683349609375, 0.0265960693359375, 0.407958984375, 0.1649169921875, 0.0848388671875, 1.248046875, 0.107421875, 0.0020732879638671875, 0.03271484375, 0.0080413818359375, 0.10986328125, 0.072021484375, 0.032562255859375, 0.10565185546875, 0.06280517578125, 0.0233306884765625, 0.31396484375, 0.000926971435546875, 0.07867431640625, 1.412109375, 0.041015625, 0.0024471282958984375], "tokens": [334, 763, 11361, 974, 346, 301, 284, 8762, 2102, 5495, 473, 284, 8762, 18024, 1811, 473, 334, 320, 719, 1022, 664, 319, 477, 601, 14071, 322, 312, 1628, 1626, 883, 526, 3640, 2685, 322, 3191, 1541, 32, 664, 569, 334, 1905, 1626, 5125, 26, 1212, 310, 27, 301, 284, 3578, 308, 96]}
{"line_number": 250, "line_type": "original", "code": "      if (Math.abs(x) >= 100) {", "entropy": 1.5556640625, "is_bug_line": false, "sus_score": 0.26294, "per_token_entropy": [7.95703125, 2.69140625, 0.1951904296875, 6.03125, 0.01284027099609375, 0.79443359375, 0.0163421630859375, 1.13671875, 0.06982421875, 2.529296875, 0.10809326171875, 0.14794921875, 0.9892578125, 0.49560546875, 1.662109375, 0.05419921875], "tokens": [647, 415, 308, 5717, 32, 3596, 26, 106, 27, 2377, 225, 35, 34, 34, 27, 301]}
{"line_number": 250, "line_type": "generated", "code": "\n  /**\n   * @return Whether the a line break can be added after the specified\n   *   expression.\n   */\n  boolean breakAfter(Node n) {\n    return true;\n  }\n\n  /**\n   * @return Whether the a line break can be", "entropy": 0.361572265625, "is_bug_line": false, "sus_score": 0.26294, "per_token_entropy": [0.63623046875, 1.1748046875, 0.51708984375, 0.00400543212890625, 1.7421875, 0.260986328125, 0.6337890625, 0.8349609375, 0.85107421875, 0.01458740234375, 0.00707244873046875, 0.0802001953125, 0.00684356689453125, 0.025115966796875, 0.5048828125, 0.16259765625, 0.07275390625, 1.6943359375, 0.01139068603515625, 2.10546875, 1.4384765625, 0.41650390625, 0.059112548828125, 0.02447509765625, 0.010223388671875, 0.0667724609375, 0.04248046875, 0.035491943359375, 0.64111328125, 0.1707763671875, 0.055450439453125, 0.463623046875, 0.0026454925537109375, 0.031036376953125, 1.201171875, 1.162109375, 0.0007424354553222656, 0.00722503662109375, 0.0005669593811035156, 0.155517578125, 0.329833984375, 0.2086181640625, 0.0013952255249023438, 0.39697265625, 0.0628662109375, 0.1275634765625, 0.175048828125, 0.10888671875, 0.003986358642578125, 0.0014400482177734375, 0.046539306640625, 0.0031890869140625], "tokens": [334, 1022, 664, 319, 477, 601, 14071, 322, 312, 1628, 1626, 883, 526, 3640, 2685, 322, 3191, 664, 319, 261, 6101, 32, 664, 569, 334, 1905, 1626, 5125, 26, 1212, 310, 27, 301, 284, 442, 861, 45, 334, 320, 719, 1022, 664, 319, 477, 601, 14071, 322, 312, 1628, 1626, 883, 526]}
{"line_number": 169, "line_type": "original", "code": "    if (statementContext) {", "entropy": 2.888671875, "is_bug_line": false, "sus_score": 0.25505, "per_token_entropy": [4.984375, 5.5234375, 0.298828125, 6.55078125, 2.177734375, 0.6416015625, 0.047637939453125], "tokens": [264, 415, 308, 9849, 1222, 27, 301]}
{"line_number": 169, "line_type": "generated", "code": "\n        (prev =='' || prev == '\\\\' || prev == '(' || prev == ',' ||\n         prev == ';' || prev == '=' || prev == ':' || prev == '{' ||\n         prev == '}' || prev == '[' || prev == ']'", "entropy": 0.472412109375, "is_bug_line": false, "sus_score": 0.25505, "per_token_entropy": [0.85693359375, 1.6962890625, 1.18359375, 0.099609375, 1.580078125, 0.260498046875, 0.035247802734375, 0.34814453125, 0.0014171600341796875, 2.2890625, 0.62060546875, 0.0662841796875, 0.52294921875, 0.0092010498046875, 0.61181640625, 0.67236328125, 0.36962890625, 0.0025234222412109375, 0.8681640625, 0.5595703125, 0.64599609375, 0.07281494140625, 0.0008940696716308594, 1.375, 0.005626678466796875, 0.11370849609375, 0.003658294677734375, 1.431640625, 0.259521484375, 0.149658203125, 0.004474639892578125, 1.23828125, 0.02386474609375, 0.292724609375, 0.0068359375, 2.359375, 0.357177734375, 0.019439697265625, 0.08197021484375, 0.06036376953125, 0.0007944107055664062, 1.470703125, 0.74267578125, 0.0128326416015625, 0.10504150390625, 0.006561279296875, 0.9658203125, 0.026763916015625, 0.0061492919921875, 0.0003802776336669922, 0.059600830078125, 0.01311492919921875], "tokens": [291, 308, 5586, 610, 330, 330, 1276, 7323, 610, 17276, 25, 1276, 7323, 610, 32096, 1276, 7323, 610, 17359, 1276, 276, 7323, 610, 40551, 1276, 7323, 610, 34020, 1276, 7323, 610, 25487, 1276, 7323, 610, 8930, 25, 1276, 276, 7323, 610, 330, 8129, 1276, 7323, 610, 35075, 1276, 7323, 610, 330, 18262]}
{"line_number": 214, "line_type": "original", "code": "    if ((first == '+' || first == '-') && prev == first) {", "entropy": 1.6376953125, "is_bug_line": false, "sus_score": 0.25397, "per_token_entropy": [5.9296875, 1.509765625, 2.853515625, 6.390625, 0.349365234375, 2.63671875, 0.083984375, 0.035614013671875, 0.0010423660278320312, 0.0166015625, 0.06597900390625, 1.814453125, 0.1409912109375, 4.234375, 0.140380859375, 0.004180908203125], "tokens": [264, 415, 1833, 2232, 610, 43563, 1276, 1932, 610, 40317, 962, 7323, 610, 1932, 27, 301]}
{"line_number": 214, "line_type": "generated", "code": "\n  }\n\n  void addString(String s) {\n    add(s);\n  }\n\n  void addRegexp(String s) {\n    add(s);\n  }\n\n  void addSymbol(String s) {\n    add(s);\n  }\n\n  void", "entropy": 0.23583984375, "is_bug_line": false, "sus_score": 0.25397, "per_token_entropy": [0.52197265625, 0.11358642578125, 0.286376953125, 0.477294921875, 0.355224609375, 0.4794921875, 0.032470703125, 0.038421630859375, 0.2408447265625, 0.10784912109375, 0.004627227783203125, 0.05084228515625, 1.5205078125, 0.62451171875, 0.53759765625, 0.103271484375, 0.1502685546875, 0.0007123947143554688, 0.10552978515625, 0.282958984375, 0.471435546875, 1.330078125, 0.0142822265625, 0.039520263671875, 0.27587890625, 0.059478759765625, 0.0004818439483642578, 0.0287017822265625, 0.346435546875, 0.1737060546875, 0.00788116455078125, 0.01177978515625, 0.04949951171875, 7.295608520507812e-05, 0.08831787109375, 0.203125, 0.453857421875, 1.7412109375, 0.0389404296875, 0.08251953125, 0.1275634765625, 0.00798797607421875, 0.0005311965942382812, 0.01019287109375, 0.2125244140625, 0.047515869140625, 0.006122589111328125, 0.00778961181640625, 0.04315185546875, 8.535385131835938e-05, 0.1142578125, 0.236328125], "tokens": [334, 320, 719, 763, 1015, 652, 26, 652, 309, 27, 301, 284, 1015, 26, 101, 293, 334, 320, 719, 763, 1015, 29583, 26, 652, 309, 27, 301, 284, 1015, 26, 101, 293, 334, 320, 719, 763, 1015, 6084, 26, 652, 309, 27, 301, 284, 1015, 26, 101, 293, 334, 320, 719, 763]}
{"line_number": 244, "line_type": "original", "code": "    }", "entropy": 5.04296875, "is_bug_line": false, "sus_score": 0.25339, "per_token_entropy": [5.90625, 4.1796875], "tokens": [264, 320]}
{"line_number": 244, "line_type": "generated", "code": "\n\n  /**\n   * @return Whether the a line break can be added before the specified BLOCK.\n   */\n  boolean breakBeforeBlockFor(Node n, boolean statementContext) {\n    return statementContext;\n  }\n\n  /**\n   * @return Whether the a", "entropy": 0.152587890625, "is_bug_line": false, "sus_score": 0.25339, "per_token_entropy": [0.685546875, 0.806640625, 0.06451416015625, 0.0026264190673828125, 0.75732421875, 0.09381103515625, 0.1656494140625, 0.2154541015625, 0.1529541015625, 0.00830841064453125, 0.0079803466796875, 0.04949951171875, 0.004608154296875, 0.0157470703125, 0.57958984375, 0.027862548828125, 0.0184783935546875, 0.36572265625, 0.039459228515625, 0.0005812644958496094, 0.01904296875, 0.0157012939453125, 0.018035888671875, 0.0052947998046875, 0.0002244710922241211, 0.004669189453125, 0.0167236328125, 0.0007090568542480469, 0.005451202392578125, 0.00376129150390625, 0.23876953125, 0.005374908447265625, 0.01108551025390625, 0.002368927001953125, 0.007343292236328125, 0.0004410743713378906, 0.0203094482421875, 0.1624755859375, 0.80908203125, 0.000102996826171875, 0.05950927734375, 0.006755828857421875, 0.00041294097900390625, 0.30810546875, 0.68896484375, 0.052032470703125, 0.000274658203125, 0.6337890625, 0.08563232421875, 0.173095703125, 0.316162109375, 0.199951171875], "tokens": [719, 1022, 664, 319, 477, 601, 14071, 322, 312, 1628, 1626, 883, 526, 3640, 2670, 322, 3191, 20313, 32, 664, 569, 334, 1905, 1626, 5658, 2227, 1562, 26, 1212, 310, 30, 1905, 7603, 1222, 27, 301, 284, 442, 7603, 1222, 45, 334, 320, 719, 1022, 664, 319, 477, 601, 14071, 322, 312]}
