{"line_number": 1357, "line_type": "original", "code": "    Preconditions.checkArgument(n.isGetElem());", "entropy": 1.8662109375, "is_bug_line": false, "sus_score": 0.43498, "per_token_entropy": [8.125, 7.81640625, 0.0015993118286132812, 0.004390716552734375, 0.642578125, 0.0084991455078125, 2.3203125, 0.012420654296875, 0.133056640625, 0.03668212890625, 3.244140625, 0.050506591796875], "tokens": [264, 40596, 32, 1553, 3484, 26, 96, 32, 297, 936, 10797, 1035]}
{"line_number": 1357, "line_type": "generated", "code": "\n  }\n\n  /**\n   * Try to fold object-literal property access.\n   * e.g. {a: 1, b: 2}.a ==> 1, {a: 1, b: 2}['a'] ==>", "entropy": 0.29150390625, "is_bug_line": false, "sus_score": 0.43498, "per_token_entropy": [0.1522216796875, 0.006908416748046875, 0.09808349609375, 0.31298828125, 0.038543701171875, 0.000308990478515625, 0.32421875, 0.01177215576171875, 0.0826416015625, 1.6796875, 0.385498046875, 0.89794921875, 1.240234375, 0.1954345703125, 0.243896484375, 0.8125, 0.266357421875, 0.483154296875, 0.0013933181762695312, 0.0002884864807128906, 0.61181640625, 0.8955078125, 0.71484375, 0.044342041015625, 0.48876953125, 0.3076171875, 0.341552734375, 0.0285491943359375, 0.004947662353515625, 0.1361083984375, 0.024169921875, 0.6650390625, 0.126708984375, 0.27490234375, 0.005706787109375, 0.0030956268310546875, 0.68701171875, 0.11871337890625, 0.24365234375, 0.0272369384765625, 0.34765625, 0.057708740234375, 0.08074951171875, 0.0255279541015625, 0.00800323486328125, 0.138427734375, 0.01523590087890625, 0.444580078125, 0.82666015625, 0.18408203125, 0.044830322265625, 0.007537841796875], "tokens": [334, 320, 719, 1022, 664, 319, 8959, 372, 11426, 1300, 31, 7538, 2804, 2857, 32, 664, 319, 484, 32, 89, 32, 301, 83, 44, 225, 35, 30, 323, 44, 225, 36, 4009, 83, 23044, 225, 35, 30, 301, 83, 44, 225, 35, 30, 323, 44, 225, 36, 111, 710, 83, 785, 23044]}
{"line_number": 980, "line_type": "original", "code": "            Boolean compareResult = compareAsNumbers(op, left, right);", "entropy": 2.193359375, "is_bug_line": false, "sus_score": 0.40136, "per_token_entropy": [8.2421875, 8.9140625, 1.0380859375, 0.04364013671875, 0.1533203125, 0.88623046875, 5.50390625, 1.9814453125, 0.097900390625, 5.00390625, 0.1719970703125, 0.515625, 0.1593017578125, 0.06451416015625, 0.1258544921875], "tokens": [1468, 5069, 8868, 1394, 280, 8868, 1465, 14855, 26, 520, 30, 2841, 30, 2091, 293]}
{"line_number": 980, "line_type": "generated", "code": "\n        if (compareResult!= null) {\n          result = compareResult;\n        } else {\n          return n;\n        }\n        break;\n\n      case Token.NUMBER:\n        if (undefinedRight) {\n          result = compareToUndefined(left, op);", "entropy": 0.03326416015625, "is_bug_line": false, "sus_score": 0.40136, "per_token_entropy": [0.1640625, 0.3837890625, 0.0069122314453125, 0.06634521484375, 0.0008535385131835938, 0.01033782958984375, 0.0002541542053222656, 0.00267791748046875, 0.0005755424499511719, 0.006832122802734375, 0.0056304931640625, 0.00016427040100097656, 0.002460479736328125, 8.761882781982422e-05, 0.0018777847290039062, 0.014434814453125, 0.00017631053924560547, 0.022430419921875, 0.006622314453125, 0.00399017333984375, 0.047637939453125, 0.0037097930908203125, 0.0006265640258789062, 0.034759521484375, 6.115436553955078e-05, 0.044281005859375, 0.0017957687377929688, 0.0005650520324707031, 0.043731689453125, 0.055755615234375, 0.0014715194702148438, 1.3113021850585938e-05, 0.307861328125, 0.00038242340087890625, 0.07891845703125, 0.1458740234375, 0.051849365234375, 0.1641845703125, 7.152557373046875e-05, 0.01145172119140625, 0.00016987323760986328, 0.0020847320556640625, 0.0135040283203125, 9.572505950927734e-05, 0.007152557373046875, 0.00045371055603027344, 0.0005517005920410156, 0.0001207590103149414, 0.009002685546875, 9.953975677490234e-05, 0.001007080078125, 0.00037360191345214844], "tokens": [291, 415, 308, 6055, 1394, 863, 744, 27, 301, 616, 1056, 280, 8868, 1394, 45, 291, 320, 813, 301, 616, 442, 310, 45, 291, 320, 291, 1626, 45, 1687, 1135, 6512, 32, 10463, 44, 291, 415, 308, 6376, 4046, 27, 301, 616, 1056, 280, 8868, 705, 14339, 26, 1873, 30, 3089, 293]}
{"line_number": 588, "line_type": "original", "code": "    // PeepholeSubstituteAlternateSyntax#tryMinimizeCondition", "entropy": 4.22265625, "is_bug_line": false, "sus_score": 0.35412, "per_token_entropy": [3.728515625, 2.357421875, 8.1015625, 3.015625, 0.009613037109375, 0.0021343231201171875, 12.6328125, 0.10711669921875, 5.8203125, 6.16015625, 4.22265625, 0.89990234375, 8.859375, 0.0550537109375, 7.34765625], "tokens": [264, 434, 447, 1291, 833, 2634, 23037, 11461, 35315, 6647, 21, 1270, 2928, 12178, 5356]}
{"line_number": 588, "line_type": "generated", "code": "\n    }\n\n    return n;\n  }\n\n  /**\n   * Try to fold a binary operator node.\n   */\n  private Node tryFoldBinaryOperator(Node n, Node left, Node right) {\n    int type = n.getType();\n\n    if (type", "entropy": 0.31591796875, "is_bug_line": false, "sus_score": 0.35412, "per_token_entropy": [0.35693359375, 0.0079345703125, 0.207763671875, 0.060699462890625, 0.1707763671875, 0.0002906322479248047, 0.0172119140625, 0.0005145072937011719, 0.224609375, 0.15283203125, 0.045257568359375, 0.0003769397735595703, 0.5556640625, 0.034088134765625, 0.1033935546875, 0.55419921875, 3.373046875, 1.2021484375, 2.109375, 0.71875, 0.11444091796875, 0.51708984375, 0.0043487548828125, 0.079833984375, 0.0099334716796875, 0.0108489990234375, 0.00170135498046875, 0.439453125, 0.65576171875, 0.0118560791015625, 0.016265869140625, 0.0201416015625, 0.2255859375, 0.0215911865234375, 0.01522064208984375, 0.00377655029296875, 0.0014982223510742188, 0.0021209716796875, 0.0240478515625, 0.0025348663330078125, 0.359619140625, 1.6552734375, 0.17919921875, 0.004878997802734375, 0.01419830322265625, 2.7418136596679688e-06, 0.0003170967102050781, 0.00014507770538330078, 0.51611328125, 1.14453125, 0.119384765625, 0.351806640625], "tokens": [284, 320, 446, 442, 310, 45, 334, 320, 719, 1022, 664, 319, 8959, 372, 11426, 312, 5298, 4134, 1541, 32, 664, 569, 334, 945, 4004, 1596, 15483, 6954, 7145, 26, 1212, 310, 30, 4004, 2841, 30, 4004, 2091, 27, 301, 284, 629, 827, 280, 310, 32, 10272, 473, 446, 415, 308, 681]}
{"line_number": 983, "line_type": "original", "code": "            } else {", "entropy": 3.79296875, "is_bug_line": false, "sus_score": 0.34304, "per_token_entropy": [4.34765625, 7.0859375, 2.4765625, 1.2646484375], "tokens": [1468, 320, 813, 301]}
{"line_number": 983, "line_type": "generated", "code": "\n            break;\n\n          case Token.SHNE:", "entropy": 0.2203369140625, "is_bug_line": false, "sus_score": 0.34304, "per_token_entropy": [0.357666015625, 0.94775390625, 0.0012664794921875, 0.32373046875, 0.004344940185546875, 0.00014519691467285156, 6.830692291259766e-05, 0.56396484375, 0.003185272216796875, 6.127357482910156e-05], "tokens": [324, 1626, 45, 5678, 1135, 6512, 32, 2514, 3567, 44]}
{"line_number": 558, "line_type": "original", "code": "", "entropy": 4.75, "is_bug_line": false, "sus_score": 0.33544, "per_token_entropy": [4.75], "tokens": [203]}
{"line_number": 558, "line_type": "generated", "code": "\n   *  - The left child is a string", "entropy": 0.421875, "is_bug_line": false, "sus_score": 0.33544, "per_token_entropy": [0.93896484375, 0.1737060546875, 0.10638427734375, 0.00638580322265625, 0.324951171875, 0.69873046875, 0.17578125, 0.9443359375, 0.423095703125, 0.427978515625], "tokens": [664, 319, 225, 429, 886, 2841, 2838, 438, 312, 802]}
