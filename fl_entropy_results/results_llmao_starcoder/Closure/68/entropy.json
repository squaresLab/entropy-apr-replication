{"line_number": 790, "line_type": "original", "code": "                  if (!lookAheadForTypeAnnotation() &&", "entropy": 3.765625, "is_bug_line": false, "sus_score": 0.705, "per_token_entropy": [7.56640625, 2.32421875, 1.8388671875, 10.5234375, 3.3125, 0.0010900497436523438, 6.51171875, 1.603515625, 3.0078125, 0.98046875], "tokens": [5688, 415, 1429, 6414, 51, 1816, 28545, 7942, 346, 962]}
{"line_number": 790, "line_type": "generated", "code": "\n                          token = returnDescriptionInfo.token;\n                        }\n                        break;\n\n                      case THIS:\n                        if (!jsdocBuilder.recordThisType(type)) {\n                          parser.addParserWarning(\"msg.jsdoc.this\",\n                              lineno, charno);", "entropy": 0.099609375, "is_bug_line": false, "sus_score": 0.705, "per_token_entropy": [0.8681640625, 0.681640625, 0.00119781494140625, 0.0843505859375, 7.2479248046875e-05, 7.557868957519531e-05, 0.0014085769653320312, 0.0011243820190429688, 0.0032939910888671875, 0.496337890625, 0.009368896484375, 0.53857421875, 0.03936767578125, 0.00260162353515625, 0.045684814453125, 0.00615692138671875, 0.333984375, 0.00013005733489990234, 0.025726318359375, 0.1436767578125, 0.054779052734375, 0.004913330078125, 0.0002130270004272461, 0.0002269744873046875, 0.0007224082946777344, 0.003299713134765625, 0.047393798828125, 0.0040740966796875, 0.0011014938354492188, 0.0035076141357421875, 0.0097808837890625, 0.0008120536804199219, 0.009185791015625, 0.0251617431640625, 5.137920379638672e-05, 0.0005388259887695312, 0.86474609375, 0.0094146728515625, 0.075439453125, 0.0007367134094238281, 3.9577484130859375e-05, 0.004154205322265625, 0.0003681182861328125, 0.00017309188842773438, 0.51171875, 0.1915283203125, 0.06219482421875, 0.00670623779296875, 7.450580596923828e-05, 0.0014467239379882812, 6.079673767089844e-06, 0.0012197494506835938], "tokens": [3775, 2404, 280, 442, 3234, 1120, 32, 1956, 45, 715, 320, 715, 1626, 45, 41194, 1135, 8964, 44, 715, 415, 1429, 754, 1427, 1796, 32, 4133, 2272, 620, 26, 681, 490, 301, 3775, 4118, 32, 669, 2825, 5711, 440, 2076, 32, 754, 1427, 32, 578, 392, 4985, 39997, 30, 1351, 1347, 293]}
{"line_number": 905, "line_type": "original", "code": "            token = eatTokensUntilEOL();", "entropy": 1.548828125, "is_bug_line": false, "sus_score": 0.50285, "per_token_entropy": [7.6328125, 2.677734375, 0.00894927978515625, 1.7802734375, 0.154052734375, 0.00394439697265625, 0.09857177734375, 0.0303955078125], "tokens": [1468, 2404, 280, 40808, 10911, 14877, 20277, 473]}
{"line_number": 905, "line_type": "generated", "code": "\n        }\n\n        if (token == JsDocToken.RC) {\n          break;\n        } else if (token == JsDocToken.PIPE) {\n          token = next();\n        } else {\n          parser.addParserWarning(\"msg.jsdoc.", "entropy": 0.1270751953125, "is_bug_line": false, "sus_score": 0.50285, "per_token_entropy": [0.1002197265625, 0.004901885986328125, 0.33447265625, 0.150390625, 0.05218505859375, 0.97705078125, 0.1446533203125, 0.0224761962890625, 6.568431854248047e-05, 0.00028586387634277344, 7.104873657226562e-05, 0.40625, 0.01227569580078125, 0.00624847412109375, 0.0240325927734375, 1.037109375, 0.00047016143798828125, 0.0247955322265625, 0.00010967254638671875, 0.646484375, 0.232177734375, 0.01009368896484375, 0.1068115234375, 0.345458984375, 0.01141357421875, 1.4901161193847656e-05, 0.0005335807800292969, 0.0003032684326171875, 1.40625, 0.00627899169921875, 0.00024509429931640625, 0.0167236328125, 0.0202484130859375, 0.0001608133316040039, 0.0231475830078125, 0.00432586669921875, 0.147216796875, 0.00015223026275634766, 0.08111572265625, 0.041046142578125, 0.018310546875, 0.1273193359375, 0.00010657310485839844, 0.0013103485107421875, 0.00547027587890625, 0.00405120849609375, 0.0223236083984375, 0.00333404541015625, 5.0187110900878906e-05, 0.0245361328125, 0.00015664100646972656, 0.0008063316345214844], "tokens": [291, 320, 584, 415, 308, 1956, 610, 22301, 4216, 1763, 32, 4940, 27, 301, 616, 1626, 45, 291, 320, 813, 415, 308, 1956, 610, 22301, 4216, 1763, 32, 18165, 27, 301, 616, 2404, 280, 2354, 473, 291, 320, 813, 301, 616, 4118, 32, 669, 2825, 5711, 440, 2076, 32, 754, 1427, 32]}
{"line_number": 1060, "line_type": "original", "code": "    return parseAndRecordTypeNode(token, lineno, startCharno,", "entropy": 0.5703125, "is_bug_line": false, "sus_score": 0.48223, "per_token_entropy": [3.103515625, 2.046875, 0.21484375, 0.5263671875, 0.0012912750244140625, 0.5927734375, 0.0179443359375, 0.0130462646484375, 0.10321044921875, 0.1309814453125, 1.734375, 0.003620147705078125, 0.52978515625, 0.0016298294067382812, 0.00128173828125, 0.10076904296875], "tokens": [264, 442, 3185, 2185, 3157, 620, 1212, 26, 1956, 30, 39997, 30, 1477, 2659, 1347, 30]}
{"line_number": 1060, "line_type": "generated", "code": "\n  }\n\n  /**\n   * Looks for a type expression at the current token and if found,\n   * returns it. Note that this method consumes input.\n   *\n   * @param token The current token.\n   * @param lineno The line of the", "entropy": 0.062744140625, "is_bug_line": false, "sus_score": 0.48223, "per_token_entropy": [1.73828125, 0.2041015625, 0.142822265625, 0.257080078125, 0.00981903076171875, 0.00021326541900634766, 0.133056640625, 0.0014581680297851562, 0.035400390625, 0.1285400390625, 0.0216827392578125, 0.0225677490234375, 0.00768280029296875, 0.0263671875, 0.0030651092529296875, 0.00814056396484375, 0.002410888671875, 0.0005517005920410156, 0.00035452842712402344, 0.0171356201171875, 1.8835067749023438e-05, 0.0089874267578125, 0.0018262863159179688, 0.00423431396484375, 0.01439666748046875, 0.00011074542999267578, 0.00031876564025878906, 9.393692016601562e-05, 0.0009055137634277344, 3.170967102050781e-05, 0.0002237558364868164, 0.003162384033203125, 0.0206451416015625, 0.0006570816040039062, 0.017059326171875, 0.00021958351135253906, 0.231201171875, 0.003231048583984375, 0.0230560302734375, 0.006694793701171875, 0.005123138427734375, 0.001476287841796875, 0.0040130615234375, 0.0249176025390625, 0.0011587142944335938, 0.0006842613220214844, 0.047454833984375, 0.058746337890625, 0.00420379638671875, 0.002811431884765625, 0.01264190673828125, 0.0010318756103515625], "tokens": [334, 320, 719, 1022, 664, 319, 17430, 436, 312, 827, 6101, 821, 322, 1550, 2404, 461, 415, 2431, 30, 664, 319, 3217, 561, 32, 5830, 688, 458, 1411, 16831, 101, 1509, 32, 664, 319, 664, 319, 477, 753, 2404, 886, 1550, 2404, 32, 664, 319, 477, 753, 39997, 886, 1628, 432, 322]}
{"line_number": 1701, "line_type": "original", "code": "        return parseFunctionType(next());", "entropy": 2.568359375, "is_bug_line": false, "sus_score": 0.42615, "per_token_entropy": [8.53125, 1.572265625, 3.560546875, 1.4072265625, 0.1978759765625, 2.59765625, 0.124755859375], "tokens": [351, 442, 3185, 44334, 26, 1978, 1035]}
{"line_number": 1701, "line_type": "generated", "code": "\n\n  /**\n   * UnionType := '(' TypeExpressionList ')'\n   */\n  private Node parseUnionType(JsDocToken token) {\n    if (token!= JsDocToken.LP) {\n      return reportTypeSyntaxWarning(\"msg.jsdoc.missing", "entropy": 0.12939453125, "is_bug_line": false, "sus_score": 0.42615, "per_token_entropy": [1.0224609375, 0.158447265625, 0.033233642578125, 0.0015420913696289062, 1.8359375, 0.00572967529296875, 0.028228759765625, 0.37890625, 0.53955078125, 0.056549072265625, 1.0087890625, 0.0634765625, 0.0654296875, 0.228759765625, 0.006282806396484375, 0.02423095703125, 0.005985260009765625, 0.0005860328674316406, 0.0007567405700683594, 5.1021575927734375e-05, 0.00232696533203125, 0.004913330078125, 4.649162292480469e-06, 0.0013866424560546875, 0.039154052734375, 0.0013532638549804688, 0.0021800994873046875, 0.0088653564453125, 0.1622314453125, 0.017333984375, 0.01491546630859375, 0.0665283203125, 0.0003960132598876953, 4.5299530029296875e-06, 1.704692840576172e-05, 2.9802322387695312e-05, 0.0007548332214355469, 0.006855010986328125, 0.003650665283203125, 0.0034618377685546875, 0.08642578125, 0.054473876953125, 0.54541015625, 0.015167236328125, 0.006572723388671875, 0.039459228515625, 0.00514984130859375, 4.6133995056152344e-05, 0.0050506591796875, 0.0004897117614746094, 0.00014019012451171875, 0.1661376953125], "tokens": [719, 1022, 664, 319, 16545, 620, 1025, 32096, 2768, 3487, 720, 39691, 664, 569, 334, 945, 4004, 3185, 14185, 620, 26, 10535, 4216, 1763, 2404, 27, 301, 284, 415, 308, 1956, 863, 22301, 4216, 1763, 32, 7580, 27, 301, 397, 442, 3639, 620, 6647, 5711, 440, 2076, 32, 754, 1427, 32, 9785]}
{"line_number": 2301, "line_type": "original", "code": "    stream.ungetChar(c);", "entropy": 1.2177734375, "is_bug_line": false, "sus_score": 0.397, "per_token_entropy": [6.3515625, 2.63671875, 0.0019006729125976562, 1.298828125, 0.0396728515625, 0.444091796875, 0.1820068359375, 0.00359344482421875, 0.0048980712890625], "tokens": [264, 3443, 32, 311, 371, 2659, 26, 85, 293]}
{"line_number": 2301, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.397, "per_token_entropy": [], "tokens": []}
