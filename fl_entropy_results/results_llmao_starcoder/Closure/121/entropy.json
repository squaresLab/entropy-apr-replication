{"line_number": 655, "line_type": "original", "code": "        Node parent = initialization.getParent();", "entropy": 2.515625, "is_bug_line": false, "sus_score": 0.35652, "per_token_entropy": [5.4765625, 7.26953125, 4.0546875, 0.1988525390625, 2.625, 0.0117340087890625, 0.429931640625, 0.051422119140625], "tokens": [351, 4004, 2935, 280, 13577, 32, 18789, 473]}
{"line_number": 655, "line_type": "generated", "code": "\n          return false;\n        }\n      }\n\n      for (int i = startingReadRef; i < refSet.size(); i++) {\n        Reference ref = refSet.get(i);\n        if (!isValidReference(ref)) {\n          return false;", "entropy": 0.09515380859375, "is_bug_line": false, "sus_score": 0.35652, "per_token_entropy": [0.1806640625, 0.392578125, 0.010650634765625, 0.001476287841796875, 0.0228729248046875, 0.0005993843078613281, 0.12384033203125, 0.0001392364501953125, 0.1365966796875, 1.111328125, 0.006359100341796875, 0.055450439453125, 0.10498046875, 0.01000213623046875, 0.0081634521484375, 2.9802322387695312e-06, 4.76837158203125e-07, 0.169677734375, 0.004878997802734375, 0.01105499267578125, 0.0018320083618164062, 0.006862640380859375, 1.1444091796875e-05, 1.7762184143066406e-05, 0.0055694580078125, 0.1240234375, 0.0020084381103515625, 0.00010335445404052734, 0.023773193359375, 0.31005859375, 0.8037109375, 0.472900390625, 0.0012273788452148438, 0.00024771690368652344, 8.106231689453125e-06, 1.0371208190917969e-05, 1.7762184143066406e-05, 0.00023615360260009766, 0.00027441978454589844, 0.07073974609375, 0.11297607421875, 0.171630859375, 0.06292724609375, 0.125244140625, 0.00011515617370605469, 0.00055694580078125, 0.1165771484375, 0.0009975433349609375, 0.1495361328125, 0.031463623046875, 0.00040268898010253906, 0.00032138824462890625], "tokens": [616, 442, 901, 45, 291, 320, 397, 320, 1687, 436, 308, 410, 595, 280, 8049, 2230, 2084, 45, 595, 333, 2488, 885, 32, 891, 473, 595, 1987, 301, 291, 9494, 2488, 280, 2488, 885, 32, 371, 26, 91, 293, 291, 415, 1429, 13433, 3564, 26, 612, 490, 301, 616, 442, 901, 45]}
{"line_number": 588, "line_type": "original", "code": "      // the same basic block.", "entropy": 4.1875, "is_bug_line": false, "sus_score": 0.32534, "per_token_entropy": [2.884765625, 4.09375, 7.53125, 5.52734375, 6.1875, 0.1131591796875, 2.982421875], "tokens": [647, 434, 322, 2432, 6550, 2163, 32]}
{"line_number": 588, "line_type": "generated", "code": "\n          || declaration.getParent().isFunction();\n    }\n\n    /**\n     * @return true if the reference is a parameter of a FUNCTION declaration.\n     */\n    private boolean isValidParameter(Reference declaration) {\n      Preconditions.checkState(declaration.getParent().isParam", "entropy": 0.3369140625, "is_bug_line": false, "sus_score": 0.32534, "per_token_entropy": [0.44677734375, 0.036346435546875, 0.2509765625, 0.00028514862060546875, 0.060211181640625, 0.001678466796875, 0.06439208984375, 0.277099609375, 0.041717529296875, 0.0023403167724609375, 0.6240234375, 0.459716796875, 0.047332763671875, 0.0003662109375, 0.9765625, 0.085693359375, 0.28369140625, 0.0179443359375, 0.2900390625, 0.81884765625, 0.1375732421875, 0.58251953125, 2.623046875, 1.828125, 0.22265625, 1.1240234375, 1.6474609375, 0.0989990234375, 0.0015668869018554688, 0.0267333984375, 0.006832122802734375, 0.0143280029296875, 0.00736236572265625, 0.77294921875, 0.4638671875, 0.13037109375, 0.017822265625, 0.38720703125, 0.2138671875, 0.00024890899658203125, 0.0989990234375, 1.1552734375, 0.00054931640625, 0.0013704299926757812, 0.322265625, 0.0106353759765625, 0.169677734375, 0.0018968582153320312, 0.169921875, 0.004306793212890625, 0.12017822265625, 0.369873046875], "tokens": [616, 1276, 13317, 32, 18789, 922, 39504, 473, 284, 320, 446, 1022, 275, 319, 477, 601, 861, 415, 322, 4121, 438, 312, 3395, 432, 312, 17747, 13317, 32, 275, 569, 284, 945, 1905, 20440, 3012, 26, 3564, 13317, 27, 301, 397, 40596, 32, 1553, 1078, 26, 24050, 32, 18789, 922, 297, 3180]}
{"line_number": 264, "line_type": "original", "code": "        // if the variable is referenced more than once, we can only", "entropy": 2.333984375, "is_bug_line": false, "sus_score": 0.31703, "per_token_entropy": [3.99609375, 2.24609375, 3.978515625, 0.93603515625, 2.416015625, 0.94677734375, 5.43359375, 2.146484375, 0.05078125, 0.2548828125, 1.037109375, 4.09765625, 1.748046875, 3.40625], "tokens": [351, 434, 415, 322, 2677, 438, 15167, 1829, 2784, 5049, 30, 996, 883, 1755]}
{"line_number": 264, "line_type": "generated", "code": "\n                isImmutableAndWellDefinedVariable(candidate.alias, candidate.info)) {\n              // inline it if it's immutable and never defined before referenced.\n              inlineWellDefinedVariable(\n                  candidate.alias,\n                  candidate.info.references.get(0", "entropy": 0.3271484375, "is_bug_line": false, "sus_score": 0.31703, "per_token_entropy": [0.323486328125, 1.59375, 0.27685546875, 0.06866455078125, 0.0221405029296875, 0.00043463706970214844, 0.0206451416015625, 0.004119873046875, 0.5244140625, 0.003917694091796875, 0.0205078125, 0.0269012451171875, 1.7294921875, 0.1588134765625, 2.265625, 0.1473388671875, 0.004016876220703125, 0.112060546875, 0.841796875, 1.638671875, 0.5419921875, 0.08001708984375, 0.05255126953125, 0.0231781005859375, 0.03729248046875, 0.0295562744140625, 0.0711669921875, 0.0279541015625, 0.0222930908203125, 0.189208984375, 0.06268310546875, 0.050079345703125, 0.896484375, 0.29443359375, 6.783008575439453e-05, 0.08941650390625, 0.01554107666015625, 0.92578125, 0.09991455078125, 0.0010576248168945312, 0.0013551712036132812, 0.0002167224884033203, 1.251953125, 0.53466796875, 0.0013017654418945312, 0.66748046875, 0.005466461181640625, 0.89306640625, 0.007091522216796875, 0.00708770751953125, 0.003261566162109375, 0.344482421875], "tokens": [400, 438, 15027, 2185, 25778, 12421, 3818, 26, 16142, 32, 7909, 30, 15133, 32, 1338, 490, 301, 1090, 434, 4447, 561, 415, 561, 1182, 26055, 461, 7152, 3417, 2670, 15167, 32, 1090, 4447, 25778, 12421, 3818, 26, 1750, 15133, 32, 7909, 30, 1750, 15133, 32, 1338, 32, 6365, 32, 371, 26, 34]}
{"line_number": 656, "line_type": "original", "code": "        Preconditions.checkState(", "entropy": 1.9150390625, "is_bug_line": false, "sus_score": 0.30868, "per_token_entropy": [3.71484375, 7.703125, 0.00339508056640625, 0.002582550048828125, 0.0187530517578125, 0.045745849609375], "tokens": [351, 40596, 32, 1553, 1078, 26]}
{"line_number": 656, "line_type": "generated", "code": "\n        }\n      }\n\n      // Check that the variable is never modified after initialization.\n      for (int i = startingReadRef; i < refSet.size(); i++) {\n        Reference reference = refSet.get(i);\n        if (!isValidReference", "entropy": 0.2919921875, "is_bug_line": false, "sus_score": 0.30868, "per_token_entropy": [0.1832275390625, 0.035552978515625, 0.2301025390625, 0.0005340576171875, 0.1798095703125, 1.3681640625, 1.8427734375, 0.6962890625, 0.7734375, 0.65673828125, 0.2266845703125, 1.265625, 0.462646484375, 1.6611328125, 0.75830078125, 0.377685546875, 0.05023193359375, 0.5908203125, 0.004039764404296875, 0.04766845703125, 0.1119384765625, 0.009033203125, 0.005077362060546875, 2.7418136596679688e-06, 2.384185791015625e-07, 0.1495361328125, 0.004947662353515625, 0.006496429443359375, 0.001476287841796875, 0.006916046142578125, 1.0848045349121094e-05, 2.1338462829589844e-05, 0.00812530517578125, 0.11175537109375, 0.0016775131225585938, 9.763240814208984e-05, 0.054107666015625, 0.51708984375, 1.6904296875, 0.007495880126953125, 0.001697540283203125, 0.001953125, 1.0609626770019531e-05, 1.2040138244628906e-05, 2.956390380859375e-05, 0.0003197193145751953, 0.0004012584686279297, 0.07586669921875, 0.1846923828125, 0.5302734375, 0.1634521484375, 0.11962890625], "tokens": [291, 320, 397, 320, 1687, 434, 3456, 688, 322, 2677, 438, 7152, 8844, 2685, 13577, 32, 397, 436, 308, 410, 595, 280, 8049, 2230, 2084, 45, 595, 333, 2488, 885, 32, 891, 473, 595, 1987, 301, 291, 9494, 4121, 280, 2488, 885, 32, 371, 26, 91, 293, 291, 415, 1429, 13433, 3564]}
{"line_number": 715, "line_type": "original", "code": "        boolean isInlinableThisAlias =", "entropy": 1.5322265625, "is_bug_line": false, "sus_score": 0.28131, "per_token_entropy": [6.5, 4.21875, 1.025390625, 0.001617431640625, 0.0007581710815429688, 0.019744873046875, 0.0034637451171875, 0.486572265625], "tokens": [351, 1905, 43349, 1800, 444, 2272, 7886, 280]}
{"line_number": 715, "line_type": "generated", "code": "\n  /**\n   * Returns whether the string is worth inlining.\n   *\n   * If the string is a constant or is defined at the top level of the file,\n   * then it is worth inlining.\n   *\n   * @param v The variable", "entropy": 0.8017578125, "is_bug_line": false, "sus_score": 0.28131, "per_token_entropy": [1.2119140625, 0.7998046875, 0.1507568359375, 0.00104522705078125, 1.849609375, 0.7607421875, 0.76806640625, 1.66796875, 0.72998046875, 0.51416015625, 0.040496826171875, 0.0038890838623046875, 0.464599609375, 0.5439453125, 0.8349609375, 0.572265625, 0.005268096923828125, 3.1328125, 0.69091796875, 0.262939453125, 0.33984375, 1.7724609375, 2.373046875, 2.984375, 1.724609375, 2.625, 2.513671875, 0.6083984375, 0.662109375, 0.31982421875, 1.1328125, 0.69775390625, 0.8642578125, 0.57861328125, 0.615234375, 0.0016841888427734375, 1.154296875, 0.323974609375, 0.40234375, 0.373779296875, 0.01263427734375, 0.00862884521484375, 0.230712890625, 0.4580078125, 0.84375, 0.104736328125, 0.0203094482421875, 1.1572265625, 0.2032470703125, 0.8759765625, 0.2391357421875, 0.462890625], "tokens": [334, 1022, 664, 319, 3759, 4946, 322, 802, 438, 16587, 328, 22914, 32, 664, 319, 664, 319, 1670, 322, 802, 438, 312, 8082, 556, 438, 3417, 821, 322, 2663, 3193, 432, 322, 803, 30, 664, 319, 1615, 561, 438, 16587, 328, 22914, 32, 664, 319, 664, 319, 477, 753, 354, 886, 2677]}
