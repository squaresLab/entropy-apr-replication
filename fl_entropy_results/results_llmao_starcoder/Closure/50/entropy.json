{"line_number": 403, "line_type": "original", "code": "          sb.append(joinString);", "entropy": 2.5390625, "is_bug_line": false, "sus_score": 0.26403, "per_token_entropy": [6.39453125, 7.421875, 0.8564453125, 0.117431640625, 0.031463623046875, 5.37109375, 0.0201873779296875, 0.1026611328125], "tokens": [2033, 6115, 32, 1689, 26, 2524, 652, 293]}
{"line_number": 403, "line_type": "generated", "code": "\n        n.getParent().replaceChild(n, foldedStringNode);\n        reportCodeChange();\n        return foldedStringNode;\n      default:\n        break;\n    }\n\n    Node newString = Node.newString(joinString);\n    Node newArray", "entropy": 0.254638671875, "is_bug_line": false, "sus_score": 0.26403, "per_token_entropy": [0.207275390625, 0.6513671875, 0.0024776458740234375, 0.004627227783203125, 4.553794860839844e-05, 0.0002727508544921875, 5.435943603515625e-05, 6.67572021484375e-05, 0.002239227294921875, 0.0001480579376220703, 0.0107421875, 3.5762786865234375e-07, 0.00011229515075683594, 2.6941299438476562e-05, 0.005344390869140625, 0.094482421875, 0.0711669921875, 0.0006690025329589844, 3.826618194580078e-05, 0.0011959075927734375, 0.0284881591796875, 0.0115814208984375, 0.0089263916015625, 1.1920928955078125e-07, 8.64267349243164e-05, 1.0967254638671875e-05, 0.00559234619140625, 0.46826171875, 0.0576171875, 0.0008869171142578125, 0.10125732421875, 1.1337890625, 0.0001977682113647461, 0.0116424560546875, 0.0006437301635742188, 0.406982421875, 1.4453125, 1.560546875, 2.009765625, 0.6328125, 0.2174072265625, 0.06280517578125, 0.0004100799560546875, 0.0017938613891601562, 0.18359375, 0.169677734375, 0.0035953521728515625, 0.654296875, 0.23876953125, 0.64697265625, 1.591796875, 0.533203125], "tokens": [291, 310, 32, 18789, 922, 3227, 2931, 26, 96, 30, 14801, 981, 652, 1212, 293, 291, 3639, 1227, 1791, 473, 291, 442, 14801, 981, 652, 1212, 45, 397, 1244, 44, 291, 1626, 45, 284, 320, 446, 4004, 537, 652, 280, 4004, 32, 890, 652, 26, 2524, 652, 293, 284, 4004, 537, 1261]}
{"line_number": 392, "line_type": "original", "code": "    List<Node> arrayFoldedChildren = Lists.newLinkedList();", "entropy": 1.6806640625, "is_bug_line": false, "sus_score": 0.24478, "per_token_entropy": [6.2421875, 10.4140625, 0.0202484130859375, 0.10870361328125, 0.00022363662719726562, 3.587890625, 2.49609375, 0.00011706352233886719, 8.237361907958984e-05, 0.245361328125, 0.67138671875, 1.0947265625, 0.00429534912109375, 1.994140625, 0.0010814666748046875, 0.00765228271484375], "tokens": [264, 1682, 46, 1212, 48, 1417, 56, 362, 981, 7640, 280, 25163, 32, 890, 20555, 473]}
{"line_number": 392, "line_type": "generated", "code": "\n          return n;\n        } else {\n          n.getParent().replaceChild(n, foldedStringNode);\n          reportCodeChange();\n          return foldedStringNode;\n        }\n      default:\n        if (foldedSize > originalSize) {", "entropy": 0.08349609375, "is_bug_line": false, "sus_score": 0.24478, "per_token_entropy": [0.1947021484375, 0.260009765625, 0.02117919921875, 0.0008287429809570312, 0.1300048828125, 0.002475738525390625, 1.0458984375, 0.04022216796875, 0.048370361328125, 0.54931640625, 0.0020771026611328125, 0.0012359619140625, 4.5418739318847656e-05, 0.0006618499755859375, 6.99758529663086e-05, 0.0001468658447265625, 0.005084991455078125, 0.0001609325408935547, 0.005588531494140625, -0.0, 0.0001531839370727539, 1.609325408935547e-05, 0.00543975830078125, 0.0232086181640625, 0.0418701171875, 0.0002415180206298828, 9.5367431640625e-06, 0.0004887580871582031, 0.021026611328125, 0.00945281982421875, 0.0025177001953125, 1.1920928955078125e-07, 8.857250213623047e-05, 7.152557373046875e-06, 0.0012454986572265625, 0.004962921142578125, 4.7087669372558594e-05, 0.16357421875, 0.06573486328125, 0.000995635986328125, 0.1568603515625, 0.9912109375, 0.020172119140625, 0.1904296875, 2.384185791015625e-07, 0.0006794929504394531, 0.2012939453125, 0.017333984375, 1.1920928955078125e-05, 0.0275115966796875, 0.0027942657470703125], "tokens": [616, 442, 310, 45, 291, 320, 813, 301, 616, 310, 32, 18789, 922, 3227, 2931, 26, 96, 30, 14801, 981, 652, 1212, 293, 616, 3639, 1227, 1791, 473, 616, 442, 14801, 981, 652, 1212, 45, 291, 320, 397, 1244, 44, 291, 415, 308, 8025, 981, 1250, 848, 4707, 1250, 27, 301]}
{"line_number": 430, "line_type": "original", "code": "    foldedSize += arrayFoldedChildren.size() - 1;", "entropy": 1.2705078125, "is_bug_line": false, "sus_score": 0.24017, "per_token_entropy": [5.3828125, 8.03125, 0.001842498779296875, 0.1954345703125, 0.33251953125, 5.875, 0.5302734375, 3.826618194580078e-05, 0.0001678466796875, 0.021148681640625, 0.01641845703125, 0.03485107421875, 0.2342529296875, 0.37451171875, 0.0304107666015625, 0.41748046875, 0.120361328125], "tokens": [264, 14801, 981, 1250, 1454, 1417, 56, 362, 981, 7640, 32, 891, 346, 429, 225, 35, 45]}
{"line_number": 430, "line_type": "generated", "code": "\n   *\n   * @param n CALL node\n   * @return the replacement node, or the original node if no folding could be\n   * performed\n   */\n  private Node tryFoldStringSubstr(Node n) {\n    Preconditions.checkArgument(n", "entropy": 0.45654296875, "is_bug_line": false, "sus_score": 0.24017, "per_token_entropy": [0.2493896484375, 0.53125, 0.97900390625, 0.008056640625, 0.64111328125, 0.1763916015625, 0.08331298828125, 2.240234375, 0.50830078125, 0.6181640625, 0.16748046875, 0.00923919677734375, 0.1806640625, 1.6552734375, 2.392578125, 0.4716796875, 0.79638671875, 0.267333984375, 0.75341796875, 0.2276611328125, 0.7158203125, 0.30712890625, 1.1767578125, 0.6396484375, 0.00867462158203125, 1.59375, 0.271240234375, 0.224365234375, 0.00858306884765625, 1.7744140625, 0.7734375, 0.01318359375, 0.029296875, 0.2548828125, 0.01036834716796875, 0.2197265625, 0.046661376953125, 0.427490234375, 0.215576171875, 0.00994873046875, 0.1708984375, 0.0032749176025390625, 0.0207366943359375, 0.032470703125, 0.0009965896606445312, 0.164794921875, 1.2294921875, 0.0006461143493652344, 0.004932403564453125, 0.24560546875, 0.004268646240234375, 0.1796875], "tokens": [664, 319, 664, 319, 477, 753, 310, 16084, 1541, 664, 319, 477, 601, 322, 15909, 1541, 30, 556, 322, 4707, 1541, 415, 1289, 11426, 299, 3065, 526, 664, 319, 13555, 664, 569, 334, 945, 4004, 1596, 15483, 652, 1721, 466, 26, 1212, 310, 27, 301, 284, 40596, 32, 1553, 3484, 26, 96]}
{"line_number": 391, "line_type": "original", "code": "    String joinString = (right == null) ? \",\" : NodeUtil.getStringValue(right);", "entropy": 1.6220703125, "is_bug_line": true, "sus_score": 0.24006, "per_token_entropy": [5.80859375, 5.7421875, 4.2265625, 0.1485595703125, 0.1025390625, 4.3203125, 3.072265625, 0.64306640625, 0.001251220703125, 0.10589599609375, 0.76416015625, 3.4296875, 0.2005615234375, 3.55859375, 0.006481170654296875, 0.08050537109375, 1.7978515625, 0.008880615234375, 0.0009741783142089844, 0.02362060546875, 0.03271484375], "tokens": [264, 892, 7140, 652, 280, 308, 990, 610, 744, 27, 1018, 17693, 499, 4004, 1733, 32, 7069, 882, 26, 990, 293]}
{"line_number": 391, "line_type": "generated", "code": "\n        if (foldedStringNode.getType() == Token.STRING) {\n          foldedStringNode.setString(\n              foldedStringNode.getString().substring(1, foldedStringNode.getString().length() - 1));\n        }\n       ", "entropy": 0.21533203125, "is_bug_line": true, "sus_score": 0.24006, "per_token_entropy": [0.1141357421875, 0.71435546875, 0.1763916015625, 0.50732421875, 1.1920928955078125e-07, 0.283203125, 0.00019168853759765625, 0.07135009765625, 0.449462890625, 0.0007481575012207031, 0.259765625, 0.0006933212280273438, 1.4185905456542969e-05, 0.07769775390625, 0.25341796875, 0.006317138671875, 0.05633544921875, 1.236328125, 9.5367431640625e-07, 0.07421875, 0.0017786026000976562, 0.318603515625, 0.1380615234375, 0.1895751953125, 0.2481689453125, 2.107421875, 1.430511474609375e-06, 0.00039196014404296875, 0.0004220008850097656, 0.0011157989501953125, 0.0020294189453125, 0.1256103515625, 0.98876953125, 0.001743316650390625, 1.240234375, 0.0026340484619140625, 0.327392578125, 2.7418136596679688e-06, 0.006351470947265625, 9.632110595703125e-05, 0.020599365234375, 0.17529296875, 0.0767822265625, 0.00640106201171875, 0.1143798828125, 0.0020275115966796875, 0.03033447265625, 0.004283905029296875, 0.06927490234375, 0.206298828125, 0.0011844635009765625, 0.5068359375], "tokens": [291, 415, 308, 8025, 981, 652, 1212, 32, 10272, 346, 610, 6512, 32, 5203, 27, 301, 616, 14801, 981, 652, 1212, 32, 24353, 26, 1090, 14801, 981, 652, 1212, 32, 7069, 922, 8723, 26, 35, 30, 14801, 981, 652, 1212, 32, 7069, 922, 1322, 346, 429, 225, 35, 876, 291, 320, 291]}
{"line_number": 525, "line_type": "original", "code": "", "entropy": 5.1484375, "is_bug_line": false, "sus_score": 0.23175, "per_token_entropy": [5.1484375], "tokens": [203]}
{"line_number": 525, "line_type": "generated", "code": "\n    Node resultNode = Node.newString(stringAsString.substring(start, end));\n    Node parent = n.getParent();\n    parent.replaceChild(n, resultNode);\n    reportCodeChange();\n    return resultNode;\n  }\n\n  /**", "entropy": 0.0662841796875, "is_bug_line": false, "sus_score": 0.23175, "per_token_entropy": [0.053436279296875, 1.19140625, 0.258544921875, 0.1348876953125, 0.09417724609375, 0.2230224609375, 0.081787109375, 0.0003643035888671875, 0.00019443035125732422, 0.0038509368896484375, 0.31298828125, 0.00336456298828125, 0.002819061279296875, 0.0002765655517578125, 0.0006985664367675781, 0.0135498046875, 0.0003707408905029297, 0.01241302490234375, 0.0033473968505859375, 0.223388671875, 0.09600830078125, 0.00518035888671875, 0.000316619873046875, 0.0008640289306640625, 2.3126602172851562e-05, 4.303455352783203e-05, 0.00020778179168701172, 0.0070343017578125, 0.004520416259765625, 2.276897430419922e-05, 0.00012540817260742188, 2.6106834411621094e-05, 2.4199485778808594e-05, 0.0003829002380371094, 6.580352783203125e-05, 0.0006775856018066406, 2.0623207092285156e-05, 0.00014972686767578125, 0.00766754150390625, 0.0097808837890625, 4.279613494873047e-05, 2.2292137145996094e-05, 0.00017273426055908203, 0.0166015625, 0.0006875991821289062, 0.0011682510375976562, 2.86102294921875e-06, 0.00010180473327636719, 0.01416015625, 0.0007953643798828125, 0.5107421875, 0.1536865234375], "tokens": [284, 4004, 1056, 1212, 280, 4004, 32, 890, 652, 26, 800, 15026, 32, 8723, 26, 1366, 30, 943, 876, 284, 4004, 2935, 280, 310, 32, 18789, 473, 284, 2935, 32, 3227, 2931, 26, 96, 30, 1056, 1212, 293, 284, 3639, 1227, 1791, 473, 284, 442, 1056, 1212, 45, 334, 320, 719, 1022]}
