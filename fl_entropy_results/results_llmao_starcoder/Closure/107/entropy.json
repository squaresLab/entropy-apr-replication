{"line_number": 343, "line_type": "original", "code": "    private boolean processClosurePrimitives = true;", "entropy": 1.662109375, "is_bug_line": false, "sus_score": 0.37584, "per_token_entropy": [2.703125, 2.0078125, 1.87890625, 3.138671875, 3.59765625, 0.01343536376953125, 0.2139892578125, 1.3798828125, 0.0283660888671875], "tokens": [264, 945, 1905, 2164, 23347, 36123, 280, 861, 45]}
{"line_number": 343, "line_type": "generated", "code": "\n    @Option(name = \"--compilation_level\",\n        usage = \"Specifies the mode in which the input files should be \"\n        + \"compiled. Options: WHITESPACE_ONLY, SIMPLE_OPTIMIZATIONS, \"\n        + \"ADV", "entropy": 0.18310546875, "is_bug_line": false, "sus_score": 0.37584, "per_token_entropy": [1.40625, 0.28515625, 0.12646484375, 0.0015773773193359375, 0.0035648345947265625, 0.0021209716796875, 0.01093292236328125, 2.330078125, 0.00016736984252929688, 0.0007786750793457031, 0.0018177032470703125, 0.0540771484375, 0.2337646484375, 0.0014314651489257812, 0.0212860107421875, 0.0899658203125, 0.28515625, 1.26953125, 0.03961181640625, 2.7894973754882812e-05, 0.1358642578125, 0.9248046875, 0.309814453125, 0.1483154296875, 0.1451416015625, 0.08935546875, 0.246826171875, 0.0004067420959472656, 0.0003910064697265625, 0.0782470703125, 0.04095458984375, 0.1768798828125, 0.08929443359375, 0.85546875, 0.0001347064971923828, 6.318092346191406e-06, 0.0038700103759765625, 0.00018143653869628906, 0.004444122314453125, 0.00494384765625, 0.003314971923828125, 4.2438507080078125e-05, 0.01479339599609375, 6.592273712158203e-05, 1.6808509826660156e-05, 0.00010979175567626953, 0.02362060546875, 0.042510986328125, 0.007404327392578125, 0.0001550912857055664, 0.0035572052001953125, 0.008026123046875], "tokens": [284, 477, 2828, 26, 426, 280, 7915, 31670, 81, 2649, 392, 291, 6886, 280, 313, 33304, 322, 2926, 328, 1510, 322, 1509, 2276, 1395, 526, 313, 291, 474, 313, 19243, 32, 11024, 44, 8741, 34193, 8993, 81, 13008, 30, 358, 6898, 815, 81, 42453, 76, 19419, 30, 313, 291, 474, 313, 26528]}
{"line_number": 436, "line_type": "original", "code": "        usage = \"Shows the duration of each compiler pass and the impact to \" +", "entropy": 3.734375, "is_bug_line": false, "sus_score": 0.33916, "per_token_entropy": [3.298828125, 14.0078125, 0.828125, 0.223876953125, 6.72265625, 0.50634765625, 15.828125, 0.421142578125, 0.65576171875, 1.1357421875, 0.328125, 2.60546875, 1.2314453125, 7.76171875, 4.89453125, 1.8720703125, 1.1396484375], "tokens": [351, 6886, 280, 313, 46890, 322, 7459, 432, 2504, 8980, 3097, 461, 322, 14932, 372, 313, 474]}
{"line_number": 436, "line_type": "generated", "code": "\n      public int parseArguments(Parameters params) throws CmdLineException {\n        String param = params.getParameter(0);\n        if (TRUES.contains(param.toLowerCase())) {\n          setter.addValue(true);\n          return 1;\n        }", "entropy": 0.12939453125, "is_bug_line": false, "sus_score": 0.33916, "per_token_entropy": [0.74267578125, 0.470703125, 0.43505859375, 0.10546875, 0.08795166015625, 7.164478302001953e-05, 0.206298828125, 0.0138092041015625, 0.00321197509765625, 0.56201171875, 0.175537109375, 0.0001863241195678711, 0.05072021484375, 0.003734588623046875, 0.07513427734375, 0.255126953125, 0.35595703125, 0.0235443115234375, 0.13916015625, 1.3709068298339844e-05, 0.031036376953125, 0.01025390625, 2.8967857360839844e-05, 0.047698974609375, 0.1356201171875, 0.228271484375, 0.09979248046875, 0.2154541015625, 2.2292137145996094e-05, 0.0001723766326904297, 2.1696090698242188e-05, 0.0002722740173339844, 0.0026874542236328125, 0.7783203125, 0.00039768218994140625, 0.10968017578125, 0.0016994476318359375, 0.0736083984375, 0.60791015625, 0.0008144378662109375, 0.0009083747863769531, 2.193450927734375e-05, 0.0024929046630859375, 0.51220703125, 0.00014209747314453125, 0.1336669921875, 0.00652313232421875, 0.00011599063873291016, 0.00823974609375, 5.650520324707031e-05, 0.0119171142578125, 0.0005903244018554688], "tokens": [397, 562, 629, 3185, 8555, 26, 3675, 2803, 27, 2571, 20758, 1811, 984, 301, 291, 892, 4356, 280, 2803, 32, 17761, 26, 34, 293, 291, 415, 308, 1310, 2621, 32, 4752, 26, 753, 32, 10493, 5156, 301, 616, 25316, 32, 669, 882, 26, 1508, 293, 616, 442, 225, 35, 45, 291, 320]}
{"line_number": 487, "line_type": "original", "code": "        String param = null;", "entropy": 2.3125, "is_bug_line": false, "sus_score": 0.31027, "per_token_entropy": [6.62109375, 4.94921875, 1.2138671875, 0.9931640625, 0.08172607421875, 0.01280975341796875], "tokens": [351, 892, 4356, 280, 744, 45]}
{"line_number": 487, "line_type": "generated", "code": "\n\n    // Our own parser for warning guards that preserves the original order\n    // of the flags.\n    public static class WarningGuardSetter implements Setter<String> {\n      private final Setter<? super String> setter;\n      private final CheckLevel level;\n\n     ", "entropy": 0.21142578125, "is_bug_line": false, "sus_score": 0.31027, "per_token_entropy": [2.33203125, 1.609375, 1.3232421875, 0.023712158203125, 0.1865234375, 0.0850830078125, 1.2783203125, 0.42919921875, 0.0002033710479736328, 0.268310546875, 0.0870361328125, 0.00022292137145996094, 0.0036830902099609375, 0.01348114013671875, 0.0018596649169921875, 0.04083251953125, 0.002834320068359375, 0.0019292831420898438, 0.0007948875427246094, 0.00351715087890625, 0.022552490234375, 0.0321044921875, 0.2430419921875, 0.01226806640625, 0.00440216064453125, 0.037261962890625, 0.01476287841796875, 0.291015625, 0.380615234375, 0.0782470703125, 0.01922607421875, 0.0208587646484375, 0.015869140625, 0.0014925003051757812, 0.0927734375, 0.09063720703125, 0.080810546875, 0.1309814453125, 0.1500244140625, 0.00020074844360351562, 0.012603759765625, 0.0011911392211914062, 1.072265625, 0.007778167724609375, 0.01910400390625, 0.004970550537109375, 0.0217437744140625, 0.0132904052734375, 3.647804260253906e-05, 0.34326171875, 0.0009365081787109375, 0.08551025390625], "tokens": [446, 434, 18305, 4369, 4118, 436, 5967, 3932, 8805, 688, 1406, 33123, 322, 4707, 2532, 284, 434, 432, 322, 5736, 32, 284, 562, 907, 443, 16868, 12380, 16936, 4575, 46037, 46, 652, 48, 301, 397, 945, 1158, 46037, 1888, 2599, 892, 48, 25316, 45, 397, 945, 1158, 3456, 2656, 3193, 45, 1687]}
{"line_number": 779, "line_type": "original", "code": "          .setCodingConvention(conv)", "entropy": 2.669921875, "is_bug_line": false, "sus_score": 0.26854, "per_token_entropy": [9.203125, 0.7900390625, 0.045654296875, 9.0703125, 0.00206756591796875, 0.00821685791015625, 1.1640625, 1.072265625], "tokens": [2033, 638, 470, 27427, 21748, 26, 6081, 27]}
{"line_number": 779, "line_type": "generated", "code": "\n    }\n\n    if (flags.acceptConstKeyword) {\n      options.setLanguageOut(LanguageMode.ECMASCRIPT5);\n    } else {\n      options.setLanguageOut(LanguageMode.ECMASCRIPT3);\n    }\n\n    options", "entropy": 0.25927734375, "is_bug_line": false, "sus_score": 0.26854, "per_token_entropy": [0.254638671875, 0.0789794921875, 0.277587890625, 0.71533203125, 0.04840087890625, 0.0287322998046875, 0.0009899139404296875, 3.1484375, 0.006610870361328125, 1.9669532775878906e-05, 0.06793212890625, 0.0008416175842285156, 0.0098724365234375, 0.0151519775390625, 8.404254913330078e-05, 0.01290130615234375, 1.587890625, 0.471435546875, 0.003143310546875, 0.69873046875, 0.0244903564453125, 0.00045680999755859375, 0.023956298828125, 0.0001081228256225586, 0.0008940696716308594, 0.0004982948303222656, 0.3388671875, 0.024383544921875, 0.298095703125, 0.0005898475646972656, 1.703125, 0.22021484375, 0.0531005859375, 0.0574951171875, 1.3589859008789062e-05, 0.0004622936248779297, 0.0014677047729492188, 0.06317138671875, 0.0009937286376953125, 0.703125, 0.0008182525634765625, 0.0035495758056640625, 0.87548828125, 1.9669532775878906e-05, 0.0002167224884033203, 4.756450653076172e-05, 0.03265380859375, 0.0002257823944091797, 0.1947021484375, 4.458427429199219e-05, 0.1829833984375, 1.244140625], "tokens": [284, 320, 446, 415, 308, 4545, 32, 7494, 2775, 13099, 27, 301, 397, 2075, 32, 470, 5971, 1512, 26, 5971, 2101, 32, 55, 3103, 1099, 38225, 39, 293, 284, 320, 813, 301, 397, 2075, 32, 470, 5971, 1512, 26, 5971, 2101, 32, 55, 3103, 1099, 38225, 37, 293, 284, 320, 446, 2075]}
