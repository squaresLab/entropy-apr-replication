{"line_number": 1038, "line_type": "original", "code": "    scope = traverse(constructor, scope);", "entropy": 2.443359375, "is_bug_line": true, "sus_score": 0.71511, "per_token_entropy": [7.25390625, 5.796875, 0.1473388671875, 0.63330078125, 1.021484375, 6.625, 0.488037109375, 0.0130157470703125, 0.01136016845703125], "tokens": [264, 4576, 280, 29046, 26, 9430, 30, 4576, 293]}
{"line_number": 1038, "line_type": "generated", "code": "\n  private FlowScope traverseGetProp(Node n, FlowScope scope) {\n    Node receiver = n.getFirstChild();\n    Node prop = receiver.getNext();\n    JSType receiverType = getJSType(receiver);\n    JSType propType = null", "entropy": 0.275146484375, "is_bug_line": true, "sus_score": 0.71511, "per_token_entropy": [0.36376953125, 0.1312255859375, 0.248291015625, 0.00017905235290527344, 0.023162841796875, 0.75244140625, 0.019012451171875, 0.1845703125, 0.01346588134765625, 0.00598907470703125, 0.0005068778991699219, 0.007549285888671875, 4.8279762268066406e-05, 0.011016845703125, 0.01531219482421875, 0.003231048583984375, 0.0941162109375, 1.8544921875, 1.955078125, 0.0192108154296875, 0.05828857421875, 0.0010232925415039062, 0.021087646484375, 0.0007233619689941406, 0.00954437255859375, 0.10076904296875, 1.91015625, 0.70654296875, 0.06610107421875, 0.1927490234375, 0.0006990432739257812, 0.00012862682342529297, 0.0012445449829101562, 0.2344970703125, 0.9228515625, 0.0006184577941894531, 0.599609375, 0.04058837890625, 0.02777099609375, 0.2919921875, 0.01055145263671875, 7.748603820800781e-06, 0.0041351318359375, 0.004467010498046875, 0.438720703125, 0.2188720703125, 0.5751953125, 0.0002378225326538086, 0.485595703125, 0.032318115234375, 0.10595703125, 1.5498046875], "tokens": [334, 945, 12419, 5504, 29046, 936, 6567, 26, 1212, 310, 30, 12419, 5504, 4576, 27, 301, 284, 4004, 13564, 280, 310, 32, 25657, 2931, 473, 284, 4004, 7018, 280, 13564, 32, 23017, 473, 284, 7750, 620, 13564, 620, 280, 622, 4624, 620, 26, 16097, 293, 284, 7750, 620, 7018, 620, 280, 744]}
{"line_number": 1329, "line_type": "original", "code": "        }", "entropy": 5.9375, "is_bug_line": false, "sus_score": 0.34204, "per_token_entropy": [8.59375, 3.279296875], "tokens": [351, 320]}
{"line_number": 1329, "line_type": "generated", "code": "\n  private FlowScope join(FlowScope left, FlowScope right) {\n    return left.join(right);\n  }\n\n  /**\n   * Returns the flow scope that results from evaluating the expression\n   * on the right side of the binary operator.\n   *", "entropy": 0.68408203125, "is_bug_line": false, "sus_score": 0.34204, "per_token_entropy": [0.8583984375, 0.81787109375, 1.4716796875, 0.003902435302734375, 0.888671875, 0.038116455078125, 0.06640625, 0.00034737586975097656, 1.3037109375, 0.32373046875, 0.001766204833984375, 1.9073486328125e-06, 0.0006260871887207031, 0.0017442703247070312, 0.0017671585083007812, 0.0523681640625, 1.2958984375, 1.3818359375, 0.26171875, 0.66015625, 0.07952880859375, 0.06793212890625, 0.409912109375, 0.035491943359375, 0.0014810562133789062, 0.5703125, 1.1953125, 0.11505126953125, 7.283687591552734e-05, 2.533203125, 0.99365234375, 2.814453125, 0.1788330078125, 2.203125, 1.7119140625, 0.1826171875, 1.076171875, 0.6318359375, 1.9892578125, 1.4580078125, 0.0035533905029296875, 2.5078125, 0.08843994140625, 0.65869140625, 0.5361328125, 0.153564453125, 0.7587890625, 1.2265625, 0.347412109375, 0.54833984375, 0.225341796875, 0.8349609375], "tokens": [334, 945, 12419, 5504, 7140, 26, 4055, 5504, 2841, 30, 12419, 5504, 2091, 27, 301, 284, 442, 2841, 32, 2524, 26, 990, 293, 334, 320, 719, 1022, 664, 319, 3759, 322, 7290, 4576, 688, 3276, 645, 38680, 322, 6101, 664, 319, 544, 322, 2091, 5209, 432, 322, 5298, 4134, 32, 664, 319]}
{"line_number": 1059, "line_type": "original", "code": "    for (Node arg = constructor.getNext(); arg != null; arg = arg.getNext()) {", "entropy": 2.041015625, "is_bug_line": true, "sus_score": 0.30586, "per_token_entropy": [3.67578125, 6.57421875, 0.11724853515625, 14.5390625, 3.52734375, 1.3017578125, 8.90625, 0.1522216796875, 1.4609375, 0.07470703125, 0.1995849609375, 0.0341796875, 0.023590087890625, 0.06170654296875, 1.6455078125, 0.10308837890625, 0.363037109375, 0.013153076171875, 0.0015497207641601562, 0.017791748046875, 0.07965087890625], "tokens": [264, 436, 308, 1212, 1638, 280, 4374, 32, 23017, 473, 1638, 863, 744, 45, 1638, 280, 1638, 32, 23017, 1157, 301]}
{"line_number": 1059, "line_type": "generated", "code": "\n   * In this case, we should infer that x.prop is a number.\n   *\n   * This method is called when we infer the type of a GETPROP, and it\n   * will try to widen the object's properties if it can.", "entropy": 0.94775390625, "is_bug_line": true, "sus_score": 0.30586, "per_token_entropy": [0.2066650390625, 0.1328125, 1.6875, 0.27392578125, 0.43505859375, 0.1258544921875, 0.9296875, 1.2119140625, 2.099609375, 0.37451171875, 0.36865234375, 0.52294921875, 0.002445220947265625, 0.1976318359375, 0.94287109375, 0.037078857421875, 1.1181640625, 0.060150146484375, 0.54296875, 0.414306640625, 0.01181793212890625, 1.853515625, 1.5615234375, 2.87890625, 1.650390625, 1.9775390625, 0.66943359375, 2.271484375, 1.443359375, 0.32763671875, 0.038726806640625, 0.7646484375, 1.3095703125, 0.048553466796875, 1.853515625, 0.71435546875, 1.7783203125, 1.1689453125, 0.0003750324249267578, 3.3984375, 2.44921875, 0.0391845703125, 1.4599609375, 9.572505950927734e-05, 0.394775390625, 2.3828125, 0.494384765625, 0.3330078125, 1.3232421875, 1.7265625, 0.5263671875, 0.74853515625], "tokens": [664, 319, 701, 458, 1135, 30, 996, 1395, 21506, 688, 816, 32, 4641, 438, 312, 1451, 32, 664, 319, 664, 319, 1348, 1411, 438, 3823, 1412, 996, 21506, 322, 827, 432, 312, 6272, 15262, 30, 461, 561, 664, 319, 1098, 1596, 372, 341, 18160, 322, 1300, 1182, 4308, 415, 561, 883, 32]}
{"line_number": 667, "line_type": "original", "code": "    boolean hasLendsName = n.getJSDocInfo() != null &&", "entropy": 0.85546875, "is_bug_line": false, "sus_score": 0.27231, "per_token_entropy": [4.640625, 3.56640625, 3.205078125, 0.6728515625, 0.059814453125, 0.0716552734375, 0.0281829833984375, 2.076171875, 0.00579833984375, 0.1156005859375, 0.019744873046875, 3.0994415283203125e-06, 1.1920928955078125e-07, 6.4373016357421875e-06, 0.65283203125, 0.06201171875, 0.00267791748046875, 0.218994140625], "tokens": [264, 1905, 1401, 62, 1494, 558, 280, 310, 32, 371, 60, 3181, 542, 1120, 346, 863, 744, 962]}
{"line_number": 667, "line_type": "generated", "code": "\n    if (leftType == null || rightType == null) {\n      return scope;\n    }\n\n    JSType resultType = null;\n    if (leftType.isUnknownType() || rightType.isUnknownType()) {\n      resultType = get", "entropy": 0.229736328125, "is_bug_line": false, "sus_score": 0.27231, "per_token_entropy": [0.39111328125, 0.7607421875, 0.18310546875, 0.4375, 0.09967041015625, 0.64013671875, 0.06304931640625, 0.09246826171875, 0.06689453125, 0.0023250579833984375, 0.0006804466247558594, 0.00030040740966796875, 0.1435546875, 0.007320404052734375, 0.0308685302734375, 0.67431640625, 0.05322265625, 0.0009121894836425781, 0.006103515625, 9.40561294555664e-05, 0.2841796875, 0.6943359375, 4.458427429199219e-05, 1.1064453125, 0.499755859375, 0.14208984375, 1.5576171875, 0.0004611015319824219, 0.315673828125, 0.416015625, 0.08477783203125, 0.381103515625, 0.0687255859375, 0.07379150390625, 0.80908203125, 1.1748046875, 0.022308349609375, 0.2257080078125, 0.10687255859375, 0.0625, 0.000514984130859375, 0.002513885498046875, 0.0028285980224609375, 0.0010900497436523438, 4.4226646423339844e-05, 0.044769287109375, 0.00028634071350097656, 0.010986328125, 0.134521484375, 4.851818084716797e-05, 0.00041103363037109375, 0.06365966796875], "tokens": [284, 415, 308, 1873, 620, 610, 744, 1276, 2091, 620, 610, 744, 27, 301, 397, 442, 4576, 45, 284, 320, 446, 7750, 620, 1056, 620, 280, 744, 45, 284, 415, 308, 1873, 620, 32, 297, 5842, 620, 346, 1276, 2091, 620, 32, 297, 5842, 620, 1157, 301, 397, 1056, 620, 280, 622]}
{"line_number": 1314, "line_type": "original", "code": "      this.booleanValues = booleanValues;", "entropy": 2.5859375, "is_bug_line": false, "sus_score": 0.25838, "per_token_entropy": [5.46875, 5.76171875, 0.0298614501953125, 7.328125, 0.95166015625, 0.5908203125, 2.0546875, 0.0141448974609375, 1.0693359375], "tokens": [647, 458, 32, 4398, 3354, 280, 1905, 3354, 45]}
{"line_number": 1314, "line_type": "generated", "code": "\n    scope.declare(nameNode.getString(), varType, nameNode);\n  }\n\n  private JSType getVarType(FlowScope scope, Node nameNode) {\n    Preconditions.checkState(nameNode.isName());", "entropy": 0.27685546875, "is_bug_line": false, "sus_score": 0.25838, "per_token_entropy": [0.265380859375, 1.41015625, 0.032806396484375, 0.49169921875, 1.17578125, 0.46240234375, 0.042266845703125, 0.137451171875, 0.006885528564453125, 0.004878997802734375, 0.1790771484375, 7.772445678710938e-05, 0.64111328125, 0.5576171875, 0.00159454345703125, 0.44970703125, 0.0948486328125, 0.0007119178771972656, 0.212158203125, 0.462158203125, 1.7734375, 0.0010633468627929688, 1.021484375, 1.5927734375, 0.06781005859375, 0.215087890625, 0.4453125, 0.0006976127624511719, 0.0250091552734375, 0.0011425018310546875, 0.232421875, 0.2144775390625, 0.039398193359375, 0.044891357421875, 0.0034160614013671875, 0.267822265625, 0.3349609375, 0.00013363361358642578, 0.0004100799560546875, 0.046600341796875, 0.0012836456298828125, 0.00719451904296875, 0.00014400482177734375, 0.0015211105346679688, 0.01319122314453125, 0.00046825408935546875, 0.0253448486328125], "tokens": [284, 4576, 32, 8238, 26, 426, 1212, 32, 7069, 1026, 773, 620, 30, 636, 1212, 293, 334, 320, 719, 945, 7750, 620, 622, 1881, 620, 26, 4055, 5504, 4576, 30, 4004, 636, 1212, 27, 301, 284, 40596, 32, 1553, 1078, 26, 426, 1212, 32, 297, 558, 1035]}
