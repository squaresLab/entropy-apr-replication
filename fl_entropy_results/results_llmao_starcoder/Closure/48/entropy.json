{"line_number": 1523, "line_type": "original", "code": "        inferred = !(rhsValue != null &&", "entropy": 3.986328125, "is_bug_line": true, "sus_score": 0.42759, "per_token_entropy": [3.88671875, 11.34375, 5.28515625, 6.28125, 5.9609375, 0.083740234375, 2.517578125, 0.002124786376953125, 0.5087890625], "tokens": [351, 43134, 280, 13685, 14312, 882, 863, 744, 962]}
{"line_number": 1523, "line_type": "generated", "code": "\n            null : ownerVarType.restrictByNotNullOrUndefined());\n      }\n      return null;\n    }\n\n    /**\n     * Create a new slot in the current scope.\n     * @param name The name of the new slot.\n     * @param parent The", "entropy": 0.34619140625, "is_bug_line": true, "sus_score": 0.42759, "per_token_entropy": [0.615234375, 0.70751953125, 0.04974365234375, 0.345703125, 0.001064300537109375, 0.0211029052734375, 0.06878662109375, 0.76611328125, 0.0040740966796875, 0.042236328125, 0.05560302734375, 0.025299072265625, 0.01508331298828125, 0.03070068359375, 0.00016689300537109375, 0.8662109375, 0.400146484375, 0.10784912109375, 0.00026535987854003906, 0.0095367431640625, 0.0014286041259765625, 0.25341796875, 0.463134765625, 0.039215087890625, 0.00011682510375976562, 3.1484375, 0.28857421875, 1.1513671875, 2.2109375, 1.1103515625, 0.224853515625, 0.5947265625, 0.10284423828125, 0.5654296875, 0.269287109375, 0.06109619140625, 0.187255859375, 0.004039764404296875, 0.517578125, 0.07623291015625, 0.1171875, 0.072998046875, 0.0279541015625, 1.1611328125, 0.1630859375, 0.127685546875, 0.0192718505859375, 0.00727081298828125, 0.0023250579833984375, 0.003833770751953125, 0.7744140625, 0.1236572265625], "tokens": [324, 744, 499, 7423, 1881, 620, 32, 20757, 1083, 4926, 1527, 14339, 1035, 397, 320, 397, 442, 744, 45, 284, 320, 446, 1022, 275, 319, 2648, 312, 537, 9848, 328, 322, 1550, 4576, 32, 275, 319, 477, 753, 636, 886, 636, 432, 322, 537, 9848, 32, 275, 319, 477, 753, 2935, 886]}
{"line_number": 1441, "line_type": "original", "code": "        valueType = rhsValue.getJSType();", "entropy": 1.9599609375, "is_bug_line": false, "sus_score": 0.41392, "per_token_entropy": [5.50390625, 7.83984375, 0.1793212890625, 0.56201171875, 6.7890625, 0.09173583984375, 0.378662109375, 0.1475830078125, 0.002605438232421875, 4.112720489501953e-05, 0.07098388671875], "tokens": [351, 786, 620, 280, 9322, 882, 32, 371, 4624, 620, 473]}
{"line_number": 1441, "line_type": "generated", "code": "\n      //\n      // The first is to declare all your properties at the top of the file.\n      // The second is to declare them as you use them.\n      //\n      // The problem is that the type inference engine is built around the\n      // second style", "entropy": 0.76806640625, "is_bug_line": false, "sus_score": 0.41392, "per_token_entropy": [0.348876953125, 0.043487548828125, 1.0771484375, 0.00021517276763916016, 1.4013671875, 0.77490234375, 1.51953125, 1.3232421875, 1.0390625, 1.0947265625, 1.970703125, 0.62744140625, 1.27734375, 0.0182037353515625, 0.384765625, 0.66845703125, 0.387451171875, 0.435546875, 1.44921875, 0.03436279296875, 0.00033402442932128906, 0.6025390625, 0.2109375, 0.0262451171875, 0.0244598388671875, 0.314453125, 0.50537109375, 1.1337890625, 0.0950927734375, 0.91650390625, 0.00473785400390625, 0.2154541015625, 0.087646484375, 0.00247955322265625, 0.13037109375, 0.0003132820129394531, 1.3212890625, 0.5751953125, 0.58935546875, 0.141845703125, 2.265625, 2.009765625, 2.05859375, 1.3662109375, 1.8515625, 3.71875, 1.099609375, 0.266845703125, 0.406982421875, 0.0027923583984375, 1.7060546875, 0.408447265625], "tokens": [397, 434, 397, 434, 886, 1932, 438, 372, 8864, 1169, 1370, 4308, 821, 322, 2663, 432, 322, 803, 32, 397, 434, 886, 3100, 438, 372, 8864, 3026, 619, 844, 793, 3026, 32, 397, 434, 397, 434, 886, 3708, 438, 688, 322, 827, 22410, 6863, 438, 6895, 6835, 322, 397, 434, 3100, 1418]}
{"line_number": 1063, "line_type": "original", "code": "", "entropy": 3.935546875, "is_bug_line": false, "sus_score": 0.40201, "per_token_entropy": [3.935546875], "tokens": [203]}
{"line_number": 1063, "line_type": "generated", "code": "\n        if (isExtern && fnType!= null) {\n          FunctionType constructorType =\n              FunctionType.getConstructorType(fnType);\n          if (constructorType!= null) {\n            // For extern constructors, we need to declare the return type", "entropy": 0.615234375, "is_bug_line": false, "sus_score": 0.40201, "per_token_entropy": [0.250244140625, 0.263916015625, 0.09796142578125, 1.9658203125, 0.77587890625, 9.5367431640625e-07, 1.025390625, 0.62939453125, 8.320808410644531e-05, 0.0218505859375, 8.33272933959961e-05, 0.7919921875, 0.00144195556640625, 0.05194091796875, 2.99609375, 0.1668701171875, 1.529296875, 0.1326904296875, 0.0174560546875, 1.4365234375, 1.2138671875, 0.00521087646484375, 0.1475830078125, 1.1025390625, 1.1240234375, 0.017486572265625, 0.01708984375, 0.052581787109375, 3.2186508178710938e-06, 0.043609619140625, 0.2373046875, 0.1719970703125, 0.0120697021484375, 0.03607177734375, 0.00098419189453125, 0.03851318359375, 0.00745391845703125, 0.1322021484375, 0.0008058547973632812, 0.03253173828125, 1.6630859375, 3.74609375, 0.625, 0.62939453125, 0.181396484375, 0.814453125, 1.2919921875, 0.014312744140625, 2.294921875, 0.779296875, 2.86328125, 0.53564453125], "tokens": [291, 415, 308, 297, 571, 900, 962, 2771, 620, 863, 744, 27, 301, 616, 4540, 620, 4374, 620, 280, 1090, 4540, 620, 32, 371, 7932, 620, 26, 3359, 620, 293, 616, 415, 308, 9430, 620, 863, 744, 27, 301, 324, 434, 2616, 12098, 30857, 30, 996, 1849, 372, 8864, 322, 442, 827]}
{"line_number": 1646, "line_type": "original", "code": "        // Do nothing if there is no JSDoc type info, or", "entropy": 3.240234375, "is_bug_line": false, "sus_score": 0.38675, "per_token_entropy": [4.5390625, 7.03125, 15.296875, 2.310546875, 2.60546875, 3.8828125, 0.5283203125, 0.2335205078125, 2.900390625, 0.0005431175231933594, 9.274482727050781e-05, 4.18359375, 1.921875, 2.37109375, 0.80126953125], "tokens": [351, 434, 3278, 7553, 415, 2017, 438, 1289, 971, 3181, 542, 827, 3099, 30, 556]}
{"line_number": 1646, "line_type": "generated", "code": "     * type registry.\n     */\n    @Override\n    public void visit(NodeTraversal t, Node n, Node parent) {\n      if (n.isFunction()) {\n        visitFunction(t, n, parent);\n      } else if (n.is", "entropy": 0.159912109375, "is_bug_line": false, "sus_score": 0.38675, "per_token_entropy": [0.8017578125, 0.217041015625, 0.845703125, 0.1063232421875, 0.149169921875, 0.1956787109375, 0.1448974609375, 0.006305694580078125, 0.044097900390625, 0.0011434555053710938, 0.006343841552734375, 0.5302734375, 0.238037109375, 0.07373046875, 0.0216522216796875, 0.026275634765625, 0.044403076171875, 0.010498046875, 0.0005230903625488281, 0.0028324127197265625, 0.0116729736328125, 0.006443023681640625, 0.0290985107421875, 0.00908660888671875, 0.0020904541015625, 0.0024871826171875, 0.09869384765625, 1.2626953125, 0.125, 0.2822265625, 0.0142822265625, 0.65478515625, 0.1202392578125, 0.00038552284240722656, 0.028350830078125, 0.685546875, 0.1424560546875, 0.1939697265625, 0.1766357421875, 0.006412506103515625, 0.017486572265625, 0.248779296875, 0.2078857421875, 0.0733642578125, 0.1239013671875, 9.334087371826172e-05, 0.142333984375, 0.0645751953125, 0.007781982421875, 0.0911865234375, 0.00022912025451660156, 0.0189666748046875], "tokens": [262, 319, 827, 10880, 32, 275, 569, 284, 477, 1788, 284, 562, 763, 7725, 26, 1212, 35699, 273, 30, 4004, 310, 30, 4004, 2935, 27, 301, 397, 415, 308, 96, 32, 39504, 1157, 301, 291, 7725, 2447, 26, 102, 30, 310, 30, 2935, 293, 397, 320, 813, 415, 308, 96, 32, 297]}
