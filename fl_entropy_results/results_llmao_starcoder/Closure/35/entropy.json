{"line_number": 1314, "line_type": "original", "code": "    // The scope if only half of the expression executed, when applicable.", "entropy": 3.21484375, "is_bug_line": false, "sus_score": 0.33521, "per_token_entropy": [2.6796875, 3.115234375, 2.904296875, 1.166015625, 4.06640625, 6.578125, 5.02734375, 0.1337890625, 0.01849365234375, 0.10540771484375, 1.60546875, 4.7265625, 6.0546875, 9.9375, 0.10614013671875], "tokens": [264, 434, 886, 4576, 415, 1755, 11214, 432, 322, 6101, 10768, 30, 1412, 4556, 32]}
{"line_number": 1314, "line_type": "generated", "code": "\n    return new BooleanOutcomePair(\n        BooleanLiteralSet.get(jsType), BooleanLiteralSet.get(jsType),\n        flowScope, flowScope);\n  }\n\n  private BooleanOutcomePair traverseAnd(Node n, FlowScope scope) {\n   ", "entropy": 0.1978759765625, "is_bug_line": false, "sus_score": 0.33521, "per_token_entropy": [0.1951904296875, 0.27294921875, 0.0151824951171875, 0.01323699951171875, 8.618831634521484e-05, 5.257129669189453e-05, 0.002605438232421875, 0.3037109375, 1.1904296875, 0.00678253173828125, 0.0005593299865722656, 0.005504608154296875, 0.7314453125, 0.2254638671875, 0.350830078125, 0.0009722709655761719, 0.493408203125, 0.71630859375, 0.00039958953857421875, 0.0005750656127929688, 0.0023822784423828125, 0.211669921875, 0.1326904296875, 0.399169921875, 3.600120544433594e-05, 0.1922607421875, 0.1314697265625, 0.1341552734375, 0.00022161006927490234, 0.01287078857421875, 0.04302978515625, 2.5272369384765625e-05, 0.003139495849609375, 0.0296478271484375, 0.0009698867797851562, 0.4296875, 1.2197265625, 0.99658203125, 0.09747314453125, 0.0009255409240722656, 0.73876953125, 0.3037109375, 0.0255126953125, 0.10919189453125, 0.0654296875, 0.00434112548828125, 0.10107421875, 5.555152893066406e-05, 0.1922607421875, 0.00669097900390625, 0.004383087158203125, 0.175048828125], "tokens": [284, 442, 537, 5069, 19835, 5442, 26, 291, 5069, 8208, 885, 32, 371, 26, 754, 620, 471, 5069, 8208, 885, 32, 371, 26, 754, 620, 471, 291, 7290, 5504, 30, 7290, 5504, 293, 334, 320, 719, 945, 5069, 19835, 5442, 29046, 2185, 26, 1212, 310, 30, 12419, 5504, 4576, 27, 301, 284]}
{"line_number": 557, "line_type": "original", "code": "", "entropy": 4.76953125, "is_bug_line": false, "sus_score": 0.29662, "per_token_entropy": [4.76953125], "tokens": [203]}
{"line_number": 557, "line_type": "generated", "code": "\n    } else if (type!= null) {\n      scope = traverse(n, scope);\n      return scope;\n    } else {\n      // Unreachable code\n      throw new IllegalStateException(\"unreachable\");\n    }\n  }\n\n  private FlowScope traverseAssign(Node n", "entropy": 0.4990234375, "is_bug_line": false, "sus_score": 0.29662, "per_token_entropy": [0.3779296875, 0.057891845703125, 0.33203125, 0.4052734375, 0.08489990234375, 0.2587890625, 0.1448974609375, 0.0033092498779296875, 0.226318359375, 0.002292633056640625, 0.05267333984375, 1.345703125, 0.25244140625, 1.5107421875, 0.340576171875, 0.14013671875, 0.032623291015625, 0.01849365234375, 0.0224151611328125, 0.11285400390625, 1.7939453125, 0.11407470703125, 0.00983428955078125, 0.662109375, 0.0010814666748046875, 0.66162109375, 0.458251953125, 0.056121826171875, 1.60546875, 4.28125, 0.75732421875, 1.0751953125, 1.3466796875, 0.94580078125, 0.00679779052734375, 0.1961669921875, 0.76513671875, 1.046875, 0.7548828125, 0.1715087890625, 8.046627044677734e-05, 0.13134765625, 0.0013494491577148438, 0.404052734375, 0.473876953125, 0.400390625, 0.0001634359359741211, 0.1239013671875, 1.6826171875, 0.0687255859375, 0.038482666015625, 0.202880859375], "tokens": [284, 320, 813, 415, 308, 681, 863, 744, 27, 301, 397, 4576, 280, 29046, 26, 96, 30, 4576, 293, 397, 442, 4576, 45, 284, 320, 813, 301, 397, 434, 1683, 19031, 1340, 397, 1422, 537, 21665, 440, 36431, 724, 284, 320, 334, 320, 719, 945, 12419, 5504, 29046, 9079, 26, 1212, 310]}
{"line_number": 554, "line_type": "original", "code": "      }", "entropy": 3.431640625, "is_bug_line": false, "sus_score": 0.29468, "per_token_entropy": [4.703125, 2.16015625], "tokens": [647, 320]}
{"line_number": 554, "line_type": "generated", "code": "\n    } else if (type!= null) {\n      scope = traverse(n, scope);", "entropy": 0.319091796875, "is_bug_line": false, "sus_score": 0.29468, "per_token_entropy": [0.498779296875, 0.034942626953125, 0.521484375, 0.5380859375, 0.08404541015625, 0.1939697265625, 0.1221923828125, 0.0026836395263671875, 0.1663818359375, 0.0025234222412109375, 0.04986572265625, 0.939453125, 0.20458984375, 0.9326171875, 0.69482421875, 0.6796875, 0.14794921875, 0.1597900390625, 0.08673095703125], "tokens": [284, 320, 813, 415, 308, 681, 863, 744, 27, 301, 397, 4576, 280, 29046, 26, 96, 30, 4576, 293]}
{"line_number": 1398, "line_type": "original", "code": "    JSType jsType = n.getJSType();", "entropy": 1.23828125, "is_bug_line": false, "sus_score": 0.26139, "per_token_entropy": [6.35546875, 3.24609375, 0.002063751220703125, 0.9404296875, 0.0012598037719726562, 0.7998046875, 2.912109375, 0.0986328125, 0.47265625, 0.0036411285400390625, 0.00013077259063720703, 0.02899169921875], "tokens": [264, 7750, 620, 4060, 620, 280, 310, 32, 371, 4624, 620, 473]}
{"line_number": 1398, "line_type": "generated", "code": "\n\n  /**\n   * This method gets the JSType from the Node argument and verifies that it is\n   * present.\n   */\n  private JSType getJSType(Node n) {\n    JSType jsType = registry.getType(n);\n    if (", "entropy": 0.2384033203125, "is_bug_line": false, "sus_score": 0.26139, "per_token_entropy": [1.287109375, 0.87744140625, 0.1080322265625, 0.0002040863037109375, 1.8349609375, 0.154296875, 0.896484375, 0.0826416015625, 0.1463623046875, 0.00241851806640625, 0.2171630859375, 0.0584716796875, 0.13623046875, 0.00884246826171875, 0.404541015625, 0.260009765625, 0.00717926025390625, 0.020233154296875, 0.038330078125, 0.006778717041015625, 0.0003712177276611328, 0.52978515625, 0.1341552734375, 0.2366943359375, 0.041839599609375, 0.028717041015625, 0.0660400390625, 0.0303802490234375, 1.5616416931152344e-05, 0.14013671875, 0.146484375, 0.0113525390625, 0.2919921875, 0.110595703125, 0.0217437744140625, 0.1160888671875, 0.0045166015625, 0.29345703125, 0.69482421875, 3.0994415283203125e-05, 0.52587890625, 0.0046844482421875, 0.0304718017578125, 1.2412109375, 0.0028820037841796875, 0.73388671875, 0.0099029541015625, 0.012115478515625, 0.0137786865234375, 0.14208984375, 0.2322998046875, 0.004791259765625], "tokens": [719, 1022, 664, 319, 1348, 1411, 8561, 322, 7750, 620, 645, 322, 4004, 2793, 461, 47369, 688, 561, 438, 664, 319, 5024, 32, 664, 569, 334, 945, 7750, 620, 622, 4624, 620, 26, 1212, 310, 27, 301, 284, 7750, 620, 4060, 620, 280, 10880, 32, 10272, 26, 96, 293, 284, 415, 308]}
