{"line_number": 518, "line_type": "original", "code": "   *", "entropy": 5.015625, "is_bug_line": false, "sus_score": 0.36427, "per_token_entropy": [8.4140625, 1.6201171875], "tokens": [261, 319]}
{"line_number": 518, "line_type": "generated", "code": "\n  /**\n   * Given an expression by its root and sub-expression n, return true if there\n   * the predicate is true for some expression on the right of n.\n   *\n   * Example:\n   *\n   * NotChecked(), NotChecked(), n", "entropy": 0.180908203125, "is_bug_line": false, "sus_score": 0.36427, "per_token_entropy": [1.01171875, 0.33349609375, 0.05853271484375, 0.0005917549133300781, 1.3779296875, 0.333984375, 0.0777587890625, 0.28173828125, 0.01264190673828125, 0.005023956298828125, 0.05712890625, 0.039459228515625, 0.005046844482421875, 0.0018606185913085938, 0.007717132568359375, 0.0105133056640625, 0.0816650390625, 0.04949951171875, 0.011871337890625, 0.25732421875, 0.0080718994140625, 8.881092071533203e-05, 0.1485595703125, 0.0447998046875, 0.004119873046875, 0.00652313232421875, 0.0401611328125, 0.12060546875, 0.10882568359375, 0.41650390625, 0.1517333984375, 0.7646484375, 0.583984375, 0.09820556640625, 1.4375, 0.11334228515625, 0.025634765625, 0.0227508544921875, 0.0013170242309570312, 0.0880126953125, 0.01219940185546875, 0.219970703125, 0.00202178955078125, 0.09710693359375, 0.0016937255859375, 0.4306640625, 0.0107574462890625, 0.03900146484375, 0.331298828125, 0.0003218650817871094, 0.00606536865234375, 0.0511474609375], "tokens": [334, 1022, 664, 319, 15273, 600, 6101, 810, 2819, 3051, 461, 1361, 31, 7672, 310, 30, 442, 861, 415, 2017, 664, 319, 322, 14094, 438, 861, 436, 1629, 6101, 544, 322, 2091, 432, 310, 32, 664, 319, 664, 319, 5938, 44, 664, 319, 664, 319, 3182, 9020, 1026, 3182, 9020, 1026, 310]}
{"line_number": 489, "line_type": "original", "code": "      NodeTraversal.traverse(compiler, n, gatherCb);", "entropy": 1.3681640625, "is_bug_line": false, "sus_score": 0.34575, "per_token_entropy": [9.4375, 4.609375, 2.154296875, 0.1275634765625, 0.004467010498046875, 0.042144775390625, 0.301025390625, 0.0012674331665039062, 0.81396484375, 0.0306854248046875, 0.2222900390625, 0.032684326171875, 0.00991058349609375], "tokens": [647, 4004, 35699, 32, 33261, 26, 10199, 30, 310, 30, 20133, 14901, 293]}
{"line_number": 489, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.34575, "per_token_entropy": [], "tokens": []}
{"line_number": 350, "line_type": "original", "code": "", "entropy": 4.92578125, "is_bug_line": false, "sus_score": 0.33915, "per_token_entropy": [4.92578125], "tokens": [203]}
{"line_number": 350, "line_type": "generated", "code": "\n                 cfg.getDirectedGraphNode(useCfgNode),\n                 new SideEffectPredicate());\n        if (pathCheck.hasPath()) {\n          return false;\n        }\n      }\n\n      // We can skip the side effect check along the paths of two nodes", "entropy": 0.2978515625, "is_bug_line": false, "sus_score": 0.33915, "per_token_entropy": [0.216064453125, 0.59716796875, 0.00439453125, 0.0149078369140625, 0.005161285400390625, 2.1696090698242188e-05, 6.0558319091796875e-05, 0.01251983642578125, 0.00152587890625, 0.028900146484375, 0.004978179931640625, 4.5299530029296875e-06, 0.2337646484375, 0.232666015625, 0.947265625, 1.5302734375, 0.01617431640625, 1.107421875, 0.7470703125, 0.431396484375, 0.27001953125, 0.2288818359375, 0.016754150390625, 0.0001119375228881836, 0.0015850067138671875, 0.94970703125, 1.357421875, 0.33642578125, 0.00919342041015625, 0.0270233154296875, 0.062408447265625, 0.0017728805541992188, 0.00041604042053222656, 0.0047149658203125, 0.00034499168395996094, 0.0797119140625, 0.0012912750244140625, 0.83642578125, 0.3544921875, 1.8994140625, 0.99609375, 0.8642578125, 0.09478759765625, 0.287109375, 0.03948974609375, 0.03851318359375, 0.22802734375, 0.092529296875, 0.085205078125, 0.0570068359375, 0.12017822265625, 0.0158538818359375], "tokens": [353, 8444, 32, 371, 6997, 318, 3406, 1212, 26, 539, 11812, 1212, 471, 353, 537, 16489, 5559, 12688, 1035, 291, 415, 308, 983, 2140, 32, 2040, 1215, 1157, 301, 616, 442, 901, 45, 291, 320, 397, 320, 1687, 434, 2688, 883, 7116, 322, 5209, 5744, 1505, 7947, 322, 7842, 432, 3134, 5166]}
{"line_number": 442, "line_type": "original", "code": "     * @param n A node that has a corresponding CFG node in the CFG.", "entropy": 2.404296875, "is_bug_line": false, "sus_score": 0.32909, "per_token_entropy": [7.390625, 2.435546875, 2.220703125, 0.26708984375, 2.83203125, 3.232421875, 0.9970703125, 2.939453125, 3.0703125, 1.1201171875, 5.8046875, 1.068359375, 1.1474609375, 2.5390625, 0.92626953125, 2.029296875, 0.8671875], "tokens": [262, 319, 477, 753, 310, 399, 1541, 688, 1401, 312, 8435, 31848, 1541, 328, 322, 31848, 32]}
{"line_number": 442, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.32909, "per_token_entropy": [], "tokens": []}
