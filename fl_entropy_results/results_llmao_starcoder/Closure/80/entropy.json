{"line_number": 2917, "line_type": "original", "code": "        if (isAssignmentOp(value)", "entropy": 3.0078125, "is_bug_line": true, "sus_score": 0.54982, "per_token_entropy": [3.244140625, 0.5380859375, 0.110107421875, 0.84765625, 9.9453125, 1.7890625, 0.0269317626953125, 9.859375, 0.7021484375], "tokens": [351, 415, 308, 297, 12589, 3397, 26, 853, 27]}
{"line_number": 2917, "line_type": "generated", "code": "\n        return isToStringProp(propNode);\n    }\n    return false;\n  }\n\n  /**\n   * Given a function call, this returns true if\n   * the function is a simple toString method.\n   */\n  private static boolean isToStringProp(Node prop", "entropy": 0.603515625, "is_bug_line": true, "sus_score": 0.54982, "per_token_entropy": [1.572265625, 0.84765625, 0.68408203125, 1.4052734375, 1.818359375, 0.191650390625, 0.0197906494140625, 0.00167083740234375, 0.544921875, 0.51513671875, 0.006214141845703125, 0.43017578125, 0.0264892578125, 0.00331878662109375, 0.0004825592041015625, 0.007419586181640625, 0.000728607177734375, 0.1282958984375, 1.1474609375, 0.06903076171875, 0.0005712509155273438, 1.6533203125, 0.73779296875, 2.06640625, 1.5791015625, 0.452880859375, 0.50341796875, 0.496337890625, 1.2646484375, 0.280517578125, 1.43359375, 0.00031447410583496094, 0.41552734375, 0.7373046875, 0.857421875, 1.0185546875, 2.494140625, 2.44140625, 1.5595703125, 0.60986328125, 0.02142333984375, 0.266357421875, 0.01294708251953125, 0.472412109375, 0.0194244384765625, 0.00382232666015625, 0.0081024169921875, 0.04345703125, 0.249755859375, 0.0012922286987304688, 0.003040313720703125, 0.2496337890625], "tokens": [291, 442, 438, 4590, 6567, 26, 4641, 1212, 293, 284, 320, 284, 442, 901, 45, 334, 320, 719, 1022, 664, 319, 15273, 312, 667, 1476, 30, 458, 3217, 861, 415, 664, 319, 322, 667, 438, 312, 4281, 11345, 1411, 32, 664, 569, 334, 945, 907, 1905, 438, 4590, 6567, 26, 1212, 7018]}
{"line_number": 1015, "line_type": "original", "code": "    Set<String> emptySet = Collections.emptySet();", "entropy": 1.837890625, "is_bug_line": false, "sus_score": 0.38807, "per_token_entropy": [3.2578125, 12.4765625, 0.1494140625, 2.19921875, 0.00321197509765625, 5.1484375, 0.01218414306640625, 0.0304718017578125, 0.51806640625, 0.06500244140625, 0.0205078125, 0.00034236907958984375, 0.0078582763671875], "tokens": [264, 1756, 46, 652, 48, 3502, 885, 280, 15496, 32, 2951, 885, 473]}
{"line_number": 1015, "line_type": "generated", "code": "\n   *  5 bitwise-or |\n   *  6 bitwise-xor ^\n   *  7 bitwise-and &\n   *  8 equality ==!=\n   *  9 comparison < > <= >=\n   * 10 bitwise-shift", "entropy": 0.11981201171875, "is_bug_line": false, "sus_score": 0.38807, "per_token_entropy": [0.4990234375, 0.1973876953125, 0.057891845703125, 0.10833740234375, 0.14990234375, 0.10205078125, 0.0020046234130859375, 0.0008325576782226562, 0.05889892578125, 0.00858306884765625, 0.0001583099365234375, 0.0013017654418945312, 0.0012559890747070312, 0.0011081695556640625, 0.002414703369140625, 0.00025844573974609375, 0.024017333984375, 0.0056915283203125, 0.007129669189453125, 0.00018537044525146484, 0.0026569366455078125, 0.001941680908203125, 0.0007085800170898438, 0.0016660690307617188, 0.00019443035125732422, 0.0013608932495117188, 0.001277923583984375, 0.0155792236328125, 0.00045943260192871094, 0.005596160888671875, 0.0029144287109375, 0.0227813720703125, 0.09307861328125, 0.0279693603515625, 0.76171875, 0.00010251998901367188, 0.0027065277099609375, 0.0013723373413085938, 0.488037109375, 0.1455078125, 0.56591796875, 0.004840850830078125, 0.0227508544921875, 0.90283203125, 0.00019872188568115234, 0.047027587890625, 0.0008983612060546875, 0.002101898193359375, 0.61279296875, 0.55126953125, 0.00714874267578125, 0.70751953125], "tokens": [664, 319, 261, 39, 3493, 3767, 31, 271, 523, 664, 319, 261, 40, 3493, 3767, 31, 17316, 5304, 664, 319, 261, 41, 3493, 3767, 31, 363, 549, 664, 319, 261, 42, 28599, 610, 863, 664, 319, 261, 43, 14828, 333, 848, 2511, 2377, 664, 319, 225, 35, 34, 3493, 3767, 31, 5494]}
{"line_number": 2884, "line_type": "original", "code": "        if (value.getBooleanProp(Node.INCRDECR_PROP)) {", "entropy": 1.26953125, "is_bug_line": false, "sus_score": 0.29195, "per_token_entropy": [6.8359375, 2.005859375, 0.1640625, 2.986328125, 0.2054443359375, 4.42578125, 0.0024242401123046875, 0.004306793212890625, 0.0164337158203125, 0.00725555419921875, 5.4765625, 0.422607421875, 0.0008740425109863281, 0.0008311271667480469, 0.0013246536254882812, 0.0635986328125, 0.1693115234375, 0.061309814453125], "tokens": [351, 415, 308, 853, 32, 28186, 6567, 26, 1212, 32, 521, 3754, 852, 3754, 81, 15262, 490, 301]}
{"line_number": 2884, "line_type": "generated", "code": "\n  static Node getNthChild(Node parent, int n) {\n    Node cur = parent.getFirstChild();\n    while (cur!= null && n-- > 0) {\n      cur = cur.getNext();\n    }\n    return cur;\n ", "entropy": 0.2244873046875, "is_bug_line": false, "sus_score": 0.29195, "per_token_entropy": [0.38037109375, 0.415771484375, 0.035980224609375, 0.5234375, 0.365234375, 0.00017726421356201172, 0.37939453125, 0.0195770263671875, 0.01502227783203125, 1.6826171875, 0.003139495849609375, 0.13818359375, 0.798828125, 0.062286376953125, 0.004306793212890625, 0.073486328125, 0.9384765625, 2.3046875, 0.08349609375, 0.08984375, 0.06585693359375, 0.01335906982421875, 7.128715515136719e-05, 0.0166015625, 0.04296875, 1.02734375, 0.0723876953125, 0.349853515625, 0.005748748779296875, 0.000835418701171875, 0.486328125, 0.0489501953125, 0.9306640625, 0.1318359375, 0.0017728805541992188, 0.0247650146484375, 0.002109527587890625, 0.01654052734375, 0.0269927978515625, 0.0047454833984375, 0.0006456375122070312, 0.0016345977783203125, 9.02414321899414e-05, 0.00019562244415283203, 0.004486083984375, 0.00548553466796875, 0.0002663135528564453, 0.03173828125, 0.01110076904296875, 0.01032257080078125, 0.0037479400634765625, 0.016693115234375], "tokens": [334, 907, 4004, 622, 64, 349, 2931, 26, 1212, 2935, 30, 629, 310, 27, 301, 284, 4004, 2738, 280, 2935, 32, 25657, 2931, 473, 284, 2218, 308, 1537, 863, 744, 962, 310, 287, 848, 225, 34, 27, 301, 397, 2738, 280, 2738, 32, 23017, 473, 284, 320, 284, 442, 2738, 45, 334]}
{"line_number": 2874, "line_type": "original", "code": "        return evaluatesToLocalValue(value.getLastChild(), locals);", "entropy": 1.802734375, "is_bug_line": false, "sus_score": 0.28659, "per_token_entropy": [2.419921875, 8.1328125, 9.28125, 0.0178070068359375, 0.00545501708984375, 0.029632568359375, 0.08514404296875, 0.1458740234375, 2.939453125, 0.000728607177734375, 0.136962890625, 0.01349639892578125, 0.2235107421875], "tokens": [351, 442, 43992, 40608, 882, 26, 853, 32, 20197, 2931, 1026, 28363, 293]}
{"line_number": 2874, "line_type": "generated", "code": "\n            \"Unexpected node type:\" + value.getType());\n    }\n  }\n\n  /**\n   * @param n A CALL node.\n   * @return Whether the call has a local result.\n   */\n  static boolean callHasLocalResult(Node n) {", "entropy": 0.3662109375, "is_bug_line": false, "sus_score": 0.28659, "per_token_entropy": [1.529296875, 0.349609375, 0.4814453125, 0.57958984375, 0.34130859375, 2.365234375, 0.111328125, 0.08697509765625, 0.1627197265625, 0.1444091796875, 0.495361328125, 0.06982421875, 0.0016489028930664062, 0.034149169921875, 0.0012960433959960938, 0.2181396484375, 0.43994140625, 0.065673828125, 0.0005712509155273438, 0.52880859375, 1.6064453125, 1.6044921875, 1.01171875, 0.8603515625, 0.10009765625, 0.371337890625, 0.0062408447265625, 0.0259246826171875, 0.008209228515625, 0.0088043212890625, 0.1773681640625, 0.181396484375, 1.4443359375, 1.736328125, 0.182861328125, 0.4248046875, 0.2432861328125, 0.51513671875, 0.1016845703125, 0.050933837890625, 0.002716064453125, 0.332763671875, 0.00743865966796875, 0.01194000244140625, 0.0013875961303710938, 0.00024044513702392578, 8.20159912109375e-05, 0.0004856586456298828, 0.0009136199951171875, 0.0264892578125, 0.0005369186401367188, 0.00043582916259765625], "tokens": [324, 313, 10203, 1541, 827, 1924, 474, 786, 32, 10272, 1035, 284, 320, 334, 320, 719, 1022, 664, 319, 477, 753, 310, 399, 16084, 1541, 32, 664, 319, 477, 601, 14071, 322, 1476, 1401, 312, 2196, 1056, 32, 664, 569, 334, 907, 1905, 1476, 3993, 3325, 1394, 26, 1212, 310, 27, 301]}
{"line_number": 2885, "line_type": "original", "code": "          return evaluatesToLocalValue(value.getFirstChild(), locals);", "entropy": 2.22265625, "is_bug_line": false, "sus_score": 0.27413, "per_token_entropy": [8.453125, 0.77001953125, 16.234375, 0.034454345703125, 0.0028839111328125, 0.0189208984375, 1.5390625, 0.341552734375, 1.0625, 0.0016469955444335938, 0.184326171875, 0.011871337890625, 0.237548828125], "tokens": [2033, 442, 43992, 40608, 882, 26, 853, 32, 25657, 2931, 1026, 28363, 293]}
{"line_number": 2885, "line_type": "generated", "code": "\n  }\n\n  /**\n   * Given the first sibling, this returns the nth\n   * sibling or null if no such sibling exists.\n   * This is like \"getChildAtIndex\" but returns null for non-existent indexes.\n   */\n  private static Node getN", "entropy": 0.1710205078125, "is_bug_line": false, "sus_score": 0.27413, "per_token_entropy": [0.8271484375, 0.00775909423828125, 0.0928955078125, 0.31884765625, 0.04345703125, 0.0010766983032226562, 1.8466796875, 0.7314453125, 0.330322265625, 0.3955078125, 0.07025146484375, 0.0972900390625, 0.06060791015625, 0.135498046875, 1.228515625, 0.2568359375, 0.00025343894958496094, 0.403076171875, 0.45654296875, 0.52734375, 0.004848480224609375, 0.00925445556640625, 0.000553131103515625, 0.002620697021484375, 0.0020351409912109375, 0.0179595947265625, 0.01235198974609375, 0.1959228515625, 0.1015625, 0.0244598388671875, 0.00820159912109375, 0.0201568603515625, 0.1187744140625, 0.00812530517578125, 0.0129852294921875, 0.00325775146484375, 0.038177490234375, 0.01532745361328125, 0.0031604766845703125, 0.002288818359375, 0.00017547607421875, 0.0014505386352539062, 0.0017118453979492188, 0.004825592041015625, 0.00217437744140625, 0.0802001953125, 0.00475311279296875, 0.1444091796875, 0.01007080078125, 0.072021484375, 0.075927734375, 0.061126708984375], "tokens": [334, 320, 719, 1022, 664, 319, 15273, 322, 1932, 40560, 30, 458, 3217, 322, 46245, 664, 319, 40560, 556, 744, 415, 1289, 3751, 40560, 5375, 32, 664, 319, 1348, 438, 2124, 313, 24213, 29948, 20, 1273, 3217, 744, 436, 2979, 31, 29801, 17215, 32, 664, 569, 334, 945, 907, 4004, 622, 64]}
