{"line_number": 1013, "line_type": "original", "code": "    return n.getType() == Token.NAME && n.getParent().getType() == Token.VAR;", "entropy": 1.400390625, "is_bug_line": false, "sus_score": 0.50981, "per_token_entropy": [4.5390625, 6.87109375, 0.59423828125, 0.00647735595703125, 2.8046875, 0.005313873291015625, 0.004329681396484375, 0.0014848709106445312, 0.0007481575012207031, 6.8828125, 1.49609375, 1.578125, 0.024444580078125, 1.2373046875, 0.09820556640625, 0.11016845703125, 0.016387939453125, 0.047027587890625, 0.0263824462890625, 0.0099639892578125, 4.265625, 0.1949462890625], "tokens": [264, 442, 310, 32, 10272, 346, 610, 6512, 32, 2474, 962, 310, 32, 18789, 922, 10272, 346, 610, 6512, 32, 7416, 45]}
{"line_number": 1013, "line_type": "generated", "code": "\n   */\n  static boolean isExprCall(Node n) {\n    return n.getType() == Token.EXPR_RESULT\n        && n.getFirstChild().getType() == Token.CALL;\n  }\n\n  /**\n   * Is this a CALL node?\n  ", "entropy": 0.0587158203125, "is_bug_line": false, "sus_score": 0.50981, "per_token_entropy": [0.5625, 0.0494384765625, 0.0177459716796875, 0.0106964111328125, 0.0010242462158203125, 0.0013265609741210938, 0.1497802734375, 0.1807861328125, 0.0135955810546875, 0.0008654594421386719, 0.0006861686706542969, 0.003871917724609375, 0.00432586669921875, 0.095703125, 0.11041259765625, 0.035247802734375, 0.00028514862060546875, 0.0008797645568847656, 6.73532485961914e-05, 0.0002474784851074219, 0.00022649765014648438, 4.76837158203125e-06, 0.005584716796875, 7.510185241699219e-06, 5.137920379638672e-05, 0.148681640625, 0.0042572021484375, 0.36669921875, 0.0006628036499023438, 0.0233001708984375, 0.0005135536193847656, 0.0029144287109375, 0.00649261474609375, 0.00211334228515625, 0.003787994384765625, 0.0010576248168945312, 0.00020813941955566406, 0.006587982177734375, 0.006198883056640625, 0.0223236083984375, 0.0006270408630371094, 0.06781005859375, 0.021636962890625, 0.01922607421875, 0.0005950927734375, 0.1722412109375, 0.02264404296875, 0.7373046875, 0.11920166015625, 0.0300445556640625, 0.01021575927734375, 0.00908660888671875], "tokens": [664, 569, 334, 907, 1905, 438, 6150, 1853, 26, 1212, 310, 27, 301, 284, 442, 310, 32, 10272, 346, 610, 6512, 32, 17793, 81, 6383, 291, 962, 310, 32, 25657, 2931, 922, 10272, 346, 610, 6512, 32, 5038, 45, 334, 320, 719, 1022, 664, 319, 3611, 458, 312, 16084, 1541, 49, 664]}
{"line_number": 567, "line_type": "original", "code": "              current = current.getFirstChild();", "entropy": 2.61328125, "is_bug_line": false, "sus_score": 0.49547, "per_token_entropy": [11.4140625, 8.4609375, 0.1607666015625, 0.4677734375, 0.00302886962890625, 0.357177734375, 0.006420135498046875, 0.029205322265625], "tokens": [2850, 1550, 280, 1550, 32, 25657, 2931, 473]}
{"line_number": 567, "line_type": "generated", "code": "\n  }\n\n  /**\n   * Do calls to this function have side effects?\n   *\n   * @param callNode - function call node\n   */\n  static boolean functionCallHasSideEffects(Node callNode, AbstractCompiler compiler) {\n    Preconditions.checkArgument", "entropy": 0.08526611328125, "is_bug_line": false, "sus_score": 0.49547, "per_token_entropy": [0.331787109375, 0.007720947265625, 0.0911865234375, 0.31689453125, 0.053985595703125, 0.0003447532653808594, 0.66748046875, 0.147705078125, 0.0340576171875, 0.2216796875, 0.0849609375, 0.098876953125, 0.03240966796875, 0.01119232177734375, 0.0153656005859375, 0.0207672119140625, 0.062042236328125, 0.1173095703125, 0.0011434555053710938, 0.09674072265625, 0.009063720703125, 0.08355712890625, 0.005092620849609375, 0.056549072265625, 0.211181640625, 0.0360107421875, 0.0270843505859375, 0.02069091796875, 0.08905029296875, 0.005077362060546875, 0.033172607421875, 0.0025348663330078125, 0.0027828216552734375, 0.0005130767822265625, 0.0004911422729492188, 0.00038909912109375, 7.62939453125e-05, 0.0016107559204101562, 0.0294189453125, 0.0013380050659179688, 0.0005483627319335938, 0.451171875, 0.24560546875, 0.00021409988403320312, 0.0005578994750976562, 0.0016851425170898438, 0.00418853759765625, 0.054962158203125, 0.63232421875, 0.000545501708984375, 0.0010833740234375, 0.01241302490234375], "tokens": [334, 320, 719, 1022, 664, 319, 3278, 7399, 372, 458, 667, 1159, 5209, 15987, 49, 664, 319, 664, 319, 477, 753, 1476, 1212, 429, 667, 1476, 1541, 664, 569, 334, 907, 1905, 667, 1853, 3993, 7427, 20126, 26, 1212, 1476, 1212, 30, 7400, 8115, 8980, 27, 301, 284, 40596, 32, 1553, 3484]}
{"line_number": 962, "line_type": "original", "code": "   * Returns true if the shallow scope contains references to 'this' keyword", "entropy": 4.69921875, "is_bug_line": false, "sus_score": 0.34902, "per_token_entropy": [5.13671875, 3.94921875, 13.453125, 0.888671875, 0.118408203125, 1.064453125, 13.671875, 7.33984375, 2.875, 9.3125, 0.381103515625, 3.435546875, 0.484375, 1.0302734375, 7.375], "tokens": [261, 319, 3759, 861, 415, 322, 25433, 4576, 4304, 10647, 372, 330, 578, 25, 11659]}
{"line_number": 962, "line_type": "generated", "code": "\n    return isName(n) && isVar(n.getParent());\n  }\n\n  /**\n   * Is this a NAME node and is it the name of a function being declared?\n   *\n   * @param n The node\n   * @return True if", "entropy": 0.281494140625, "is_bug_line": false, "sus_score": 0.34902, "per_token_entropy": [0.53125, 0.265869140625, 0.69921875, 0.1680908203125, 0.0018720626831054688, 0.001682281494140625, 0.43603515625, 0.283447265625, 0.18408203125, 0.033721923828125, 0.05584716796875, 0.07080078125, 0.00557708740234375, 0.0203094482421875, 0.033538818359375, 0.0196075439453125, 0.00051116943359375, 0.08251953125, 0.1488037109375, 0.1392822265625, 0.0005054473876953125, 0.6103515625, 0.08721923828125, 0.6552734375, 1.98828125, 0.423583984375, 2.150390625, 0.6337890625, 0.33349609375, 0.484375, 0.202392578125, 0.092041015625, 0.2744140625, 1.6083984375, 1.3349609375, 0.11480712890625, 0.08282470703125, 0.022613525390625, 0.07440185546875, 0.06451416015625, 0.0009174346923828125, 0.025115966796875, 0.01128387451171875, 0.004852294921875, 0.017547607421875, 0.03509521484375, 0.0310516357421875, 0.0178985595703125, 0.0006504058837890625, 0.037200927734375, 0.0308837890625, 0.004161834716796875], "tokens": [284, 442, 438, 558, 26, 96, 27, 962, 438, 1881, 26, 96, 32, 18789, 1035, 334, 320, 719, 1022, 664, 319, 3611, 458, 312, 8912, 1541, 461, 438, 561, 322, 636, 432, 312, 667, 3998, 17103, 49, 664, 319, 664, 319, 477, 753, 310, 886, 1541, 664, 319, 477, 601, 2933, 415]}
{"line_number": 964, "line_type": "original", "code": "  static boolean referencesThis(Node n) {", "entropy": 2.2421875, "is_bug_line": false, "sus_score": 0.33389, "per_token_entropy": [3.369140625, 8.9375, 0.136962890625, 9.5703125, 0.10125732421875, 0.071533203125, 0.020477294921875, 0.045074462890625, 0.1605224609375, 0.0119476318359375], "tokens": [225, 907, 1905, 10647, 2272, 26, 1212, 310, 27, 301]}
{"line_number": 964, "line_type": "generated", "code": "\n  }\n\n  /**\n   * Is this a CALL node?\n   */\n  static boolean isCall(Node n) {\n    return n.getType() == Token.CALL;\n  }\n\n  /**\n   * Is this a CALL node?\n   */\n  static boolean", "entropy": 0.137451171875, "is_bug_line": false, "sus_score": 0.33389, "per_token_entropy": [0.1820068359375, 0.031097412109375, 0.147705078125, 0.143310546875, 0.020233154296875, 0.0002104043960571289, 1.00390625, 0.10833740234375, 0.59814453125, 1.2470703125, 0.1680908203125, 0.03887939453125, 0.01349639892578125, 0.0374755859375, 0.01641845703125, 0.00926971435546875, 0.0003371238708496094, 0.00030994415283203125, 0.0036106109619140625, 0.006999969482421875, 0.00036787986755371094, 0.0030517578125, 0.0016469955444335938, 0.0007219314575195312, 0.005535125732421875, 0.0115509033203125, 0.005878448486328125, 0.0003230571746826172, 0.00046563148498535156, 0.00010693073272705078, 0.00012743473052978516, 0.00020682811737060547, 6.556510925292969e-06, 3.719329833984375e-05, 0.00347137451171875, 0.02508544921875, 0.00017762184143066406, 0.06317138671875, 0.0635986328125, 0.01103973388671875, 0.0005040168762207031, 0.352294921875, 0.037261962890625, 0.25146484375, 0.374755859375, 0.29736328125, 1.6845703125, 0.0628662109375, 0.06494140625, 0.035491943359375, 0.01229095458984375, 0.00180816650390625], "tokens": [334, 320, 719, 1022, 664, 319, 3611, 458, 312, 16084, 1541, 49, 664, 569, 334, 907, 1905, 438, 1853, 26, 1212, 310, 27, 301, 284, 442, 310, 32, 10272, 346, 610, 6512, 32, 5038, 45, 334, 320, 719, 1022, 664, 319, 3611, 458, 312, 16084, 1541, 49, 664, 569, 334, 907, 1905]}
{"line_number": 1595, "line_type": "original", "code": "  static boolean containsType(Node node, int type) {", "entropy": 1.6201171875, "is_bug_line": false, "sus_score": 0.32147, "per_token_entropy": [4.8046875, 9.265625, 1.1123046875, 3.3671875, 0.2073974609375, 0.0546875, 0.12646484375, 0.11572265625, 0.0231170654296875, 1.6728515625, 0.01511383056640625, 0.25341796875, 0.042694091796875], "tokens": [225, 907, 1905, 4304, 620, 26, 1212, 1541, 30, 629, 827, 27, 301]}
{"line_number": 1595, "line_type": "generated", "code": "\n        addingRoot = ancestor.getLastChild();\n      } else if (type == Token.BLOCK) {\n        addingRoot = ancestor;\n      } else if (type == Token.LABEL) {\n        addingRoot = ancestor.getLastChild();\n      } else if", "entropy": 0.251220703125, "is_bug_line": false, "sus_score": 0.32147, "per_token_entropy": [0.9873046875, 1.0576171875, 0.0006003379821777344, 0.111328125, 0.2286376953125, 0.348876953125, 0.7412109375, 0.004241943359375, 0.269287109375, 0.67041015625, 0.005390167236328125, 0.1402587890625, 0.049224853515625, 0.07379150390625, 0.12841796875, 0.04876708984375, 0.001483917236328125, 2.5987625122070312e-05, 0.7783203125, 0.65380859375, 0.0036563873291015625, 0.1204833984375, 0.226318359375, 3.886222839355469e-05, 0.00023627281188964844, 0.0147247314453125, 0.190673828125, 0.67919921875, 0.00189971923828125, 0.237548828125, 0.049560546875, 0.03369140625, 0.08905029296875, 0.0239715576171875, 0.0006346702575683594, 0.0001690387725830078, 2.61328125, 0.09820556640625, 0.0007119178771972656, 0.053741455078125, 0.271728515625, 2.2649765014648438e-05, 0.0006985664367675781, 0.036712646484375, 0.58984375, 0.7021484375, 0.0006127357482910156, 0.2459716796875, 0.134033203125, 0.0029277801513671875, 0.233642578125, 0.104248046875], "tokens": [291, 7165, 4058, 280, 39285, 32, 20197, 2931, 473, 397, 320, 813, 415, 308, 681, 610, 6512, 32, 10322, 27, 301, 291, 7165, 4058, 280, 39285, 45, 397, 320, 813, 415, 308, 681, 610, 6512, 32, 11379, 27, 301, 291, 7165, 4058, 280, 39285, 32, 20197, 2931, 473, 397, 320, 813, 415]}
