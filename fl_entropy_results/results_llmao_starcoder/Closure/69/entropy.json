{"line_number": 1454, "line_type": "original", "code": "                  functionName, name, oType.toString(),", "entropy": 2.9765625, "is_bug_line": false, "sus_score": 0.61363, "per_token_entropy": [9.8359375, 4.296875, 2.466796875, 3.91796875, 6.234375, 0.39111328125, 2.30078125, 0.07501220703125, 1.4765625, 0.72705078125, 1.0146484375], "tokens": [5688, 667, 558, 30, 636, 30, 337, 620, 32, 3108, 1026]}
{"line_number": 1454, "line_type": "generated", "code": "        HashMap<String, ObjectType> properties =\n            new HashMap<String, ObjectType>();\n        HashMap<String, ObjectType> currentProperties =\n            new HashMap<String, ObjectType>();\n        checkInterfaceConflictProperties(t, n, functionPrivateName,\n            properties,", "entropy": 0.1658935546875, "is_bug_line": false, "sus_score": 0.61363, "per_token_entropy": [1.5224609375, 1.166015625, 0.0159149169921875, 0.0012369155883789062, 0.000858306884765625, 0.0457763671875, 0.0011835098266601562, 0.54541015625, 0.0364990234375, 1.5009765625, 0.25537109375, 0.00833892822265625, 0.08489990234375, 0.002040863037109375, 3.266334533691406e-05, 0.006381988525390625, 0.0261993408203125, 0.252197265625, 0.8681640625, 0.0007739067077636719, 0.0003933906555175781, 0.00010263919830322266, 0.005641937255859375, 0.00018262863159179688, 0.11431884765625, 0.01465606689453125, 0.004047393798828125, 0.1263427734375, 0.0016565322875976562, 0.0006361007690429688, 0.00013625621795654297, 8.285045623779297e-05, 6.282329559326172e-05, 0.0009927749633789062, 0.0016851425170898438, 0.2415771484375, 1.2529296875, 0.0872802734375, 0.0017023086547851562, 0.0020580291748046875, 0.0019350051879882812, 0.11944580078125, 0.00018215179443359375, 0.0112457275390625, 0.002685546875, 0.129150390625, 0.0204620361328125, 1.8715858459472656e-05, 0.00119781494140625, 0.1339111328125, 0.00522613525390625, 0.00017774105072021484], "tokens": [351, 8322, 46, 652, 30, 42562, 48, 4308, 280, 324, 537, 8322, 46, 652, 30, 42562, 2923, 291, 8322, 46, 652, 30, 42562, 48, 1550, 3289, 280, 324, 537, 8322, 46, 652, 30, 42562, 2923, 291, 1505, 3041, 19610, 3289, 26, 102, 30, 310, 30, 667, 6527, 558, 30, 324, 4308, 30]}
{"line_number": 1452, "line_type": "original", "code": "          compiler.report(", "entropy": 1.779296875, "is_bug_line": false, "sus_score": 0.30007, "per_token_entropy": [4.57421875, 4.21875, 0.0010290145874023438, 0.03924560546875, 0.061737060546875], "tokens": [2033, 8980, 32, 3734, 26]}
{"line_number": 1452, "line_type": "generated", "code": "\n        }\n      }\n    } else {\n      // TODO(user): check for duplicate parameter names\n    }\n\n    if (functionType.isInterface()) {\n      // Check for conflicting property names\n      HashMap<String, ObjectType> properties = new HashMap<String,", "entropy": 0.64306640625, "is_bug_line": false, "sus_score": 0.30007, "per_token_entropy": [0.399658203125, 0.0172119140625, 0.398681640625, 0.0004734992980957031, 0.327880859375, 0.001834869384765625, 1.5234375, 0.6201171875, 0.08746337890625, 1.353515625, 1.75, 0.036590576171875, 0.439453125, 0.03924560546875, 2.84375, 1.1875, 2.40625, 1.8017578125, 0.06298828125, 2.2109375, 0.0014734268188476562, 1.4052734375, 1.6005859375, 0.25634765625, 0.324462890625, 0.215087890625, 0.091796875, 0.1888427734375, 0.485595703125, 0.1929931640625, 0.00092315673828125, 0.09765625, 1.4365234375, 1.6015625, 0.8408203125, 2.072265625, 1.916015625, 0.301513671875, 0.8154296875, 0.5048828125, 0.0018930435180664062, 0.0002593994140625, 3.7789344787597656e-05, 0.0159912109375, 0.00023102760314941406, 0.625, 0.0250396728515625, 0.513671875, 0.018310546875, 0.370849609375, 0.0023708343505859375, 1.0132789611816406e-05], "tokens": [291, 320, 397, 320, 284, 320, 813, 301, 397, 434, 4296, 26, 496, 711, 1505, 436, 12843, 3395, 4467, 284, 320, 446, 415, 308, 1126, 620, 32, 297, 3041, 1157, 301, 397, 434, 3456, 436, 48790, 2804, 4467, 397, 8322, 46, 652, 30, 42562, 48, 4308, 280, 537, 8322, 46, 652, 30]}
{"line_number": 1791, "line_type": "original", "code": "   * @return true if the sub-tree n is a reference, false otherwise.", "entropy": 2.916015625, "is_bug_line": false, "sus_score": 0.28904, "per_token_entropy": [6.921875, 1.529296875, 5.80078125, 1.2431640625, 4.51953125, 0.1282958984375, 0.497802734375, 10.0, 1.353515625, 0.880859375, 6.54296875, 1.6240234375, 1.27734375, 4.34375, 2.22265625, 0.9462890625, 2.1171875, 0.55712890625], "tokens": [261, 319, 477, 601, 861, 415, 322, 1361, 31, 3242, 310, 438, 312, 4121, 30, 901, 5878, 32]}
{"line_number": 1791, "line_type": "generated", "code": "\n  // is not yet implemented and is marked with a TODO.\n\n  /**\n   * Returns the function type for the given function node. The function type\n   * will be inferred if it is not already present.\n   */\n  private FunctionType getFunctionType(Node", "entropy": 0.9951171875, "is_bug_line": false, "sus_score": 0.28904, "per_token_entropy": [1.0869140625, 1.4267578125, 1.8515625, 1.0517578125, 1.60546875, 1.0224609375, 1.5751953125, 3.08203125, 3.53125, 0.56884765625, 1.361328125, 0.99951171875, 0.501953125, 1.6630859375, 0.296630859375, 0.091796875, 0.00016319751739501953, 2.673828125, 0.75, 3.375, 0.3046875, 1.87890625, 0.521484375, 1.0400390625, 0.5595703125, 1.111328125, 0.615234375, 2.50390625, 0.4013671875, 0.78173828125, 0.35009765625, 0.0009794235229492188, 1.560546875, 0.5830078125, 2.7734375, 0.69873046875, 0.83544921875, 1.017578125, 0.369140625, 0.8232421875, 0.63623046875, 0.50439453125, 0.1851806640625, 0.456787109375, 0.017578125, 0.318359375, 0.0184326171875, 9.369850158691406e-05, 0.1439208984375, 0.650390625, 1.15234375, 0.40576171875], "tokens": [334, 434, 438, 646, 6305, 7586, 461, 438, 15177, 623, 312, 4296, 32, 719, 1022, 664, 319, 3759, 322, 667, 827, 436, 322, 2702, 667, 1541, 32, 886, 667, 827, 664, 319, 1098, 526, 43134, 415, 561, 438, 646, 3425, 5024, 32, 664, 569, 334, 945, 4540, 620, 622, 44334, 26, 1212]}
{"line_number": 1470, "line_type": "original", "code": "   * scope chain to use in name lookups as well as error reporting.", "entropy": 4.10546875, "is_bug_line": false, "sus_score": 0.27217, "per_token_entropy": [6.0234375, 4.26953125, 13.203125, 6.171875, 3.609375, 4.484375, 3.1484375, 4.66796875, 1.9521484375, 0.020782470703125, 7.39453125, 2.400390625, 0.1368408203125, 5.6875, 2.0625, 0.4267578125], "tokens": [261, 319, 4576, 8241, 372, 793, 328, 636, 2779, 9016, 619, 4487, 619, 1048, 15945, 32]}
{"line_number": 1470, "line_type": "generated", "code": "      // check properties\n      validator.expectAllInterfaceProperties(t, n, functionType);\n    } else {\n      // check properties\n      validator.expectAllInterfaceProperties(t, n, functionType);", "entropy": 0.242431640625, "is_bug_line": false, "sus_score": 0.27217, "per_token_entropy": [1.37890625, 0.3603515625, 0.71826171875, 0.10992431640625, 0.33642578125, 0.3271484375, 0.00035762786865234375, 0.12353515625, 0.10906982421875, 0.06048583984375, 0.015899658203125, 0.0016002655029296875, 0.0147857666015625, 9.047985076904297e-05, 0.002666473388671875, 0.0019102096557617188, 0.005207061767578125, 0.0009546279907226562, 0.004474639892578125, 0.3818359375, 0.00103759765625, 0.3408203125, 0.333251953125, 0.1348876953125, 0.56201171875, 1.787109375, 1.0361328125, 0.277099609375, 0.1536865234375, 0.00012540817260742188, 0.1348876953125, 0.1427001953125, 1.2626953125, 0.01904296875, 0.0023632049560546875, 0.00635528564453125, 2.849102020263672e-05, 0.0008120536804199219, 0.0005822181701660156, 0.017364501953125, 0.002689361572265625, 0.00830841064453125], "tokens": [647, 434, 1505, 4308, 397, 13420, 32, 2358, 1934, 3041, 3289, 26, 102, 30, 310, 30, 667, 620, 293, 284, 320, 813, 301, 397, 434, 1505, 4308, 397, 13420, 32, 2358, 1934, 3041, 3289, 26, 102, 30, 310, 30, 667, 620, 293]}
{"line_number": 1767, "line_type": "original", "code": "            \"element type must match enum's type\");", "entropy": 4.80859375, "is_bug_line": false, "sus_score": 0.26867, "per_token_entropy": [6.8515625, 8.109375, 10.9296875, 0.78662109375, 5.13671875, 9.453125, 0.56689453125, 3.01953125, 2.603515625, 0.64794921875], "tokens": [1468, 313, 2543, 827, 2298, 2530, 3833, 1182, 827, 724]}
{"line_number": 1767, "line_type": "generated", "code": "\n    }\n    return jsType;\n  }\n\n  /**\n   * <p>Checks the type of a variable, parameter, formal parameter, or property\n   * declaration.  In addition to checking the declared type, this method\n   * checks that the declared type", "entropy": 0.73486328125, "is_bug_line": false, "sus_score": 0.26867, "per_token_entropy": [0.83740234375, 0.0289154052734375, 0.0841064453125, 0.014556884765625, 0.06304931640625, 5.841255187988281e-06, 0.0016412734985351562, 0.01320648193359375, 0.0011243820190429688, 0.1607666015625, 0.2333984375, 0.038787841796875, 0.00012505054473876953, 2.521484375, 0.00872039794921875, 0.00305938720703125, 1.2109375, 1.328125, 1.806640625, 0.15478515625, 0.7802734375, 2.31640625, 1.6640625, 1.5537109375, 0.1458740234375, 2.080078125, 0.039398193359375, 0.25341796875, 0.76171875, 1.6142578125, 0.228515625, 0.0004134178161621094, 2.248046875, 0.85986328125, 1.798828125, 3.07421875, 0.9423828125, 0.281982421875, 1.05859375, 0.73876953125, 1.009765625, 0.11712646484375, 0.8486328125, 0.4580078125, 0.2744140625, 0.336669921875, 0.0002999305725097656, 1.72265625, 0.533203125, 0.73193359375, 1.04296875, 0.1986083984375], "tokens": [284, 320, 284, 442, 4060, 620, 45, 334, 320, 719, 1022, 664, 319, 333, 98, 48, 19393, 322, 827, 432, 312, 2677, 30, 3395, 30, 32523, 3395, 30, 556, 2804, 664, 319, 13317, 32, 225, 701, 10879, 372, 11056, 322, 17103, 827, 30, 458, 1411, 664, 319, 9371, 688, 322, 17103, 827]}
