{"line_number": 957, "line_type": "original", "code": "                        if (jsdocBuilder.shouldParseDocumentation()) {", "entropy": 2.048828125, "is_bug_line": false, "sus_score": 0.46884, "per_token_entropy": [9.9609375, 2.0625, 0.399658203125, 1.5244140625, 0.026092529296875, 0.0295867919921875, 1.09375, 6.11328125, 1.5556640625, 1.55078125, 0.21533203125, 0.0673828125], "tokens": [6797, 415, 308, 754, 1427, 1796, 32, 3163, 4480, 16944, 1157, 301]}
{"line_number": 957, "line_type": "generated", "code": "\n          if (!hasParsedFileOverviewDocInfo()) {\n            // If we have not seen any file overview information, then\n            // the entire file is the file overview.\n            fileOverviewJSDocInfo = retrieveAndResetParsedJSDocInfo();\n         ", "entropy": 0.69189453125, "is_bug_line": false, "sus_score": 0.46884, "per_token_entropy": [0.88427734375, 1.5810546875, 1.6337890625, 2.158203125, 0.154541015625, 0.08026123046875, 0.004558563232421875, 0.00559234619140625, 0.0002765655517578125, 0.2119140625, 0.005023956298828125, 0.04052734375, 2.021484375, 2.171875, 0.80419921875, 2.55078125, 0.83154296875, 1.7333984375, 1.3994140625, 0.8623046875, 0.43115234375, 1.6435546875, 0.494873046875, 0.9140625, 1.3955078125, 0.0022869110107421875, 2.732421875, 1.697265625, 0.61376953125, 0.5615234375, 1.9990234375, 0.2117919921875, 0.0819091796875, 0.873046875, 0.2607421875, 0.68212890625, 0.0024547576904296875, 0.1170654296875, 2.384185791015625e-05, 2.6226043701171875e-06, 7.677078247070312e-05, 0.010345458984375, 1.9443359375, 0.01238250732421875, 0.0075531005859375, 0.0066070556640625, 0.003314971923828125, 4.291534423828125e-06, 3.5762786865234375e-07, 0.00029397010803222656, 0.0101318359375, 0.10992431640625], "tokens": [616, 415, 1429, 2040, 24217, 974, 19310, 4216, 1120, 1157, 301, 324, 434, 1670, 996, 1159, 646, 10925, 1346, 803, 20783, 2471, 30, 1615, 324, 434, 322, 9449, 803, 438, 322, 803, 20783, 32, 324, 803, 19310, 60, 3181, 542, 1120, 280, 10847, 2185, 7326, 24217, 60, 3181, 542, 1120, 473, 616]}
{"line_number": 1838, "line_type": "original", "code": "    restoreLookAhead(token);", "entropy": 4.2421875, "is_bug_line": false, "sus_score": 0.45179, "per_token_entropy": [7.09375, 13.90625, 7.984375, 1.197265625, 0.0302734375, 2.267578125, 1.3486328125, 0.11871337890625], "tokens": [264, 11309, 7760, 51, 1816, 26, 1956, 293]}
{"line_number": 1838, "line_type": "generated", "code": "\n  private Node parseFunctionType(JsDocToken token) {\n    if (token!= JsDocToken.STRING) {\n      return reportGenericTypeSyntaxWarning();\n    }\n\n    String functionType = stream.getString();\n    if (!\"function\".equals(functionType", "entropy": 0.113037109375, "is_bug_line": false, "sus_score": 0.45179, "per_token_entropy": [0.1875, 0.0653076171875, 0.0130615234375, 0.007648468017578125, 0.020233154296875, 0.0131072998046875, 0.006938934326171875, 7.271766662597656e-06, 0.0009207725524902344, 0.0386962890625, 0.0026397705078125, 0.01030731201171875, 0.08038330078125, 0.572265625, 0.0706787109375, 0.0335693359375, 0.0870361328125, 0.0030155181884765625, 8.58306884765625e-06, 8.380413055419922e-05, 3.600120544433594e-05, 0.01129913330078125, 0.314208984375, 0.004852294921875, 0.020233154296875, 0.07281494140625, 0.047332763671875, 0.5546875, 0.00037097930908203125, 0.0002357959747314453, 0.004421234130859375, 0.004657745361328125, 0.00027060508728027344, 0.110107421875, 0.6484375, 0.81201171875, 0.74658203125, 0.07183837890625, 0.06451416015625, 2.372264862060547e-05, 0.0008630752563476562, 0.00926971435546875, 0.1021728515625, 0.90869140625, 0.0654296875, 0.0849609375, 0.0022735595703125, 0.00034332275390625, 0.0017957687377929688, 0.0004925727844238281, 0.0010251998901367188, 5.245208740234375e-06], "tokens": [334, 945, 4004, 3185, 44334, 26, 10535, 4216, 1763, 2404, 27, 301, 284, 415, 308, 1956, 863, 22301, 4216, 1763, 32, 5203, 27, 301, 397, 442, 3639, 40529, 6647, 5711, 473, 284, 320, 446, 892, 667, 620, 280, 3443, 32, 7069, 473, 284, 415, 1429, 20, 1126, 2296, 3574, 26, 1126, 620]}
{"line_number": 1413, "line_type": "original", "code": "    if (token == JsDocToken.EOC || token == JsDocToken.EOL ||", "entropy": 1.541015625, "is_bug_line": false, "sus_score": 0.44402, "per_token_entropy": [5.3828125, 2.890625, 0.039093017578125, 2.095703125, 0.03997802734375, 0.01153564453125, 7.045269012451172e-05, 0.00016379356384277344, 0.0006470680236816406, 8.296875, 0.1922607421875, 3.09375, 0.3154296875, 0.002223968505859375, 0.0036334991455078125, 2.5033950805664062e-06, 3.266334533691406e-05, 0.0010738372802734375, 5.875, 2.58203125], "tokens": [264, 415, 308, 1956, 610, 22301, 4216, 1763, 32, 55, 9274, 1276, 2404, 610, 22301, 4216, 1763, 32, 20277, 1276]}
{"line_number": 1413, "line_type": "generated", "code": "\n          // The end of the line is part of the comment.\n          builder.append(getRemainingJSDocLine());\n          token = next();\n          continue;\n\n        case EOF:\n          break;\n\n        case AT:\n          // The @ is part of the", "entropy": 0.497802734375, "is_bug_line": false, "sus_score": 0.44402, "per_token_entropy": [0.630859375, 1.8896484375, 2.81640625, 1.6259765625, 0.066650390625, 0.382568359375, 0.223876953125, 0.48583984375, 1.083984375, 0.0009217262268066406, 0.0100860595703125, 0.06817626953125, 0.10882568359375, 0.111328125, 2.69921875, 0.001491546630859375, 0.006633758544921875, 0.3212890625, 0.6357421875, 0.1322021484375, 0.0033893585205078125, 2.1457672119140625e-05, 1.3113021850585938e-06, 0.0012750625610351562, 0.203857421875, 0.63671875, 0.93310546875, 0.0008916854858398438, 0.033233642578125, 0.004734039306640625, 0.211669921875, 0.460205078125, 0.0022430419921875, 0.320068359375, 0.07574462890625, 0.2464599609375, 0.0010967254638671875, 0.253662109375, 2.408203125, 0.00348663330078125, 0.2578125, 0.6142578125, 1.25, 0.05328369140625, 0.1976318359375, 0.62353515625, 1.3720703125, 1.2958984375, 0.92138671875, 0.1864013671875, 0.0006480216979980469, 0.0134429931640625], "tokens": [616, 434, 886, 943, 432, 322, 1628, 438, 1742, 432, 322, 5093, 32, 616, 4906, 32, 1689, 26, 371, 20025, 60, 3181, 542, 1811, 1035, 616, 2404, 280, 2354, 473, 616, 4036, 45, 584, 1135, 21008, 44, 616, 1626, 45, 584, 1135, 13089, 44, 616, 434, 886, 477, 438, 1742, 432, 322]}
{"line_number": 872, "line_type": "original", "code": "                  boolean canSkipTypeAnnotation =", "entropy": 3.515625, "is_bug_line": false, "sus_score": 0.43589, "per_token_entropy": [7.01953125, 8.3984375, 4.51171875, 1.9716796875, 1.8076171875, 0.77294921875, 0.1290283203125], "tokens": [5688, 1905, 883, 11393, 620, 7942, 280]}
{"line_number": 872, "line_type": "generated", "code": "\n                        if (!jsdocBuilder.recordVisibility(Visibility.PRIVATE)) {\n                          parser.addParserWarning(\"msg.jsdoc.visibility\",\n                              lineno, charno);\n                        }\n                        break;\n\n                      case PROTECTED:\n                        if (!jsdocBuilder", "entropy": 0.11651611328125, "is_bug_line": false, "sus_score": 0.43589, "per_token_entropy": [0.5244140625, 0.404052734375, 0.265625, 0.06494140625, 7.796287536621094e-05, 0.00019252300262451172, 0.0013208389282226562, 0.02783203125, 0.154296875, 0.68603515625, 0.576171875, 0.00927734375, 0.00450897216796875, 0.1297607421875, 0.026824951171875, 0.0271148681640625, 0.0210418701171875, 0.0002675056457519531, 0.0011835098266601562, 0.09283447265625, 0.008819580078125, 0.0843505859375, 0.0023021697998046875, 0.00012862682342529297, 0.006103515625, 0.0002732276916503906, 0.0034656524658203125, 1.181640625, 0.1728515625, 0.05816650390625, 0.1259765625, 0.0007224082946777344, 0.0029964447021484375, 3.457069396972656e-05, 0.007232666015625, 0.0166168212890625, 0.0003113746643066406, 0.05572509765625, 0.05523681640625, 0.0013484954833984375, 0.0770263671875, 0.0018072128295898438, 0.01409912109375, 2.7418136596679688e-06, 1.728534698486328e-05, 0.0001150369644165039, 1.14453125, 0.0107574462890625, 0.0070037841796875, 0.0012149810791015625, 2.2530555725097656e-05, 9.059906005859375e-06], "tokens": [715, 415, 1429, 754, 1427, 1796, 32, 4133, 9950, 26, 9950, 32, 16856, 490, 301, 3775, 4118, 32, 669, 2825, 5711, 440, 2076, 32, 754, 1427, 32, 13488, 392, 4985, 39997, 30, 1351, 1347, 293, 715, 320, 715, 1626, 45, 41194, 1135, 4158, 24947, 1345, 44, 715, 415, 1429, 754, 1427, 1796]}
{"line_number": 2341, "line_type": "original", "code": "    unreadToken = token;", "entropy": 2.96875, "is_bug_line": false, "sus_score": 0.43382, "per_token_entropy": [5.1796875, 6.7890625, 0.0044403076171875, 0.06597900390625, 4.81640625, 0.95703125], "tokens": [264, 49117, 1763, 280, 2404, 45]}
{"line_number": 2341, "line_type": "generated", "code": "\n      }\n    }\n  }\n\n  /**\n   * Skips all empty lines in the JSDoc. Call this method if you want the JSDoc\n   * entry to span multiple lines.\n   */\n  private void skipEmptyLines() {\n    while (", "entropy": 0.1253662109375, "is_bug_line": false, "sus_score": 0.43382, "per_token_entropy": [0.494384765625, 0.00550079345703125, 0.134765625, 0.0012798309326171875, 0.047821044921875, 0.001613616943359375, 0.293701171875, 0.197509765625, 0.08428955078125, 0.00042939186096191406, 1.16796875, 0.00069427490234375, 0.6240234375, 0.98583984375, 0.0269927978515625, 0.1556396484375, 0.00669097900390625, 0.01531982421875, 5.030632019042969e-05, 9.202957153320312e-05, 0.08624267578125, 0.3994140625, 0.0006866455078125, 0.00482940673828125, 0.0621337890625, 0.0220947265625, 0.4052734375, 0.271728515625, 0.2386474609375, 4.6133995056152344e-05, 0.00013744831085205078, 0.0016889572143554688, 0.0002294778823852539, 0.040252685546875, 0.01407623291015625, 0.178466796875, 0.03594970703125, 0.00824737548828125, 0.09600830078125, 0.033935546875, 0.0158233642578125, 0.0029468536376953125, 0.004180908203125, 0.0205078125, 0.0037174224853515625, 0.05670166015625, 0.0097198486328125, 0.01218414306640625, 0.0019235610961914062, 0.095703125, 0.1456298828125, 0.00749969482421875], "tokens": [397, 320, 284, 320, 334, 320, 719, 1022, 664, 319, 6908, 9510, 1169, 3502, 5430, 328, 322, 971, 3181, 542, 32, 5640, 458, 1411, 415, 844, 2637, 322, 971, 3181, 542, 664, 319, 3414, 372, 8106, 4609, 5430, 32, 664, 569, 334, 945, 763, 7116, 2766, 8683, 346, 301, 284, 2218, 308]}
