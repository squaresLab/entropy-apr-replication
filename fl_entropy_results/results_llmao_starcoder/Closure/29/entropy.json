{"line_number": 453, "line_type": "original", "code": "      compiler.reportCodeChange();", "entropy": 2.63671875, "is_bug_line": false, "sus_score": 0.2891, "per_token_entropy": [10.109375, 7.44140625, 0.08013916015625, 0.44482421875, 0.373046875, 0.0004780292510986328, 0.01120758056640625], "tokens": [647, 8980, 32, 3734, 1227, 1791, 473]}
{"line_number": 453, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.2891, "per_token_entropy": [], "tokens": []}
{"line_number": 443, "line_type": "original", "code": "          // declaration near all the other declarations.", "entropy": 5.703125, "is_bug_line": false, "sus_score": 0.22269, "per_token_entropy": [11.3828125, 2.24609375, 8.7734375, 11.78125, 8.2890625, 1.5166015625, 3.431640625, 2.97265625, 0.96435546875], "tokens": [2033, 434, 13317, 12398, 1169, 322, 1604, 20632, 32]}
{"line_number": 443, "line_type": "generated", "code": "\n\n  private static void fillInitialValues(Reference init,\n      Map<String, Node> initvals) {\n    Preconditions.checkArgument(init.getParent().isAssign());\n    Node initNode = init.getParent().getLastChild();\n    if (initNode", "entropy": 0.33642578125, "is_bug_line": false, "sus_score": 0.22269, "per_token_entropy": [1.2578125, 1.5673828125, 0.748046875, 1.4375, 0.70361328125, 0.0016202926635742188, 0.0003001689910888672, 0.02215576171875, 0.14404296875, 0.30615234375, 0.0152740478515625, 0.96044921875, 0.005428314208984375, 0.00028324127197265625, 6.878376007080078e-05, 1.3113021850585938e-05, 0.00713348388671875, 2.3365020751953125e-05, 0.2340087890625, 0.0169830322265625, 0.0017271041870117188, 0.0019178390502929688, 0.0220794677734375, 1.130859375, 0.0003459453582763672, 0.0033092498779296875, 0.87158203125, 0.0225982666015625, 0.044952392578125, 0.050537109375, 0.63916015625, 0.007274627685546875, 0.06719970703125, 0.0860595703125, 0.101318359375, 0.37109375, 0.55908203125, 2.30859375, 1.6357421875, 0.002826690673828125, 0.0198822021484375, 0.001552581787109375, 0.25439453125, 0.1458740234375, 0.294189453125, 0.0005421638488769531, 0.0694580078125, 0.203857421875, 0.88720703125, 0.1578369140625, 0.079833984375, 0.022918701171875], "tokens": [719, 945, 907, 763, 5318, 4678, 3354, 26, 3564, 3219, 30, 397, 3516, 46, 652, 30, 4004, 48, 3219, 9359, 27, 301, 284, 40596, 32, 1553, 3484, 26, 1664, 32, 18789, 922, 297, 9079, 1035, 284, 4004, 3219, 1212, 280, 3219, 32, 18789, 922, 20197, 2931, 473, 284, 415, 308, 1664, 1212]}
{"line_number": 433, "line_type": "original", "code": "          ref.getGrandparent().removeChild(ref.getParent());", "entropy": 1.619140625, "is_bug_line": false, "sus_score": 0.21598, "per_token_entropy": [10.046875, 6.9140625, 0.1982421875, 0.62646484375, 0.038604736328125, 0.0008573532104492188, 0.031829833984375, 2.994140625, 0.004779815673828125, 0.1383056640625, 0.013275146484375, 0.022552490234375, 0.0122528076171875], "tokens": [2033, 2488, 32, 371, 41332, 2544, 922, 28878, 26, 612, 32, 18789, 1035]}
{"line_number": 433, "line_type": "generated", "code": "\n  private static void fillInitialValues(Reference init,\n      Map<String, Node> initvals) {\n    Node initnode = init.getNode();\n    Preconditions.checkState(initnode.isAssign());\n\n    Node rval = initnode.getLastChild", "entropy": 0.371337890625, "is_bug_line": false, "sus_score": 0.21598, "per_token_entropy": [1.5107421875, 1.2041015625, 0.73046875, 1.2509765625, 0.6962890625, 0.0017404556274414062, 0.00038313865661621094, 0.0164337158203125, 0.1439208984375, 0.329345703125, 0.01447296142578125, 1.0517578125, 0.007274627685546875, 0.00036978721618652344, 0.00010192394256591797, 1.2636184692382812e-05, 0.00829315185546875, 3.218650817871094e-05, 0.26611328125, 0.0172271728515625, 0.002277374267578125, 0.002277374267578125, 0.04449462890625, 1.1337890625, 1.64453125, 1.802734375, 0.007781982421875, 0.020294189453125, 0.0064849853515625, 0.210693359375, 0.017120361328125, 0.2171630859375, 1.37109375, 0.0001538991928100586, 0.00251007080078125, 0.19384765625, 0.0107421875, 0.08837890625, 0.0218658447265625, 0.0309600830078125, 0.263427734375, 0.0233001708984375, 0.2213134765625, 1.0166015625, 0.58349609375, 2.9296875, 0.01470184326171875, 0.01422119140625, 0.03436279296875, 0.00013363361358642578, 0.13330078125, 0.0006866455078125], "tokens": [334, 945, 907, 763, 5318, 4678, 3354, 26, 3564, 3219, 30, 397, 3516, 46, 652, 30, 4004, 48, 3219, 9359, 27, 301, 284, 4004, 3219, 1251, 280, 3219, 32, 17699, 473, 284, 40596, 32, 1553, 1078, 26, 1664, 1251, 32, 297, 9079, 1035, 446, 4004, 42445, 280, 3219, 1251, 32, 20197, 2931]}
{"line_number": 317, "line_type": "original", "code": "      // Compute all of the assignments necessary", "entropy": 4.50390625, "is_bug_line": false, "sus_score": 0.21584, "per_token_entropy": [6.0546875, 2.857421875, 7.3984375, 5.7109375, 2.47265625, 0.063720703125, 3.994140625, 7.484375], "tokens": [647, 434, 12836, 1169, 432, 322, 29410, 7506]}
{"line_number": 317, "line_type": "generated", "code": "\n      ref.replaceWith(replacement);\n    }\n\n    /**\n     * Replaces an assignment like x = {...} with t1=a,t2=b,t3=c,true.\n     * Note that the resulting expression will always evaluate to", "entropy": 0.216064453125, "is_bug_line": false, "sus_score": 0.21584, "per_token_entropy": [0.4599609375, 1.4931640625, 0.002231597900390625, 0.61962890625, 0.50439453125, 0.00107574462890625, 0.07354736328125, 0.0300750732421875, 0.309326171875, 0.0023479461669921875, 0.5244140625, 0.2418212890625, 0.0499267578125, 0.0002944469451904297, 2.173828125, 0.0173492431640625, 1.4580078125, 0.354248046875, 0.23828125, 0.284912109375, 0.5068359375, 0.2890625, 0.05914306640625, 0.07403564453125, 0.53076171875, 0.029876708984375, 0.0750732421875, 0.0264434814453125, 0.018341064453125, 0.0177154541015625, 0.0024089813232421875, 0.0005202293395996094, 0.0017213821411132812, 0.01195526123046875, 0.0190887451171875, 0.0003948211669921875, 0.0005536079406738281, 0.0011224746704101562, 0.310546875, 0.051300048828125, 0.1170654296875, 0.005451202392578125, 0.08770751953125, 0.10260009765625, 0.0004734992980957031, 0.00586700439453125, 0.002277374267578125, 0.03900146484375, 0.001895904541015625, 0.00237274169921875, 0.0011043548583984375, 0.0016880035400390625], "tokens": [397, 2488, 32, 3227, 1554, 26, 27378, 293, 284, 320, 446, 1022, 275, 319, 902, 15778, 600, 13807, 2124, 816, 280, 12399, 111, 623, 273, 35, 47, 83, 30, 102, 36, 47, 84, 30, 102, 37, 47, 85, 30, 1508, 32, 275, 319, 5830, 688, 322, 14302, 6101, 1098, 5182, 13396, 372]}
{"line_number": 452, "line_type": "original", "code": "", "entropy": 0.7587890625, "is_bug_line": false, "sus_score": 0.17924, "per_token_entropy": [0.7587890625], "tokens": [203]}
{"line_number": 452, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.17924, "per_token_entropy": [], "tokens": []}
