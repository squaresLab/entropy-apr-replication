{"line_number": 102, "line_type": "original", "code": " * <ul>", "entropy": 1.392578125, "is_bug_line": false, "sus_score": 0.3494, "per_token_entropy": [0.003520965576171875, 2.78125], "tokens": [474, 13145]}
{"line_number": 102, "line_type": "generated", "code": " * <p>", "entropy": 0.1737060546875, "is_bug_line": false, "sus_score": 0.3494, "per_token_entropy": [0.003520965576171875, 0.343994140625], "tokens": [474, 3502]}
{"line_number": 106, "line_type": "original", "code": " * ", "entropy": 0.037139892578125, "is_bug_line": false, "sus_score": 0.32164, "per_token_entropy": [0.037139892578125], "tokens": [474]}
{"line_number": 106, "line_type": "generated", "code": " * ", "entropy": 0.037139892578125, "is_bug_line": false, "sus_score": 0.32164, "per_token_entropy": [0.037139892578125], "tokens": [474]}
{"line_number": 104, "line_type": "original", "code": " * empty collection or appropriate primitive/primitive wrapper value (e.g: 0,", "entropy": 2.15234375, "is_bug_line": false, "sus_score": 0.31959, "per_token_entropy": [0.0228729248046875, 1.384765625, 0.7890625, 0.6220703125, 8.1875, 2.775390625, 1.505859375, 1.1396484375, 0.331298828125, 2.5390625, 4.4609375, 0.9990234375, 3.232421875], "tokens": [474, 5656, 2555, 3205, 14861, 11123, 21, 44333, 13984, 36748, 2108, 77, 20959]}
{"line_number": 104, "line_type": "generated", "code": " * exception is thrown,... for String/String, List/List, Set/Set, Map/Map,...", "entropy": 0.78857421875, "is_bug_line": false, "sus_score": 0.31959, "per_token_entropy": [0.02294921875, 1.28125, 0.379150390625, 0.1041259765625, 2.73828125, 1.869140625, 0.380615234375, 1.5888671875, 0.054931640625, 0.302490234375, 3.041015625, 0.0113983154296875, 0.43603515625, 1.99609375, 0.00423431396484375, 0.2088623046875, 0.78515625, 0.01458740234375, 0.06854248046875, 0.330810546875, 0.943359375], "tokens": [474, 2404, 956, 42525, 267, 6259, 393, 1177, 21, 11779, 1241, 21, 12355, 1645, 21, 36624, 2820, 21, 2820, 267, 1616]}
{"line_number": 96, "line_type": "original", "code": " * //Although it is possible to verify a stubbed invocation, usually <b>it's just redundant</b>", "entropy": 2.873046875, "is_bug_line": false, "sus_score": 0.31923, "per_token_entropy": [0.0462646484375, 0.03546142578125, 9.4765625, 0.3525390625, 4.4140625, 1.4619140625, 1.30859375, 3.263671875, 0.69775390625, 0.21240234375, 4.49609375, 1.3251953125, 4.6171875, 8.5, 4.9765625, 5.4140625, 3.6640625, 0.1968994140625, 0.12164306640625], "tokens": [474, 415, 1704, 16940, 4662, 21082, 23133, 381, 16230, 47270, 20707, 267, 19815, 24672, 4649, 2864, 30723, 2487, 17518]}
{"line_number": 96, "line_type": "generated", "code": " * //following throws runtime exception", "entropy": 0.59423828125, "is_bug_line": false, "sus_score": 0.31923, "per_token_entropy": [0.0462646484375, 0.0352783203125, 1.705078125, 1.064453125, 0.5283203125, 0.1868896484375], "tokens": [474, 415, 3615, 27236, 26044, 2404]}
{"line_number": 74, "line_type": "original", "code": " * Once created, mock will remember all interactions. Then you can selectively", "entropy": 2.166015625, "is_bug_line": false, "sus_score": 0.31325, "per_token_entropy": [0.0701904296875, 4.76171875, 4.94140625, 0.0501708984375, 2.529296875, 3.2265625, 3.591796875, 0.1416015625, 0.837890625, 0.96923828125, 2.185546875, 3.978515625, 0.703125, 7.76171875, 0.01387786865234375, 0.73583984375, 0.299072265625], "tokens": [474, 33618, 1554, 1056, 32824, 1226, 269, 13645, 1199, 21946, 1796, 12568, 4690, 1212, 9898, 1435, 95]}
{"line_number": 74, "line_type": "generated", "code": " * Note that you don't need to use verify() everytime you call a mocked method", "entropy": 1.4091796875, "is_bug_line": false, "sus_score": 0.31325, "per_token_entropy": [0.0701904296875, 3.349609375, 3.55078125, 1.1064453125, 1.78515625, 1.3837890625, 0.477294921875, 2.14453125, 1.216796875, 0.59326171875, 2.056640625, 0.5439453125, 0.9453125, 0.420166015625, 1.5029296875], "tokens": [474, 10388, 37819, 3316, 1033, 39314, 307, 8163, 1940, 1112, 5476, 381, 2442, 946, 1224]}
