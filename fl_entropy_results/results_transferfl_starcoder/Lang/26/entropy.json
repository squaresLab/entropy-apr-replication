{"line_number": 1130, "line_type": "original", "code": "            buffer.append(mValue);", "entropy": 2.013671875, "is_bug_line": false, "sus_score": 0.5196709632873535, "per_token_entropy": [6.98828125, 5.84765625, 0.022003173828125, 0.03729248046875, 0.11297607421875, 1.806640625, 1.16015625, 0.1302490234375], "tokens": [1468, 3112, 32, 1689, 26, 95, 882, 293]}
{"line_number": 1130, "line_type": "generated", "code": "\n\n        /**\n         * Constructs an instance of <code>UnpaddedNumberField</code>\n         * with the specified field.\n         * \n         * @param field the field\n         */\n        UnpaddedNumberField(int field) {\n            mField = field;", "entropy": 0.03131103515625, "is_bug_line": false, "sus_score": 0.5196709632873535, "per_token_entropy": [0.74462890625, 0.041168212890625, 0.001697540283203125, 0.0016183853149414062, 0.01491546630859375, 0.1419677734375, 0.0120086669921875, 0.005939483642578125, 0.0078125, 0.0005788803100585938, 0.0001888275146484375, 0.02227783203125, 0.003421783447265625, 0.005199432373046875, 0.004131317138671875, 0.0024433135986328125, 0.00010180473327636719, 0.0171661376953125, 0.0263519287109375, 0.0012149810791015625, 0.1279296875, 0.00466156005859375, 0.0328369140625, 0.0167999267578125, 0.1507568359375, 0.015350341796875, 0.009368896484375, 0.0264434814453125, 0.0006690025329589844, 0.00021314620971679688, 0.0002467632293701172, 0.0022106170654296875, 0.020538330078125, 0.0217742919921875, 0.056610107421875, 0.01178741455078125, 0.0025119781494140625, 0.020843505859375, 2.0265579223632812e-06, 1.7881393432617188e-06, 6.198883056640625e-06, 0.00021088123321533203, 0.0010061264038085938, 0.00011479854583740234, 0.004512786865234375, 0.0007414817810058594, 0.0070037841796875, 0.037872314453125, 0.00025773048400878906, 0.00010228157043457031, 0.0003197193145751953, 0.00011682510375976562], "tokens": [584, 1022, 276, 319, 29799, 600, 1980, 432, 333, 687, 48, 1061, 34294, 1918, 1176, 377, 687, 48, 276, 319, 623, 322, 3191, 1600, 32, 276, 319, 13105, 319, 477, 753, 1600, 322, 1600, 276, 569, 291, 1683, 34294, 1918, 1176, 26, 410, 1600, 27, 301, 324, 345, 1176, 280, 1600, 45]}
{"line_number": 1171, "line_type": "original", "code": "            buffer.append(mValues[calendar.get(mField)]);", "entropy": 1.5107421875, "is_bug_line": false, "sus_score": 0.5196709632873535, "per_token_entropy": [7.6640625, 6.52734375, 0.0040130615234375, 0.02056884765625, 0.9921875, 2.615234375, 1.658203125, 0.1282958984375, 0.51220703125, 0.006008148193359375, 0.004009246826171875, 0.0111236572265625, 2.189453125, 0.0089874267578125, 0.308837890625], "tokens": [1468, 3112, 32, 1689, 26, 95, 3354, 77, 10542, 32, 371, 26, 95, 1176, 36263]}
{"line_number": 1171, "line_type": "generated", "code": "\n     */\n    private static class UnpaddedMonthField implements NumberRule {\n        private final int mField;\n\n        /**\n         * Constructs an instance of <code>UnpadedMonthField</code> with the specified field.\n         * \n         * @param field", "entropy": 0.11004638671875, "is_bug_line": false, "sus_score": 0.5196709632873535, "per_token_entropy": [0.403076171875, 0.11175537109375, 0.02764892578125, 0.01641845703125, 0.005924224853515625, 0.041290283203125, 0.0762939453125, 0.0006818771362304688, 0.009185791015625, 0.03564453125, 0.406982421875, 0.2457275390625, 0.0015954971313476562, 0.0225830078125, 0.242431640625, 1.55859375, 0.4033203125, 0.377197265625, 0.0645751953125, 0.45849609375, 0.050445556640625, 0.203369140625, 0.017913818359375, 0.0029125213623046875, 0.0002282857894897461, 0.0080108642578125, 0.004299163818359375, 0.006256103515625, 0.00069427490234375, 0.00897216796875, 0.0006208419799804688, 0.0002689361572265625, 0.01309967041015625, 0.62060546875, 0.00012409687042236328, 0.11016845703125, 0.006885528564453125, 0.00724029541015625, 0.00017702579498291016, 0.0102081298828125, 0.04437255859375, 0.004161834716796875, 0.0175018310546875, 0.01517486572265625, 0.005161285400390625, 0.015625, 0.00400543212890625, 0.032196044921875, 0.0001264810562133789, 0.0004105567932128906, 0.00015366077423095703, 0.002010345458984375], "tokens": [275, 569, 284, 945, 907, 443, 1683, 34294, 7357, 1176, 4575, 5104, 3842, 301, 291, 945, 1158, 629, 345, 1176, 45, 584, 1022, 276, 319, 29799, 600, 1980, 432, 333, 687, 48, 1061, 98, 2381, 7357, 1176, 377, 687, 48, 623, 322, 3191, 1600, 32, 276, 319, 13105, 319, 477, 753, 1600]}
{"line_number": 822, "line_type": "original", "code": "        return applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();", "entropy": 1.4208984375, "is_bug_line": false, "sus_score": 0.5178773999214172, "per_token_entropy": [3.4609375, 6.2578125, 1.5107421875, 0.003261566162109375, 0.005710601806640625, 4.50390625, 0.013458251953125, 5.03515625, 0.02838134765625, 0.03411865234375, 0.78759765625, 0.0264739990234375, 0.0010013580322265625, 0.791015625, 0.26806640625, 0.01398468017578125], "tokens": [351, 442, 4871, 9154, 26, 85, 30, 537, 21933, 26, 95, 25949, 30947, 3427, 3108, 473]}
{"line_number": 822, "line_type": "generated", "code": "\n        } else {", "entropy": 0.18603515625, "is_bug_line": false, "sus_score": 0.5178773999214172, "per_token_entropy": [0.147705078125, 0.007343292236328125, 0.38671875, 0.202392578125], "tokens": [291, 320, 813, 301]}
{"line_number": 821, "line_type": "original", "code": "        c.setTime(date);", "entropy": 1.8046875, "is_bug_line": false, "sus_score": 0.5104376077651978, "per_token_entropy": [3.626953125, 7.76171875, 0.0888671875, 0.7353515625, 0.2122802734375, 0.20703125, 0.004108428955078125], "tokens": [351, 281, 32, 34500, 26, 770, 293]}
{"line_number": 821, "line_type": "generated", "code": "\n        return buf;\n    }\n\n    /**\n     * <p>Formats a millisecond <code>long</code> value according to the\n     * rules of this formatter.</p>\n     * \n     * @param millis  the millisecond value to format\n    ", "entropy": 0.208984375, "is_bug_line": false, "sus_score": 0.5104376077651978, "per_token_entropy": [0.07958984375, 0.10107421875, 0.83935546875, 0.01055908203125, 0.006237030029296875, 0.0005354881286621094, 0.1376953125, 0.60498046875, 0.004993438720703125, 0.0001615285873413086, 0.245849609375, 5.924701690673828e-05, 0.0038166046142578125, 0.7021484375, 0.4619140625, 0.1341552734375, 0.72900390625, 0.0740966796875, 0.0004229545593261719, 0.00010442733764648438, 0.0305633544921875, 0.0013208389282226562, 3.1948089599609375e-05, 0.0005564689636230469, 0.0142669677734375, 1.9482421875, 0.129638671875, 0.1485595703125, 0.54443359375, 2.3603439331054688e-05, 1.5576171875, 0.51611328125, 0.77587890625, 0.2213134765625, 0.5419921875, 9.071826934814453e-05, 0.0009832382202148438, 0.007297515869140625, 0.0005769729614257812, 0.064697265625, 5.555152893066406e-05, 0.0728759765625, 0.0052337646484375, 0.0186767578125, 0.0082244873046875, 0.009002685546875, 0.055023193359375, 0.00289154052734375, 0.00589752197265625, 0.01499176025390625, 0.0231170654296875, 0.00785064697265625], "tokens": [291, 442, 4845, 45, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 19298, 312, 37003, 3090, 333, 687, 48, 3222, 377, 687, 48, 786, 9267, 372, 322, 275, 319, 7019, 432, 458, 14971, 1730, 98, 48, 275, 319, 5384, 319, 477, 753, 42302, 225, 322, 37003, 3090, 786, 372, 2179, 275]}
{"line_number": 820, "line_type": "original", "code": "        Calendar c = new GregorianCalendar(mTimeZone);", "entropy": 1.048828125, "is_bug_line": true, "sus_score": 0.4984188377857208, "per_token_entropy": [4.69921875, 5.59375, 0.08660888671875, 0.0265960693359375, 1.80859375, 0.0274505615234375, 5.7816505432128906e-05, 7.045269012451172e-05, 0.027923583984375, 0.1044921875, 0.00707244873046875, 0.2042236328125], "tokens": [351, 16600, 281, 280, 537, 570, 33857, 9389, 26, 95, 26223, 293]}
{"line_number": 820, "line_type": "generated", "code": "\n    public StringBuffer format(Calendar calendar, StringBuffer buf) {\n        return applyRules(calendar, buf);\n    }\n\n    /**\n     * <p>Formats an object into the supplied <code>StringBuffer</code>.</p>\n     * \n     * @param obj", "entropy": 0.1004638671875, "is_bug_line": true, "sus_score": 0.4984188377857208, "per_token_entropy": [0.449462890625, 0.197265625, 0.0885009765625, 0.0225982666015625, 0.0006785392761230469, 0.00801849365234375, 0.004299163818359375, 0.00020325183868408203, 0.0026187896728515625, 0.0025882720947265625, 0.002307891845703125, 0.0269622802734375, 0.1973876953125, 0.47900390625, 0.021728515625, 0.0005059242248535156, 0.005695343017578125, 0.0052490234375, 0.0017547607421875, 0.00482177734375, 0.07440185546875, 0.015838623046875, 0.0009355545043945312, 0.1497802734375, 0.498046875, 0.006435394287109375, 0.00012803077697753906, 0.19921875, 7.259845733642578e-05, 0.00493621826171875, 0.658203125, 0.82373046875, 0.311767578125, 0.08099365234375, 0.006439208984375, 0.06463623046875, 0.024444580078125, 8.702278137207031e-06, 2.7418136596679688e-05, 0.0021343231201171875, 0.00012814998626708984, 3.933906555175781e-05, 0.51318359375, 9.179115295410156e-06, 0.002010345458984375, 0.01055145263671875, 0.00025463104248046875, 0.093017578125, 8.487701416015625e-05, 0.147705078125, 0.005130767822265625, 0.00661468505859375], "tokens": [284, 562, 21933, 2179, 26, 9389, 14461, 30, 21933, 4845, 27, 301, 291, 442, 4871, 9154, 26, 10542, 30, 4845, 293, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 19298, 600, 1300, 1991, 322, 13798, 333, 687, 48, 35322, 377, 687, 12689, 98, 48, 275, 319, 5384, 319, 477, 753, 2830]}
{"line_number": 738, "line_type": "original", "code": "                    if (i + 1 < length && pattern.charAt(i + 1) == '\\'') {", "entropy": 1.259765625, "is_bug_line": false, "sus_score": 0.48826083540916443, "per_token_entropy": [9.6953125, 1.6435546875, 0.059112548828125, 8.21875, 5.1484375, 0.1617431640625, 0.1744384765625, 0.43896484375, 1.44140625, 0.7822265625, 0.350830078125, 0.0350341796875, 0.0025043487548828125, 0.0005059242248535156, 0.0042724609375, 0.0238800048828125, 0.0021381378173828125, 0.00033736228942871094, 0.0007872581481933594, 0.021453857421875, 0.65087890625, 0.0020542144775390625, 0.11981201171875], "tokens": [4696, 415, 308, 91, 474, 225, 35, 333, 3104, 962, 5257, 32, 15611, 26, 91, 474, 225, 35, 27, 610, 26271, 683, 301]}
{"line_number": 738, "line_type": "generated", "code": "    public StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition pos) {\n        if (obj instanceof Date) {\n            return format((Date) obj, toAppendTo);\n        } else if (obj instanceof Calendar) {\n            return format((", "entropy": 0.12261962890625, "is_bug_line": false, "sus_score": 0.48826083540916443, "per_token_entropy": [1.8603515625, 0.3447265625, 0.0462646484375, 0.007587432861328125, 0.0080718994140625, 0.09185791015625, 6.520748138427734e-05, 0.0005621910095214844, 0.26220703125, 0.0012540817260742188, 1.2993812561035156e-05, 1.704692840576172e-05, 0.006244659423828125, 0.06622314453125, 0.0002913475036621094, 0.0054168701171875, 0.0035762786865234375, 0.042633056640625, 0.1502685546875, 0.36279296875, 0.06536865234375, 0.006122589111328125, 0.53955078125, 0.08721923828125, 0.2056884765625, 0.0022869110107421875, 0.055389404296875, 1.3701171875, 0.0992431640625, 0.047882080078125, 0.0003972053527832031, 5.936622619628906e-05, 0.05499267578125, 0.0005803108215332031, 0.002849578857421875, 5.364418029785156e-05, 2.5033950805664062e-06, 0.078369140625, 0.0239410400390625, 0.001399993896484375, 0.15625, 0.004955291748046875, 0.0011644363403320312, 0.0001678466796875, 0.001373291015625, 0.06878662109375, 0.0012483596801757812, 0.00025653839111328125, 0.0199127197265625, 0.0156707763671875, 0.0013628005981445312, 0.2015380859375], "tokens": [264, 562, 21933, 2179, 26, 959, 2830, 30, 21933, 372, 6551, 705, 30, 5692, 2731, 3400, 27, 301, 291, 415, 308, 2067, 5113, 2821, 27, 301, 324, 442, 2179, 1162, 1547, 27, 2830, 30, 372, 6551, 705, 293, 291, 320, 813, 415, 308, 2067, 5113, 16600, 27, 301, 324, 442, 2179, 1162]}
{"line_number": 196, "line_type": "original", "code": "        return getInstance(pattern, null, locale);", "entropy": 1.400390625, "is_bug_line": false, "sus_score": 0.48487988114356995, "per_token_entropy": [4.4609375, 5.61328125, 1.1767578125, 0.1343994140625, 1.5732421875, 0.01471710205078125, 0.99853515625, 0.005306243896484375, 0.0156402587890625, 0.00843048095703125], "tokens": [351, 442, 31637, 26, 5607, 30, 744, 30, 11259, 293]}
{"line_number": 196, "line_type": "generated", "code": "\n     */\n    public static FastDateFormat getDateInstance(int style, Locale locale) {\n        return getDateInstance(style, null, locale);\n    }\n\n    /**\n     * <p>Gets a date formatter instance using the specified style, time\n     *", "entropy": 0.088623046875, "is_bug_line": false, "sus_score": 0.48487988114356995, "per_token_entropy": [0.6484375, 0.955078125, 0.00992584228515625, 0.002323150634765625, 0.00036644935607910156, 0.08489990234375, 8.702278137207031e-06, 0.00015366077423095703, 3.4928321838378906e-05, 6.9141387939453125e-06, 0.0001043081283569336, 0.0072174072265625, 0.00029158592224121094, 0.0003139972686767578, 0.004016876220703125, 6.866455078125e-05, 0.0010242462158203125, 0.004791259765625, 0.481201171875, 0.331787109375, 0.1923828125, 0.06292724609375, 0.00013637542724609375, 0.0019121170043945312, 0.00250244140625, 6.103515625e-05, 0.74951171875, 7.998943328857422e-05, 0.0012750625610351562, 0.00579833984375, 0.0230712890625, 0.0001285076141357422, 0.06353759765625, 0.036956787109375, 0.0026721954345703125, 0.00013506412506103516, 0.00356292724609375, 8.344650268554688e-07, 5.2809715270996094e-05, 0.001636505126953125, 0.0021495819091796875, 0.0165557861328125, 0.0052032470703125, 0.001033782958984375, 0.0020313262939453125, 0.00072479248046875, 0.0006837844848632812, 0.0379638671875, 0.52978515625, 0.276611328125, 0.05718994140625, 1.0967254638671875e-05], "tokens": [275, 569, 284, 562, 907, 15938, 15645, 622, 1547, 1810, 26, 410, 1418, 30, 23265, 11259, 27, 301, 291, 442, 622, 1547, 1810, 26, 1621, 30, 744, 30, 11259, 293, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 20931, 312, 2340, 14971, 1980, 1471, 322, 3191, 1418, 30, 1133, 275, 319]}
{"line_number": 645, "line_type": "original", "code": "                rule = new TextField(Calendar.DAY_OF_WEEK, tokenLen < 4 ? shortWeekdays : weekdays);", "entropy": 1.3017578125, "is_bug_line": false, "sus_score": 0.48355263471603394, "per_token_entropy": [6.94140625, 4.8359375, 0.99365234375, 1.50390625, 2.216796875, 0.0135345458984375, 0.033172607421875, 0.09832763671875, 3.06640625, 7.987022399902344e-05, 1.8715858459472656e-05, 3.790855407714844e-05, 0.00470733642578125, 0.0028438568115234375, 8.3046875, 2.67578125, 2.13671875, 0.151611328125, 1.189453125, 0.0467529296875, 0.25, 0.031585693359375, 0.1219482421875, 0.0258331298828125, 0.487060546875, 0.00041961669921875, 0.0190277099609375], "tokens": [2071, 5750, 280, 537, 28563, 26, 9389, 32, 14318, 81, 2109, 81, 39636, 30, 2404, 5745, 333, 225, 38, 1018, 4504, 11070, 6124, 499, 8209, 6124, 293]}
{"line_number": 645, "line_type": "generated", "code": "\n        }\n\n        return rules.toArray(new Rule[rules.size()]);\n    }\n\n    private Rule selectNumberRule(int field, int tokenLen) {\n        if (tokenLen == 1) {\n            return UnpaddedNumberField.INSTANCE;\n       ", "entropy": 0.1710205078125, "is_bug_line": false, "sus_score": 0.48355263471603394, "per_token_entropy": [0.377197265625, 0.007080078125, 0.42529296875, 0.92138671875, 1.2685546875, 0.51513671875, 0.00910186767578125, 0.00972747802734375, 0.108642578125, 0.05975341796875, 0.015533447265625, 0.038116455078125, 0.0003204345703125, 8.463859558105469e-06, 0.00193023681640625, 0.150146484375, 0.00476837158203125, 0.8701171875, 0.7861328125, 0.75830078125, 0.02105712890625, 0.0012912750244140625, 1.7881393432617188e-06, 0.0010862350463867188, 0.159423828125, 0.009490966796875, 0.0007538795471191406, 0.006816864013671875, 0.45751953125, 0.01074981689453125, 0.0013036727905273438, 0.00806427001953125, 0.172119140625, 0.383056640625, 0.0023975372314453125, 0.0064239501953125, 5.0067901611328125e-06, 0.491455078125, 7.998943328857422e-05, 0.269287109375, 0.051788330078125, 0.0006957054138183594, 0.032684326171875, 0.0631103515625, 0.08575439453125, 0.0035228729248046875, 0.0196380615234375, 0.0022735595703125, 5.614757537841797e-05, 0.26416015625, 0.018096923828125, 0.021820068359375], "tokens": [291, 320, 584, 442, 7019, 32, 14320, 26, 890, 13708, 77, 7004, 32, 891, 36642, 284, 320, 446, 945, 13708, 2192, 1918, 3842, 26, 410, 1600, 30, 629, 2404, 5745, 27, 301, 291, 415, 308, 1956, 5745, 610, 225, 35, 27, 301, 324, 442, 1683, 34294, 1918, 1176, 32, 12452, 45, 291]}
{"line_number": 1357, "line_type": "original", "code": "                buffer.append((char)(value % 10 + '0'));", "entropy": 1.0185546875, "is_bug_line": false, "sus_score": 0.48013800382614136, "per_token_entropy": [6.82421875, 6.3515625, 0.0016984939575195312, 0.007160186767578125, 0.4228515625, 0.01031494140625, 0.291259765625, 0.10516357421875, 2.216796875, 0.0057220458984375, 0.005809783935546875, 0.00984954833984375, 0.02166748046875, 0.00839996337890625, 0.0024662017822265625, 0.01922607421875], "tokens": [2071, 3112, 32, 1689, 1162, 1594, 2502, 853, 904, 225, 35, 34, 474, 330, 34, 4646]}
{"line_number": 1357, "line_type": "generated", "code": "\n        /**\n         * Constructs an instance of <code>TwoDigitMonthField</code>.\n         */\n        TwoDigitMonthField() {\n            super();\n        }\n\n        /**\n         * {@inheritDoc}\n         */\n        public int estimateLength() {\n            return 2", "entropy": 0.0465087890625, "is_bug_line": false, "sus_score": 0.48013800382614136, "per_token_entropy": [1.3388671875, 0.537109375, 0.038543701171875, 0.00024962425231933594, 0.24365234375, 0.0018644332885742188, 0.0014448165893554688, 0.00112152099609375, 0.006500244140625, 0.00031375885009765625, 0.00020253658294677734, 0.0017547607421875, 0.00017118453979492188, 0.0291595458984375, 0.002117156982421875, 0.0012865066528320312, 6.818771362304688e-05, 0.00702667236328125, 0.039398193359375, 0.007244110107421875, 0.01216888427734375, 0.006702423095703125, 3.337860107421875e-06, 0.00022351741790771484, 6.794929504394531e-06, 0.0020904541015625, 0.0015916824340820312, 0.0330810546875, 0.0004813671112060547, 0.00021564960479736328, 0.005168914794921875, 0.00015413761138916016, 0.0260009765625, 0.0030803680419921875, 0.0183258056640625, 5.3763389587402344e-05, 0.005764007568359375, 5.137920379638672e-05, 5.650520324707031e-05, 0.00954437255859375, 0.000995635986328125, 0.00127410888671875, 0.0012149810791015625, 0.01275634765625, 0.00031113624572753906, 4.0411949157714844e-05, 0.0002894401550292969, 8.797645568847656e-05, 0.0100250244140625, 0.0008444786071777344, 0.0018711090087890625, 0.00505828857421875], "tokens": [291, 1022, 276, 319, 29799, 600, 1980, 432, 333, 687, 48, 8617, 21530, 7357, 1176, 377, 687, 4503, 276, 569, 291, 16510, 21530, 7357, 1176, 346, 301, 324, 2599, 473, 291, 320, 584, 1022, 276, 319, 3088, 18446, 111, 276, 569, 291, 562, 629, 20772, 2380, 346, 301, 324, 442, 225, 36]}
{"line_number": 1356, "line_type": "original", "code": "                buffer.append((char)(value / 10 + '0'));", "entropy": 0.68896484375, "is_bug_line": false, "sus_score": 0.4788307547569275, "per_token_entropy": [7.93359375, 1.4501953125, 0.0011768341064453125, 0.006275177001953125, 0.43896484375, 0.00823974609375, 0.175537109375, 0.1636962890625, 0.82421875, 0.0016679763793945312, 0.0008220672607421875, 0.0009417533874511719, 0.00608062744140625, 0.004058837890625, 0.0016384124755859375, 0.0054473876953125], "tokens": [2071, 3112, 32, 1689, 1162, 1594, 2502, 853, 517, 225, 35, 34, 474, 330, 34, 4646]}
{"line_number": 1356, "line_type": "generated", "code": "\n        /**\n         * {@inheritDoc}\n         */\n        public int estimateLength() {\n            return 2;\n        }\n\n        /**\n         * {@inheritDoc}\n         */\n        public void appendTo(StringBuffer buffer, Calendar calendar) {\n            appendTo(buffer, calendar", "entropy": 0.044586181640625, "is_bug_line": false, "sus_score": 0.4788307547569275, "per_token_entropy": [0.40966796875, 0.10089111328125, 0.006984710693359375, 0.00024259090423583984, 0.9873046875, 0.0002532005310058594, 6.771087646484375e-05, 0.0012884140014648438, 0.0032939910888671875, 0.004840850830078125, 0.002716064453125, 0.090087890625, 0.00037407875061035156, 6.580352783203125e-05, 0.0013475418090820312, 0.0002655982971191406, 0.01163482666015625, 0.004322052001953125, 0.013916015625, 0.037567138671875, 0.0010538101196289062, 0.0025806427001953125, 0.00023698806762695312, 0.01959228515625, 0.001483917236328125, 0.0011854171752929688, 0.0001666545867919922, 0.0024318695068359375, 4.279613494873047e-05, 0.00013840198516845703, 0.0002875328063964844, 0.0015354156494140625, 0.0013875961303710938, 0.0005359649658203125, 0.018280029296875, 1.7404556274414062e-05, 2.467632293701172e-05, 4.971027374267578e-05, 0.00045013427734375, 0.0002942085266113281, 1.5616416931152344e-05, 0.003871917724609375, 0.0005888938903808594, 9.02414321899414e-05, 0.0003142356872558594, 0.041748046875, 0.51513671875, 0.0007901191711425781, 0.0001176595687866211, 0.0006575584411621094, 7.963180541992188e-05, 0.0251312255859375], "tokens": [291, 1022, 276, 319, 3088, 18446, 111, 276, 569, 291, 562, 629, 20772, 2380, 346, 301, 324, 442, 225, 36, 45, 291, 320, 584, 1022, 276, 319, 3088, 18446, 111, 276, 569, 291, 562, 763, 5489, 705, 26, 35322, 3112, 30, 16600, 14461, 27, 301, 324, 5489, 705, 26, 2668, 30, 14461]}
{"line_number": 1348, "line_type": "original", "code": "            appendTo(buffer, calendar.get(mField));", "entropy": 1.71875, "is_bug_line": false, "sus_score": 0.4788307547569275, "per_token_entropy": [7.265625, 4.48046875, 0.05072021484375, 0.0263519287109375, 0.0660400390625, 0.00787353515625, 0.87841796875, 0.1668701171875, 0.02520751953125, 0.035919189453125, 9.1171875, 0.0275726318359375, 0.193115234375], "tokens": [1468, 5489, 705, 26, 2668, 30, 14461, 32, 371, 26, 95, 1176, 876]}
{"line_number": 1348, "line_type": "generated", "code": "\n    }\n\n    /**\n     * <p>Inner class to handle the week of year.</p>\n     */\n    private static class WeekOfYearField implements NumberRule {\n        static final WeekOfYearField INSTANCE = new WeekOfYearField();\n\n        /**\n         * Constructs an", "entropy": 0.2069091796875, "is_bug_line": false, "sus_score": 0.4788307547569275, "per_token_entropy": [0.1798095703125, 0.0028095245361328125, 0.35546875, 0.052886962890625, 0.007038116455078125, 0.0002434253692626953, 0.04840087890625, 0.0007305145263671875, 0.0019388198852539062, 0.02386474609375, 0.001674652099609375, 0.1439208984375, 1.7021484375, 2.474609375, 0.958984375, 1.1669921875, 0.51708984375, 0.75439453125, 8.320808410644531e-05, 0.00135040283203125, 0.00415802001953125, 0.057525634765625, 0.0007772445678710938, 0.022186279296875, 0.00583648681640625, 0.00975799560546875, 0.00734710693359375, 0.364013671875, 0.11431884765625, 0.056640625, 0.0211334228515625, 0.0003008842468261719, 0.08856201171875, 0.053436279296875, 0.93994140625, 0.00310516357421875, 0.114501953125, 0.0015401840209960938, 0.0024509429931640625, 0.1248779296875, 0.046234130859375, 0.00023484230041503906, 3.325939178466797e-05, 1.1563301086425781e-05, 2.7418136596679688e-06, 0.00439453125, 0.0693359375, 0.0316162109375, 0.0023975372314453125, 0.0001817941665649414, 0.2039794921875, 0.012176513671875], "tokens": [284, 320, 446, 1022, 275, 319, 333, 98, 48, 10893, 443, 372, 2887, 322, 8209, 432, 4947, 1730, 98, 48, 275, 569, 284, 945, 907, 443, 25934, 45945, 1176, 4575, 5104, 3842, 301, 291, 907, 1158, 25934, 45945, 1176, 40000, 280, 537, 25934, 45945, 1176, 473, 584, 1022, 276, 319, 29799, 600]}
{"line_number": 743, "line_type": "original", "code": "                        inLiteral = !inLiteral;", "entropy": 3.9765625, "is_bug_line": false, "sus_score": 0.4683201313018799, "per_token_entropy": [9.5703125, 9.5, 7.61328125, 0.043182373046875, 4.8515625, 0.14794921875, 0.0020084381103515625, 0.0771484375], "tokens": [6797, 328, 8208, 280, 653, 266, 8208, 45]}
{"line_number": 743, "line_type": "generated", "code": "\n        } else if (obj instanceof Long) {\n            return format(((Long) obj).longValue(), toAppendTo);\n        } else {\n            throw new IllegalArgumentException(\"Unknown object: \" + obj);\n        }\n    }\n\n    /**\n     * <p>Formats", "entropy": 0.094970703125, "is_bug_line": false, "sus_score": 0.4683201313018799, "per_token_entropy": [0.29736328125, 0.00485992431640625, 0.0166015625, 0.06048583984375, 0.0028629302978515625, 0.00232696533203125, 0.016387939453125, 0.0085601806640625, 0.047332763671875, 0.0004544258117675781, 0.294677734375, 0.499755859375, 0.0070037841796875, 0.045562744140625, 0.00201416015625, 0.00015878677368164062, 0.0198822021484375, 0.00392913818359375, 0.000133514404296875, 0.0025005340576171875, 0.0007910728454589844, 1.1682510375976562e-05, 9.02414321899414e-05, 0.004085540771484375, 0.022430419921875, 0.0002570152282714844, 0.1676025390625, 0.1435546875, 0.06927490234375, 0.0833740234375, 0.00228118896484375, 0.12249755859375, 0.2373046875, 0.31884765625, 1.23828125, 0.4736328125, 0.0005207061767578125, 0.0098114013671875, 0.225830078125, 0.07855224609375, 0.00711822509765625, 0.0005254745483398438, 0.09423828125, 0.000946044921875, 0.12445068359375, 0.092529296875, 0.0018987655639648438, 0.00012028217315673828, 0.06378173828125, 1.3232231140136719e-05, 0.0012378692626953125, 0.0192718505859375], "tokens": [291, 320, 813, 415, 308, 2067, 5113, 6359, 27, 301, 324, 442, 2179, 7728, 3952, 27, 2830, 547, 41976, 1026, 372, 6551, 705, 293, 291, 320, 813, 301, 324, 1422, 537, 12137, 440, 5842, 1300, 44, 313, 474, 2830, 293, 291, 320, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 19298]}
{"line_number": 654, "line_type": "original", "code": "                rule = selectNumberRule(Calendar.WEEK_OF_YEAR, tokenLen);", "entropy": 1.18359375, "is_bug_line": false, "sus_score": 0.4659731984138489, "per_token_entropy": [7.0625, 7.74609375, 1.02734375, 1.9619140625, 0.054351806640625, 0.00923919677734375, 0.0085601806640625, 0.051788330078125, 0.026611328125, 3.09375, 0.00012958049774169922, 0.051971435546875, 4.601478576660156e-05, 0.1552734375, 0.005268096923828125, 0.0250701904296875, 0.009918212890625, 0.01407623291015625], "tokens": [2071, 5750, 280, 2192, 1918, 3842, 26, 9389, 32, 39636, 81, 2109, 81, 23164, 30, 2404, 5745, 293]}
{"line_number": 654, "line_type": "generated", "code": "\n     * @param parsePosition  the parse position\n     * @return the parsed date\n     * @throws IllegalArgumentException if the date pattern is invalid\n     */\n    public Date parse(String pattern, ParsePosition parsePosition) {\n        int offset = parsePosition.getIndex", "entropy": 0.36083984375, "is_bug_line": false, "sus_score": 0.4659731984138489, "per_token_entropy": [0.365478515625, 0.19091796875, 0.0180816650390625, 0.6767578125, 1.6962890625, 0.9326171875, 0.261474609375, 0.11749267578125, 0.896484375, 0.0015354156494140625, 0.55029296875, 0.0078125, 0.0228118896484375, 0.2171630859375, 0.1029052734375, 0.363037109375, 0.55322265625, 1.134765625, 0.04339599609375, 0.0034198760986328125, 0.1446533203125, 0.52734375, 0.036956787109375, 0.58837890625, 1.0478515625, 0.89453125, 0.14501953125, 0.00196075439453125, 0.08331298828125, 0.348876953125, 0.0166015625, 0.83935546875, 0.4326171875, 0.026763916015625, 0.0333251953125, 0.333251953125, 0.017364501953125, 0.060150146484375, 0.041107177734375, 4.887580871582031e-06, 0.07733154296875, 0.0014257431030273438, 0.0027790069580078125, 0.017303466796875, 0.11175537109375, 2.046875, 2.6875, 0.0262908935546875, 0.01009368896484375, 9.584426879882812e-05, 0.0001646280288696289, 0.0109100341796875], "tokens": [275, 319, 477, 753, 3185, 2731, 225, 322, 3185, 2747, 275, 319, 477, 601, 322, 8436, 2340, 275, 319, 477, 5117, 12137, 415, 322, 2340, 5257, 438, 5535, 275, 569, 284, 562, 2821, 3185, 26, 652, 5257, 30, 8661, 2731, 3185, 2731, 27, 301, 291, 629, 3401, 280, 3185, 2731, 32, 27829]}
{"line_number": 655, "line_type": "original", "code": "                break;", "entropy": 5.37890625, "is_bug_line": false, "sus_score": 0.45240694284439087, "per_token_entropy": [7.890625, 8.234375, 0.01306915283203125], "tokens": [2071, 1626, 45]}
{"line_number": 655, "line_type": "generated", "code": "\n     * @return the parsed pattern\n     * @throws IllegalArgumentException if the pattern is invalid\n     */\n    private String parsePattern(String pattern, int[] indexRef) {\n        StringBuffer buf = new StringBuffer();\n        int index = 0;\n        int patternLength", "entropy": 0.3564453125, "is_bug_line": false, "sus_score": 0.45240694284439087, "per_token_entropy": [0.44287109375, 0.418701171875, 0.033935546875, 0.48291015625, 0.6328125, 0.50390625, 2.275390625, 0.450927734375, 0.576171875, 0.0080413818359375, 0.09124755859375, 0.18505859375, 0.0428466796875, 0.373291015625, 0.1455078125, 0.040313720703125, 0.0211334228515625, 0.052093505859375, 0.09466552734375, 0.01629638671875, 0.669921875, 1.53515625, 0.46337890625, 0.6943359375, 0.01129913330078125, 0.232177734375, 0.0011844635009765625, 0.048797607421875, 1.9873046875, 0.03448486328125, 0.0025768280029296875, 0.0304718017578125, 0.01226806640625, 0.0288848876953125, 0.1673583984375, 1.0283203125, 0.300537109375, 0.0011281967163085938, 0.003345489501953125, 9.763240814208984e-05, 0.2386474609375, 0.28173828125, 0.2462158203125, 1.689453125, 0.006000518798828125, 0.55859375, 0.00014591217041015625, 0.04510498046875, 0.368408203125, 0.2442626953125, 0.5751953125, 0.1419677734375], "tokens": [275, 319, 477, 601, 322, 8436, 5257, 275, 319, 477, 5117, 12137, 415, 322, 5257, 438, 5535, 275, 569, 284, 945, 892, 3185, 5516, 26, 652, 5257, 30, 629, 1178, 1650, 2084, 27, 301, 291, 21933, 4845, 280, 537, 21933, 473, 291, 629, 1650, 280, 225, 34, 45, 291, 629, 5257, 2380]}
{"line_number": 891, "line_type": "original", "code": "            rules[i].appendTo(buf, calendar);", "entropy": 2.630859375, "is_bug_line": false, "sus_score": 0.45161181688308716, "per_token_entropy": [8.3984375, 10.9453125, 1.921875, 0.67138671875, 0.362060546875, 4.47265625, 0.052459716796875, 0.16748046875, 0.52490234375, 0.8046875, 0.6103515625], "tokens": [1468, 7019, 77, 91, 997, 30716, 26, 1954, 30, 14461, 293]}
{"line_number": 891, "line_type": "generated", "code": "\n     * \n     * @return true, if calendar zone overrides formatter zone\n     * @since 2.1\n     */\n    public boolean getTimeZoneOverridesCalendar() {\n        return mTimeZoneForced;\n    }\n\n    /**\n     * <p>Gets the locale", "entropy": 0.1744384765625, "is_bug_line": false, "sus_score": 0.45161181688308716, "per_token_entropy": [0.1517333984375, 0.2705078125, 0.392578125, 0.0003635883331298828, 0.0305938720703125, 0.03369140625, 1.234375, 0.734375, 0.314697265625, 0.56787109375, 1.298828125, 0.0369873046875, 0.357666015625, 0.0271453857421875, 0.0246734619140625, 0.81787109375, 0.038238525390625, 0.1856689453125, 0.004093170166015625, 0.02447509765625, 3.0517578125e-05, 0.3271484375, 0.0269775390625, 0.01334381103515625, 0.007457733154296875, 0.00571441650390625, 0.0015869140625, 0.01020050048828125, 8.0108642578125e-05, 0.02850341796875, 0.000881195068359375, 0.0008869171142578125, 0.0017652511596679688, 0.0491943359375, 0.002471923828125, 0.007099151611328125, 0.0156097412109375, 0.43408203125, 9.489059448242188e-05, 0.001323699951171875, 0.007472991943359375, 0.00033783912658691406, 0.309814453125, 0.1826171875, 0.002834320068359375, 7.76052474975586e-05, 0.054412841796875, 3.147125244140625e-05, 0.00109100341796875, 0.51025390625, 0.11529541015625, 0.4033203125], "tokens": [275, 319, 5384, 319, 477, 601, 861, 30, 415, 14461, 10790, 20006, 14971, 10790, 275, 319, 477, 8119, 225, 36, 32, 35, 275, 569, 284, 562, 1905, 622, 26223, 25936, 9389, 346, 301, 291, 442, 345, 26223, 1562, 3870, 45, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 20931, 322, 11259]}
{"line_number": 1355, "line_type": "original", "code": "            if (value < 100) {", "entropy": 1.0791015625, "is_bug_line": false, "sus_score": 0.44934675097465515, "per_token_entropy": [5.44140625, 1.9482421875, 0.0692138671875, 0.693359375, 0.3193359375, 0.01502227783203125, 0.1441650390625, 0.032745361328125, 2.96875, 0.166748046875, 0.06658935546875], "tokens": [1468, 415, 308, 853, 333, 225, 35, 34, 34, 27, 301]}
{"line_number": 1355, "line_type": "generated", "code": "\n        /**\n         * Constructs an instance of <code>TwoDigitMonthField</code>.\n         */\n        TwoDigitMonthField() {\n            super();\n        }\n\n        /**\n         * {@inheritDoc}\n         */\n        public int estimateLength() {\n            return 2", "entropy": 0.029998779296875, "is_bug_line": false, "sus_score": 0.44934675097465515, "per_token_entropy": [0.453369140625, 0.27392578125, 0.0128021240234375, 0.0002193450927734375, 0.6005859375, 0.0023326873779296875, 0.0015115737915039062, 0.00177001953125, 0.005023956298828125, 0.00015270709991455078, 0.00010943412780761719, 0.0010662078857421875, 0.00017845630645751953, 0.0364990234375, 0.0018033981323242188, 0.00146484375, 5.14984130859375e-05, 0.00798797607421875, 0.00684356689453125, 0.00472259521484375, 0.005340576171875, 0.00685882568359375, 5.245208740234375e-06, 0.0007309913635253906, 1.1801719665527344e-05, 0.0029163360595703125, 0.0013589859008789062, 0.026947021484375, 0.0006251335144042969, 0.00021541118621826172, 0.004581451416015625, 0.00017571449279785156, 0.04644775390625, 0.0033740997314453125, 0.0012264251708984375, 0.00018417835235595703, 0.007038116455078125, 2.8848648071289062e-05, 3.910064697265625e-05, 0.0005669593811035156, 0.0011568069458007812, 0.0009102821350097656, 0.0010881423950195312, 0.01512908935546875, 0.0002460479736328125, 6.020069122314453e-05, 0.00030612945556640625, 8.308887481689453e-05, 0.0059051513671875, 0.0020313262939453125, 0.005970001220703125, 0.005229949951171875], "tokens": [291, 1022, 276, 319, 29799, 600, 1980, 432, 333, 687, 48, 8617, 21530, 7357, 1176, 377, 687, 4503, 276, 569, 291, 16510, 21530, 7357, 1176, 346, 301, 324, 2599, 473, 291, 320, 584, 1022, 276, 319, 3088, 18446, 111, 276, 569, 291, 562, 629, 20772, 2380, 346, 301, 324, 442, 225, 36]}
{"line_number": 687, "line_type": "original", "code": "                    rule = new StringLiteral(sub);", "entropy": 3.431640625, "is_bug_line": false, "sus_score": 0.44758594036102295, "per_token_entropy": [8.6484375, 10.125, 0.439697265625, 0.61328125, 4.58984375, 0.1634521484375, 0.21337890625, 5.6953125, 0.40478515625], "tokens": [4696, 5750, 280, 537, 892, 8208, 26, 1113, 293]}
{"line_number": 687, "line_type": "generated", "code": "\n            }\n\n            buf.append('\\'');\n        }\n\n        indexRef[0] = i;\n\n        return buf.toString();\n    }\n\n    /**\n     * <p>\n     * Returns a {@link NumberRule} that parses a number of the specified field", "entropy": 0.332275390625, "is_bug_line": false, "sus_score": 0.44758594036102295, "per_token_entropy": [0.76416015625, 0.007678985595703125, 0.4287109375, 1.4052734375, 8.082389831542969e-05, 0.00225067138671875, 0.00315093994140625, 2.384185791015625e-06, 0.0001436471939086914, 0.2230224609375, 0.00033664703369140625, 0.03277587890625, 0.07977294921875, 1.4901161193847656e-05, 8.344650268554688e-07, 5.424022674560547e-05, 0.00032782554626464844, 0.0003814697265625, 0.01788330078125, 0.389892578125, 0.385986328125, 0.01340484619140625, 0.0013856887817382812, 2.682209014892578e-05, 0.0003199577331542969, 0.00920867919921875, 0.024658203125, 0.000789642333984375, 0.375732421875, 0.1702880859375, 0.0088348388671875, 0.00024366378784179688, 0.1024169921875, 0.00011074542999267578, 0.0004336833953857422, 1.513671875, 8.606910705566406e-05, 1.8544921875, 0.830078125, 1.861328125, 0.382080078125, 0.302490234375, 0.01001739501953125, 0.0034580230712890625, 1.416015625, 1.1845703125, 0.4619140625, 0.85302734375, 0.94921875, 0.438232421875, 0.26611328125, 0.5107421875], "tokens": [324, 320, 1064, 4845, 32, 1689, 463, 6945, 895, 291, 320, 584, 1650, 2084, 77, 34, 79, 280, 595, 45, 584, 442, 4845, 32, 3108, 473, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 275, 319, 3759, 312, 3088, 1204, 5104, 3842, 111, 688, 35228, 312, 1451, 432, 322, 3191, 1600]}
{"line_number": 1123, "line_type": "original", "code": "            return mValue.length();", "entropy": 2.91796875, "is_bug_line": false, "sus_score": 0.44337767362594604, "per_token_entropy": [7.26953125, 4.4921875, 2.95703125, 2.380859375, 2.8046875, 0.401123046875, 0.11212158203125], "tokens": [1468, 442, 345, 882, 32, 1322, 473]}
{"line_number": 1123, "line_type": "generated", "code": "\n    }", "entropy": 0.10076904296875, "is_bug_line": false, "sus_score": 0.44337767362594604, "per_token_entropy": [0.19873046875, 0.0028533935546875], "tokens": [284, 320]}
{"line_number": 771, "line_type": "original", "code": "            return new TwoDigitNumberField(field);", "entropy": 4.0859375, "is_bug_line": false, "sus_score": 0.43831586837768555, "per_token_entropy": [6.19921875, 1.4521484375, 3.78125, 12.0078125, 0.52685546875, 7.609375, 0.1949462890625, 0.47119140625, 3.001953125, 5.64453125], "tokens": [1468, 442, 537, 16510, 21530, 1918, 1176, 26, 1495, 293]}
{"line_number": 771, "line_type": "generated", "code": "\n        return format(c, date);\n    }\n\n    /**\n     * <p>Formats a <code>Calendar</code> object.</p>\n     * \n     * @param cal  the calendar to format\n     * @return the formatted string\n     */\n   ", "entropy": 0.07427978515625, "is_bug_line": false, "sus_score": 0.43831586837768555, "per_token_entropy": [0.310302734375, 0.71337890625, 0.79931640625, 0.0072784423828125, 0.106689453125, 0.4658203125, 0.359130859375, 0.0380859375, 0.00673675537109375, 4.9948692321777344e-05, 0.0601806640625, 0.012451171875, 0.0005831718444824219, 0.00013446807861328125, 0.0220947265625, 1.5616416931152344e-05, 0.00042939186096191406, 0.004547119140625, 0.0015459060668945312, 0.0233154296875, 5.91278076171875e-05, 4.2438507080078125e-05, 0.037261962890625, 9.930133819580078e-05, 2.384185791015625e-07, 0.0014219284057617188, 0.0010852813720703125, 0.03265380859375, 3.9458274841308594e-05, 0.00019550323486328125, 0.0017385482788085938, 5.9485435485839844e-05, 0.01194000244140625, 4.7326087951660156e-05, 0.0029697418212890625, 0.0004241466522216797, 0.607421875, 0.0043182373046875, 0.003559112548828125, 0.0203857421875, 0.00606536865234375, 0.005298614501953125, 0.004238128662109375, 1.9550323486328125e-05, 8.165836334228516e-05, 0.1251220703125, 0.002079010009765625, 0.0008225440979003906, 0.002490997314453125, 0.0008330345153808594, 0.05328369140625, 0.0025920867919921875], "tokens": [291, 442, 2179, 26, 85, 30, 2340, 293, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 19298, 312, 333, 687, 48, 9389, 377, 687, 48, 1300, 1730, 98, 48, 275, 319, 5384, 319, 477, 753, 2182, 225, 322, 14461, 372, 2179, 275, 319, 477, 601, 322, 14186, 802, 275, 569, 284]}
{"line_number": 646, "line_type": "original", "code": "                break;", "entropy": 3.626953125, "is_bug_line": false, "sus_score": 0.4317967891693115, "per_token_entropy": [7.48046875, 3.392578125, 0.01180267333984375], "tokens": [2071, 1626, 45]}
{"line_number": 646, "line_type": "generated", "code": "\n        return rules.toArray(new Rule[rules.size()]);\n    }\n\n    private static Rule selectNumberRule(int field, int tokenLen) {\n        if (tokenLen == 1) {\n            return UnpaddedNumberField.INSTANCE;\n        }", "entropy": 0.179931640625, "is_bug_line": false, "sus_score": 0.4317967891693115, "per_token_entropy": [0.5458984375, 0.94287109375, 1.0673828125, 0.5849609375, 0.0106048583984375, 0.00887298583984375, 0.14306640625, 0.054656982421875, 0.0159759521484375, 0.031585693359375, 0.0004286766052246094, 9.417533874511719e-06, 0.001247406005859375, 0.061248779296875, 0.002841949462890625, 0.7998046875, 0.779296875, 1.5986328125, 0.437255859375, 0.00988006591796875, 0.0006260871887207031, 1.9073486328125e-06, 0.0008807182312011719, 0.1617431640625, 0.009307861328125, 0.0005769729614257812, 0.0055694580078125, 0.490966796875, 0.0079345703125, 0.0012922286987304688, 0.0059356689453125, 0.0948486328125, 0.467041015625, 0.0018415451049804688, 0.005092620849609375, 3.2186508178710938e-06, 0.30712890625, 7.164478302001953e-05, 0.09857177734375, 0.048065185546875, 0.0007658004760742188, 0.018218994140625, 0.06268310546875, 0.0843505859375, 0.0035457611083984375, 0.0265655517578125, 0.002410888671875, 5.507469177246094e-05, 0.3173828125, 0.021270751953125, 0.016387939453125, 0.00017368793487548828], "tokens": [291, 442, 7019, 32, 14320, 26, 890, 13708, 77, 7004, 32, 891, 36642, 284, 320, 446, 945, 907, 13708, 2192, 1918, 3842, 26, 410, 1600, 30, 629, 2404, 5745, 27, 301, 291, 415, 308, 1956, 5745, 610, 225, 35, 27, 301, 324, 442, 1683, 34294, 1918, 1176, 32, 12452, 45, 291, 320]}
{"line_number": 1158, "line_type": "original", "code": "            for (int i=mValues.length; --i >= 0; ) {", "entropy": 1.517578125, "is_bug_line": false, "sus_score": 0.429088294506073, "per_token_entropy": [7.61328125, 6.66015625, 0.044219970703125, 0.10321044921875, 0.09844970703125, 2.2265625, 2.763671875, 5.01953125, 0.0225677490234375, 0.00135040283203125, 1.396484375, 0.100341796875, 0.000850677490234375, 1.177734375, 0.05084228515625, 0.004608154296875, 1.455078125, 0.03753662109375, 0.051422119140625], "tokens": [1468, 436, 308, 410, 595, 47, 95, 3354, 32, 1322, 45, 769, 91, 2377, 225, 34, 45, 829, 301]}
{"line_number": 1158, "line_type": "generated", "code": "\n                buffer.append(value);\n            }\n        }\n    }\n\n    /**\n     * <p>Inner class to output a padded number.</p>\n     */\n    private static class PaddedNumberField implements NumberRule {\n        private final int mField;\n       ", "entropy": 0.14697265625, "is_bug_line": false, "sus_score": 0.429088294506073, "per_token_entropy": [1.3427734375, 0.3525390625, 0.0005769729614257812, 0.0057525634765625, 0.59912109375, 1.6787109375, 0.439697265625, 0.269287109375, 0.0634765625, 0.19677734375, 0.003414154052734375, 0.88720703125, 0.0135040283203125, 0.2232666015625, 0.03485107421875, 0.0034656524658203125, 0.0004324913024902344, 0.0196533203125, 0.0014219284057617188, 0.0007090568542480469, 0.01306915283203125, 0.002696990966796875, 0.01421356201171875, 0.070556640625, 0.17041015625, 0.599609375, 0.0670166015625, 0.043792724609375, 0.00027751922607421875, 0.0005736351013183594, 0.0014200210571289062, 0.0236358642578125, 0.0014286041259765625, 0.005352020263671875, 0.003002166748046875, 0.01421356201171875, 0.019683837890625, 5.4836273193359375e-06, 0.001956939697265625, 0.003932952880859375, 0.12420654296875, 0.0220947265625, 0.00019621849060058594, 0.00799560546875, 0.008087158203125, 0.006072998046875, 0.016632080078125, 0.0194244384765625, 0.0019702911376953125, 0.0197906494140625, 0.0032444000244140625, 0.219482421875], "tokens": [400, 3112, 32, 1689, 26, 853, 293, 324, 320, 291, 320, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 10893, 443, 372, 1688, 312, 35966, 1451, 1730, 98, 48, 275, 569, 284, 945, 907, 443, 447, 11043, 1918, 1176, 4575, 5104, 3842, 301, 291, 945, 1158, 629, 345, 1176, 45, 291]}
