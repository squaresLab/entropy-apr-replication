{"line_number": 400, "line_type": "original", "code": "        return reflectionHashCode(17, 37, object, false, null, null);", "entropy": 0.77294921875, "is_bug_line": false, "sus_score": 0.5314067006111145, "per_token_entropy": [4.0, 6.984375, 2.578125, 0.0026760101318359375, 0.03955078125, 0.422607421875, 0.0019741058349609375, 0.00039458274841308594, 0.0029201507568359375, 0.00019419193267822266, 0.0006842613220214844, 0.001377105712890625, 0.033233642578125, 0.0305328369140625, 0.94873046875, 0.0059356689453125, 0.040283203125, 0.19677734375, 0.1595458984375, 0.00728607177734375], "tokens": [351, 442, 26158, 14947, 26, 35, 41, 30, 225, 37, 41, 30, 1300, 30, 901, 30, 744, 30, 744, 293]}
{"line_number": 400, "line_type": "generated", "code": "\n     * throw a security exception if run under a security manager, if the permissions are not set up correctly. It is\n     * also not as efficient as testing explicitly.\n     * </p>\n     * \n     * <p>\n     * If the TestTrans", "entropy": 0.049530029296875, "is_bug_line": false, "sus_score": 0.5314067006111145, "per_token_entropy": [1.337890625, 0.04833984375, 0.0394287109375, 0.0029144287109375, 0.0022411346435546875, 0.0003528594970703125, 0.001956939697265625, 0.0017309188842773438, 0.0009670257568359375, 0.002658843994140625, 0.0011072158813476562, 0.000995635986328125, 0.0018815994262695312, 0.0020008087158203125, 0.00399017333984375, 0.0115814208984375, 6.365776062011719e-05, 0.000835418701171875, 0.00710296630859375, 0.0001634359359741211, 0.00485992431640625, 0.00504302978515625, 0.024688720703125, 0.008056640625, 0.057952880859375, 0.0001246929168701172, 0.0005235671997070312, 0.00010132789611816406, 0.0007176399230957031, 0.00096893310546875, 0.00014793872833251953, 2.944469451904297e-05, 5.7697296142578125e-05, 0.00119781494140625, 0.01458740234375, 0.003078460693359375, 0.0087127685546875, 0.0003612041473388672, 0.0007224082946777344, 0.00879669189453125, 0.00011169910430908203, 0.00672149658203125, 8.988380432128906e-05, 0.0192413330078125, 0.28564453125, 0.00057220458984375, 0.004192352294921875, 0.0002186298370361328, 0.61279296875, 0.0012159347534179688, 0.035430908203125, 0.00116729736328125], "tokens": [275, 319, 1422, 312, 7663, 3756, 415, 1420, 1531, 312, 7663, 7884, 30, 415, 322, 4227, 884, 646, 739, 973, 8464, 32, 2030, 438, 275, 319, 2329, 646, 619, 17457, 619, 6325, 13413, 32, 275, 319, 576, 98, 48, 275, 319, 5384, 319, 333, 98, 48, 275, 319, 1670, 322, 2108, 1776]}
{"line_number": 174, "line_type": "original", "code": "            return;", "entropy": 5.21484375, "is_bug_line": false, "sus_score": 0.4269249439239502, "per_token_entropy": [6.28125, 2.849609375, 6.51953125], "tokens": [1468, 442, 45]}
{"line_number": 174, "line_type": "generated", "code": "\n     */\n    public static int reflectionHashCode(final Object object, final boolean testTransients) {\n        if (object == null) {\n            return 0;\n        }\n        // if the testTransients flag is set to true, then we need to", "entropy": 0.26708984375, "is_bug_line": false, "sus_score": 0.4269249439239502, "per_token_entropy": [0.7138671875, 1.3154296875, 0.08575439453125, 0.72314453125, 0.304443359375, 0.020965576171875, 0.0027675628662109375, 0.00417327880859375, 0.009429931640625, 0.60009765625, 0.521484375, 0.06597900390625, 0.15576171875, 0.072021484375, 0.037567138671875, 0.08074951171875, 0.00711822509765625, 5.9604644775390625e-06, 0.245361328125, 0.0821533203125, 0.1724853515625, 0.8701171875, 0.00885009765625, 0.0740966796875, 0.0004565715789794922, 0.00014257431030273438, 0.0005974769592285156, 0.004627227783203125, 0.047515869140625, 0.00848388671875, 0.047210693359375, 0.0002512931823730469, 0.0013294219970703125, 0.006534576416015625, 7.867813110351562e-05, 0.366455078125, 0.8515625, 1.810546875, 0.49755859375, 0.0301513671875, 0.0227203369140625, 1.7642974853515625e-05, 0.448974609375, 0.0005402565002441406, 0.00470733642578125, 0.2568359375, 0.55029296875, 0.00075531005859375, 0.93359375, 1.6103515625, 0.09539794921875, 0.112548828125], "tokens": [275, 569, 284, 562, 907, 629, 26158, 14947, 26, 3220, 2194, 1300, 30, 1158, 1905, 894, 1776, 9092, 27, 301, 291, 415, 308, 1473, 610, 744, 27, 301, 324, 442, 225, 34, 45, 291, 320, 291, 434, 415, 322, 894, 1776, 9092, 4655, 438, 739, 372, 861, 30, 1615, 996, 1849, 372]}
{"line_number": 196, "line_type": "original", "code": "            unregister(object);", "entropy": 4.09375, "is_bug_line": false, "sus_score": 0.41166847944259644, "per_token_entropy": [7.01953125, 13.1953125, 0.1168212890625, 0.1025390625, 0.0280914306640625], "tokens": [1468, 40610, 26, 1473, 293]}
{"line_number": 196, "line_type": "generated", "code": "\n     * <p>\n     * Two randomly chosen, non-zero, odd numbers must be passed in. Ideally these should be different for each class,\n     * however this is not vital. Prime numbers are preferred, especially for the multiplier.\n    ", "entropy": 0.060699462890625, "is_bug_line": false, "sus_score": 0.41166847944259644, "per_token_entropy": [0.442626953125, 0.174560546875, 0.71533203125, 0.03814697265625, 0.00048351287841796875, 0.00911712646484375, 0.00012958049774169922, 1.7421875, 2.3365020751953125e-05, 1.2516975402832031e-05, 0.0004911422729492188, 0.0004754066467285156, 1.33514404296875e-05, 7.164478302001953e-05, 4.4465065002441406e-05, 5.9604644775390625e-06, 4.971027374267578e-05, 9.548664093017578e-05, 0.0001316070556640625, 5.412101745605469e-05, 6.4849853515625e-05, 0.0019054412841796875, 0.0032100677490234375, 3.5762786865234375e-07, 5.614757537841797e-05, 4.208087921142578e-05, 7.033348083496094e-05, 6.73532485961914e-05, 0.00042247772216796875, 8.308887481689453e-05, 0.0005960464477539062, 0.0005898475646972656, 0.002285003662109375, 3.4689903259277344e-05, 9.071826934814453e-05, 3.600120544433594e-05, 1.4901161193847656e-05, 3.314018249511719e-05, 8.630752563476562e-05, 1.1920928955078125e-07, 0.0002295970916748047, 0.002658843994140625, 4.4465065002441406e-05, 7.355213165283203e-05, 7.82012939453125e-05, 0.0017995834350585938, 0.00040149688720703125, 1.7404556274414062e-05, 6.341934204101562e-05, 0.0004520416259765625, 0.0012073516845703125, 0.0154571533203125], "tokens": [275, 319, 333, 98, 48, 275, 319, 16510, 26184, 16825, 30, 2979, 31, 6158, 30, 17859, 7515, 2298, 526, 5403, 328, 32, 25188, 1247, 3282, 1395, 526, 3449, 436, 2504, 443, 30, 275, 319, 11510, 458, 438, 646, 354, 4704, 32, 47302, 7515, 884, 16312, 30, 17587, 436, 322, 30266, 32, 275]}
{"line_number": 538, "line_type": "original", "code": "        getRegistry().remove(new IDKey(value));", "entropy": 1.8779296875, "is_bug_line": true, "sus_score": 0.37081998586654663, "per_token_entropy": [2.51171875, 7.70703125, 0.0243072509765625, 0.01000213623046875, 5.66796875, 0.08837890625, 0.78466796875, 0.2044677734375, 0.0014505386352539062, 0.0286407470703125, 5.4765625, 0.03240966796875], "tokens": [351, 622, 5378, 922, 2546, 26, 890, 2484, 953, 26, 853, 876]}
{"line_number": 538, "line_type": "generated", "code": "\n        iConstant = multiplierNonZeroOddNumber;\n        iTotal = initialNonZeroOddNumber;\n    }\n\n    /**\n     * <p>\n     * Append a <code>hashCode</code> for a <code>boolean</code>.\n     * </", "entropy": 0.05145263671875, "is_bug_line": true, "sus_score": 0.37081998586654663, "per_token_entropy": [0.52978515625, 0.169921875, 0.35791015625, 0.0003962516784667969, 0.10467529296875, 0.0014200210571289062, 3.314018249511719e-05, 6.92605972290039e-05, 3.337860107421875e-06, 0.0011281967163085938, 0.046905517578125, 0.004085540771484375, 2.193450927734375e-05, 2.6702880859375e-05, 0.0016241073608398438, 1.0728836059570312e-06, 1.4424324035644531e-05, 1.3113021850585938e-06, 2.2649765014648438e-06, 0.001430511474609375, 0.0289459228515625, 0.00022733211517333984, 0.11328125, 0.11907958984375, 0.0018091201782226562, 2.2172927856445312e-05, 0.0161590576171875, 0.00010514259338378906, 0.00025391578674316406, 0.0003008842468261719, 3.933906555175781e-06, 0.4775390625, 0.1707763671875, 0.23486328125, 4.482269287109375e-05, 5.960464477539062e-07, 0.0035648345947265625, 0.0010137557983398438, 2.86102294921875e-06, 0.0002703666687011719, 0.00891876220703125, 0.00130462646484375, 0.00814056396484375, 1.430511474609375e-06, 1.1920928955078125e-06, 0.246337890625, 0.0007638931274414062, 1.4901161193847656e-05, 0.0156707763671875, 0.0021991729736328125, 0.0002524852752685547, 0.0037746429443359375], "tokens": [291, 595, 5465, 280, 30266, 3910, 8039, 40324, 1918, 45, 291, 595, 4754, 280, 2815, 3910, 8039, 40324, 1918, 45, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 275, 319, 20593, 312, 333, 687, 48, 14948, 377, 687, 48, 436, 312, 333, 687, 48, 4398, 377, 687, 4503, 275, 319, 576]}
{"line_number": 152, "line_type": "original", "code": "        return getRegistry().contains(new IDKey(value));", "entropy": 1.263671875, "is_bug_line": true, "sus_score": 0.3614775836467743, "per_token_entropy": [5.26171875, 3.109375, 3.95703125, 0.548828125, 0.2001953125, 2.28515625, 0.0185394287109375, 0.21728515625, 0.037109375, 0.00046563148498535156, 0.0259246826171875, 0.6591796875, 0.10693359375], "tokens": [351, 442, 622, 5378, 922, 4752, 26, 890, 2484, 953, 26, 853, 876]}
{"line_number": 152, "line_type": "generated", "code": "\n     * </p>\n     * \n     * @param object\n     *            the object to append details of\n     * @param builder\n     *            the builder to append to\n     * @param useTransients\n     *            whether to use transient fields\n     * @", "entropy": 0.09954833984375, "is_bug_line": true, "sus_score": 0.3614775836467743, "per_token_entropy": [0.84716796875, 0.0251007080078125, 1.1083984375, 0.0006723403930664062, 0.004016876220703125, 0.128173828125, 0.019866943359375, 0.0872802734375, 0.0011835098266601562, 0.10992431640625, 0.056793212890625, 0.2359619140625, 0.040069580078125, 0.026123046875, 0.052764892578125, 0.2432861328125, 0.2216796875, 0.00919342041015625, 0.8896484375, 0.0022563934326171875, 0.0005087852478027344, 0.0968017578125, 0.0052337646484375, 0.0009784698486328125, 0.0243377685546875, 0.099853515625, 0.0059356689453125, 0.0011434555053710938, 0.002262115478515625, 0.007476806640625, 0.00021159648895263672, 0.0019369125366210938, 0.0002624988555908203, 0.00035953521728515625, 0.025054931640625, 0.135009765625, 0.0017995834350585938, 0.142578125, 0.416015625, 0.0004253387451171875, 3.254413604736328e-05, 0.0018663406372070312, 0.00025916099548339844, 0.0031909942626953125, 0.00374603271484375, 3.838539123535156e-05, 0.01512908935546875, 0.0002694129943847656, 4.565715789794922e-05, 0.020843505859375, 0.0535888671875, 0.0007429122924804688], "tokens": [275, 319, 576, 98, 48, 275, 319, 5384, 319, 477, 753, 1300, 275, 319, 1468, 322, 1300, 372, 5489, 4245, 432, 275, 319, 477, 753, 4906, 275, 319, 1468, 322, 4906, 372, 5489, 372, 275, 319, 477, 753, 793, 1776, 9092, 275, 319, 1468, 4946, 372, 793, 30183, 3829, 275, 319, 477]}
{"line_number": 173, "line_type": "original", "code": "        if (isRegistered(object)) {", "entropy": 1.35546875, "is_bug_line": false, "sus_score": 0.3614775836467743, "per_token_entropy": [3.888671875, 3.083984375, 0.12017822265625, 3.84765625, 0.0029582977294921875, 0.012420654296875, 0.9072265625, 0.01441192626953125, 0.320556640625], "tokens": [351, 415, 308, 297, 17527, 26, 1473, 490, 301]}
{"line_number": 173, "line_type": "generated", "code": "\n     * </p>\n     * \n     * @param object\n     *            the object to create a <code>hashCode</code> for\n     * @param initialNonZeroOddNumber\n     *            a non zero, odd number used as the initial value\n    ", "entropy": 0.1217041015625, "is_bug_line": false, "sus_score": 0.3614775836467743, "per_token_entropy": [0.490966796875, 0.10943603515625, 0.22802734375, 0.00858306884765625, 0.0020809173583984375, 0.04107666015625, 0.0026302337646484375, 0.03729248046875, 0.0011320114135742188, 0.38916015625, 0.08709716796875, 0.453125, 0.017181396484375, 5.6862831115722656e-05, 0.0066070556640625, 0.390380859375, 0.0557861328125, 0.0014867782592773438, 0.01067352294921875, 0.01360321044921875, 0.1527099609375, 0.0007147789001464844, 3.528594970703125e-05, 0.028411865234375, 0.00023877620697021484, 4.0411949157714844e-05, 5.125999450683594e-06, 0.0024738311767578125, 0.084228515625, 0.00036334991455078125, 0.0021495819091796875, 0.03924560546875, 1.216796875, 0.0048065185546875, 0.0006427764892578125, 0.0007352828979492188, 0.0020122528076171875, 0.0048370361328125, 7.092952728271484e-05, 0.01177215576171875, 0.06488037109375, 0.0283050537109375, 1.3740234375, 0.051971435546875, 4.398822784423828e-05, 0.007785797119140625, 0.69677734375, 0.103759765625, 0.03564453125, 0.030914306640625, 0.01165771484375, 0.022125244140625], "tokens": [275, 319, 576, 98, 48, 275, 319, 5384, 319, 477, 753, 1300, 275, 319, 1468, 322, 1300, 372, 1487, 312, 333, 687, 48, 14948, 377, 687, 48, 436, 275, 319, 477, 753, 2815, 3910, 8039, 40324, 1918, 275, 319, 1468, 312, 2979, 5934, 30, 17859, 1451, 1654, 619, 322, 2815, 786, 275]}
{"line_number": 177, "line_type": "original", "code": "            register(object);", "entropy": 2.841796875, "is_bug_line": false, "sus_score": 0.3614775836467743, "per_token_entropy": [2.599609375, 10.21875, 0.05999755859375, 1.2978515625, 0.0367431640625], "tokens": [1468, 3909, 26, 1473, 293]}
{"line_number": 177, "line_type": "generated", "code": "\n     * @param multiplierNonZeroOddNumber\n     *            a non-zero, odd number used as the multiplier\n     * @param useTransients\n     *            whether to use transient fields\n     * @param excludeFields\n     *            Collection of String field names", "entropy": 0.09112548828125, "is_bug_line": false, "sus_score": 0.3614775836467743, "per_token_entropy": [1.08984375, 0.05743408203125, 0.1259765625, 0.0142822265625, 0.053314208984375, 0.007755279541015625, 3.457069396972656e-05, 0.0005898475646972656, 0.0005936622619628906, 0.00460052490234375, 4.9114227294921875e-05, 0.0015811920166015625, 0.0017023086547851562, 0.000507354736328125, 0.0006222724914550781, 0.00011348724365234375, 0.00025725364685058594, 1.8715858459472656e-05, 0.0005035400390625, 0.0141448974609375, 0.0004119873046875, 0.0007777214050292969, 0.003662109375, 0.89013671875, 0.0037097930908203125, 0.00927734375, 0.5458984375, 1.283203125, 0.00809478759765625, 7.748603820800781e-06, 0.007457733154296875, 3.8504600524902344e-05, 0.0007066726684570312, 0.038818359375, 0.0020122528076171875, 0.1282958984375, 0.0038909912109375, 0.0002892017364501953, 0.11871337890625, 0.00045418739318847656, 0.0016298294067382812, 0.06787109375, 0.0946044921875, 0.0035572052001953125, 0.00734710693359375, 3.445148468017578e-05, 0.0011835098266601562, 0.1134033203125, 0.0005121231079101562, 0.026519775390625, 0.0030040740966796875, 0.0003452301025390625], "tokens": [275, 319, 477, 753, 30266, 3910, 8039, 40324, 1918, 275, 319, 1468, 312, 2979, 31, 6158, 30, 17859, 1451, 1654, 619, 322, 30266, 275, 319, 477, 753, 793, 1776, 9092, 275, 319, 1468, 4946, 372, 793, 30183, 3829, 275, 319, 477, 753, 11246, 4140, 275, 319, 1468, 7376, 432, 892, 1600, 4467]}
{"line_number": 522, "line_type": "original", "code": "        getRegistry().add(new IDKey(value));", "entropy": 1.6640625, "is_bug_line": true, "sus_score": 0.3614775836467743, "per_token_entropy": [2.833984375, 12.0859375, 0.289794921875, 0.0223388671875, 2.29296875, 0.018096923828125, 0.25, 0.2861328125, 0.00305938720703125, 0.022125244140625, 1.7587890625, 0.1007080078125], "tokens": [351, 622, 5378, 922, 669, 26, 890, 2484, 953, 26, 853, 876]}
{"line_number": 522, "line_type": "generated", "code": "\n     * @param multiplierNonZeroOddNumber", "entropy": 0.20947265625, "is_bug_line": true, "sus_score": 0.3614775836467743, "per_token_entropy": [1.3095703125, 0.01323699951171875, 0.5361328125, 0.00154876708984375, 0.01442718505859375, 0.00800323486328125, 0.0001004934310913086, 0.0019140243530273438, 0.0004050731658935547], "tokens": [275, 319, 477, 753, 30266, 3910, 8039, 40324, 1918]}
{"line_number": 181, "line_type": "original", "code": "                if (!ArrayUtils.contains(excludeFields, field.getName())", "entropy": 1.7900390625, "is_bug_line": false, "sus_score": 0.3547579050064087, "per_token_entropy": [5.453125, 1.7490234375, 4.91015625, 7.390625, 0.01010894775390625, 0.00727081298828125, 2.740234375, 0.0654296875, 0.58642578125, 0.0386962890625, 0.00930023193359375, 0.990234375, 0.0232696533203125, 0.018829345703125, 2.85546875], "tokens": [2071, 415, 1429, 1261, 2755, 32, 4752, 26, 10444, 4140, 30, 1600, 32, 5165, 1157]}
{"line_number": 181, "line_type": "generated", "code": "\n     * @return int hash code\n     * @since 2.3\n     */\n    static int reflectionHashCode(int initialNonZeroOddNumber, int multiplierNonZeroOddNumber, Object object) {\n        if (object == null) {\n            return ", "entropy": 0.1279296875, "is_bug_line": false, "sus_score": 0.3547579050064087, "per_token_entropy": [0.3447265625, 0.09344482421875, 0.025543212890625, 0.1751708984375, 1.3564453125, 0.01751708984375, 0.059600830078125, 0.2396240234375, 0.6630859375, 0.0242462158203125, 0.56201171875, 0.001110076904296875, 0.1573486328125, 0.0017156600952148438, 0.90185546875, 0.0594482421875, 0.03271484375, 0.01467132568359375, 0.90087890625, 0.0112152099609375, 0.0008463859558105469, 0.0035991668701171875, 0.00135040283203125, 0.0836181640625, 1.3470649719238281e-05, 8.463859558105469e-06, 2.0265579223632812e-06, 3.6954879760742188e-06, 2.9802322387695312e-06, 0.00138092041015625, 0.0007228851318359375, 7.152557373046875e-06, 0.0001882314682006836, 1.5497207641601562e-06, 1.990795135498047e-05, 4.7326087951660156e-05, 0.00021219253540039062, 0.00922393798828125, 0.0037670135498046875, 0.00791168212890625, 0.0027065277099609375, 0.091552734375, 0.358642578125, 0.0110015869140625, 0.383056640625, 0.0008225440979003906, 0.0001347064971923828, 0.00028061866760253906, 0.0013074874877929688, 0.0185089111328125, 0.0025272369384765625, 0.0255279541015625], "tokens": [275, 319, 477, 601, 629, 3677, 1340, 275, 319, 477, 8119, 225, 36, 32, 37, 275, 569, 284, 907, 629, 26158, 14947, 26, 410, 2815, 3910, 8039, 40324, 1918, 30, 629, 30266, 3910, 8039, 40324, 1918, 30, 2194, 1300, 27, 301, 291, 415, 308, 1473, 610, 744, 27, 301, 324, 442, 225]}
{"line_number": 362, "line_type": "original", "code": "        while (clazz.getSuperclass() != null && clazz != reflectUpToClass) {", "entropy": 0.9580078125, "is_bug_line": false, "sus_score": 0.3547579050064087, "per_token_entropy": [5.1640625, 7.671875, 0.0880126953125, 0.32568359375, 4.375, 0.0384521484375, 0.00017535686492919922, 0.0023956298828125, 0.0008873939514160156, 3.993511199951172e-05, 0.0194091796875, 0.54931640625, 0.07769775390625, 0.00478363037109375, 0.58203125, 0.00020766258239746094, 9.143352508544922e-05, 1.9073486328125e-05, 0.0291748046875, 0.2293701171875], "tokens": [351, 2218, 308, 20966, 32, 371, 11069, 823, 346, 863, 744, 962, 16503, 863, 10225, 1386, 705, 1339, 27, 301]}
{"line_number": 362, "line_type": "generated", "code": "\n     * <p>\n     * It uses <code>AccessibleObject.setAccessible</code> to gain access to private fields. This means that it will\n     * throw a security exception if run under a security manager, if the permissions are not set up correctly", "entropy": 0.0163421630859375, "is_bug_line": false, "sus_score": 0.3547579050064087, "per_token_entropy": [0.133544921875, 0.01065826416015625, 0.54345703125, 0.024749755859375, 0.0005922317504882812, 0.0081024169921875, 0.00011038780212402344, 0.11602783203125, 0.0003788471221923828, 0.0011415481567382812, 0.0002741813659667969, 2.6702880859375e-05, 9.548664093017578e-05, 1.3232231140136719e-05, 2.3126602172851562e-05, 8.308887481689453e-05, 1.1444091796875e-05, 1.1324882507324219e-05, 8.940696716308594e-06, 0.00012493133544921875, 1.728534698486328e-05, 5.900859832763672e-05, 5.9604644775390625e-05, 6.92605972290039e-05, 0.00022709369659423828, 0.0043487548828125, 0.0009002685546875, 6.771087646484375e-05, 3.910064697265625e-05, 1.0013580322265625e-05, 0.00044465065002441406, 0.00257110595703125, 6.449222564697266e-05, 0.0001398324966430664, 1.4781951904296875e-05, 0.00019216537475585938, 1.621246337890625e-05, 5.042552947998047e-05, 7.033348083496094e-05, 9.179115295410156e-06, 2.872943878173828e-05, 2.7418136596679688e-05, 6.556510925292969e-06, 0.0002238750457763672, 4.1961669921875e-05, 3.123283386230469e-05, 0.00016069412231445312, 5.602836608886719e-06, 2.3365020751953125e-05, 9.59634780883789e-05, 1.6689300537109375e-06, 3.612041473388672e-05], "tokens": [275, 319, 333, 98, 48, 275, 319, 2030, 5251, 333, 687, 48, 20822, 959, 32, 45215, 377, 687, 48, 372, 19287, 2857, 372, 945, 3829, 32, 1348, 6058, 688, 561, 1098, 275, 319, 1422, 312, 7663, 3756, 415, 1420, 1531, 312, 7663, 7884, 30, 415, 322, 4227, 884, 646, 739, 973, 8464]}
{"line_number": 178, "line_type": "original", "code": "            Field[] fields = clazz.getDeclaredFields();", "entropy": 1.5302734375, "is_bug_line": false, "sus_score": 0.35457709431648254, "per_token_entropy": [1.89453125, 11.59375, 1.6123046875, 0.034942626953125, 0.050933837890625, 0.09808349609375, 0.004634857177734375, 0.0022602081298828125, 0.00044846534729003906, 0.013214111328125], "tokens": [1468, 5692, 1178, 3829, 280, 16503, 32, 36868, 4140, 473]}
{"line_number": 178, "line_type": "generated", "code": " *            a non-zero, odd number used as the multiplier\n     * @return the hash code\n     * @since 2.0\n     */\n    public static int reflectionHashCode(final int initialNonZeroOddNumber, final int multiplierNonZeroOddNumber", "entropy": 0.206787109375, "is_bug_line": false, "sus_score": 0.35457709431648254, "per_token_entropy": [2.86328125, 0.11456298828125, 0.08709716796875, 0.004169464111328125, 0.00580596923828125, 0.0009927749633789062, 0.0003705024719238281, 1.4662742614746094e-05, 0.0007147789001464844, 0.0271148681640625, 0.0010461807250976562, 0.00861358642578125, 0.006015777587890625, 0.477294921875, 0.00946807861328125, 0.0296173095703125, 0.76611328125, 0.9296875, 0.5390625, 0.054351806640625, 0.088134765625, 0.241943359375, 0.0210418701171875, 0.76318359375, 0.0014019012451171875, 0.1314697265625, 0.0012102127075195312, 0.958984375, 0.01317596435546875, 0.05499267578125, 0.020904541015625, 0.68310546875, 0.7822265625, 0.00948333740234375, 0.0017652511596679688, 0.00286865234375, 0.00669097900390625, 0.71728515625, 0.1260986328125, 8.845329284667969e-05, 1.7762184143066406e-05, 2.384185791015625e-06, 6.079673767089844e-06, 4.172325134277344e-06, 0.0248565673828125, 0.169189453125, 0.00505828857421875, 0.0005230903625488281, 0.00028014183044433594, 3.933906555175781e-06, 3.24249267578125e-05, 5.5909156799316406e-05], "tokens": [319, 1468, 312, 2979, 31, 6158, 30, 17859, 1451, 1654, 619, 322, 30266, 275, 319, 477, 601, 322, 3677, 1340, 275, 319, 477, 8119, 225, 36, 32, 34, 275, 569, 284, 562, 907, 629, 26158, 14947, 26, 3220, 629, 2815, 3910, 8039, 40324, 1918, 30, 1158, 629, 30266, 3910, 8039, 40324, 1918]}
{"line_number": 360, "line_type": "original", "code": "        Class<?> clazz = object.getClass();", "entropy": 1.263671875, "is_bug_line": false, "sus_score": 0.35457709431648254, "per_token_entropy": [4.9375, 6.01171875, 0.21875, 0.184814453125, 0.005611419677734375, 0.0089874267578125, 0.0017852783203125, 0.0008502006530761719, 0.0075225830078125], "tokens": [351, 1709, 11674, 16503, 280, 1300, 32, 9700, 473]}
{"line_number": 360, "line_type": "generated", "code": "\n     * </p>\n     * \n     * <p>\n     * It uses <code>AccessibleObject.setAccessible</code> to gain access to private fields. This means that it will\n     * throw a security exception if run under a security manager, if", "entropy": 0.007965087890625, "is_bug_line": false, "sus_score": 0.35457709431648254, "per_token_entropy": [0.10223388671875, 0.007213592529296875, 0.223388671875, 0.0020389556884765625, 0.001956939697265625, 0.020782470703125, 8.308887481689453e-05, 0.01439666748046875, 0.00010192394256591797, 0.008270263671875, 0.0013914108276367188, 0.00023686885833740234, 0.00684356689453125, 6.592273712158203e-05, 0.0147705078125, 7.331371307373047e-05, 0.0009708404541015625, 0.00019633769989013672, 2.6464462280273438e-05, 0.00011920928955078125, 1.3709068298339844e-05, 2.5987625122070312e-05, 0.0002613067626953125, 1.3113021850585938e-05, 2.205371856689453e-05, 8.821487426757812e-06, 0.0002498626708984375, 1.5854835510253906e-05, 4.553794860839844e-05, 7.259845733642578e-05, 4.8995018005371094e-05, 0.0004608631134033203, 0.0030059814453125, 0.0013275146484375, 0.00010251998901367188, 2.8371810913085938e-05, 9.775161743164062e-06, 0.00046372413635253906, 0.00164794921875, 2.5391578674316406e-05, 5.7220458984375e-05, 1.5497207641601562e-05, 0.00028586387634277344, 1.239776611328125e-05, 0.0001074075698852539, 9.250640869140625e-05, 2.4437904357910156e-05, 0.0001302957534790039, 2.396106719970703e-05, 1.5974044799804688e-05, 0.000255584716796875, 5.3048133850097656e-05], "tokens": [275, 319, 576, 98, 48, 275, 319, 5384, 319, 333, 98, 48, 275, 319, 2030, 5251, 333, 687, 48, 20822, 959, 32, 45215, 377, 687, 48, 372, 19287, 2857, 372, 945, 3829, 32, 1348, 6058, 688, 561, 1098, 275, 319, 1422, 312, 7663, 3756, 415, 1420, 1531, 312, 7663, 7884, 30, 415]}
{"line_number": 69, "line_type": "original", "code": " * <p>", "entropy": 3.595703125, "is_bug_line": false, "sus_score": 0.3531361222267151, "per_token_entropy": [4.61328125, 4.5703125, 5.19140625, 0.01035308837890625], "tokens": [319, 333, 98, 48]}
{"line_number": 69, "line_type": "generated", "code": "\n     * to the original object.\n     * \n     * We do this by generating a secondary key for each object. This key incorporates the object's\n     * System.identityHashCode() to ensure uniqueness, and also the hashcode of the original object.", "entropy": 0.818359375, "is_bug_line": false, "sus_score": 0.3531361222267151, "per_token_entropy": [0.40185546875, 0.228515625, 0.1759033203125, 0.404541015625, 0.4306640625, 0.8779296875, 0.7353515625, 0.497802734375, 0.25927734375, 0.0264739990234375, 0.00868988037109375, 2.2109375, 1.09375, 0.130859375, 0.1697998046875, 2.4609375, 0.52880859375, 1.833984375, 1.189453125, 1.0498046875, 1.1689453125, 0.409423828125, 2.490234375, 1.427734375, 1.255859375, 0.444580078125, 0.0009465217590332031, 0.6845703125, 2.18359375, 0.0655517578125, 0.57568359375, 4.1961669921875e-05, 1.4140625, 0.247802734375, 0.0035381317138671875, 0.0047149658203125, 0.650390625, 2.6328125, 1.244140625, 1.037109375, 9.119510650634766e-05, 0.8212890625, 0.70849609375, 1.12109375, 2.091796875, 2.123046875, 0.08795166015625, 0.392822265625, 0.11627197265625, 1.2060546875, 0.1883544921875, 1.0400390625], "tokens": [275, 319, 372, 322, 4707, 1300, 32, 275, 319, 5384, 319, 2688, 745, 458, 810, 17335, 312, 15997, 1202, 436, 2504, 1300, 32, 1348, 1202, 26286, 1196, 322, 1300, 1182, 275, 319, 1171, 32, 8543, 14947, 346, 372, 7279, 29607, 49111, 30, 461, 2329, 322, 3677, 687, 432, 322, 4707, 1300, 32]}
{"line_number": 359, "line_type": "original", "code": "        HashCodeBuilder builder = new HashCodeBuilder(initialNonZeroOddNumber, multiplierNonZeroOddNumber);", "entropy": 0.6953125, "is_bug_line": false, "sus_score": 0.35223710536956787, "per_token_entropy": [5.31640625, 8.453125, 0.044921875, 0.09100341796875, 0.0653076171875, 0.00396728515625, 0.02264404296875, 0.0031604766845703125, 1.9073486328125e-06, 3.7789344787597656e-05, 0.265380859375, 1.1689453125, 0.009796142578125, 9.822845458984375e-05, 0.000339508056640625, 5.8650970458984375e-05, 0.00765228271484375, 0.50830078125, 0.0062408447265625, 0.000759124755859375, 0.007110595703125, 0.0006098747253417969, 0.015716552734375], "tokens": [351, 5033, 1227, 1796, 4906, 280, 537, 5033, 1227, 1796, 26, 4332, 3910, 8039, 40324, 1918, 30, 30266, 3910, 8039, 40324, 1918, 293]}
{"line_number": 359, "line_type": "generated", "code": "\n     * This constructor uses two hard coded choices for the constants needed to build a hash code.\n     * </p>\n     * \n     * <p>\n     * It uses <code>AccessibleObject.setAccessible</code> to gain access to private fields.", "entropy": 0.0148468017578125, "is_bug_line": false, "sus_score": 0.35223710536956787, "per_token_entropy": [0.136474609375, 0.0020751953125, 0.300048828125, 0.1339111328125, 0.00894927978515625, 0.0156402587890625, 0.00557708740234375, 7.2479248046875e-05, 0.000766754150390625, 2.6226043701171875e-05, 1.9311904907226562e-05, 0.0007510185241699219, 0.000766754150390625, 0.0002034902572631836, 0.0002467632293701172, 0.0004363059997558594, 0.0028705596923828125, 0.00020301342010498047, 0.0027217864990234375, 0.05206298828125, 0.0008225440979003906, 0.0107269287109375, 0.00025582313537597656, 0.002902984619140625, 0.0085601806640625, 2.5391578674316406e-05, 0.006622314453125, 3.3736228942871094e-05, 0.0027179718017578125, 0.0007381439208984375, 0.0004673004150390625, 0.052337646484375, 2.110004425048828e-05, 0.0174560546875, 8.0108642578125e-05, 0.0010585784912109375, 0.0003376007080078125, 2.8252601623535156e-05, 0.0001722574234008789, 1.5020370483398438e-05, 3.2067298889160156e-05, 0.00025153160095214844, 1.52587890625e-05, 4.291534423828125e-06, 6.794929504394531e-06, 0.00015592575073242188, 1.1086463928222656e-05, 3.731250762939453e-05, 4.947185516357422e-05, 6.520748138427734e-05, 0.00034999847412109375, 0.0016794204711914062], "tokens": [275, 319, 1348, 4374, 5251, 3134, 6784, 38384, 16682, 436, 322, 12388, 5349, 372, 1968, 312, 3677, 1340, 32, 275, 319, 576, 98, 48, 275, 319, 5384, 319, 333, 98, 48, 275, 319, 2030, 5251, 333, 687, 48, 20822, 959, 32, 45215, 377, 687, 48, 372, 19287, 2857, 372, 945, 3829, 32]}
{"line_number": 137, "line_type": "original", "code": "        return REGISTRY.get();", "entropy": 3.041015625, "is_bug_line": false, "sus_score": 0.34982356429100037, "per_token_entropy": [5.640625, 5.8515625, 10.921875, 0.0004405975341796875, 0.00012004375457763672, 0.0219268798828125, 1.0830078125, 0.8134765625], "tokens": [351, 442, 11752, 23195, 75, 32, 371, 473]}
{"line_number": 137, "line_type": "generated", "code": "\n                    } catch (IllegalAccessException e) {\n                        // this can't happen. Would get a Security exception instead\n                        // throw a RuntimeException in case the impossible happens.\n                        throw new InternalError(\"Unexpected IllegalAccessException\");\n                    }\n                }\n            }\n        } finally", "entropy": 0.117919921875, "is_bug_line": false, "sus_score": 0.34982356429100037, "per_token_entropy": [0.449951171875, 0.0031337738037109375, 0.275146484375, 0.005725860595703125, 0.0014677047729492188, 0.00022172927856445312, 0.231201171875, 0.00157928466796875, 0.00786590576171875, 0.1414794921875, 0.340087890625, 0.262939453125, 0.001018524169921875, 0.0034198760986328125, 0.017913818359375, 0.0069122314453125, 0.145751953125, 0.00487518310546875, 0.0007405281066894531, 0.08612060546875, 0.0017118453979492188, 0.004840850830078125, 0.0057830810546875, 0.030517578125, 0.01561737060546875, 0.0013332366943359375, 1.5166015625, 0.017578125, 0.00786590576171875, 8.440017700195312e-05, 0.006786346435546875, 0.02972412109375, 0.0039215087890625, 0.00867462158203125, 0.0011892318725585938, 0.0004444122314453125, 0.4453125, 0.0003879070281982422, 0.050323486328125, 0.010223388671875, 0.0018396377563476562, 7.867813110351562e-05, 0.1881103515625, 0.027130126953125, 0.0002193450927734375, 0.0175933837890625, 0.0006465911865234375, 0.05047607421875, 0.00023639202117919922, 1.6845703125, 0.0034694671630859375, 0.0113677978515625], "tokens": [528, 320, 2368, 308, 15095, 27154, 484, 27, 301, 715, 434, 458, 883, 1330, 7292, 32, 20683, 622, 312, 7337, 3756, 4174, 715, 434, 1422, 312, 13386, 328, 1135, 322, 26639, 11183, 32, 715, 1422, 537, 11540, 924, 440, 10203, 8956, 27154, 724, 528, 320, 400, 320, 324, 320, 291, 320, 8295]}
{"line_number": 363, "line_type": "original", "code": "            clazz = clazz.getSuperclass();", "entropy": 2.8359375, "is_bug_line": false, "sus_score": 0.3474974036216736, "per_token_entropy": [8.109375, 12.875, 0.197021484375, 4.26953125, 0.0011720657348632812, 0.0009937286376953125, 0.0002505779266357422, 0.0027618408203125, 0.06622314453125], "tokens": [1468, 16503, 280, 16503, 32, 371, 11069, 823, 473]}
{"line_number": 363, "line_type": "generated", "code": "\n     * It uses <code>AccessibleObject.setAccessible</code> to gain access to private fields. This means that it will\n     * throw a security exception if run under a security manager, if the permissions are not set up correctly. It is\n     *", "entropy": 0.01367950439453125, "is_bug_line": false, "sus_score": 0.3474974036216736, "per_token_entropy": [0.2110595703125, 0.00424957275390625, 0.4677734375, 0.00109100341796875, 0.00328826904296875, 0.0007948875427246094, 9.381771087646484e-05, 0.00025725364685058594, 2.110004425048828e-05, 4.398822784423828e-05, 0.0002319812774658203, 1.3709068298339844e-05, 5.269050598144531e-05, 1.9311904907226562e-05, 0.0003380775451660156, 5.3048133850097656e-05, 0.00023233890533447266, 0.0001341104507446289, 0.00023567676544189453, 0.00019812583923339844, 0.0031566619873046875, 0.0020084381103515625, 0.0002238750457763672, 0.00011265277862548828, 2.7179718017578125e-05, 0.000823974609375, 0.0074005126953125, 7.045269012451172e-05, 0.0004279613494873047, 3.0159950256347656e-05, 0.0003924369812011719, 2.1338462829589844e-05, 6.246566772460938e-05, 0.00013959407806396484, 1.5974044799804688e-05, 5.900859832763672e-05, 3.516674041748047e-05, 2.2292137145996094e-05, 0.00040793418884277344, 8.094310760498047e-05, 7.152557373046875e-05, 0.00028014183044433594, 7.033348083496094e-06, 1.7642974853515625e-05, 0.00018262863159179688, 2.6226043701171875e-06, 6.127357482910156e-05, 0.0004634857177734375, 0.0023021697998046875, 0.0007190704345703125, 0.0017185211181640625, 4.7326087951660156e-05], "tokens": [275, 319, 2030, 5251, 333, 687, 48, 20822, 959, 32, 45215, 377, 687, 48, 372, 19287, 2857, 372, 945, 3829, 32, 1348, 6058, 688, 561, 1098, 275, 319, 1422, 312, 7663, 3756, 415, 1420, 1531, 312, 7663, 7884, 30, 415, 322, 4227, 884, 646, 739, 973, 8464, 32, 2030, 438, 275, 319]}
{"line_number": 180, "line_type": "original", "code": "            for (Field field : fields) {", "entropy": 1.6669921875, "is_bug_line": false, "sus_score": 0.3441529870033264, "per_token_entropy": [1.93359375, 5.01953125, 1.33984375, 3.2109375, 0.029266357421875, 0.005413055419921875, 3.2578125, 0.032867431640625, 0.17236328125], "tokens": [1468, 436, 308, 1176, 1600, 499, 3829, 27, 301]}
{"line_number": 180, "line_type": "generated", "code": "        the object to create a hash code for\n     * @param excludeFields\n     *            Collection of String field names to exclude from use in calculation of hash code\n     * @return int hash code\n     * @throws IllegalArgumentException\n     *             if the object is <", "entropy": 0.2188720703125, "is_bug_line": false, "sus_score": 0.3441529870033264, "per_token_entropy": [1.8671875, 0.7861328125, 0.146728515625, 0.015228271484375, 0.2958984375, 0.005584716796875, 0.8330078125, 0.0220794677734375, 0.46728515625, 0.5068359375, 0.0012845993041992188, 0.01690673828125, 0.69921875, 0.54541015625, 0.01248931884765625, 1.052734375, 0.00011205673217773438, 0.005157470703125, 0.177734375, 0.002101898193359375, 0.042449951171875, 0.004177093505859375, 0.0006418228149414062, 0.001476287841796875, 0.001987457275390625, 0.00672149658203125, 0.0084075927734375, 0.0013399124145507812, 0.0146636962890625, 0.00200653076171875, 0.0029277801513671875, 0.0007987022399902344, 0.0618896484375, 0.003429412841796875, 0.00868988037109375, 0.146240234375, 0.81494140625, 0.01439666748046875, 0.02362060546875, 0.0204315185546875, 0.313720703125, 0.02069091796875, 1.115234375, 0.09246826171875, 0.2470703125, 0.00020837783813476562, 0.00351715087890625, 0.022430419921875, 0.00787353515625, 0.84814453125, 0.01360321044921875, 0.060882568359375], "tokens": [351, 322, 1300, 372, 1487, 312, 3677, 1340, 436, 275, 319, 477, 753, 11246, 4140, 275, 319, 1468, 7376, 432, 892, 1600, 4467, 372, 11246, 645, 793, 328, 17686, 432, 3677, 1340, 275, 319, 477, 601, 629, 3677, 1340, 275, 319, 477, 5117, 12137, 275, 319, 2407, 415, 322, 1300, 438, 333]}
{"line_number": 859, "line_type": "original", "code": "            if(object.getClass().isArray()) {", "entropy": 2.041015625, "is_bug_line": false, "sus_score": 0.3426213264465332, "per_token_entropy": [6.98828125, 2.572265625, 5.40234375, 1.4091796875, 3.220703125, 0.415283203125, 0.0830078125, 0.034637451171875, 0.1881103515625, 0.099609375], "tokens": [1468, 415, 26, 1473, 32, 9700, 922, 15436, 1157, 301]}
{"line_number": 859, "line_type": "generated", "code": "\n    /**\n     * <p>\n     * Append a <code>hashCode</code> for a <code>short</code>.\n     * </p>\n     * \n     * @param value\n     *            the short to add to the <code>hashCode", "entropy": 0.02593994140625, "is_bug_line": false, "sus_score": 0.3426213264465332, "per_token_entropy": [0.5498046875, 0.2529296875, 0.022979736328125, 9.512901306152344e-05, 0.065673828125, 0.00015366077423095703, 0.0004925727844238281, 0.0018758773803710938, 9.179115295410156e-06, 0.023468017578125, 0.034210205078125, 0.005794525146484375, 8.606910705566406e-05, 1.1205673217773438e-05, 0.0002205371856689453, 0.00016987323760986328, 2.8848648071289062e-05, 0.0007557868957519531, 0.004241943359375, 0.0151824951171875, 0.047119140625, 0.00013649463653564453, 8.428096771240234e-05, 0.0888671875, 0.0011148452758789062, 7.987022399902344e-06, 0.1395263671875, 0.00039076805114746094, 7.081031799316406e-05, 0.0002541542053222656, 2.384185791015625e-07, 0.00014019012451171875, 0.00024819374084472656, 0.00015473365783691406, 0.006771087646484375, 1.5616416931152344e-05, 0.0003535747528076172, 0.0002815723419189453, 5.9604644775390625e-05, 0.0010213851928710938, 3.933906555175781e-06, 0.0006365776062011719, 0.004726409912109375, 0.073486328125, 0.0005474090576171875, 0.0012111663818359375, 0.0005297660827636719, 2.7418136596679688e-05, 0.0023708343505859375, 2.9802322387695312e-05, 2.9802322387695312e-06, 7.355213165283203e-05], "tokens": [284, 1022, 275, 319, 333, 98, 48, 275, 319, 20593, 312, 333, 687, 48, 14948, 377, 687, 48, 436, 312, 333, 687, 48, 4021, 377, 687, 4503, 275, 319, 576, 98, 48, 275, 319, 5384, 319, 477, 753, 786, 275, 319, 1468, 322, 4504, 372, 1015, 372, 322, 333, 687, 48, 14948]}
{"line_number": 65, "line_type": "original", "code": " *   }", "entropy": 5.63671875, "is_bug_line": false, "sus_score": 0.338373601436615, "per_token_entropy": [4.2734375, 5.8203125, 6.80859375], "tokens": [319, 261, 320]}
{"line_number": 65, "line_type": "generated", "code": "\n     */\n\n    /**\n     * <p>\n     * Whether to use the <code>hashCode</code> methods inherited from the super class.\n     * </p>\n     */\n    private final boolean useSuperClass;\n\n    /**\n     * <p>\n    ", "entropy": 0.30859375, "is_bug_line": false, "sus_score": 0.338373601436615, "per_token_entropy": [0.53076171875, 0.1422119140625, 1.0146484375, 0.1407470703125, 0.1300048828125, 7.390975952148438e-05, 0.19091796875, 0.0011119842529296875, 0.0017538070678710938, 0.0084075927734375, 9.894371032714844e-06, 3.416015625, 1.3935546875, 0.49609375, 0.061279296875, 1.48828125, 0.006130218505859375, 0.0022830963134765625, 0.8291015625, 0.75830078125, 4.112720489501953e-05, 0.01021575927734375, 0.58349609375, 1.896484375, 0.004085540771484375, 0.26953125, 0.59619140625, 1.0107421875, 0.03155517578125, 0.0823974609375, 0.0177154541015625, 0.0038738250732421875, 2.5510787963867188e-05, 0.00023508071899414062, 0.0011949539184570312, 0.0872802734375, 0.0029239654541015625, 0.04571533203125, 0.302490234375, 0.0179443359375, 0.10467529296875, 0.0438232421875, 0.054168701171875, 0.025299072265625, 0.210205078125, 0.0084686279296875, 0.0102691650390625, 3.933906555175781e-06, 0.0155487060546875, 7.545948028564453e-05, 0.00027179718017578125, 0.0023632049560546875], "tokens": [275, 569, 446, 1022, 275, 319, 333, 98, 48, 275, 319, 14071, 372, 793, 322, 333, 687, 48, 14948, 377, 687, 48, 4438, 21629, 645, 322, 2599, 443, 32, 275, 319, 576, 98, 48, 275, 569, 284, 945, 1158, 1905, 793, 11069, 1339, 45, 446, 1022, 275, 319, 333, 98, 48, 275]}
{"line_number": 1645, "line_type": "original", "code": "", "entropy": 0.257080078125, "is_bug_line": false, "sus_score": 0.33202171325683594, "per_token_entropy": [0.257080078125], "tokens": [203]}
{"line_number": 1645, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.33202171325683594, "per_token_entropy": [], "tokens": []}
{"line_number": 356, "line_type": "original", "code": "        if (object == null) {", "entropy": 0.98046875, "is_bug_line": false, "sus_score": 0.32825785875320435, "per_token_entropy": [3.533203125, 2.3671875, 0.11126708984375, 1.62109375, 0.071533203125, 0.0007185935974121094, 0.01158905029296875, 0.1273193359375], "tokens": [351, 415, 308, 1473, 610, 744, 27, 301]}
{"line_number": 356, "line_type": "generated", "code": "\n     * </p>\n     * \n     * <p>\n     * It uses <code>AccessibleObject.setAccessible</code> to gain access to private fields. This means that it will\n     * throw a security exception if run under a security manager, if", "entropy": 0.0307464599609375, "is_bug_line": false, "sus_score": 0.32825785875320435, "per_token_entropy": [0.58056640625, 0.062225341796875, 0.07244873046875, 0.001056671142578125, 0.003047943115234375, 0.07598876953125, 0.0003437995910644531, 0.044097900390625, 0.0001176595687866211, 0.006450653076171875, 0.002593994140625, 0.0001531839370727539, 0.01142120361328125, 1.9431114196777344e-05, 0.71435546875, 8.928775787353516e-05, 0.0017948150634765625, 0.00022161006927490234, 3.8743019104003906e-05, 0.0002111196517944336, 1.6570091247558594e-05, 3.039836883544922e-05, 0.0005178451538085938, 3.075599670410156e-05, 5.221366882324219e-05, 3.707408905029297e-05, 0.00038123130798339844, 7.796287536621094e-05, 6.73532485961914e-05, 0.00017213821411132812, 0.00011420249938964844, 0.0006055831909179688, 0.0103912353515625, 0.00318145751953125, 0.00044465065002441406, 6.496906280517578e-05, 1.1086463928222656e-05, 0.0007939338684082031, 0.0021228790283203125, 2.944469451904297e-05, 7.30752944946289e-05, 1.6927719116210938e-05, 0.0009112358093261719, 1.6450881958007812e-05, 0.0001850128173828125, 0.00022280216217041016, 5.4717063903808594e-05, 0.00012493133544921875, 3.147125244140625e-05, 3.647804260253906e-05, 0.0005474090576171875, 8.14199447631836e-05], "tokens": [275, 319, 576, 98, 48, 275, 319, 5384, 319, 333, 98, 48, 275, 319, 2030, 5251, 333, 687, 48, 20822, 959, 32, 45215, 377, 687, 48, 372, 19287, 2857, 372, 945, 3829, 32, 1348, 6058, 688, 561, 1098, 275, 319, 1422, 312, 7663, 3756, 415, 1420, 1531, 312, 7663, 7884, 30, 415]}
