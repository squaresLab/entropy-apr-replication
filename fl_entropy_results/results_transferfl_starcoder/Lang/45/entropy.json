{"line_number": 855, "line_type": "original", "code": "", "entropy": 0.368896484375, "is_bug_line": false, "sus_score": 0.39880380034446716, "per_token_entropy": [0.368896484375], "tokens": [203]}
{"line_number": 855, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.39880380034446716, "per_token_entropy": [], "tokens": []}
{"line_number": 627, "line_type": "original", "code": "        int index = StringUtils.indexOf(str, \" \", lower);", "entropy": 0.7919921875, "is_bug_line": false, "sus_score": 0.3470227122306824, "per_token_entropy": [3.3828125, 2.462890625, 0.2005615234375, 0.00531005859375, 1.203125, 0.0008649826049804688, 0.090087890625, 0.20703125, 0.03973388671875, 0.0121917724609375, 2.583984375, 0.213623046875, 0.37646484375, 0.305419921875], "tokens": [351, 629, 1650, 280, 26617, 32, 7142, 26, 466, 30, 313, 3003, 7216, 293]}
{"line_number": 627, "line_type": "generated", "code": "\n    /**\n     * Abbreviates a string nicely.\n     * \n     * This method searches for the first space after the lower limit and abbreviates\n     * the String there. It will also append any String passed as a parameter\n     * to the", "entropy": 0.1011962890625, "is_bug_line": false, "sus_score": 0.3470227122306824, "per_token_entropy": [0.82177734375, 0.495849609375, 0.037506103515625, 0.000637054443359375, 1.4443359375, 0.016082763671875, 4.017353057861328e-05, 0.00016891956329345703, 0.0008053779602050781, 0.00859832763671875, 0.1839599609375, 0.5595703125, 0.0743408203125, 0.039093017578125, 0.00029015541076660156, 0.2484130859375, 4.398822784423828e-05, 0.02655029296875, 0.00392913818359375, 0.4287109375, 0.0005388259887695312, 0.0004968643188476562, 0.003826141357421875, 0.055572509765625, 0.056793212890625, 0.00922393798828125, 0.00836181640625, 0.0082550048828125, 0.01233673095703125, 0.002513885498046875, 4.6253204345703125e-05, 3.2186508178710938e-06, 0.0079345703125, 0.0001004934310913086, 0.0004017353057861328, 0.007289886474609375, 0.005191802978515625, 0.0300140380859375, 0.59716796875, 0.0029087066650390625, 0.0009350776672363281, 0.00020110607147216797, 0.0163116455078125, 0.013458251953125, 0.0007352828979492188, 0.0007123947143554688, 0.00225830078125, 0.00038909912109375, 0.0273284912109375, 8.7738037109375e-05, 0.00037169456481933594, 3.457069396972656e-05], "tokens": [284, 1022, 275, 319, 399, 2882, 268, 4788, 1196, 312, 802, 46931, 32, 275, 319, 5384, 319, 1348, 1411, 33243, 436, 322, 1932, 5122, 2685, 322, 7216, 2723, 461, 31838, 4788, 1196, 275, 319, 322, 892, 2017, 32, 2030, 1098, 2329, 5489, 1346, 892, 5403, 619, 312, 3395, 275, 319, 372, 322]}
{"line_number": 858, "line_type": "original", "code": "", "entropy": 0.368896484375, "is_bug_line": false, "sus_score": 0.3457704484462738, "per_token_entropy": [0.368896484375], "tokens": [203]}
{"line_number": 858, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.3457704484462738, "per_token_entropy": [], "tokens": []}
{"line_number": 639, "line_type": "original", "code": "            result.append(StringUtils.defaultString(appendToEnd));", "entropy": 0.83349609375, "is_bug_line": false, "sus_score": 0.3428764343261719, "per_token_entropy": [6.890625, 2.69921875, 0.0035762786865234375, 0.0186309814453125, 0.08831787109375, 0.96240234375, 0.0015020370483398438, 0.1357421875, 0.00908660888671875, 0.00787353515625, 0.005016326904296875, 0.0004229545593261719, 0.010955810546875], "tokens": [1468, 1056, 32, 1689, 26, 15209, 32, 1536, 652, 26, 30716, 2102, 876]}
{"line_number": 639, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.3428764343261719, "per_token_entropy": [], "tokens": []}
{"line_number": 638, "line_type": "original", "code": "            result.append(str.substring(0, index));", "entropy": 0.73974609375, "is_bug_line": false, "sus_score": 0.33868974447250366, "per_token_entropy": [6.4375, 1.740234375, 0.00571441650390625, 0.0131072998046875, 0.03619384765625, 0.260009765625, 0.00726318359375, 0.0013265609741210938, 0.00496673583984375, 0.4912109375, 0.0011949539184570312, 0.436279296875, 0.1820068359375], "tokens": [1468, 1056, 32, 1689, 26, 466, 32, 8723, 26, 34, 30, 1650, 876]}
{"line_number": 638, "line_type": "generated", "code": "\n    //-----------------------------------------------------------------------\n    /**\n     * <p>Finds the first index within a CharSequence, handling {@code null}.\n     * This method uses {@link String#indexOf(String)} if possible.</p>\n     *\n     * <p>A {@code", "entropy": 0.261474609375, "is_bug_line": false, "sus_score": 0.33868974447250366, "per_token_entropy": [1.1845703125, 1.6796875, 0.039215087890625, 0.022186279296875, 0.0305938720703125, 0.0209197998046875, 0.00025725364685058594, 1.8837890625, 0.047271728515625, 0.00836181640625, 3.107421875, 0.3076171875, 0.0718994140625, 0.405517578125, 0.2440185546875, 0.0205841064453125, 0.006011962890625, 1.59765625, 0.00936126708984375, 0.02386474609375, 1.0546875, 6.23464584350586e-05, 0.0007891654968261719, 0.060821533203125, 0.03436279296875, 0.0001627206802368164, 0.00502777099609375, 0.0006279945373535156, 0.00887298583984375, 0.004749298095703125, 0.117919921875, 0.0031948089599609375, 0.0009584426879882812, 0.040313720703125, 0.0008759498596191406, 0.70263671875, 0.223876953125, 0.16259765625, 0.0175933837890625, 0.059478759765625, 7.653236389160156e-05, 0.0017223358154296875, 0.01120758056640625, 0.00032782554626464844, 0.276123046875, 0.000347137451171875, 0.0215301513671875, 0.05120849609375, 0.0096588134765625, 0.0085906982421875, 0.0047454833984375, 4.76837158203125e-07], "tokens": [284, 434, 42510, 284, 1022, 275, 319, 333, 98, 48, 4868, 101, 322, 1932, 1650, 4797, 312, 36629, 30, 9933, 3088, 687, 744, 4009, 275, 319, 1348, 1411, 5251, 3088, 1204, 892, 21, 7142, 26, 652, 4370, 415, 4195, 1730, 98, 48, 275, 319, 275, 319, 333, 98, 48, 51, 3088, 687]}
{"line_number": 626, "line_type": "original", "code": "        StringBuffer result = new StringBuffer();", "entropy": 1.3095703125, "is_bug_line": false, "sus_score": 0.3385893702507019, "per_token_entropy": [3.55859375, 5.20703125, 0.2135009765625, 0.006412506103515625, 0.0017642974853515625, 0.00017404556274414062, 0.1727294921875], "tokens": [351, 21933, 1056, 280, 537, 21933, 473]}
{"line_number": 626, "line_type": "generated", "code": "\n    /**\n     * Abbreviates a string nicely.\n     * \n     * This method searches for the first space after the lower limit and abbreviates\n     * the String there.\n     * \n     * @param str   the string to be abbrevi", "entropy": 0.137451171875, "is_bug_line": false, "sus_score": 0.3385893702507019, "per_token_entropy": [0.81494140625, 0.281982421875, 0.028472900390625, 0.0005083084106445312, 1.322265625, 0.01035308837890625, 3.504753112792969e-05, 9.691715240478516e-05, 0.0007390975952148438, 0.00774383544921875, 0.150390625, 0.591796875, 0.07586669921875, 0.038177490234375, 0.00019443035125732422, 0.27001953125, 5.233287811279297e-05, 0.0249481201171875, 0.004047393798828125, 0.6669921875, 0.0006303787231445312, 0.0004057884216308594, 0.0024738311767578125, 0.06158447265625, 0.083984375, 0.006504058837890625, 0.013916015625, 0.00771331787109375, 0.01099395751953125, 0.002407073974609375, 4.076957702636719e-05, 2.7418136596679688e-06, 0.00937652587890625, 5.8770179748535156e-05, 0.00032019615173339844, 0.006893157958984375, 0.005828857421875, 0.033843994140625, 1.4072265625, 9.608268737792969e-05, 0.086669921875, 3.1113624572753906e-05, 0.042999267578125, 0.0084686279296875, 0.00128936767578125, 1.0263671875, 0.007659912109375, 0.017364501953125, 0.0011310577392578125, 0.00814056396484375, 0.0012531280517578125, 1.0728836059570312e-06], "tokens": [284, 1022, 275, 319, 399, 2882, 268, 4788, 1196, 312, 802, 46931, 32, 275, 319, 5384, 319, 1348, 1411, 33243, 436, 322, 1932, 5122, 2685, 322, 7216, 2723, 461, 31838, 4788, 1196, 275, 319, 322, 892, 2017, 32, 275, 319, 5384, 319, 477, 753, 596, 261, 322, 802, 372, 526, 31838, 4788]}
{"line_number": 631, "line_type": "original", "code": "            if (upper != str.length()) {", "entropy": 1.859375, "is_bug_line": false, "sus_score": 0.3384424149990082, "per_token_entropy": [6.37890625, 2.369140625, 0.061981201171875, 2.44140625, 3.8125, 3.142578125, 0.00921630859375, 0.0008997917175292969, 0.214111328125, 0.162841796875], "tokens": [1468, 415, 308, 7607, 863, 596, 32, 1322, 1157, 301]}
{"line_number": 631, "line_type": "generated", "code": "\n    /**\n     * <p>Checks if a String is empty (\"\") or null.</p>\n     *\n     * <pre>\n     * StringUtils.isEmpty(null)      = true\n     * StringUtils.isEmpty(\"\")        = true\n     * StringUtils.isEmpty", "entropy": 0.12237548828125, "is_bug_line": false, "sus_score": 0.3384424149990082, "per_token_entropy": [0.99755859375, 0.630859375, 0.057830810546875, 0.0004532337188720703, 1.384765625, 0.1436767578125, 0.0181121826171875, 1.7099609375, 0.058258056640625, 0.30126953125, 0.1063232421875, 0.324951171875, 0.4296875, 0.0098876953125, 0.00019943714141845703, 0.0007672309875488281, 0.0057373046875, 0.002605438232421875, 2.7418136596679688e-06, 0.0007987022399902344, 0.0042877197265625, 0.000347137451171875, 0.10418701171875, 0.0015392303466796875, 0.005008697509765625, 0.0014858245849609375, 0.0008401870727539062, 0.0001233816146850586, 0.0011234283447265625, 0.0029659271240234375, 4.267692565917969e-05, 0.037750244140625, 0.0111846923828125, 7.867813110351562e-06, 1.4901161193847656e-05, 0.0011425018310546875, 7.450580596923828e-05, 0.0002524852752685547, 0.00028896331787109375, 1.1563301086425781e-05, 8.225440979003906e-06, 3.159046173095703e-05, 0.00011360645294189453, 0.002666473388671875, 2.9802322387695312e-06, 7.152557373046875e-06, 1.7881393432617188e-05, 0.0005946159362792969, 1.239776611328125e-05, 6.854534149169922e-05, 0.00350189208984375, 0.0005650520324707031], "tokens": [284, 1022, 275, 319, 333, 98, 48, 19393, 415, 312, 892, 438, 3502, 2884, 657, 556, 744, 1730, 98, 48, 275, 319, 275, 319, 333, 1001, 48, 275, 319, 26617, 32, 6393, 26, 1693, 27, 647, 280, 861, 275, 319, 26617, 32, 6393, 17987, 351, 280, 861, 275, 319, 26617, 32, 6393]}
{"line_number": 629, "line_type": "original", "code": "            result.append(str.substring(0, upper));", "entropy": 0.98388671875, "is_bug_line": false, "sus_score": 0.3339526951313019, "per_token_entropy": [6.8125, 2.78515625, 0.006893157958984375, 0.034393310546875, 0.11492919921875, 0.45751953125, 0.004886627197265625, 0.0020294189453125, 0.0025463104248046875, 1.892578125, 0.0018129348754882812, 0.65234375, 0.0185699462890625], "tokens": [1468, 1056, 32, 1689, 26, 466, 32, 8723, 26, 34, 30, 8342, 876]}
{"line_number": 629, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.3339526951313019, "per_token_entropy": [], "tokens": []}
{"line_number": 641, "line_type": "original", "code": "        return result.toString();", "entropy": 0.89697265625, "is_bug_line": false, "sus_score": 0.32965248823165894, "per_token_entropy": [4.578125, 0.7607421875, 0.027099609375, 0.002056121826171875, 0.0003097057342529297, 0.0138092041015625], "tokens": [351, 442, 1056, 32, 3108, 473]}
{"line_number": 641, "line_type": "generated", "code": "\n    /**\n     * <p>Abbreviates a string nicely. This returns a new String\n     * of a specified length such that the beginning and end of the\n     * String are demarcated by the specified delimiters.</p>\n     *\n    ", "entropy": 0.458740234375, "is_bug_line": false, "sus_score": 0.32965248823165894, "per_token_entropy": [0.9384765625, 0.480712890625, 0.049224853515625, 0.0006394386291503906, 1.615234375, 0.1636962890625, 0.019683837890625, 1.5478515625, 2.8133392333984375e-05, 0.00021159648895263672, 0.01140594482421875, 0.61474609375, 0.90087890625, 0.47509765625, 0.361328125, 1.99609375, 0.355224609375, 0.060272216796875, 0.3349609375, 0.4599609375, 0.00010764598846435547, 0.2939453125, 0.62451171875, 0.55322265625, 0.049407958984375, 0.5810546875, 0.00443267822265625, 0.66015625, 0.1041259765625, 0.00530242919921875, 0.034637451171875, 0.112548828125, 0.00244903564453125, 0.7041015625, 1.4185905456542969e-05, 0.226806640625, 1.1875, 2.064453125, 0.09161376953125, 0.00021183490753173828, 0.0001004934310913086, 0.0751953125, 0.67236328125, 2.68359375, 1.7861328125, 0.0040740966796875, 0.5244140625, 9.655952453613281e-06, 0.00411224365234375, 0.01422119140625, 0.00061798095703125, 0.40869140625], "tokens": [284, 1022, 275, 319, 333, 98, 48, 44336, 4788, 1196, 312, 802, 46931, 32, 1348, 3217, 312, 537, 892, 275, 319, 432, 312, 3191, 3104, 3751, 688, 322, 13672, 461, 943, 432, 322, 275, 319, 892, 884, 409, 3303, 85, 733, 810, 322, 3191, 409, 45919, 1730, 98, 48, 275, 319, 275]}
{"line_number": 635, "line_type": "original", "code": "            result.append(str.substring(0, upper));", "entropy": 0.775390625, "is_bug_line": false, "sus_score": 0.32952821254730225, "per_token_entropy": [6.328125, 2.15234375, 0.00923919677734375, 0.02557373046875, 0.04229736328125, 0.302001953125, 0.0037136077880859375, 0.00146484375, 0.003276824951171875, 0.68359375, 0.0017528533935546875, 0.50537109375, 0.0196075439453125], "tokens": [1468, 1056, 32, 1689, 26, 466, 32, 8723, 26, 34, 30, 8342, 876]}
{"line_number": 635, "line_type": "generated", "code": "\n    //-----------------------------------------------------------------------\n    /**\n     * Abbreviates a string nicely.\n     * \n     * This method searches for the first space after the lower limit and abbreviates\n     * the String there.\n     * \n     * @param str         the string to", "entropy": 0.1932373046875, "is_bug_line": false, "sus_score": 0.32952821254730225, "per_token_entropy": [1.2109375, 1.521484375, 0.04510498046875, 0.020904541015625, 0.0300140380859375, 0.0220947265625, 0.00024271011352539062, 2.26171875, 0.019989013671875, 2.849102020263672e-05, 5.9485435485839844e-05, 0.0007486343383789062, 0.005298614501953125, 0.2392578125, 0.53759765625, 0.078857421875, 0.038726806640625, 0.0001417398452758789, 0.2222900390625, 4.374980926513672e-05, 0.025604248046875, 0.004726409912109375, 0.6455078125, 0.0006628036499023438, 0.00031304359436035156, 0.0025119781494140625, 0.0716552734375, 0.0897216796875, 0.0064697265625, 0.011138916015625, 0.00849151611328125, 0.0113525390625, 0.0038967132568359375, 5.412101745605469e-05, 3.0994415283203125e-06, 0.005817413330078125, 0.00014197826385498047, 0.00026106834411621094, 0.006534576416015625, 0.0045013427734375, 0.037261962890625, 1.6328125, 0.00011599063873291016, 0.1019287109375, 3.6597251892089844e-05, 0.041412353515625, 0.00608062744140625, 0.0014925003051757812, 1.0537109375, 0.0020198822021484375, 0.01396942138671875, 0.001285552978515625], "tokens": [284, 434, 42510, 284, 1022, 275, 319, 399, 2882, 268, 4788, 1196, 312, 802, 46931, 32, 275, 319, 5384, 319, 1348, 1411, 33243, 436, 322, 1932, 5122, 2685, 322, 7216, 2723, 461, 31838, 4788, 1196, 275, 319, 322, 892, 2017, 32, 275, 319, 5384, 319, 477, 753, 596, 263, 322, 802, 372]}
{"line_number": 622, "line_type": "original", "code": "        if (upper < lower) {", "entropy": 1.1904296875, "is_bug_line": true, "sus_score": 0.32842543721199036, "per_token_entropy": [3.62890625, 1.91796875, 0.053558349609375, 2.0859375, 1.6494140625, 0.1326904296875, 0.017120361328125, 0.03851318359375], "tokens": [351, 415, 308, 7607, 333, 7216, 27, 301]}
{"line_number": 622, "line_type": "generated", "code": "\n\n    /**\n     * <p>\n     * Checks if a String is empty (\"\") or null.\n     * </p>\n     *\n     * <pre>\n     * StringUtils.isEmpty(null)      = true\n     * StringUtils.isEmpty(\"\")        = true", "entropy": 0.186279296875, "is_bug_line": true, "sus_score": 0.32842543721199036, "per_token_entropy": [2.087890625, 0.5537109375, 0.03619384765625, 0.0005521774291992188, 1.359375, 0.050933837890625, 0.0111541748046875, 2.271484375, 9.632110595703125e-05, 1.4482421875, 0.078369140625, 0.31201171875, 0.148681640625, 0.341796875, 0.385498046875, 0.0110626220703125, 0.0001481771469116211, 0.0008215904235839844, 0.0078582763671875, 0.0109100341796875, 0.0022029876708984375, 0.0001163482666015625, 0.03271484375, 1.823902130126953e-05, 0.0019168853759765625, 0.00147247314453125, 0.00033974647521972656, 0.4150390625, 0.0005230903625488281, 0.01337432861328125, 0.0009312629699707031, 0.0002982616424560547, 0.0001125335693359375, 0.0021381378173828125, 0.0034618377685546875, 8.20159912109375e-05, 0.036651611328125, 0.004619598388671875, 1.049041748046875e-05, 2.384185791015625e-05, 0.0028228759765625, 8.285045623779297e-05, 0.0002143383026123047, 0.00032138824462890625, 1.5974044799804688e-05, 7.152557373046875e-06, 3.421306610107422e-05, 9.965896606445312e-05, 0.051483154296875, 3.6954879760742188e-06, 1.0728836059570312e-05, 1.7762184143066406e-05], "tokens": [446, 1022, 275, 319, 333, 98, 48, 275, 319, 17279, 415, 312, 892, 438, 3502, 2884, 657, 556, 744, 32, 275, 319, 576, 98, 48, 275, 319, 275, 319, 333, 1001, 48, 275, 319, 26617, 32, 6393, 26, 1693, 27, 647, 280, 861, 275, 319, 26617, 32, 6393, 17987, 351, 280, 861]}
{"line_number": 628, "line_type": "original", "code": "        if (index == -1) {", "entropy": 0.9208984375, "is_bug_line": false, "sus_score": 0.32842543721199036, "per_token_entropy": [3.330078125, 1.9140625, 0.04376220703125, 0.30517578125, 1.6669921875, 0.0660400390625, 0.0009522438049316406, 0.94677734375, 0.0185394287109375], "tokens": [351, 415, 308, 1055, 610, 429, 35, 27, 301]}
{"line_number": 628, "line_type": "generated", "code": "\n    /**\n     * <p>Abbreviates a String using ellipses. This will turn\n     * \"Now is the time for all good men\" into \"Now is the time for...\"</p>\n     *\n     * <p>Specifically", "entropy": 0.1514892578125, "is_bug_line": false, "sus_score": 0.32842543721199036, "per_token_entropy": [1.0341796875, 0.439208984375, 0.043792724609375, 0.0005445480346679688, 1.6630859375, 0.08941650390625, 0.0132293701171875, 1.2958984375, 3.3974647521972656e-05, 0.00022733211517333984, 0.010467529296875, 0.8515625, 0.087890625, 0.94775390625, 0.0009741783142089844, 0.0006313323974609375, 0.01033782958984375, 0.314697265625, 0.05718994140625, 0.0011606216430664062, 0.271728515625, 5.7578086853027344e-05, 0.03717041015625, 0.01514434814453125, 1.6450881958007812e-05, 4.9591064453125e-05, 0.01227569580078125, 0.00035071372985839844, 0.0013895034790039062, 0.003582000732421875, 0.01702880859375, 0.1944580078125, 0.00025343894958496094, 0.049530029296875, 0.0008082389831542969, 0.0182037353515625, 0.008453369140625, 0.010894775390625, 0.0015277862548828125, 0.0206146240234375, 0.00951385498046875, 4.649162292480469e-06, 0.00667572021484375, 0.00370025634765625, 0.0001100301742553711, 0.20361328125, 0.000606536865234375, 0.0180206298828125, 0.0654296875, 0.0031070709228515625, 0.02276611328125, 0.014068603515625], "tokens": [284, 1022, 275, 319, 333, 98, 48, 44336, 4788, 1196, 312, 892, 1471, 709, 2794, 1464, 32, 1348, 1098, 6927, 275, 319, 313, 6529, 438, 322, 1133, 436, 1169, 4644, 10446, 20, 1991, 313, 6529, 438, 322, 1133, 436, 13585, 377, 98, 48, 275, 319, 275, 319, 333, 98, 48, 16552, 1247]}
{"line_number": 610, "line_type": "original", "code": "        if (str.length() == 0) {", "entropy": 1.126953125, "is_bug_line": false, "sus_score": 0.3278876543045044, "per_token_entropy": [4.38671875, 2.3359375, 0.0648193359375, 2.0234375, 0.8984375, 0.323974609375, 0.007720947265625, 3.13671875, 0.1793212890625, 0.03021240234375, 0.05560302734375, 0.0810546875], "tokens": [351, 415, 308, 466, 32, 1322, 346, 610, 225, 34, 27, 301]}
{"line_number": 610, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.3278876543045044, "per_token_entropy": [], "tokens": []}
{"line_number": 618, "line_type": "original", "code": "        if (upper == -1 || upper > str.length()) {", "entropy": 0.939453125, "is_bug_line": false, "sus_score": 0.3274732530117035, "per_token_entropy": [3.8359375, 2.041015625, 0.05792236328125, 1.91796875, 3.18359375, 1.2314453125, 0.001605987548828125, 1.501953125, 0.135498046875, 0.058837890625, 0.072021484375, 0.01261138916015625, 0.0004787445068359375, 0.015838623046875, 0.0303802490234375], "tokens": [351, 415, 308, 7607, 610, 429, 35, 1276, 8342, 848, 596, 32, 1322, 1157, 301]}
{"line_number": 618, "line_type": "generated", "code": "\n    /**\n     * Checks if a String is empty (\"\") or null.\n     * <p>\n     * <pre>\n     * StringUtils.isEmpty(null)      = true\n     * StringUtils.isEmpty(\"\")        = true\n     * StringUtils.isEmpty(\" \")", "entropy": 0.1629638671875, "is_bug_line": false, "sus_score": 0.3274732530117035, "per_token_entropy": [0.962890625, 0.453125, 0.038909912109375, 0.0004725456237792969, 3.373046875, 0.192138671875, 0.61474609375, 0.353271484375, 0.43310546875, 0.62548828125, 0.0233612060546875, 0.0008764266967773438, 0.0023441314697265625, 0.005268096923828125, 0.00525665283203125, 0.008819580078125, 0.000926971435546875, 0.43603515625, 0.027099609375, 0.0286712646484375, 0.0013837814331054688, 0.00016224384307861328, 0.77001953125, 0.06610107421875, 0.00047516822814941406, 7.081031799316406e-05, 0.00024700164794921875, 0.003814697265625, 7.474422454833984e-05, 0.029693603515625, 0.003170013427734375, 7.510185241699219e-06, 1.704692840576172e-05, 0.0025348663330078125, 5.137920379638672e-05, 0.00017523765563964844, 0.0002892017364501953, 1.049041748046875e-05, 7.748603820800781e-06, 2.777576446533203e-05, 0.00010657310485839844, 0.0095367431640625, 5.0067901611328125e-06, 8.58306884765625e-06, 1.811981201171875e-05, 0.00052642822265625, 1.1324882507324219e-05, 7.092952728271484e-05, 0.0005631446838378906, 0.0005159378051757812, 0.0010213851928710938, 0.0007338523864746094], "tokens": [284, 1022, 275, 319, 17279, 415, 312, 892, 438, 3502, 2884, 657, 556, 744, 32, 275, 319, 333, 98, 48, 275, 319, 333, 1001, 48, 275, 319, 26617, 32, 6393, 26, 1693, 27, 647, 280, 861, 275, 319, 26617, 32, 6393, 17987, 351, 280, 861, 275, 319, 26617, 32, 6393, 440, 7788]}
{"line_number": 607, "line_type": "original", "code": "        if (str == null) {", "entropy": 1.087890625, "is_bug_line": false, "sus_score": 0.32592302560806274, "per_token_entropy": [3.69140625, 2.41015625, 0.06451416015625, 1.40234375, 0.884765625, 0.005107879638671875, 0.082763671875, 0.1610107421875], "tokens": [351, 415, 308, 466, 610, 744, 27, 301]}
{"line_number": 607, "line_type": "generated", "code": "\n    /**\n     * <p>Checks if a String is empty (\"\") or null.</p>\n     *\n     * <pre>\n     * StringUtils.isEmpty(null)      = true\n     * StringUtils.isEmpty(\"\")        = true\n     * StringUtils.isEmpty", "entropy": 0.1236572265625, "is_bug_line": false, "sus_score": 0.32592302560806274, "per_token_entropy": [1.326171875, 0.7421875, 0.05078125, 0.0006022453308105469, 1.34375, 0.09722900390625, 0.0169677734375, 1.521484375, 0.0545654296875, 0.29248046875, 0.1015625, 0.31787109375, 0.378173828125, 0.009857177734375, 0.0001863241195678711, 0.000850677490234375, 0.00562286376953125, 0.0022068023681640625, 3.0994415283203125e-06, 0.0007181167602539062, 0.00359344482421875, 0.0003554821014404297, 0.09686279296875, 0.0014715194702148438, 0.005100250244140625, 0.0014591217041015625, 0.0007419586181640625, 0.00012123584747314453, 0.0011014938354492188, 0.002803802490234375, 4.553794860839844e-05, 0.033355712890625, 0.011260986328125, 7.510185241699219e-06, 1.2874603271484375e-05, 0.0011701583862304688, 7.426738739013672e-05, 0.0002124309539794922, 0.00027680397033691406, 1.1563301086425781e-05, 7.3909759521484375e-06, 3.1113624572753906e-05, 8.797645568847656e-05, 0.0032444000244140625, 2.9802322387695312e-06, 6.556510925292969e-06, 1.5854835510253906e-05, 0.0005474090576171875, 1.0848045349121094e-05, 5.459785461425781e-05, 0.0005507469177246094, 0.0004661083221435547], "tokens": [284, 1022, 275, 319, 333, 98, 48, 19393, 415, 312, 892, 438, 3502, 2884, 657, 556, 744, 1730, 98, 48, 275, 319, 275, 319, 333, 1001, 48, 275, 319, 26617, 32, 6393, 26, 1693, 27, 647, 280, 861, 275, 319, 26617, 32, 6393, 17987, 351, 280, 861, 275, 319, 26617, 32, 6393]}
{"line_number": 611, "line_type": "original", "code": "            return StringUtils.EMPTY;", "entropy": 2.986328125, "is_bug_line": false, "sus_score": 0.32557716965675354, "per_token_entropy": [7.01171875, 2.6640625, 2.91015625, 0.004669189453125, 5.12109375, 0.2156982421875], "tokens": [1468, 442, 26617, 32, 13073, 45]}
{"line_number": 611, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.32557716965675354, "per_token_entropy": [], "tokens": []}
{"line_number": 851, "line_type": "original", "code": "", "entropy": 0.368896484375, "is_bug_line": false, "sus_score": 0.32229721546173096, "per_token_entropy": [0.368896484375], "tokens": [203]}
{"line_number": 851, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.32229721546173096, "per_token_entropy": [], "tokens": []}
{"line_number": 634, "line_type": "original", "code": "        } else if (index > upper) {", "entropy": 1.58203125, "is_bug_line": false, "sus_score": 0.3222048282623291, "per_token_entropy": [3.474609375, 3.984375, 3.44140625, 1.7587890625, 0.011138916015625, 0.307861328125, 2.50390625, 0.2227783203125, 0.107177734375, 0.01141357421875], "tokens": [351, 320, 813, 415, 308, 1055, 848, 8342, 27, 301]}
{"line_number": 634, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.3222048282623291, "per_token_entropy": [], "tokens": []}
{"line_number": 636, "line_type": "original", "code": "            result.append(StringUtils.defaultString(appendToEnd));", "entropy": 0.8828125, "is_bug_line": false, "sus_score": 0.3159567713737488, "per_token_entropy": [6.83203125, 2.619140625, 0.00922393798828125, 0.033935546875, 0.1395263671875, 1.5341796875, 0.0014019012451171875, 0.25537109375, 0.0113983154296875, 0.007541656494140625, 0.010467529296875, 0.0005626678466796875, 0.0183258056640625], "tokens": [1468, 1056, 32, 1689, 26, 15209, 32, 1536, 652, 26, 30716, 2102, 876]}
{"line_number": 636, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.3159567713737488, "per_token_entropy": [], "tokens": []}
{"line_number": 619, "line_type": "original", "code": "            upper = str.length();", "entropy": 2.244140625, "is_bug_line": false, "sus_score": 0.313435822725296, "per_token_entropy": [6.734375, 5.58984375, 0.306640625, 2.791015625, 0.0439453125, 0.08154296875, 0.1522216796875], "tokens": [1468, 8342, 280, 596, 32, 1322, 473]}
{"line_number": 619, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.313435822725296, "per_token_entropy": [], "tokens": []}
{"line_number": 608, "line_type": "original", "code": "            return null;", "entropy": 2.919921875, "is_bug_line": false, "sus_score": 0.31159842014312744, "per_token_entropy": [6.7890625, 2.6484375, 2.20703125, 0.035400390625], "tokens": [1468, 442, 744, 45]}
{"line_number": 608, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.31159842014312744, "per_token_entropy": [], "tokens": []}
