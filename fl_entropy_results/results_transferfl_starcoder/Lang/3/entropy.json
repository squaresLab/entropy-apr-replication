{"line_number": 494, "line_type": "original", "code": "                dec = str.substring(decPos + 1);", "entropy": 1.470703125, "is_bug_line": false, "sus_score": 0.5463399291038513, "per_token_entropy": [3.9609375, 8.96875, 0.231201171875, 2.974609375, 0.1456298828125, 0.018707275390625, 0.0017070770263671875, 0.3603515625, 0.0007114410400390625, 0.040008544921875, 0.004932403564453125, 0.007205963134765625, 2.41015625], "tokens": [2071, 5973, 280, 596, 32, 8723, 26, 6114, 2996, 474, 225, 35, 293]}
{"line_number": 494, "line_type": "generated", "code": "\n                    }\n                    try {\n                        return createDouble(numeric);\n                    } catch (final NumberFormatException nfe) { // NOPMD\n                        // ignore the bad float\n                    }\n                    return createBigDecimal(numeric);\n                case 'd' :\n                case 'D", "entropy": 0.151611328125, "is_bug_line": false, "sus_score": 0.5463399291038513, "per_token_entropy": [0.444580078125, 0.007717132568359375, 0.1781005859375, 1.6748046875, 0.0027980804443359375, 0.044036865234375, 0.2822265625, 0.05535888671875, 0.2474365234375, 7.450580596923828e-05, 0.067138671875, 0.10687255859375, 0.031341552734375, 0.00011980533599853516, 0.0084381103515625, 0.0061187744140625, 0.0005106925964355469, 0.0006866455078125, 1.2993812561035156e-05, 0.0201416015625, 0.0013418197631835938, 0.011444091796875, 0.0018186569213867188, 0.09429931640625, 0.0002663135528564453, 4.4226646423339844e-05, 0.00012612342834472656, 0.3251953125, 0.0908203125, 0.6748046875, 0.09271240234375, 0.52294921875, 0.787109375, 0.10784912109375, 0.00034737586975097656, 0.2208251953125, 1.408203125, 0.056671142578125, 0.08929443359375, 0.00047135353088378906, 0.01265716552734375, 0.12469482421875, 0.07574462890625, 0.00539398193359375, 0.00012600421905517578, 0.0003466606140136719, 0.0002206563949584961, 0.00012302398681640625, 0.0010547637939453125, 7.975101470947266e-05, 3.814697265625e-06, 1.3113021850585938e-06], "tokens": [528, 320, 528, 1596, 301, 715, 442, 1487, 4075, 26, 10125, 293, 528, 320, 2368, 308, 3220, 5104, 25944, 310, 1225, 27, 301, 434, 489, 1952, 5108, 715, 434, 5079, 322, 6658, 1897, 528, 320, 528, 442, 1487, 20827, 26, 10125, 293, 400, 1135, 330, 86, 25, 499, 400, 1135, 330, 54]}
{"line_number": 594, "line_type": "original", "code": "                if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {", "entropy": 0.9892578125, "is_bug_line": true, "sus_score": 0.5237435102462769, "per_token_entropy": [6.94140625, 5.8515625, 7.27734375, 5.70703125, 0.36279296875, 0.19140625, 0.00027441978454589844, 0.00806427001953125, 0.11822509765625, 0.119140625, 0.026580810546875, 0.02752685546875, 0.018829345703125, 0.0003685951232910156, 0.00681304931640625, 0.0016326904296875, 0.00424957275390625, 7.331371307373047e-05, 0.0183563232421875, 0.0005679130554199219, 0.62109375, 0.0330810546875, 0.2291259765625, 0.024627685546875, 0.00290679931640625, 0.0005984306335449219, 0.043548583984375, 0.0701904296875], "tokens": [2071, 415, 11007, 88, 32, 28823, 11949, 346, 1276, 308, 88, 32, 1808, 882, 346, 610, 225, 34, 32, 34, 56, 962, 653, 464, 76, 14641, 2610, 301]}
{"line_number": 594, "line_type": "generated", "code": "\n            return null;\n        }\n        return Float.valueOf(str);\n    }\n\n    /**\n     * <p>Convert a <code>String</code> to a <code>Double</code>.</p>\n     *\n     * <p>Returns <", "entropy": 0.0494384765625, "is_bug_line": true, "sus_score": 0.5237435102462769, "per_token_entropy": [0.26025390625, 0.10400390625, 0.048919677734375, 0.01611328125, 0.09307861328125, 0.0019474029541015625, 0.10595703125, 0.66064453125, 0.366455078125, 0.007030487060546875, 0.0100555419921875, 0.00206756591796875, 0.012725830078125, 0.45458984375, 0.044525146484375, 0.0009236335754394531, 0.0775146484375, 0.07623291015625, 0.004390716552734375, 3.9577484130859375e-05, 0.0038738250732421875, 4.8995018005371094e-05, 0.000110626220703125, 0.0035915374755859375, 0.00034499168395996094, 0.0008764266967773438, 1.1205673217773438e-05, 2.7418136596679688e-06, 0.004871368408203125, 0.0002510547637939453, 7.271766662597656e-06, 3.7550926208496094e-05, 0.0006356239318847656, 0.005100250244140625, 0.00019538402557373047, 5.733966827392578e-05, 6.794929504394531e-05, 0.1448974609375, 0.0030994415283203125, 4.756450653076172e-05, 0.021820068359375, 3.898143768310547e-05, 0.00012385845184326172, 0.0012788772583007812, 1.4066696166992188e-05, 0.0290374755859375, 3.9696693420410156e-05, 0.0005817413330078125, 0.00012409687042236328, 0.0018224716186523438, 0.0006437301635742188, 0.000152587890625], "tokens": [324, 442, 744, 45, 291, 320, 291, 442, 8174, 32, 9162, 26, 466, 293, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 6720, 312, 333, 687, 48, 652, 377, 687, 48, 372, 312, 333, 687, 48, 4075, 377, 687, 12689, 98, 48, 275, 319, 275, 319, 333, 98, 48, 6970, 333]}
{"line_number": 492, "line_type": "original", "code": "                dec = str.substring(decPos + 1, expPos);", "entropy": 1.2001953125, "is_bug_line": false, "sus_score": 0.5100904703140259, "per_token_entropy": [4.6328125, 6.84375, 0.2147216796875, 2.501953125, 0.270751953125, 0.0276336669921875, 0.003032684326171875, 1.35546875, 0.0009264945983886719, 0.04248046875, 0.0269622802734375, 0.0152587890625, 0.54541015625, 2.65234375, 0.0014333724975585938, 0.0721435546875], "tokens": [2071, 5973, 280, 596, 32, 8723, 26, 6114, 2996, 474, 225, 35, 30, 2910, 2996, 293]}
{"line_number": 492, "line_type": "generated", "code": "\n                    } catch (final NumberFormatException nfe) { // NOPMD\n                        // ignore the bad number\n                    }\n                    // else drop thru\n                case 'd' :\n                case 'D' :\n                    try {\n                        final Double d = NumberUtils.", "entropy": 0.1651611328125, "is_bug_line": false, "sus_score": 0.5100904703140259, "per_token_entropy": [0.1640625, 0.00386810302734375, 0.248046875, 0.01776123046875, 0.00455474853515625, 0.0011730194091796875, 5.614757537841797e-05, 0.031036376953125, 2.5033950805664062e-05, 0.004352569580078125, 0.0074310302734375, 0.391845703125, 0.00019919872283935547, 0.0001112222671508789, 4.863739013671875e-05, 0.048828125, 0.15185546875, 0.86328125, 0.084228515625, 0.08685302734375, 1.0810546875, 0.245361328125, 0.00019359588623046875, 0.253173828125, 1.078125, 1.09375, 1.626953125, 0.46435546875, 0.0007567405700683594, 0.282958984375, 0.015716552734375, 0.00011980533599853516, 0.00026297569274902344, 0.0002465248107910156, 0.00012934207916259766, 0.0009088516235351562, 2.5033950805664062e-05, 4.410743713378906e-06, 1.1920928955078125e-06, 0.0002701282501220703, 7.796287536621094e-05, 0.0546875, 0.071533203125, 0.0007214546203613281, 0.0214691162109375, 0.083740234375, 0.022735595703125, 0.0018701553344726562, 0.01092529296875, 0.06268310546875, 4.2557716369628906e-05, 0.00017595291137695312], "tokens": [528, 320, 2368, 308, 3220, 5104, 25944, 310, 1225, 27, 301, 434, 489, 1952, 5108, 715, 434, 5079, 322, 6658, 1451, 528, 320, 528, 434, 813, 6278, 361, 2947, 400, 1135, 330, 86, 25, 499, 400, 1135, 330, 54, 25, 499, 528, 1596, 301, 715, 1158, 6934, 343, 280, 5104, 2755, 32]}
{"line_number": 571, "line_type": "original", "code": "            exp = str.substring(expPos + 1, str.length());", "entropy": 1.224609375, "is_bug_line": false, "sus_score": 0.5100904703140259, "per_token_entropy": [6.7109375, 6.734375, 0.41259765625, 3.4765625, 0.591796875, 0.62939453125, 0.00632476806640625, 0.1644287109375, 0.0207061767578125, 0.07305908203125, 0.007709503173828125, 0.0169525146484375, 1.4453125, 0.349609375, 0.01995849609375, 0.0025119781494140625, 0.144775390625], "tokens": [1468, 2910, 280, 596, 32, 8723, 26, 2832, 2996, 474, 225, 35, 30, 596, 32, 1322, 1035]}
{"line_number": 571, "line_type": "generated", "code": "\n    }\n\n    /**\n     * <p>Utility method for {@link #createNumber(java.lang.String)}.</p>\n     * \n     * <p>Checks whether the specified string is a valid representation\n     * of a <code>float</", "entropy": 0.227294921875, "is_bug_line": false, "sus_score": 0.5100904703140259, "per_token_entropy": [0.386474609375, 0.0026760101318359375, 0.51708984375, 0.15185546875, 0.0161285400390625, 0.0001571178436279297, 0.0792236328125, 0.0005249977111816406, 0.002658843994140625, 0.822265625, 0.0010662078857421875, 0.01174163818359375, 0.019866943359375, 5.6862831115722656e-05, 0.0023441314697265625, 0.0038394927978515625, 0.00336456298828125, 0.0002256631851196289, 0.017425537109375, 0.0001404285430908203, 8.296966552734375e-05, 8.285045623779297e-05, 0.0003058910369873047, 0.0362548828125, 0.0024318695068359375, 0.00013887882232666016, 0.0002168416976928711, 0.002960205078125, 0.0008955001831054688, 1.2275390625, 0.0002243518829345703, 0.26123046875, 0.0021610260009765625, 0.0036716461181640625, 1.7197265625, 0.53173828125, 0.0141448974609375, 0.490966796875, 0.1905517578125, 0.492919921875, 0.1258544921875, 1.23046875, 1.1943359375, 0.521484375, 8.213520050048828e-05, 0.03887939453125, 0.0270233154296875, 1.0419921875, 0.0009698867797851562, 0.0002238750457763672, 0.623046875, 0.0012922286987304688], "tokens": [284, 320, 446, 1022, 275, 319, 333, 98, 48, 11330, 1411, 436, 3088, 1204, 588, 1297, 1918, 26, 1859, 32, 1581, 32, 652, 4370, 1730, 98, 48, 275, 319, 5384, 319, 333, 98, 48, 19393, 4946, 322, 3191, 802, 438, 312, 2080, 10293, 275, 319, 432, 312, 333, 687, 48, 1808, 377]}
{"line_number": 575, "line_type": "original", "code": "        if (dec == null && exp == null) { // no decimal point and no exponent", "entropy": 2.23046875, "is_bug_line": false, "sus_score": 0.5073680877685547, "per_token_entropy": [4.19140625, 1.0908203125, 0.0251922607421875, 14.2578125, 4.015625, 2.873046875, 1.3974609375, 1.7255859375, 0.2242431640625, 0.00286865234375, 0.344482421875, 0.25390625, 3.583984375, 5.43359375, 0.56103515625, 1.6474609375, 0.349853515625, 0.370361328125, 0.032989501953125], "tokens": [351, 415, 308, 6114, 610, 744, 962, 2910, 610, 744, 27, 301, 434, 1289, 10245, 2260, 461, 1289, 19715]}
{"line_number": 575, "line_type": "generated", "code": "\n            if (str.charAt(i)!= '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * <p>Creates a new instance of <code>Integer</code> initialized to the value\n    ", "entropy": 0.163818359375, "is_bug_line": false, "sus_score": 0.5073680877685547, "per_token_entropy": [0.29931640625, 0.1282958984375, 0.0238494873046875, 0.017822265625, 0.00023365020751953125, 6.61611557006836e-05, 0.00017714500427246094, 0.0013532638549804688, 0.00048065185546875, 0.03204345703125, 0.01629638671875, 0.00011050701141357422, 0.025238037109375, 0.01560211181640625, 0.04388427734375, 0.01678466796875, 0.00041675567626953125, 0.0002758502960205078, 0.007450103759765625, 7.62939453125e-05, 0.051300048828125, 0.000576019287109375, 0.033905029296875, 0.002155303955078125, 0.266845703125, 0.0001780986785888672, 0.047332763671875, 0.002838134765625, 0.62890625, 0.1439208984375, 0.0199432373046875, 0.00015735626220703125, 0.10406494140625, 0.00044536590576171875, 0.0035724639892578125, 1.7568359375, 0.01319122314453125, 0.72607421875, 0.8837890625, 0.049102783203125, 0.49560546875, 0.0003612041473388672, 0.0001804828643798828, 1.1953125, 0.0003120899200439453, 0.00021970272064208984, 0.1324462890625, 1.0595703125, 0.11041259765625, 0.1165771484375, 0.018798828125, 0.01849365234375], "tokens": [324, 415, 308, 466, 32, 15611, 26, 91, 27, 863, 330, 34, 683, 301, 400, 442, 901, 45, 324, 320, 291, 320, 291, 442, 861, 45, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 26001, 312, 537, 1980, 432, 333, 687, 48, 3061, 377, 687, 48, 8765, 372, 322, 786, 275]}
{"line_number": 488, "line_type": "original", "code": "            if (expPos > -1) { // there is an exponent", "entropy": 1.74609375, "is_bug_line": false, "sus_score": 0.5052258968353271, "per_token_entropy": [8.6484375, 3.427734375, 0.21435546875, 4.41796875, 1.556640625, 0.75244140625, 0.163818359375, 0.0031719207763671875, 0.7734375, 0.1529541015625, 2.50390625, 3.42578125, 0.139892578125, 0.007511138916015625, 0.0009083747863769531], "tokens": [1468, 415, 308, 2832, 2996, 848, 429, 35, 27, 301, 434, 2017, 438, 600, 19715]}
{"line_number": 488, "line_type": "generated", "code": "\n                            return f;\n                        }\n                    } catch (final NumberFormatException nfe) { // NOPMD\n                        // ignore the bad float\n                    }\n                    throw new NumberFormatException(str + \" is not a valid number.\");\n                case 'd' :\n                case", "entropy": 0.09246826171875, "is_bug_line": false, "sus_score": 0.5052258968353271, "per_token_entropy": [0.384521484375, 0.1531982421875, 0.15966796875, 0.01264190673828125, 0.09283447265625, 0.002033233642578125, 0.145751953125, 0.0027923583984375, 0.052886962890625, 0.0090179443359375, 0.0012845993041992188, 0.0016145706176757812, 5.364418029785156e-05, 0.053466796875, 1.4424324035644531e-05, 0.00229644775390625, 0.0091094970703125, 0.381591796875, 6.842613220214844e-05, 7.975101470947266e-05, 6.783008575439453e-05, 0.030914306640625, 0.0127105712890625, 1.640625, 0.227294921875, 0.1431884765625, 0.98779296875, 0.02362060546875, 0.0001195669174194336, 0.0286102294921875, 0.152099609375, 0.00011301040649414062, 0.00035572052001953125, 0.0006670951843261719, 0.0011529922485351562, 0.0234375, 0.0015048980712890625, 0.0013818740844726562, 0.0007910728454589844, 9.322166442871094e-05, 1.71661376953125e-05, 5.519390106201172e-05, 0.048797607421875, 0.00036025047302246094, 0.0159149169921875, 0.0015115737915039062, 2.6106834411621094e-05, 0.0001785755157470703, 0.00020694732666015625, 9.500980377197266e-05, 0.0006799697875976562, 7.236003875732422e-05], "tokens": [1014, 442, 296, 45, 715, 320, 528, 320, 2368, 308, 3220, 5104, 25944, 310, 1225, 27, 301, 434, 489, 1952, 5108, 715, 434, 5079, 322, 6658, 1897, 528, 320, 528, 1422, 537, 5104, 25944, 26, 466, 474, 313, 438, 646, 312, 2080, 1451, 5368, 400, 1135, 330, 86, 25, 499, 400, 1135]}
{"line_number": 489, "line_type": "original", "code": "                if (expPos < decPos || expPos > str.length()) { // prevents double exponent causing IOOBE", "entropy": 1.3828125, "is_bug_line": false, "sus_score": 0.5048801898956299, "per_token_entropy": [6.67578125, 4.140625, 0.413330078125, 3.568359375, 1.48828125, 3.369140625, 5.10546875, 0.0036449432373046875, 1.75390625, 1.31640625, 0.1239013671875, 0.9267578125, 0.309814453125, 0.0128173828125, 0.038116455078125, 0.85302734375, 0.07196044921875, 2.15625, 2.080078125, 0.039794921875, 0.006618499755859375, 0.0258331298828125, 0.070556640625, 0.0001633167266845703, 0.0009407997131347656], "tokens": [2071, 415, 308, 2832, 2996, 333, 5973, 2996, 1276, 2910, 2996, 848, 596, 32, 1322, 1157, 301, 434, 29047, 2064, 19715, 19707, 4393, 4384, 55]}
{"line_number": 489, "line_type": "generated", "code": "\n                            return createFloat(numeric);\n                        }\n                    } catch (final NumberFormatException nfe) { // NOPMD\n                        // ignore the bad float\n                    }\n                    throw new NumberFormatException(str + \" is not a valid number.\");\n                case 'd'", "entropy": 0.137939453125, "is_bug_line": false, "sus_score": 0.5048801898956299, "per_token_entropy": [0.300048828125, 0.85302734375, 1.1669921875, 0.1451416015625, 0.0013599395751953125, 0.06072998046875, 0.07611083984375, 0.07720947265625, 0.0006093978881835938, 0.1875, 0.0026874542236328125, 0.049285888671875, 0.01068878173828125, 0.0011434555053710938, 0.0013093948364257812, 5.91278076171875e-05, 0.032989501953125, 1.71661376953125e-05, 0.003429412841796875, 0.01025390625, 0.3955078125, 0.00011801719665527344, 0.00011515617370605469, 0.00020253658294677734, 0.033721923828125, 0.029632568359375, 2.015625, 0.1109619140625, 0.10443115234375, 0.80126953125, 0.039886474609375, 0.00023567676544189453, 0.05511474609375, 0.53662109375, 0.00011241436004638672, 0.00048613548278808594, 0.0005612373352050781, 0.00177001953125, 0.025909423828125, 0.00591278076171875, 0.00530242919921875, 0.0005769729614257812, 8.594989776611328e-05, 1.2874603271484375e-05, 7.081031799316406e-05, 0.00598907470703125, 0.0003349781036376953, 0.0227203369140625, 0.00250244140625, 4.6133995056152344e-05, 0.00017786026000976562, 0.00024211406707763672], "tokens": [1014, 442, 1487, 3670, 26, 10125, 293, 715, 320, 528, 320, 2368, 308, 3220, 5104, 25944, 310, 1225, 27, 301, 434, 489, 1952, 5108, 715, 434, 5079, 322, 6658, 1897, 528, 320, 528, 1422, 537, 5104, 25944, 26, 466, 474, 313, 438, 646, 312, 2080, 1451, 5368, 400, 1135, 330, 86, 25]}
{"line_number": 593, "line_type": "original", "code": "                final Float f = createFloat(str);", "entropy": 1.52734375, "is_bug_line": true, "sus_score": 0.4995380938053131, "per_token_entropy": [8.4609375, 3.431640625, 0.33447265625, 0.0989990234375, 0.008087158203125, 1.6572265625, 0.1846923828125, 0.140380859375, 0.05133056640625, 0.908203125], "tokens": [2071, 1158, 8174, 296, 280, 1487, 3670, 26, 466, 293]}
{"line_number": 593, "line_type": "generated", "code": "\n        if (str == null) {\n            return null;\n        }\n        return new Float(str);\n    }\n\n    /**\n     * <p>Convert a <code>String</code> to a <code>Double</code>.</p>\n     *", "entropy": 0.06103515625, "is_bug_line": true, "sus_score": 0.4995380938053131, "per_token_entropy": [0.183349609375, 0.59326171875, 0.0194549560546875, 0.0706787109375, 0.003330230712890625, 0.0012559890747070312, 0.00971221923828125, 0.007137298583984375, 0.028900146484375, 0.01313018798828125, 0.0019407272338867188, 0.0008740425109863281, 0.0021076202392578125, 5.0902366638183594e-05, 0.07598876953125, 0.4814453125, 1.0302734375, 0.0020275115966796875, 0.0028438568115234375, 0.0297088623046875, 0.1790771484375, 0.07098388671875, 0.0016412734985351562, 0.08135986328125, 0.09002685546875, 0.0035552978515625, 3.3020973205566406e-05, 0.00389862060546875, 6.520748138427734e-05, 0.0001347064971923828, 0.004726409912109375, 0.0006427764892578125, 0.0010805130004882812, 1.0848045349121094e-05, 3.2186508178710938e-06, 0.004421234130859375, 0.0002675056457519531, 3.337860107421875e-06, 7.2479248046875e-05, 0.0009636878967285156, 0.01238250732421875, 0.00026798248291015625, 6.127357482910156e-05, 5.924701690673828e-05, 0.1363525390625, 0.0022411346435546875, 1.3470649719238281e-05, 0.0202484130859375, 3.8743019104003906e-05, 0.00013267993927001953, 0.0013170242309570312, 1.895427703857422e-05], "tokens": [291, 415, 308, 466, 610, 744, 27, 301, 324, 442, 744, 45, 291, 320, 291, 442, 537, 8174, 26, 466, 293, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 6720, 312, 333, 687, 48, 652, 377, 687, 48, 372, 312, 333, 687, 48, 4075, 377, 687, 12689, 98, 48, 275, 319]}
{"line_number": 621, "line_type": "original", "code": "        if (str == null) {", "entropy": 0.59130859375, "is_bug_line": false, "sus_score": 0.482613205909729, "per_token_entropy": [3.50390625, 0.60302734375, 0.09765625, 0.13427734375, 0.19482421875, 0.000881195068359375, 0.00403594970703125, 0.1900634765625], "tokens": [351, 415, 308, 466, 610, 744, 27, 301]}
{"line_number": 621, "line_type": "generated", "code": "\n     * @param str  the string to convert, may be null\n     * @return an <code>Integer</code> instance matching the string (or null if\n     *  the string is null)\n     * @throws NumberFormatException if the value cannot", "entropy": 0.1798095703125, "is_bug_line": false, "sus_score": 0.482613205909729, "per_token_entropy": [1.185546875, 0.0670166015625, 0.30224609375, 0.007354736328125, 0.0010080337524414062, 0.03399658203125, 0.12005615234375, 0.0882568359375, 0.0015392303466796875, 0.0084075927734375, 1.26953125, 0.000904083251953125, 1.9311904907226562e-05, 0.0030841827392578125, 0.0015926361083984375, 3.3736228942871094e-05, 0.00022232532501220703, 0.15185546875, 1.8525390625, 1.21484375, 0.0004761219024658203, 6.699562072753906e-05, 0.003780364990234375, 0.0002675056457519531, 1.3113021850585938e-06, 0.00811767578125, 1.0224609375, 0.5009765625, 0.00183868408203125, 0.0006442070007324219, 0.319580078125, 0.0030803680419921875, 0.111328125, 0.1619873046875, 0.0091552734375, 9.930133819580078e-05, 0.00635528564453125, 0.098876953125, 0.187255859375, 0.009918212890625, 0.19384765625, 0.031982421875, 0.007843017578125, 0.00225830078125, 0.0005106925964355469, 0.0206298828125, 0.0009899139404296875, 0.00115966796875, 0.00162506103515625, 0.00679779052734375, 0.3251953125, 0.00335693359375], "tokens": [275, 319, 477, 753, 596, 225, 322, 802, 372, 4483, 30, 1631, 526, 744, 275, 319, 477, 601, 600, 333, 687, 48, 3061, 377, 687, 48, 1980, 9215, 322, 802, 308, 271, 744, 415, 275, 319, 225, 322, 802, 438, 744, 27, 275, 319, 477, 5117, 5104, 25944, 415, 322, 786, 4881]}
{"line_number": 624, "line_type": "original", "code": "        for (int i = str.length() - 1; i >= 0; i--) {", "entropy": 0.681640625, "is_bug_line": false, "sus_score": 0.48077160120010376, "per_token_entropy": [2.982421875, 5.87109375, 0.0280914306640625, 0.4384765625, 0.00262451171875, 0.004405975341796875, 4.03125, 0.00893402099609375, 0.027313232421875, 0.0126495361328125, 0.0002777576446533203, 0.003383636474609375, 0.0001850128173828125, 0.01116180419921875, 0.00027108192443847656, 1.4228515625, 0.001857757568359375, 0.0003376007080078125, 0.0169677734375, 0.0230560302734375, 0.006420135498046875, 0.10601806640625], "tokens": [351, 436, 308, 410, 595, 280, 596, 32, 1322, 346, 429, 225, 35, 45, 595, 2377, 225, 34, 45, 595, 15353, 301]}
{"line_number": 624, "line_type": "generated", "code": "\n    }\n\n    /**\n     * <p>Convert a <code>String</code> to a <code>Long</code>, handling\n     * hex and octal notations.</p>\n     *\n     * <p>Returns <code>null</", "entropy": 0.039581298828125, "is_bug_line": false, "sus_score": 0.48077160120010376, "per_token_entropy": [1.046875, 0.235107421875, 0.4296875, 0.060089111328125, 0.0184478759765625, 0.00034427642822265625, 0.01418304443359375, 4.315376281738281e-05, 0.0001932382583618164, 0.02288818359375, 0.0014200210571289062, 0.002498626708984375, 4.4345855712890625e-05, 1.0967254638671875e-05, 0.000995635986328125, 0.00039196014404296875, 9.202957153320312e-05, 1.0728836059570312e-05, 0.0005998611450195312, 0.002819061279296875, 0.0007205009460449219, 1.8596649169921875e-05, 4.208087921142578e-05, 0.02099609375, 0.00034308433532714844, 1.2874603271484375e-05, 0.01137542724609375, 0.00025010108947753906, 0.002368927001953125, 2.3245811462402344e-05, 0.0003254413604736328, 0.0242919921875, 0.00015628337860107422, 1.5497207641601562e-06, 0.0011196136474609375, 0.00010406970977783203, 0.008148193359375, 3.2901763916015625e-05, 0.00017976760864257812, 0.0037860870361328125, 2.372264862060547e-05, 0.142578125, 7.390975952148438e-05, 0.0015306472778320312, 0.0003750324249267578, 0.0003459453582763672, 0.0024890899658203125, 0.00020503997802734375, 0.00013148784637451172, 0.00020706653594970703, 0.00022780895233154297, 2.181529998779297e-05], "tokens": [284, 320, 446, 1022, 275, 319, 333, 98, 48, 6720, 312, 333, 687, 48, 652, 377, 687, 48, 372, 312, 333, 687, 48, 3952, 377, 687, 2717, 9933, 275, 319, 9960, 461, 20515, 279, 646, 993, 1730, 98, 48, 275, 319, 275, 319, 333, 98, 48, 6970, 333, 687, 48, 1693, 377]}
{"line_number": 509, "line_type": "original", "code": "        if (!Character.isDigit(lastChar) && lastChar != '.') {", "entropy": 1.0703125, "is_bug_line": false, "sus_score": 0.4783981442451477, "per_token_entropy": [6.3046875, 3.1796875, 2.884765625, 3.2265625, 0.00432586669921875, 0.0013484954833984375, 0.05035400390625, 0.0011110305786132812, 0.6591796875, 0.0192413330078125, 0.8427734375, 0.2734375, 0.472900390625, 0.00048732757568359375, 0.004669189453125, 0.220703125, 0.047119140625], "tokens": [351, 415, 1429, 6881, 32, 297, 21530, 26, 2135, 2659, 27, 962, 2401, 2659, 863, 41723, 301]}
{"line_number": 509, "line_type": "generated", "code": "\n                    } catch (final NumberFormatException nfe) { // NOPMD\n                        // ignore the bad number\n                    }\n                    throw new NumberFormatException(str + \" is not a valid number.\");\n                default :\n                    if (expPos > -1 && expPos", "entropy": 0.124755859375, "is_bug_line": false, "sus_score": 0.4783981442451477, "per_token_entropy": [0.10223388671875, 0.007511138916015625, 0.08917236328125, 0.00798797607421875, 0.0120086669921875, 0.005619049072265625, 8.285045623779297e-05, 0.174560546875, 0.0005793571472167969, 0.002613067626953125, 0.0017566680908203125, 0.2061767578125, 0.0007038116455078125, 7.510185241699219e-06, 9.894371032714844e-06, 0.03668212890625, 0.2413330078125, 0.224365234375, 0.00518798828125, 0.0026111602783203125, 0.0005898475646972656, 0.056732177734375, 0.001102447509765625, 0.38623046875, 1.955078125, 0.004608154296875, 0.0021533966064453125, 0.00022161006927490234, 0.016845703125, 0.040069580078125, 0.0138397216796875, 0.0021152496337890625, 0.0009140968322753906, 0.00015079975128173828, 5.7697296142578125e-05, 7.534027099609375e-05, 0.001079559326171875, 0.001220703125, 0.1702880859375, 0.70263671875, 0.032958984375, 0.06610107421875, 0.374267578125, 0.01448822021484375, 0.135498046875, 0.054962158203125, 0.044769287109375, 0.002960205078125, 0.0030918121337890625, 0.6748046875, 0.0291748046875, 0.57958984375], "tokens": [528, 320, 2368, 308, 3220, 5104, 25944, 310, 1225, 27, 301, 434, 489, 1952, 5108, 715, 434, 5079, 322, 6658, 1451, 528, 320, 528, 1422, 537, 5104, 25944, 26, 466, 474, 313, 438, 646, 312, 2080, 1451, 5368, 400, 1244, 499, 528, 415, 308, 2832, 2996, 848, 429, 35, 962, 2910, 2996]}
{"line_number": 570, "line_type": "original", "code": "        if (expPos > -1 && expPos < str.length() - 1) {", "entropy": 1.2431640625, "is_bug_line": false, "sus_score": 0.47799021005630493, "per_token_entropy": [5.85546875, 0.66845703125, 0.039093017578125, 10.578125, 1.7236328125, 2.966796875, 0.353515625, 0.002895355224609375, 1.16015625, 0.419189453125, 0.04736328125, 0.76220703125, 0.312744140625, 0.12335205078125, 0.00458526611328125, 0.344482421875, 0.2001953125, 0.056915283203125, 0.00801849365234375, 0.3388671875, 0.14697265625], "tokens": [351, 415, 308, 2832, 2996, 848, 429, 35, 962, 2910, 2996, 333, 596, 32, 1322, 346, 429, 225, 35, 27, 301]}
{"line_number": 570, "line_type": "generated", "code": "\n    private static boolean isAllZeros(final String str) {\n        if (str == null) {\n            return true;\n        }\n        for (int i = str.length() - 1; i >= 0; i--) {\n            if", "entropy": 0.050994873046875, "is_bug_line": false, "sus_score": 0.47799021005630493, "per_token_entropy": [0.75390625, 0.1270751953125, 0.113037109375, 0.011505126953125, 0.00766754150390625, 0.0977783203125, 0.00145721435546875, -0.0, 0.02374267578125, 0.33349609375, 0.0008349418640136719, 0.016998291015625, 0.01088714599609375, 0.050262451171875, 0.062469482421875, 0.1356201171875, 0.01419830322265625, 0.031982421875, 0.00995635986328125, 0.00048160552978515625, 0.10150146484375, 0.01322174072265625, 0.026275634765625, 0.001129150390625, 0.03192138671875, 0.0027713775634765625, 0.00481414794921875, 0.0001691579818725586, 0.08807373046875, 0.26611328125, 0.010528564453125, 0.041259765625, 0.0097808837890625, 0.0081939697265625, 0.0447998046875, 0.0001844167709350586, 0.00011098384857177734, 0.006744384765625, 0.0004417896270751953, 0.0028533935546875, 5.4001808166503906e-05, 0.0036487579345703125, 0.00018405914306640625, 0.04229736328125, 0.01541900634765625, 8.058547973632812e-05, 0.00888824462890625, 0.01560211181640625, 0.0011034011840820312, 0.0025634765625, 0.03057861328125, 0.06817626953125], "tokens": [284, 945, 907, 1905, 438, 1934, 76, 14641, 26, 3220, 892, 596, 27, 301, 291, 415, 308, 466, 610, 744, 27, 301, 324, 442, 861, 45, 291, 320, 291, 436, 308, 410, 595, 280, 596, 32, 1322, 346, 429, 225, 35, 45, 595, 2377, 225, 34, 45, 595, 15353, 301, 324, 415]}
{"line_number": 591, "line_type": "original", "code": "        final boolean allZeros = isAllZeros(mant) && isAllZeros(exp);", "entropy": 0.939453125, "is_bug_line": false, "sus_score": 0.47799021005630493, "per_token_entropy": [3.8359375, 4.1796875, 3.048828125, 0.37841796875, 0.01332855224609375, 0.00014984607696533203, 0.027435302734375, 0.03192138671875, 0.0008406639099121094, 0.0002409219741821289, 1.1920928955078125e-07, 0.01043701171875, 4.8828125, 1.3173828125, 2.669921875, 0.250732421875, 0.79931640625, 0.01422882080078125, 0.0013895034790039062, 8.344650268554688e-07, 0.0035343170166015625, 0.11700439453125, 0.0206756591796875], "tokens": [351, 1158, 1905, 1169, 76, 14641, 280, 438, 1934, 76, 14641, 26, 95, 692, 27, 962, 438, 1934, 76, 14641, 26, 2832, 293]}
{"line_number": 591, "line_type": "generated", "code": "\n     */\n    public static Float createFloat(final String str) {\n        if (str == null) {\n            return null;\n        }\n        return Float.valueOf(str.trim());\n    }\n\n    /**\n     * <p>Convert a <code>", "entropy": 0.08636474609375, "is_bug_line": false, "sus_score": 0.47799021005630493, "per_token_entropy": [0.513671875, 0.115478515625, 0.01380157470703125, 0.328369140625, 0.004642486572265625, 0.08502197265625, 0.024139404296875, 1.2159347534179688e-05, 0.0369873046875, 0.16650390625, 0.0009937286376953125, 0.001232147216796875, 0.007965087890625, 0.20458984375, 0.11224365234375, 0.06610107421875, 0.006557464599609375, 0.043975830078125, 0.0005369186401367188, 0.0008606910705566406, 0.0061798095703125, 0.002044677734375, 0.01204681396484375, 0.00200653076171875, 0.0010862350463867188, 0.0005869865417480469, 0.0017328262329101562, 0.00026035308837890625, 0.054290771484375, 0.51025390625, 0.67626953125, 0.01522064208984375, 0.0137176513671875, 0.0011186599731445312, 0.0155029296875, 1.1396484375, 0.0010423660278320312, 0.01171112060546875, 0.08929443359375, 0.0021648406982421875, 0.0885009765625, 0.09808349609375, 0.005092620849609375, 2.765655517578125e-05, 0.004276275634765625, 5.543231964111328e-05, 0.00015282630920410156, 0.003818511962890625, 0.0004215240478515625, 0.0007805824279785156, 9.775161743164062e-06, 2.6226043701171875e-06], "tokens": [275, 569, 284, 562, 907, 8174, 1487, 3670, 26, 3220, 892, 596, 27, 301, 291, 415, 308, 466, 610, 744, 27, 301, 324, 442, 744, 45, 291, 320, 291, 442, 8174, 32, 9162, 26, 466, 32, 5464, 1035, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 6720, 312, 333, 687, 48]}
{"line_number": 643, "line_type": "original", "code": "        if (str == null) {", "entropy": 1.080078125, "is_bug_line": false, "sus_score": 0.47655779123306274, "per_token_entropy": [6.08984375, 2.2734375, 0.032684326171875, 0.092041015625, 0.0282745361328125, 0.0019626617431640625, 0.007778167724609375, 0.11090087890625], "tokens": [351, 415, 308, 466, 610, 744, 27, 301]}
{"line_number": 643, "line_type": "generated", "code": "\n        return null;\n    }\n\n    /**\n     * <p>Convert a <code>String</code> to a <code>BigInteger</code>.</p>\n     * \n     * <p>Returns <code>null</code> if the string is", "entropy": 0.061004638671875, "is_bug_line": false, "sus_score": 0.47655779123306274, "per_token_entropy": [0.626953125, 0.1348876953125, 0.07470703125, 0.0013599395751953125, 0.06231689453125, 0.00272369384765625, 0.2274169921875, 0.06915283203125, 0.0230560302734375, 0.00027251243591308594, 0.022064208984375, 2.372264862060547e-05, 0.0004677772521972656, 0.0182342529296875, 0.0017290115356445312, 0.0029754638671875, 2.5153160095214844e-05, 7.033348083496094e-06, 0.002063751220703125, 0.00010097026824951172, 6.079673767089844e-06, 1.9550323486328125e-05, 0.0015249252319335938, 0.004009246826171875, 0.0006732940673828125, 7.152557373046875e-05, 0.00015497207641601562, 0.66796875, 0.00391387939453125, 4.3392181396484375e-05, 0.49560546875, 5.9604644775390625e-05, 0.0005202293395996094, 0.0230865478515625, 6.23464584350586e-05, 0.65087890625, 4.851818084716797e-05, 0.0032672882080078125, 0.0019407272338867188, 0.0057525634765625, 0.038970947265625, 0.0004858970642089844, 0.0002913475036621094, 3.2186508178710938e-06, 0.0001628398895263672, 0.00012767314910888672, 5.7816505432128906e-05, 4.649162292480469e-06, 2.384185791015625e-05, 0.00013518333435058594, 0.001007080078125, 0.0001302957534790039], "tokens": [291, 442, 744, 45, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 6720, 312, 333, 687, 48, 652, 377, 687, 48, 372, 312, 333, 687, 48, 21541, 377, 687, 12689, 98, 48, 275, 319, 5384, 319, 333, 98, 48, 6970, 333, 687, 48, 1693, 377, 687, 48, 415, 322, 802, 438]}
{"line_number": 573, "line_type": "original", "code": "            exp = null;", "entropy": 2.70703125, "is_bug_line": false, "sus_score": 0.47187814116477966, "per_token_entropy": [5.92578125, 5.6796875, 0.226806640625, 1.6884765625, 0.010650634765625], "tokens": [1468, 2910, 280, 744, 45]}
{"line_number": 573, "line_type": "generated", "code": "\n        }\n        for (int i = str.length() - 1; i >= 0; i--) {\n            if (str.charAt(i)!= '0') {\n                return false;\n            }\n        }\n        return true;\n    }", "entropy": 0.0430908203125, "is_bug_line": false, "sus_score": 0.47187814116477966, "per_token_entropy": [0.3017578125, 0.0633544921875, 0.150146484375, 0.467041015625, 0.01215362548828125, 0.0701904296875, 0.01666259765625, 0.00836181640625, 0.08099365234375, 0.0007677078247070312, 0.00014448165893554688, 0.004528045654296875, 0.0004038810729980469, 0.0019817352294921875, 0.00011789798736572266, 0.006137847900390625, 0.0002472400665283203, 0.09796142578125, 0.006572723388671875, 0.00011050701141357422, 0.00650787353515625, 0.01220703125, 0.0019626617431640625, 0.00830078125, 0.05377197265625, 0.1585693359375, 0.043121337890625, 0.005718231201171875, 7.104873657226562e-05, 4.553794860839844e-05, 4.565715789794922e-05, 0.0007567405700683594, 0.0003018379211425781, 0.0299072265625, 0.01097869873046875, 3.24249267578125e-05, 0.0092926025390625, 0.00457000732421875, 0.0435791015625, 0.00972747802734375, 0.0004050731658935547, 0.0017375946044921875, 0.09796142578125, 0.0003447532653808594, 0.168701171875, 0.00047779083251953125, 0.02752685546875, 0.0019435882568359375, 0.197509765625, 0.0004558563232421875, 0.050750732421875, 0.0023651123046875], "tokens": [291, 320, 291, 436, 308, 410, 595, 280, 596, 32, 1322, 346, 429, 225, 35, 45, 595, 2377, 225, 34, 45, 595, 15353, 301, 324, 415, 308, 466, 32, 15611, 26, 91, 27, 863, 330, 34, 683, 301, 400, 442, 901, 45, 324, 320, 291, 320, 291, 442, 861, 45, 284, 320]}
{"line_number": 646, "line_type": "original", "code": "        return Float.valueOf(str);", "entropy": 2.2421875, "is_bug_line": false, "sus_score": 0.4709326922893524, "per_token_entropy": [5.2421875, 2.8359375, 9.21875, 0.0140838623046875, 0.0279693603515625, 0.00890350341796875, 0.10137939453125, 0.49462890625], "tokens": [351, 442, 8174, 32, 9162, 26, 466, 293]}
{"line_number": 646, "line_type": "generated", "code": "\n    }\n\n    /**\n     * <p>Convert a <code>String</code> to a <code>BigInteger</code>.</p>\n     * \n     * <p>Returns <code>null</code> if the string is <code>null", "entropy": 0.046539306640625, "is_bug_line": false, "sus_score": 0.4709326922893524, "per_token_entropy": [0.3359375, 0.0033855438232421875, 0.13427734375, 0.0799560546875, 0.0204925537109375, 0.00011336803436279297, 0.0207366943359375, 2.6106834411621094e-05, 0.0005908012390136719, 0.0374755859375, 0.002117156982421875, 0.00487518310546875, 2.658367156982422e-05, 1.33514404296875e-05, 0.004581451416015625, 5.7816505432128906e-05, 1.1324882507324219e-05, 2.1219253540039062e-05, 0.0023651123046875, 0.0024871826171875, 0.0012331008911132812, 7.140636444091797e-05, 0.00029015541076660156, 0.7216796875, 0.005096435546875, 4.506111145019531e-05, 0.305908203125, 5.328655242919922e-05, 0.0005202293395996094, 0.0283050537109375, 5.5670738220214844e-05, 0.6357421875, 4.0411949157714844e-05, 0.0030536651611328125, 0.0011339187622070312, 0.004558563232421875, 0.05712890625, 0.00031375885009765625, 0.0001964569091796875, 2.5033950805664062e-06, 0.0001157522201538086, 7.2479248046875e-05, 9.071826934814453e-05, 4.5299530029296875e-06, 2.09808349609375e-05, 0.00010991096496582031, 0.0009212493896484375, 0.00012767314910888672, 0.002513885498046875, 0.00012731552124023438, 3.2186508178710938e-06, 2.6941299438476562e-05], "tokens": [284, 320, 446, 1022, 275, 319, 333, 98, 48, 6720, 312, 333, 687, 48, 652, 377, 687, 48, 372, 312, 333, 687, 48, 21541, 377, 687, 12689, 98, 48, 275, 319, 5384, 319, 333, 98, 48, 6970, 333, 687, 48, 1693, 377, 687, 48, 415, 322, 802, 438, 333, 687, 48, 1693]}
{"line_number": 595, "line_type": "original", "code": "                    return f;", "entropy": 4.296875, "is_bug_line": false, "sus_score": 0.4695039689540863, "per_token_entropy": [9.0, 2.19140625, 5.78125, 0.2181396484375], "tokens": [4696, 442, 296, 45]}
{"line_number": 595, "line_type": "generated", "code": "\n        }\n        return Float.valueOf(str);\n    }\n\n    /**\n     * <p>Convert a <code>String</code> to a <code>Double</code>.</p>\n     *\n     * <p>Returns <code>null</", "entropy": 0.0513916015625, "is_bug_line": false, "sus_score": 0.4695039689540863, "per_token_entropy": [0.260986328125, 0.0657958984375, 0.179931640625, 0.57666015625, 0.453369140625, 0.0267333984375, 0.0294952392578125, 0.002910614013671875, 0.0151824951171875, 0.53564453125, 0.10107421875, 0.0010986328125, 0.1058349609375, 0.0855712890625, 0.006622314453125, 5.793571472167969e-05, 0.004451751708984375, 5.817413330078125e-05, 0.00015091896057128906, 0.004253387451171875, 0.0004744529724121094, 0.0009593963623046875, 1.1920928955078125e-05, 3.933906555175781e-06, 0.005558013916015625, 0.0003123283386230469, 7.3909759521484375e-06, 4.57763671875e-05, 0.000759124755859375, 0.00800323486328125, 0.00026607513427734375, 4.0531158447265625e-05, 7.30752944946289e-05, 0.142822265625, 0.0033512115478515625, 6.794929504394531e-06, 0.01617431640625, 4.57763671875e-05, 0.00012302398681640625, 0.0014190673828125, 1.7523765563964844e-05, 0.031494140625, 4.935264587402344e-05, 0.0006389617919921875, 0.00014317035675048828, 0.001514434814453125, 0.0006890296936035156, 0.00018095970153808594, 0.0001310110092163086, 1.4424324035644531e-05, 0.0001779794692993164, 1.8715858459472656e-05], "tokens": [291, 320, 291, 442, 8174, 32, 9162, 26, 466, 293, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 6720, 312, 333, 687, 48, 652, 377, 687, 48, 372, 312, 333, 687, 48, 4075, 377, 687, 12689, 98, 48, 275, 319, 275, 319, 333, 98, 48, 6970, 333, 687, 48, 1693, 377]}
{"line_number": 496, "line_type": "original", "code": "            mant = str.substring(0, decPos);", "entropy": 1.408203125, "is_bug_line": false, "sus_score": 0.46079111099243164, "per_token_entropy": [5.9609375, 6.6640625, 0.0034313201904296875, 0.02947998046875, 0.90087890625, 0.2861328125, 0.0377197265625, 0.0002467632293701172, 0.001972198486328125, 0.0002079010009765625, 4.26171875, 0.0022296905517578125, 0.156005859375], "tokens": [1468, 345, 692, 280, 596, 32, 8723, 26, 34, 30, 5973, 2996, 293]}
{"line_number": 496, "line_type": "generated", "code": "\n                    return createDouble(str);\n                case 'd' :\n                case 'D' :\n                    try {\n                        final Double d = NumberUtils.createDouble(numeric);\n                        if (!(d.isInfinite() || (d.floatValue() == ", "entropy": 0.07391357421875, "is_bug_line": false, "sus_score": 0.46079111099243164, "per_token_entropy": [0.2646484375, 1.318359375, 0.259033203125, 0.57666015625, 0.0004935264587402344, 0.25146484375, 0.02783203125, 0.2093505859375, 0.00508880615234375, 4.7206878662109375e-05, 0.0001672506332397461, 0.00018024444580078125, 8.499622344970703e-05, 0.0008082389831542969, 8.845329284667969e-05, 2.5033950805664062e-06, 1.430511474609375e-06, 0.00023448467254638672, 6.592273712158203e-05, 0.379638671875, 0.15380859375, 0.0006866455078125, 0.009124755859375, 0.050567626953125, 0.0552978515625, 0.0019435882568359375, 0.00989532470703125, 0.0797119140625, 3.218650817871094e-05, 0.00021159648895263672, 3.814697265625e-05, 0.00659942626953125, 0.00012135505676269531, 0.007537841796875, 0.00323486328125, 0.0162200927734375, 0.01351165771484375, 0.0293426513671875, 0.002689361572265625, 0.0004067420959472656, 0.0001024007797241211, 2.0265579223632812e-06, 0.0002340078353881836, 0.005435943603515625, 0.004825592041015625, 0.00153350830078125, 8.165836334228516e-05, 0.0933837890625, 1.1920928955078125e-07, 0.00027680397033691406, 7.426738739013672e-05, 0.002033233642578125], "tokens": [528, 442, 1487, 4075, 26, 466, 293, 400, 1135, 330, 86, 25, 499, 400, 1135, 330, 54, 25, 499, 528, 1596, 301, 715, 1158, 6934, 343, 280, 5104, 2755, 32, 1297, 4075, 26, 10125, 293, 715, 415, 11007, 86, 32, 28823, 11949, 346, 1276, 308, 86, 32, 1808, 882, 346, 610, 225]}
{"line_number": 497, "line_type": "original", "code": "            numDecimals = dec.length(); // gets number of digits past the decimal to ensure no loss of precision for floating point numbers.", "entropy": 3.205078125, "is_bug_line": false, "sus_score": 0.46079111099243164, "per_token_entropy": [8.1875, 13.140625, 0.0001621246337890625, 0.0012636184692382812, 0.1168212890625, 3.619140625, 2.798828125, 0.01018524169921875, 0.155517578125, 2.66796875, 9.6953125, 3.53515625, 0.0016069412231445312, 2.162109375, 5.4453125, 1.359375, 0.043060302734375, 6.609375, 6.515625, 4.19140625, 4.875, 0.036102294921875, 0.049346923828125, 5.484375, 4.19140625, 0.215087890625, 2.080078125, 2.541015625], "tokens": [1468, 1929, 7697, 101, 280, 5973, 32, 1322, 473, 434, 8561, 1451, 432, 16105, 11169, 322, 10245, 372, 7279, 1289, 7699, 432, 12485, 436, 15394, 2260, 7515, 32]}
{"line_number": 497, "line_type": "generated", "code": "\n                case 'd' :\n                case 'D' :\n                    try {\n                        final Double d = NumberUtils.createDouble(numeric);\n                        if (!(d.isInfinite() || (d.floatValue() == 0.0D &&!all", "entropy": 0.0201263427734375, "is_bug_line": false, "sus_score": 0.46079111099243164, "per_token_entropy": [0.1390380859375, 0.040557861328125, 0.00021898746490478516, 0.0011930465698242188, 0.0004067420959472656, 0.0003056526184082031, 0.0014657974243164062, 4.553794860839844e-05, 2.6226043701171875e-06, 1.1920928955078125e-06, 0.0003991127014160156, 7.069110870361328e-05, 0.03912353515625, 0.0672607421875, 0.000484466552734375, 0.005046844482421875, 0.07537841796875, 0.02899169921875, 0.0014581680297851562, 0.01093292236328125, 0.06207275390625, 2.1457672119140625e-05, 0.0002052783966064453, 3.933906555175781e-05, 0.004955291748046875, 4.5299530029296875e-05, 0.001674652099609375, 0.0006914138793945312, 0.0078125, 0.00875091552734375, 0.024078369140625, 0.001895904541015625, 0.0004296302795410156, 7.343292236328125e-05, 3.337860107421875e-06, 9.131431579589844e-05, 0.005825042724609375, 0.00267791748046875, 0.0016164779663085938, 1.2159347534179688e-05, 0.05450439453125, 1.1920928955078125e-07, 0.00016260147094726562, 5.638599395751953e-05, 0.002315521240234375, 2.288818359375e-05, 0.0010776519775390625, 0.00034880638122558594, 0.4501953125, 0.0015325546264648438, 0.0003063678741455078, 0.0005602836608886719], "tokens": [400, 1135, 330, 86, 25, 499, 400, 1135, 330, 54, 25, 499, 528, 1596, 301, 715, 1158, 6934, 343, 280, 5104, 2755, 32, 1297, 4075, 26, 10125, 293, 715, 415, 11007, 86, 32, 28823, 11949, 346, 1276, 308, 86, 32, 1808, 882, 346, 610, 225, 34, 32, 34, 54, 962, 653, 464]}
{"line_number": 486, "line_type": "original", "code": "        if (decPos > -1) { // there is a decimal point", "entropy": 1.1533203125, "is_bug_line": false, "sus_score": 0.44095471501350403, "per_token_entropy": [7.53125, 1.9921875, 0.231689453125, 2.369140625, 1.6123046875, 0.33349609375, 0.1318359375, 0.003177642822265625, 0.6884765625, 0.1153564453125, 1.9189453125, 1.3623046875, 0.0679931640625, 0.0001780986785888672, 0.00109100341796875, 0.09796142578125], "tokens": [351, 415, 308, 6114, 2996, 848, 429, 35, 27, 301, 434, 2017, 438, 312, 10245, 2260]}
{"line_number": 486, "line_type": "generated", "code": "\n                            return createFloat(numeric);\n                        } catch (final NumberFormatException nfe) { // NOPMD\n                            // This is a hack to fix the \"FF\" problem.\n                            if (allZeros && dec!= null && exp == null) {", "entropy": 0.437744140625, "is_bug_line": false, "sus_score": 0.44095471501350403, "per_token_entropy": [1.3603515625, 0.478515625, 0.26416015625, 0.023223876953125, 0.0017652511596679688, 0.393310546875, 0.1290283203125, 0.5703125, 0.0670166015625, 0.029022216796875, 0.0175933837890625, 0.0032863616943359375, 0.0012006759643554688, 8.702278137207031e-06, 0.009368896484375, 8.106231689453125e-06, 0.0014963150024414062, 0.0021953582763671875, 0.332763671875, 0.00023090839385986328, 9.512901306152344e-05, 6.67572021484375e-05, 0.056793212890625, 0.25244140625, 1.4931640625, 1.3486328125, 0.9765625, 1.490234375, 0.74072265625, 1.0703125, 0.71142578125, 0.5908203125, 3.484375, 0.1881103515625, 1.607421875, 0.322021484375, 0.85302734375, 0.359375, 0.338623046875, 0.289306640625, 0.0001647472381591797, 1.7881393432617188e-06, 0.89453125, 0.544921875, 0.3046875, 0.001827239990234375, 0.3017578125, 0.6416015625, 0.07958984375, 0.00021719932556152344, 0.129150390625, 0.0031070709228515625], "tokens": [1014, 442, 1487, 3670, 26, 10125, 293, 715, 320, 2368, 308, 3220, 5104, 25944, 310, 1225, 27, 301, 434, 489, 1952, 5108, 1014, 434, 1348, 438, 312, 16445, 372, 2421, 322, 313, 1139, 20, 3708, 32, 1014, 415, 308, 464, 76, 14641, 962, 5973, 863, 744, 962, 2910, 610, 744, 27, 301]}
{"line_number": 480, "line_type": "original", "code": "        final int decPos = str.indexOf('.');", "entropy": 1.6279296875, "is_bug_line": false, "sus_score": 0.4401313364505768, "per_token_entropy": [5.75, 6.88671875, 0.64892578125, 1.306640625, 0.94970703125, 0.045074462890625, 0.39599609375, 0.0005736351013183594, 0.009002685546875, 0.283203125], "tokens": [351, 1158, 629, 5973, 2996, 280, 596, 32, 7142, 49129]}
{"line_number": 480, "line_type": "generated", "code": "\n                    }\n                    break;\n                case 'f' :\n                case 'F' :\n                    if (exp == null && isDigits(numeric)) {\n                        final float f = Float.parseFloat(numeric);\n                        if (allZeros && f == 0", "entropy": 0.225830078125, "is_bug_line": false, "sus_score": 0.4401313364505768, "per_token_entropy": [0.2493896484375, 0.062744140625, 0.21435546875, 0.430908203125, 0.0024585723876953125, 0.1851806640625, 0.0182037353515625, 0.0004608631134033203, 0.0264892578125, 0.01416778564453125, 0.0035610198974609375, 0.00638580322265625, 5.555152893066406e-05, 4.5299530029296875e-06, 5.650520324707031e-05, 0.0016508102416992188, 3.6716461181640625e-05, 0.2103271484375, 0.28466796875, 0.073974609375, 0.338134765625, 0.0024013519287109375, 0.00019550323486328125, 0.7744140625, 1.0634765625, 0.27392578125, 0.00024509429931640625, 0.28955078125, 0.0775146484375, 0.002979278564453125, 0.06597900390625, 1.716796875, 0.95751953125, 1.2021484375, 0.83056640625, 0.2958984375, 0.0011930465698242188, 0.0096282958984375, 0.0007424354553222656, 0.03466796875, 0.0196075439453125, 0.11639404296875, 0.1754150390625, 0.361572265625, 0.810546875, 4.9591064453125e-05, -0.0, 0.2890625, 0.23828125, 0.00457000732421875, 0.0037899017333984375, 1.2278556823730469e-05], "tokens": [528, 320, 528, 1626, 45, 400, 1135, 330, 88, 25, 499, 400, 1135, 330, 56, 25, 499, 528, 415, 308, 2832, 610, 744, 962, 438, 22326, 26, 10125, 490, 301, 715, 1158, 1897, 296, 280, 8174, 32, 31828, 26, 10125, 293, 715, 415, 308, 464, 76, 14641, 962, 296, 610, 225, 34]}
