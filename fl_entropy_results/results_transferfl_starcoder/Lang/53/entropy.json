{"line_number": 676, "line_type": "original", "code": "                        if (field == DateUtils.SEMI_MONTH) {", "entropy": 0.90869140625, "is_bug_line": false, "sus_score": 0.7374100685119629, "per_token_entropy": [4.984375, 2.111328125, 0.1751708984375, 2.6015625, 0.11767578125, 1.6767578125, 0.0027294158935546875, 0.001628875732421875, 0.658203125, 0.002197265625, 9.40561294555664e-05, 0.0030231475830078125, 0.36572265625, 0.0218658447265625], "tokens": [6797, 415, 308, 1495, 610, 2821, 2755, 32, 807, 5891, 81, 22846, 27, 301]}
{"line_number": 676, "line_type": "generated", "code": "\n                    }\n                    break;\n            }\n            if (!offsetSet) {\n                offset = val.get(fields[i][0]);\n                if (offset >= fields[i][1]) {\n                    offset -= fields[i][1];\n                    roundUp =", "entropy": 0.1561279296875, "is_bug_line": false, "sus_score": 0.7374100685119629, "per_token_entropy": [0.2880859375, 0.0176239013671875, 0.1417236328125, 0.0091552734375, 0.0033245086669921875, 0.876953125, 0.005580902099609375, 0.426025390625, 0.328125, 0.201171875, 0.0007119178771972656, 1.0848045349121094e-05, 0.0114288330078125, 0.0053863525390625, 0.03204345703125, 1.0546875, 0.0049591064453125, 0.07415771484375, 0.00014328956604003906, 0.0001049041748046875, 0.01458740234375, 0.0022296905517578125, 1.8358230590820312e-05, 0.00019347667694091797, 0.00022542476654052734, 0.0006899833679199219, 0.051788330078125, 0.138671875, 1.2119140625, 0.0390625, 0.53466796875, 0.1827392578125, 1.12109375, 0.0027561187744140625, 0.00013399124145507812, 0.0127105712890625, 0.0887451171875, 0.62109375, 0.0016078948974609375, 0.01500701904296875, 0.08380126953125, 0.045440673828125, 0.002132415771484375, 0.00015544891357421875, 0.0003783702850341797, 0.00034427642822265625, 0.0006380081176757812, 0.00048828125, 0.433349609375, 0.0257110595703125, 6.54458999633789e-05, 0.001140594482421875], "tokens": [528, 320, 528, 1626, 45, 324, 320, 324, 415, 1429, 2881, 885, 27, 301, 400, 3401, 280, 909, 32, 371, 26, 4151, 77, 91, 1674, 34, 1989, 400, 415, 308, 2881, 2377, 3829, 77, 91, 1674, 35, 1130, 301, 528, 3401, 5912, 3829, 77, 91, 1674, 35, 970, 528, 7818, 1386, 280]}
{"line_number": 689, "line_type": "original", "code": "                            val.add(fields[i][0], 1);", "entropy": 1.6943359375, "is_bug_line": false, "sus_score": 0.7219433784484863, "per_token_entropy": [10.65625, 1.484375, 0.00331878662109375, 0.13671875, 0.005096435546875, 0.0123443603515625, 0.00064849853515625, 0.00045228004455566406, 0.00043773651123046875, 0.0016317367553710938, 0.0137176513671875, 6.65234375, 3.123046875, 1.6259765625], "tokens": [9316, 909, 32, 669, 26, 4151, 77, 91, 1674, 34, 614, 225, 35, 293]}
{"line_number": 689, "line_type": "generated", "code": "\n            }\n        }\n    }\n\n    /**\n     * <p>Compares two calendar objects to see which is greater.\n     * This method handles the special case of the first date being\n     * <code>null</code>, using the logic that the second", "entropy": 0.529296875, "is_bug_line": false, "sus_score": 0.7219433784484863, "per_token_entropy": [0.5498046875, 0.0030879974365234375, 0.10174560546875, 0.0022449493408203125, 0.25048828125, 0.01043701171875, 0.72900390625, 0.437744140625, 0.18310546875, 0.0008716583251953125, 0.96337890625, 0.062744140625, 0.0211334228515625, 2.814453125, 0.001461029052734375, 0.01467132568359375, 1.0537109375, 0.07861328125, 0.74267578125, 0.89111328125, 0.247802734375, 0.2041015625, 1.7197265625, 0.6064453125, 0.149169921875, 0.00133514404296875, 1.04296875, 0.27978515625, 0.45947265625, 0.17431640625, 0.63525390625, 0.509765625, 0.1317138671875, 1.373046875, 1.171875, 0.5986328125, 0.0034961700439453125, 1.15625, 5.0067901611328125e-05, 0.2880859375, 0.007289886474609375, 4.172325134277344e-06, 0.0024242401123046875, 0.00022673606872558594, 9.179115295410156e-06, 0.9423828125, 2.974609375, 0.2880859375, 1.3896484375, 0.7861328125, 0.07733154296875, 1.37890625], "tokens": [324, 320, 291, 320, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 982, 10999, 3134, 14461, 4684, 372, 2318, 1510, 438, 10761, 32, 275, 319, 1348, 1411, 13650, 322, 7456, 1135, 432, 322, 1932, 2340, 3998, 275, 319, 333, 687, 48, 1693, 377, 687, 2717, 1471, 322, 8130, 688, 322, 3100]}
{"line_number": 442, "line_type": "original", "code": "        modify(gval, field, true);", "entropy": 1.1875, "is_bug_line": false, "sus_score": 0.7047337293624878, "per_token_entropy": [3.9140625, 4.68359375, 0.025909423828125, 2.849609375, 0.005702972412109375, 0.005615234375, 0.301025390625, 0.00821685791015625, 0.0745849609375, 0.0035877227783203125], "tokens": [351, 5351, 26, 89, 695, 30, 1600, 30, 861, 293]}
{"line_number": 442, "line_type": "generated", "code": "\n     * @param date  the date to work with\n     * @param field  the field from <code>Calendar</code>\n     *  or <code>SEMI_MONTH</code>\n     * @param up  if true, round up", "entropy": 0.10125732421875, "is_bug_line": false, "sus_score": 0.7047337293624878, "per_token_entropy": [0.60107421875, 0.0273895263671875, 0.7880859375, 0.022003173828125, 0.181640625, 0.0103302001953125, 0.000652313232421875, 0.01258087158203125, 0.0032958984375, 0.0100250244140625, 0.00278472900390625, 0.08111572265625, 7.319450378417969e-05, 0.0008511543273925781, 0.0258941650390625, 0.0194091796875, 0.0160064697265625, 0.006134033203125, 0.00746917724609375, 0.0292205810546875, 0.04327392578125, 0.0005965232849121094, 5.316734313964844e-05, 0.01538848876953125, 0.0004987716674804688, 3.5762786865234375e-06, 0.0047454833984375, 0.0211334228515625, 0.00038123130798339844, 0.062255859375, 0.0018644332885742188, 0.011322021484375, 8.83340835571289e-05, 0.0006880760192871094, 0.00940704345703125, 2.5033950805664062e-06, 0.00012743473052978516, 8.821487426757812e-06, 0.00017511844635009766, 5.2094459533691406e-05, 0.006763458251953125, 0.007450103759765625, 0.0008101463317871094, 0.0017852783203125, 0.83837890625, 1.6171875, 0.05950927734375, 0.22265625, 0.1878662109375, 0.055267333984375, 0.244384765625, 0.00547027587890625], "tokens": [275, 319, 477, 753, 2340, 225, 322, 2340, 372, 1389, 623, 275, 319, 477, 753, 1600, 225, 322, 1600, 645, 333, 687, 48, 9389, 377, 687, 48, 275, 319, 225, 556, 333, 687, 48, 807, 5891, 81, 22846, 377, 687, 48, 275, 319, 477, 753, 973, 225, 415, 861, 30, 7818, 973]}
{"line_number": 441, "line_type": "original", "code": "        gval.setTime(date);", "entropy": 1.2158203125, "is_bug_line": false, "sus_score": 0.6922405362129211, "per_token_entropy": [3.162109375, 4.890625, 0.07684326171875, 0.1119384765625, 1.4384765625, 0.015289306640625, 0.026092529296875, 0.00713348388671875], "tokens": [351, 485, 695, 32, 34500, 26, 770, 293]}
{"line_number": 441, "line_type": "generated", "code": "\n     * \n     * <p>For a date in a timezone that handles the change to daylight\n     * saving time, rounding to Calendar.HOUR_OF_DAY will behave as follows.\n     * Suppose daylight saving time begins at 02", "entropy": 0.042449951171875, "is_bug_line": false, "sus_score": 0.6922405362129211, "per_token_entropy": [0.61669921875, 0.006298065185546875, 0.947265625, 0.00012373924255371094, 0.497314453125, 0.00528717041015625, 0.001132965087890625, 0.06329345703125, 0.0016031265258789062, 0.0005612373352050781, 0.0003917217254638672, 0.00017726421356201172, 0.0001653432846069336, 0.0007004737854003906, 0.0005645751953125, 0.00018095970153808594, 0.0006761550903320312, 0.00012636184692382812, 0.0006818771362304688, 3.3736228942871094e-05, 0.0024929046630859375, 1.2516975402832031e-05, 9.500980377197266e-05, 2.7418136596679688e-05, 0.0009670257568359375, 0.0003695487976074219, 0.0004718303680419922, 0.04425048828125, 0.0002570152282714844, 0.00024306774139404297, 0.0024547576904296875, 1.4781951904296875e-05, 9.059906005859375e-06, 1.2159347534179688e-05, 0.00238037109375, 0.005161285400390625, 0.0001207590103149414, 0.0005297660827636719, 0.0005397796630859375, 0.0003800392150878906, 2.6464462280273438e-05, 0.00023567676544189453, 7.867813110351562e-05, 6.592273712158203e-05, 4.5299530029296875e-06, 2.6941299438476562e-05, 1.823902130126953e-05, 0.00213623046875, 5.53131103515625e-05, 0.0001519918441772461, 0.00018703937530517578, 0.0006122589111328125], "tokens": [275, 319, 5384, 319, 333, 98, 48, 1562, 312, 2340, 328, 312, 22158, 688, 13650, 322, 1539, 372, 5808, 2429, 275, 319, 17093, 1133, 30, 35396, 372, 16600, 32, 30540, 81, 2109, 81, 14318, 1098, 35197, 619, 11588, 32, 275, 319, 14644, 3605, 5808, 2429, 17093, 1133, 30694, 821, 225, 34, 36]}
{"line_number": 437, "line_type": "original", "code": "        if (date == null) {", "entropy": 0.806640625, "is_bug_line": false, "sus_score": 0.6775912642478943, "per_token_entropy": [3.513671875, 1.802734375, 0.09283447265625, 0.8994140625, 0.06378173828125, 0.0010061264038085938, 0.002513885498046875, 0.07672119140625], "tokens": [351, 415, 308, 770, 610, 744, 27, 301]}
{"line_number": 437, "line_type": "generated", "code": "\n     * @param date  the date to work with\n     * @param field  the field from <code>Calendar</code>\n     *  or <code>SEMI_MONTH</code>\n     * @return the rounded date\n     * @throws", "entropy": 0.10614013671875, "is_bug_line": false, "sus_score": 0.6775912642478943, "per_token_entropy": [1.353515625, 0.026092529296875, 1.55078125, 0.0430908203125, 0.442138671875, 0.0201873779296875, 0.0010423660278320312, 0.021331787109375, 0.0158538818359375, 0.010986328125, 0.0034923553466796875, 0.1947021484375, 0.00019371509552001953, 0.0011501312255859375, 0.0136871337890625, 0.015655517578125, 0.01558685302734375, 0.00537109375, 0.011993408203125, 0.036102294921875, 0.05596923828125, 0.0011997222900390625, 3.6716461181640625e-05, 0.0165252685546875, 0.0007357597351074219, 3.0994415283203125e-06, 0.006526947021484375, 0.02593994140625, 0.0005745887756347656, 0.0855712890625, 0.0016183853149414062, 0.01027679443359375, 0.00013494491577148438, 0.0002028942108154297, 0.007476806640625, 2.0265579223632812e-06, 0.00012493133544921875, 9.775161743164062e-06, 0.00016105175018310547, 0.00011897087097167969, 0.006977081298828125, 0.032562255859375, 0.0009298324584960938, 0.0023555755615234375, 0.8212890625, 0.00934600830078125, 0.02215576171875, 0.00724029541015625, 0.59130859375, 0.01080322265625, 0.0008111000061035156, 0.0160369873046875], "tokens": [275, 319, 477, 753, 2340, 225, 322, 2340, 372, 1389, 623, 275, 319, 477, 753, 1600, 225, 322, 1600, 645, 333, 687, 48, 9389, 377, 687, 48, 275, 319, 225, 556, 333, 687, 48, 807, 5891, 81, 22846, 377, 687, 48, 275, 319, 477, 601, 322, 13116, 2340, 275, 319, 477, 5117]}
{"line_number": 440, "line_type": "original", "code": "        Calendar gval = Calendar.getInstance();", "entropy": 2.3515625, "is_bug_line": false, "sus_score": 0.6741554141044617, "per_token_entropy": [3.54296875, 14.9453125, 2.36328125, 0.040130615234375, 0.0141143798828125, 0.224365234375, 0.0024356842041015625, 0.0021419525146484375, 0.0210723876953125], "tokens": [351, 16600, 485, 695, 280, 16600, 32, 7426, 473]}
{"line_number": 440, "line_type": "generated", "code": "\n     * would return 1 April 2002 0:00:00.000.</p>\n     * \n     * <p>For a date in a timezone that handles the change to daylight\n     * saving time,", "entropy": 0.0132293701171875, "is_bug_line": false, "sus_score": 0.6741554141044617, "per_token_entropy": [0.38037109375, 0.0059967041015625, 0.006015777587890625, 0.0009002685546875, 0.005645751953125, 0.0221099853515625, 0.045257568359375, 0.00048089027404785156, 0.0014820098876953125, 9.930133819580078e-05, 0.0001424551010131836, 0.0020847320556640625, 0.00070953369140625, 0.001129150390625, 0.00733184814453125, 9.059906005859375e-06, 3.8504600524902344e-05, 9.97781753540039e-05, 8.356571197509766e-05, 6.520748138427734e-05, 0.00014328956604003906, 2.7060508728027344e-05, 1.1682510375976562e-05, 6.461143493652344e-05, 0.0306396484375, 0.0006656646728515625, 0.0011911392211914062, 0.0295867919921875, 0.0004711151123046875, 0.03424072265625, 3.039836883544922e-05, 0.082275390625, 0.0007276535034179688, 0.0001996755599975586, 0.0214996337890625, 0.0003333091735839844, 0.0002658367156982422, 0.0001920461654663086, 0.00011777877807617188, 0.00010144710540771484, 0.0002884864807128906, 0.0002872943878173828, 0.00010013580322265625, 0.00037097930908203125, 8.45193862915039e-05, 0.0006041526794433594, 4.076957702636719e-05, 0.0028228759765625, 2.1696090698242188e-05, 0.00014793872833251953, 2.396106719970703e-05, 0.0003521442413330078], "tokens": [275, 319, 2268, 442, 225, 35, 30468, 225, 36, 34, 34, 36, 225, 34, 44, 34, 34, 44, 34, 34, 32, 34, 34, 34, 1730, 98, 48, 275, 319, 5384, 319, 333, 98, 48, 1562, 312, 2340, 328, 312, 22158, 688, 13650, 322, 1539, 372, 5808, 2429, 275, 319, 17093, 1133, 30]}
{"line_number": 664, "line_type": "original", "code": "        if (date.getTime() != time) {", "entropy": 1.8994140625, "is_bug_line": false, "sus_score": 0.6681376099586487, "per_token_entropy": [5.7734375, 2.498046875, 0.38134765625, 5.828125, 0.276123046875, 1.3271484375, 0.0643310546875, 3.0859375, 1.5078125, 0.0997314453125, 0.046142578125], "tokens": [351, 415, 308, 770, 32, 11957, 346, 863, 1133, 27, 301]}
{"line_number": 664, "line_type": "generated", "code": "\n                    }\n                    break;\n            }\n            if (!offsetSet) {\n                //Get the offset from the current date.\n                offset = val.get(fields[i][0]) - val.getActualMinimum(fields[i][0]);\n            }", "entropy": 0.2607421875, "is_bug_line": false, "sus_score": 0.6681376099586487, "per_token_entropy": [0.351318359375, 0.01322174072265625, 0.265625, 0.025787353515625, 0.001949310302734375, 1.283203125, 0.0086517333984375, 0.4658203125, 0.5361328125, 0.086181640625, 0.00031685829162597656, 2.384185791015625e-06, 0.0041656494140625, 0.0038852691650390625, 0.025909423828125, 0.5654296875, 1.3720703125, 0.034423828125, 0.435302734375, 0.5458984375, 0.09490966796875, 2.072265625, 0.88037109375, 1.8583984375, 0.75927734375, 0.60400390625, 0.005420684814453125, 0.01357269287109375, 0.0001055002212524414, 5.805492401123047e-05, 0.01218414306640625, 0.0011701583862304688, 6.9141387939453125e-06, 5.698204040527344e-05, 3.0994415283203125e-05, 0.0002777576446533203, 0.33056640625, 0.0016422271728515625, 0.380859375, 0.0008525848388671875, 0.00545501708984375, 0.0124359130859375, 0.0006003379821777344, 1.1682510375976562e-05, 0.0015201568603515625, 1.3947486877441406e-05, 5.125999450683594e-06, 4.267692565917969e-05, 3.063678741455078e-05, 0.0002818107604980469, 0.4912109375, 0.003635406494140625], "tokens": [528, 320, 528, 1626, 45, 324, 320, 324, 415, 1429, 2881, 885, 27, 301, 400, 434, 936, 322, 3401, 645, 322, 1550, 2340, 32, 400, 3401, 280, 909, 32, 371, 26, 4151, 77, 91, 1674, 34, 1130, 429, 909, 32, 371, 11045, 13367, 26, 4151, 77, 91, 1674, 34, 1989, 324, 320]}
{"line_number": 443, "line_type": "original", "code": "        return gval.getTime();", "entropy": 2.68359375, "is_bug_line": false, "sus_score": 0.6301169991493225, "per_token_entropy": [5.875, 7.83203125, 3.796875, 0.08172607421875, 1.125, 0.030731201171875, 0.033782958984375], "tokens": [351, 442, 485, 695, 32, 11957, 473]}
{"line_number": 443, "line_type": "generated", "code": "\n     * saving time, rounding to Calendar.HOUR_OF_DAY will behave as follows.\n     * Suppose daylight saving time begins at 02:00 on March 30. Rounding a \n     * date that crosses this time", "entropy": 0.025238037109375, "is_bug_line": false, "sus_score": 0.6301169991493225, "per_token_entropy": [0.6875, 0.042205810546875, 0.467529296875, 0.0006413459777832031, 0.0010271072387695312, 0.0005927085876464844, 0.0012073516845703125, 0.036224365234375, 0.0005311965942382812, 0.00186920166015625, 0.00506591796875, 3.5762786865234375e-05, 0.0002970695495605469, 0.00012099742889404297, 0.00351715087890625, 0.00652313232421875, 0.0012121200561523438, 0.0023193359375, 0.0019273757934570312, 0.016204833984375, 0.0007119178771972656, 0.0014963150024414062, 0.0003294944763183594, 0.0005955696105957031, 0.00011849403381347656, 0.0012521743774414062, 0.00015819072723388672, 0.004001617431640625, 0.0002465248107910156, 0.0007309913635253906, 0.00044536590576171875, 0.0011959075927734375, 0.00013685226440429688, 4.661083221435547e-05, 0.0001659393310546875, 0.0008072853088378906, 0.00148773193359375, 0.00033855438232421875, 0.00046825408935546875, 0.00017964839935302734, 0.001277923583984375, 0.00457763671875, 6.079673767089844e-05, 0.002017974853515625, 0.0093994140625, 8.64267349243164e-05, 0.0033168792724609375, 0.00021195411682128906, 0.00011098384857177734, 1.6689300537109375e-06, 9.226799011230469e-05, 8.916854858398438e-05], "tokens": [275, 319, 17093, 1133, 30, 35396, 372, 16600, 32, 30540, 81, 2109, 81, 14318, 1098, 35197, 619, 11588, 32, 275, 319, 14644, 3605, 5808, 2429, 17093, 1133, 30694, 821, 225, 34, 36, 44, 34, 34, 544, 29195, 225, 37, 34, 32, 23015, 299, 312, 5384, 319, 2340, 688, 46281, 1464, 458, 1133]}
{"line_number": 637, "line_type": "original", "code": "        boolean done = false;", "entropy": 3.431640625, "is_bug_line": false, "sus_score": 0.6292060613632202, "per_token_entropy": [7.36328125, 10.375, 2.6796875, 0.027862548828125, 0.08050537109375, 0.061859130859375], "tokens": [351, 1905, 3390, 280, 901, 45]}
{"line_number": 637, "line_type": "generated", "code": "\n                        }\n                    }\n                    return;\n                }\n            }\n            //If we get here, it means that we've incremented the wrong field\n            //Subtract one from value and increment the next one\n            roundUp = roundUp || incrementField(val, fields", "entropy": 0.4453125, "is_bug_line": false, "sus_score": 0.6292060613632202, "per_token_entropy": [0.2303466796875, 0.01024627685546875, 0.0712890625, 0.00899505615234375, 0.2109375, 0.3974609375, 0.00043654441833496094, 0.0179443359375, 0.0009255409240722656, 0.2274169921875, 0.0026092529296875, 0.47314453125, 0.64892578125, 1.205078125, 0.041473388671875, 1.4814453125, 0.02374267578125, 0.258544921875, 0.0271453857421875, 0.326416015625, 0.1634521484375, 0.224853515625, 2.12109375, 2.650390625, 4.374980926513672e-05, 0.7529296875, 0.7861328125, 0.1695556640625, 0.38818359375, 0.2249755859375, 0.98779296875, 1.01953125, 0.35791015625, 0.6533203125, 0.358154296875, 2.75390625, 0.2139892578125, 0.1143798828125, 0.265869140625, 0.14111328125, 0.5986328125, 0.0001614093780517578, 0.00441741943359375, 0.397705078125, 0.0184478759765625, 0.040863037109375, 1.2578125, 0.408203125, 0.00583648681640625, 0.056365966796875, 0.0009121894836425781, 0.348876953125], "tokens": [715, 320, 528, 320, 528, 442, 45, 400, 320, 324, 320, 324, 434, 2797, 996, 622, 2442, 30, 561, 6058, 688, 996, 4763, 11885, 318, 322, 6643, 1600, 324, 434, 34460, 1591, 645, 786, 461, 11885, 322, 2354, 1591, 324, 7818, 1386, 280, 7818, 1386, 1276, 11885, 1176, 26, 695, 30, 3829]}
{"line_number": 665, "line_type": "original", "code": "            date.setTime(time);", "entropy": 2.109375, "is_bug_line": false, "sus_score": 0.6173394918441772, "per_token_entropy": [4.7265625, 7.8203125, 1.0224609375, 0.1075439453125, 0.00807952880859375, 0.269287109375, 0.81005859375], "tokens": [1468, 2340, 32, 34500, 26, 1003, 293]}
{"line_number": 665, "line_type": "generated", "code": "\n                    break;\n                case DateUtils.WEEK_OF_MONTH:\n                    //If the date is less than 8, we're in the first week\n                    //  of the month.\n                    if (val.get(Calendar.DATE) < 8", "entropy": 0.256103515625, "is_bug_line": false, "sus_score": 0.6173394918441772, "per_token_entropy": [0.8212890625, 0.1446533203125, 0.0016336441040039062, 0.70458984375, 0.1646728515625, 0.42626953125, 4.9233436584472656e-05, 0.0006909370422363281, 0.2261962890625, 0.00020253658294677734, 0.111083984375, 1.0132789611816406e-05, 0.65869140625, 5.6624412536621094e-05, 0.108642578125, 0.79150390625, 0.79541015625, 0.56103515625, 0.6982421875, 0.0836181640625, 1.4697265625, 0.0006651878356933594, 0.01306915283203125, 0.29248046875, 0.436767578125, 0.177734375, 1.0244140625, 0.1064453125, 0.06817626953125, 0.91455078125, 0.009857177734375, 0.185302734375, 0.6279296875, 0.1732177734375, 0.233154296875, 0.0140838623046875, 0.00377655029296875, 0.337646484375, 0.33056640625, 0.288330078125, 0.004795074462890625, 0.009490966796875, 2.8371810913085938e-05, 3.731250762939453e-05, 0.000640869140625, 0.004413604736328125, 0.0027217864990234375, 0.033721923828125, 0.00018537044525146484, 0.248291015625, 0.0010576248168945312, 0.00013017654418945312], "tokens": [528, 1626, 45, 400, 1135, 2821, 2755, 32, 39636, 81, 2109, 81, 22846, 44, 528, 434, 2797, 322, 2340, 438, 6679, 2784, 225, 42, 30, 996, 4484, 328, 322, 1932, 8209, 528, 434, 225, 432, 322, 6811, 32, 528, 415, 308, 695, 32, 371, 26, 9389, 32, 5241, 27, 333, 225, 42]}
{"line_number": 666, "line_type": "original", "code": "            val.setTime(date);", "entropy": 3.29296875, "is_bug_line": false, "sus_score": 0.6124639511108398, "per_token_entropy": [4.9609375, 12.453125, 0.00921630859375, 5.57421875, 0.00981903076171875, 0.0261688232421875, 0.0112762451171875], "tokens": [1468, 909, 32, 34500, 26, 770, 293]}
{"line_number": 666, "line_type": "generated", "code": "\n            }\n            //If we haven't already set the offset,\n            //  check the current field to see if it's easy\n            if (!offsetSet) {\n                offset = val.get(fields[i][0]);\n                //If we're above", "entropy": 0.48291015625, "is_bug_line": false, "sus_score": 0.6124639511108398, "per_token_entropy": [0.626953125, 0.017364501953125, 0.453857421875, 1.0283203125, 1.5751953125, 0.317138671875, 1.888671875, 8.344650268554688e-06, 0.43310546875, 0.195068359375, 0.1788330078125, 0.03216552734375, 0.44775390625, 2.22265625, 0.037078857421875, 0.170166015625, 1.744140625, 1.095703125, 0.29248046875, 0.3994140625, 1.1044921875, 0.010711669921875, 0.0293426513671875, 1.26953125, 0.7734375, 1.0048828125, 0.55078125, 0.1158447265625, 0.0352783203125, 0.00016069412231445312, 2.9802322387695312e-06, 0.009368896484375, 0.0014190673828125, 0.010162353515625, 0.79150390625, 0.01319122314453125, 0.025360107421875, 9.059906005859375e-06, 1.990795135498047e-05, 0.0026912689208984375, 0.0011644363403320312, 9.894371032714844e-06, 6.99758529663086e-05, 7.212162017822266e-05, 0.00020372867584228516, 0.070068359375, 0.06939697265625, 0.80419921875, 1.392578125, 1.408203125, 0.048583984375, 2.416015625], "tokens": [324, 320, 324, 434, 2797, 996, 14562, 1330, 3425, 739, 322, 3401, 30, 324, 434, 225, 1505, 322, 1550, 1600, 372, 2318, 415, 561, 1182, 8792, 324, 415, 1429, 2881, 885, 27, 301, 400, 3401, 280, 909, 32, 371, 26, 4151, 77, 91, 1674, 34, 1989, 400, 434, 2797, 996, 4484, 3684]}
{"line_number": 670, "line_type": "original", "code": "        boolean roundUp = false;", "entropy": 2.484375, "is_bug_line": false, "sus_score": 0.5857402682304382, "per_token_entropy": [6.5625, 6.2421875, 1.8818359375, 0.52490234375, 0.888671875, 1.2685546875, 0.018035888671875], "tokens": [351, 1905, 7818, 1386, 280, 901, 45]}
{"line_number": 670, "line_type": "generated", "code": "\n                        //Record whether we're in the AM or PM\n                        roundUp = val.get(Calendar.HOUR_OF_DAY) >= 12;\n                        offsetSet = true;\n                    }\n                    break;\n            }\n            if (!offsetSet) {", "entropy": 0.1319580078125, "is_bug_line": false, "sus_score": 0.5857402682304382, "per_token_entropy": [0.291748046875, 0.65771484375, 1.138671875, 0.062347412109375, 0.046600341796875, 0.003963470458984375, 0.173828125, 0.00876617431640625, 0.2225341796875, 0.06298828125, 0.0013475418090820312, 0.80322265625, 0.56201171875, 0.00025272369384765625, 0.0014514923095703125, 0.262939453125, 0.0003287792205810547, 0.0024547576904296875, 0.0002841949462890625, 0.0187530517578125, 0.0003256797790527344, 0.08013916015625, 0.4404296875, 8.821487426757812e-06, 0.0003979206085205078, 0.000270843505859375, 0.0003566741943359375, 0.00936126708984375, 0.0026226043701171875, 1.8715858459472656e-05, 0.0030841827392578125, 0.0009312629699707031, 0.0738525390625, 0.0176239013671875, 0.0916748046875, 0.0003452301025390625, 0.0012760162353515625, 0.00012886524200439453, 0.05450439453125, 0.0013103485107421875, 0.041595458984375, 0.0014104843139648438, 0.00010156631469726562, 0.54052734375, 0.0038356781005859375, 0.422607421875, 0.4892578125, 0.251220703125, 0.000324249267578125, 4.649162292480469e-06, 0.00945281982421875, 0.0036754608154296875], "tokens": [715, 434, 3157, 4946, 996, 4484, 328, 322, 8107, 556, 9396, 715, 7818, 1386, 280, 909, 32, 371, 26, 9389, 32, 30540, 81, 2109, 81, 14318, 27, 2377, 225, 35, 36, 45, 715, 3401, 885, 280, 861, 45, 528, 320, 528, 1626, 45, 324, 320, 324, 415, 1429, 2881, 885, 27, 301]}
{"line_number": 696, "line_type": "original", "code": "            int offset = 0;", "entropy": 1.9755859375, "is_bug_line": false, "sus_score": 0.5847987532615662, "per_token_entropy": [7.3828125, 3.3828125, 0.450439453125, 1.4658203125, 1.1103515625, 0.00421142578125, 0.03399658203125], "tokens": [1468, 629, 3401, 280, 225, 34, 45]}
{"line_number": 696, "line_type": "generated", "code": "\n    /**\n     * <p>Sets all the given fields of the time to zero.</p>\n     *\n     * @param date  the date to modify\n     * @param field  a field from {@link Calendar}\n     * @throws IllegalArgumentException if the", "entropy": 0.378662109375, "is_bug_line": false, "sus_score": 0.5847987532615662, "per_token_entropy": [0.82080078125, 0.69189453125, 0.2412109375, 0.0017614364624023438, 1.017578125, 0.30224609375, 0.0125885009765625, 1.310546875, 1.265625, 0.285888671875, 0.445068359375, 1.7939453125, 0.49609375, 0.07281494140625, 0.446044921875, 0.25439453125, 1.048828125, 0.373779296875, 0.00029730796813964844, 0.0016145706176757812, 0.0164337158203125, 0.0025177001953125, 0.18408203125, 0.0005435943603515625, 0.79638671875, 0.0120391845703125, 0.646484375, 0.08135986328125, 0.02618408203125, 0.07342529296875, 0.325439453125, 1.5634765625, 0.04656982421875, 0.0033512115478515625, 0.0004949569702148438, 0.004009246826171875, 0.291259765625, 0.712890625, 1.0771484375, 0.446044921875, 0.1177978515625, 0.61572265625, 0.09588623046875, 0.354736328125, 0.158935546875, 0.0232391357421875, 0.55615234375, 0.01050567626953125, 0.313720703125, 0.03057861328125, 0.03753662109375, 0.1865234375], "tokens": [284, 1022, 275, 319, 333, 98, 48, 10527, 1169, 322, 2702, 3829, 432, 322, 1133, 372, 5934, 1730, 98, 48, 275, 319, 275, 319, 477, 753, 2340, 225, 322, 2340, 372, 5351, 275, 319, 477, 753, 1600, 225, 312, 1600, 645, 3088, 1204, 16600, 111, 275, 319, 477, 5117, 12137, 415, 322]}
{"line_number": 641, "line_type": "original", "code": "        if (!round || millisecs < 500) {", "entropy": 1.947265625, "is_bug_line": true, "sus_score": 0.5701174139976501, "per_token_entropy": [6.91015625, 3.287109375, 3.666015625, 1.6318359375, 3.97265625, 5.8828125, 0.0157318115234375, 1.7978515625, 0.01678466796875, 0.02239990234375, 0.0006036758422851562, 0.002002716064453125, 0.03253173828125, 0.0245819091796875], "tokens": [351, 415, 1429, 1497, 1276, 37003, 22447, 333, 225, 39, 34, 34, 27, 301]}
{"line_number": 641, "line_type": "generated", "code": "\n                        //This is a special case that's hard to generalize\n                        //If the date is 1, we round up to 16, otherwise\n                        //  we subtract 15 days and add 1 month\n                        if (field == DateUtils", "entropy": 0.1978759765625, "is_bug_line": true, "sus_score": 0.5701174139976501, "per_token_entropy": [1.296875, 1.2646484375, 1.1728515625, 0.1807861328125, 0.68896484375, 0.06768798828125, 0.0589599609375, 0.2257080078125, 0.2276611328125, 0.01187896728515625, 0.00020015239715576172, 0.00499725341796875, 0.0002237558364868164, 0.2320556640625, 0.18017578125, 0.31640625, 0.0102996826171875, 0.46630859375, 0.002101898193359375, 0.0215301513671875, 0.1717529296875, 0.0183258056640625, 0.0161590576171875, 0.060272216796875, 0.003040313720703125, 0.0017404556274414062, 0.01204681396484375, 0.0859375, 0.004871368408203125, 0.0010089874267578125, 0.0007147789001464844, 0.0063018798828125, 0.002605438232421875, 0.01045989990234375, 0.00052642822265625, 0.021728515625, 0.0006084442138671875, 6.9141387939453125e-06, 1.5380859375, 0.0035343170166015625, 0.0027675628662109375, 0.0001537799835205078, 0.0003535747528076172, 9.298324584960938e-06, 0.005641937255859375, 0.41943359375, 0.08209228515625, 0.0249786376953125, 0.7060546875, 0.00476837158203125, 0.65478515625, 0.0001399517059326172], "tokens": [715, 434, 2272, 438, 312, 7456, 1135, 688, 1182, 6784, 372, 8074, 518, 715, 434, 2797, 322, 2340, 438, 225, 35, 30, 996, 7818, 973, 372, 225, 35, 40, 30, 5878, 715, 434, 225, 996, 27799, 225, 35, 39, 6935, 461, 1015, 225, 35, 6811, 715, 415, 308, 1495, 610, 2821, 2755]}
{"line_number": 650, "line_type": "original", "code": "        if (!done && (!round || seconds < 30)) {", "entropy": 1.39453125, "is_bug_line": true, "sus_score": 0.5659983158111572, "per_token_entropy": [5.1328125, 3.1875, 1.96484375, 4.265625, 0.368408203125, 1.716796875, 0.036895751953125, 0.022613525390625, 4.015625, 0.164306640625, 0.0011444091796875, 9.655952453613281e-06, 2.0742416381835938e-05, 0.0127105712890625, 0.02545166015625], "tokens": [351, 415, 1429, 5087, 962, 1429, 1497, 1276, 6791, 333, 225, 37, 34, 490, 301]}
{"line_number": 650, "line_type": "generated", "code": "\n                case Calendar.SECOND:\n                    //Seconds need to be handled a bit differently since there are\n                    //  sixty seconds in a minute, so we may have to increment the minute\n                    offset = val.get(Calendar.SECOND);\n                    if (round", "entropy": 0.484375, "is_bug_line": true, "sus_score": 0.5659983158111572, "per_token_entropy": [0.75927734375, 0.1842041015625, 0.8154296875, 0.0005154609680175781, 1.39453125, 0.024627685546875, 0.2080078125, 0.59912109375, 1.201171875, 0.84228515625, 0.0005998611450195312, 0.0181427001953125, 0.1966552734375, 0.08831787109375, 0.19482421875, 0.291259765625, 1.189453125, 0.29345703125, 0.6982421875, 0.537109375, 0.0006318092346191406, 0.79541015625, 1.6953125, 0.335693359375, 0.006847381591796875, 0.0006151199340820312, 0.03546142578125, 0.1549072265625, 0.732421875, 1.95703125, 0.3779296875, 0.83447265625, 1.0986328125, 0.00441741943359375, 2.3828125, 0.84033203125, 0.344482421875, 0.177001953125, 0.90234375, 0.07659912109375, 0.1832275390625, 2.7418136596679688e-05, 0.0032901763916015625, 4.8995018005371094e-05, 0.00463104248046875, 0.00933074951171875, 0.427001953125, 0.464599609375, 0.0260467529296875, 0.93798828125, 0.380126953125, 0.462890625], "tokens": [400, 1135, 16600, 32, 23790, 44, 528, 434, 9023, 1849, 372, 526, 13744, 312, 3493, 29928, 4558, 2017, 884, 528, 434, 225, 18792, 618, 6791, 328, 312, 16044, 30, 1259, 996, 1631, 1159, 372, 11885, 322, 16044, 528, 3401, 280, 909, 32, 371, 26, 9389, 32, 23790, 293, 528, 415, 308, 1497]}
{"line_number": 659, "line_type": "original", "code": "        if (!done && (!round || minutes < 30)) {", "entropy": 1.767578125, "is_bug_line": false, "sus_score": 0.5652543306350708, "per_token_entropy": [8.1328125, 3.615234375, 2.5859375, 4.5625, 0.7470703125, 0.6982421875, 0.0196990966796875, 0.017669677734375, 5.96484375, 0.1051025390625, 0.002071380615234375, 0.0020618438720703125, 0.00029468536376953125, 0.03692626953125, 0.03143310546875], "tokens": [351, 415, 1429, 5087, 962, 1429, 1497, 1276, 10135, 333, 225, 37, 34, 490, 301]}
{"line_number": 659, "line_type": "generated", "code": "\n                            offset += 1;\n                        }\n                        //4 and 10 are the only even number of days that might require\n                        //  a special round up behavior\n                        else if ((offset == 4) || (offset == 10)) {\n                           ", "entropy": 0.407958984375, "is_bug_line": false, "sus_score": 0.5652543306350708, "per_token_entropy": [0.3857421875, 0.1427001953125, 0.9462890625, 0.030914306640625, 0.08251953125, 0.0219268798828125, 0.2021484375, 0.026336669921875, 0.892578125, 0.837890625, 0.74365234375, 1.3525390625, 9.72747802734375e-05, 0.55029296875, 1.2040138244628906e-05, 0.149169921875, 0.3642578125, 0.76416015625, 0.70947265625, 0.1572265625, 1.0625, 0.0113983154296875, 1.8369140625, 2.24609375, 1.5712890625, 0.1025390625, 0.00042629241943359375, 0.04376220703125, 0.36279296875, 1.232421875, 0.5498046875, 0.087890625, 1.44140625, 0.4462890625, 1.154296875, 0.0038280487060546875, 0.1337890625, 0.00016641616821289062, 0.0611572265625, 0.00022017955780029297, 5.936622619628906e-05, 0.041351318359375, 0.0027523040771484375, 0.0063934326171875, 0.0005474090576171875, 0.0007777214050292969, 0.0001881122589111328, 0.00011730194091796875, 2.6345252990722656e-05, 0.005886077880859375, 0.01166534423828125, 0.44775390625], "tokens": [1014, 3401, 1454, 225, 35, 45, 715, 320, 715, 434, 38, 461, 225, 35, 34, 884, 322, 1755, 4444, 1451, 432, 6935, 688, 4796, 1205, 715, 434, 225, 312, 7456, 7818, 973, 5853, 715, 813, 415, 1833, 2881, 610, 225, 38, 27, 1276, 308, 2881, 610, 225, 35, 34, 490, 301, 1014]}
{"line_number": 735, "line_type": "original", "code": "                roundUp = offset > ((max - min) / 2);", "entropy": 2.224609375, "is_bug_line": false, "sus_score": 0.5643560290336609, "per_token_entropy": [9.125, 12.1640625, 0.46630859375, 0.91796875, 0.295166015625, 0.022918701171875, 8.921875, 0.60302734375, 0.42138671875, 0.012725830078125, 0.170654296875, 0.0232391357421875, 0.004863739013671875, 0.0270538330078125, 0.18994140625], "tokens": [2071, 7818, 1386, 280, 3401, 848, 1833, 1449, 429, 1847, 27, 517, 225, 36, 293]}
{"line_number": 735, "line_type": "generated", "code": " will return an <code>Iterator</code>\n     * that starts with Sunday, June 30, 2002 and ends with Saturday, August 3,\n     * 2002, returning a Calendar instance for each", "entropy": 0.044097900390625, "is_bug_line": false, "sus_score": 0.5643560290336609, "per_token_entropy": [1.0205078125, 0.006198883056640625, 0.0105438232421875, 0.054412841796875, 0.0005292892456054688, 0.0005412101745605469, 0.0019235610961914062, 0.0005927085876464844, 5.0187110900878906e-05, 0.002223968505859375, 0.99072265625, 0.0016851425170898438, 0.00775146484375, 0.002727508544921875, 0.0008325576782226562, 0.0797119140625, 0.0037021636962890625, 0.0011682510375976562, 0.010345458984375, 0.001476287841796875, 0.004734039306640625, 0.001033782958984375, 0.0003273487091064453, 0.002559661865234375, 0.003177642822265625, 2.86102294921875e-06, 0.0004665851593017578, 0.0006756782531738281, 0.003902435302734375, 0.0016956329345703125, 0.0012083053588867188, 0.00586700439453125, 0.0009303092956542969, 0.001262664794921875, 0.004364013671875, 0.003326416015625, 0.0021991729736328125, 0.00041103363037109375, 0.0205230712890625, 0.0036182403564453125, 0.0005016326904296875, 0.0001531839370727539, 4.8041343688964844e-05, 0.00029850006103515625, 0.0002446174621582031, 0.0010204315185546875, 0.00146484375, 0.0006814002990722656, 0.0284271240234375, 0.0007429122924804688, 0.0002570152282714844, 4.076957702636719e-05], "tokens": [1098, 442, 600, 333, 687, 48, 5731, 377, 687, 48, 275, 319, 688, 11187, 623, 358, 28036, 30, 30422, 225, 37, 34, 30, 225, 36, 34, 34, 36, 461, 15564, 623, 358, 30288, 30, 34592, 225, 37, 30, 275, 319, 225, 36, 34, 34, 36, 30, 14116, 312, 16600, 1980, 436, 2504]}
{"line_number": 649, "line_type": "original", "code": "        int seconds = val.get(Calendar.SECOND);", "entropy": 1.5029296875, "is_bug_line": true, "sus_score": 0.5470352172851562, "per_token_entropy": [4.79296875, 2.908203125, 10.1875, 0.09820556640625, 0.025299072265625, 0.001026153564453125, 9.78708267211914e-05, 0.000701904296875, 0.0021457672119140625, 0.0166015625, 6.937980651855469e-05, 0.0006132125854492188], "tokens": [351, 629, 6791, 280, 909, 32, 371, 26, 9389, 32, 23790, 293]}
{"line_number": 649, "line_type": "generated", "code": "\n            if (field == DateUtils.SEMI_MONTH) {\n                //For the semitmonths, we don't want to go past the end of the month\n                //  so we subtract 1 day at a time.\n                offset = -1", "entropy": 0.344970703125, "is_bug_line": true, "sus_score": 0.5470352172851562, "per_token_entropy": [0.198974609375, 0.32666015625, 0.11016845703125, 0.281982421875, 0.002460479736328125, 0.496337890625, 0.00016236305236816406, 0.0008711814880371094, 0.0280609130859375, 7.271766662597656e-06, 5.9604644775390625e-06, 4.482269287109375e-05, 0.11383056640625, 0.00067901611328125, 0.0231781005859375, 0.5078125, 0.28125, 0.16064453125, 1.4501953125, 0.64208984375, 1.9794921875, 0.11627197265625, 0.0406494140625, 1.134765625, 1.0371208190917969e-05, 0.1123046875, 0.0005125999450683594, 1.0244140625, 0.1864013671875, 0.016876220703125, 0.158203125, 0.10894775390625, 0.004486083984375, 0.01068115234375, 0.042999267578125, 0.4091796875, 0.45263671875, 0.2783203125, 0.201171875, 0.3037109375, 1.2333984375, 0.0072174072265625, 1.869140625, 0.9931640625, 0.04193115234375, 1.621246337890625e-05, 0.86865234375, 1.15625, 0.45849609375, 0.0650634765625, 0.034576416015625, 0.0007567405700683594], "tokens": [324, 415, 308, 1495, 610, 2821, 2755, 32, 807, 5891, 81, 22846, 27, 301, 400, 434, 1562, 322, 408, 911, 28407, 30, 996, 2800, 1330, 2637, 372, 1983, 11169, 322, 943, 432, 322, 6811, 400, 434, 225, 1259, 996, 27799, 225, 35, 5808, 821, 312, 1133, 32, 400, 3401, 280, 429, 35]}
{"line_number": 658, "line_type": "original", "code": "        int minutes = val.get(Calendar.MINUTE);", "entropy": 1.6953125, "is_bug_line": true, "sus_score": 0.5438057780265808, "per_token_entropy": [6.7734375, 5.3984375, 6.39453125, 1.6953125, 0.0271148681640625, 0.0014629364013671875, 0.00028228759765625, 0.001415252685546875, 0.003482818603515625, 0.0004436969757080078, 0.0079498291015625, 0.0355224609375], "tokens": [351, 629, 10135, 280, 909, 32, 371, 26, 9389, 32, 47229, 293]}
{"line_number": 658, "line_type": "generated", "code": "\n                        if (offset > 15) {\n                            offset -= 15;\n                        }\n                        offsetSet = true;\n                    }\n                    break;\n                case Calendar.HOUR_OF_DAY:\n                    //If the field we're rounding to is HOUR", "entropy": 0.241943359375, "is_bug_line": true, "sus_score": 0.5438057780265808, "per_token_entropy": [0.1346435546875, 0.462646484375, 0.039947509765625, 0.0689697265625, 0.76318359375, 0.0045623779296875, 0.00014531612396240234, 1.621246337890625e-05, 0.0008988380432128906, 0.007305145263671875, 0.04425048828125, 0.080078125, 0.040496826171875, 0.0003159046173095703, 0.0012941360473632812, 6.151199340820312e-05, 5.435943603515625e-05, 0.056060791015625, 0.042327880859375, 0.73046875, 0.72998046875, 0.0048065185546875, 0.00041556358337402344, 0.0005269050598144531, 7.045269012451172e-05, 0.058563232421875, 0.0010986328125, 0.30712890625, 0.0182342529296875, 0.0002753734588623047, 0.321044921875, 0.04803466796875, 0.6787109375, 8.177757263183594e-05, 1.162109375, 0.1959228515625, 1.5974044799804688e-05, 2.8014183044433594e-05, 0.0020294189453125, 0.0012331008911132812, 0.08685302734375, 0.8125, 0.2264404296875, 0.70458984375, 0.68359375, 0.4697265625, 0.04132080078125, 1.9248046875, 0.7587890625, 0.0312347412109375, 0.8291015625, 2.9802322387695312e-06], "tokens": [715, 415, 308, 2881, 848, 225, 35, 39, 27, 301, 1014, 3401, 5912, 225, 35, 39, 45, 715, 320, 715, 3401, 885, 280, 861, 45, 528, 320, 528, 1626, 45, 400, 1135, 16600, 32, 30540, 81, 2109, 81, 14318, 44, 528, 434, 2797, 322, 1600, 996, 4484, 35396, 372, 438, 11551, 1263]}
{"line_number": 621, "line_type": "original", "code": "        if (val.get(Calendar.YEAR) > 280000000) {", "entropy": 0.60791015625, "is_bug_line": false, "sus_score": 0.5393702983856201, "per_token_entropy": [6.20703125, 1.53125, 0.08209228515625, 3.119140625, 0.0173797607421875, 0.1412353515625, 0.1163330078125, 0.11553955078125, 0.051055908203125, 2.76171875, 0.00222015380859375, 0.03790283203125, 0.0518798828125, 0.11529541015625, 0.006343841552734375, 0.0004649162292480469, 9.965896606445312e-05, 7.510185241699219e-06, 4.4345855712890625e-05, 0.00045418739318847656, 0.01030731201171875, 0.175537109375, 0.0177764892578125, 0.025634765625], "tokens": [351, 415, 308, 695, 32, 371, 26, 9389, 32, 23164, 27, 848, 225, 36, 42, 34, 34, 34, 34, 34, 34, 34, 27, 301]}
{"line_number": 621, "line_type": "generated", "code": "\n        if (field == Calendar.MILLISECOND) {\n            return;\n        }\n\n        // fix for LANG-384\n        int offset = val.get(Calendar.ZONE_OFFSET) + val.get(Calendar.DST_OFFSET);\n        if", "entropy": 0.3642578125, "is_bug_line": false, "sus_score": 0.5393702983856201, "per_token_entropy": [1.03515625, 1.5185546875, 0.0723876953125, 0.353271484375, 0.0162353515625, 0.2099609375, 0.01094818115234375, 2.220703125, 3.3020973205566406e-05, 0.049835205078125, 0.0035495758056640625, 0.04351806640625, 0.181396484375, 0.0013608932495117188, 0.01461029052734375, 0.0016050338745117188, 0.4150390625, 0.50537109375, 1.5224609375, 0.078369140625, 1.1005859375, 0.0007123947143554688, 1.3740234375, 1.53125, 1.505859375, 0.30078125, 1.0380859375, 1.0185546875, 0.05029296875, 0.408203125, 0.0022373199462890625, 0.061279296875, 0.0035686492919921875, 0.56005859375, 0.0136260986328125, 0.034393310546875, 9.5367431640625e-07, 0.0011510848999023438, 0.32568359375, 0.020172119140625, 0.008758544921875, 7.510185241699219e-06, 5.793571472167969e-05, 5.3882598876953125e-05, 0.000396728515625, 0.0001881122589111328, 0.0013723373413085938, 1.9073486328125e-06, 9.644031524658203e-05, 0.0009860992431640625, 0.52001953125, 0.806640625], "tokens": [291, 415, 308, 1495, 610, 16600, 32, 32206, 23790, 27, 301, 324, 442, 45, 291, 320, 584, 434, 2421, 436, 36297, 31, 37, 42, 38, 291, 629, 3401, 280, 909, 32, 371, 26, 9389, 32, 27368, 81, 10158, 27, 474, 909, 32, 371, 26, 9389, 32, 28635, 81, 10158, 293, 291, 415]}
{"line_number": 671, "line_type": "original", "code": "        for (int i = 0; i < fields.length; i++) {", "entropy": 0.9599609375, "is_bug_line": false, "sus_score": 0.5393702983856201, "per_token_entropy": [6.2109375, 3.21875, 0.03436279296875, 0.0242462158203125, 6.24609375, 0.06353759765625, 0.077880859375, 0.034454345703125, 0.052490234375, 0.0056610107421875, 0.036163330078125, 1.0693359375, 0.030914306640625, 0.0023097991943359375, 0.0160369873046875, 0.099609375, 0.007171630859375, 0.048614501953125], "tokens": [351, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 3829, 32, 1322, 45, 595, 1987, 301]}
{"line_number": 671, "line_type": "generated", "code": "\n                        //If we're above 12 hours, that means we're in the\n                        //  afternoon and should stay accordingly.\n                        if (offset >= 12) {\n                            offset -= 12;\n                        }\n                        //Record whether we", "entropy": 0.117431640625, "is_bug_line": false, "sus_score": 0.5393702983856201, "per_token_entropy": [0.408447265625, 0.64404296875, 0.7568359375, 0.333251953125, 0.0032253265380859375, 1.1123046875, 0.018585205078125, 0.0008511543273925781, 0.003612518310546875, 0.30517578125, 0.541015625, 0.405029296875, 0.0005598068237304688, 0.01131439208984375, 0.0016574859619140625, 0.0623779296875, 0.03338623046875, 0.004917144775390625, 0.0002472400665283203, 0.004283905029296875, 0.68994140625, 1.1920928955078125e-07, 0.00010383129119873047, 0.042083740234375, 0.0860595703125, 0.1009521484375, 0.054718017578125, 0.01227569580078125, 0.0526123046875, 0.1246337890625, 0.007328033447265625, 0.0033702850341796875, 0.021453857421875, 0.0006785392761230469, 1.609325408935547e-05, 8.106231689453125e-06, 0.0011301040649414062, 0.0018672943115234375, 0.0154571533203125, 0.01268768310546875, 0.000331878662109375, 0.0017719268798828125, 1.239776611328125e-05, 5.841255187988281e-06, 7.557868957519531e-05, 0.0145111083984375, 0.0027561187744140625, 0.0477294921875, 0.152587890625, 0.00379180908203125, 0.00017464160919189453, 0.0037250518798828125], "tokens": [715, 434, 2797, 996, 4484, 3684, 225, 35, 36, 11632, 30, 688, 6058, 996, 4484, 328, 322, 715, 434, 225, 14238, 900, 22919, 461, 1395, 20005, 23601, 32, 715, 415, 308, 2881, 2377, 225, 35, 36, 27, 301, 1014, 3401, 5912, 225, 35, 36, 45, 715, 320, 715, 434, 3157, 4946, 996]}
