{"line_number": 182, "line_type": "original", "code": "        return getInstance(pattern, timeZone, null);", "entropy": 1.7353515625, "is_bug_line": false, "sus_score": 0.528900682926178, "per_token_entropy": [4.37890625, 2.34375, 0.60400390625, 0.13623046875, 3.517578125, 0.037353515625, 2.509765625, 0.00203704833984375, 0.039398193359375, 5.5078125, 0.01424407958984375], "tokens": [351, 442, 31637, 26, 5607, 30, 1133, 6767, 30, 744, 293]}
{"line_number": 182, "line_type": "generated", "code": "\n     */\n    public static FastDateFormat getDateInstance(int style) {\n        return getDateInstance(style, null, null);\n    }\n\n    /**\n     * <p>Gets a date formatter instance using the specified style, time\n     * zone and locale", "entropy": 0.0623779296875, "is_bug_line": false, "sus_score": 0.528900682926178, "per_token_entropy": [0.646484375, 0.09954833984375, 0.01532745361328125, 0.019134521484375, 0.0007128715515136719, 0.16015625, 0.0008668899536132812, 0.0076751708984375, 0.0010499954223632812, 0.00045418739318847656, 0.0009508132934570312, 0.042022705078125, 0.002773284912109375, 0.0025806427001953125, 0.0098114013671875, 0.188232421875, 0.04766845703125, 0.0273284912109375, 0.002544403076171875, 3.159046173095703e-05, 0.00035762786865234375, 0.00048542022705078125, 5.614757537841797e-05, 0.44287109375, 0.0430908203125, 0.039031982421875, 0.007373809814453125, 0.015960693359375, 0.00012874603271484375, 0.058013916015625, 0.0167388916015625, 0.00168609619140625, 1.2755393981933594e-05, 0.003108978271484375, 3.5762786865234375e-07, 4.267692565917969e-05, 0.0017023086547851562, 0.0008654594421386719, 0.018707275390625, 0.001613616943359375, 0.0010356903076171875, 0.0019378662109375, 9.131431579589844e-05, 0.00018036365509033203, 0.02874755859375, 0.681640625, 0.394775390625, 0.1202392578125, 5.364418029785156e-06, 0.00033164024353027344, 0.005584716796875, 0.08245849609375], "tokens": [275, 569, 284, 562, 907, 15938, 15645, 622, 1547, 1810, 26, 410, 1418, 27, 301, 291, 442, 622, 1547, 1810, 26, 1621, 30, 744, 30, 744, 293, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 20931, 312, 2340, 14971, 1980, 1471, 322, 3191, 1418, 30, 1133, 275, 319, 10790, 461, 11259]}
{"line_number": 1301, "line_type": "original", "code": "                    buffer.append('0');", "entropy": 2.328125, "is_bug_line": false, "sus_score": 0.5171098709106445, "per_token_entropy": [9.75, 3.37109375, 0.0019369125366210938, 0.005474090576171875, 2.939453125, 0.2144775390625, 0.017578125], "tokens": [4696, 3112, 32, 1689, 463, 34, 895]}
{"line_number": 1301, "line_type": "generated", "code": "\n        }\n    }", "entropy": 0.488037109375, "is_bug_line": false, "sus_score": 0.5171098709106445, "per_token_entropy": [0.58984375, 0.63818359375, 0.71923828125, 0.004909515380859375], "tokens": [291, 320, 284, 320]}
{"line_number": 1303, "line_type": "original", "code": "                buffer.append((char)(value / 10 + '0'));", "entropy": 0.708984375, "is_bug_line": false, "sus_score": 0.5166824460029602, "per_token_entropy": [8.3125, 1.765625, 0.0014562606811523438, 0.002109527587890625, 0.1820068359375, 0.004207611083984375, 0.16650390625, 0.03765869140625, 0.8544921875, 0.001613616943359375, 0.00015878677368164062, 9.882450103759766e-05, 0.01043701171875, 0.0025806427001953125, 0.00014507770538330078, 0.0022792816162109375], "tokens": [2071, 3112, 32, 1689, 1162, 1594, 2502, 853, 517, 225, 35, 34, 474, 330, 34, 4646]}
{"line_number": 1303, "line_type": "generated", "code": "\n        public void appendTo(StringBuffer buffer, int value) {\n            buffer.append((char)(value / 10 + '0'));\n            buffer.append((char)(value % 10 + '0'));\n        }\n    }\n\n    /**\n    ", "entropy": 0.039886474609375, "is_bug_line": false, "sus_score": 0.5166824460029602, "per_token_entropy": [0.1905517578125, 0.043304443359375, 0.33984375, 0.0003120899200439453, 0.0001811981201171875, 0.00029921531677246094, 0.0013761520385742188, 0.0005397796630859375, 9.226799011230469e-05, 0.01117706298828125, 0.0083465576171875, 0.0008220672607421875, 0.00791168212890625, 0.07525634765625, 0.52587890625, 0.000743865966796875, 0.00042057037353515625, 0.08447265625, 0.00266265869140625, 0.2442626953125, 0.000965118408203125, 0.03704833984375, 0.0007081031799316406, 4.3511390686035156e-05, 1.5020370483398438e-05, 0.0027980804443359375, 0.00148773193359375, 2.849102020263672e-05, 0.0012969970703125, 0.01727294921875, 0.001312255859375, 3.8743019104003906e-05, 1.2516975402832031e-05, 9.000301361083984e-05, 7.867813110351562e-05, 0.00030517578125, 3.600120544433594e-05, 0.0004506111145019531, 8.177757263183594e-05, 4.172325134277344e-06, 7.2479248046875e-05, 9.512901306152344e-05, 6.4849853515625e-05, 1.9550323486328125e-05, 4.8160552978515625e-05, 0.00817108154296875, 0.0006418228149414062, 0.03936767578125, 0.0009822845458984375, 0.346923828125, 0.0716552734375, 0.002941131591796875], "tokens": [291, 562, 763, 5489, 705, 26, 35322, 3112, 30, 629, 786, 27, 301, 324, 3112, 32, 1689, 1162, 1594, 2502, 853, 517, 225, 35, 34, 474, 330, 34, 4646, 324, 3112, 32, 1689, 1162, 1594, 2502, 853, 904, 225, 35, 34, 474, 330, 34, 4646, 291, 320, 284, 320, 446, 1022, 275]}
{"line_number": 1300, "line_type": "original", "code": "                for (int i = mSize; --i >= 2; ) {", "entropy": 1.0078125, "is_bug_line": false, "sus_score": 0.5161063075065613, "per_token_entropy": [7.7578125, 6.34375, 0.0279083251953125, 0.04083251953125, 0.0672607421875, 0.01186370849609375, 1.9677734375, 0.2900390625, 0.1124267578125, 0.06280517578125, 0.0010423660278320312, 0.0653076171875, 0.265380859375, 0.0316162109375, 0.049285888671875, 0.005046844482421875, 0.031219482421875], "tokens": [2071, 436, 308, 410, 595, 280, 345, 1250, 45, 769, 91, 2377, 225, 36, 45, 829, 301]}
{"line_number": 1300, "line_type": "generated", "code": "\n        /**\n         * {@inheritDoc}\n         */\n        public void appendTo(StringBuffer buffer, int value) {\n            if (value < 10) {\n                buffer.append((char)(value + '0'));\n            } else {\n                buffer.append", "entropy": 0.0628662109375, "is_bug_line": false, "sus_score": 0.5161063075065613, "per_token_entropy": [0.8125, 0.318115234375, 0.014251708984375, 0.00016736984252929688, 0.04656982421875, 6.80685043334961e-05, 6.890296936035156e-05, 0.001201629638671875, 0.00992584228515625, 0.00711822509765625, 0.0027256011962890625, 0.334228515625, 0.0004096031188964844, 0.00024139881134033203, 0.00019478797912597656, 0.0012426376342773438, 0.0002872943878173828, 7.009506225585938e-05, 0.0199432373046875, 0.006465911865234375, 0.00033354759216308594, 0.0018100738525390625, 0.0516357421875, 0.80224609375, 0.004764556884765625, 0.004459381103515625, 0.09405517578125, 0.0023899078369140625, 0.173095703125, 0.0008563995361328125, 0.1683349609375, 0.0011301040649414062, 0.15185546875, 0.002170562744140625, 1.5139579772949219e-05, 0.00010466575622558594, 0.09661865234375, 0.0004627704620361328, 0.027587890625, 0.00011229515075683594, 0.0008902549743652344, 0.0022907257080078125, 3.0875205993652344e-05, 0.00011444091796875, 0.019866943359375, 0.00017952919006347656, 0.0027599334716796875, 0.01178741455078125, 0.04986572265625, 0.022186279296875, 2.658367156982422e-05, 0.00012803077697753906], "tokens": [291, 1022, 276, 319, 3088, 18446, 111, 276, 569, 291, 562, 763, 5489, 705, 26, 35322, 3112, 30, 629, 786, 27, 301, 324, 415, 308, 853, 333, 225, 35, 34, 27, 301, 400, 3112, 32, 1689, 1162, 1594, 2502, 853, 474, 330, 34, 4646, 324, 320, 813, 301, 400, 3112, 32, 1689]}
{"line_number": 1304, "line_type": "original", "code": "                buffer.append((char)(value % 10 + '0'));", "entropy": 0.58203125, "is_bug_line": false, "sus_score": 0.5161063075065613, "per_token_entropy": [7.39453125, 0.442626953125, 0.0007634162902832031, 0.0010976791381835938, 0.246826171875, 0.0023670196533203125, 0.09100341796875, 0.002040863037109375, 1.1220703125, 0.0004775524139404297, 0.001537322998046875, 6.99758529663086e-05, 0.00463104248046875, 0.002376556396484375, 0.00012731552124023438, 0.0012836456298828125], "tokens": [2071, 3112, 32, 1689, 1162, 1594, 2502, 853, 904, 225, 35, 34, 474, 330, 34, 4646]}
{"line_number": 1304, "line_type": "generated", "code": "\n        }\n    }\n\n    /**\n     * <p>Inner class to output a number unpadded.</p>\n     */\n    private static class UnpaddedNumberField implements NumberRule {\n        private final int mField;\n\n        /**\n         * Constructs an instance of <", "entropy": 0.1361083984375, "is_bug_line": false, "sus_score": 0.5161063075065613, "per_token_entropy": [0.263671875, 0.0005826950073242188, 0.024566650390625, 0.0007834434509277344, 0.291015625, 0.06298828125, 0.0027217864990234375, 0.0003402233123779297, 0.07159423828125, 0.0013570785522460938, 0.0021381378173828125, 0.0204925537109375, 0.001667022705078125, 0.057708740234375, 0.2369384765625, 1.0400390625, 1.927734375, 2.6640625, 0.0176544189453125, 0.210693359375, 0.0002951622009277344, 0.0005259513854980469, 0.0022563934326171875, 0.04864501953125, 0.0026721954345703125, 0.0059661865234375, 0.0012063980102539062, 0.01043701171875, 0.002071380615234375, 2.3603439331054688e-05, 0.00392913818359375, 0.0007824897766113281, 0.01055145263671875, 0.0009188652038574219, 5.364418029785156e-05, 0.0028533935546875, 0.00858306884765625, 0.005352020263671875, 0.00485992431640625, 0.003963470458984375, 0.0009794235229492188, 0.0027065277099609375, 0.00047087669372558594, 0.027862548828125, 0.003814697265625, 0.0012645721435546875, 0.00010466575622558594, 0.0050048828125, 0.00506591796875, 0.00522613525390625, 0.005077362060546875, 0.006008148193359375], "tokens": [291, 320, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 10893, 443, 372, 1688, 312, 1451, 707, 34294, 1730, 98, 48, 275, 569, 284, 945, 907, 443, 1683, 34294, 1918, 1176, 4575, 5104, 3842, 301, 291, 945, 1158, 629, 345, 1176, 45, 584, 1022, 276, 319, 29799, 600, 1980, 432, 333]}
{"line_number": 1430, "line_type": "original", "code": "            buffer.append((char)(value / 10 + '0'));", "entropy": 0.8017578125, "is_bug_line": false, "sus_score": 0.5125080943107605, "per_token_entropy": [8.0703125, 3.23828125, 0.006687164306640625, 0.0079345703125, 0.12322998046875, 0.01129150390625, 0.1199951171875, 0.030029296875, 1.158203125, 0.00478363037109375, 0.0141754150390625, 0.0016021728515625, 0.0276641845703125, 0.004131317138671875, 0.005126953125, 0.000995635986328125], "tokens": [1468, 3112, 32, 1689, 1162, 1594, 2502, 853, 517, 225, 35, 34, 474, 330, 34, 4646]}
{"line_number": 1430, "line_type": "generated", "code": "\n    private static class TwentyFourHourField implements NumberRule {\n        private final NumberRule mRule;\n\n        /**\n         * Constructs an instance of <code>TwentyFourHourField</code> with the specified\n         * <code>NumberRule</code", "entropy": 0.0155487060546875, "is_bug_line": false, "sus_score": 0.5125080943107605, "per_token_entropy": [0.27880859375, 0.060089111328125, 0.00327301025390625, 0.006702423095703125, 0.0050201416015625, 0.00012040138244628906, 0.01192474365234375, 0.0006818771362304688, 0.0004916191101074219, 0.05242919921875, 0.00241851806640625, 0.00013184547424316406, 0.009613037109375, 0.042938232421875, 0.10400390625, 0.024383544921875, 0.01467132568359375, 0.00023877620697021484, 0.0013875961303710938, 0.0004878044128417969, 0.003047943115234375, 0.037506103515625, 0.01397705078125, 0.0016326904296875, 6.401538848876953e-05, 0.0026149749755859375, 0.0015707015991210938, 0.0005865097045898438, 0.0005331039428710938, 0.0026302337646484375, 0.00012576580047607422, 0.00016391277313232422, 0.0268707275390625, 0.00821685791015625, 0.0036220550537109375, 0.0012302398681640625, 0.00018727779388427734, 0.002655029296875, 3.647804260253906e-05, 0.007904052734375, 0.00675201416015625, 0.002727508544921875, 0.041412353515625, 0.0042572021484375, 0.00012612342834472656, 0.01096343994140625, 0.0002048015594482422, 5.2094459533691406e-05, 0.005863189697265625, 0.0009002685546875, 0.00034046173095703125, 2.193450927734375e-05], "tokens": [284, 945, 907, 443, 12038, 25570, 19630, 14415, 1176, 4575, 5104, 3842, 301, 291, 945, 1158, 5104, 3842, 345, 3842, 45, 584, 1022, 276, 319, 29799, 600, 1980, 432, 333, 687, 48, 10267, 25570, 19630, 14415, 1176, 377, 687, 48, 623, 322, 3191, 276, 319, 333, 687, 48, 1918, 3842, 377, 687]}
{"line_number": 1431, "line_type": "original", "code": "            buffer.append((char)(value % 10 + '0'));", "entropy": 0.9970703125, "is_bug_line": false, "sus_score": 0.5103527307510376, "per_token_entropy": [5.56640625, 6.953125, 0.006969451904296875, 0.01435089111328125, 0.27978515625, 0.012420654296875, 0.1107177734375, 0.0443115234375, 2.830078125, 0.0048370361328125, 0.0789794921875, 0.003780364990234375, 0.0369873046875, 0.00592803955078125, 0.00104522705078125, 0.003528594970703125], "tokens": [1468, 3112, 32, 1689, 1162, 1594, 2502, 853, 904, 225, 35, 34, 474, 330, 34, 4646]}
{"line_number": 1431, "line_type": "generated", "code": "\n        /**\n         * Constructs an instance of <code>TwentyFourHourField</code>.\n         */\n        TwentyFourHourField() {\n            super();\n        }\n\n        /**\n         * {@inheritDoc}\n         */\n        public int estimateLength() {\n            return", "entropy": 0.043670654296875, "is_bug_line": false, "sus_score": 0.5103527307510376, "per_token_entropy": [0.66064453125, 0.7841796875, 0.01358795166015625, 0.0010137557983398438, 0.30078125, 0.0038204193115234375, 0.0019273757934570312, 0.00435638427734375, 0.0059661865234375, 0.00014221668243408203, 0.0001341104507446289, 0.047760009765625, 0.009246826171875, 0.003528594970703125, 0.0011138916015625, 0.00033283233642578125, 0.0022182464599609375, 5.8770179748535156e-05, 0.1968994140625, 0.007904052734375, 0.007297515869140625, 0.00957489013671875, 0.01306915283203125, 1.049041748046875e-05, 1.6450881958007812e-05, 0.00013256072998046875, 6.198883056640625e-06, 0.01233673095703125, 0.005184173583984375, 0.03497314453125, 0.0005826950073242188, 0.0003829002380371094, 0.0074462890625, 0.0002256631851196289, 0.025665283203125, 0.0026302337646484375, 0.0007877349853515625, 5.9485435485839844e-05, 0.00527191162109375, 4.935264587402344e-05, 2.4080276489257812e-05, 0.0003147125244140625, 0.00037097930908203125, 0.002300262451171875, 0.0005578994750976562, 0.01497650146484375, 0.0001729726791381836, 1.3947486877441406e-05, 0.0003426074981689453, 0.00016033649444580078, 0.077392578125, 0.0033111572265625], "tokens": [291, 1022, 276, 319, 29799, 600, 1980, 432, 333, 687, 48, 10267, 25570, 19630, 14415, 1176, 377, 687, 4503, 276, 569, 291, 12038, 25570, 19630, 14415, 1176, 346, 301, 324, 2599, 473, 291, 320, 584, 1022, 276, 319, 3088, 18446, 111, 276, 569, 291, 562, 629, 20772, 2380, 346, 301, 324, 442]}
{"line_number": 1423, "line_type": "original", "code": "            appendTo(buffer, calendar.get(Calendar.MONTH) + 1);", "entropy": 1.421875, "is_bug_line": false, "sus_score": 0.5085369944572449, "per_token_entropy": [7.59765625, 5.390625, 0.050567626953125, 0.015533447265625, 0.010894775390625, 0.0026073455810546875, 6.6640625, 0.382568359375, 0.0152587890625, 0.0894775390625, 0.002201080322265625, 0.00013959407806396484, 4.890625, 0.377197265625, 0.0859375, 0.008270263671875, 0.0004200935363769531, 0.01300048828125], "tokens": [1468, 5489, 705, 26, 2668, 30, 14461, 32, 371, 26, 9389, 32, 22846, 27, 474, 225, 35, 293]}
{"line_number": 1423, "line_type": "generated", "code": "\n        }\n    }\n\n    /**\n     * <p>Inner class to output the twenty four hour field.</p>\n     */\n    private static class TwentyFourHourField implements NumberRule {\n        private final NumberRule mRule;\n\n        /**\n         * Constructs", "entropy": 0.0281524658203125, "is_bug_line": false, "sus_score": 0.5085369944572449, "per_token_entropy": [0.1192626953125, 0.00016427040100097656, 0.04119873046875, 0.0015048980712890625, 0.09771728515625, 0.0140228271484375, 0.0023708343505859375, 0.0002205371856689453, 0.01184844970703125, 0.0005612373352050781, 0.0006494522094726562, 0.00768280029296875, 0.0006499290466308594, 0.0102081298828125, 0.042510986328125, 0.131591796875, 0.541015625, 0.005794525146484375, 0.220703125, 0.0007328987121582031, 0.0057220458984375, 0.011688232421875, 0.00017380714416503906, 0.00017058849334716797, 0.00038695335388183594, 0.00328826904296875, 0.0004553794860839844, 0.0027408599853515625, 0.0005431175231933594, 0.002552032470703125, 0.0017719268798828125, 1.3947486877441406e-05, 0.0198974609375, 0.00014650821685791016, 5.161762237548828e-05, 0.00997161865234375, 0.0015134811401367188, 2.2530555725097656e-05, 0.00223541259765625, 0.0135650634765625, 0.10296630859375, 0.008453369140625, 0.00600433349609375, 6.794929504394531e-05, 0.0010538101196289062, 0.0002224445343017578, 0.0012149810791015625, 0.00994873046875, 0.00447845458984375, 0.0004069805145263672, 3.898143768310547e-05, 0.00135040283203125], "tokens": [291, 320, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 10893, 443, 372, 1688, 322, 8206, 25570, 12074, 12021, 1600, 1730, 98, 48, 275, 569, 284, 945, 907, 443, 12038, 25570, 19630, 14415, 1176, 4575, 5104, 3842, 301, 291, 945, 1158, 5104, 3842, 345, 3842, 45, 584, 1022, 276, 319, 29799]}
{"line_number": 872, "line_type": "original", "code": "            calendar = (Calendar) calendar.clone();", "entropy": 2.34765625, "is_bug_line": true, "sus_score": 0.5053568482398987, "per_token_entropy": [7.66796875, 7.51171875, 4.515625, 2.525390625, 0.188232421875, 0.004268646240234375, 1.0537109375, 0.0138397216796875, 0.0001442432403564453, 0.0023975372314453125], "tokens": [1468, 14461, 280, 308, 9389, 27, 14461, 32, 6358, 473]}
{"line_number": 872, "line_type": "generated", "code": "\n    /**\n     * <p>Gets the time zone used by this formatter.</p>\n     * \n     * @return the time zone, never <code>null</code>\n     */\n    public TimeZone getTimeZone() {\n        return mTimeZone;\n   ", "entropy": 0.09320068359375, "is_bug_line": true, "sus_score": 0.5053568482398987, "per_token_entropy": [0.71630859375, 0.1199951171875, 0.011474609375, 0.00038242340087890625, 0.06005859375, 0.00014638900756835938, 0.0035533905029296875, 0.4208984375, 0.0283966064453125, 0.116455078125, 0.002246856689453125, 0.30126953125, 0.048187255859375, 0.02545166015625, 0.023406982421875, 0.12493896484375, 0.0001996755599975586, 0.0003952980041503906, 0.0025653839111328125, 8.809566497802734e-05, 0.039215087890625, 6.723403930664062e-05, 0.0303802490234375, 0.010467529296875, 0.0145721435546875, 0.01404571533203125, 0.002689361572265625, 0.69140625, 1.0048828125, 0.73681640625, 0.00015175342559814453, 6.496906280517578e-05, 0.00023639202117919922, 0.0005741119384765625, 5.0187110900878906e-05, 0.01959228515625, 0.0095367431640625, 0.10479736328125, 0.00717926025390625, 0.0130462646484375, 0.02020263671875, 2.396106719970703e-05, 0.00023233890533447266, 0.000553131103515625, 0.0024967193603515625, 0.003429412841796875, 0.0196990966796875, 0.03179931640625, 0.031585693359375, 0.0038928985595703125, 0.01284027099609375, 0.013641357421875], "tokens": [284, 1022, 275, 319, 333, 98, 48, 20931, 322, 1133, 10790, 1654, 810, 458, 14971, 1730, 98, 48, 275, 319, 5384, 319, 477, 601, 322, 1133, 10790, 30, 7152, 333, 687, 48, 1693, 377, 687, 48, 275, 569, 284, 562, 3717, 6767, 622, 26223, 346, 301, 291, 442, 345, 26223, 45, 284]}
{"line_number": 1310, "line_type": "original", "code": "                    Validate.isTrue(value > -1, \"Negative values should not be possible\", value);", "entropy": 2.48046875, "is_bug_line": false, "sus_score": 0.49909815192222595, "per_token_entropy": [8.3203125, 13.7421875, 0.322265625, 0.304931640625, 0.0628662109375, 1.2880859375, 3.4609375, 2.81640625, 0.34130859375, 1.7509765625, 0.1866455078125, 2.525390625, 1.76171875, 2.400390625, 2.220703125, 0.85693359375, 4.0859375, 2.90234375, 0.22119140625, 0.0229339599609375], "tokens": [4696, 12888, 32, 25791, 26, 853, 848, 429, 35, 30, 313, 17152, 2078, 1395, 646, 526, 4195, 392, 786, 293]}
{"line_number": 1310, "line_type": "generated", "code": "\n        }\n    }\n\n    /**\n     * <p>Inner class to output an unpadded number.</p>\n     */\n    private static class UnpaddedNumberField implements NumberRule {\n        private final int mField;\n\n        /**\n         * Constructs an instance of <", "entropy": 0.03509521484375, "is_bug_line": false, "sus_score": 0.49909815192222595, "per_token_entropy": [0.1885986328125, 0.0009131431579589844, 0.042633056640625, 0.000690460205078125, 0.339599609375, 0.0843505859375, 0.006130218505859375, 0.0010461807250976562, 0.05169677734375, 0.00165557861328125, 0.00252532958984375, 0.0330810546875, 0.00206756591796875, 0.0186309814453125, 0.164306640625, 0.52490234375, 0.0286102294921875, 0.0034656524658203125, 0.045928955078125, 0.10284423828125, 0.00034737586975097656, 0.0005087852478027344, 0.0019369125366210938, 0.0293426513671875, 0.0029773712158203125, 0.00609588623046875, 0.0018987655639648438, 0.01187896728515625, 0.0015935897827148438, 2.6106834411621094e-05, 0.002040863037109375, 0.0007748603820800781, 0.00901031494140625, 0.0014066696166992188, 0.00011920928955078125, 0.00313568115234375, 0.01058197021484375, 0.005138397216796875, 0.00641632080078125, 0.004192352294921875, 0.0009665489196777344, 0.0035533905029296875, 0.0007495880126953125, 0.042144775390625, 0.004261016845703125, 0.0018224716186523438, 6.556510925292969e-05, 0.00530242919921875, 0.005767822265625, 0.004650115966796875, 0.006473541259765625, 0.006298065185546875], "tokens": [291, 320, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 10893, 443, 372, 1688, 600, 707, 34294, 1451, 1730, 98, 48, 275, 569, 284, 945, 907, 443, 1683, 34294, 1918, 1176, 4575, 5104, 3842, 301, 291, 945, 1158, 629, 345, 1176, 45, 584, 1022, 276, 319, 29799, 600, 1980, 432, 333]}
{"line_number": 1311, "line_type": "original", "code": "                    digits = Integer.toString(value).length();", "entropy": 2.474609375, "is_bug_line": false, "sus_score": 0.49842721223831177, "per_token_entropy": [10.1015625, 11.9375, 0.12042236328125, 4.3203125, 0.0026721954345703125, 0.053619384765625, 0.01203155517578125, 0.043365478515625, 0.5888671875, 0.00408935546875, 0.0318603515625], "tokens": [4696, 16105, 280, 4401, 32, 3108, 26, 853, 547, 1322, 473]}
{"line_number": 1311, "line_type": "generated", "code": "\n    }\n\n    /**\n     * <p>Inner class to output an unpadded number.</p>\n     */\n    private static class UnpaddedNumberField implements NumberRule {\n        private final int mField;\n\n        /**\n         * Constructs an instance of <code>", "entropy": 0.045074462890625, "is_bug_line": false, "sus_score": 0.49842721223831177, "per_token_entropy": [0.1661376953125, 0.005947113037109375, 0.32275390625, 0.038299560546875, 0.006435394287109375, 0.000621795654296875, 0.062164306640625, 0.0018625259399414062, 0.0033245086669921875, 0.0219573974609375, 0.0014495849609375, 0.076171875, 0.3173828125, 0.68017578125, 0.032440185546875, 0.0007386207580566406, 0.10247802734375, 0.2236328125, 0.0005154609680175781, 0.0007996559143066406, 0.006824493408203125, 0.08135986328125, 0.0005636215209960938, 0.00818634033203125, 0.0011005401611328125, 0.015533447265625, 0.00215911865234375, 1.4662742614746094e-05, 0.0013818740844726562, 0.00038123130798339844, 0.01245880126953125, 0.0009331703186035156, 5.340576171875e-05, 0.004955291748046875, 0.01222991943359375, 0.0098114013671875, 0.00698089599609375, 0.005390167236328125, 0.0015611648559570312, 0.003612518310546875, 0.0008873939514160156, 0.0657958984375, 0.004825592041015625, 0.0017070770263671875, 8.64267349243164e-05, 0.00360107421875, 0.0068817138671875, 0.00791168212890625, 0.00649261474609375, 0.00495147705078125, 0.00034546852111816406, 0.00014030933380126953], "tokens": [284, 320, 446, 1022, 275, 319, 333, 98, 48, 10893, 443, 372, 1688, 600, 707, 34294, 1451, 1730, 98, 48, 275, 569, 284, 945, 907, 443, 1683, 34294, 1918, 1176, 4575, 5104, 3842, 301, 291, 945, 1158, 629, 345, 1176, 45, 584, 1022, 276, 319, 29799, 600, 1980, 432, 333, 687, 48]}
{"line_number": 873, "line_type": "original", "code": "            calendar.setTimeZone(mTimeZone);", "entropy": 2.103515625, "is_bug_line": false, "sus_score": 0.4791068136692047, "per_token_entropy": [7.234375, 8.2890625, 0.34814453125, 0.498046875, 1.9951171875, 0.04559326171875, 0.423095703125, 0.06646728515625, 0.03948974609375], "tokens": [1468, 14461, 32, 470, 26223, 26, 95, 26223, 293]}
{"line_number": 873, "line_type": "generated", "code": "\n    /**\n     * <p>Gets the time zone used by this formatter.</p>\n     * \n     * @return the time zone, never null\n     */\n    public TimeZone getTimeZone() {\n        return mTimeZone;\n    }\n\n    /**\n     * <", "entropy": 0.1317138671875, "is_bug_line": false, "sus_score": 0.4791068136692047, "per_token_entropy": [1.2314453125, 0.65185546875, 0.06591796875, 0.00010991096496582031, 0.043060302734375, 7.426738739013672e-05, 0.001720428466796875, 0.326416015625, 0.049041748046875, 0.10546875, 0.00188446044921875, 0.2822265625, 0.053131103515625, 0.028350830078125, 0.027008056640625, 0.146240234375, 0.00022172927856445312, 0.0003402233123779297, 0.00653839111328125, 0.00017571449279785156, 0.047119140625, 5.996227264404297e-05, 0.0325927734375, 0.0113677978515625, 0.01308441162109375, 0.011962890625, 0.003265380859375, 0.64892578125, 1.24609375, 0.671875, 0.033599853515625, 0.109619140625, 0.016876220703125, 0.0153961181640625, 0.0116424560546875, 1.2874603271484375e-05, 0.0002646446228027344, 0.0005059242248535156, 0.0012216567993164062, 0.002429962158203125, 0.0219268798828125, 0.036590576171875, 0.027923583984375, 0.00627899169921875, 0.01224517822265625, 0.0204315185546875, 0.0004322528839111328, 0.4345703125, 0.1536865234375, 0.2130126953125, 5.626678466796875e-05, 0.024200439453125], "tokens": [284, 1022, 275, 319, 333, 98, 48, 20931, 322, 1133, 10790, 1654, 810, 458, 14971, 1730, 98, 48, 275, 319, 5384, 319, 477, 601, 322, 1133, 10790, 30, 7152, 744, 275, 569, 284, 562, 3717, 6767, 622, 26223, 346, 301, 291, 442, 345, 26223, 45, 284, 320, 446, 1022, 275, 319, 333]}
{"line_number": 738, "line_type": "original", "code": "                    if (i + 1 < length && pattern.charAt(i + 1) == '\\'') {", "entropy": 1.259765625, "is_bug_line": false, "sus_score": 0.4756409227848053, "per_token_entropy": [9.6953125, 1.6435546875, 0.059112548828125, 8.21875, 5.1484375, 0.1617431640625, 0.1744384765625, 0.43896484375, 1.44140625, 0.7822265625, 0.350830078125, 0.0350341796875, 0.0025043487548828125, 0.0005059242248535156, 0.0042724609375, 0.0238800048828125, 0.0021381378173828125, 0.00033736228942871094, 0.0007872581481933594, 0.021453857421875, 0.65087890625, 0.0020542144775390625, 0.11981201171875], "tokens": [4696, 415, 308, 91, 474, 225, 35, 333, 3104, 962, 5257, 32, 15611, 26, 91, 474, 225, 35, 27, 610, 26271, 683, 301]}
{"line_number": 738, "line_type": "generated", "code": "\n    public StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition pos) {\n        if (obj instanceof Date) {\n            Date date = (Date) obj;\n            return format(date, toAppendTo);\n        } else if (obj instanceof", "entropy": 0.154541015625, "is_bug_line": false, "sus_score": 0.4756409227848053, "per_token_entropy": [0.5166015625, 1.4609375, 0.0634765625, 0.00534820556640625, 0.0105438232421875, 0.07733154296875, 0.00010609626770019531, 0.0005621910095214844, 0.042388916015625, 0.00043010711669921875, 1.0371208190917969e-05, 2.0265579223632812e-05, 0.0023345947265625, 0.09716796875, 0.00043463706970214844, 0.0128173828125, 0.002964019775390625, 0.010772705078125, 0.1446533203125, 0.343994140625, 0.062042236328125, 0.007740020751953125, 0.52880859375, 0.10906982421875, 0.189697265625, 0.0026645660400390625, 0.053802490234375, 1.388671875, 0.083251953125, 0.005126953125, 0.0029296875, 0.00029349327087402344, 3.1948089599609375e-05, 0.018035888671875, 0.0007939338684082031, 0.1590576171875, 1.33984375, 0.478271484375, 0.03436279296875, 0.00617218017578125, 0.48779296875, 0.0228118896484375, 9.417533874511719e-06, 1.430511474609375e-06, 0.1356201171875, 0.0274810791015625, 0.0013866424560546875, 0.09100341796875, 0.006710052490234375, 0.0015048980712890625, 0.00030541419982910156, 0.0015535354614257812], "tokens": [284, 562, 21933, 2179, 26, 959, 2830, 30, 21933, 372, 6551, 705, 30, 5692, 2731, 3400, 27, 301, 291, 415, 308, 2067, 5113, 2821, 27, 301, 324, 2821, 2340, 280, 308, 1547, 27, 2830, 45, 324, 442, 2179, 26, 770, 30, 372, 6551, 705, 293, 291, 320, 813, 415, 308, 2067, 5113]}
{"line_number": 642, "line_type": "original", "code": "                rule = selectNumberRule(Calendar.MILLISECOND, tokenLen);", "entropy": 0.98779296875, "is_bug_line": false, "sus_score": 0.47279155254364014, "per_token_entropy": [5.56640625, 5.35546875, 0.2220458984375, 2.4296875, 0.2117919921875, 0.0079193115234375, 0.00510406494140625, 0.052886962890625, 0.064208984375, 0.814453125, 2.9206275939941406e-05, 0.0022430419921875, 0.047454833984375, 0.0096893310546875, 0.031982421875], "tokens": [2071, 5750, 280, 2192, 1918, 3842, 26, 9389, 32, 32206, 23790, 30, 2404, 5745, 293]}
{"line_number": 642, "line_type": "generated", "code": "\n            }\n\n            rules.add(rule);\n        }\n\n        return rules.toArray(new Rule[rules.size()]);\n    }\n\n    private static Rule selectNumberRule(int field, int tokenLen) {\n        if (tokenLen == 1) {", "entropy": 0.20849609375, "is_bug_line": false, "sus_score": 0.47279155254364014, "per_token_entropy": [0.25244140625, 0.0036182403564453125, 0.31201171875, 1.1875, 0.09014892578125, 0.1622314453125, 0.04931640625, 0.03021240234375, 0.0024852752685546875, 0.5078125, 0.00788116455078125, 0.462646484375, 1.0185546875, 1.2080078125, 0.407958984375, 0.009918212890625, 0.005771636962890625, 0.1123046875, 0.037200927734375, 0.01251220703125, 0.0259857177734375, 0.00018966197967529297, 4.887580871582031e-06, 0.00234222412109375, 0.318115234375, 0.006053924560546875, 0.66357421875, 0.75, 1.052734375, 0.51708984375, 0.01137542724609375, 0.0005316734313964844, 2.9802322387695312e-06, 0.0009164810180664062, 0.07965087890625, 0.01096343994140625, 0.0008325576782226562, 0.007110595703125, 0.2958984375, 0.0107879638671875, 0.0011234283447265625, 0.007091522216796875, 0.1422119140625, 0.3720703125, 0.00157928466796875, 0.003662109375, 2.2649765014648438e-06, 0.35400390625, 8.511543273925781e-05, 0.26025390625, 0.06475830078125, 0.000751495361328125], "tokens": [324, 320, 1064, 7019, 32, 669, 26, 5275, 293, 291, 320, 584, 442, 7019, 32, 14320, 26, 890, 13708, 77, 7004, 32, 891, 36642, 284, 320, 446, 945, 907, 13708, 2192, 1918, 3842, 26, 410, 1600, 30, 629, 2404, 5745, 27, 301, 291, 415, 308, 1956, 5745, 610, 225, 35, 27, 301]}
{"line_number": 1355, "line_type": "original", "code": "                buffer.append((char)(value / 10 + '0'));", "entropy": 0.68896484375, "is_bug_line": false, "sus_score": 0.4712046682834625, "per_token_entropy": [7.93359375, 1.4501953125, 0.0011768341064453125, 0.006275177001953125, 0.43896484375, 0.00823974609375, 0.175537109375, 0.1636962890625, 0.82421875, 0.0016679763793945312, 0.0008220672607421875, 0.0009417533874511719, 0.00608062744140625, 0.004058837890625, 0.0016384124755859375, 0.0054473876953125], "tokens": [2071, 3112, 32, 1689, 1162, 1594, 2502, 853, 517, 225, 35, 34, 474, 330, 34, 4646]}
{"line_number": 1355, "line_type": "generated", "code": "\n        /**\n         * Constructs an instance of <code>TwoDigitMonthField</code>.\n         */\n        TwoDigitMonthField() {\n            super();\n        }\n\n        /**\n         * {@inheritDoc}\n         */\n        public int estimateLength() {\n            return 2", "entropy": 0.0234222412109375, "is_bug_line": false, "sus_score": 0.4712046682834625, "per_token_entropy": [0.40966796875, 0.10089111328125, 0.006984710693359375, 0.00024259090423583984, 0.5029296875, 0.0021419525146484375, 0.00154876708984375, 0.0018854141235351562, 0.005443572998046875, 0.00018167495727539062, 0.0002065896987915039, 0.0015048980712890625, 0.00019371509552001953, 0.0311279296875, 0.001651763916015625, 0.0017690658569335938, 5.7220458984375e-06, 0.007450103759765625, 0.006061553955078125, 0.0041046142578125, 0.004932403564453125, 0.0065155029296875, 1.5497207641601562e-06, 0.00013887882232666016, 3.2186508178710938e-06, 0.0015039443969726562, 0.0015439987182617188, 0.0245819091796875, 0.0005259513854980469, 0.00017523765563964844, 0.003467559814453125, 7.224082946777344e-05, 0.0228271484375, 0.0027561187744140625, 0.0012149810791015625, 0.0002377033233642578, 0.0064697265625, 3.039836883544922e-05, 3.552436828613281e-05, 0.00045371055603027344, 0.0008873939514160156, 0.0012216567993164062, 0.0007715225219726562, 0.0222015380859375, 0.00030994415283203125, 4.6133995056152344e-05, 0.00040912628173828125, 6.949901580810547e-05, 0.005161285400390625, 0.001979827880859375, 0.00722503662109375, 0.014129638671875], "tokens": [291, 1022, 276, 319, 29799, 600, 1980, 432, 333, 687, 48, 8617, 21530, 7357, 1176, 377, 687, 4503, 276, 569, 291, 16510, 21530, 7357, 1176, 346, 301, 324, 2599, 473, 291, 320, 584, 1022, 276, 319, 3088, 18446, 111, 276, 569, 291, 562, 629, 20772, 2380, 346, 301, 324, 442, 225, 36]}
{"line_number": 1356, "line_type": "original", "code": "                buffer.append((char)(value % 10 + '0'));", "entropy": 1.0185546875, "is_bug_line": false, "sus_score": 0.46949294209480286, "per_token_entropy": [6.82421875, 6.3515625, 0.0016984939575195312, 0.007160186767578125, 0.4228515625, 0.01031494140625, 0.291259765625, 0.10516357421875, 2.216796875, 0.0057220458984375, 0.005809783935546875, 0.00984954833984375, 0.02166748046875, 0.00839996337890625, 0.0024662017822265625, 0.01922607421875], "tokens": [2071, 3112, 32, 1689, 1162, 1594, 2502, 853, 904, 225, 35, 34, 474, 330, 34, 4646]}
{"line_number": 1356, "line_type": "generated", "code": "\n            /**\n             * Constructs an instance of <code>TwoDigitMonthField</code>.\n             */\n            TwoDigitMonthField() {\n                super();\n            }\n\n            /**\n             * {@inheritDoc}\n             */\n            public int estimateLength() {\n                return 2", "entropy": 0.07586669921875, "is_bug_line": false, "sus_score": 0.46949294209480286, "per_token_entropy": [1.7763671875, 1.046875, 0.1339111328125, 0.0003902912139892578, 0.38037109375, 0.0028076171875, 0.0015306472778320312, 0.0018091201782226562, 0.009521484375, 0.0006284713745117188, 0.0003235340118408203, 0.0028057098388671875, 0.0001825094223022461, 0.0389404296875, 0.0025501251220703125, 0.0015544891357421875, 1.1920928955078125e-05, 0.00923919677734375, 0.03814697265625, 0.0103607177734375, 0.1507568359375, 0.020751953125, 2.1457672119140625e-05, 0.0017070770263671875, 4.1484832763671875e-05, 0.005695343017578125, 0.0031871795654296875, 0.053741455078125, 0.0014104843139648438, 0.0008802413940429688, 0.01534271240234375, 0.00021183490753173828, 0.08258056640625, 0.00981903076171875, 0.0292205810546875, 0.00015151500701904297, 0.011993408203125, 8.225440979003906e-05, 0.00015461444854736328, 0.02191162109375, 0.0021190643310546875, 0.01812744140625, 0.0029506683349609375, 0.023223876953125, 0.0005245208740234375, 6.711483001708984e-05, 0.0006117820739746094, 0.00026679039001464844, 0.0185089111328125, 0.0017242431640625, 0.002872467041015625, 0.00617218017578125], "tokens": [324, 1022, 1802, 319, 29799, 600, 1980, 432, 333, 687, 48, 8617, 21530, 7357, 1176, 377, 687, 4503, 1802, 569, 324, 16510, 21530, 7357, 1176, 346, 301, 400, 2599, 473, 324, 320, 1064, 1022, 1802, 319, 3088, 18446, 111, 1802, 569, 324, 562, 629, 20772, 2380, 346, 301, 400, 442, 225, 36]}
{"line_number": 1098, "line_type": "original", "code": "            buffer.append(mValue);", "entropy": 1.9501953125, "is_bug_line": false, "sus_score": 0.46738189458847046, "per_token_entropy": [4.65234375, 7.88671875, 0.04327392578125, 0.07672119140625, 0.155029296875, 1.26953125, 1.42578125, 0.0916748046875], "tokens": [1468, 3112, 32, 1689, 26, 95, 882, 293]}
{"line_number": 1098, "line_type": "generated", "code": "\n        }\n\n        /**\n         * {@inheritDoc}\n         */\n        public int estimateLength() {\n            int max = 0;\n            for (int i = 0; i < mValues.length; i++) {\n                max = Math.max(max", "entropy": 0.11102294921875, "is_bug_line": false, "sus_score": 0.46738189458847046, "per_token_entropy": [0.509765625, 0.0012311935424804688, 0.05096435546875, 0.00928497314453125, 0.0019855499267578125, 0.0007877349853515625, 0.08453369140625, 0.0002758502960205078, 0.0001760721206665039, 0.00205230712890625, 0.00234222412109375, 0.0022563934326171875, 0.0013828277587890625, 0.00940704345703125, 0.0007715225219726562, 8.106231689453125e-05, 0.006061553955078125, 0.0014314651489257812, 0.3701171875, 1.2490234375, 1.205078125, 0.092041015625, 0.0965576171875, 0.058685302734375, 0.016357421875, 0.2451171875, 0.11944580078125, 0.11651611328125, 0.11767578125, 0.03387451171875, 0.239990234375, 0.06671142578125, 0.0037326812744140625, 0.0426025390625, 0.002880096435546875, 0.031036376953125, 0.01300048828125, 0.0037403106689453125, 0.0007185935974121094, 0.002017974853515625, 0.00620269775390625, 0.2108154296875, 0.007472991943359375, 0.003482818603515625, 0.0545654296875, 0.50390625, 0.00937652587890625, 0.0230865478515625, 0.0006527900695800781, 0.0002460479736328125, 0.0004630088806152344, 0.1429443359375], "tokens": [291, 320, 584, 1022, 276, 319, 3088, 18446, 111, 276, 569, 291, 562, 629, 20772, 2380, 346, 301, 324, 629, 1769, 280, 225, 34, 45, 324, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 345, 3354, 32, 1322, 45, 595, 1987, 301, 400, 1769, 280, 4175, 32, 1449, 26, 1449]}
{"line_number": 1316, "line_type": "original", "code": "                buffer.append(Integer.toString(value));", "entropy": 1.65234375, "is_bug_line": false, "sus_score": 0.46738189458847046, "per_token_entropy": [9.828125, 5.02734375, 0.0021038055419921875, 0.0136260986328125, 1.4697265625, 0.63134765625, 0.0007352828979492188, 0.001926422119140625, 0.0287017822265625, 0.6103515625, 0.5537109375], "tokens": [2071, 3112, 32, 1689, 26, 3061, 32, 3108, 26, 853, 876]}
{"line_number": 1316, "line_type": "generated", "code": "\n\n    /**\n     * <p>Inner class to output a two digit month.</p>\n     */", "entropy": 0.25732421875, "is_bug_line": false, "sus_score": 0.46738189458847046, "per_token_entropy": [1.248046875, 0.149658203125, 0.0088043212890625, 0.0015554428100585938, 0.0455322265625, 0.0008454322814941406, 0.003017425537109375, 0.0255126953125, 0.0029087066650390625, 0.031646728515625, 0.1678466796875, 0.5869140625, 1.4501953125, 0.017303466796875, 1.0771484375, 0.293701171875, 0.00042319297790527344, 0.0002301931381225586, 0.02154541015625, 0.01377105712890625], "tokens": [446, 1022, 275, 319, 333, 98, 48, 10893, 443, 372, 1688, 312, 3134, 16994, 6811, 1730, 98, 48, 275, 569]}
{"line_number": 1292, "line_type": "original", "code": "            appendTo(buffer, calendar.get(mField));", "entropy": 1.16015625, "is_bug_line": false, "sus_score": 0.46738189458847046, "per_token_entropy": [6.37890625, 3.599609375, 0.322265625, 0.0183868408203125, 0.0736083984375, 0.0158843994140625, 0.341796875, 0.7783203125, 0.0070953369140625, 0.056304931640625, 3.298828125, 0.0010013580322265625, 0.1943359375], "tokens": [1468, 5489, 705, 26, 2668, 30, 14461, 32, 371, 26, 95, 1176, 876]}
{"line_number": 1292, "line_type": "generated", "code": "\n\n        /**\n         * {@inheritDoc}\n         */\n        public void appendTo(StringBuffer buffer, Calendar calendar) {\n            appendTo(buffer, calendar.get(mField));\n        }\n\n        /**\n         * {@inheritDoc}\n         */\n        public final void appendTo", "entropy": 0.082275390625, "is_bug_line": false, "sus_score": 0.46738189458847046, "per_token_entropy": [1.0546875, 0.051422119140625, 0.0035228729248046875, 0.00044798851013183594, 0.023345947265625, 8.022785186767578e-05, 0.00016248226165771484, 0.00044226646423339844, 0.007266998291015625, 0.0038909912109375, 0.002498626708984375, 0.2408447265625, 0.00075531005859375, 0.00010633468627929688, 6.568431854248047e-05, 0.0006976127624511719, 0.0003857612609863281, 0.00010478496551513672, 0.01393890380859375, 0.00160980224609375, 0.001800537109375, 0.0015888214111328125, 0.75048828125, 1.2861328125, 0.007843017578125, 0.00024700164794921875, 0.0012378692626953125, 0.00016379356384277344, 0.011138916015625, 0.0018548965454101562, 0.0008144378662109375, 0.005329132080078125, 0.1171875, 9.107589721679688e-05, 0.034820556640625, 0.0085601806640625, 7.76052474975586e-05, 0.2437744140625, 0.0196990966796875, 0.0009202957153320312, 0.00012969970703125, 0.01300048828125, 0.0005288124084472656, 0.00016069412231445312, 0.0006551742553710938, 0.0054931640625, 0.004909515380859375, 0.0014448165893554688, 0.35205078125, 0.00047969818115234375, 6.866455078125e-05, 1.1920928955078125e-05], "tokens": [584, 1022, 276, 319, 3088, 18446, 111, 276, 569, 291, 562, 763, 5489, 705, 26, 35322, 3112, 30, 16600, 14461, 27, 301, 324, 5489, 705, 26, 2668, 30, 14461, 32, 371, 26, 95, 1176, 876, 291, 320, 584, 1022, 276, 319, 3088, 18446, 111, 276, 569, 291, 562, 1158, 763, 5489, 705]}
{"line_number": 1347, "line_type": "original", "code": "            appendTo(buffer, calendar.get(mField));", "entropy": 1.71875, "is_bug_line": false, "sus_score": 0.46738189458847046, "per_token_entropy": [7.265625, 4.48046875, 0.05072021484375, 0.0263519287109375, 0.0660400390625, 0.00787353515625, 0.87841796875, 0.1668701171875, 0.02520751953125, 0.035919189453125, 9.1171875, 0.0275726318359375, 0.193115234375], "tokens": [1468, 5489, 705, 26, 2668, 30, 14461, 32, 371, 26, 95, 1176, 876]}
{"line_number": 1347, "line_type": "generated", "code": "\n    }\n\n    /**\n     * <p>Inner class to output a week in a year.</p>\n     */\n    private static class WeekInYearField implements NumberRule {\n        static final WeekInYearField INSTANCE = new WeekInYearField();\n\n        /**", "entropy": 0.1336669921875, "is_bug_line": false, "sus_score": 0.46738189458847046, "per_token_entropy": [0.1798095703125, 0.0028095245361328125, 0.35546875, 0.052886962890625, 0.007038116455078125, 0.0002434253692626953, 0.04840087890625, 0.0007305145263671875, 0.0019388198852539062, 0.02386474609375, 0.001674652099609375, 0.1439208984375, 0.467529296875, 0.59912109375, 1.2646484375, 0.272705078125, 0.57177734375, 0.40185546875, 0.167724609375, 5.543231964111328e-05, 0.0008835792541503906, 0.003528594970703125, 0.054107666015625, 0.0005421638488769531, 0.0161895751953125, 0.002658843994140625, 0.0084075927734375, 0.003635406494140625, 0.833984375, 0.04693603515625, 0.07421875, 0.0184783935546875, 0.006988525390625, 0.00047779083251953125, 0.0313720703125, 0.06121826171875, 0.95263671875, 0.0017538070678710938, 0.0657958984375, 0.00022351741790771484, 0.0003895759582519531, 0.0007276535034179688, 0.09161376953125, 0.05682373046875, 0.00018215179443359375, 2.396106719970703e-05, 2.2649765014648438e-06, 4.76837158203125e-07, 1.0728836059570312e-06, 0.0019159317016601562, 0.035064697265625, 0.016448974609375], "tokens": [284, 320, 446, 1022, 275, 319, 333, 98, 48, 10893, 443, 372, 1688, 312, 8209, 328, 312, 4947, 1730, 98, 48, 275, 569, 284, 945, 907, 443, 25934, 383, 6617, 1176, 4575, 5104, 3842, 301, 291, 907, 1158, 25934, 383, 6617, 1176, 40000, 280, 537, 25934, 383, 6617, 1176, 473, 584, 1022]}
{"line_number": 639, "line_type": "original", "code": "                rule = selectNumberRule(Calendar.SECOND, tokenLen);", "entropy": 1.171875, "is_bug_line": false, "sus_score": 0.46185219287872314, "per_token_entropy": [4.44140625, 6.30078125, 0.384765625, 2.19140625, 1.5390625, 0.0237884521484375, 0.0107574462890625, 0.047271728515625, 0.11224365234375, 1.2607421875, 0.0028934478759765625, 0.03802490234375, 0.006938934326171875, 0.05194091796875], "tokens": [2071, 5750, 280, 2192, 1918, 3842, 26, 9389, 32, 23790, 30, 2404, 5745, 293]}
{"line_number": 639, "line_type": "generated", "code": "\n                break;\n            default:\n                throw new IllegalArgumentException(\"Illegal pattern component: \" + token);\n            }\n\n            rules.add(rule);\n        }\n\n        return rules.toArray(new Rule[rules.size()]);\n    }", "entropy": 0.1473388671875, "is_bug_line": false, "sus_score": 0.46185219287872314, "per_token_entropy": [0.162109375, 0.0135345458984375, 0.00106048583984375, 0.037017822265625, 0.76123046875, 0.0016546249389648438, 0.24267578125, 0.1922607421875, 0.0227813720703125, 0.1407470703125, 0.055999755859375, 0.047210693359375, 0.003215789794921875, 0.0019741058349609375, 0.0013980865478515625, 0.0200653076171875, 0.0090484619140625, 0.369873046875, 0.01448822021484375, 0.0416259765625, 0.0023899078369140625, 0.2464599609375, 0.8037109375, 0.08843994140625, 0.1510009765625, 0.0826416015625, 0.02886962890625, 0.002506256103515625, 0.17724609375, 0.002063751220703125, 0.3603515625, 0.75732421875, 1.087890625, 0.401123046875, 0.00911712646484375, 0.005016326904296875, 0.10040283203125, 0.034149169921875, 0.0100860595703125, 0.040771484375, 0.00013184547424316406, 3.337860107421875e-06, 0.0014905929565429688, 0.09307861328125, 0.00421905517578125], "tokens": [400, 1626, 45, 324, 1244, 44, 400, 1422, 537, 12137, 440, 15095, 5257, 2577, 44, 313, 474, 2404, 293, 324, 320, 1064, 7019, 32, 669, 26, 5275, 293, 291, 320, 584, 442, 7019, 32, 14320, 26, 890, 13708, 77, 7004, 32, 891, 36642, 284, 320]}
