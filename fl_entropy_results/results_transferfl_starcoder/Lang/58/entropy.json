{"line_number": 1508, "line_type": "original", "code": "            return false;", "entropy": 2.08984375, "is_bug_line": false, "sus_score": 0.8409620523452759, "per_token_entropy": [3.291015625, 4.859375, 0.2081298828125, 0.0021877288818359375], "tokens": [1468, 442, 901, 45]}
{"line_number": 1508, "line_type": "generated", "code": "\n            }\n        }\n        sz--; // don't want to loop to the last char, check it afterwords\n        // for type qualifiers\n        int i = start;\n        // loop to the next to last char or to the last char if we need another", "entropy": 0.03887939453125, "is_bug_line": false, "sus_score": 0.8409620523452759, "per_token_entropy": [0.2115478515625, 0.036407470703125, 0.1461181640625, 0.01131439208984375, 0.03857421875, 0.035430908203125, 0.0010099411010742188, 0.0063323974609375, 0.0313720703125, 9.417533874511719e-06, 0.0105438232421875, 0.0002675056457519531, 0.0286407470703125, 0.00016176700592041016, 0.00841522216796875, 0.0206146240234375, 0.0050048828125, 9.441375732421875e-05, 0.0014820098876953125, 3.838539123535156e-05, 0.0001348257064819336, 0.004848480224609375, 0.78369140625, 0.07275390625, 0.288818359375, 0.00038886070251464844, 0.00931549072265625, 0.0009899139404296875, 0.0009565353393554688, 0.0126190185546875, 0.0003752708435058594, 0.0007219314575195312, 0.00012028217315673828, 0.0006704330444335938, 0.024169921875, 0.064697265625, 0.111328125, 0.0004563331604003906, 0.00045180320739746094, 0.00048470497131347656, 0.001605987548828125, 0.00023889541625976562, 0.0240478515625, 0.0015668869018554688, 0.0002498626708984375, 5.8650970458984375e-05, 0.005794525146484375, 0.004489898681640625, 2.086162567138672e-05, 0.00905609130859375, 0.0006852149963378906, 0.0018377304077148438], "tokens": [324, 320, 291, 320, 291, 8549, 10612, 434, 2800, 1330, 2637, 372, 5258, 372, 322, 2401, 1351, 30, 1505, 561, 2685, 4068, 291, 434, 436, 827, 7193, 6667, 291, 629, 595, 280, 1477, 45, 291, 434, 5258, 372, 322, 2354, 372, 2401, 1351, 556, 372, 322, 2401, 1351, 415, 996, 1849, 4674]}
{"line_number": 452, "line_type": "original", "code": "                    if (dec == null", "entropy": 2.123046875, "is_bug_line": true, "sus_score": 0.7965316772460938, "per_token_entropy": [7.78125, 0.73486328125, 0.05572509765625, 4.140625, 0.017547607421875, 0.0004715919494628906], "tokens": [4696, 415, 308, 6114, 610, 744]}
{"line_number": 452, "line_type": "generated", "code": "\n            if (expPos > -1) {\n                exp = str.substring(expPos + 1, str.length());\n            } else {\n                exp = null;\n            }\n            if (exp!= null && exp.startsWith(\"+\") || exp", "entropy": 0.149658203125, "is_bug_line": true, "sus_score": 0.7965316772460938, "per_token_entropy": [0.96875, 0.72705078125, 0.0294647216796875, 0.06695556640625, 0.00785064697265625, 0.0035152435302734375, 0.0003268718719482422, 0.0002371072769165039, 0.9267578125, 0.0037441253662109375, 0.09417724609375, 0.3095703125, 0.00013113021850585938, 0.021270751953125, 9.489059448242188e-05, 1.5497207641601562e-06, 2.5987625122070312e-05, 2.5391578674316406e-05, 3.24249267578125e-05, 0.0011186599731445312, 3.0517578125e-05, 2.491474151611328e-05, 0.6416015625, 0.00371551513671875, 0.00025010108947753906, 0.0002982616424560547, 0.004878997802734375, 0.1383056640625, 0.00014710426330566406, 0.2724609375, 0.002887725830078125, 0.003326416015625, 0.000942230224609375, 0.00013768672943115234, 0.00015246868133544922, 4.4345855712890625e-05, 0.0017099380493164062, 0.0007224082946777344, 0.3857421875, 0.5888671875, 0.0285186767578125, 0.58935546875, 0.00988006591796875, 0.0010480880737304688, 0.1138916015625, 0.342041015625, 0.0003459453582763672, 0.72998046875, 0.04730224609375, 0.4921875, 0.2171630859375, 0.00661468505859375], "tokens": [324, 415, 308, 2832, 2996, 848, 429, 35, 27, 301, 400, 2910, 280, 596, 32, 8723, 26, 2832, 2996, 474, 225, 35, 30, 596, 32, 1322, 1035, 324, 320, 813, 301, 400, 2910, 280, 744, 45, 324, 320, 324, 415, 308, 2832, 863, 744, 962, 2910, 32, 13912, 30022, 657, 1276, 2910]}
{"line_number": 464, "line_type": "original", "code": "                    throw new NumberFormatException(str + \" is not a valid number.\");", "entropy": 0.8857421875, "is_bug_line": false, "sus_score": 0.7784887552261353, "per_token_entropy": [5.09375, 7.94140625, 0.0204315185546875, 0.033660888671875, 0.0006966590881347656, 0.0257568359375, 0.01861572265625, 0.06475830078125, 0.06982421875, 0.0006017684936523438, 0.0025424957275390625, 0.0002562999725341797, 0.00022089481353759766, 0.00756072998046875, 0.00783538818359375], "tokens": [4696, 1422, 537, 5104, 25944, 26, 466, 474, 313, 438, 646, 312, 2080, 1451, 5368]}
{"line_number": 464, "line_type": "generated", "code": "\n                try {\n                    return createLong(str);\n                } catch (NumberFormatException nfe) {\n                    // ignore the bad number\n                }\n                return createBigInteger(str);\n            } else if (exp == null) {\n                //Must be a float,", "entropy": 0.076171875, "is_bug_line": false, "sus_score": 0.7784887552261353, "per_token_entropy": [0.35791015625, 0.09722900390625, 0.001338958740234375, 0.007617950439453125, 0.055389404296875, 0.0018253326416015625, 0.016693115234375, 0.00022077560424804688, 0.0014743804931640625, 0.00040411949157714844, 0.0081939697265625, 0.0002529621124267578, 0.004497528076171875, 0.0004723072052001953, 0.0016155242919921875, 1.6689300537109375e-05, 0.00518035888671875, 0.0005049705505371094, 0.0015401840209960938, 0.0005230903625488281, 0.0107421875, 0.023040771484375, 0.133544921875, 0.0006194114685058594, 6.103515625e-05, 0.00122833251953125, 0.01531982421875, 0.0003380775451660156, 0.162109375, 0.34912109375, 0.0002913475036621094, 0.0001531839370727539, 0.00010347366333007812, 0.0010929107666015625, 0.0011453628540039062, 0.57470703125, 0.0041046142578125, 0.322509765625, 0.255859375, 0.0109100341796875, 0.262451171875, 0.3857421875, 0.00016689300537109375, 0.11285400390625, 0.0020275115966796875, 0.11444091796875, 0.1822509765625, 0.2724609375, 7.343292236328125e-05, 0.0004642009735107422, 0.060699462890625, 0.1380615234375], "tokens": [400, 1596, 301, 528, 442, 1487, 3952, 26, 466, 293, 400, 320, 2368, 308, 1918, 25944, 310, 1225, 27, 301, 528, 434, 5079, 322, 6658, 1451, 400, 320, 400, 442, 1487, 21541, 26, 466, 293, 324, 320, 813, 415, 308, 2832, 610, 744, 27, 301, 400, 434, 11387, 526, 312, 1897, 30]}
{"line_number": 404, "line_type": "original", "code": "        if (str.startsWith(\"--\")) {", "entropy": 1.939453125, "is_bug_line": false, "sus_score": 0.7751668691635132, "per_token_entropy": [5.4375, 3.21484375, 0.1485595703125, 5.10546875, 0.003032684326171875, 0.60546875, 1.3876953125, 1.3857421875, 0.1583251953125], "tokens": [351, 415, 308, 466, 32, 13912, 13692, 2131, 301]}
{"line_number": 404, "line_type": "generated", "code": "\n                        && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1))\n                            || isDigits(numeric))) {\n                        try {\n                            return createLong(numeric);\n                        } catch (NumberFormatException nfe) {\n                            // Too", "entropy": 0.14990234375, "is_bug_line": false, "sus_score": 0.7751668691635132, "per_token_entropy": [0.364501953125, 0.088134765625, 0.62646484375, 1.09375, 0.00013577938079833984, 0.417724609375, 1.5616416931152344e-05, 0.072509765625, 0.00010883808135986328, 0.0010118484497070312, 0.023406982421875, 0.8017578125, 0.1104736328125, 0.176513671875, 9.298324584960938e-05, 0.0031032562255859375, 0.00032973289489746094, 0.00079345703125, 9.202957153320312e-05, 0.0003261566162109375, 0.2174072265625, 0.8134765625, 0.0004215240478515625, 0.005336761474609375, 0.00455474853515625, 3.3974647521972656e-05, 0.0003139972686767578, 0.160888671875, 0.06695556640625, 0.39599609375, 0.1761474609375, 0.0158233642578125, 0.1422119140625, 0.414794921875, 0.1180419921875, 0.266357421875, 0.0006451606750488281, 0.00774383544921875, 0.007480621337890625, 0.01306915283203125, 0.00017535686492919922, 0.1732177734375, 0.0029735565185546875, 0.054168701171875, 0.0002465248107910156, 0.0030345916748046875, 7.462501525878906e-05, 0.002864837646484375, 0.1778564453125, 0.2369384765625, 0.140869140625, 0.390625], "tokens": [715, 962, 308, 10125, 32, 15611, 26, 34, 27, 610, 20514, 962, 438, 22326, 26, 10125, 32, 8723, 26, 35, 490, 1014, 1276, 438, 22326, 26, 10125, 2610, 301, 715, 1596, 301, 1014, 442, 1487, 3952, 26, 10125, 293, 715, 320, 2368, 308, 1918, 25944, 310, 1225, 27, 301, 1014, 434, 37327]}
{"line_number": 398, "line_type": "original", "code": "        if (str == null) {", "entropy": 2.685546875, "is_bug_line": false, "sus_score": 0.7452023029327393, "per_token_entropy": [4.171875, 3.97265625, 0.1787109375, 5.78125, 7.23828125, 0.0224456787109375, 0.0218048095703125, 0.098876953125], "tokens": [351, 415, 308, 466, 610, 744, 27, 301]}
{"line_number": 398, "line_type": "generated", "code": "\n            return null;\n        }\n        if (expPos > -1) {\n            exp = str.substring(expPos + 1, str.length());\n        } else {\n            exp = null;\n        }\n        //User doesn't have a preference", "entropy": 0.1365966796875, "is_bug_line": false, "sus_score": 0.7452023029327393, "per_token_entropy": [1.1240234375, 0.79150390625, 0.032867431640625, 0.0018186569213867188, 0.1048583984375, 0.0026187896728515625, 0.84228515625, 1.3505859375, 0.01134490966796875, 0.0014896392822265625, 0.00579833984375, 0.0008263587951660156, 3.0159950256347656e-05, 1.621246337890625e-05, 0.004924774169921875, 0.00032711029052734375, 0.045623779296875, 0.0391845703125, 1.1801719665527344e-05, 0.0008759498596191406, 1.0728836059570312e-06, 1.3947486877441406e-05, 2.0265579223632812e-06, 3.2186508178710938e-06, 1.1920928955078125e-07, 0.00017213821411132812, 3.337860107421875e-06, 3.933906555175781e-06, 0.367431640625, 0.0002772808074951172, 7.092952728271484e-05, 0.00018835067749023438, 0.00017261505126953125, 0.0285491943359375, 6.878376007080078e-05, 0.04638671875, 0.00035119056701660156, 0.007305145263671875, 6.842613220214844e-05, 1.4185905456542969e-05, 9.298324584960938e-06, 1.1205673217773438e-05, 0.0012617111206054688, 0.0009212493896484375, 0.480712890625, 0.65087890625, 0.395263671875, 0.364501953125, 1.9550323486328125e-05, 0.0018873214721679688, 0.373779296875, 0.020904541015625], "tokens": [324, 442, 744, 45, 291, 320, 291, 415, 308, 2832, 2996, 848, 429, 35, 27, 301, 324, 2910, 280, 596, 32, 8723, 26, 2832, 2996, 474, 225, 35, 30, 596, 32, 1322, 1035, 291, 320, 813, 301, 324, 2910, 280, 744, 45, 291, 320, 291, 434, 1240, 4163, 1330, 1159, 312, 23398]}
{"line_number": 1507, "line_type": "original", "code": "        if (StringUtils.isEmpty(str)) {", "entropy": 1.822265625, "is_bug_line": false, "sus_score": 0.7322022318840027, "per_token_entropy": [4.48046875, 3.7109375, 0.0789794921875, 8.390625, 0.008697509765625, 1.3076171875, 0.044525146484375, 0.06939697265625, 0.09197998046875, 0.030517578125], "tokens": [351, 415, 308, 15209, 32, 6393, 26, 466, 490, 301]}
{"line_number": 1507, "line_type": "generated", "code": "\n                return false;\n            }\n        }\n        sz--; // don't want to loop to the last char, check it afterwords\n              // for type qualifiers\n        int i = start;\n        // loop to the next to last char or to the last char", "entropy": 0.057891845703125, "is_bug_line": false, "sus_score": 0.7322022318840027, "per_token_entropy": [0.380615234375, 0.029571533203125, 0.29443359375, 0.0019702911376953125, 0.142578125, 0.007556915283203125, 0.05657958984375, 0.002239227294921875, 0.08001708984375, 0.0116729736328125, 0.0025348663330078125, 0.00457000732421875, 0.032745361328125, 8.702278137207031e-06, 0.0096435546875, 0.0002372264862060547, 0.027923583984375, 0.00015234947204589844, 0.00914764404296875, 0.013458251953125, 0.005435943603515625, 0.0001342296600341797, 0.0019369125366210938, 3.039836883544922e-05, 0.00015807151794433594, 0.005390167236328125, 1.3720703125, 0.0018453598022460938, 0.00970458984375, 0.0010967254638671875, 0.073486328125, 0.004833221435546875, 0.046966552734375, 0.08673095703125, 0.0279388427734375, 0.00974273681640625, 1.4662742614746094e-05, 0.0001385211944580078, 0.0273284912109375, 0.006381988525390625, 0.1956787109375, 0.0020008087158203125, 0.0008635520935058594, 0.0011272430419921875, 0.0002646446228027344, 0.00022840499877929688, 0.0094146728515625, 0.00103759765625, 0.0001119375228881836, 4.851818084716797e-05, 0.00771331787109375, 0.002490997314453125], "tokens": [400, 442, 901, 45, 324, 320, 291, 320, 291, 8549, 10612, 434, 2800, 1330, 2637, 372, 5258, 372, 322, 2401, 1351, 30, 1505, 561, 2685, 4068, 1090, 434, 436, 827, 7193, 6667, 291, 629, 595, 280, 1477, 45, 291, 434, 5258, 372, 322, 2354, 372, 2401, 1351, 556, 372, 322, 2401, 1351]}
{"line_number": 185, "line_type": "original", "code": "     *", "entropy": 3.79296875, "is_bug_line": false, "sus_score": 0.6990852952003479, "per_token_entropy": [7.50390625, 0.08099365234375], "tokens": [262, 319]}
{"line_number": 185, "line_type": "generated", "code": "\n     * <p>If the string is <code>null</code>, <code>0.0f</code> is returned.</p>\n     *\n     * <pre>\n     *   NumberUtils.toFloat(null) = 0.", "entropy": 0.0120391845703125, "is_bug_line": false, "sus_score": 0.6990852952003479, "per_token_entropy": [0.044921875, 0.00012195110321044922, 0.06787109375, 0.000743865966796875, 0.0007205009460449219, 0.0005421638488769531, 2.6941299438476562e-05, 0.00013148784637451172, 0.29443359375, 0.0001684427261352539, 4.172325134277344e-06, 1.6689300537109375e-06, 2.6702880859375e-05, 9.59634780883789e-05, 5.0187110900878906e-05, 0.0002040863037109375, 0.00011098384857177734, 7.128715515136719e-05, 2.276897430419922e-05, 0.00534820556640625, 0.0004801750183105469, 9.5367431640625e-07, 0.0096588134765625, 7.176399230957031e-05, 0.00025010108947753906, 2.6226043701171875e-06, 0.00014650821685791016, 0.0002512931823730469, 0.00014698505401611328, 6.35385513305664e-05, 0.00052642822265625, 0.004863739013671875, 4.208087921142578e-05, 0.0275421142578125, 9.310245513916016e-05, 0.003047943115234375, 0.00313568115234375, 3.647804260253906e-05, 0.0006704330444335938, 0.00012671947479248047, 0.0090484619140625, 0.0960693359375, 0.0003502368927001953, 0.00010585784912109375, 0.01160430908203125, 0.0002467632293701172, 6.556510925292969e-06, 5.245208740234375e-06, 0.0277557373046875, 0.0010995864868164062, 3.266334533691406e-05, 0.0129547119140625], "tokens": [275, 319, 333, 98, 48, 2797, 322, 802, 438, 333, 687, 48, 1693, 377, 687, 2717, 333, 687, 48, 34, 32, 34, 88, 377, 687, 48, 438, 4717, 1730, 98, 48, 275, 319, 275, 319, 333, 1001, 48, 275, 319, 261, 5104, 2755, 32, 48124, 26, 1693, 27, 280, 225, 34, 32]}
{"line_number": 441, "line_type": "original", "code": "            if (expPos > -1 && expPos < str.length() - 1) {", "entropy": 1.01953125, "is_bug_line": false, "sus_score": 0.6537764072418213, "per_token_entropy": [6.92578125, 4.73046875, 0.1837158203125, 0.8935546875, 2.509765625, 0.232666015625, 0.0380859375, 0.00206756591796875, 1.6591796875, 0.343017578125, 2.47265625, 0.2298583984375, 0.6005859375, 0.0067291259765625, 0.0504150390625, 0.2445068359375, 0.031707763671875, 0.037261962890625, 0.046966552734375, 0.09765625, 0.07147216796875], "tokens": [1468, 415, 308, 2832, 2996, 848, 429, 35, 962, 2910, 2996, 333, 596, 32, 1322, 346, 429, 225, 35, 27, 301]}
{"line_number": 441, "line_type": "generated", "code": "\n                    } catch (NumberFormatException nfe) {\n                        // ignore the bad number\n                    }\n                    //fall through\n                default :\n                    //We don't know what this is\n                    throw new NumberFormatException(str + \" is not a valid number.\");\n            }\n       ", "entropy": 0.282958984375, "is_bug_line": false, "sus_score": 0.6537764072418213, "per_token_entropy": [0.2008056640625, 0.01097869873046875, 0.251708984375, 0.0052032470703125, 0.00308990478515625, 1.6808509826660156e-05, 0.154296875, 0.0002161264419555664, 0.0018606185913085938, 0.0029964447021484375, 0.045440673828125, 0.1890869140625, 0.0501708984375, 0.0014820098876953125, 0.00141143798828125, 0.00032973289489746094, 0.05230712890625, 0.0015211105346679688, 0.410888671875, 0.68017578125, 3.47265625, 0.00807952880859375, 0.1807861328125, 0.33251953125, 0.259521484375, 0.08441162109375, 1.337890625, 1.712890625, 1.255859375, 1.8596649169921875e-05, 0.480224609375, 0.2626953125, 0.328369140625, 0.0865478515625, 1.87109375, 0.359619140625, 0.0002551078796386719, 0.0026454925537109375, 0.00013339519500732422, 0.006046295166015625, 0.01322174072265625, 0.0064544677734375, 0.0035877227783203125, 0.0004525184631347656, 1.1563301086425781e-05, 4.6133995056152344e-05, 0.00011658668518066406, 0.0003046989440917969, 0.005474090576171875, 0.26171875, 0.0020503997802734375, 0.31787109375], "tokens": [528, 320, 2368, 308, 1918, 25944, 310, 1225, 27, 301, 715, 434, 5079, 322, 6658, 1451, 528, 320, 528, 434, 18954, 3919, 400, 1244, 499, 528, 434, 3122, 2800, 1330, 3702, 2769, 458, 438, 528, 1422, 537, 5104, 25944, 26, 466, 474, 313, 438, 646, 312, 2080, 1451, 5368, 324, 320, 291]}
{"line_number": 449, "line_type": "original", "code": "            switch (lastChar) {", "entropy": 1.3876953125, "is_bug_line": false, "sus_score": 0.6521432399749756, "per_token_entropy": [6.04296875, 3.45703125, 0.084716796875, 0.0948486328125, 0.0005517005920410156, 0.0024776458740234375, 0.0277099609375], "tokens": [1468, 3578, 308, 2135, 2659, 27, 301]}
{"line_number": 449, "line_type": "generated", "code": "\n        }\n        //User doesn't have a preference, so let's start with Long then\n        //fall back to the user's preference\n        try {\n            return createLong(str);\n        } catch (NumberFormatException nfe) {\n            // ignore the bad", "entropy": 0.285400390625, "is_bug_line": false, "sus_score": 0.6521432399749756, "per_token_entropy": [0.7001953125, 0.1612548828125, 0.7626953125, 0.53759765625, 0.062255859375, 0.56005859375, 7.987022399902344e-06, 0.00722503662109375, 0.6171875, 0.00806427001953125, 0.326904296875, 0.423095703125, 0.5947265625, 0.1087646484375, 0.17529296875, 0.61083984375, 0.30224609375, 0.64892578125, 0.373046875, 0.01485443115234375, 0.900390625, 0.006160736083984375, 0.1378173828125, 0.2275390625, 1.216796875, 0.0948486328125, 0.83203125, 1.2685546875, 0.25048828125, 0.00957489013671875, 0.093994140625, 0.87890625, 0.0020275115966796875, 0.00867462158203125, 5.4836273193359375e-05, 0.00827789306640625, 0.0009121894836425781, 0.05096435546875, 9.822845458984375e-05, 0.0216217041015625, 0.006137847900390625, 0.0084075927734375, 5.0067901611328125e-06, 0.09063720703125, 0.0003333091735839844, 0.01025390625, 0.0014209747314453125, 0.28173828125, 0.9287109375, 0.44580078125, 0.0361328125, 0.026123046875], "tokens": [291, 320, 291, 434, 1240, 4163, 1330, 1159, 312, 23398, 30, 1259, 1207, 1182, 1477, 623, 6359, 1615, 291, 434, 18954, 1751, 372, 322, 1256, 1182, 23398, 291, 1596, 301, 324, 442, 1487, 3952, 26, 466, 293, 291, 320, 2368, 308, 1918, 25944, 310, 1225, 27, 301, 324, 434, 5079, 322, 6658]}
{"line_number": 411, "line_type": "original", "code": "        if (str.startsWith(\"0x\") || str.startsWith(\"-0x\")) {", "entropy": 0.75, "is_bug_line": false, "sus_score": 0.6494799852371216, "per_token_entropy": [6.04296875, 2.251953125, 0.1378173828125, 4.49609375, 0.024566650390625, 0.334716796875, 0.54833984375, 0.006595611572265625, 0.013458251953125, 0.29052734375, 0.071044921875, 0.00823974609375, 0.00017821788787841797, 2.5272369384765625e-05, 0.001308441162109375, 7.545948028564453e-05, 0.00023686885833740234, 0.00823974609375, 0.0160064697265625], "tokens": [351, 415, 308, 466, 32, 13912, 440, 34, 106, 657, 1276, 596, 32, 13912, 10359, 34, 106, 2131, 301]}
{"line_number": 411, "line_type": "generated", "code": "\n                        try {\n                            return createBigInteger(numeric);\n                        } catch (NumberFormatException nfe) {\n                            // Too big for a BigInteger\n                        }\n                    }\n                    break;\n                case 'f' :\n                case 'F' :\n                    try {\n                        Float f", "entropy": 0.135986328125, "is_bug_line": false, "sus_score": 0.6494799852371216, "per_token_entropy": [0.85693359375, 1.375, 0.005390167236328125, 0.01256561279296875, 0.08544921875, 0.00864410400390625, 0.54345703125, 0.0012521743774414062, 0.008026123046875, 0.0237884521484375, 0.00732421875, 0.000335693359375, 0.0275421142578125, 0.00533294677734375, 0.0006880760192871094, 1.1205673217773438e-05, 0.005062103271484375, 0.0005326271057128906, 0.0016698837280273438, 0.0005102157592773438, 0.0195770263671875, 0.0097808837890625, 0.994140625, 0.0003597736358642578, 0.0003848075866699219, 0.0007658004760742188, 0.027130126953125, 0.169677734375, 0.00019073486328125, 0.2344970703125, 0.0016498565673828125, 0.384033203125, 0.2149658203125, 0.0018634796142578125, 0.10845947265625, 0.00836181640625, 0.0002428293228149414, 0.005908966064453125, 0.0039520263671875, 0.0031757354736328125, 0.0041961669921875, 6.031990051269531e-05, 1.1086463928222656e-05, 8.26120376586914e-05, 0.0008301734924316406, 1.2159347534179688e-05, 0.4404296875, 1.13671875, 0.0006747245788574219, 0.06976318359375, 0.260498046875, 0.003826141357421875], "tokens": [715, 1596, 301, 1014, 442, 1487, 21541, 26, 10125, 293, 715, 320, 2368, 308, 1918, 25944, 310, 1225, 27, 301, 1014, 434, 37327, 6524, 436, 312, 21743, 715, 320, 528, 320, 528, 1626, 45, 400, 1135, 330, 88, 25, 499, 400, 1135, 330, 56, 25, 499, 528, 1596, 301, 715, 8174, 296]}
{"line_number": 401, "line_type": "original", "code": "        if (StringUtils.isBlank(str)) {", "entropy": 2.27734375, "is_bug_line": false, "sus_score": 0.6415404081344604, "per_token_entropy": [6.03125, 2.201171875, 0.1865234375, 9.5625, 0.0022220611572265625, 0.68701171875, 0.0018682479858398438, 3.55078125, 0.378173828125, 0.1732177734375], "tokens": [351, 415, 308, 15209, 32, 40519, 26, 466, 490, 301]}
{"line_number": 401, "line_type": "generated", "code": "\n                case 'L' :\n                    try {\n                        return createLong(numeric);\n                    } catch (NumberFormatException nfe) {\n                        // Too big for a long\n                        if (dec == null && exp == null) {\n                            throw new NumberFormatException(str", "entropy": 0.1842041015625, "is_bug_line": false, "sus_score": 0.6415404081344604, "per_token_entropy": [0.88916015625, 0.075439453125, 0.0009512901306152344, 0.0018444061279296875, 0.002223968505859375, 4.184246063232422e-05, 0.92138671875, 0.42578125, 0.00888824462890625, 0.0784912109375, 1.4287109375, 0.065673828125, 0.09954833984375, 0.0005092620849609375, 0.00290679931640625, 0.19384765625, 0.0185394287109375, 0.00034308433532714844, 0.5263671875, 0.005985260009765625, 0.038330078125, 1.3113021850585938e-05, 0.0046539306640625, 0.00013768672943115234, 0.0022411346435546875, 0.0184326171875, 0.102783203125, 0.195068359375, 1.7255859375, 0.0550537109375, 0.0002313852310180664, 0.00014793872833251953, 0.0316162109375, 0.1322021484375, 0.22802734375, 0.057891845703125, 0.642578125, 0.005615234375, 0.0001533031463623047, 0.126220703125, 0.01044464111328125, 0.007335662841796875, 6.091594696044922e-05, 0.0511474609375, 0.0004780292510986328, 0.08795166015625, 0.89501953125, 0.1392822265625, 0.002109527587890625, 5.137920379638672e-05, 0.1885986328125, 0.08258056640625], "tokens": [400, 1135, 330, 62, 25, 499, 528, 1596, 301, 715, 442, 1487, 3952, 26, 10125, 293, 528, 320, 2368, 308, 1918, 25944, 310, 1225, 27, 301, 715, 434, 37327, 6524, 436, 312, 1946, 715, 415, 308, 6114, 610, 744, 962, 2910, 610, 744, 27, 301, 1014, 1422, 537, 5104, 25944, 26, 466]}
{"line_number": 440, "line_type": "original", "code": "        if (!Character.isDigit(lastChar)) {", "entropy": 1.45703125, "is_bug_line": false, "sus_score": 0.6407562494277954, "per_token_entropy": [6.41796875, 2.134765625, 3.2265625, 4.296875, 0.001556396484375, 0.0006012916564941406, 0.00099945068359375, 0.00020778179168701172, 0.564453125, 0.0020313262939453125, 0.63525390625, 0.1962890625], "tokens": [351, 415, 1429, 6881, 32, 297, 21530, 26, 2135, 2659, 490, 301]}
{"line_number": 440, "line_type": "generated", "code": "\n                        return createBigDecimal(numeric);\n                    } catch (NumberFormatException nfe) {\n                        // ignore the bad number\n                    }\n                    //Fall through\n                default :\n                    //Punt, it's a BigDecimal.\n                    return createBigDecimal(str);\n            }\n       ", "entropy": 0.25732421875, "is_bug_line": false, "sus_score": 0.6407562494277954, "per_token_entropy": [0.332275390625, 0.2142333984375, 0.1380615234375, 0.033111572265625, 0.0013608932495117188, 0.3349609375, 0.10406494140625, 0.1500244140625, 0.0006265640258789062, 0.053924560546875, 0.00434112548828125, 0.0032558441162109375, 7.867813110351562e-06, 0.242919921875, 0.0005044937133789062, 0.002208709716796875, 0.003131866455078125, 0.041259765625, 0.1810302734375, 0.097900390625, 0.0049285888671875, 0.0007529258728027344, 0.0003082752227783203, 0.0283966064453125, 0.0005602836608886719, 0.5205078125, 0.336181640625, 1.9501953125, 0.0024776458740234375, 0.137451171875, 0.424560546875, 0.125732421875, 0.10589599609375, 1.4599609375, 1.662109375, 0.06341552734375, 0.3095703125, 0.170166015625, 0.6328125, 0.1983642578125, 0.493408203125, 0.481201171875, 0.11297607421875, 0.361328125, 0.0070037841796875, 0.002010345458984375, 0.0002803802490234375, 0.34716796875, 0.00402069091796875, 0.41357421875, 0.003208160400390625, 1.076171875], "tokens": [715, 442, 1487, 20827, 26, 10125, 293, 528, 320, 2368, 308, 1918, 25944, 310, 1225, 27, 301, 715, 434, 5079, 322, 6658, 1451, 528, 320, 528, 434, 38206, 3919, 400, 1244, 499, 528, 434, 66, 574, 30, 561, 1182, 312, 17280, 32, 528, 442, 1487, 20827, 26, 466, 293, 324, 320, 291]}
{"line_number": 433, "line_type": "original", "code": "            if (expPos > -1) {", "entropy": 1.6611328125, "is_bug_line": false, "sus_score": 0.6359202861785889, "per_token_entropy": [6.6640625, 0.615234375, 2.064453125, 4.125, 1.4169921875, 0.479736328125, 0.10955810546875, 0.00252532958984375, 0.962890625, 0.1649169921875], "tokens": [1468, 415, 308, 2832, 2996, 848, 429, 35, 27, 301]}
{"line_number": 433, "line_type": "generated", "code": "\n                        if (!(d.isInfinite() || (d.floatValue() == 0.0D &&!allZeros))) {\n                            //If it's too big for a double, or the double value = 0 and the string\n                            //has", "entropy": 0.0784912109375, "is_bug_line": false, "sus_score": 0.6359202861785889, "per_token_entropy": [0.41943359375, 0.2137451171875, 0.0908203125, 0.007587432861328125, 0.0095977783203125, 0.001056671142578125, 4.172325134277344e-06, 0.0025005340576171875, 0.03228759765625, 0.0236358642578125, 0.0086822509765625, 0.0012750625610351562, 0.031951904296875, 5.364418029785156e-06, 0.001758575439453125, 0.001728057861328125, 0.0032749176025390625, 0.00013577938079833984, 0.004299163818359375, 0.001499176025390625, 0.27392578125, 0.006664276123046875, 0.00261688232421875, 0.001018524169921875, 0.0002894401550292969, 6.079673767089844e-06, 0.0278472900390625, 0.0108642578125, 0.059326171875, 0.1832275390625, 0.01009368896484375, 0.0007801055908203125, 4.291534423828125e-05, 0.00041174888610839844, 0.0001531839370727539, 0.0001811981201171875, 5.245208740234375e-06, 0.281982421875, 0.67919921875, 0.92626953125, 0.001178741455078125, 0.2056884765625, 0.003910064697265625, 0.0499267578125, 0.0018415451049804688, 0.0005116462707519531, 0.236572265625, 0.0305633544921875, 0.1488037109375, 0.0474853515625, 0.003238677978515625, 0.03131103515625], "tokens": [715, 415, 11007, 86, 32, 28823, 11949, 346, 1276, 308, 86, 32, 1808, 882, 346, 610, 225, 34, 32, 34, 54, 962, 653, 464, 76, 14641, 2610, 301, 1014, 434, 2797, 561, 1182, 5133, 6524, 436, 312, 2064, 30, 556, 322, 2064, 786, 280, 225, 34, 461, 322, 802, 1014, 434, 2040]}
{"line_number": 414, "line_type": "original", "code": "        char lastChar = str.charAt(str.length() - 1);", "entropy": 1.2080078125, "is_bug_line": false, "sus_score": 0.633446991443634, "per_token_entropy": [4.90625, 7.3125, 4.04296875, 3.201171875, 0.07275390625, 0.78076171875, 0.005359649658203125, 0.010406494140625, 0.00012767314910888672, 0.16650390625, 0.007122039794921875, 1.2874603271484375e-05, 0.0283660888671875, 0.0013446807861328125, 0.00234222412109375, 7.796287536621094e-05, 0.0008921623229980469], "tokens": [351, 1351, 2401, 2659, 280, 596, 32, 15611, 26, 466, 32, 1322, 346, 429, 225, 35, 293]}
{"line_number": 414, "line_type": "generated", "code": "\n                    break;\n                case 'f' :\n                case 'F' :", "entropy": 0.116943359375, "is_bug_line": false, "sus_score": 0.633446991443634, "per_token_entropy": [0.57421875, 0.91015625, 0.0012254714965820312, 0.2119140625, 0.01477813720703125, 0.00016391277313232422, 0.0163116455078125, 0.00960540771484375, 0.005466461181640625, 0.0069732666015625, 8.988380432128906e-05, 2.944469451904297e-05, 0.0001881122589111328, 0.0025959014892578125, 5.555152893066406e-05], "tokens": [528, 1626, 45, 400, 1135, 330, 88, 25, 499, 400, 1135, 330, 56, 25, 499]}
{"line_number": 418, "line_type": "original", "code": "        int decPos = str.indexOf('.');", "entropy": 1.701171875, "is_bug_line": false, "sus_score": 0.633446991443634, "per_token_entropy": [5.48828125, 6.0625, 2.00390625, 0.9013671875, 0.124267578125, 0.4189453125, 0.0005311965942382812, 0.02801513671875, 0.28369140625], "tokens": [351, 629, 5973, 2996, 280, 596, 32, 7142, 49129]}
{"line_number": 418, "line_type": "generated", "code": "\n                        return createFloat(numeric);\n                    } catch (NumberFormatException nfe) {\n                        // ignore the bad float.\n                    }\n                    try {\n                        return createDouble(numeric);\n                    } catch (NumberFormatException nfe) {\n                        // ignore the bad double", "entropy": 0.148193359375, "is_bug_line": false, "sus_score": 0.633446991443634, "per_token_entropy": [0.457763671875, 0.56884765625, 0.1407470703125, 0.0014095306396484375, 0.001041412353515625, 0.0662841796875, 0.0306854248046875, 0.08209228515625, 0.0003063678741455078, 0.427734375, 0.01535797119140625, 0.019989013671875, 3.5762786865234375e-06, 0.0149688720703125, 1.3828277587890625e-05, 0.00154876708984375, 0.00209808349609375, 0.0552978515625, 0.485107421875, 1.55859375, 0.044708251953125, 0.037139892578125, 0.3486328125, 0.50341796875, 0.2587890625, 0.00025272369384765625, 0.1781005859375, 1.1240234375, 0.0017175674438476562, 0.260009765625, 0.092529296875, 0.0012302398681640625, 0.0239410400390625, 0.0003609657287597656, 0.0031147003173828125, 0.0015077590942382812, 0.01082611083984375, 0.0005016326904296875, 0.0031337738037109375, 0.0038318634033203125, 0.0028839111328125, 1.049041748046875e-05, 0.0014333724975585938, 8.630752563476562e-05, 0.0038890838623046875, 0.0014028549194335938, 0.037506103515625, 0.257080078125, 0.56591796875, 0.00013494491577148438, 0.0010128021240234375, 0.00608062744140625], "tokens": [715, 442, 1487, 3670, 26, 10125, 293, 528, 320, 2368, 308, 1918, 25944, 310, 1225, 27, 301, 715, 434, 5079, 322, 6658, 1897, 32, 528, 320, 528, 1596, 301, 715, 442, 1487, 4075, 26, 10125, 293, 528, 320, 2368, 308, 1918, 25944, 310, 1225, 27, 301, 715, 434, 5079, 322, 6658, 2064]}
{"line_number": 419, "line_type": "original", "code": "        int expPos = str.indexOf('e') + str.indexOf('E') + 1;", "entropy": 1.4599609375, "is_bug_line": false, "sus_score": 0.633446991443634, "per_token_entropy": [6.17578125, 7.80078125, 6.30078125, 4.6484375, 0.234130859375, 0.277099609375, 0.0011854171752929688, 0.016937255859375, 0.0635986328125, 0.439453125, 0.331298828125, 3.408203125, 0.935546875, 0.0003883838653564453, 0.005695343017578125, 0.0006198883056640625, 0.0001538991928100586, 0.5927734375, 0.70556640625, 0.134765625, 0.0031452178955078125, 0.048370361328125], "tokens": [351, 629, 2910, 2996, 280, 596, 32, 7142, 463, 87, 683, 474, 596, 32, 7142, 463, 55, 683, 474, 225, 35, 45]}
{"line_number": 419, "line_type": "generated", "code": "\n                        return f;\n                    }\n                    catch (NumberFormatException nfe) {\n                        //This is quite likely to be a JDK bug.\n                        //It should have thrown an NFE for a malformed float\n                        //rather than for the (valid) string \"", "entropy": 0.5908203125, "is_bug_line": false, "sus_score": 0.633446991443634, "per_token_entropy": [0.43505859375, 0.391845703125, 0.57568359375, 0.025390625, 0.0589599609375, 0.00019824504852294922, 1.115234375, 0.00896453857421875, 0.035400390625, 0.0205535888671875, 0.0003542900085449219, 0.0218963623046875, 4.374980926513672e-05, 0.0195159912109375, 0.054107666015625, 0.08673095703125, 0.56396484375, 3.083984375, 0.193115234375, 2.634765625, 1.7783203125, 0.1497802734375, 0.361328125, 1.5576171875, 1.4814453125, 0.1817626953125, 0.338623046875, 0.42578125, 0.033172607421875, 1.109375, 2.34375, 0.75341796875, 0.7822265625, 0.65771484375, 0.90966796875, 1.1682510375976562e-05, 0.141357421875, 0.8056640625, 0.64892578125, 0.364990234375, 0.60205078125, 0.04620361328125, 0.60400390625, 0.0006256103515625, 0.0012073516845703125, 1.541015625, 0.81787109375, 1.37890625, 0.144287109375, 0.007228851318359375, 0.2666015625, 1.158203125], "tokens": [715, 442, 296, 45, 528, 320, 528, 2368, 308, 1918, 25944, 310, 1225, 27, 301, 715, 434, 2272, 438, 12247, 11353, 372, 526, 312, 33090, 4835, 32, 715, 434, 1011, 1395, 1159, 12163, 600, 489, 4666, 436, 312, 46235, 1897, 715, 434, 100, 3790, 2784, 436, 322, 308, 1327, 27, 802, 313]}
{"line_number": 447, "line_type": "original", "code": "            String numeric = str.substring(0, str.length() - 1);", "entropy": 1.17578125, "is_bug_line": false, "sus_score": 0.633446991443634, "per_token_entropy": [5.6484375, 12.328125, 0.88623046875, 0.032501220703125, 1.1025390625, 1.064453125, 0.0372314453125, 6.818771362304688e-05, 0.0004150867462158203, 6.270408630371094e-05, 0.037933349609375, 0.0034027099609375, 4.506111145019531e-05, 0.00878143310546875, 0.0012035369873046875, 0.0228118896484375, 0.0002472400665283203, 0.00347137451171875], "tokens": [1468, 892, 12738, 280, 596, 32, 8723, 26, 34, 30, 596, 32, 1322, 346, 429, 225, 35, 293]}
{"line_number": 447, "line_type": "generated", "code": "\n            }\n        } else {", "entropy": 0.1475830078125, "is_bug_line": false, "sus_score": 0.633446991443634, "per_token_entropy": [0.2139892578125, 0.0026760101318359375, 0.302490234375, 0.01258087158203125, 0.28076171875, 0.07275390625], "tokens": [324, 320, 291, 320, 813, 301]}
{"line_number": 559, "line_type": "original", "code": "        for (int i = str.length() - 1; i >= 0; i--) {", "entropy": 0.64794921875, "is_bug_line": false, "sus_score": 0.633446991443634, "per_token_entropy": [3.169921875, 5.46875, 0.0219879150390625, 0.3544921875, 0.0018835067749023438, 0.007099151611328125, 4.23828125, 0.00539398193359375, 0.0259246826171875, 0.0201416015625, 0.00017070770263671875, 0.0023956298828125, 0.0002321004867553711, 0.0049591064453125, 0.000209808349609375, 0.74609375, 0.001190185546875, 0.0003910064697265625, 0.016632080078125, 0.0129852294921875, 0.002887725830078125, 0.1572265625], "tokens": [351, 436, 308, 410, 595, 280, 596, 32, 1322, 346, 429, 225, 35, 45, 595, 2377, 225, 34, 45, 595, 15353, 301]}
{"line_number": 559, "line_type": "generated", "code": "\n     */\n    public static Integer createInteger(String str) {\n        if (str == null) {\n            return null;\n        }\n        if (str.startsWith(\"0x\") || str.startsWith(\"0X\")) {\n            return Integer.decode(", "entropy": 0.1021728515625, "is_bug_line": false, "sus_score": 0.633446991443634, "per_token_entropy": [1.3251953125, 0.122802734375, 0.0229949951171875, 0.033447265625, 0.00026726722717285156, 0.0207672119140625, 0.00017726421356201172, 0.0005640983581542969, 0.0008602142333984375, 0.0020294189453125, 0.000431060791015625, 0.0012760162353515625, 0.10968017578125, 0.08953857421875, 0.0582275390625, 0.003643035888671875, 0.0233001708984375, 0.0012178421020507812, 0.0001112222671508789, 0.0002079010009765625, 0.001995086669921875, 0.00739288330078125, 0.00021767616271972656, 0.0001380443572998047, 0.00018715858459472656, 0.0038928985595703125, 0.0006699562072753906, 0.22900390625, 0.74658203125, 0.0157012939453125, 0.130859375, 3.325939178466797e-05, 0.62939453125, 0.06097412109375, 0.00010216236114501953, 0.0015811920166015625, 0.05877685546875, 0.006317138671875, 0.00244903564453125, 1.5020370483398438e-05, 5.7578086853027344e-05, 0.02764892578125, 7.033348083496094e-06, 6.246566772460938e-05, 0.009246826171875, 0.004581451416015625, 0.461669921875, 0.09600830078125, 0.408203125, 8.64267349243164e-05, 0.58984375, 0.003986358642578125], "tokens": [275, 569, 284, 562, 907, 4401, 1487, 3061, 26, 652, 596, 27, 301, 291, 415, 308, 466, 610, 744, 27, 301, 324, 442, 744, 45, 291, 320, 291, 415, 308, 466, 32, 13912, 440, 34, 106, 657, 1276, 596, 32, 13912, 440, 34, 74, 2131, 301, 324, 442, 4401, 32, 5460, 26]}
{"line_number": 421, "line_type": "original", "code": "        if (decPos > -1) {", "entropy": 1.6044921875, "is_bug_line": false, "sus_score": 0.6232540607452393, "per_token_entropy": [5.62109375, 3.443359375, 0.454833984375, 3.396484375, 1.6474609375, 0.5390625, 0.047637939453125, 0.0031681060791015625, 0.7861328125, 0.1094970703125], "tokens": [351, 415, 308, 6114, 2996, 848, 429, 35, 27, 301]}
{"line_number": 421, "line_type": "generated", "code": "\n                            return f;\n                        }\n                    } catch (NumberFormatException nfe) {\n                        //Ignore the bad float\n                    }\n                    //Float.valueOf(numeric);\n                    break;\n                case 'd' :\n                case 'D' :\n                    try {\n                        Double", "entropy": 0.236083984375, "is_bug_line": false, "sus_score": 0.6232540607452393, "per_token_entropy": [0.69189453125, 0.115234375, 0.378173828125, 0.003536224365234375, 0.126220703125, 0.0021305084228515625, 0.13623046875, 0.002460479736328125, 0.1990966796875, 0.00783538818359375, 0.0018472671508789062, 5.0902366638183594e-05, 0.03509521484375, 1.7642974853515625e-05, 0.00255584716796875, 0.0718994140625, 0.05621337890625, 0.0234222412109375, 2.515625, 0.026153564453125, 0.59375, 0.638671875, 0.331298828125, 0.00032138824462890625, 0.2303466796875, 0.7548828125, 1.68359375, 0.06500244140625, 0.01064300537109375, 0.80322265625, 0.1424560546875, 0.10302734375, 0.681640625, 1.650390625, 0.00015604496002197266, 0.0374755859375, 0.0014209747314453125, 3.731250762939453e-05, 9.489059448242188e-05, 0.0001024007797241211, 0.0003211498260498047, 0.0028228759765625, 0.00012159347534179688, 8.940696716308594e-06, 5.960464477539062e-07, 0.00045180320739746094, 2.2172927856445312e-05, 0.0307159423828125, 0.033355712890625, 0.0006775856018066406, 0.058929443359375, 0.01934814453125], "tokens": [1014, 442, 296, 45, 715, 320, 528, 320, 2368, 308, 1918, 25944, 310, 1225, 27, 301, 715, 434, 7180, 322, 6658, 1897, 528, 320, 528, 434, 3670, 32, 9162, 26, 10125, 293, 528, 1626, 45, 400, 1135, 330, 86, 25, 499, 400, 1135, 330, 54, 25, 499, 528, 1596, 301, 715, 6934]}
{"line_number": 556, "line_type": "original", "code": "        if (str == null) {", "entropy": 0.5185546875, "is_bug_line": false, "sus_score": 0.6225957870483398, "per_token_entropy": [2.923828125, 0.71142578125, 0.1002197265625, 0.1358642578125, 0.1390380859375, 0.0006794929504394531, 0.00252532958984375, 0.13427734375], "tokens": [351, 415, 308, 466, 610, 744, 27, 301]}
{"line_number": 556, "line_type": "generated", "code": "\n     * @param str  the string to convert\n     * @return the integer represented by the string\n     * @throws NumberFormatException if the value cannot be converted\n     */\n    public static Integer createInteger(String str) {\n        if (str == null)", "entropy": 0.0986328125, "is_bug_line": false, "sus_score": 0.6225957870483398, "per_token_entropy": [1.37890625, 0.129150390625, 0.2457275390625, 0.00933074951171875, 0.0007710456848144531, 0.0304718017578125, 0.167236328125, 0.0892333984375, 0.0010690689086914062, 0.005767822265625, 0.32275390625, 2.276897430419922e-05, 0.0002008676528930664, 0.197021484375, 0.71435546875, 0.303466796875, 0.197998046875, 1.3470649719238281e-05, 0.0004229545593261719, 0.0784912109375, 0.017608642578125, 0.001819610595703125, 7.104873657226562e-05, 0.0029354095458984375, 0.0016269683837890625, 0.0010404586791992188, 0.0036373138427734375, 0.0017328262329101562, 0.489013671875, 0.0015687942504882812, 2.4437904357910156e-05, 0.006641387939453125, 0.01158905029296875, 0.17041015625, 0.01311492919921875, 0.08355712890625, 0.00042819976806640625, 0.046478271484375, 0.0007996559143066406, 0.0007252693176269531, 0.0012121200561523438, 0.004108428955078125, 0.0009489059448242188, 0.0012750625610351562, 0.0458984375, 0.144775390625, 0.12493896484375, 0.0104827880859375, 0.05889892578125, 0.00711822509765625, 0.0001811981201171875, 0.0007429122924804688], "tokens": [275, 319, 477, 753, 596, 225, 322, 802, 372, 4483, 275, 319, 477, 601, 322, 4991, 17718, 810, 322, 802, 275, 319, 477, 5117, 5104, 25944, 415, 322, 786, 4881, 526, 12785, 275, 569, 284, 562, 907, 4401, 1487, 3061, 26, 652, 596, 27, 301, 291, 415, 308, 466, 610, 744, 27]}
{"line_number": 223, "line_type": "original", "code": "        }", "entropy": 5.2265625, "is_bug_line": false, "sus_score": 0.6065055131912231, "per_token_entropy": [4.4375, 6.015625], "tokens": [351, 320]}
{"line_number": 223, "line_type": "generated", "code": "\n        try {\n            return Float.parseFloat(str);\n        } catch (NumberFormatException nfe) {\n            return defaultValue;\n        }\n    }\n\n    /**\n     * <p>Convert a <code>String</code> to a <code>double</", "entropy": 0.01806640625, "is_bug_line": false, "sus_score": 0.6065055131912231, "per_token_entropy": [0.0623779296875, 0.6728515625, 0.0013561248779296875, 0.0189666748046875, 0.006298065185546875, 0.004749298095703125, 0.00010204315185546875, 0.0024566650390625, 0.0035648345947265625, 0.0003330707550048828, 0.002910614013671875, 0.00777435302734375, 5.161762237548828e-05, 0.0019197463989257812, 0.00485992431640625, 0.00019860267639160156, 5.364418029785156e-06, 0.0004334449768066406, 1.4424324035644531e-05, 0.0004563331604003906, 0.0035610198974609375, 0.0181884765625, 0.0008530616760253906, 2.6464462280273438e-05, 0.00010061264038085938, 0.00585174560546875, 8.26120376586914e-05, 0.0194091796875, 0.0002161264419555664, 0.059051513671875, 0.005489349365234375, 0.006587982177734375, 0.0001386404037475586, 0.005413055419921875, 1.3113021850585938e-05, 0.0003173351287841797, 0.0014820098876953125, 0.00021219253540039062, 0.0012559890747070312, 3.5762786865234375e-06, 3.933906555175781e-06, 0.0001850128173828125, 8.52346420288086e-05, 2.3245811462402344e-05, 1.2040138244628906e-05, 0.0009474754333496094, 0.00582122802734375, 0.0001875162124633789, 7.033348083496094e-06, 7.3909759521484375e-06, 0.0108184814453125, 0.0014743804931640625], "tokens": [291, 1596, 301, 324, 442, 8174, 32, 31828, 26, 466, 293, 291, 320, 2368, 308, 1918, 25944, 310, 1225, 27, 301, 324, 442, 14343, 45, 291, 320, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 6720, 312, 333, 687, 48, 652, 377, 687, 48, 372, 312, 333, 687, 48, 2627, 377]}
