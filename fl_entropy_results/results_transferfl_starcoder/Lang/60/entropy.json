{"line_number": 1114, "line_type": "original", "code": "        System.arraycopy(buffer, endIndex, buffer, startIndex, size - endIndex);", "entropy": 0.958984375, "is_bug_line": false, "sus_score": 0.5813933610916138, "per_token_entropy": [2.31640625, 9.3359375, 0.0214080810546875, 0.1729736328125, 0.0152435302734375, 0.030853271484375, 0.0012674331665039062, 3.666015625, 1.31640625, 0.045928955078125, 0.054962158203125, 0.00011980533599853516, 0.94189453125, 0.0328369140625, 0.221923828125, 0.0111083984375, 0.020965576171875, 0.004364013671875, 0.004970550537109375], "tokens": [351, 1171, 32, 40863, 26, 2668, 30, 943, 1284, 30, 3112, 30, 23529, 30, 1334, 429, 943, 1284, 293]}
{"line_number": 1114, "line_type": "generated", "code": "\n     * @return this, to enable chaining\n     */\n    public StrBuilder deleteAll(int ch) {\n        return deleteAll((char) ch);\n    }\n\n    /**\n     * Deletes the character wherever it occurs in the builder.\n     *\n     *", "entropy": 0.09503173828125, "is_bug_line": false, "sus_score": 0.5813933610916138, "per_token_entropy": [0.29736328125, 0.0224456787109375, 0.001453399658203125, 0.0789794921875, 0.006744384765625, 0.0018100738525390625, 8.702278137207031e-05, 9.500980377197266e-05, 0.0006947517395019531, 0.08624267578125, 0.09747314453125, 0.052581787109375, 0.00705718994140625, 0.0019130706787109375, 1.430511474609375e-06, 0.0012063980102539062, 0.401611328125, 0.08221435546875, 0.75341796875, 0.0009765625, 0.0009446144104003906, 0.002681732177734375, 0.0655517578125, 0.42529296875, 0.00473785400390625, 0.0214996337890625, 0.264892578125, 0.005992889404296875, 0.005725860595703125, 0.070068359375, 0.000362396240234375, 0.0235595703125, 0.00012624263763427734, 0.152587890625, 0.359619140625, 0.0002048015594482422, 3.826618194580078e-05, 0.016632080078125, 0.2010498046875, 1.2509765625, 0.0255279541015625, 9.5367431640625e-05, 0.005283355712890625, 0.0024204254150390625, 0.00496673583984375, 0.008758544921875, 0.00017273426055908203, 0.0645751953125, 0.00949859619140625, 1.1563301086425781e-05, 0.05169677734375, 3.135204315185547e-05], "tokens": [275, 319, 477, 601, 458, 30, 372, 5352, 38009, 275, 569, 284, 562, 6700, 1796, 3066, 1934, 26, 410, 663, 27, 301, 291, 442, 3066, 1934, 1162, 1594, 27, 663, 293, 284, 320, 446, 1022, 275, 319, 34391, 322, 5341, 2154, 424, 561, 12984, 328, 322, 4906, 32, 275, 319, 275, 319]}
{"line_number": 126, "line_type": "original", "code": "            append(str);", "entropy": 4.98828125, "is_bug_line": false, "sus_score": 0.5667197704315186, "per_token_entropy": [8.546875, 8.5859375, 1.470703125, 3.814453125, 2.52734375], "tokens": [1468, 5489, 26, 466, 293]}
{"line_number": 126, "line_type": "generated", "code": "\n    /**\n     * Appends the string representation of an array of characters.\n     * <p>\n     * The characters are appended using {@link String#valueOf(char[])}.\n     *\n     * @param value  the array of characters to add\n     *", "entropy": 0.34912109375, "is_bug_line": false, "sus_score": 0.5667197704315186, "per_token_entropy": [0.70068359375, 0.437744140625, 0.00971221923828125, 4.863739013671875e-05, 1.150390625, 3.8743019104003906e-05, 0.51904296875, 1.2509765625, 0.88623046875, 0.00012969970703125, 0.56298828125, 0.30029296875, 0.8173828125, 0.943359375, 0.064208984375, 0.005634307861328125, 0.00015807151794433594, 0.76123046875, 0.00539398193359375, 0.00955963134765625, 0.0005178451538085938, 2.002716064453125e-05, 1.0654296875, 0.52099609375, 0.005832672119140625, 0.84521484375, 0.54296875, 0.64697265625, 0.62548828125, 0.350830078125, 0.0019989013671875, 0.01031494140625, 0.0033550262451171875, 0.02642822265625, 0.076416015625, 0.0885009765625, 0.007793426513671875, 0.00014710426330566406, 0.59521484375, 1.0609626770019531e-05, 0.001850128173828125, 0.000732421875, 0.6123046875, 0.038970947265625, 0.0108642578125, 0.1611328125, 0.5166015625, 1.052734375, 0.0966796875, 0.39453125, 1.4306640625, 0.0004112720489501953], "tokens": [284, 1022, 275, 319, 1995, 1494, 322, 802, 10293, 432, 600, 1417, 432, 7125, 32, 275, 319, 333, 98, 48, 275, 319, 886, 7125, 884, 22363, 1471, 3088, 1204, 892, 21, 9162, 26, 1594, 9795, 4009, 275, 319, 275, 319, 477, 753, 786, 225, 322, 1417, 432, 7125, 372, 1015, 275, 319]}
{"line_number": 1673, "line_type": "original", "code": "        for (int i = 0; i < thisBuf.length; i++) {", "entropy": 0.7900390625, "is_bug_line": true, "sus_score": 0.5547744631767273, "per_token_entropy": [3.228515625, 1.8427734375, 0.08636474609375, 0.032073974609375, 0.00809478759765625, 0.0037555694580078125, 6.26171875, 0.018951416015625, 0.10858154296875, 0.1943359375, 0.157958984375, 2.087890625, 0.51904296875, 0.099609375, 0.004215240478515625, 0.1453857421875, 0.0947265625, 0.02325439453125, 0.09381103515625], "tokens": [351, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 458, 7346, 32, 1322, 45, 595, 1987, 301]}
{"line_number": 1673, "line_type": "generated", "code": "\n     * @throws StringIndexOutOfBoundsException if the index is invalid\n     */\n    public int indexOf(char ch, int startIndex) {\n        if (startIndex < 0) {\n            startIndex = 0;\n        }\n        if (startIndex >= size) {\n           ", "entropy": 0.125244140625, "is_bug_line": true, "sus_score": 0.5547744631767273, "per_token_entropy": [0.7666015625, 1.21484375, 0.1331787109375, 0.2288818359375, 0.90771484375, 0.00016057491302490234, 0.0001728534698486328, 0.0222320556640625, 0.0290069580078125, 0.869140625, 0.0013055801391601562, 0.01149749755859375, 0.057159423828125, 0.0211181640625, 0.00579833984375, 0.004337310791015625, 0.000652313232421875, 1.2755393981933594e-05, 0.00016450881958007812, 0.0235748291015625, 7.605552673339844e-05, 5.1856040954589844e-05, 0.00022661685943603516, 5.817413330078125e-05, 0.0004000663757324219, 0.058624267578125, 0.1519775390625, 0.6064453125, 0.01357269287109375, 0.042327880859375, 0.0110015869140625, 0.000560760498046875, 2.5033950805664062e-06, 0.41357421875, 0.0012559890747070312, 0.037200927734375, 0.022705078125, 0.02618408203125, 0.0022830963134765625, 7.152557373046875e-07, 0.00010979175567626953, 0.125244140625, 0.00014889240264892578, 0.1270751953125, 0.4423828125, 0.0004611015319824219, 0.017486572265625, 0.083984375, 0.017242431640625, 0.0053863525390625, 0.0003643035888671875, 0.00848388671875], "tokens": [275, 319, 477, 5117, 892, 1284, 35821, 415, 322, 1650, 438, 5535, 275, 569, 284, 562, 629, 40635, 26, 1594, 663, 30, 629, 23529, 27, 301, 291, 415, 308, 42335, 333, 225, 34, 27, 301, 324, 23529, 280, 225, 34, 45, 291, 320, 291, 415, 308, 42335, 2377, 1334, 27, 301, 324]}
{"line_number": 122, "line_type": "original", "code": "        if (str == null) {", "entropy": 1.693359375, "is_bug_line": false, "sus_score": 0.5534023642539978, "per_token_entropy": [6.0, 2.462890625, 0.0323486328125, 4.03515625, 0.75, 0.0118560791015625, 0.216796875, 0.038543701171875], "tokens": [351, 415, 308, 466, 610, 744, 27, 301]}
{"line_number": 122, "line_type": "generated", "code": "\n        return this;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Gets the length of the string builder buffer.\n     *\n     * @return the length\n     */\n    public int length() {\n        return size;\n    }\n\n    /**\n     * Gets the current capacity", "entropy": 0.100830078125, "is_bug_line": false, "sus_score": 0.5534023642539978, "per_token_entropy": [0.173828125, 0.228759765625, 0.005657196044921875, 0.0018281936645507812, 0.047882080078125, 0.0008373260498046875, 0.1920166015625, 0.2364501953125, 0.0024738311767578125, 0.012847900390625, 0.007049560546875, 0.0014667510986328125, 2.6464462280273438e-05, 0.57958984375, 0.0099639892578125, 0.34228515625, 0.004058837890625, 0.00907135009765625, 0.0533447265625, 0.79052734375, 0.314697265625, 0.028900146484375, 0.005634307861328125, 6.794929504394531e-06, 0.265625, 1.049041748046875e-05, 0.0004374980926513672, 0.0003273487091064453, 0.11346435546875, 0.0775146484375, 0.5517578125, 0.0308074951171875, 0.005340576171875, 0.1658935546875, 0.003292083740234375, 0.0295562744140625, 0.0001976490020751953, 9.918212890625e-05, 0.0176544189453125, 0.006336212158203125, 0.004665374755859375, 0.0081939697265625, 0.019500732421875, 2.574920654296875e-05, 0.0693359375, 0.04534912109375, 0.0005540847778320312, 1.0728836059570312e-05, 0.62353515625, 0.027008056640625, 0.08660888671875, 0.03948974609375], "tokens": [291, 442, 458, 45, 284, 320, 446, 434, 42510, 284, 1022, 275, 319, 7124, 322, 3104, 432, 322, 802, 4906, 3112, 32, 275, 319, 275, 319, 477, 601, 322, 3104, 275, 569, 284, 562, 629, 3104, 346, 301, 291, 442, 1334, 45, 284, 320, 446, 1022, 275, 319, 7124, 322, 1550, 13802]}
{"line_number": 476, "line_type": "original", "code": "            str.getChars(0, strLen, buffer, len);", "entropy": 1.02734375, "is_bug_line": false, "sus_score": 0.5473799109458923, "per_token_entropy": [7.1875, 7.47265625, 0.170166015625, 0.1248779296875, 0.00021219253540039062, 0.0057220458984375, 0.10150146484375, 0.0006532669067382812, 0.034149169921875, 0.01197052001953125, 0.00577545166015625, 0.1661376953125, 0.003482818603515625, 0.10211181640625, 0.0196533203125], "tokens": [1468, 596, 32, 371, 16364, 26, 34, 30, 596, 5745, 30, 3112, 30, 2069, 293]}
{"line_number": 476, "line_type": "generated", "code": "\n            size += strLen;\n        }\n        return this;\n    }\n\n    /**\n     * Appends part of a string buffer to this string builder.\n     * Appending null will call {@link #appendNull()}.\n     *\n     * @param str  the", "entropy": 0.00762939453125, "is_bug_line": false, "sus_score": 0.5473799109458923, "per_token_entropy": [0.0155792236328125, 0.0016965866088867188, 0.00188446044921875, 0.001064300537109375, 0.0021724700927734375, 0.00018346309661865234, 0.00644683837890625, 3.695487976074219e-05, 0.005035400390625, 7.18832015991211e-05, 6.270408630371094e-05, 1.1563301086425781e-05, 0.0032825469970703125, 7.331371307373047e-05, 0.047576904296875, 0.0108795166015625, 0.0007586479187011719, 1.3947486877441406e-05, 0.0139312744140625, 5.364418029785156e-05, 0.2215576171875, 0.0002206563949584961, 0.0004906654357910156, 0.0097198486328125, 0.00771331787109375, 0.0016832351684570312, 0.0037059783935546875, 0.00033664703369140625, 0.0012445449829101562, 0.0003867149353027344, 0.0007338523864746094, 8.58306884765625e-06, 0.004119873046875, 8.821487426757812e-06, 0.0015554428100585938, 0.00043392181396484375, 0.0003566741943359375, 0.00022935867309570312, 4.0411949157714844e-05, 9.548664093017578e-05, 0.0001322031021118164, 0.0002791881561279297, 0.0007271766662597656, 0.0006074905395507812, 9.5367431640625e-06, 0.0185546875, 2.1457672119140625e-05, 9.226799011230469e-05, 4.661083221435547e-05, 0.0083770751953125, 0.002254486083984375, 7.522106170654297e-05], "tokens": [324, 1334, 1454, 596, 5745, 45, 291, 320, 291, 442, 458, 45, 284, 320, 446, 1022, 275, 319, 1995, 1494, 1742, 432, 312, 802, 3112, 372, 458, 802, 4906, 32, 275, 319, 1995, 4013, 744, 1098, 1476, 3088, 1204, 588, 1689, 1883, 41264, 275, 319, 275, 319, 477, 753, 596, 225, 322]}
{"line_number": 1674, "line_type": "original", "code": "            if (thisBuf[i] == ch) {", "entropy": 1.0712890625, "is_bug_line": false, "sus_score": 0.5415567755699158, "per_token_entropy": [6.58984375, 1.5615234375, 0.048614501953125, 3.4375, 0.07940673828125, 0.062744140625, 0.73486328125, 0.049285888671875, 0.034454345703125, 0.0401611328125, 0.0135650634765625, 0.2080078125], "tokens": [1468, 415, 308, 578, 7346, 77, 91, 79, 610, 663, 27, 301]}
{"line_number": 1674, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Searches the string builder to find the first reference to the specified string.\n     * \n     * @param str  the string to find\n     * @return the first index of the string, or -1 if not found\n    ", "entropy": 0.066162109375, "is_bug_line": false, "sus_score": 0.5415567755699158, "per_token_entropy": [0.65869140625, 0.80322265625, 0.268798828125, 0.09332275390625, 0.004947662353515625, 3.2782554626464844e-05, 0.0064697265625, 1.1920928955078125e-07, 5.066394805908203e-05, 0.0115509033203125, 0.04052734375, 0.00036787986755371094, 0.00847625732421875, 0.0004429817199707031, 0.000812530517578125, 0.033843994140625, 0.007045745849609375, 0.013916015625, 0.0165252685546875, 0.00669097900390625, 0.08929443359375, 0.023101806640625, 0.0031642913818359375, 5.364418029785156e-06, 0.159423828125, 4.172325134277344e-06, 0.0007944107055664062, 8.630752563476562e-05, 0.0010747909545898438, 0.00513458251953125, 0.0006885528564453125, 0.045654296875, 0.0298309326171875, 0.006458282470703125, 0.7666015625, 1.6689300537109375e-06, 2.0265579223632812e-05, 0.0294189453125, 0.003200531005859375, 0.198486328125, 0.00026726722717285156, 0.02362060546875, 0.0009918212890625, 0.060302734375, 0.0031280517578125, 0.0099334716796875, 0.0016012191772460938, 8.225440979003906e-06, 0.00036215782165527344, 0.0008969306945800781, 0.00011742115020751953, 0.001750946044921875], "tokens": [284, 320, 446, 1022, 275, 319, 358, 1928, 2907, 322, 802, 4906, 372, 2290, 322, 1932, 4121, 372, 322, 3191, 802, 32, 275, 319, 5384, 319, 477, 753, 596, 225, 322, 802, 372, 2290, 275, 319, 477, 601, 322, 1932, 1650, 432, 322, 802, 30, 556, 429, 35, 415, 646, 2431, 275]}
{"line_number": 472, "line_type": "original", "code": "        int strLen = str.length();", "entropy": 1.9580078125, "is_bug_line": false, "sus_score": 0.5281597375869751, "per_token_entropy": [6.27734375, 3.712890625, 5.6640625, 1.697265625, 0.07537841796875, 0.1439208984375, 0.0213775634765625, 0.00936126708984375, 0.0191650390625], "tokens": [351, 629, 596, 5745, 280, 596, 32, 1322, 473]}
{"line_number": 472, "line_type": "generated", "code": "\n        if (strLen > 0) {\n            int len = length();\n            ensureCapacity(len + strLen);\n            str.getChars(0, strLen, buffer, len);\n            size += strLen;\n        }\n        return this;", "entropy": 0.00311279296875, "is_bug_line": false, "sus_score": 0.5281597375869751, "per_token_entropy": [0.0260772705078125, 0.025634765625, 0.00020015239715576172, 0.001590728759765625, 0.001163482666015625, 0.005390167236328125, 0.0001837015151977539, 3.790855407714844e-05, 0.00037288665771484375, 0.001552581787109375, 0.003040313720703125, 0.0246734619140625, 0.00478363037109375, 0.0001323223114013672, 0.001739501953125, 0.00019693374633789062, 0.0021305084228515625, 0.00423431396484375, 4.124641418457031e-05, 0.00012934207916259766, 0.0012378692626953125, 0.00011336803436279297, 0.0002703666687011719, 0.002323150634765625, 0.0002067089080810547, 0.006855010986328125, 0.023895263671875, 0.0003044605255126953, 0.00011491775512695312, 0.00011789798736572266, 1.6570091247558594e-05, 0.004459381103515625, 4.5180320739746094e-05, 0.0016679763793945312, 0.0006127357482910156, 0.0001785755157470703, 0.00034737586975097656, 2.5510787963867188e-05, 0.0005059242248535156, 6.604194641113281e-05, 0.0025634765625, 0.000896453857421875, 0.0007495880126953125, 0.00040268898010253906, 0.0013189315795898438, 8.749961853027344e-05, 0.0023975372314453125, 2.9802322387695312e-05, 0.006633758544921875, 7.867813110351562e-05, 4.4226646423339844e-05, 2.276897430419922e-05], "tokens": [291, 415, 308, 466, 5745, 848, 225, 34, 27, 301, 324, 629, 2069, 280, 3104, 473, 324, 7279, 13133, 26, 1657, 474, 596, 5745, 293, 324, 596, 32, 371, 16364, 26, 34, 30, 596, 5745, 30, 3112, 30, 2069, 293, 324, 1334, 1454, 596, 5745, 45, 291, 320, 291, 442, 458, 45]}
{"line_number": 469, "line_type": "original", "code": "        if (str == null) {", "entropy": 1.57421875, "is_bug_line": false, "sus_score": 0.5160292983055115, "per_token_entropy": [6.5, 5.4765625, 0.0161895751953125, 0.489501953125, 0.053985595703125, 0.0052947998046875, 0.0219573974609375, 0.0290985107421875], "tokens": [351, 415, 308, 466, 610, 744, 27, 301]}
{"line_number": 469, "line_type": "generated", "code": "\n            return appendNull();\n        }\n        int strLen = str.length();\n        if (strLen > 0) {\n            int len = length();\n            ensureCapacity(len + strLen);\n            str.getChars(0, strLen,", "entropy": 0.023681640625, "is_bug_line": false, "sus_score": 0.5160292983055115, "per_token_entropy": [0.4541015625, 0.025360107421875, 0.0875244140625, 0.006649017333984375, 0.001781463623046875, 0.049285888671875, 0.0006508827209472656, 0.147705078125, 0.25634765625, 0.0953369140625, 0.0002636909484863281, 0.0001430511474609375, 0.001312255859375, 6.818771362304688e-05, 1.3470649719238281e-05, 0.0003085136413574219, 0.003871917724609375, 0.00907135009765625, 8.428096771240234e-05, 0.00018703937530517578, 0.0007505416870117188, 0.0151519775390625, 8.118152618408203e-05, 7.474422454833984e-05, 0.0002624988555908203, 0.0019130706787109375, 0.01151275634765625, 0.006557464599609375, 0.0025920867919921875, 8.368492126464844e-05, 0.00104522705078125, 0.00014066696166992188, 0.002811431884765625, 0.00571441650390625, 3.707408905029297e-05, 0.00011038780212402344, 0.0006785392761230469, 0.0001100301742553711, 0.00023508071899414062, 0.0017786026000976562, 0.0002052783966064453, 0.01163482666015625, 0.0235748291015625, 0.00022232532501220703, 9.632110595703125e-05, 0.00012683868408203125, 1.3470649719238281e-05, 0.0023212432861328125, 4.267692565917969e-05, 0.001171112060546875, 0.0002586841583251953, 0.00014102458953857422], "tokens": [324, 442, 5489, 1883, 473, 291, 320, 291, 629, 596, 5745, 280, 596, 32, 1322, 473, 291, 415, 308, 466, 5745, 848, 225, 34, 27, 301, 324, 629, 2069, 280, 3104, 473, 324, 7279, 13133, 26, 1657, 474, 596, 5745, 293, 324, 596, 32, 371, 16364, 26, 34, 30, 596, 5745, 30]}
{"line_number": 1675, "line_type": "original", "code": "                return true;", "entropy": 5.10546875, "is_bug_line": false, "sus_score": 0.5157694220542908, "per_token_entropy": [8.171875, 1.7802734375, 10.46875, 0.00672149658203125], "tokens": [2071, 442, 861, 45]}
{"line_number": 1675, "line_type": "generated", "code": "\n        return -1;\n    }\n\n    /**\n     * Searches the string builder to find the first reference to the specified string.\n     * \n     * @param str  the string to find\n     * @return the first index of the string, or -", "entropy": 0.0604248046875, "is_bug_line": false, "sus_score": 0.5157694220542908, "per_token_entropy": [0.85986328125, 0.46923828125, 0.049774169921875, 0.0004286766052246094, 0.001804351806640625, 0.01335906982421875, 3.790855407714844e-05, 0.047271728515625, 0.0980224609375, 0.000274658203125, 9.119510650634766e-05, 0.0028476715087890625, 1.1920928955078125e-07, 0.00010371208190917969, 0.008026123046875, 0.033172607421875, 0.000370025634765625, 0.006351470947265625, 0.0003631114959716797, 0.0005507469177246094, 0.119384765625, 0.00537872314453125, 0.0112762451171875, 0.02276611328125, 0.00745391845703125, 0.058807373046875, 0.0186309814453125, 0.0027942657470703125, 3.2186508178710938e-06, 0.110595703125, 2.7418136596679688e-06, 0.0004930496215820312, 6.341934204101562e-05, 0.001010894775390625, 0.00505828857421875, 0.0007700920104980469, 0.036346435546875, 0.0308685302734375, 0.006328582763671875, 0.77490234375, 1.1920928955078125e-06, 5.054473876953125e-05, 0.01318359375, 0.0030994415283203125, 0.2310791015625, 0.0002543926239013672, 0.019256591796875, 0.000888824462890625, 0.058135986328125, 0.0027828216552734375, 0.00830078125, 0.0013799667358398438], "tokens": [291, 442, 429, 35, 45, 284, 320, 446, 1022, 275, 319, 358, 1928, 2907, 322, 802, 4906, 372, 2290, 322, 1932, 4121, 372, 322, 3191, 802, 32, 275, 319, 5384, 319, 477, 753, 596, 225, 322, 802, 372, 2290, 275, 319, 477, 601, 322, 1932, 1650, 432, 322, 802, 30, 556, 429]}
{"line_number": 473, "line_type": "original", "code": "        if (strLen > 0) {", "entropy": 1.4345703125, "is_bug_line": false, "sus_score": 0.5129184126853943, "per_token_entropy": [7.62109375, 4.11328125, 0.021148681640625, 0.308349609375, 0.8662109375, 0.343505859375, 0.6142578125, 0.378662109375, 0.052703857421875, 0.0236053466796875], "tokens": [351, 415, 308, 466, 5745, 848, 225, 34, 27, 301]}
{"line_number": 473, "line_type": "generated", "code": "\n            int len = length();\n            ensureCapacity(len + strLen);\n            str.getChars(0, strLen, buffer, len);\n            size += strLen;\n        }\n        return this;\n    }\n\n    /**\n     * Appends part of", "entropy": 0.01363372802734375, "is_bug_line": false, "sus_score": 0.5129184126853943, "per_token_entropy": [0.1514892578125, 0.06536865234375, 0.01004791259765625, 0.00021076202392578125, 0.005199432373046875, 0.0009441375732421875, 0.002857208251953125, 0.0203857421875, 3.445148468017578e-05, 0.00025653839111328125, 0.0013580322265625, 0.00022220611572265625, 0.001163482666015625, 0.0034542083740234375, 0.0002918243408203125, 0.00792694091796875, 0.040069580078125, 0.0003902912139892578, 0.00014722347259521484, 0.00014674663543701172, 2.205371856689453e-05, 0.005779266357421875, 4.875659942626953e-05, 0.0022830963134765625, 0.0013294219970703125, 0.00020420551300048828, 0.0007100105285644531, 4.5180320739746094e-05, 0.000640869140625, 0.00010347366333007812, 0.00360107421875, 0.0006699562072753906, 0.0010080337524414062, 0.0007519721984863281, 0.0016803741455078125, 0.00021982192993164062, 0.0281524658203125, 0.00038743019104003906, 0.006458282470703125, 6.794929504394531e-05, 4.839897155761719e-05, 2.110004425048828e-05, 0.0041961669921875, 7.355213165283203e-05, 0.05419921875, 0.012847900390625, 0.000995635986328125, 1.2755393981933594e-05, 0.0153961181640625, 6.341934204101562e-05, 0.254638671875, 0.000270843505859375], "tokens": [324, 629, 2069, 280, 3104, 473, 324, 7279, 13133, 26, 1657, 474, 596, 5745, 293, 324, 596, 32, 371, 16364, 26, 34, 30, 596, 5745, 30, 3112, 30, 2069, 293, 324, 1334, 1454, 596, 5745, 45, 291, 320, 291, 442, 458, 45, 284, 320, 446, 1022, 275, 319, 1995, 1494, 1742, 432]}
{"line_number": 1202, "line_type": "original", "code": "        int len = (str == null ? 0 : str.length());", "entropy": 1.166015625, "is_bug_line": false, "sus_score": 0.5060195922851562, "per_token_entropy": [4.55078125, 3.1953125, 2.802734375, 0.08184814453125, 2.943359375, 5.00390625, 0.0218353271484375, 0.0004265308380126953, 0.00421905517578125, 0.01174163818359375, 0.0005364418029785156, 0.0011205673217773438, 0.018585205078125, 0.0011806488037109375, 0.0007338523864746094, 0.023773193359375], "tokens": [351, 629, 2069, 280, 308, 466, 610, 744, 1018, 225, 34, 499, 596, 32, 1322, 1035]}
{"line_number": 1202, "line_type": "generated", "code": "\n    private void deleteImpl(int startIndex, int endIndex, int removeLen) {\n        if (startIndex < 0 || startIndex > size || endIndex < 0 || endIndex > size) {\n            throw new IndexOutOfBoundsException();\n        }\n        if", "entropy": 0.1763916015625, "is_bug_line": false, "sus_score": 0.5060195922851562, "per_token_entropy": [0.1429443359375, 0.54248046875, 0.14208984375, 0.0249481201171875, 0.0014820098876953125, 0.0094146728515625, 0.039794921875, 0.0012607574462890625, 0.00016629695892333984, 0.0031147003173828125, 0.0002491474151611328, 5.602836608886719e-06, 0.0003848075866699219, 0.0072174072265625, 0.007232666015625, 0.0002510547637939453, 0.7861328125, 0.06365966796875, 0.2177734375, 0.65673828125, 0.0528564453125, 0.425048828125, 0.2352294921875, 0.047088623046875, 5.1975250244140625e-05, 1.099609375, 0.31689453125, 0.17724609375, 0.31982421875, 0.253173828125, 0.50732421875, 6.318092346191406e-06, 0.206787109375, 0.13525390625, 0.0004703998565673828, 0.0263671875, 0.057159423828125, 7.915496826171875e-05, 0.000736236572265625, 0.0020351409912109375, 1.08984375, 0.009307861328125, 0.0821533203125, 0.041961669921875, 0.0012989044189453125, 0.39599609375, 4.601478576660156e-05, 0.50732421875, 0.0421142578125, 2.6106834411621094e-05, 0.2481689453125, 0.240234375], "tokens": [284, 945, 763, 3066, 3482, 26, 410, 23529, 30, 629, 943, 1284, 30, 629, 3345, 5745, 27, 301, 291, 415, 308, 42335, 333, 225, 34, 1276, 23529, 848, 1334, 1276, 943, 1284, 333, 225, 34, 1276, 943, 1284, 848, 1334, 27, 301, 324, 1422, 537, 6422, 35821, 473, 291, 320, 291, 415]}
{"line_number": 1206, "line_type": "original", "code": "                deleteImpl(index, index + len, len);", "entropy": 1.609375, "is_bug_line": false, "sus_score": 0.5054762959480286, "per_token_entropy": [6.32421875, 6.25390625, 0.1297607421875, 0.022247314453125, 3.7265625, 0.2490234375, 0.18798828125, 0.05078125, 1.8720703125, 0.07373046875, 0.400390625, 0.024993896484375], "tokens": [2071, 3066, 3482, 26, 1055, 30, 1650, 474, 2069, 30, 2069, 293]}
{"line_number": 1206, "line_type": "generated", "code": "\n            if (insertLen > 0) {\n                System.arraycopy(buffer, startIndex, buffer, endIndex + insertLen, size - endIndex);\n                System.arraycopy(insertStr.toCharArray(), 0, buffer, startIndex, insertLen);", "entropy": 0.2198486328125, "is_bug_line": false, "sus_score": 0.5054762959480286, "per_token_entropy": [0.833984375, 0.83642578125, 0.008270263671875, 0.60546875, 0.8271484375, 0.20166015625, 0.12457275390625, 0.0007586479187011719, 0.058258056640625, 0.00830841064453125, 0.2476806640625, 1.2607421875, 0.002227783203125, 3.4928321838378906e-05, 0.0028667449951171875, 0.0830078125, 0.00039267539978027344, 1.7451171875, 0.8466796875, 0.104248046875, 4.57763671875e-05, 0.365234375, 0.00010395050048828125, 1.025390625, 0.007732391357421875, 0.0004718303680419922, 0.003040313720703125, 0.2435302734375, 0.001911163330078125, 0.027008056640625, 1.7881393432617188e-06, 0.00727081298828125, 0.6943359375, 0.865234375, 0.00013625621795654297, 2.0265579223632812e-06, 0.0005450248718261719, 0.005275726318359375, 0.00017940998077392578, 0.32861328125, 0.0289764404296875, 9.632110595703125e-05, 0.002704620361328125, 3.5881996154785156e-05, 8.857250213623047e-05, 0.0030117034912109375, 2.9921531677246094e-05, 0.0107421875, 0.004306793212890625, 0.001041412353515625, 0.00788116455078125, 0.0004458427429199219], "tokens": [324, 415, 308, 3215, 5745, 848, 225, 34, 27, 301, 400, 1171, 32, 40863, 26, 2668, 30, 23529, 30, 3112, 30, 943, 1284, 474, 5551, 5745, 30, 1334, 429, 943, 1284, 293, 400, 1171, 32, 40863, 26, 3215, 2007, 32, 44585, 1026, 225, 34, 30, 3112, 30, 23529, 30, 5551, 5745, 293]}
{"line_number": 1204, "line_type": "original", "code": "            int index = indexOf(str, 0);", "entropy": 1.8623046875, "is_bug_line": false, "sus_score": 0.5025063157081604, "per_token_entropy": [6.27734375, 2.642578125, 3.982421875, 0.084228515625, 4.15234375, 0.1845703125, 1.8828125, 0.0301055908203125, 1.1953125, 0.0025482177734375, 0.05499267578125], "tokens": [1468, 629, 1650, 280, 40635, 26, 466, 30, 225, 34, 293]}
{"line_number": 1204, "line_type": "generated", "code": "\n        if (insertStr == null) {\n            if (startIndex > 0) {\n                System.arraycopy(buffer, startIndex, buffer, 0, size - startIndex);\n            }\n            size = newSize;\n        } else {\n            if (new", "entropy": 0.235595703125, "is_bug_line": false, "sus_score": 0.5025063157081604, "per_token_entropy": [0.1806640625, 0.6396484375, 0.014251708984375, 1.0146484375, 0.5703125, 0.75048828125, 0.0027484893798828125, 0.08416748046875, 0.002178192138671875, 0.11419677734375, 1.2392578125, 0.012115478515625, 1.5751953125, 1.0146484375, 0.8662109375, 0.0003619194030761719, 0.1099853515625, 0.0029964447021484375, 0.03509521484375, 0.06298828125, 0.0018520355224609375, 6.198883056640625e-06, 0.0013628005981445312, 0.0013647079467773438, 0.00010943412780761719, 0.1156005859375, 0.01641845703125, 0.034088134765625, 1.7642974853515625e-05, 0.2783203125, 0.000339508056640625, 5.030632019042969e-05, 0.446533203125, 0.003314971923828125, 0.144287109375, 0.0012540817260742188, 0.07293701171875, 0.0001366138458251953, 0.20703125, 0.53857421875, 0.0233154296875, 0.2054443359375, 2.86102294921875e-06, 0.026702880859375, 0.20751953125, 0.0015354156494140625, 0.01142120361328125, 0.2744140625, 0.038116455078125, 0.340576171875, 0.01537322998046875, 0.95263671875], "tokens": [291, 415, 308, 3215, 2007, 610, 744, 27, 301, 324, 415, 308, 42335, 848, 225, 34, 27, 301, 400, 1171, 32, 40863, 26, 2668, 30, 23529, 30, 3112, 30, 225, 34, 30, 1334, 429, 23529, 293, 324, 320, 324, 1334, 280, 537, 1250, 45, 291, 320, 813, 301, 324, 415, 308, 890]}
{"line_number": 1672, "line_type": "original", "code": "        char[] thisBuf = buffer;", "entropy": 1.2802734375, "is_bug_line": false, "sus_score": 0.491065114736557, "per_token_entropy": [2.080078125, 6.390625, 0.7685546875, 0.341064453125, 0.060638427734375, 0.01080322265625, 0.5634765625, 0.0251312255859375], "tokens": [351, 1351, 1178, 458, 7346, 280, 3112, 45]}
{"line_number": 1672, "line_type": "generated", "code": "\n     */\n    public int indexOf(char ch, int startIndex) {", "entropy": 0.1727294921875, "is_bug_line": false, "sus_score": 0.491065114736557, "per_token_entropy": [0.99658203125, 1.349609375, 0.00799560546875, 0.00812530517578125, 0.0005583763122558594, 3.516674041748047e-05, 0.0003726482391357422, 0.016632080078125, 0.00013065338134765625, 0.000171661376953125, 0.0003764629364013672, 0.00023114681243896484, 0.0007939338684082031, 0.036376953125], "tokens": [275, 569, 284, 562, 629, 40635, 26, 1594, 663, 30, 629, 23529, 27, 301]}
{"line_number": 1203, "line_type": "original", "code": "        if (len > 0) {", "entropy": 1.45703125, "is_bug_line": false, "sus_score": 0.48868075013160706, "per_token_entropy": [4.55859375, 0.7705078125, 0.0616455078125, 5.75390625, 1.646484375, 0.0589599609375, 0.003391265869140625, 0.183349609375, 0.07879638671875], "tokens": [351, 415, 308, 1657, 848, 225, 34, 27, 301]}
{"line_number": 1203, "line_type": "generated", "code": "\n        if (insertStr == null) {\n            if (endIndex > startIndex) {\n                System.arraycopy(buffer, endIndex, buffer, startIndex, size - endIndex);\n            }\n            size -= removeLen;\n        } else {\n            if (", "entropy": 0.202392578125, "is_bug_line": false, "sus_score": 0.48868075013160706, "per_token_entropy": [0.262939453125, 0.8623046875, 0.045379638671875, 0.64599609375, 0.378173828125, 0.397705078125, 0.00423431396484375, 0.08984375, 0.0017337799072265625, 0.099365234375, 1.0625, 0.046844482421875, 1.1259765625, 0.005832672119140625, 0.96923828125, 1.060546875, 0.10467529296875, 0.0004935264587402344, 0.080322265625, 0.515625, 0.0035343170166015625, 7.081031799316406e-05, 0.0028896331787109375, 0.0045928955078125, 0.00011777877807617188, 0.07366943359375, 1.1920928955078125e-05, 0.00101470947265625, 0.01219940185546875, 2.3603439331054688e-05, 0.0006465911865234375, 7.677078247070312e-05, 0.08587646484375, 0.0015211105346679688, 0.005245208740234375, 9.059906005859375e-06, 0.0029773712158203125, 1.1171875, 9.441375732421875e-05, 0.350341796875, 0.1778564453125, 0.0256500244140625, 0.00807952880859375, 1.0728836059570312e-06, 0.0011081695556640625, 0.1402587890625, 0.0009665489196777344, 0.004444122314453125, 0.354248046875, 0.040008544921875, 0.319580078125, 0.0261383056640625], "tokens": [291, 415, 308, 3215, 2007, 610, 744, 27, 301, 324, 415, 308, 416, 1284, 848, 23529, 27, 301, 400, 1171, 32, 40863, 26, 2668, 30, 943, 1284, 30, 3112, 30, 23529, 30, 1334, 429, 943, 1284, 293, 324, 320, 324, 1334, 5912, 3345, 5745, 45, 291, 320, 813, 301, 324, 415, 308]}
{"line_number": 1205, "line_type": "original", "code": "            if (index >= 0) {", "entropy": 2.056640625, "is_bug_line": false, "sus_score": 0.48710840940475464, "per_token_entropy": [4.9765625, 1.4541015625, 0.021575927734375, 5.4609375, 3.966796875, 1.955078125, 0.00353240966796875, 0.45654296875, 0.2225341796875], "tokens": [1468, 415, 308, 1055, 2377, 225, 34, 27, 301]}
{"line_number": 1205, "line_type": "generated", "code": "\n            buffer = Arrays.copyOf(buffer, newSize);\n        }\n        if (insertStr!= null) {\n            buffer[startIndex] = insertStr.charAt(0);\n            if (insertLen > 1) {\n                System.arraycopy(insert", "entropy": 0.2388916015625, "is_bug_line": false, "sus_score": 0.48710840940475464, "per_token_entropy": [0.2978515625, 2.494140625, 0.358642578125, 0.323974609375, 0.0070343017578125, 0.006618499755859375, 0.1258544921875, 0.005584716796875, 0.0011014938354492188, 0.0280303955078125, 0.0007038116455078125, 0.009918212890625, 0.513671875, 0.00489044189453125, 0.5810546875, 0.22216796875, 0.003997802734375, 0.06353759765625, 1.0537109375, 0.0261993408203125, 0.0003254413604736328, 0.192626953125, 0.0015459060668945312, 0.38232421875, 0.96630859375, 0.338134765625, 0.1173095703125, 0.169189453125, 0.0007548332214355469, 0.046630859375, 0.004913330078125, 1.2001953125, 0.2283935546875, 0.0015392303466796875, 0.0200958251953125, 0.0011167526245117188, 0.66796875, 0.748046875, 0.0027313232421875, 0.0478515625, 0.01403045654296875, 0.1988525390625, 0.0017766952514648438, 0.04742431640625, 0.007526397705078125, 0.0018262863159179688, 0.1790771484375, 0.67138671875, 0.0050811767578125, 3.409385681152344e-05, 0.002147674560546875, 0.02545166015625], "tokens": [324, 3112, 280, 14473, 32, 36981, 26, 2668, 30, 537, 1250, 293, 291, 320, 291, 415, 308, 3215, 2007, 863, 744, 27, 301, 324, 3112, 77, 42335, 79, 280, 5551, 2007, 32, 15611, 26, 34, 293, 324, 415, 308, 3215, 5745, 848, 225, 35, 27, 301, 400, 1171, 32, 40863, 26, 3215]}
{"line_number": 1778, "line_type": "original", "code": "        for (int i = startIndex; i < len; i++) {", "entropy": 0.455810546875, "is_bug_line": false, "sus_score": 0.4728168845176697, "per_token_entropy": [3.7109375, 1.9423828125, 0.051727294921875, 0.01812744140625, 0.172607421875, 0.00583648681640625, 0.43115234375, 0.082275390625, 0.01148223876953125, 0.054901123046875, 0.276611328125, 0.0167388916015625, 0.00952911376953125, 0.007373809814453125, 0.042449951171875], "tokens": [351, 436, 308, 410, 595, 280, 23529, 45, 595, 333, 2069, 45, 595, 1987, 301]}
{"line_number": 1778, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Searches the string builder to find the last reference to the specified character.\n     * \n     * @param ch  the character to find\n     * @return the last index of the character, or -1 if not found\n    ", "entropy": 0.0692138671875, "is_bug_line": false, "sus_score": 0.4728168845176697, "per_token_entropy": [0.6904296875, 0.218994140625, 0.268798828125, 0.08062744140625, 0.01389312744140625, 8.165836334228516e-05, 0.06884765625, 3.337860107421875e-06, 0.00010514259338378906, 0.011627197265625, 0.01739501953125, 0.002567291259765625, 0.5185546875, 0.003810882568359375, 0.0037326812744140625, 0.18701171875, 0.2293701171875, 0.0036144256591796875, 0.04864501953125, 0.068603515625, 0.277587890625, 0.00908660888671875, 0.0034923553466796875, 1.2278556823730469e-05, 0.377685546875, 6.67572021484375e-06, 0.0010423660278320312, 0.0005512237548828125, 0.002498626708984375, 0.011688232421875, 0.01334381103515625, 0.05706787109375, 0.002201080322265625, 0.036834716796875, 0.129638671875, 4.0531158447265625e-06, 3.337860107421875e-05, 0.0008130073547363281, 0.02252197265625, 0.1461181640625, 0.000659942626953125, 0.0136566162109375, 0.00653076171875, 0.00595855712890625, 0.00823974609375, 0.0238189697265625, 0.00341796875, 6.020069122314453e-05, 0.0008311271667480469, 0.0016937255859375, 0.00017130374908447266, 0.00496673583984375], "tokens": [284, 320, 446, 1022, 275, 319, 358, 1928, 2907, 322, 802, 4906, 372, 2290, 322, 2401, 4121, 372, 322, 3191, 5341, 32, 275, 319, 5384, 319, 477, 753, 663, 225, 322, 5341, 372, 2290, 275, 319, 477, 601, 322, 2401, 1650, 432, 322, 5341, 30, 556, 429, 35, 415, 646, 2431, 275]}
{"line_number": 125, "line_type": "original", "code": "            buffer = new char[str.length() + CAPACITY];", "entropy": 1.5615234375, "is_bug_line": false, "sus_score": 0.4672536849975586, "per_token_entropy": [7.9453125, 4.23828125, 1.4814453125, 0.1448974609375, 0.32861328125, 0.030670166015625, 3.72265625, 0.05078125, 0.01349639892578125, 0.25146484375, 0.1473388671875, 3.490234375, 0.00016558170318603516, 0.01201629638671875], "tokens": [1468, 3112, 280, 537, 1351, 77, 466, 32, 1322, 346, 474, 22954, 45134, 970]}
{"line_number": 125, "line_type": "generated", "code": "\n    /**\n     * Appends another string to this string builder.\n     *\n     * @param str  the string to append, null ignored\n     * @return this, to enable chaining\n     */\n    public StrBuilder append(String str) {\n        if (", "entropy": 0.1697998046875, "is_bug_line": false, "sus_score": 0.4672536849975586, "per_token_entropy": [0.84375, 0.4345703125, 0.0221099853515625, 6.937980651855469e-05, 0.78466796875, 7.903575897216797e-05, 1.15625, 1.6279296875, 0.263916015625, 0.040924072265625, 0.53271484375, 0.02813720703125, 0.00926971435546875, 0.0071563720703125, 5.91278076171875e-05, 0.35205078125, 1.537799835205078e-05, 0.0008592605590820312, 0.00039505958557128906, 0.035400390625, 0.0211181640625, 0.0034198760986328125, 0.0196380615234375, 0.0019550323486328125, 0.3740234375, 1.6494140625, 0.004993438720703125, 0.06854248046875, 0.0036525726318359375, 0.00015926361083984375, 3.886222839355469e-05, 0.0007176399230957031, 0.00489044189453125, 0.0029315948486328125, 0.0045166015625, 9.131431579589844e-05, 0.006031036376953125, 0.0050506591796875, 0.0640869140625, 0.0133819580078125, 0.11834716796875, 0.037567138671875, 4.291534423828125e-06, 0.00015842914581298828, 0.0022640228271484375, 0.055999755859375, 0.0002161264419555664, 0.006687164306640625, 0.0196990966796875, 0.1434326171875, 0.053192138671875, 0.0018405914306640625], "tokens": [284, 1022, 275, 319, 1995, 1494, 4674, 802, 372, 458, 802, 4906, 32, 275, 319, 275, 319, 477, 753, 596, 225, 322, 802, 372, 5489, 30, 744, 10302, 275, 319, 477, 601, 458, 30, 372, 5352, 38009, 275, 569, 284, 562, 6700, 1796, 5489, 26, 652, 596, 27, 301, 291, 415, 308]}
{"line_number": 1779, "line_type": "original", "code": "            for (int j = 0; j < strLen; j++) {", "entropy": 0.8125, "is_bug_line": false, "sus_score": 0.4642781913280487, "per_token_entropy": [7.46484375, 3.197265625, 0.04180908203125, 0.0276336669921875, 1.49609375, 0.00982666015625, 0.26513671875, 0.1446533203125, 0.07293701171875, 0.043670654296875, 0.0021762847900390625, 0.521484375, 0.300048828125, 0.032012939453125, 0.03271484375, 0.00899505615234375, 0.1485595703125], "tokens": [1468, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 596, 5745, 45, 594, 1987, 301]}
{"line_number": 1779, "line_type": "generated", "code": "\n\n    /**\n     * Searches the string builder to find the last reference to the specified character.\n     * \n     * @param ch  the character to find\n     * @return the last index of the character, or -1 if not found\n     */\n   ", "entropy": 0.075927734375, "is_bug_line": false, "sus_score": 0.4642781913280487, "per_token_entropy": [1.306640625, 0.09381103515625, 0.01030731201171875, 6.92605972290039e-05, 0.15234375, 9.894371032714844e-06, 9.66787338256836e-05, 0.0169677734375, 0.0208587646484375, 0.0021152496337890625, 0.517578125, 0.004787445068359375, 0.004825592041015625, 0.18896484375, 0.3193359375, 0.00408935546875, 0.053985595703125, 0.07098388671875, 0.283935546875, 0.00943756103515625, 0.0031261444091796875, 1.430511474609375e-05, 0.355224609375, 8.940696716308594e-06, 0.0010919570922851562, 0.00054931640625, 0.0022029876708984375, 0.011566162109375, 0.01389312744140625, 0.0570068359375, 0.0020771026611328125, 0.040802001953125, 0.10247802734375, 4.887580871582031e-06, 2.86102294921875e-05, 0.0009784698486328125, 0.0256195068359375, 0.156005859375, 0.0006127357482910156, 0.01520538330078125, 0.00662994384765625, 0.005558013916015625, 0.007171630859375, 0.028961181640625, 0.003627777099609375, 6.318092346191406e-05, 0.0007243156433105469, 0.0016412734985351562, 0.0001766681671142578, 0.00464630126953125, 0.035247802734375, 0.0037136077880859375], "tokens": [446, 1022, 275, 319, 358, 1928, 2907, 322, 802, 4906, 372, 2290, 322, 2401, 4121, 372, 322, 3191, 5341, 32, 275, 319, 5384, 319, 477, 753, 663, 225, 322, 5341, 372, 2290, 275, 319, 477, 601, 322, 2401, 1650, 432, 322, 5341, 30, 556, 429, 35, 415, 646, 2431, 275, 569, 284]}
{"line_number": 1780, "line_type": "original", "code": "                if (str.charAt(j) != thisBuf[i + j]) {", "entropy": 1.3173828125, "is_bug_line": false, "sus_score": 0.46032431721687317, "per_token_entropy": [9.09375, 2.43359375, 0.071533203125, 2.943359375, 1.615234375, 2.576171875, 0.01105499267578125, 2.25390625, 0.06573486328125, 0.4306640625, 1.46875, 0.036895751953125, 0.00493621826171875, 0.1993408203125, 0.2998046875, 0.0089874267578125, 0.037689208984375, 0.1734619140625], "tokens": [2071, 415, 308, 466, 32, 15611, 26, 92, 27, 863, 458, 7346, 77, 91, 474, 594, 1130, 301]}
{"line_number": 1780, "line_type": "generated", "code": "\n    /**\n     * Searches the string builder for the first occurrence of the specified character.\n     * <p>\n     * This method uses {@link String#indexOf(int)} to perform the search.\n     * \n     * @param ch  the character", "entropy": 0.265380859375, "is_bug_line": false, "sus_score": 0.46032431721687317, "per_token_entropy": [0.9951171875, 0.378173828125, 0.023223876953125, 0.00010824203491210938, 0.322265625, 1.9788742065429688e-05, 9.870529174804688e-05, 0.0240631103515625, 0.0262908935546875, 0.0021991729736328125, 1.40625, 0.227294921875, 0.95166015625, 1.55078125, 0.005641937255859375, 0.30078125, 0.0372314453125, 0.61474609375, 0.252197265625, 0.01270294189453125, 0.0001366138458251953, 0.943359375, 0.00039839744567871094, 0.0004930496215820312, 0.0006456375122070312, 1.4424324035644531e-05, 0.87255859375, 0.0307159423828125, 0.0625, 0.021026611328125, 0.09033203125, 0.462646484375, 0.0093536376953125, 0.07403564453125, 0.0021953582763671875, 0.291259765625, 0.343505859375, 1.6904296875, 1.1591796875, 0.00030493736267089844, 0.00814056396484375, 0.145263671875, 0.01512908935546875, 4.458427429199219e-05, 0.3203125, 2.574920654296875e-05, 0.000713348388671875, 0.002838134765625, 0.052398681640625, 0.020721435546875, 0.0160980224609375, 0.04046630859375], "tokens": [284, 1022, 275, 319, 358, 1928, 2907, 322, 802, 4906, 436, 322, 1932, 35361, 432, 322, 3191, 5341, 32, 275, 319, 333, 98, 48, 275, 319, 1348, 1411, 5251, 3088, 1204, 892, 21, 7142, 26, 410, 4370, 372, 4436, 322, 3233, 32, 275, 319, 5384, 319, 477, 753, 663, 225, 322, 5341]}
{"line_number": 1209, "line_type": "original", "code": "        return this;", "entropy": 2.345703125, "is_bug_line": false, "sus_score": 0.44454225897789, "per_token_entropy": [4.03515625, 5.09765625, 0.247314453125, 0.002376556396484375], "tokens": [351, 442, 458, 45]}
{"line_number": 1209, "line_type": "generated", "code": "\n        if (insertLen!= 0) {\n            if (insertStr!= null) {\n                insertStr.getChars(0, insertLen, buffer, startIndex);\n            } else {\n                Arrays.fill(buffer, startIndex, startIndex + insertLen", "entropy": 0.155517578125, "is_bug_line": false, "sus_score": 0.44454225897789, "per_token_entropy": [0.55615234375, 0.8515625, 0.007110595703125, 0.1131591796875, 0.97509765625, 1.498046875, 0.084228515625, 0.0004315376281738281, 0.0406494140625, 0.0008482933044433594, 0.043548583984375, 1.01953125, 0.0059356689453125, 0.028900146484375, 0.1656494140625, 0.477294921875, 0.0009489059448242188, 0.01873779296875, 0.0005240440368652344, 0.0159454345703125, 0.529296875, 0.462158203125, 0.00897979736328125, 0.0004897117614746094, 1.239776611328125e-05, 0.0001327991485595703, 0.072021484375, 5.447864532470703e-05, 0.0017633438110351562, 0.01287078857421875, 0.0005168914794921875, 0.0038051605224609375, 5.710124969482422e-05, 0.0325927734375, 0.0009655952453613281, 0.04425048828125, 8.869171142578125e-05, 0.1884765625, 0.053955078125, 0.07696533203125, 0.67431640625, 0.0004591941833496094, 3.4570693969726562e-06, 0.00016927719116210938, 0.0007443428039550781, 1.1801719665527344e-05, 0.00330352783203125, 0.0002353191375732422, 0.01000213623046875, 0.0003497600555419922, 0.0037097930908203125, 0.0006937980651855469], "tokens": [291, 415, 308, 3215, 5745, 863, 225, 34, 27, 301, 324, 415, 308, 3215, 2007, 863, 744, 27, 301, 400, 5551, 2007, 32, 371, 16364, 26, 34, 30, 5551, 5745, 30, 3112, 30, 23529, 293, 324, 320, 813, 301, 400, 14473, 32, 4157, 26, 2668, 30, 23529, 30, 23529, 474, 5551, 5745]}
