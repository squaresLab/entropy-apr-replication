{"line_number": 193, "line_type": "original", "code": "                    if (dec == null", "entropy": 2.31640625, "is_bug_line": false, "sus_score": 0.5185741186141968, "per_token_entropy": [7.22265625, 2.513671875, 0.56298828125, 3.56640625, 0.033599853515625, 0.0007181167602539062], "tokens": [4696, 415, 308, 6114, 610, 744]}
{"line_number": 193, "line_type": "generated", "code": "\n                if (expPos > 0) {\n                    exp = val.substring(expPos + 1, val.length() - 1);\n                } else {\n                    exp = null;\n                }\n                //if the number is of the form ", "entropy": 0.361083984375, "is_bug_line": false, "sus_score": 0.5185741186141968, "per_token_entropy": [1.244140625, 1.498046875, 0.5927734375, 0.467041015625, 1.5625, 0.33203125, 0.568359375, 0.08514404296875, 0.50341796875, 0.01105499267578125, 0.0723876953125, 0.215576171875, 0.0007476806640625, 0.006229400634765625, 2.110004425048828e-05, 4.5299530029296875e-06, 9.036064147949219e-05, 0.00020623207092285156, 7.76052474975586e-05, 0.00827789306640625, 2.8848648071289062e-05, 3.612041473388672e-05, 0.053863525390625, 0.0216217041015625, 0.0006036758422851562, 0.00028324127197265625, 0.01019287109375, 0.00012767314910888672, 0.001506805419921875, 1.8596649169921875e-05, 0.0008692741394042969, 0.15478515625, 0.00042629241943359375, 0.2509765625, 0.03466796875, 0.03375244140625, 0.1375732421875, 0.0005135536193847656, 0.394287109375, 0.00020766258239746094, 0.01064300537109375, 0.0005116462707519531, 0.59375, 1.9013671875, 2.720703125, 1.78515625, 0.67724609375, 0.84033203125, 1.482421875, 0.083984375, 0.006862640380859375, 0.419921875], "tokens": [400, 415, 308, 2832, 2996, 848, 225, 34, 27, 301, 528, 2910, 280, 909, 32, 8723, 26, 2832, 2996, 474, 225, 35, 30, 909, 32, 1322, 346, 429, 225, 35, 293, 400, 320, 813, 301, 528, 2910, 280, 744, 45, 400, 320, 400, 434, 325, 322, 1451, 438, 432, 322, 2234, 225]}
{"line_number": 190, "line_type": "original", "code": "            switch (lastChar) {", "entropy": 1.294921875, "is_bug_line": false, "sus_score": 0.493012398481369, "per_token_entropy": [6.08203125, 2.75390625, 0.08367919921875, 0.0885009765625, 0.0005159378051757812, 0.0004074573516845703, 0.054718017578125], "tokens": [1468, 3578, 308, 2135, 2659, 27, 301]}
{"line_number": 190, "line_type": "generated", "code": "\n            case 'b' :\n            case 'B' :\n                return Byte.valueOf(val);\n            case 'h' :\n            case 'H' :\n                return Short.valueOf(val);\n            case's' :\n            case 'S' :", "entropy": 0.1263427734375, "is_bug_line": false, "sus_score": 0.493012398481369, "per_token_entropy": [0.401123046875, 1.91796875, 0.0036525726318359375, 0.54541015625, 0.00493621826171875, 0.0277557373046875, 0.048309326171875, 0.003040313720703125, 0.00017511844635009766, 0.0015964508056640625, 0.00034546852111816406, 0.00026226043701171875, 0.2783203125, 0.317626953125, 1.107421875, 0.0016431808471679688, 0.1142578125, 0.0033111572265625, 0.025299072265625, 0.003162384033203125, 0.0838623046875, 0.0010347366333007812, 0.0001990795135498047, 1.44921875, 0.00141143798828125, 4.184246063232422e-05, 0.006107330322265625, 0.0005512237548828125, 2.086162567138672e-05, 0.0006132125854492188, 9.167194366455078e-05, 0.0001684427261352539, 0.0164947509765625, 0.0228271484375, 0.05810546875, 3.266334533691406e-05, 0.0001131296157836914, 6.115436553955078e-05, 0.00011396408081054688, 0.00032520294189453125, 0.0203704833984375, 0.0023708343505859375, 0.0021724700927734375, 0.0848388671875, 2.765655517578125e-05, 0.00016391277313232422, 0.00799560546875, 0.002933502197265625, 2.1457672119140625e-05, 0.00022983551025390625, 0.00010716915130615234, 0.0011034011840820312], "tokens": [324, 1135, 330, 84, 25, 499, 324, 1135, 330, 52, 25, 499, 400, 442, 8043, 32, 9162, 26, 695, 293, 324, 1135, 330, 90, 25, 499, 324, 1135, 330, 58, 25, 499, 400, 442, 13801, 32, 9162, 26, 695, 293, 324, 1135, 330, 101, 25, 499, 324, 1135, 330, 69, 25, 499]}
{"line_number": 160, "line_type": "original", "code": "        int expPos = val.indexOf('e') + val.indexOf('E') + 1;", "entropy": 1.5126953125, "is_bug_line": false, "sus_score": 0.4579397141933441, "per_token_entropy": [6.94140625, 8.953125, 4.06640625, 3.822265625, 0.16845703125, 0.1663818359375, 0.0006246566772460938, 0.01166534423828125, 0.05377197265625, 0.60546875, 0.48779296875, 4.0625, 1.7744140625, 0.00021696090698242188, 0.0013790130615234375, 0.00014793872833251953, 1.9550323486328125e-05, 0.97509765625, 1.1171875, 0.01617431640625, 0.000286102294921875, 0.050201416015625], "tokens": [351, 629, 2910, 2996, 280, 909, 32, 7142, 463, 87, 683, 474, 909, 32, 7142, 463, 55, 683, 474, 225, 35, 45]}
{"line_number": 160, "line_type": "generated", "code": "\n                            return f;\n                        }\n                    } catch (NumberFormatException nfe) {\n                        // ignore the bad number\n                    }\n                    break;\n                case 'd' :\n                case 'D' :\n                    try {\n                        Double d = NumberUtils.createDouble(", "entropy": 0.09759521484375, "is_bug_line": false, "sus_score": 0.4579397141933441, "per_token_entropy": [0.47314453125, 0.022186279296875, 0.1915283203125, 0.0090484619140625, 0.280029296875, 0.0032596588134765625, 0.09625244140625, 0.0010423660278320312, 0.30322265625, 0.00411224365234375, 0.004627227783203125, 1.430511474609375e-05, 0.05377197265625, 1.5974044799804688e-05, 0.0015850067138671875, 0.045623779296875, 0.0213165283203125, 0.01739501953125, 0.64013671875, 0.1551513671875, 0.0281524658203125, 0.7236328125, 0.051513671875, 7.56978988647461e-05, 0.31982421875, 1.375, 8.022785186767578e-05, 0.047882080078125, 0.0005145072937011719, 1.704692840576172e-05, 3.3855438232421875e-05, 4.6133995056152344e-05, 2.658367156982422e-05, 0.0014867782592773438, 7.224082946777344e-05, 5.125999450683594e-06, 2.384185791015625e-07, 0.0001741647720336914, 7.867813110351562e-06, 0.0244903564453125, 0.0007176399230957031, 0.00031256675720214844, 0.04217529296875, 0.00737762451171875, 0.0018568038940429688, 0.0015172958374023438, 0.1180419921875, 7.271766662597656e-05, 0.0013675689697265625, 7.843971252441406e-05, 0.0053863525390625, 7.68899917602539e-05], "tokens": [1014, 442, 296, 45, 715, 320, 528, 320, 2368, 308, 1918, 25944, 310, 1225, 27, 301, 715, 434, 5079, 322, 6658, 1451, 528, 320, 528, 1626, 45, 400, 1135, 330, 86, 25, 499, 400, 1135, 330, 54, 25, 499, 528, 1596, 301, 715, 6934, 343, 280, 5104, 2755, 32, 1297, 4075, 26]}
{"line_number": 300, "line_type": "original", "code": "        for (int i = s.length() - 1; i >= 0; i--) {", "entropy": 0.62744140625, "is_bug_line": false, "sus_score": 0.4577728509902954, "per_token_entropy": [1.759765625, 6.95703125, 0.0911865234375, 0.294189453125, 0.00983428955078125, 0.032501220703125, 3.9453125, 0.040069580078125, 0.01184844970703125, 0.035919189453125, 0.0007390975952148438, 0.0067291259765625, 0.0003268718719482422, 0.007228851318359375, 0.0007867813110351562, 0.396728515625, 0.002353668212890625, 0.0007600784301757812, 0.040130615234375, 0.0233612060546875, 0.007709503173828125, 0.142822265625], "tokens": [351, 436, 308, 410, 595, 280, 309, 32, 1322, 346, 429, 225, 35, 45, 595, 2377, 225, 34, 45, 595, 15353, 301]}
{"line_number": 300, "line_type": "generated", "code": "\n     * @throws NumberFormatException if the value cannot be converted\n     */\n    public static Long createLong(String val) {\n        return Long.valueOf(val);\n    }\n\n    /**\n     * <p>Convert a <code>String</code> to", "entropy": 0.041473388671875, "is_bug_line": false, "sus_score": 0.4577728509902954, "per_token_entropy": [1.228515625, 0.1368408203125, 0.0029735565185546875, 0.0052642822265625, 0.001842498779296875, 0.00015032291412353516, 0.0018215179443359375, 0.00044274330139160156, 0.0009112358093261719, 0.0013780593872070312, 6.520748138427734e-05, 0.00043082237243652344, 0.0960693359375, 0.0214691162109375, 0.0311737060546875, 0.01200103759765625, 0.00013887882232666016, 0.007770538330078125, 0.00011491775512695312, 0.00014281272888183594, 0.0018177032470703125, 0.001232147216796875, 0.0006489753723144531, 0.0007476806640625, 0.00670623779296875, 0.08013916015625, 0.084228515625, 0.0226287841796875, 0.00044155120849609375, 0.0188446044921875, 0.0003218650817871094, 0.0009069442749023438, 0.00763702392578125, 0.145263671875, 0.0005307197570800781, 0.1629638671875, 0.0225372314453125, 0.01361083984375, 9.560585021972656e-05, 0.0111236572265625, 0.00012743473052978516, 0.00020647048950195312, 0.017242431640625, 0.0010204315185546875, 0.001888275146484375, 0.0001379251480102539, 5.161762237548828e-05, 0.0022945404052734375, 5.3048133850097656e-05, 3.123283386230469e-05, 1.6689300537109375e-05, 0.000621795654296875], "tokens": [275, 319, 477, 5117, 5104, 25944, 415, 322, 786, 4881, 526, 12785, 275, 569, 284, 562, 907, 6359, 1487, 3952, 26, 652, 909, 27, 301, 291, 442, 6359, 32, 9162, 26, 695, 293, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 6720, 312, 333, 687, 48, 652, 377, 687, 48, 372]}
{"line_number": 182, "line_type": "original", "code": "            if (expPos > -1 && expPos < val.length() - 1) {", "entropy": 0.90185546875, "is_bug_line": false, "sus_score": 0.45553702116012573, "per_token_entropy": [8.0703125, 4.15234375, 0.1905517578125, 0.410888671875, 1.896484375, 0.277099609375, 0.01287841796875, 0.0007967948913574219, 1.609375, 0.2479248046875, 0.351318359375, 0.2410888671875, 0.79833984375, 0.001445770263671875, 0.010711669921875, 0.419921875, 0.04559326171875, 0.03704833984375, 0.010711669921875, 0.06396484375, 0.0924072265625], "tokens": [1468, 415, 308, 2832, 2996, 848, 429, 35, 962, 2910, 2996, 333, 909, 32, 1322, 346, 429, 225, 35, 27, 301]}
{"line_number": 182, "line_type": "generated", "code": "\n                    }\n                default :\n                    break;\n            }\n        }\n        //User doesn't have a preference, let's start by trying to parse as a Long, if it doesn't work,\n        //then try a Double, and only then a BigDecimal\n        try", "entropy": 0.434814453125, "is_bug_line": false, "sus_score": 0.45553702116012573, "per_token_entropy": [1.1962890625, 0.047271728515625, 0.82958984375, 0.4990234375, 0.2890625, 0.2066650390625, 1.0341796875, 0.005481719970703125, 0.23828125, 0.0010852813720703125, 0.515625, 0.0303802490234375, 0.40869140625, 0.8720703125, 1.2392578125, 0.67529296875, 7.152557373046875e-07, 0.03778076171875, 0.0173187255859375, 0.0138397216796875, 0.06048583984375, 0.962890625, 0.043060302734375, 0.4697265625, 1.251953125, 0.68310546875, 0.2225341796875, 0.226806640625, 0.10760498046875, 0.0025272369384765625, 0.481689453125, 0.69091796875, 0.62744140625, 0.81396484375, 1.8330078125, 4.3272972106933594e-05, 0.12841796875, 0.1187744140625, 0.137939453125, 0.0006451606750488281, 0.396484375, 1.0517578125, 0.13818359375, 0.03765869140625, 0.357421875, 0.030242919921875, 1.638671875, 0.953125, 0.276611328125, 0.3466796875, 0.258056640625, 0.10845947265625], "tokens": [528, 320, 400, 1244, 499, 528, 1626, 45, 324, 320, 291, 320, 291, 434, 1240, 4163, 1330, 1159, 312, 23398, 30, 1207, 1182, 1477, 810, 7667, 372, 3185, 619, 312, 6359, 30, 415, 561, 4163, 1330, 1389, 30, 291, 434, 3356, 1596, 312, 6934, 30, 461, 1755, 1615, 312, 17280, 291, 1596]}
{"line_number": 152, "line_type": "original", "code": "        if (val.startsWith(\"0x\") || val.startsWith(\"-0x\")) {", "entropy": 0.79248046875, "is_bug_line": true, "sus_score": 0.4508552849292755, "per_token_entropy": [5.57421875, 2.962890625, 0.16357421875, 4.90234375, 0.024932861328125, 0.43212890625, 0.66259765625, 0.00689697265625, 0.006221771240234375, 0.15625, 0.1064453125, 0.038726806640625, 0.0002275705337524414, 1.3709068298339844e-05, 0.0007009506225585938, 1.239776611328125e-05, 7.283687591552734e-05, 0.0011434555053710938, 0.01377105712890625], "tokens": [351, 415, 308, 695, 32, 13912, 440, 34, 106, 657, 1276, 909, 32, 13912, 10359, 34, 106, 2131, 301]}
{"line_number": 152, "line_type": "generated", "code": "\n                    }\n                    break;\n                case 'f' :\n                case 'F' :\n                    try {\n                        Float f = createFloat(numeric);\n                        if (allZeros) {\n                            return BigDecimal.valueOf(f.floatValue());\n                        }\n                        return", "entropy": 0.136962890625, "is_bug_line": true, "sus_score": 0.4508552849292755, "per_token_entropy": [0.44580078125, 0.153076171875, 0.368408203125, 0.64111328125, 0.0010204315185546875, 0.11224365234375, 0.001110076904296875, 0.0005807876586914062, 0.007137298583984375, 0.002475738525390625, 0.001251220703125, 0.0028209686279296875, 3.0159950256347656e-05, 7.748603820800781e-06, 4.661083221435547e-05, 0.0003101825714111328, 2.5033950805664062e-06, 0.373291015625, 0.91455078125, 0.0001995563507080078, 0.026031494140625, 0.143310546875, 0.001316070556640625, 0.0088348388671875, 0.2457275390625, 2.09808349609375e-05, 3.3855438232421875e-05, 0.0026493072509765625, 0.0006923675537109375, 0.0933837890625, 0.1298828125, 0.51416015625, 0.1251220703125, 1.728534698486328e-05, 2.384185791015625e-07, 0.0079498291015625, 0.0197296142578125, 0.06304931640625, 0.287353515625, 2.1328125, 8.058547973632812e-05, 0.00010097026824951172, 0.00027823448181152344, 0.000476837158203125, 6.961822509765625e-05, 0.1385498046875, 1.3113021850585938e-06, 0.0116729736328125, 0.0210418701171875, 3.790855407714844e-05, 0.0975341796875, 0.0225830078125], "tokens": [528, 320, 528, 1626, 45, 400, 1135, 330, 88, 25, 499, 400, 1135, 330, 56, 25, 499, 528, 1596, 301, 715, 8174, 296, 280, 1487, 3670, 26, 10125, 293, 715, 415, 308, 464, 76, 14641, 27, 301, 1014, 442, 17280, 32, 9162, 26, 88, 32, 1808, 882, 1035, 715, 320, 715, 442]}
{"line_number": 145, "line_type": "original", "code": "        if (val.startsWith(\"--\")) {", "entropy": 2.021484375, "is_bug_line": true, "sus_score": 0.4461464583873749, "per_token_entropy": [5.44140625, 3.228515625, 0.1435546875, 5.625, 0.002849578857421875, 0.908203125, 1.2255859375, 1.43359375, 0.18017578125], "tokens": [351, 415, 308, 695, 32, 13912, 13692, 2131, 301]}
{"line_number": 145, "line_type": "generated", "code": "\n                        && (numeric.charAt(0) == '-' || Character.isDigit(numeric.charAt(0)))) {\n                        try {\n                            return createLong(numeric);\n                        } catch (NumberFormatException nfe) {\n                            // Too big for a long\n                       ", "entropy": 0.1771240234375, "is_bug_line": true, "sus_score": 0.4461464583873749, "per_token_entropy": [0.3642578125, 0.1051025390625, 0.87255859375, 1.2060546875, 0.00015151500701904297, 0.421142578125, 1.1444091796875e-05, 0.03125, 9.441375732421875e-05, 0.0012674331665039062, 0.03076171875, 0.8740234375, 0.5361328125, 0.0013933181762695312, 0.0200347900390625, 8.761882781982422e-05, 6.639957427978516e-05, 0.003143310546875, 0.0034656524658203125, 2.181529998779297e-05, 6.80685043334961e-05, 0.0004897117614746094, 0.2435302734375, 0.100341796875, 0.537109375, 0.319091796875, 0.016571044921875, 0.1278076171875, 0.324951171875, 0.06475830078125, 1.0888671875, 0.00046896934509277344, 0.0309906005859375, 0.0290374755859375, 0.017913818359375, 0.00012600421905517578, 0.227783203125, 0.005489349365234375, 0.1492919921875, 0.00010216236114501953, 0.006107330322265625, 0.00020360946655273438, 0.00696563720703125, 0.1202392578125, 0.2763671875, 0.2137451171875, 0.67431640625, 0.032958984375, 0.0007276535034179688, 8.559226989746094e-05, 0.0202178955078125, 0.10552978515625], "tokens": [715, 962, 308, 10125, 32, 15611, 26, 34, 27, 610, 20514, 1276, 15041, 32, 297, 21530, 26, 10125, 32, 15611, 26, 34, 7748, 301, 715, 1596, 301, 1014, 442, 1487, 3952, 26, 10125, 293, 715, 320, 2368, 308, 1918, 25944, 310, 1225, 27, 301, 1014, 434, 37327, 6524, 436, 312, 1946, 715]}
{"line_number": 155, "line_type": "original", "code": "        char lastChar = val.charAt(val.length() - 1);", "entropy": 1.27734375, "is_bug_line": true, "sus_score": 0.44144460558891296, "per_token_entropy": [5.609375, 9.515625, 4.1328125, 2.13671875, 0.05743408203125, 0.2423095703125, 0.0008096694946289062, 0.0009493827819824219, 1.704692840576172e-05, 0.0106201171875, 0.0018796920776367188, 1.0848045349121094e-05, 0.013580322265625, 0.0021953582763671875, 0.002105712890625, 3.2186508178710938e-06, 0.00010859966278076172], "tokens": [351, 1351, 2401, 2659, 280, 909, 32, 15611, 26, 695, 32, 1322, 346, 429, 225, 35, 293]}
{"line_number": 155, "line_type": "generated", "code": "\n                case 'f' :\n                case 'F' :\n                    if (exp == null\n                        && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {\n                        try {\n                            return create", "entropy": 0.08197021484375, "is_bug_line": true, "sus_score": 0.44144460558891296, "per_token_entropy": [0.1737060546875, 0.038604736328125, 0.0001423358917236328, 0.038787841796875, 0.01104736328125, 0.00201416015625, 0.01216888427734375, 5.3048133850097656e-05, 1.2755393981933594e-05, 0.00047135353088378906, 0.0013265609741210938, 3.445148468017578e-05, 0.201904296875, 0.703125, 0.0259246826171875, 0.7744140625, 0.0222625732421875, 8.976459503173828e-05, 1.2919921875, 0.0005702972412109375, 0.221435546875, 0.06561279296875, 6.9141387939453125e-06, 0.0012149810791015625, 5.960464477539062e-07, 3.2186508178710938e-06, 0.00022661685943603516, 1.895427703857422e-05, 0.0005440711975097656, 0.00208282470703125, 0.0026073455810546875, 0.0230865478515625, 0.00016760826110839844, 0.0004096031188964844, 0.001781463623046875, 6.80685043334961e-05, 3.2186508178710938e-06, 4.851818084716797e-05, 0.00594329833984375, 0.022979736328125, 0.0055389404296875, 0.0003478527069091797, 1.1205673217773438e-05, 0.00014150142669677734, 0.10028076171875, 0.003467559814453125, 0.02215576171875, 0.351318359375, 0.00012493133544921875, 0.00649261474609375, 0.1253662109375, 0.0009226799011230469], "tokens": [400, 1135, 330, 88, 25, 499, 400, 1135, 330, 56, 25, 499, 528, 415, 308, 2832, 610, 744, 715, 962, 308, 10125, 32, 15611, 26, 34, 27, 610, 20514, 962, 438, 22326, 26, 10125, 32, 8723, 26, 35, 490, 1276, 438, 22326, 26, 10125, 2610, 301, 715, 1596, 301, 1014, 442, 1487]}
{"line_number": 188, "line_type": "original", "code": "            String numeric = val.substring(0, val.length() - 1);", "entropy": 1.0078125, "is_bug_line": false, "sus_score": 0.44144460558891296, "per_token_entropy": [4.76171875, 11.109375, 1.6669921875, 0.031768798828125, 0.360595703125, 0.1312255859375, 0.02252197265625, 0.00010144710540771484, 0.0003230571746826172, 6.639957427978516e-05, 0.0162506103515625, 0.000904083251953125, 9.560585021972656e-05, 0.006496429443359375, 0.0007843971252441406, 0.0252685546875, 0.00024580955505371094, 0.0025386810302734375], "tokens": [1468, 892, 12738, 280, 909, 32, 8723, 26, 34, 30, 909, 32, 1322, 346, 429, 225, 35, 293]}
{"line_number": 188, "line_type": "generated", "code": "\n            }\n        } else {\n            //User requesting a float/double back\n            if (expPos > -1 && expPos < val.length() - 1) {\n                exp = val.substring(expPos + 1, val.length", "entropy": 0.2421875, "is_bug_line": false, "sus_score": 0.44144460558891296, "per_token_entropy": [0.33984375, 0.0259552001953125, 0.289306640625, 0.01262664794921875, 0.662109375, 0.11700439453125, 1.1865234375, 0.638671875, 0.01503753662109375, 0.67822265625, 0.705078125, 2.83984375, 1.265625, 0.01209259033203125, 1.841796875, 0.288818359375, 0.61865234375, 0.037811279296875, 0.0054779052734375, 0.005138397216796875, 0.0012493133544921875, 0.0002218484878540039, 9.441375732421875e-05, 0.85400390625, 0.042083740234375, 0.0005631446838378906, 0.01548004150390625, 0.00102996826171875, 0.00011968612670898438, 2.1338462829589844e-05, 0.0005578994750976562, 0.00019109249114990234, 0.00678253173828125, 1.2159347534179688e-05, 0.007663726806640625, 0.00170135498046875, 0.0308990478515625, 0.022125244140625, 8.058547973632812e-05, 0.0011968612670898438, 0.0008096694946289062, 4.410743713378906e-06, 2.8967857360839844e-05, 2.5510787963867188e-05, 2.6226043701171875e-06, 0.0020008087158203125, 6.079673767089844e-06, 6.9141387939453125e-06, 0.0179290771484375, 0.0035858154296875, 0.0010652542114257812, 0.0001302957534790039], "tokens": [324, 320, 291, 320, 813, 301, 324, 434, 1240, 29138, 312, 1897, 33, 2627, 1751, 324, 415, 308, 2832, 2996, 848, 429, 35, 962, 2910, 2996, 333, 909, 32, 1322, 346, 429, 225, 35, 27, 301, 400, 2910, 280, 909, 32, 8723, 26, 2832, 2996, 474, 225, 35, 30, 909, 32, 1322]}
{"line_number": 159, "line_type": "original", "code": "        int decPos = val.indexOf('.');", "entropy": 1.728515625, "is_bug_line": false, "sus_score": 0.4412994384765625, "per_token_entropy": [5.77734375, 6.78125, 1.7265625, 0.603515625, 0.232177734375, 0.25146484375, 0.00039839744567871094, 0.04052734375, 0.138671875], "tokens": [351, 629, 5973, 2996, 280, 909, 32, 7142, 49129]}
{"line_number": 159, "line_type": "generated", "code": "\n                        if (allZeros) {\n                            return createBigDecimal(numeric);\n                        }\n                        return f;\n                    }\n                    catch (NumberFormatException nfe) {\n                        // ignore the bad float.\n                    }\n                    break;\n                case 'd' :\n                case", "entropy": 0.197021484375, "is_bug_line": false, "sus_score": 0.4412994384765625, "per_token_entropy": [0.3330078125, 0.9365234375, 0.255615234375, 0.10235595703125, 7.617473602294922e-05, 2.384185791015625e-07, 0.059051513671875, 0.034149169921875, 0.0821533203125, 0.515625, 0.91552734375, 1.556640625, 0.002613067626953125, 0.1424560546875, 0.11767578125, 0.0201416015625, 0.00018417835235595703, 0.41162109375, 0.08966064453125, 0.0489501953125, 0.0010099411010742188, 0.076904296875, 0.0003769397735595703, 0.41845703125, 0.004772186279296875, 0.028533935546875, 0.0258026123046875, 7.140636444091797e-05, 0.0386962890625, 6.54458999633789e-05, 0.00922393798828125, 0.035125732421875, 0.07183837890625, 0.352783203125, 0.65625, 0.0701904296875, 0.0254974365234375, 0.356201171875, 0.423095703125, 0.1439208984375, 3.707408905029297e-05, 0.599609375, 1.15625, 0.00019621849060058594, 0.11724853515625, 0.0006070137023925781, 3.528594970703125e-05, 3.6597251892089844e-05, 5.14984130859375e-05, 5.1856040954589844e-05, 0.0021572113037109375, 3.7670135498046875e-05], "tokens": [715, 415, 308, 464, 76, 14641, 27, 301, 1014, 442, 1487, 20827, 26, 10125, 293, 715, 320, 715, 442, 296, 45, 528, 320, 528, 2368, 308, 1918, 25944, 310, 1225, 27, 301, 715, 434, 5079, 322, 6658, 1897, 32, 528, 320, 528, 1626, 45, 400, 1135, 330, 86, 25, 499, 400, 1135]}
{"line_number": 181, "line_type": "original", "code": "        if (!Character.isDigit(lastChar)) {", "entropy": 1.255859375, "is_bug_line": false, "sus_score": 0.4410756230354309, "per_token_entropy": [5.7421875, 3.3359375, 3.298828125, 1.7548828125, 0.00199127197265625, 0.00022089481353759766, 0.00884246826171875, 0.000576019287109375, 0.318115234375, 0.01235198974609375, 0.53955078125, 0.059478759765625], "tokens": [351, 415, 1429, 6881, 32, 297, 21530, 26, 2135, 2659, 490, 301]}
{"line_number": 181, "line_type": "generated", "code": "\n                    } catch (NumberFormatException e) {\n                        // empty catch\n                    }\n                    //No, double is not the answer.\n                default :\n                    if (expPos > -1 && exp!= null) {\n                        //If we can fit it in a BigDecimal", "entropy": 0.43994140625, "is_bug_line": false, "sus_score": 0.4410756230354309, "per_token_entropy": [0.1290283203125, 0.00998687744140625, 0.1324462890625, 0.004711151123046875, 0.007091522216796875, 8.702278137207031e-06, 0.4501953125, 0.01180267333984375, 0.00415802001953125, 0.053802490234375, 0.1942138671875, 0.78369140625, 0.01070404052734375, 0.11492919921875, 0.0015211105346679688, 0.51806640625, 0.73388671875, 1.4453125, 0.3388671875, 1.6259765625, 0.8984375, 0.1937255859375, 0.32275390625, 0.136474609375, 0.427734375, 2.26953125, 0.02044677734375, 0.201904296875, 0.125244140625, 0.80908203125, 0.0215911865234375, 0.01727294921875, 0.2310791015625, 0.0574951171875, 0.00037288665771484375, 0.00023818016052246094, 0.491455078125, 0.1900634765625, 0.75341796875, 0.0004138946533203125, 0.346435546875, 0.0030803680419921875, 0.07421875, 1.037109375, 2.544921875, 0.387939453125, 1.138671875, 1.0927734375, 0.82568359375, 0.34228515625, 0.0595703125, 1.279296875], "tokens": [528, 320, 2368, 308, 1918, 25944, 484, 27, 301, 715, 434, 3502, 2368, 528, 320, 528, 434, 2023, 30, 2064, 438, 646, 322, 7592, 32, 400, 1244, 499, 528, 415, 308, 2832, 2996, 848, 429, 35, 962, 2910, 863, 744, 27, 301, 715, 434, 2797, 996, 883, 8157, 561, 328, 312, 17280]}
{"line_number": 142, "line_type": "original", "code": "        if (val.length() == 0) {", "entropy": 3.083984375, "is_bug_line": true, "sus_score": 0.4365490972995758, "per_token_entropy": [6.2734375, 2.345703125, 0.11334228515625, 8.5859375, 2.562999725341797e-05, 6.5390625, 0.030670166015625, 0.1663818359375, 0.0001614093780517578, 12.6875, 0.13037109375, 0.12451171875], "tokens": [351, 415, 308, 695, 32, 1322, 346, 610, 225, 34, 27, 301]}
{"line_number": 142, "line_type": "generated", "code": "\n                    break;\n                case 'L' :", "entropy": 0.23583984375, "is_bug_line": true, "sus_score": 0.4365490972995758, "per_token_entropy": [0.7021484375, 1.326171875, 0.0015707015991210938, 0.05767822265625, 0.00335693359375, 1.6570091247558594e-05, 0.0307464599609375, 0.00032019615173339844, 9.489059448242188e-05], "tokens": [528, 1626, 45, 400, 1135, 330, 62, 25, 499]}
{"line_number": 189, "line_type": "original", "code": "            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);", "entropy": 1.2353515625, "is_bug_line": false, "sus_score": 0.43645134568214417, "per_token_entropy": [5.8515625, 9.4375, 0.8837890625, 0.11273193359375, 3.0994415283203125e-06, 0.00273895263671875, 3.794921875, 0.093505859375, 0.007266998291015625, -0.0, 0.0034027099609375, 0.73583984375, 3.933906555175781e-06, 2.091796875, 0.90625, 2.341796875, 0.01436614990234375, 0.00804901123046875, 5.960464477539062e-07, 0.0002551078796386719, 0.87255859375, 0.0185394287109375], "tokens": [1468, 1905, 1169, 76, 14641, 280, 438, 1934, 76, 14641, 26, 95, 692, 27, 962, 438, 1934, 76, 14641, 26, 2832, 293]}
{"line_number": 189, "line_type": "generated", "code": "\n        } else {\n            if (expPos > -1) {\n                exp = val.substring(expPos + 1, val.length());\n            } else {\n                exp = null;\n            }\n            //User doesn't have a preference on the", "entropy": 0.1602783203125, "is_bug_line": false, "sus_score": 0.43645134568214417, "per_token_entropy": [0.40185546875, 0.0192108154296875, 0.68408203125, 0.09442138671875, 1.2216796875, 0.57861328125, 0.004039764404296875, 0.01422882080078125, 0.00017130374908447266, 0.00013148784637451172, 0.00019288063049316406, 2.4080276489257812e-05, 0.0312347412109375, 0.000614166259765625, 0.032318115234375, 0.0244140625, 3.4689903259277344e-05, 0.0006923675537109375, 4.76837158203125e-06, 1.7881393432617188e-06, 1.6808509826660156e-05, 6.67572021484375e-06, 2.86102294921875e-06, 0.0006561279296875, 1.8596649169921875e-05, 7.867813110351562e-06, 1.1376953125, 0.004482269287109375, 0.0010585784912109375, 0.00029540061950683594, 0.0006628036499023438, 0.0259246826171875, 2.2292137145996094e-05, 0.092529296875, 0.0006585121154785156, 0.001743316650390625, 0.00020384788513183594, 3.504753112792969e-05, 2.4437904357910156e-05, 1.3709068298339844e-05, 0.0009984970092773438, 0.00013959407806396484, 0.51904296875, 0.767578125, 0.55029296875, 0.59375, 1.049041748046875e-05, 0.00562286376953125, 0.254150390625, 0.057373046875, 1.15234375, 0.059051513671875], "tokens": [291, 320, 813, 301, 324, 415, 308, 2832, 2996, 848, 429, 35, 27, 301, 400, 2910, 280, 909, 32, 8723, 26, 2832, 2996, 474, 225, 35, 30, 909, 32, 1322, 1035, 324, 320, 813, 301, 400, 2910, 280, 744, 45, 324, 320, 324, 434, 1240, 4163, 1330, 1159, 312, 23398, 544, 322]}
{"line_number": 162, "line_type": "original", "code": "        if (decPos > -1) {", "entropy": 1.5693359375, "is_bug_line": false, "sus_score": 0.42691874504089355, "per_token_entropy": [5.27734375, 3.986328125, 0.272216796875, 2.671875, 1.751953125, 0.68408203125, 0.00849151611328125, 0.0013103485107421875, 0.8642578125, 0.1751708984375], "tokens": [351, 415, 308, 6114, 2996, 848, 429, 35, 27, 301]}
{"line_number": 162, "line_type": "generated", "code": "\n                            return f;\n                        }\n                    } catch (NumberFormatException nfe) {\n                        // ignore the bad float\n                    }\n                    // else keep looking\n                case 'd' :\n                case 'D' :\n                    try {\n                        Double d = NumberUtils.create", "entropy": 0.14892578125, "is_bug_line": false, "sus_score": 0.42691874504089355, "per_token_entropy": [0.62158203125, 0.062469482421875, 0.481689453125, 0.002838134765625, 0.166259765625, 0.00182342529296875, 0.09375, 0.0012531280517578125, 0.205078125, 0.006633758544921875, 0.003063201904296875, 3.4809112548828125e-05, 0.036590576171875, 2.0265579223632812e-05, 0.002147674560546875, 0.0556640625, 0.0164337158203125, 0.0289459228515625, 1.1513671875, 0.07135009765625, 0.0513916015625, 0.751953125, 0.8056640625, 9.262561798095703e-05, 0.282470703125, 0.65185546875, 0.287841796875, 0.546875, 0.55615234375, 0.3662109375, 0.00022220611572265625, 2.562999725341797e-05, 0.00041365623474121094, 2.5153160095214844e-05, 6.413459777832031e-05, 0.0014886856079101562, 2.1696090698242188e-05, 4.410743713378906e-06, 2.384185791015625e-07, 0.00023448467254638672, 1.8358230590820312e-05, 0.2060546875, 0.035858154296875, 0.0004475116729736328, 0.06268310546875, 0.01611328125, 0.00028777122497558594, 0.0021839141845703125, 0.1033935546875, 8.094310760498047e-05, 0.0012149810791015625, 7.295608520507812e-05], "tokens": [1014, 442, 296, 45, 715, 320, 528, 320, 2368, 308, 1918, 25944, 310, 1225, 27, 301, 715, 434, 5079, 322, 6658, 1897, 528, 320, 528, 434, 813, 4986, 9696, 400, 1135, 330, 86, 25, 499, 400, 1135, 330, 54, 25, 499, 528, 1596, 301, 715, 6934, 343, 280, 5104, 2755, 32, 1297]}
{"line_number": 297, "line_type": "original", "code": "        if (s == null) {", "entropy": 0.99853515625, "is_bug_line": false, "sus_score": 0.42613232135772705, "per_token_entropy": [2.986328125, 1.4921875, 0.1822509765625, 2.064453125, 1.1904296875, 0.008087158203125, 0.0287933349609375, 0.037139892578125], "tokens": [351, 415, 308, 101, 610, 744, 27, 301]}
{"line_number": 297, "line_type": "generated", "code": "\n    }\n\n    /**\n     * <p>Convert a <code>String</code> to a <code>BigInteger</code>.</p>\n     * \n     * @param val  a <code>String</code> to convert\n     * @return converted", "entropy": 0.0970458984375, "is_bug_line": false, "sus_score": 0.42613232135772705, "per_token_entropy": [2.2421875, 1.056640625, 0.31298828125, 0.04437255859375, 0.01092529296875, 0.00023829936981201172, 0.01195526123046875, 0.0001983642578125, 0.0002903938293457031, 0.0271759033203125, 0.0014638900756835938, 0.00261688232421875, 0.00024235248565673828, 0.0003483295440673828, 0.0023784637451171875, 0.0003345012664794922, 0.00010454654693603516, 2.5510787963867188e-05, 0.0006704330444335938, 0.003284454345703125, 0.00231170654296875, 0.00012063980102539062, 9.739398956298828e-05, 0.5498046875, 0.004940032958984375, 0.00028252601623535156, 0.2298583984375, 0.00015592575073242188, 0.0009622573852539062, 0.2220458984375, 0.0005517005920410156, 0.158447265625, 6.663799285888672e-05, 0.013702392578125, 0.002166748046875, 0.0002551078796386719, 0.0104522705078125, 0.107177734375, 0.002178192138671875, 0.00017750263214111328, 0.00039267539978027344, 0.000545501708984375, 0.00031113624572753906, 4.839897155761719e-05, 0.00015103816986083984, 0.0002942085266113281, 0.0007996559143066406, 0.003093719482421875, 1.1086463928222656e-05, 3.612041473388672e-05, 0.00225830078125, 0.01580810546875], "tokens": [284, 320, 446, 1022, 275, 319, 333, 98, 48, 6720, 312, 333, 687, 48, 652, 377, 687, 48, 372, 312, 333, 687, 48, 21541, 377, 687, 12689, 98, 48, 275, 319, 5384, 319, 477, 753, 909, 225, 312, 333, 687, 48, 652, 377, 687, 48, 372, 4483, 275, 319, 477, 601, 12785]}
{"line_number": 174, "line_type": "original", "code": "            if (expPos > -1) {", "entropy": 1.474609375, "is_bug_line": false, "sus_score": 0.4159568250179291, "per_token_entropy": [8.2109375, 2.607421875, 0.45458984375, 0.6806640625, 1.201171875, 0.431396484375, 0.0269775390625, 0.0014810562133789062, 0.919921875, 0.2132568359375], "tokens": [1468, 415, 308, 2832, 2996, 848, 429, 35, 27, 301]}
{"line_number": 174, "line_type": "generated", "code": "\n                            //If it's too big for a double, float, or the double value = 0 and the string\n                            //has non-zeros in it, then double does not have the precision we want\n                            return d;\n                        }\n                    } catch (Number", "entropy": 0.1287841796875, "is_bug_line": false, "sus_score": 0.4159568250179291, "per_token_entropy": [0.371337890625, 0.76904296875, 0.020538330078125, 0.0010890960693359375, 0.00013840198516845703, 0.0005440711975097656, 0.00010383129119873047, 0.00010037422180175781, 3.2186508178710938e-06, 0.1654052734375, 0.7900390625, 1.95703125, 0.002285003662109375, 0.044036865234375, 0.38525390625, 0.7451171875, 0.06378173828125, 0.010101318359375, 0.005229949951171875, 0.000492095947265625, 0.05926513671875, 0.12890625, 0.07989501953125, 0.0310516357421875, 0.0013437271118164062, 0.0162506103515625, 0.00102996826171875, 0.00051116943359375, 0.002620697021484375, 1.4901161193847656e-05, 3.266334533691406e-05, 0.0008087158203125, 0.00855255126953125, 0.08270263671875, 0.0025196075439453125, 0.00021147727966308594, 0.0003261566162109375, 0.0009646415710449219, 0.0009255409240722656, 0.0002841949462890625, 4.8041343688964844e-05, 0.2298583984375, 0.0312042236328125, 0.00872039794921875, 0.0028095245361328125, 0.1915283203125, 0.0012063980102539062, 0.450927734375, 0.0012502670288085938, 0.0258941650390625, 0.0022029876708984375, 0.0014352798461914062], "tokens": [1014, 434, 2797, 561, 1182, 5133, 6524, 436, 312, 2064, 30, 1897, 30, 556, 322, 2064, 786, 280, 225, 34, 461, 322, 802, 1014, 434, 2040, 2979, 31, 9880, 328, 561, 30, 1615, 2064, 1957, 646, 1159, 322, 12485, 996, 2637, 1014, 442, 343, 45, 715, 320, 528, 320, 2368, 308, 1918]}
{"line_number": 301, "line_type": "original", "code": "            if (s.charAt(i) != '0') {", "entropy": 1.421875, "is_bug_line": false, "sus_score": 0.4145624339580536, "per_token_entropy": [5.65625, 2.2734375, 0.2080078125, 2.765625, 0.08721923828125, 2.140625, 0.0020084381103515625, 1.6669921875, 0.1507568359375, 3.66796875, 0.23193359375, 0.560546875, 0.2890625, 0.2073974609375], "tokens": [1468, 415, 308, 101, 32, 15611, 26, 91, 27, 863, 330, 34, 683, 301]}
{"line_number": 301, "line_type": "generated", "code": "\n     */\n    public static Long createLong(String val) {\n        return Long.valueOf(val);\n    }\n\n    /**\n     * <p>Convert a <code>String</code> to a <code>BigInteger</code>.</p>\n     *", "entropy": 0.05291748046875, "is_bug_line": false, "sus_score": 0.4145624339580536, "per_token_entropy": [1.5498046875, 0.0418701171875, 0.0338134765625, 0.01331329345703125, 0.00019502639770507812, 0.006866455078125, 0.0001354217529296875, 0.00010907649993896484, 0.001667022705078125, 0.0008945465087890625, 0.0006670951843261719, 0.0008220672607421875, 0.00824737548828125, 0.1392822265625, 0.1204833984375, 0.0252532958984375, 0.000690460205078125, 0.02008056640625, 0.0004260540008544922, 0.0013074874877929688, 0.00850677490234375, 0.1649169921875, 0.0006976127624511719, 0.1837158203125, 0.0230255126953125, 0.018585205078125, 3.337860107421875e-05, 0.0112762451171875, 0.00013196468353271484, 0.0002777576446533203, 0.025604248046875, 0.0016698837280273438, 0.00258636474609375, 0.00010025501251220703, 7.987022399902344e-06, 0.002269744873046875, 7.784366607666016e-05, 0.00021445751190185547, 2.658367156982422e-05, 0.0009555816650390625, 0.0018815994262695312, 0.0016832351684570312, 0.00018596649169921875, 0.00013196468353271484, 0.130859375, 0.00829315185546875, 0.0005736351013183594, 0.1844482421875, 9.846687316894531e-05, 0.00035953521728515625, 0.012420654296875, 0.0001779794692993164], "tokens": [275, 569, 284, 562, 907, 6359, 1487, 3952, 26, 652, 909, 27, 301, 291, 442, 6359, 32, 9162, 26, 695, 293, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 6720, 312, 333, 687, 48, 652, 377, 687, 48, 372, 312, 333, 687, 48, 21541, 377, 687, 12689, 98, 48, 275, 319]}
{"line_number": 139, "line_type": "original", "code": "        if (val == null) {", "entropy": 2.6953125, "is_bug_line": false, "sus_score": 0.4065394699573517, "per_token_entropy": [4.51171875, 4.0078125, 0.14306640625, 5.06640625, 7.61328125, 0.0499267578125, 0.052001953125, 0.1142578125], "tokens": [351, 415, 308, 695, 610, 744, 27, 301]}
{"line_number": 139, "line_type": "generated", "code": "\n            throw new NumberFormatException(val + \" is not a valid number.\");\n        } else {\n            exp = null;\n        }\n        if (exp!= null) {\n            if (exp.startsWith(\"+\") || exp.startsWith(\"-\")) {\n                exp =", "entropy": 0.1224365234375, "is_bug_line": false, "sus_score": 0.4065394699573517, "per_token_entropy": [1.0302734375, 0.60009765625, 0.0060882568359375, 0.094482421875, 0.0003521442413330078, 0.1724853515625, 0.150390625, 0.00659942626953125, 0.0011234283447265625, 6.592273712158203e-05, 3.0875205993652344e-05, 1.4781951904296875e-05, 6.23464584350586e-05, 0.0002982616424560547, 0.0006694793701171875, 0.072021484375, 0.0019283294677734375, 0.39892578125, 0.003368377685546875, 0.30078125, 0.15283203125, 6.556510925292969e-06, 2.5272369384765625e-05, 6.9141387939453125e-06, 0.0160675048828125, 0.00044536590576171875, 0.59912109375, 0.97412109375, 0.00354766845703125, 0.0200653076171875, 0.342529296875, 0.0004887580871582031, 0.0007796287536621094, 0.00208282470703125, 0.30810546875, 0.8447265625, 0.0026607513427734375, 0.006916046142578125, 1.919269561767578e-05, 0.1468505859375, 0.047515869140625, 0.0293121337890625, 0.0002067089080810547, 6.16312026977539e-05, 1.1444091796875e-05, 6.556510925292969e-06, 0.0004839897155761719, 0.0002467632293701172, 9.500980377197266e-05, 0.0252227783203125, 0.0010232925415039062, 4.839897155761719e-05], "tokens": [324, 1422, 537, 5104, 25944, 26, 695, 474, 313, 438, 646, 312, 2080, 1451, 5368, 291, 320, 813, 301, 324, 2910, 280, 744, 45, 291, 320, 291, 415, 308, 2832, 863, 744, 27, 301, 324, 415, 308, 2832, 32, 13912, 30022, 657, 1276, 2910, 32, 13912, 10359, 2131, 301, 400, 2910, 280]}
{"line_number": 185, "line_type": "original", "code": "                exp = null;", "entropy": 3.484375, "is_bug_line": false, "sus_score": 0.36592382192611694, "per_token_entropy": [4.87890625, 12.4140625, 0.05047607421875, 0.07269287109375, 0.0018358230590820312], "tokens": [2071, 2910, 280, 744, 45]}
{"line_number": 185, "line_type": "generated", "code": "\n                default:\n                    throw new NumberFormatException(val + \" is not a valid number.\");\n            }\n        } else {", "entropy": 0.144287109375, "is_bug_line": false, "sus_score": 0.36592382192611694, "per_token_entropy": [0.65869140625, 0.251220703125, 0.76611328125, 0.1221923828125, 0.78466796875, 0.0005049705505371094, 0.0143890380859375, 8.606910705566406e-05, 0.032928466796875, 0.01666259765625, 0.048858642578125, 0.00618743896484375, 0.0010786056518554688, 2.181529998779297e-05, 9.775161743164062e-05, 5.8650970458984375e-05, 0.0010461807250976562, 0.0015325546264648438, 0.112548828125, 0.0006575584411621094, 0.13720703125, 0.005344390869140625, 0.3505859375, 0.150146484375], "tokens": [400, 1244, 44, 528, 1422, 537, 5104, 25944, 26, 695, 474, 313, 438, 646, 312, 2080, 1451, 5368, 324, 320, 291, 320, 813, 301]}
{"line_number": 302, "line_type": "original", "code": "                return false;", "entropy": 5.4453125, "is_bug_line": false, "sus_score": 0.365608274936676, "per_token_entropy": [8.4765625, 0.95703125, 12.2109375, 0.13134765625], "tokens": [2071, 442, 901, 45]}
{"line_number": 302, "line_type": "generated", "code": "\n    public static Long createLong(String val) {\n        return Long.valueOf(val);\n    }\n\n    /**\n     * <p>Convert a <code>String</code> to a <code>BigInteger</code>.</p>\n     * \n     *", "entropy": 0.039276123046875, "is_bug_line": false, "sus_score": 0.365608274936676, "per_token_entropy": [0.55810546875, 0.34716796875, 0.00360870361328125, 0.026611328125, 0.0009722709655761719, 0.0010814666748046875, 0.005329132080078125, 0.00179290771484375, 0.0015554428100585938, 0.0020656585693359375, 0.0136566162109375, 0.09283447265625, 0.1256103515625, 0.0281829833984375, 0.0022563934326171875, 0.032501220703125, 0.0012645721435546875, 0.002349853515625, 0.0103912353515625, 0.150390625, 0.0011682510375976562, 0.1832275390625, 0.03558349609375, 0.0140228271484375, 9.584426879882812e-05, 0.00963592529296875, 8.356571197509766e-05, 0.000217437744140625, 0.016876220703125, 0.0017452239990234375, 0.00225067138671875, 0.0001424551010131836, 9.417533874511719e-06, 0.00311279296875, 6.759166717529297e-05, 3.3736228942871094e-05, 2.2649765014648438e-05, 0.0009541511535644531, 0.001667022705078125, 0.0016012191772460938, 0.00022351741790771484, 0.0001519918441772461, 0.10516357421875, 0.00814056396484375, 0.0006151199340820312, 0.1727294921875, 7.772445678710938e-05, 0.00026416778564453125, 0.01202392578125, 0.00012087821960449219, 0.06231689453125, 5.7220458984375e-05], "tokens": [284, 562, 907, 6359, 1487, 3952, 26, 652, 909, 27, 301, 291, 442, 6359, 32, 9162, 26, 695, 293, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 6720, 312, 333, 687, 48, 652, 377, 687, 48, 372, 312, 333, 687, 48, 21541, 377, 687, 12689, 98, 48, 275, 319, 5384, 319]}
{"line_number": 177, "line_type": "original", "code": "                mant = val;", "entropy": 2.716796875, "is_bug_line": false, "sus_score": 0.3654686212539673, "per_token_entropy": [4.85546875, 9.640625, 0.04559326171875, 0.107177734375, 0.42626953125, 1.21875], "tokens": [2071, 345, 692, 280, 909, 45]}
{"line_number": 177, "line_type": "generated", "code": "\n                    }\n                    //Fall through\n                default :\n                    throw new NumberFormatException(val + \" is not a valid number.\");\n            }\n        } else {\n            if (expPos > -1) {\n                exp = val.substring(expPos + 1", "entropy": 0.1148681640625, "is_bug_line": false, "sus_score": 0.3654686212539673, "per_token_entropy": [0.61474609375, 0.03582763671875, 0.50146484375, 0.759765625, 1.7607421875, 0.0029582977294921875, 0.08203125, 0.09228515625, 0.1427001953125, 0.0213470458984375, 0.10552978515625, 0.0001271963119506836, 0.0008034706115722656, 2.9206275939941406e-05, 0.0030078887939453125, 0.003597259521484375, 0.02490234375, 0.00244140625, 0.00019490718841552734, 1.4543533325195312e-05, 3.9458274841308594e-05, 3.9696693420410156e-05, 0.0003578662872314453, 0.0020885467529296875, 0.11761474609375, 0.0002796649932861328, 0.0633544921875, 0.0032444000244140625, 0.1727294921875, 0.08941650390625, 0.269287109375, 0.99462890625, 0.0011920928955078125, 0.0161895751953125, 2.944469451904297e-05, 0.00010848045349121094, 5.7578086853027344e-05, 0.0002130270004272461, 0.00653076171875, 0.0006546974182128906, 0.05755615234375, 0.019927978515625, 6.556510925292969e-06, 0.00048542022705078125, 0.00014793872833251953, 5.960464477539062e-07, 5.245208740234375e-06, 2.6226043701171875e-06, 7.152557373046875e-07, 0.0003218650817871094, 1.609325408935547e-05, 2.7418136596679688e-06], "tokens": [528, 320, 528, 434, 38206, 3919, 400, 1244, 499, 528, 1422, 537, 5104, 25944, 26, 695, 474, 313, 438, 646, 312, 2080, 1451, 5368, 324, 320, 291, 320, 813, 301, 324, 415, 308, 2832, 2996, 848, 429, 35, 27, 301, 400, 2910, 280, 909, 32, 8723, 26, 2832, 2996, 474, 225, 35]}
