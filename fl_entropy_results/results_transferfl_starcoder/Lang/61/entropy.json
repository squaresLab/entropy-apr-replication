{"line_number": 1780, "line_type": "original", "code": "                if (str.charAt(j) != thisBuf[i + j]) {", "entropy": 1.302734375, "is_bug_line": false, "sus_score": 0.7352402210235596, "per_token_entropy": [9.109375, 2.4453125, 0.07080078125, 2.962890625, 1.6083984375, 2.556640625, 0.0108795166015625, 2.30859375, 0.06793212890625, 0.42578125, 1.1572265625, 0.02978515625, 0.0053863525390625, 0.191162109375, 0.29296875, 0.0094451904296875, 0.035858154296875, 0.168212890625], "tokens": [2071, 415, 308, 466, 32, 15611, 26, 92, 27, 863, 458, 7346, 77, 91, 474, 594, 1130, 301]}
{"line_number": 1780, "line_type": "generated", "code": "\n    /**\n     * Searches the string builder to find the last reference to the specified character.\n     * \n     * @param ch  the character to find\n     * @return the last index of the character, or -1 if not found\n     */\n   ", "entropy": 0.0826416015625, "is_bug_line": false, "sus_score": 0.7352402210235596, "per_token_entropy": [0.96728515625, 0.37841796875, 0.0236968994140625, 0.00010919570922851562, 0.322509765625, 1.9669532775878906e-05, 0.00010192394256591797, 0.0244140625, 0.0267333984375, 0.0023365020751953125, 0.54248046875, 0.006927490234375, 0.00691986083984375, 0.225830078125, 0.45947265625, 0.00630950927734375, 0.06756591796875, 0.09967041015625, 0.2144775390625, 0.01282501220703125, 0.003948211669921875, 2.944469451904297e-05, 0.32177734375, 1.1682510375976562e-05, 0.0011377334594726562, 0.000980377197265625, 0.002643585205078125, 0.01004791259765625, 0.01284027099609375, 0.053131103515625, 0.0023479461669921875, 0.04107666015625, 0.118896484375, 6.079673767089844e-06, 3.5643577575683594e-05, 0.0013980865478515625, 0.0234222412109375, 0.1759033203125, 0.0006947517395019531, 0.01629638671875, 0.006061553955078125, 0.00511932373046875, 0.007434844970703125, 0.027679443359375, 0.00490570068359375, 7.200241088867188e-05, 0.0007352828979492188, 0.0017747879028320312, 0.00014925003051757812, 0.0040435791015625, 0.047149658203125, 0.015594482421875], "tokens": [284, 1022, 275, 319, 358, 1928, 2907, 322, 802, 4906, 372, 2290, 322, 2401, 4121, 372, 322, 3191, 5341, 32, 275, 319, 5384, 319, 477, 753, 663, 225, 322, 5341, 372, 2290, 275, 319, 477, 601, 322, 2401, 1650, 432, 322, 5341, 30, 556, 429, 35, 415, 646, 2431, 275, 569, 284]}
{"line_number": 1778, "line_type": "original", "code": "        for (int i = startIndex; i < len; i++) {", "entropy": 0.46142578125, "is_bug_line": false, "sus_score": 0.7253265976905823, "per_token_entropy": [3.77734375, 1.9130859375, 0.051055908203125, 0.017059326171875, 0.1839599609375, 0.005649566650390625, 0.419677734375, 0.07818603515625, 0.01235198974609375, 0.07269287109375, 0.31787109375, 0.0166473388671875, 0.008941650390625, 0.00759124755859375, 0.03997802734375], "tokens": [351, 436, 308, 410, 595, 280, 23529, 45, 595, 333, 2069, 45, 595, 1987, 301]}
{"line_number": 1778, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Searches the string builder to find the last reference to the specified character.\n     * \n     * @param ch  the character to find\n     * @return the last index of the character, or -1 if not found\n    ", "entropy": 0.06982421875, "is_bug_line": false, "sus_score": 0.7253265976905823, "per_token_entropy": [0.70751953125, 0.22802734375, 0.269775390625, 0.07867431640625, 0.01483917236328125, 8.428096771240234e-05, 0.0697021484375, 3.4570693969726562e-06, 0.00010526180267333984, 0.012054443359375, 0.0175323486328125, 0.0027523040771484375, 0.513671875, 0.00402069091796875, 0.003833770751953125, 0.1876220703125, 0.22998046875, 0.0037288665771484375, 0.049224853515625, 0.0703125, 0.2744140625, 0.0093994140625, 0.003559112548828125, 1.239776611328125e-05, 0.377685546875, 6.9141387939453125e-06, 0.001071929931640625, 0.0005636215209960938, 0.0025806427001953125, 0.0120391845703125, 0.013580322265625, 0.058807373046875, 0.0022754669189453125, 0.036834716796875, 0.131591796875, 4.172325134277344e-06, 3.4928321838378906e-05, 0.0008015632629394531, 0.0235443115234375, 0.1466064453125, 0.0006895065307617188, 0.013946533203125, 0.006610870361328125, 0.00603485107421875, 0.0084686279296875, 0.025177001953125, 0.00345611572265625, 6.365776062011719e-05, 0.0008535385131835938, 0.0017528533935546875, 0.00017023086547851562, 0.0049591064453125], "tokens": [284, 320, 446, 1022, 275, 319, 358, 1928, 2907, 322, 802, 4906, 372, 2290, 322, 2401, 4121, 372, 322, 3191, 5341, 32, 275, 319, 5384, 319, 477, 753, 663, 225, 322, 5341, 372, 2290, 275, 319, 477, 601, 322, 2401, 1650, 432, 322, 5341, 30, 556, 429, 35, 415, 646, 2431, 275]}
{"line_number": 1772, "line_type": "original", "code": "        if (strLen > size) {", "entropy": 2.45703125, "is_bug_line": false, "sus_score": 0.7188045382499695, "per_token_entropy": [3.66015625, 2.595703125, 0.037872314453125, 5.4453125, 1.57421875, 4.01171875, 4.5078125, 0.1787109375, 0.09844970703125], "tokens": [351, 415, 308, 466, 5745, 848, 1334, 27, 301]}
{"line_number": 1772, "line_type": "generated", "code": "\n            return -1;\n        }\n        int i = startIndex;\n        for (; i < len; i++) {\n            if (matcher.isMatch(buf, i)) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n   ", "entropy": 0.1951904296875, "is_bug_line": false, "sus_score": 0.7188045382499695, "per_token_entropy": [1.4892578125, 0.40869140625, 0.0711669921875, 0.0010366439819335938, 0.0008339881896972656, 0.0672607421875, 0.06170654296875, 0.1827392578125, 1.1630859375, 1.11328125, 0.1072998046875, 0.2252197265625, 0.224853515625, 0.083740234375, 1.9521484375, 0.4580078125, 0.0155487060546875, 0.01180267333984375, 0.0625, 0.07098388671875, 0.045135498046875, 0.0045166015625, 0.010040283203125, 0.08404541015625, 0.1221923828125, 0.00284576416015625, 0.00814056396484375, 0.0005612373352050781, 0.0753173828125, 0.00403594970703125, 0.0008335113525390625, 0.0145416259765625, 1.0849609375, 0.020233154296875, 0.61474609375, 0.003925323486328125, 0.00981903076171875, 0.050872802734375, 0.00133514404296875, 0.0002510547637939453, 0.005046844482421875, 4.3511390686035156e-05, 0.008819580078125, 4.684925079345703e-05, 0.018829345703125, 0.0009398460388183594, 0.00414276123046875, 0.00013256072998046875, 0.0003192424774169922, 0.0152130126953125, 0.00042366981506347656, 0.16455078125], "tokens": [324, 442, 429, 35, 45, 291, 320, 291, 629, 595, 280, 23529, 45, 291, 436, 23031, 595, 333, 2069, 45, 595, 1987, 301, 324, 415, 308, 16937, 32, 297, 3665, 26, 1954, 30, 595, 490, 301, 400, 442, 595, 45, 324, 320, 291, 320, 291, 442, 429, 35, 45, 284, 320, 446]}
{"line_number": 1762, "line_type": "original", "code": "        if (str == null || startIndex >= size) {", "entropy": 1.6181640625, "is_bug_line": false, "sus_score": 0.71844881772995, "per_token_entropy": [3.53125, 2.203125, 0.0258331298828125, 4.37109375, 1.3486328125, 0.0074310302734375, 1.28515625, 3.76953125, 1.857421875, 0.403564453125, 0.45458984375, 0.1710205078125], "tokens": [351, 415, 308, 466, 610, 744, 1276, 23529, 2377, 1334, 27, 301]}
{"line_number": 1762, "line_type": "generated", "code": "\n            return -1;\n        }\n        int len = matcher.isMatch(buffer, startIndex, size);\n        if (len == 0) {\n            return startIndex;\n        }\n        if (len < 0) {\n            return -1;\n       ", "entropy": 0.169677734375, "is_bug_line": false, "sus_score": 0.71844881772995, "per_token_entropy": [1.3544921875, 0.03948974609375, 0.031036376953125, 0.00041484832763671875, 0.0030040740966796875, 0.045318603515625, 0.0269012451171875, 0.1064453125, 0.66162109375, 0.54833984375, 0.0120849609375, 1.1083984375, 0.004871368408203125, 0.001605987548828125, 0.4140625, 0.2587890625, 0.31640625, 0.0149078369140625, 0.53515625, 0.1744384765625, 0.412841796875, 0.2305908203125, 0.05413818359375, 0.1048583984375, 0.0007534027099609375, 0.0013256072998046875, 0.489501953125, 0.1329345703125, 0.00742340087890625, 0.034576416015625, 0.0014629364013671875, 0.08135986328125, 0.04522705078125, 0.5771484375, 0.00689697265625, 0.0423583984375, 0.0003192424774169922, 0.09381103515625, 0.54736328125, 0.0009984970092773438, 0.004253387451171875, 0.08624267578125, 0.00916290283203125, 0.00018525123596191406, 0.0257568359375, 0.00019788742065429688, 0.044281005859375, 0.0289764404296875, 0.07574462890625, 0.0003707408905029297, 0.00021886825561523438, 0.0177154541015625], "tokens": [324, 442, 429, 35, 45, 291, 320, 291, 629, 2069, 280, 20638, 32, 297, 3665, 26, 2668, 30, 23529, 30, 1334, 293, 291, 415, 308, 1657, 610, 225, 34, 27, 301, 324, 442, 23529, 45, 291, 320, 291, 415, 308, 1657, 333, 225, 34, 27, 301, 324, 442, 429, 35, 45, 291]}
{"line_number": 1114, "line_type": "original", "code": "        System.arraycopy(buffer, endIndex, buffer, startIndex, size - endIndex);", "entropy": 0.958984375, "is_bug_line": false, "sus_score": 0.7127172946929932, "per_token_entropy": [2.31640625, 9.3359375, 0.0214080810546875, 0.1729736328125, 0.0152435302734375, 0.030853271484375, 0.0012674331665039062, 3.666015625, 1.31640625, 0.045928955078125, 0.054962158203125, 0.00011980533599853516, 0.94189453125, 0.0328369140625, 0.221923828125, 0.0111083984375, 0.020965576171875, 0.004364013671875, 0.004970550537109375], "tokens": [351, 1171, 32, 40863, 26, 2668, 30, 943, 1284, 30, 3112, 30, 23529, 30, 1334, 429, 943, 1284, 293]}
{"line_number": 1114, "line_type": "generated", "code": "\n     * @return this, to enable chaining\n     */\n    public StrBuilder deleteAll(String ch) {\n        return deleteAll(ch, 0, ch.length());\n    }\n\n    /**\n     * Deletes the character wherever it occurs in the builder", "entropy": 0.1114501953125, "is_bug_line": false, "sus_score": 0.7127172946929932, "per_token_entropy": [0.29736328125, 0.0224456787109375, 0.001453399658203125, 0.0789794921875, 0.006744384765625, 0.0018100738525390625, 8.702278137207031e-05, 9.500980377197266e-05, 0.0006947517395019531, 0.08624267578125, 0.09747314453125, 0.052581787109375, 0.00705718994140625, 0.0019130706787109375, 1.430511474609375e-06, 0.0012063980102539062, 0.401611328125, 0.08221435546875, 1.41015625, 0.07537841796875, 0.0027027130126953125, 0.01003265380859375, 0.0753173828125, 1.3603515625, 0.2705078125, 0.052764892578125, 0.0245361328125, 0.0267486572265625, 0.463134765625, 0.035858154296875, 0.00018084049224853516, 0.098876953125, 0.051483154296875, 0.01233673095703125, 6.246566772460938e-05, 0.005847930908203125, 0.016387939453125, 9.894371032714844e-05, 0.073974609375, 0.034027099609375, 0.00033593177795410156, 3.0994415283203125e-05, 0.0032062530517578125, 0.2239990234375, 0.273193359375, 0.007587432861328125, 5.412101745605469e-05, 0.0032444000244140625, 0.00011396408081054688, 0.031585693359375, 0.0145111083984375, 5.447864532470703e-05], "tokens": [275, 319, 477, 601, 458, 30, 372, 5352, 38009, 275, 569, 284, 562, 6700, 1796, 3066, 1934, 26, 652, 663, 27, 301, 291, 442, 3066, 1934, 26, 380, 30, 225, 34, 30, 663, 32, 1322, 1035, 284, 320, 446, 1022, 275, 319, 34391, 322, 5341, 2154, 424, 561, 12984, 328, 322, 4906]}
{"line_number": 126, "line_type": "original", "code": "            append(str);", "entropy": 4.98828125, "is_bug_line": false, "sus_score": 0.679216206073761, "per_token_entropy": [8.546875, 8.5859375, 1.470703125, 3.814453125, 2.52734375], "tokens": [1468, 5489, 26, 466, 293]}
{"line_number": 126, "line_type": "generated", "code": "\n    /**\n     * Appends the string representation of an array of characters.\n     *\n     * @param array  the array to add, null treated as empty array\n     * @return this, to enable chaining\n     */\n    public StrBuilder append(char[]", "entropy": 0.2332763671875, "is_bug_line": false, "sus_score": 0.679216206073761, "per_token_entropy": [0.70068359375, 0.437744140625, 0.00971221923828125, 4.863739013671875e-05, 1.150390625, 3.8743019104003906e-05, 0.51904296875, 1.2509765625, 0.88623046875, 0.00012969970703125, 0.56298828125, 0.30029296875, 0.8173828125, 0.943359375, 0.064208984375, 0.005634307861328125, 0.00015807151794433594, 0.96435546875, 1.2159347534179688e-05, 0.003147125244140625, 0.001003265380859375, 0.89892578125, 0.11346435546875, 0.0170745849609375, 0.0291290283203125, 0.1695556640625, 0.18701171875, 0.375, 0.1829833984375, 0.53076171875, 0.0160675048828125, 0.537109375, 0.176025390625, 0.006511688232421875, 0.0006084442138671875, 8.547306060791016e-05, 0.0362548828125, 0.0010862350463867188, 0.0016727447509765625, 0.0028781890869140625, 5.507469177246094e-05, 0.002849578857421875, 0.00728607177734375, 0.11651611328125, 0.00756072998046875, 0.043060302734375, 0.008941650390625, 1.9073486328125e-06, 0.00273895263671875, 0.004009246826171875, 0.00620269775390625, 0.0316162109375], "tokens": [284, 1022, 275, 319, 1995, 1494, 322, 802, 10293, 432, 600, 1417, 432, 7125, 32, 275, 319, 275, 319, 477, 753, 1417, 225, 322, 1417, 372, 1015, 30, 744, 23902, 619, 3502, 1417, 275, 319, 477, 601, 458, 30, 372, 5352, 38009, 275, 569, 284, 562, 6700, 1796, 5489, 26, 1594, 1178]}
{"line_number": 122, "line_type": "original", "code": "        if (str == null) {", "entropy": 1.693359375, "is_bug_line": false, "sus_score": 0.6740359663963318, "per_token_entropy": [6.0, 2.462890625, 0.0323486328125, 4.03515625, 0.75, 0.0118560791015625, 0.216796875, 0.038543701171875], "tokens": [351, 415, 308, 466, 610, 744, 27, 301]}
{"line_number": 122, "line_type": "generated", "code": "\n        return this;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Gets the length of the string.\n     *\n     * @return the length\n     */\n    public int length() {\n        return size;\n    }\n\n    /**\n     * Is the string empty.\n    ", "entropy": 0.16357421875, "is_bug_line": false, "sus_score": 0.6740359663963318, "per_token_entropy": [0.173828125, 0.228759765625, 0.005657196044921875, 0.0018281936645507812, 0.047882080078125, 0.0008373260498046875, 0.1920166015625, 0.2364501953125, 0.0024738311767578125, 0.012847900390625, 0.007049560546875, 0.0014667510986328125, 2.6464462280273438e-05, 0.57958984375, 0.0099639892578125, 0.34228515625, 0.004058837890625, 0.00907135009765625, 0.0533447265625, 2.447265625, 0.00046634674072265625, 1.8477439880371094e-05, 0.1590576171875, 8.225440979003906e-06, 9.47713851928711e-05, 0.0002111196517944336, 0.07855224609375, 0.0013275146484375, 0.094482421875, 0.0219573974609375, 0.00968170166015625, 0.488525390625, 0.002750396728515625, 0.0035533905029296875, 0.00014162063598632812, 0.00011980533599853516, 0.0230255126953125, 0.0112152099609375, 0.003002166748046875, 0.00946807861328125, 0.0181121826171875, 2.467632293701172e-05, 0.06085205078125, 0.0418701171875, 0.0004761219024658203, 1.0728836059570312e-05, 1.8916015625, 0.0035953521728515625, 0.861328125, 0.253173828125, 0.11181640625, 0.00103759765625], "tokens": [291, 442, 458, 45, 284, 320, 446, 434, 42510, 284, 1022, 275, 319, 7124, 322, 3104, 432, 322, 802, 32, 275, 319, 275, 319, 477, 601, 322, 3104, 275, 569, 284, 562, 629, 3104, 346, 301, 291, 442, 1334, 45, 284, 320, 446, 1022, 275, 319, 3611, 322, 802, 3502, 32, 275]}
{"line_number": 1204, "line_type": "original", "code": "            int index = indexOf(str, 0);", "entropy": 1.8623046875, "is_bug_line": false, "sus_score": 0.6616723537445068, "per_token_entropy": [6.27734375, 2.642578125, 3.982421875, 0.084228515625, 4.15234375, 0.1845703125, 1.8828125, 0.0301055908203125, 1.1953125, 0.0025482177734375, 0.05499267578125], "tokens": [1468, 629, 1650, 280, 40635, 26, 466, 30, 225, 34, 293]}
{"line_number": 1204, "line_type": "generated", "code": "\n        if (insertLen > 0) {\n            ensureCapacity(newSize);\n            System.arraycopy(buffer, endIndex, buffer, startIndex + insertLen, size - endIndex);\n            if (insertStr!= null) {\n                buffer.replace", "entropy": 0.2117919921875, "is_bug_line": false, "sus_score": 0.6616723537445068, "per_token_entropy": [0.1806640625, 0.6396484375, 0.014251708984375, 1.0146484375, 0.8359375, 1.2568359375, 0.045074462890625, 0.0010137557983398438, 0.282958984375, 0.0026645660400390625, 0.09967041015625, 1.6923828125, 0.134765625, 0.251953125, 0.10772705078125, 0.00021839141845703125, 0.024993896484375, 0.62158203125, 0.47412109375, 0.001964569091796875, 2.4557113647460938e-05, 0.001987457275390625, 0.0032176971435546875, 0.00013816356658935547, 0.26025390625, 0.00010979175567626953, 0.0018768310546875, 0.01055908203125, 1.3232231140136719e-05, 0.00543212890625, 0.0034618377685546875, 0.0010290145874023438, 6.258487701416016e-05, 0.00033855438232421875, 0.10546875, 0.0005769729614257812, 0.0018310546875, 2.1457672119140625e-06, 0.0005211830139160156, 0.32763671875, 0.796875, 0.004970550537109375, 0.03936767578125, 0.0196990966796875, 0.034332275390625, 0.0018863677978515625, 0.006145477294921875, 0.0012531280517578125, 0.02001953125, 1.0322265625, 0.26220703125, 0.387939453125], "tokens": [291, 415, 308, 3215, 5745, 848, 225, 34, 27, 301, 324, 7279, 13133, 26, 890, 1250, 293, 324, 1171, 32, 40863, 26, 2668, 30, 943, 1284, 30, 3112, 30, 23529, 474, 5551, 5745, 30, 1334, 429, 943, 1284, 293, 324, 415, 308, 3215, 2007, 863, 744, 27, 301, 400, 3112, 32, 3227]}
{"line_number": 1206, "line_type": "original", "code": "                deleteImpl(index, index + len, len);", "entropy": 1.609375, "is_bug_line": false, "sus_score": 0.6616723537445068, "per_token_entropy": [6.32421875, 6.25390625, 0.1297607421875, 0.022247314453125, 3.7265625, 0.2490234375, 0.18798828125, 0.05078125, 1.8720703125, 0.07373046875, 0.400390625, 0.024993896484375], "tokens": [2071, 3066, 3482, 26, 1055, 30, 1650, 474, 2069, 30, 2069, 293]}
{"line_number": 1206, "line_type": "generated", "code": "\n        }\n        if (insertLen > 0) {", "entropy": 0.267333984375, "is_bug_line": false, "sus_score": 0.6616723537445068, "per_token_entropy": [0.86376953125, 0.018585205078125, 0.681640625, 1.0146484375, 0.004978179931640625, 0.09954833984375, 0.31787109375, 0.142578125, 0.0091400146484375, 0.00016796588897705078, 0.048736572265625, 0.0069580078125], "tokens": [291, 320, 291, 415, 308, 3215, 5745, 848, 225, 34, 27, 301]}
{"line_number": 1747, "line_type": "original", "code": "        return indexOf(str, 0);", "entropy": 1.09765625, "is_bug_line": false, "sus_score": 0.6616723537445068, "per_token_entropy": [4.48828125, 0.56591796875, 0.49658203125, 0.013946533203125, 2.7421875, 0.38330078125, 1.14453125, 0.000568389892578125, 0.045928955078125], "tokens": [351, 442, 40635, 26, 466, 30, 225, 34, 293]}
{"line_number": 1747, "line_type": "generated", "code": "\n     */\n    public int indexOf(StrMatcher matcher) {\n        return indexOf(matcher, 0);\n    }\n\n    /**\n     * Searches the string builder using the matcher to find the first match.\n     * <p>\n     * Matchers can", "entropy": 0.048370361328125, "is_bug_line": false, "sus_score": 0.6616723537445068, "per_token_entropy": [0.368408203125, 0.63330078125, 0.0328369140625, 0.00684356689453125, 0.0007662773132324219, 0.0001876354217529297, 0.0003452301025390625, 0.007541656494140625, 3.0994415283203125e-06, 1.049041748046875e-05, 0.032501220703125, 0.0257110595703125, 0.236572265625, 0.032379150390625, 0.0008244514465332031, 0.0003933906555175781, 0.0005254745483398438, 0.00010287761688232422, 0.0005025863647460938, 1.7523765563964844e-05, 0.00223541259765625, 0.0184173583984375, 0.0004134178161621094, 0.06561279296875, 0.00879669189453125, 0.0027370452880859375, 8.940696716308594e-06, 0.0014019012451171875, -0.0, 2.396106719970703e-05, 0.0005335807800292969, 0.01232147216796875, 0.0017299652099609375, 0.0292205810546875, 0.0006251335144042969, 0.0021610260009765625, 0.0014562606811523438, 0.0005521774291992188, 0.004795074462890625, 0.0030345916748046875, 0.0243682861328125, 0.86669921875, 0.0020732879638671875, 1.0848045349121094e-05, 0.06744384765625, 0.00016224384307861328, 3.7670135498046875e-05, 0.00010275840759277344, 6.67572021484375e-06, 0.018035888671875, 9.655952453613281e-06, 1.2159347534179688e-05], "tokens": [275, 569, 284, 562, 629, 40635, 26, 2007, 11945, 20638, 27, 301, 291, 442, 40635, 26, 16937, 30, 225, 34, 293, 284, 320, 446, 1022, 275, 319, 358, 1928, 2907, 322, 802, 4906, 1471, 322, 20638, 372, 2290, 322, 1932, 2530, 32, 275, 319, 333, 98, 48, 275, 319, 12253, 483, 883]}
{"line_number": 476, "line_type": "original", "code": "            str.getChars(0, strLen, buffer, len);", "entropy": 1.02734375, "is_bug_line": false, "sus_score": 0.6608415842056274, "per_token_entropy": [7.1875, 7.47265625, 0.170166015625, 0.1248779296875, 0.00021219253540039062, 0.0057220458984375, 0.10150146484375, 0.0006532669067382812, 0.034149169921875, 0.01197052001953125, 0.00577545166015625, 0.1661376953125, 0.003482818603515625, 0.10211181640625, 0.0196533203125], "tokens": [1468, 596, 32, 371, 16364, 26, 34, 30, 596, 5745, 30, 3112, 30, 2069, 293]}
{"line_number": 476, "line_type": "generated", "code": "\n            size += strLen;\n        }\n        return this;\n    }\n\n    /**\n     * Appends part of a string buffer to this string builder.\n     * Appending null will call {@link #appendNull()}.\n     *\n     * @param str  the", "entropy": 0.00762939453125, "is_bug_line": false, "sus_score": 0.6608415842056274, "per_token_entropy": [0.0155792236328125, 0.0016965866088867188, 0.00188446044921875, 0.001064300537109375, 0.0021724700927734375, 0.00018346309661865234, 0.00644683837890625, 3.695487976074219e-05, 0.005035400390625, 7.18832015991211e-05, 6.270408630371094e-05, 1.1563301086425781e-05, 0.0032825469970703125, 7.331371307373047e-05, 0.047576904296875, 0.0108795166015625, 0.0007586479187011719, 1.3947486877441406e-05, 0.0139312744140625, 5.364418029785156e-05, 0.2215576171875, 0.0002206563949584961, 0.0004906654357910156, 0.0097198486328125, 0.00771331787109375, 0.0016832351684570312, 0.0037059783935546875, 0.00033664703369140625, 0.0012445449829101562, 0.0003867149353027344, 0.0007338523864746094, 8.58306884765625e-06, 0.004119873046875, 8.821487426757812e-06, 0.0015554428100585938, 0.00043392181396484375, 0.0003566741943359375, 0.00022935867309570312, 4.0411949157714844e-05, 9.548664093017578e-05, 0.0001322031021118164, 0.0002791881561279297, 0.0007271766662597656, 0.0006074905395507812, 9.5367431640625e-06, 0.0185546875, 2.1457672119140625e-05, 9.226799011230469e-05, 4.661083221435547e-05, 0.0083770751953125, 0.002254486083984375, 7.522106170654297e-05], "tokens": [324, 1334, 1454, 596, 5745, 45, 291, 320, 291, 442, 458, 45, 284, 320, 446, 1022, 275, 319, 1995, 1494, 1742, 432, 312, 802, 3112, 372, 458, 802, 4906, 32, 275, 319, 1995, 4013, 744, 1098, 1476, 3088, 1204, 588, 1689, 1883, 41264, 275, 319, 275, 319, 477, 753, 596, 225, 322]}
{"line_number": 477, "line_type": "original", "code": "            size += strLen;", "entropy": 1.9384765625, "is_bug_line": false, "sus_score": 0.6579398512840271, "per_token_entropy": [7.87890625, 3.056640625, 0.345703125, 0.130126953125, 0.1890869140625, 0.03582763671875], "tokens": [1468, 1334, 1454, 596, 5745, 45]}
{"line_number": 477, "line_type": "generated", "code": "\n        }\n        return this;\n    }\n\n    /**\n     * Appends part of a string buffer to this string builder.\n     * Appending null will call {@link #appendNull()}.\n     *\n     * @param str  the string buffer to append\n     *", "entropy": 0.0098724365234375, "is_bug_line": false, "sus_score": 0.6579398512840271, "per_token_entropy": [0.025726318359375, 0.0001475811004638672, 0.005786895751953125, 0.00017464160919189453, 8.821487426757812e-05, 0.00011157989501953125, 0.0127410888671875, 0.00012969970703125, 0.055633544921875, 0.0101470947265625, 0.0012636184692382812, 3.3974647521972656e-05, 0.0140228271484375, 5.030632019042969e-05, 0.2166748046875, 0.0002837181091308594, 0.0006213188171386719, 0.01139068603515625, 0.006679534912109375, 0.0016536712646484375, 0.003925323486328125, 0.0003516674041748047, 0.0013751983642578125, 0.0003769397735595703, 0.0008921623229980469, 5.7220458984375e-06, 0.00432586669921875, 8.106231689453125e-06, 0.0015172958374023438, 0.00048279762268066406, 0.0003135204315185547, 0.00024175643920898438, 4.839897155761719e-05, 0.0001188516616821289, 0.00014090538024902344, 0.0002639293670654297, 0.0005526542663574219, 0.0007925033569335938, 1.049041748046875e-05, 0.017425537109375, 4.017353057861328e-05, 0.00011277198791503906, 5.936622619628906e-05, 0.0089874267578125, 0.00213623046875, 6.973743438720703e-05, 0.0030384063720703125, 0.0826416015625, 0.00177001953125, 0.00042247772216796875, 0.0174102783203125, 9.5367431640625e-07], "tokens": [291, 320, 291, 442, 458, 45, 284, 320, 446, 1022, 275, 319, 1995, 1494, 1742, 432, 312, 802, 3112, 372, 458, 802, 4906, 32, 275, 319, 1995, 4013, 744, 1098, 1476, 3088, 1204, 588, 1689, 1883, 41264, 275, 319, 275, 319, 477, 753, 596, 225, 322, 802, 3112, 372, 5489, 275, 319]}
{"line_number": 1184, "line_type": "original", "code": "        int len = (str == null ? 0 : str.length());", "entropy": 0.794921875, "is_bug_line": false, "sus_score": 0.6479337811470032, "per_token_entropy": [3.689453125, 2.55859375, 3.341796875, 0.0297088623046875, 0.76220703125, 2.294921875, 0.0093994140625, 0.00022709369659423828, 0.0010671615600585938, 0.00409698486328125, 0.0002815723419189453, 0.0003159046173095703, 0.002483367919921875, 0.00014221668243408203, 0.0007901191711425781, 0.0203704833984375], "tokens": [351, 629, 2069, 280, 308, 466, 610, 744, 1018, 225, 34, 499, 596, 32, 1322, 1035]}
{"line_number": 1184, "line_type": "generated", "code": "\n     * @param matcher  the matcher to use to find the deletion, null causes no action\n     * @return this, to enable chaining\n     */\n    public StrBuilder deleteFirst(StrMatcher matcher) {\n        return replace(matcher, null, 0", "entropy": 0.022216796875, "is_bug_line": false, "sus_score": 0.6479337811470032, "per_token_entropy": [0.1734619140625, 0.002529144287109375, 0.09063720703125, 0.00946044921875, 0.00299835205078125, 0.0052337646484375, 0.0019626617431640625, 0.00035381317138671875, 0.004337310791015625, 0.015167236328125, 0.0022220611572265625, 0.0124359130859375, 0.00328826904296875, 0.02178955078125, 0.03125, 0.0007839202880859375, 0.00626373291015625, 0.00010645389556884766, 0.00048804283142089844, 0.0258331298828125, 1.6450881958007812e-05, 0.0001976490020751953, 0.0010223388671875, 0.0308990478515625, 0.0019931793212890625, 0.0001131296157836914, 0.00016105175018310547, 0.0005941390991210938, 0.006664276123046875, 0.07269287109375, 0.0127105712890625, 0.0014562606811523438, 0.0002989768981933594, 2.384185791015625e-07, 7.319450378417969e-05, 0.0002446174621582031, 5.066394805908203e-05, 0.0092010498046875, 6.866455078125e-05, 6.556510925292969e-06, 9.250640869140625e-05, 0.01349639892578125, 0.0970458984375, 0.362060546875, 0.007518768310546875, 0.11767578125, 0.0026111602783203125, 4.5299530029296875e-05, 0.0028247833251953125, 0.00017559528350830078, 0.0013780593872070312, 0.0009927749633789062], "tokens": [275, 319, 477, 753, 20638, 225, 322, 20638, 372, 793, 372, 2290, 322, 22602, 30, 744, 15663, 1289, 2125, 275, 319, 477, 601, 458, 30, 372, 5352, 38009, 275, 569, 284, 562, 6700, 1796, 3066, 3472, 26, 2007, 11945, 20638, 27, 301, 291, 442, 7084, 26, 16937, 30, 744, 30, 225, 34]}
{"line_number": 1185, "line_type": "original", "code": "        if (len > 0) {", "entropy": 1.3857421875, "is_bug_line": false, "sus_score": 0.643153190612793, "per_token_entropy": [3.97265625, 0.83203125, 0.016387939453125, 6.421875, 0.56201171875, 0.006244659423828125, 0.004756927490234375, 0.497314453125, 0.1566162109375], "tokens": [351, 415, 308, 1657, 848, 225, 34, 27, 301]}
{"line_number": 1185, "line_type": "generated", "code": "\n     * @return this, to enable chaining\n     */\n    public StrBuilder deleteFirst(StrMatcher matcher) {\n        return replace(matcher, null, 0, size, 1);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Replaces each substring", "entropy": 0.08624267578125, "is_bug_line": false, "sus_score": 0.643153190612793, "per_token_entropy": [0.56787109375, 0.080078125, 0.001529693603515625, 0.002696990966796875, 0.0216217041015625, 0.0026702880859375, 0.0002071857452392578, 0.0002359151840209961, 0.0010824203491210938, 0.264404296875, 0.05401611328125, 0.03302001953125, 0.0018568038940429688, 0.0005221366882324219, 1.1920928955078125e-07, 0.00012886524200439453, 0.00030159950256347656, 4.7326087951660156e-05, 0.00543212890625, 6.23464584350586e-05, 7.62939453125e-06, 0.00019228458404541016, 0.024261474609375, 0.0733642578125, 0.465087890625, 0.0084686279296875, 0.1123046875, 0.0031642913818359375, 7.462501525878906e-05, 0.0031375885009765625, 0.00023555755615234375, 0.0017690658569335938, 0.0009236335754394531, 0.0007791519165039062, 0.061553955078125, 0.002498626708984375, 0.0369873046875, 0.004657745361328125, 0.0008244514465332031, 0.060760498046875, 0.0007066726684570312, 0.2252197265625, 0.089599609375, 0.0007452964782714844, 0.0259552001953125, 0.0161895751953125, 0.00443267822265625, 4.57763671875e-05, 0.46484375, 0.20849609375, 1.421875, 0.1287841796875], "tokens": [275, 319, 477, 601, 458, 30, 372, 5352, 38009, 275, 569, 284, 562, 6700, 1796, 3066, 3472, 26, 2007, 11945, 20638, 27, 301, 291, 442, 7084, 26, 16937, 30, 744, 30, 225, 34, 30, 1334, 30, 225, 35, 293, 284, 320, 446, 434, 42510, 284, 1022, 275, 319, 902, 15778, 2504, 33826]}
{"line_number": 1187, "line_type": "original", "code": "            while (index >= 0) {", "entropy": 1.4375, "is_bug_line": false, "sus_score": 0.643153190612793, "per_token_entropy": [6.828125, 4.1953125, 0.08563232421875, 1.3935546875, 0.208251953125, 0.006603240966796875, 0.00011491775512695312, 0.11590576171875, 0.1075439453125], "tokens": [1468, 2218, 308, 1055, 2377, 225, 34, 27, 301]}
{"line_number": 1187, "line_type": "generated", "code": "\n    public StrBuilder deleteFirst(StrMatcher matcher) {\n        return replace(matcher, null, 0, size, 1);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Deletes all the text contained in the specified tag.\n     *\n     * @", "entropy": 0.182861328125, "is_bug_line": false, "sus_score": 0.643153190612793, "per_token_entropy": [0.34375, 0.057037353515625, 0.0038299560546875, 5.960464477539062e-07, 0.0003788471221923828, 0.000598907470703125, 0.000148773193359375, 0.00501251220703125, 5.7697296142578125e-05, 1.33514404296875e-05, 0.0007104873657226562, 0.042022705078125, 0.0975341796875, 0.359619140625, 0.010650634765625, 0.11212158203125, 0.0030193328857421875, 0.00021159648895263672, 0.004390716552734375, 0.0005741119384765625, 0.0018587112426757812, 0.0009107589721679688, 0.0013828277587890625, 0.03277587890625, 0.003810882568359375, 0.0760498046875, 0.0049896240234375, 0.0018911361694335938, 0.043365478515625, 0.001323699951171875, 0.1842041015625, 0.166015625, 0.0011148452758789062, 0.034149169921875, 0.01788330078125, 0.002147674560546875, 4.482269287109375e-05, 1.0234375, 0.5029296875, 0.91455078125, 0.9638671875, 1.34765625, 0.47119140625, 0.2393798828125, 0.050811767578125, 1.1904296875, 0.364013671875, 0.01291656494140625, 0.00010085105895996094, 0.8056640625, 2.6106834411621094e-05, 0.0035953521728515625], "tokens": [284, 562, 6700, 1796, 3066, 3472, 26, 2007, 11945, 20638, 27, 301, 291, 442, 7084, 26, 16937, 30, 744, 30, 225, 34, 30, 1334, 30, 225, 35, 293, 284, 320, 446, 434, 42510, 284, 1022, 275, 319, 34391, 1169, 322, 1344, 14549, 328, 322, 3191, 2604, 32, 275, 319, 275, 319, 477]}
{"line_number": 472, "line_type": "original", "code": "        int strLen = str.length();", "entropy": 1.9580078125, "is_bug_line": false, "sus_score": 0.6295773983001709, "per_token_entropy": [6.27734375, 3.712890625, 5.6640625, 1.697265625, 0.07537841796875, 0.1439208984375, 0.0213775634765625, 0.00936126708984375, 0.0191650390625], "tokens": [351, 629, 596, 5745, 280, 596, 32, 1322, 473]}
{"line_number": 472, "line_type": "generated", "code": "\n        if (strLen > 0) {\n            int len = length();\n            ensureCapacity(len + strLen);\n            str.getChars(0, strLen, buffer, len);\n            size += strLen;\n        }\n        return this;", "entropy": 0.00311279296875, "is_bug_line": false, "sus_score": 0.6295773983001709, "per_token_entropy": [0.0260772705078125, 0.025634765625, 0.00020015239715576172, 0.001590728759765625, 0.001163482666015625, 0.005390167236328125, 0.0001837015151977539, 3.790855407714844e-05, 0.00037288665771484375, 0.001552581787109375, 0.003040313720703125, 0.0246734619140625, 0.00478363037109375, 0.0001323223114013672, 0.001739501953125, 0.00019693374633789062, 0.0021305084228515625, 0.00423431396484375, 4.124641418457031e-05, 0.00012934207916259766, 0.0012378692626953125, 0.00011336803436279297, 0.0002703666687011719, 0.002323150634765625, 0.0002067089080810547, 0.006855010986328125, 0.023895263671875, 0.0003044605255126953, 0.00011491775512695312, 0.00011789798736572266, 1.6570091247558594e-05, 0.004459381103515625, 4.5180320739746094e-05, 0.0016679763793945312, 0.0006127357482910156, 0.0001785755157470703, 0.00034737586975097656, 2.5510787963867188e-05, 0.0005059242248535156, 6.604194641113281e-05, 0.0025634765625, 0.000896453857421875, 0.0007495880126953125, 0.00040268898010253906, 0.0013189315795898438, 8.749961853027344e-05, 0.0023975372314453125, 2.9802322387695312e-05, 0.006633758544921875, 7.867813110351562e-05, 4.4226646423339844e-05, 2.276897430419922e-05], "tokens": [291, 415, 308, 466, 5745, 848, 225, 34, 27, 301, 324, 629, 2069, 280, 3104, 473, 324, 7279, 13133, 26, 1657, 474, 596, 5745, 293, 324, 596, 32, 371, 16364, 26, 34, 30, 596, 5745, 30, 3112, 30, 2069, 293, 324, 1334, 1454, 596, 5745, 45, 291, 320, 291, 442, 458, 45]}
{"line_number": 1203, "line_type": "original", "code": "        if (len > 0) {", "entropy": 1.45703125, "is_bug_line": false, "sus_score": 0.6195535063743591, "per_token_entropy": [4.55859375, 0.7705078125, 0.0616455078125, 5.75390625, 1.646484375, 0.0589599609375, 0.003391265869140625, 0.183349609375, 0.07879638671875], "tokens": [351, 415, 308, 1657, 848, 225, 34, 27, 301]}
{"line_number": 1203, "line_type": "generated", "code": "\n        // check the start index\n        if (startIndex < 0) {\n            throw new StringIndexOutOfBoundsException(startIndex);\n        }\n        // check the end index\n        if (endIndex > size) {\n            throw new StringIndexOutOfBoundsException(endIndex);\n       ", "entropy": 0.265869140625, "is_bug_line": false, "sus_score": 0.6195535063743591, "per_token_entropy": [0.262939453125, 1.7998046875, 3.345703125, 2.12109375, 1.8564453125, 0.371826171875, 0.77001953125, 0.09442138671875, 0.1385498046875, 0.005931854248046875, 0.0645751953125, 0.007595062255859375, 5.817413330078125e-05, 0.29443359375, 0.00152587890625, 0.01361846923828125, 0.027496337890625, 0.00032806396484375, 0.2396240234375, 6.473064422607422e-05, 1.633167266845703e-05, 0.6513671875, 0.00620269775390625, 0.005275726318359375, 0.01215362548828125, 2.6941299438476562e-05, 0.5546875, 0.440185546875, 0.046478271484375, 0.038909912109375, 0.053253173828125, 0.004642486572265625, 0.1182861328125, 0.03765869140625, 0.007579803466796875, 0.006793975830078125, 2.8371810913085938e-05, 0.208251953125, 0.075439453125, 0.0323486328125, 0.00014162063598632812, 0.00952911376953125, 0.0631103515625, 9.906291961669922e-05, 0.0006442070007324219, 5.245208740234375e-06, 1.7523765563964844e-05, 0.0113067626953125, 0.0027599334716796875, 5.364418029785156e-06, 0.01549530029296875, 0.00344085693359375], "tokens": [291, 434, 1505, 322, 1477, 1650, 291, 415, 308, 42335, 333, 225, 34, 27, 301, 324, 1422, 537, 892, 1284, 35821, 26, 42335, 293, 291, 320, 291, 434, 1505, 322, 943, 1650, 291, 415, 308, 416, 1284, 848, 1334, 27, 301, 324, 1422, 537, 892, 1284, 35821, 26, 416, 1284, 293, 291]}
{"line_number": 1209, "line_type": "original", "code": "        return this;", "entropy": 2.345703125, "is_bug_line": false, "sus_score": 0.6195535063743591, "per_token_entropy": [4.03515625, 5.09765625, 0.247314453125, 0.002376556396484375], "tokens": [351, 442, 458, 45]}
{"line_number": 1209, "line_type": "generated", "code": "\n        if (insertStr!= null) {\n            if (insertLen > 0) {\n                insertStr.getChars(0, insertLen, buffer, startIndex);\n            }\n        } else {\n            size = newSize;\n        }\n    }\n\n   ", "entropy": 0.203125, "is_bug_line": false, "sus_score": 0.6195535063743591, "per_token_entropy": [0.55615234375, 0.8515625, 0.007110595703125, 0.1131591796875, 0.47509765625, 0.0323486328125, 0.0003485679626464844, 0.0762939453125, 0.00063323974609375, 0.042816162109375, 1.994140625, 0.01110076904296875, 0.08489990234375, 0.10614013671875, 0.6015625, 0.062042236328125, 0.0201416015625, 0.01409149169921875, 0.00079345703125, 0.01181793212890625, 1.810546875, 0.12103271484375, 0.00708770751953125, 0.00043010711669921875, 9.298324584960938e-06, 0.00015246868133544922, 0.046295166015625, 4.8279762268066406e-05, 0.0016431808471679688, 0.0045166015625, 0.0007243156433105469, 0.004077911376953125, 6.580352783203125e-05, 0.073486328125, 0.0023212432861328125, 0.09967041015625, 8.559226989746094e-05, 0.76220703125, 0.0005512237548828125, 0.896484375, 0.1094970703125, 0.0789794921875, 0.286376953125, 0.2998046875, 0.24609375, 6.222724914550781e-05, 0.0059051513671875, 0.10400390625, 9.179115295410156e-05, 0.347900390625, 0.0037021636962890625, 0.1851806640625], "tokens": [291, 415, 308, 3215, 2007, 863, 744, 27, 301, 324, 415, 308, 3215, 5745, 848, 225, 34, 27, 301, 400, 5551, 2007, 32, 371, 16364, 26, 34, 30, 5551, 5745, 30, 3112, 30, 23529, 293, 324, 320, 291, 320, 813, 301, 324, 1334, 280, 537, 1250, 45, 291, 320, 284, 320, 446]}
{"line_number": 1189, "line_type": "original", "code": "                index = indexOf(str, index);", "entropy": 2.5390625, "is_bug_line": false, "sus_score": 0.6157861351966858, "per_token_entropy": [9.6484375, 6.12109375, 0.174072265625, 0.54345703125, 0.04864501953125, 1.869140625, 0.0289459228515625, 3.908203125, 0.50244140625], "tokens": [2071, 1650, 280, 40635, 26, 466, 30, 1650, 293]}
{"line_number": 1189, "line_type": "generated", "code": "\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Replaces each substring of the builder that matches the given matcher\n     * with the given replacement string.\n     * <p>\n     * Matchers can be used to perform advanced replacement behaviour.\n     * For example you", "entropy": 0.15283203125, "is_bug_line": false, "sus_score": 0.6157861351966858, "per_token_entropy": [0.144775390625, 0.017364501953125, 0.164306640625, 0.161865234375, 0.0012598037719726562, 0.0209808349609375, 0.0203857421875, 0.0030651092529296875, 4.6372413635253906e-05, 0.68701171875, 0.331787109375, 1.4345703125, 0.1351318359375, 0.440185546875, 0.197265625, 0.013702392578125, 0.007755279541015625, 0.180908203125, 0.0806884765625, 0.55126953125, 0.9375, 0.054534912109375, 2.7418136596679688e-05, 0.0161285400390625, 0.00856781005859375, 0.032806396484375, 0.264892578125, 0.69677734375, 0.017303466796875, 0.1549072265625, 1.0967254638671875e-05, 0.1448974609375, 0.0020599365234375, 0.00045228004455566406, 0.00018131732940673828, 1.919269561767578e-05, 0.177734375, 2.110004425048828e-05, 0.0016145706176757812, 0.00016772747039794922, 0.00036597251892089844, 0.0014448165893554688, 0.0007071495056152344, 0.01181793212890625, 0.5400390625, 0.1346435546875, 0.037109375, 0.0211639404296875, 1.537799835205078e-05, 0.06292724609375, 0.000652313232421875, 0.0335693359375], "tokens": [284, 320, 446, 434, 42510, 284, 1022, 275, 319, 902, 15778, 2504, 33826, 432, 322, 4906, 688, 8001, 322, 2702, 20638, 275, 319, 623, 322, 2702, 15909, 802, 32, 275, 319, 333, 98, 48, 275, 319, 12253, 483, 883, 526, 1654, 372, 4436, 20174, 15909, 13978, 32, 275, 319, 2616, 2280, 844]}
{"line_number": 1205, "line_type": "original", "code": "            if (index >= 0) {", "entropy": 2.056640625, "is_bug_line": false, "sus_score": 0.6157861351966858, "per_token_entropy": [4.9765625, 1.4541015625, 0.021575927734375, 5.4609375, 3.966796875, 1.955078125, 0.00353240966796875, 0.45654296875, 0.2225341796875], "tokens": [1468, 415, 308, 1055, 2377, 225, 34, 27, 301]}
{"line_number": 1205, "line_type": "generated", "code": "\n            System.arraycopy(buffer, endIndex, buffer, startIndex + insertLen, size - endIndex);\n        }", "entropy": 0.1302490234375, "is_bug_line": false, "sus_score": 0.6157861351966858, "per_token_entropy": [0.29931640625, 1.5244140625, 0.0028076171875, 0.0001633167266845703, 0.00667572021484375, 0.006626129150390625, 0.0003209114074707031, 0.287353515625, 0.0001367330551147461, 0.002208709716796875, 0.01404571533203125, 3.528594970703125e-05, 0.00217437744140625, 0.1434326171875, 0.0026340484619140625, 0.00010192394256591797, 0.0007681846618652344, 0.112060546875, 0.0009098052978515625, 0.002979278564453125, 6.67572021484375e-06, 0.0017366409301757812, 0.712890625, 0.0038909912109375], "tokens": [324, 1171, 32, 40863, 26, 2668, 30, 943, 1284, 30, 3112, 30, 23529, 474, 5551, 5745, 30, 1334, 429, 943, 1284, 293, 291, 320]}
{"line_number": 473, "line_type": "original", "code": "        if (strLen > 0) {", "entropy": 1.4345703125, "is_bug_line": false, "sus_score": 0.6102729439735413, "per_token_entropy": [7.62109375, 4.11328125, 0.021148681640625, 0.308349609375, 0.8662109375, 0.343505859375, 0.6142578125, 0.378662109375, 0.052703857421875, 0.0236053466796875], "tokens": [351, 415, 308, 466, 5745, 848, 225, 34, 27, 301]}
{"line_number": 473, "line_type": "generated", "code": "\n            int len = length();\n            ensureCapacity(len + strLen);\n            str.getChars(0, strLen, buffer, len);\n            size += strLen;\n        }\n        return this;\n    }\n\n    /**\n     * Appends part of", "entropy": 0.01363372802734375, "is_bug_line": false, "sus_score": 0.6102729439735413, "per_token_entropy": [0.1514892578125, 0.06536865234375, 0.01004791259765625, 0.00021076202392578125, 0.005199432373046875, 0.0009441375732421875, 0.002857208251953125, 0.0203857421875, 3.445148468017578e-05, 0.00025653839111328125, 0.0013580322265625, 0.00022220611572265625, 0.001163482666015625, 0.0034542083740234375, 0.0002918243408203125, 0.00792694091796875, 0.040069580078125, 0.0003902912139892578, 0.00014722347259521484, 0.00014674663543701172, 2.205371856689453e-05, 0.005779266357421875, 4.875659942626953e-05, 0.0022830963134765625, 0.0013294219970703125, 0.00020420551300048828, 0.0007100105285644531, 4.5180320739746094e-05, 0.000640869140625, 0.00010347366333007812, 0.00360107421875, 0.0006699562072753906, 0.0010080337524414062, 0.0007519721984863281, 0.0016803741455078125, 0.00021982192993164062, 0.0281524658203125, 0.00038743019104003906, 0.006458282470703125, 6.794929504394531e-05, 4.839897155761719e-05, 2.110004425048828e-05, 0.0041961669921875, 7.355213165283203e-05, 0.05419921875, 0.012847900390625, 0.000995635986328125, 1.2755393981933594e-05, 0.0153961181640625, 6.341934204101562e-05, 0.254638671875, 0.000270843505859375], "tokens": [324, 629, 2069, 280, 3104, 473, 324, 7279, 13133, 26, 1657, 474, 596, 5745, 293, 324, 596, 32, 371, 16364, 26, 34, 30, 596, 5745, 30, 3112, 30, 2069, 293, 324, 1334, 1454, 596, 5745, 45, 291, 320, 291, 442, 458, 45, 284, 320, 446, 1022, 275, 319, 1995, 1494, 1742, 432]}
