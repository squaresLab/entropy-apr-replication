{"line_number": 413, "line_type": "original", "code": "            value = tz.getDisplayName(daylight, style, locale);", "entropy": 2.111328125, "is_bug_line": false, "sus_score": 0.6361638307571411, "per_token_entropy": [8.1328125, 10.1875, 0.591796875, 8.953125, 2.279296875, 0.5888671875, 0.01390838623046875, 0.0953369140625, 0.59326171875, 0.003143310546875, 0.022552490234375, 0.052581787109375, 0.043853759765625, 0.07025146484375, 0.03570556640625], "tokens": [1468, 786, 280, 25932, 32, 371, 12566, 26, 3368, 2429, 30, 1418, 30, 11259, 293]}
{"line_number": 413, "line_type": "generated", "code": "\n    private static List<Rule> parsePattern() {\n        List<Rule> rules = new ArrayList<Rule>();\n\n        ParsePosition pos = new ParsePosition(0);\n        int[] values = new int[3];\n        String pattern = cPattern;\n       ", "entropy": 0.38916015625, "is_bug_line": false, "sus_score": 0.6361638307571411, "per_token_entropy": [0.476806640625, 0.42578125, 1.51171875, 0.03240966796875, 0.01471710205078125, 0.0021820068359375, 0.0021533966064453125, 0.001407623291015625, 0.00016260147094726562, 0.024261474609375, 0.06201171875, 0.1483154296875, 0.5830078125, 0.0074462890625, 0.006072998046875, 0.002109527587890625, 0.021942138671875, 0.4150390625, 0.00792694091796875, 0.041717529296875, 0.0794677734375, 0.0030765533447265625, 0.344970703125, 1.1396484375, 2.15625, 0.0023059844970703125, 0.254150390625, 0.004627227783203125, 0.00112152099609375, 0.0006394386291503906, 9.417533874511719e-06, 0.0006833076477050781, 0.0006046295166015625, 3.170967102050781e-05, 0.229248046875, 0.92041015625, 0.79541015625, 1.3095703125, 0.00675201416015625, 0.0278472900390625, 0.00023889541625976562, 0.061737060546875, 2.302734375, 0.005001068115234375, 0.62255859375, 0.99853515625, 0.444580078125, 0.0582275390625, 2.5078125, 0.317626953125, 1.337890625, 0.5068359375], "tokens": [284, 945, 907, 1682, 46, 3842, 48, 3185, 5516, 346, 301, 291, 1682, 46, 3842, 48, 7019, 280, 537, 5059, 46, 3842, 2923, 584, 8661, 2731, 3400, 280, 537, 8661, 2731, 26, 34, 293, 291, 629, 1178, 2078, 280, 537, 629, 77, 37, 970, 291, 892, 5257, 280, 281, 5516, 45, 291]}
{"line_number": 410, "line_type": "original", "code": "        String value = cTimeZoneDisplayCache.get(key);", "entropy": 2.3515625, "is_bug_line": false, "sus_score": 0.6307334899902344, "per_token_entropy": [5.0390625, 3.78125, 7.9609375, 0.327392578125, 6.92578125, 6.0546875, 0.218505859375, 0.0271148681640625, 0.00811004638671875, 0.048553466796875, 0.0164337158203125, 0.138427734375, 0.008544921875], "tokens": [351, 892, 786, 280, 281, 26223, 3933, 2597, 32, 371, 26, 678, 293]}
{"line_number": 410, "line_type": "generated", "code": "\n     * @return a List of Rule objects\n     */\n    private List<Rule> parsePattern() {\n        List<Rule> rules = new ArrayList<Rule>();\n        StringBuffer buf = new StringBuffer();\n        int patternLength = mPattern.length();\n        int", "entropy": 0.2169189453125, "is_bug_line": false, "sus_score": 0.6307334899902344, "per_token_entropy": [0.1876220703125, 0.259765625, 0.1832275390625, 0.08551025390625, 0.5693359375, 0.446533203125, 0.0280609130859375, 0.82177734375, 0.344970703125, 0.6484375, 0.238525390625, 0.005016326904296875, 0.71435546875, 0.06689453125, 0.00698089599609375, 0.0005955696105957031, 0.0003666877746582031, 0.00014328956604003906, 1.0967254638671875e-05, 0.00858306884765625, 0.00940704345703125, 0.091552734375, 0.390869140625, 0.004375457763671875, 0.0027904510498046875, 0.0014200210571289062, 0.0220947265625, 0.40087890625, 0.005767822265625, 0.038818359375, 0.045989990234375, 0.002025604248046875, 0.490966796875, 0.71044921875, 1.53125, 0.2000732421875, 0.0011434555053710938, 0.0013914108276367188, 0.00017404556274414062, 0.1800537109375, 0.2249755859375, 0.341796875, 1.263671875, 0.0225372314453125, 0.0092926025390625, 0.0019245147705078125, 8.249282836914062e-05, 0.00038623809814453125, 4.76837158203125e-05, 0.00015997886657714844, 0.193359375, 0.4775390625], "tokens": [275, 319, 477, 601, 312, 1682, 432, 13708, 4684, 275, 569, 284, 945, 1682, 46, 3842, 48, 3185, 5516, 346, 301, 291, 1682, 46, 3842, 48, 7019, 280, 537, 5059, 46, 3842, 2923, 291, 21933, 4845, 280, 537, 21933, 473, 291, 629, 5257, 2380, 280, 345, 5516, 32, 1322, 473, 291, 629]}
{"line_number": 414, "line_type": "original", "code": "            String prior = cTimeZoneDisplayCache.putIfAbsent(key, value);", "entropy": 2.138671875, "is_bug_line": false, "sus_score": 0.6288589835166931, "per_token_entropy": [6.90234375, 3.1796875, 10.0546875, 1.2666015625, 6.69140625, 4.859375, 0.09033203125, 0.08697509765625, 0.0181427001953125, 1.474609375, 0.78076171875, 0.0028667449951171875, 0.1455078125, 0.228759765625, 0.018585205078125, 0.52392578125, 0.0221405029296875], "tokens": [1468, 892, 9553, 280, 281, 26223, 3933, 2597, 32, 524, 2797, 28772, 26, 678, 30, 786, 293]}
{"line_number": 414, "line_type": "generated", "code": "\n        ParsePosition pos = new ParsePosition(0);\n        List<Rule> rules = new ArrayList<Rule>();\n\n        while (pos.getIndex() < mPattern.length()) {\n            int current = pos.getIndex();\n            char c = mPattern.", "entropy": 0.2310791015625, "is_bug_line": false, "sus_score": 0.6288589835166931, "per_token_entropy": [0.332763671875, 2.66015625, 0.0010700225830078125, 0.362060546875, 0.0162811279296875, 0.0018978118896484375, 0.0013866424560546875, 3.886222839355469e-05, 0.0008716583251953125, 0.0005979537963867188, 0.00013113021850585938, 0.154541015625, 0.385986328125, 0.024383544921875, 0.009857177734375, 0.0010766983032226562, 0.015350341796875, 0.41796875, 0.020751953125, 0.074462890625, 0.04974365234375, 0.003017425537109375, 0.42236328125, 0.89599609375, 1.0322265625, 0.11773681640625, 0.1302490234375, 0.0005884170532226562, 0.00855255126953125, 3.7550926208496094e-05, 0.060699462890625, 0.0479736328125, 0.0015621185302734375, 0.0023345947265625, 4.6133995056152344e-05, 0.01551055908203125, 0.0014104843139648438, 0.07440185546875, 0.2349853515625, 2.482421875, 0.047210693359375, 0.389892578125, 3.719329833984375e-05, 0.00036144256591796875, 0.0032329559326171875, 0.6689453125, 0.67626953125, 0.1474609375, 0.0061492919921875, 0.0092010498046875, 0.0005230903625488281, 0.00013971328735351562], "tokens": [291, 8661, 2731, 3400, 280, 537, 8661, 2731, 26, 34, 293, 291, 1682, 46, 3842, 48, 7019, 280, 537, 5059, 46, 3842, 2923, 584, 2218, 308, 966, 32, 27829, 346, 333, 345, 5516, 32, 1322, 1157, 301, 324, 629, 1550, 280, 3400, 32, 27829, 473, 324, 1351, 281, 280, 345, 5516, 32]}
{"line_number": 1023, "line_type": "original", "code": "            buffer.append(mValues[calendar.get(mField)]);", "entropy": 1.5, "is_bug_line": false, "sus_score": 0.6275731921195984, "per_token_entropy": [7.74609375, 6.390625, 0.004299163818359375, 0.0193328857421875, 1.005859375, 2.54296875, 1.5830078125, 0.1373291015625, 0.537109375, 0.005733489990234375, 0.0038547515869140625, 0.0116729736328125, 2.201171875, 0.0087127685546875, 0.296875], "tokens": [1468, 3112, 32, 1689, 26, 95, 3354, 77, 10542, 32, 371, 26, 95, 1176, 36263]}
{"line_number": 1023, "line_type": "generated", "code": "\n     */\n    private static class UnpaddedMonthField implements NumberRule {\n        /**\n         * {@inheritDoc}\n         */\n        public int estimateLength() {\n            return 2;\n        }\n\n        /**\n         * {@inheritDoc}\n         */\n        public void appendTo(", "entropy": 0.0465087890625, "is_bug_line": false, "sus_score": 0.6275731921195984, "per_token_entropy": [0.442626953125, 0.11181640625, 0.0251312255859375, 0.0168304443359375, 0.0046844482421875, 0.039764404296875, 0.07403564453125, 0.0007281303405761719, 0.007717132568359375, 0.0253448486328125, 0.4287109375, 0.2294921875, 0.0015153884887695312, 0.020782470703125, 0.25341796875, 0.318359375, 0.0287017822265625, 0.00098419189453125, 0.07501220703125, 0.00037384033203125, 9.1552734375e-05, 0.01399993896484375, 0.002063751220703125, 0.00494384765625, 0.0017604827880859375, 0.0474853515625, 0.00021922588348388672, 4.589557647705078e-05, 0.0007805824279785156, 0.00013327598571777344, 0.055511474609375, 0.00736236572265625, 0.0257568359375, 0.10406494140625, 0.0006527900695800781, 0.007282257080078125, 5.984306335449219e-05, 0.01500701904296875, 0.00151824951171875, 0.0018396377563476562, 8.368492126464844e-05, 0.002552032470703125, 0.00022852420806884766, 0.00014126300811767578, 0.0038318634033203125, 0.0014905929565429688, 0.0022182464599609375, 0.00022399425506591797, 0.01126861572265625, 2.0623207092285156e-05, 3.421306610107422e-05, 6.318092346191406e-05], "tokens": [275, 569, 284, 945, 907, 443, 1683, 34294, 7357, 1176, 4575, 5104, 3842, 301, 291, 1022, 276, 319, 3088, 18446, 111, 276, 569, 291, 562, 629, 20772, 2380, 346, 301, 324, 442, 225, 36, 45, 291, 320, 584, 1022, 276, 319, 3088, 18446, 111, 276, 569, 291, 562, 763, 5489, 705, 26]}
{"line_number": 1247, "line_type": "original", "code": "            buffer.append((char)(value / 10 + '0'));", "entropy": 0.57666015625, "is_bug_line": false, "sus_score": 0.6244462132453918, "per_token_entropy": [3.634765625, 3.986328125, 0.006366729736328125, 0.01177215576171875, 0.249755859375, 0.01373291015625, 0.1578369140625, 0.052398681640625, 1.0595703125, 0.00525665283203125, 0.004344940185546875, 0.004241943359375, 0.00887298583984375, 0.00439453125, 0.015777587890625, 0.00933837890625], "tokens": [1468, 3112, 32, 1689, 1162, 1594, 2502, 853, 517, 225, 35, 34, 474, 330, 34, 4646]}
{"line_number": 1247, "line_type": "generated", "code": "\n         * @param rule the rule for outputting the hour of the day.\n         */\n        TwelveHourField(NumberRule rule) {\n            super();\n\n            mRule = rule;\n        }\n\n        /**\n         * {@inheritDoc}\n         */\n        public", "entropy": 0.255126953125, "is_bug_line": false, "sus_score": 0.6244462132453918, "per_token_entropy": [0.308349609375, 0.51123046875, 1.1025390625, 0.0016489028930664062, 0.041229248046875, 0.64208984375, 1.173828125, 1.8837890625, 1.22265625, 0.0289306640625, 0.2032470703125, 0.81298828125, 1.0068359375, 1.0419921875, 0.045806884765625, 1.251953125, 0.1234130859375, 0.03533935546875, 0.004398345947265625, 0.0181427001953125, 4.76837158203125e-07, 1.1920928955078125e-06, 4.76837158203125e-07, 2.1457672119140625e-06, 0.0009946823120117188, 0.11053466796875, 2.396106719970703e-05, 0.0002682209014892578, 0.0008139610290527344, 0.0024890899658203125, 0.0209808349609375, 0.2080078125, 0.00020444393157958984, 1.0859375, 0.2222900390625, 4.220008850097656e-05, 0.0021724700927734375, 0.01233673095703125, 0.00408172607421875, 0.01078033447265625, 5.352497100830078e-05, 0.0208587646484375, 0.0031375885009765625, 0.0017118453979492188, 0.0003287792205810547, 0.0341796875, 0.0001291036605834961, 8.618831634521484e-05, 0.05340576171875, 0.0031890869140625, 0.003131866455078125, 0.0011577606201171875], "tokens": [276, 319, 477, 753, 5750, 322, 5750, 436, 1688, 1054, 322, 12021, 432, 322, 5808, 32, 276, 569, 291, 12038, 342, 587, 14415, 1176, 26, 1918, 3842, 5750, 27, 301, 324, 2599, 473, 1064, 345, 3842, 280, 5750, 45, 291, 320, 584, 1022, 276, 319, 3088, 18446, 111, 276, 569, 291, 562]}
{"line_number": 1248, "line_type": "original", "code": "            buffer.append((char)(value % 10 + '0'));", "entropy": 0.58642578125, "is_bug_line": false, "sus_score": 0.6244462132453918, "per_token_entropy": [3.630859375, 3.4375, 0.010711669921875, 0.017578125, 0.39013671875, 0.01544189453125, 0.16748046875, 0.07427978515625, 1.3837890625, 0.00838470458984375, 0.0240936279296875, 0.12890625, 0.021820068359375, 0.00682830810546875, 0.03375244140625, 0.0300445556640625], "tokens": [1468, 3112, 32, 1689, 1162, 1594, 2502, 853, 904, 225, 35, 34, 474, 330, 34, 4646]}
{"line_number": 1248, "line_type": "generated", "code": "\n         * @param rule the {@code NumberRule}\n         */\n        TwelveHourField(NumberRule rule) {\n            mRule = rule;\n        }\n\n        /**\n         * {@inheritDoc}\n         */\n        public int estimateLength() {\n            return m", "entropy": 0.117919921875, "is_bug_line": false, "sus_score": 0.6244462132453918, "per_token_entropy": [0.37353515625, 0.463134765625, 0.2164306640625, 0.002777099609375, 0.03375244140625, 0.65869140625, 0.65576171875, 0.0025539398193359375, 0.01520538330078125, 0.00151824951171875, 0.1341552734375, 1.521484375, 0.0199737548828125, 0.0055389404296875, 0.0269622802734375, 7.152557373046875e-07, 9.5367431640625e-07, 4.76837158203125e-07, 4.172325134277344e-06, 0.0008416175842285156, 0.1263427734375, 2.849102020263672e-05, 0.0002658367156982422, 0.0010204315185546875, 0.0021419525146484375, 0.0200347900390625, 1.51953125, 4.220008850097656e-05, 0.0025482177734375, 0.00798797607421875, 0.003009796142578125, 0.01447296142578125, 3.457069396972656e-05, 0.0223388671875, 0.00420379638671875, 0.0019388198852539062, 0.00030684471130371094, 0.03558349609375, 8.83340835571289e-05, 0.00012135505676269531, 0.00841522216796875, 0.00567626953125, 0.005146026611328125, 0.0011987686157226562, 0.0259246826171875, 0.0002486705780029297, 4.5299530029296875e-05, 0.0008358955383300781, 0.0003948211669921875, 0.043365478515625, 0.01248931884765625, 0.1353759765625], "tokens": [276, 319, 477, 753, 5750, 322, 3088, 687, 5104, 3842, 111, 276, 569, 291, 12038, 342, 587, 14415, 1176, 26, 1918, 3842, 5750, 27, 301, 324, 345, 3842, 280, 5750, 45, 291, 320, 584, 1022, 276, 319, 3088, 18446, 111, 276, 569, 291, 562, 629, 20772, 2380, 346, 301, 324, 442, 345]}
{"line_number": 1240, "line_type": "original", "code": "            appendTo(buffer, calendar.get(Calendar.YEAR) % 100);", "entropy": 1.404296875, "is_bug_line": false, "sus_score": 0.6242497563362122, "per_token_entropy": [8.1875, 7.8515625, 0.357421875, 0.09722900390625, 0.1134033203125, 0.0091552734375, 0.332763671875, 0.1165771484375, 0.00708770751953125, 0.005680084228515625, 0.0394287109375, 0.01187896728515625, 8.2890625, 2.345703125, 0.259521484375, 0.0086669921875, 0.0006289482116699219, 0.000396728515625, 0.0021495819091796875, 0.046905517578125], "tokens": [1468, 5489, 705, 26, 2668, 30, 14461, 32, 371, 26, 9389, 32, 23164, 27, 904, 225, 35, 34, 34, 293]}
{"line_number": 1240, "line_type": "generated", "code": "\n     */\n    private static class TwelveHourField implements NumberRule {\n        static final TwelveHourField INSTANCE = new TwelveHourField();\n\n        /**\n         * Constructs an instance of {@code TwelveHourField}.\n         */\n        Tw", "entropy": 0.023345947265625, "is_bug_line": false, "sus_score": 0.6242497563362122, "per_token_entropy": [0.438720703125, 0.07177734375, 0.0251007080078125, 0.0156707763671875, 0.0017900466918945312, 0.006565093994140625, 0.2122802734375, 0.00244140625, 9.310245513916016e-05, 0.0008792877197265625, 0.0016803741455078125, 0.0293426513671875, 0.0126495361328125, 0.0001932382583618164, 0.0147552490234375, 0.029541015625, 0.0706787109375, 0.003726959228515625, 0.00933074951171875, 2.1696090698242188e-05, 4.887580871582031e-06, 7.152557373046875e-07, 1.3947486877441406e-05, 0.0084381103515625, 0.10198974609375, 0.000484466552734375, 9.047985076904297e-05, 1.3113021850585938e-06, 3.5762786865234375e-07, 1.1920928955078125e-07, 1.0728836059570312e-06, 0.004795074462890625, 0.06439208984375, 0.0144500732421875, 0.003170013427734375, 0.00017070770263671875, 0.01497650146484375, 0.004497528076171875, 0.0007710456848144531, 0.00130462646484375, 0.00376129150390625, 0.0002040863037109375, 0.0235443115234375, 0.0006213188171386719, 4.6372413635253906e-05, 8.296966552734375e-05, 0.0013523101806640625, 0.001041412353515625, 0.01100921630859375, 0.00092315673828125, 0.00152587890625, 0.0026798248291015625], "tokens": [275, 569, 284, 945, 907, 443, 12038, 342, 587, 14415, 1176, 4575, 5104, 3842, 301, 291, 907, 1158, 12038, 342, 587, 14415, 1176, 40000, 280, 537, 12038, 342, 587, 14415, 1176, 473, 584, 1022, 276, 319, 29799, 600, 1980, 432, 3088, 687, 12038, 342, 587, 14415, 1176, 4009, 276, 569, 291, 12038]}
{"line_number": 1408, "line_type": "original", "code": "                buffer.append(mStandard);", "entropy": 2.513671875, "is_bug_line": false, "sus_score": 0.6232542991638184, "per_token_entropy": [6.52734375, 0.111328125, 0.0004405975341796875, 0.001499176025390625, 3.798828125, 3.51171875, 5.38671875, 0.771484375], "tokens": [2071, 3112, 32, 1689, 26, 95, 8090, 293]}
{"line_number": 1408, "line_type": "generated", "code": "\n            } else {", "entropy": 0.065185546875, "is_bug_line": false, "sus_score": 0.6232542991638184, "per_token_entropy": [0.09210205078125, 0.0007567405700683594, 0.161376953125, 0.006618499755859375], "tokens": [324, 320, 813, 301]}
{"line_number": 1405, "line_type": "original", "code": "            if (mTimeZone.useDaylightTime() && calendar.get(Calendar.DST_OFFSET) != 0) {", "entropy": 0.9091796875, "is_bug_line": false, "sus_score": 0.6226531863212585, "per_token_entropy": [4.78125, 0.857421875, 0.01213836669921875, 0.0192718505859375, 15.125, 0.378173828125, 0.0253753662109375, 0.027862548828125, 0.0003867149353027344, 0.00037980079650878906, 1.58203125, 0.1412353515625, 1.0341796875, 0.00301361083984375, 0.31591796875, 0.062255859375, 0.01076507568359375, 0.00739288330078125, 0.005802154541015625, 2.86102294921875e-06, 0.0007476806640625, 0.0016717910766601562, 0.12286376953125, 0.00959014892578125, 0.00021529197692871094, 0.0078277587890625, 0.0147247314453125], "tokens": [1468, 415, 308, 95, 26223, 32, 539, 6280, 2429, 1043, 346, 962, 14461, 32, 371, 26, 9389, 32, 28635, 81, 10158, 27, 863, 225, 34, 27, 301]}
{"line_number": 1405, "line_type": "generated", "code": "\n                buffer.append(':');\n                buffer.append((char)(mins / 10 + '0'));\n                buffer.append((char)(mins % 10 + '0'));\n        }\n    }\n\n    /**\n     * <p>Inner class to", "entropy": 0.1580810546875, "is_bug_line": false, "sus_score": 0.6226531863212585, "per_token_entropy": [2.09375, 0.373046875, 0.0001817941665649414, 0.00010752677917480469, 0.5244140625, 0.0102691650390625, 1.0341796875, 0.341552734375, 0.00019419193267822266, 7.462501525878906e-05, 0.03985595703125, 0.027008056640625, 0.12261962890625, 1.845703125, 0.01349639892578125, 0.00011980533599853516, 9.834766387939453e-05, 1.4424324035644531e-05, 0.0009551048278808594, 0.0010194778442382812, 2.777576446533203e-05, 0.0004773139953613281, 0.0204925537109375, 0.0006642341613769531, 0.00011587142944335938, 4.744529724121094e-05, 0.0006532669067382812, 0.0002651214599609375, 0.00043272972106933594, 0.0005373954772949219, 0.0009341239929199219, 0.00017023086547851562, 4.9114227294921875e-05, 4.208087921142578e-05, 0.00015485286712646484, 0.00037670135498046875, 1.919269561767578e-05, 0.0062255859375, 0.841796875, 0.0149993896484375, 0.31591796875, 0.00106048583984375, 0.27734375, 0.1165771484375, 0.00574493408203125, 0.0005002021789550781, 0.081298828125, 0.00026798248291015625, 0.0007028579711914062, 0.06072998046875, 0.00133514404296875, 0.043609619140625], "tokens": [400, 3112, 32, 1689, 16487, 895, 400, 3112, 32, 1689, 1162, 1594, 2502, 39912, 517, 225, 35, 34, 474, 330, 34, 4646, 400, 3112, 32, 1689, 1162, 1594, 2502, 39912, 904, 225, 35, 34, 474, 330, 34, 4646, 291, 320, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 10893, 443, 372]}
{"line_number": 556, "line_type": "original", "code": "                    rule = new TimeZoneNameRule(mTimeZone, mLocale, TimeZone.LONG);", "entropy": 1.3681640625, "is_bug_line": false, "sus_score": 0.6220604181289673, "per_token_entropy": [8.796875, 10.421875, 0.424072265625, 1.4501953125, 2.41796875, 2.17578125, 0.09033203125, 0.000484466552734375, 0.012237548828125, 0.10406494140625, 0.01300811767578125, 0.004901885986328125, 0.0198211669921875, 9.28640365600586e-05, 0.0517578125, 0.1361083984375, 0.00031065940856933594, 0.0016603469848632812, 1.220703125, 0.0224151611328125], "tokens": [4696, 5750, 280, 537, 3717, 6767, 558, 3842, 26, 95, 26223, 30, 345, 9467, 30, 3717, 6767, 32, 10129, 293]}
{"line_number": 556, "line_type": "generated", "code": "\n            }\n\n            i++;\n        } else {\n            // This will identify token as text.\n            buf.append('\\'');\n\n            boolean inLiteral = false;\n\n            while (i < length) {\n                c = pattern.charAt(i++);\n                if (", "entropy": 0.1964111328125, "is_bug_line": false, "sus_score": 0.6220604181289673, "per_token_entropy": [0.5380859375, 0.004150390625, 0.90673828125, 0.9677734375, 0.0821533203125, 0.1282958984375, 0.00014388561248779297, 0.30810546875, 0.056884765625, 0.09844970703125, 0.0740966796875, 0.240966796875, 0.470947265625, 0.161865234375, 0.06695556640625, 1.3046875, 0.273681640625, 0.0055389404296875, 0.3515625, 1.064453125, 0.019927978515625, 0.07666015625, 0.35888671875, 0.019012451171875, 0.0019550323486328125, 0.194580078125, 0.31982421875, 0.0245819091796875, 0.0787353515625, 0.00012886524200439453, 0.0011072158813476562, 0.0010251998901367188, 0.1654052734375, 0.81689453125, 0.0031337738037109375, 0.01114654541015625, 0.00218963623046875, 0.00649261474609375, 0.020050048828125, 0.0002541542053222656, 0.04278564453125, 0.109130859375, 0.00019156932830810547, 4.661083221435547e-05, 3.063678741455078e-05, 8.344650268554688e-07, 1.049041748046875e-05, 1.3470649719238281e-05, 0.52294921875, 0.25244140625, 0.026641845703125, 0.026336669921875], "tokens": [324, 320, 1064, 595, 3334, 291, 320, 813, 301, 324, 434, 1348, 1098, 12411, 2404, 619, 1344, 32, 324, 4845, 32, 1689, 463, 6945, 895, 1064, 1905, 328, 8208, 280, 901, 45, 1064, 2218, 308, 91, 333, 3104, 27, 301, 400, 281, 280, 5257, 32, 15611, 26, 91, 24907, 400, 415, 308]}
{"line_number": 696, "line_type": "original", "code": "        return format(new Date(millis));", "entropy": 2.34375, "is_bug_line": false, "sus_score": 0.6150769591331482, "per_token_entropy": [4.69140625, 0.474853515625, 6.16015625, 0.1617431640625, 4.0546875, 0.6748046875, 0.07598876953125, 0.05218505859375, 4.75], "tokens": [351, 442, 2179, 26, 890, 2821, 26, 36916, 876]}
{"line_number": 696, "line_type": "generated", "code": "\n    }\n\n    /**\n     * <p>Formats a {@code Calendar} object into the\n     * supplied {@code StringBuffer}.</p>\n     *\n     * @param calendar  the calendar to format\n     * @param buf  the buffer to format into\n    ", "entropy": 0.00888824462890625, "is_bug_line": false, "sus_score": 0.6150769591331482, "per_token_entropy": [0.1138916015625, 0.0027561187744140625, 0.01885986328125, 0.00981903076171875, 0.0006365776062011719, 3.457069396972656e-05, 0.0253753662109375, 1.633167266845703e-05, 0.0002288818359375, 0.0107269287109375, 0.0038661956787109375, 0.004100799560546875, 0.0008587837219238281, 0.00176239013671875, 0.0004642009735107422, 0.0166015625, 0.023223876953125, 0.0015573501586914062, 0.1160888671875, 1.3828277587890625e-05, 0.0030155181884765625, 0.0007767677307128906, 0.00010347366333007812, 0.0005826950073242188, 0.0013074874877929688, 0.01548004150390625, 2.9921531677246094e-05, 0.00016117095947265625, 0.00039076805114746094, 3.4809112548828125e-05, 0.005519866943359375, 2.8848648071289062e-05, 0.0011692047119140625, 0.00022101402282714844, 0.01389312744140625, 0.007633209228515625, 0.0009326934814453125, 0.003803253173828125, 0.003177642822265625, 0.0022525787353515625, 0.01233673095703125, 5.364418029785156e-06, 5.805492401123047e-05, 0.000545501708984375, 0.0015020370483398438, 0.002979278564453125, 0.00027561187744140625, 0.0165557861328125, 0.0003345012664794922, 0.01422882080078125, 0.0011758804321289062, 0.00087738037109375], "tokens": [284, 320, 446, 1022, 275, 319, 333, 98, 48, 19298, 312, 3088, 687, 16600, 111, 1300, 1991, 322, 275, 319, 13798, 3088, 687, 21933, 111, 1730, 98, 48, 275, 319, 275, 319, 477, 753, 14461, 225, 322, 14461, 372, 2179, 275, 319, 477, 753, 4845, 225, 322, 3112, 372, 2179, 1991, 275]}
{"line_number": 411, "line_type": "original", "code": "        if (value == null) {", "entropy": 1.8095703125, "is_bug_line": false, "sus_score": 0.6121377944946289, "per_token_entropy": [2.79296875, 2.421875, 0.1737060546875, 7.65234375, 0.8408203125, 0.2235107421875, 0.1231689453125, 0.2489013671875], "tokens": [351, 415, 308, 853, 610, 744, 27, 301]}
{"line_number": 411, "line_type": "generated", "code": "\n     */\n    List<Rule> parsePattern() {\n        List<Rule> rules = new ArrayList<Rule>();\n        String[] pieces = mPattern.split(\"'\");\n\n        int len = pieces.length;\n        int i = 0;\n        while (", "entropy": 0.325439453125, "is_bug_line": false, "sus_score": 0.6121377944946289, "per_token_entropy": [0.58349609375, 0.3984375, 0.007503509521484375, 1.6884765625, 0.0037326812744140625, 0.00131988525390625, 0.00054931640625, 0.00032806396484375, 1.1920928955078125e-05, 0.0225067138671875, 0.004558563232421875, 0.09100341796875, 0.41748046875, 0.00505828857421875, 0.0031375885009765625, 0.0014324188232421875, 0.020233154296875, 0.42236328125, 0.006542205810546875, 0.04931640625, 0.054718017578125, 0.003063201904296875, 0.490966796875, 0.7021484375, 2.138671875, 0.4052734375, 1.7216796875, 0.0032062530517578125, 0.11126708984375, 0.0014696121215820312, 0.0019273757934570312, 0.001972198486328125, 0.38720703125, 0.12396240234375, 0.97119140625, 1.4794921875, 0.9794921875, 0.031158447265625, 0.051300048828125, 0.00046253204345703125, 4.0531158447265625e-06, 0.00958251953125, 0.27294921875, 1.8125, 0.36767578125, 0.1727294921875, 0.011138916015625, 0.0001971721649169922, 0.0035228729248046875, 0.5224609375, 0.3505859375, 0.0182037353515625], "tokens": [275, 569, 284, 1682, 46, 3842, 48, 3185, 5516, 346, 301, 291, 1682, 46, 3842, 48, 7019, 280, 537, 5059, 46, 3842, 2923, 291, 892, 1178, 23073, 280, 345, 5516, 32, 2998, 440, 24706, 584, 629, 2069, 280, 23073, 32, 1322, 45, 291, 629, 595, 280, 225, 34, 45, 291, 2218, 308]}
{"line_number": 1063, "line_type": "original", "code": "                buffer.append((char)(value / 10 + '0'));", "entropy": 1.24609375, "is_bug_line": false, "sus_score": 0.6119830012321472, "per_token_entropy": [8.953125, 8.125, 0.00821685791015625, 0.0144500732421875, 0.77294921875, 0.038360595703125, 0.1663818359375, 0.17041015625, 1.201171875, 0.0191497802734375, 0.0771484375, 0.003448486328125, 0.34765625, 0.0085296630859375, 0.0032863616943359375, 0.02667236328125], "tokens": [2071, 3112, 32, 1689, 1162, 1594, 2502, 853, 517, 225, 35, 34, 474, 330, 34, 4646]}
{"line_number": 1063, "line_type": "generated", "code": "\n     * <p>Inner class to output a two digit year.</p>\n     */\n    private static class TwoDigitYearField implements NumberRule {\n        static final TwoDigitYearField INSTANCE = new TwoDigitYearField();\n\n        /**\n         * Constructs an instance", "entropy": 0.1192626953125, "is_bug_line": false, "sus_score": 0.6119830012321472, "per_token_entropy": [0.84521484375, 0.2264404296875, 0.125, 0.002532958984375, 0.00479888916015625, 0.07366943359375, 0.0030651092529296875, 0.0251922607421875, 0.175048828125, 0.8564453125, 1.796875, 0.265380859375, 0.572265625, 0.10784912109375, 0.00043773651123046875, 0.001056671142578125, 0.0220489501953125, 0.048095703125, 0.0197906494140625, 0.01366424560546875, 0.00263214111328125, 0.01361846923828125, 0.0191650390625, 0.0003864765167236328, 0.0333251953125, 0.004421234130859375, 0.038177490234375, 0.0237274169921875, 0.0002682209014892578, 0.0144195556640625, 0.056304931640625, 0.5771484375, 0.0029735565185546875, 0.0183563232421875, 5.125999450683594e-06, 3.921985626220703e-05, 0.00012791156768798828, 0.00884246826171875, 0.090576171875, 0.00061798095703125, 5.710124969482422e-05, 5.960464477539062e-07, 1.1920928955078125e-06, 1.0728836059570312e-06, 0.003467559814453125, 0.02691650390625, 0.0188751220703125, 0.007068634033203125, 0.00014865398406982422, 0.0511474609375, 0.0049896240234375, 0.00237274169921875], "tokens": [275, 319, 333, 98, 48, 10893, 443, 372, 1688, 312, 3134, 16994, 4947, 1730, 98, 48, 275, 569, 284, 945, 907, 443, 16510, 21530, 6617, 1176, 4575, 5104, 3842, 301, 291, 907, 1158, 16510, 21530, 6617, 1176, 40000, 280, 537, 16510, 21530, 6617, 1176, 473, 584, 1022, 276, 319, 29799, 600, 1980]}
{"line_number": 503, "line_type": "original", "code": "                    rule = new TextField(Calendar.MONTH, months);", "entropy": 2.150390625, "is_bug_line": false, "sus_score": 0.611770749092102, "per_token_entropy": [7.390625, 2.94921875, 0.78515625, 0.274658203125, 7.1640625, 0.0082244873046875, 0.007007598876953125, 0.0022754669189453125, 5.4140625, 0.00447845458984375, 1.7802734375, 0.0240936279296875], "tokens": [4696, 5750, 280, 537, 28563, 26, 9389, 32, 22846, 30, 17723, 293]}
{"line_number": 503, "line_type": "generated", "code": "\n                break;\n            case 'z': // time zone (text)\n                if (tokenLen == 1) {\n                    rule = TimeZoneNameRule.getRule(mLocale, false, mTimeZone);\n                } else {\n                    rule = new Time", "entropy": 0.223876953125, "is_bug_line": false, "sus_score": 0.611770749092102, "per_token_entropy": [0.0880126953125, 0.025634765625, 0.0004036426544189453, 0.062408447265625, 0.14697265625, 0.054229736328125, 0.03582763671875, 0.0006718635559082031, 0.004215240478515625, 0.044158935546875, 0.0008983612060546875, 0.001026153564453125, 0.0006861686706542969, 0.000240325927734375, 0.0709228515625, 1.76171875, 0.00946044921875, 0.085693359375, 0.0072479248046875, 0.763671875, 0.00010979175567626953, 0.0005407333374023438, 0.00074005126953125, 0.0009908676147460938, 0.08050537109375, 0.44287109375, 0.0004379749298095703, 0.05621337890625, 0.0007176399230957031, 0.0205078125, 0.0013742446899414062, 0.004146575927734375, 1.28515625, 0.00389862060546875, 0.052825927734375, 1.5673828125, 0.1556396484375, 0.30517578125, 1.1982421875, 0.182861328125, 0.7958984375, 0.44775390625, 0.64892578125, 0.039398193359375, 0.0001595020294189453, 0.007503509521484375, 0.0230255126953125, 0.06768798828125, 0.5185546875, 0.0003342628479003906, 0.434814453125, 0.131591796875], "tokens": [400, 1626, 45, 324, 1135, 330, 108, 950, 434, 1133, 10790, 308, 878, 27, 400, 415, 308, 1956, 5745, 610, 225, 35, 27, 301, 528, 5750, 280, 3717, 6767, 558, 3842, 32, 371, 3842, 26, 95, 9467, 30, 901, 30, 345, 26223, 293, 400, 320, 813, 301, 528, 5750, 280, 537, 3717]}
{"line_number": 1064, "line_type": "original", "code": "                buffer.append((char)(value % 10 + '0'));", "entropy": 1.2236328125, "is_bug_line": false, "sus_score": 0.6106091141700745, "per_token_entropy": [9.84375, 7.19921875, 0.0187835693359375, 0.0264434814453125, 1.029296875, 0.0299224853515625, 0.162109375, 0.0819091796875, 1.1064453125, 0.006023406982421875, 0.01090240478515625, 0.000629425048828125, 0.01242828369140625, 0.01007080078125, 0.0010766983032226562, 0.031707763671875], "tokens": [2071, 3112, 32, 1689, 1162, 1594, 2502, 853, 904, 225, 35, 34, 474, 330, 34, 4646]}
{"line_number": 1064, "line_type": "generated", "code": "\n     */\n    private static class PaddedNumberField implements NumberRule {\n        private final int mField;\n        private final int mSize;\n\n        /**\n         * Constructs an instance of {@code PaddedNumberField} with the specified field.\n         *\n         *", "entropy": 0.07379150390625, "is_bug_line": false, "sus_score": 0.6106091141700745, "per_token_entropy": [0.252197265625, 0.0679931640625, 0.0416259765625, 0.0211181640625, 0.0028743743896484375, 0.012542724609375, 0.181884765625, 8.463859558105469e-06, 0.0191192626953125, 0.01062774658203125, 0.08990478515625, 0.00797271728515625, 0.0003795623779296875, 0.0114288330078125, 0.03424072265625, 0.0640869140625, 0.03570556640625, 0.055389404296875, 0.00958251953125, 0.13427734375, 0.01502227783203125, 0.58251953125, 0.014617919921875, 0.020294189453125, 0.1097412109375, 0.02838134765625, 0.2110595703125, 0.00141143798828125, 0.15771484375, 0.0268096923828125, 0.004856109619140625, 0.00026345252990722656, 0.00966644287109375, 0.0157928466796875, 0.002376556396484375, 0.0025119781494140625, 0.00891876220703125, 0.0004200935363769531, 0.01471710205078125, 0.0003533363342285156, 0.0032978057861328125, 0.0017518997192382812, 0.0230255126953125, 0.038604736328125, 0.01134490966796875, 0.043121337890625, 0.061492919921875, 1.1943359375, 0.02972412109375, 0.00710296630859375, 0.1429443359375, 0.0011816024780273438], "tokens": [275, 569, 284, 945, 907, 443, 447, 11043, 1918, 1176, 4575, 5104, 3842, 301, 291, 945, 1158, 629, 345, 1176, 45, 291, 945, 1158, 629, 345, 1250, 45, 584, 1022, 276, 319, 29799, 600, 1980, 432, 3088, 687, 447, 11043, 1918, 1176, 111, 623, 322, 3191, 1600, 32, 276, 319, 276, 319]}
{"line_number": 555, "line_type": "original", "code": "                if (tokenLen >= 4) {", "entropy": 1.6689453125, "is_bug_line": false, "sus_score": 0.6074901819229126, "per_token_entropy": [4.2734375, 1.9765625, 0.1287841796875, 6.9453125, 0.373046875, 2.416015625, 0.11383056640625, 0.1602783203125, 0.2958984375, 0.00829315185546875], "tokens": [2071, 415, 308, 1956, 5745, 2377, 225, 38, 27, 301]}
{"line_number": 555, "line_type": "generated", "code": "\n            } else if (c == '\\'') {\n                // Handle literals\n                i++;\n                int j = pattern.indexOf('\\'', i);\n                if (j == -1) {\n                    throw new IllegalArgumentException(\"Literal missing terminating '\");\n                }\n                buf.", "entropy": 0.273681640625, "is_bug_line": false, "sus_score": 0.6074901819229126, "per_token_entropy": [0.3837890625, 1.6650390625, 0.257080078125, 0.92431640625, 0.07666015625, 0.11737060546875, 0.1767578125, 0.1483154296875, 0.000980377197265625, 0.003376007080078125, 0.1937255859375, 0.31787109375, 0.3623046875, 0.70361328125, 0.140869140625, 0.609375, 0.01181793212890625, 0.0804443359375, 1.1669921875, 0.66748046875, 0.01371002197265625, 0.10028076171875, 2.4557113647460938e-05, 0.0010328292846679688, 0.0126800537109375, 0.002086639404296875, 0.01073455810546875, 0.0157470703125, 0.0792236328125, 0.12890625, 0.0019083023071289062, 0.0019178390502929688, 0.3583984375, 0.0023651123046875, 0.00040531158447265625, 0.0030193328857421875, 0.00323486328125, 0.022918701171875, 0.061920166015625, 0.0170440673828125, 0.005710601806640625, 0.1409912109375, 1.564453125, 1.58203125, 0.80859375, 0.39794921875, 0.040435791015625, 0.01244354248046875, 0.0005550384521484375, 0.367431640625, 0.457275390625, 7.319450378417969e-05], "tokens": [324, 320, 813, 415, 308, 85, 610, 26271, 683, 301, 400, 434, 7968, 36388, 400, 595, 3334, 400, 629, 594, 280, 5257, 32, 7142, 463, 33713, 595, 293, 400, 415, 308, 92, 610, 429, 35, 27, 301, 528, 1422, 537, 12137, 440, 8208, 5816, 48919, 330, 724, 400, 320, 400, 4845, 32]}
{"line_number": 419, "line_type": "original", "code": "        return value;", "entropy": 4.21484375, "is_bug_line": false, "sus_score": 0.6061129570007324, "per_token_entropy": [2.15625, 4.2265625, 10.3359375, 0.1414794921875], "tokens": [351, 442, 786, 45]}
{"line_number": 419, "line_type": "generated", "code": "\n        String[] shortMonths = symbols.getShortMonths();", "entropy": 0.06658935546875, "is_bug_line": false, "sus_score": 0.6061129570007324, "per_token_entropy": [0.5419921875, 0.2265625, 0.00461578369140625, 0.007564544677734375, 0.00024080276489257812, 0.001232147216796875, 0.0157470703125, 0.00010466575622558594, 0.0008654594421386719, 9.739398956298828e-05, 3.0994415283203125e-06, 0.0002162456512451172], "tokens": [291, 892, 1178, 4504, 34042, 280, 15455, 32, 371, 6872, 34042, 473]}
{"line_number": 409, "line_type": "original", "code": "        TimeZoneDisplayKey key = new TimeZoneDisplayKey(tz, daylight, style, locale);", "entropy": 1.0146484375, "is_bug_line": false, "sus_score": 0.6046337485313416, "per_token_entropy": [6.30859375, 6.32421875, 0.0247344970703125, 5.046875, 0.33984375, 0.27978515625, 0.0491943359375, 0.1492919921875, 0.004184722900390625, 2.300739288330078e-05, 0.00040531158447265625, 2.110004425048828e-05, 0.05133056640625, 2.087890625, 0.016143798828125, 1.171875, 0.000606536865234375, 0.05853271484375, 0.251220703125, 0.074951171875, 0.06292724609375, 0.027557373046875], "tokens": [351, 3717, 6767, 3933, 953, 1202, 280, 537, 3717, 6767, 3933, 953, 26, 10185, 30, 5808, 2429, 30, 1418, 30, 11259, 293]}
{"line_number": 409, "line_type": "generated", "code": "\n     *\n     * @return a list of rules\n     * @throws NullPointerException if the pattern is null\n     */\n    protected List<Rule> parsePattern() {\n        List<Rule> rules = new ArrayList<Rule>();\n        ParsePosition pos = new ParsePosition", "entropy": 0.27880859375, "is_bug_line": false, "sus_score": 0.6046337485313416, "per_token_entropy": [0.07464599609375, 0.2020263671875, 0.5712890625, 0.0006861686706542969, 0.10565185546875, 0.09381103515625, 0.54345703125, 1.603515625, 0.0016584396362304688, 1.4228515625, 0.740234375, 1.587890625, 0.0018100738525390625, 0.09881591796875, 0.64599609375, 0.01270294189453125, 0.6044921875, 0.0251922607421875, 0.0233917236328125, 0.0161895751953125, 0.038421630859375, 0.353271484375, 0.004810333251953125, 1.126953125, 0.156982421875, 0.00441741943359375, 0.0015878677368164062, 0.00040602684020996094, 0.00022172927856445312, 1.049041748046875e-05, 0.0252838134765625, 0.00811767578125, 0.1192626953125, 0.8994140625, 0.003925323486328125, 0.002681732177734375, 0.0009860992431640625, 0.0243072509765625, 0.421875, 0.0075531005859375, 0.035736083984375, 0.0462646484375, 0.0025463104248046875, 0.52294921875, 0.73583984375, 1.2900390625, 0.0017910003662109375, 0.275390625, 0.001689910888671875, 0.0007672309875488281, 0.00040268898010253906, 1.3232231140136719e-05], "tokens": [275, 319, 275, 319, 477, 601, 312, 1149, 432, 7019, 275, 319, 477, 5117, 23224, 415, 322, 5257, 438, 744, 275, 569, 284, 2522, 1682, 46, 3842, 48, 3185, 5516, 346, 301, 291, 1682, 46, 3842, 48, 7019, 280, 537, 5059, 46, 3842, 2923, 291, 8661, 2731, 3400, 280, 537, 8661, 2731]}
{"line_number": 1053, "line_type": "original", "code": "            appendTo(buffer, calendar.get(mField));", "entropy": 1.9521484375, "is_bug_line": false, "sus_score": 0.603093683719635, "per_token_entropy": [8.6015625, 3.421875, 0.0106048583984375, 0.006473541259765625, 0.01413726806640625, 0.00174713134765625, 7.0859375, 0.06365966796875, 0.00928497314453125, 0.020599365234375, 5.875, 0.00655364990234375, 0.262939453125], "tokens": [1468, 5489, 705, 26, 2668, 30, 14461, 32, 371, 26, 95, 1176, 876]}
{"line_number": 1053, "line_type": "generated", "code": "\n        }\n    }\n\n    /**\n     * <p>Inner class to output an unpadded day-of-week.</p>\n     */\n    private static class UnpaddedDayOfWeekField implements NumberRule {\n        static final UnpaddedDayOfWeekField INSTANCE = new Unpadded", "entropy": 0.061492919921875, "is_bug_line": false, "sus_score": 0.603093683719635, "per_token_entropy": [0.048919677734375, 0.0001417398452758789, 0.133544921875, 0.0007457733154296875, 0.13232421875, 0.026397705078125, 0.002498626708984375, 0.0002512931823730469, 0.02081298828125, 0.0003380775451660156, 0.0005249977111816406, 0.015777587890625, 0.0009698867797851562, 0.005550384521484375, 0.04290771484375, 0.367919921875, 0.050384521484375, 0.0020694732666015625, 0.27587890625, 0.8125, 0.205810546875, 9.107589721679688e-05, 0.6494140625, 0.0302581787109375, 0.00019550323486328125, 0.00027251243591308594, 0.00018548965454101562, 0.0054931640625, 0.0003566741943359375, 0.00244903564453125, 0.0003247261047363281, 0.0048980712890625, 0.0013475418090820312, 0.00011551380157470703, 0.250732421875, 0.006378173828125, 0.006839752197265625, 0.007648468017578125, 8.14199447631836e-05, 0.0010786056518554688, 0.017303466796875, 0.05224609375, 0.0008783340454101562, 0.004489898681640625, 9.799003601074219e-05, 0.0005044937133789062, 3.814697265625e-06, 0.003917694091796875, 0.002132415771484375, 0.0016260147094726562, 0.0003325939178466797, 4.5299530029296875e-06], "tokens": [291, 320, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 10893, 443, 372, 1688, 600, 707, 34294, 5808, 31, 1028, 31, 9892, 1730, 98, 48, 275, 569, 284, 945, 907, 443, 1683, 34294, 37555, 1176, 4575, 5104, 3842, 301, 291, 907, 1158, 1683, 34294, 37555, 1176, 40000, 280, 537, 1683, 34294]}
{"line_number": 1498, "line_type": "original", "code": "            return (mStyle * 31 + mLocale.hashCode() ) * 31 + mTimeZone.hashCode();", "entropy": 1.4462890625, "is_bug_line": false, "sus_score": 0.600949227809906, "per_token_entropy": [7.66796875, 2.609375, 3.87890625, 3.072265625, 1.486328125, 8.421875, 0.020843505859375, 0.0858154296875, 0.140625, 0.2275390625, 0.1348876953125, 0.58056640625, 0.014190673828125, 0.004436492919921875, 4.390625, 4.41015625, 0.09454345703125, 0.01177978515625, 0.04449462890625, 0.020050048828125, 0.0289459228515625, 0.06390380859375, 0.062255859375, 0.008880615234375, 0.0300445556640625, 0.09429931640625], "tokens": [1468, 442, 308, 95, 2275, 319, 225, 37, 35, 474, 345, 9467, 32, 14948, 346, 829, 319, 225, 37, 35, 474, 345, 26223, 32, 14948, 473]}
{"line_number": 1498, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.600949227809906, "per_token_entropy": [], "tokens": []}
{"line_number": 1391, "line_type": "original", "code": "            mDaylight = getTimeZoneDisplay(timeZone, true, style, locale);", "entropy": 0.9765625, "is_bug_line": false, "sus_score": 0.600821852684021, "per_token_entropy": [4.921875, 4.01953125, 4.65625, 0.002368927001953125, 0.78076171875, 0.61181640625, 0.01739501953125, 0.013336181640625, 0.0084686279296875, 0.1695556640625, 0.00029540061950683594, 0.002216339111328125, 1.89453125, 0.0271759033203125, 0.3681640625, 0.00836944580078125, 0.03228759765625, 0.036712646484375], "tokens": [1468, 345, 6280, 2429, 280, 622, 26223, 3933, 26, 1003, 6767, 30, 861, 30, 1418, 30, 11259, 293]}
{"line_number": 1391, "line_type": "generated", "code": "\n        }\n\n        /**\n         * {@inheritDoc}\n         */\n        public void appendTo(StringBuffer buffer, Calendar calendar) {\n            int offset = calendar.get(Calendar.ZONE_OFFSET) + calendar.get(Calendar.DST_OFFSET);\n            if (", "entropy": 0.10003662109375, "is_bug_line": false, "sus_score": 0.600821852684021, "per_token_entropy": [0.436767578125, 1.3896484375, 0.22119140625, 0.0303955078125, 0.00830078125, 0.0010280609130859375, 0.0218505859375, 0.0003001689910888672, 0.0001285076141357422, 0.1331787109375, 0.003559112548828125, 0.011993408203125, 0.0026149749755859375, 0.0024814605712890625, 6.878376007080078e-05, 0.00023233890533447266, 0.0001481771469116211, 0.0019931793212890625, 0.0005693435668945312, 8.618831634521484e-05, 0.04266357421875, 0.00043272972106933594, 0.00015616416931152344, 0.00127410888671875, 0.08416748046875, 0.5048828125, 0.234130859375, 0.0185394287109375, 0.1607666015625, 0.00020706653594970703, 0.006481170654296875, 0.00015723705291748047, 0.0034885406494140625, 0.00283050537109375, 0.005748748779296875, 1.9073486328125e-06, 0.000152587890625, 0.57666015625, 0.04058837890625, 0.07354736328125, 0.0020084381103515625, 2.86102294921875e-05, 0.00013208389282226562, 0.0020313262939453125, 0.00013899803161621094, 0.0012235641479492188, 1.1920928955078125e-06, 3.814697265625e-06, 0.0008902549743652344, 0.278076171875, 0.884765625, 0.01004791259765625], "tokens": [291, 320, 584, 1022, 276, 319, 3088, 18446, 111, 276, 569, 291, 562, 763, 5489, 705, 26, 35322, 3112, 30, 16600, 14461, 27, 301, 324, 629, 3401, 280, 14461, 32, 371, 26, 9389, 32, 27368, 81, 10158, 27, 474, 14461, 32, 371, 26, 9389, 32, 28635, 81, 10158, 293, 324, 415, 308]}
