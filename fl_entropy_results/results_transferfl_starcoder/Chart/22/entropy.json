{"line_number": 376, "line_type": "original", "code": "        while (iterator.hasNext()) {", "entropy": 1.615234375, "is_bug_line": false, "sus_score": 0.5786470174789429, "per_token_entropy": [3.71484375, 8.7890625, 0.1142578125, 0.250732421875, 0.00279998779296875, 0.0064239501953125, 0.0089263916015625, 0.037078857421875], "tokens": [351, 2218, 308, 5162, 32, 16421, 1157, 301]}
{"line_number": 376, "line_type": "generated", "code": "\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Returns a hash code for this object.\n     *\n     * @return A hash code.\n     */\n    public int hashCode() {\n        int result = 193;\n       ", "entropy": 0.1148681640625, "is_bug_line": false, "sus_score": 0.5786470174789429, "per_token_entropy": [0.80224609375, 0.404052734375, 0.41064453125, 0.0014772415161132812, 0.062744140625, 0.00226593017578125, 0.22314453125, 0.00920867919921875, 0.0086822509765625, 0.0006761550903320312, 0.12841796875, 0.0006337165832519531, 0.22509765625, 0.01299285888671875, 0.0019207000732421875, 1.4543533325195312e-05, 0.03448486328125, 0.0908203125, 0.6005859375, 0.0208587646484375, 0.38818359375, 0.050262451171875, 1.0546875, 0.022125244140625, 0.06964111328125, 0.003376007080078125, 0.18115234375, 1.9311904907226562e-05, 5.3763389587402344e-05, 0.00036144256591796875, 0.51025390625, 0.0033130645751953125, 0.0024356842041015625, 0.03668212890625, 0.01096343994140625, 0.00337982177734375, 0.0055694580078125, 0.0019178390502929688, 4.6372413635253906e-05, 1.609325408935547e-05, 0.0003180503845214844, 0.0009007453918457031, 0.03216552734375, 0.1474609375, 0.1925048828125, 0.1051025390625, 0.0081634521484375, 0.056671142578125, 0.0193939208984375, 0.003322601318359375, 0.0020122528076171875, 0.0179290771484375], "tokens": [400, 320, 324, 320, 291, 320, 291, 442, 861, 45, 284, 320, 446, 1022, 275, 319, 3759, 312, 3677, 1340, 436, 458, 1300, 32, 275, 319, 275, 319, 477, 601, 399, 3677, 1340, 32, 275, 569, 284, 562, 629, 17772, 346, 301, 291, 629, 1056, 280, 225, 35, 43, 37, 45, 291]}
{"line_number": 378, "line_type": "original", "code": "                rowData.removeValue(columnKey);", "entropy": 2.01953125, "is_bug_line": true, "sus_score": 0.5786470174789429, "per_token_entropy": [5.27734375, 6.140625, 0.38623046875, 0.94091796875, 1.8564453125, 4.15234375, 0.28662109375, 0.70361328125, 0.15478515625, 0.286376953125], "tokens": [2071, 2698, 750, 32, 2546, 882, 26, 2592, 953, 293]}
{"line_number": 378, "line_type": "generated", "code": "\n        }\n        return true;\n    }\n\n    /**\n     * Returns a clone of the table.\n     * \n     * @return A clone.\n     * \n     * @throws CloneNotSupportedException if there is a problem cloning the\n     *         table.\n     */\n    public", "entropy": 0.2193603515625, "is_bug_line": true, "sus_score": 0.5786470174789429, "per_token_entropy": [0.290771484375, 0.0367431640625, 0.142333984375, 0.0160064697265625, 0.019500732421875, 0.0005049705505371094, 0.0880126953125, 0.0005202293395996094, 0.2384033203125, 0.011688232421875, 0.0018205642700195312, 1.4066696166992188e-05, 0.033843994140625, 0.099609375, 1.2724609375, 0.309326171875, 0.517578125, 1.0693359375, 0.05560302734375, 0.092041015625, 0.0008387565612792969, 1.28515625, 2.2649765014648438e-05, 0.0033111572265625, 0.0015277862548828125, 0.10540771484375, 0.0565185546875, 0.0955810546875, 0.018798828125, 0.154052734375, 0.06396484375, 8.869171142578125e-05, 0.00039458274841308594, 0.03961181640625, 0.0081329345703125, 0.0003199577331542969, 0.1689453125, 0.59814453125, 0.07415771484375, 0.11053466796875, 0.00476837158203125, 0.182861328125, 0.95361328125, 0.919921875, 3.504753112792969e-05, 0.8583984375, 1.005859375, 0.16162109375, 0.1253662109375, 0.0838623046875, 0.006511688232421875, 0.0255584716796875], "tokens": [291, 320, 291, 442, 861, 45, 284, 320, 446, 1022, 275, 319, 3759, 312, 7892, 432, 322, 1858, 32, 275, 319, 5384, 319, 477, 601, 399, 7892, 32, 275, 319, 5384, 319, 477, 5117, 14429, 43107, 415, 2017, 438, 312, 3708, 46736, 322, 275, 319, 263, 1858, 32, 275, 569, 284, 562]}
{"line_number": 266, "line_type": "original", "code": "            throw new IllegalArgumentException(\"Null 'columnKey' argument.\");", "entropy": 1.2216796875, "is_bug_line": false, "sus_score": 0.4890272617340088, "per_token_entropy": [5.67578125, 4.41015625, 0.0033740997314453125, 1.9619140625, 0.515625, 0.49951171875, 0.09844970703125, 1.4541015625, 0.01131439208984375, 0.016998291015625, 0.01184844970703125, 0.0026264190673828125], "tokens": [1468, 1422, 537, 12137, 440, 1883, 330, 2592, 953, 25, 2793, 5368]}
{"line_number": 266, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Returns the number of rows in the table.\n     *\n     * @return The row count.\n     */\n    public int getRowCount() {\n        return this.rowKeys.getItemCount();\n    }\n\n    /**\n     * Returns the", "entropy": 0.147216796875, "is_bug_line": false, "sus_score": 0.4890272617340088, "per_token_entropy": [0.92626953125, 0.009521484375, 0.33544921875, 0.0189971923828125, 0.004619598388671875, 6.663799285888672e-05, 0.74462890625, 0.54248046875, 1.16796875, 0.00222015380859375, 0.1893310546875, 0.088134765625, 0.0328369140625, 0.01065826416015625, 0.0227508544921875, 0.05865478515625, 0.00415802001953125, 0.3486328125, 0.00018262863159179688, 0.0001442432403564453, 0.0002218484878540039, 0.00501251220703125, 0.344482421875, 0.004589080810546875, 0.175048828125, 0.06365966796875, 0.013580322265625, 0.00823974609375, 0.0020122528076171875, 0.0018253326416015625, 0.0006961822509765625, 0.033172607421875, 0.00034928321838378906, 0.000614166259765625, 0.0159759521484375, 0.00537109375, 0.0152130126953125, 2.372264862060547e-05, 0.8642578125, 0.000728607177734375, 0.00014793872833251953, 1.4404296875, 5.9604644775390625e-06, 0.0004858970642089844, 0.018646240234375, 7.200241088867188e-05, 0.052154541015625, 0.0016345977783203125, 0.0012502670288085938, 0.0001277923583984375, 0.0035228729248046875, 0.07025146484375], "tokens": [284, 320, 446, 1022, 275, 319, 3759, 322, 1451, 432, 5760, 328, 322, 1858, 32, 275, 319, 275, 319, 477, 601, 886, 2698, 2385, 32, 275, 569, 284, 562, 629, 622, 39719, 346, 301, 291, 442, 458, 32, 643, 5037, 32, 12239, 1534, 473, 284, 320, 446, 1022, 275, 319, 3759, 322]}
{"line_number": 375, "line_type": "original", "code": "        Iterator iterator = this.rows.iterator();", "entropy": 1.138671875, "is_bug_line": false, "sus_score": 0.4890272617340088, "per_token_entropy": [4.0234375, 6.6328125, 0.09771728515625, 0.07708740234375, 0.2509765625, 0.0034027099609375, 0.2305908203125, 0.0235748291015625, 0.048583984375, 0.00150299072265625], "tokens": [351, 14743, 10032, 280, 458, 32, 2138, 32, 5162, 473]}
{"line_number": 375, "line_type": "generated", "code": "\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Returns a clone of the table.\n     *\n     * @return A clone.\n     *\n     * @throws CloneNotSupportedException if there is a problem cloning the\n     *    ", "entropy": 0.1593017578125, "is_bug_line": false, "sus_score": 0.4890272617340088, "per_token_entropy": [0.322021484375, 0.0126190185546875, 0.09002685546875, 0.0022907257080078125, 0.09283447265625, 0.0004673004150390625, 0.034881591796875, 0.00121307373046875, 0.132568359375, 0.0047760009765625, 0.00635528564453125, 0.0004169940948486328, 0.12890625, 0.0006093978881835938, 0.23046875, 0.01230621337890625, 0.0019054412841796875, 1.3947486877441406e-05, 0.041229248046875, 0.09136962890625, 1.2607421875, 0.289794921875, 0.49853515625, 0.81298828125, 0.052581787109375, 0.08758544921875, 0.001216888427734375, 0.399658203125, 2.4437904357910156e-05, 0.00034499168395996094, 0.0005741119384765625, 0.1986083984375, 0.0726318359375, 0.1072998046875, 0.003940582275390625, 0.11328125, 0.457763671875, 0.00047397613525390625, 0.00027060508728027344, 0.00994873046875, 0.008026123046875, 0.00032138824462890625, 0.10052490234375, 0.546875, 0.052093505859375, 0.11663818359375, 0.004497528076171875, 0.1611328125, 0.84375, 0.41064453125, 6.35385513305664e-05, 0.462646484375], "tokens": [528, 320, 400, 320, 324, 320, 291, 320, 291, 442, 861, 45, 284, 320, 446, 1022, 275, 319, 3759, 312, 7892, 432, 322, 1858, 32, 275, 319, 275, 319, 477, 601, 399, 7892, 32, 275, 319, 275, 319, 477, 5117, 14429, 43107, 415, 2017, 438, 312, 3708, 46736, 322, 275, 319, 262]}
{"line_number": 377, "line_type": "original", "code": "            KeyedObjects rowData = (KeyedObjects) iterator.next();", "entropy": 1.4892578125, "is_bug_line": false, "sus_score": 0.4890272617340088, "per_token_entropy": [3.861328125, 11.1171875, 0.0180206298828125, 1.18359375, 1.5849609375, 0.86865234375, 0.5908203125, 0.79931640625, 0.00777435302734375, 2.7894973754882812e-05, 0.0019817352294921875, 0.002025604248046875, 3.76953125, 0.00975799560546875, 0.00202178955078125, 0.004711151123046875], "tokens": [1468, 3891, 318, 6692, 2698, 750, 280, 308, 953, 318, 6692, 27, 10032, 32, 1978, 473]}
{"line_number": 377, "line_type": "generated", "code": "\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Returns a hash code for this instance.\n     *\n     * @return A hash code.\n     */\n    public int hashCode() {\n        int result = 193;\n        int row", "entropy": 0.09600830078125, "is_bug_line": false, "sus_score": 0.4890272617340088, "per_token_entropy": [0.7021484375, 0.0104217529296875, 0.023406982421875, 0.0013437271118164062, 0.11077880859375, 0.007038116455078125, 0.013397216796875, 0.0005230903625488281, 0.0870361328125, 0.00046181678771972656, 0.205810546875, 0.0099945068359375, 0.0014400482177734375, 1.33514404296875e-05, 0.0292816162109375, 0.08697509765625, 0.599609375, 0.021697998046875, 0.37841796875, 0.0438232421875, 0.443115234375, 0.00237274169921875, 0.1419677734375, 0.0033931732177734375, 0.39501953125, 1.9073486328125e-05, 7.021427154541016e-05, 0.0004291534423828125, 0.212890625, 0.004108428955078125, 0.0010385513305664062, 0.0306396484375, 0.01336669921875, 0.0023937225341796875, 0.004863739013671875, 0.002056121826171875, 3.3974647521972656e-05, 1.71661376953125e-05, 0.00030159950256347656, 0.0008769035339355469, 0.037933349609375, 0.1466064453125, 0.35400390625, 0.129150390625, 0.007801055908203125, 0.081298828125, 0.01418304443359375, 0.004566192626953125, 0.0021953582763671875, 0.01361083984375, 0.312255859375, 0.29736328125], "tokens": [324, 320, 291, 320, 291, 442, 861, 45, 284, 320, 446, 1022, 275, 319, 3759, 312, 3677, 1340, 436, 458, 1980, 32, 275, 319, 275, 319, 477, 601, 399, 3677, 1340, 32, 275, 569, 284, 562, 629, 17772, 346, 301, 291, 629, 1056, 280, 225, 35, 43, 37, 45, 291, 629, 2698]}
{"line_number": 268, "line_type": "original", "code": "        KeyedObjects row;", "entropy": 2.52734375, "is_bug_line": false, "sus_score": 0.4883612096309662, "per_token_entropy": [4.3671875, 4.02734375, 0.004459381103515625, 0.01605224609375, 2.13671875, 4.61328125], "tokens": [351, 3891, 318, 6692, 2698, 45]}
{"line_number": 268, "line_type": "generated", "code": "\n        allNull = true;\n        int columnIndex = getColumnIndex(columnKey);\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount; \n             item++) {\n            KeyedObjects row = (Key", "entropy": 0.15380859375, "is_bug_line": false, "sus_score": 0.4883612096309662, "per_token_entropy": [0.197998046875, 1.3837890625, 0.0034389495849609375, 0.0006380081176757812, 0.002796173095703125, 0.0009098052978515625, 0.07330322265625, 0.611328125, 0.027587890625, 0.0011463165283203125, 0.337890625, 0.0081329345703125, 0.0032939910888671875, 0.0007815361022949219, 0.0045013427734375, 0.0008258819580078125, 0.0007443428039550781, 0.7724609375, 0.1832275390625, 0.0013179779052734375, 0.10162353515625, 1.4833984375, 0.0085601806640625, 0.0007815361022949219, 0.00022339820861816406, 0.1605224609375, 0.08721923828125, 0.0005145072937011719, 0.00382232666015625, 0.279052734375, 0.0011796951293945312, 0.09808349609375, 0.0023403167724609375, 0.2030029296875, 0.0012073516845703125, 0.0291595458984375, 0.0005440711975097656, 0.0007801055908203125, 0.0001150369644165039, 0.00112152099609375, 0.343994140625, 0.00130462646484375, 0.0030517578125, 0.0035190582275390625, 0.0254974365234375, 0.284912109375, 0.00011932849884033203, 0.016815185546875, 0.6689453125, 0.56396484375, 0.010955810546875, 9.274482727050781e-05], "tokens": [291, 1169, 1883, 280, 861, 45, 291, 629, 46452, 280, 622, 2137, 1284, 26, 2592, 953, 293, 291, 436, 308, 410, 1623, 280, 225, 34, 30, 1623, 1534, 280, 458, 32, 2138, 32, 891, 473, 1623, 333, 1623, 1534, 45, 25158, 1623, 1987, 301, 324, 3891, 318, 6692, 2698, 280, 308, 953]}
{"line_number": 171, "line_type": "original", "code": "     * @see #getColumnIndex(Comparable)", "entropy": 2.38671875, "is_bug_line": false, "sus_score": 0.47749021649360657, "per_token_entropy": [6.62109375, 4.22265625, 1.181640625, 2.365234375, 0.2099609375, 6.82421875, 0.023590087890625, 0.0283966064453125, 0.00287628173828125], "tokens": [262, 319, 477, 2970, 588, 41466, 26, 36880, 27]}
{"line_number": 171, "line_type": "generated", "code": "\n        return this.data.get(rowKey).get(columnKey);\n    }\n\n    /**\n     * Returns the object for the given row and column index.\n     *\n     * @param row  the row index.\n     * @param column  the", "entropy": 0.1864013671875, "is_bug_line": false, "sus_score": 0.47749021649360657, "per_token_entropy": [0.5966796875, 0.83544921875, 0.89111328125, 0.0149688720703125, 0.54931640625, 0.308349609375, 0.07025146484375, 0.033111572265625, 0.309814453125, 0.0120697021484375, 0.6708984375, 0.00537109375, 0.0006241798400878906, 0.0010595321655273438, 3.0279159545898438e-05, 0.002971649169921875, 0.096435546875, 0.0010528564453125, 0.19482421875, 0.01361083984375, 0.008087158203125, 7.128715515136719e-05, 0.152587890625, 0.1968994140625, 0.68115234375, 0.221923828125, 1.14453125, 0.052398681640625, 0.0360107421875, 0.056793212890625, 0.004756927490234375, 0.8134765625, 0.04559326171875, 0.1483154296875, 7.319450378417969e-05, 0.091552734375, 7.998943328857422e-05, 0.0008230209350585938, 0.0003960132598876953, 0.5703125, 0.0209808349609375, 0.0017795562744140625, 0.00444793701171875, 0.0887451171875, 0.74365234375, 0.00044345855712890625, 1.1920928955078125e-05, 0.00030493736267089844, 4.971027374267578e-05, 0.0009598731994628906, 0.002201080322265625, 0.00027632713317871094], "tokens": [291, 442, 458, 32, 605, 32, 371, 26, 643, 953, 547, 371, 26, 2592, 953, 293, 284, 320, 446, 1022, 275, 319, 3759, 322, 1300, 436, 322, 2702, 2698, 461, 2623, 1650, 32, 275, 319, 275, 319, 477, 753, 2698, 225, 322, 2698, 1650, 32, 275, 319, 477, 753, 2623, 225, 322]}
{"line_number": 135, "line_type": "original", "code": "     */", "entropy": 3.36328125, "is_bug_line": false, "sus_score": 0.47339341044425964, "per_token_entropy": [6.484375, 0.240966796875], "tokens": [262, 569]}
{"line_number": 135, "line_type": "generated", "code": "\n    public int getColumnIndex(Comparable key) {\n        return this.columnKeys.indexOf(key);\n    }\n\n    /**\n     * Returns the column keys.\n     *\n     * @return The column keys (never <code>null</code>).\n    ", "entropy": 0.018951416015625, "is_bug_line": false, "sus_score": 0.47339341044425964, "per_token_entropy": [0.2724609375, 0.160888671875, 0.005794525146484375, 0.0001087188720703125, 0.0004761219024658203, 0.00279998779296875, 0.0004062652587890625, 0.004261016845703125, 0.0003783702850341797, 0.00033855438232421875, 0.005947113037109375, 0.013763427734375, 0.01206207275390625, 0.00405120849609375, 6.031990051269531e-05, 0.0031147003173828125, 0.0009813308715820312, 6.449222564697266e-05, 0.0018138885498046875, 0.0006041526794433594, 0.0007033348083496094, 0.00046563148498535156, 0.051849365234375, 0.0002970695495605469, 0.07635498046875, 0.0030956268310546875, 0.004154205322265625, 0.0002186298370361328, 0.00298309326171875, 0.0238189697265625, 0.0269927978515625, 0.00738525390625, 0.01377105712890625, 0.014617919921875, 7.140636444091797e-05, 0.0212860107421875, 0.0004582405090332031, 0.0002722740173339844, 0.0006747245788574219, 0.0015773773193359375, 0.06317138671875, 0.0044708251953125, 0.07147216796875, 0.061004638671875, 0.0010175704956054688, 0.0003037452697753906, 0.0002815723419189453, 0.00024259090423583984, 0.0008196830749511719, 1.2159347534179688e-05, 0.00276947021484375, 0.038177490234375], "tokens": [284, 562, 629, 622, 2137, 1284, 26, 36880, 1202, 27, 301, 291, 442, 458, 32, 2592, 5037, 32, 7142, 26, 678, 293, 284, 320, 446, 1022, 275, 319, 3759, 322, 2623, 5036, 32, 275, 319, 275, 319, 477, 601, 886, 2623, 5036, 308, 18462, 333, 687, 48, 1693, 377, 687, 33909, 275]}
{"line_number": 134, "line_type": "original", "code": "     * @see #getRowIndex(Comparable)", "entropy": 1.3515625, "is_bug_line": false, "sus_score": 0.47038355469703674, "per_token_entropy": [6.0625, 1.1484375, 0.43212890625, 0.02752685546875, 0.0035228729248046875, 3.61328125, 2.18359375, 0.0063018798828125, 0.03802490234375, 0.0017480850219726562], "tokens": [262, 319, 477, 2970, 588, 30093, 1284, 26, 36880, 27]}
{"line_number": 134, "line_type": "generated", "code": "\n     */\n    public int getColumnIndex(Comparable key) {\n        return this.columnKeys.indexOf(key);\n    }\n\n    /**\n     * Returns the column keys.\n     *\n     * @return The column keys (never <code>null</code", "entropy": 0.0108642578125, "is_bug_line": false, "sus_score": 0.47038355469703674, "per_token_entropy": [0.060638427734375, 0.067626953125, 0.0035915374755859375, 0.00211334228515625, 0.0002281665802001953, 8.58306884765625e-06, 0.0004038810729980469, 0.0014934539794921875, 0.00011181831359863281, 0.00173187255859375, 2.288818359375e-05, 3.743171691894531e-05, 0.0007157325744628906, 0.0030117034912109375, 0.0127105712890625, 0.0030002593994140625, 1.0013580322265625e-05, 0.0007233619689941406, 0.00012767314910888672, 1.7523765563964844e-05, 0.0005278587341308594, 0.0002951622009277344, 6.508827209472656e-05, 0.0001552104949951172, 0.0027008056640625, 9.775161743164062e-06, 0.01392364501953125, 0.0012254714965820312, 0.001903533935546875, 3.457069396972656e-05, 0.0025234222412109375, 0.029510498046875, 0.0286102294921875, 0.007785797119140625, 0.01441192626953125, 0.01448822021484375, 8.666515350341797e-05, 0.030914306640625, 6.496906280517578e-05, 0.0009565353393554688, 0.0006308555603027344, 0.0016927719116210938, 0.07965087890625, 0.004878997802734375, 0.07696533203125, 0.09027099609375, 0.0010251998901367188, 0.00019848346710205078, 5.9723854064941406e-05, 0.00012135505676269531, 0.0007157325744628906, 1.3470649719238281e-05], "tokens": [275, 569, 284, 562, 629, 622, 2137, 1284, 26, 36880, 1202, 27, 301, 291, 442, 458, 32, 2592, 5037, 32, 7142, 26, 678, 293, 284, 320, 446, 1022, 275, 319, 3759, 322, 2623, 5036, 32, 275, 319, 275, 319, 477, 601, 886, 2623, 5036, 308, 18462, 333, 687, 48, 1693, 377, 687]}
{"line_number": 371, "line_type": "original", "code": "        if (index < 0) {", "entropy": 1.982421875, "is_bug_line": false, "sus_score": 0.4634103775024414, "per_token_entropy": [3.921875, 2.16796875, 1.1650390625, 8.015625, 1.36328125, 0.61572265625, 0.00330352783203125, 0.521484375, 0.0728759765625], "tokens": [351, 415, 308, 1055, 333, 225, 34, 27, 301]}
{"line_number": 371, "line_type": "generated", "code": "\n                } else if (!v1.equals(v2)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Returns a hash code for this object.\n     *\n     * @return A hash code.", "entropy": 0.11456298828125, "is_bug_line": false, "sus_score": 0.4634103775024414, "per_token_entropy": [0.6357421875, 0.176025390625, 0.82861328125, 0.47119140625, 0.04205322265625, 0.0083770751953125, 0.0010652542114257812, 0.00046563148498535156, 0.0017652511596679688, 0.00019598007202148438, 0.0007190704345703125, 0.0006017684936523438, 0.0024280548095703125, 0.0067901611328125, 0.0594482421875, 0.0023021697998046875, 0.00014460086822509766, 0.000995635986328125, 0.051788330078125, 0.0006136894226074219, 0.31201171875, 0.0005249977111816406, 0.03338623046875, 0.00087738037109375, 0.09783935546875, 0.0027751922607421875, 0.00357818603515625, 0.00017249584197998047, 0.061981201171875, 0.0006132125854492188, 0.2098388671875, 0.0144195556640625, 0.0017108917236328125, 1.2159347534179688e-05, 0.033172607421875, 0.09326171875, 0.64599609375, 0.0244903564453125, 0.385986328125, 0.046630859375, 0.9296875, 0.0248565673828125, 0.0750732421875, 0.00490570068359375, 0.158447265625, 2.205371856689453e-05, 5.4717063903808594e-05, 0.00045299530029296875, 0.45458984375, 0.003833770751953125, 0.00269317626953125, 0.043121337890625], "tokens": [400, 320, 813, 415, 1429, 104, 35, 32, 3574, 26, 104, 36, 490, 301, 528, 442, 901, 45, 400, 320, 324, 320, 291, 320, 291, 442, 861, 45, 284, 320, 446, 1022, 275, 319, 3759, 312, 3677, 1340, 436, 458, 1300, 32, 275, 319, 275, 319, 477, 601, 399, 3677, 1340, 32]}
{"line_number": 370, "line_type": "original", "code": "        int index = getColumnIndex(columnKey);", "entropy": 1.5595703125, "is_bug_line": false, "sus_score": 0.4552013874053955, "per_token_entropy": [3.68359375, 7.90234375, 2.341796875, 0.1612548828125, 1.0634765625, 1.5380859375, 0.09619140625, 0.01410675048828125, 0.302001953125, 0.038909912109375, 0.00786590576171875], "tokens": [351, 629, 1650, 280, 622, 2137, 1284, 26, 2592, 953, 293]}
{"line_number": 370, "line_type": "generated", "code": "\n                    }\n                }\n                else if (!v1.equals(v2)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Returns a hash code for this instance.\n     * \n     * @return A", "entropy": 0.1029052734375, "is_bug_line": false, "sus_score": 0.4552013874053955, "per_token_entropy": [0.46875, 0.0144195556640625, 0.08294677734375, 0.0020389556884765625, 0.327880859375, 0.0175628662109375, 0.23291015625, 0.03936767578125, 0.0044708251953125, 0.0006875991821289062, 0.0002598762512207031, 0.0008869171142578125, 0.00013005733489990234, 0.00042891502380371094, 0.0005412101745605469, 0.0015010833740234375, 0.007061004638671875, 0.09881591796875, 0.00146484375, 0.00013196468353271484, 0.001445770263671875, 0.1885986328125, 0.00039196014404296875, 0.1656494140625, 0.000492095947265625, 0.0435791015625, 0.0007987022399902344, 0.09454345703125, 0.003688812255859375, 0.004566192626953125, 0.00048351287841796875, 0.15625, 0.0006880760192871094, 0.207275390625, 0.012786865234375, 0.001926422119140625, 1.3232231140136719e-05, 0.034637451171875, 0.0943603515625, 0.69091796875, 0.0231170654296875, 0.37158203125, 0.043212890625, 0.5634765625, 0.0035953521728515625, 0.1422119140625, 0.004302978515625, 1.0263671875, 5.4955482482910156e-05, 0.0009965896606445312, 0.002483367919921875, 0.16357421875], "tokens": [528, 320, 400, 320, 400, 813, 415, 1429, 104, 35, 32, 3574, 26, 104, 36, 490, 301, 528, 442, 901, 45, 400, 320, 324, 320, 291, 320, 291, 442, 861, 45, 284, 320, 446, 1022, 275, 319, 3759, 312, 3677, 1340, 436, 458, 1980, 32, 275, 319, 5384, 319, 477, 601, 399]}
{"line_number": 267, "line_type": "original", "code": "        }", "entropy": 3.177734375, "is_bug_line": false, "sus_score": 0.4539056718349457, "per_token_entropy": [2.296875, 4.05859375], "tokens": [351, 320]}
{"line_number": 267, "line_type": "generated", "code": "\n        // 2. check whether the column is now empty.\n        boolean allNull = true;\n        int columnIndex = getColumnIndex(columnKey);\n\n        for (int row = 0, rowCount = this.rows.size(); row < row", "entropy": 0.1339111328125, "is_bug_line": false, "sus_score": 0.4539056718349457, "per_token_entropy": [0.41064453125, 0.4892578125, 0.039764404296875, 0.0294952392578125, 0.0048980712890625, 0.086669921875, 0.0162506103515625, 0.01873779296875, 0.019378662109375, 0.0096435546875, 0.004146575927734375, 0.00138092041015625, 0.1468505859375, 0.060272216796875, 0.8251953125, 0.1497802734375, 0.060821533203125, 0.1343994140625, 0.002044677734375, 0.0002574920654296875, 0.0665283203125, 0.234375, 0.06695556640625, 0.001361846923828125, 0.2120361328125, 0.0070648193359375, 0.0030498504638671875, 0.0005393028259277344, 0.004673004150390625, 0.0010747909545898438, 0.0006422996520996094, 1.2802734375, 0.0411376953125, 0.0006690025329589844, 0.08514404296875, 1.12109375, 0.0243682861328125, 0.0009455680847167969, 0.00014710426330566406, 0.486328125, 0.0282745361328125, 0.0014867782592773438, 0.0014467239379882812, 0.244140625, 0.00012826919555664062, 0.406494140625, 0.00466156005859375, 0.11126708984375, 0.0005908012390136719, 0.01102447509765625, 0.0004699230194091797, 0.0008177757263183594], "tokens": [291, 434, 225, 36, 32, 1505, 4946, 322, 2623, 438, 2464, 3502, 32, 291, 1905, 1169, 1883, 280, 861, 45, 291, 629, 46452, 280, 622, 2137, 1284, 26, 2592, 953, 293, 584, 436, 308, 410, 2698, 280, 225, 34, 30, 2698, 1534, 280, 458, 32, 2138, 32, 891, 473, 2698, 333, 2698]}
{"line_number": 56, "line_type": "original", "code": " */", "entropy": 7.8125, "is_bug_line": false, "sus_score": 0.4509600102901459, "per_token_entropy": [7.8125], "tokens": [569]}
{"line_number": 56, "line_type": "generated", "code": "\n     * @param column  the column index (in the range 0 to getColumnCount() - 1).", "entropy": 0.03033447265625, "is_bug_line": false, "sus_score": 0.4509600102901459, "per_token_entropy": [0.290283203125, 0.00968170166015625, 0.067138671875, 0.0010118484497070312, 0.010162353515625, 0.003734588623046875, 0.0008087158203125, 0.007232666015625, 0.0144195556640625, 0.06488037109375, 0.0062408447265625, 0.0006055831909179688, 0.0013704299926757812, 0.01003265380859375, 0.00024771690368652344, 0.0027008056640625, 0.07183837890625, 0.0185089111328125, 0.00209808349609375, 0.0097808837890625, 0.0233306884765625, 0.038970947265625, 0.0008025169372558594, 0.07196044921875], "tokens": [275, 319, 477, 753, 2623, 225, 322, 2623, 1650, 308, 266, 322, 2155, 225, 34, 372, 622, 2137, 1534, 346, 429, 225, 35, 547]}
{"line_number": 279, "line_type": "original", "code": "        int columnIndex = this.columnKeys.indexOf(columnKey);", "entropy": 0.8037109375, "is_bug_line": false, "sus_score": 0.431853324174881, "per_token_entropy": [4.16015625, 2.8671875, 2.103515625, 0.0828857421875, 1.748046875, 0.0016832351684570312, 0.12060546875, 0.0262603759765625, 0.005176544189453125, 0.0229949951171875, 0.00849151611328125, 0.074462890625, 0.0214996337890625, 0.00501251220703125], "tokens": [351, 629, 46452, 280, 458, 32, 2592, 5037, 32, 7142, 26, 2592, 953, 293]}
{"line_number": 279, "line_type": "generated", "code": "\n    public void removeRow(int rowIndex) {\n        this.rowKeys.remove(rowIndex);\n        this.rows.remove(rowIndex);\n    }\n\n    /**\n     * Removes an entire column from the table.\n     *\n     * @param columnIndex  the", "entropy": 0.046875, "is_bug_line": false, "sus_score": 0.431853324174881, "per_token_entropy": [0.220703125, 0.07318115234375, 0.00571441650390625, 0.0004811286926269531, 0.0092315673828125, 0.0020313262939453125, 0.01056671142578125, 0.006023406982421875, 0.0008864402770996094, 0.009674072265625, 0.1973876953125, 0.58544921875, 0.00013375282287597656, 0.25634765625, 0.0008063316345214844, 0.0005178451538085938, 0.00440216064453125, 0.0018978118896484375, 0.0013275146484375, 0.00057220458984375, 0.022430419921875, 0.0145721435546875, 0.00019991397857666016, 0.001850128173828125, 0.0003833770751953125, 0.0008835792541503906, 0.0007457733154296875, 0.0008120536804199219, 0.00024580955505371094, 0.1865234375, 0.0011396408081054688, 0.239501953125, 0.00494384765625, 0.003589630126953125, 0.0002522468566894531, 0.0706787109375, 0.06817626953125, 0.005641937255859375, 0.1448974609375, 0.01197052001953125, 0.0016117095947265625, 0.0021209716796875, 0.05029296875, 0.08892822265625, 0.00011336803436279297, 0.055145263671875, 0.00019359588623046875, 0.0004525184631347656, 0.000522613525390625, 0.0662841796875, 0.0035247802734375, 0.0009946823120117188], "tokens": [284, 562, 763, 3345, 2352, 26, 410, 40073, 27, 301, 291, 458, 32, 643, 5037, 32, 2546, 26, 40084, 293, 291, 458, 32, 2138, 32, 2546, 26, 40084, 293, 284, 320, 446, 1022, 275, 319, 24992, 600, 9449, 2623, 645, 322, 1858, 32, 275, 319, 275, 319, 477, 753, 46452, 225, 322]}
{"line_number": 281, "line_type": "original", "code": "            this.columnKeys.add(columnKey);", "entropy": 1.62890625, "is_bug_line": false, "sus_score": 0.43163400888442993, "per_token_entropy": [5.54296875, 1.0224609375, 0.0018987655639648438, 4.96875, 0.041839599609375, 0.033172607421875, 5.49609375, 0.1884765625, 0.490234375, 0.11505126953125, 0.026519775390625], "tokens": [1468, 458, 32, 2592, 5037, 32, 669, 26, 2592, 953, 293]}
{"line_number": 281, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Removes an entire column from the table.\n     *\n     * @param columnIndex  the column index.\n     * \n     * @see #removeRow(int)\n     */\n    public void removeColumn(int columnIndex) {\n        this", "entropy": 0.03912353515625, "is_bug_line": false, "sus_score": 0.43163400888442993, "per_token_entropy": [0.77294921875, 0.0027408599853515625, 0.1488037109375, 0.004428863525390625, 0.002803802490234375, 0.0004622936248779297, 0.057281494140625, 0.06439208984375, 0.00628662109375, 0.2008056640625, 0.00925445556640625, 0.00127410888671875, 0.001758575439453125, 0.038818359375, 0.07440185546875, 0.00010311603546142578, 0.053192138671875, 0.00025010108947753906, 0.00048661231994628906, 0.00035834312438964844, 0.059112548828125, 0.003082275390625, 0.0008883476257324219, 0.01203155517578125, 0.007076263427734375, 0.0289764404296875, 0.0085296630859375, 0.0721435546875, 0.0250396728515625, 0.0016565322875976562, 0.0011472702026367188, 0.0026493072509765625, 0.0005540847778320312, 0.0007138252258300781, 0.0299224853515625, 0.0004451274871826172, 0.0008869171142578125, 0.0004787445068359375, 0.0295867919921875, 0.006954193115234375, 0.0087127685546875, 0.000873565673828125, 0.00013077259063720703, 0.0001379251480102539, 0.00026869773864746094, 0.00019752979278564453, 0.0104217529296875, 0.0010061264038085938, 0.0001220703125, 0.0026378631591796875, 0.1942138671875, 0.0833740234375], "tokens": [284, 320, 446, 1022, 275, 319, 24992, 600, 9449, 2623, 645, 322, 1858, 32, 275, 319, 275, 319, 477, 753, 46452, 225, 322, 2623, 1650, 32, 275, 319, 5384, 319, 477, 2970, 588, 2546, 2352, 26, 410, 27, 275, 569, 284, 562, 763, 3345, 2137, 26, 410, 46452, 27, 301, 291, 458]}
{"line_number": 274, "line_type": "original", "code": "            this.rowKeys.add(rowKey);", "entropy": 1.8095703125, "is_bug_line": false, "sus_score": 0.42966848611831665, "per_token_entropy": [6.515625, 5.0234375, 0.038543701171875, 0.9326171875, 0.01152801513671875, 0.00856781005859375, 6.18359375, 0.0210723876953125, 1.1162109375, 0.045928955078125, 0.01186370849609375], "tokens": [1468, 458, 32, 643, 5037, 32, 669, 26, 643, 953, 293]}
{"line_number": 274, "line_type": "generated", "code": "\n     *\n     * @param rowKey  the row key (<code>null</code> not permitted).\n     */\n    public void removeRow(Comparable rowKey) {\n        int rowIndex = getRowIndex(rowKey);\n        this.rowKeys.remove", "entropy": 0.0870361328125, "is_bug_line": false, "sus_score": 0.42966848611831665, "per_token_entropy": [0.389404296875, 0.1102294921875, 0.336181640625, 0.0010862350463867188, 0.00902557373046875, 0.0021495819091796875, 0.0643310546875, 0.01641845703125, 0.019927978515625, 0.004352569580078125, 0.0576171875, 0.008941650390625, 0.13720703125, 0.00026798248291015625, 3.540515899658203e-05, 0.0002734661102294922, 0.0001399517059326172, 0.0004591941833496094, 0.0006122589111328125, 0.0011529922485351562, 0.0009169578552246094, 0.0047760009765625, 0.0806884765625, 0.64794921875, 0.064697265625, 0.0048675537109375, 0.0013971328735351562, 0.0007085800170898438, 0.0022678375244140625, 0.0115203857421875, 0.007328033447265625, 0.00208282470703125, 0.0004248619079589844, 0.0007071495056152344, 0.01483917236328125, 0.337890625, 0.9228515625, 0.07952880859375, 0.0007791519165039062, 0.52734375, 0.00067901611328125, 0.0007262229919433594, 0.0008444786071777344, 8.368492126464844e-05, 0.0013103485107421875, 0.051727294921875, 0.4013671875, 1.7881393432617188e-05, 0.1915283203125, 0.0003833770751953125, 0.00031065940856933594, 0.0034198760986328125], "tokens": [275, 319, 275, 319, 477, 753, 2698, 953, 225, 322, 2698, 1202, 11304, 687, 48, 1693, 377, 687, 48, 646, 15010, 547, 275, 569, 284, 562, 763, 3345, 2352, 26, 36880, 2698, 953, 27, 301, 291, 629, 40073, 280, 622, 38653, 26, 643, 953, 293, 291, 458, 32, 643, 5037, 32, 2546]}
{"line_number": 356, "line_type": "original", "code": "        Comparable columnKey = getColumnKey(columnIndex);", "entropy": 1.08203125, "is_bug_line": false, "sus_score": 0.42661935091018677, "per_token_entropy": [2.1875, 5.53125, 2.478515625, 0.033966064453125, 0.1160888671875, 1.083984375, 0.1005859375, 0.1474609375, 0.049102783203125, 1.2021484375, 0.047119140625, 0.00846099853515625], "tokens": [351, 40409, 2623, 953, 280, 622, 2137, 953, 26, 2592, 1284, 293]}
{"line_number": 356, "line_type": "generated", "code": "\n        for (int r = 0; r < rowCount; r++) {\n            KeyedObjects row1 = getRow(r);\n            KeyedObjects row2 = that.getRow(r);\n            if (!row1.equals(row2", "entropy": 0.10028076171875, "is_bug_line": false, "sus_score": 0.42661935091018677, "per_token_entropy": [0.3916015625, 0.77978515625, 0.0030918121337890625, 0.00833892822265625, 0.92578125, 0.01229095458984375, 0.0012187957763671875, 0.0007767677307128906, 0.003108978271484375, 0.0021495819091796875, 0.00727081298828125, 0.01447296142578125, 0.0005812644958496094, 0.0007801055908203125, 0.0255889892578125, 0.0015172958374023438, 0.00743865966796875, 0.08929443359375, 0.92431640625, 0.0007224082946777344, 0.09759521484375, 0.22021484375, 0.67578125, 0.00521087646484375, 0.6435546875, 0.01849365234375, 0.02984619140625, 0.006359100341796875, 0.0006785392761230469, 0.0307769775390625, 0.0121307373046875, 2.9206275939941406e-05, 0.0006556510925292969, 0.0010986328125, 0.00033593177795410156, 0.0017938613891601562, 0.0152587890625, 0.0004892349243164062, 0.0002765655517578125, 0.00033402442932128906, 0.0013637542724609375, 0.0001138448715209961, 0.059326171875, 0.11114501953125, 0.035430908203125, 0.026702880859375, 0.0041961669921875, 0.0006456375122070312, 0.01422119140625, 0.0007691383361816406, 0.0008416175842285156, 0.0005779266357421875], "tokens": [291, 436, 308, 410, 540, 280, 225, 34, 45, 540, 333, 2698, 1534, 45, 540, 1987, 301, 324, 3891, 318, 6692, 2698, 35, 280, 622, 2352, 26, 100, 293, 324, 3891, 318, 6692, 2698, 36, 280, 688, 32, 30093, 26, 100, 293, 324, 415, 1429, 643, 35, 32, 3574, 26, 643, 36]}
{"line_number": 85, "line_type": "original", "code": "     * @see #getColumnCount()", "entropy": 1.4970703125, "is_bug_line": false, "sus_score": 0.4210159480571747, "per_token_entropy": [3.998046875, 3.03125, 1.853515625, 0.65234375, 0.018402099609375, 1.5224609375, 0.8837890625, 0.01708984375], "tokens": [262, 319, 477, 2970, 588, 19239, 1534, 346]}
{"line_number": 85, "line_type": "generated", "code": "\n     */\n    public Comparable getRowKey(int row) {\n        Comparable result = null;\n        if (row >= 0 && row < this.rowKeys.size()) {\n            result = (Comparable) this.rowKeys.get(row);", "entropy": 0.04083251953125, "is_bug_line": false, "sus_score": 0.4210159480571747, "per_token_entropy": [0.1239013671875, 0.023345947265625, 0.0063934326171875, 0.0025787353515625, 0.01245880126953125, 0.003376007080078125, 0.0149993896484375, 0.0002472400665283203, 1.4185905456542969e-05, 0.0006690025329589844, 0.00011444091796875, 3.540515899658203e-05, 0.0006380081176757812, 0.0087890625, 0.64892578125, 0.05560302734375, 0.00258636474609375, 0.004039764404296875, 2.300739288330078e-05, 0.0119476318359375, 0.0811767578125, 0.10931396484375, 0.0269317626953125, 0.446044921875, 0.00897979736328125, 9.059906005859375e-06, 0.09814453125, 0.00647735595703125, 0.01117706298828125, 0.2471923828125, 1.1920928955078125e-06, 0.1375732421875, 2.956390380859375e-05, 2.086162567138672e-05, 3.0994415283203125e-06, 0.0005717277526855469, 0.0007510185241699219, 0.0081024169921875, 0.00312042236328125, 0.0009412765502929688, 0.01153564453125, 8.225440979003906e-05, 0.00012826919555664062, 0.0026302337646484375, 2.6226043701171875e-06, 0.0010280609130859375, 3.2186508178710938e-06, 1.0967254638671875e-05, 2.944469451904297e-05, 0.00013136863708496094, 5.4955482482910156e-05, 4.6253204345703125e-05], "tokens": [275, 569, 284, 562, 40409, 622, 2352, 953, 26, 410, 2698, 27, 301, 291, 40409, 1056, 280, 744, 45, 291, 415, 308, 643, 2377, 225, 34, 962, 2698, 333, 458, 32, 643, 5037, 32, 891, 1157, 301, 324, 1056, 280, 308, 36880, 27, 458, 32, 643, 5037, 32, 371, 26, 643, 293]}
{"line_number": 280, "line_type": "original", "code": "        if (columnIndex < 0) {", "entropy": 1.5380859375, "is_bug_line": false, "sus_score": 0.4104275107383728, "per_token_entropy": [3.109375, 2.828125, 0.307861328125, 6.38671875, 1.33984375, 1.1806640625, 0.09661865234375, 0.0036144256591796875, 0.0955810546875, 0.036163330078125], "tokens": [351, 415, 308, 2592, 1284, 333, 225, 34, 27, 301]}
{"line_number": 280, "line_type": "generated", "code": "\n        this.rowKeys.remove(rowIndex);\n        this.rows.remove(rowIndex);\n    }\n\n    /**\n     * Removes an entire column from the table.\n     *\n     * @param columnIndex  the column index.\n     * \n     * @see #", "entropy": 0.04852294921875, "is_bug_line": false, "sus_score": 0.4104275107383728, "per_token_entropy": [0.385986328125, 0.441650390625, 0.00014925003051757812, 0.26806640625, 0.0007162094116210938, 0.0007457733154296875, 0.00746917724609375, 0.00164794921875, 0.00366973876953125, 0.0006885528564453125, 0.0728759765625, 0.022369384765625, 4.184246063232422e-05, 0.0031375885009765625, 0.00040650367736816406, 0.0009794235229492188, 0.0006480216979980469, 0.0009436607360839844, 0.00027823448181152344, 0.406982421875, 0.0024356842041015625, 0.1851806640625, 0.00458526611328125, 0.0027256011962890625, 0.0001838207244873047, 0.05218505859375, 0.06640625, 0.005046844482421875, 0.1669921875, 0.01055145263671875, 0.0013227462768554688, 0.0017833709716796875, 0.044830322265625, 0.07501220703125, 0.00014829635620117188, 0.050201416015625, 0.00017762184143066406, 0.00048232078552246094, 0.000392913818359375, 0.0694580078125, 0.00301361083984375, 0.0009455680847167969, 0.01238250732421875, 0.0072479248046875, 0.03173828125, 0.00897216796875, 0.06689453125, 0.026336669921875, 0.0012559890747070312, 0.0011882781982421875, 0.002918243408203125, 0.0006012916564941406], "tokens": [291, 458, 32, 643, 5037, 32, 2546, 26, 40084, 293, 291, 458, 32, 2138, 32, 2546, 26, 40084, 293, 284, 320, 446, 1022, 275, 319, 24992, 600, 9449, 2623, 645, 322, 1858, 32, 275, 319, 275, 319, 477, 753, 46452, 225, 322, 2623, 1650, 32, 275, 319, 5384, 319, 477, 2970, 588]}
{"line_number": 331, "line_type": "original", "code": "        this.rows.remove(rowIndex);", "entropy": 1.4150390625, "is_bug_line": false, "sus_score": 0.4049890339374542, "per_token_entropy": [3.951171875, 1.3251953125, 0.0020389556884765625, 2.115234375, 0.118896484375, 0.447021484375, 0.0919189453125, 4.67578125, 0.006870269775390625], "tokens": [351, 458, 32, 2138, 32, 2546, 26, 40084, 293]}
{"line_number": 331, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Clears all the data from the table.\n     */\n    public void clear() {\n        this.rows.clear();\n        this.rowKeys.clear();\n        this.columnKeys.clear();\n    }\n\n    /**\n     *", "entropy": 0.1397705078125, "is_bug_line": false, "sus_score": 0.4049890339374542, "per_token_entropy": [0.2003173828125, 0.0013074874877929688, 0.329345703125, 0.0197906494140625, 0.004344940185546875, 1.8477439880371094e-05, 1.068359375, 0.01367950439453125, 0.6005859375, 0.2471923828125, 0.748046875, 0.44384765625, 0.179443359375, 0.01293182373046875, 0.435302734375, 0.2587890625, 0.5625, 0.01148223876953125, 0.0031833648681640625, 0.0010166168212890625, 0.0028743743896484375, 0.004428863525390625, 0.0018396377563476562, 0.042083740234375, 0.061370849609375, 5.221366882324219e-05, 0.765625, 0.1826171875, 0.005321502685546875, 0.0007352828979492188, 0.02215576171875, 0.0032176971435546875, 2.6941299438476562e-05, 0.219970703125, 0.00388336181640625, 0.00605010986328125, 0.004192352294921875, 0.0001423358917236328, 0.03094482421875, 0.0034313201904296875, 7.49826431274414e-05, 0.01206207275390625, 0.004657745361328125, 0.0021038055419921875, 0.00013494491577148438, 0.00018703937530517578, 0.434814453125, 0.0008955001831054688, 0.2802734375, 0.022430419921875, 0.003986358642578125, 2.1696090698242188e-05], "tokens": [284, 320, 446, 1022, 275, 319, 11035, 101, 1169, 322, 706, 645, 322, 1858, 32, 275, 569, 284, 562, 763, 4233, 346, 301, 291, 458, 32, 2138, 32, 3815, 473, 291, 458, 32, 643, 5037, 32, 3815, 473, 291, 458, 32, 2592, 5037, 32, 3815, 473, 284, 320, 446, 1022, 275, 319]}
{"line_number": 207, "line_type": "original", "code": "     * @return The object (possibly <code>null</code>).", "entropy": 1.2412109375, "is_bug_line": false, "sus_score": 0.40054917335510254, "per_token_entropy": [3.759765625, 0.08502197265625, 0.25, 6.8984375, 1.38671875, 1.2998046875, 2.765625, 0.438720703125, 1.2958984375, 0.0006656646728515625, 7.271766662597656e-05, 0.0216064453125, 0.00788116455078125, 0.002349853515625, 0.409423828125], "tokens": [262, 319, 477, 601, 886, 1300, 308, 46016, 333, 687, 48, 1693, 377, 687, 33909]}
{"line_number": 207, "line_type": "generated", "code": "\n     * @param columnKey  the column key (<code>null</code> not permitted).", "entropy": 0.01190948486328125, "is_bug_line": false, "sus_score": 0.40054917335510254, "per_token_entropy": [0.10369873046875, 0.0355224609375, 0.05517578125, 0.005260467529296875, 0.0012884140014648438, 0.0007295608520507812, 0.0025386810302734375, 0.0002448558807373047, 0.0019083023071289062, 0.00412750244140625, 0.0185394287109375, 0.00039315223693847656, 0.00039577484130859375, 0.00032639503479003906, 0.0008864402770996094, 0.00012183189392089844, 0.00029730796813964844, 0.0008378028869628906, 0.0020236968994140625, 0.0038280487060546875], "tokens": [275, 319, 477, 753, 2623, 953, 225, 322, 2623, 1202, 11304, 687, 48, 1693, 377, 687, 48, 646, 15010, 547]}
