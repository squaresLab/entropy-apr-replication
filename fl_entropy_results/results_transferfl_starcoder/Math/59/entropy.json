{"line_number": 3482, "line_type": "original", "code": "        return (a <= b) ? b : (Float.isNaN(a + b) ? Float.NaN : b);", "entropy": 0.5419921875, "is_bug_line": true, "sus_score": 0.5262004733085632, "per_token_entropy": [4.91015625, 0.98583984375, 1.21875, 0.57568359375, 0.1612548828125, 0.0032329559326171875, 0.014678955078125, 0.0017728805541992188, 0.3447265625, 0.01904296875, 0.7587890625, 1.1552734375, 0.0008945465087890625, 0.0116424560546875, 0.0008668899536132812, 0.006694793701171875, 0.0088653564453125, 0.0009226799011230469, 0.002155303955078125, 0.0010595321655273438, 0.005878448486328125, 0.0006866455078125, 0.0034027099609375, 0.0018434524536132812, 3.892578125, 0.00597381591796875], "tokens": [351, 442, 308, 83, 2511, 323, 27, 1018, 323, 499, 308, 3670, 32, 26821, 26, 83, 474, 323, 27, 1018, 8174, 32, 11126, 499, 323, 293]}
{"line_number": 3482, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": true, "sus_score": 0.5262004733085632, "per_token_entropy": [], "tokens": []}
{"line_number": 3446, "line_type": "original", "code": "        return (a <= b) ? a : (Float.isNaN(a + b) ? Float.NaN : b);", "entropy": 0.54541015625, "is_bug_line": false, "sus_score": 0.5262004733085632, "per_token_entropy": [5.546875, 1.5654296875, 1.728515625, 0.72216796875, 0.287109375, 0.00765228271484375, 0.03192138671875, 0.0034198760986328125, 1.2724609375, 0.0738525390625, 0.9140625, 1.798828125, 0.0013427734375, 0.03289794921875, 0.002162933349609375, 0.01251983642578125, 0.0158538818359375, 0.004222869873046875, 0.003047943115234375, 0.00345611572265625, 0.0171966552734375, 0.0002346038818359375, 0.004077911376953125, 0.001522064208984375, 0.12286376953125, 0.00577545166015625], "tokens": [351, 442, 308, 83, 2511, 323, 27, 1018, 312, 499, 308, 3670, 32, 26821, 26, 83, 474, 323, 27, 1018, 8174, 32, 11126, 499, 323, 293]}
{"line_number": 3446, "line_type": "generated", "code": "\n    /** Compute the minimum of three values\n     * @param a first value\n     * @param b second value\n     * @param c third value\n     * @return a if a is lesser or equal to b and c, b otherwise\n     */\n    public", "entropy": 0.15576171875, "is_bug_line": false, "sus_score": 0.5262004733085632, "per_token_entropy": [1.166015625, 0.2724609375, 1.2392578125, 0.1842041015625, 1.6953125, 0.07476806640625, 0.63134765625, 0.0015163421630859375, 0.01349639892578125, 0.0003643035888671875, 0.00939178466796875, 0.000213623046875, 0.005207061767578125, 0.0014410018920898438, 0.002170562744140625, 0.0004456043243408203, 4.5299530029296875e-06, 0.00034928321838378906, 2.5987625122070312e-05, 5.91278076171875e-05, 0.00031304359436035156, 0.0002378225326538086, 0.00017213821411132812, 1.3232231140136719e-05, 0.0005135536193847656, 0.01385498046875, 0.0001900196075439453, 0.0022525787353515625, 0.0025424957275390625, 0.0015230178833007812, 0.00013589859008789062, 0.0005574226379394531, 0.000469207763671875, 0.1490478515625, 0.006557464599609375, 0.059844970703125, 0.005950927734375, 0.1683349609375, 0.0019474029541015625, 0.156982421875, 0.0016326904296875, 0.01091766357421875, 0.4921875, 0.1258544921875, 0.52197265625, 0.06878662109375, 0.54296875, 0.43701171875, 0.00952911376953125, 0.00919342041015625, 0.0115509033203125, 0.0033702850341796875], "tokens": [284, 1022, 12836, 322, 9340, 432, 8019, 2078, 275, 319, 477, 753, 312, 1932, 786, 275, 319, 477, 753, 323, 3100, 786, 275, 319, 477, 753, 281, 10970, 786, 275, 319, 477, 601, 312, 415, 312, 438, 6679, 265, 556, 5040, 372, 323, 461, 281, 30, 323, 5878, 275, 569, 284, 562]}
{"line_number": 342, "line_type": "original", "code": "          double hiPrec[] = new double[2];", "entropy": 0.8173828125, "is_bug_line": false, "sus_score": 0.43678948283195496, "per_token_entropy": [7.65234375, 0.8037109375, 0.490234375, 0.00901031494140625, 0.00289154052734375, 0.002017974853515625, 0.0015230178833007812, 0.00013935565948486328, 0.007122039794921875, 0.01361846923828125, 0.006740570068359375], "tokens": [2033, 2064, 13677, 30532, 1178, 280, 537, 2064, 77, 36, 970]}
{"line_number": 342, "line_type": "generated", "code": "\n      if (x == 0.0) {\n          return x;\n      }\n\n      if (x < 0.0) {\n          x = -x;\n          negate = true;\n      }\n\n      double result;\n\n      if (x > ", "entropy": 0.101806640625, "is_bug_line": false, "sus_score": 0.43678948283195496, "per_token_entropy": [0.2005615234375, 0.98779296875, 0.07037353515625, 0.381591796875, 0.392333984375, 0.06817626953125, 0.0007376670837402344, 0.5537109375, 0.00033020973205566406, 0.0267791748046875, 0.00604248046875, 0.05487060546875, 0.0262908935546875, 0.032379150390625, 0.000354766845703125, 0.0104217529296875, 0.0019464492797851562, 0.0875244140625, 0.1688232421875, 0.00405120849609375, 0.218994140625, 0.041656494140625, 0.0023632049560546875, 0.000675201416015625, 0.100830078125, 0.00012576580047607422, 0.0013914108276367188, 0.0014848709106445312, 0.0163421630859375, 0.0633544921875, 0.0003399848937988281, 0.00032019615173339844, 0.001911163330078125, 2.1696090698242188e-05, 0.0021190643310546875, 0.0021495819091796875, 2.6226043701171875e-06, 0.00039505958557128906, 0.0004940032958984375, 4.112720489501953e-05, 0.0018568038940429688, 0.0001367330551147461, 0.0406494140625, 0.1915283203125, 0.591796875, 0.0277862548828125, 0.18603515625, 0.1434326171875, 0.00803375244140625, 0.02532958984375, 0.51416015625, 0.032257080078125], "tokens": [397, 415, 308, 106, 610, 225, 34, 32, 34, 27, 301, 616, 442, 816, 45, 397, 320, 1687, 415, 308, 106, 333, 225, 34, 32, 34, 27, 301, 616, 816, 280, 429, 106, 45, 616, 7528, 332, 280, 861, 45, 397, 320, 1687, 2064, 1056, 45, 1687, 415, 308, 106, 848, 225]}
{"line_number": 365, "line_type": "original", "code": "          rb += -ya * denomb * denomr * denomr;   // denominator", "entropy": 1.9755859375, "is_bug_line": false, "sus_score": 0.43678948283195496, "per_token_entropy": [6.34375, 10.46875, 1.1064453125, 1.8037109375, 1.28125, 0.34716796875, 3.255859375, 0.035400390625, 0.90234375, 0.826171875, 0.00925445556640625, 2.146484375, 1.5224609375, 0.01885986328125, 0.1282958984375, 4.953125, 0.024139404296875, 0.399658203125], "tokens": [2033, 18635, 1454, 429, 9486, 319, 5537, 15140, 319, 24257, 100, 319, 24257, 100, 45, 261, 434, 39920]}
{"line_number": 365, "line_type": "generated", "code": "\n\n      if (x < 0.61442365538913981979) {\n          double hiPrec[] = new double[2];\n          sinh(x, hiPrec);\n\n          double", "entropy": 0.39013671875, "is_bug_line": false, "sus_score": 0.43678948283195496, "per_token_entropy": [0.666015625, 0.31298828125, 0.08184814453125, 1.0048828125, 0.68896484375, 0.0199432373046875, 0.42529296875, 0.037445068359375, 0.9375, 1.5458984375, 1.333984375, 0.396240234375, 0.056182861328125, 0.315185546875, 0.2081298828125, 0.1785888671875, 0.1885986328125, 0.95068359375, 1.125, 0.4248046875, 0.372314453125, 0.1341552734375, 1.3857421875, 0.64306640625, 0.54150390625, 0.9873046875, 0.92626953125, 0.454345703125, 0.12457275390625, 0.0157012939453125, 0.17626953125, 0.791015625, 0.9951171875, 0.00931549072265625, 0.005558013916015625, 0.0008606910705566406, 0.0004138946533203125, 9.489059448242188e-05, 0.000759124755859375, 0.007671356201171875, 0.0007638931274414062, 0.08221435546875, 0.9580078125, 0.0024089813232421875, 0.03668212890625, 0.0390625, 0.0016603469848632812, 0.007717132568359375, 2.658367156982422e-05, 0.02203369140625, 0.34814453125, 0.304931640625], "tokens": [1687, 415, 308, 106, 333, 225, 34, 32, 40, 35, 38, 38, 36, 37, 40, 39, 39, 37, 42, 43, 35, 37, 43, 42, 35, 43, 41, 43, 27, 301, 616, 2064, 13677, 30532, 1178, 280, 537, 2064, 77, 36, 970, 616, 9812, 90, 26, 106, 30, 13677, 30532, 293, 5678, 2064]}
{"line_number": 428, "line_type": "original", "code": "          na = temp;", "entropy": 4.64453125, "is_bug_line": false, "sus_score": 0.43678948283195496, "per_token_entropy": [6.57421875, 7.03515625, 2.380859375, 5.5703125, 1.6611328125], "tokens": [2033, 5499, 280, 1779, 45]}
{"line_number": 428, "line_type": "generated", "code": "\n\n          // ratio = na/da\n          double ratio = na/da;\n          temp = ratio * 1073741824.0;\n          double ratioa = ratio + temp - temp;\n          double ratiob = ratio -", "entropy": 0.0159912109375, "is_bug_line": false, "sus_score": 0.43678948283195496, "per_token_entropy": [0.2410888671875, 0.2476806640625, 0.00951385498046875, 0.0022754669189453125, 0.0218048095703125, 0.001934051513671875, 0.0003211498260498047, 0.00939178466796875, 0.0251007080078125, 0.000362396240234375, 0.00518798828125, 0.03375244140625, 0.035125732421875, 0.0006375312805175781, 0.00027489662170410156, 0.033935546875, 0.00994110107421875, 0.00013828277587890625, 0.0001283884048461914, 0.0025787353515625, 0.00037860870361328125, 0.0002079010009765625, 0.00016319751739501953, 0.00014150142669677734, 1.0609626770019531e-05, 2.002716064453125e-05, 0.00010907649993896484, 5.1856040954589844e-05, 0.00010955333709716797, 8.869171142578125e-05, 0.0005559921264648438, 0.00070953369140625, 0.00019180774688720703, 0.00017249584197998047, 0.0090179443359375, 0.0057525634765625, 5.435943603515625e-05, 0.0014200210571289062, 0.0002181529998779297, 0.00026297569274902344, 0.0018787384033203125, 0.0009288787841796875, 5.5789947509765625e-05, 0.00015652179718017578, 0.0002551078796386719, 0.1165771484375, 0.00984954833984375, 0.00020110607147216797, 4.208087921142578e-05, 8.511543273925781e-05, 0.00019633769989013672, 0.0006375312805175781], "tokens": [5678, 434, 12488, 280, 5499, 33, 1804, 616, 2064, 12488, 280, 5499, 33, 1804, 45, 616, 1779, 280, 12488, 319, 225, 35, 34, 41, 37, 41, 38, 35, 42, 36, 38, 32, 34, 45, 616, 2064, 12488, 83, 280, 12488, 474, 1779, 429, 1779, 45, 616, 2064, 12488, 84, 280, 12488, 429]}
{"line_number": 439, "line_type": "original", "code": "          double dab = da - daa;", "entropy": 1.9267578125, "is_bug_line": false, "sus_score": 0.43678948283195496, "per_token_entropy": [5.8125, 5.58984375, 4.06640625, 2.13671875, 0.76171875, 0.767578125, 0.0413818359375, 0.05291748046875, 0.0021114349365234375, 0.0413818359375], "tokens": [2033, 2064, 343, 360, 280, 5282, 429, 343, 2321, 45]}
{"line_number": 439, "line_type": "generated", "code": "\n\n          // Account for nb\n          ratiob += nb / da;\n          // Account for db\n          ratiob += -db * na / da / da;\n\n          result = ratioa + ratiob;\n      }\n\n      if (negate) {\n          result =", "entropy": 0.03302001953125, "is_bug_line": false, "sus_score": 0.43678948283195496, "per_token_entropy": [0.251708984375, 0.189453125, 0.06591796875, 0.00033593177795410156, 0.004119873046875, 0.0296173095703125, 0.00241851806640625, 0.006237030029296875, 0.0020275115966796875, 0.006313323974609375, 0.005863189697265625, 0.0008192062377929688, 0.0011968612670898438, 0.039306640625, 0.0037136077880859375, 0.0017185211181640625, 3.1113624572753906e-05, 0.0017976760864257812, 0.0023288726806640625, 0.0024738311767578125, 0.0022640228271484375, 0.0023345947265625, 0.08203125, 0.0032253265380859375, 0.0251312255859375, 0.00995635986328125, 0.00887298583984375, 0.001544952392578125, 0.0021686553955078125, 0.0023593902587890625, 0.0015621185302734375, 0.060546875, 0.020263671875, 0.0004496574401855469, 0.01377105712890625, 0.00879669189453125, 0.0014047622680664062, 0.0002624988555908203, 5.924701690673828e-05, 0.0016660690307617188, 0.054229736328125, 0.00035953521728515625, 0.1824951171875, 0.1591796875, 0.04168701171875, 0.06353759765625, 4.76837158203125e-07, 0.005985260009765625, 0.036956787109375, 0.054351806640625, 0.25, 0.00199127197265625], "tokens": [5678, 434, 9035, 436, 12939, 616, 12488, 84, 1454, 12939, 517, 5282, 45, 616, 434, 9035, 436, 3082, 616, 12488, 84, 1454, 429, 1199, 319, 5499, 517, 5282, 517, 5282, 45, 5678, 1056, 280, 12488, 83, 474, 12488, 84, 45, 397, 320, 1687, 415, 308, 8095, 332, 27, 301, 616, 1056, 280]}
{"line_number": 450, "line_type": "original", "code": "          // Account for nb", "entropy": 4.5078125, "is_bug_line": false, "sus_score": 0.43678948283195496, "per_token_entropy": [7.3359375, 2.544921875, 4.83984375, 0.0006356239318847656, 7.828125], "tokens": [2033, 434, 9035, 436, 12939]}
{"line_number": 450, "line_type": "generated", "code": "\n      return result;\n  }", "entropy": 0.2254638671875, "is_bug_line": false, "sus_score": 0.43678948283195496, "per_token_entropy": [0.24755859375, 0.216064453125, 0.0300750732421875, 0.009490966796875, 0.8349609375, 0.0148162841796875], "tokens": [397, 442, 1056, 45, 334, 320]}
{"line_number": 463, "line_type": "original", "code": "          double yb = -(ya - hiPrec[0] - hiPrec[1]);", "entropy": 1.4892578125, "is_bug_line": false, "sus_score": 0.43678948283195496, "per_token_entropy": [7.7890625, 5.2421875, 3.591796875, 8.3203125, 0.72021484375, 2.091796875, 0.3310546875, 0.00980377197265625, 0.148681640625, 0.004817962646484375, 0.01120758056640625, 0.00534820556640625, 0.01480865478515625, 0.001140594482421875, 0.0033721923828125, 5.340576171875e-05, 0.004756927490234375, 0.00023746490478515625, 0.0036869049072265625], "tokens": [2033, 2064, 533, 84, 280, 25298, 9486, 429, 13677, 30532, 77, 34, 79, 429, 13677, 30532, 77, 35, 1989]}
{"line_number": 463, "line_type": "generated", "code": "\n     * @param a number on which evaluation is done\n     * @return inverse hyperbolic sine of a\n     */\n    public static double asinh(final double a) {\n        return FastMath.log(a + FastMath.sqrt(a", "entropy": 0.057464599609375, "is_bug_line": false, "sus_score": 0.43678948283195496, "per_token_entropy": [0.509765625, 0.0273284912109375, 0.0293121337890625, 0.0012969970703125, 0.1923828125, 0.00391387939453125, 0.0005860328674316406, 2.8848648071289062e-05, 0.00014519691467285156, 8.749961853027344e-05, 0.0002720355987548828, 0.01209259033203125, 0.0002856254577636719, 0.0020809173583984375, 0.00722503662109375, 0.00603485107421875, 0.00048542022705078125, 3.2067298889160156e-05, 1.4543533325195312e-05, 0.0177154541015625, 1.1682510375976562e-05, 0.0015506744384765625, 0.0041046142578125, 0.0219573974609375, 0.0171966552734375, 0.0159759521484375, 0.0037403106689453125, 0.001560211181640625, 0.005130767822265625, 4.0411949157714844e-05, 0.00018286705017089844, 0.0005736351013183594, 0.0706787109375, 0.0006651878356933594, 0.01470947265625, 0.0026454925537109375, 0.0040740966796875, 0.1810302734375, 1.44921875, 0.032470703125, 5.7220458984375e-06, 3.933906555175781e-05, 0.0001475811004638672, 0.0004963874816894531, 0.036865234375, 0.00091552734375, 0.0014562606811523438, 0.00024962425231933594, 6.842613220214844e-05, 3.910064697265625e-05, 0.0127716064453125, 0.296142578125], "tokens": [275, 319, 477, 753, 312, 1451, 544, 1510, 11903, 438, 3390, 275, 319, 477, 601, 19385, 15223, 84, 2073, 309, 482, 432, 312, 275, 569, 284, 562, 907, 2064, 619, 21976, 26, 3220, 2064, 312, 27, 301, 291, 442, 15938, 5717, 32, 751, 26, 83, 474, 15938, 5717, 32, 8663, 26, 83]}
{"line_number": 501, "line_type": "original", "code": "      return result;", "entropy": 2.2734375, "is_bug_line": false, "sus_score": 0.43678948283195496, "per_token_entropy": [4.609375, 2.1328125, 2.30859375, 0.041412353515625], "tokens": [647, 442, 1056, 45]}
{"line_number": 501, "line_type": "generated", "code": "\n        double absAtanh;\n        if (a < 0) {\n            negative = true;\n            a = -a;\n        }\n\n        if (a > 0.5) {\n            absAtanh = 1.0 / (a -", "entropy": 0.1632080078125, "is_bug_line": false, "sus_score": 0.43678948283195496, "per_token_entropy": [0.560546875, 1.4921875, 0.05865478515625, 0.02105712890625, 0.211181640625, 0.1607666015625, 0.1246337890625, 0.04815673828125, 0.0179290771484375, 0.1837158203125, 0.43798828125, 0.0755615234375, 0.00547027587890625, 0.2120361328125, 0.0023708343505859375, 0.0443115234375, 0.26123046875, 0.002178192138671875, 0.01319122314453125, 5.5909156799316406e-05, 0.05224609375, 0.28515625, 0.00046253204345703125, 0.001224517822265625, 0.006877899169921875, 6.568431854248047e-05, 0.0987548828125, 0.001399993896484375, 0.24951171875, 0.12939453125, 0.009521484375, 0.0261993408203125, 0.469970703125, 0.01531219482421875, 0.24609375, 0.0008983612060546875, 1.369140625, 0.05609130859375, 0.0011434555053710938, 0.01102447509765625, 0.01110076904296875, 1.9073486328125e-06, 2.7418136596679688e-06, 0.0009002685546875, 0.049560546875, 0.7421875, 0.051544189453125, 0.0011749267578125, 0.1409912109375, 0.01239776611328125, 0.476806640625, 0.032440185546875], "tokens": [291, 2064, 11366, 1076, 17427, 45, 291, 415, 308, 83, 333, 225, 34, 27, 301, 324, 11003, 280, 861, 45, 324, 312, 280, 429, 83, 45, 291, 320, 584, 415, 308, 83, 848, 225, 34, 32, 39, 27, 301, 324, 11366, 1076, 17427, 280, 225, 35, 32, 34, 517, 308, 83, 429]}
{"line_number": 1383, "line_type": "original", "code": "    /** Compute log(1 + x).", "entropy": 2.033203125, "is_bug_line": false, "sus_score": 0.43678948283195496, "per_token_entropy": [4.40625, 6.01953125, 0.94970703125, 1.98046875, 1.015625, 0.4921875, 0.8896484375, 0.06683349609375, 2.4765625], "tokens": [264, 1022, 12836, 1245, 26, 35, 474, 816, 547]}
{"line_number": 1383, "line_type": "generated", "code": "\n        return lna * 8.26295811576233005859375e-7;\n    }", "entropy": 0.70263671875, "is_bug_line": false, "sus_score": 0.43678948283195496, "per_token_entropy": [0.279052734375, 0.55322265625, 0.63525390625, 1.2159347534179688e-05, 0.464111328125, 0.108154296875, 1.869140625, 0.133544921875, 0.267333984375, 0.268310546875, 0.004638671875, 0.00021183490753173828, 0.00504302978515625, 0.0002048015594482422, 0.52099609375, 0.220947265625, 0.454833984375, 1.5517578125, 1.1669921875, 1.8798828125, 1.0966796875, 2.509765625, 1.4697265625, 2.2578125, 1.640625, 2.47265625, 0.751953125, 0.272216796875, 0.2646484375, 0.0090179443359375, 0.00341033935546875, 0.60205078125, 0.00048041343688964844, 1.146484375, 0.6943359375, 0.427978515625, 0.0030651092529296875], "tokens": [291, 442, 456, 3258, 319, 225, 42, 32, 36, 40, 36, 43, 39, 42, 35, 35, 39, 41, 40, 36, 37, 37, 34, 34, 39, 42, 39, 43, 37, 41, 39, 87, 31, 41, 45, 284, 320]}
{"line_number": 1389, "line_type": "original", "code": "        double xpb = -(xpa - 1.0 - x);", "entropy": 2.34765625, "is_bug_line": false, "sus_score": 0.43678948283195496, "per_token_entropy": [6.41015625, 3.640625, 2.15625, 4.84375, 0.06683349609375, 7.3984375, 0.88525390625, 4.4375, 1.0478515625, 0.369384765625, 0.033905029296875, 0.301025390625, 0.0113067626953125, 5.04296875, 0.2008056640625, 0.7099609375], "tokens": [351, 2064, 816, 4365, 280, 25298, 106, 4535, 429, 225, 35, 32, 34, 429, 816, 293]}
{"line_number": 1389, "line_type": "generated", "code": "\n    }\n\n    /** Compute the natural (base e) logarithm.\n     * @param x a number\n     * @return log(x)\n     */\n    public static double log(final double x) {\n        final double hiPrec[] = new double", "entropy": 0.11358642578125, "is_bug_line": false, "sus_score": 0.43678948283195496, "per_token_entropy": [0.1270751953125, 0.00202178955078125, 0.30126953125, 0.0821533203125, 0.6689453125, 0.86767578125, 1.337890625, 0.662109375, 0.0025768280029296875, 0.0290985107421875, 0.0014619827270507812, 0.0017118453979492188, 0.0011577606201171875, 9.834766387939453e-05, 0.08148193359375, 0.01435089111328125, 0.00016129016876220703, 0.041900634765625, 0.0010538101196289062, 0.0072174072265625, 0.00823211669921875, 0.0254364013671875, 0.04229736328125, 0.0009446144104003906, 0.0006628036499023438, 0.035919189453125, 0.09088134765625, 0.1138916015625, 0.0014362335205078125, 0.0020427703857421875, 0.007366180419921875, 0.0164337158203125, 0.00878143310546875, 0.00904083251953125, 0.00115203857421875, 0.0111846923828125, 0.0026416778564453125, 0.00208282470703125, 0.0634765625, 0.0015506744384765625, 0.0012521743774414062, 0.00726318359375, 0.007099151611328125, 0.1571044921875, 0.96484375, 0.0260162353515625, 0.05926513671875, 0.0005955696105957031, 0.0031585693359375, 0.0008287429809570312, 0.000789642333984375, 0.00130462646484375], "tokens": [284, 320, 446, 1022, 12836, 322, 19844, 308, 1439, 484, 27, 1245, 31176, 95, 32, 275, 319, 477, 753, 816, 312, 1451, 275, 319, 477, 601, 1245, 26, 106, 27, 275, 569, 284, 562, 907, 2064, 1245, 26, 3220, 2064, 816, 27, 301, 291, 1158, 2064, 13677, 30532, 1178, 280, 537, 2064]}
{"line_number": 529, "line_type": "original", "code": "            if (a > 0.097) {", "entropy": 1.84765625, "is_bug_line": false, "sus_score": 0.43678948283195496, "per_token_entropy": [5.515625, 1.6904296875, 0.09783935546875, 0.21923828125, 2.142578125, 0.049346923828125, 0.00870513916015625, 1.4609375, 0.059356689453125, 8.7421875, 3.333984375, 0.5888671875, 0.10272216796875], "tokens": [1468, 415, 308, 83, 848, 225, 34, 32, 34, 43, 41, 27, 301]}
{"line_number": 529, "line_type": "generated", "code": "\n     */\n    public static int signum(double a) {\n        return (a == 0)? 0 : (a < 0)? -1 : 1;\n    }\n\n    /**\n     * Returns the largest (closest to positive infinity", "entropy": 0.255615234375, "is_bug_line": false, "sus_score": 0.43678948283195496, "per_token_entropy": [0.3427734375, 0.86279296875, 0.037322998046875, 0.0278472900390625, 0.0022487640380859375, 1.3212890625, 0.04327392578125, 0.01702880859375, 0.003253936767578125, 0.6826171875, 0.01274871826171875, 0.0254974365234375, 0.0242462158203125, 0.291015625, 0.39306640625, 0.52587890625, 0.11248779296875, 1.4404296875, 0.003925323486328125, 3.457069396972656e-05, 0.226318359375, 0.0009031295776367188, 0.01134490966796875, 0.00045299530029296875, 0.00174713134765625, 0.2315673828125, 0.0130615234375, 0.0254364013671875, 0.0003726482391357422, 2.2649765014648438e-05, 0.048187255859375, 0.00012922286987304688, 0.0005383491516113281, 0.0004076957702636719, 0.00322723388671875, 0.0687255859375, 8.52346420288086e-05, 0.0200958251953125, 0.06939697265625, 0.0024509429931640625, 0.35986328125, 0.0880126953125, 1.1015625, 0.0015020370483398438, 1.138671875, 0.38623046875, 3.1875, 0.05267333984375, 0.00157928466796875, 2.6226043701171875e-06, 0.08074951171875, 0.0012140274047851562], "tokens": [275, 569, 284, 562, 907, 629, 2596, 378, 26, 2627, 312, 27, 301, 291, 442, 308, 83, 610, 225, 34, 27, 1018, 225, 34, 499, 308, 83, 333, 225, 34, 27, 1018, 429, 35, 499, 225, 35, 45, 284, 320, 446, 1022, 275, 319, 3759, 322, 22909, 308, 19093, 372, 11557, 46936]}
{"line_number": 532, "line_type": "original", "code": "                absAsinh = a * (1 - a2 * (1 / 3.0 - a2 * (1 / 5.0 - a2 * (1 / 7.0 - a2 * (1 / 9.0 - a2 * (1.0 / 11.0 - a2 * (1.0 / 13.0) * 11.0 / 12.0) * 9.0 / 10.0) * 7.0 / 8.0) * 5.0 / 6.0) * 3.0 / 4.0) / 2.0);", "entropy": 0.20361328125, "is_bug_line": false, "sus_score": 0.43678948283195496, "per_token_entropy": [8.875, 7.42578125, 4.9609375, 0.0126190185546875, 0.1290283203125, 0.36572265625, 0.2149658203125, 0.02215576171875, 0.009185791015625, 0.279541015625, 0.007354736328125, 0.01329803466796875, 0.005340576171875, 0.01043701171875, 0.006237030029296875, 0.024627685546875, 0.0012750625610351562, 0.0031871795654296875, 0.00974273681640625, 0.0005297660827636719, 0.045623779296875, 0.0014543533325195312, 0.00020706653594970703, 0.002223968505859375, 0.0016431808471679688, 0.0011425018310546875, 0.0012187957763671875, 0.00021564960479736328, 0.00048041343688964844, 0.0004267692565917969, 0.0001214742660522461, 0.0272216796875, 0.0009446144104003906, 0.0003032684326171875, 0.0007505416870117188, 0.00107574462890625, 0.0003154277801513672, 0.0008258819580078125, 0.00016736984252929688, 0.0002727508544921875, 0.0002319812774658203, 4.8279762268066406e-05, 0.01123046875, 0.0009241104125976562, 0.00017547607421875, 0.0006327629089355469, 0.00110626220703125, 0.00027632713317871094, 0.0019407272338867188, 0.00043010711669921875, 0.0002815723419189453, 0.0003266334533691406, 6.651878356933594e-05, 0.101806640625, 0.0015583038330078125, 0.00010514259338378906, 0.0006165504455566406, 0.00152587890625, 0.0003762245178222656, 0.0042572021484375, 0.00012683868408203125, 0.0004425048828125, 0.0004870891571044922, 6.711483001708984e-05, 6.270408630371094e-05, 0.00017440319061279297, 2.0503997802734375e-05, 0.006038665771484375, 0.000804901123046875, 0.0001398324966430664, 0.00041937828063964844, 0.0008554458618164062, 0.00030803680419921875, 0.00033545494079589844, 3.600120544433594e-05, 0.0001627206802368164, 0.00029349327087402344, 3.910064697265625e-05, 6.568431854248047e-05, 0.00015532970428466797, 1.5139579772949219e-05, 5.59765625, 0.009063720703125, 0.004970550537109375, 0.06298828125, 1.3916015625, 0.0008091926574707031, 0.00014495849609375, 0.0010633468627929688, 0.0005865097045898438, 0.0003559589385986328, 0.0218048095703125, 0.0005850791931152344, 6.794929504394531e-06, 0.01018524169921875, 0.0008668899536132812, 0.0007843971252441406, 0.004596710205078125, 8.440017700195312e-05, 3.743171691894531e-05, 0.00021898746490478516, 0.00019276142120361328, 0.0012359619140625, 1.71661376953125e-05, 0.00045180320739746094, 7.510185241699219e-06, 0.00211334228515625, 0.0005216598510742188, 0.0006160736083984375, 0.0005960464477539062, 5.924701690673828e-05, 2.0623207092285156e-05, 0.00018262863159179688, 0.0005197525024414062, 9.34600830078125e-05, 0.00015056133270263672, 2.491474151611328e-05, 0.0024127960205078125, 0.0003216266632080078, 0.00029468536376953125, 0.0002925395965576172, 4.7087669372558594e-05, 9.775161743164062e-06, 0.00024437904357910156, 0.00026798248291015625, 7.998943328857422e-05, 0.00017333030700683594, 1.609325408935547e-05, 0.0035381317138671875, 0.00033283233642578125, 0.00023102760314941406, 0.0001920461654663086, 6.4849853515625e-05, 1.7762184143066406e-05, 0.00014293193817138672, 0.0005235671997070312, 0.0003910064697265625, 0.00016927719116210938, 2.2411346435546875e-05, 0.007366180419921875, 0.001911163330078125, 0.0005249977111816406, 0.00011146068572998047, 0.00106048583984375, 5.7578086853027344e-05, 0.0031795501708984375], "tokens": [2071, 11366, 1465, 21976, 280, 312, 319, 308, 35, 429, 312, 36, 319, 308, 35, 517, 225, 37, 32, 34, 429, 312, 36, 319, 308, 35, 517, 225, 39, 32, 34, 429, 312, 36, 319, 308, 35, 517, 225, 41, 32, 34, 429, 312, 36, 319, 308, 35, 517, 225, 43, 32, 34, 429, 312, 36, 319, 308, 35, 32, 34, 517, 225, 35, 35, 32, 34, 429, 312, 36, 319, 308, 35, 32, 34, 517, 225, 35, 37, 32, 34, 27, 319, 225, 35, 35, 32, 34, 517, 225, 35, 36, 32, 34, 27, 319, 225, 43, 32, 34, 517, 225, 35, 34, 32, 34, 27, 319, 225, 41, 32, 34, 517, 225, 42, 32, 34, 27, 319, 225, 39, 32, 34, 517, 225, 40, 32, 34, 27, 319, 225, 37, 32, 34, 517, 225, 38, 32, 34, 27, 517, 225, 36, 32, 34, 293]}
{"line_number": 532, "line_type": "generated", "code": "\n    }\n\n    /** Compute the sign of a number.\n     * The sign is -1 for negative numbers, +1 for positive numbers and 0 otherwise\n     * @param a number on which evaluation is done\n     * @return -1, 0,", "entropy": 0.09381103515625, "is_bug_line": false, "sus_score": 0.43678948283195496, "per_token_entropy": [0.433349609375, 0.0055389404296875, 0.1866455078125, 0.055419921875, 0.9423828125, 0.142333984375, 1.76171875, 0.84619140625, 0.04510498046875, 0.00252532958984375, 0.0165863037109375, 0.01430511474609375, 0.00043702125549316406, 0.10174560546875, 0.01030731201171875, 0.0048980712890625, 0.0247955322265625, 2.765655517578125e-05, 0.0012044906616210938, 5.698204040527344e-05, 0.001308441162109375, 0.053009033203125, 0.060211181640625, 0.00037026405334472656, 0.0010080337524414062, 4.8041343688964844e-05, 0.0005950927734375, 0.0048370361328125, 0.01043701171875, 0.002025604248046875, 0.0018215179443359375, 0.00930023193359375, 7.748603820800781e-05, 0.01142120361328125, 0.0004513263702392578, 0.004581451416015625, 0.0021305084228515625, 0.003223419189453125, 2.1696090698242188e-05, 0.0004811286926269531, 0.00026917457580566406, 0.0012655258178710938, 0.00127410888671875, 0.0003895759582519531, 0.0003750324249267578, 0.0018091201782226562, 0.0103912353515625, 0.00012004375457763672, 0.076904296875, 0.007122039794921875, 0.00018107891082763672, 0.0164947509765625], "tokens": [284, 320, 446, 1022, 12836, 322, 2596, 432, 312, 1451, 32, 275, 319, 886, 2596, 438, 429, 35, 436, 11003, 7515, 30, 474, 35, 436, 11557, 7515, 461, 225, 34, 5878, 275, 319, 477, 753, 312, 1451, 544, 1510, 11903, 438, 3390, 275, 319, 477, 601, 429, 35, 30, 225, 34, 30]}
{"line_number": 536, "line_type": "original", "code": "                absAsinh = a * (1 - a2 * (1 / 3.0 - a2 * (1 / 5.0) * 3.0 / 4.0) / 2.0);", "entropy": 0.70849609375, "is_bug_line": false, "sus_score": 0.43678948283195496, "per_token_entropy": [8.6015625, 8.8515625, 6.86328125, 0.005023956298828125, 0.67822265625, 0.6845703125, 0.061004638671875, 0.038543701171875, 0.01983642578125, 0.269775390625, 0.0184326171875, 0.007648468017578125, 0.0167083740234375, 0.03070068359375, 0.0186309814453125, 0.11083984375, 0.0029239654541015625, 0.007663726806640625, 0.0262451171875, 0.0025482177734375, 0.059814453125, 0.0059967041015625, 0.00029349327087402344, 0.00391387939453125, 0.006946563720703125, 0.0021381378173828125, 0.0025482177734375, 0.0006122589111328125, 0.0006451606750488281, 0.0007700920104980469, 0.0003895759582519531, 7.82421875, 0.041900634765625, 0.01104736328125, 0.302734375, 0.004302978515625, 0.0005140304565429688, 0.0022487640380859375, 0.001300811767578125, 0.00748443603515625, 0.002349853515625, 5.8650970458984375e-05, 0.0738525390625, 0.039093017578125, 0.00202178955078125, 0.00048804283142089844, 0.004322052001953125, 3.802776336669922e-05, 0.0146331787109375], "tokens": [2071, 11366, 1465, 21976, 280, 312, 319, 308, 35, 429, 312, 36, 319, 308, 35, 517, 225, 37, 32, 34, 429, 312, 36, 319, 308, 35, 517, 225, 39, 32, 34, 27, 319, 225, 37, 32, 34, 517, 225, 38, 32, 34, 27, 517, 225, 36, 32, 34, 293]}
{"line_number": 536, "line_type": "generated", "code": "\n     * @param a number to which evaluation is done\n     * @return next number towards positive infinity\n     */\n    public static double nextUp(final double a) {\n        if (Double.isNaN(a)) {\n            return Double.NaN;\n        }", "entropy": 0.1693115234375, "is_bug_line": false, "sus_score": 0.43678948283195496, "per_token_entropy": [0.638671875, 0.439208984375, 0.326171875, 0.00743865966796875, 0.140869140625, 0.08404541015625, 0.60107421875, 1.69140625, 0.93896484375, 0.03399658203125, 0.0177459716796875, 0.026611328125, 0.002330780029296875, 0.0035037994384765625, 0.0149383544921875, 0.5048828125, 0.03082275390625, 0.0309295654296875, 0.01012420654296875, 0.0005755424499511719, 0.10272216796875, 0.06292724609375, 0.04681396484375, 0.0198211669921875, 0.0011911392211914062, 0.11065673828125, 0.00505828857421875, 0.0292816162109375, 0.0004627704620361328, 0.29150390625, 0.0128021240234375, 0.0089111328125, 0.00591278076171875, 0.01201629638671875, 0.43359375, 1.1083984375, 0.09564208984375, 0.339111328125, 0.00019550323486328125, 0.03131103515625, 7.450580596923828e-05, 5.5789947509765625e-05, 0.43017578125, 0.01026153564453125, 0.040924072265625, 0.00804901123046875, 0.028289794921875, 1.4066696166992188e-05, 0.001850128173828125, 0.00012135505676269531, 0.02374267578125, 0.00045561790466308594], "tokens": [275, 319, 477, 753, 312, 1451, 372, 1510, 11903, 438, 3390, 275, 319, 477, 601, 2354, 1451, 22057, 11557, 46936, 275, 569, 284, 562, 907, 2064, 2354, 1386, 26, 3220, 2064, 312, 27, 301, 291, 415, 308, 4075, 32, 26821, 26, 83, 490, 301, 324, 442, 6934, 32, 11126, 45, 291, 320]}
{"line_number": 555, "line_type": "original", "code": "", "entropy": 3.64453125, "is_bug_line": false, "sus_score": 0.43678948283195496, "per_token_entropy": [3.64453125], "tokens": [203]}
{"line_number": 555, "line_type": "generated", "code": "\n     * be correctly rounded to within 1 ulp (unit in the last place).\n     *\n     * @param x the exponent\n     * @return exp(x)\n     */\n    public static double exp(final double x) {\n        final int i", "entropy": 0.2626953125, "is_bug_line": false, "sus_score": 0.43678948283195496, "per_token_entropy": [0.8740234375, 0.004871368408203125, 0.318603515625, 0.11944580078125, 0.0013799667358398438, 0.289306640625, 1.705078125, 0.00665283203125, 0.1817626953125, 0.328125, 0.00353240966796875, 0.420654296875, 0.0156402587890625, 0.0082550048828125, 0.0006327629089355469, 0.00025844573974609375, 0.00042366981506347656, 0.001708984375, 0.17626953125, 0.0019779205322265625, 0.326171875, 0.0007004737854003906, 0.6396484375, 0.00186920166015625, 0.00649261474609375, 1.2880859375, 0.15771484375, 0.2188720703125, 0.00017750263214111328, 0.0011892318725585938, 0.0035724639892578125, 0.1171875, 0.00041031837463378906, 1.2755393981933594e-05, 0.00022554397583007812, 0.019317626953125, 0.23046875, 0.0169525146484375, 0.030029296875, 0.0016117095947265625, 0.13427734375, 0.0002149343490600586, 0.0074310302734375, 0.5322265625, 0.003963470458984375, 0.00079345703125, 0.0032196044921875, 0.0077362060546875, 0.3671875, 1.8349609375, 0.89111328125, 2.357421875], "tokens": [275, 319, 526, 8464, 13116, 372, 4797, 225, 35, 8194, 98, 308, 2243, 328, 322, 2401, 3668, 547, 275, 319, 275, 319, 477, 753, 816, 322, 19715, 275, 319, 477, 601, 2910, 26, 106, 27, 275, 569, 284, 562, 907, 2064, 2910, 26, 3220, 2064, 816, 27, 301, 291, 1158, 629, 595]}
{"line_number": 132, "line_type": "original", "code": "        (0x01924bbaL << 32) | 0x82746487L,", "entropy": 1.6474609375, "is_bug_line": false, "sus_score": 0.43678948283195496, "per_token_entropy": [2.98828125, 8.4453125, 4.76171875, 0.9580078125, 2.439453125, 3.712890625, 2.376953125, 3.712890625, 9.6796875, 0.2440185546875, 0.544921875, 0.0677490234375, 0.00400543212890625, 0.003795623779296875, 0.0027751922607421875, 0.07244873046875, 0.01422882080078125, 0.05596923828125, 0.00228118896484375, 0.70361328125, 1.330078125, 1.7001953125, 3.28515625, 0.2325439453125, 0.99267578125, 0.5126953125, 0.0016012191772460938, 0.33984375, 0.0081787109375, 0.24560546875], "tokens": [351, 308, 34, 106, 34, 35, 43, 36, 38, 40558, 62, 1264, 225, 37, 36, 27, 523, 225, 34, 106, 42, 36, 41, 38, 40, 38, 42, 41, 62, 30]}
{"line_number": 132, "line_type": "generated", "code": "\n            expint(i, tmp);\n            EXP_INT_TABLE_A[i] = tmp[0];\n            EXP_INT_TABLE_B[i] = tmp[1];\n        }\n\n        // Populate logIntTable\n        for (i", "entropy": 0.1429443359375, "is_bug_line": false, "sus_score": 0.43678948283195496, "per_token_entropy": [0.650390625, 0.705078125, 0.103515625, 0.75927734375, 0.08551025390625, 0.701171875, 0.6943359375, 0.0167694091796875, 0.031097412109375, 0.053131103515625, 0.0021266937255859375, 0.00730133056640625, 0.00010478496551513672, 0.66845703125, 0.00269317626953125, 0.138916015625, 0.02130126953125, 0.01282501220703125, 0.240478515625, 0.016937255859375, 0.06207275390625, 4.482269287109375e-05, 0.06390380859375, 0.005748748779296875, 0.006031036376953125, 0.0006175041198730469, 3.9696693420410156e-05, 0.00014770030975341797, 2.9921531677246094e-05, 0.00019109249114990234, 0.00013256072998046875, 0.002109527587890625, 5.53131103515625e-05, 0.0001316070556640625, 0.00034618377685546875, 0.00801849365234375, 0.01386260986328125, 0.0003159046173095703, 0.000476837158203125, 0.0009031295776367188, 0.388671875, 0.0053253173828125, 0.134033203125, 0.20361328125, 0.0249786376953125, 0.63671875, 0.771484375, 0.040557861328125, 0.056549072265625, 0.08526611328125, 0.003307342529296875, 0.007232666015625], "tokens": [324, 2910, 410, 26, 91, 30, 3691, 293, 324, 39936, 81, 1844, 81, 6947, 81, 51, 77, 91, 79, 280, 3691, 77, 34, 970, 324, 39936, 81, 1844, 81, 6947, 81, 52, 77, 91, 79, 280, 3691, 77, 35, 970, 291, 320, 584, 434, 44698, 1245, 1428, 1599, 291, 436, 308, 91]}
{"line_number": 220, "line_type": "original", "code": "    }", "entropy": 3.359375, "is_bug_line": false, "sus_score": 0.43669816851615906, "per_token_entropy": [5.22265625, 1.4951171875], "tokens": [264, 320]}
{"line_number": 220, "line_type": "generated", "code": "\n      return ya + yb;\n    }\n\n    /** Compute the hyperbolic sine of a number.\n     * @param x number on which evaluation is done\n     * @return hyperbolic sine of x\n     */\n    public static double sinh", "entropy": 0.042816162109375, "is_bug_line": false, "sus_score": 0.43669816851615906, "per_token_entropy": [0.84716796875, 0.279052734375, 0.0188751220703125, 0.05230712890625, 0.0014429092407226562, 9.489059448242188e-05, 0.00015282630920410156, 0.1458740234375, 0.0010509490966796875, 0.27685546875, 0.01953125, 0.233154296875, 0.02386474609375, 0.2191162109375, 0.00037670135498046875, 1.1920928955078125e-06, 0.002445220947265625, 1.6927719116210938e-05, 0.0015954971313476562, 0.004268646240234375, 9.083747863769531e-05, 0.00307464599609375, 0.01383209228515625, 0.00014078617095947266, 0.00562286376953125, 0.00011229515075683594, 0.006931304931640625, 0.00592041015625, 0.00011849403381347656, 7.56978988647461e-05, 0.0003285408020019531, 0.00010633468627929688, 0.0009632110595703125, 0.0007462501525878906, 0.0008206367492675781, 0.00015294551849365234, 0.0008225440979003906, 0.0006422996520996094, 0.0003540515899658203, 4.172325134277344e-06, 0.03350830078125, 1.5139579772949219e-05, 0.0009908676147460938, 0.0057830810546875, 0.0024776458740234375, 0.0018014907836914062, 0.0118865966796875, 0.0010128021240234375, 0.0001595020294189453, 0.0009493827819824219, 0.000286102294921875, 2.6226043701171875e-06], "tokens": [397, 442, 24262, 474, 533, 84, 45, 284, 320, 446, 1022, 12836, 322, 15223, 84, 2073, 309, 482, 432, 312, 1451, 32, 275, 319, 477, 753, 816, 1451, 544, 1510, 11903, 438, 3390, 275, 319, 477, 601, 15223, 84, 2073, 309, 482, 432, 816, 275, 569, 284, 562, 907, 2064, 9812, 90]}
{"line_number": 421, "line_type": "original", "code": "          double yb = -(ya - hiPrec[0] - hiPrec[1]);", "entropy": 0.978515625, "is_bug_line": false, "sus_score": 0.4365156292915344, "per_token_entropy": [6.7890625, 0.55712890625, 6.609375, 0.83544921875, 0.162109375, 0.505859375, 2.51171875, 0.11956787109375, 0.458740234375, 0.0014286041259765625, 0.005970001220703125, 0.005924224853515625, 0.006198883056640625, 0.0030155181884765625, 0.0012264251708984375, 0.0006403923034667969, 0.00028634071350097656, 0.0003743171691894531, 0.0231475830078125], "tokens": [2033, 2064, 533, 84, 280, 25298, 9486, 429, 13677, 30532, 77, 34, 79, 429, 13677, 30532, 77, 35, 1989]}
{"line_number": 421, "line_type": "generated", "code": "\n\n          temp = da + yb;\n          db = -(temp - da - yb);\n          da = temp;\n\n          temp = da * 1073741824.0;\n          double daa = da + temp -", "entropy": 0.07135009765625, "is_bug_line": false, "sus_score": 0.4365156292915344, "per_token_entropy": [0.387451171875, 0.331787109375, 0.0009527206420898438, 0.023193359375, 1.0205078125, 0.0311126708984375, 3.719329833984375e-05, 0.0003688335418701172, 0.00978851318359375, 0.35302734375, 1.041015625, 0.0135650634765625, 0.01071929931640625, 0.002758026123046875, 0.0032787322998046875, 0.0018100738525390625, 0.004024505615234375, 3.838539123535156e-05, 0.0012350082397460938, 0.007381439208984375, 0.0020198822021484375, 0.0008716583251953125, 0.0005888938903808594, 0.000225067138671875, 0.0404052734375, 0.12371826171875, 0.0009531974792480469, 0.0204925537109375, 0.041656494140625, 0.0038242340087890625, 0.024566650390625, 0.0106658935546875, 0.0010004043579101562, 0.0002465248107910156, 6.139278411865234e-05, 0.0007176399230957031, 7.343292236328125e-05, 0.00016570091247558594, 6.282329559326172e-05, 0.00013899803161621094, 0.003662109375, 0.0010251998901367188, 0.0004944801330566406, 0.004825592041015625, 0.1790771484375, 0.0003921985626220703, 6.699562072753906e-05, 0.0005402565002441406, 0.001461029052734375, 0.0016155242919921875, 0.0011920928955078125, 0.00015974044799804688], "tokens": [5678, 1779, 280, 5282, 474, 533, 84, 45, 616, 3082, 280, 25298, 1433, 429, 5282, 429, 533, 84, 293, 616, 5282, 280, 1779, 45, 5678, 1779, 280, 5282, 319, 225, 35, 34, 41, 37, 41, 38, 35, 42, 36, 38, 32, 34, 45, 616, 2064, 343, 2321, 280, 5282, 474, 1779, 429]}
{"line_number": 553, "line_type": "original", "code": "            a = -a;", "entropy": 4.4140625, "is_bug_line": false, "sus_score": 0.43637874722480774, "per_token_entropy": [8.2421875, 5.390625, 3.451171875, 2.142578125, 6.81640625, 0.444091796875], "tokens": [1468, 312, 280, 429, 83, 45]}
{"line_number": 553, "line_type": "generated", "code": "\n     * @param x Argument.\n     * @return exp(x)\n     */\n    public static double exp(final double x) {\n        return FastMath.exp(x);\n    }\n\n    /**\n     * Natural logarithm.\n     *\n     *", "entropy": 0.167236328125, "is_bug_line": false, "sus_score": 0.43637874722480774, "per_token_entropy": [0.51025390625, 0.2054443359375, 0.378173828125, 0.02081298828125, 0.442138671875, 1.830078125, 0.69873046875, 0.0168609619140625, 0.0121002197265625, 0.0060272216796875, 0.02655029296875, 0.9580078125, 0.0211029052734375, 0.0003647804260253906, 0.08453369140625, 0.01056671142578125, 0.1778564453125, 0.026702880859375, 0.035614013671875, 0.002368927001953125, 0.037567138671875, 0.00017833709716796875, 0.0097503662109375, 0.50732421875, 0.00194549560546875, 0.00109100341796875, 0.002765655517578125, 0.026519775390625, 0.2425537109375, 0.41455078125, 0.349853515625, 2.372264862060547e-05, 0.0022563934326171875, 0.01092529296875, 0.005462646484375, 0.0017414093017578125, 0.002124786376953125, 0.0174560546875, 0.0010166168212890625, 0.10784912109375, 0.01456451416015625, 0.07666015625, 0.00040078163146972656, 0.206298828125, 0.01033782958984375, 0.0003376007080078125, 0.00010478496551513672, 0.455078125, 0.005260467529296875, 0.0006227493286132812, 0.6962890625, 0.022857666015625], "tokens": [275, 319, 477, 753, 816, 7098, 32, 275, 319, 477, 601, 2910, 26, 106, 27, 275, 569, 284, 562, 907, 2064, 2910, 26, 3220, 2064, 816, 27, 301, 291, 442, 15938, 5717, 32, 2832, 26, 106, 293, 284, 320, 446, 1022, 275, 319, 42022, 1245, 31176, 95, 32, 275, 319, 275, 319]}
{"line_number": 411, "line_type": "original", "code": "          negate = true;", "entropy": 1.953125, "is_bug_line": false, "sus_score": 0.43615055084228516, "per_token_entropy": [6.12890625, 5.4453125, 6.783008575439453e-05, 0.0277862548828125, 0.11260986328125, 0.0007262229919433594], "tokens": [2033, 7528, 332, 280, 861, 45]}
{"line_number": 411, "line_type": "generated", "code": "\n\n          double ya = hiPrec[0] + hiPrec[1];\n          double yb = -(ya - hiPrec[0] - hiPrec[1]);\n\n          /* Numerator */\n          double na = -1.0 + ya;\n          double", "entropy": 0.0751953125, "is_bug_line": false, "sus_score": 0.43615055084228516, "per_token_entropy": [0.73046875, 0.40185546875, 0.1358642578125, 0.0033721923828125, 0.003467559814453125, 1.1563301086425781e-05, 6.318092346191406e-05, 0.0018472671508789062, 0.126953125, 0.003498077392578125, 0.003398895263671875, 6.9141387939453125e-06, 0.0007128715515136719, 0.00016236305236816406, 0.0009860992431640625, 0.01511383056640625, 0.01389312744140625, 0.04205322265625, 0.0006761550903320312, 0.000156402587890625, 0.0582275390625, 0.0007929801940917969, 0.018798828125, 0.0006518363952636719, 2.7418136596679688e-06, 0.0009145736694335938, 0.00034546852111816406, 0.00023484230041503906, 0.0008273124694824219, 0.00099945068359375, 1.990795135498047e-05, 6.127357482910156e-05, 3.409385681152344e-05, 0.0013551712036132812, 0.05352783203125, 0.72021484375, 0.0157928466796875, 5.245208740234375e-06, 0.0006480216979980469, 0.00690460205078125, 0.0238189697265625, 0.005340576171875, 0.00183868408203125, 1.3818359375, 0.08355712890625, 0.0036106109619140625, 0.0004265308380126953, 0.004032135009765625, 0.0285491943359375, 0.006557464599609375, 0.001987457275390625, 0.00429534912109375], "tokens": [5678, 2064, 24262, 280, 13677, 30532, 77, 34, 79, 474, 13677, 30532, 77, 35, 970, 616, 2064, 533, 84, 280, 25298, 9486, 429, 13677, 30532, 77, 34, 79, 429, 13677, 30532, 77, 35, 1989, 5678, 1257, 10821, 11290, 569, 616, 2064, 5499, 280, 429, 35, 32, 34, 474, 24262, 45, 616, 2064]}
{"line_number": 551, "line_type": "original", "code": "        if (a < 0) {", "entropy": 1.26953125, "is_bug_line": false, "sus_score": 0.43615055084228516, "per_token_entropy": [3.130859375, 2.955078125, 0.1812744140625, 1.86328125, 1.6337890625, 0.289306640625, 0.07891845703125, 1.26953125, 0.02337646484375], "tokens": [351, 415, 308, 83, 333, 225, 34, 27, 301]}
{"line_number": 551, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.43615055084228516, "per_token_entropy": [], "tokens": []}
