{"line_number": 84, "line_type": "original", "code": "    ", "entropy": 4.453125, "is_bug_line": false, "sus_score": 0.6104651689529419, "per_token_entropy": [4.453125], "tokens": [262]}
{"line_number": 84, "line_type": "generated", "code": "\n    /**\n     * Return the numerator degrees of freedom.\n     * \n     * @return the numerator degrees of freedom.\n     */\n    public double getNumeratorDegreesOfFreedom() {\n        return numeratorDegreesOfFreedom;\n    }\n    \n   ", "entropy": 0.1309814453125, "is_bug_line": false, "sus_score": 0.6104651689529419, "per_token_entropy": [0.640625, 0.0208587646484375, 0.0268096923828125, 0.0001480579376220703, 1.86328125, 0.019989013671875, 0.26806640625, 0.0004570484161376953, 0.01303863525390625, 0.00015747547149658203, 0.0004436969757080078, 0.179443359375, 0.1080322265625, 0.00197601318359375, 0.95166015625, 0.0001951456069946289, 0.0059661865234375, 0.0005750656127929688, 0.46484375, 0.042877197265625, 0.0008330345153808594, 0.0169830322265625, 0.0002453327178955078, 0.0037593841552734375, 0.0709228515625, 0.1143798828125, 0.09765625, 0.006130218505859375, 0.021209716796875, 0.0038127899169921875, 1.609325408935547e-05, 4.38690185546875e-05, 0.00011038780212402344, 7.271766662597656e-06, 1.9431114196777344e-05, 2.0265579223632812e-06, 1.1920928955078125e-07, 0.004344940185546875, 0.0030193328857421875, 0.0112152099609375, 0.0003943443298339844, 0.2095947265625, 1.2516975402832031e-05, 2.7060508728027344e-05, 1.430511474609375e-06, 2.1457672119140625e-06, 1.0728836059570312e-06, 6.794929504394531e-06, 0.0001780986785888672, 0.002529144287109375, 0.00012123584747314453, 1.63671875], "tokens": [284, 1022, 275, 319, 2744, 322, 1929, 11290, 18667, 432, 48503, 32, 275, 319, 5384, 319, 477, 601, 322, 1929, 11290, 18667, 432, 48503, 32, 275, 569, 284, 562, 2064, 44929, 11290, 32709, 1419, 56, 18749, 418, 346, 301, 291, 442, 1929, 11290, 32709, 1419, 56, 18749, 418, 45, 284, 320, 2170]}
{"line_number": 147, "line_type": "original", "code": "            ret = d / (d - 2.0);", "entropy": 1.62890625, "is_bug_line": true, "sus_score": 0.6077491641044617, "per_token_entropy": [6.890625, 4.48046875, 0.08148193359375, 3.771484375, 2.08203125, 0.76318359375, 0.564453125, 1.1748046875, 0.3046875, 0.06427001953125, 0.83935546875, 0.0007767677307128906, 0.1591796875], "tokens": [1468, 2152, 280, 343, 517, 308, 86, 429, 225, 36, 32, 34, 293]}
{"line_number": 147, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": true, "sus_score": 0.6077491641044617, "per_token_entropy": [], "tokens": []}
{"line_number": 80, "line_type": "original", "code": "                0.5 * m);", "entropy": 3.53125, "is_bug_line": false, "sus_score": 0.5340774059295654, "per_token_entropy": [7.9921875, 7.0234375, 0.359619140625, 1.8935546875, 0.236328125, 2.37890625, 4.8359375], "tokens": [423, 34, 32, 39, 319, 345, 293]}
{"line_number": 80, "line_type": "generated", "code": "\n     */\n    protected double getDomainUpperBound(double p) {\n        return Double.POSITIVE_INFINITY;\n    }\n    \n    /**\n     * Computes the probability density function (PDF) for this distribution.\n     * \n     * @param x the point at which the", "entropy": 0.1732177734375, "is_bug_line": false, "sus_score": 0.5340774059295654, "per_token_entropy": [0.50341796875, 0.0269775390625, 0.0279693603515625, 0.0099945068359375, 0.0011072158813476562, 0.00020265579223632812, 1.1444091796875e-05, 2.110004425048828e-05, 0.000423431396484375, 1.6808509826660156e-05, 0.0026397705078125, 7.176399230957031e-05, 0.00033783912658691406, 0.00966644287109375, 0.19482421875, 0.9248046875, 0.1639404296875, 0.0004105567932128906, 0.07598876953125, 1.0132789611816406e-05, 8.285045623779297e-05, 0.006168365478515625, 0.285400390625, 0.0009479522705078125, 1.1513671875, 0.0657958984375, 0.0298309326171875, 0.0003173351287841797, 1.328125, 0.0162353515625, 0.97802734375, 0.021575927734375, 0.01091766357421875, 0.447021484375, 0.0283660888671875, 0.06939697265625, 0.248291015625, 0.157470703125, 0.0081939697265625, 0.65380859375, 0.01241302490234375, 0.00035500526428222656, 0.80615234375, 1.7404556274414062e-05, 0.373779296875, 0.01013946533203125, 0.0004265308380126953, 0.0294647216796875, 0.321044921875, 0.00017344951629638672, 0.00010073184967041016, 0.00018906593322753906], "tokens": [275, 569, 284, 2522, 2064, 622, 5041, 9878, 4716, 26, 2627, 298, 27, 301, 291, 442, 6934, 32, 42270, 81, 36069, 45, 284, 320, 2170, 1022, 275, 319, 41932, 322, 16356, 19324, 667, 308, 14960, 27, 436, 458, 7433, 32, 275, 319, 5384, 319, 477, 753, 816, 322, 2260, 821, 1510, 322]}
{"line_number": 171, "line_type": "original", "code": "    }", "entropy": 4.15625, "is_bug_line": false, "sus_score": 0.5336518287658691, "per_token_entropy": [5.1171875, 3.19140625], "tokens": [264, 320]}
{"line_number": 171, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5336518287658691, "per_token_entropy": [], "tokens": []}
{"line_number": 174, "line_type": "original", "code": "     * Modify the denominator degrees of freedom.", "entropy": 2.556640625, "is_bug_line": false, "sus_score": 0.5336518287658691, "per_token_entropy": [3.40625, 8.296875, 6.0859375, 0.0229339599609375, 5.04296875, 0.07012939453125, 0.0009632110595703125, 0.00415802001953125, 0.08349609375], "tokens": [262, 319, 19927, 322, 39920, 18667, 432, 48503, 32]}
{"line_number": 174, "line_type": "generated", "code": "\n    \n    /**\n     * Override base class method to use the parameterization of this Gamma\n     * distribution.\n     * \n     * @return lower bound of the support for the distribution.\n     * @see #getSupportLowerBound()\n     */\n    public double getSupport", "entropy": 0.5107421875, "is_bug_line": false, "sus_score": 0.5336518287658691, "per_token_entropy": [1.548828125, 0.169677734375, 0.10784912109375, 0.0007958412170410156, 3.525390625, 2.279296875, 0.201416015625, 0.349365234375, 0.046966552734375, 2.052734375, 0.787109375, 2.501953125, 0.414306640625, 0.69580078125, 1.9609375, 1.2509765625, 0.2265625, 0.002216339111328125, 0.016357421875, 0.1650390625, 0.1419677734375, 0.39208984375, 0.60205078125, 0.0032863616943359375, 0.05804443359375, 0.46240234375, 0.76171875, 0.01511383056640625, 0.016387939453125, 0.5966796875, 0.09173583984375, 0.136474609375, 0.2130126953125, 0.446533203125, 0.325439453125, 0.06475830078125, 1.076171875, 0.015899658203125, 0.50830078125, 0.49462890625, 0.07586669921875, 0.876953125, 0.01047515869140625, 0.00027441978454589844, 0.03375244140625, 0.02374267578125, 0.0207061767578125, 0.02203369140625, 0.626953125, 0.01470947265625, 0.10577392578125, 0.006519317626953125], "tokens": [2170, 1022, 275, 319, 20682, 1695, 443, 1411, 372, 793, 322, 3395, 1649, 432, 458, 48264, 275, 319, 7433, 32, 275, 319, 5384, 319, 477, 601, 7216, 5085, 432, 322, 2193, 436, 322, 7433, 32, 275, 319, 477, 2970, 588, 371, 4399, 6724, 4716, 346, 275, 569, 284, 562, 2064, 622, 4399]}
{"line_number": 67, "line_type": "original", "code": "     * @throws MathException if the cumulative probability can not be", "entropy": 1.046875, "is_bug_line": false, "sus_score": 0.5314932465553284, "per_token_entropy": [5.89453125, 0.74560546875, 0.236572265625, 0.178955078125, 0.06353759765625, 0.00014340877532958984, 0.09381103515625, 0.06597900390625, 5.9609375, 0.00957489013671875, 0.1290283203125, 0.181640625, 0.0509033203125], "tokens": [262, 319, 477, 5117, 4175, 984, 415, 322, 41008, 16356, 883, 646, 526]}
{"line_number": 67, "line_type": "generated", "code": "\n     */\n    protected double getDomainLowerBound(double p) {\n        return 0;\n    }\n    \n    /**\n     * Access the domain value upper bound, based on <code>p</code>, used to\n     * bracket a CDF root. ", "entropy": 0.0985107421875, "is_bug_line": false, "sus_score": 0.5314932465553284, "per_token_entropy": [0.2509765625, 0.6484375, 0.0211029052734375, 0.252197265625, 0.003406524658203125, 0.0018339157104492188, 0.3291015625, 0.000888824462890625, 0.0020809173583984375, 0.00010037422180175781, 0.35791015625, 1.919269561767578e-05, 0.000194549560546875, 0.07562255859375, 0.09222412109375, 1.681640625, 0.31982421875, 0.01003265380859375, 0.37060546875, 0.03564453125, 0.00029087066650390625, 0.6279296875, 0.0016536712646484375, 0.006122589111328125, 6.198883056640625e-05, 0.00732421875, 0.00010180473327636719, 0.00046515464782714844, 0.00447845458984375, 0.0015735626220703125, 7.486343383789062e-05, 0.0003075599670410156, 1.0967254638671875e-05, 2.086162567138672e-05, 0.0001506805419921875, 0.00011539459228515625, 2.2649765014648438e-05, 3.504753112792969e-05, 2.8967857360839844e-05, 3.337860107421875e-06, 3.790855407714844e-05, 0.00012195110321044922, 0.00014007091522216797, 0.002666473388671875, 2.181529998779297e-05, 0.0001264810562133789, 2.2530555725097656e-05, 9.572505950927734e-05, 2.384185791015625e-07, 1.3232231140136719e-05, 4.3272972106933594e-05, 0.0130615234375], "tokens": [275, 569, 284, 2522, 2064, 622, 5041, 6724, 4716, 26, 2627, 298, 27, 301, 291, 442, 225, 34, 45, 284, 320, 2170, 1022, 275, 319, 8258, 322, 5880, 786, 8342, 5085, 30, 4122, 544, 333, 687, 48, 98, 377, 687, 2717, 1654, 372, 275, 319, 33828, 312, 390, 3698, 3051, 32, 225]}
{"line_number": 81, "line_type": "original", "code": "        }", "entropy": 4.6015625, "is_bug_line": false, "sus_score": 0.5314932465553284, "per_token_entropy": [4.1953125, 5.0078125], "tokens": [351, 320]}
{"line_number": 81, "line_type": "generated", "code": "\n    protected double getDomainUpperBound(double p) {\n        return Double.POSITIVE_INFINITY;\n    }", "entropy": 0.1021728515625, "is_bug_line": false, "sus_score": 0.5314932465553284, "per_token_entropy": [0.548828125, 0.087158203125, 0.0016927719116210938, 0.0008630752563476562, 7.343292236328125e-05, 3.230571746826172e-05, 0.0015001296997070312, 0.0002416372299194336, 0.0226593017578125, 0.00019240379333496094, 0.001422882080078125, 0.0284423828125, 0.2301025390625, 0.93701171875, 0.2294921875, 0.0003752708435058594, 0.048980712890625, 4.8279762268066406e-05, 0.0002129077911376953, 0.004940032958984375, 0.10107421875, 0.0023403167724609375], "tokens": [284, 2522, 2064, 622, 5041, 9878, 4716, 26, 2627, 298, 27, 301, 291, 442, 6934, 32, 42270, 81, 36069, 45, 284, 320]}
{"line_number": 61, "line_type": "original", "code": "     * <a href=\"http://mathworld.wolfram.com/F-Distribution.html\">", "entropy": 0.69970703125, "is_bug_line": false, "sus_score": 0.5295543670654297, "per_token_entropy": [7.55078125, 0.03631591796875, 7.11328125, 0.179931640625, 0.0305938720703125, 0.1578369140625, 0.0024509429931640625, 0.0007634162902832031, 0.68701171875, 0.0016851425170898438, 2.0265579223632812e-06, 0.000606536865234375, 8.630752563476562e-05, 7.164478302001953e-05, 0.0066375732421875, 7.62939453125e-06, 2.7418136596679688e-05, 0.11016845703125, 0.10498046875, 0.0970458984375, 0.0150146484375, 2.586841583251953e-05, 0.0030689239501953125], "tokens": [262, 319, 333, 83, 976, 347, 525, 555, 3812, 5860, 32, 105, 362, 43579, 32, 508, 33, 56, 31, 16218, 32, 916, 413]}
{"line_number": 61, "line_type": "generated", "code": "\n     * compute the regularized incomplete beta function. This method is used by\n     * {@link #inverseCumulativeProbability(double)} to find critical values.\n     *\n     * @param p the desired probability\n     * @return domain value lower bound, based", "entropy": 0.239501953125, "is_bug_line": false, "sus_score": 0.5295543670654297, "per_token_entropy": [0.198486328125, 9.322166442871094e-05, 0.201904296875, 1.458984375, 1.724609375, 0.0135650634765625, 1.1865234375, 0.04412841796875, 0.0066375732421875, 0.37109375, 0.5439453125, 0.6318359375, 0.1761474609375, 0.01580810546875, 0.89892578125, 0.003505706787109375, 1.2874603271484375e-05, 0.40576171875, 3.695487976074219e-05, 0.0031642913818359375, 0.006916046142578125, 0.0026493072509765625, 0.0001506805419921875, 0.0009355545043945312, 0.0007119178771972656, 0.00021445751190185547, 1.3564453125, 0.1968994140625, 0.1114501953125, 0.34814453125, 0.0206298828125, 0.00428009033203125, 0.059234619140625, 0.0005288124084472656, 0.36181640625, 0.0003819465637207031, 0.00811767578125, 0.0179443359375, 0.00014984607696533203, 0.005847930908203125, 0.295166015625, 0.0006260871887207031, 0.6962890625, 0.0009064674377441406, 0.0002682209014892578, 0.001361846923828125, 0.34130859375, 0.0015087127685546875, 0.021392822265625, 0.0005116462707519531, 0.10479736328125, 0.603515625], "tokens": [275, 319, 7596, 322, 10605, 1191, 26890, 11823, 667, 32, 1348, 1411, 438, 1654, 810, 275, 319, 3088, 1204, 588, 18139, 53, 10318, 35567, 26, 2627, 4370, 372, 2290, 18896, 2078, 32, 275, 319, 275, 319, 477, 753, 298, 322, 10848, 16356, 275, 319, 477, 601, 5880, 786, 7216, 5085, 30, 4122]}
{"line_number": 179, "line_type": "original", "code": "    public void setDenominatorDegreesOfFreedom(double degreesOfFreedom) {", "entropy": 0.7353515625, "is_bug_line": false, "sus_score": 0.5252404808998108, "per_token_entropy": [5.640625, 3.8125, 2.31640625, 0.041229248046875, 2.55078125, 0.000408172607421875, 0.00293731689453125, 0.00037407875061035156, 0.00037932395935058594, 4.649162292480469e-06, 1.7762184143066406e-05, 0.01074981689453125, 0.202392578125, 0.09161376953125, 0.0009303092956542969, 0.0004515647888183594, 1.5974044799804688e-05, 3.5762786865234375e-06, 0.004180908203125, 0.037689208984375], "tokens": [264, 562, 763, 739, 43484, 9693, 32709, 1419, 56, 18749, 418, 26, 2627, 18667, 1419, 56, 18749, 418, 27, 301]}
{"line_number": 179, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5252404808998108, "per_token_entropy": [], "tokens": []}
{"line_number": 128, "line_type": "original", "code": "     * @return domain value upper bound, i.e.", "entropy": 1.3857421875, "is_bug_line": false, "sus_score": 0.5140970349311829, "per_token_entropy": [3.486328125, 2.810546875, 0.8916015625, 3.04296875, 6.546875, 0.049713134765625, 1.056640625, 0.01432037353515625, 0.0811767578125, 0.0240936279296875, 0.002498626708984375, 0.00025081634521484375, 0.0134429931640625], "tokens": [262, 319, 477, 601, 5880, 786, 8342, 5085, 30, 595, 32, 87, 32]}
{"line_number": 128, "line_type": "generated", "code": "\n     */\n    public void setDenominatorDegreesOfFreedom(double degreesOfFreedom) {\n        if (degreesOfFreedom <= 0.0) {\n            throw new IllegalArgumentException(\n                \"degrees of freedom must be positive.\");\n       ", "entropy": 0.01082611083984375, "is_bug_line": false, "sus_score": 0.5140970349311829, "per_token_entropy": [0.236328125, 0.019775390625, 0.0079803466796875, 0.003017425537109375, 0.0005125999450683594, 0.0008549690246582031, 0.00014030933380126953, 1.633167266845703e-05, 0.00021696090698242188, 1.0132789611816406e-05, 0.00028896331787109375, 7.152557373046875e-07, -0.0, 0.0003638267517089844, 0.007503509521484375, 0.0003535747528076172, 3.933906555175781e-06, 1.7881393432617188e-06, 3.5762786865234375e-07, -0.0, 0.00238800048828125, 0.01168060302734375, 0.023284912109375, 0.005706787109375, 0.0014905929565429688, 0.0025348663330078125, 3.0994415283203125e-06, 3.0994415283203125e-06, 4.410743713378906e-06, 1.0728836059570312e-06, 0.0024089813232421875, 0.0012054443359375, 0.03411865234375, 0.01290130615234375, 0.00021445751190185547, 0.0037479400634765625, 0.00205230712890625, 0.0194244384765625, 0.0028972625732421875, 0.0018854141235351562, 0.004177093505859375, 0.01434326171875, 0.0158233642578125, 0.0009870529174804688, 0.004428863525390625, 0.00029921531677246094, 0.000118255615234375, 0.006389617919921875, 4.8041343688964844e-05, 0.00044155120849609375, 0.03485107421875, 0.0755615234375], "tokens": [275, 569, 284, 562, 763, 739, 43484, 9693, 32709, 1419, 56, 18749, 418, 26, 2627, 18667, 1419, 56, 18749, 418, 27, 301, 291, 415, 308, 32558, 1419, 56, 18749, 418, 2511, 225, 34, 32, 34, 27, 301, 324, 1422, 537, 12137, 26, 400, 313, 32558, 432, 48503, 2298, 526, 11557, 5368, 291]}
{"line_number": 180, "line_type": "original", "code": "        if (degreesOfFreedom <= 0.0) {", "entropy": 0.7119140625, "is_bug_line": false, "sus_score": 0.5092139840126038, "per_token_entropy": [5.2734375, 3.279296875, 0.07562255859375, 1.94140625, 0.0008745193481445312, 8.45193862915039e-05, 7.510185241699219e-06, 2.384185791015625e-07, 0.05963134765625, 0.0006237030029296875, 0.0066680908203125, 0.01206207275390625, 6.890296936035156e-05, 0.0014696121215820312, 0.030487060546875], "tokens": [351, 415, 308, 32558, 1419, 56, 18749, 418, 2511, 225, 34, 32, 34, 27, 301]}
{"line_number": 180, "line_type": "generated", "code": "\n\n    /**\n     * Modify the numerator mean.\n     * @param mean the new numerator mean.\n     */\n    public void setNumeratorMean(double mean) {\n        this.numeratorMean = mean;\n    }\n    \n    /**\n     * Access the", "entropy": 0.13427734375, "is_bug_line": false, "sus_score": 0.5092139840126038, "per_token_entropy": [2.056640625, 0.187744140625, 0.049591064453125, 0.0004436969757080078, 1.505859375, 0.0200347900390625, 1.36328125, 0.0039215087890625, 0.58154296875, 0.038055419921875, 0.0199432373046875, 0.00023889541625976562, 0.027008056640625, 0.0003917217254638672, 0.26416015625, 0.007602691650390625, 0.00765228271484375, 0.04193115234375, 0.00028061866760253906, 0.0107879638671875, 0.0214080810546875, 0.0051727294921875, 0.43994140625, 0.0110626220703125, 0.00957489013671875, 0.0017719268798828125, 0.0006589889526367188, 0.005397796630859375, 0.0006742477416992188, 0.0014133453369140625, 0.0004425048828125, 0.006961822509765625, 0.0017080307006835938, 0.0016889572143554688, 0.007328033447265625, 0.06103515625, 0.04205322265625, 0.0002014636993408203, 0.0201873779296875, 0.0002617835998535156, 0.0162353515625, 0.0026874542236328125, 0.0008072853088378906, 0.0003974437713623047, 0.0240325927734375, 0.00011873245239257812, 0.0863037109375, 0.0006799697875976562, 0.0012073516845703125, 1.52587890625e-05, 0.022064208984375, 0.00021445751190185547], "tokens": [446, 1022, 275, 319, 19927, 322, 1929, 11290, 5651, 32, 275, 319, 477, 753, 5651, 322, 537, 1929, 11290, 5651, 32, 275, 569, 284, 562, 763, 739, 2567, 11290, 17081, 26, 2627, 5651, 27, 301, 291, 458, 32, 1516, 11290, 17081, 280, 5651, 45, 284, 320, 2170, 1022, 275, 319, 8258, 322]}
{"line_number": 103, "line_type": "original", "code": "        if (p == 1) {", "entropy": 1.6865234375, "is_bug_line": false, "sus_score": 0.5055422186851501, "per_token_entropy": [3.521484375, 2.91796875, 0.17919921875, 4.62890625, 1.0087890625, 0.08319091796875, 2.185546875, 0.470458984375, 0.1822509765625], "tokens": [351, 415, 308, 98, 610, 225, 35, 27, 301]}
{"line_number": 103, "line_type": "generated", "code": "\n     * @param n the new value for the numerator degrees of freedom.\n     * @deprecated in 3.1.  Use {@link #setParameters(double,double)}\n     */\n    public void setNumeratorDegreesOfFreedom(", "entropy": 0.325927734375, "is_bug_line": false, "sus_score": 0.5055422186851501, "per_token_entropy": [0.91259765625, 0.50341796875, 0.60498046875, 0.023834228515625, 0.44384765625, 0.587890625, 0.12457275390625, 0.79345703125, 0.6240234375, 0.214599609375, 0.196044921875, 0.0012254714965820312, 0.01204681396484375, 0.0008807182312011719, 0.01126861572265625, 0.83544921875, 0.2080078125, 0.239990234375, 0.0411376953125, 0.283447265625, 0.84375, 0.21826171875, 0.86328125, 0.00029087066650390625, 0.253173828125, 1.2109375, 0.9287109375, 0.423828125, 0.77197265625, 0.0004589557647705078, 0.1624755859375, 0.81982421875, 1.2783203125, 0.050537109375, 0.0254669189453125, 0.039215087890625, 0.43994140625, 0.1387939453125, 0.76220703125, 0.123779296875, 0.059661865234375, 0.81982421875, 0.0258026123046875, 0.005115509033203125, 0.00609588623046875, 0.001979827880859375, 0.0092926025390625, 0.00464630126953125, 0.00013256072998046875, 0.0003540515899658203, 8.463859558105469e-06, 0.0028705596923828125], "tokens": [275, 319, 477, 753, 310, 322, 537, 786, 436, 322, 1929, 11290, 18667, 432, 48503, 32, 275, 319, 477, 15040, 328, 225, 37, 32, 35, 32, 225, 4417, 3088, 1204, 588, 470, 3675, 26, 2627, 30, 2627, 4370, 275, 569, 284, 562, 763, 739, 2567, 11290, 32709, 1419, 56, 18749, 418, 26]}
{"line_number": 148, "line_type": "original", "code": "        return ret;", "entropy": 2.25, "is_bug_line": true, "sus_score": 0.5054165124893188, "per_token_entropy": [4.921875, 3.66796875, 0.3857421875, 0.0229949951171875], "tokens": [351, 442, 2152, 45]}
{"line_number": 148, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": true, "sus_score": 0.5054165124893188, "per_token_entropy": [], "tokens": []}
{"line_number": 100, "line_type": "original", "code": "        if (p == 0) {", "entropy": 1.158203125, "is_bug_line": false, "sus_score": 0.5041475296020508, "per_token_entropy": [4.3828125, 3.2578125, 0.10821533203125, 1.037109375, 0.454833984375, 0.005153656005859375, 1.013671875, 0.138916015625, 0.0254669189453125], "tokens": [351, 415, 308, 98, 610, 225, 34, 27, 301]}
{"line_number": 100, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5041475296020508, "per_token_entropy": [], "tokens": []}
{"line_number": 158, "line_type": "original", "code": "        if (degreesOfFreedom <= 0.0) {", "entropy": 0.7431640625, "is_bug_line": false, "sus_score": 0.5020237565040588, "per_token_entropy": [4.734375, 2.888671875, 0.123291015625, 3.11328125, 0.00241851806640625, 0.00020647048950195312, 2.8371810913085938e-05, 1.430511474609375e-06, 0.1162109375, 0.002105712890625, 0.025787353515625, 0.0614013671875, 0.0002765655517578125, 0.004451751708984375, 0.0736083984375], "tokens": [351, 415, 308, 32558, 1419, 56, 18749, 418, 2511, 225, 34, 32, 34, 27, 301]}
{"line_number": 158, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5020237565040588, "per_token_entropy": [], "tokens": []}
{"line_number": 132, "line_type": "original", "code": "        return Double.MAX_VALUE;", "entropy": 2.244140625, "is_bug_line": false, "sus_score": 0.49807941913604736, "per_token_entropy": [3.474609375, 6.88671875, 5.05859375, 0.0030841827392578125, 2.46875, 0.0006270408630371094, 0.0016584396362304688, 0.051910400390625], "tokens": [351, 442, 6934, 32, 3459, 81, 5975, 45]}
{"line_number": 132, "line_type": "generated", "code": "\n        }\n        this.denominatorDegreesOfFreedom = degreesOfFreedom;\n    }\n    \n    /**\n     * Access the denominator degrees of freedom.\n     * @return the denominator degrees of freedom.\n     */\n    public double getDenominatorDegreesOf", "entropy": 0.04754638671875, "is_bug_line": false, "sus_score": 0.49807941913604736, "per_token_entropy": [1.505859375, 0.6083984375, 0.06298828125, 0.0157928466796875, 0.0014123916625976562, 0.01727294921875, 0.000133514404296875, 0.0004620552062988281, 0.00012028217315673828, 0.00021457672119140625, 2.1457672119140625e-06, 3.5762786865234375e-07, 0.0009927749633789062, 0.003078460693359375, 3.1113624572753906e-05, 6.318092346191406e-06, 1.811981201171875e-05, 3.5762786865234375e-07, 0.0004703998565673828, 0.09002685546875, 0.000446319580078125, 0.081787109375, 0.00133514404296875, 0.0022640228271484375, 0.00022649765014648438, 0.0089263916015625, 0.0008006095886230469, 0.0259857177734375, 0.0014009475708007812, 0.0001798868179321289, 0.00075531005859375, 0.0014791488647460938, 0.002033233642578125, 3.0517578125e-05, 0.004329681396484375, 0.0003864765167236328, 0.002773284912109375, 0.017822265625, 0.0007982254028320312, 0.00017309188842773438, 0.000244140625, 0.003292083740234375, 0.0011739730834960938, 0.0005755424499511719, 0.004398345947265625, 0.0012083053588867188, 0.0003666877746582031, 0.00040340423583984375, 3.731250762939453e-05, 5.9604644775390625e-06, 3.063678741455078e-05, 1.621246337890625e-05], "tokens": [291, 320, 291, 458, 32, 29805, 9693, 32709, 1419, 56, 18749, 418, 280, 18667, 1419, 56, 18749, 418, 45, 284, 320, 2170, 1022, 275, 319, 8258, 322, 39920, 18667, 432, 48503, 32, 275, 319, 477, 601, 322, 39920, 18667, 432, 48503, 32, 275, 569, 284, 562, 2064, 622, 43484, 9693, 32709, 1419]}
{"line_number": 72, "line_type": "original", "code": "        if (x <= 0.0) {", "entropy": 1.12890625, "is_bug_line": false, "sus_score": 0.49087896943092346, "per_token_entropy": [4.97265625, 2.857421875, 0.163818359375, 2.0390625, 1.1630859375, 0.0367431640625, 0.0242156982421875, 1.0166015625, 0.01453399658203125, 0.06402587890625, 0.06268310546875], "tokens": [351, 415, 308, 106, 2511, 225, 34, 32, 34, 27, 301]}
{"line_number": 72, "line_type": "generated", "code": "\n    /**\n     * Access the domain value upper bound, based on <code>p</code>, used to\n     * bracket a CDF root.  This method is used by\n     * {@link #inverseCumulativeProbability(double)} to find critical values", "entropy": 0.0184173583984375, "is_bug_line": false, "sus_score": 0.49087896943092346, "per_token_entropy": [0.74462890625, 0.08953857421875, 0.0584716796875, 0.00015473365783691406, 0.040771484375, 0.0006747245788574219, 0.0035343170166015625, 0.00209808349609375, 0.003101348876953125, 0.00010788440704345703, 0.00015413761138916016, 9.775161743164062e-06, 7.867813110351562e-06, 0.00011289119720458984, 1.990795135498047e-05, 4.4226646423339844e-05, 5.412101745605469e-05, 1.33514404296875e-05, 7.748603820800781e-06, 3.3855438232421875e-05, 2.4557113647460938e-05, 2.0623207092285156e-05, 0.0019044876098632812, 1.049041748046875e-05, 0.0001876354217529297, 1.1086463928222656e-05, 7.736682891845703e-05, 1.1920928955078125e-07, 3.337860107421875e-06, 8.58306884765625e-06, 0.002986907958984375, 0.0002301931381225586, 6.42538070678711e-05, 1.8715858459472656e-05, 5.125999450683594e-05, 4.172325134277344e-05, 0.0029735565185546875, 0.00012540817260742188, 0.00034999847412109375, 2.384185791015625e-07, 0.0002758502960205078, 0.00012314319610595703, 2.1576881408691406e-05, 2.8014183044433594e-05, 2.467632293701172e-05, 2.872943878173828e-05, 0.00023758411407470703, 0.0020008087158203125, 5.161762237548828e-05, 3.814697265625e-06, 0.00101470947265625, 0.0009322166442871094], "tokens": [284, 1022, 275, 319, 8258, 322, 5880, 786, 8342, 5085, 30, 4122, 544, 333, 687, 48, 98, 377, 687, 2717, 1654, 372, 275, 319, 33828, 312, 390, 3698, 3051, 32, 225, 1348, 1411, 438, 1654, 810, 275, 319, 3088, 1204, 588, 18139, 53, 10318, 35567, 26, 2627, 4370, 372, 2290, 18896, 2078]}
{"line_number": 119, "line_type": "original", "code": "        return 0.0;", "entropy": 1.5673828125, "is_bug_line": false, "sus_score": 0.48772725462913513, "per_token_entropy": [5.5546875, 1.5029296875, 2.2890625, 0.7734375, 0.6826171875, 0.10833740234375, 0.05877685546875], "tokens": [351, 442, 225, 34, 32, 34, 45]}
{"line_number": 119, "line_type": "generated", "code": "\n    \n    /**\n     * Modify the denominator degrees of freedom.\n     * @param degreesOfFreedom the new denominator degrees of freedom.\n     * @throws IllegalArgumentException if <code>degreesOfFreedom</code> is not\n     *         positive.\n    ", "entropy": 0.024688720703125, "is_bug_line": false, "sus_score": 0.48772725462913513, "per_token_entropy": [0.9443359375, 0.047210693359375, 0.01245880126953125, 0.000141143798828125, 0.03271484375, 0.0002880096435546875, 0.05706787109375, 0.003940582275390625, 0.00037550926208496094, 0.00659942626953125, 0.0018148422241210938, 0.006015777587890625, 3.1828880310058594e-05, 0.0104217529296875, 0.0001399517059326172, 0.004207611083984375, 0.00018906593322753906, 0.00010347366333007812, 1.1920928955078125e-05, 3.6954879760742188e-06, 0.002288818359375, 0.001209259033203125, 0.0266876220703125, 0.0010747909545898438, 0.0005898475646972656, 0.0005183219909667969, 0.00269317626953125, 0.001514434814453125, 0.0036067962646484375, 0.0004448890686035156, 0.0008139610290527344, 0.001049041748046875, 0.0014495849609375, 0.004283905029296875, 0.0018014907836914062, 0.00018513202667236328, 0.00395965576171875, 0.0003948211669921875, 0.0001437664031982422, 1.9431114196777344e-05, 7.152557373046875e-07, 0.003543853759765625, 4.57763671875e-05, 0.0004515647888183594, 0.0014009475708007812, 0.063232421875, 0.0045013427734375, 4.2438507080078125e-05, 0.00795745849609375, 0.0037994384765625, 0.01316070556640625, 0.0030841827392578125], "tokens": [2170, 1022, 275, 319, 19927, 322, 39920, 18667, 432, 48503, 32, 275, 319, 477, 753, 18667, 1419, 56, 18749, 418, 322, 537, 39920, 18667, 432, 48503, 32, 275, 319, 477, 5117, 12137, 415, 333, 687, 48, 32558, 1419, 56, 18749, 418, 377, 687, 48, 438, 646, 275, 319, 263, 11557, 32, 275]}
{"line_number": 76, "line_type": "original", "code": "            double m = getDenominatorDegreesOfFreedom();", "entropy": 0.95361328125, "is_bug_line": false, "sus_score": 0.4694070518016815, "per_token_entropy": [6.61328125, 4.140625, 1.2578125, 0.07373046875, 0.251953125, 0.0247344970703125, 0.00040221214294433594, 0.0025920867919921875, 0.0006937980651855469, 0.0007739067077636719, 0.0008025169372558594, 3.6954879760742188e-06, 0.0298919677734375], "tokens": [1468, 2064, 345, 280, 622, 43484, 9693, 32709, 1419, 56, 18749, 418, 473]}
{"line_number": 76, "line_type": "generated", "code": "\n     * @param p the desired probability for the critical value\n     * @return domain value upper bound, i.e.\n     *         P(X &lt; <i>upper bound</i>) &gt; <code>p</code>", "entropy": 0.03167724609375, "is_bug_line": false, "sus_score": 0.4694070518016815, "per_token_entropy": [0.3984375, 0.0038356781005859375, 0.96435546875, 0.00666046142578125, 0.0005002021789550781, 0.007389068603515625, 2.002716064453125e-05, 0.00012600421905517578, 0.0004131793975830078, 2.0265579223632812e-06, 9.298324584960938e-05, 0.0003829002380371094, 0.0523681640625, 0.0006251335144042969, 0.0016298294067382812, 0.0035800933837890625, 0.0011701583862304688, 0.00022864341735839844, 0.027587890625, 6.604194641113281e-05, 7.987022399902344e-06, 0.0023822784423828125, 0.0009083747863769531, 7.510185241699219e-06, 0.0005526542663574219, 0.067626953125, 6.341934204101562e-05, 0.0264739990234375, 0.00020170211791992188, 6.842613220214844e-05, 7.677078247070312e-05, 0.0001436471939086914, 9.417533874511719e-05, 0.0008268356323242188, 0.00018143653869628906, 0.002994537353515625, 8.344650268554688e-07, 0.00262451171875, 5.0067901611328125e-05, 2.7418136596679688e-06, 0.0001589059829711914, 0.00013244152069091797, 6.330013275146484e-05, 0.0540771484375, 0.00531768798828125, 0.00044226646423339844, 2.0742416381835938e-05, 5.125999450683594e-06, 2.5153160095214844e-05, 0.0003037452697753906, 0.00033664703369140625, 0.0106048583984375], "tokens": [275, 319, 477, 753, 298, 322, 10848, 16356, 436, 322, 18896, 786, 275, 319, 477, 601, 5880, 786, 8342, 5085, 30, 595, 32, 87, 32, 275, 319, 263, 447, 26, 74, 549, 2159, 45, 333, 91, 48, 7607, 5085, 377, 91, 5103, 549, 1837, 45, 333, 687, 48, 98, 377, 687, 48]}
{"line_number": 78, "line_type": "original", "code": "            ret = Beta.regularizedBeta((n * x) / (m + n * x),", "entropy": 1.642578125, "is_bug_line": false, "sus_score": 0.46934524178504944, "per_token_entropy": [4.109375, 6.84765625, 0.1888427734375, 8.03125, 0.55322265625, 0.88720703125, 0.0082244873046875, 0.048583984375, 4.65625, 0.65234375, 3.05859375, 3.689453125, 0.3486328125, 0.016387939453125, 0.145751953125, 0.36669921875, 0.33154296875, 0.41357421875, 0.037689208984375, 0.0103302001953125, 0.1064453125], "tokens": [1468, 2152, 280, 31511, 32, 16343, 1191, 27820, 1162, 96, 319, 816, 27, 517, 308, 95, 474, 310, 319, 816, 471]}
{"line_number": 78, "line_type": "generated", "code": "\n        return 0.0;\n    }\n\n    /**\n     * Access the numerator degrees of freedom.\n     * \n     * @return numerator degrees of freedom.\n     */\n    public double getNumeratorDegreesOfFreedom() {\n        return numeratorDegrees", "entropy": 0.2239990234375, "is_bug_line": false, "sus_score": 0.46934524178504944, "per_token_entropy": [2.05078125, 0.5732421875, 1.4755859375, 0.72705078125, 0.0682373046875, 0.266357421875, 0.0161285400390625, 0.326904296875, 0.01480865478515625, 0.77294921875, 0.057098388671875, 0.028594970703125, 0.000408172607421875, 0.91650390625, 0.402587890625, 0.8271484375, 0.0008797645568847656, 0.01531219482421875, 0.0002923011779785156, 0.0008974075317382812, 0.1214599609375, 0.051055908203125, 0.0007815361022949219, 0.74658203125, 0.00020956993103027344, 0.0017385482788085938, 0.001148223876953125, 1.4990234375, 0.00081634521484375, 0.029052734375, 0.0003333091735839844, 0.00737762451171875, 0.168212890625, 0.1722412109375, 0.057586669921875, 0.01263427734375, 0.0176849365234375, 0.0025196075439453125, 8.940696716308594e-06, 2.0503997802734375e-05, 0.00020229816436767578, 1.1920928955078125e-05, 1.1444091796875e-05, 1.5497207641601562e-06, 7.152557373046875e-07, 0.0032329559326171875, 0.003917694091796875, 0.022674560546875, 0.00027942657470703125, 0.18603515625, 3.4570693969726562e-06, 3.743171691894531e-05], "tokens": [291, 442, 225, 34, 32, 34, 45, 284, 320, 446, 1022, 275, 319, 8258, 322, 1929, 11290, 18667, 432, 48503, 32, 275, 319, 5384, 319, 477, 601, 1929, 11290, 18667, 432, 48503, 32, 275, 569, 284, 562, 2064, 44929, 11290, 32709, 1419, 56, 18749, 418, 346, 301, 291, 442, 1929, 11290, 32709]}
{"line_number": 200, "line_type": "original", "code": "", "entropy": 0.335205078125, "is_bug_line": false, "sus_score": 0.45845186710357666, "per_token_entropy": [0.335205078125], "tokens": [203]}
{"line_number": 200, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.45845186710357666, "per_token_entropy": [], "tokens": []}
