{"line_number": 363, "line_type": "original", "code": "        while (iter.hasNext()) {", "entropy": 1.484375, "is_bug_line": true, "sus_score": 0.48825740814208984, "per_token_entropy": [4.93359375, 5.58984375, 0.366943359375, 0.369873046875, 0.385986328125, 0.05841064453125, 0.08526611328125, 0.08685302734375], "tokens": [351, 2218, 308, 1731, 32, 16421, 1157, 301]}
{"line_number": 363, "line_type": "generated", "code": "\n        return Math.sqrt(v.dotProduct(v) - 2 * dotProduct(v) + 1);\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public double getL1Distance(RealVector v) {\n        check", "entropy": 0.2012939453125, "is_bug_line": true, "sus_score": 0.48825740814208984, "per_token_entropy": [0.23876953125, 1.5390625, 0.55712890625, 0.275146484375, 0.038848876953125, 0.063720703125, 1.7509765625, 0.1768798828125, 0.32177734375, 2.86102294921875e-05, 0.0135498046875, 0.07440185546875, 0.44677734375, 0.055389404296875, 0.031494140625, 0.0002474784851074219, 0.045074462890625, 0.047607421875, 0.0001537799835205078, 0.0008683204650878906, 0.0012044906616210938, 0.251220703125, 0.017059326171875, 1.2861328125, 0.022735595703125, 0.08831787109375, 0.283203125, 0.01200103759765625, 0.1197509765625, 0.0258636474609375, 0.40673828125, 0.00013637542724609375, 0.0003714561462402344, 0.0024814605712890625, 0.010955810546875, 0.009765625, 0.0003266334533691406, 0.0029315948486328125, 0.0085296630859375, 0.255126953125, 0.01373291015625, 0.59716796875, 0.00269317626953125, 0.475341796875, 5.3763389587402344e-05, 0.135986328125, 1.049041748046875e-05, 0.017974853515625, 0.0018749237060546875, 0.004177093505859375, 0.12054443359375, 0.619140625], "tokens": [291, 442, 4175, 32, 8663, 26, 104, 32, 4260, 3409, 26, 104, 27, 429, 225, 36, 319, 8057, 3409, 26, 104, 27, 474, 225, 35, 293, 284, 320, 446, 1022, 3088, 18446, 111, 569, 284, 477, 1788, 284, 562, 2064, 622, 62, 35, 8457, 26, 6877, 2863, 354, 27, 301, 291, 1505]}
{"line_number": 361, "line_type": "original", "code": "        OpenMapRealVector res = new OpenMapRealVector(this);", "entropy": 0.9306640625, "is_bug_line": false, "sus_score": 0.4880000352859497, "per_token_entropy": [4.5234375, 3.173828125, 0.220703125, 0.011993408203125, 0.0010814666748046875, 4.83203125, 0.033172607421875, 0.43359375, 0.00390625, 0.0009560585021972656, 0.0004439353942871094, 0.0012073516845703125, 0.0220489501953125, 0.54052734375, 0.158447265625], "tokens": [351, 3927, 1208, 6877, 2863, 736, 280, 537, 3927, 1208, 6877, 2863, 26, 578, 293]}
{"line_number": 361, "line_type": "generated", "code": "\n     */\n    public double getL1Distance(OpenMapRealVector v) {\n        checkVectorDimensions(v.getDimension());\n        double sum = 0;\n        Iterator iter = entries.iterator();\n        while (iter.hasNext()) {\n            iter", "entropy": 0.0986328125, "is_bug_line": false, "sus_score": 0.4880000352859497, "per_token_entropy": [0.302001953125, 0.08587646484375, 0.03369140625, 0.07281494140625, 0.01271820068359375, 0.07647705078125, 0.40869140625, 0.00839996337890625, 0.00909423828125, 0.0010366439819335938, 0.041290283203125, 0.000560760498046875, 6.890296936035156e-05, 9.5367431640625e-07, 0.00016701221466064453, 0.0032176971435546875, 0.0156707763671875, 0.07659912109375, 0.1658935546875, 0.0011463165283203125, 0.0006575584411621094, 0.0012903213500976562, 0.0019178390502929688, 0.0038604736328125, 0.0037384033203125, 2.276897430419922e-05, 0.0012559890747070312, 0.1204833984375, 0.77490234375, 0.716796875, 0.013397216796875, 0.0028400421142578125, 0.00033736228942871094, 0.346923828125, 0.048492431640625, 0.68408203125, 0.08673095703125, 0.11749267578125, 0.2064208984375, 0.0002371072769165039, 0.0184173583984375, 0.0013799667358398438, 0.01552581787109375, 0.255859375, 0.33984375, 0.0007967948913574219, 0.00011181831359863281, 0.0004794597625732422, 0.0022296905517578125, 0.00156402587890625, 0.0338134765625, 0.01293182373046875], "tokens": [275, 569, 284, 562, 2064, 622, 62, 35, 8457, 26, 2961, 1208, 6877, 2863, 354, 27, 301, 291, 1505, 2863, 16485, 26, 104, 32, 371, 9883, 1035, 291, 2064, 3632, 280, 225, 34, 45, 291, 14743, 3850, 280, 8036, 32, 5162, 473, 291, 2218, 308, 1731, 32, 16421, 1157, 301, 324, 3850]}
{"line_number": 362, "line_type": "original", "code": "        Iterator iter = entries.iterator();", "entropy": 1.421875, "is_bug_line": false, "sus_score": 0.4880000352859497, "per_token_entropy": [5.75, 4.60546875, 0.276611328125, 0.140869140625, 0.580078125, 0.0022945404052734375, 0.01238250732421875, 0.007801055908203125], "tokens": [351, 14743, 3850, 280, 8036, 32, 5162, 473]}
{"line_number": 362, "line_type": "generated", "code": "\n    public double getL1Distance(OpenMapRealVector v) {\n        checkVectorDimensions(v.getDimension());\n        double sum = 0;\n        Iterator iter = entries.iterator();\n        while (iter.hasNext()) {\n            iter.advance", "entropy": 0.09771728515625, "is_bug_line": false, "sus_score": 0.4880000352859497, "per_token_entropy": [0.133544921875, 0.109375, 0.01456451416015625, 0.0555419921875, 0.475341796875, 0.00754547119140625, 0.0113525390625, 0.0015106201171875, 0.06591796875, 0.0009431838989257812, 0.00011479854583740234, 2.384185791015625e-06, 0.0002503395080566406, 0.003620147705078125, 0.0364990234375, 0.1051025390625, 0.2122802734375, 0.0014028549194335938, 0.0007295608520507812, 0.0019044876098632812, 0.0014944076538085938, 0.004138946533203125, 0.006214141845703125, 4.9948692321777344e-05, 0.00156402587890625, 0.1251220703125, 0.69140625, 0.7265625, 0.01335906982421875, 0.0029449462890625, 0.0002982616424560547, 0.460693359375, 0.0958251953125, 0.64111328125, 0.09912109375, 0.1180419921875, 0.2352294921875, 0.0004107952117919922, 0.0206146240234375, 0.0019016265869140625, 0.0305633544921875, 0.23876953125, 0.289306640625, 0.0008025169372558594, 0.0001341104507446289, 0.0006785392761230469, 0.0027618408203125, 0.0022602081298828125, 0.0212554931640625, 0.0120086669921875, 6.0439109802246094e-05, 0.00027680397033691406], "tokens": [284, 562, 2064, 622, 62, 35, 8457, 26, 2961, 1208, 6877, 2863, 354, 27, 301, 291, 1505, 2863, 16485, 26, 104, 32, 371, 9883, 1035, 291, 2064, 3632, 280, 225, 34, 45, 291, 14743, 3850, 280, 8036, 32, 5162, 473, 291, 2218, 308, 1731, 32, 16421, 1157, 301, 324, 3850, 32, 22545]}
{"line_number": 364, "line_type": "original", "code": "            iter.advance();", "entropy": 1.986328125, "is_bug_line": false, "sus_score": 0.4880000352859497, "per_token_entropy": [6.83984375, 2.73828125, 0.1474609375, 0.1551513671875, 0.04656982421875], "tokens": [1468, 3850, 32, 22545, 473]}
{"line_number": 364, "line_type": "generated", "code": "\n        double d = 0;\n        while (iter.hasNext()) {\n            iter.advance();\n            double delta = v.getEntry(iter.key()) - iter.value();\n            d += delta * delta;\n        }\n        return Math.sqrt(", "entropy": 0.130615234375, "is_bug_line": false, "sus_score": 0.4880000352859497, "per_token_entropy": [0.09735107421875, 0.31640625, 1.3642578125, 0.10565185546875, 0.00933074951171875, 0.00029349327087402344, 0.35302734375, 0.04425048828125, 0.1427001953125, 0.57666015625, 0.0029430389404296875, 0.0003383159637451172, 0.002758026123046875, 0.00742340087890625, 0.0187225341796875, 0.11492919921875, 0.021942138671875, 0.00015866756439208984, 0.00107574462890625, 0.0020999908447265625, 0.09674072265625, 0.892578125, 0.79345703125, 0.01035308837890625, 0.9287109375, 0.0004036426544189453, 0.11224365234375, 0.0023784637451171875, 0.0022830963134765625, 0.00026988983154296875, 0.0087432861328125, 0.01204681396484375, 0.0068817138671875, 0.0040435791015625, 7.486343383789062e-05, 0.00048160552978515625, 0.0013065338134765625, 0.07843017578125, 0.056610107421875, 0.01219940185546875, 0.0231781005859375, 0.0118560791015625, 0.0004248619079589844, 0.0007119178771972656, 0.0205841064453125, 0.0012760162353515625, 0.050628662109375, 0.06732177734375, 0.411376953125, 0.00351715087890625, 0.0005807876586914062, 0.0008444786071777344], "tokens": [291, 2064, 343, 280, 225, 34, 45, 291, 2218, 308, 1731, 32, 16421, 1157, 301, 324, 3850, 32, 22545, 473, 324, 2064, 7715, 280, 354, 32, 48895, 26, 1731, 32, 678, 1157, 429, 3850, 32, 853, 473, 324, 343, 1454, 7715, 319, 7715, 45, 291, 320, 291, 442, 4175, 32, 8663, 26]}
{"line_number": 365, "line_type": "original", "code": "            res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));", "entropy": 1.1103515625, "is_bug_line": false, "sus_score": 0.48111414909362793, "per_token_entropy": [5.58984375, 1.1923828125, 9.2578125, 3.0625, 0.1912841796875, 0.034088134765625, 0.8154296875, 0.00887298583984375, 0.032379150390625, 0.066650390625, 0.40283203125, 0.00021159648895263672, 0.025909423828125, 0.52685546875, 2.12109375, 1.8671875, 0.0291290283203125, 0.1905517578125, 0.0016775131225585938, 0.0170745849609375, 0.0002067089080810547, 0.0017375946044921875, 0.0947265625], "tokens": [1468, 736, 32, 470, 2711, 26, 1731, 32, 678, 1026, 3850, 32, 853, 346, 319, 354, 32, 48895, 26, 1731, 32, 678, 5073]}
{"line_number": 365, "line_type": "generated", "code": "\n        return FastMath.sqrt(res);\n    }\n\n    /**\n     * Optimized method to compute distance.\n     *\n     * @param v Vector to compute distance to.\n     * @return the distance from {@code this} and {@code v}.\n    ", "entropy": 0.0775146484375, "is_bug_line": false, "sus_score": 0.48111414909362793, "per_token_entropy": [0.191162109375, 0.419677734375, 1.6357421875, 0.0004551410675048828, 6.854534149169922e-05, 0.00446319580078125, 0.0081329345703125, 0.033233642578125, 0.0187225341796875, 0.0251617431640625, 0.0005769729614257812, 0.0609130859375, 0.0235443115234375, 0.736328125, 9.322166442871094e-05, 0.491455078125, 0.0004911422729492188, 0.0031604766845703125, 0.00476837158203125, 0.0197906494140625, 0.1910400390625, 0.0226287841796875, 0.007904052734375, 0.00021147727966308594, 0.02740478515625, 0.00010573863983154297, 0.003604888916015625, 0.0014505386352539062, 0.0036907196044921875, 0.00722503662109375, 0.0003325939178466797, 0.0010662078857421875, 0.00238800048828125, 0.0013132095336914062, 0.002857208251953125, 0.0007886886596679688, 4.601478576660156e-05, 0.0008935928344726562, 0.0230712890625, 0.005645751953125, 0.0030765533447265625, 0.00237274169921875, 0.0100860595703125, 0.00012671947479248047, 0.0005750656127929688, 0.0001647472381591797, 0.0247955322265625, 0.0008420944213867188, 2.2172927856445312e-05, 0.0005502700805664062, 0.003726959228515625, 0.0013742446899414062], "tokens": [291, 442, 15938, 5717, 32, 8663, 26, 575, 293, 284, 320, 446, 1022, 275, 319, 22994, 1191, 1411, 372, 7596, 7291, 32, 275, 319, 275, 319, 477, 753, 354, 4107, 372, 7596, 7291, 372, 32, 275, 319, 477, 601, 322, 7291, 645, 3088, 687, 458, 111, 461, 3088, 687, 354, 4009, 275]}
{"line_number": 360, "line_type": "original", "code": "        checkVectorDimensions(v.getDimension());", "entropy": 0.875, "is_bug_line": false, "sus_score": 0.4810289442539215, "per_token_entropy": [3.802734375, 4.90234375, 0.0092315673828125, 0.00167083740234375, 0.0017404556274414062, 0.0023250579833984375, 0.0218353271484375, 0.0011453628540039062, 0.00029206275939941406, 0.00962066650390625], "tokens": [351, 1505, 2863, 16485, 26, 104, 32, 371, 9883, 1035]}
{"line_number": 360, "line_type": "generated", "code": "\n     */\n    public double getL1Distance(OpenMapRealVector v) {\n        checkVectorDimensions(v.getDimension());\n        double sum = 0d;\n        int end = Math.min(virtualSize, v.getDimension());\n       ", "entropy": 0.218505859375, "is_bug_line": false, "sus_score": 0.4810289442539215, "per_token_entropy": [0.61328125, 0.1329345703125, 0.0162506103515625, 0.1051025390625, 0.00988006591796875, 0.07965087890625, 0.41943359375, 0.008392333984375, 0.0091094970703125, 0.0010366439819335938, 0.04034423828125, 0.0005087852478027344, 5.614757537841797e-05, 8.344650268554688e-07, 0.00015115737915039062, 0.003086090087890625, 0.01995849609375, 0.09075927734375, 0.2113037109375, 0.0016260147094726562, 0.0013151168823242188, 0.002716064453125, 0.0020294189453125, 0.007472991943359375, 0.0046234130859375, 2.2530555725097656e-05, 0.0015172958374023438, 0.07470703125, 0.8203125, 0.763671875, 0.0130462646484375, 0.002918243408203125, 0.0003485679626464844, 1.3310546875, 0.006710052490234375, 0.03228759765625, 2.150390625, 1.4560546875, 0.065185546875, 0.58203125, 0.0009560585021972656, 0.058563232421875, 0.0004832744598388672, 1.173828125, 0.0005407333374023438, 0.0033893585205078125, 0.0745849609375, 7.653236389160156e-05, 0.87255859375, 0.0023593902587890625, 0.05072021484375, 0.0433349609375], "tokens": [275, 569, 284, 562, 2064, 622, 62, 35, 8457, 26, 2961, 1208, 6877, 2863, 354, 27, 301, 291, 1505, 2863, 16485, 26, 104, 32, 371, 9883, 1035, 291, 2064, 3632, 280, 225, 34, 86, 45, 291, 629, 943, 280, 4175, 32, 887, 26, 5002, 1250, 30, 354, 32, 371, 9883, 1035, 291]}
{"line_number": 374, "line_type": "original", "code": "        return res;", "entropy": 3.6015625, "is_bug_line": true, "sus_score": 0.4796803295612335, "per_token_entropy": [2.75, 8.5625, 3.078125, 0.0176544189453125], "tokens": [351, 442, 736, 45]}
{"line_number": 374, "line_type": "generated", "code": "\n        }\n        return Math.sqrt(res);\n    }\n\n    /**\n     * Optimized method to compute distance.\n     *\n     * @param v Vector to compute distance to.\n     * @return the distance from {@code this} and {@code v}.", "entropy": 0.08929443359375, "is_bug_line": true, "sus_score": 0.4796803295612335, "per_token_entropy": [0.96826171875, 0.0258026123046875, 0.0704345703125, 0.054229736328125, 0.406982421875, 0.0022754669189453125, 0.001068115234375, 0.0007038116455078125, 0.0008068084716796875, 0.0018863677978515625, 0.045074462890625, 0.0015172958374023438, 0.19873046875, 0.022064208984375, 0.50146484375, 4.470348358154297e-05, 0.93603515625, 0.0007338523864746094, 0.00652313232421875, 0.01617431640625, 0.08709716796875, 0.7685546875, 0.05682373046875, 0.0135040283203125, 0.00012171268463134766, 0.036041259765625, 0.00016427040100097656, 0.005107879638671875, 0.01085662841796875, 0.1011962890625, 0.0194854736328125, 0.0008902549743652344, 0.001522064208984375, 0.009429931640625, 0.0030765533447265625, 0.0027408599853515625, 0.00133514404296875, 9.274482727050781e-05, 0.0007739067077636719, 0.1600341796875, 0.01229095458984375, 0.0209503173828125, 0.00347900390625, 0.014312744140625, 0.00019693374633789062, 0.002254486083984375, 0.0007066726684570312, 0.0413818359375, 0.0012607574462890625, 2.7298927307128906e-05, 0.0005555152893066406, 0.00824737548828125], "tokens": [291, 320, 291, 442, 4175, 32, 8663, 26, 575, 293, 284, 320, 446, 1022, 275, 319, 22994, 1191, 1411, 372, 7596, 7291, 32, 275, 319, 275, 319, 477, 753, 354, 4107, 372, 7596, 7291, 372, 32, 275, 319, 477, 601, 322, 7291, 645, 3088, 687, 458, 111, 461, 3088, 687, 354, 4009]}
{"line_number": 282, "line_type": "original", "code": "            final OpenMapRealVector res = new OpenMapRealVector(this, v.getDimension());", "entropy": 1.2001953125, "is_bug_line": false, "sus_score": 0.4776487648487091, "per_token_entropy": [7.1875, 4.484375, 2.798828125, 0.05816650390625, 0.0029964447021484375, 0.0006313323974609375, 7.34765625, 0.26025390625, 1.224609375, 0.00574493408203125, 0.0006895065307617188, 9.119510650634766e-05, 0.0006322860717773438, 0.01849365234375, 0.75, 0.244384765625, 0.72900390625, 0.0178375244140625, 0.00551605224609375, 0.00015282630920410156, 0.067626953125], "tokens": [1468, 1158, 3927, 1208, 6877, 2863, 736, 280, 537, 3927, 1208, 6877, 2863, 26, 578, 30, 354, 32, 371, 9883, 1035]}
{"line_number": 282, "line_type": "generated", "code": "\n        double sum = 0;\n        for (int i = 0; i < v.getDimension(); i++) {\n            sum += getEntry(i) * v.getEntry(i);\n        }\n        return sum;\n    }\n\n    /**\n    ", "entropy": 0.115966796875, "is_bug_line": false, "sus_score": 0.4776487648487091, "per_token_entropy": [0.14990234375, 1.0615234375, 1.24609375, 0.0163421630859375, 0.006900787353515625, 0.0005269050598144531, 0.286376953125, 0.044281005859375, 0.396484375, 0.01593017578125, 0.0367431640625, 0.0024929046630859375, 0.003925323486328125, 0.00787353515625, 1.3709068298339844e-05, 0.0200958251953125, 0.0012807846069335938, 0.006561279296875, 0.98388671875, 0.00562286376953125, 0.0008997917175292969, 7.414817810058594e-05, 0.00817108154296875, 0.1220703125, 0.007442474365234375, 0.0013895034790039062, 0.024658203125, 0.07574462890625, 0.003490447998046875, 0.84375, 0.0007719993591308594, 0.0014858245849609375, 0.0009179115295410156, 0.004817962646484375, 0.00054168701171875, 0.0024127960205078125, 8.487701416015625e-05, 5.161762237548828e-05, 0.00014138221740722656, 7.343292236328125e-05, 0.0009169578552246094, 0.0034637451171875, 0.0007848739624023438, 0.015960693359375, 0.0010728836059570312, 0.0025310516357421875, 0.0007543563842773438, 0.05078125, 0.0005702972412109375, 0.1434326171875, 0.039947509765625, 0.37890625], "tokens": [291, 2064, 3632, 280, 225, 34, 45, 291, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 354, 32, 371, 9883, 473, 595, 1987, 301, 324, 3632, 1454, 622, 2711, 26, 91, 27, 319, 354, 32, 48895, 26, 91, 293, 291, 320, 291, 442, 3632, 45, 284, 320, 446, 1022, 275]}
{"line_number": 350, "line_type": "original", "code": "        while (iter.hasNext()) {", "entropy": 1.279296875, "is_bug_line": true, "sus_score": 0.4397725462913513, "per_token_entropy": [4.90234375, 4.6328125, 0.28466796875, 0.29833984375, 0.0149078369140625, 0.037567138671875, 0.0291290283203125, 0.034759521484375], "tokens": [351, 2218, 308, 1731, 32, 16421, 1157, 301]}
{"line_number": 350, "line_type": "generated", "code": "\n    public double getEntry(int index) {\n        checkIndex(index);\n        return entries.get(index);\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public double[] getData() {\n        double[] values = new double[getDimension", "entropy": 0.145263671875, "is_bug_line": true, "sus_score": 0.4397725462913513, "per_token_entropy": [0.1524658203125, 0.135498046875, 0.72509765625, 0.18994140625, 0.66943359375, 0.00121307373046875, 0.05426025390625, 0.003757476806640625, 0.0038509368896484375, 0.08447265625, 0.105224609375, 0.36083984375, 0.0058135986328125, 0.002422332763671875, 8.487701416015625e-05, 0.0007448196411132812, 0.084716796875, 0.333251953125, 0.0225982666015625, 0.0010194778442382812, 0.036529541015625, 0.006008148193359375, 0.003726959228515625, 0.01184844970703125, 0.06304931640625, 0.0006213188171386719, 0.189453125, 0.0293121337890625, 0.426513671875, 0.0001761913299560547, 0.00034117698669433594, 0.0036754608154296875, 0.12091064453125, 0.00868988037109375, 0.0006723403930664062, 0.2337646484375, 0.0151214599609375, 0.59375, 0.09649658203125, 0.6240234375, 0.0128021240234375, 0.001949310302734375, 0.073974609375, 0.662109375, 0.02996826171875, 1.0595703125, 0.0185089111328125, 0.0209808349609375, 0.0006213188171386719, 0.0010728836059570312, 0.27197265625, 0.00014221668243408203], "tokens": [284, 562, 2064, 622, 2711, 26, 410, 1650, 27, 301, 291, 1505, 1284, 26, 1055, 293, 291, 442, 8036, 32, 371, 26, 1055, 293, 284, 320, 446, 1022, 3088, 18446, 111, 569, 284, 477, 1788, 284, 562, 2064, 1178, 22938, 346, 301, 291, 2064, 1178, 2078, 280, 537, 2064, 77, 371, 9883]}
{"line_number": 343, "line_type": "original", "code": "        OpenMapRealVector res = new OpenMapRealVector(this);", "entropy": 0.91748046875, "is_bug_line": false, "sus_score": 0.43320396542549133, "per_token_entropy": [4.41796875, 6.3046875, 0.2333984375, 0.012420654296875, 0.0029506683349609375, 0.53369140625, 0.016021728515625, 0.03326416015625, 0.002193450927734375, 0.0009541511535644531, 0.00018656253814697266, 5.245208740234375e-05, 0.01183319091796875, 0.65185546875, 1.541015625], "tokens": [351, 3927, 1208, 6877, 2863, 736, 280, 537, 3927, 1208, 6877, 2863, 26, 578, 293]}
{"line_number": 343, "line_type": "generated", "code": "\n            }\n        }\n        return res;\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public OpenMapRealVector mapAdd(RealVector v) {\n        checkVectorDimensions(v.getDimension());\n        OpenMapRealVector res = new Open", "entropy": 0.065673828125, "is_bug_line": false, "sus_score": 0.43320396542549133, "per_token_entropy": [0.12017822265625, 0.0027751922607421875, 0.11322021484375, 0.00040411949157714844, 0.08673095703125, 0.0228424072265625, 0.0004119873046875, 0.0010356903076171875, 0.09881591796875, 0.0003676414489746094, 0.132080078125, 0.021026611328125, 0.578125, 0.0002301931381225586, 0.000591278076171875, 0.005016326904296875, 0.00597381591796875, 0.004467010498046875, 0.0005922317504882812, 0.00453948974609375, 0.0212249755859375, 0.30615234375, 0.005413055419921875, 0.0008153915405273438, 0.00699615478515625, 0.1573486328125, 0.68603515625, 0.0037975311279296875, 0.4208984375, 0.07049560546875, 0.01280975341796875, 0.0307464599609375, 0.01560211181640625, 0.0179443359375, 0.10516357421875, 0.0007839202880859375, 0.00042247772216796875, 0.00045561790466308594, 0.00037384033203125, 0.0037288665771484375, 3.3855438232421875e-05, 1.1086463928222656e-05, 0.0008192062377929688, 0.055572509765625, 0.183349609375, 0.00487518310546875, 0.000152587890625, 2.7894973754882812e-05, 0.042449951171875, 0.0041656494140625, 0.057342529296875, 0.0007205009460449219], "tokens": [324, 320, 291, 320, 291, 442, 736, 45, 284, 320, 446, 1022, 3088, 18446, 111, 569, 284, 477, 1788, 284, 562, 3927, 1208, 6877, 2863, 1992, 1103, 26, 6877, 2863, 354, 27, 301, 291, 1505, 2863, 16485, 26, 104, 32, 371, 9883, 1035, 291, 3927, 1208, 6877, 2863, 736, 280, 537, 3927]}
{"line_number": 349, "line_type": "original", "code": "        Iterator iter = entries.iterator();", "entropy": 2.18359375, "is_bug_line": true, "sus_score": 0.43320396542549133, "per_token_entropy": [6.953125, 6.37109375, 3.982421875, 0.0201568603515625, 0.08563232421875, 0.0026397705078125, 0.029998779296875, 0.0165252685546875], "tokens": [351, 14743, 3850, 280, 8036, 32, 5162, 473]}
{"line_number": 349, "line_type": "generated", "code": "\n    @Override\n    public OpenMapRealVector mapAddToSelf(double d) {\n        Iterator iter = entries.iterator();\n        while (iter.hasNext()) {\n            iter.advance();\n            iter.setValue(iter.value() + d);\n        }", "entropy": 0.08062744140625, "is_bug_line": true, "sus_score": 0.43320396542549133, "per_token_entropy": [0.06292724609375, 0.65087890625, 0.0019779205322265625, 0.022216796875, 0.01788330078125, 0.9111328125, 0.00876617431640625, 0.0014801025390625, 0.01021575927734375, 0.11346435546875, 0.759765625, 0.005825042724609375, 0.00019156932830810547, 0.494873046875, 0.1868896484375, 0.0024394989013671875, 0.00978851318359375, 0.046966552734375, 0.33154296875, 0.0721435546875, 0.001636505126953125, 0.01171875, 0.0004849433898925781, 0.04241943359375, 0.0009737014770507812, 0.0206756591796875, 0.019439697265625, 0.11309814453125, 0.0005216598510742188, 0.00021576881408691406, 0.0005450248718261719, 0.00131988525390625, 0.001148223876953125, 0.01165771484375, 0.0030193328857421875, 7.11679458618164e-05, 0.0019741058349609375, 0.0011806488037109375, 0.00571441650390625, 0.09698486328125, 0.0008473396301269531, 0.0889892578125, 0.003360748291015625, 0.0222320556640625, 3.838539123535156e-05, 0.0021343231201171875, 0.011688232421875, 0.0015840530395507812, 0.0049591064453125, 0.0013065338134765625, 0.004863739013671875, 0.0015993118286132812], "tokens": [284, 477, 1788, 284, 562, 3927, 1208, 6877, 2863, 1992, 29202, 8171, 26, 2627, 343, 27, 301, 291, 14743, 3850, 280, 8036, 32, 5162, 473, 291, 2218, 308, 1731, 32, 16421, 1157, 301, 324, 3850, 32, 22545, 473, 324, 3850, 32, 11535, 26, 1731, 32, 853, 346, 474, 343, 293, 291, 320]}
{"line_number": 281, "line_type": "original", "code": "        } else {", "entropy": 3.798828125, "is_bug_line": false, "sus_score": 0.41591665148735046, "per_token_entropy": [5.34765625, 6.48046875, 3.087890625, 0.279296875], "tokens": [351, 320, 813, 301]}
{"line_number": 281, "line_type": "generated", "code": "\n    public double dotProduct(double[] v) {\n        checkVectorDimensions(v.length);\n        double d = 0;\n        for (int i = 0; i < virtualSize; i++) {\n            d += entries.get(i", "entropy": 0.131103515625, "is_bug_line": false, "sus_score": 0.41591665148735046, "per_token_entropy": [0.12744140625, 0.0438232421875, 0.66064453125, 0.361572265625, 1.1444091796875e-05, 0.0018253326416015625, 1.4208984375, 0.00862884521484375, 0.0098724365234375, 0.0083770751953125, 0.0394287109375, 0.1287841796875, 1.099609375, 0.03173828125, 0.003662109375, 0.0007786750793457031, 0.004573822021484375, 0.00795745849609375, 0.0014743804931640625, 0.0023937225341796875, 0.1292724609375, 0.281494140625, 0.312255859375, 0.0031757354736328125, 0.006103515625, 0.00031304359436035156, 0.052032470703125, 0.1473388671875, 0.1552734375, 0.0794677734375, 0.1488037109375, 0.0177764892578125, 0.011688232421875, 0.042816162109375, 0.0003504753112792969, 0.0283355712890625, 0.0015926361083984375, 0.0200653076171875, 0.72119140625, 0.0018911361694335938, 0.0223388671875, 0.07147216796875, 0.01061248779296875, 0.0018634796142578125, 0.0295257568359375, 0.038543701171875, 0.0100250244140625, 0.474853515625, 0.0012073516845703125, 0.0079193115234375, 0.00583648681640625, 0.0205841064453125], "tokens": [284, 562, 2064, 8057, 3409, 26, 2627, 1178, 354, 27, 301, 291, 1505, 2863, 16485, 26, 104, 32, 1322, 293, 291, 2064, 343, 280, 225, 34, 45, 291, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 3501, 1250, 45, 595, 1987, 301, 324, 343, 1454, 8036, 32, 371, 26, 91]}
{"line_number": 354, "line_type": "original", "code": "        return res;", "entropy": 2.58984375, "is_bug_line": false, "sus_score": 0.41466110944747925, "per_token_entropy": [5.51171875, 1.8173828125, 2.998046875, 0.0335693359375], "tokens": [351, 442, 736, 45]}
{"line_number": 354, "line_type": "generated", "code": "\n\n    /** {@inheritDoc} */\n    @Override\n    public double getEntry(int index) {\n        checkIndex(index);\n        return entries.get(index);\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public double[] getData() {\n       ", "entropy": 0.1314697265625, "is_bug_line": false, "sus_score": 0.41466110944747925, "per_token_entropy": [1.564453125, 0.064453125, 0.6376953125, 0.0002384185791015625, 0.0006566047668457031, 0.001949310302734375, 0.012359619140625, 0.01025390625, 0.000698089599609375, 0.005825042724609375, 0.016082763671875, 0.80224609375, 0.11785888671875, 0.71875, 0.000354766845703125, 0.038665771484375, 0.0025386810302734375, 0.001087188720703125, 0.052459716796875, 0.0301055908203125, 0.31689453125, 0.0126495361328125, 0.004131317138671875, 0.000202178955078125, 0.0009293556213378906, 0.0325927734375, 0.396728515625, 0.0428466796875, 0.0009908676147460938, 0.037872314453125, 0.005855560302734375, 0.0162353515625, 0.0251312255859375, 0.0235443115234375, 0.0001270771026611328, 0.245849609375, 0.0298614501953125, 0.400634765625, 0.0004398822784423828, 0.00022900104522705078, 0.0038242340087890625, 0.0208740234375, 0.00479888916015625, 0.001415252685546875, 0.003997802734375, 0.015869140625, 0.5048828125, 0.2080078125, 0.30419921875, 0.040313720703125, 0.0013866424560546875, 0.052764892578125], "tokens": [446, 1022, 3088, 18446, 111, 569, 284, 477, 1788, 284, 562, 2064, 622, 2711, 26, 410, 1650, 27, 301, 291, 1505, 1284, 26, 1055, 293, 291, 442, 8036, 32, 371, 26, 1055, 293, 284, 320, 446, 1022, 3088, 18446, 111, 569, 284, 477, 1788, 284, 562, 2064, 1178, 22938, 346, 301, 291]}
{"line_number": 592, "line_type": "original", "code": "            entries.remove(index);", "entropy": 2.443359375, "is_bug_line": false, "sus_score": 0.41466110944747925, "per_token_entropy": [6.0703125, 5.6796875, 0.1824951171875, 3.3671875, 0.295654296875, 1.423828125, 0.0960693359375], "tokens": [1468, 8036, 32, 2546, 26, 1055, 293]}
{"line_number": 592, "line_type": "generated", "code": "\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public OpenMapRealVector subtract(double d) {\n        return copy().mapSubtractToSelf(d);\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public OpenMapRealVector map", "entropy": 0.0897216796875, "is_bug_line": false, "sus_score": 0.41466110944747925, "per_token_entropy": [1.421875, 0.007274627685546875, 0.074951171875, 0.014862060546875, 0.54541015625, 7.748603820800781e-05, 0.00020754337310791016, 0.004566192626953125, 0.0023288726806640625, 0.0015630722045898438, 0.0002853870391845703, 0.0018568038940429688, 0.00855255126953125, 0.227294921875, 0.00019097328186035156, 0.0006818771362304688, 0.0005331039428710938, 0.1317138671875, 0.603515625, 0.10003662109375, 0.234375, 0.0005702972412109375, 0.0009446144104003906, 0.017547607421875, 0.23974609375, 0.414794921875, 0.0006575584411621094, 0.42919921875, 0.0232391357421875, 0.03912353515625, 6.198883056640625e-06, 9.441375732421875e-05, 0.0001456737518310547, 0.00015616416931152344, 0.0020275115966796875, 3.0279159545898438e-05, 0.0080718994140625, 0.0022125244140625, 0.0278167724609375, 7.867813110351562e-06, 2.9087066650390625e-05, 0.0006442070007324219, 0.017120361328125, 0.0002467632293701172, 2.0503997802734375e-05, 0.0009622573852539062, 0.0016613006591796875, 0.0478515625, 0.00010335445404052734, 6.92605972290039e-05, 0.00010919570922851562, 0.005313873291015625], "tokens": [284, 320, 446, 1022, 3088, 18446, 111, 569, 284, 477, 1788, 284, 562, 3927, 1208, 6877, 2863, 27799, 26, 2627, 343, 27, 301, 291, 442, 1933, 922, 1110, 34460, 705, 8171, 26, 86, 293, 284, 320, 446, 1022, 3088, 18446, 111, 569, 284, 477, 1788, 284, 562, 3927, 1208, 6877, 2863, 1992]}
{"line_number": 439, "line_type": "original", "code": "            return getDistance((OpenMapRealVector) v);", "entropy": 1.169921875, "is_bug_line": false, "sus_score": 0.4130539000034332, "per_token_entropy": [5.2734375, 0.9052734375, 1.6552734375, 2.15625, 3.890625, 0.0845947265625, 0.0025501251220703125, 0.0018291473388671875, 0.0010881423950195312, 0.0022182464599609375, 0.0439453125, 0.02117919921875], "tokens": [1468, 442, 622, 8457, 1162, 2961, 1208, 6877, 2863, 27, 354, 293]}
{"line_number": 439, "line_type": "generated", "code": "\n        }\n    }\n\n    /**\n     * Distance between two vectors.\n     * This method computes the distance consistent with\n     * L<sub>2</sub> norm, i.e. the root of the sum of the squared elements\n     * differences.\n    ", "entropy": 0.109375, "is_bug_line": false, "sus_score": 0.4130539000034332, "per_token_entropy": [0.11749267578125, 0.0014896392822265625, 0.01407623291015625, 0.0006475448608398438, 0.10382080078125, 0.018768310546875, 0.6455078125, 0.00046181678771972656, 0.481689453125, 0.0174102783203125, 0.02001953125, 0.005336761474609375, 0.06622314453125, 0.01371002197265625, 7.426738739013672e-05, 0.020660400390625, 0.001567840576171875, 0.007648468017578125, 0.005359649658203125, 0.020172119140625, 0.008026123046875, 0.00437164306640625, 0.087646484375, 0.0003304481506347656, 0.0087432861328125, 0.00276947021484375, 0.000766754150390625, 0.325927734375, 0.58837890625, 0.0009088516235351562, 0.00011324882507324219, 0.01088714599609375, 0.0035247802734375, 0.028228759765625, 0.02166748046875, 1.2516975402832031e-05, 0.0005092620849609375, 0.00246429443359375, 0.052093505859375, 0.485107421875, 0.114501953125, 0.004673004150390625, 0.044921875, 0.033111572265625, 0.7529296875, 0.74072265625, 0.666015625, 0.06610107421875, 8.821487426757812e-06, 0.04656982421875, 0.0035381317138671875, 0.0197296142578125], "tokens": [291, 320, 284, 320, 446, 1022, 275, 319, 26911, 3733, 3134, 16540, 32, 275, 319, 1348, 1411, 35560, 322, 7291, 14488, 623, 275, 319, 498, 46, 1113, 48, 36, 377, 1113, 48, 9807, 30, 595, 32, 87, 32, 322, 3051, 432, 322, 3632, 432, 322, 39560, 4702, 275, 319, 21005, 32, 275]}
{"line_number": 445, "line_type": "original", "code": "    /** {@inheritDoc} */", "entropy": 1.3056640625, "is_bug_line": false, "sus_score": 0.4130539000034332, "per_token_entropy": [3.5625, 3.1796875, 1.064453125, 0.0006966590881347656, 0.0012454986572265625, 0.028076171875], "tokens": [264, 1022, 3088, 18446, 111, 569]}
{"line_number": 445, "line_type": "generated", "code": "\n     * @param v Vector to compute distance to.\n     * @return the distance from {@code this} and {@code v}.\n     * @throws org.apache.commons.math3.exception.DimensionMismatchException\n     * if the dimensions do not", "entropy": 0.039581298828125, "is_bug_line": false, "sus_score": 0.4130539000034332, "per_token_entropy": [0.2030029296875, 0.069580078125, 0.062469482421875, 0.08673095703125, 0.0107574462890625, 0.044677734375, 0.038665771484375, 0.16259765625, 0.224853515625, 0.0106964111328125, 0.00841522216796875, 0.0077362060546875, 0.0010585784912109375, 0.0029506683349609375, 0.0052032470703125, 0.1397705078125, 0.5068359375, 0.0270233154296875, 0.032073974609375, 0.0002701282501220703, 0.0012378692626953125, 0.0004031658172607422, 0.031707763671875, 0.0018568038940429688, 0.0007028579711914062, 0.0018777847290039062, 0.0555419921875, 0.0148468017578125, 0.162841796875, 0.003391265869140625, 0.0106048583984375, 0.04229736328125, 7.3909759521484375e-06, 0.00015366077423095703, 5.9604644775390625e-06, 0.0001423358917236328, 2.384185791015625e-07, 4.315376281738281e-05, 0.002666473388671875, 2.384185791015625e-06, 0.00010037422180175781, 8.58306884765625e-06, 0.006183624267578125, 7.712841033935547e-05, 1.800060272216797e-05, 0.0148468017578125, 0.0003788471221923828, 0.0215606689453125, 0.033172607421875, 0.00566864013671875, 0.0010423660278320312, 6.4373016357421875e-06], "tokens": [275, 319, 477, 753, 354, 4107, 372, 7596, 7291, 372, 32, 275, 319, 477, 601, 322, 7291, 645, 3088, 687, 458, 111, 461, 3088, 687, 354, 4009, 275, 319, 477, 5117, 1086, 32, 2104, 32, 8369, 32, 3812, 37, 32, 3893, 32, 9883, 31102, 984, 275, 319, 415, 322, 13135, 745, 646]}
{"line_number": 456, "line_type": "original", "code": "     * elements differences.", "entropy": 6.2109375, "is_bug_line": false, "sus_score": 0.41295063495635986, "per_token_entropy": [5.75, 4.40625, 11.0, 8.828125, 1.0712890625], "tokens": [262, 319, 4702, 21005, 32]}
{"line_number": 456, "line_type": "generated", "code": "\n            }\n        }\n        iter = v.getEntries().iterator();\n        while (iter.hasNext()) {\n            iter.advance();\n            int key = iter.key();\n            if (!entries.containsKey(key)) {\n                double delta = FastMath.", "entropy": 0.025665283203125, "is_bug_line": false, "sus_score": 0.41295063495635986, "per_token_entropy": [0.78759765625, 0.00351715087890625, 0.07403564453125, 0.0003197193145751953, 0.03436279296875, 0.07366943359375, 0.000637054443359375, 0.0016069412231445312, 1.5854835510253906e-05, 0.00672149658203125, 0.00010776519775390625, 0.000255584716796875, 0.0007128715515136719, 0.00012755393981933594, 0.00791168212890625, 0.006862640380859375, 0.0005998611450195312, 0.0002579689025878906, 3.0517578125e-05, 4.5418739318847656e-05, 0.0006251335144042969, 0.0002827644348144531, 0.003894805908203125, 0.00995635986328125, 3.4332275390625e-05, 0.00027680397033691406, 9.739398956298828e-05, 0.003875732421875, 0.0526123046875, 0.003993988037109375, 0.0006003379821777344, 0.00139617919921875, 4.267692565917969e-05, 0.00016176700592041016, 0.0003304481506347656, 0.007061004638671875, 0.019378662109375, 0.00463104248046875, 0.006984710693359375, 1.1563301086425781e-05, 0.00019073486328125, 5.137920379638672e-05, 0.0009036064147949219, 0.00142669677734375, 0.002429962158203125, 0.017791748046875, 0.1204833984375, 0.03369140625, 0.0017900466918945312, 0.040008544921875, 5.1856040954589844e-05, 6.496906280517578e-05], "tokens": [324, 320, 291, 320, 291, 3850, 280, 354, 32, 371, 9915, 922, 5162, 473, 291, 2218, 308, 1731, 32, 16421, 1157, 301, 324, 3850, 32, 22545, 473, 324, 629, 1202, 280, 3850, 32, 678, 473, 324, 415, 1429, 9150, 32, 15943, 26, 678, 490, 301, 400, 2064, 7715, 280, 15938, 5717, 32]}
{"line_number": 443, "line_type": "original", "code": "    }", "entropy": 3.951171875, "is_bug_line": false, "sus_score": 0.4123046398162842, "per_token_entropy": [2.328125, 5.57421875], "tokens": [264, 320]}
{"line_number": 443, "line_type": "generated", "code": "\n     * Distance between two vectors.\n     * This method computes the distance consistent with\n     * L<sub>2</sub> norm, i.e. the root of the sum of the squares of\n     * elements differences.\n     *\n     * @param", "entropy": 0.12298583984375, "is_bug_line": false, "sus_score": 0.4123046398162842, "per_token_entropy": [0.794921875, 0.09283447265625, 1.3056640625, 0.01378631591796875, 0.03338623046875, 0.008544921875, 0.09442138671875, 0.023040771484375, 0.00029349327087402344, 0.034271240234375, 0.0019350051879882812, 0.00955963134765625, 0.006977081298828125, 0.0211944580078125, 0.0142974853515625, 0.005580902099609375, 0.103759765625, 0.0004944801330566406, 0.01031494140625, 0.0034923553466796875, 0.0010986328125, 0.276123046875, 0.6611328125, 0.0011539459228515625, 0.00017631053924560547, 0.00917816162109375, 0.004535675048828125, 0.032623291015625, 0.0211334228515625, 2.4437904357910156e-05, 0.0007157325744628906, 0.002803802490234375, 0.049285888671875, 0.3759765625, 0.1151123046875, 0.0031890869140625, 0.052001953125, 0.0343017578125, 0.7158203125, 0.79541015625, 0.252685546875, 0.301025390625, 4.220008850097656e-05, 0.0285491943359375, 0.01003265380859375, 0.0045623779296875, 0.01497650146484375, 0.00240325927734375, 0.041473388671875, 0.00022518634796142578, 0.0032100677490234375, 0.0030651092529296875], "tokens": [275, 319, 26911, 3733, 3134, 16540, 32, 275, 319, 1348, 1411, 35560, 322, 7291, 14488, 623, 275, 319, 498, 46, 1113, 48, 36, 377, 1113, 48, 9807, 30, 595, 32, 87, 32, 322, 3051, 432, 322, 3632, 432, 322, 36535, 432, 275, 319, 4702, 21005, 32, 275, 319, 275, 319, 477, 753]}
{"line_number": 444, "line_type": "original", "code": "", "entropy": 3.81640625, "is_bug_line": false, "sus_score": 0.4094025790691376, "per_token_entropy": [3.81640625], "tokens": [203]}
{"line_number": 444, "line_type": "generated", "code": "\n     * @param v Vector to compute distance to.\n     * @return the distance from {@code this} and {@code v}.\n     * @throws org.apache.commons.math3.exception.DimensionMismatchException\n     * if the dimensions do not", "entropy": 0.0509033203125, "is_bug_line": false, "sus_score": 0.4094025790691376, "per_token_entropy": [0.1279296875, 0.04205322265625, 0.78515625, 0.06072998046875, 0.00994873046875, 0.05242919921875, 0.038360595703125, 0.153564453125, 0.214111328125, 0.01088714599609375, 0.0105133056640625, 0.0411376953125, 0.001674652099609375, 0.0033969879150390625, 0.006717681884765625, 0.1339111328125, 0.483642578125, 0.02667236328125, 0.0341796875, 0.0003325939178466797, 0.0011587142944335938, 0.000354766845703125, 0.029815673828125, 0.0017786026000976562, 0.0006937980651855469, 0.0017833709716796875, 0.050140380859375, 0.044891357421875, 0.1273193359375, 0.003139495849609375, 0.0125885009765625, 0.044677734375, 8.225440979003906e-06, 0.00014412403106689453, 7.3909759521484375e-06, 0.00016248226165771484, 3.5762786865234375e-07, 4.482269287109375e-05, 0.00263214111328125, 2.7418136596679688e-06, 0.00010073184967041016, 1.0728836059570312e-05, 0.005901336669921875, 8.52346420288086e-05, 2.1457672119140625e-05, 0.0175323486328125, 0.0005006790161132812, 0.0243072509765625, 0.031951904296875, 0.006031036376953125, 0.0010013580322265625, 1.990795135498047e-05], "tokens": [275, 319, 477, 753, 354, 4107, 372, 7596, 7291, 372, 32, 275, 319, 477, 601, 322, 7291, 645, 3088, 687, 458, 111, 461, 3088, 687, 354, 4009, 275, 319, 477, 5117, 1086, 32, 2104, 32, 8369, 32, 3812, 37, 32, 3893, 32, 9883, 31102, 984, 275, 319, 415, 322, 13135, 745, 646]}
{"line_number": 277, "line_type": "original", "code": "    @Override", "entropy": 3.115234375, "is_bug_line": false, "sus_score": 0.4083501100540161, "per_token_entropy": [3.484375, 5.8515625, 0.005950927734375], "tokens": [264, 477, 1788]}
{"line_number": 277, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Optimized method to compute the dot product with an OpenMapRealVector.\n     * It iterates over the smallest of the two.\n     *\n     * @param v Cector to compute the dot product with.\n     * @", "entropy": 0.0933837890625, "is_bug_line": false, "sus_score": 0.4083501100540161, "per_token_entropy": [0.29736328125, 0.763671875, 0.3662109375, 0.04290771484375, 0.326416015625, 6.389617919921875e-05, 0.59375, 0.0030460357666015625, 0.0090789794921875, 0.01491546630859375, 0.2105712890625, 0.0204925537109375, 0.143310546875, 0.002193450927734375, 0.10369873046875, 0.6904296875, 0.22412109375, 0.00759124755859375, 0.0012159347534179688, 0.00437164306640625, 0.0643310546875, 0.0035610198974609375, 6.008148193359375e-05, 0.12353515625, 0.0994873046875, 6.437301635742188e-05, 0.008331298828125, 0.03216552734375, 0.278564453125, 0.00473785400390625, 0.0038471221923828125, 0.001865386962890625, 0.07177734375, 0.0269012451171875, 0.0003485679626464844, 0.07977294921875, 8.547306060791016e-05, 0.005523681640625, 0.0020294189453125, 0.00424957275390625, 0.212158203125, 5.316734313964844e-05, 0.0002231597900390625, 0.0004630088806152344, 0.0002892017364501953, 0.0010528564453125, 6.723403930664062e-05, 0.00010907649993896484, 0.0024013519287109375, 0.0010700225830078125, 4.470348358154297e-05, 0.0007305145263671875], "tokens": [284, 320, 446, 1022, 275, 319, 22994, 1191, 1411, 372, 7596, 322, 8057, 4054, 623, 600, 3927, 1208, 6877, 2863, 32, 275, 319, 2030, 3850, 1196, 2288, 322, 29044, 432, 322, 3134, 32, 275, 319, 275, 319, 477, 753, 354, 390, 1108, 372, 7596, 322, 8057, 4054, 623, 32, 275, 319, 477]}
{"line_number": 278, "line_type": "original", "code": "    public OpenMapRealVector append(RealVector v) {", "entropy": 1.3369140625, "is_bug_line": false, "sus_score": 0.4083501100540161, "per_token_entropy": [4.3203125, 2.55078125, 1.787109375, 0.023101806640625, 0.001148223876953125, 0.0085296630859375, 5.8359375, 0.026611328125, 2.6484375, 0.0034923553466796875, 0.00823211669921875, 0.0189208984375, 0.13525390625], "tokens": [264, 562, 3927, 1208, 6877, 2863, 5489, 26, 6877, 2863, 354, 27, 301]}
{"line_number": 278, "line_type": "generated", "code": "\n    /**\n     * Optimized method to compute the dot product with an OpenMapRealVector.\n     * It iterates over the smallest of the two.\n     *\n     * @param v Cector to compute the dot product with.\n     * @return the", "entropy": 0.0994873046875, "is_bug_line": false, "sus_score": 0.4083501100540161, "per_token_entropy": [1.2099609375, 0.1817626953125, 0.2861328125, 0.00015664100646972656, 0.467529296875, 0.0025768280029296875, 0.0136566162109375, 0.018707275390625, 0.314453125, 0.025634765625, 0.293701171875, 0.0024623870849609375, 0.111328125, 0.607421875, 0.2529296875, 0.01247406005859375, 0.0012454986572265625, 0.007801055908203125, 0.0845947265625, 0.0036144256591796875, 0.00020074844360351562, 0.138916015625, 0.14501953125, 6.031990051269531e-05, 0.011505126953125, 0.038818359375, 0.41015625, 0.00498199462890625, 0.0037384033203125, 0.0019588470458984375, 0.083984375, 0.035888671875, 0.0005016326904296875, 0.08367919921875, 0.00010967254638671875, 0.005401611328125, 0.00215911865234375, 0.0113372802734375, 0.1768798828125, 3.6835670471191406e-05, 0.00017440319061279297, 0.0004858970642089844, 0.00021576881408691406, 0.0020656585693359375, 7.033348083496094e-05, 0.00014531612396240234, 0.00189208984375, 0.0009489059448242188, 5.3882598876953125e-05, 0.0008358955383300781, 0.110107421875, 0.0020999908447265625], "tokens": [284, 1022, 275, 319, 22994, 1191, 1411, 372, 7596, 322, 8057, 4054, 623, 600, 3927, 1208, 6877, 2863, 32, 275, 319, 2030, 3850, 1196, 2288, 322, 29044, 432, 322, 3134, 32, 275, 319, 275, 319, 477, 753, 354, 390, 1108, 372, 7596, 322, 8057, 4054, 623, 32, 275, 319, 477, 601, 322]}
