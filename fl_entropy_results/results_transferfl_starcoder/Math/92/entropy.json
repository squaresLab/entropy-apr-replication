{"line_number": 208, "line_type": "original", "code": "        return result;", "entropy": 2.748046875, "is_bug_line": true, "sus_score": 0.5278993844985962, "per_token_entropy": [4.8984375, 1.455078125, 4.5390625, 0.0975341796875], "tokens": [351, 442, 1056, 45]}
{"line_number": 208, "line_type": "generated", "code": "\n    }\n    \n    /**\n     * Returns a <code>double</code> representation of the <a\n     * href=\"http://mathworld.wolfram.com/BellNumber.html\">Bell Number</a>,\n     * \"<code>", "entropy": 0.21142578125, "is_bug_line": true, "sus_score": 0.5278993844985962, "per_token_entropy": [0.5126953125, 0.007274627685546875, 2.19921875, 0.329833984375, 0.03778076171875, 0.0007886886596679688, 0.43798828125, 1.5341796875, 0.46630859375, 0.0258026123046875, 0.000766754150390625, 1.166015625, 0.0238037109375, 0.0001049041748046875, 0.003055572509765625, 0.0885009765625, 0.001789093017578125, 0.034027099609375, 0.2218017578125, 0.00811767578125, 0.01087188720703125, 5.519390106201172e-05, 0.0006022453308105469, 0.0172882080078125, 0.001983642578125, 0.00021016597747802734, 0.004878997802734375, 0.000244140625, 1.3232231140136719e-05, 6.580352783203125e-05, 2.658367156982422e-05, 1.9073486328125e-05, 0.0002262592315673828, 4.00543212890625e-05, 0.00015056133270263672, 1.5283203125, 0.65576171875, 0.006855010986328125, 0.00016641616821289062, 1.239776611328125e-05, 0.00238800048828125, 0.52685546875, 0.0010862350463867188, 0.2607421875, 0.045684814453125, 0.000682830810546875, 0.1824951171875, 0.38330078125, 0.0005278587341308594, 0.2373046875, 0.0112152099609375, 0.01380157470703125], "tokens": [284, 320, 2170, 1022, 275, 319, 3759, 312, 333, 687, 48, 2627, 377, 687, 48, 10293, 432, 322, 333, 83, 275, 319, 976, 347, 525, 555, 3812, 5860, 32, 105, 362, 43579, 32, 508, 33, 52, 1030, 1918, 32, 916, 413, 52, 1030, 5104, 377, 83, 2717, 275, 319, 3778, 687, 48]}
{"line_number": 182, "line_type": "original", "code": "            return n;", "entropy": 3.36328125, "is_bug_line": false, "sus_score": 0.5040111541748047, "per_token_entropy": [5.4921875, 2.150390625, 3.75390625, 2.052734375], "tokens": [1468, 442, 310, 45]}
{"line_number": 182, "line_type": "generated", "code": "\n     */\n    public static double binomialCoefficientDouble(final int n, final int k) {\n        if (n < k) {\n            throw new IllegalArgumentException(\n                \"must have n >= k for binomial coefficient (n,k)\");\n        }\n       ", "entropy": 0.04559326171875, "is_bug_line": false, "sus_score": 0.5040111541748047, "per_token_entropy": [0.8359375, 0.217041015625, 0.04852294921875, 0.279052734375, 0.0012302398681640625, 0.01300811767578125, 0.0020046234130859375, 0.00017940998077392578, 6.139278411865234e-05, 0.055877685546875, 0.002696990966796875, 0.0958251953125, 0.0272369384765625, 0.0007452964782714844, 0.0002720355987548828, 0.041900634765625, 0.0016927719116210938, 8.296966552734375e-05, 0.0022125244140625, 0.02423095703125, 0.2210693359375, 0.1676025390625, 0.0408935546875, 0.032623291015625, 0.0211944580078125, 0.0865478515625, 0.0014333724975585938, 0.00298309326171875, 0.01442718505859375, 0.0052490234375, 0.0006761550903320312, 0.0031681060791015625, 0.017333984375, 0.016815185546875, 0.0002696514129638672, 0.004589080810546875, 6.377696990966797e-05, 0.00211334228515625, 0.00586700439453125, 0.0009245872497558594, 0.001293182373046875, 0.00174713134765625, 0.0008025169372558594, 0.0014171600341796875, 0.0132904052734375, 0.0008196830749511719, 0.0004849433898925781, 0.0013475418090820312, 0.002521514892578125, 0.0289764404296875, 0.0006256103515625, 0.02166748046875], "tokens": [275, 569, 284, 562, 907, 2064, 7395, 12563, 8973, 4075, 26, 3220, 629, 310, 30, 1158, 629, 831, 27, 301, 291, 415, 308, 96, 333, 831, 27, 301, 324, 1422, 537, 12137, 26, 400, 313, 12172, 1159, 310, 2377, 831, 436, 7395, 12563, 17134, 308, 96, 30, 93, 13372, 291, 320, 291]}
{"line_number": 184, "line_type": "original", "code": "        long result = Math.round(binomialCoefficientDouble(n, k));", "entropy": 1.4140625, "is_bug_line": true, "sus_score": 0.4976334869861603, "per_token_entropy": [5.734375, 4.84375, 0.5478515625, 0.1497802734375, 3.451171875, 0.3876953125, 0.433837890625, 0.10931396484375, 4.6171875, 0.108642578125, 0.14599609375, 1.466796875, 1.6513671875, 0.150390625, 0.0179443359375, 0.1494140625, 0.07733154296875], "tokens": [351, 1946, 1056, 280, 4175, 32, 1497, 26, 1771, 12563, 8973, 4075, 26, 96, 30, 831, 876]}
{"line_number": 184, "line_type": "generated", "code": "\n        if (result == Double.POSITIVE_INFINITY) {\n            throw new ArithmeticException(\n                \"result too large to represent in a double\");\n        }\n        return result;\n    }", "entropy": 0.1409912109375, "is_bug_line": true, "sus_score": 0.4976334869861603, "per_token_entropy": [0.267578125, 1.078125, 0.125732421875, 0.34326171875, 0.32470703125, 0.04315185546875, 0.00017917156219482422, 0.1304931640625, 4.0650367736816406e-05, 0.00027298927307128906, 0.014617919921875, 0.006439208984375, 0.0250396728515625, 1.13671875, 0.0013904571533203125, 0.09295654296875, 0.00011110305786132812, 0.1163330078125, 0.025970458984375, 0.00164794921875, 0.06719970703125, 0.0106353759765625, 0.00048279762268066406, 0.00131988525390625, 0.0762939453125, 0.39794921875, 0.011871337890625, 0.1019287109375, 0.188232421875, 0.0089263916015625, 0.000812530517578125, 0.11395263671875, 0.4482421875, 0.017791748046875, 0.0047454833984375, 0.030029296875, 0.0010852813720703125], "tokens": [291, 415, 308, 1267, 610, 6934, 32, 42270, 81, 36069, 27, 301, 324, 1422, 537, 47721, 984, 26, 400, 313, 1267, 5133, 7622, 372, 4042, 328, 312, 2064, 724, 291, 320, 291, 442, 1056, 45, 284, 320]}
{"line_number": 181, "line_type": "original", "code": "        if ((k == 1) || (k == n - 1)) {", "entropy": 1.0908203125, "is_bug_line": false, "sus_score": 0.49018019437789917, "per_token_entropy": [3.462890625, 2.16015625, 2.3828125, 4.109375, 0.52001953125, 0.59423828125, 4.171875, 0.049957275390625, 0.0882568359375, 0.0124053955078125, 0.2191162109375, 0.0087127685546875, 0.1099853515625, 1.5322265625, 0.04132080078125, 0.0014820098876953125, 0.0810546875, 0.0888671875], "tokens": [351, 415, 1833, 93, 610, 225, 35, 27, 1276, 308, 93, 610, 310, 429, 225, 35, 490, 301]}
{"line_number": 181, "line_type": "generated", "code": "\n     */\n    public static double binomialCoefficientDouble(final int n, final int k) {\n        if (n < k) {\n            throw new IllegalArgumentException(\n                \"must have n >= k for binomial coefficient (n,k)\");\n        }\n       ", "entropy": 0.06494140625, "is_bug_line": false, "sus_score": 0.49018019437789917, "per_token_entropy": [1.5751953125, 0.552734375, 0.07501220703125, 0.1844482421875, 0.002361297607421875, 0.01549530029296875, 0.002506256103515625, 0.0002586841583251953, 8.881092071533203e-05, 0.05035400390625, 0.0025653839111328125, 0.11456298828125, 0.034637451171875, 0.000827789306640625, 0.0003457069396972656, 0.039886474609375, 0.0015125274658203125, 0.00010848045349121094, 0.0021305084228515625, 0.0159912109375, 0.203857421875, 0.164794921875, 0.0389404296875, 0.03546142578125, 0.0250396728515625, 0.0946044921875, 0.001598358154296875, 0.0024852752685546875, 0.01128387451171875, 0.007709503173828125, 0.0012493133544921875, 0.003662109375, 0.01812744140625, 0.0164947509765625, 0.0002646446228027344, 0.004703521728515625, 6.580352783203125e-05, 0.0023174285888671875, 0.005588531494140625, 0.0010023117065429688, 0.0014019012451171875, 0.0019207000732421875, 0.0006198883056640625, 0.0013036727905273438, 0.013702392578125, 0.0006475448608398438, 0.00043964385986328125, 0.0014677047729492188, 0.002429962158203125, 0.01087188720703125, 0.00034308433532714844, 0.031951904296875], "tokens": [275, 569, 284, 562, 907, 2064, 7395, 12563, 8973, 4075, 26, 3220, 629, 310, 30, 1158, 629, 831, 27, 301, 291, 415, 308, 96, 333, 831, 27, 301, 324, 1422, 537, 12137, 26, 400, 313, 12172, 1159, 310, 2377, 831, 436, 7395, 12563, 17134, 308, 96, 30, 93, 13372, 291, 320, 291]}
{"line_number": 185, "line_type": "original", "code": "        if (result == Long.MAX_VALUE) {", "entropy": 1.2841796875, "is_bug_line": true, "sus_score": 0.485312819480896, "per_token_entropy": [3.845703125, 1.1748046875, 0.20458984375, 2.4765625, 2.396484375, 4.98046875, 0.000629425048828125, 0.14990234375, 8.869171142578125e-05, 0.00021696090698242188, 0.141357421875, 0.033782958984375], "tokens": [351, 415, 308, 1267, 610, 6359, 32, 3459, 81, 5975, 27, 301]}
{"line_number": 185, "line_type": "generated", "code": "\n        return Math.exp(logBinomialCoefficientDouble(n, k));\n    }\n\n    /**\n     * Returns the natural logarithm of the <a\n     * href=\"http://mathworld.wolfram.com/BinomialCoefficient.html", "entropy": 0.163330078125, "is_bug_line": true, "sus_score": 0.485312819480896, "per_token_entropy": [1.267578125, 1.2353515625, 0.75048828125, 0.025177001953125, 0.30615234375, 0.0307769775390625, 1.3486328125, 0.28125, 0.0005002021789550781, 0.06787109375, 0.9130859375, 0.01453399658203125, 0.0033168792724609375, 0.0007505416870117188, 0.01360321044921875, 0.0611572265625, 0.17529296875, 0.0017633438110351562, 0.48388671875, 0.040863037109375, 0.01235198974609375, 0.00020360946655273438, 0.09674072265625, 0.26806640625, 0.1966552734375, 0.369873046875, 0.033172607421875, 0.001369476318359375, 0.044677734375, 0.256591796875, 0.13330078125, 0.03143310546875, 0.01605224609375, 0.0004398822784423828, 0.0002015829086303711, 0.0017004013061523438, 0.0001806020736694336, 0.00039196014404296875, 0.0005879402160644531, 0.00014495849609375, 1.1801719665527344e-05, 7.617473602294922e-05, 1.0967254638671875e-05, 4.100799560546875e-05, 0.00042319297790527344, 3.6835670471191406e-05, 9.000301361083984e-05, 0.0016088485717773438, 0.0001360177993774414, 2.9206275939941406e-05, 7.295608520507812e-05, 2.0742416381835938e-05], "tokens": [291, 442, 4175, 32, 2832, 26, 751, 9074, 12563, 8973, 4075, 26, 96, 30, 831, 876, 284, 320, 446, 1022, 275, 319, 3759, 322, 19844, 1245, 31176, 95, 432, 322, 333, 83, 275, 319, 976, 347, 525, 555, 3812, 5860, 32, 105, 362, 43579, 32, 508, 33, 9074, 12563, 8973, 32, 916]}
{"line_number": 95, "line_type": "original", "code": "        return addAndCheck(a, b, \"overflow: add\");", "entropy": 0.732421875, "is_bug_line": false, "sus_score": 0.4708501398563385, "per_token_entropy": [4.40625, 3.07421875, 1.23046875, 0.00666046142578125, 0.001979827880859375, 0.0601806640625, 0.1856689453125, 0.12255859375, 0.0670166015625, 0.0926513671875, 0.8359375, 0.61865234375, 0.1654052734375, 0.01190948486328125, 0.101318359375], "tokens": [351, 442, 1015, 2185, 2140, 26, 83, 30, 323, 30, 313, 9642, 44, 1015, 724]}
{"line_number": 95, "line_type": "generated", "code": "\n    /**\n     * Subtract two integers, checking for overflow.\n     * \n     * @param x the minuend\n     * @param y the subtrahend\n     * @return the difference <code>x-y</code>\n     * @throws", "entropy": 0.13427734375, "is_bug_line": false, "sus_score": 0.4708501398563385, "per_token_entropy": [1.732421875, 1.0908203125, 0.1021728515625, 0.0005626678466796875, 1.953125, 0.24169921875, 0.33203125, 0.00510406494140625, 0.0008988380432128906, 0.0036411285400390625, 0.1475830078125, 0.0024318695068359375, 0.0195770263671875, 9.572505950927734e-05, 0.051116943359375, 4.792213439941406e-05, 0.00331878662109375, 0.0007948875427246094, 0.048095703125, 0.2119140625, 0.0261993408203125, 5.066394805908203e-05, 7.319450378417969e-05, 0.037841796875, 4.76837158203125e-06, 9.620189666748047e-05, 0.00014662742614746094, 0.00023090839385986328, 0.0007696151733398438, 0.00019872188568115234, 0.00640869140625, 8.106231689453125e-06, 0.0001251697540283203, 0.0024013519287109375, 3.0279159545898438e-05, 0.0006508827209472656, 0.006671905517578125, 0.108154296875, 0.724609375, 0.0289154052734375, 0.0017900466918945312, 0.00042438507080078125, 0.0034332275390625, 0.058349609375, 0.00012683868408203125, 0.00029659271240234375, 9.918212890625e-05, 0.01129913330078125, 0.003437042236328125, 0.0009822845458984375, 0.0008769035339355469, 0.013397216796875], "tokens": [284, 1022, 275, 319, 48588, 3134, 18670, 30, 11056, 436, 9973, 32, 275, 319, 5384, 319, 477, 753, 816, 322, 1847, 103, 416, 275, 319, 477, 753, 533, 322, 1361, 359, 2371, 416, 275, 319, 477, 601, 322, 10563, 333, 687, 48, 106, 31, 107, 377, 687, 48, 275, 319, 477, 5117]}
{"line_number": 179, "line_type": "original", "code": "            return 1;", "entropy": 2.19921875, "is_bug_line": false, "sus_score": 0.4481281638145447, "per_token_entropy": [3.841796875, 2.13671875, 3.302734375, 0.2017822265625, 1.5205078125], "tokens": [1468, 442, 225, 35, 45]}
{"line_number": 179, "line_type": "generated", "code": "\n     * @param k the size of the subsets to be counted\n     * @return <code>n choose k</code>\n     * @throws IllegalArgumentException if preconditions are not met.\n     * @throws ArithmeticException if the result is too large to", "entropy": 0.07373046875, "is_bug_line": false, "sus_score": 0.4481281638145447, "per_token_entropy": [0.78955078125, 0.085205078125, 0.034515380859375, 0.3349609375, 0.00136566162109375, 0.0018968582153320312, 0.000823974609375, 0.0001474618911743164, 0.00041484832763671875, 0.00385284423828125, 0.0001246929168701172, 0.001697540283203125, 0.0003402233123779297, 0.00044798851013183594, 0.30810546875, 0.0014476776123046875, 0.00389862060546875, 0.009521484375, 0.012603759765625, 0.0009593963623046875, 0.00164031982421875, 0.0050048828125, 0.0010156631469726562, 0.00019168853759765625, 0.0006299018859863281, 0.0001609325408935547, 0.0198516845703125, 0.065185546875, 0.038726806640625, 0.0029144287109375, 0.007686614990234375, 0.0136260986328125, 0.00313568115234375, 0.006870269775390625, 0.0008077621459960938, 0.0007486343383789062, 0.00022327899932861328, 4.649162292480469e-05, 0.037750244140625, 0.01206207275390625, 1.40625, 0.0299530029296875, 0.359130859375, 0.0297698974609375, 0.0005679130554199219, 0.019195556640625, 0.0313720703125, 0.01708984375, 0.11065673828125, 0.01399993896484375, 0.001575469970703125, 0.00403594970703125], "tokens": [275, 319, 477, 753, 831, 322, 1334, 432, 322, 1361, 2021, 372, 526, 44644, 275, 319, 477, 601, 333, 687, 48, 96, 9173, 831, 377, 687, 48, 275, 319, 477, 5117, 12137, 415, 1406, 8425, 884, 646, 3279, 32, 275, 319, 477, 5117, 47721, 984, 415, 322, 1056, 438, 5133, 7622, 372]}
{"line_number": 117, "line_type": "original", "code": "            if (a < 0) {", "entropy": 2.853515625, "is_bug_line": false, "sus_score": 0.4451136887073517, "per_token_entropy": [5.81640625, 8.5703125, 1.0166015625, 7.54296875, 1.9091796875, 0.242919921875, 0.007293701171875, 0.50927734375, 0.06768798828125], "tokens": [1468, 415, 308, 83, 333, 225, 34, 27, 301]}
{"line_number": 117, "line_type": "generated", "code": "\n     *         as an <code>long</code>.\n     * @since 1.4\n     */\n    public static long binomial(int n, int k) {\n        if (n < 0 || k < 0 || k > n", "entropy": 0.19873046875, "is_bug_line": false, "sus_score": 0.4451136887073517, "per_token_entropy": [0.337646484375, 0.68701171875, 0.6142578125, 0.2318115234375, 1.044921875, 0.94970703125, 0.12493896484375, 0.0010156631469726562, 1.0634765625, 0.0081329345703125, 0.000507354736328125, 0.1773681640625, 0.1170654296875, 0.475341796875, 0.044952392578125, 0.417236328125, 0.0029850006103515625, 0.10888671875, 0.0009374618530273438, 0.60791015625, 0.0703125, 0.057098388671875, 0.033050537109375, 0.02740478515625, 0.00244140625, 0.0189056396484375, 0.0009560585021972656, 0.064697265625, 0.736328125, 0.11566162109375, 5.269050598144531e-05, 0.0018892288208007812, 0.005870819091796875, 8.344650268554688e-06, 0.002285003662109375, 0.035308837890625, 0.201171875, 0.2802734375, 0.044464111328125, 0.5751953125, 0.06585693359375, 0.274658203125, 0.00010442733764648438, 0.389892578125, 0.0290985107421875, 0.0718994140625, 0.0012254714965820312, 4.5299530029296875e-06, 0.028076171875, 0.1846923828125, 0.0006074905395507812, 0.0004940032958984375], "tokens": [275, 319, 263, 619, 600, 333, 687, 48, 3222, 377, 687, 4503, 275, 319, 477, 8119, 225, 35, 32, 38, 275, 569, 284, 562, 907, 1946, 7395, 12563, 26, 410, 310, 30, 629, 831, 27, 301, 291, 415, 308, 96, 333, 225, 34, 1276, 831, 333, 225, 34, 1276, 831, 848, 310]}
{"line_number": 113, "line_type": "original", "code": "            ret = addAndCheck(b, a, msg);", "entropy": 2.9609375, "is_bug_line": false, "sus_score": 0.4396044909954071, "per_token_entropy": [5.59375, 10.78125, 0.258544921875, 5.19921875, 0.0182037353515625, 0.0036296844482421875, 0.033294677734375, 8.5, 0.6083984375, 1.8828125, 2.099609375, 3.478515625, 0.0323486328125], "tokens": [1468, 2152, 280, 1015, 2185, 2140, 26, 84, 30, 312, 30, 3124, 293]}
{"line_number": 113, "line_type": "generated", "code": "\n     * @param k the size of the subsets to be counted\n     * @return <code>n choose k</code>\n     * @throws IllegalArgumentException if preconditions are not met\n     * @throws ArithmeticException if the result is too large to be", "entropy": 0.105224609375, "is_bug_line": false, "sus_score": 0.4396044909954071, "per_token_entropy": [0.474853515625, 0.06280517578125, 0.07568359375, 0.0036411285400390625, 0.0003879070281982422, 0.0032482147216796875, 0.73486328125, 0.0002008676528930664, 0.00582122802734375, 0.01042938232421875, 0.0010528564453125, 0.01187896728515625, 0.007442474365234375, 0.01340484619140625, 0.3017578125, 0.0007886886596679688, 0.0216827392578125, 0.017547607421875, 0.399169921875, 0.025909423828125, 0.0102081298828125, 0.032470703125, 0.431640625, 0.00024700164794921875, 0.005077362060546875, 0.00021314620971679688, 0.0810546875, 0.036529541015625, 0.0065460205078125, 0.0203704833984375, 0.06524658203125, 0.155029296875, 0.076904296875, 0.44287109375, 0.0164031982421875, 0.03619384765625, 0.306640625, 0.0102081298828125, 0.362548828125, 0.06451416015625, 0.02545166015625, 0.324951171875, 0.009368896484375, 0.0005140304565429688, 0.0782470703125, 0.1683349609375, 0.053680419921875, 0.392333984375, 0.0178070068359375, 0.0009822845458984375, 0.031707763671875, 0.037261962890625], "tokens": [275, 319, 477, 753, 831, 322, 1334, 432, 322, 1361, 2021, 372, 526, 44644, 275, 319, 477, 601, 333, 687, 48, 96, 9173, 831, 377, 687, 48, 275, 319, 477, 5117, 12137, 415, 1406, 8425, 884, 646, 3279, 275, 319, 477, 5117, 47721, 984, 415, 322, 1056, 438, 5133, 7622, 372, 526]}
{"line_number": 178, "line_type": "original", "code": "        if ((n == k) || (k == 0)) {", "entropy": 0.8388671875, "is_bug_line": false, "sus_score": 0.43390002846717834, "per_token_entropy": [3.982421875, 2.38671875, 2.228515625, 1.759765625, 0.810546875, 0.7060546875, 0.00748443603515625, 0.01554107666015625, 0.0335693359375, 0.1741943359375, 0.0090484619140625, 0.018646240234375, 0.309326171875, 0.07611083984375, 0.066650390625], "tokens": [351, 415, 1833, 96, 610, 831, 27, 1276, 308, 93, 610, 225, 34, 490, 301]}
{"line_number": 178, "line_type": "generated", "code": "\n        return 1;\n    }\n\n    /**\n     * Returns a <code>double</code> representation of the <a\n     * href=\"http://mathworld.wolfram.com/BinomialCoefficient.html\"> Binomial\n     * Coefficient", "entropy": 0.1405029296875, "is_bug_line": false, "sus_score": 0.43390002846717834, "per_token_entropy": [1.0341796875, 0.448974609375, 0.58349609375, 0.0161895751953125, 0.64111328125, 0.08404541015625, 0.01250457763671875, 1.1181640625, 0.200439453125, 0.038238525390625, 0.0004968643188476562, 0.39208984375, 1.3994140625, 0.346435546875, 0.02264404296875, 0.000675201416015625, 0.33642578125, 0.00830078125, 9.85860824584961e-05, 0.001422882080078125, 0.103271484375, 0.0010528564453125, 0.0192413330078125, 0.131591796875, 0.00524139404296875, 0.007965087890625, 0.0001971721649169922, 0.0010232925415039062, 0.0026950836181640625, 0.00038552284240722656, 0.00022673606872558594, 0.000919342041015625, 0.00014507770538330078, 1.633167266845703e-05, 5.9604644775390625e-05, 1.3113021850585938e-06, 3.421306610107422e-05, 0.0003573894500732422, 4.208087921142578e-05, 0.00021004676818847656, 0.338623046875, 2.193450927734375e-05, 0.00415802001953125, 0.00019466876983642578, 1.811981201171875e-05, 0.0005564689636230469, 0.0046539306640625, 5.1975250244140625e-05, 0.0007948875427246094, 4.57763671875e-05, 0.00086212158203125, 7.95125961303711e-05], "tokens": [291, 442, 225, 35, 45, 284, 320, 446, 1022, 275, 319, 3759, 312, 333, 687, 48, 2627, 377, 687, 48, 10293, 432, 322, 333, 83, 275, 319, 976, 347, 525, 555, 3812, 5860, 32, 105, 362, 43579, 32, 508, 33, 9074, 12563, 8973, 32, 916, 413, 24470, 12563, 275, 319, 5612, 6605]}
{"line_number": 134, "line_type": "original", "code": "                if (a <= Long.MAX_VALUE - b) {", "entropy": 1.837890625, "is_bug_line": false, "sus_score": 0.4332217574119568, "per_token_entropy": [7.16015625, 2.513671875, 0.253662109375, 6.0390625, 2.6484375, 3.677734375, 0.0025005340576171875, 0.004467010498046875, 0.0014944076538085938, 0.0006232261657714844, 2.962890625, 0.367431640625, 0.07379150390625, 0.0224151611328125], "tokens": [2071, 415, 308, 83, 2511, 6359, 32, 3459, 81, 5975, 429, 323, 27, 301]}
{"line_number": 134, "line_type": "generated", "code": "\n        long result = 1;\n        for (int i = n - k + 1; i <= n; i++) {\n            result *= i;\n        }\n        for (int i = 2; i <= k; i++) {\n            result", "entropy": 0.15478515625, "is_bug_line": false, "sus_score": 0.4332217574119568, "per_token_entropy": [0.76904296875, 1.6318359375, 0.787109375, 0.0814208984375, 0.84326171875, 0.00576019287109375, 0.0716552734375, 0.11724853515625, 0.486328125, 0.0276031494140625, 0.25439453125, 0.038330078125, 0.01016998291015625, 0.54443359375, 0.0143280029296875, 0.0056304931640625, 0.0027027130126953125, 0.0004322528839111328, 0.0001798868179321289, 0.254150390625, 0.004642486572265625, 0.002429962158203125, 0.0016040802001953125, 0.00745391845703125, 0.052520751953125, 0.006927490234375, 0.00848388671875, 0.0709228515625, 0.1248779296875, 0.2320556640625, 0.001628875732421875, 0.0004527568817138672, 0.6259765625, 0.0021381378173828125, 0.40185546875, 0.26416015625, 0.000530242919921875, 0.125244140625, 0.034332275390625, 0.001312255859375, 0.0007672309875488281, 0.075439453125, 0.0003361701965332031, 0.0005054473876953125, 2.47955322265625e-05, 0.0004374980926513672, 2.086162567138672e-05, 0.0010080337524414062, 0.0004177093505859375, 0.0014181137084960938, 0.03314208984375, 0.0205841064453125], "tokens": [291, 1946, 1056, 280, 225, 35, 45, 291, 436, 308, 410, 595, 280, 310, 429, 831, 474, 225, 35, 45, 595, 2511, 310, 45, 595, 1987, 301, 324, 1056, 10439, 595, 45, 291, 320, 291, 436, 308, 410, 595, 280, 225, 36, 45, 595, 2511, 831, 45, 595, 1987, 301, 324, 1056]}
{"line_number": 236, "line_type": "original", "code": "        return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);", "entropy": 1.1796875, "is_bug_line": true, "sus_score": 0.43280303478240967, "per_token_entropy": [4.3046875, 1.0458984375, 1.7568359375, 0.0194854736328125, 8.6640625, 0.051727294921875, 2.337890625, 0.012786865234375, 1.5625, 0.0465087890625, 4.46484375, 0.1353759765625, 0.049224853515625, 0.59814453125, 0.47705078125, 0.087646484375, 0.7275390625, 0.52880859375, 2.041015625, 0.1651611328125, 0.1392822265625, 0.1370849609375, 0.0012540817260742188, 0.025146484375, 0.10968017578125], "tokens": [351, 442, 4175, 32, 9121, 26, 5717, 32, 2832, 26, 1771, 12563, 8973, 1335, 26, 96, 30, 831, 490, 474, 225, 34, 32, 39, 293]}
{"line_number": 236, "line_type": "generated", "code": "\n    }\n    \n    /**\n     * Returns the natural <code>log</code> of the <a\n     * href=\"http://mathworld.wolfram.com/BinomialCoefficient.html\"> Binomial\n     * Coefficient</a>, \"<code", "entropy": 0.11529541015625, "is_bug_line": true, "sus_score": 0.43280303478240967, "per_token_entropy": [0.89892578125, 0.00424957275390625, 1.181640625, 0.181396484375, 0.025909423828125, 0.0001652240753173828, 0.256591796875, 0.281005859375, 1.5556640625, 1.060546875, 0.0496826171875, 0.00037670135498046875, 0.008514404296875, 0.04644775390625, 0.00010347366333007812, 0.00537872314453125, 0.01509857177734375, 0.0215301513671875, 0.190673828125, 0.01296234130859375, 0.00577545166015625, 5.5789947509765625e-05, 0.00017082691192626953, 0.002979278564453125, 0.00017833709716796875, 0.00012946128845214844, 0.0009555816650390625, 0.0001131296157836914, 1.0967254638671875e-05, 6.663799285888672e-05, 1.430511474609375e-06, 2.3484230041503906e-05, 0.0001347064971923828, 2.1457672119140625e-05, 0.00030612945556640625, 0.1580810546875, 7.748603820800781e-06, 0.0032024383544921875, 0.0005192756652832031, 1.3113021850585938e-05, 0.0005025863647460938, 0.003658294677734375, 3.266334533691406e-05, 0.0006356239318847656, 2.86102294921875e-06, 0.00112152099609375, 2.1457672119140625e-05, 0.0014066696166992188, 7.045269012451172e-05, 0.01038360595703125, 0.00701904296875, 0.00020062923431396484], "tokens": [284, 320, 2170, 1022, 275, 319, 3759, 322, 19844, 333, 687, 48, 751, 377, 687, 48, 432, 322, 333, 83, 275, 319, 976, 347, 525, 555, 3812, 5860, 32, 105, 362, 43579, 32, 508, 33, 9074, 12563, 8973, 32, 916, 413, 24470, 12563, 275, 319, 5612, 6605, 377, 83, 2717, 3778, 687]}
{"line_number": 269, "line_type": "original", "code": "        if ((k == 1) || (k == n - 1)) {", "entropy": 1.361328125, "is_bug_line": true, "sus_score": 0.4280746281147003, "per_token_entropy": [2.748046875, 2.390625, 2.162109375, 6.23046875, 1.376953125, 0.9140625, 1.853515625, 0.1884765625, 0.7138671875, 0.1396484375, 0.290771484375, 0.04901123046875, 2.8515625, 2.23828125, 0.025970458984375, 0.026214599609375, 0.0682373046875, 0.225830078125], "tokens": [351, 415, 1833, 93, 610, 225, 35, 27, 1276, 308, 93, 610, 310, 429, 225, 35, 490, 301]}
{"line_number": 269, "line_type": "generated", "code": "\n    }\n    \n    /**\n     * Returns true iff the first argument is strictly less than the second\n     * double value.\n     * \n     * @param x first value\n     * @param y second value\n     * @return true if the first value is less than the", "entropy": 0.2568359375, "is_bug_line": true, "sus_score": 0.4280746281147003, "per_token_entropy": [1.287109375, 0.234619140625, 0.70751953125, 0.1485595703125, 0.0298614501953125, 0.0003757476806640625, 0.1976318359375, 1.39453125, 0.2015380859375, 0.87890625, 1.146484375, 0.00734710693359375, 0.00045490264892578125, 2.166015625, 0.1282958984375, 0.00020694732666015625, 0.01409912109375, 0.0034389495849609375, 0.047027587890625, 0.00012350082397460938, 0.07012939453125, 0.0631103515625, 0.350341796875, 0.71923828125, 0.0186004638671875, 0.31298828125, 0.00015461444854736328, 0.054443359375, 0.0034332275390625, 0.10150146484375, 0.1822509765625, 0.01508331298828125, 0.0181427001953125, 1.8715858459472656e-05, 0.0016794204711914062, 0.00037217140197753906, 0.00838470458984375, 0.0136260986328125, 0.0023097991943359375, 0.066650390625, 0.00290679931640625, 0.0028057098388671875, 0.004344940185546875, 0.36181640625, 0.049774169921875, 0.397705078125, 0.07513427734375, 0.36767578125, 0.00165557861328125, 1.4619140625, 0.00904083251953125, 0.02593994140625], "tokens": [284, 320, 2170, 1022, 275, 319, 3759, 861, 44778, 322, 1932, 2793, 438, 33220, 6679, 2784, 322, 3100, 275, 319, 2064, 786, 32, 275, 319, 5384, 319, 477, 753, 816, 1932, 786, 275, 319, 477, 753, 533, 3100, 786, 275, 319, 477, 601, 861, 415, 322, 1932, 786, 438, 6679, 2784, 322]}
{"line_number": 174, "line_type": "original", "code": "        if (n < 0) {", "entropy": 1.10546875, "is_bug_line": false, "sus_score": 0.4167631268501282, "per_token_entropy": [4.5859375, 2.478515625, 0.48193359375, 0.892578125, 0.1324462890625, 1.1787109375, 0.00511932373046875, 0.1861572265625, 0.01483154296875], "tokens": [351, 415, 308, 96, 333, 225, 34, 27, 301]}
{"line_number": 174, "line_type": "generated", "code": "\n     * <code> < Long.MAX_VALUE</code> is 66. If the computed value exceeds\n     * <code>Long.MAX_VALUE</code> an <code>ArithMeticException</code> is\n     *", "entropy": 0.144775390625, "is_bug_line": false, "sus_score": 0.4167631268501282, "per_token_entropy": [1.6650390625, 0.1439208984375, 0.810546875, 0.6171875, 0.0294189453125, 0.92578125, 1.37890625, 0.0011005401611328125, 0.0016765594482421875, 0.00020205974578857422, 0.0014896392822265625, 0.0205841064453125, 0.0008149147033691406, 0.004718780517578125, 0.01110076904296875, 0.02899169921875, 0.1529541015625, 0.0653076171875, 0.01971435546875, 0.072265625, 0.004779815673828125, 0.01410675048828125, 0.0179290771484375, 0.0204925537109375, 0.055877685546875, 0.0003528594970703125, 0.0167236328125, 0.0014743804931640625, 0.00037670135498046875, 1.24609375, 0.0002636909484863281, 0.0002601146697998047, 0.0003101825714111328, 0.00037217140197753906, 0.0017910003662109375, 7.402896881103516e-05, 0.03839111328125, 0.06512451171875, 0.00554656982421875, 0.0008530616760253906, 8.273124694824219e-05, 0.038177490234375, 2.0265579223632812e-06, 0.0010137557983398438, 5.900859832763672e-05, 0.0001533031463623047, 0.0008783340454101562, 0.0018930435180664062, 0.0002391338348388672, 0.004024505615234375, 0.03802490234375, 0.0006852149963378906], "tokens": [275, 319, 333, 687, 48, 333, 6359, 32, 3459, 81, 5975, 377, 687, 48, 438, 225, 40, 40, 32, 1670, 322, 15279, 786, 35308, 275, 319, 333, 687, 48, 3952, 32, 3459, 81, 5975, 377, 687, 48, 600, 333, 687, 48, 3421, 450, 3358, 295, 984, 377, 687, 48, 438, 275, 319]}
{"line_number": 295, "line_type": "original", "code": "            logSum -= Math.log((double)i);", "entropy": 1.5361328125, "is_bug_line": false, "sus_score": 0.39800623059272766, "per_token_entropy": [5.1328125, 6.51171875, 1.2451171875, 4.39453125, 0.281494140625, 0.00824737548828125, 0.053955078125, 0.34814453125, 0.0159454345703125, 0.0198822021484375, 0.398681640625, 0.0247039794921875], "tokens": [1468, 1245, 4934, 5912, 4175, 32, 751, 1162, 2627, 27, 91, 293]}
{"line_number": 295, "line_type": "generated", "code": "\n        }\n        return true;\n    }\n\n    /**\n     * Returns the <a href=\"http://mathworld.wolfram.com/HyperbolicSine.html\">\n     * hyperbolic sine</a> of x.\n     * \n    ", "entropy": 0.09124755859375, "is_bug_line": false, "sus_score": 0.39800623059272766, "per_token_entropy": [0.1331787109375, 0.0074005126953125, 0.1146240234375, 0.0030193328857421875, 0.004413604736328125, 0.000812530517578125, 0.07025146484375, 0.0006775856018066406, 0.97412109375, 0.03155517578125, 0.01351165771484375, 0.0002994537353515625, 0.25439453125, 1.134765625, 0.9326171875, 0.0027217864990234375, 0.055633544921875, 0.08221435546875, 0.0020656585693359375, 0.0001201629638671875, 0.0210418701171875, 0.00010442733764648438, 3.4570693969726562e-06, 0.0002269744873046875, 3.4332275390625e-05, 1.6570091247558594e-05, 0.0012960433959960938, 3.337860107421875e-05, 0.0003190040588378906, 0.6318359375, 2.968311309814453e-05, -0.0, 0.06585693359375, 0.00014781951904296875, 3.5643577575683594e-05, 0.0009369850158691406, 0.0379638671875, 1.704692840576172e-05, 0.002521514892578125, 0.00127410888671875, 2.2649765014648438e-06, 0.01129150390625, 5.602836608886719e-05, 0.00513458251953125, 7.128715515136719e-05, 0.0020294189453125, 0.005687713623046875, 0.066650390625, 0.0179901123046875, 0.01366424560546875, 0.0002570152282714844, 0.040985107421875], "tokens": [291, 320, 291, 442, 861, 45, 284, 320, 446, 1022, 275, 319, 3759, 322, 333, 83, 976, 347, 525, 555, 3812, 5860, 32, 105, 362, 43579, 32, 508, 33, 20562, 84, 2073, 48287, 32, 916, 413, 275, 319, 15223, 84, 2073, 309, 482, 377, 83, 48, 432, 816, 32, 275, 319, 5384]}
{"line_number": 170, "line_type": "original", "code": "        if (n < k) {", "entropy": 0.97998046875, "is_bug_line": false, "sus_score": 0.39397168159484863, "per_token_entropy": [4.1640625, 1.1494140625, 0.391357421875, 0.93115234375, 0.095703125, 0.978515625, 0.09930419921875, 0.03143310546875], "tokens": [351, 415, 308, 96, 333, 831, 27, 301]}
{"line_number": 170, "line_type": "generated", "code": "\n     * <li> <code>0 <= k <= n </code> (otherwise\n     * <code>IllegalArgumentException</code> is thrown)</li>\n     * </ul></p>\n     * \n     * @param n the size of the set\n    ", "entropy": 0.059356689453125, "is_bug_line": false, "sus_score": 0.39397168159484863, "per_token_entropy": [0.66357421875, 0.1251220703125, 0.861328125, 0.08489990234375, 0.039398193359375, 0.35595703125, 0.00531005859375, 0.00738525390625, 0.10723876953125, 0.030426025390625, 0.006237030029296875, 0.016845703125, 0.0008287429809570312, 0.0309295654296875, 8.153915405273438e-05, 0.05938720703125, 0.01331329345703125, 0.0033588409423828125, 0.1494140625, 0.0001550912857055664, 0.00506591796875, 0.0008363723754882812, 7.37905502319336e-05, 0.007015228271484375, 0.00032973289489746094, 2.5987625122070312e-05, 0.00018918514251708984, 0.0015344619750976562, 0.00037550926208496094, 0.006526947021484375, 0.00019311904907226562, 0.0170745849609375, 0.042999267578125, 0.0028438568115234375, 0.206298828125, 0.0015726089477539062, 0.0240325927734375, 0.0002040863037109375, 0.006839752197265625, 0.03985595703125, 0.0007390975952148438, 0.1123046875, 0.0003230571746826172, 0.0196685791015625, 0.00200653076171875, 0.0017995834350585938, 0.01491546630859375, 0.001689910888671875, 8.487701416015625e-05, 0.0002560615539550781, 0.000370025634765625, 0.007572174072265625], "tokens": [275, 319, 333, 374, 48, 333, 687, 48, 34, 2511, 831, 2511, 310, 576, 687, 48, 308, 31873, 275, 319, 333, 687, 48, 25907, 377, 687, 48, 438, 12163, 2874, 374, 48, 275, 319, 576, 338, 855, 98, 48, 275, 319, 5384, 319, 477, 753, 310, 322, 1334, 432, 322, 739, 275]}
{"line_number": 290, "line_type": "original", "code": "            logSum += Math.log((double)i);", "entropy": 1.34375, "is_bug_line": false, "sus_score": 0.3921825885772705, "per_token_entropy": [4.76171875, 6.90625, 2.212890625, 0.63916015625, 0.2025146484375, 0.0093994140625, 0.07220458984375, 0.890625, 0.033477783203125, 0.0462646484375, 0.329833984375, 0.0272216796875], "tokens": [1468, 1245, 4934, 1454, 4175, 32, 751, 1162, 2627, 27, 91, 293]}
{"line_number": 290, "line_type": "generated", "code": "\n        }\n        for (int i = 0; i < x.length; i++) {\n            if (!equals(x[i], y[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     *", "entropy": 0.046661376953125, "is_bug_line": false, "sus_score": 0.3921825885772705, "per_token_entropy": [0.12066650390625, 0.00824737548828125, 0.2447509765625, 0.1593017578125, 0.018341064453125, 0.0011997222900390625, 0.0089263916015625, 0.0176544189453125, 0.06170654296875, 0.001308441162109375, 0.0181427001953125, 0.0009584426879882812, 0.01214599609375, 0.0056610107421875, 0.0001474618911743164, 0.0004627704620361328, 0.00269317626953125, 0.0595703125, 0.00551605224609375, 0.01134490966796875, 0.126953125, 0.011138916015625, 0.059356689453125, 0.1925048828125, 0.0020694732666015625, 0.0019931793212890625, 0.00165557861328125, 0.0009112358093261719, 0.00042247772216796875, 0.022003173828125, 7.331371307373047e-05, 0.0004413127899169922, 0.0007143020629882812, 0.021484375, 0.071533203125, 0.0006918907165527344, 0.0002117156982421875, 0.0013294219970703125, 0.090087890625, 0.0004978179931640625, 0.028045654296875, 0.0003826618194580078, 0.05096435546875, 0.0010976791381835938, 0.0021038055419921875, 0.0005869865417480469, 0.062225341796875, 0.0006847381591796875, 0.87744140625, 0.026519775390625, 0.0109405517578125, 0.00012969970703125], "tokens": [291, 320, 291, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 816, 32, 1322, 45, 595, 1987, 301, 324, 415, 1429, 3574, 26, 106, 77, 91, 614, 533, 77, 91, 5259, 301, 400, 442, 901, 45, 324, 320, 291, 320, 291, 442, 861, 45, 284, 320, 446, 1022, 275, 319]}
{"line_number": 111, "line_type": "original", "code": "        if (a > b) {", "entropy": 1.8212890625, "is_bug_line": false, "sus_score": 0.38387444615364075, "per_token_entropy": [2.939453125, 0.84765625, 0.1658935546875, 7.7421875, 2.40234375, 0.41064453125, 0.01593017578125, 0.04290771484375], "tokens": [351, 415, 308, 83, 848, 323, 27, 301]}
{"line_number": 111, "line_type": "generated", "code": "\n     * \n     * @param n the size of the set\n     * @param k the size of the subsets to be counted\n     * @return <code>n! / (k! * (n - k)!) </code>\n     * @", "entropy": 0.119140625, "is_bug_line": false, "sus_score": 0.38387444615364075, "per_token_entropy": [0.71875, 0.09259033203125, 1.1630859375, 0.0030193328857421875, 0.0621337890625, 0.02410888671875, 0.0007910728454589844, 0.391357421875, 0.138671875, 0.0015125274658203125, 0.0008029937744140625, 0.0045166015625, 0.07464599609375, 1.3113021850585938e-05, 0.0003032684326171875, 0.00019121170043945312, 4.649162292480469e-05, 0.0008974075317382812, 0.3671875, 8.690357208251953e-05, 0.004123687744140625, 0.00853729248046875, 0.0014181137084960938, 0.004150390625, 0.005771636962890625, 0.008819580078125, 0.004993438720703125, 0.0006232261657714844, 0.007587432861328125, 0.01398468017578125, 0.256103515625, 0.0232086181640625, 0.0079345703125, 0.02850341796875, 0.85498046875, 0.00014066696166992188, 0.00634002685546875, 0.1314697265625, 0.10833740234375, 0.34130859375, 0.0013561248779296875, 0.0004611015319824219, 0.5302734375, 0.00643157958984375, 0.494140625, 0.026885986328125, 0.049163818359375, 0.0004374980926513672, 0.15966796875, 0.042694091796875, 0.007602691650390625, 0.01351165771484375], "tokens": [275, 319, 5384, 319, 477, 753, 310, 322, 1334, 432, 322, 739, 275, 319, 477, 753, 831, 322, 1334, 432, 322, 1361, 2021, 372, 526, 44644, 275, 319, 477, 601, 333, 687, 48, 96, 19, 517, 308, 93, 19, 319, 308, 96, 429, 831, 27, 18728, 576, 687, 48, 275, 319, 477]}
{"line_number": 286, "line_type": "original", "code": "        double logSum = 0;", "entropy": 3.36328125, "is_bug_line": true, "sus_score": 0.36799538135528564, "per_token_entropy": [3.630859375, 11.8359375, 8.4609375, 1.671875, 0.0963134765625, 0.3056640625, 0.022216796875, 0.87841796875], "tokens": [351, 2064, 1245, 4934, 280, 225, 34, 45]}
{"line_number": 286, "line_type": "generated", "code": "\n            return (x == null) && (y == null);\n        }\n        if (x.length!= y.length) {", "entropy": 0.1451416015625, "is_bug_line": true, "sus_score": 0.36799538135528564, "per_token_entropy": [0.89697265625, 0.1094970703125, 1.060546875, 0.005619049072265625, 0.01470947265625, 0.91796875, 0.1832275390625, 0.048858642578125, 0.0013227462768554688, 0.0024585723876953125, 0.0009021759033203125, 0.0010223388671875, 0.004009246826171875, 0.11346435546875, 0.000545501708984375, 0.476806640625, 0.055267333984375, 0.0060272216796875, 0.0018796920776367188, 0.0025577545166015625, 0.00018465518951416016, 0.00574493408203125, 0.0007290840148925781, 3.349781036376953e-05, 8.988380432128906e-05, 0.0016183853149414062, 0.007633209228515625], "tokens": [324, 442, 308, 106, 610, 744, 27, 962, 308, 107, 610, 744, 293, 291, 320, 291, 415, 308, 106, 32, 1322, 863, 533, 32, 1322, 27, 301]}
{"line_number": 294, "line_type": "original", "code": "        for (int i = 2; i <= n - k; i++) {", "entropy": 1.4716796875, "is_bug_line": false, "sus_score": 0.3654778003692627, "per_token_entropy": [3.974609375, 5.609375, 0.033905029296875, 0.033538818359375, 0.1253662109375, 0.017059326171875, 0.055877685546875, 7.01953125, 0.06622314453125, 0.02130126953125, 1.587890625, 0.88720703125, 4.203125, 2.044921875, 0.361328125, 0.318359375, 0.07196044921875, 0.059417724609375], "tokens": [351, 436, 308, 410, 595, 280, 225, 36, 45, 595, 2511, 310, 429, 831, 45, 595, 1987, 301]}
{"line_number": 294, "line_type": "generated", "code": "\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Returns the value of the first argument, provided that it is not null.\n     * If it is null, the value of the second argument is returned, provided\n     * that it is not", "entropy": 0.291748046875, "is_bug_line": false, "sus_score": 0.3654778003692627, "per_token_entropy": [0.329833984375, 0.02783203125, 0.10247802734375, 0.002166748046875, 0.08416748046875, 0.0018100738525390625, 0.003879547119140625, 0.0008864402770996094, 0.10394287109375, 0.0009255409240722656, 0.83349609375, 0.02520751953125, 0.01549530029296875, 0.00018227100372314453, 0.2301025390625, 1.1669921875, 2.419921875, 0.11907958984375, 0.58056640625, 0.20458984375, 0.0155029296875, 0.54833984375, 0.482666015625, 0.08447265625, 0.53125, 0.0833740234375, 0.6396484375, 0.48291015625, 0.11370849609375, 0.340576171875, 0.0010213851928710938, 0.62548828125, 0.281005859375, 0.0006613731384277344, 0.2122802734375, 0.002193450927734375, 0.384033203125, 1.0703125, 0.06317138671875, 0.10028076171875, 0.0002758502960205078, 0.01505279541015625, 0.00017833709716796875, 0.005908966064453125, 1.544921875, 0.10137939453125, 0.328369140625, 8.177757263183594e-05, 0.0106658935546875, 0.8232421875, 0.001323699951171875, 0.0257568359375], "tokens": [324, 320, 291, 320, 291, 442, 861, 45, 284, 320, 446, 1022, 275, 319, 3759, 322, 786, 432, 322, 1932, 2793, 30, 3943, 688, 561, 438, 646, 744, 32, 275, 319, 1670, 561, 438, 744, 30, 322, 786, 432, 322, 3100, 2793, 438, 4717, 30, 3943, 275, 319, 688, 561, 438, 646]}
{"line_number": 141, "line_type": "original", "code": "        return ret;", "entropy": 2.044921875, "is_bug_line": false, "sus_score": 0.3651137351989746, "per_token_entropy": [2.80859375, 0.5859375, 4.74609375, 0.0374755859375], "tokens": [351, 442, 2152, 45]}
{"line_number": 141, "line_type": "generated", "code": "\n        return result;\n    }\n    \n    /**\n     * Returns an exact representation of the <a\n     * href=\"http://mathworld.wolfram.com/BinomialCoefficient.html\"> Binomial\n     * Coefficient</a>, \"<code>n", "entropy": 0.07916259765625, "is_bug_line": false, "sus_score": 0.3651137351989746, "per_token_entropy": [1.013671875, 0.52880859375, 0.188232421875, 0.01468658447265625, 0.05792236328125, 0.0010137557983398438, 0.496337890625, 0.155029296875, 0.0292816162109375, 0.0001862049102783203, 0.59228515625, 0.7138671875, 0.0926513671875, 0.003192901611328125, 0.0005974769592285156, 0.00774383544921875, 0.091064453125, 0.007053375244140625, 0.007114410400390625, 0.00021982192993164062, 0.0003056526184082031, 0.00247955322265625, 0.0002830028533935547, 0.00046515464782714844, 0.0006661415100097656, 0.00013840198516845703, 1.0728836059570312e-05, 4.7206878662109375e-05, 2.9206275939941406e-05, 4.9591064453125e-05, 0.00046563148498535156, 6.222724914550781e-05, 0.0002760887145996094, 0.04620361328125, 3.218650817871094e-05, 0.0005474090576171875, 5.829334259033203e-05, 2.9802322387695312e-05, 0.000934600830078125, 0.0124359130859375, 6.711483001708984e-05, 0.0005617141723632812, 6.67572021484375e-06, 0.0010423660278320312, 1.5020370483398438e-05, 0.0030422210693359375, 0.00012028217315673828, 0.0263214111328125, 0.01427459716796875, 0.00115203857421875, 0.0011587142944335938, 0.0017042160034179688], "tokens": [291, 442, 1056, 45, 284, 320, 2170, 1022, 275, 319, 3759, 600, 7153, 10293, 432, 322, 333, 83, 275, 319, 976, 347, 525, 555, 3812, 5860, 32, 105, 362, 43579, 32, 508, 33, 9074, 12563, 8973, 32, 916, 413, 24470, 12563, 275, 319, 5612, 6605, 377, 83, 2717, 3778, 687, 48, 96]}
