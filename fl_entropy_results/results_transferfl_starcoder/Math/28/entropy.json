{"line_number": 121, "line_type": "original", "code": "                        int column = i + tableau.getArtificialVariableOffset();", "entropy": 2.69921875, "is_bug_line": false, "sus_score": 0.5735412240028381, "per_token_entropy": [9.25, 4.65234375, 3.4765625, 0.146728515625, 8.328125, 3.0546875, 0.394287109375, 0.0006399154663085938, 0.002086639404296875, 5.87109375, 2.83984375, 0.0009760856628417969, 1.6298828125, 0.81884765625, 0.044708251953125], "tokens": [6797, 629, 2623, 280, 595, 474, 1858, 4452, 32, 371, 5271, 31251, 3818, 3457, 473]}
{"line_number": 121, "line_type": "generated", "code": "\n        }\n        pivot(tableau, pivotRow, pivotCol);\n    }\n\n    /**\n     * Pivots the tableau using the given pivot column and row.\n     * @param tableau simple tableau for the problem\n     * @param pivotRow", "entropy": 0.248046875, "is_bug_line": false, "sus_score": 0.5735412240028381, "per_token_entropy": [0.346923828125, 0.017791748046875, 1.4453125, 1.013671875, 0.07623291015625, 0.0828857421875, 7.152557373046875e-07, 0.0022258758544921875, 0.003025054931640625, 0.669921875, 0.004589080810546875, 0.001247406005859375, 0.0005030632019042969, 0.013916015625, 0.4052734375, 0.004024505615234375, 0.2235107421875, 0.04351806640625, 0.039703369140625, 5.2094459533691406e-05, 2.1015625, 0.00919342041015625, 0.155517578125, 0.1356201171875, 0.9482421875, 0.0014781951904296875, 0.99267578125, 0.2071533203125, 0.986328125, 0.402099609375, 1.55078125, 0.08251953125, 0.1744384765625, 0.06805419921875, 0.0537109375, 0.0005645751953125, 0.179443359375, 0.00034809112548828125, 0.0186614990234375, 0.00010097026824951172, 0.2138671875, 0.0020236968994140625, 0.0008063316345214844, 0.1021728515625, 0.0008444786071777344, 0.0018281936645507812, 0.00928497314453125, 0.003284454345703125, 0.0007123947143554688, 0.0004630088806152344, 0.0941162109375, 0.007633209228515625], "tokens": [291, 320, 291, 20991, 26, 1274, 4452, 30, 20991, 2352, 30, 20991, 871, 293, 284, 320, 446, 1022, 275, 319, 447, 11164, 101, 322, 1858, 4452, 1471, 322, 2702, 20991, 2623, 461, 2698, 32, 275, 319, 477, 753, 1858, 4452, 4281, 1858, 4452, 436, 322, 3708, 275, 319, 477, 753, 20991, 2352]}
{"line_number": 122, "line_type": "original", "code": "                        final double entry = tableau.getEntry(row, column);", "entropy": 1.9033203125, "is_bug_line": false, "sus_score": 0.5725703835487366, "per_token_entropy": [10.0625, 3.5703125, 0.2763671875, 2.9140625, 0.0831298828125, 0.032806396484375, 2.6702880859375e-05, 0.0017080307006835938, 0.0156097412109375, 0.00047850608825683594, 7.91015625, 0.0196533203125, 1.7490234375, 0.008148193359375], "tokens": [6797, 1158, 2064, 3414, 280, 1858, 4452, 32, 48895, 26, 643, 30, 2623, 293]}
{"line_number": 122, "line_type": "generated", "code": "\n        tableau.pivot(pivotRow, pivotCol);\n    }\n\n    /**\n     * Returns the solution to the linear programming problem.\n     * @return solution to the linear programming problem\n     * @throws MaxCountExceededException if the maximal iteration count has", "entropy": 0.31396484375, "is_bug_line": false, "sus_score": 0.5725703835487366, "per_token_entropy": [0.61083984375, 1.43359375, 5.459785461425781e-05, 0.01255035400390625, 0.225341796875, 0.0066680908203125, 0.003414154052734375, 0.29296875, 0.006862640380859375, 0.0034389495849609375, 0.0014142990112304688, 0.03167724609375, 0.4287109375, 0.003993988037109375, 0.497314453125, 0.0718994140625, 0.09539794921875, 4.696846008300781e-05, 1.8251953125, 0.392822265625, 2.98046875, 0.74462890625, 0.05450439453125, 0.71435546875, 0.390625, 0.036224365234375, 0.6640625, 0.052001953125, 0.003429412841796875, 0.283203125, 0.6171875, 1.48046875, 0.1485595703125, 0.02239990234375, 0.045379638671875, 0.002338409423828125, 0.003307342529296875, 0.08636474609375, 0.2626953125, 0.006000518798828125, 0.03778076171875, 1.4775390625, 0.0002377033233642578, 2.2411346435546875e-05, 0.0002162456512451172, 0.009979248046875, 0.02056884765625, 0.1026611328125, 0.0012035369873046875, 0.08587646484375, 0.0016040802001953125, 0.051544189453125], "tokens": [291, 1858, 4452, 32, 23444, 26, 23444, 2352, 30, 20991, 871, 293, 284, 320, 446, 1022, 275, 319, 3759, 322, 5295, 372, 322, 10081, 16031, 3708, 32, 275, 319, 477, 601, 5295, 372, 322, 10081, 16031, 3708, 275, 319, 477, 5117, 7462, 1534, 28741, 984, 415, 322, 1769, 2977, 13330, 2385, 1401]}
{"line_number": 231, "line_type": "original", "code": "", "entropy": 0.57080078125, "is_bug_line": false, "sus_score": 0.5712230205535889, "per_token_entropy": [0.57080078125], "tokens": [203]}
{"line_number": 231, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5712230205535889, "per_token_entropy": [], "tokens": []}
{"line_number": 120, "line_type": "original", "code": "                    for (int i = 0; i < tableau.getNumArtificialVariables(); i++) {", "entropy": 0.818359375, "is_bug_line": false, "sus_score": 0.5708391666412354, "per_token_entropy": [8.2734375, 5.83203125, 0.02667236328125, 0.2332763671875, 0.206298828125, 0.0122528076171875, 0.7001953125, 0.0243988037109375, 0.021240234375, 0.006969451904296875, 0.01226806640625, 0.1729736328125, 4.0531158447265625e-05, 0.002414703369140625, 0.408935546875, 1.6123046875, 0.001895904541015625, 0.336669921875, 0.029083251953125, 0.060272216796875, 0.0054473876953125, 0.01806640625], "tokens": [4696, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 1858, 4452, 32, 15207, 5271, 31251, 10165, 473, 595, 1987, 301]}
{"line_number": 120, "line_type": "generated", "code": "\n            // no pivot row found, so the model is unbounded\n            throw new UnboundedSolutionException();\n        }\n\n        // pivot the tableau\n        pivot(tableau, pivotRow, pivotCol);\n    }\n\n    /**\n     * Pivots the given", "entropy": 0.41796875, "is_bug_line": false, "sus_score": 0.5708391666412354, "per_token_entropy": [0.250732421875, 0.82470703125, 1.6748046875, 0.77294921875, 0.78662109375, 0.58740234375, 1.02734375, 1.931640625, 0.75390625, 1.6591796875, 0.31982421875, 0.54736328125, 0.0009489059448242188, 0.335693359375, 0.4599609375, 0.01019287109375, 0.024627685546875, 7.605552673339844e-05, 9.5367431640625e-05, 1.0848045349121094e-05, 0.435546875, 0.1678466796875, 0.004726409912109375, 0.450927734375, 0.9345703125, 0.56640625, 1.3603515625, 0.1285400390625, 0.00467681884765625, 0.30810546875, 0.79150390625, 0.29150390625, 0.058380126953125, -0.0, 0.0019445419311523438, 0.0021343231201171875, 0.5556640625, 0.003139495849609375, 0.0010366439819335938, 0.00024187564849853516, 0.01336669921875, 0.62939453125, 0.00226593017578125, 0.2041015625, 0.033203125, 0.0426025390625, 5.3763389587402344e-05, 1.3779296875, 0.00206756591796875, 0.24951171875, 0.049285888671875, 1.1005859375], "tokens": [324, 434, 1289, 20991, 2698, 2431, 30, 1259, 322, 1542, 438, 707, 28959, 324, 1422, 537, 1683, 28959, 13628, 984, 473, 291, 320, 584, 434, 20991, 322, 1858, 4452, 291, 20991, 26, 1274, 4452, 30, 20991, 2352, 30, 20991, 871, 293, 284, 320, 446, 1022, 275, 319, 447, 11164, 101, 322, 2702]}
{"line_number": 123, "line_type": "original", "code": "                        if (Precision.equals(entry, 1d, maxUlps) && row.equals(tableau.getBasicRow(column))) {", "entropy": 1.3759765625, "is_bug_line": false, "sus_score": 0.5700314044952393, "per_token_entropy": [8.71875, 2.3671875, 0.0927734375, 5.41015625, 0.0015621185302734375, 0.126220703125, 0.005626678466796875, 3.416015625, 0.01180267333984375, 0.1639404296875, 4.25, 0.515625, 0.093994140625, 0.32275390625, 0.0017271041870117188, 3.5762786865234375e-06, 2.599609375, 0.740234375, 3.39453125, 4.70703125, 2.29296875, 0.0046539306640625, 1.9296875, 0.0006647109985351562, 0.004718780517578125, 0.286376953125, 0.10150146484375, 0.004062652587890625, 0.00887298583984375, 2.171875, 0.2021484375, 0.077392578125], "tokens": [6797, 415, 308, 20398, 32, 3574, 26, 3038, 30, 225, 35, 86, 30, 1769, 28522, 1069, 27, 962, 2698, 32, 3574, 26, 1274, 4452, 32, 371, 7099, 2352, 26, 2592, 2610, 301]}
{"line_number": 123, "line_type": "generated", "code": "        tableau.pivot(pivotRow, pivotCol);\n    }\n\n    /**\n     * Returns the pivot column for the current iteration of the Simplex method.\n     * @param tableau simple tableau for the problem\n     * @return pivot column\n     */", "entropy": 0.38427734375, "is_bug_line": false, "sus_score": 0.5700314044952393, "per_token_entropy": [1.69921875, 1.83203125, 0.0006237030029296875, 0.009307861328125, 0.29150390625, 0.010345458984375, 0.0035648345947265625, 0.241943359375, 0.006694793701171875, 0.002994537353515625, 0.001178741455078125, 0.03204345703125, 0.98779296875, 0.003475189208984375, 0.49072265625, 0.07464599609375, 0.10638427734375, 7.891654968261719e-05, 1.85546875, 0.354736328125, 2.154296875, 0.06884765625, 2.169921875, 0.244140625, 1.5078125, 1.2275390625, 1.3310546875, 0.07427978515625, 0.5830078125, 4.220008850097656e-05, 0.27392578125, 0.2373046875, 0.06182861328125, 0.0007104873657226562, 0.50439453125, 0.00884246826171875, 0.01088714599609375, 0.00015842914581298828, 0.081787109375, 0.0010089874267578125, 0.00032067298889160156, 0.0206451416015625, 0.0007190704345703125, 0.00806427001953125, 0.005771636962890625, 0.004489898681640625, 0.004993438720703125, 0.00959014892578125, 0.50439453125, 0.005168914794921875, 0.64892578125, 0.21923828125], "tokens": [351, 1858, 4452, 32, 23444, 26, 23444, 2352, 30, 20991, 871, 293, 284, 320, 446, 1022, 275, 319, 3759, 322, 20991, 2623, 436, 322, 1550, 13330, 432, 322, 28421, 1909, 1411, 32, 275, 319, 477, 753, 1858, 4452, 4281, 1858, 4452, 436, 322, 3708, 275, 319, 477, 601, 20991, 2623, 275, 569]}
{"line_number": 342, "line_type": "original", "code": "", "entropy": 0.319091796875, "is_bug_line": false, "sus_score": 0.553473949432373, "per_token_entropy": [0.319091796875], "tokens": [203]}
{"line_number": 342, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.553473949432373, "per_token_entropy": [], "tokens": []}
{"line_number": 280, "line_type": "original", "code": "", "entropy": 0.319091796875, "is_bug_line": false, "sus_score": 0.5528929829597473, "per_token_entropy": [0.319091796875], "tokens": [203]}
{"line_number": 280, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5528929829597473, "per_token_entropy": [], "tokens": []}
{"line_number": 230, "line_type": "original", "code": "    }", "entropy": 1.61328125, "is_bug_line": false, "sus_score": 0.538964569568634, "per_token_entropy": [2.021484375, 1.2041015625], "tokens": [264, 320]}
{"line_number": 230, "line_type": "generated", "code": "\n    /**\n     * {@inheritDoc}\n     * <p>\n     * This implementation is based on the description in Numerical Recipes in C, 2nd ed.,\n     * section 15.5.\n     * </p>\n     */\n    @", "entropy": 0.501953125, "is_bug_line": false, "sus_score": 0.538964569568634, "per_token_entropy": [1.3955078125, 0.63623046875, 0.458251953125, 7.152557373046875e-05, 2.060546875, 0.032073974609375, 0.00991058349609375, 0.01268768310546875, 0.134765625, 0.9775390625, 0.054901123046875, 0.0311126708984375, 0.06787109375, 0.0011949539184570312, 1.5732421875, 0.403564453125, 3.01171875, 0.89599609375, 0.0036296844482421875, 0.58935546875, 1.2529296875, 0.40869140625, 2.02734375, 0.0004944801330566406, 0.3125, 0.02166748046875, 1.4072265625, 0.0178070068359375, 0.71728515625, 0.352783203125, 0.0108184814453125, 0.00518798828125, 0.86865234375, 0.658203125, 0.48681640625, 0.0019044876098632812, 0.8759765625, 0.0088043212890625, 0.2470703125, 0.375244140625, 0.0001881122589111328, 1.2236328125, 0.51123046875, 0.405517578125, 0.48388671875, 0.26171875, 0.0004417896270751953, 0.00279998779296875, 0.0030689239501953125, 0.322021484375, 0.173828125, 0.298095703125], "tokens": [284, 1022, 275, 319, 3088, 18446, 111, 275, 319, 333, 98, 48, 275, 319, 1348, 4736, 438, 4122, 544, 322, 3048, 328, 10821, 14856, 902, 21699, 328, 390, 30, 225, 36, 1442, 2115, 4317, 275, 319, 4169, 225, 35, 39, 32, 39, 32, 275, 319, 576, 98, 48, 275, 569, 284, 477]}
{"line_number": 521, "line_type": "original", "code": "", "entropy": 0.319091796875, "is_bug_line": false, "sus_score": 0.5375447869300842, "per_token_entropy": [0.319091796875], "tokens": [203]}
{"line_number": 521, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5375447869300842, "per_token_entropy": [], "tokens": []}
{"line_number": 333, "line_type": "original", "code": "", "entropy": 0.319091796875, "is_bug_line": false, "sus_score": 0.5329197645187378, "per_token_entropy": [0.319091796875], "tokens": [203]}
{"line_number": 333, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5329197645187378, "per_token_entropy": [], "tokens": []}
{"line_number": 226, "line_type": "original", "code": "        while (!tableau.isOptimal()) {", "entropy": 0.69970703125, "is_bug_line": false, "sus_score": 0.5292766094207764, "per_token_entropy": [4.71875, 2.7421875, 0.0889892578125, 0.0269622802734375, 0.0001558065414428711, 0.0008325576782226562, 0.0167236328125, 0.023345947265625, 3.802776336669922e-05, 0.04876708984375, 0.028594970703125], "tokens": [351, 2218, 1429, 1274, 4452, 32, 297, 5482, 2977, 1157, 301]}
{"line_number": 226, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5292766094207764, "per_token_entropy": [], "tokens": []}
{"line_number": 513, "line_type": "original", "code": "", "entropy": 0.319091796875, "is_bug_line": false, "sus_score": 0.5197641849517822, "per_token_entropy": [0.319091796875], "tokens": [203]}
{"line_number": 513, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5197641849517822, "per_token_entropy": [], "tokens": []}
{"line_number": 105, "line_type": "original", "code": "                } else if (cmp < 0) {", "entropy": 2.28125, "is_bug_line": false, "sus_score": 0.5013106465339661, "per_token_entropy": [8.0625, 3.15625, 3.7734375, 2.435546875, 0.0439453125, 6.58203125, 0.9345703125, 0.001895904541015625, 0.0019893646240234375, 0.03826904296875, 0.0615234375], "tokens": [2071, 320, 813, 415, 308, 4923, 333, 225, 34, 27, 301]}
{"line_number": 105, "line_type": "generated", "code": "\n    /**\n     * Returns a {@link SimplexTableau} with the initial tableau for the given {@link LinearObjectiveFunction}.\n     * The initial tableau is generated by placing the {@link LinearObjectiveFunction} into the first row\n     * and", "entropy": 0.73095703125, "is_bug_line": false, "sus_score": 0.5013106465339661, "per_token_entropy": [0.66943359375, 0.10247802734375, 0.0645751953125, 9.489059448242188e-05, 1.236328125, 1.984375, 1.548828125, 0.045257568359375, 0.59912109375, 3.0994415283203125e-06, 0.54296875, 0.001773834228515625, 0.0836181640625, 2.03125, 0.55322265625, 2.32421875, 0.64306640625, 0.00441741943359375, 2.337890625, 0.437255859375, 1.8466796875, 1.1103515625, 0.216552734375, 0.450439453125, 0.48486328125, 0.00041174888610839844, 0.20361328125, 0.0270538330078125, 0.006366729736328125, 2.0859375, 1.1591796875, 0.103271484375, 0.0023670196533203125, 1.208984375, 2.91015625, 0.89794921875, 3.03125, 4.172325134277344e-05, 0.2359619140625, 1.69140625, 0.26318359375, 0.033660888671875, 0.041961669921875, 0.00010561943054199219, 0.2392578125, 1.3583984375, 0.267333984375, 0.77294921875, 0.658203125, 0.93212890625, 8.821487426757812e-05, 0.54052734375], "tokens": [284, 1022, 275, 319, 3759, 312, 3088, 1204, 28421, 1909, 1599, 4452, 111, 623, 322, 2815, 1858, 4452, 436, 322, 2702, 3088, 1204, 13935, 33312, 2447, 4009, 275, 319, 886, 2815, 1858, 4452, 438, 4723, 810, 1278, 4256, 322, 3088, 1204, 13935, 33312, 2447, 111, 1991, 322, 1932, 2698, 275, 319, 461]}
{"line_number": 338, "line_type": "original", "code": "", "entropy": 0.319091796875, "is_bug_line": false, "sus_score": 0.4777320623397827, "per_token_entropy": [0.319091796875], "tokens": [203]}
{"line_number": 338, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.4777320623397827, "per_token_entropy": [], "tokens": []}
{"line_number": 351, "line_type": "original", "code": "", "entropy": 0.319091796875, "is_bug_line": false, "sus_score": 0.47659868001937866, "per_token_entropy": [0.319091796875], "tokens": [203]}
{"line_number": 351, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.47659868001937866, "per_token_entropy": [], "tokens": []}
{"line_number": 128, "line_type": "original", "code": "", "entropy": 3.87109375, "is_bug_line": false, "sus_score": 0.47474998235702515, "per_token_entropy": [3.87109375], "tokens": [203]}
{"line_number": 128, "line_type": "generated", "code": "\n        for (int i = 0; i < tableau.getHeight(); i++) {\n            if (i!= pivotRow) {\n                double entry = tableau.getEntry(i, pivotCol);\n                tableau.subtract(i, pivotRow", "entropy": 0.15380859375, "is_bug_line": false, "sus_score": 0.47474998235702515, "per_token_entropy": [0.398193359375, 0.57958984375, 0.005859375, 0.0309295654296875, 0.195556640625, 0.0034847259521484375, 0.14404296875, 0.0002651214599609375, 0.00390625, 0.0008044242858886719, 0.00395965576171875, 0.0172271728515625, 4.76837158203125e-07, 6.4849853515625e-05, 0.209228515625, 0.010223388671875, 0.0060577392578125, 0.0019407272338867188, 0.0011415481567382812, 0.020843505859375, 0.83740234375, 0.2210693359375, 0.1195068359375, 0.06658935546875, 0.0029277801513671875, 0.00788116455078125, 0.10223388671875, 0.0021800994873046875, 0.01383209228515625, 1.021484375, 0.76513671875, 0.01032257080078125, 0.0234527587890625, 4.76837158203125e-07, 0.00017189979553222656, 0.005420684814453125, 0.00039386749267578125, 0.00220489501953125, 0.00012493133544921875, 0.0016326904296875, 0.00025916099548339844, 0.00185394287109375, 0.0184783935546875, 0.72265625, -0.0, 0.00016546249389648438, 1.6044921875, 0.61279296875, 0.1104736328125, 0.00025653839111328125, 0.03436279296875, 0.053375244140625], "tokens": [291, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 1858, 4452, 32, 22382, 473, 595, 1987, 301, 324, 415, 308, 91, 863, 20991, 2352, 27, 301, 400, 2064, 3414, 280, 1858, 4452, 32, 48895, 26, 91, 30, 20991, 871, 293, 400, 1858, 4452, 32, 25330, 26, 91, 30, 20991, 2352]}
{"line_number": 349, "line_type": "original", "code": "", "entropy": 0.319091796875, "is_bug_line": false, "sus_score": 0.47402894496917725, "per_token_entropy": [0.319091796875], "tokens": [203]}
{"line_number": 349, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.47402894496917725, "per_token_entropy": [], "tokens": []}
{"line_number": 359, "line_type": "original", "code": "", "entropy": 0.319091796875, "is_bug_line": false, "sus_score": 0.4736960828304291, "per_token_entropy": [0.319091796875], "tokens": [203]}
{"line_number": 359, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.4736960828304291, "per_token_entropy": [], "tokens": []}
{"line_number": 343, "line_type": "original", "code": "", "entropy": 0.319091796875, "is_bug_line": false, "sus_score": 0.47331860661506653, "per_token_entropy": [0.319091796875], "tokens": [203]}
{"line_number": 343, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.47331860661506653, "per_token_entropy": [], "tokens": []}
{"line_number": 367, "line_type": "original", "code": "", "entropy": 0.319091796875, "is_bug_line": false, "sus_score": 0.4725806713104248, "per_token_entropy": [0.319091796875], "tokens": [203]}
{"line_number": 367, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.4725806713104248, "per_token_entropy": [], "tokens": []}
{"line_number": 352, "line_type": "original", "code": "", "entropy": 0.319091796875, "is_bug_line": false, "sus_score": 0.47238197922706604, "per_token_entropy": [0.319091796875], "tokens": [203]}
{"line_number": 352, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.47238197922706604, "per_token_entropy": [], "tokens": []}
