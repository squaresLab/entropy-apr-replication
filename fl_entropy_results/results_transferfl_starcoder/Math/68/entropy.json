{"line_number": 589, "line_type": "original", "code": "            for (int j = 0; j < solvedCols; ++j) {", "entropy": 0.634765625, "is_bug_line": false, "sus_score": 0.8693902492523193, "per_token_entropy": [8.625, 2.021484375, 0.00496673583984375, 0.0050811767578125, 0.399658203125, 0.00986480712890625, 0.0178680419921875, 0.01043701171875, 0.0077667236328125, 0.0004949569702148438, 0.0039825439453125, 0.189453125, 0.043487548828125, 0.003231048583984375, 0.01397705078125, 0.00011706352233886719, 0.0016450881958007812, 0.0643310546875], "tokens": [1468, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 19479, 19911, 45, 3311, 92, 27, 301]}
{"line_number": 589, "line_type": "generated", "code": "\n        // copy r and (q transpose)*b to preserve input and initialize s\n        System.arraycopy(qy, 0, work, 0, solvedCols);", "entropy": 0.210693359375, "is_bug_line": false, "sus_score": 0.8693902492523193, "per_token_entropy": [0.1595458984375, 0.95654296875, 1.595703125, 0.421142578125, 0.140625, 0.0251312255859375, 0.0004322528839111328, 0.02508544921875, 0.005817413330078125, 0.0004372596740722656, 0.038970947265625, 0.006496429443359375, 0.078125, 0.003627777099609375, 0.00212860107421875, 0.01256561279296875, 0.96044921875, 1.7138671875, 0.0006737709045410156, 3.6835670471191406e-05, 0.0008001327514648438, 0.043121337890625, 0.0021839141845703125, 0.0231781005859375, 0.00318145751953125, 0.0003771781921386719, 0.10595703125, 0.00036454200744628906, 0.01404571533203125, 0.0008273124694824219, 0.00045871734619140625, 0.5888671875, 0.229736328125, 0.0019311904907226562], "tokens": [291, 434, 1933, 540, 461, 308, 99, 27224, 4586, 84, 372, 24070, 1509, 461, 7379, 309, 291, 1171, 32, 40863, 26, 28542, 30, 225, 34, 30, 1389, 30, 225, 34, 30, 19479, 19911, 293]}
{"line_number": 593, "line_type": "original", "code": "                for (int i = j + 1; i < solvedCols; ++i) {", "entropy": 0.70947265625, "is_bug_line": false, "sus_score": 0.8679158687591553, "per_token_entropy": [8.25, 4.21875, 0.004032135009765625, 0.00528717041015625, 0.50439453125, 0.004550933837890625, 0.228515625, 0.54345703125, 0.0026073455810546875, 0.00141143798828125, 0.0038547515869140625, 0.001995086669921875, 0.004547119140625, 0.024871826171875, 0.3681640625, 0.0012102127075195312, 0.005985260009765625, 0.00019490718841552734, 0.0055389404296875, 0.01161956787109375], "tokens": [2071, 436, 308, 410, 595, 280, 594, 474, 225, 35, 45, 595, 333, 19479, 19911, 45, 3311, 91, 27, 301]}
{"line_number": 593, "line_type": "generated", "code": "\n            lmDiag[j] = diag[j];\n            work[j] = qy[j];\n        }\n\n        // eliminate the diagonal matrix d using a Givens rotation\n        for (int j = 0; j < solvedCols; ++", "entropy": 0.0875244140625, "is_bug_line": false, "sus_score": 0.8679158687591553, "per_token_entropy": [0.09027099609375, 0.4052734375, 0.335205078125, 0.0005407333374023438, 0.07232666015625, 0.00035881996154785156, 0.0057220458984375, 0.02239990234375, 0.00302886962890625, 0.55078125, 0.0147552490234375, 0.57958984375, 0.1851806640625, 0.0002968311309814453, 0.00521087646484375, 0.0008473396301269531, 0.057647705078125, 0.0888671875, 0.0001633167266845703, 0.00023245811462402344, 0.044586181640625, 0.0204010009765625, 0.1151123046875, 0.0006084442138671875, 0.1220703125, 0.10662841796875, 0.6298828125, 0.00014495849609375, 0.4267578125, 0.005954742431640625, 0.016754150390625, 0.00026154518127441406, 0.0003981590270996094, 0.1712646484375, 0.003948211669921875, 3.4570693969726562e-06, 0.020263671875, 0.0206756591796875, 0.0269012451171875, 0.00022232532501220703, 0.0003139972686767578, 0.1114501953125, 0.0008921623229980469, 0.002960205078125, 0.00824737548828125, 0.0016164779663085938, 0.0012845993041992188, 0.0003371238708496094, 0.02362060546875, 0.01483154296875, 0.2274169921875, 0.00555419921875], "tokens": [324, 30780, 26244, 77, 92, 79, 280, 15534, 77, 92, 970, 324, 1389, 77, 92, 79, 280, 2678, 107, 77, 92, 970, 291, 320, 584, 434, 40533, 322, 27601, 5045, 343, 1471, 312, 570, 387, 1229, 11410, 291, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 19479, 19911, 45, 3311]}
{"line_number": 514, "line_type": "original", "code": "            sum2 = 0;", "entropy": 1.8896484375, "is_bug_line": false, "sus_score": 0.8663437366485596, "per_token_entropy": [7.046875, 6.09765625, 0.03778076171875, 0.001056671142578125, 0.0107879638671875, 9.143352508544922e-05, 0.035186767578125], "tokens": [1468, 3632, 36, 280, 225, 34, 45]}
{"line_number": 514, "line_type": "generated", "code": "\n            double fPlu = fp + delta;\n            double fPar = fp - delta;\n            for (int j = 0; j < solvedCols; ++j) {\n                int pj = permutation[j];\n                double sum = 0;", "entropy": 0.15380859375, "is_bug_line": false, "sus_score": 0.8663437366485596, "per_token_entropy": [0.06072998046875, 1.28125, 1.4912109375, 1.427734375, 0.410400390625, 0.04425048828125, 0.2496337890625, 0.00031113624572753906, 0.1624755859375, 0.06817626953125, 0.09063720703125, 0.350341796875, 0.86669921875, 0.30029296875, 0.0011320114135742188, 0.0004620552062988281, 0.0138702392578125, 0.00010836124420166016, 2.205371856689453e-05, 0.097900390625, 0.419677734375, 0.011383056640625, 0.0009131431579589844, 0.06500244140625, 0.0014247894287109375, 0.0020618438720703125, 0.0004818439483642578, 0.0005660057067871094, 0.0006685256958007812, 0.0018634796142578125, 0.0261688232421875, 0.013519287109375, 0.000942230224609375, 0.0009183883666992188, 5.3048133850097656e-05, 0.0001615285873413086, 0.0006279945373535156, 0.002231597900390625, 0.05584716796875, 0.0009717941284179688, 0.00017631053924560547, 9.822845458984375e-05, 0.0005564689636230469, 4.279613494873047e-05, 0.0002397298812866211, 0.002567291259765625, 0.296142578125, 0.1268310546875, 0.0207366943359375, 0.027557373046875, 5.7578086853027344e-05, 0.0024204254150390625], "tokens": [324, 2064, 296, 1822, 103, 280, 11828, 474, 7715, 45, 324, 2064, 296, 926, 280, 11828, 429, 7715, 45, 324, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 19479, 19911, 45, 3311, 92, 27, 301, 400, 629, 46704, 280, 38151, 77, 92, 970, 400, 2064, 3632, 280, 225, 34, 45]}
{"line_number": 510, "line_type": "original", "code": "            for (int j = 0; j < solvedCols; ++j) {", "entropy": 0.36962890625, "is_bug_line": false, "sus_score": 0.8646175861358643, "per_token_entropy": [4.78515625, 1.4990234375, 0.00504302978515625, 0.023651123046875, 0.1541748046875, 0.00431060791015625, 0.0237274169921875, 0.002338409423828125, 0.001247406005859375, 0.0005450248718261719, 0.0033435821533203125, 0.1090087890625, 0.018707275390625, 0.002735137939453125, 0.00531768798828125, 0.0001952648162841797, 0.0018596649169921875, 0.0100555419921875], "tokens": [1468, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 19479, 19911, 45, 3311, 92, 27, 301]}
{"line_number": 510, "line_type": "generated", "code": "\n            double[] work = work2;\n            work2 = work1;\n            work1 = work;\n            for (int j = 0; j < solvedCols; ++j) {\n                int pj = permutation[j];\n                work1[pj", "entropy": 0.28857421875, "is_bug_line": false, "sus_score": 0.8646175861358643, "per_token_entropy": [0.361083984375, 1.9150390625, 0.873046875, 1.8203125, 1.3046875, 0.40673828125, 1.3935546875, 0.03125, 0.6748046875, 0.81005859375, 1.6015625, 0.004062652587890625, 0.044952392578125, 0.67529296875, 0.0012664794921875, 0.06231689453125, 0.03955078125, 0.00846099853515625, 0.0004892349243164062, 0.01107025146484375, 0.0128021240234375, 0.607421875, 0.9814453125, 0.0023345947265625, 0.0102996826171875, 0.1812744140625, 0.0029697418212890625, 0.01137542724609375, 0.002643585205078125, 0.0011138916015625, 0.0006628036499023438, 0.0012989044189453125, 0.1546630859375, 0.0196685791015625, 0.0005440711975097656, 0.006198883056640625, 0.0001246929168701172, 0.0008549690246582031, 0.001873016357421875, 0.007049560546875, 0.41650390625, 0.0037364959716796875, 0.0004222393035888672, 0.0012302398681640625, 0.0003421306610107422, 0.0007061958312988281, 0.0006041526794433594, 0.0040740966796875, 0.1571044921875, 0.36474609375, 7.545948028564453e-05, 0.0122833251953125], "tokens": [324, 2064, 1178, 1389, 280, 1389, 36, 45, 324, 1389, 36, 280, 1389, 35, 45, 324, 1389, 35, 280, 1389, 45, 324, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 19479, 19911, 45, 3311, 92, 27, 301, 400, 629, 46704, 280, 38151, 77, 92, 970, 400, 1389, 35, 77, 25287]}
{"line_number": 517, "line_type": "original", "code": "                double sum = 0;", "entropy": 1.5546875, "is_bug_line": false, "sus_score": 0.8613080382347107, "per_token_entropy": [6.796875, 2.873046875, 0.89306640625, 0.2386474609375, 0.0479736328125, 0.0012083053588867188, 0.034759521484375], "tokens": [2071, 2064, 3632, 280, 225, 34, 45]}
{"line_number": 517, "line_type": "generated", "code": "\n            for (int j = 0; j < solvedCols; ++j) {\n                int pj = permutation[j];\n                double s = diag[pj] * lmDir[pj];\n                work1[pj] = s;\n                dxNorm", "entropy": 0.039093017578125, "is_bug_line": false, "sus_score": 0.8613080382347107, "per_token_entropy": [0.087890625, 0.1571044921875, 0.00171661376953125, 0.003742218017578125, 0.030426025390625, 0.0015506744384765625, 0.0063934326171875, 0.00014925003051757812, 0.0003120899200439453, 0.000835418701171875, 0.0005879402160644531, 0.038665771484375, 0.0017709732055664062, 0.0003261566162109375, 0.0023860931396484375, 6.73532485961914e-05, 0.0005140304565429688, 0.0021572113037109375, 0.010040283203125, 0.11810302734375, 0.0010213851928710938, 0.00028204917907714844, 0.0005297660827636719, 0.0004525184631347656, 0.00012028217315673828, 0.00024771690368652344, 0.0264129638671875, 0.219482421875, 0.10906982421875, 0.0120086669921875, 0.214111328125, 0.031768798828125, 0.000732421875, 0.00038933753967285156, 0.0002512931823730469, 0.70947265625, 0.002033233642578125, 0.00614166259765625, 0.00124359130859375, 0.030303955078125, 0.01163482666015625, 0.0775146484375, 0.0634765625, 8.106231689453125e-06, 0.00560760498046875, 0.00010991096496582031, 0.01364898681640625, 0.00833892822265625, 0.0014467239379882812, 0.004241943359375, 0.01509857177734375, 0.0005021095275878906], "tokens": [324, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 19479, 19911, 45, 3311, 92, 27, 301, 400, 629, 46704, 280, 38151, 77, 92, 970, 400, 2064, 309, 280, 15534, 77, 25287, 79, 319, 30780, 2976, 77, 25287, 970, 400, 1389, 35, 77, 25287, 79, 280, 309, 45, 400, 12211, 14373]}
{"line_number": 521, "line_type": "original", "code": "                double s = (work1[pj] - sum) / diagR[pj];", "entropy": 1.69921875, "is_bug_line": false, "sus_score": 0.8602399230003357, "per_token_entropy": [4.1015625, 4.72265625, 1.6484375, 2.509765625, 4.62109375, 2.41015625, 0.6259765625, 0.004802703857421875, 0.016937255859375, 0.02081298828125, 1.5771484375, 5.5703125, 0.98388671875, 0.364013671875, 2.068359375, 0.98388671875, 0.002857208251953125, 0.0290374755859375, 0.0234375], "tokens": [2071, 2064, 309, 280, 308, 1007, 35, 77, 25287, 79, 429, 3632, 27, 517, 15534, 68, 77, 25287, 970]}
{"line_number": 521, "line_type": "generated", "code": "\n                dxNorm += s * s;\n            }\n            dxNorm = Math.sqrt(dxNorm);\n            double fp = dxNorm - delta;\n\n            // check the new value of lmPar\n            if (fp <= 0.1 * delta) {", "entropy": 0.06915283203125, "is_bug_line": false, "sus_score": 0.8602399230003357, "per_token_entropy": [0.10382080078125, 0.120361328125, 0.00032973289489746094, 0.005138397216796875, 0.0191650390625, 0.0016317367553710938, 0.0017061233520507812, 0.0005016326904296875, 0.0318603515625, 8.249282836914062e-05, 0.055694580078125, 0.1322021484375, 0.0015544891357421875, 7.832050323486328e-05, 0.0008234977722167969, 0.00010633468627929688, 0.0002853870391845703, 5.066394805908203e-05, 0.0010557174682617188, 1.919269561767578e-05, 0.0003972053527832031, 0.035125732421875, 0.016876220703125, 0.98828125, 0.407958984375, 0.0019311904907226562, 5.364418029785156e-06, 4.398822784423828e-05, 0.0002613067626953125, 0.00031256675720214844, 0.0838623046875, 0.043975830078125, 0.2174072265625, 0.48876953125, 0.10772705078125, 0.25732421875, 4.410743713378906e-06, 0.026763916015625, 9.393692016601562e-05, 0.00600433349609375, 0.00266265869140625, 0.02301025390625, 0.0164337158203125, 0.36083984375, 0.00012981891632080078, 1.5497207641601562e-06, 0.00019049644470214844, 3.4928321838378906e-05, 0.0026683807373046875, 7.557868957519531e-05, 0.0286102294921875, 0.00164794921875], "tokens": [400, 12211, 14373, 1454, 309, 319, 309, 45, 324, 320, 324, 12211, 14373, 280, 4175, 32, 8663, 26, 4582, 14373, 293, 324, 2064, 11828, 280, 12211, 14373, 429, 7715, 45, 1064, 434, 1505, 322, 537, 786, 432, 30780, 926, 324, 415, 308, 4426, 2511, 225, 34, 32, 35, 319, 7715, 27, 301]}
{"line_number": 597, "line_type": "original", "code": "            sum2 = 0;", "entropy": 2.767578125, "is_bug_line": false, "sus_score": 0.8602315187454224, "per_token_entropy": [3.2734375, 8.40625, 2.1328125, 2.837890625, 2.41796875, 0.01313018798828125, 0.291259765625], "tokens": [1468, 3632, 36, 280, 225, 34, 45]}
{"line_number": 597, "line_type": "generated", "code": "\n            lmDiag[j] = diag[pj];\n            work[j] = qy[pj];\n        }\n\n        // eliminate the diagonal matrix d using a Givens rotation\n        for (int j = 0; j < solvedCols; ++", "entropy": 0.0792236328125, "is_bug_line": false, "sus_score": 0.8602315187454224, "per_token_entropy": [0.19677734375, 0.1229248046875, 0.59765625, 0.00018584728240966797, 0.38232421875, 0.00041556358337402344, 0.005481719970703125, 0.0252838134765625, 0.0006437301635742188, 0.1064453125, 0.06695556640625, 0.241943359375, 0.350341796875, 0.0008997917175292969, 0.0650634765625, 0.00024437904357910156, 0.0161895751953125, 0.055908203125, 0.00032782554626464844, 0.00015282630920410156, 0.0191497802734375, 0.0284423828125, 0.09283447265625, 0.00018453598022460938, 0.25439453125, 0.1805419921875, 0.329345703125, 0.00025177001953125, 0.38134765625, 0.00640106201171875, 0.0192108154296875, 0.0004131793975830078, 0.0006098747253417969, 0.1470947265625, 0.0044708251953125, 3.337860107421875e-06, 0.0233306884765625, 0.024627685546875, 0.03826904296875, 0.00035309791564941406, 0.00026035308837890625, 0.10272216796875, 0.0011501312255859375, 0.003635406494140625, 0.00799560546875, 0.0006895065307617188, 0.001499176025390625, 0.0002474784851074219, 0.01180267333984375, 0.00423431396484375, 0.1939697265625, 0.0055084228515625], "tokens": [324, 30780, 26244, 77, 92, 79, 280, 15534, 77, 25287, 970, 324, 1389, 77, 92, 79, 280, 2678, 107, 77, 25287, 970, 291, 320, 584, 434, 40533, 322, 27601, 5045, 343, 1471, 312, 570, 387, 1229, 11410, 291, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 19479, 19911, 45, 3311]}
{"line_number": 612, "line_type": "original", "code": "            lmPar = Math.max(parl, lmPar + correction);", "entropy": 1.90234375, "is_bug_line": false, "sus_score": 0.8598042726516724, "per_token_entropy": [4.25390625, 1.798828125, 4.69140625, 0.10003662109375, 1.4970703125, 0.002590179443359375, 0.3046875, 0.0037517547607421875, 5.73828125, 0.1492919921875, 0.0712890625, 0.42822265625, 0.08392333984375, 6.2578125, 4.875, 0.1805419921875], "tokens": [1468, 30780, 926, 280, 4175, 32, 1449, 26, 568, 94, 30, 30780, 926, 474, 25683, 293]}
{"line_number": 612, "line_type": "generated", "code": "\n\n            //  the transformations to eliminate the row of d modify only a\n            // single element of (q transpose)*b beyond the first n, which\n            // is initially zero.\n            double delta = Math.abs(work[j]);\n            int n =", "entropy": 0.1646728515625, "is_bug_line": false, "sus_score": 0.8598042726516724, "per_token_entropy": [0.7919921875, 0.053802490234375, 0.79931640625, 0.04217529296875, 0.00783538818359375, 1.811981201171875e-05, 0.0021381378173828125, 0.0002040863037109375, 0.004913330078125, 0.0018787384033203125, 0.0003457069396972656, 0.2208251953125, 0.005451202392578125, 0.00408935546875, 0.028656005859375, 0.00037288665771484375, 0.6025390625, 0.00034427642822265625, 7.915496826171875e-05, 0.03076171875, 0.055908203125, 0.06671142578125, 0.022735595703125, 0.1103515625, 0.623046875, 4.0411949157714844e-05, 0.0002608299255371094, 5.3048133850097656e-05, 0.00974273681640625, 0.1126708984375, 0.167724609375, 0.0025463104248046875, 3.314018249511719e-05, 0.00051116943359375, 0.005901336669921875, 0.0176544189453125, 0.07977294921875, 0.1641845703125, 0.4853515625, 0.0372314453125, 1.0546875, 0.0012598037719726562, 0.08502197265625, 0.0007352828979492188, 0.54443359375, 0.0007848739624023438, 0.009063720703125, 0.1572265625, 0.165771484375, 0.5966796875, 1.078125, 0.30859375], "tokens": [1064, 434, 225, 322, 34816, 372, 40533, 322, 2698, 432, 343, 5351, 1755, 312, 324, 434, 3982, 1994, 432, 308, 99, 27224, 4586, 84, 21861, 322, 1932, 310, 30, 1510, 324, 434, 438, 26302, 5934, 32, 324, 2064, 7715, 280, 4175, 32, 3596, 26, 1007, 77, 92, 1989, 324, 629, 310, 280]}
{"line_number": 605, "line_type": "original", "code": "            if (fp > 0) {", "entropy": 2.822265625, "is_bug_line": false, "sus_score": 0.8571495413780212, "per_token_entropy": [3.046875, 10.2109375, 0.034027099609375, 11.7109375, 0.352294921875, 0.01412200927734375, 0.0005669593811035156, 0.00881195068359375, 0.02197265625], "tokens": [1468, 415, 308, 4426, 848, 225, 34, 27, 301]}
{"line_number": 605, "line_type": "generated", "code": "\n                double dRot = 0;\n                double qr = 0;\n                double s = 0;\n                for (int k = j; k < solvedCols; ++k) {\n                    int pk = permutation[k];\n                    double r = Math", "entropy": 0.3388671875, "is_bug_line": false, "sus_score": 0.8571495413780212, "per_token_entropy": [0.984375, 0.10369873046875, 0.52490234375, 1.2333984375, 0.1412353515625, 0.22509765625, 0.01250457763671875, 0.1959228515625, 0.19775390625, 1.03125, 2.93359375, 1.7822265625, 0.08380126953125, 0.01311492919921875, 0.021240234375, 0.38916015625, 1.5078125, 0.75927734375, 0.33056640625, 0.029632568359375, 0.059234619140625, 0.002086639404296875, 0.1669921875, 0.81689453125, 0.0037746429443359375, 0.00798797607421875, 0.047515869140625, 0.0008893013000488281, 0.049774169921875, 0.001750946044921875, 0.0240325927734375, 0.002017974853515625, 0.0015821456909179688, 0.0157470703125, 0.081787109375, 0.004486083984375, 9.059906005859375e-05, 0.002056121826171875, 0.0094451904296875, 0.18310546875, 1.130859375, 0.02813720703125, 0.004291534423828125, 0.0017223358154296875, 0.00025534629821777344, 6.985664367675781e-05, 0.0001157522201538086, 0.109619140625, 0.6748046875, 0.5439453125, 0.85693359375, 0.2958984375], "tokens": [400, 2064, 343, 6726, 280, 225, 34, 45, 400, 2064, 26538, 280, 225, 34, 45, 400, 2064, 309, 280, 225, 34, 45, 400, 436, 308, 410, 831, 280, 594, 45, 831, 333, 19479, 19911, 45, 3311, 93, 27, 301, 528, 629, 15769, 280, 38151, 77, 93, 970, 528, 2064, 540, 280, 4175]}
{"line_number": 585, "line_type": "original", "code": "            for (int j = 0; j < solvedCols; ++j) {", "entropy": 0.50732421875, "is_bug_line": false, "sus_score": 0.8532736897468567, "per_token_entropy": [4.8203125, 3.056640625, 0.0458984375, 0.0169219970703125, 0.3359375, 0.01247406005859375, 0.027984619140625, 0.00838470458984375, 0.0077667236328125, 0.002582550048828125, 0.027099609375, 0.55615234375, 0.06451416015625, 0.0035457611083984375, 0.014434814453125, 0.0003192424774169922, 0.004497528076171875, 0.1256103515625], "tokens": [1468, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 19479, 19911, 45, 3311, 92, 27, 301]}
{"line_number": 585, "line_type": "generated", "code": "\n     */\n    private void determineLMDirection(final double[] qy, final double[] diag,\n                                     final double[] lmDiag, final double[] lmDir) {\n\n        // copy r and (q transpose)*b to preserve input and initialize s.", "entropy": 0.149169921875, "is_bug_line": false, "sus_score": 0.8532736897468567, "per_token_entropy": [0.53076171875, 0.36376953125, 0.0175628662109375, 0.215087890625, 0.02679443359375, 0.0198822021484375, 0.003757476806640625, 0.00015544891357421875, 6.890296936035156e-05, 0.00727081298828125, 0.548828125, 0.09210205078125, 0.03582763671875, 0.00128936767578125, 0.00040793418884277344, 0.0006380081176757812, 0.61767578125, 0.0008897781372070312, 0.0034236907958984375, 0.048248291015625, 0.0017337799072265625, 0.93896484375, 0.04693603515625, 0.0016307830810546875, 0.0023403167724609375, 0.0164337158203125, 0.025146484375, 0.051361083984375, 0.11383056640625, 0.0022029876708984375, 0.00125885009765625, 0.06866455078125, 0.001300811767578125, 0.005329132080078125, 0.0308074951171875, 0.54052734375, 0.56591796875, 1.36328125, 0.6953125, 0.1851806640625, 0.043304443359375, 0.0004963874816894531, 0.0231170654296875, 0.0059967041015625, 0.0004603862762451172, 0.047119140625, 0.0079345703125, 0.088623046875, 0.00490570068359375, 0.0017652511596679688, 0.004791259765625, 0.331298828125], "tokens": [275, 569, 284, 945, 763, 9921, 62, 5108, 2721, 26, 3220, 2064, 1178, 2678, 107, 30, 1158, 2064, 1178, 15534, 30, 9474, 1158, 2064, 1178, 30780, 26244, 30, 1158, 2064, 1178, 30780, 2976, 27, 301, 584, 434, 1933, 540, 461, 308, 99, 27224, 4586, 84, 372, 24070, 1509, 461, 7379, 309, 32]}
{"line_number": 602, "line_type": "original", "code": "            double correction = fp / (delta * sum2);", "entropy": 3.638671875, "is_bug_line": false, "sus_score": 0.8449231386184692, "per_token_entropy": [6.140625, 1.9873046875, 10.359375, 0.1903076171875, 13.3203125, 0.201416015625, 5.421875, 1.3076171875, 0.6748046875, 3.9921875, 0.052459716796875, 0.005741119384765625], "tokens": [1468, 2064, 25683, 280, 11828, 517, 308, 6558, 319, 3632, 36, 293]}
{"line_number": 602, "line_type": "generated", "code": "\n        for (int j = 0; j < solvedCols; ++j) {\n            int pj = permutation[j];\n            double s = lmDir[j];\n            if (s!= 0) {\n                for (int i = j +", "entropy": 0.2381591796875, "is_bug_line": false, "sus_score": 0.8449231386184692, "per_token_entropy": [0.802734375, 0.436767578125, 0.001117706298828125, 0.00388336181640625, 0.255859375, 0.003925323486328125, 0.0169219970703125, 0.0179595947265625, 0.003429412841796875, 0.00211334228515625, 0.0009598731994628906, 0.02398681640625, 0.006938934326171875, 0.1392822265625, 0.01020050048828125, 0.0001125335693359375, 0.0006284713745117188, 0.00481414794921875, 0.2135009765625, 1.3046875, 0.05926513671875, 0.01453399658203125, 0.0112152099609375, 0.000270843505859375, 0.002429962158203125, 0.0030727386474609375, 0.05767822265625, 0.9384765625, 1.1455078125, 0.06292724609375, 1.6484375, 0.1890869140625, 0.00015425682067871094, 0.298828125, 0.10992431640625, 0.246337890625, 1.1806640625, 0.0142669677734375, 0.6396484375, 0.66796875, 0.0016298294067382812, 1.1086463928222656e-05, 0.11273193359375, 0.0033817291259765625, 0.10028076171875, 0.59521484375, 0.005260467529296875, 0.002033233642578125, 0.79833984375, 0.00199127197265625, 0.0228118896484375, 0.2000732421875], "tokens": [291, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 19479, 19911, 45, 3311, 92, 27, 301, 324, 629, 46704, 280, 38151, 77, 92, 970, 324, 2064, 309, 280, 30780, 2976, 77, 92, 970, 324, 415, 308, 101, 863, 225, 34, 27, 301, 400, 436, 308, 410, 595, 280, 594, 474]}
{"line_number": 591, "line_type": "original", "code": "                work1[pj] /= work2[j];", "entropy": 2.9453125, "is_bug_line": false, "sus_score": 0.8402895331382751, "per_token_entropy": [9.109375, 3.916015625, 2.50390625, 1.080078125, 5.84765625, 0.01337432861328125, 6.0859375, 3.02734375, 1.25, 0.0229644775390625, 2.474609375, 0.0251312255859375], "tokens": [2071, 1389, 35, 77, 25287, 79, 14374, 1389, 36, 77, 92, 970]}
{"line_number": 591, "line_type": "generated", "code": "\n        for (int j = 0; j < solvedCols; ++j) {\n            for (int i = j; i < solvedCols; ++i) {\n                work[i * solvedCols + j] = jacobian[i][j", "entropy": 0.16357421875, "is_bug_line": false, "sus_score": 0.8402895331382751, "per_token_entropy": [0.142822265625, 0.7490234375, 0.0026416778564453125, 0.0011720657348632812, 0.138427734375, 0.009307861328125, 0.0138092041015625, 0.01093292236328125, 0.004302978515625, 0.00033664703369140625, 0.00264739990234375, 0.1700439453125, 0.1243896484375, 0.0016012191772460938, 0.00708770751953125, 7.37905502319336e-05, 0.0009398460388183594, 0.0059051513671875, 0.043304443359375, 1.85546875, 0.0004634857177734375, 0.00027179718017578125, 0.052825927734375, 0.0006151199340820312, 0.200927734375, 0.568359375, 0.0004761219024658203, 0.004131317138671875, 0.00653076171875, 0.1607666015625, 0.00032019615173339844, 0.0004987716674804688, 0.0001360177993774414, 0.0010194778442382812, 0.002063751220703125, 0.01267242431640625, 2.03125, 0.302001953125, 0.04193115234375, 0.75244140625, 0.5078125, 0.1571044921875, 0.00390625, 0.0009484291076660156, 0.0007901191711425781, 0.0008149147033691406, 0.379638671875, 0.0011072158813476562, 0.0061187744140625, 0.0253143310546875, 0.0008969306945800781, 0.0025768280029296875], "tokens": [291, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 19479, 19911, 45, 3311, 92, 27, 301, 324, 436, 308, 410, 595, 280, 594, 45, 595, 333, 19479, 19911, 45, 3311, 91, 27, 301, 400, 1389, 77, 91, 319, 19479, 19911, 474, 594, 79, 280, 594, 30495, 77, 91, 1674, 92]}
{"line_number": 587, "line_type": "original", "code": "                work1[pj] = work3[pj] * diag[pj] / dxNorm;", "entropy": 1.63671875, "is_bug_line": false, "sus_score": 0.8400993347167969, "per_token_entropy": [8.546875, 5.203125, 1.216796875, 0.181884765625, 3.4453125, 0.0181121826171875, 0.88037109375, 1.91796875, 2.029296875, 0.0031375885009765625, 0.07855224609375, 0.4111328125, 2.3046875, 2.58203125, 0.009124755859375, 0.01375579833984375, 2.990234375, 0.9345703125, 1.5263671875, 0.0027618408203125, 0.07080078125], "tokens": [2071, 1389, 35, 77, 25287, 79, 280, 1389, 37, 77, 25287, 79, 319, 15534, 77, 25287, 79, 517, 12211, 14373, 45]}
{"line_number": 587, "line_type": "generated", "code": "\n    private void determineLMDirection(final double[] qy, final double[] diag,\n            final double[] lmDiag, final double[] work) {\n\n        // copy r and (q transpose)*b to preserve input and initialize s\n        final int n", "entropy": 0.200439453125, "is_bug_line": false, "sus_score": 0.8400993347167969, "per_token_entropy": [0.444580078125, 0.482666015625, 0.03582763671875, 0.0650634765625, 0.007171630859375, 0.0004241466522216797, 8.666515350341797e-05, 0.00922393798828125, 0.6572265625, 0.077880859375, 0.0303802490234375, 0.0029888153076171875, 0.0005173683166503906, 0.0007877349853515625, 0.70361328125, 0.0007877349853515625, 0.0040740966796875, 0.023040771484375, 0.0010347366333007812, 1.45703125, 0.1463623046875, 0.0009369850158691406, 0.00152587890625, 0.00811767578125, 0.04132080078125, 0.0003883838653564453, 0.10504150390625, 0.0010023117065429688, 0.0008568763732910156, 0.011749267578125, 0.01617431640625, 0.026397705078125, 0.55078125, 0.61767578125, 1.2548828125, 0.49951171875, 0.1890869140625, 0.03173828125, 0.0004856586456298828, 0.022247314453125, 0.006378173828125, 0.00040221214294433594, 0.056640625, 0.009033203125, 0.10894775390625, 0.00435638427734375, 0.00177001953125, 0.0097808837890625, 0.68115234375, 1.357421875, 0.1671142578125, 0.490478515625], "tokens": [284, 945, 763, 9921, 62, 5108, 2721, 26, 3220, 2064, 1178, 2678, 107, 30, 1158, 2064, 1178, 15534, 30, 324, 1158, 2064, 1178, 30780, 26244, 30, 1158, 2064, 1178, 1389, 27, 301, 584, 434, 1933, 540, 461, 308, 99, 27224, 4586, 84, 372, 24070, 1509, 461, 7379, 309, 291, 1158, 629, 310]}
{"line_number": 512, "line_type": "original", "code": "                work1[pj] *= diag[pj] / dxNorm;", "entropy": 1.9853515625, "is_bug_line": false, "sus_score": 0.8398914337158203, "per_token_entropy": [7.26953125, 0.5234375, 0.39111328125, 0.0002613067626953125, 0.0282135009765625, 0.0007009506225585938, 2.26171875, 9.71875, 0.339111328125, 0.0017595291137695312, 0.12744140625, 1.8720703125, 6.796875, 0.00617218017578125, 0.451416015625], "tokens": [2071, 1389, 35, 77, 25287, 79, 10439, 15534, 77, 25287, 79, 517, 12211, 14373, 45]}
{"line_number": 512, "line_type": "generated", "code": "\n            }\n            double fPar = dxNorm - delta;\n\n            // check for convergence\n            if (Math.abs(fPar) <= 0.1 * delta) {\n                return;\n            }\n\n            // compute the newton correction\n            double parc", "entropy": 0.1409912109375, "is_bug_line": false, "sus_score": 0.8398914337158203, "per_token_entropy": [0.06732177734375, 0.0002243518829345703, 0.09869384765625, 0.310302734375, 0.85693359375, 0.9228515625, 0.0016498565673828125, 0.0328369140625, 0.0019273757934570312, 0.0023365020751953125, 0.004764556884765625, 0.00527191162109375, 0.089599609375, 0.00989532470703125, 0.347412109375, 0.806640625, 1.34375, 0.00994110107421875, 0.01043701171875, 0.009735107421875, 0.0711669921875, 0.0017919540405273438, 0.0010900497436523438, 0.0026035308837890625, 0.00714874267578125, 3.159046173095703e-05, 0.0190277099609375, 0.005619049072265625, 0.0160064697265625, 0.00325775146484375, 0.00010061264038085938, 0.00051116943359375, 0.0023174285888671875, 0.0021514892578125, 0.02093505859375, 0.0021572113037109375, 0.00882720947265625, 0.2493896484375, 0.0001767873764038086, 0.006603240966796875, 5.316734313964844e-05, 0.01029205322265625, 0.006252288818359375, 0.271484375, 0.0005817413330078125, 0.75390625, 0.023895263671875, 0.00988006591796875, 0.0174102783203125, 0.088134765625, 0.79150390625, 0.006664276123046875], "tokens": [324, 320, 324, 2064, 296, 926, 280, 12211, 14373, 429, 7715, 45, 1064, 434, 1505, 436, 47454, 324, 415, 308, 5717, 32, 3596, 26, 88, 926, 27, 2511, 225, 34, 32, 35, 319, 7715, 27, 301, 400, 442, 45, 324, 320, 1064, 434, 7596, 322, 537, 937, 25683, 324, 2064, 880, 85]}
{"line_number": 600, "line_type": "original", "code": "                sum2 += s * s;", "entropy": 2.65625, "is_bug_line": false, "sus_score": 0.8348617553710938, "per_token_entropy": [8.59375, 5.03125, 2.6484375, 3.71875, 0.91943359375, 0.09918212890625, 0.21826171875, 0.018096923828125], "tokens": [2071, 3632, 36, 1454, 309, 319, 309, 45]}
{"line_number": 600, "line_type": "generated", "code": "\n\n        // eliminate the diagonal matrix d using a Givens rotation\n        for (int j = 0; j < solvedCols; ++j) {\n\n            // prepare the row of d to be eliminated, locating the\n            // diagonal element using P", "entropy": 0.0968017578125, "is_bug_line": false, "sus_score": 0.8348617553710938, "per_token_entropy": [0.76416015625, 0.1021728515625, 0.69921875, 0.0004982948303222656, 0.4990234375, 0.007686614990234375, 0.0097808837890625, 0.0006709098815917969, 0.0010585784912109375, 0.12005615234375, 0.0042266845703125, 2.9802322387695312e-06, 0.019866943359375, 0.033416748046875, 0.0469970703125, 0.0004570484161376953, 0.00104522705078125, 0.1549072265625, 0.0022907257080078125, 0.00988006591796875, 0.01377105712890625, 0.0027141571044921875, 0.0014486312866210938, 0.00057220458984375, 0.0201568603515625, 0.006130218505859375, 0.2000732421875, 0.0102081298828125, 0.00010979175567626953, 0.0005207061767578125, 0.004497528076171875, 0.890625, 0.4072265625, 0.03692626953125, 0.0002275705337524414, 0.017852783203125, 2.4318695068359375e-05, 0.06719970703125, 5.7578086853027344e-05, 8.940696716308594e-05, 0.04815673828125, 2.276897430419922e-05, 0.5283203125, 0.005687713623046875, 0.0007538795471191406, 0.0002651214599609375, 0.00923919677734375, 0.0006494522094726562, 0.00702667236328125, 0.003360748291015625, 0.0037364959716796875, 0.270263671875], "tokens": [584, 434, 40533, 322, 27601, 5045, 343, 1471, 312, 570, 387, 1229, 11410, 291, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 19479, 19911, 45, 3311, 92, 27, 301, 1064, 434, 11656, 322, 2698, 432, 343, 372, 526, 16511, 18096, 30, 2587, 1741, 322, 324, 434, 27601, 1994, 1471, 447]}
{"line_number": 594, "line_type": "original", "code": "                    work1[permutation[i]] -= jacobian[i][pj] * tmp;", "entropy": 2.943359375, "is_bug_line": false, "sus_score": 0.8337802290916443, "per_token_entropy": [8.7421875, 3.236328125, 6.55078125, 0.008636474609375, 6.734375, 0.0012712478637695312, 4.38671875, 0.030853271484375, 3.375, 10.2890625, 3.603515625, 0.224853515625, 0.43994140625, 0.143798828125, 2.6484375, 0.09002685546875, 0.0142974853515625, 5.04296875, 0.336181640625], "tokens": [4696, 1389, 35, 77, 40237, 77, 91, 3212, 5912, 594, 30495, 77, 91, 1674, 25287, 79, 319, 3691, 45]}
{"line_number": 594, "line_type": "generated", "code": "\n            lmDiag[j] = diag[pj];\n        }\n\n        // eliminate the variables that are no longer needed,\n        // and adjust the diagonal elements of R\n        int n = solvedCols;\n        for (int j = 0; j < n", "entropy": 0.35009765625, "is_bug_line": false, "sus_score": 0.8337802290916443, "per_token_entropy": [1.380859375, 0.22705078125, 0.1199951171875, 0.0003256797790527344, 0.33544921875, 0.0003325939178466797, 0.005397796630859375, 0.04388427734375, 0.0027713775634765625, 0.0248870849609375, 0.037567138671875, 0.33984375, 0.0002758502960205078, 0.42236328125, 0.189697265625, 0.478271484375, 0.0002294778823852539, 1.8466796875, 1.205078125, 0.042816162109375, 0.427734375, 0.0026226043701171875, 0.466552734375, 0.397705078125, 0.5126953125, 0.0092010498046875, 1.7275390625, 2.41015625, 0.00225067138671875, 0.199462890625, 0.87744140625, 0.034637451171875, 0.000980377197265625, 0.2333984375, 0.6103515625, 0.429931640625, 0.861328125, 0.468994140625, 0.08306884765625, 0.84423828125, 0.0230712890625, 0.134765625, 0.0008802413940429688, 0.0004451274871826172, 0.167236328125, 0.0004584789276123047, 0.237060546875, 0.0175323486328125, 0.002826690673828125, 0.0004916191101074219, 0.0013074874877929688, 0.31298828125], "tokens": [324, 30780, 26244, 77, 92, 79, 280, 15534, 77, 25287, 970, 291, 320, 584, 434, 40533, 322, 4886, 688, 884, 1289, 8928, 5349, 30, 291, 434, 461, 10891, 322, 27601, 4702, 432, 559, 291, 629, 310, 280, 19479, 19911, 45, 291, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 310]}
{"line_number": 519, "line_type": "original", "code": "                    sum += jacobian[i][pj] * work1[permutation[i]];", "entropy": 1.0791015625, "is_bug_line": false, "sus_score": 0.8293185234069824, "per_token_entropy": [7.1015625, 3.279296875, 0.334228515625, 0.415771484375, 0.0034503936767578125, 0.00469970703125, 0.54638671875, 0.00167083740234375, 0.042694091796875, 0.01104736328125, 0.003192901611328125, 0.6435546875, 2.63671875, 0.003734588623046875, 4.32421875, 0.0007953643798828125, 0.0272216796875, 0.040618896484375], "tokens": [4696, 3632, 1454, 594, 30495, 77, 91, 1674, 25287, 79, 319, 1389, 35, 77, 40237, 77, 91, 19730]}
{"line_number": 519, "line_type": "generated", "code": "\n            }\n            dxNorm = Math.sqrt(dxNorm);\n            double fp = dxNorm - delta;\n\n            // check the new value of lmPar\n            if (fp <= 0.1 * delta) {\n                break;\n            }\n            if (", "entropy": 0.1297607421875, "is_bug_line": false, "sus_score": 0.8293185234069824, "per_token_entropy": [0.362060546875, 0.0008921623229980469, 0.09423828125, 0.546875, 0.033721923828125, 0.0034942626953125, 0.001796722412109375, 0.00011599063873291016, 0.002246856689453125, 0.0010690689086914062, 0.0038738250732421875, 4.649162292480469e-06, 0.0051116943359375, 0.051483154296875, 0.00904083251953125, 1.046875, 0.7294921875, 0.006000518798828125, 1.3589859008789062e-05, 3.135204315185547e-05, 0.0003104209899902344, 0.00025653839111328125, 0.10003662109375, 0.04132080078125, 0.252197265625, 0.88525390625, 0.1656494140625, 0.34716796875, 3.814697265625e-06, 0.0242462158203125, 7.259845733642578e-05, 0.0036258697509765625, 0.001033782958984375, 0.0265960693359375, 0.0204925537109375, 0.2578125, 0.0001436471939086914, 2.5033950805664062e-06, 0.00023186206817626953, 2.944469451904297e-05, 0.001750946044921875, 6.175041198730469e-05, 0.0152435302734375, 0.0011882781982421875, 0.023193359375, 0.86865234375, 0.0004203319549560547, 0.00785064697265625, 0.00019752979278564453, 0.5556640625, 0.2476806640625, 0.001983642578125], "tokens": [324, 320, 324, 12211, 14373, 280, 4175, 32, 8663, 26, 4582, 14373, 293, 324, 2064, 11828, 280, 12211, 14373, 429, 7715, 45, 1064, 434, 1505, 322, 537, 786, 432, 30780, 926, 324, 415, 308, 4426, 2511, 225, 34, 32, 35, 319, 7715, 27, 301, 400, 1626, 45, 324, 320, 324, 415, 308]}
{"line_number": 539, "line_type": "original", "code": "        double gNorm = Math.sqrt(sum2);", "entropy": 1.1728515625, "is_bug_line": false, "sus_score": 0.8283969759941101, "per_token_entropy": [4.0078125, 0.67138671875, 2.54296875, 1.9990234375, 2.12890625, 2.091796875, 0.0014667510986328125, 0.048004150390625, 0.0396728515625, 0.46142578125, 0.06585693359375, 0.0150146484375], "tokens": [351, 2064, 485, 14373, 280, 4175, 32, 8663, 26, 1036, 36, 293]}
{"line_number": 539, "line_type": "generated", "code": "\n            double den = -delta;\n            for (int j = 0; j < solvedCols; ++j) {\n                int pj = permutation[j];\n                double num = work1[pj];\n                for (int i = 0; i", "entropy": 0.1553955078125, "is_bug_line": false, "sus_score": 0.8283969759941101, "per_token_entropy": [0.1478271484375, 0.4267578125, 1.8388671875, 0.1453857421875, 0.87548828125, 1.4521484375, 0.044219970703125, 0.02294921875, 0.1031494140625, 0.0004315376281738281, 0.0002455711364746094, 0.0771484375, 0.0015230178833007812, 0.00146484375, 0.00164031982421875, 0.001995086669921875, 0.0006432533264160156, 0.00690460205078125, 0.007389068603515625, 0.004520416259765625, 0.0012178421020507812, 0.0024242401123046875, 1.52587890625e-05, 0.0002453327178955078, 0.0023746490478515625, 0.0064849853515625, 0.12005615234375, 0.0010528564453125, 0.00018727779388427734, 0.0007147789001464844, 0.001567840576171875, 0.00010466575622558594, 0.00033092498779296875, 0.0039520263671875, 0.2958984375, 0.8701171875, 0.007205963134765625, 0.95947265625, 0.341064453125, 8.71419906616211e-05, 0.004184722900390625, 0.1605224609375, 0.00787353515625, 0.0552978515625, 0.0002636909484863281, 9.608268737792969e-05, 0.0159149169921875, 0.0006546974182128906, 0.055389404296875, 0.00036025047302246094, 9.238719940185547e-05, 0.00017499923706054688], "tokens": [324, 2064, 5537, 280, 429, 6558, 45, 324, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 19479, 19911, 45, 3311, 92, 27, 301, 400, 629, 46704, 280, 38151, 77, 92, 970, 400, 2064, 1929, 280, 1389, 35, 77, 25287, 970, 400, 436, 308, 410, 595, 280, 225, 34, 45, 595]}
{"line_number": 548, "line_type": "original", "code": "        lmPar = Math.min(paru, Math.max(lmPar, parl));", "entropy": 0.8427734375, "is_bug_line": false, "sus_score": 0.8283969759941101, "per_token_entropy": [3.443359375, 4.32421875, 0.236572265625, 0.377685546875, 1.74609375, 0.00370025634765625, 2.18359375, 0.005672454833984375, 1.0537109375, 0.0096435546875, 0.0012559890747070312, 2.8671875, 0.0009064674377441406, 0.00011479854583740234, 0.0003197193145751953, 0.68994140625, 0.00020706653594970703, 0.0305633544921875, 0.58154296875, 0.0012178421020507812, 0.149658203125], "tokens": [351, 30780, 926, 280, 4175, 32, 887, 26, 568, 103, 30, 4175, 32, 1449, 26, 12750, 926, 30, 880, 94, 876]}
{"line_number": 548, "line_type": "generated", "code": "\n            for (int j = 0; j < solvedCols; ++j) {\n                int pj = permutation[j];\n                double s = work1[pj];\n                lmDir[pj] = s;\n                sum2 += s * s;", "entropy": 0.0931396484375, "is_bug_line": false, "sus_score": 0.8283969759941101, "per_token_entropy": [0.19287109375, 0.2110595703125, 0.0008335113525390625, 0.00044536590576171875, 0.031524658203125, 0.0015125274658203125, 0.0006108283996582031, 0.0012140274047851562, 0.0003502368927001953, 0.000591278076171875, 0.0008478164672851562, 0.004261016845703125, 0.0008654594421386719, 0.001117706298828125, 0.002105712890625, 3.3020973205566406e-05, 0.00028228759765625, 0.0008854866027832031, 0.004055023193359375, 0.1837158203125, 0.0009288787841796875, 0.0001500844955444336, 0.0004031658172607422, 2.2530555725097656e-05, 9.167194366455078e-05, 0.0004673004150390625, 0.0029754638671875, 0.2467041015625, 0.71240234375, 0.0165863037109375, 0.476318359375, 0.039215087890625, 6.890296936035156e-05, 0.00403594970703125, 0.185546875, 0.00749969482421875, 1.888671875, 0.01557159423828125, 0.01320648193359375, 0.00331878662109375, 7.259845733642578e-05, 0.282470703125, 0.0248870849609375, 0.006103515625, 0.00429534912109375, 0.159912109375, 0.0006909370422363281, 0.0012969970703125, 0.01422119140625, 0.0011529922485351562, 0.0823974609375, 0.01256561279296875], "tokens": [324, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 19479, 19911, 45, 3311, 92, 27, 301, 400, 629, 46704, 280, 38151, 77, 92, 970, 400, 2064, 309, 280, 1389, 35, 77, 25287, 970, 400, 30780, 2976, 77, 25287, 79, 280, 309, 45, 400, 3632, 36, 1454, 309, 319, 309, 45]}
{"line_number": 378, "line_type": "original", "code": "                    double tmp =", "entropy": 5.18359375, "is_bug_line": false, "sus_score": 0.8263189196586609, "per_token_entropy": [6.59375, 8.2109375, 5.44921875, 0.477783203125], "tokens": [4696, 2064, 3691, 280]}
{"line_number": 378, "line_type": "generated", "code": "\n                            costRelativeTolerance);\n                }\n                if (delta <= 2.2204e-16) {\n                    throw new OptimizationException(\"step relative tolerance is too small ({0}),\" +\n                            \" no further improvement in the\" +\n                           ", "entropy": 0.1434326171875, "is_bug_line": false, "sus_score": 0.8263189196586609, "per_token_entropy": [0.72119140625, 0.1470947265625, 0.004364013671875, 0.0005035400390625, 0.04791259765625, 0.032257080078125, 0.0035877227783203125, 0.407470703125, 0.0178375244140625, 0.35009765625, 0.39404296875, 0.04803466796875, 0.27587890625, 0.142822265625, 0.0200347900390625, 0.0028934478759765625, 0.0003418922424316406, 0.00030350685119628906, 0.0008287429809570312, 0.00211334228515625, 0.0004711151123046875, 0.00044417381286621094, 0.0010242462158203125, 0.80615234375, 0.004772186279296875, 0.0240325927734375, 0.1212158203125, 0.0004119873046875, 0.005390167236328125, 3.1948089599609375e-05, 0.034912109375, 1.328125, 1.0380859375, 0.00241851806640625, 0.0036487579345703125, 0.0025424957275390625, 0.014129638671875, 0.3017578125, 0.002330780029296875, 0.03204345703125, 0.06121826171875, 0.00908660888671875, 0.0399169921875, 0.0007476806640625, 0.373779296875, 0.0001842975616455078, 0.0869140625, 0.080078125, 0.413818359375, 0.044830322265625, 0.00234222412109375, 0.0060272216796875], "tokens": [1014, 7847, 11777, 26265, 293, 400, 320, 400, 415, 308, 6558, 2511, 225, 36, 32, 36, 36, 34, 38, 87, 31, 35, 40, 27, 301, 528, 1422, 537, 41916, 984, 440, 2997, 6491, 26434, 438, 5133, 5532, 5989, 34, 13431, 20, 474, 1014, 313, 1289, 9686, 26289, 328, 322, 20, 474, 1014]}
{"line_number": 533, "line_type": "original", "code": "            for (int i = 0; i <= j; ++i) {", "entropy": 1.0244140625, "is_bug_line": false, "sus_score": 0.8244748115539551, "per_token_entropy": [5.30859375, 3.923828125, 0.006542205810546875, 0.01812744140625, 0.93505859375, 0.01300811767578125, 0.0202484130859375, 0.005779266357421875, 0.00243377685546875, 0.001194000244140625, 3.8984375, 2.888671875, 0.341552734375, 0.0157012939453125, 0.0015516281127929688, 0.004711151123046875, 0.032562255859375], "tokens": [1468, 436, 308, 410, 595, 280, 225, 34, 45, 595, 2511, 594, 45, 3311, 91, 27, 301]}
{"line_number": 533, "line_type": "generated", "code": "\n\n            // compute the Newton correction\n            for (int j = 0; j < solvedCols; ++j) {\n                int pj = permutation[j];\n                work1[pj] *= diag[pj] / dxNorm;\n            }\n            double", "entropy": 0.128173828125, "is_bug_line": false, "sus_score": 0.8244748115539551, "per_token_entropy": [1.2138671875, 0.038421630859375, 0.0335693359375, 0.0005583763122558594, 0.1025390625, 5.3763389587402344e-05, 0.045318603515625, 0.06353759765625, 1.3271484375, 0.0003845691680908203, 0.0012912750244140625, 0.0195465087890625, 0.000965118408203125, 0.00018906593322753906, 0.00021529197692871094, 0.0007834434509277344, 0.0005269050598144531, 0.0004696846008300781, 0.0027256011962890625, 0.0019369125366210938, 0.0003497600555419922, 0.0024967193603515625, 4.2557716369628906e-05, 0.00035691261291503906, 0.0009965896606445312, 0.0091552734375, 0.06951904296875, 0.0008416175842285156, 0.0002505779266357422, 0.0004036426544189453, 2.5272369384765625e-05, 0.0001055002212524414, 0.0003037452697753906, 0.004383087158203125, 0.830078125, 0.67578125, 0.00024366378784179688, 0.0016241073608398438, 8.606910705566406e-05, 0.325927734375, 0.0243682861328125, 0.0251312255859375, 7.665157318115234e-05, 0.001415252685546875, 0.0004134178161621094, 0.0008025169372558594, 2.86102294921875e-06, 0.0006480216979980469, 0.316650390625, 2.1576881408691406e-05, 0.08807373046875, 1.4296875], "tokens": [1064, 434, 7596, 322, 3136, 937, 25683, 324, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 19479, 19911, 45, 3311, 92, 27, 301, 400, 629, 46704, 280, 38151, 77, 92, 970, 400, 1389, 35, 77, 25287, 79, 10439, 15534, 77, 25287, 79, 517, 12211, 14373, 45, 324, 320, 324, 2064]}
