{"line_number": 205, "line_type": "original", "code": "        return dimension;", "entropy": 4.30078125, "is_bug_line": false, "sus_score": 0.6265296339988708, "per_token_entropy": [3.330078125, 4.078125, 8.7578125, 1.0322265625], "tokens": [351, 442, 8742, 45]}
{"line_number": 205, "line_type": "generated", "code": "    }\n\n    /**\n     * Get the total number of possible counts.\n     *\n     * @return the total number of possible counts.\n     */\n    public int getTotalSize() {\n        return totalSize;\n    }\n\n    /**\n     * Get the size of a", "entropy": 0.294677734375, "is_bug_line": false, "sus_score": 0.6265296339988708, "per_token_entropy": [1.568359375, 0.2354736328125, 0.71826171875, 0.08953857421875, 0.0140533447265625, 0.0024585723876953125, 0.65087890625, 0.1220703125, 1.78125, 0.8681640625, 0.00632476806640625, 1.9912109375, 1.193359375, 0.356201171875, 0.036376953125, 0.0002815723419189453, 0.0406494140625, 0.00013840198516845703, 0.004390716552734375, 0.000537872314453125, 0.10308837890625, 0.321533203125, 0.33544921875, 0.06219482421875, 0.25341796875, 0.01258087158203125, 0.0648193359375, 0.0219879150390625, 0.00868988037109375, 0.00849151611328125, 0.0029773712158203125, 0.1607666015625, 0.93017578125, 0.3271484375, 0.0028095245361328125, 0.0011644363403320312, 0.2587890625, 0.0012941360473632812, 0.00710296630859375, 4.5180320739746094e-05, 0.0008502006530761719, 0.05206298828125, 0.00031185150146484375, 0.11309814453125, 0.012451171875, 0.00591278076171875, 0.00054931640625, 0.14306640625, 0.11114501953125, 0.449951171875, 0.23388671875, 1.630859375], "tokens": [264, 320, 446, 1022, 275, 319, 1390, 322, 3380, 1451, 432, 4195, 15172, 32, 275, 319, 275, 319, 477, 601, 322, 3380, 1451, 432, 4195, 15172, 32, 275, 569, 284, 562, 629, 45323, 1250, 346, 301, 291, 442, 3380, 1250, 45, 284, 320, 446, 1022, 275, 319, 1390, 322, 1334, 432, 312]}
{"line_number": 106, "line_type": "original", "code": "            for (int i = last; i >= 0; i--) {", "entropy": 0.76123046875, "is_bug_line": false, "sus_score": 0.5374895930290222, "per_token_entropy": [5.26171875, 2.591796875, 0.029144287109375, 0.021209716796875, 0.0584716796875, 0.015869140625, 3.3046875, 0.4091796875, 0.05126953125, 0.171142578125, 0.0136871337890625, 0.005889892578125, 0.048431396484375, 0.173828125, 0.005870819091796875, 0.0191650390625], "tokens": [1468, 436, 308, 410, 595, 280, 2401, 45, 595, 2377, 225, 34, 45, 595, 15353, 301]}
{"line_number": 106, "line_type": "generated", "code": "\n    }\n\n    /**\n     * @param size Multidimensional counter size.\n     */\n    public MultidimensionalCounter(int... size) {\n        this.size = MathUtils.copyOf(size);\n        this.dimension = size.length;", "entropy": 0.292236328125, "is_bug_line": false, "sus_score": 0.5374895930290222, "per_token_entropy": [0.467041015625, 0.0167388916015625, 0.67919921875, 0.041595458984375, 0.023529052734375, 0.0001609325408935547, 2.013671875, 1.7333984375, 0.82958984375, 1.7236328125, 0.0036869049072265625, 0.01507568359375, 0.0056610107421875, 0.36083984375, 1.1201171875, 0.33349609375, 0.039947509765625, 0.640625, 0.007396697998046875, 0.191650390625, 0.03338623046875, 0.00025081634521484375, 0.0007643699645996094, 7.748603820800781e-06, 0.0013713836669921875, 0.00337982177734375, 0.257568359375, 0.62548828125, 0.0153961181640625, 0.0030612945556640625, 0.032958984375, 0.07861328125, 0.42236328125, 0.053466796875, 0.1722412109375, 0.0158538818359375, 0.83984375, 0.0516357421875, 0.0013017654418945312, 0.0672607421875, 0.0008978843688964844, 0.006198883056640625, 0.0218963623046875, 0.1044921875, 0.7880859375, 0.0025234222412109375, 1.005859375, 0.001300811767578125, 0.33935546875, 0.0014257431030273438, 0.00013446807861328125, 0.0011930465698242188], "tokens": [284, 320, 446, 1022, 275, 319, 477, 753, 1334, 18423, 314, 39786, 279, 7022, 1334, 32, 275, 569, 284, 562, 18423, 314, 39786, 279, 6477, 26, 410, 1179, 1334, 27, 301, 291, 458, 32, 891, 280, 4175, 2755, 32, 36981, 26, 891, 293, 291, 458, 32, 11694, 280, 1334, 32, 1322, 45]}
{"line_number": 196, "line_type": "original", "code": "        return new Iterator();", "entropy": 3.462890625, "is_bug_line": false, "sus_score": 0.5347766280174255, "per_token_entropy": [5.9921875, 1.1328125, 2.94921875, 5.26953125, 1.97265625], "tokens": [351, 442, 537, 14743, 473]}
{"line_number": 196, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Get the size (number of slots) in the specified dimension.\n     *\n     * @param dim Dimension.\n     * @return the size.\n     * @throws OutOfRangeException if {@code dim} is not between\n    ", "entropy": 0.2095947265625, "is_bug_line": false, "sus_score": 0.5347766280174255, "per_token_entropy": [0.10205078125, 0.0013971328735351562, 0.28125, 0.017974853515625, 0.0097198486328125, 8.14199447631836e-05, 0.5693359375, 0.2352294921875, 0.91455078125, 1.79296875, 0.32666015625, 0.0016355514526367188, 0.5341796875, 0.199951171875, 1.203125, 1.173828125, 0.7177734375, 0.0204010009765625, 0.036956787109375, 0.00537872314453125, 5.14984130859375e-05, 0.03594970703125, 0.00012993812561035156, 0.004253387451171875, 0.0031223297119140625, 0.26611328125, 0.22705078125, 0.24609375, 0.007694244384765625, 0.00010561943054199219, 0.0015821456909179688, 0.00933837890625, 0.09954833984375, 0.251220703125, 0.48388671875, 0.001041412353515625, 0.01062774658203125, 0.00133514404296875, 0.00507354736328125, 0.1488037109375, 4.935264587402344e-05, 0.00014102458953857422, 0.00015306472778320312, 0.01129913330078125, 0.06268310546875, 0.000335693359375, 0.06634521484375, 0.0198516845703125, 0.033447265625, 0.368896484375, 0.179443359375, 0.207763671875], "tokens": [284, 320, 446, 1022, 275, 319, 1390, 322, 1334, 308, 2171, 432, 20508, 27, 328, 322, 3191, 8742, 32, 275, 319, 275, 319, 477, 753, 4406, 17417, 32, 275, 319, 477, 601, 322, 1334, 32, 275, 319, 477, 5117, 4306, 1419, 3198, 984, 415, 3088, 687, 4406, 111, 438, 646, 3733, 275]}
{"line_number": 264, "line_type": "original", "code": "        for (int i = 0; i < dimension; i++) {", "entropy": 0.7021484375, "is_bug_line": false, "sus_score": 0.5315244197845459, "per_token_entropy": [4.12109375, 4.16796875, 0.0161590576171875, 0.033172607421875, 0.2095947265625, 0.0211181640625, 0.2626953125, 0.035003662109375, 0.0246734619140625, 0.0027923583984375, 0.042755126953125, 2.13671875, 0.10504150390625, 0.02001953125, 0.0030117034912109375, 0.03594970703125], "tokens": [351, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 8742, 45, 595, 1987, 301]}
{"line_number": 264, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5315244197845459, "per_token_entropy": [], "tokens": []}
{"line_number": 107, "line_type": "original", "code": "                if (counter[i] == size[i] - 1) {", "entropy": 1.046875, "is_bug_line": false, "sus_score": 0.530062735080719, "per_token_entropy": [9.0078125, 2.955078125, 0.09857177734375, 2.85546875, 0.040069580078125, 0.347412109375, 0.006290435791015625, 2.0546875, 0.0894775390625, 0.005008697509765625, 0.0025177001953125, 0.12188720703125, 0.004505157470703125, 0.006732940673828125, 0.0020599365234375, 0.036865234375, 0.161376953125], "tokens": [2071, 415, 308, 4680, 77, 91, 79, 610, 1334, 77, 91, 79, 429, 225, 35, 27, 301]}
{"line_number": 107, "line_type": "generated", "code": "\n    /**\n     * @return a new iterator\n     */\n    public Iterator iterator() {\n        return new Iterator();\n    }", "entropy": 0.3701171875, "is_bug_line": false, "sus_score": 0.530062735080719, "per_token_entropy": [0.876953125, 0.2022705078125, 0.051361083984375, 0.00087738037109375, 1.947265625, 0.4287109375, 1.828125, 0.411376953125, 0.80517578125, 1.8037109375, 0.36279296875, 0.007678985595703125, 0.0670166015625, 0.03668212890625, 0.006134033203125, 0.0020198822021484375, 0.0033721923828125, 0.0172119140625, 0.004970550537109375, 0.0027618408203125, 0.002658843994140625, 0.0011529922485351562, 0.00940704345703125, 0.0010557174682617188], "tokens": [284, 1022, 275, 319, 477, 601, 312, 537, 10032, 275, 569, 284, 562, 14743, 10032, 346, 301, 291, 442, 537, 14743, 473, 284, 320]}
{"line_number": 93, "line_type": "original", "code": "            for (int i = 0; i < dimension; i++) {", "entropy": 0.87060546875, "is_bug_line": false, "sus_score": 0.5275614261627197, "per_token_entropy": [1.626953125, 9.1640625, 0.57568359375, 0.093505859375, 0.2061767578125, 0.27294921875, 0.212890625, 0.01806640625, 0.0811767578125, 0.0132598876953125, 0.260009765625, 0.88623046875, 0.03472900390625, 0.0634765625, 0.0308837890625, 0.3876953125], "tokens": [1468, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 8742, 45, 595, 1987, 301]}
{"line_number": 93, "line_type": "generated", "code": "            constructor.\n         */\n        public int getCount(int dim) {\n            return counter[dim];\n        }\n\n        /**\n         * Get the current multidimensional counter slots.\n         *\n         * @param dim Dimension index.\n         * @return the", "entropy": 0.241943359375, "is_bug_line": false, "sus_score": 0.5275614261627197, "per_token_entropy": [1.6298828125, 0.365966796875, 1.7587890625, 0.0196685791015625, 0.058441162109375, 0.00873565673828125, 0.00539398193359375, 0.01003265380859375, 0.07293701171875, 0.12493896484375, 0.0264892578125, 0.429931640625, 0.0042266845703125, 0.00284576416015625, 0.1658935546875, 0.0728759765625, 0.266845703125, 0.033599853515625, 0.002471923828125, 0.0030803680419921875, 0.0039005279541015625, 0.0178985595703125, 0.00039958953857421875, 0.583984375, 0.00630950927734375, 0.0139312744140625, 0.0028057098388671875, 0.96142578125, 0.03253173828125, 0.8115234375, 2.396484375, 0.0035648345947265625, 0.00894927978515625, 0.00482940673828125, 0.6435546875, 0.98974609375, 0.408935546875, 0.0144195556640625, 3.409385681152344e-05, 0.035919189453125, 3.421306610107422e-05, 0.00289154052734375, 0.2391357421875, 0.1572265625, 0.089599609375, 0.033111572265625, 0.0260467529296875, 0.00356292724609375, 9.799003601074219e-05, 0.0018491744995117188, 0.0069427490234375, 0.0162200927734375], "tokens": [1468, 4374, 32, 276, 569, 291, 562, 629, 622, 1534, 26, 410, 4406, 27, 301, 324, 442, 7022, 77, 3534, 970, 291, 320, 584, 1022, 276, 319, 1390, 322, 1550, 10151, 314, 39786, 279, 7022, 20508, 32, 276, 319, 276, 319, 477, 753, 4406, 17417, 1650, 32, 276, 319, 477, 601, 322]}
{"line_number": 94, "line_type": "original", "code": "                if (counter[i] != size[i] - 1) {", "entropy": 1.314453125, "is_bug_line": false, "sus_score": 0.5273256897926331, "per_token_entropy": [6.24609375, 6.99609375, 0.9296875, 2.21875, 0.80029296875, 0.76806640625, 0.025848388671875, 3.330078125, 0.409423828125, 0.0134124755859375, 0.005741119384765625, 0.17822265625, 0.0163726806640625, 0.016021728515625, 0.0018453598022460938, 0.0877685546875, 0.292236328125], "tokens": [2071, 415, 308, 4680, 77, 91, 79, 863, 1334, 77, 91, 79, 429, 225, 35, 27, 301]}
{"line_number": 94, "line_type": "generated", "code": " constructor}.\n         */\n        public int getCount(final int dim) {\n            return counter[dim];\n        }\n\n        /**\n         * Get the current count in the selected dimension.\n         *\n         * @param dim Dimension index.\n         * @return the count", "entropy": 0.2020263671875, "is_bug_line": false, "sus_score": 0.5273256897926331, "per_token_entropy": [1.73046875, 1.3232421875, 0.0269622802734375, 0.07666015625, 0.0092010498046875, 0.006290435791015625, 0.0084075927734375, 0.064208984375, 0.10968017578125, 0.0352783203125, 0.97509765625, 0.0005636215209960938, 0.0021839141845703125, 0.002895355224609375, 0.10479736328125, 0.045440673828125, 0.271240234375, 0.0418701171875, 0.0020599365234375, 0.0036411285400390625, 0.005222320556640625, 0.00972747802734375, 0.00026035308837890625, 0.533203125, 0.0070953369140625, 0.0127105712890625, 0.0011682510375976562, 0.953125, 0.0338134765625, 0.74609375, 2.05859375, 0.171630859375, 0.0908203125, 0.05230712890625, 0.12408447265625, 0.07000732421875, 0.00620269775390625, 2.956390380859375e-05, 0.0311431884765625, 0.00027060508728027344, 0.004474639892578125, 0.0146942138671875, 0.2049560546875, 0.039093017578125, 0.042388916015625, 0.0119171142578125, 0.0010232925415039062, 4.553794860839844e-05, 0.0011301040649414062, 0.20068359375, 0.0164947509765625, 0.22119140625], "tokens": [4374, 4009, 276, 569, 291, 562, 629, 622, 1534, 26, 3220, 629, 4406, 27, 301, 324, 442, 7022, 77, 3534, 970, 291, 320, 584, 1022, 276, 319, 1390, 322, 1550, 2385, 328, 322, 4324, 8742, 32, 276, 319, 276, 319, 477, 753, 4406, 17417, 1650, 32, 276, 319, 477, 601, 322, 2385]}
{"line_number": 115, "line_type": "original", "code": "            return ++count;", "entropy": 4.9609375, "is_bug_line": false, "sus_score": 0.5253443121910095, "per_token_entropy": [7.23828125, 6.08203125, 10.8125, 0.480712890625, 0.2027587890625], "tokens": [1468, 442, 3311, 998, 45]}
{"line_number": 115, "line_type": "generated", "code": "\n    public MultidimensionalCounter(int... size) {\n        if (size == null) {\n            throw new NullArgumentException();\n        }\n\n        this.dimension = size.length;\n        this.size = new int[dimension];\n        this.last", "entropy": 0.216552734375, "is_bug_line": false, "sus_score": 0.5253443121910095, "per_token_entropy": [0.325927734375, 0.135986328125, 0.07659912109375, 0.0002536773681640625, 0.0002377033233642578, 1.0728836059570312e-05, 0.0005650520324707031, 0.0081939697265625, 0.1666259765625, 0.548828125, 0.01154327392578125, 0.005306243896484375, 0.180908203125, 0.2607421875, 1.4638671875, 0.0187225341796875, 0.1240234375, 0.6962890625, 0.0004374980926513672, 0.137451171875, 0.01076507568359375, 0.03814697265625, 0.05145263671875, 0.0745849609375, 0.4169921875, 0.007236480712890625, 0.2298583984375, 0.00463104248046875, 0.0016775131225585938, 0.89697265625, 1.3583984375, 0.00115203857421875, 1.37890625, 0.012939453125, 0.01617431640625, 0.00177001953125, 0.0004603862762451172, 0.003692626953125, 0.2113037109375, 0.168212890625, 0.0029449462890625, 0.05010986328125, 0.05255126953125, 0.873046875, 0.0018367767333984375, 0.00042438507080078125, 0.444091796875, 0.0027446746826171875, 0.2198486328125, 0.269775390625, 0.0004794597625732422, 0.29052734375], "tokens": [284, 562, 18423, 314, 39786, 279, 6477, 26, 410, 1179, 1334, 27, 301, 291, 415, 308, 891, 610, 744, 27, 301, 324, 1422, 537, 9282, 8308, 473, 291, 320, 584, 458, 32, 11694, 280, 1334, 32, 1322, 45, 291, 458, 32, 891, 280, 537, 629, 77, 11694, 970, 291, 458, 32, 2135]}
{"line_number": 228, "line_type": "original", "code": "            while (count <= index) {", "entropy": 2.33203125, "is_bug_line": false, "sus_score": 0.5213022828102112, "per_token_entropy": [5.9140625, 8.2421875, 0.08172607421875, 0.50537109375, 3.44140625, 0.280517578125, 0.08935546875, 0.0955810546875], "tokens": [1468, 2218, 308, 998, 2511, 1650, 27, 301]}
{"line_number": 228, "line_type": "generated", "code": "\n     * @return the total number of elements.\n     */\n    public int getSize() {\n        return totalSize;\n    }\n\n    /**\n     * Get the size of the given dimension.\n     *\n     * @param dim Dimension.\n     * @return the", "entropy": 0.218017578125, "is_bug_line": false, "sus_score": 0.5213022828102112, "per_token_entropy": [0.37646484375, 0.085205078125, 0.1510009765625, 0.007232666015625, 0.10748291015625, 0.27197265625, 0.10968017578125, 0.02056884765625, 0.045928955078125, 0.11737060546875, 0.034576416015625, 0.031341552734375, 0.040924072265625, 0.00920867919921875, 0.378173828125, 0.1231689453125, 0.0044708251953125, 0.006557464599609375, 0.002880096435546875, 0.0504150390625, 0.0029087066650390625, 0.013885498046875, 5.698204040527344e-05, 0.0197906494140625, 0.05224609375, 0.00033783912658691406, 0.252685546875, 0.0765380859375, 0.01396942138671875, 0.00103759765625, 1.0830078125, 0.151611328125, 0.88330078125, 0.15087890625, 0.80859375, 2.3125, 0.0201416015625, 0.03253173828125, 0.01312255859375, 0.00010335445404052734, 0.35498046875, 0.00036263465881347656, 0.008819580078125, 0.0210418701171875, 1.818359375, 0.99609375, 0.2132568359375, 0.00832366943359375, 9.715557098388672e-05, 0.0019741058349609375, 0.004581451416015625, 0.042510986328125], "tokens": [275, 319, 477, 601, 322, 3380, 1451, 432, 4702, 32, 275, 569, 284, 562, 629, 622, 1250, 346, 301, 291, 442, 3380, 1250, 45, 284, 320, 446, 1022, 275, 319, 1390, 322, 1334, 432, 322, 2702, 8742, 32, 275, 319, 275, 319, 477, 753, 4406, 17417, 32, 275, 319, 477, 601, 322]}
{"line_number": 230, "line_type": "original", "code": "                ++idx;", "entropy": 5.42578125, "is_bug_line": false, "sus_score": 0.519058108329773, "per_token_entropy": [9.6875, 8.734375, 3.248046875, 0.0316162109375], "tokens": [2071, 3311, 2875, 45]}
{"line_number": 230, "line_type": "generated", "code": "\n    public int getSize() {\n        return totalSize;\n    }\n\n    /**\n     * Get the size of a dimension.\n     *\n     * @param dimension the dimension.\n     * @return the size of the dimension.\n     * @throws OutOfRange", "entropy": 0.2115478515625, "is_bug_line": false, "sus_score": 0.519058108329773, "per_token_entropy": [0.30078125, 0.361572265625, 0.099609375, 0.0517578125, 0.0032939910888671875, 0.0090484619140625, 0.0104217529296875, 0.1287841796875, 0.006740570068359375, 0.028564453125, 0.0002256631851196289, 0.059417724609375, 0.1312255859375, 0.00112152099609375, 0.244873046875, 0.06109619140625, 0.01326751708984375, 0.00063323974609375, 0.84619140625, 0.12286376953125, 1.189453125, 0.1383056640625, 1.09375, 1.107421875, 0.07470703125, 0.00257110595703125, 5.125999450683594e-05, 0.021942138671875, 9.59634780883789e-05, 0.00371551513671875, 0.02093505859375, 1.6435546875, 0.6201171875, 0.13916015625, 0.394287109375, 0.00555419921875, 0.00014483928680419922, 0.00672149658203125, 0.0092620849609375, 0.02044677734375, 0.1380615234375, 0.320556640625, 0.1207275390625, 1.0810546875, 0.036590576171875, 0.0037479400634765625, 0.083984375, 0.0019445419311523438, 0.004596710205078125, 0.2310791015625, 0.00041031837463378906, 0.0003631114959716797], "tokens": [284, 562, 629, 622, 1250, 346, 301, 291, 442, 3380, 1250, 45, 284, 320, 446, 1022, 275, 319, 1390, 322, 1334, 432, 312, 8742, 32, 275, 319, 275, 319, 477, 753, 8742, 322, 8742, 32, 275, 319, 477, 601, 322, 1334, 432, 322, 8742, 32, 275, 319, 477, 5117, 4306, 1419, 3198]}
{"line_number": 237, "line_type": "original", "code": "        int idx = 1;", "entropy": 1.6787109375, "is_bug_line": true, "sus_score": 0.519058108329773, "per_token_entropy": [1.861328125, 3.029296875, 6.0859375, 0.058563232421875, 0.443115234375, 0.2330322265625, 0.037567138671875], "tokens": [351, 629, 5417, 280, 225, 35, 45]}
{"line_number": 237, "line_type": "generated", "code": "\n     */\n    public int[] getSizes() {\n        return size;\n    }\n\n    /**\n     * Get the total number of elements.\n     *\n     * @return the total size of the unidimensional counter.\n     */\n    public int getTotalSize()", "entropy": 0.1998291015625, "is_bug_line": true, "sus_score": 0.519058108329773, "per_token_entropy": [0.80517578125, 0.070068359375, 0.0191802978515625, 0.01200103759765625, 0.00823211669921875, 0.01056671142578125, 0.00720977783203125, 0.7978515625, 0.006031036376953125, 0.00795745849609375, 0.066650390625, 0.0789794921875, 0.25, 0.154541015625, 0.09381103515625, 0.002044677734375, 0.37744140625, 0.072998046875, 0.042449951171875, 0.0015287399291992188, 0.8515625, 0.1634521484375, 2.466796875, 0.1656494140625, 0.00928497314453125, 0.8369140625, 1.38671875, 0.03350830078125, 0.003200531005859375, 0.04388427734375, 0.0047760009765625, 0.005664825439453125, 0.141357421875, 0.0229339599609375, 0.089111328125, 0.061798095703125, 0.0272674560546875, 0.006534576416015625, 0.35205078125, 0.00014770030975341797, 0.0012845993041992188, 0.0030231475830078125, 0.0010633468627929688, 0.00936126708984375, 0.10089111328125, 0.08807373046875, 0.0240020751953125, 0.059478759765625, 0.174560546875, 0.333984375, 0.03216552734375, 0.00434112548828125], "tokens": [275, 569, 284, 562, 629, 1178, 622, 16315, 346, 301, 291, 442, 1334, 45, 284, 320, 446, 1022, 275, 319, 1390, 322, 3380, 1451, 432, 4702, 32, 275, 319, 275, 319, 477, 601, 322, 3380, 1334, 432, 322, 707, 314, 39786, 279, 7022, 32, 275, 569, 284, 562, 629, 45323, 1250, 346]}
{"line_number": 242, "line_type": "original", "code": "        --idx;", "entropy": 4.86328125, "is_bug_line": true, "sus_score": 0.519058108329773, "per_token_entropy": [5.46875, 9.3515625, 4.578125, 0.05621337890625], "tokens": [351, 769, 2875, 45]}
{"line_number": 242, "line_type": "generated", "code": "\n    /**\n     * Get the multidimensional counter value in a given slot.\n     *\n     * @param index Index in unidimensional counter.\n     * @return the multidimensional counts.\n     * @throws OutOfRangeException if", "entropy": 0.363037109375, "is_bug_line": true, "sus_score": 0.519058108329773, "per_token_entropy": [0.50830078125, 0.2203369140625, 0.04461669921875, 0.00043487548828125, 1.1923828125, 0.1160888671875, 2.55078125, 0.00485992431640625, 0.007488250732421875, 0.005329132080078125, 0.4638671875, 2.904296875, 1.935546875, 1.130859375, 0.94091796875, 1.8466796875, 0.09423828125, 0.009033203125, 0.0022068023681640625, 0.0712890625, 0.0001590251922607422, 0.03131103515625, 0.0184783935546875, 1.408203125, 0.47021484375, 0.5439453125, 0.45654296875, 0.00032973289489746094, 0.00746917724609375, 0.0134735107421875, 0.01068878173828125, 0.02337646484375, 0.0021800994873046875, 0.0006389617919921875, 0.001934051513671875, 0.07861328125, 0.0513916015625, 1.0048828125, 0.0023021697998046875, 0.002559661865234375, 0.0030803680419921875, 0.51513671875, 0.07427978515625, 0.00827789306640625, 0.0838623046875, 0.0009937286376953125, 0.0027751922607421875, 0.01226043701171875, 5.4836273193359375e-05, 4.565715789794922e-05, 8.606910705566406e-05, 0.00238037109375], "tokens": [284, 1022, 275, 319, 1390, 322, 10151, 314, 39786, 279, 7022, 786, 328, 312, 2702, 9848, 32, 275, 319, 275, 319, 477, 753, 1650, 6422, 328, 707, 314, 39786, 279, 7022, 32, 275, 319, 477, 601, 322, 10151, 314, 39786, 279, 15172, 32, 275, 319, 477, 5117, 4306, 1419, 3198, 984, 415]}
{"line_number": 110, "line_type": "original", "code": "                    ++counter[i];", "entropy": 4.54296875, "is_bug_line": false, "sus_score": 0.519058108329773, "per_token_entropy": [10.8203125, 10.6015625, 3.734375, 0.0924072265625, 1.8525390625, 0.1536865234375], "tokens": [4696, 3311, 4680, 77, 91, 970]}
{"line_number": 110, "line_type": "generated", "code": "\n     */\n    public MultidimensionalCounter(int[] size) {\n        this.size = MathUtils.copyOf(size);\n        this.dimension = size.length;\n        this.totalSize = MathUtils.product(size);\n        this.", "entropy": 0.1641845703125, "is_bug_line": false, "sus_score": 0.519058108329773, "per_token_entropy": [0.263671875, 0.75048828125, 0.008270263671875, 0.140869140625, 0.059173583984375, 0.0002663135528564453, 0.0006799697875976562, 1.8835067749023438e-05, 0.00135040283203125, 0.252685546875, 0.1881103515625, 0.60546875, 0.25390625, 0.047271728515625, 0.0592041015625, 0.142333984375, 0.75830078125, 0.055694580078125, 0.39697265625, 0.061767578125, 0.94384765625, 0.049957275390625, 0.0010747909545898438, 0.0428466796875, 0.0010623931884765625, 0.005462646484375, 0.01959228515625, 0.1453857421875, 0.414306640625, 0.00035262107849121094, 0.214111328125, 0.00214385986328125, 0.190673828125, 0.0016193389892578125, 0.00014603137969970703, 0.002811431884765625, 0.10113525390625, 0.1973876953125, 0.0013723373413085938, 0.2174072265625, 0.0008931159973144531, 0.006778717041015625, 0.3330078125, 0.14697265625, 0.01212310791015625, 0.9677734375, 0.0155181884765625, 0.08599853515625, 0.015350341796875, 0.279541015625, 0.0743408203125, 0.00030612945556640625], "tokens": [275, 569, 284, 562, 18423, 314, 39786, 279, 6477, 26, 410, 1178, 1334, 27, 301, 291, 458, 32, 891, 280, 4175, 2755, 32, 36981, 26, 891, 293, 291, 458, 32, 11694, 280, 1334, 32, 1322, 45, 291, 458, 32, 2999, 1250, 280, 4175, 2755, 32, 2445, 26, 891, 293, 291, 458, 32]}
{"line_number": 266, "line_type": "original", "code": "            if (index < 0 ||", "entropy": 1.6201171875, "is_bug_line": false, "sus_score": 0.5171151757240295, "per_token_entropy": [7.0546875, 2.47265625, 0.0833740234375, 1.5888671875, 1.421875, 0.272216796875, 0.00664520263671875, 0.062469482421875], "tokens": [1468, 415, 308, 1055, 333, 225, 34, 1276]}
{"line_number": 266, "line_type": "generated", "code": "\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public int hashCode() {\n        final int prime = 31;\n        int result = 1;\n        result = prime * result + dimension;\n        result = prime * result + Arrays.", "entropy": 0.1405029296875, "is_bug_line": false, "sus_score": 0.5171151757240295, "per_token_entropy": [1.01953125, 0.2880859375, 0.0970458984375, 0.0004432201385498047, 1.1826171875, 0.006622314453125, 0.001522064208984375, 0.006900787353515625, 0.2105712890625, 0.02423095703125, 0.043304443359375, 0.0007042884826660156, 0.012176513671875, 0.009521484375, 0.99169921875, 0.1087646484375, 0.003871917724609375, 0.00457763671875, 0.058197021484375, 0.7666015625, 0.07330322265625, 0.10003662109375, 0.0017986297607421875, 0.0010194778442382812, 0.006008148193359375, 0.0013036727905273438, 0.0002455711364746094, 0.005680084228515625, 0.0172576904296875, 0.0149993896484375, 0.0004363059997558594, 0.0159149169921875, 0.00571441650390625, 0.00437164306640625, 0.099365234375, 0.19775390625, 0.0034580230712890625, 0.039764404296875, 0.0012063980102539062, 0.0014333724975585938, 0.032318115234375, 1.3291015625, 0.004299163818359375, 0.10186767578125, 0.089111328125, 0.00015485286712646484, 0.0009245872497558594, 0.0012674331665039062, 0.00042438507080078125, 0.00981903076171875, 0.309326171875, 0.0028076171875], "tokens": [284, 1022, 275, 319, 3088, 18446, 111, 275, 569, 284, 477, 1788, 284, 562, 629, 17772, 346, 301, 291, 1158, 629, 16853, 280, 225, 37, 35, 45, 291, 629, 1056, 280, 225, 35, 45, 291, 1056, 280, 16853, 319, 1056, 474, 8742, 45, 291, 1056, 280, 16853, 319, 1056, 474, 14473, 32]}
{"line_number": 281, "line_type": "original", "code": "        return totalSize;", "entropy": 2.125, "is_bug_line": false, "sus_score": 0.515884518623352, "per_token_entropy": [5.2578125, 1.2919921875, 3.900390625, 0.016937255859375, 0.159423828125], "tokens": [351, 442, 3380, 1250, 45]}
{"line_number": 281, "line_type": "generated", "code": "\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public boolean equals(Object other) {\n        if (this == other) {\n            return true;\n        }\n        if (other == null ||\n            getClass()!= other.getClass()) {\n           ", "entropy": 0.13427734375, "is_bug_line": false, "sus_score": 0.515884518623352, "per_token_entropy": [1.572265625, 0.3291015625, 0.0750732421875, 0.00037026405334472656, 0.96630859375, 0.0069122314453125, 0.001056671142578125, 0.00550079345703125, 0.2196044921875, 0.01016998291015625, 0.0298309326171875, 0.0008525848388671875, 0.00763702392578125, 0.006793975830078125, 0.6943359375, 0.0080108642578125, 0.0006222724914550781, 0.055908203125, 1.380859375, 0.003261566162109375, 0.00276947021484375, 0.07830810546875, 0.0251007080078125, 0.0194549560546875, 0.132568359375, 0.0026264190673828125, 0.00015985965728759766, 0.005847930908203125, 0.00672149658203125, 0.0037479400634765625, 0.00157928466796875, 0.000659942626953125, 0.00015914440155029297, 0.0007572174072265625, 0.0006270408630371094, 0.1064453125, 0.00824737548828125, 0.05902099609375, 0.0052032470703125, 0.5947265625, 0.00012350082397460938, 0.14794921875, 0.2763671875, 0.0987548828125, 0.0097808837890625, 0.00041365623474121094, 0.00255584716796875, 6.0558319091796875e-05, 0.00017821788787841797, 0.013458251953125, 0.00264739990234375, 0.0023326873779296875], "tokens": [284, 1022, 275, 319, 3088, 18446, 111, 275, 569, 284, 477, 1788, 284, 562, 1905, 12423, 26, 959, 1604, 27, 301, 291, 415, 308, 578, 610, 1604, 27, 301, 324, 442, 861, 45, 291, 320, 291, 415, 308, 2455, 610, 744, 1276, 324, 27084, 346, 863, 1604, 32, 9700, 1157, 301, 324]}
{"line_number": 263, "line_type": "original", "code": "        int count = 0;", "entropy": 1.478515625, "is_bug_line": false, "sus_score": 0.5129358768463135, "per_token_entropy": [5.1484375, 3.84765625, 0.6943359375, 0.135009765625, 0.408447265625, 0.003505706787109375, 0.1158447265625], "tokens": [351, 629, 2385, 280, 225, 34, 45]}
{"line_number": 263, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5129358768463135, "per_token_entropy": [], "tokens": []}
{"line_number": 260, "line_type": "original", "code": "        if (c.length != dimension) {", "entropy": 1.0947265625, "is_bug_line": false, "sus_score": 0.5112867951393127, "per_token_entropy": [4.20703125, 2.76953125, 0.061187744140625, 2.3671875, 1.1005859375, 0.0115509033203125, 0.202392578125, 0.1021728515625, 0.0283050537109375, 0.09765625], "tokens": [351, 415, 308, 85, 32, 1322, 863, 8742, 27, 301]}
{"line_number": 260, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5112867951393127, "per_token_entropy": [], "tokens": []}
{"line_number": 229, "line_type": "original", "code": "                count += offset;", "entropy": 3.869140625, "is_bug_line": false, "sus_score": 0.5102574229240417, "per_token_entropy": [8.109375, 6.8203125, 0.7421875, 2.228515625, 1.4501953125], "tokens": [2071, 2385, 1454, 3401, 45]}
{"line_number": 229, "line_type": "generated", "code": "\n     */\n    public int getSize() {\n        return totalSize;\n    }\n\n    /**\n     * Get the size of a specific dimension.\n     *\n     * @param i Dimension index.\n     * @return the size of the {@code i}-th dimension", "entropy": 0.2332763671875, "is_bug_line": false, "sus_score": 0.5102574229240417, "per_token_entropy": [0.494384765625, 0.07196044921875, 0.0128631591796875, 0.01197052001953125, 0.12841796875, 0.047943115234375, 0.0016422271728515625, 0.004215240478515625, 0.0027866363525390625, 0.09283447265625, 0.004848480224609375, 0.0159759521484375, 6.699562072753906e-05, 0.024810791015625, 0.09588623046875, 0.0003082752227783203, 0.2315673828125, 0.0640869140625, 0.01479339599609375, 0.0004925727844238281, 0.96240234375, 0.1422119140625, 1.140625, 0.1455078125, 1.0419921875, 1.240234375, 0.040313720703125, 0.047607421875, 0.00665283203125, 4.4226646423339844e-05, 0.0224609375, 0.00012433528900146484, 0.002971649169921875, 0.0262298583984375, 1.2724609375, 0.65869140625, 1.05078125, 0.11572265625, 0.0087127685546875, 9.334087371826172e-05, 0.001628875732421875, 0.00458526611328125, 0.04571533203125, 0.1650390625, 0.1734619140625, 0.33154296875, 1.47265625, 0.0010881423950195312, 0.0180816650390625, 0.60546875, 0.05230712890625, 0.0120849609375], "tokens": [275, 569, 284, 562, 629, 622, 1250, 346, 301, 291, 442, 3380, 1250, 45, 284, 320, 446, 1022, 275, 319, 1390, 322, 1334, 432, 312, 2818, 8742, 32, 275, 319, 275, 319, 477, 753, 595, 17417, 1650, 32, 275, 319, 477, 601, 322, 1334, 432, 322, 3088, 687, 595, 11915, 349, 8742]}
{"line_number": 272, "line_type": "original", "code": "        return count + c[last];", "entropy": 2.2265625, "is_bug_line": false, "sus_score": 0.49848097562789917, "per_token_entropy": [6.421875, 1.693359375, 2.025390625, 3.412109375, 3.294921875, 0.10791015625, 0.68212890625, 0.168701171875], "tokens": [351, 442, 2385, 474, 281, 77, 2135, 970]}
{"line_number": 272, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.49848097562789917, "per_token_entropy": [], "tokens": []}
{"line_number": 227, "line_type": "original", "code": "            final int offset = uniCounterOffset[i];", "entropy": 2.326171875, "is_bug_line": false, "sus_score": 0.48372840881347656, "per_token_entropy": [7.09375, 9.5078125, 0.46142578125, 6.00390625, 0.35302734375, 1.443359375, 0.004413604736328125, 0.03076171875, 0.0230712890625, 0.476806640625, 0.182861328125], "tokens": [1468, 1158, 629, 3401, 280, 29607, 6477, 3457, 77, 91, 970]}
{"line_number": 227, "line_type": "generated", "code": "\n     *\n     * @return the total number of elements.\n     */\n    public int getSize() {\n        return totalSize;\n    }\n\n    /**\n     * Increment a multidimensional counter.\n     *\n     * @param c Indices in multid", "entropy": 0.19189453125, "is_bug_line": false, "sus_score": 0.48372840881347656, "per_token_entropy": [0.1485595703125, 0.1317138671875, 0.45263671875, 0.0015630722045898438, 0.023162841796875, 0.0018835067749023438, 0.09722900390625, 0.308837890625, 0.138916015625, 0.025787353515625, 0.039886474609375, 0.105224609375, 0.0474853515625, 0.0226898193359375, 0.0108489990234375, 0.0079345703125, 0.33154296875, 0.13720703125, 0.00441741943359375, 0.005779266357421875, 0.0020198822021484375, 0.041839599609375, 0.002597808837890625, 0.021697998046875, 5.042552947998047e-05, 0.0166778564453125, 0.0302276611328125, 0.0003170967102050781, 0.253662109375, 0.0831298828125, 0.0141143798828125, 0.0008358955383300781, 2.78125, 1.5966796875, 1.16796875, 0.00537872314453125, 0.00693511962890625, 0.0022449493408203125, 0.455322265625, 0.54541015625, 0.077392578125, 0.00807952880859375, 0.07061767578125, 8.71419906616211e-05, 0.0233306884765625, 0.0012826919555664062, 0.385986328125, 0.13134765625, 0.0003757476806640625, 0.131591796875, 0.0780029296875, 0.0005006790161132812], "tokens": [275, 319, 275, 319, 477, 601, 322, 3380, 1451, 432, 4702, 32, 275, 569, 284, 562, 629, 622, 1250, 346, 301, 291, 442, 3380, 1250, 45, 284, 320, 446, 1022, 275, 319, 29494, 312, 10151, 314, 39786, 279, 7022, 32, 275, 319, 275, 319, 477, 753, 281, 20261, 1343, 328, 10151, 314]}
{"line_number": 95, "line_type": "original", "code": "                    return true;", "entropy": 4.328125, "is_bug_line": false, "sus_score": 0.4792882204055786, "per_token_entropy": [7.33984375, 3.216796875, 6.70703125, 0.054351806640625], "tokens": [4696, 442, 861, 45]}
{"line_number": 95, "line_type": "generated", "code": "\n         */\n        public int getCount(int dim) {\n            return counter[dim];\n        }\n\n        /**\n         * Get the current counts in the selected dimensions.\n         *\n         * @param dims Dimension indices.\n         * @return the counts at the corresponding", "entropy": 0.1668701171875, "is_bug_line": false, "sus_score": 0.4792882204055786, "per_token_entropy": [0.7734375, 0.0258026123046875, 0.0128173828125, 0.0106964111328125, 0.0106048583984375, 0.06500244140625, 0.1619873046875, 0.069580078125, 0.25390625, 0.0107574462890625, 0.003650665283203125, 0.08758544921875, 0.1005859375, 0.1715087890625, 0.04876708984375, 0.003559112548828125, 0.0056610107421875, 0.00766754150390625, 0.069091796875, 0.00040912628173828125, 0.70361328125, 0.0142669677734375, 0.0193328857421875, 0.0021953582763671875, 0.97998046875, 0.0389404296875, 0.826171875, 0.88818359375, 0.266845703125, 0.415771484375, 0.1134033203125, 0.1380615234375, 0.032501220703125, 0.01271820068359375, 3.266334533691406e-05, 0.033111572265625, 6.687641143798828e-05, 0.00411224365234375, 0.022705078125, 0.87890625, 0.716796875, 0.1922607421875, 0.058990478515625, 0.01396942138671875, 0.00014781951904296875, 0.0026760101318359375, 0.005664825439453125, 0.0699462890625, 0.2218017578125, 0.087646484375, 0.015167236328125, 0.00916290283203125], "tokens": [276, 569, 291, 562, 629, 622, 1534, 26, 410, 4406, 27, 301, 324, 442, 7022, 77, 3534, 970, 291, 320, 584, 1022, 276, 319, 1390, 322, 1550, 15172, 328, 322, 4324, 13135, 32, 276, 319, 276, 319, 477, 753, 27256, 17417, 10193, 32, 276, 319, 477, 601, 322, 15172, 821, 322, 8435]}
