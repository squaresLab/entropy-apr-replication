{"line_number": 331, "line_type": "original", "code": "        return getPct(Long.valueOf(v));", "entropy": 2.1015625, "is_bug_line": false, "sus_score": 0.5652866363525391, "per_token_entropy": [4.9765625, 0.978515625, 1.9033203125, 5.8359375, 1.0498046875, 6.55078125, 0.01282501220703125, 0.26171875, 0.14501953125, 0.61669921875, 0.7724609375], "tokens": [351, 442, 622, 44268, 26, 3952, 32, 9162, 26, 104, 876]}
{"line_number": 331, "line_type": "generated", "code": "\n    public long getCumFreq(Comparable<?> v) {\n        if (v == null) {\n            return 0;\n        }\n        return Collections.binarySearch((List<Comparable<?>>) this.values, v);\n    }\n\n    /**\n     * Returns", "entropy": 0.344970703125, "is_bug_line": false, "sus_score": 0.5652866363525391, "per_token_entropy": [0.384765625, 0.267578125, 0.0107879638671875, 0.002414703369140625, 1.2755393981933594e-05, 0.0003998279571533203, 0.004268646240234375, 0.0170745849609375, 0.5, 0.0016317367553710938, 0.003360748291015625, 0.05731201171875, 0.2418212890625, 1.2080078125, 0.1451416015625, 0.52099609375, 0.10858154296875, 0.00988006591796875, 0.1416015625, 0.037017822265625, 0.1195068359375, 0.423095703125, 0.28759765625, 0.0012645721435546875, 0.1959228515625, 0.0521240234375, 0.0023479461669921875, 0.52099609375, 2.142578125, 3.37109375, 0.09625244140625, 0.0065155029296875, 2.765655517578125e-05, 0.7880859375, 0.12322998046875, 0.316162109375, 0.49072265625, 0.88623046875, 0.0084075927734375, 1.990234375, 0.08154296875, 1.103515625, 0.1925048828125, 0.044708251953125, 0.59912109375, 0.284423828125, 0.0022869110107421875, 0.07391357421875, 0.0447998046875, 0.01342010498046875, 0.00014519691467285156, 0.00913238525390625], "tokens": [284, 562, 1946, 38985, 378, 18328, 26, 36880, 11674, 354, 27, 301, 291, 415, 308, 104, 610, 744, 27, 301, 324, 442, 225, 34, 45, 291, 320, 291, 442, 15496, 32, 7003, 3192, 1162, 720, 46, 36880, 31817, 27, 458, 32, 2810, 30, 354, 293, 284, 320, 446, 1022, 275, 319, 3759]}
{"line_number": 303, "line_type": "original", "code": "        return getCumPct((Comparable<?>) v);", "entropy": 2.275390625, "is_bug_line": true, "sus_score": 0.5550956130027771, "per_token_entropy": [5.27734375, 0.411376953125, 9.484375, 1.1650390625, 0.030059814453125, 3.05859375, 3.375, 1.4287109375, 0.022796630859375, 0.6787109375, 0.10662841796875], "tokens": [351, 442, 38985, 378, 44268, 1162, 36880, 1888, 5103, 354, 293]}
{"line_number": 303, "line_type": "generated", "code": "\n    }\n\n    //-------------------------------------------------------------\n\n    /**\n     * Returns the number of values &lt; v.\n     *\n     * @param v the value to lookup.\n     * @return the number of values &lt; v.\n     */\n    public long getCount", "entropy": 0.20654296875, "is_bug_line": true, "sus_score": 0.5550956130027771, "per_token_entropy": [0.214111328125, 0.0027523040771484375, 0.6826171875, 0.349365234375, 0.08660888671875, 0.0408935546875, 0.2666015625, 0.0426025390625, 0.2242431640625, 0.00030803680419921875, 0.31884765625, 0.231201171875, 1.671875, 0.005580902099609375, 0.189453125, 2.12890625, 0.1844482421875, 0.16455078125, 0.09149169921875, 0.11016845703125, 0.0174560546875, 0.0010461807250976562, 0.5791015625, 0.00014734268188476562, 0.004886627197265625, 0.01070404052734375, 0.01457977294921875, 0.0224151611328125, 0.30224609375, 0.04290771484375, 0.66943359375, 0.29931640625, 0.009521484375, 0.0011281967163085938, 0.0017099380493164062, 0.00384521484375, 0.0209808349609375, 0.5107421875, 0.0078582763671875, 0.0198974609375, 0.458740234375, 0.005458831787109375, 0.003551483154296875, 0.0069732666015625, 0.1868896484375, 0.00543975830078125, 0.252197265625, 0.0262451171875, 0.01287841796875, 0.01092529296875, 0.03643798828125, 0.1917724609375], "tokens": [284, 320, 446, 434, 5877, 6490, 446, 1022, 275, 319, 3759, 322, 1451, 432, 2078, 549, 2159, 45, 354, 32, 275, 319, 275, 319, 477, 753, 354, 322, 786, 372, 11470, 32, 275, 319, 477, 601, 322, 1451, 432, 2078, 549, 2159, 45, 354, 32, 275, 569, 284, 562, 1946, 622, 1534]}
{"line_number": 342, "line_type": "original", "code": "        return getPct(Long.valueOf(v));", "entropy": 1.9130859375, "is_bug_line": false, "sus_score": 0.5472172498703003, "per_token_entropy": [3.685546875, 0.73876953125, 2.7421875, 5.08984375, 0.5498046875, 6.85546875, 0.01322174072265625, 0.1854248046875, 0.04119873046875, 0.6591796875, 0.4814453125], "tokens": [351, 442, 622, 44268, 26, 3952, 32, 9162, 26, 104, 876]}
{"line_number": 342, "line_type": "generated", "code": "\n        return 0;\n    }\n\n    /**\n     * Returns the cumulative frequency of values less than or equal to v.\n     * <p>\n     * Returns 0 if v is not comparable to the values set.</p>\n     *\n     * @", "entropy": 0.072265625, "is_bug_line": false, "sus_score": 0.5472172498703003, "per_token_entropy": [1.4365234375, 0.53466796875, 0.439208984375, 0.01412200927734375, 0.07647705078125, 0.033447265625, 0.0007367134094238281, 0.0419921875, 0.029754638671875, 0.0029277801513671875, 0.00016689300537109375, 0.00943756103515625, 0.0019893646240234375, 0.0168914794921875, 0.0222015380859375, 0.0016050338745117188, 0.0038280487060546875, 0.0085601806640625, 0.0004367828369140625, 0.00936126708984375, 0.00027823448181152344, 0.0006351470947265625, 0.0174102783203125, 0.007476806640625, 0.0006918907165527344, 0.00013709068298339844, 0.8857421875, 0.0005755424499511719, 0.0012903213500976562, 0.001392364501953125, 0.0002244710922241211, 0.018463134765625, 0.01071929931640625, 0.0005517005920410156, 0.003314971923828125, 0.06085205078125, 0.005741119384765625, 0.0264892578125, 0.01381683349609375, 3.4809112548828125e-05, 0.00040030479431152344, 0.0006871223449707031, 0.0010967254638671875, 0.0007791519165039062, 0.00769805908203125, 4.3272972106933594e-05, 0.00018286705017089844, 0.000873565673828125, 0.0005106925964355469, 0.004337310791015625, 0.0004870891571044922, 0.00030875205993652344], "tokens": [291, 442, 225, 34, 45, 284, 320, 446, 1022, 275, 319, 3759, 322, 41008, 13472, 432, 2078, 6679, 2784, 556, 5040, 372, 354, 32, 275, 319, 333, 98, 48, 275, 319, 3759, 225, 34, 415, 354, 438, 646, 918, 18035, 372, 322, 2078, 739, 1730, 98, 48, 275, 319, 275, 319, 477]}
{"line_number": 386, "line_type": "original", "code": "            return getCumFreq(((Integer) v).longValue());", "entropy": 1.6875, "is_bug_line": false, "sus_score": 0.5467764735221863, "per_token_entropy": [8.8359375, 2.63671875, 0.311279296875, 0.0001550912857055664, 0.00794219970703125, 4.51171875, 3.55859375, 0.012939453125, 0.1943359375, 0.022705078125, 0.1409912109375, 0.01026153564453125], "tokens": [1468, 442, 38985, 378, 18328, 7728, 3061, 27, 354, 547, 41976, 1035]}
{"line_number": 386, "line_type": "generated", "code": "\n     * Returns the cumulative frequency of values less than or equal to v.\n     * <p>\n     * Returns 0 if v is not comparable to the values set.</p>\n     *\n     * @param v the value to lookup\n     * @", "entropy": 0.029937744140625, "is_bug_line": false, "sus_score": 0.5467764735221863, "per_token_entropy": [0.7197265625, 0.5400390625, 0.1240234375, 0.0030307769775390625, 0.0120849609375, 0.0035419464111328125, 0.0006189346313476562, 0.0015630722045898438, 0.0101318359375, 0.00048160552978515625, 0.0014028549194335938, 0.0005431175231933594, 0.0003516674041748047, 0.0019216537475585938, 0.0211181640625, 0.0128173828125, 0.002658843994140625, 0.008819580078125, 0.00021719932556152344, 0.0011157989501953125, 0.00833892822265625, 7.56978988647461e-05, 0.0015134811401367188, 0.0004849433898925781, 6.42538070678711e-05, 0.00033855438232421875, 0.00038886070251464844, 0.00011432170867919922, 0.00024628639221191406, 0.0001264810562133789, 1.5497207641601562e-06, 3.349781036376953e-05, 0.00011610984802246094, 0.00024402141571044922, 0.00024700164794921875, 0.002170562744140625, 6.306171417236328e-05, 0.0002663135528564453, 0.012725830078125, 0.0012569427490234375, 0.015045166015625, 0.00048065185546875, 0.0013666152954101562, 0.001312255859375, 0.0012044906616210938, 0.0009045600891113281, 0.0005125999450683594, 5.2809715270996094e-05, 0.00014078617095947266, 0.039764404296875, 0.0001583099365234375, 0.0002027750015258789], "tokens": [275, 319, 3759, 322, 41008, 13472, 432, 2078, 6679, 2784, 556, 5040, 372, 354, 32, 275, 319, 333, 98, 48, 275, 319, 3759, 225, 34, 415, 354, 438, 646, 918, 18035, 372, 322, 2078, 739, 1730, 98, 48, 275, 319, 275, 319, 477, 753, 354, 322, 786, 372, 11470, 275, 319, 477]}
{"line_number": 444, "line_type": "original", "code": "        return getCumFreq(Long.valueOf(v));", "entropy": 1.8076171875, "is_bug_line": false, "sus_score": 0.528303861618042, "per_token_entropy": [4.3125, 3.51171875, 3.666015625, 0.0113525390625, 0.85546875, 0.05743408203125, 8.125, 0.00394439697265625, 0.054656982421875, 0.0270538330078125, 0.07720947265625, 0.9921875], "tokens": [351, 442, 38985, 378, 18328, 26, 3952, 32, 9162, 26, 104, 876]}
{"line_number": 444, "line_type": "generated", "code": "\n        }\n        return (double) getCumFreq(v) / (double) sumFreq;\n    }\n\n    //----------------------------------------------------------------------------------------------\n\n    /**\n     * Returns the sum of all frequencies.\n     *\n     * @return the sum of all frequencies\n     */\n    public", "entropy": 0.3154296875, "is_bug_line": false, "sus_score": 0.528303861618042, "per_token_entropy": [0.25, 0.16748046875, 0.72998046875, 0.7177734375, 1.2607421875, 0.1903076171875, 0.0186004638671875, 0.343505859375, 0.0012903213500976562, 0.08697509765625, 0.007152557373046875, 0.00153350830078125, 0.01113128662109375, 0.01197052001953125, 0.9658203125, 0.01050567626953125, 0.00021946430206298828, 0.093505859375, 4.0411949157714844e-05, 0.006320953369140625, 0.1348876953125, 0.0009303092956542969, 0.477783203125, 1.1357421875, 0.2919921875, 0.079833984375, 0.2464599609375, 0.050811767578125, 0.01172637939453125, 0.00012862682342529297, 0.2203369140625, 0.23828125, 3.666015625, 0.031280517578125, 1.8310546875, 0.96875, 0.9033203125, 0.044036865234375, 0.01535797119140625, 0.2200927734375, 0.0005140304565429688, 0.002651214599609375, 0.0025730133056640625, 0.040924072265625, 0.2314453125, 0.02484130859375, 0.3154296875, 0.04229736328125, 0.18896484375, 0.050201416015625, 0.0109710693359375, 0.0482177734375], "tokens": [291, 320, 291, 442, 308, 2627, 27, 38985, 378, 18328, 26, 104, 27, 517, 308, 2627, 27, 3632, 18328, 45, 284, 320, 446, 434, 18078, 8998, 446, 1022, 275, 319, 3759, 322, 3632, 432, 1169, 41292, 32, 275, 319, 275, 319, 477, 601, 322, 3632, 432, 1169, 41292, 275, 569, 284, 562]}
{"line_number": 320, "line_type": "original", "code": "        return (double) getCount(v) / (double) sumFreq;", "entropy": 1.35546875, "is_bug_line": false, "sus_score": 0.5255891680717468, "per_token_entropy": [6.6015625, 0.80517578125, 3.712890625, 4.9765625, 0.03741455078125, 1.9365234375, 0.40380859375, 0.4892578125, 0.1461181640625, 0.1312255859375, 0.08648681640625, 0.98046875, 0.01308441162109375, 0.0012445449829101562, 2.205078125, 0.0670166015625, 0.4599609375], "tokens": [351, 442, 308, 2627, 27, 622, 1534, 26, 104, 27, 517, 308, 2627, 27, 3632, 18328, 45]}
{"line_number": 320, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Returns the cumulative frequency of values less than or equal to v.\n     * <p>\n     * Returns 0 if v is not comparable to the values set.</p>\n     *\n     * @param v the value to", "entropy": 0.00531768798828125, "is_bug_line": false, "sus_score": 0.5255891680717468, "per_token_entropy": [0.0550537109375, 0.0059356689453125, 0.041351318359375, 0.007572174072265625, 0.0193328857421875, 0.0003147125244140625, 0.0051116943359375, 0.0006551742553710938, 0.005924224853515625, 0.00360870361328125, 0.0009479522705078125, 0.00440216064453125, 0.01145172119140625, 0.0009527206420898438, 0.00189208984375, 0.0002682209014892578, 0.0008225440979003906, 0.00384521484375, 0.00804901123046875, 0.0007119178771972656, 6.937980651855469e-05, 0.0458984375, 0.00022113323211669922, 0.0003771781921386719, 0.0009560585021972656, 4.017353057861328e-05, 0.00476837158203125, 0.006137847900390625, 0.0003020763397216797, 0.0018873214721679688, 0.012725830078125, 0.00115203857421875, 0.005123138427734375, 0.0006122589111328125, 2.3365020751953125e-05, 0.00043511390686035156, 0.0005373954772949219, 0.0005102157592773438, 0.0006861686706542969, 0.007190704345703125, 6.711483001708984e-05, 0.0002982616424560547, 0.0005488395690917969, 0.000156402587890625, 0.0041351318359375, 0.00022542476654052734, 0.00040149688720703125, 0.0002868175506591797, 0.0014543533325195312, 0.0005354881286621094, 0.00046634674072265625, 0.0001024007797241211], "tokens": [284, 320, 446, 1022, 275, 319, 3759, 322, 41008, 13472, 432, 2078, 6679, 2784, 556, 5040, 372, 354, 32, 275, 319, 333, 98, 48, 275, 319, 3759, 225, 34, 415, 354, 438, 646, 918, 18035, 372, 322, 2078, 739, 1730, 98, 48, 275, 319, 275, 319, 477, 753, 354, 322, 786, 372]}
{"line_number": 177, "line_type": "original", "code": "        addValue(Long.valueOf(v));", "entropy": 1.521484375, "is_bug_line": false, "sus_score": 0.5094666481018066, "per_token_entropy": [4.4296875, 6.67578125, 0.1846923828125, 0.250244140625, 2.64453125, 0.005657196044921875, 0.0106353759765625, 0.068359375, 0.8291015625, 0.11456298828125], "tokens": [351, 1015, 882, 26, 3952, 32, 9162, 26, 104, 876]}
{"line_number": 177, "line_type": "generated", "code": "\n     * @param v the value to search for\n     * @return the frequency count for v\n     */\n    public long getCount(Comparable<?> v) {\n        Long count = freqTable.get(v);\n        if (count == null) {\n           ", "entropy": 0.1993408203125, "is_bug_line": false, "sus_score": 0.5094666481018066, "per_token_entropy": [0.296875, 0.219970703125, 0.240234375, 0.052490234375, 0.027252197265625, 0.336669921875, 0.031463623046875, 0.53515625, 0.8974609375, 0.01055908203125, 0.369873046875, 0.007781982421875, 0.0032787322998046875, 0.007354736328125, 0.09454345703125, 1.1806640625, 0.1910400390625, 0.76806640625, 0.85693359375, 0.330078125, 0.1409912109375, 0.0260772705078125, 0.01143646240234375, 0.032623291015625, 0.036529541015625, 0.591796875, 0.0014019012451171875, 0.72412109375, 0.1845703125, 0.0030765533447265625, 0.1480712890625, 0.033355712890625, 0.103759765625, 1.1357421875, 0.195068359375, 0.004856109619140625, 0.030517578125, 1.3470649719238281e-05, 6.139278411865234e-05, 0.00010025501251220703, 0.0005092620849609375, 0.0013055801391601562, 0.0008492469787597656, 0.0206298828125, 0.2239990234375, 0.0078582763671875, 0.0027523040771484375, 0.15576171875, 0.0007228851318359375, 0.022369384765625, 0.0419921875, 0.0257110595703125], "tokens": [275, 319, 477, 753, 354, 322, 786, 372, 3233, 436, 275, 319, 477, 601, 322, 13472, 2385, 436, 354, 275, 569, 284, 562, 1946, 622, 1534, 26, 36880, 11674, 354, 27, 301, 291, 6359, 2385, 280, 18754, 1599, 32, 371, 26, 104, 293, 291, 415, 308, 998, 610, 744, 27, 301, 324]}
{"line_number": 408, "line_type": "original", "code": "            return getSumFreq();    // v is comparable, but greater than the last value", "entropy": 1.525390625, "is_bug_line": false, "sus_score": 0.4932163953781128, "per_token_entropy": [8.125, 2.0625, 4.56640625, 1.806640625, 0.02581787109375, 0.313720703125, 5.5234375, 0.30029296875, 0.73681640625, 0.0689697265625, 0.84716796875, 0.0021610260009765625, 0.185546875, 0.0789794921875, 0.52392578125, 0.0196685791015625, 3.263671875, 0.489013671875, 0.04486083984375], "tokens": [1468, 442, 622, 4934, 18328, 473, 264, 434, 354, 438, 918, 18035, 30, 1273, 10761, 2784, 322, 2401, 786]}
{"line_number": 408, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.4932163953781128, "per_token_entropy": [], "tokens": []}
{"line_number": 316, "line_type": "original", "code": "        final long sumFreq = getSumFreq();", "entropy": 1.6298828125, "is_bug_line": false, "sus_score": 0.4506949484348297, "per_token_entropy": [4.12109375, 6.296875, 0.85546875, 2.56640625, 0.76611328125, 0.13525390625, 1.3330078125, 0.126708984375, 0.0372314453125, 0.0626220703125], "tokens": [351, 1158, 1946, 3632, 18328, 280, 622, 4934, 18328, 473]}
{"line_number": 316, "line_type": "generated", "code": "\n     */\n    @Deprecated\n    public long getCumFreq(Object v) {\n        return getCumFreq((Comparable<?>) v);\n    }\n\n    /**\n     * Returns the cumulative frequency of values less than or equal to v.\n     * <p>\n    ", "entropy": 0.04888916015625, "is_bug_line": false, "sus_score": 0.4506949484348297, "per_token_entropy": [0.372802734375, 0.0699462890625, 0.05181884765625, 0.0137939453125, 0.001407623291015625, 0.0155487060546875, 0.007904052734375, 0.1837158203125, 0.00988006591796875, 0.00479888916015625, 0.04559326171875, 0.01100921630859375, 0.07135009765625, 0.0018339157104492188, 0.00168609619140625, 0.03790283203125, 0.2335205078125, 0.447509765625, 0.325927734375, 0.01256561279296875, 0.266845703125, 0.031524658203125, 0.001018524169921875, 0.0230712890625, 0.00020682811737060547, 0.0095062255859375, 0.003635406494140625, 0.0223388671875, 0.0005092620849609375, 0.1407470703125, 0.01155853271484375, 0.040252685546875, 0.00020885467529296875, 0.003749847412109375, 0.0005984306335449219, 0.005584716796875, 0.004150390625, 0.0011987686157226562, 0.00270843505859375, 0.0107421875, 0.0009474754333496094, 0.0014715194702148438, 0.0002968311309814453, 0.0008115768432617188, 0.0028247833251953125, 0.006977081298828125, 0.0012102127075195312, 5.5909156799316406e-05, 0.025634765625, 0.00041031837463378906, 0.0004031658172607422, 0.001338958740234375], "tokens": [275, 569, 284, 477, 15387, 284, 562, 1946, 38985, 378, 18328, 26, 959, 354, 27, 301, 291, 442, 38985, 378, 18328, 1162, 36880, 1888, 5103, 354, 293, 284, 320, 446, 1022, 275, 319, 3759, 322, 41008, 13472, 432, 2078, 6679, 2784, 556, 5040, 372, 354, 32, 275, 319, 333, 98, 48, 275]}
{"line_number": 317, "line_type": "original", "code": "        if (sumFreq == 0) {", "entropy": 1.3359375, "is_bug_line": false, "sus_score": 0.44743505120277405, "per_token_entropy": [5.29296875, 2.84765625, 0.2607421875, 3.873046875, 0.048309326171875, 0.324462890625, 0.0231475830078125, 0.00146484375, 0.1844482421875, 0.50048828125], "tokens": [351, 415, 308, 1036, 18328, 610, 225, 34, 27, 301]}
{"line_number": 317, "line_type": "generated", "code": "\n\n    /**\n     * Returns the cumulative frequency of values less than or equal to v.\n     * <p>\n     * Returns 0 if v is not comparable to the values set.</p>\n     *\n     * @param v the value to lookup.", "entropy": 0.0482177734375, "is_bug_line": false, "sus_score": 0.44743505120277405, "per_token_entropy": [1.98828125, 0.1492919921875, 0.037384033203125, 0.0005478858947753906, 0.0167236328125, 0.004932403564453125, 0.0206756591796875, 0.032867431640625, 0.0021533966064453125, 0.00909423828125, 0.02545166015625, 0.001247406005859375, 0.005855560302734375, 0.0003981590270996094, 0.0013780593872070312, 0.00788116455078125, 0.01013946533203125, 0.0017299652099609375, 0.00023066997528076172, 0.09173583984375, 0.0004911422729492188, 0.00043702125549316406, 0.0016498565673828125, 0.0002180337905883789, 0.007587432861328125, 0.0203857421875, 0.0009541511535644531, 0.00891876220703125, 0.0151824951171875, 0.0014972686767578125, 0.0076446533203125, 0.0007600784301757812, 2.6345252990722656e-05, 0.0004725456237792969, 0.0006122589111328125, 0.0006251335144042969, 0.0006394386291503906, 0.00751495361328125, 5.4836273193359375e-05, 0.00032448768615722656, 0.001125335693359375, 0.000347137451171875, 0.005153656005859375, 0.0006203651428222656, 0.000583648681640625, 0.0006928443908691406, 0.002559661865234375, 0.0008306503295898438, 0.0006299018859863281, 0.0001863241195678711, 0.00022530555725097656, 0.01062774658203125], "tokens": [446, 1022, 275, 319, 3759, 322, 41008, 13472, 432, 2078, 6679, 2784, 556, 5040, 372, 354, 32, 275, 319, 333, 98, 48, 275, 319, 3759, 225, 34, 415, 354, 438, 646, 918, 18035, 372, 322, 2078, 739, 1730, 98, 48, 275, 319, 275, 319, 477, 753, 354, 322, 786, 372, 11470, 32]}
{"line_number": 388, "line_type": "original", "code": "        Comparator<Comparable<?>> c = (Comparator<Comparable<?>>) freqTable.comparator();", "entropy": 1.5595703125, "is_bug_line": false, "sus_score": 0.44442880153656006, "per_token_entropy": [5.1171875, 12.0390625, 0.6572265625, 2.2734375, 2.943359375, 0.03887939453125, 0.017608642578125, 4.265625, 0.2005615234375, 0.036224365234375, 0.0024433135986328125, 0.002429962158203125, 0.004306793212890625, 0.458984375, 0.004940032958984375, 0.01256561279296875, 0.00235748291015625, 0.0034656524658203125], "tokens": [351, 34868, 46, 36880, 31817, 281, 280, 308, 18700, 46, 36880, 31817, 27, 18754, 1599, 32, 38366, 473]}
{"line_number": 388, "line_type": "generated", "code": "\n     * Returns 0 if v is not comparable to the values set.</p>\n     *\n     * @param v the value to lookup\n     * @return the proportion of values equal to v\n     */\n    public long getCumFreq(long v)", "entropy": 0.023956298828125, "is_bug_line": false, "sus_score": 0.44442880153656006, "per_token_entropy": [0.375732421875, 0.012176513671875, 0.2349853515625, 0.01360321044921875, 0.0012807846069335938, 0.002826690673828125, 0.0018138885498046875, 0.0006809234619140625, 0.002849578857421875, 0.0007047653198242188, 6.67572021484375e-06, 0.00021505355834960938, 0.00046062469482421875, 0.0011949539184570312, 0.0005116462707519531, 0.01739501953125, 0.0016431808471679688, 0.0020923614501953125, 0.048736572265625, 0.0007638931274414062, 0.01885986328125, 0.00038909912109375, 0.0010786056518554688, 0.0015411376953125, 0.0015859603881835938, 0.0011005401611328125, 0.00051116943359375, 0.00011801719665527344, 0.0002371072769165039, 0.0423583984375, 0.00019180774688720703, 0.00020802021026611328, 0.0005459785461425781, 0.0001952648162841797, 0.0009756088256835938, 3.719329833984375e-05, 0.0001424551010131836, 0.00055694580078125, 3.8743019104003906e-05, 0.00019872188568115234, 0.01110076904296875, 0.0071868896484375, 0.0244903564453125, 0.006656646728515625, 0.006465911865234375, 0.0001747608184814453, 6.794929504394531e-06, 0.002727508544921875, 0.00013649463653564453, 0.39599609375, 0.00020110607147216797, 0.00010454654693603516], "tokens": [275, 319, 3759, 225, 34, 415, 354, 438, 646, 918, 18035, 372, 322, 2078, 739, 1730, 98, 48, 275, 319, 275, 319, 477, 753, 354, 322, 786, 372, 11470, 275, 319, 477, 601, 322, 43742, 432, 2078, 5040, 372, 354, 275, 569, 284, 562, 1946, 38985, 378, 18328, 26, 3222, 354, 27]}
{"line_number": 495, "line_type": "original", "code": "        return (double) getCumFreq(v) / (double) sumFreq;", "entropy": 2.205078125, "is_bug_line": false, "sus_score": 0.44005200266838074, "per_token_entropy": [4.0703125, 4.30859375, 4.125, 10.6875, 0.024261474609375, 9.390625, 0.0215911865234375, 0.8271484375, 0.1072998046875, 2.859375, 0.6376953125, 0.005367279052734375, 1.126953125, 0.045135498046875, 0.0005269050598144531, 1.3505859375, 0.066162109375, 0.045196533203125], "tokens": [351, 442, 308, 2627, 27, 38985, 378, 18328, 26, 104, 27, 517, 308, 2627, 27, 3632, 18328, 45]}
{"line_number": 495, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Returns the number of values in the set.\n     *\n     * @return the number of values\n     */\n    public long size() {\n        return getCountUnique();\n    }\n\n    /**\n     * Returns <code>true</code", "entropy": 0.381103515625, "is_bug_line": false, "sus_score": 0.44005200266838074, "per_token_entropy": [0.662109375, 0.030670166015625, 1.0693359375, 0.69091796875, 0.0435791015625, 0.0004487037658691406, 1.6259765625, 0.7236328125, 2.087890625, 0.00518798828125, 0.373291015625, 2.185546875, 0.25048828125, 0.5283203125, 0.259521484375, 0.045654296875, 0.0114898681640625, 0.136962890625, 6.818771362304688e-05, 0.0027179718017578125, 0.0022983551025390625, 0.07159423828125, 0.10272216796875, 0.0007429122924804688, 0.0223846435546875, 1.2294921875, 0.0316162109375, 0.0189361572265625, 0.04925537109375, 0.27880859375, 0.5517578125, 0.0053558349609375, 0.004718780517578125, 0.056732177734375, 0.035675048828125, 2.12890625, 1.302734375, 1.12890625, 0.13134765625, 0.1422119140625, 0.0006380081176757812, 0.2305908203125, 0.1072998046875, 0.004810333251953125, 0.00041365623474121094, 0.2998046875, 0.94189453125, 0.1865234375, 0.0004260540008544922, 0.008026123046875, 0.0004489421844482422, 6.985664367675781e-05], "tokens": [284, 320, 446, 1022, 275, 319, 3759, 322, 1451, 432, 2078, 328, 322, 739, 32, 275, 319, 275, 319, 477, 601, 322, 1451, 432, 2078, 275, 569, 284, 562, 1946, 1334, 346, 301, 291, 442, 622, 1534, 10189, 473, 284, 320, 446, 1022, 275, 319, 3759, 333, 687, 48, 1508, 377, 687]}
{"line_number": 138, "line_type": "original", "code": "            Long count = freqTable.get(obj);", "entropy": 1.6416015625, "is_bug_line": false, "sus_score": 0.44005194306373596, "per_token_entropy": [9.2421875, 5.9375, 0.82861328125, 0.07855224609375, 1.306640625, 0.0012836456298828125, 0.0018949508666992188, 0.00811767578125, 0.002166748046875, 0.6572265625, 0.004413604736328125], "tokens": [1468, 6359, 2385, 280, 18754, 1599, 32, 371, 26, 2067, 293]}
{"line_number": 138, "line_type": "generated", "code": "\n    /**\n     * Returns the number of values that have been added to this Frequency.\n     *\n     * @return the number of values that have been added to this Frequency.\n     */\n    public int getN() {\n        return freqTable.size();\n   ", "entropy": 0.2440185546875, "is_bug_line": false, "sus_score": 0.44005194306373596, "per_token_entropy": [0.6748046875, 0.165283203125, 0.053436279296875, 5.8770179748535156e-05, 1.8115234375, 0.29638671875, 1.23046875, 0.0095062255859375, 0.849609375, 1.1650390625, 0.22314453125, 0.04150390625, 0.055633544921875, 0.1268310546875, 0.13720703125, 1.1513671875, 0.416259765625, 0.0142364501953125, 0.0015382766723632812, 0.2359619140625, 0.00034356117248535156, 0.005985260009765625, 0.0016937255859375, 0.03216552734375, 0.349609375, 0.0012331008911132812, 0.02935791015625, 0.7265625, 0.0005526542663574219, 0.00032067298889160156, 0.0032634735107421875, 0.27294921875, 0.0024929046630859375, 0.0090484619140625, 0.264892578125, 0.018402099609375, 0.055938720703125, 0.01213836669921875, 0.031005859375, 0.462646484375, 0.09912109375, 0.12322998046875, 0.0120697021484375, 0.00861358642578125, 0.06024169921875, 0.69970703125, 0.68701171875, 0.0015783309936523438, 0.0098876953125, 0.0240478515625, 0.005084991455078125, 0.0132904052734375], "tokens": [284, 1022, 275, 319, 3759, 322, 1451, 432, 2078, 688, 1159, 2583, 3640, 372, 458, 41858, 32, 275, 319, 275, 319, 477, 601, 322, 1451, 432, 2078, 688, 1159, 2583, 3640, 372, 458, 41858, 32, 275, 569, 284, 562, 629, 622, 64, 346, 301, 291, 442, 18754, 1599, 32, 891, 473, 284]}
{"line_number": 249, "line_type": "original", "code": "            Long count =  freqTable.get(v);", "entropy": 2.16796875, "is_bug_line": false, "sus_score": 0.43999677896499634, "per_token_entropy": [5.625, 9.1875, 2.2578125, 0.029052734375, 4.3671875, 4.35546875, 0.01024627685546875, 0.005046844482421875, 0.01123046875, 0.013092041015625, 0.1260986328125, 0.0279998779296875], "tokens": [1468, 6359, 2385, 280, 225, 18754, 1599, 32, 371, 26, 104, 293]}
{"line_number": 249, "line_type": "generated", "code": "\n     * @deprecated replaced by {@link #getPercent(Comparable)} as of 2.0\n     */\n    @Deprecated\n    public double getPercent(Object v) {\n        return getPercent((Comparable<?>) v);\n    }\n\n    /**\n     * Returns", "entropy": 0.0872802734375, "is_bug_line": false, "sus_score": 0.43999677896499634, "per_token_entropy": [0.58447265625, 1.43359375, 0.04443359375, 0.396728515625, 0.2235107421875, 0.00153350830078125, 0.018402099609375, 0.00238800048828125, 0.0047149658203125, 0.224609375, 0.41796875, 0.021697998046875, 0.0290679931640625, 0.0200347900390625, 0.0300750732421875, 0.0004849433898925781, 0.027099609375, 0.0160675048828125, 0.0010423660278320312, 0.0012712478637695312, 0.04998779296875, 0.0240325927734375, 0.032135009765625, 0.01259613037109375, 0.0018949508666992188, 0.006557464599609375, 0.018768310546875, 0.03900146484375, 0.0052490234375, 0.0027523040771484375, 0.0035839080810546875, 0.0268096923828125, 0.0015192031860351562, 0.0010471343994140625, 0.01082611083984375, 0.061004638671875, 0.0496826171875, 0.007366180419921875, 0.0026149749755859375, 0.0115814208984375, 0.0006985664367675781, 0.0187835693359375, 0.00012362003326416016, 0.0136566162109375, 0.0011262893676757812, 0.01026153564453125, 4.684925079345703e-05, 0.05322265625, 0.00768280029296875, 0.55908203125, 0.00011658668518066406, 0.00620269775390625], "tokens": [275, 319, 477, 15040, 14171, 810, 3088, 1204, 588, 371, 12240, 26, 36880, 4370, 619, 432, 225, 36, 32, 34, 275, 569, 284, 477, 15387, 284, 562, 2064, 622, 12240, 26, 959, 354, 27, 301, 291, 442, 622, 12240, 1162, 36880, 1888, 5103, 354, 293, 284, 320, 446, 1022, 275, 319, 3759]}
{"line_number": 251, "line_type": "original", "code": "                result = count.longValue();", "entropy": 4.4140625, "is_bug_line": false, "sus_score": 0.43070313334465027, "per_token_entropy": [9.3515625, 6.20703125, 0.331298828125, 5.73046875, 4.48828125, 3.841796875, 0.9501953125], "tokens": [2071, 1056, 280, 2385, 32, 41976, 473]}
{"line_number": 251, "line_type": "generated", "code": "\n    public double getPct(Object v) {\n        return getPct((Comparable<?>) v);\n    }\n\n    /**\n      * Returns the percentage of values that are equal to v\n     * (as a proportion between 0 and 1).\n     * <", "entropy": 0.07647705078125, "is_bug_line": false, "sus_score": 0.43070313334465027, "per_token_entropy": [0.779296875, 1.083984375, 0.0328369140625, 0.004917144775390625, 0.111572265625, 0.0010709762573242188, 0.10064697265625, 0.0036182403564453125, 0.00292205810546875, 0.0377197265625, 0.331787109375, 0.173828125, 0.041351318359375, 0.003711700439453125, 0.02154541015625, 0.0024280548095703125, 0.04290771484375, 0.0002455711364746094, 0.01548004150390625, 0.0022449493408203125, 0.05047607421875, 0.0006761550903320312, 0.179443359375, 0.0298614501953125, 0.8681640625, 8.535385131835938e-05, 0.0014514923095703125, 0.0002646446228027344, 0.002796173095703125, 0.0003402233123779297, 0.0008778572082519531, 0.0010309219360351562, 0.0005292892456054688, 0.001163482666015625, 0.00016558170318603516, 0.0035114288330078125, 0.0211639404296875, 0.00037479400634765625, 0.001972198486328125, 0.0001392364501953125, 1.9073486328125e-05, 3.5881996154785156e-05, 0.0008587837219238281, 9.262561798095703e-05, 1.4662742614746094e-05, 0.0005993843078613281, 3.635883331298828e-05, 0.0002620220184326172, 0.0034465789794921875, 0.0028839111328125, 6.854534149169922e-05, 0.00977325439453125], "tokens": [284, 562, 2064, 622, 44268, 26, 959, 354, 27, 301, 291, 442, 622, 44268, 1162, 36880, 1888, 5103, 354, 293, 284, 320, 446, 1022, 397, 319, 3759, 322, 17722, 432, 2078, 688, 884, 5040, 372, 354, 275, 319, 308, 302, 312, 43742, 3733, 225, 34, 461, 225, 35, 547, 275, 319, 333]}
{"line_number": 491, "line_type": "original", "code": "        final long sumFreq = getSumFreq();", "entropy": 2.771484375, "is_bug_line": false, "sus_score": 0.42919450998306274, "per_token_entropy": [5.91796875, 4.22265625, 10.328125, 3.76171875, 0.062255859375, 1.6943359375, 1.5390625, 0.1396484375, 0.0151824951171875, 0.033660888671875], "tokens": [351, 1158, 1946, 3632, 18328, 280, 622, 4934, 18328, 473]}
{"line_number": 491, "line_type": "generated", "code": "\n    private static class ComparableComparator implements Comparator<Comparable<Object>> {\n\n        /**\n         * Returns -1, 0 or 1 as the first argument is less than, equal to\n         * or greater than the second.\n         * <p>\n         *", "entropy": 0.2388916015625, "is_bug_line": false, "sus_score": 0.42919450998306274, "per_token_entropy": [0.219970703125, 0.81298828125, 0.072509765625, 0.88525390625, 0.418701171875, 0.0011816024780273438, 0.365478515625, 0.01000213623046875, 0.1904296875, 0.12451171875, 0.400390625, 0.0882568359375, 0.07012939453125, 0.031829833984375, 0.55810546875, 0.297607421875, 0.1910400390625, 0.00015795230865478516, 2.744140625, 0.61962890625, 0.0012960433959960938, 0.46826171875, 0.0277252197265625, 0.0030841827392578125, 1.0546875, 0.04376220703125, 0.00017130374908447266, 0.27099609375, 0.45068359375, 0.280517578125, 0.00734710693359375, 0.000850677490234375, 0.02374267578125, 0.0006866455078125, 0.0008840560913085938, 0.057373046875, 0.25048828125, 0.34228515625, 0.0001380443572998047, 0.002105712890625, 0.0022182464599609375, 0.0002560615539550781, 0.00028634071350097656, 0.0017747879028320312, 0.27783203125, 0.05743408203125, 0.198974609375, 0.455078125, 0.0020847320556640625, 0.02532958984375, 0.0089111328125, 0.00021982192993164062], "tokens": [284, 945, 907, 443, 40409, 18700, 4575, 34868, 46, 36880, 46, 959, 2005, 301, 584, 1022, 276, 319, 3759, 429, 35, 30, 225, 34, 556, 225, 35, 619, 322, 1932, 2793, 438, 6679, 2784, 30, 5040, 372, 276, 319, 556, 10761, 2784, 322, 3100, 32, 276, 319, 333, 98, 48, 276, 319]}
{"line_number": 395, "line_type": "original", "code": "            Long value = freqTable.get(v);", "entropy": 1.69921875, "is_bug_line": false, "sus_score": 0.4274657070636749, "per_token_entropy": [6.57421875, 6.5078125, 1.7099609375, 0.04693603515625, 1.634765625, 0.0125885009765625, 0.0032215118408203125, 1.6796875, 0.0523681640625, 0.453125, 0.0193328857421875], "tokens": [1468, 6359, 786, 280, 18754, 1599, 32, 371, 26, 104, 293]}
{"line_number": 395, "line_type": "generated", "code": "\n    /**\n     * Returns the cumulative frequency of values less than or equal to v.\n     * <p>\n     * Returns 0 if v is not comparable to the values set.</p>\n     *\n     * @param v the value to lookup\n    ", "entropy": 0.03485107421875, "is_bug_line": false, "sus_score": 0.4274657070636749, "per_token_entropy": [0.64453125, 0.94921875, 0.0347900390625, 0.0003056526184082031, 0.0218658447265625, 0.00960540771484375, 0.0360107421875, 0.0196075439453125, 0.0011396408081054688, 0.0032806396484375, 0.007236480712890625, 0.00035858154296875, 0.0015316009521484375, 0.0003159046173095703, 0.0003097057342529297, 0.00591278076171875, 0.01134490966796875, 0.0017852783203125, 6.902217864990234e-05, 0.00751495361328125, 0.00037670135498046875, 0.0006818771362304688, 0.0019702911376953125, 3.063678741455078e-05, 0.0011844635009765625, 0.0004582405090332031, 5.1975250244140625e-05, 0.0002942085266113281, 0.0003266334533691406, 0.00010395050048828125, 0.0003769397735595703, 0.00015270709991455078, 5.364418029785156e-06, 3.9696693420410156e-05, 9.584426879882812e-05, 0.00018703937530517578, 0.00010025501251220703, 0.0016460418701171875, 4.5418739318847656e-05, 9.191036224365234e-05, 0.0018873214721679688, 0.0001049041748046875, 0.0024089813232421875, 0.00014138221740722656, 0.0003020763397216797, 0.00032711029052734375, 0.0007843971252441406, 0.0005602836608886719, 0.0003495216369628906, 6.711483001708984e-05, 6.413459777832031e-05, 0.04071044921875], "tokens": [284, 1022, 275, 319, 3759, 322, 41008, 13472, 432, 2078, 6679, 2784, 556, 5040, 372, 354, 32, 275, 319, 333, 98, 48, 275, 319, 3759, 225, 34, 415, 354, 438, 646, 918, 18035, 372, 322, 2078, 739, 1730, 98, 48, 275, 319, 275, 319, 477, 753, 354, 322, 786, 372, 11470, 275]}
{"line_number": 382, "line_type": "original", "code": "        if (getSumFreq() == 0) {", "entropy": 1.62890625, "is_bug_line": false, "sus_score": 0.42276009917259216, "per_token_entropy": [6.890625, 4.0546875, 0.090087890625, 5.3125, 2.49609375, 0.0635986328125, 0.060150146484375, 0.29296875, 0.0654296875, 0.0035247802734375, 0.1129150390625, 0.09686279296875], "tokens": [351, 415, 308, 371, 4934, 18328, 346, 610, 225, 34, 27, 301]}
{"line_number": 382, "line_type": "generated", "code": "\n            return 0;\n        }\n\n        return getCumFreq(Integer.valueOf(v));\n    }\n\n    /**\n     * Returns the cumulative frequency of values less than or equal to v.\n     * <p>\n     * Returns 0 if v is not", "entropy": 0.0716552734375, "is_bug_line": false, "sus_score": 0.42276009917259216, "per_token_entropy": [0.2340087890625, 0.01323699951171875, 0.0201568603515625, 0.0003371238708496094, 0.01024627685546875, 0.08258056640625, 0.0037899017333984375, 1.6640625, 1.158203125, 0.00811767578125, 5.4717063903808594e-05, 5.602836608886719e-05, 0.182373046875, 0.11102294921875, 0.0001958608627319336, 0.0002281665802001953, 0.0018825531005859375, 0.002044677734375, 0.0019779205322265625, 0.07354736328125, 0.0012531280517578125, 0.07476806640625, 0.02178955078125, 0.021087646484375, 0.00016629695892333984, 0.0038700103759765625, 0.001384735107421875, 0.0044097900390625, 0.0022640228271484375, 0.0004935264587402344, 0.0006284713745117188, 0.0032749176025390625, 0.00022971630096435547, 0.0007123947143554688, 0.0001373291015625, 0.00019872188568115234, 0.0019073486328125, 0.0092926025390625, 0.0009822845458984375, 1.5735626220703125e-05, 0.006343841552734375, 0.0003211498260498047, 0.0006361007690429688, 0.0001926422119140625, 5.233287811279297e-05, 0.00121307373046875, 0.00030803680419921875, 0.00015223026275634766, 0.000518798828125, 0.0003070831298828125, 5.316734313964844e-05, 0.00028777122497558594], "tokens": [324, 442, 225, 34, 45, 291, 320, 584, 442, 38985, 378, 18328, 26, 3061, 32, 9162, 26, 104, 876, 284, 320, 446, 1022, 275, 319, 3759, 322, 41008, 13472, 432, 2078, 6679, 2784, 556, 5040, 372, 354, 32, 275, 319, 333, 98, 48, 275, 319, 3759, 225, 34, 415, 354, 438, 646]}
{"line_number": 392, "line_type": "original", "code": "        long result = 0;", "entropy": 1.369140625, "is_bug_line": false, "sus_score": 0.42143186926841736, "per_token_entropy": [4.96484375, 3.904296875, 0.339599609375, 0.056640625, 0.209228515625, 0.0017995834350585938, 0.10687255859375], "tokens": [351, 1946, 1056, 280, 225, 34, 45]}
{"line_number": 392, "line_type": "generated", "code": "\n     */\n    public long getCumFreq(long v) {\n        return getCumFreq(Double.valueOf(v));\n    }\n\n    /**\n     * Returns the cumulative frequency of values less than or equal to v.\n     * <p>\n     * Returns", "entropy": 0.068603515625, "is_bug_line": false, "sus_score": 0.42143186926841736, "per_token_entropy": [0.86328125, 0.04876708984375, 0.050872802734375, 0.013336181640625, 0.0173187255859375, 0.00035858154296875, 7.152557373046875e-06, 0.00909423828125, 0.0003230571746826172, 0.1868896484375, 0.0004343986511230469, 0.0006761550903320312, 0.00881195068359375, 0.056793212890625, 0.345703125, 0.0167694091796875, 0.0001055002212524414, 0.00020611286163330078, 0.024627685546875, 0.9375, 0.00047659873962402344, 0.00012874603271484375, 0.0009937286376953125, 0.0008192062377929688, 0.0008764266967773438, 0.03167724609375, 0.0002002716064453125, 0.8955078125, 0.0162353515625, 0.004726409912109375, 0.00012564659118652344, 0.0023097991943359375, 0.00037980079650878906, 0.004337310791015625, 0.00176239013671875, 0.000339508056640625, 0.0004062652587890625, 0.00255584716796875, 0.00020837783813476562, 0.0006380081176757812, 0.00023353099822998047, 0.0002574920654296875, 0.00244903564453125, 0.007720947265625, 0.0023632049560546875, 4.9948692321777344e-05, 0.0045928955078125, 0.00019478797912597656, 0.0003600120544433594, 0.0013990402221679688, 0.00020825862884521484, 0.0015592575073242188], "tokens": [275, 569, 284, 562, 1946, 38985, 378, 18328, 26, 3222, 354, 27, 301, 291, 442, 38985, 378, 18328, 26, 4075, 32, 9162, 26, 104, 876, 284, 320, 446, 1022, 275, 319, 3759, 322, 41008, 13472, 432, 2078, 6679, 2784, 556, 5040, 372, 354, 32, 275, 319, 333, 98, 48, 275, 319, 3759]}
{"line_number": 561, "line_type": "original", "code": "            return o1.compareTo((T) o2);", "entropy": 1.8525390625, "is_bug_line": false, "sus_score": 0.4212459325790405, "per_token_entropy": [8.0546875, 2.884765625, 5.32421875, 1.478515625, 0.1827392578125, 0.1943359375, 2.935546875, 0.7470703125, 0.032501220703125, 0.332763671875, 0.005840301513671875, 0.054656982421875], "tokens": [1468, 442, 337, 35, 32, 23908, 1162, 70, 27, 337, 36, 293]}
{"line_number": 561, "line_type": "generated", "code": "\n    /**\n     * Returns a new {@code Frequency} that is a copy of this one.\n     *\n     * @return a new {@code Frequency} that is a copy of this one\n     */\n    public Frequency copy() {\n        Frequency f = new Frequency", "entropy": 0.429443359375, "is_bug_line": false, "sus_score": 0.4212459325790405, "per_token_entropy": [1.8974609375, 0.45458984375, 0.41259765625, 0.0007109642028808594, 1.11328125, 0.57421875, 2.62109375, 1.4375, 0.78369140625, 0.10772705078125, 0.0287933349609375, 1.419921875, 0.78076171875, 1.095703125, 1.2734375, 0.01004791259765625, 0.1573486328125, 0.48095703125, 0.3232421875, 0.098876953125, 0.0204010009765625, 0.403076171875, 0.00041556358337402344, 0.00881195068359375, 0.008697509765625, 0.521484375, 0.54638671875, 1.03515625, 0.0180206298828125, 0.0030689239501953125, 0.013946533203125, 0.365478515625, 0.003368377685546875, 0.0052642822265625, 0.00298309326171875, 0.001201629638671875, 0.00226593017578125, 0.00177764892578125, 0.282958984375, 0.08660888671875, 0.01027679443359375, 0.183349609375, 0.039276123046875, 0.324951171875, 0.0075531005859375, 0.0227508544921875, 0.07965087890625, 1.439453125, 1.7431640625, 0.0386962890625, 0.031768798828125, 0.0076141357421875], "tokens": [284, 1022, 275, 319, 3759, 312, 537, 3088, 687, 41858, 111, 688, 438, 312, 1933, 432, 458, 1591, 32, 275, 319, 275, 319, 477, 601, 312, 537, 3088, 687, 41858, 111, 688, 438, 312, 1933, 432, 458, 1591, 275, 569, 284, 562, 41858, 1933, 346, 301, 291, 41858, 296, 280, 537, 41858]}
{"line_number": 403, "line_type": "original", "code": "        if (c.compare(v, freqTable.firstKey()) < 0) {", "entropy": 0.6572265625, "is_bug_line": false, "sus_score": 0.4209766387939453, "per_token_entropy": [2.3046875, 3.9609375, 0.103515625, 1.9052734375, 0.251708984375, 0.00270843505859375, 0.021942138671875, 0.047271728515625, 0.00279998779296875, 0.314208984375, 0.0036296844482421875, 0.0013990402221679688, 2.890625, 0.00485992431640625, 0.003826141357421875, 1.2041015625, 0.00588226318359375, 0.0029964447021484375, 0.0316162109375, 0.075927734375], "tokens": [351, 415, 308, 85, 32, 6055, 26, 104, 30, 18754, 1599, 32, 2232, 953, 1157, 333, 225, 34, 27, 301]}
{"line_number": 403, "line_type": "generated", "code": "\n     * @return the proportion of values equal to v\n     */\n    public long getCumFreq(float v) {\n        return getCumFreq(Double.valueOf(v));\n    }\n\n    /**\n     * Returns the cumulative frequency of values less than or equal", "entropy": 0.059112548828125, "is_bug_line": false, "sus_score": 0.4209766387939453, "per_token_entropy": [0.81982421875, 0.0438232421875, 0.005889892578125, 0.04193115234375, 0.006084442138671875, 0.00446319580078125, 0.0005025863647460938, 0.001087188720703125, 0.00765228271484375, 0.00037860870361328125, 0.002716064453125, 0.1717529296875, 0.0703125, 0.0797119140625, 0.0345458984375, 0.09954833984375, 0.0014820098876953125, 0.0001251697540283203, 0.236328125, 0.0316162109375, 0.67529296875, 0.0004878044128417969, 0.0013780593872070312, 0.00351715087890625, 0.041961669921875, 0.06427001953125, 0.04345703125, 4.470348358154297e-05, 0.0016031265258789062, 0.08380126953125, 0.2459716796875, 0.0002980232238769531, 0.00028324127197265625, 0.0005221366882324219, 0.0017871856689453125, 0.0013246536254882812, 0.00841522216796875, 8.153915405273438e-05, 0.2271728515625, 0.003711700439453125, 0.0037403106689453125, 9.262561798095703e-05, 0.001766204833984375, 0.00022864341735839844, 0.0016117095947265625, 0.00031304359436035156, 0.00025463104248046875, 0.00016355514526367188, 0.0009555816650390625, 0.00012385845184326172, 0.00023615360260009766, 8.58306884765625e-05], "tokens": [275, 319, 477, 601, 322, 43742, 432, 2078, 5040, 372, 354, 275, 569, 284, 562, 1946, 38985, 378, 18328, 26, 1808, 354, 27, 301, 291, 442, 38985, 378, 18328, 26, 4075, 32, 9162, 26, 104, 876, 284, 320, 446, 1022, 275, 319, 3759, 322, 41008, 13472, 432, 2078, 6679, 2784, 556, 5040]}
