{"line_number": 267, "line_type": "original", "code": "        for (int j = 0; j < y0.length; ++j) {", "entropy": 0.52490234375, "is_bug_line": false, "sus_score": 0.8005897402763367, "per_token_entropy": [5.03515625, 3.384765625, 0.0153961181640625, 0.73193359375, 0.873046875, 0.0007491111755371094, 0.006305694580078125, 0.0029277801513671875, 0.0012950897216796875, 0.003063201904296875, 0.001712799072265625, 0.237548828125, 0.170654296875, 0.003444671630859375, 2.372264862060547e-05, 0.001506805419921875, 0.002483367919921875, 7.998943328857422e-05, 0.0015592575073242188, 0.0230560302734375], "tokens": [351, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 533, 34, 32, 1322, 45, 3311, 92, 27, 301]}
{"line_number": 267, "line_type": "generated", "code": "\n          if (filteredNextIsLast &&!nextIsLast) {\n              // we shrunk too far in the past, we need to restart from scratch\n              stepStart = interpolator.getPreviousTime();\n              interpolator.shift();\n              firstTime", "entropy": 0.68798828125, "is_bug_line": false, "sus_score": 0.8005897402763367, "per_token_entropy": [0.9580078125, 1.2529296875, 0.4248046875, 0.78564453125, 0.00943756103515625, 0.0384521484375, 0.0007672309875488281, 1.181640625, 1.49609375, 1.1142578125, 0.0006089210510253906, 0.00016415119171142578, 0.053924560546875, 0.00476837158203125, 0.48291015625, 0.6044921875, 1.5048828125, 3.650390625, 1.2138671875, 0.0015954971313476562, 1.916015625, 0.1343994140625, 0.9033203125, 0.465087890625, 1.349609375, 0.8134765625, 1.3837890625, 1.1201171875, 0.091796875, 3.369140625, 0.71923828125, 1.1455078125, 0.2047119140625, 1.9423828125, 0.0252532958984375, 0.388916015625, 1.6220703125, 0.00014472007751464844, 0.0006556510925292969, 0.1591796875, 0.1273193359375, 0.50244140625, 0.2244873046875, 0.0318603515625, 0.79443359375, 5.888938903808594e-05, 0.011199951171875, 0.55810546875, 0.054534912109375, 0.06280517578125, 0.87548828125, 0.0005769729614257812], "tokens": [616, 415, 308, 15688, 3353, 1622, 3267, 962, 653, 1978, 1622, 3267, 27, 301, 1090, 434, 996, 787, 1945, 93, 5133, 9019, 328, 322, 11169, 30, 996, 1849, 372, 11686, 645, 20899, 1090, 3111, 2130, 280, 14399, 717, 32, 371, 11698, 1043, 473, 1090, 14399, 717, 32, 5494, 473, 1090, 1932, 1043]}
{"line_number": 261, "line_type": "original", "code": "", "entropy": 4.23828125, "is_bug_line": false, "sus_score": 0.7730637788772583, "per_token_entropy": [4.23828125], "tokens": [203]}
{"line_number": 261, "line_type": "generated", "code": "\n          // set the integration control objects for next step\n          initIntegration(stepStart, y, nextT);\n\n          // prepare for next step\n          interpolator.shift();\n          stepStart = nextT;\n          isLastStep = nextIsLast;\n\n      }", "entropy": 0.5068359375, "is_bug_line": false, "sus_score": 0.7730637788772583, "per_token_entropy": [0.87451171875, 1.6435546875, 2.568359375, 1.3955078125, 1.4521484375, 0.466064453125, 2.23828125, 0.265380859375, 0.45166015625, 0.0099334716796875, 0.084228515625, 1.029296875, 0.0008692741394042969, 0.001926422119140625, 0.463134765625, 0.0003597736358642578, 0.08868408203125, 0.0222015380859375, 0.36328125, 0.9716796875, 0.045257568359375, 0.0219573974609375, 1.263671875, 0.56201171875, 2.12109375, 1.49609375, 0.356689453125, 0.12054443359375, 0.197265625, 1.923828125, 0.0011034011840820312, 0.0013799667358398438, 0.1561279296875, 0.08294677734375, 0.52734375, 0.97705078125, 0.09039306640625, 0.227783203125, 0.1756591796875, 0.0086517333984375, 0.000637054443359375, 0.46337890625, 0.6904296875, 0.0005311965942382812, 0.0006842613220214844, 0.019073486328125, 0.01259613037109375, 2.5272369384765625e-05, 2.5033950805664062e-06, 0.003925323486328125, 0.407470703125, 0.0007152557373046875], "tokens": [616, 434, 739, 322, 10516, 3498, 4684, 436, 2354, 3111, 616, 3219, 13034, 26, 2997, 2130, 30, 533, 30, 2354, 70, 293, 5678, 434, 11656, 436, 2354, 3111, 616, 14399, 717, 32, 5494, 473, 616, 3111, 2130, 280, 2354, 70, 45, 616, 438, 3267, 3533, 280, 2354, 1622, 3267, 45, 1687, 320]}
{"line_number": 3264, "line_type": "original", "code": "", "entropy": 0.4130859375, "is_bug_line": false, "sus_score": 0.7042698264122009, "per_token_entropy": [0.4130859375], "tokens": [203]}
{"line_number": 3264, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.7042698264122009, "per_token_entropy": [], "tokens": []}
{"line_number": 278, "line_type": "original", "code": "          // reject the step and attempt to reduce error by stepsize control", "entropy": 2.859375, "is_bug_line": false, "sus_score": 0.6950993537902832, "per_token_entropy": [10.4609375, 1.390625, 8.8984375, 1.1787109375, 0.1568603515625, 2.021484375, 6.3828125, 0.63671875, 4.8828125, 0.759765625, 2.02734375, 0.321533203125, 0.5537109375, 0.358642578125], "tokens": [2033, 434, 7658, 322, 3111, 461, 11549, 372, 11665, 1048, 810, 3111, 891, 3498]}
{"line_number": 278, "line_type": "generated", "code": "\n    return stepStart;\n\n  }", "entropy": 0.5029296875, "is_bug_line": false, "sus_score": 0.6950993537902832, "per_token_entropy": [0.9052734375, 0.87890625, 0.728515625, 0.10760498046875, 0.04144287109375, 0.85595703125, 0.002872467041015625], "tokens": [284, 442, 3111, 2130, 45, 719, 320]}
{"line_number": 3252, "line_type": "original", "code": "", "entropy": 0.4130859375, "is_bug_line": false, "sus_score": 0.6908140182495117, "per_token_entropy": [0.4130859375], "tokens": [203]}
{"line_number": 3252, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6908140182495117, "per_token_entropy": [], "tokens": []}
{"line_number": 3267, "line_type": "original", "code": "", "entropy": 0.4130859375, "is_bug_line": false, "sus_score": 0.6888922452926636, "per_token_entropy": [0.4130859375], "tokens": [203]}
{"line_number": 3267, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6888922452926636, "per_token_entropy": [], "tokens": []}
{"line_number": 3256, "line_type": "original", "code": "", "entropy": 0.4130859375, "is_bug_line": false, "sus_score": 0.6849416494369507, "per_token_entropy": [0.4130859375], "tokens": [203]}
{"line_number": 3256, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6849416494369507, "per_token_entropy": [], "tokens": []}
{"line_number": 297, "line_type": "original", "code": "          interpolator.storeTime(stepStart);", "entropy": 2.67578125, "is_bug_line": false, "sus_score": 0.6707668304443359, "per_token_entropy": [9.796875, 13.34375, 0.0158233642578125, 0.214599609375, 0.64892578125, 0.013641357421875, 0.035980224609375, 0.157470703125, 0.01276397705078125, 2.517578125], "tokens": [2033, 14399, 717, 32, 2157, 1043, 26, 2997, 2130, 293]}
{"line_number": 297, "line_type": "generated", "code": "\n  public double getMaxGrowth() {\n    return maxGrowth;\n  }\n\n  /** Set the maximal growth factor for stepsize control.\n   * @param maxGrowth maximal growth factor\n   */\n  public void setMaxGrowth(final double", "entropy": 0.026641845703125, "is_bug_line": false, "sus_score": 0.6707668304443359, "per_token_entropy": [0.439697265625, 0.03326416015625, 0.00360870361328125, 0.00153350830078125, 0.00046563148498535156, 5.841255187988281e-06, 0.0008473396301269531, 0.0036640167236328125, 0.148681640625, 0.0013208389282226562, 0.00623321533203125, 3.254413604736328e-05, 8.344650268554688e-07, 0.0007338523864746094, 0.062103271484375, 0.00035881996154785156, 0.0799560546875, 0.004688262939453125, 0.026885986328125, 0.0027751922607421875, 0.005054473876953125, 4.971027374267578e-05, 0.0004668235778808594, 0.0020427703857421875, 0.0028591156005859375, 0.0012350082397460938, 0.00018489360809326172, 1.4424324035644531e-05, 0.00518035888671875, 0.004711151123046875, 0.0001302957534790039, 0.0117340087890625, 0.0012569427490234375, 0.0052032470703125, 0.002086639404296875, 0.00023245811462402344, 0.00678253173828125, 7.295608520507812e-05, 0.0004723072052001953, 0.0006670951843261719, 0.00949859619140625, 0.0155029296875, 0.4814453125, 0.0033855438232421875, 0.000530242919921875, 0.001552581787109375, 0.00011587142944335938, 2.300739288330078e-05, 2.6226043701171875e-06, 0.0004687309265136719, 0.004772186279296875, 0.00077056884765625], "tokens": [334, 562, 2064, 39486, 25537, 349, 346, 301, 284, 442, 1769, 25537, 349, 45, 334, 320, 719, 1022, 1756, 322, 1769, 2977, 27934, 10365, 436, 3111, 891, 3498, 32, 664, 319, 477, 753, 1769, 25537, 349, 1769, 2977, 27934, 10365, 664, 569, 334, 562, 763, 739, 2708, 25537, 349, 26, 3220, 2064]}
{"line_number": 265, "line_type": "original", "code": "", "entropy": 4.9453125, "is_bug_line": false, "sus_score": 0.6658779382705688, "per_token_entropy": [4.9453125], "tokens": [203]}
{"line_number": 265, "line_type": "generated", "code": "\n              // the stepsize control has rejected the step, but the\n              // stepsize is such that we will end up exactly at t\n              // we need to ensure that the step is taken and the events\n              // are triggered\n              hNew = t - step", "entropy": 1.052734375, "is_bug_line": false, "sus_score": 0.6658779382705688, "per_token_entropy": [0.334228515625, 0.548828125, 2.09765625, 1.35546875, 0.98828125, 1.6826171875, 1.83203125, 1.080078125, 0.1492919921875, 0.5576171875, 0.91943359375, 2.71875, 0.92138671875, 2.927734375, 0.0016422271728515625, 1.5146484375, 0.7158203125, 1.796875, 2.412109375, 0.0119781494140625, 0.9453125, 1.6748046875, 2.77734375, 0.09307861328125, 0.43310546875, 0.1602783203125, 0.4169921875, 1.517578125, 0.8076171875, 2.740234375, 1.630859375, 0.041229248046875, 2.021484375, 1.55859375, 0.8154296875, 1.0400390625, 0.8037109375, 1.8076171875, 1.9599609375, 1.2236328125, 0.395263671875, 0.52294921875, 0.0020389556884765625, 0.84521484375, 0.0631103515625, 1.578125, 1.5048828125, 0.018890380859375, 0.10101318359375, 0.58740234375, 0.01336669921875, 0.08746337890625], "tokens": [1090, 434, 322, 3111, 891, 3498, 1401, 21347, 322, 3111, 30, 1273, 322, 1090, 434, 3111, 891, 438, 3751, 688, 996, 1098, 943, 973, 11114, 821, 273, 1090, 434, 996, 1849, 372, 7279, 688, 322, 3111, 438, 11508, 461, 322, 5216, 1090, 434, 884, 16791, 1090, 420, 1812, 280, 273, 429, 3111]}
{"line_number": 244, "line_type": "original", "code": "          hNew = initializeStep(forward, getOrder(), scale,", "entropy": 2.71875, "is_bug_line": false, "sus_score": 0.6657756567001343, "per_token_entropy": [4.6796875, 3.46875, 0.12115478515625, 0.15576171875, 7.54296875, 0.01556396484375, 0.0157928466796875, 2.703125, 0.07672119140625, 7.46484375, 4.640625, 0.27978515625, 5.95703125, 0.93603515625], "tokens": [2033, 420, 1812, 280, 7379, 3533, 26, 7543, 30, 622, 2871, 1026, 5247, 30]}
{"line_number": 244, "line_type": "generated", "code": "\n      // check if the step was accepted\n      if (isLastStep) {\n        return;\n      }\n\n      // prepare next step\n      hNew = filterStep(hNew, forward, true);\n      stepStart = interpolator.getCurrentTime();\n\n    }", "entropy": 0.5654296875, "is_bug_line": false, "sus_score": 0.6657756567001343, "per_token_entropy": [1.0419921875, 1.4365234375, 2.8671875, 0.82373046875, 1.541015625, 0.160888671875, 1.5078125, 0.361572265625, 0.6455078125, 0.294921875, 0.478271484375, 1.9130859375, 0.045867919921875, 0.045928955078125, 0.164794921875, 0.01470184326171875, 0.209228515625, 2.00390625, 0.33544921875, 0.02325439453125, 0.007354736328125, 0.281494140625, 0.1883544921875, 1.5546875, 0.37060546875, 0.04327392578125, 0.138671875, 2.291015625, 0.055267333984375, 0.1173095703125, 0.80908203125, 0.0014963150024414062, 0.00720977783203125, 1.1513671875, 0.01739501953125, 0.045440673828125, 0.018096923828125, 0.032318115234375, 0.12481689453125, 0.00040912628173828125, 0.92822265625, 2.2734375, 0.13916015625, 0.482666015625, 0.84716796875, 7.581710815429688e-05, 0.0012197494506835938, 0.326171875, 0.03790283203125, 0.0169219970703125, 1.166015625, 0.00677490234375], "tokens": [397, 434, 1505, 415, 322, 3111, 1597, 16187, 397, 415, 308, 297, 3267, 3533, 27, 301, 291, 442, 45, 397, 320, 1687, 434, 11656, 2354, 3111, 397, 420, 1812, 280, 2761, 3533, 26, 90, 1812, 30, 7386, 30, 861, 293, 397, 3111, 2130, 280, 14399, 717, 32, 12331, 1043, 473, 446, 320]}
{"line_number": 274, "line_type": "original", "code": "", "entropy": 2.357421875, "is_bug_line": false, "sus_score": 0.6584892272949219, "per_token_entropy": [2.357421875], "tokens": [203]}
{"line_number": 274, "line_type": "generated", "code": "\n    interpolator.storeTime(stepStart);\n    return stepStart;\n\n  }", "entropy": 0.467529296875, "is_bug_line": false, "sus_score": 0.6584892272949219, "per_token_entropy": [0.55615234375, 1.9287109375, 0.00040078163146972656, 0.002269744873046875, 1.6533203125, 0.039947509765625, 0.0007715225219726562, 0.1959228515625, 0.002819061279296875, 0.035308837890625, 0.61572265625, 1.8173828125, 0.845703125, 0.04522705078125, 0.01617431640625, 0.1907958984375, 0.0034942626953125], "tokens": [284, 14399, 717, 32, 2157, 1043, 26, 2997, 2130, 293, 284, 442, 3111, 2130, 45, 719, 320]}
{"line_number": 3265, "line_type": "original", "code": "", "entropy": 0.4130859375, "is_bug_line": false, "sus_score": 0.6545383334159851, "per_token_entropy": [0.4130859375], "tokens": [203]}
{"line_number": 3265, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6545383334159851, "per_token_entropy": [], "tokens": []}
{"line_number": 231, "line_type": "original", "code": "        }", "entropy": 5.8828125, "is_bug_line": false, "sus_score": 0.652094304561615, "per_token_entropy": [4.40625, 7.35546875], "tokens": [351, 320]}
{"line_number": 231, "line_type": "generated", "code": "\n                  FastMath.max(minReduction, safety * error / (1.0 - error)));", "entropy": 0.32763671875, "is_bug_line": false, "sus_score": 0.652094304561615, "per_token_entropy": [1.96484375, 0.72265625, 4.8279762268066406e-05, 0.00057220458984375, 0.2626953125, 0.004055023193359375, 0.040985107421875, 0.299560546875, 0.01122283935546875, 0.984375, 0.330078125, 0.314208984375, 0.6103515625, 0.274169921875, 0.143310546875, 0.10223388671875, 0.003559112548828125, 0.29638671875, 0.027191162109375, 0.159912109375], "tokens": [1750, 15938, 5717, 32, 1449, 26, 887, 35802, 30, 26160, 319, 1048, 517, 308, 35, 32, 34, 429, 1048, 4236]}
{"line_number": 857, "line_type": "original", "code": "", "entropy": 0.4130859375, "is_bug_line": false, "sus_score": 0.6495146155357361, "per_token_entropy": [0.4130859375], "tokens": [203]}
{"line_number": 857, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6495146155357361, "per_token_entropy": [], "tokens": []}
{"line_number": 269, "line_type": "original", "code": "          for (int l = 1; l < stages; ++l) {", "entropy": 1.015625, "is_bug_line": false, "sus_score": 0.6450604796409607, "per_token_entropy": [7.4375, 4.203125, 0.0084228515625, 1.3984375, 1.396484375, 0.049468994140625, 0.0567626953125, 2.328125, 0.00714111328125, 0.019744873046875, 0.060455322265625, 0.14306640625, 0.1370849609375, 0.0118560791015625, 0.000392913818359375, 0.0024547576904296875, 0.01214599609375], "tokens": [2033, 436, 308, 410, 456, 280, 225, 35, 45, 456, 333, 31416, 45, 3311, 94, 27, 301]}
{"line_number": 269, "line_type": "generated", "code": "\n\n    } while (!isLastStep);\n\n    // dispatch end of integration event\n    interpolator.storeTime(t);\n\n    // dispatch event\n    eventsDispatcher.dispatch(new GraggBulirschStoerStepEndEvent(this, t, y", "entropy": 0.5302734375, "is_bug_line": false, "sus_score": 0.6450604796409607, "per_token_entropy": [1.2666015625, 0.01434326171875, 0.05950927734375, 0.2958984375, 0.0396728515625, 0.0007472038269042969, 0.0003604888916015625, 0.061676025390625, 0.6044921875, 1.2919921875, 2.359375, 0.436767578125, 0.46533203125, 0.1988525390625, 0.50048828125, 0.0994873046875, 1.8779296875, 0.00021386146545410156, 0.002040863037109375, 0.1866455078125, 0.0029048919677734375, 0.0003917217254638672, 0.320068359375, 0.092041015625, 1.2001953125, 0.87548828125, 1.3818359375, 2.607421875, 0.9287109375, 2.5703125, 0.68017578125, 0.0011854171752929688, 0.1507568359375, 0.6875, 0.75, 0.822265625, 0.384765625, 0.0188751220703125, 0.051605224609375, 0.0004706382751464844, 0.000568389892578125, 0.189208984375, 0.0009570121765136719, 0.449462890625, 0.90576171875, 0.0146636962890625, 0.0128173828125, 0.9306640625, 0.28662109375, 0.828125, 0.2425537109375, 0.415283203125], "tokens": [446, 320, 2218, 1429, 297, 3267, 3533, 293, 446, 434, 7520, 943, 432, 10516, 1692, 284, 14399, 717, 32, 2157, 1043, 26, 102, 293, 446, 434, 7520, 1692, 284, 5216, 11525, 32, 7147, 26, 890, 570, 2453, 89, 40300, 476, 6378, 2373, 265, 3533, 2102, 1151, 26, 578, 30, 273, 30, 533]}
{"line_number": 309, "line_type": "original", "code": "          final boolean nextIsLast = forward ? (nextT >= t) : (nextT <= t);", "entropy": 1.0, "is_bug_line": false, "sus_score": 0.6433382034301758, "per_token_entropy": [8.546875, 3.1015625, 4.71875, 4.1171875, 0.0904541015625, 0.045562744140625, 0.76025390625, 0.2646484375, 0.004947662353515625, 0.03460693359375, 0.201904296875, 0.020233154296875, 0.02752685546875, 0.03411865234375, 0.012115478515625, 0.007781982421875, 0.002002716064453125, 0.001049041748046875, 0.00040984153747558594, 0.00327301025390625, 0.0011281967163085938, 0.0037059783935546875], "tokens": [2033, 1158, 1905, 2354, 1622, 3267, 280, 7386, 1018, 308, 1978, 70, 2377, 273, 27, 499, 308, 1978, 70, 2511, 273, 293]}
{"line_number": 309, "line_type": "generated", "code": "\n   * @param yDotK predicted derivative at the end of the step\n   * @param y reference state at the end of the step\n   * @param yTmp estimated state at the end of the step\n   * @param stepSize stepsize\n   *", "entropy": 0.233154296875, "is_bug_line": false, "sus_score": 0.6433382034301758, "per_token_entropy": [0.146484375, 0.052276611328125, 0.2734375, 0.04815673828125, 0.13818359375, 0.022216796875, 0.089599609375, 2.359375, 1.56640625, 0.2396240234375, 0.45947265625, 0.1866455078125, 0.0023956298828125, 0.0245819091796875, 0.201171875, 0.07867431640625, 0.0004124641418457031, 0.0012788772583007812, 0.0009717941284179688, 0.0137176513671875, 1.19921875, 0.1021728515625, 0.177490234375, 0.0799560546875, 0.259765625, 0.0009245872497558594, 0.001922607421875, 0.0082550048828125, 0.0070037841796875, 6.759166717529297e-05, 0.00029468536376953125, 0.00106048583984375, 0.0222015380859375, 0.27880859375, 0.67578125, 0.33740234375, 0.0156097412109375, 0.009246826171875, 0.01219940185546875, 0.0008111000061035156, 0.0022106170654296875, 0.0021209716796875, 0.044281005859375, 0.00048804283142089844, 0.0007228851318359375, 0.016204833984375, 0.49169921875, 0.002849578857421875, 0.8818359375, 0.387451171875, 1.1953125, 0.007904052734375], "tokens": [664, 319, 477, 753, 533, 10025, 61, 22809, 27640, 821, 322, 943, 432, 322, 3111, 664, 319, 477, 753, 533, 4121, 1603, 821, 322, 943, 432, 322, 3111, 664, 319, 477, 753, 533, 15770, 28625, 1603, 821, 322, 943, 432, 322, 3111, 664, 319, 477, 753, 3111, 1250, 3111, 891, 664, 319]}
{"line_number": 281, "line_type": "original", "code": "                           FastMath.max(minReduction, safety * FastMath.pow(error, exp)));", "entropy": 1.576171875, "is_bug_line": false, "sus_score": 0.6425808668136597, "per_token_entropy": [13.0703125, 11.9609375, 0.0011167526245117188, 0.0154266357421875, 1.4169921875, 0.126708984375, 0.5380859375, 0.035888671875, 0.014801025390625, 1.6298828125, 0.040496826171875, 0.041229248046875, 0.00038623809814453125, 0.0004603862762451172, 0.0128631591796875, 0.007564544677734375, 0.0576171875, 0.023284912109375, 0.032073974609375, 2.490234375], "tokens": [10441, 15938, 5717, 32, 1449, 26, 887, 35802, 30, 26160, 319, 15938, 5717, 32, 7527, 26, 731, 30, 2910, 4236]}
{"line_number": 281, "line_type": "generated", "code": "\n   * @return minimal reduction factor\n   */\n  public double getMinReduction() {\n    return minReduction;\n  }\n\n  /** Get the maximal growth factor for stepsize control.", "entropy": 0.158935546875, "is_bug_line": false, "sus_score": 0.6425808668136597, "per_token_entropy": [0.6708984375, 0.50048828125, 0.39794921875, 0.0244598388671875, 0.0308685302734375, 0.06781005859375, 0.0300750732421875, 0.92529296875, 0.031646728515625, 0.0301513671875, 0.70556640625, 0.039459228515625, 0.0712890625, 0.0101776123046875, 0.039642333984375, 0.0156097412109375, 0.004638671875, 0.203369140625, 0.0029621124267578125, 0.037811279296875, 0.0005583763122558594, 0.0021228790283203125, 0.0079498291015625, 0.0010671615600585938, 0.045440673828125, 0.004985809326171875, 1.1240234375, 0.017242431640625, 0.74072265625, 0.002025604248046875, 0.005054473876953125, 0.0487060546875, 0.016815185546875, 0.00612640380859375, 0.001316070556640625, 0.0009350776672363281, 0.018524169921875], "tokens": [664, 319, 477, 601, 16645, 25160, 10365, 664, 569, 334, 562, 2064, 622, 2928, 35802, 346, 301, 284, 442, 1847, 35802, 45, 334, 320, 719, 1022, 1390, 322, 1769, 2977, 27934, 10365, 436, 3111, 891, 3498, 32]}
{"line_number": 827, "line_type": "original", "code": "", "entropy": 0.4130859375, "is_bug_line": false, "sus_score": 0.6424676775932312, "per_token_entropy": [0.4130859375], "tokens": [203]}
{"line_number": 827, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6424676775932312, "per_token_entropy": [], "tokens": []}
{"line_number": 860, "line_type": "original", "code": "", "entropy": 0.4130859375, "is_bug_line": false, "sus_score": 0.636078953742981, "per_token_entropy": [0.4130859375], "tokens": [203]}
{"line_number": 860, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.636078953742981, "per_token_entropy": [], "tokens": []}
{"line_number": 110, "line_type": "original", "code": "                                         final RungeKuttaStepInterpolator prototype,", "entropy": 1.990234375, "is_bug_line": false, "sus_score": 0.6351849436759949, "per_token_entropy": [12.609375, 3.103515625, 5.89453125, 2.872943878173828e-05, 0.0004031658172607422, 0.00014472007751464844, 1.9550323486328125e-05, 0.03179931640625, 0.0009508132934570312, 0.1318359375, 0.11273193359375], "tokens": [24885, 1158, 4489, 300, 61, 303, 1349, 3533, 37951, 21666, 30]}
{"line_number": 110, "line_type": "generated", "code": "\n\n    exp = -1.0 / getOrder();\n\n    // set the default values of the algorithm control parameters\n    setSafety(0.9);\n    setMinReduction(0.2);\n    setMaxGrowth(10.0);\n\n  }", "entropy": 0.0240325927734375, "is_bug_line": false, "sus_score": 0.6351849436759949, "per_token_entropy": [1.001953125, 0.07537841796875, 0.019561767578125, 0.00322723388671875, 0.00824737548828125, 0.0014801025390625, 3.3855438232421875e-05, 0.0005793571472167969, 0.003936767578125, 0.0014848709106445312, 0.0006451606750488281, 0.028717041015625, 0.006618499755859375, 0.002414703369140625, 0.0008296966552734375, 0.0002751350402832031, 0.003978729248046875, 0.0014190673828125, 0.0004725456237792969, 0.0008440017700195312, 0.0005850791931152344, 0.0003159046173095703, 0.0140228271484375, 0.003307342529296875, 0.0003886222839355469, 0.002658843994140625, 0.0012578964233398438, 0.00018215179443359375, 0.0002288818359375, 0.0003981590270996094, 0.0016851425170898438, 0.0005402565002441406, 0.0003082752227783203, 2.4557113647460938e-05, 0.0002701282501220703, 0.0010967254638671875, 0.00021195411682128906, 0.001964569091796875, 0.00018334388732910156, 0.0007996559143066406, 0.0001647472381591797, 2.8967857360839844e-05, 7.152557373046875e-07, -0.0, 7.915496826171875e-05, 0.0010461807250976562, 0.00041174888610839844, 0.0019378662109375, 0.0001938343048095703, 0.000362396240234375, 0.0526123046875, 0.0010595321655273438], "tokens": [446, 2910, 280, 429, 35, 32, 34, 517, 622, 2871, 473, 446, 434, 739, 322, 1244, 2078, 432, 322, 8218, 3498, 3377, 284, 739, 44798, 26, 34, 32, 43, 293, 284, 739, 2928, 35802, 26, 34, 32, 36, 293, 284, 739, 2708, 25537, 349, 26, 35, 34, 32, 34, 293, 719, 320]}
{"line_number": 3254, "line_type": "original", "code": "", "entropy": 0.4130859375, "is_bug_line": false, "sus_score": 0.633636474609375, "per_token_entropy": [0.4130859375], "tokens": [203]}
{"line_number": 3254, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.633636474609375, "per_token_entropy": [], "tokens": []}
