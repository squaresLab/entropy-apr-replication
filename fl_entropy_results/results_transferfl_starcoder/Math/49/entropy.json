{"line_number": 356, "line_type": "original", "code": "        checkVectorDimensions(v.length);", "entropy": 1.9443359375, "is_bug_line": false, "sus_score": 0.7571010589599609, "per_token_entropy": [3.3046875, 5.25390625, 2.5625, 0.004062652587890625, 0.00394439697265625, 4.11328125, 0.0290985107421875, 2.216796875, 0.017364501953125], "tokens": [351, 1505, 2863, 16485, 26, 104, 32, 1322, 293]}
{"line_number": 356, "line_type": "generated", "code": "\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public OpenMapRealVector mapAddToSelf(double d) {\n        Iterator iter = entries.iterator();\n        while (iter.hasNext()) {\n            iter.advance();\n            iter.setValue(iter", "entropy": 0.0848388671875, "is_bug_line": false, "sus_score": 0.7571010589599609, "per_token_entropy": [0.30517578125, 0.4052734375, 0.2291259765625, 0.0281829833984375, 0.46533203125, 0.0002467632293701172, 0.00057220458984375, 0.0024318695068359375, 0.0213775634765625, 0.345947265625, 0.0019483566284179688, 0.008544921875, 0.0308380126953125, 0.35791015625, 0.00514984130859375, 0.0007290840148925781, 0.004852294921875, 0.2734375, 0.78564453125, 0.0160980224609375, 0.00011515617370605469, 0.46044921875, 0.081787109375, 0.002117156982421875, 0.005863189697265625, 0.035980224609375, 0.1690673828125, 0.024322509765625, 0.0013227462768554688, 0.02032470703125, 0.00022971630096435547, 0.01412200927734375, 0.000682830810546875, 0.00537872314453125, 0.0050811767578125, 0.10345458984375, 0.0004124641418457031, 0.00015175342559814453, 0.0005016326904296875, 0.0008029937744140625, 0.0010404586791992188, 0.01137542724609375, 0.00189971923828125, 3.0875205993652344e-05, 0.0018091201782226562, 0.0010976791381835938, 0.00516510009765625, 0.06634521484375, 0.0007910728454589844, 0.07940673828125, 0.0038127899169921875, 0.0173492431640625], "tokens": [284, 320, 446, 1022, 3088, 18446, 111, 569, 284, 477, 1788, 284, 562, 3927, 1208, 6877, 2863, 1992, 29202, 8171, 26, 2627, 343, 27, 301, 291, 14743, 3850, 280, 8036, 32, 5162, 473, 291, 2218, 308, 1731, 32, 16421, 1157, 301, 324, 3850, 32, 22545, 473, 324, 3850, 32, 11535, 26, 1731]}
{"line_number": 212, "line_type": "original", "code": "     * Determine if this value is within epsilon of zero.", "entropy": 2.421875, "is_bug_line": false, "sus_score": 0.7547028064727783, "per_token_entropy": [5.28125, 0.265625, 9.828125, 1.3720703125, 2.619140625, 8.0625, 0.2283935546875, 0.46484375, 0.0419921875, 0.42822265625, 0.333251953125, 0.14111328125], "tokens": [262, 319, 22022, 415, 458, 786, 438, 4797, 23477, 432, 5934, 32]}
{"line_number": 212, "line_type": "generated", "code": "\n     * {@inheritDoc}\n     */\n    @Override\n        public RealVector subtract(RealVector v) {\n        checkVectorDimensions(v.getDimension());\n        if (v instanceof OpenMapRealVector) {\n            return subtract((OpenMapRealVector) v", "entropy": 0.0640869140625, "is_bug_line": false, "sus_score": 0.7547028064727783, "per_token_entropy": [0.12371826171875, 0.05126953125, 1.2587890625, 0.00263214111328125, 0.0012979507446289062, 0.042144775390625, 0.677734375, 0.03814697265625, 0.03662109375, 0.0007119178771972656, 0.52001953125, 0.01201629638671875, 0.1629638671875, 0.0224761962890625, 0.1947021484375, 0.00015032291412353516, 0.00893402099609375, 9.429454803466797e-05, 0.0009860992431640625, 0.0004887580871582031, 0.0085906982421875, 0.01654052734375, 0.0716552734375, 0.00021529197692871094, 3.1948089599609375e-05, 9.047985076904297e-05, 0.0001226663589477539, 0.00018775463104248047, 0.00013148784637451172, 0.00015795230865478516, 0.0003006458282470703, 0.01277923583984375, 0.035614013671875, 0.0016107559204101562, 0.00027179718017578125, 0.0015697479248046875, 0.0010633468627929688, 0.00012290477752685547, 1.6927719116210938e-05, 9.775161743164062e-06, 0.0004849433898925781, 0.0003561973571777344, 0.002574920654296875, 0.00968170166015625, 0.00603485107421875, 0.0004391670227050781, 3.1113624572753906e-05, 4.9591064453125e-05, 3.5762786865234375e-06, 8.344650268554688e-07, 0.00012969970703125, 0.004550933837890625], "tokens": [275, 319, 3088, 18446, 111, 275, 569, 284, 477, 1788, 291, 562, 11443, 2863, 27799, 26, 6877, 2863, 354, 27, 301, 291, 1505, 2863, 16485, 26, 104, 32, 371, 9883, 1035, 291, 415, 308, 104, 5113, 3927, 1208, 6877, 2863, 27, 301, 324, 442, 27799, 1162, 2961, 1208, 6877, 2863, 27, 354]}
{"line_number": 666, "line_type": "original", "code": "        } else if (entries.containsKey(index)) {", "entropy": 1.94140625, "is_bug_line": false, "sus_score": 0.7519482374191284, "per_token_entropy": [5.28515625, 0.3212890625, 7.22265625, 2.197265625, 0.5302734375, 2.166015625, 0.004119873046875, 0.0582275390625, 0.0296478271484375, 5.28515625, 0.09161376953125, 0.11029052734375], "tokens": [351, 320, 813, 415, 308, 9150, 32, 15943, 26, 1055, 490, 301]}
{"line_number": 666, "line_type": "generated", "code": "\n            }\n        }\n        return res;\n    }\n\n    /**\n     * Optimized method to subtract a scalar.\n     *\n     * @param d Value to subtract.\n     * @return a new vector containing the difference between {@code this}\n     * and {@", "entropy": 0.1790771484375, "is_bug_line": false, "sus_score": 0.7519482374191284, "per_token_entropy": [0.37939453125, 0.006519317626953125, 0.040924072265625, 0.0003120899200439453, 0.057281494140625, 0.017791748046875, 0.0005826950073242188, 0.0013685226440429688, 0.0211029052734375, 0.00022101402282714844, 0.109619140625, 0.00948333740234375, 0.4287109375, 2.7418136596679688e-05, 0.306640625, 0.00037789344787597656, 0.004497528076171875, 0.00823974609375, 0.059295654296875, 1.0498046875, 0.8876953125, 0.8603515625, 0.010528564453125, 0.0010595321655273438, 0.039398193359375, 3.445148468017578e-05, 0.00720977783203125, 0.0022792816162109375, 0.10528564453125, 0.41162109375, 0.0006108283996582031, 0.0472412109375, 0.412841796875, 0.0007524490356445312, 0.0004475116729736328, 0.0005331039428710938, 0.0016393661499023438, 0.7470703125, 0.51416015625, 0.131591796875, 0.31787109375, 0.1512451171875, 0.91357421875, 0.1702880859375, 0.1761474609375, 0.0012025833129882812, 0.00240325927734375, 0.0004546642303466797, 0.85986328125, 2.777576446533203e-05, 0.0185699462890625, 0.015106201171875], "tokens": [324, 320, 291, 320, 291, 442, 736, 45, 284, 320, 446, 1022, 275, 319, 22994, 1191, 1411, 372, 27799, 312, 13145, 32, 275, 319, 275, 319, 477, 753, 343, 3846, 372, 27799, 32, 275, 319, 477, 601, 312, 537, 4026, 6621, 322, 10563, 3733, 3088, 687, 458, 111, 275, 319, 461, 3088]}
{"line_number": 667, "line_type": "original", "code": "            entries.remove(index);", "entropy": 2.099609375, "is_bug_line": false, "sus_score": 0.7510140538215637, "per_token_entropy": [5.33984375, 2.515625, 0.005985260009765625, 0.21044921875, 0.07879638671875, 6.375, 0.171875], "tokens": [1468, 8036, 32, 2546, 26, 1055, 293]}
{"line_number": 667, "line_type": "generated", "code": "\n        }\n        return res;\n    }\n\n    /**\n     * Optimized method to subtract OpenMapRealVectors.\n     *\n     * @param v Vector to subtract from {@code this}.\n     * @return the difference of {@code this} and {@code v", "entropy": 0.07940673828125, "is_bug_line": false, "sus_score": 0.7510140538215637, "per_token_entropy": [0.1365966796875, 0.097412109375, 0.042205810546875, 0.0164031982421875, 0.0012416839599609375, 0.0029430389404296875, 0.03424072265625, 0.0004906654357910156, 0.10626220703125, 0.0110015869140625, 0.42333984375, 4.756450653076172e-05, 0.400634765625, 0.0004124641418457031, 0.00438690185546875, 0.007404327392578125, 0.059661865234375, 2.0390625, 0.003978729248046875, 0.00276947021484375, 0.08984375, 0.054840087890625, 0.006023406982421875, 0.00025153160095214844, 0.02459716796875, 8.308887481689453e-05, 0.003406524658203125, 0.0014324188232421875, 0.036163330078125, 0.04608154296875, 0.0006804466247558594, 0.002208709716796875, 0.0069580078125, 0.006237030029296875, 0.00012123584747314453, 0.0004277229309082031, 0.00785064697265625, 0.0031414031982421875, 0.0005311965942382812, 0.0012969970703125, 0.1143798828125, 0.31494140625, 0.004486083984375, 0.0019588470458984375, 0.0010194778442382812, 0.00039315223693847656, 0.00208282470703125, 0.00018274784088134766, 0.0017347335815429688, 0.00217437744140625, 0.0005884170532226562, 0.00145721435546875], "tokens": [291, 320, 291, 442, 736, 45, 284, 320, 446, 1022, 275, 319, 22994, 1191, 1411, 372, 27799, 3927, 1208, 6877, 27841, 32, 275, 319, 275, 319, 477, 753, 354, 4107, 372, 27799, 645, 3088, 687, 458, 4009, 275, 319, 477, 601, 322, 10563, 432, 3088, 687, 458, 111, 461, 3088, 687, 354]}
{"line_number": 357, "line_type": "original", "code": "        OpenMapRealVector res = new OpenMapRealVector(this);", "entropy": 0.7021484375, "is_bug_line": false, "sus_score": 0.7478256821632385, "per_token_entropy": [5.20703125, 2.576171875, 0.07196044921875, 0.0019855499267578125, 0.005031585693359375, 1.0751953125, 0.01090240478515625, 0.042816162109375, 0.00237274169921875, 0.0006847381591796875, 0.00012755393981933594, 0.0004267692565917969, 0.03094482421875, 1.408203125, 0.09869384765625], "tokens": [351, 3927, 1208, 6877, 2863, 736, 280, 537, 3927, 1208, 6877, 2863, 26, 578, 293]}
{"line_number": 357, "line_type": "generated", "code": "\n    /** {@inheritDoc} */\n    @Override\n    public OpenMapRealVector mapAdd(double d) {\n        OpenMapRealVector res = new OpenMapRealVector(this);\n        Iterator iter = res.entries.iterator();\n        while (iter.", "entropy": 0.1053466796875, "is_bug_line": false, "sus_score": 0.7478256821632385, "per_token_entropy": [0.6220703125, 0.2115478515625, 0.79248046875, 0.00029087066650390625, 0.0006775856018066406, 0.0033702850341796875, 0.0181121826171875, 0.39111328125, 0.0015048980712890625, 0.00934600830078125, 0.0216217041015625, 0.377197265625, 0.00605010986328125, 0.0006456375122070312, 0.0040283203125, 0.4150390625, 1.1376953125, 0.004547119140625, 0.6376953125, 0.1202392578125, 0.006153106689453125, 0.01861572265625, 0.033966064453125, 0.145263671875, 0.0014629364013671875, 0.0001533031463623047, 5.614757537841797e-05, 0.035919189453125, 0.0023212432861328125, 0.034515380859375, 0.0006103515625, 0.0001894235610961914, 2.682209014892578e-05, 9.28640365600586e-05, 0.0037479400634765625, 0.0716552734375, 0.01506805419921875, 0.01502227783203125, 0.1392822265625, 0.0170440673828125, 0.001171112060546875, 0.0380859375, 0.00013625621795654297, 0.0061187744140625, 0.0004029273986816406, 0.0098114013671875, 0.000751495361328125, 0.00492095947265625, 0.004398345947265625, 0.091796875, 0.0004658699035644531, 0.0001252889633178711], "tokens": [284, 1022, 3088, 18446, 111, 569, 284, 477, 1788, 284, 562, 3927, 1208, 6877, 2863, 1992, 1103, 26, 2627, 343, 27, 301, 291, 3927, 1208, 6877, 2863, 736, 280, 537, 3927, 1208, 6877, 2863, 26, 578, 293, 291, 14743, 3850, 280, 736, 32, 9150, 32, 5162, 473, 291, 2218, 308, 1731, 32]}
{"line_number": 399, "line_type": "original", "code": "            iter.advance();", "entropy": 3.703125, "is_bug_line": false, "sus_score": 0.7458337545394897, "per_token_entropy": [5.58984375, 9.1796875, 0.340087890625, 3.359375, 0.053741455078125], "tokens": [1468, 3850, 32, 22545, 473]}
{"line_number": 399, "line_type": "generated", "code": "\n                res += value * value;\n            }\n        }\n        return Math.sqrt(res);\n    }\n\n    /**\n     * Optimized method to compute dot product.\n     *\n     * @param v Vector to compute dot product with.\n     * @return the", "entropy": 0.06195068359375, "is_bug_line": false, "sus_score": 0.7458337545394897, "per_token_entropy": [0.07421875, 0.1328125, 0.0112152099609375, 0.0224151611328125, 0.00803375244140625, 0.0006861686706542969, 0.0018148422241210938, 0.02398681640625, 0.0007700920104980469, 0.005523681640625, 0.00037288665771484375, 0.09423828125, 0.024505615234375, 0.308837890625, 0.005695343017578125, 0.0009927749633789062, 0.000499725341796875, 0.0003304481506347656, 0.0007648468017578125, 0.019561767578125, 0.0015821456909179688, 0.1990966796875, 0.055633544921875, 0.4638671875, 6.318092346191406e-05, 0.673828125, 0.0006251335144042969, 0.005397796630859375, 0.02093505859375, 0.044769287109375, 0.5546875, 0.0184478759765625, 0.033416748046875, 0.010955810546875, 6.461143493652344e-05, 0.0775146484375, 0.00011551380157470703, 0.00527191162109375, 0.0015821456909179688, 0.00119781494140625, 0.035888671875, 0.0787353515625, 0.01544189453125, 0.063720703125, 0.0026493072509765625, 0.09649658203125, 0.005268096923828125, 0.0016527175903320312, 5.1856040954589844e-05, 0.0013790130615234375, 0.0028095245361328125, 0.009368896484375], "tokens": [400, 736, 1454, 786, 319, 786, 45, 324, 320, 291, 320, 291, 442, 4175, 32, 8663, 26, 575, 293, 284, 320, 446, 1022, 275, 319, 22994, 1191, 1411, 372, 7596, 8057, 4054, 32, 275, 319, 275, 319, 477, 753, 354, 4107, 372, 7596, 8057, 4054, 623, 32, 275, 319, 477, 601, 322]}
{"line_number": 355, "line_type": "original", "code": "    public OpenMapRealVector ebeDivide(double[] v) {", "entropy": 1.064453125, "is_bug_line": false, "sus_score": 0.7440914511680603, "per_token_entropy": [4.37109375, 4.9296875, 0.2259521484375, 0.006328582763671875, 0.00044918060302734375, 0.0014200210571289062, 5.640625, 0.0028820037841796875, 0.49658203125, 0.0078277587890625, 0.074951171875, 0.06146240234375, 0.00920867919921875, 0.00429534912109375, 0.1387939453125], "tokens": [264, 562, 3927, 1208, 6877, 2863, 484, 864, 38518, 26, 2627, 1178, 354, 27, 301]}
{"line_number": 355, "line_type": "generated", "code": "\n        res.setEntry(0, 1.0);", "entropy": 0.6728515625, "is_bug_line": false, "sus_score": 0.7440914511680603, "per_token_entropy": [0.2320556640625, 2.298828125, 0.045135498046875, 1.3349609375, 0.95166015625, 0.0166473388671875, 1.1865234375, 0.008697509765625, 0.84765625, 0.892578125, 0.8203125, 0.019927978515625, 0.094970703125], "tokens": [291, 736, 32, 470, 2711, 26, 34, 30, 225, 35, 32, 34, 293]}
{"line_number": 211, "line_type": "original", "code": "    /**", "entropy": 3.09375, "is_bug_line": false, "sus_score": 0.7438716888427734, "per_token_entropy": [6.078125, 0.1104736328125], "tokens": [264, 1022]}
{"line_number": 211, "line_type": "generated", "code": "\n     * {@inheritDoc}\n     *\n     * @since 2.1\n     */\n    @Override\n        public RealVector subtract(RealVector v) {\n        checkVectorDimensions(v.getDimension());\n        if (v instanceof OpenMapRealVector) {", "entropy": 0.166015625, "is_bug_line": false, "sus_score": 0.7438716888427734, "per_token_entropy": [1.591796875, 0.09478759765625, 1.0224609375, 0.012847900390625, 0.00131988525390625, 0.01727294921875, 0.783203125, 0.67236328125, 0.0152130126953125, 0.383056640625, 0.6728515625, 0.0019426345825195312, 0.2325439453125, 7.772445678710938e-05, 0.54541015625, 0.003963470458984375, 0.01535797119140625, 0.0283050537109375, 0.05859375, 0.0007348060607910156, 1.580078125, 0.018280029296875, 0.325439453125, 0.037628173828125, 0.337646484375, 0.00025844573974609375, 0.017669677734375, 7.617473602294922e-05, 0.0010614395141601562, 0.00044989585876464844, 0.00701904296875, 0.017913818359375, 0.0772705078125, 0.00024437904357910156, 3.7670135498046875e-05, 0.0001150369644165039, 0.00016164779663085938, 0.0004858970642089844, 0.00010442733764648438, 0.00012636184692382812, 0.0002593994140625, 0.0146331787109375, 0.03509521484375, 0.0014696121215820312, 0.00028967857360839844, 0.0014448165893554688, 0.0009751319885253906, 0.00017142295837402344, 2.1219253540039062e-05, 6.198883056640625e-06, 0.0005822181701660156, 0.0002658367156982422], "tokens": [275, 319, 3088, 18446, 111, 275, 319, 275, 319, 477, 8119, 225, 36, 32, 35, 275, 569, 284, 477, 1788, 291, 562, 11443, 2863, 27799, 26, 6877, 2863, 354, 27, 301, 291, 1505, 2863, 16485, 26, 104, 32, 371, 9883, 1035, 291, 415, 308, 104, 5113, 3927, 1208, 6877, 2863, 27, 301]}
{"line_number": 664, "line_type": "original", "code": "        if (!isDefaultValue(value)) {", "entropy": 1.90234375, "is_bug_line": false, "sus_score": 0.7416194081306458, "per_token_entropy": [4.5859375, 2.966796875, 1.7255859375, 4.26953125, 1.0185546875, 0.0170440673828125, 2.25, 0.1610107421875, 0.1279296875], "tokens": [351, 415, 1429, 297, 20035, 26, 853, 490, 301]}
{"line_number": 664, "line_type": "generated", "code": "\n            } else {\n                res.setEntry(key, -iter.value());\n            }\n        }\n        return res;\n    }\n\n    /**\n     * Optimized method to subtract a scalar.\n     *\n     * @param d Scalar to subtract.\n     *", "entropy": 0.164306640625, "is_bug_line": false, "sus_score": 0.7416194081306458, "per_token_entropy": [0.3779296875, 0.58544921875, 0.5341796875, 0.10174560546875, 0.038177490234375, 0.293701171875, 0.000568389892578125, 0.042144775390625, 0.0020809173583984375, 0.0016889572143554688, 0.0021572113037109375, 0.0008616447448730469, 0.1390380859375, 0.11004638671875, 0.00030040740966796875, 0.0026378631591796875, 0.000789642333984375, 0.1737060546875, 0.0015039443969726562, 0.052001953125, 0.000637054443359375, 0.07000732421875, 0.0171661376953125, 0.0008521080017089844, 0.00159454345703125, 0.0745849609375, 0.0005588531494140625, 0.129150390625, 0.01042938232421875, 0.462158203125, 5.53131103515625e-05, 0.3115234375, 0.0005145072937011719, 0.0054473876953125, 0.009429931640625, 0.05755615234375, 1.2197265625, 1.080078125, 0.8505859375, 0.01172637939453125, 0.0010862350463867188, 0.04364013671875, 7.557868957519531e-05, 0.00696563720703125, 0.0023345947265625, 0.1031494140625, 1.181640625, 0.002056121826171875, 0.0246429443359375, 0.40185546875, 0.0016222000122070312, 0.00040841102600097656], "tokens": [324, 320, 813, 301, 400, 736, 32, 470, 2711, 26, 678, 30, 429, 1731, 32, 853, 1035, 324, 320, 291, 320, 291, 442, 736, 45, 284, 320, 446, 1022, 275, 319, 22994, 1191, 1411, 372, 27799, 312, 13145, 32, 275, 319, 275, 319, 477, 753, 343, 19724, 372, 27799, 32, 275, 319]}
{"line_number": 140, "line_type": "original", "code": "                entries.put(key, value);", "entropy": 1.80859375, "is_bug_line": false, "sus_score": 0.7357733845710754, "per_token_entropy": [9.8515625, 4.3828125, 0.63037109375, 0.1806640625, 0.4404296875, 0.42236328125, 0.00872802734375, 0.3544921875, 0.01519775390625], "tokens": [2071, 8036, 32, 524, 26, 678, 30, 786, 293]}
{"line_number": 140, "line_type": "generated", "code": "\n    public OpenMapRealVector(RealVector v) {\n        this(v, DEFAULT_ZERO_TOLERANCE);\n    }\n\n    /**\n     * Generic copy constructor.\n     *\n     * @param v Instance to copy from.\n     * @param epsilon", "entropy": 0.0880126953125, "is_bug_line": false, "sus_score": 0.7357733845710754, "per_token_entropy": [1.2568359375, 0.291259765625, 0.03070068359375, 0.0013532638549804688, 0.0008587837219238281, 1.6570091247558594e-05, 0.006145477294921875, 0.255859375, 0.0003352165222167969, 0.00275421142578125, 0.01690673828125, 0.025634765625, 0.11700439453125, 0.81396484375, 0.11865234375, 0.024810791015625, 0.436279296875, 0.289306640625, 8.809566497802734e-05, 0.0007624626159667969, 2.4080276489257812e-05, 3.0517578125e-05, 5.9604644775390625e-06, 2.2649765014648438e-06, 0.0051422119140625, 0.01629638671875, 0.0002446174621582031, 0.1688232421875, 0.005077362060546875, 0.01097869873046875, 4.565715789794922e-05, 0.153564453125, 0.0013761520385742188, 0.0008950233459472656, 0.280517578125, 0.007595062255859375, 2.6702880859375e-05, 0.01041412353515625, 0.00041174888610839844, 0.0018291473388671875, 4.2319297790527344e-05, 0.002399444580078125, 0.051055908203125, 0.00011920928955078125, 0.0007958412170410156, 0.002613067626953125, 0.00640106201171875, 0.0011396408081054688, 0.043731689453125, 0.0004553794860839844, 0.00033473968505859375, 0.11669921875], "tokens": [284, 562, 3927, 1208, 6877, 2863, 26, 6877, 2863, 354, 27, 301, 291, 458, 26, 104, 30, 4040, 81, 13977, 81, 1407, 10062, 6307, 293, 284, 320, 446, 1022, 275, 319, 12671, 1933, 4374, 32, 275, 319, 275, 319, 477, 753, 354, 11617, 372, 1933, 645, 32, 275, 319, 477, 753, 23477]}
{"line_number": 665, "line_type": "original", "code": "            entries.put(index, value);", "entropy": 2.330078125, "is_bug_line": false, "sus_score": 0.7295169830322266, "per_token_entropy": [4.7734375, 6.9296875, 0.001964569091796875, 0.275146484375, 0.0188446044921875, 6.53125, 0.0164642333984375, 2.29296875, 0.12939453125], "tokens": [1468, 8036, 32, 524, 26, 1055, 30, 786, 293]}
{"line_number": 665, "line_type": "generated", "code": "\n            }\n        }\n        return res;\n    }\n\n    /**\n     * Optimized method to subtract {@code v} from {@code this}.\n     *\n     * @param v Vector to subtract from {@code this}.\n     * @return a reference to this.", "entropy": 0.1365966796875, "is_bug_line": false, "sus_score": 0.7295169830322266, "per_token_entropy": [0.164306640625, 0.0012226104736328125, 0.00753021240234375, 0.0002796649932861328, 0.043212890625, 0.01058197021484375, 0.0006232261657714844, 0.0012331008911132812, 0.0113525390625, 0.00023055076599121094, 0.0894775390625, 0.00856781005859375, 0.411865234375, 2.968311309814453e-05, 0.2939453125, 0.0003292560577392578, 0.0042572021484375, 0.00762939453125, 0.05047607421875, 2.35546875, 0.260009765625, 0.451904296875, 0.154052734375, 0.1109619140625, 0.1597900390625, 0.0008106231689453125, 0.00363922119140625, 0.0772705078125, 0.0057525634765625, 0.00011801719665527344, 0.10870361328125, 6.949901580810547e-05, 0.0114593505859375, 0.0017299652099609375, 0.0310821533203125, 0.6162109375, 0.0008683204650878906, 0.037994384765625, 0.552734375, 0.0108795166015625, 0.00010836124420166016, 0.0004425048828125, 0.00980377197265625, 0.0017900466918945312, 0.0251617431640625, 0.0016946792602539062, 0.03436279296875, 0.373291015625, 0.038330078125, 0.0018377304077148438, 0.305908203125, 0.248779296875], "tokens": [324, 320, 291, 320, 291, 442, 736, 45, 284, 320, 446, 1022, 275, 319, 22994, 1191, 1411, 372, 27799, 3088, 687, 354, 111, 645, 3088, 687, 458, 4009, 275, 319, 275, 319, 477, 753, 354, 4107, 372, 27799, 645, 3088, 687, 458, 4009, 275, 319, 477, 601, 312, 4121, 372, 458, 32]}
{"line_number": 506, "line_type": "original", "code": "                max +=  FastMath.abs(delta);", "entropy": 3.2109375, "is_bug_line": false, "sus_score": 0.7278577089309692, "per_token_entropy": [5.78515625, 4.625, 9.0, 3.87890625, 6.12109375, 0.00016176700592041016, 0.0005936622619628906, 0.003009796142578125, 0.0064544677734375, 5.87109375, 0.0134429931640625], "tokens": [2071, 1769, 1454, 225, 15938, 5717, 32, 3596, 26, 6558, 293]}
{"line_number": 506, "line_type": "generated", "code": "\n                }\n            }\n        }\n        return max;\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public double getLInfDistance(RealVector v) {\n        checkVectorDimensions(v.getDimension());\n        if (v instanceof OpenMapReal", "entropy": 0.0170745849609375, "is_bug_line": false, "sus_score": 0.7278577089309692, "per_token_entropy": [0.400390625, 0.0017023086547851562, 0.0290985107421875, 0.0001169443130493164, 0.00566864013671875, 0.0001233816146850586, 0.02032470703125, 0.001659393310546875, 0.0012884140014648438, 0.00021517276763916016, 0.00887298583984375, 0.00015842914581298828, 0.040771484375, 0.01019287109375, 0.2327880859375, 0.00012922286987304688, 0.0006079673767089844, 0.0008254051208496094, 0.0095977783203125, 0.017608642578125, 0.00014579296112060547, 0.003124237060546875, 0.003108978271484375, 0.00881195068359375, 0.0027923583984375, 0.0133819580078125, 0.0013637542724609375, 0.0004742145538330078, 0.0001367330551147461, 0.0209197998046875, 4.601478576660156e-05, 0.0011768341064453125, 0.000270843505859375, 0.001003265380859375, 0.005764007568359375, 0.02105712890625, 0.00026726722717285156, 7.11679458618164e-05, 3.719329833984375e-05, 0.00010991096496582031, 1.1920928955078125e-05, 6.23464584350586e-05, 2.682209014892578e-05, 0.0004870891571044922, 0.004932403564453125, 0.01053619384765625, 0.0023651123046875, 0.00040149688720703125, 0.0011892318725585938, 0.0007786750793457031, 0.00035858154296875, 0.0005984306335449219], "tokens": [400, 320, 324, 320, 291, 320, 291, 442, 1769, 45, 284, 320, 446, 1022, 3088, 18446, 111, 569, 284, 477, 1788, 284, 562, 2064, 622, 62, 7559, 8457, 26, 6877, 2863, 354, 27, 301, 291, 1505, 2863, 16485, 26, 104, 32, 371, 9883, 1035, 291, 415, 308, 104, 5113, 3927, 1208, 6877]}
{"line_number": 213, "line_type": "original", "code": "     *", "entropy": 2.5234375, "is_bug_line": false, "sus_score": 0.7162764668464661, "per_token_entropy": [5.00390625, 0.04156494140625], "tokens": [262, 319]}
{"line_number": 213, "line_type": "generated", "code": "\n     * It copies the larger vector, then iterates over the smaller.\n     *\n     * @param v Vector to append.\n     * @return the sum of {@code this} and {@code v}.\n     * @throws org.apache.commons.", "entropy": 0.09796142578125, "is_bug_line": false, "sus_score": 0.7162764668464661, "per_token_entropy": [0.146240234375, 0.004962921142578125, 0.8798828125, 0.432373046875, 0.1336669921875, 1.0390625, 0.011810302734375, 0.03961181640625, 0.0184173583984375, 0.09033203125, 0.0002880096435546875, 0.0039520263671875, 0.005313873291015625, 0.006977081298828125, 0.056121826171875, 0.1727294921875, 0.0011663436889648438, 0.12127685546875, 7.11679458618164e-05, 0.007411956787109375, 0.00640106201171875, 0.01074981689453125, 0.0440673828125, 0.00206756591796875, 0.4755859375, 0.057403564453125, 0.037994384765625, 0.0032138824462890625, 0.0022125244140625, 0.021759033203125, 0.79248046875, 0.34912109375, 0.0012331008911132812, 0.01273345947265625, 0.0002560615539550781, 0.001461029052734375, 0.0035839080810546875, 0.0082550048828125, 0.001865386962890625, 0.000301361083984375, 0.0011548995971679688, 0.0089263916015625, 0.021759033203125, 0.023651123046875, 0.0010967254638671875, 0.0112457275390625, 0.021209716796875, 9.775161743164062e-06, 3.159046173095703e-05, 1.3113021850585938e-06, 0.0001195669174194336, 2.384185791015625e-07], "tokens": [275, 319, 2030, 8672, 322, 14324, 4026, 30, 1615, 3850, 1196, 2288, 322, 14763, 32, 275, 319, 275, 319, 477, 753, 354, 4107, 372, 5489, 32, 275, 319, 477, 601, 322, 3632, 432, 3088, 687, 458, 111, 461, 3088, 687, 354, 4009, 275, 319, 477, 5117, 1086, 32, 2104, 32, 8369, 32]}
{"line_number": 77, "line_type": "original", "code": "        this.epsilon = epsilon;", "entropy": 1.78125, "is_bug_line": false, "sus_score": 0.7110418081283569, "per_token_entropy": [3.68359375, 2.90234375, 2.490234375, 2.78125, 0.00952911376953125, 0.5234375, 0.07537841796875], "tokens": [351, 458, 32, 20094, 280, 23477, 45]}
{"line_number": 77, "line_type": "generated", "code": "    /**\n     * Create from an array, specifying zero tolerance.\n     * Only non-zero entries will be stored.\n     *\n     * @param values Set of values to create from.\n     * @param epsilon Tolerance below which a value is considered zero", "entropy": 0.08050537109375, "is_bug_line": false, "sus_score": 0.7110418081283569, "per_token_entropy": [1.861328125, 0.202392578125, 0.093017578125, 0.00063323974609375, 0.062408447265625, 0.024169921875, 0.059173583984375, 0.003894805908203125, 0.50439453125, 0.11114501953125, 0.51953125, 0.044952392578125, 0.07623291015625, 0.056793212890625, 0.0008778572082519531, 0.09906005859375, 0.005680084228515625, 0.0002605915069580078, 0.00027489662170410156, 0.00165557861328125, 0.00621795654296875, 0.00022685527801513672, 0.0008802413940429688, 0.004730224609375, 0.0531005859375, 0.00145721435546875, 0.1519775390625, 2.9087066650390625e-05, 0.0038928985595703125, 0.00010609626770019531, 0.004955291748046875, 0.0682373046875, 0.00024390220642089844, 0.0024166107177734375, 0.0009860992431640625, 0.00618743896484375, 0.0024814605712890625, 0.00209808349609375, 0.01284027099609375, 0.01230621337890625, 0.00040531158447265625, 0.00028824806213378906, 0.0128631591796875, 0.02899169921875, 1.4185905456542969e-05, 0.0289764404296875, 0.0007638931274414062, 0.0094757080078125, 0.0150604248046875, 0.0210723876953125, 0.00243377685546875, 0.004100799560546875], "tokens": [264, 1022, 275, 319, 2648, 645, 600, 1417, 30, 17237, 5934, 26434, 32, 275, 319, 9287, 2979, 31, 6158, 8036, 1098, 526, 7107, 32, 275, 319, 275, 319, 477, 753, 2078, 1756, 432, 2078, 372, 1487, 645, 32, 275, 319, 477, 753, 23477, 394, 14135, 4794, 1510, 312, 786, 438, 11870, 5934]}
{"line_number": 572, "line_type": "original", "code": "", "entropy": 3.994140625, "is_bug_line": false, "sus_score": 0.698177695274353, "per_token_entropy": [3.994140625], "tokens": [203]}
{"line_number": 572, "line_type": "generated", "code": "\n    /** {@inheritDoc} */\n    @Override\n    public OpenMapRealVector mapAddToSelf(double d) {\n        Iterator iter = entries.iterator();\n        while (iter.hasNext()) {\n            iter.advance();\n            iter.setValue(iter.value", "entropy": 0.036041259765625, "is_bug_line": false, "sus_score": 0.698177695274353, "per_token_entropy": [0.118896484375, 0.019012451171875, 0.2939453125, 0.00010967254638671875, 0.0002830028533935547, 0.0027484893798828125, 0.006969451904296875, 0.0849609375, 0.0003514289855957031, 0.00341796875, 0.0105133056640625, 0.058837890625, 0.002391815185546875, 0.0003707408905029297, 0.0001628398895263672, 0.01012420654296875, 0.261962890625, 0.00021314620971679688, 5.221366882324219e-05, 0.042083740234375, 0.022003173828125, 0.00022983551025390625, 0.00749969482421875, 0.0328369140625, 0.36767578125, 0.09088134765625, 0.0010175704956054688, 0.0477294921875, 0.0004372596740722656, 0.19873046875, 0.001338958740234375, 0.0029354095458984375, 0.003925323486328125, 0.002384185791015625, 0.00024187564849853516, 4.3272972106933594e-05, 0.0003592967987060547, 0.0008597373962402344, 0.0003228187561035156, 0.005458831787109375, 0.004787445068359375, 3.9577484130859375e-05, 0.00203704833984375, 0.00028824806213378906, 0.0019893646240234375, 0.074951171875, 0.0004756450653076172, 0.04443359375, 0.00484466552734375, 0.034393310546875, 3.0159950256347656e-05, 0.0018825531005859375], "tokens": [284, 1022, 3088, 18446, 111, 569, 284, 477, 1788, 284, 562, 3927, 1208, 6877, 2863, 1992, 29202, 8171, 26, 2627, 343, 27, 301, 291, 14743, 3850, 280, 8036, 32, 5162, 473, 291, 2218, 308, 1731, 32, 16421, 1157, 301, 324, 3850, 32, 22545, 473, 324, 3850, 32, 11535, 26, 1731, 32, 853]}
{"line_number": 220, "line_type": "original", "code": "        return FastMath.abs(value) < epsilon;", "entropy": 2.9140625, "is_bug_line": false, "sus_score": 0.6969267725944519, "per_token_entropy": [3.564453125, 9.40625, 13.65625, 0.10137939453125, 0.0010128021240234375, 2.224609375, 0.050018310546875, 3.068359375, 0.2020263671875, 1.939453125, 0.5322265625, 0.2220458984375], "tokens": [351, 442, 15938, 5717, 32, 3596, 26, 853, 27, 333, 23477, 45]}
{"line_number": 220, "line_type": "generated", "code": "\n        }\n        return res;\n    }\n\n    /**\n     * Optimized method to append a RealVector.\n     * @param v vector to append\n     * @return The result of appending {@code v} to self\n     */\n    public OpenMapRealVector", "entropy": 0.11358642578125, "is_bug_line": false, "sus_score": 0.6969267725944519, "per_token_entropy": [0.63525390625, 0.003070831298828125, 0.051300048828125, 0.053924560546875, 0.01059722900390625, 0.005279541015625, 0.02679443359375, 0.001361846923828125, 0.29443359375, 0.07012939453125, 0.371826171875, 0.00010526180267333984, 0.962890625, 0.00270843505859375, 0.0178375244140625, 0.02044677734375, 0.97265625, 0.06597900390625, 1.5234375, 0.0108184814453125, 0.172119140625, 0.036895751953125, 0.0011196136474609375, 0.248779296875, 0.002685546875, 0.003894805908203125, 0.07379150390625, 0.0008282661437988281, 0.0029010772705078125, 0.01171112060546875, 0.0017938613891601562, 0.0005736351013183594, 0.004146575927734375, 0.024627685546875, 0.002468109130859375, 0.00023889541625976562, 0.0010690689086914062, 2.3603439331054688e-05, 0.0056610107421875, 0.0002677440643310547, 0.001361846923828125, 0.00046133995056152344, 0.00121307373046875, 0.0109100341796875, 0.0218505859375, 0.054290771484375, 0.0091400146484375, 0.06658935546875, 0.0445556640625, 0.00016891956329345703, 7.510185241699219e-05, 2.09808349609375e-05], "tokens": [291, 320, 291, 442, 736, 45, 284, 320, 446, 1022, 275, 319, 22994, 1191, 1411, 372, 5489, 312, 11443, 2863, 32, 275, 319, 477, 753, 354, 4026, 372, 5489, 275, 319, 477, 601, 886, 1056, 432, 1123, 4013, 3088, 687, 354, 111, 372, 630, 275, 569, 284, 562, 3927, 1208, 6877, 2863]}
{"line_number": 504, "line_type": "original", "code": "            if (!entries.containsKey(key)) {", "entropy": 1.4541015625, "is_bug_line": false, "sus_score": 0.6962339282035828, "per_token_entropy": [7.29296875, 1.15234375, 4.9140625, 0.8955078125, 0.004467010498046875, 0.064208984375, 0.0021610260009765625, 0.01064300537109375, 0.1226806640625, 0.08087158203125], "tokens": [1468, 415, 1429, 9150, 32, 15943, 26, 678, 490, 301]}
{"line_number": 504, "line_type": "generated", "code": "\n                double delta = FastMath.abs(iter.value());\n                if (delta > max) {\n                    max = delta;\n                }\n            }\n        }\n        return max;\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public double getL", "entropy": 0.0191802978515625, "is_bug_line": false, "sus_score": 0.6962339282035828, "per_token_entropy": [0.1839599609375, 0.09869384765625, 0.0166168212890625, 0.0039825439453125, 0.04107666015625, 0.00022113323211669922, 4.7206878662109375e-05, 0.0006842613220214844, 0.0014801025390625, 0.033599853515625, 0.0002830028533935547, 0.0012540817260742188, 0.015167236328125, 0.0244598388671875, 0.0477294921875, 0.0026607513427734375, 0.0246429443359375, 0.004283905029296875, 0.0037364959716796875, 0.004150390625, 0.0035305023193359375, 0.01482391357421875, 0.0014629364013671875, 0.0008606910705566406, 0.03143310546875, 0.001277923583984375, 0.0121002197265625, 0.00015532970428466797, 0.12646484375, 0.0004949569702148438, 0.0146942138671875, 0.0014171600341796875, 0.013214111328125, 0.002353668212890625, 0.0020275115966796875, 0.0002598762512207031, 0.00742340087890625, 0.00014483928680419922, 0.03448486328125, 0.00844573974609375, 0.164306640625, 0.00012791156768798828, 0.00047087669372558594, 0.0006656646728515625, 0.004261016845703125, 0.013092041015625, 9.870529174804688e-05, 0.00103759765625, 0.0023555755615234375, 0.00885009765625, 0.0025081634521484375, 0.013275146484375], "tokens": [400, 2064, 7715, 280, 15938, 5717, 32, 3596, 26, 1731, 32, 853, 1035, 400, 415, 308, 6558, 848, 1769, 27, 301, 528, 1769, 280, 7715, 45, 400, 320, 324, 320, 291, 320, 291, 442, 1769, 45, 284, 320, 446, 1022, 3088, 18446, 111, 569, 284, 477, 1788, 284, 562, 2064, 622, 62]}
{"line_number": 410, "line_type": "original", "code": "    public double[] getData() {", "entropy": 3.00390625, "is_bug_line": false, "sus_score": 0.694366991519928, "per_token_entropy": [6.93359375, 7.78515625, 0.1134033203125, 4.88671875, 0.90185546875, 0.09716796875, 0.315185546875], "tokens": [264, 562, 2064, 1178, 22938, 346, 301]}
{"line_number": 410, "line_type": "generated", "code": "\n            return getDistance((OpenMapRealVector) v);\n        }\n        return super.getDistance(v);\n    }\n\n    /**\n     * Returns the entry set.\n     *\n     * @return Entry set.\n     */\n    public NavigableMap<Integer", "entropy": 0.281494140625, "is_bug_line": false, "sus_score": 0.694366991519928, "per_token_entropy": [0.05694580078125, 0.18505859375, 0.06951904296875, 0.00228118896484375, 0.0112762451171875, 0.0005064010620117188, 0.00011777877807617188, 6.902217864990234e-05, 0.0010509490966796875, 0.0014009475708007812, 0.048583984375, 0.0013294219970703125, 0.131591796875, 0.00079345703125, 1.07421875, 0.89794921875, 1.3271484375, 0.0002949237823486328, 0.002410888671875, 0.00029778480529785156, 0.002857208251953125, 0.00032806396484375, 0.0004868507385253906, 0.0164337158203125, 0.0008668899536132812, 0.1337890625, 0.03228759765625, 0.82861328125, 0.00017178058624267578, 2.048828125, 0.50537109375, 0.93505859375, 1.048828125, 0.39501953125, 0.267578125, 0.005523681640625, 0.30810546875, 0.0008764266967773438, 0.0171661376953125, 0.000690460205078125, 1.7939453125, 0.039825439453125, 0.11956787109375, 0.00836944580078125, 0.0277557373046875, 0.005764007568359375, 0.4091796875, 1.49609375, 0.00013875961303710938, 0.344970703125, 0.01983642578125, 0.003505706787109375], "tokens": [324, 442, 622, 8457, 1162, 2961, 1208, 6877, 2863, 27, 354, 293, 291, 320, 291, 442, 2599, 32, 371, 8457, 26, 104, 293, 284, 320, 446, 1022, 275, 319, 3759, 322, 3414, 739, 32, 275, 319, 275, 319, 477, 601, 13925, 739, 32, 275, 569, 284, 562, 20575, 444, 1208, 46, 3061]}
{"line_number": 273, "line_type": "original", "code": "        return res;", "entropy": 1.9931640625, "is_bug_line": false, "sus_score": 0.6848355531692505, "per_token_entropy": [1.6484375, 2.2578125, 3.99609375, 0.071044921875], "tokens": [351, 442, 736, 45]}
{"line_number": 273, "line_type": "generated", "code": "\n        return dotProduct(v);\n    }\n\n    /**\n     * Optimized method to compute the dot product with a RealVector.\n     * It iterates over the smallest of the two.\n     *\n     * @param v Vector to compute the dot product with", "entropy": 0.2322998046875, "is_bug_line": false, "sus_score": 0.6848355531692505, "per_token_entropy": [0.5234375, 1.630859375, 0.994140625, 0.051910400390625, 1.1474609375, 1.5751953125, 0.490966796875, 0.05963134765625, 0.0011777877807617188, 0.211181640625, 0.03961181640625, 0.236572265625, 0.00012099742889404297, 0.587890625, 0.0027751922607421875, 0.00841522216796875, 0.01207733154296875, 0.1624755859375, 0.019439697265625, 0.1058349609375, 0.0021648406982421875, 0.07965087890625, 0.8310546875, 1.2998046875, 0.03546142578125, 0.06134033203125, 0.019683837890625, 0.0002884864807128906, 0.30078125, 0.1712646484375, 0.00014483928680419922, 0.002056121826171875, 0.007625579833984375, 0.07208251953125, 0.007904052734375, 0.00843048095703125, 0.0015850067138671875, 0.12078857421875, 0.01209259033203125, 0.0003745555877685547, 0.0836181640625, 0.00011134147644042969, 0.003993988037109375, 0.0013370513916015625, 0.0017404556274414062, 1.068359375, 0.0019521713256835938, 0.00588226318359375, 0.00839996337890625, 0.0028133392333984375, 0.0007891654968261719, 0.0022449493408203125], "tokens": [291, 442, 8057, 3409, 26, 104, 293, 284, 320, 446, 1022, 275, 319, 22994, 1191, 1411, 372, 7596, 322, 8057, 4054, 623, 312, 11443, 2863, 32, 275, 319, 2030, 3850, 1196, 2288, 322, 29044, 432, 322, 3134, 32, 275, 319, 275, 319, 477, 753, 354, 4107, 372, 7596, 322, 8057, 4054, 623]}
{"line_number": 385, "line_type": "original", "code": "            iter.advance();", "entropy": 1.748046875, "is_bug_line": false, "sus_score": 0.6808231472969055, "per_token_entropy": [5.6328125, 2.8671875, 0.1273193359375, 0.08050537109375, 0.03692626953125], "tokens": [1468, 3850, 32, 22545, 473]}
{"line_number": 385, "line_type": "generated", "code": "\n        double sum = 0;\n        while (iter.hasNext()) {\n            iter.advance();\n            double delta = iter.value() - v.getEntry(iter.key());\n            sum += delta * delta;\n        }\n        return Math.sqrt(", "entropy": 0.129150390625, "is_bug_line": false, "sus_score": 0.6808231472969055, "per_token_entropy": [0.211669921875, 0.76904296875, 0.9033203125, 0.06182861328125, 0.0218048095703125, 0.0009670257568359375, 0.47412109375, 0.066162109375, 0.140625, 0.0063629150390625, 0.00257110595703125, 0.0004892349243164062, 0.0035495758056640625, 0.00978851318359375, 0.00919342041015625, 0.1036376953125, 0.0504150390625, 0.00016486644744873047, 0.0021572113037109375, 0.0012149810791015625, 0.1063232421875, 1.18359375, 1.01953125, 0.006710052490234375, 0.73388671875, 0.00024700164794921875, 0.006252288818359375, 0.006313323974609375, 0.00272369384765625, 0.00925445556640625, 0.0005183219909667969, 0.03387451171875, 0.0014743804931640625, 0.0017747879028320312, 0.0019359588623046875, 0.0011692047119140625, 0.004329681396484375, 0.06256103515625, 0.0137939453125, 0.0035839080810546875, 0.033233642578125, 0.005584716796875, 0.0004601478576660156, 0.0011358261108398438, 0.0296630859375, 0.0006914138793945312, 0.0931396484375, 0.0282135009765625, 0.480712890625, 0.0045623779296875, 0.0015869140625, 0.0003714561462402344], "tokens": [291, 2064, 3632, 280, 225, 34, 45, 291, 2218, 308, 1731, 32, 16421, 1157, 301, 324, 3850, 32, 22545, 473, 324, 2064, 7715, 280, 3850, 32, 853, 346, 429, 354, 32, 48895, 26, 1731, 32, 678, 1035, 324, 3632, 1454, 7715, 319, 7715, 45, 291, 320, 291, 442, 4175, 32, 8663, 26]}
{"line_number": 518, "line_type": "original", "code": "        }", "entropy": 2.59375, "is_bug_line": false, "sus_score": 0.6776445508003235, "per_token_entropy": [3.369140625, 1.818359375], "tokens": [351, 320]}
{"line_number": 518, "line_type": "generated", "code": "\n            return getLInfDistance((OpenMapRealVector) v);\n        }\n        return getLInfDistance(v.getData());\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public double getLInfDistance(double[] v) {\n       ", "entropy": 0.039581298828125, "is_bug_line": false, "sus_score": 0.6776445508003235, "per_token_entropy": [0.1661376953125, 0.051513671875, 0.057403564453125, 0.00330352783203125, 0.018463134765625, 0.00030994415283203125, 0.016021728515625, 0.00037217140197753906, 0.0003325939178466797, 0.0001844167709350586, 3.230571746826172e-05, 0.0005307197570800781, 0.00782012939453125, 0.001979827880859375, 0.32080078125, 0.0299072265625, 0.432861328125, 0.381103515625, 0.1494140625, 0.0024738311767578125, 0.00753021240234375, 0.0002579689025878906, 0.004512786865234375, 0.002460479736328125, 0.0009813308715820312, 0.0139617919921875, 0.12109375, 0.036407470703125, 0.0002570152282714844, 0.0294036865234375, 0.005535125732421875, 0.10211181640625, 4.029273986816406e-05, 0.00026702880859375, 0.0006394386291503906, 0.00962066650390625, 0.026031494140625, 9.357929229736328e-05, 0.0033416748046875, 0.0009002685546875, 0.018035888671875, 0.0015125274658203125, 0.001956939697265625, 0.0001310110092163086, 0.00035262107849121094, 7.843971252441406e-05, 0.00328826904296875, 0.002685546875, 0.0008187294006347656, 0.0004229545593261719, 0.004558563232421875, 0.01824951171875], "tokens": [324, 442, 622, 62, 7559, 8457, 1162, 2961, 1208, 6877, 2863, 27, 354, 293, 291, 320, 291, 442, 622, 62, 7559, 8457, 26, 104, 32, 11576, 1035, 284, 320, 446, 1022, 3088, 18446, 111, 569, 284, 477, 1788, 284, 562, 2064, 622, 62, 7559, 8457, 26, 2627, 1178, 354, 27, 301, 291]}
