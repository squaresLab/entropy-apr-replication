{"line_number": 267, "line_type": "original", "code": "     * @return occurrence time of the event triggered in the current", "entropy": 2.08984375, "is_bug_line": false, "sus_score": 0.6397389769554138, "per_token_entropy": [5.36328125, 1.658203125, 0.912109375, 3.267578125, 13.0078125, 0.1209716796875, 0.04833984375, 0.050750732421875, 0.95166015625, 1.2470703125, 0.1690673828125, 0.0430908203125, 0.3271484375], "tokens": [262, 319, 477, 601, 35361, 1133, 432, 322, 1692, 16791, 328, 322, 1550]}
{"line_number": 267, "line_type": "generated", "code": "\n        throws EventException {\n\n        if (nextAction == EventHandler.RESET_STATE) {\n            // the event handler requests to reset the state\n            handler.resetState(t, y);\n            return true;\n        } else {\n            return false;\n        }", "entropy": 0.292724609375, "is_bug_line": false, "sus_score": 0.6397389769554138, "per_token_entropy": [0.283447265625, 0.63232421875, 0.0238189697265625, 0.00030732154846191406, 0.0282745361328125, 0.8515625, 1.3857421875, 0.14404296875, 0.47216796875, 0.004863739013671875, 0.092529296875, 0.007129669189453125, 0.0006976127624511719, 0.00110626220703125, 0.01555633544921875, 0.01226806640625, 0.016693115234375, 0.005023956298828125, 0.06634521484375, 1.6298828125, 1.6484375, 1.3193359375, 0.046356201171875, 0.60888671875, 0.70166015625, 0.121826171875, 0.01085662841796875, 0.35205078125, 0.7724609375, 0.9287109375, 0.0010423660278320312, 0.053558349609375, 0.0011129379272460938, 0.0004954338073730469, 0.054229736328125, 0.06890869140625, 0.02392578125, 0.021240234375, 0.1749267578125, 0.75537109375, 0.1820068359375, 0.00012362003326416016, 0.08087158203125, 0.0010013580322265625, 0.282958984375, 0.73583984375, 0.0218353271484375, 0.481689453125, 0.090087890625, 0.00031757354736328125, 0.01091766357421875, 9.143352508544922e-05], "tokens": [291, 2571, 3903, 984, 301, 584, 415, 308, 1978, 1711, 610, 26939, 32, 13876, 81, 6103, 27, 301, 324, 434, 322, 1692, 4899, 5167, 372, 5657, 322, 1603, 324, 4899, 32, 4534, 1078, 26, 102, 30, 533, 293, 324, 442, 861, 45, 291, 320, 813, 301, 324, 442, 901, 45, 291, 320]}
{"line_number": 268, "line_type": "original", "code": "     * step.", "entropy": 5.1796875, "is_bug_line": false, "sus_score": 0.6353289484977722, "per_token_entropy": [5.6953125, 5.18359375, 7.546875, 2.296875], "tokens": [262, 319, 3111, 32]}
{"line_number": 268, "line_type": "generated", "code": "\n        return nextAction == EventHandler.RESET;\n    }\n\n    /** Get the value of the switching function.\n     * @return value of the switching function\n     * @exception DerivativeException if the switching function cannot\n     * be computed\n     */\n    public double", "entropy": 0.298095703125, "is_bug_line": false, "sus_score": 0.6353289484977722, "per_token_entropy": [0.443603515625, 0.95556640625, 0.81005859375, 0.002685546875, 0.05670166015625, 0.01324462890625, 0.0007786750793457031, 0.0003542900085449219, 0.195068359375, 0.170166015625, 0.0022258758544921875, 0.333984375, 0.036285400390625, 0.81787109375, 0.041839599609375, 1.7001953125, 0.0128631591796875, 0.08465576171875, 1.9697265625, 0.00652313232421875, 0.75048828125, 0.12335205078125, 0.003955841064453125, 0.0455322265625, 0.828125, 0.40771484375, 0.0006966590881347656, 0.00948333740234375, 0.0213775634765625, 0.0018329620361328125, 0.484619140625, 1.24609375, 0.046112060546875, 0.2303466796875, 0.6025390625, 0.00020039081573486328, 0.00024962425231933594, 4.8279762268066406e-05, 0.0094146728515625, 0.022247314453125, 0.4677734375, 0.0186614990234375, 0.1077880859375, 0.98486328125, 0.0002073049545288086, 0.0021724700927734375, 0.51708984375, 0.5712890625, 0.149169921875, 0.0085906982421875, 0.1422119140625, 0.038177490234375], "tokens": [291, 442, 2354, 1711, 610, 26939, 32, 13876, 45, 284, 320, 446, 1022, 1390, 322, 786, 432, 322, 24803, 667, 32, 275, 319, 477, 601, 786, 432, 322, 24803, 667, 275, 319, 477, 3893, 15944, 387, 1353, 984, 415, 322, 24803, 667, 4881, 275, 319, 526, 15279, 275, 569, 284, 562, 2064]}
{"line_number": 269, "line_type": "original", "code": "     */", "entropy": 5.671875, "is_bug_line": false, "sus_score": 0.6341338753700256, "per_token_entropy": [6.10546875, 5.23828125], "tokens": [262, 569]}
{"line_number": 269, "line_type": "generated", "code": "\n        // let the user reset the derivatives if needed\n        if (nextAction == EventHandler.RESET_DERIVATIVES) {\n            return true;\n        }\n\n        // if we are at a discontinuity, we need to reset the derivatives\n        if", "entropy": 0.7119140625, "is_bug_line": false, "sus_score": 0.6341338753700256, "per_token_entropy": [0.465087890625, 1.9638671875, 2.794921875, 0.0203704833984375, 2.017578125, 0.93994140625, 0.244140625, 0.439697265625, 0.60009765625, 0.513671875, 0.152587890625, 1.541015625, 0.2261962890625, 0.8994140625, 0.020050048828125, 0.03631591796875, 0.01502227783203125, 0.0009860992431640625, 0.000812530517578125, 0.03106689453125, 1.2060546875, 7.748603820800781e-06, 0.00012385845184326172, 8.940696716308594e-06, 1.1920928955078125e-06, 0.01053619384765625, 0.007411956787109375, 0.06219482421875, 2.529296875, 0.481689453125, 0.00039315223693847656, 0.034698486328125, 0.0012416839599609375, 0.5029296875, 0.294189453125, 3.0234375, 1.5048828125, 0.8369140625, 2.056640625, 1.1279296875, 1.767578125, 0.0162506103515625, 0.0003829002380371094, 0.873046875, 1.185546875, 2.19140625, 0.0161590576171875, 1.7626953125, 0.16357421875, 1.158203125, 0.284423828125, 1.015625], "tokens": [291, 434, 1207, 322, 1256, 5657, 322, 40391, 415, 5349, 291, 415, 308, 1978, 1711, 610, 26939, 32, 13876, 81, 4989, 5091, 722, 5091, 940, 27, 301, 324, 442, 861, 45, 291, 320, 584, 434, 415, 996, 884, 821, 312, 1214, 18037, 543, 30, 996, 1849, 372, 5657, 322, 40391, 291, 415]}
{"line_number": 277, "line_type": "original", "code": "     * @param y array containing the current value of the state vector", "entropy": 1.693359375, "is_bug_line": false, "sus_score": 0.6097966432571411, "per_token_entropy": [6.0078125, 5.84375, 0.77392578125, 1.1474609375, 1.822265625, 0.21044921875, 5.03515625, 0.020751953125, 0.53955078125, 1.4091796875, 0.0174713134765625, 0.29052734375, 0.517578125, 0.06768798828125], "tokens": [262, 319, 477, 753, 533, 1417, 6621, 322, 1550, 786, 432, 322, 1603, 4026]}
{"line_number": 277, "line_type": "generated", "code": "        return true;\n\n    }\n\n    /** Get the state at the end of the last accepted step.\n     * @return state at the end of the last accepted step\n     */\n    public double[] getLastState() {\n        return y0;\n    }\n\n    /**", "entropy": 0.3232421875, "is_bug_line": false, "sus_score": 0.6097966432571411, "per_token_entropy": [1.8173828125, 1.267578125, 0.87939453125, 0.006378173828125, 0.378662109375, 0.0007061958312988281, 0.50439453125, 0.062164306640625, 0.8564453125, 0.06561279296875, 1.38671875, 1.0517578125, 0.11907958984375, 0.8017578125, 0.001903533935546875, 0.0257415771484375, 1.0751953125, 0.1934814453125, 0.01458740234375, 0.07611083984375, 0.1932373046875, 0.0010347366333007812, 0.166259765625, 0.264404296875, 0.5703125, 0.2138671875, 0.006412506103515625, 0.00970458984375, 0.0002493858337402344, 0.002445220947265625, 0.01019287109375, 0.020477294921875, 0.0008835792541503906, 0.1422119140625, 0.12347412109375, 0.004669189453125, 0.06304931640625, 0.485595703125, 0.06378173828125, 0.69921875, 0.135009765625, 0.0198974609375, 0.00293731689453125, 0.0704345703125, 0.051116943359375, 1.28125, 0.95751953125, 0.432861328125, 0.00446319580078125, 6.020069122314453e-05, 0.2061767578125, 0.022613525390625], "tokens": [351, 442, 861, 45, 446, 320, 446, 1022, 1390, 322, 1603, 821, 322, 943, 432, 322, 2401, 16187, 3111, 32, 275, 319, 477, 601, 1603, 821, 322, 943, 432, 322, 2401, 16187, 3111, 275, 569, 284, 562, 2064, 1178, 36695, 1078, 346, 301, 291, 442, 533, 34, 45, 284, 320, 446, 1022]}
{"line_number": 282, "line_type": "original", "code": "    public void stepAccepted(final double t, final double[] y)", "entropy": 1.35546875, "is_bug_line": false, "sus_score": 0.6089544296264648, "per_token_entropy": [4.7109375, 7.609375, 1.5625, 3.693359375, 1.328125, 0.13818359375, 0.289794921875, 0.25146484375, 0.1015625, 0.1326904296875, 0.1201171875, 0.0655517578125, 0.0323486328125, 0.0180511474609375, 0.274658203125], "tokens": [264, 562, 763, 3111, 24898, 26, 3220, 2064, 273, 30, 1158, 2064, 1178, 533, 27]}
{"line_number": 282, "line_type": "generated", "code": "\n    }", "entropy": 0.175537109375, "is_bug_line": false, "sus_score": 0.6089544296264648, "per_token_entropy": [0.32275390625, 0.02838134765625], "tokens": [284, 320]}
{"line_number": 270, "line_type": "original", "code": "    public double getEventTime() {", "entropy": 2.640625, "is_bug_line": false, "sus_score": 0.607476532459259, "per_token_entropy": [6.15625, 9.03125, 3.09765625, 1.115234375, 1.208984375, 0.2083740234375, 0.054595947265625, 0.247802734375], "tokens": [264, 562, 2064, 622, 1151, 1043, 346, 301]}
{"line_number": 270, "line_type": "generated", "code": "\n            return false;\n        }\n\n        // evaluate the event handler at the beginning of the next step\n        final double previousEventTime = this.previousEventTime;\n        this.previousEventTime        = Double.NaN;\n        final boolean previousEventPositive = g", "entropy": 0.49853515625, "is_bug_line": false, "sus_score": 0.607476532459259, "per_token_entropy": [0.148681640625, 0.53955078125, 0.30908203125, 0.0255279541015625, 0.299072265625, 0.001514434814453125, 0.2705078125, 1.482421875, 2.65625, 0.17724609375, 1.4638671875, 0.5458984375, 1.5224609375, 0.2181396484375, 1.185546875, 0.0043792724609375, 0.007114410400390625, 0.437255859375, 0.1612548828125, 0.2685546875, 1.9091796875, 1.0537109375, 1.708984375, 0.83349609375, 0.1864013671875, 0.148193359375, 0.1778564453125, 0.000274658203125, 0.019378662109375, 0.00013875961303710938, 8.14199447631836e-05, 0.003086090087890625, 0.070068359375, 1.4521484375, 0.00020039081573486328, 0.02142333984375, 0.0012493133544921875, 0.00011813640594482422, 1.8515625, 0.0001995563507080078, 0.1473388671875, 7.486343383789062e-05, 0.0022335052490234375, 0.0006418228149414062, 0.1990966796875, 0.91162109375, 0.492431640625, 0.837890625, 0.27294921875, 0.83740234375, 0.04541015625, 1.0126953125], "tokens": [324, 442, 901, 45, 291, 320, 584, 434, 13396, 322, 1692, 4899, 821, 322, 13672, 432, 322, 2354, 3111, 291, 1158, 2064, 4552, 1151, 1043, 280, 458, 32, 8884, 1151, 1043, 45, 291, 458, 32, 8884, 1151, 1043, 351, 280, 6934, 32, 11126, 45, 291, 1158, 1905, 4552, 1151, 17991, 280, 485]}
{"line_number": 293, "line_type": "original", "code": "        } else {", "entropy": 3.14453125, "is_bug_line": false, "sus_score": 0.5928995013237, "per_token_entropy": [6.21484375, 4.078125, 1.8251953125, 0.4609375], "tokens": [351, 320, 813, 301]}
{"line_number": 293, "line_type": "generated", "code": "\n    /** Get the current value of the derivative of the event function.\n     * @return current value of the derivative of the event function\n     * @exception DerivativeException if the derivative cannot be computed\n     */\n    public double gDot(final double t", "entropy": 0.383056640625, "is_bug_line": false, "sus_score": 0.5928995013237, "per_token_entropy": [0.407470703125, 0.307861328125, 1.4873046875, 0.08721923828125, 2.681640625, 0.73876953125, 0.00627899169921875, 0.08538818359375, 3.265625, 0.61572265625, 0.0194549560546875, 1.115234375, 0.9609375, 0.1431884765625, 0.1895751953125, 0.00807952880859375, 0.106201171875, 0.10870361328125, 0.49365234375, 0.04229736328125, 0.0018482208251953125, 0.01514434814453125, 0.0853271484375, 0.0177001953125, 0.0014495849609375, 0.0211029052734375, 0.01068878173828125, 0.276611328125, 1.40625, 0.1661376953125, 0.2469482421875, 0.1475830078125, 6.210803985595703e-05, 0.0006670951843261719, 7.617473602294922e-05, 0.01154327392578125, 0.024505615234375, 0.96826171875, 0.34375, 0.00403594970703125, 0.73388671875, 0.0794677734375, 0.353271484375, 0.024749755859375, 0.245361328125, 0.051910400390625, 1.1513671875, 0.1033935546875, 0.382080078125, 0.1253662109375, 0.0205535888671875, 0.0282745361328125], "tokens": [284, 1022, 1390, 322, 1550, 786, 432, 322, 27640, 432, 322, 1692, 667, 32, 275, 319, 477, 601, 1550, 786, 432, 322, 27640, 432, 322, 1692, 667, 275, 319, 477, 3893, 15944, 387, 1353, 984, 415, 322, 27640, 4881, 526, 15279, 275, 569, 284, 562, 2064, 485, 10025, 26, 3220, 2064, 273]}
{"line_number": 261, "line_type": "original", "code": "        }", "entropy": 6.92578125, "is_bug_line": false, "sus_score": 0.5786752104759216, "per_token_entropy": [1.755859375, 12.09375], "tokens": [351, 320]}
{"line_number": 261, "line_type": "generated", "code": "\n     */\n    public void resetState(final double t, final double[] y) {\n        handler.resetState(t, y);\n    }", "entropy": 0.134033203125, "is_bug_line": false, "sus_score": 0.5786752104759216, "per_token_entropy": [0.75048828125, 0.5712890625, 0.09075927734375, 0.020416259765625, 0.0182952880859375, 0.71533203125, 0.00829315185546875, 0.0013780593872070312, 0.149658203125, 0.0007567405700683594, 0.0006327629089355469, 0.0011053085327148438, 0.031890869140625, 0.0011281967163085938, 0.0040283203125, 0.004787445068359375, 0.0020503997802734375, 0.12030029296875, 0.276611328125, 0.77001953125, 0.0025196075439453125, 0.0306243896484375, 0.00075531005859375, 0.0005288124084472656, 0.02459716796875, 0.0119781494140625, 0.0101776123046875, 0.0107879638671875, 0.369384765625, 0.020538330078125], "tokens": [275, 569, 284, 562, 763, 5657, 1078, 26, 3220, 2064, 273, 30, 1158, 2064, 1178, 533, 27, 301, 291, 4899, 32, 4534, 1078, 26, 102, 30, 533, 293, 284, 320]}
{"line_number": 170, "line_type": "original", "code": "        try {", "entropy": 4.77734375, "is_bug_line": false, "sus_score": 0.559853732585907, "per_token_entropy": [4.92578125, 9.3828125, 0.0278167724609375], "tokens": [351, 1596, 301]}
{"line_number": 170, "line_type": "generated", "code": "\n                        (Math.abs(tb - root) <= convergence)) {", "entropy": 0.454833984375, "is_bug_line": false, "sus_score": 0.559853732585907, "per_token_entropy": [1.3173828125, 0.86328125, 1.564453125, 0.0005731582641601562, 0.045684814453125, 0.00580596923828125, 1.857421875, 0.0156707763671875, 0.210205078125, 0.0023212432861328125, 0.12548828125, 0.053070068359375, 0.21240234375, 0.09478759765625], "tokens": [715, 308, 5717, 32, 3596, 26, 7163, 429, 3051, 27, 2511, 47454, 490, 301]}
{"line_number": 264, "line_type": "original", "code": "", "entropy": 4.61328125, "is_bug_line": false, "sus_score": 0.5325319170951843, "per_token_entropy": [4.61328125], "tokens": [203]}
{"line_number": 264, "line_type": "generated", "code": "\n     */\n    public boolean resetState(final double t, final double[] y)\n        throws EventException {\n\n        nextAction = handler.resetState(t, y);\n        return nextAction == EventHandler.RESET_STATE;\n\n    }", "entropy": 0.1494140625, "is_bug_line": false, "sus_score": 0.5325319170951843, "per_token_entropy": [0.537109375, 0.0295867919921875, 0.041534423828125, 0.01194000244140625, 0.0131988525390625, 0.9609375, 0.028961181640625, 0.0004343986511230469, 0.1473388671875, 0.0005106925964355469, 0.00023877620697021484, 0.00023877620697021484, 0.053558349609375, 0.0004780292510986328, 0.0015878677368164062, 0.0024089813232421875, 0.003940582275390625, 0.09222412109375, 0.00037980079650878906, 0.0169830322265625, 0.0001571178436279297, 0.016204833984375, 0.66455078125, 2.064453125, 0.00995635986328125, 0.11859130859375, 0.36572265625, 0.00037860870361328125, 0.1356201171875, 0.002948760986328125, 0.0005064010620117188, 0.03631591796875, 0.03240966796875, 0.01387786865234375, 0.318603515625, 0.17578125, 0.1396484375, 0.260986328125, 9.97781753540039e-05, 0.352294921875, 0.0038585662841796875, 0.0003037452697753906, 0.0005526542663574219, 0.0301361083984375, 0.1273193359375, 0.06207275390625, 0.293212890625, 0.0015516281127929688], "tokens": [275, 569, 284, 562, 1905, 5657, 1078, 26, 3220, 2064, 273, 30, 1158, 2064, 1178, 533, 27, 291, 2571, 3903, 984, 301, 584, 2354, 1711, 280, 4899, 32, 4534, 1078, 26, 102, 30, 533, 293, 291, 442, 2354, 1711, 610, 26939, 32, 13876, 81, 6103, 45, 446, 320]}
{"line_number": 174, "line_type": "original", "code": "            final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));", "entropy": 1.3935546875, "is_bug_line": false, "sus_score": 0.5132195353507996, "per_token_entropy": [6.359375, 10.5625, 3.6875, 3.98828125, 2.607421875, 5.578125, 0.0030651092529296875, 3.2109375, 0.5849609375, 0.31640625, 0.023529052734375, 0.7275390625, 0.0819091796875, 1.9931640625, 0.1883544921875, 0.06414794921875, 1.5302734375, 0.0010776519775390625, 0.384521484375, 0.92919921875, 1.44921875, 0.0007300376892089844, 0.1651611328125, 0.1378173828125, 1.671875, 0.0985107421875, 0.0209808349609375, 0.7509765625, 0.0208282470703125, 0.0975341796875, 0.011016845703125, 1.4580078125, 0.01416778564453125, 4.076957702636719e-05, 0.057403564453125], "tokens": [1468, 1158, 629, 264, 310, 225, 280, 4175, 32, 1449, 26, 35, 30, 308, 410, 27, 4175, 32, 17682, 26, 5717, 32, 3596, 26, 102, 35, 429, 273, 34, 27, 517, 1769, 2140, 5757, 876]}
{"line_number": 174, "line_type": "generated", "code": "\n                    } else {\n                        // we found a new event\n                        previousEventTime = root;\n                        previousState = interpolator.getInterpolatedState();\n                        eventOccurred = true;\n                        return true;\n                    }\n                }\n                ta = tb;\n                ga =", "entropy": 0.318603515625, "is_bug_line": false, "sus_score": 0.5132195353507996, "per_token_entropy": [0.38916015625, 0.00969696044921875, 0.025390625, 0.055511474609375, 0.133056640625, 0.3486328125, 0.40234375, 1.46484375, 0.335205078125, 1.0390625, 0.25830078125, 1.3427734375, 0.74951171875, 0.00736236572265625, 0.0142059326171875, 0.051177978515625, 0.322265625, 0.0017375946044921875, 0.1015625, 1.365234375, 0.32568359375, 0.53515625, 0.0548095703125, 4.029273986816406e-05, 0.0004031658172607422, 0.0051422119140625, 0.00806427001953125, 6.794929504394531e-06, 0.00046515464782714844, 0.0662841796875, 0.0888671875, 2.5234375, 0.1329345703125, 0.07476806640625, 0.03271484375, 0.00018596649169921875, 0.09649658203125, 0.8798828125, 0.10247802734375, 0.0004134178161621094, 0.13818359375, 0.003223419189453125, 0.2529296875, 0.006168365478515625, 2.095703125, 0.346435546875, 0.36328125, 0.003692626953125, 0.00083160400390625, 0.004528045654296875, 0.0025882720947265625, 0.0001430511474609375], "tokens": [528, 320, 813, 301, 715, 434, 996, 2431, 312, 537, 1692, 715, 4552, 1151, 1043, 280, 3051, 45, 715, 4552, 1078, 280, 14399, 717, 32, 371, 19520, 733, 1078, 473, 715, 1692, 26546, 280, 861, 45, 715, 442, 861, 45, 528, 320, 400, 320, 400, 17311, 280, 15318, 45, 400, 14108, 280]}
{"line_number": 295, "line_type": "original", "code": "            nextAction = EventHandler.CONTINUE;", "entropy": 2.0390625, "is_bug_line": false, "sus_score": 0.5124440789222717, "per_token_entropy": [8.59375, 6.25, 0.048614501953125, 0.64111328125, 0.498046875, 0.0021877288818359375, 0.1661376953125, 0.11376953125], "tokens": [1468, 2354, 1711, 280, 26939, 32, 45405, 45]}
{"line_number": 295, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5124440789222717, "per_token_entropy": [], "tokens": []}
{"line_number": 243, "line_type": "original", "code": "                    ga = gb;", "entropy": 3.599609375, "is_bug_line": false, "sus_score": 0.5062563419342041, "per_token_entropy": [7.27734375, 8.640625, 0.364501953125, 1.359375, 0.36279296875], "tokens": [4696, 14108, 280, 41781, 45]}
{"line_number": 243, "line_type": "generated", "code": "\n            // nextAction can be one of the following:\n            // CONTINUE: nothing to do\n            // RESET_STATE: the integrator should reset the state to its\n            //   initial value and step again\n            // RESET_DERIVATIVES: the", "entropy": 0.6806640625, "is_bug_line": false, "sus_score": 0.5062563419342041, "per_token_entropy": [1.2314453125, 1.9462890625, 3.642578125, 0.416259765625, 2.52734375, 0.161865234375, 1.7041015625, 0.0079803466796875, 1.318359375, 0.136474609375, 0.48046875, 0.018829345703125, 0.005367279052734375, 1.998046875, 0.740234375, 1.4375, 1.1396484375, 0.16162109375, 0.4853515625, 0.00046563148498535156, 0.560546875, 0.0020389556884765625, 0.012298583984375, 0.023712158203125, 1.8154296875, 0.8486328125, 0.0010213851928710938, 0.305419921875, 1.1064453125, 0.0802001953125, 0.402587890625, 0.83349609375, 1.7119140625, 0.138671875, 0.0006933212280273438, 1.6103515625, 1.26171875, 0.390380859375, 1.353515625, 1.8076171875, 1.0927734375, 0.1409912109375, 0.0008602142333984375, 0.054534912109375, 5.233287811279297e-05, 0.1922607421875, 0.00011801719665527344, 0.0033855438232421875, 9.083747863769531e-05, 7.271766662597656e-06, 0.00885009765625, 0.08197021484375], "tokens": [324, 434, 2354, 1711, 883, 526, 1591, 432, 322, 2412, 44, 324, 434, 41001, 44, 7553, 372, 745, 324, 434, 43539, 81, 6103, 44, 322, 5845, 717, 1395, 5657, 322, 1603, 372, 2819, 324, 434, 261, 2815, 786, 461, 3111, 4056, 324, 434, 43539, 81, 4989, 5091, 722, 5091, 940, 44, 322]}
{"line_number": 216, "line_type": "original", "code": "                    solver.setAbsoluteAccuracy(convergence);", "entropy": 3.478515625, "is_bug_line": false, "sus_score": 0.5047401189804077, "per_token_entropy": [8.1953125, 9.5625, 1.697265625, 5.9921875, 5.55859375, 1.8408203125, 0.0246734619140625, 1.8017578125, 0.0002758502960205078, 0.10150146484375], "tokens": [4696, 17821, 32, 470, 12043, 26201, 26, 32620, 27976, 293]}
{"line_number": 216, "line_type": "generated", "code": "\n     * evaluation.\n     * <p>This method is intended to be called after a successful\n     * call to {@link #evaluateStep(StepInterpolator)}.</p>\n     * @return occurrence time of the event triggered in the current\n     * evaluation,", "entropy": 0.380615234375, "is_bug_line": false, "sus_score": 0.5047401189804077, "per_token_entropy": [1.8037109375, 0.140625, 1.23828125, 0.724609375, 0.353759765625, 0.0968017578125, 1.01953125, 0.01270294189453125, 0.008331298828125, 1.0263671875, 0.1568603515625, 1.6279296875, 1.7470703125, 0.052886962890625, 0.0175628662109375, 0.11395263671875, 1.8173828125, 0.1591796875, 0.36279296875, 0.92626953125, 0.0003173351287841797, 0.72265625, 0.0035858154296875, 0.1339111328125, 6.473064422607422e-05, 0.08380126953125, 0.126953125, 0.01143646240234375, 0.984375, 0.29931640625, 0.0007529258728027344, 0.39404296875, 0.418701171875, 0.00201416015625, 0.004261016845703125, 0.0682373046875, 0.0091094970703125, 0.096923828125, 0.040496826171875, 0.282470703125, 0.00022208690643310547, 0.0092315673828125, 0.00720977783203125, 0.56201171875, 0.258056640625, 0.0540771484375, 0.0018053054809570312, 0.06396484375, 0.2216796875, 0.0079345703125, 0.15673828125, 1.36328125], "tokens": [275, 319, 11903, 32, 275, 319, 333, 98, 48, 2272, 1411, 438, 14212, 372, 526, 3823, 2685, 312, 10149, 275, 319, 1476, 372, 3088, 1204, 588, 13697, 3533, 26, 3533, 37951, 4370, 1730, 98, 48, 275, 319, 477, 601, 35361, 1133, 432, 322, 1692, 16791, 328, 322, 1550, 275, 319, 11903, 30]}
{"line_number": 249, "line_type": "original", "code": "            pendingEvent     = false;", "entropy": 1.9765625, "is_bug_line": false, "sus_score": 0.5021495223045349, "per_token_entropy": [7.47265625, 3.25390625, 0.0022144317626953125, 3.017578125, 0.002288818359375, 0.0312347412109375, 0.056793212890625], "tokens": [1468, 11350, 1151, 262, 280, 901, 45]}
{"line_number": 249, "line_type": "generated", "code": "\n    /** {@inheritDoc} */\n    public void resetState(final double t0, final double[] y0, final double t) {\n        this.t0 = t0;\n        this.t1 = t;\n        this.y0 = y", "entropy": 0.270751953125, "is_bug_line": false, "sus_score": 0.5021495223045349, "per_token_entropy": [0.69287109375, 0.18896484375, 0.90283203125, 0.0274505615234375, 0.0055999755859375, 0.0067138671875, 0.0282745361328125, 0.259521484375, 0.30078125, 1.1103515625, 0.0199127197265625, 0.0017633438110351562, 0.397216796875, 0.046112060546875, 0.0157012939453125, 0.0592041015625, 0.003459930419921875, 0.0194091796875, 0.0204315185546875, 0.004436492919921875, 0.0017347335815429688, 0.00115203857421875, 0.2783203125, 0.60888671875, 0.019775390625, 0.187255859375, 0.05950927734375, 0.292236328125, 0.321533203125, 0.8173828125, 0.0003876686096191406, 0.036590576171875, 0.0120391845703125, 1.4384765625, 0.007160186767578125, 0.01363372802734375, 0.000827789306640625, 0.0205230712890625, 0.70068359375, 0.00022149085998535156, 1.7587890625, 0.57470703125, 0.0019893646240234375, 0.00922393798828125, 0.008544921875, 0.07568359375, 1.1787109375, 0.0001704692840576172, 0.734375, 0.1343994140625, 0.03277587890625, 0.63818359375], "tokens": [284, 1022, 3088, 18446, 111, 569, 284, 562, 763, 5657, 1078, 26, 3220, 2064, 273, 34, 30, 1158, 2064, 1178, 533, 34, 30, 1158, 2064, 273, 27, 301, 291, 458, 32, 102, 34, 280, 273, 34, 45, 291, 458, 32, 102, 35, 280, 273, 45, 291, 458, 32, 107, 34, 280, 533]}
{"line_number": 115, "line_type": "original", "code": "     */", "entropy": 1.2509765625, "is_bug_line": false, "sus_score": 0.4996173679828644, "per_token_entropy": [2.474609375, 0.0270538330078125], "tokens": [262, 569]}
{"line_number": 115, "line_type": "generated", "code": "\n     */\n    public boolean evaluateStep(final StepInterpolator interpolator)\n        throws DerivativeException, EventException {\n\n        // compute the sign of the switching function at the end of the step\n        final double tEnd = interpolator.getCurrentTime();\n       ", "entropy": 0.249267578125, "is_bug_line": false, "sus_score": 0.4996173679828644, "per_token_entropy": [0.5078125, 0.023468017578125, 0.0128326416015625, 0.016632080078125, 0.0123748779296875, 0.10894775390625, 0.030670166015625, 0.00109100341796875, 0.00838470458984375, 1.232421875, 0.006626129150390625, 6.496906280517578e-05, 1.0728836059570312e-06, 0.0006260871887207031, 0.01482391357421875, 0.00014698505401611328, 0.005069732666015625, 5.602836608886719e-06, 2.574920654296875e-05, 2.2649765014648438e-06, 0.0108795166015625, 0.037750244140625, 5.3763389587402344e-05, 0.01226043701171875, 0.335205078125, 0.390869140625, 2.373046875, 0.25927734375, 2.16015625, 0.24462890625, 0.1339111328125, 0.6708984375, 0.0028209686279296875, 0.1904296875, 0.076904296875, 0.3515625, 0.01358795166015625, 0.029144287109375, 0.1600341796875, 0.01824951171875, 0.68701171875, 0.07470703125, 0.33837890625, 0.62060546875, 0.4599609375, 0.1060791015625, 7.152557373046875e-07, 1.1563301086425781e-05, 0.96630859375, 0.1573486328125, 0.08697509765625, 0.00853729248046875], "tokens": [275, 569, 284, 562, 1905, 13396, 3533, 26, 3220, 11533, 37951, 14399, 717, 27, 291, 2571, 15944, 387, 1353, 984, 30, 3903, 984, 301, 584, 434, 7596, 322, 2596, 432, 322, 24803, 667, 821, 322, 943, 432, 322, 3111, 291, 1158, 2064, 273, 2102, 280, 14399, 717, 32, 12331, 1043, 473, 291]}
{"line_number": 78, "line_type": "original", "code": "     *  (this is considered with respect to the integration direction)", "entropy": 2.91796875, "is_bug_line": false, "sus_score": 0.49644389748573303, "per_token_entropy": [4.71484375, 0.1768798828125, 7.18359375, 5.296875, 1.240234375, 3.619140625, 4.46484375, 7.61328125, 0.349365234375, 0.041168212890625, 0.35498046875, 4.75, 0.921875, 0.118896484375], "tokens": [262, 319, 225, 308, 578, 438, 11870, 623, 10157, 372, 322, 10516, 6983, 27]}
{"line_number": 78, "line_type": "generated", "code": "\n     * @return convergence threshold for event localization\n     */\n    public double getConvergence() {\n        return convergence;\n    }\n\n    /** Get the upper limit in the iteration count for event localization.", "entropy": 0.0220184326171875, "is_bug_line": false, "sus_score": 0.49644389748573303, "per_token_entropy": [0.08148193359375, 0.005161285400390625, 0.0258636474609375, 0.006282806396484375, 0.01192474365234375, 0.0011882781982421875, 0.039398193359375, 0.00959014892578125, 0.0015850067138671875, 0.0858154296875, 0.0203399658203125, 0.00217437744140625, 0.0013170242309570312, 0.0008492469787597656, 0.00045609474182128906, 0.0016355514526367188, 4.601478576660156e-05, 3.8504600524902344e-05, 0.001434326171875, 0.0004584789276123047, 0.00901031494140625, 0.00460052490234375, 0.07928466796875, 0.0009832382202148438, 0.0016918182373046875, 0.0005207061767578125, 0.00556182861328125, 0.00017392635345458984, 0.01171112060546875, 0.004638671875, 0.0391845703125, 0.0018215179443359375, 0.2440185546875, 0.00025463104248046875, 0.0022678375244140625, 0.00034332275390625, 0.007843017578125, 0.0131378173828125, 0.1492919921875, 0.007659912109375], "tokens": [275, 319, 477, 601, 47454, 10084, 436, 1692, 34857, 275, 569, 284, 562, 2064, 622, 609, 424, 27976, 346, 301, 291, 442, 47454, 45, 284, 320, 446, 1022, 1390, 322, 8342, 2723, 328, 322, 13330, 2385, 436, 1692, 34857, 32]}
{"line_number": 114, "line_type": "original", "code": "     * @return underlying event handler", "entropy": 3.05859375, "is_bug_line": false, "sus_score": 0.4935472011566162, "per_token_entropy": [3.4140625, 0.70703125, 3.58984375, 3.119140625, 10.078125, 0.43896484375, 0.056304931640625], "tokens": [262, 319, 477, 601, 13266, 1692, 4899]}
{"line_number": 114, "line_type": "generated", "code": "\n     */\n    public boolean evaluateStep(final StepInterpolator interpolator)\n        throws DerivativeException, EventException {\n\n        // compute the switching function at the end of the proposed step\n        final double tEnd = interpolator.getInterpolatedTime();\n       ", "entropy": 0.25390625, "is_bug_line": false, "sus_score": 0.4935472011566162, "per_token_entropy": [0.90380859375, 1.2529296875, 0.01007843017578125, 0.00965118408203125, 0.00913238525390625, 0.093017578125, 0.03497314453125, 0.0014400482177734375, 0.0078582763671875, 1.1611328125, 0.00678253173828125, 5.841255187988281e-05, 1.0728836059570312e-06, 0.0008068084716796875, 0.0110321044921875, 8.344650268554688e-05, 0.00600433349609375, 5.4836273193359375e-06, 1.8596649169921875e-05, 2.1457672119140625e-06, 0.016143798828125, 0.03753662109375, 6.175041198730469e-05, 0.0083160400390625, 0.2310791015625, 0.423095703125, 2.41015625, 0.259521484375, 1.0283203125, 0.0170745849609375, 0.465576171875, 0.206787109375, 0.87109375, 0.01187896728515625, 0.0006947517395019531, 0.53173828125, 0.01154327392578125, 0.01861572265625, 0.58203125, 0.03826904296875, 0.1107177734375, 0.35107421875, 0.452392578125, 0.09442138671875, 7.152557373046875e-07, 2.8967857360839844e-05, 0.5546875, 0.8525390625, 8.64267349243164e-05, 0.00589752197265625, 0.09613037109375, 0.0099029541015625], "tokens": [275, 569, 284, 562, 1905, 13396, 3533, 26, 3220, 11533, 37951, 14399, 717, 27, 291, 2571, 15944, 387, 1353, 984, 30, 3903, 984, 301, 584, 434, 7596, 322, 24803, 667, 821, 322, 943, 432, 322, 17934, 3111, 291, 1158, 2064, 273, 2102, 280, 14399, 717, 32, 371, 19520, 733, 1043, 473, 291]}
{"line_number": 300, "line_type": "original", "code": "     * current step.", "entropy": 5.58203125, "is_bug_line": false, "sus_score": 0.4843066334724426, "per_token_entropy": [5.5703125, 4.125, 13.0546875, 3.0, 2.150390625], "tokens": [262, 319, 1550, 3111, 32]}
{"line_number": 300, "line_type": "generated", "code": "\n    /**\n     * Get the value of the switching function.\n     * @param t value of the independent <i>time</i> variable\n     * @param y array containing the current value of the state vector\n     * @return value of the switching function", "entropy": 0.274658203125, "is_bug_line": false, "sus_score": 0.4843066334724426, "per_token_entropy": [1.517578125, 0.2626953125, 2.5390625, 0.0028057098388671875, 1.111328125, 0.126220703125, 1.8896484375, 0.01520538330078125, 0.12744140625, 2.005859375, 0.016845703125, 0.89453125, 0.1248779296875, 0.0122528076171875, 0.146728515625, 1.015625, 0.177490234375, 0.97802734375, 0.00936126708984375, 0.01219940185546875, 0.0238189697265625, 0.0352783203125, 0.0182952880859375, 3.123283386230469e-05, 0.001155853271484375, 0.001918792724609375, 0.002094268798828125, 0.0004210472106933594, 0.0021209716796875, 0.117431640625, 0.006694793701171875, 0.0079345703125, 0.1495361328125, 0.036956787109375, 0.1578369140625, 0.03558349609375, 0.005939483642578125, 0.004199981689453125, 0.023223876953125, 0.0028247833251953125, 0.004688262939453125, 0.0124969482421875, 0.01308441162109375, 0.01166534423828125, 0.02716064453125, 0.01311492919921875, 0.07293701171875, 0.455810546875, 0.0008721351623535156, 0.01155853271484375, 0.03656005859375, 0.005390167236328125], "tokens": [284, 1022, 275, 319, 1390, 322, 786, 432, 322, 24803, 667, 32, 275, 319, 477, 753, 273, 786, 432, 322, 16371, 333, 91, 48, 1003, 377, 91, 48, 2677, 275, 319, 477, 753, 533, 1417, 6621, 322, 1550, 786, 432, 322, 1603, 4026, 275, 319, 477, 601, 786, 432, 322, 24803, 667]}
{"line_number": 301, "line_type": "original", "code": "     * @return true if the integration should be stopped", "entropy": 1.7041015625, "is_bug_line": false, "sus_score": 0.4692300260066986, "per_token_entropy": [5.59765625, 4.53515625, 1.92578125, 0.5166015625, 0.97216796875, 0.06390380859375, 0.1796875, 3.138671875, 0.67333984375, 0.339111328125, 0.8134765625], "tokens": [262, 319, 477, 601, 861, 415, 322, 10516, 1395, 526, 17896]}
{"line_number": 301, "line_type": "generated", "code": "\n    /** Get the current value of the derivatives.\n     * @return array containing the derivatives\n     */\n    public double[] getDerivatives() {\n        return g;\n    }\n\n    /** Get the current value of the derivatives.\n     * @param t value of", "entropy": 0.423583984375, "is_bug_line": false, "sus_score": 0.4692300260066986, "per_token_entropy": [1.5458984375, 0.51220703125, 1.28515625, 0.07061767578125, 1.9052734375, 0.63037109375, 0.00270843505859375, 0.054840087890625, 2.46875, 1.08203125, 0.263916015625, 0.026031494140625, 0.09033203125, 0.2301025390625, 0.476806640625, 0.2093505859375, 0.0655517578125, 0.409423828125, 0.89501953125, 0.1536865234375, 0.00959014892578125, 0.1961669921875, 0.12139892578125, 0.003238677978515625, 0.498046875, 0.461181640625, 0.0006618499755859375, 0.022247314453125, 0.006649017333984375, 0.08074951171875, 0.06390380859375, 1.0341796875, 0.462158203125, 0.01389312744140625, 0.0003132820129394531, 0.6552734375, 0.05438232421875, 0.54345703125, 0.06500244140625, 0.68701171875, 0.6826171875, 0.00531005859375, 0.039520263671875, 1.005859375, 0.9501953125, 0.090576171875, 0.001995086669921875, 0.09222412109375, 0.89013671875, 0.7646484375, 0.14404296875, 0.0030040740966796875], "tokens": [284, 1022, 1390, 322, 1550, 786, 432, 322, 40391, 32, 275, 319, 477, 601, 1417, 6621, 322, 40391, 275, 569, 284, 562, 2064, 1178, 622, 30970, 11118, 346, 301, 291, 442, 485, 45, 284, 320, 446, 1022, 1390, 322, 1550, 786, 432, 322, 40391, 32, 275, 319, 477, 753, 273, 786, 432]}
{"line_number": 296, "line_type": "original", "code": "        }", "entropy": 4.01171875, "is_bug_line": false, "sus_score": 0.4675104320049286, "per_token_entropy": [5.80859375, 2.212890625], "tokens": [351, 320]}
{"line_number": 296, "line_type": "generated", "code": "\n    /** {@inheritDoc} */\n    public void addStepHandler(StepHandler handler) {\n        this.handler = handler;\n    }", "entropy": 0.384765625, "is_bug_line": false, "sus_score": 0.4675104320049286, "per_token_entropy": [1.0537109375, 0.470703125, 1.6884765625, 0.06683349609375, 0.00499725341796875, 0.005107879638671875, 0.0267181396484375, 0.3837890625, 0.8193359375, 1.220703125, 0.044158935546875, 0.0234375, 0.0026531219482421875, 0.96142578125, 0.0005688667297363281, 0.461181640625, 0.0028705596923828125, 0.041473388671875, 0.0740966796875, 1.4765625, 0.0011005401611328125, 0.45068359375, 0.6103515625, 0.2393798828125, 0.0024700164794921875, 0.255126953125, 0.0015840530395507812], "tokens": [284, 1022, 3088, 18446, 111, 569, 284, 562, 763, 1015, 3533, 1972, 26, 3533, 1972, 4899, 27, 301, 291, 458, 32, 4531, 280, 4899, 45, 284, 320]}
