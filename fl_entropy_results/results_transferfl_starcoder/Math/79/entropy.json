{"line_number": 157, "line_type": "original", "code": "                }", "entropy": 6.140625, "is_bug_line": false, "sus_score": 0.6676349639892578, "per_token_entropy": [6.515625, 5.765625], "tokens": [2071, 320]}
{"line_number": 157, "line_type": "generated", "code": "\n        } else {\n            // Use symmetry for large n\n            int j = (k > n / 2)? n - k : k;\n            for (int i = n, m = 1; j > 1; --i,", "entropy": 0.3193359375, "is_bug_line": false, "sus_score": 0.6676349639892578, "per_token_entropy": [0.69482421875, 0.0197906494140625, 0.11651611328125, 0.07537841796875, 0.12127685546875, 0.84716796875, 0.89794921875, 1.1025390625, 0.0005564689636230469, 0.1326904296875, 0.203369140625, 0.1385498046875, 0.08880615234375, 1.14453125, 1.0634765625, 0.2255859375, 0.40478515625, 0.318603515625, 1.9365234375, 0.08416748046875, 0.276611328125, 0.0167083740234375, 0.2049560546875, 0.155517578125, 0.0032520294189453125, 1.3916015625, 0.026458740234375, 0.0020618438720703125, 0.00762176513671875, 0.00014400482177734375, 0.0012235641479492188, 0.1478271484375, 0.023101806640625, 0.04071044921875, 0.09759521484375, 0.0207672119140625, 0.0012187957763671875, 0.05804443359375, 1.2568359375, 0.6845703125, 0.0011091232299804688, 0.04925537109375, 0.00011587142944335938, 0.00902557373046875, 0.98291015625, 0.00418853759765625, 0.0033054351806640625, 0.1468505859375, 0.008941650390625, 0.9453125, 0.08392333984375, 0.33984375], "tokens": [291, 320, 813, 301, 324, 434, 4417, 5013, 27261, 436, 7622, 310, 324, 629, 594, 280, 308, 93, 848, 310, 517, 225, 36, 27, 1018, 310, 429, 831, 499, 831, 45, 324, 436, 308, 410, 595, 280, 310, 30, 345, 280, 225, 35, 45, 594, 848, 225, 35, 45, 769, 91, 30]}
{"line_number": 156, "line_type": "original", "code": "                    throw new ArithmeticException(msg);", "entropy": 2.234375, "is_bug_line": false, "sus_score": 0.6597239971160889, "per_token_entropy": [8.890625, 6.85546875, 0.0157623291015625, 0.7294921875, 0.0007348060607910156, 0.88134765625, 0.471923828125, 0.0228118896484375], "tokens": [4696, 1422, 537, 47721, 984, 26, 2076, 293]}
{"line_number": 156, "line_type": "generated", "code": "\n        return result;\n    }\n\n    /**\n     * Checks preconditions for binomial coefficient.\n     *\n     * @param n the size of the set\n     * @param k the size of the subsets to be counted\n     * @throws IllegalArgumentException if preconditions", "entropy": 0.12396240234375, "is_bug_line": false, "sus_score": 0.6597239971160889, "per_token_entropy": [0.2354736328125, 0.1676025390625, 0.05206298828125, 0.0038661956787109375, 0.021270751953125, 0.0007104873657226562, 0.255859375, 0.2413330078125, 0.01580810546875, 0.0002651214599609375, 1.3955078125, 1.11328125, 0.0016984939575195312, 0.015289306640625, 0.1470947265625, 0.00043511390686035156, 0.88232421875, 0.48876953125, 0.151611328125, 0.0305328369140625, 0.1495361328125, 0.00032711029052734375, 0.0117950439453125, 0.02825927734375, 0.0023555755615234375, 0.60205078125, 0.07110595703125, 0.001270294189453125, 0.00403594970703125, 0.005779266357421875, 0.09686279296875, 2.86102294921875e-05, 0.00024116039276123047, 0.00043511390686035156, 5.424022674560547e-05, 0.005069732666015625, 0.01629638671875, 0.0002053976058959961, 0.01543426513671875, 0.005939483642578125, 0.0002837181091308594, 0.0018100738525390625, 0.0001964569091796875, 0.00046634674072265625, 0.0302276611328125, 0.04052734375, 0.0107879638671875, 0.0194091796875, 0.0300140380859375, 0.0227508544921875, 0.048309326171875, 0.003238677978515625], "tokens": [291, 442, 1056, 45, 284, 320, 446, 1022, 275, 319, 17279, 1406, 8425, 436, 7395, 12563, 17134, 32, 275, 319, 275, 319, 477, 753, 310, 322, 1334, 432, 322, 739, 275, 319, 477, 753, 831, 322, 1334, 432, 322, 1361, 2021, 372, 526, 44644, 275, 319, 477, 5117, 12137, 415, 1406, 8425]}
{"line_number": 1629, "line_type": "original", "code": "      return Math.sqrt(sum);", "entropy": 1.650390625, "is_bug_line": false, "sus_score": 0.5992365479469299, "per_token_entropy": [6.03515625, 3.701171875, 1.1650390625, 0.017425537109375, 1.994140625, 0.033203125, 0.20263671875, 0.054595947265625], "tokens": [647, 442, 4175, 32, 8663, 26, 1036, 293]}
{"line_number": 1629, "line_type": "generated", "code": "\n    /**\n     * Calculates the L<sub>p</sub> distance between two points.\n     *\n     * @param p1 the first point\n     * @param p2 the second point\n     * @param p the L<sub>p</sub", "entropy": 0.142578125, "is_bug_line": false, "sus_score": 0.5992365479469299, "per_token_entropy": [1.24609375, 0.328369140625, 0.04656982421875, 0.00107574462890625, 0.79052734375, 0.09375, 1.3427734375, 0.02557373046875, 0.01593017578125, 0.32421875, 0.72705078125, 0.002307891845703125, 3.230571746826172e-05, 0.0019083023071289062, 0.458740234375, 0.03515625, 0.0090789794921875, 0.01837158203125, 0.120849609375, 0.052734375, 0.000217437744140625, 0.06890869140625, 0.00021791458129882812, 0.01322174072265625, 0.0008845329284667969, 0.01346588134765625, 0.06170654296875, 0.07196044921875, 0.00034427642822265625, 0.0005474090576171875, 0.001617431640625, 2.7418136596679688e-06, 2.849102020263672e-05, 3.0159950256347656e-05, 5.507469177246094e-05, 0.0001131296157836914, 9.071826934814453e-05, 0.000568389892578125, 0.00017154216766357422, 0.0008759498596191406, 2.7418136596679688e-05, 0.0006718635559082031, 0.13671875, 0.01898193359375, 0.355712890625, 0.98486328125, 0.02032470703125, 0.00021708011627197266, 0.0194549560546875, 0.00119781494140625, 0.0005145072937011719, 0.00022423267364501953], "tokens": [284, 1022, 275, 319, 42236, 322, 498, 46, 1113, 48, 98, 377, 1113, 48, 7291, 3733, 3134, 4981, 32, 275, 319, 275, 319, 477, 753, 298, 35, 322, 1932, 2260, 275, 319, 477, 753, 298, 36, 322, 3100, 2260, 275, 319, 477, 753, 298, 322, 498, 46, 1113, 48, 98, 377, 1113]}
{"line_number": 1625, "line_type": "original", "code": "      for (int i = 0; i < p1.length; i++) {", "entropy": 0.53271484375, "is_bug_line": false, "sus_score": 0.5847814083099365, "per_token_entropy": [5.15625, 4.30859375, 0.028594970703125, 0.031951904296875, 0.132080078125, 0.0123748779296875, 0.055816650390625, 0.0140228271484375, 0.0232086181640625, 0.0024471282958984375, 0.0191650390625, 0.2470703125, 0.02056884765625, 0.0205535888671875, 0.0048980712890625, 0.00888824462890625, 0.0024890899658203125, 0.004375457763671875, 0.030853271484375], "tokens": [647, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 298, 35, 32, 1322, 45, 595, 1987, 301]}
{"line_number": 1625, "line_type": "generated", "code": "\n    /**\n     * Calculates the cosine distance between two points.\n     *\n     * @param p1 the first point\n     * @param p2 the second point\n     * @return the cosine distance between the two points\n     */\n    public static double distance", "entropy": 0.12469482421875, "is_bug_line": false, "sus_score": 0.5847814083099365, "per_token_entropy": [0.69140625, 0.32958984375, 0.08056640625, 0.00128936767578125, 0.7060546875, 0.0894775390625, 3.078125, 0.00928497314453125, 0.6572265625, 0.04541015625, 0.026641845703125, 0.11419677734375, 0.056732177734375, 0.051483154296875, 0.0014028549194335938, 0.09619140625, 0.0002837181091308594, 0.01338958740234375, 0.00157928466796875, 0.03228759765625, 0.0004241466522216797, 0.00705718994140625, 0.0003979206085205078, 0.001499176025390625, 0.0029468536376953125, 2.6226043701171875e-06, 3.0040740966796875e-05, 4.38690185546875e-05, 7.56978988647461e-05, 7.426738739013672e-05, 6.92605972290039e-05, 0.000591278076171875, 0.0001842975616455078, 0.0011968612670898438, 0.00012230873107910156, 0.0008068084716796875, 0.01277923583984375, 0.006122589111328125, 0.043212890625, 0.00043201446533203125, 0.00432586669921875, 0.01019287109375, 0.00739288330078125, 0.00691986083984375, 0.00337982177734375, 0.0259857177734375, 0.06402587890625, 0.015899658203125, 0.00849151611328125, 0.002567291259765625, 0.0098114013671875, 0.164306640625], "tokens": [284, 1022, 275, 319, 42236, 322, 10712, 482, 7291, 3733, 3134, 4981, 32, 275, 319, 275, 319, 477, 753, 298, 35, 322, 1932, 2260, 275, 319, 477, 753, 298, 36, 322, 3100, 2260, 275, 319, 477, 601, 322, 10712, 482, 7291, 3733, 322, 3134, 4981, 275, 569, 284, 562, 907, 2064, 7291]}
{"line_number": 111, "line_type": "original", "code": "     * @since 1.2", "entropy": 1.6201171875, "is_bug_line": false, "sus_score": 0.5732895135879517, "per_token_entropy": [6.15625, 3.783203125, 1.478515625, 1.0341796875, 0.012176513671875, 0.07904052734375, 0.0023746490478515625, 0.418701171875], "tokens": [262, 319, 477, 8119, 225, 35, 32, 36]}
{"line_number": 111, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Computes the factorial of n.\n     *\n     * @param n the argument\n     * @return n!\n     * @throws ArithmeticException if the result can not be represented as an\n     *         int\n     * @since ", "entropy": 0.285888671875, "is_bug_line": false, "sus_score": 0.5732895135879517, "per_token_entropy": [0.1485595703125, 0.1376953125, 0.1689453125, 0.0285491943359375, 0.04278564453125, 0.00017964839935302734, 3.556640625, 0.41796875, 1.4599609375, 0.0014667510986328125, 0.269287109375, 0.1611328125, 0.51171875, 0.2822265625, 0.003238677978515625, 0.57275390625, 0.00037169456481933594, 0.1995849609375, 0.01258087158203125, 0.0211639404296875, 0.74658203125, 1.064453125, 0.86572265625, 0.0003161430358886719, 0.0030689239501953125, 0.018035888671875, 0.274169921875, 0.00725555419921875, 0.0219879150390625, 0.175048828125, 0.01000213623046875, 0.05682373046875, 0.58740234375, 0.00018715858459472656, 0.07525634765625, 0.7822265625, 0.018646240234375, 0.1785888671875, 0.002437591552734375, 0.0048980712890625, 0.00847625732421875, 0.020782470703125, 0.1761474609375, 0.07403564453125, 0.0005979537963867188, 0.01056671142578125, 0.58984375, 0.299560546875, 0.55615234375, 0.01190948486328125, 0.2303466796875, 0.00209808349609375], "tokens": [284, 320, 446, 1022, 275, 319, 41932, 322, 10365, 564, 432, 310, 32, 275, 319, 275, 319, 477, 753, 310, 322, 2793, 275, 319, 477, 601, 310, 19, 275, 319, 477, 5117, 47721, 984, 415, 322, 1056, 883, 646, 526, 17718, 619, 600, 275, 319, 263, 629, 275, 319, 477, 8119, 225]}
{"line_number": 57, "line_type": "original", "code": "    private static final byte  ZB = (byte)0;", "entropy": 1.3349609375, "is_bug_line": false, "sus_score": 0.5598064661026001, "per_token_entropy": [3.2109375, 6.80078125, 0.1978759765625, 0.216552734375, 3.28515625, 0.7373046875, 3.390625, 0.2734375, 0.09033203125, 0.07440185546875, 0.00146484375, 0.01132965087890625, 0.03668212890625, 0.358154296875], "tokens": [264, 945, 907, 1158, 3432, 225, 2523, 52, 280, 308, 2263, 27, 34, 45]}
{"line_number": 57, "line_type": "generated", "code": "\n     * @param b an addend", "entropy": 0.0323486328125, "is_bug_line": false, "sus_score": 0.5598064661026001, "per_token_entropy": [0.2413330078125, 0.00432586669921875, 0.0035610198974609375, 0.001277923583984375, 0.002574920654296875, 0.00415802001953125, 0.00024890899658203125, 0.001407623291015625], "tokens": [275, 319, 477, 753, 323, 600, 1015, 416]}
{"line_number": 89, "line_type": "original", "code": "     * @param y an addend", "entropy": 2.390625, "is_bug_line": false, "sus_score": 0.5595763325691223, "per_token_entropy": [6.31640625, 5.1953125, 2.181640625, 1.890625, 2.97265625, 0.50830078125, 0.052337646484375, 0.0014238357543945312], "tokens": [262, 319, 477, 753, 533, 600, 1015, 416]}
{"line_number": 89, "line_type": "generated", "code": "\n                    if (a < b) {\n                        throw new ArithmeticException(msg);\n                    }\n                } else {\n                    // negative + positive => always positive\n                    ret = b + a;\n                }\n            } else {\n                // assert a >= 0\n                if", "entropy": 0.1640625, "is_bug_line": false, "sus_score": 0.5595763325691223, "per_token_entropy": [0.230712890625, 0.24658203125, 0.024749755859375, 0.3447265625, 0.37255859375, 0.28515625, 0.1414794921875, 0.008575439453125, 0.0455322265625, 0.053619384765625, 0.005443572998046875, 0.002101898193359375, 4.649162292480469e-06, 0.045196533203125, 0.0048065185546875, 0.0121002197265625, 0.00977325439453125, 0.0009217262268066406, 0.4921875, 0.00689697265625, 0.2958984375, 0.0281524658203125, 0.0216064453125, 0.03558349609375, 0.98095703125, 0.278076171875, 0.27099609375, 1.76953125, 0.322509765625, 0.474609375, 0.076416015625, 0.1031494140625, 0.0003590583801269531, 0.1143798828125, 0.061798095703125, 0.02679443359375, 0.0006241798400878906, 0.134765625, 0.00037169456481933594, 0.0076904296875, 0.0001856088638305664, 0.0018701553344726562, 0.10400390625, 0.09356689453125, 0.1759033203125, 0.30615234375, 0.00016748905181884766, 0.25439453125, 7.450580596923828e-05, 7.510185241699219e-06, 0.2130126953125, 0.046295166015625], "tokens": [528, 415, 308, 83, 333, 323, 27, 301, 715, 1422, 537, 47721, 984, 26, 2076, 293, 528, 320, 400, 320, 813, 301, 528, 434, 11003, 474, 11557, 532, 5182, 11557, 528, 2152, 280, 323, 474, 312, 45, 400, 320, 324, 320, 813, 301, 400, 434, 1201, 312, 2377, 225, 34, 400, 415]}
{"line_number": 91, "line_type": "original", "code": "     * @throws ArithmeticException if the result can not be represented as an", "entropy": 1.068359375, "is_bug_line": false, "sus_score": 0.555740237236023, "per_token_entropy": [6.44921875, 4.08203125, 3.09375, 1.8740234375, 0.05767822265625, 0.0004699230194091797, 0.0994873046875, 0.08807373046875, 0.009002685546875, 0.03900146484375, 0.050262451171875, 0.035186767578125, 0.02587890625, 0.033111572265625, 0.09027099609375], "tokens": [262, 319, 477, 5117, 47721, 984, 415, 322, 1056, 883, 646, 526, 17718, 619, 600]}
{"line_number": 91, "line_type": "generated", "code": "\n                        if (ret >= 0) {\n                            return ret;\n                        }\n                    }\n                } else {\n                    // opposite sign\n                    // check for positive overflow\n                    if (a <= Long.MAX_VALUE + b) {\n                        ret = a + b;", "entropy": 0.1998291015625, "is_bug_line": false, "sus_score": 0.555740237236023, "per_token_entropy": [1.3955078125, 0.99072265625, 0.25341796875, 0.05853271484375, 0.133544921875, 0.00870513916015625, 2.0742416381835938e-05, 0.0307159423828125, 0.0122528076171875, 0.0950927734375, 0.56005859375, 0.0294952392578125, 0.0009589195251464844, 0.07733154296875, 0.0009636878967285156, 0.1099853515625, 0.0012454986572265625, 0.1690673828125, 0.0016117095947265625, 0.0217742919921875, 0.0181427001953125, 0.017791748046875, 0.0042266845703125, 2.6171875, 0.247802734375, 0.88427734375, 0.367919921875, 0.24658203125, 3.731250762939453e-05, 0.1339111328125, 8.177757263183594e-05, 0.001678466796875, 0.004566192626953125, 0.0005421638488769531, 1.1708984375, 0.051666259765625, 0.00017070770263671875, 3.5762786865234375e-06, 0.006511688232421875, 1.1920928955078125e-07, 1.6689300537109375e-06, 0.6328125, 0.0003833770751953125, 0.00072479248046875, 0.0008330345153808594, 0.0085601806640625, 0.0185546875, 0.0002428293228149414, 0.00045013427734375, 0.00010073184967041016, 7.033348083496094e-05, 0.00202178955078125], "tokens": [715, 415, 308, 2094, 2377, 225, 34, 27, 301, 1014, 442, 2152, 45, 715, 320, 528, 320, 400, 320, 813, 301, 528, 434, 30519, 2596, 528, 434, 1505, 436, 11557, 9973, 528, 415, 308, 83, 2511, 6359, 32, 3459, 81, 5975, 474, 323, 27, 301, 715, 2152, 280, 312, 474, 323, 45]}
{"line_number": 162, "line_type": "original", "code": "", "entropy": 4.60546875, "is_bug_line": false, "sus_score": 0.5490818619728088, "per_token_entropy": [4.60546875], "tokens": [203]}
{"line_number": 162, "line_type": "generated", "code": "\n            }\n        } else {\n            // For n > 61, the result may overflow.\n            // The best we can do is to use the same\n            // recurrence as the naive implementation,\n            // but scale up by a factor of n", "entropy": 0.46337890625, "is_bug_line": false, "sus_score": 0.5490818619728088, "per_token_entropy": [0.53076171875, 0.109375, 0.4970703125, 0.0020751953125, 0.01409912109375, 0.021148681640625, 0.06964111328125, 0.2249755859375, 0.44384765625, 0.34521484375, 0.0318603515625, 0.0019893646240234375, 0.0005145072937011719, 0.019073486328125, 0.017547607421875, 1.0576171875, 0.888671875, 0.325439453125, 0.2578125, 0.591796875, 0.257080078125, 0.7060546875, 1.4169921875, 2.689453125, 0.77099609375, 0.0004742145538330078, 0.01239013671875, 0.1925048828125, 0.0384521484375, 0.427978515625, 0.4580078125, 1.0390625, 2.283203125, 0.0002930164337158203, 1.76171875, 0.005321502685546875, 0.2305908203125, 2.044921875, 0.27783203125, 4.38690185546875e-05, 0.1253662109375, 0.1373291015625, 0.1065673828125, 0.0007939338684082031, 0.18896484375, 0.306640625, 1.1953125, 0.98876953125, 0.410888671875, 0.18798828125, 0.1234130859375, 0.255859375], "tokens": [324, 320, 291, 320, 813, 301, 324, 434, 2616, 310, 848, 225, 40, 35, 30, 322, 1056, 1631, 9973, 32, 324, 434, 886, 5273, 996, 883, 745, 438, 372, 793, 322, 2432, 324, 434, 8814, 15032, 619, 322, 5499, 661, 4736, 30, 324, 434, 1273, 5247, 973, 810, 312, 10365, 432, 310]}
{"line_number": 155, "line_type": "original", "code": "                } else {", "entropy": 3.884765625, "is_bug_line": false, "sus_score": 0.5486004948616028, "per_token_entropy": [7.015625, 5.4921875, 2.78125, 0.2490234375], "tokens": [2071, 320, 813, 301]}
{"line_number": 155, "line_type": "generated", "code": "\n        long result = 1;\n        for (int i = n - k + 1; i <= n; i++) {\n            result *= i;\n        }\n        return divideAndCheck(result, k);\n    }\n\n    /**\n     * Check if", "entropy": 0.2257080078125, "is_bug_line": false, "sus_score": 0.5486004948616028, "per_token_entropy": [0.3525390625, 0.88916015625, 0.541015625, 0.0252838134765625, 0.092041015625, 0.00039577484130859375, 0.1397705078125, 0.1441650390625, 0.259033203125, 0.022674560546875, 0.2496337890625, 0.01041412353515625, 0.003070831298828125, 0.065185546875, 0.09613037109375, 0.006351470947265625, 0.0013408660888671875, 0.0006718635559082031, 3.707408905029297e-05, 0.44091796875, 0.0028362274169921875, 0.0007753372192382812, 0.0009012222290039062, 0.003391265869140625, 0.1649169921875, 0.00386810302734375, 0.08026123046875, 0.1456298828125, 0.185546875, 0.52978515625, 0.0013561248779296875, 0.0007243156433105469, 0.9462890625, 0.007465362548828125, 0.4130859375, 0.5078125, 1.080078125, 0.37646484375, 0.28466796875, 0.00960540771484375, 0.0010967254638671875, 0.0016651153564453125, 0.031829833984375, 0.041168212890625, 0.094482421875, 0.00325775146484375, 0.330810546875, 0.189453125, 0.016998291015625, 0.00020170211791992188, 1.634765625, 1.3056640625], "tokens": [291, 1946, 1056, 280, 225, 35, 45, 291, 436, 308, 410, 595, 280, 310, 429, 831, 474, 225, 35, 45, 595, 2511, 310, 45, 595, 1987, 301, 324, 1056, 10439, 595, 45, 291, 320, 291, 442, 24910, 2185, 2140, 26, 1267, 30, 831, 293, 284, 320, 446, 1022, 275, 319, 3456, 415]}
{"line_number": 107, "line_type": "original", "code": "     * @param b an addend", "entropy": 2.140625, "is_bug_line": false, "sus_score": 0.5291770100593567, "per_token_entropy": [6.140625, 4.75390625, 1.501953125, 1.2685546875, 3.140625, 0.3037109375, 0.01088714599609375, 0.001354217529296875], "tokens": [262, 319, 477, 753, 323, 600, 1015, 416]}
{"line_number": 107, "line_type": "generated", "code": "\n                }\n            }\n        }\n        return ret;\n    }\n\n    /**\n     * Subtract two integers, checking for overflow.\n     *\n     * @param x the minuend\n     * @param y the subtrahend\n     * @return the difference <", "entropy": 0.0885009765625, "is_bug_line": false, "sus_score": 0.5291770100593567, "per_token_entropy": [0.26416015625, 0.007030487060546875, 0.047393798828125, 0.0013074874877929688, 0.0819091796875, 0.0005731582641601562, 0.32958984375, 0.01554107666015625, 0.0006442070007324219, 0.0005731582641601562, 0.07379150390625, 0.00034427642822265625, 0.165283203125, 0.0296173095703125, 0.032562255859375, 0.0001767873764038086, 2.10546875, 0.2088623046875, 0.157958984375, 0.0032749176025390625, 0.0007500648498535156, 0.0010776519775390625, 0.0947265625, 0.0022945404052734375, 0.018768310546875, 2.8967857360839844e-05, 0.0200653076171875, 5.733966827392578e-05, 0.0033321380615234375, 0.0012292861938476562, 0.034637451171875, 0.2017822265625, 0.01412200927734375, 3.0279159545898438e-05, 6.4849853515625e-05, 0.0212249755859375, 6.711483001708984e-05, 0.00022363662719726562, 0.00045180320739746094, 0.00019276142120361328, 0.0006647109985351562, 8.797645568847656e-05, 0.00458526611328125, 6.794929504394531e-06, 0.00012552738189697266, 0.00213623046875, 2.276897430419922e-05, 0.0011768341064453125, 0.0027599334716796875, 0.050140380859375, 0.58349609375, 0.01555633544921875], "tokens": [400, 320, 324, 320, 291, 320, 291, 442, 2152, 45, 284, 320, 446, 1022, 275, 319, 48588, 3134, 18670, 30, 11056, 436, 9973, 32, 275, 319, 275, 319, 477, 753, 816, 322, 1847, 103, 416, 275, 319, 477, 753, 533, 322, 1361, 359, 2371, 416, 275, 319, 477, 601, 322, 10563, 333]}
{"line_number": 153, "line_type": "original", "code": "                if (a <= Long.MAX_VALUE - b) {", "entropy": 2.166015625, "is_bug_line": false, "sus_score": 0.5282489657402039, "per_token_entropy": [6.765625, 4.265625, 0.1932373046875, 6.38671875, 2.455078125, 4.79296875, 0.00205230712890625, 0.004352569580078125, 0.0012464523315429688, 0.000476837158203125, 4.31640625, 0.958984375, 0.1041259765625, 0.06585693359375], "tokens": [2071, 415, 308, 83, 2511, 6359, 32, 3459, 81, 5975, 429, 323, 27, 301]}
{"line_number": 153, "line_type": "generated", "code": "\n        long result = 1;\n        for (int i = n - k + 1; i <= n; i++) {\n            result = mulAndCheck(result, i);\n        }\n\n        // divide by k!\n        // (n choose k", "entropy": 0.2763671875, "is_bug_line": false, "sus_score": 0.5282489657402039, "per_token_entropy": [0.796875, 1.3154296875, 0.5107421875, 0.02972412109375, 0.1309814453125, 0.0006518363952636719, 0.12054443359375, 0.158203125, 0.20361328125, 0.038543701171875, 0.315185546875, 0.007762908935546875, 0.004116058349609375, 0.0230560302734375, 0.335693359375, 0.0006709098815917969, 0.000820159912109375, 0.0006589889526367188, 2.9206275939941406e-05, 0.253173828125, 0.002223968505859375, 0.0009298324584960938, 0.0012292861938476562, 0.0036373138427734375, 0.1602783203125, 0.0042572021484375, 0.09197998046875, 0.09173583984375, 0.09735107421875, 1.1796875, 0.35888671875, 0.00896453857421875, 0.0004279613494873047, 0.0019588470458984375, 0.0011749267578125, 0.00032591819763183594, 0.0011224746704101562, 0.052734375, 0.143798828125, 0.0007486343383789062, 0.9150390625, 1.462890625, 1.3359375, 0.079833984375, 1.0146484375, 0.0031337738037109375, 0.129638671875, 1.3603515625, 1.494140625, 0.029144287109375, 0.08929443359375, 0.0030727386474609375], "tokens": [291, 1946, 1056, 280, 225, 35, 45, 291, 436, 308, 410, 595, 280, 310, 429, 831, 474, 225, 35, 45, 595, 2511, 310, 45, 595, 1987, 301, 324, 1056, 280, 17476, 2185, 2140, 26, 1267, 30, 595, 293, 291, 320, 584, 434, 24910, 810, 831, 19, 291, 434, 308, 96, 9173, 831]}
{"line_number": 1627, "line_type": "original", "code": "          sum += dp * dp;", "entropy": 2.611328125, "is_bug_line": false, "sus_score": 0.5220398902893066, "per_token_entropy": [8.9609375, 8.0078125, 0.50732421875, 0.62255859375, 0.1455078125, 0.0026416778564453125, 0.040069580078125], "tokens": [2033, 3632, 1454, 11339, 319, 11339, 45]}
{"line_number": 1627, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5220398902893066, "per_token_entropy": [], "tokens": []}
{"line_number": 114, "line_type": "original", "code": "        return addAndCheck(a, b, \"overflow: add\");", "entropy": 0.68994140625, "is_bug_line": false, "sus_score": 0.5207960605621338, "per_token_entropy": [4.171875, 2.625, 1.396484375, 0.0093994140625, 0.0020923614501953125, 0.051422119140625, 0.238037109375, 0.1690673828125, 0.1068115234375, 0.11505126953125, 0.61669921875, 0.50439453125, 0.2069091796875, 0.0175628662109375, 0.11883544921875], "tokens": [351, 442, 1015, 2185, 2140, 26, 83, 30, 323, 30, 313, 9642, 44, 1015, 724]}
{"line_number": 114, "line_type": "generated", "code": "\n    /**\n     * Multiply two integers, checking for overflow.\n     *\n     * @param x a factor\n     * @param y a factor\n     * @return the product <code>x*y</code>\n     * @throws ArithmeticException if the result", "entropy": 0.1221923828125, "is_bug_line": false, "sus_score": 0.5207960605621338, "per_token_entropy": [1.68359375, 1.02734375, 0.10205078125, 0.000823974609375, 1.9609375, 0.09185791015625, 0.609375, 0.06793212890625, 0.0009107589721679688, 0.0001704692840576172, 0.0004596710205078125, 0.004886627197265625, 0.025146484375, 0.0003399848937988281, 0.049072265625, 0.00012433528900146484, 0.00423431396484375, 0.0009813308715820312, 0.03729248046875, 0.26513671875, 0.2493896484375, 0.003662109375, 1.2159347534179688e-05, 3.123283386230469e-05, 8.571147918701172e-05, 0.00022721290588378906, 0.0034732818603515625, 0.00023615360260009766, 0.0070648193359375, 4.76837158203125e-05, 0.0010175704956054688, 0.005462646484375, 0.00966644287109375, 0.0197906494140625, 0.01526641845703125, 0.004375457763671875, 0.0009617805480957031, 0.0099639892578125, 0.061370849609375, 0.0003097057342529297, 0.00011444091796875, 4.172325134277344e-05, 0.00432586669921875, 0.004199981689453125, 0.001003265380859375, 0.00046372413635253906, 0.01331329345703125, 0.001659393310546875, 5.245208740234375e-05, 0.0028553009033203125, 7.009506225585938e-05, 0.0011157989501953125], "tokens": [284, 1022, 275, 319, 44155, 3134, 18670, 30, 11056, 436, 9973, 32, 275, 319, 275, 319, 477, 753, 816, 312, 10365, 275, 319, 477, 753, 533, 312, 10365, 275, 319, 477, 601, 322, 4054, 333, 687, 48, 106, 28, 107, 377, 687, 48, 275, 319, 477, 5117, 47721, 984, 415, 322, 1056]}
{"line_number": 90, "line_type": "original", "code": "     * @return the sum <code>x+y</code>", "entropy": 1.4697265625, "is_bug_line": false, "sus_score": 0.5191842317581177, "per_token_entropy": [6.84375, 4.3203125, 1.4365234375, 3.203125, 0.223876953125, 0.08380126953125, 0.1092529296875, 0.01297760009765625, 0.0038204193115234375, 5.32421875, 0.2484130859375, 0.001861572265625, 0.0041656494140625, 0.0009708404541015625, 0.232666015625], "tokens": [262, 319, 477, 601, 322, 3632, 333, 687, 48, 106, 29, 107, 377, 687, 48]}
{"line_number": 90, "line_type": "generated", "code": "\n                        ret = a + b;\n                    } else {\n                        throw new ArithmeticException(msg);\n                    }\n                } else {\n                    // symmetric case\n                    ret = a + b;\n                }\n            } else {\n                // assert a >= 0\n                if (", "entropy": 0.140625, "is_bug_line": false, "sus_score": 0.5191842317581177, "per_token_entropy": [0.205810546875, 0.80859375, 0.004787445068359375, 0.16064453125, 0.033966064453125, 0.00019848346710205078, 0.005157470703125, 0.1767578125, 0.00104522705078125, 0.1016845703125, 0.005054473876953125, 0.1103515625, 0.03497314453125, 0.00592803955078125, 0.004154205322265625, 2.0265579223632812e-06, 0.04638671875, 0.004917144775390625, 0.00897216796875, 0.00893402099609375, 0.00186920166015625, 0.050323486328125, 0.0002663135528564453, 0.003414154052734375, 0.00719451904296875, 0.06585693359375, 0.0207672119140625, 1.6103515625, 1.2744140625, 0.650390625, 0.00832366943359375, 7.843971252441406e-05, 0.33544921875, 0.0037689208984375, 0.0013065338134765625, 0.001888275146484375, 0.6376953125, 0.0006008148193359375, 0.017730712890625, 0.0005292892456054688, 0.0016813278198242188, 0.093505859375, 0.02655029296875, 0.2880859375, 0.1396484375, 0.0003459453582763672, 0.17138671875, 0.00011789798736572266, 8.106231689453125e-06, 0.138916015625, 0.0310821533203125, 0.0002887248992919922], "tokens": [715, 2152, 280, 312, 474, 323, 45, 528, 320, 813, 301, 715, 1422, 537, 47721, 984, 26, 2076, 293, 528, 320, 400, 320, 813, 301, 528, 434, 37038, 1135, 528, 2152, 280, 312, 474, 323, 45, 400, 320, 324, 320, 813, 301, 400, 434, 1201, 312, 2377, 225, 34, 400, 415, 308]}
{"line_number": 56, "line_type": "original", "code": "    /** 0.0 cast as a byte. */", "entropy": 1.578125, "is_bug_line": false, "sus_score": 0.5111410021781921, "per_token_entropy": [4.7421875, 2.5859375, 6.234375, 0.9287109375, 1.8525390625, 0.1595458984375, 0.160888671875, 0.031982421875, 0.0650634765625, 1.9609375, 0.033935546875, 0.1817626953125], "tokens": [264, 1022, 225, 34, 32, 34, 9936, 619, 312, 3432, 32, 569]}
{"line_number": 56, "line_type": "generated", "code": "\n     * @param x an addend\n     * @param y an addend\n     * @return the sum <code>x+y</code>\n     * @throws ArithmeticException if the result can not be represented as a long\n     * @since ", "entropy": 0.02996826171875, "is_bug_line": false, "sus_score": 0.5111410021781921, "per_token_entropy": [0.1080322265625, 0.0025272369384765625, 0.0684814453125, 0.002788543701171875, 0.025146484375, 0.039276123046875, 0.0017213821411132812, 0.00018024444580078125, 0.0022869110107421875, 6.985664367675781e-05, 0.00014579296112060547, 9.310245513916016e-05, 6.92605972290039e-05, 0.0008511543273925781, 0.00020372867584228516, 7.271766662597656e-05, 0.00910186767578125, 3.612041473388672e-05, 0.00228118896484375, 0.005893707275390625, 0.0017213821411132812, 0.0017185211181640625, 0.0053558349609375, 0.0157318115234375, 0.0006413459777832031, 0.0006413459777832031, 0.0011758804321289062, 0.00010907649993896484, 0.0003731250762939453, 0.000675201416015625, 0.00472259521484375, 0.01103973388671875, 0.0005860328674316406, 0.0006327629089355469, 0.01456451416015625, 0.0009307861328125, 9.298324584960938e-06, 0.0017614364624023438, 0.00022470951080322266, 0.0013027191162109375, 0.0032806396484375, 0.000186920166015625, 0.0032138824462890625, 0.0004360675811767578, 0.0007061958312988281, 0.11712646484375, 0.71484375, 0.0250091552734375, 0.2490234375, 0.1019287109375, 0.00946807861328125, 0.000202178955078125], "tokens": [275, 319, 477, 753, 816, 600, 1015, 416, 275, 319, 477, 753, 533, 600, 1015, 416, 275, 319, 477, 601, 322, 3632, 333, 687, 48, 106, 29, 107, 377, 687, 48, 275, 319, 477, 5117, 47721, 984, 415, 322, 1056, 883, 646, 526, 17718, 619, 312, 1946, 275, 319, 477, 8119, 225]}
{"line_number": 112, "line_type": "original", "code": "     */", "entropy": 3.99609375, "is_bug_line": false, "sus_score": 0.509934663772583, "per_token_entropy": [6.43359375, 1.5595703125], "tokens": [262, 569]}
{"line_number": 112, "line_type": "generated", "code": "\n\n    /**\n     * Multiply two long integers, checking for overflow.\n     *\n     * @param a an multiplier\n     * @param b an multiplier\n     * @return the product <code>a*b</code>\n     * @throws ArithmeticException if the", "entropy": 0.1331787109375, "is_bug_line": false, "sus_score": 0.509934663772583, "per_token_entropy": [0.67529296875, 0.0288543701171875, 0.0311126708984375, 0.0001633167266845703, 1.69921875, 0.048797607421875, 1.5478515625, 0.0655517578125, 0.01209259033203125, 0.0010118484497070312, 0.0002503395080566406, 0.00019621849060058594, 0.006305694580078125, 0.015655517578125, 0.0003540515899658203, 0.0465087890625, 5.5789947509765625e-05, 0.006557464599609375, 0.0009107589721679688, 0.475830078125, 0.5068359375, 0.85107421875, 0.004978179931640625, 1.0848045349121094e-05, 4.208087921142578e-05, 0.0001417398452758789, 0.000995635986328125, 0.2568359375, 0.3076171875, 0.0024929046630859375, 4.100799560546875e-05, 0.0022602081298828125, 0.0667724609375, 0.00357818603515625, 0.0755615234375, 0.02423095703125, 0.002117156982421875, 0.0008573532104492188, 0.00817108154296875, 0.114013671875, 0.0009093284606933594, 0.00045609474182128906, 0.00016999244689941406, 0.00441741943359375, 0.0099945068359375, 0.00044655799865722656, 0.0003705024719238281, 0.0150146484375, 0.001617431640625, 4.303455352783203e-05, 0.002574920654296875, 0.0002321004867553711], "tokens": [446, 1022, 275, 319, 44155, 3134, 1946, 18670, 30, 11056, 436, 9973, 32, 275, 319, 275, 319, 477, 753, 312, 600, 30266, 275, 319, 477, 753, 323, 600, 30266, 275, 319, 477, 601, 322, 4054, 333, 687, 48, 83, 28, 84, 377, 687, 48, 275, 319, 477, 5117, 47721, 984, 415, 322]}
{"line_number": 108, "line_type": "original", "code": "     * @return the sum <code>a+b</code>", "entropy": 1.1826171875, "is_bug_line": false, "sus_score": 0.5055720210075378, "per_token_entropy": [5.86328125, 6.015625, 1.244140625, 2.177734375, 0.7509765625, 0.84228515625, 0.1470947265625, 0.0135040283203125, 0.004642486572265625, 0.54736328125, 0.0369873046875, 0.0037708282470703125, 0.006656646728515625, 0.007190704345703125, 0.066162109375], "tokens": [262, 319, 477, 601, 322, 3632, 333, 687, 48, 83, 29, 84, 377, 687, 48]}
{"line_number": 108, "line_type": "generated", "code": "\n            }\n        }\n        return ret;\n    }\n\n    /**\n     * Returns the sign of the argument; zero if the argument is zero,\n     * 1.0 if the argument is positive, -1.0 if the argument is negative.\n     *", "entropy": 0.197265625, "is_bug_line": false, "sus_score": 0.5055720210075378, "per_token_entropy": [0.201171875, 0.014801025390625, 0.08892822265625, 0.0009813308715820312, 0.34619140625, 0.01454925537109375, 0.0011148452758789062, 0.0016889572143554688, 0.06695556640625, 0.0005369186401367188, 0.202880859375, 0.02752685546875, 0.03302001953125, 0.00019037723541259766, 2.20703125, 0.372802734375, 1.83984375, 0.796875, 0.87109375, 0.169677734375, 0.050079345703125, 0.06658935546875, 0.009429931640625, 0.09906005859375, 0.00022161006927490234, 0.006641387939453125, 0.223388671875, 0.037445068359375, 0.280517578125, 0.00025272369384765625, 0.302490234375, 0.00485992431640625, 0.000415802001953125, 7.152557373046875e-06, 0.72216796875, 0.00531005859375, 0.00023353099822998047, 0.00019752979278564453, 1.056640625, 0.0009336471557617188, 0.002986907958984375, 0.000286102294921875, 5.0067901611328125e-06, 7.033348083496094e-06, 0.0010061264038085938, 0.01495361328125, 0.00020968914031982422, 0.00310516357421875, 0.06439208984375, 0.007549285888671875, 0.02825927734375, 0.0099945068359375], "tokens": [324, 320, 291, 320, 291, 442, 2152, 45, 284, 320, 446, 1022, 275, 319, 3759, 322, 2596, 432, 322, 2793, 45, 5934, 415, 322, 2793, 438, 5934, 30, 275, 319, 225, 35, 32, 34, 415, 322, 2793, 438, 11557, 30, 429, 35, 32, 34, 415, 322, 2793, 438, 11003, 32, 275, 319]}
{"line_number": 47, "line_type": "original", "code": "    /** -1.0 cast as a short. */", "entropy": 1.80078125, "is_bug_line": false, "sus_score": 0.4966945946216583, "per_token_entropy": [2.67578125, 3.732421875, 10.984375, 0.246337890625, 0.57666015625, 0.023223876953125, 0.19189453125, 0.224853515625, 0.1328125, 2.763671875, 0.034210205078125, 0.022186279296875], "tokens": [264, 1022, 429, 35, 32, 34, 9936, 619, 312, 4504, 32, 569]}
{"line_number": 47, "line_type": "generated", "code": "\n    /**\n     * Add two long integers, checking for overflow.\n     *\n     * @param x an addend\n     * @param y an addend\n     * @return the sum <code>x+y</code>\n     * @throws ArithmeticException", "entropy": 0.0328369140625, "is_bug_line": false, "sus_score": 0.4966945946216583, "per_token_entropy": [0.2235107421875, 0.830078125, 0.0269775390625, 7.975101470947266e-05, 0.08355712890625, 0.027191162109375, 0.09173583984375, 0.286376953125, 0.006679534912109375, 0.00030922889709472656, 7.402896881103516e-05, 0.00016820430755615234, 0.00438690185546875, 0.0028285980224609375, 5.066394805908203e-05, 0.052459716796875, 8.702278137207031e-06, 0.0016222000122070312, 0.00028133392333984375, 0.01605224609375, 0.016998291015625, 0.0008077621459960938, 0.0001348257064819336, 0.0005602836608886719, 1.3113021850585938e-06, 3.8504600524902344e-05, 3.921985626220703e-05, 2.8133392333984375e-05, 0.0009765625, 0.00021457672119140625, 8.976459503173828e-05, 0.00019872188568115234, 1.823902130126953e-05, 0.00012362003326416016, 0.0029315948486328125, 0.0006480216979980469, 0.0008807182312011719, 0.0034275054931640625, 0.004364013671875, 0.000247955322265625, 0.0004105567932128906, 0.0006742477416992188, 4.410743713378906e-05, 0.00014650821685791016, 0.00036263465881347656, 0.004024505615234375, 0.0011320114135742188, 0.00043487548828125, 0.00019609928131103516, 0.0128326416015625, 0.0008473396301269531, 9.059906005859375e-06], "tokens": [284, 1022, 275, 319, 2222, 3134, 1946, 18670, 30, 11056, 436, 9973, 32, 275, 319, 275, 319, 477, 753, 816, 600, 1015, 416, 275, 319, 477, 753, 533, 600, 1015, 416, 275, 319, 477, 601, 322, 3632, 333, 687, 48, 106, 29, 107, 377, 687, 48, 275, 319, 477, 5117, 47721, 984]}
{"line_number": 115, "line_type": "original", "code": "    }", "entropy": 6.69921875, "is_bug_line": false, "sus_score": 0.4922882318496704, "per_token_entropy": [4.3359375, 9.0625], "tokens": [264, 320]}
{"line_number": 115, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.4922882318496704, "per_token_entropy": [], "tokens": []}
{"line_number": 1624, "line_type": "original", "code": "      int sum = 0;", "entropy": 1.607421875, "is_bug_line": true, "sus_score": 0.48959168791770935, "per_token_entropy": [5.32421875, 4.23046875, 1.560546875, 0.061614990234375, 0.0179290771484375, 0.0014772415161132812, 0.05706787109375], "tokens": [647, 629, 3632, 280, 225, 34, 45]}
{"line_number": 1624, "line_type": "generated", "code": "\n    /**\n     * Calculates the Manhattan distance between two points.\n     *\n     * @param p1 the first point\n     * @param p2 the second point\n     * @return the Manhattan distance between the two points\n     */\n   ", "entropy": 0.09344482421875, "is_bug_line": true, "sus_score": 0.48959168791770935, "per_token_entropy": [0.70849609375, 0.2919921875, 0.05426025390625, 0.0009083747863769531, 0.58935546875, 0.0806884765625, 1.9658203125, 0.0233612060546875, 0.0005803108215332031, 0.00014030933380126953, 0.69189453125, 0.101806640625, 0.018280029296875, 0.0111846923828125, 0.07037353515625, 0.038848876953125, 0.0009412765502929688, 0.049468994140625, 0.0002720355987548828, 0.003658294677734375, 0.0011949539184570312, 0.0254364013671875, 0.0010957717895507812, 0.00640106201171875, 0.0004055500030517578, 0.0004749298095703125, 0.00133514404296875, 5.125999450683594e-06, 2.5510787963867188e-05, 0.00010895729064941406, 5.8531761169433594e-05, 4.589557647705078e-05, 7.700920104980469e-05, 0.0003807544708251953, 0.00014925003051757812, 0.0005402565002441406, 0.00017774105072021484, 0.0011110305786132812, 0.00244903564453125, 0.003482818603515625, 0.03399658203125, 0.00226593017578125, 7.212162017822266e-05, 0.00022912025451660156, 0.00806427001953125, 0.01007080078125, 0.00493621826171875, 0.004047393798828125, 0.0014505386352539062, 0.00933074951171875, 0.0154266357421875, 0.0218658447265625], "tokens": [284, 1022, 275, 319, 42236, 322, 4784, 90, 3131, 278, 7291, 3733, 3134, 4981, 32, 275, 319, 275, 319, 477, 753, 298, 35, 322, 1932, 2260, 275, 319, 477, 753, 298, 36, 322, 3100, 2260, 275, 319, 477, 601, 322, 4784, 90, 3131, 278, 7291, 3733, 322, 3134, 4981, 275, 569, 284]}
