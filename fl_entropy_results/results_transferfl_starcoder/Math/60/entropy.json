{"line_number": 152, "line_type": "original", "code": "    /**", "entropy": 6.1640625, "is_bug_line": false, "sus_score": 0.703234851360321, "per_token_entropy": [6.4140625, 5.91796875], "tokens": [264, 1022]}
{"line_number": 152, "line_type": "generated", "code": "\n            ret = Double.NEGATIVE_INFINITY;\n        } else {\n            ret = mean - standardDeviation * FastMath.sqrt(2) * erfinv(2 * p - 1);\n        }\n\n        return ret;\n    }\n\n    /**\n    ", "entropy": 0.146484375, "is_bug_line": false, "sus_score": 0.703234851360321, "per_token_entropy": [0.1412353515625, 0.299072265625, 0.0034637451171875, 1.1982421875, 0.00041747093200683594, 0.0032863616943359375, 1.6808509826660156e-05, 2.86102294921875e-06, 0.03619384765625, 0.2142333984375, 0.001842498779296875, 0.0219573974609375, 0.045379638671875, 0.180419921875, 0.097412109375, 0.0019779205322265625, 0.1533203125, 0.04974365234375, 0.88427734375, 0.0032253265380859375, 5.233287811279297e-05, 0.033843994140625, 0.279296875, 5.125999450683594e-05, 0.00019216537475585938, 0.019256591796875, 0.0413818359375, 0.08599853515625, 0.806640625, 0.03656005859375, 1.5947265625, 0.2186279296875, 0.008026123046875, 0.073486328125, 0.059844970703125, 0.041595458984375, 0.040863037109375, 0.00394439697265625, 0.0157623291015625, 0.00014400482177734375, 0.035125732421875, 0.10791015625, 0.0011425018310546875, 0.5400390625, 0.09661865234375, 0.0019130706787109375, 0.0024585723876953125, 0.04608154296875, 0.0010013580322265625, 0.0799560546875, 0.0045166015625, 0.004871368408203125], "tokens": [324, 2152, 280, 6934, 32, 43518, 81, 36069, 45, 291, 320, 813, 301, 324, 2152, 280, 5651, 429, 6216, 685, 17029, 319, 15938, 5717, 32, 8663, 26, 36, 27, 319, 5097, 3507, 104, 26, 36, 319, 298, 429, 225, 35, 293, 291, 320, 584, 442, 2152, 45, 284, 320, 446, 1022, 275]}
{"line_number": 3491, "line_type": "original", "code": "", "entropy": 0.2425537109375, "is_bug_line": false, "sus_score": 0.6952021718025208, "per_token_entropy": [0.2425537109375], "tokens": [203]}
{"line_number": 3491, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6952021718025208, "per_token_entropy": [], "tokens": []}
{"line_number": 149, "line_type": "original", "code": "        return solverAbsoluteAccuracy;", "entropy": 1.9599609375, "is_bug_line": false, "sus_score": 0.6934364438056946, "per_token_entropy": [4.4765625, 0.469482421875, 6.51171875, 0.05035400390625, 0.004566192626953125, 0.241455078125], "tokens": [351, 442, 17821, 12043, 26201, 45]}
{"line_number": 149, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Access the domain value upper bound, based on {@code p}, used to\n     * bracket a CDF root.  This method is used by\n     * {@link #inverseCumulativeProbability(double)} to find critical values.", "entropy": 0.00909423828125, "is_bug_line": false, "sus_score": 0.6934364438056946, "per_token_entropy": [0.35302734375, 0.0032253265380859375, 0.048004150390625, 0.00350189208984375, 0.006103515625, 0.00013709068298339844, 0.0110321044921875, 2.586841583251953e-05, 0.00018858909606933594, 0.0066070556640625, 0.0004410743713378906, 5.91278076171875e-05, 0.0001882314682006836, 1.2159347534179688e-05, 7.152557373046875e-07, 0.00016307830810546875, 7.009506225585938e-05, 0.00012826919555664062, 1.049041748046875e-05, 4.112720489501953e-05, 1.4901161193847656e-05, 0.00020074844360351562, 6.92605972290039e-05, 0.00021791458129882812, 4.76837158203125e-06, 3.039836883544922e-05, 3.5762786865234375e-07, 3.2186508178710938e-06, 7.3909759521484375e-06, 0.031158447265625, 0.00021028518676757812, 6.866455078125e-05, 6.67572021484375e-05, 5.221366882324219e-05, 0.00023746490478515625, 0.0011339187622070312, 0.00029349327087402344, 0.00022995471954345703, 1.9073486328125e-06, 0.00024199485778808594, 0.0001857280731201172, 2.086162567138672e-05, 1.33514404296875e-05, 1.7642974853515625e-05, 2.658367156982422e-05, 0.0002053976058959961, 0.0013532638549804688, 0.0001125335693359375, 7.033348083496094e-06, 0.0006585121154785156, 0.00302886962890625, 0.00012803077697753906], "tokens": [284, 320, 446, 1022, 275, 319, 8258, 322, 5880, 786, 8342, 5085, 30, 4122, 544, 3088, 687, 298, 835, 1654, 372, 275, 319, 33828, 312, 390, 3698, 3051, 32, 225, 1348, 1411, 438, 1654, 810, 275, 319, 3088, 1204, 588, 18139, 53, 10318, 35567, 26, 2627, 4370, 372, 2290, 18896, 2078, 32]}
{"line_number": 51, "line_type": "original", "code": "    private final double solverAbsoluteAccuracy;", "entropy": 1.37109375, "is_bug_line": false, "sus_score": 0.6929892301559448, "per_token_entropy": [3.34375, 4.72265625, 1.900390625, 0.0650634765625, 0.80126953125, 0.0243988037109375, 1.1086463928222656e-05, 0.11016845703125], "tokens": [264, 945, 1158, 2064, 17821, 12043, 26201, 45]}
{"line_number": 51, "line_type": "generated", "code": "\n\n    /**\n     * {@inheritDoc}\n     */\n    public double getStandardDeviation() {\n        return standardDeviation;\n    }\n\n    /**\n     * {@inheritDoc}\n     *\n     * For mean = 0 and standard deviation = 1, the value of", "entropy": 0.2020263671875, "is_bug_line": false, "sus_score": 0.6929892301559448, "per_token_entropy": [0.48388671875, 0.04376220703125, 0.0218048095703125, 0.00012612342834472656, 0.10552978515625, 0.00028967857360839844, 0.00024771690368652344, 0.00396728515625, 0.094482421875, 0.161376953125, 0.032196044921875, 0.0050506591796875, 0.2479248046875, 0.44091796875, 3.457069396972656e-05, 1.7404556274414062e-05, 0.042633056640625, 0.001964569091796875, 0.0406494140625, 0.00046896934509277344, 0.0005350112915039062, 9.775161743164062e-06, 1.1920928955078125e-07, 0.00045228004455566406, 0.07427978515625, 0.00035953521728515625, 0.136474609375, 0.0146484375, 0.0162200927734375, 0.002666473388671875, 0.1627197265625, 0.0003414154052734375, 0.00028443336486816406, 0.004619598388671875, 1.1474609375, 0.2467041015625, 0.00588226318359375, 0.5029296875, 0.9482421875, 1.958984375, 0.1097412109375, 0.00472259521484375, 0.045074462890625, 0.156982421875, 0.05804443359375, 0.022979736328125, 0.0022106170654296875, 0.001964569091796875, 0.1414794921875, 0.423095703125, 1.9775390625, 0.611328125], "tokens": [446, 1022, 275, 319, 3088, 18446, 111, 275, 569, 284, 562, 2064, 622, 8090, 685, 17029, 346, 301, 291, 442, 6216, 685, 17029, 45, 284, 320, 446, 1022, 275, 319, 3088, 18446, 111, 275, 319, 275, 319, 2616, 5651, 280, 225, 34, 461, 6216, 33809, 280, 225, 35, 30, 322, 786, 432]}
{"line_number": 653, "line_type": "original", "code": "", "entropy": 0.2425537109375, "is_bug_line": false, "sus_score": 0.6912097334861755, "per_token_entropy": [0.2425537109375], "tokens": [203]}
{"line_number": 653, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6912097334861755, "per_token_entropy": [], "tokens": []}
{"line_number": 151, "line_type": "original", "code": "", "entropy": 3.5234375, "is_bug_line": false, "sus_score": 0.6908198595046997, "per_token_entropy": [3.5234375], "tokens": [203]}
{"line_number": 151, "line_type": "generated", "code": "\n        ret = mean - 20 * standardDeviation;", "entropy": 0.41162109375, "is_bug_line": false, "sus_score": 0.6908198595046997, "per_token_entropy": [0.64697265625, 1.5869140625, 0.00473785400390625, 0.79150390625, 0.04931640625, 0.5810546875, 1.3994140625, 0.0633544921875, 0.1597900390625, 0.01488494873046875, 5.555152893066406e-05, 2.9802322387695312e-06, 0.052490234375], "tokens": [291, 2152, 280, 5651, 429, 225, 36, 34, 319, 6216, 685, 17029, 45]}
{"line_number": 153, "line_type": "original", "code": "     * For this distribution, X, this method returns the critical point", "entropy": 2.609375, "is_bug_line": false, "sus_score": 0.6862987875938416, "per_token_entropy": [6.3359375, 4.71875, 5.3671875, 2.31640625, 0.1461181640625, 0.12481689453125, 3.978515625, 0.1226806640625, 0.0169219970703125, 0.02825927734375, 0.1751708984375, 3.564453125, 5.26953125, 4.359375], "tokens": [262, 319, 2616, 458, 7433, 30, 1593, 30, 458, 1411, 3217, 322, 18896, 2260]}
{"line_number": 153, "line_type": "generated", "code": "\n        } else {\n            ret = Double.MAX_VALUE;", "entropy": 0.05364990234375, "is_bug_line": false, "sus_score": 0.6862987875938416, "per_token_entropy": [0.296630859375, 0.00482940673828125, 0.016204833984375, 0.0240631103515625, 0.043365478515625, 0.01605224609375, 0.0012121200561523438, 0.263427734375, 4.3392181396484375e-05, 0.0282440185546875, 5.0067901611328125e-06, 0.00015842914581298828, 0.0030879974365234375], "tokens": [291, 320, 813, 301, 324, 2152, 280, 6934, 32, 3459, 81, 5975, 45]}
{"line_number": 127, "line_type": "original", "code": "        return 0.5 * (1.0 + Erf.erf((dev) /", "entropy": 1.3515625, "is_bug_line": true, "sus_score": 0.6809147000312805, "per_token_entropy": [4.2734375, 1.8271484375, 3.837890625, 0.6748046875, 0.47412109375, 0.386962890625, 0.126708984375, 1.6279296875, 2.09375, 0.900390625, 0.01482391357421875, 0.2288818359375, 4.140625, 0.1588134765625, 0.00174713134765625, 0.00801849365234375, 0.0122222900390625, 1.6123046875, 2.111328125, 3.8359375, 0.0303497314453125], "tokens": [351, 442, 225, 34, 32, 39, 319, 308, 35, 32, 34, 474, 516, 4918, 32, 265, 88, 1162, 1902, 27, 517]}
{"line_number": 127, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": true, "sus_score": 0.6809147000312805, "per_token_entropy": [], "tokens": []}
{"line_number": 86, "line_type": "original", "code": "     */", "entropy": 7.0, "is_bug_line": false, "sus_score": 0.6788671612739563, "per_token_entropy": [6.7265625, 7.26953125], "tokens": [262, 569]}
{"line_number": 86, "line_type": "generated", "code": "\n            }\n        }\n    }\n\n    /**\n     * {@inheritDoc}\n     *\n     * For this distribution, {@code X}, this method returns\n     * {@code P(X < lower)}.\n     *\n     * @param lower Lower bound.\n     * @return", "entropy": 0.2271728515625, "is_bug_line": false, "sus_score": 0.6788671612739563, "per_token_entropy": [0.3662109375, 0.005786895751953125, 0.08489990234375, 0.001293182373046875, 0.14697265625, 0.001918792724609375, 0.1009521484375, 0.0227813720703125, 0.036376953125, 6.29425048828125e-05, 0.9580078125, 0.0010499954223632812, 0.0005502700805664062, 0.023529052734375, 1.0537109375, 0.390869140625, 0.00333404541015625, 0.73486328125, 0.732421875, 0.023834228515625, 0.1888427734375, 0.47607421875, 0.0002263784408569336, 0.1212158203125, 0.0219268798828125, 0.3046875, 0.0027828216552734375, 0.0194854736328125, 0.298095703125, 3.719329833984375e-05, 0.043792724609375, 7.843971252441406e-05, 0.062255859375, 0.0037078857421875, 0.95703125, 0.463623046875, 1.58984375, 0.77587890625, 0.126708984375, 0.33984375, 0.18505859375, 0.024749755859375, 0.124755859375, 0.050262451171875, 0.042083740234375, 0.053619384765625, 0.09149169921875, 0.73388671875, 0.006862640380859375, 0.0009870529174804688, 0.0010080337524414062, 0.009857177734375], "tokens": [324, 320, 291, 320, 284, 320, 446, 1022, 275, 319, 3088, 18446, 111, 275, 319, 275, 319, 2616, 458, 7433, 30, 3088, 687, 1593, 835, 458, 1411, 3217, 275, 319, 3088, 687, 447, 26, 74, 333, 7216, 31842, 275, 319, 275, 319, 477, 753, 7216, 35245, 5085, 32, 275, 319, 477, 601]}
{"line_number": 253, "line_type": "original", "code": "}", "entropy": 5.75, "is_bug_line": false, "sus_score": 0.6767135858535767, "per_token_entropy": [5.75], "tokens": [111]}
{"line_number": 253, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6767135858535767, "per_token_entropy": [], "tokens": []}
{"line_number": 130, "line_type": "original", "code": "            if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38", "entropy": 2.404296875, "is_bug_line": true, "sus_score": 0.6747117042541504, "per_token_entropy": [5.5234375, 3.046875, 0.240478515625, 2.171875, 0.94580078125, 3.0546875, 0.35107421875, 0.09246826171875, 0.1922607421875, 1.796875, 0.287841796875, 0.07476806640625, 0.155029296875, 0.003265380859375, 0.0001176595687866211, 0.1573486328125, 0.1370849609375, 5.546875, 11.1875, 1.6513671875, 0.291259765625, 0.01629638671875, 2.82421875, 11.1015625, 0.245849609375, 9.4296875, 2.078125, 3.21875, 3.927734375], "tokens": [1468, 415, 308, 106, 333, 308, 6009, 429, 225, 36, 34, 319, 6216, 685, 17029, 490, 301, 434, 33090, 225, 35, 32, 39, 46882, 101, 821, 225, 37, 42]}
{"line_number": 130, "line_type": "generated", "code": "\n     * @return a random value.\n     */\n    @Override\n    public double sample() {\n        return randomData.nextGaussian() * standardDeviation + mean;\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public double[]", "entropy": 0.16943359375, "is_bug_line": true, "sus_score": 0.6747117042541504, "per_token_entropy": [0.75830078125, 0.16845703125, 0.390869140625, 0.0285491943359375, 0.368896484375, 0.002017974853515625, 0.002971649169921875, 0.088134765625, 0.08172607421875, 0.69091796875, 0.04345703125, 0.237548828125, 0.0020751953125, 0.01255035400390625, 0.049407958984375, 0.1292724609375, 0.005535125732421875, 0.0082244873046875, 0.0273895263671875, 0.1529541015625, 0.461669921875, 0.54296875, 0.020538330078125, 0.0195465087890625, 0.00792694091796875, 0.00749969482421875, 0.2900390625, 0.0036220550537109375, 0.01299285888671875, 1.0728836059570312e-05, 3.5762786865234375e-07, 0.01593017578125, 0.01145172119140625, 0.0028400421142578125, 0.052886962890625, 0.001949310302734375, 0.377685546875, 0.0814208984375, 0.04718017578125, 6.496906280517578e-05, 1.630859375, 0.0028896331787109375, 0.0010499954223632812, 0.01300811767578125, 0.377197265625, 0.0231781005859375, 0.096435546875, 0.0007834434509277344, 0.009552001953125, 0.11376953125, 0.61328125, 0.7265625], "tokens": [275, 319, 477, 601, 312, 3995, 786, 32, 275, 569, 284, 477, 1788, 284, 562, 2064, 3964, 346, 301, 291, 442, 3995, 750, 32, 1978, 33449, 346, 319, 6216, 685, 17029, 474, 5651, 45, 284, 320, 446, 1022, 275, 319, 3088, 18446, 111, 275, 569, 284, 477, 1788, 284, 562, 2064, 1178]}
{"line_number": 648, "line_type": "original", "code": "", "entropy": 0.2425537109375, "is_bug_line": false, "sus_score": 0.6742562055587769, "per_token_entropy": [0.2425537109375], "tokens": [203]}
{"line_number": 648, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6742562055587769, "per_token_entropy": [], "tokens": []}
{"line_number": 138, "line_type": "original", "code": "    }", "entropy": 3.3515625, "is_bug_line": false, "sus_score": 0.6731956601142883, "per_token_entropy": [3.80859375, 2.89453125], "tokens": [264, 320]}
{"line_number": 138, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6731956601142883, "per_token_entropy": [], "tokens": []}
{"line_number": 173, "line_type": "original", "code": "        }", "entropy": 1.0712890625, "is_bug_line": false, "sus_score": 0.6713396310806274, "per_token_entropy": [1.91015625, 0.232177734375], "tokens": [351, 320]}
{"line_number": 173, "line_type": "generated", "code": "\n            ret = mean;\n        } else {\n            ret = Double.MAX_VALUE;\n        }\n\n        return ret;\n    }\n\n    /**\n     * For this distribution, X, this method returns {@code log(P(X <= x))},\n     *", "entropy": 0.129150390625, "is_bug_line": false, "sus_score": 0.6713396310806274, "per_token_entropy": [0.75439453125, 0.0426025390625, 0.001102447509765625, 0.08355712890625, 0.1571044921875, 0.051849365234375, 0.0009531974792480469, 0.0019989013671875, 0.005115509033203125, 0.061309814453125, 0.0029277801513671875, 0.0005397796630859375, 0.01045989990234375, 1.537799835205078e-05, 0.01398468017578125, 3.5762786865234375e-06, 1.9311904907226562e-05, 0.0017108917236328125, 0.0186004638671875, 0.0006208419799804688, 0.0302276611328125, 0.001171112060546875, 0.00020563602447509766, 0.00014829635620117188, 0.0811767578125, 0.0013275146484375, 0.5, 0.103271484375, 0.0133819580078125, 0.00014150142669677734, 2.005859375, 0.59912109375, 0.06842041015625, 0.010986328125, 0.1378173828125, 0.0012712478637695312, 0.0014333724975585938, 0.0027866363525390625, 0.0033721923828125, 0.3525390625, 9.989738464355469e-05, 0.2471923828125, 0.00472259521484375, 0.0272064208984375, 0.0001595020294189453, 0.0006690025329589844, 0.857421875, 0.0029296875, 0.01088714599609375, 0.2392578125, 0.2001953125, 2.944469451904297e-05], "tokens": [324, 2152, 280, 5651, 45, 291, 320, 813, 301, 324, 2152, 280, 6934, 32, 3459, 81, 5975, 45, 291, 320, 584, 442, 2152, 45, 284, 320, 446, 1022, 275, 319, 2616, 458, 7433, 30, 1593, 30, 458, 1411, 3217, 3088, 687, 1245, 26, 66, 26, 74, 2511, 816, 490, 835, 275, 319]}
{"line_number": 267, "line_type": "original", "code": "", "entropy": 0.2425537109375, "is_bug_line": false, "sus_score": 0.6709553599357605, "per_token_entropy": [0.2425537109375], "tokens": [203]}
{"line_number": 267, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6709553599357605, "per_token_entropy": [], "tokens": []}
{"line_number": 143, "line_type": "original", "code": "     *", "entropy": 2.689453125, "is_bug_line": false, "sus_score": 0.6706079244613647, "per_token_entropy": [5.36328125, 0.0160980224609375], "tokens": [262, 319]}
{"line_number": 143, "line_type": "generated", "code": "\n     * @param p the desired probability for the critical value\n     * @return domain value lower bound, i.e. {@code P(X < x) = p}\n     * @throws OutOfRangeException if {@code p} is not a", "entropy": 0.1610107421875, "is_bug_line": false, "sus_score": 0.6706079244613647, "per_token_entropy": [0.1290283203125, 0.00201416015625, 1.2265625, 0.026947021484375, 0.0004668235778808594, 0.65234375, 0.376220703125, 0.00333404541015625, 0.113037109375, 0.0019073486328125, 0.254638671875, 0.0007433891296386719, 0.0158843994140625, 5.829334259033203e-05, 0.0002846717834472656, 0.0660400390625, 0.214599609375, 0.00833892822265625, 0.232177734375, 0.0004432201385498047, 0.0218048095703125, 0.431396484375, 0.0036029815673828125, 0.001651763916015625, 0.033447265625, 1.4892578125, 2.4318695068359375e-05, 0.2025146484375, 0.0005712509155273438, 0.00037288665771484375, 0.0101318359375, 1.015625, 0.02685546875, 0.004711151123046875, 0.00032138824462890625, 0.255859375, 0.0035266876220703125, 0.053466796875, 0.00244140625, 0.043853759765625, 1.2744140625, 5.602836608886719e-06, 0.0010538101196289062, 7.104873657226562e-05, 0.0080413818359375, 0.0236053466796875, 6.222724914550781e-05, 0.01142120361328125, 0.0152130126953125, 0.0014352798461914062, 0.0297088623046875, 0.0826416015625], "tokens": [275, 319, 477, 753, 298, 322, 10848, 16356, 436, 322, 18896, 786, 275, 319, 477, 601, 5880, 786, 7216, 5085, 30, 595, 32, 87, 32, 3088, 687, 447, 26, 74, 333, 816, 27, 280, 298, 111, 275, 319, 477, 5117, 4306, 1419, 3198, 984, 415, 3088, 687, 298, 111, 438, 646, 312]}
{"line_number": 190, "line_type": "original", "code": "     * Access the domain value lower bound, based on {@code p}, used to", "entropy": 1.4814453125, "is_bug_line": false, "sus_score": 0.6701679229736328, "per_token_entropy": [5.46484375, 2.763671875, 12.25, 0.0257415771484375, 2.5, 0.0063629150390625, 1.2421875, 0.0440673828125, 0.0184478759765625, 0.2423095703125, 0.02850341796875, 0.31982421875, 0.0005197525024414062, 0.00534820556640625, 0.004245758056640625, 0.2296142578125, 0.03759765625], "tokens": [262, 319, 8258, 322, 5880, 786, 7216, 5085, 30, 4122, 544, 3088, 687, 298, 835, 1654, 372]}
{"line_number": 190, "line_type": "generated", "code": "\n    protected double getInitialDomain(double p) {\n        double ret;\n\n        if (p < 0.5) {\n            ret = -Double.MAX_VALUE;\n        } else {\n            ret = mean;\n        }\n\n        return ret;\n   ", "entropy": 0.09307861328125, "is_bug_line": false, "sus_score": 0.6701679229736328, "per_token_entropy": [0.4619140625, 0.06353759765625, 0.00502777099609375, 0.0022792816162109375, 0.0027523040771484375, 0.0003383159637451172, 0.001995086669921875, 0.0943603515625, 0.0006914138793945312, 0.01045989990234375, 0.08123779296875, 0.148193359375, 0.50048828125, 0.0196533203125, 0.1104736328125, 0.11895751953125, 0.0753173828125, 0.01036834716796875, 0.0177459716796875, 0.0293426513671875, 0.01172637939453125, 0.00437164306640625, 0.0011272430419921875, 0.011810302734375, 0.0032482147216796875, 0.0010194778442382812, 0.0191650390625, 0.044189453125, 0.001255035400390625, 0.432373046875, 2.03515625, 0.0004756450653076172, 0.0004391670227050781, 8.940696716308594e-06, 0.00014460086822509766, 0.0245208740234375, 0.0109405517578125, 0.00032448768615722656, 0.0017690658569335938, 0.021820068359375, 0.00705718994140625, 0.00637054443359375, 0.0001690387725830078, 0.1822509765625, 0.052734375, 0.00862884521484375, 0.0004069805145263672, 0.0217742919921875, 0.00543212890625, 0.0008263587951660156, 0.00041675567626953125, 0.1715087890625], "tokens": [284, 2522, 2064, 622, 4678, 5041, 26, 2627, 298, 27, 301, 291, 2064, 2152, 45, 584, 415, 308, 98, 333, 225, 34, 32, 39, 27, 301, 324, 2152, 280, 429, 4075, 32, 3459, 81, 5975, 45, 291, 320, 813, 301, 324, 2152, 280, 5651, 45, 291, 320, 584, 442, 2152, 45, 284]}
{"line_number": 159, "line_type": "original", "code": "     * @return {@code x}, such that {@code P(X < x) = p}.", "entropy": 1.267578125, "is_bug_line": false, "sus_score": 0.6695563197135925, "per_token_entropy": [5.8125, 2.494140625, 2.19921875, 1.2880859375, 2.5859375, 0.15234375, 6.3828125, 1.619140625, 1.2412109375, 0.0014495849609375, 1.396484375, 0.01184844970703125, 0.1788330078125, 0.0019245147705078125, 0.04693603515625, 0.25439453125, 0.068603515625, 0.02972412109375, 0.026641845703125, 0.11383056640625, 0.7197265625], "tokens": [262, 319, 477, 601, 3088, 687, 816, 835, 3751, 688, 3088, 687, 447, 26, 74, 333, 816, 27, 280, 298, 4009]}
{"line_number": 159, "line_type": "generated", "code": "\n    /**\n     * Access the domain value upper bound, based on {@code p}, used to\n     * bracket a CDF root.  This method is used by\n     * {@link #inverseCumulativeProbability(double)} to find critical values.\n     *", "entropy": 0.0271759033203125, "is_bug_line": false, "sus_score": 0.6695563197135925, "per_token_entropy": [1.240234375, 0.07098388671875, 0.02545166015625, 0.00018346309661865234, 0.024658203125, 2.753734588623047e-05, 0.0012969970703125, 0.00476837158203125, 0.0006532669067382812, 5.638599395751953e-05, 0.00040650367736816406, 9.298324584960938e-06, 1.5497207641601562e-06, 0.0004107952117919922, 1.3470649719238281e-05, 6.568431854248047e-05, 6.67572021484375e-06, 8.702278137207031e-05, 3.5881996154785156e-05, 0.0004820823669433594, 3.731250762939453e-05, 0.0003609657287597656, 7.033348083496094e-06, 4.112720489501953e-05, 4.76837158203125e-07, 3.933906555175781e-06, 8.821487426757812e-06, 0.0235137939453125, 0.0002390146255493164, 8.273124694824219e-05, 8.034706115722656e-05, 4.5299530029296875e-05, 0.00018787384033203125, 0.0014867782592773438, 0.0005035400390625, 0.00043082237243652344, 2.86102294921875e-06, 0.0003173351287841797, 0.00017535686492919922, 2.7418136596679688e-05, 3.421306610107422e-05, 2.9802322387695312e-05, 4.374980926513672e-05, 0.0002689361572265625, 0.0016002655029296875, 0.00014078617095947266, 8.106231689453125e-06, 0.0015916824340820312, 0.006256103515625, 0.00019359588623046875, 0.005367279052734375, 0.00027489662170410156], "tokens": [284, 1022, 275, 319, 8258, 322, 5880, 786, 8342, 5085, 30, 4122, 544, 3088, 687, 298, 835, 1654, 372, 275, 319, 33828, 312, 390, 3698, 3051, 32, 225, 1348, 1411, 438, 1654, 810, 275, 319, 3088, 1204, 588, 18139, 53, 10318, 35567, 26, 2627, 4370, 372, 2290, 18896, 2078, 32, 275, 319]}
{"line_number": 150, "line_type": "original", "code": "    }", "entropy": 1.3515625, "is_bug_line": false, "sus_score": 0.6692793369293213, "per_token_entropy": [1.8876953125, 0.81494140625], "tokens": [264, 320]}
{"line_number": 150, "line_type": "generated", "code": "\n        ret = mean - 20 * standardDeviation;\n        return ret;\n    }\n\n    /**\n     * Access the domain value upper bound, based on {@code p}, used to\n     * bracket a CDF root.  This method is used by", "entropy": 0.141357421875, "is_bug_line": false, "sus_score": 0.6692793369293213, "per_token_entropy": [1.25390625, 1.5703125, 0.014129638671875, 0.8681640625, 0.05224609375, 0.362548828125, 1.369140625, 0.05682373046875, 0.14453125, 0.0165252685546875, 0.00011646747589111328, 6.67572021484375e-06, 0.025177001953125, 0.580078125, 0.779296875, 0.0187225341796875, 0.0143585205078125, 0.10748291015625, 0.0017299652099609375, 0.05865478515625, 0.00460052490234375, 0.00457763671875, 0.00022923946380615234, 0.00780487060546875, 1.4543533325195312e-05, 0.00020360946655273438, 0.005168914794921875, 0.0006761550903320312, 4.2557716369628906e-05, 0.0003376007080078125, 1.2993812561035156e-05, 8.344650268554688e-07, 0.00018322467803955078, 7.009506225585938e-05, 5.5670738220214844e-05, 9.655952453613281e-06, 6.580352783203125e-05, 2.6345252990722656e-05, 0.0002808570861816406, 7.510185241699219e-05, 0.00021219253540039062, 6.198883056640625e-06, 5.125999450683594e-05, 4.76837158203125e-07, 3.2186508178710938e-06, 9.059906005859375e-06, 0.029266357421875, 0.00020229816436767578, 5.817413330078125e-05, 7.867813110351562e-05, 5.638599395751953e-05, 0.0002486705780029297], "tokens": [291, 2152, 280, 5651, 429, 225, 36, 34, 319, 6216, 685, 17029, 45, 291, 442, 2152, 45, 284, 320, 446, 1022, 275, 319, 8258, 322, 5880, 786, 8342, 5085, 30, 4122, 544, 3088, 687, 298, 835, 1654, 372, 275, 319, 33828, 312, 390, 3698, 3051, 32, 225, 1348, 1411, 438, 1654, 810]}
{"line_number": 139, "line_type": "original", "code": "", "entropy": 1.548828125, "is_bug_line": false, "sus_score": 0.6692500710487366, "per_token_entropy": [1.548828125], "tokens": [203]}
{"line_number": 139, "line_type": "generated", "code": "\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public String toString() {\n        return \"NormalDistribution(mean=\" + mean + \", standardDeviation=\" +\n               standardDeviation + \")\";\n    }\n\n    /**\n     * {@inheritDoc}\n     */", "entropy": 0.207763671875, "is_bug_line": false, "sus_score": 0.6692500710487366, "per_token_entropy": [0.73486328125, 0.11199951171875, 0.04925537109375, 9.608268737792969e-05, 1.6435546875, 0.00386810302734375, 0.0017223358154296875, 0.009765625, 0.2666015625, 0.016510009765625, 0.1817626953125, 0.0019083023071289062, 0.0087432861328125, 0.1175537109375, 2.166015625, 0.0149078369140625, 0.0289764404296875, 0.007625579833984375, 0.039215087890625, 0.289794921875, 0.279052734375, 0.8583984375, 0.00484466552734375, 0.0083770751953125, 0.73193359375, 0.028717041015625, 0.007678985595703125, 0.0260009765625, 0.01551055908203125, 0.16796875, 0.0804443359375, 0.021697998046875, 3.147125244140625e-05, 0.004024505615234375, 0.255859375, 1.2255859375, 0.00238037109375, 5.4836273193359375e-06, 1.0728836059570312e-06, 0.0020580291748046875, 0.14404296875, 0.0229949951171875, 0.0014314651489257812, 0.91845703125, 0.04302978515625, 0.0262908935546875, 6.377696990966797e-05, 0.185791015625, 8.308887481689453e-05, 0.0004208087921142578, 0.003086090087890625, 0.044525146484375], "tokens": [284, 1022, 275, 319, 3088, 18446, 111, 275, 569, 284, 477, 1788, 284, 562, 892, 11345, 346, 301, 291, 442, 313, 5947, 16218, 26, 6009, 347, 474, 5651, 474, 3003, 6216, 685, 17029, 347, 474, 3083, 6216, 685, 17029, 474, 34348, 284, 320, 446, 1022, 275, 319, 3088, 18446, 111, 275, 569]}
{"line_number": 243, "line_type": "original", "code": "        if (p < 0.5) {", "entropy": 0.916015625, "is_bug_line": false, "sus_score": 0.6680361032485962, "per_token_entropy": [6.12890625, 2.517578125, 0.0784912109375, 0.6455078125, 0.471435546875, 0.0180206298828125, 0.00656890869140625, 0.09228515625, 0.07281494140625, 0.0138397216796875, 0.0338134765625], "tokens": [351, 415, 308, 98, 333, 225, 34, 32, 39, 27, 301]}
{"line_number": 243, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6680361032485962, "per_token_entropy": [], "tokens": []}
