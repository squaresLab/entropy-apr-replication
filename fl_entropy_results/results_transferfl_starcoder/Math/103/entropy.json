{"line_number": 56, "line_type": "original", "code": "     * Creates normal distribution with the mean equal to zero and standard", "entropy": 3.091796875, "is_bug_line": false, "sus_score": 0.7130024433135986, "per_token_entropy": [2.583984375, 0.0237579345703125, 20.03125, 6.28515625, 0.2001953125, 1.166015625, 2.892578125, 1.5458984375, 2.35546875, 0.1322021484375, 0.90283203125, 0.658203125, 1.40234375], "tokens": [262, 319, 9301, 4302, 7433, 623, 322, 5651, 5040, 372, 5934, 461, 6216]}
{"line_number": 56, "line_type": "generated", "code": "\n     * result is accurate to about 10 decimal places.\n     */\n    public double cumulativeProbability(double x) throws MathException {\n        return Erf.erf((x - mean) / (standardDeviation * Math.sqrt(2.", "entropy": 0.231689453125, "is_bug_line": false, "sus_score": 0.7130024433135986, "per_token_entropy": [0.77294921875, 0.00940704345703125, 1.9287109375, 0.197265625, 1.279296875, 0.07122802734375, 0.59521484375, 0.03863525390625, 0.188232421875, 0.8740234375, 0.457275390625, 0.07135009765625, 0.2169189453125, 0.34765625, 0.17529296875, 0.072021484375, 0.08355712890625, 0.01116180419921875, 0.020172119140625, 0.0009379386901855469, 0.0018434524536132812, 0.07220458984375, 0.0001798868179321289, 0.040557861328125, 0.141357421875, 0.0034084320068359375, 5.960464477539062e-07, 0.165283203125, 0.25439453125, 1.2724609375, 1.052734375, 8.213520050048828e-05, 0.0006160736083984375, 0.0002465248107910156, 0.03155517578125, 0.131591796875, 0.060211181640625, 0.07147216796875, 0.09344482421875, 0.051544189453125, 0.007541656494140625, 0.1640625, 0.04986572265625, 3.600120544433594e-05, -0.0, 0.00763702392578125, 0.2481689453125, 0.00026106834411621094, 0.01128387451171875, 0.0003314018249511719, 0.000598907470703125, 0.697265625], "tokens": [275, 319, 1056, 438, 26572, 372, 2625, 225, 35, 34, 10245, 15307, 32, 275, 569, 284, 562, 2064, 41008, 35567, 26, 2627, 816, 27, 2571, 4175, 984, 301, 291, 442, 516, 4918, 32, 265, 88, 1162, 106, 429, 5651, 27, 517, 308, 9138, 685, 17029, 319, 4175, 32, 8663, 26, 36, 32]}
{"line_number": 151, "line_type": "original", "code": "            ret = -Double.MAX_VALUE;", "entropy": 1.5869140625, "is_bug_line": false, "sus_score": 0.6305129528045654, "per_token_entropy": [6.26953125, 3.658203125, 0.03106689453125, 3.677734375, 2.169921875, 0.00031638145446777344, 0.004680633544921875, 0.0004639625549316406, 0.0002853870391845703, 0.0511474609375], "tokens": [1468, 2152, 280, 429, 4075, 32, 3459, 81, 5975, 45]}
{"line_number": 151, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6305129528045654, "per_token_entropy": [], "tokens": []}
{"line_number": 115, "line_type": "original", "code": "     * that P(X &lt; x) = <code>p</code>.", "entropy": 1.533203125, "is_bug_line": false, "sus_score": 0.6305129528045654, "per_token_entropy": [3.841796875, 0.016204833984375, 13.8203125, 1.6416015625, 0.0013895034790039062, 0.00948333740234375, 0.026702880859375, 0.002506256103515625, 0.00485992431640625, 7.15234375, 0.050628662109375, 0.9013671875, 0.10028076171875, 0.003108978271484375, 0.00028061866760253906, 0.0011720657348632812, 0.0005669593811035156, 0.0009646415710449219, 1.5439453125], "tokens": [262, 319, 688, 447, 26, 74, 549, 2159, 45, 816, 27, 280, 333, 687, 48, 98, 377, 687, 4503]}
{"line_number": 115, "line_type": "generated", "code": "\n     * @return domain value upper bound, i.e.\n     *         P(X &lt; <i>upper bound</i>) &gt; <code>p</code>\n     */\n    protected double getDomainUpperBound(double p", "entropy": 0.03082275390625, "is_bug_line": false, "sus_score": 0.6305129528045654, "per_token_entropy": [0.1978759765625, 0.003101348876953125, 0.00728607177734375, 0.0005550384521484375, 0.001789093017578125, 0.0022869110107421875, 0.0298614501953125, 0.0001119375228881836, 2.8133392333984375e-05, 0.00287628173828125, 0.0001442432403564453, 1.2040138244628906e-05, 0.00203704833984375, 0.1424560546875, 0.00020968914031982422, 0.08770751953125, 0.00026726722717285156, 0.0009579658508300781, 0.0004897117614746094, 0.0010290145874023438, 0.00018703937530517578, 0.0020122528076171875, 0.0007243156433105469, 0.01120758056640625, 6.198883056640625e-06, 0.002613067626953125, 0.00014460086822509766, 6.198883056640625e-06, 0.00020778179168701172, 0.0002225637435913086, 0.00014770030975341797, 0.05010986328125, 0.006023406982421875, 0.0010700225830078125, 8.058547973632812e-05, 1.8477439880371094e-05, 0.0002741813659667969, 0.00057220458984375, 0.0003714561462402344, 0.024169921875, 0.974609375, 0.0217742919921875, 0.0169525146484375, 0.00249481201171875, 0.00164794921875, 0.00010955333709716797, 4.291534423828125e-06, 4.029273986816406e-05, 0.00026535987854003906, 1.800060272216797e-05, 0.00365447998046875, 7.2479248046875e-05], "tokens": [275, 319, 477, 601, 5880, 786, 8342, 5085, 30, 595, 32, 87, 32, 275, 319, 263, 447, 26, 74, 549, 2159, 45, 333, 91, 48, 7607, 5085, 377, 91, 5103, 549, 1837, 45, 333, 687, 48, 98, 377, 687, 48, 275, 569, 284, 2522, 2064, 622, 5041, 9878, 4716, 26, 2627, 298]}
{"line_number": 113, "line_type": "original", "code": "    /**", "entropy": 4.6484375, "is_bug_line": false, "sus_score": 0.6201352477073669, "per_token_entropy": [5.56640625, 3.732421875], "tokens": [264, 1022]}
{"line_number": 113, "line_type": "generated", "code": "\n     * \n     * @param p the desired probability for the critical value\n     * @return domain value upper bound, i.e.\n     *         P(X &lt; <i>upper bound</i>) &gt; <code>p</", "entropy": 0.035247802734375, "is_bug_line": false, "sus_score": 0.6201352477073669, "per_token_entropy": [0.11480712890625, 0.0012607574462890625, 1.3349609375, 0.0003235340118408203, 0.00498199462890625, 0.0009293556213378906, 0.00018489360809326172, 0.003391265869140625, 5.042552947998047e-05, 0.00030422210693359375, 0.0008392333984375, 5.364418029785156e-06, 0.00014257431030273438, 0.0005583763122558594, 0.031707763671875, 0.00020432472229003906, 0.0010213851928710938, 0.0009646415710449219, 0.00238800048828125, 0.0008931159973144531, 0.04803466796875, 6.270408630371094e-05, 9.179115295410156e-06, 0.0028133392333984375, 0.0002846717834472656, 1.4901161193847656e-05, 0.0003535747528076172, 0.07989501953125, 4.506111145019531e-05, 0.0413818359375, 0.0002930164337158203, 0.0005812644958496094, 0.00030994415283203125, 0.0006341934204101562, 8.094310760498047e-05, 0.001163482666015625, 0.0004456043243408203, 0.0033130645751953125, 3.4570693969726562e-06, 0.0038814544677734375, 0.00013244152069091797, 5.364418029785156e-06, 0.0002321004867553711, 9.715557098388672e-05, 4.017353057861328e-05, 0.1427001953125, 0.004840850830078125, 0.0006413459777832031, 3.7789344787597656e-05, 1.1444091796875e-05, 0.00012493133544921875, 0.00039649009704589844], "tokens": [275, 319, 5384, 319, 477, 753, 298, 322, 10848, 16356, 436, 322, 18896, 786, 275, 319, 477, 601, 5880, 786, 8342, 5085, 30, 595, 32, 87, 32, 275, 319, 263, 447, 26, 74, 549, 2159, 45, 333, 91, 48, 7607, 5085, 377, 91, 5103, 549, 1837, 45, 333, 687, 48, 98, 377]}
{"line_number": 100, "line_type": "original", "code": "    /**", "entropy": 3.86328125, "is_bug_line": false, "sus_score": 0.6201352477073669, "per_token_entropy": [4.87109375, 2.857421875], "tokens": [264, 1022]}
{"line_number": 100, "line_type": "generated", "code": "\n        ret = mean - standardDeviation * Math.sqrt(2.0) * Erf.erfinv(2 * p - 1);", "entropy": 0.1953125, "is_bug_line": false, "sus_score": 0.6201352477073669, "per_token_entropy": [0.330810546875, 0.83984375, 0.00836944580078125, 0.64599609375, 0.053680419921875, 1.28125, 0.000934600830078125, 3.230571746826172e-05, 0.045989990234375, 0.8505859375, 0.0020847320556640625, 0.01398468017578125, 0.0168304443359375, 0.04315185546875, 0.288818359375, 0.0010843276977539062, 0.1602783203125, 0.055328369140625, 0.58447265625, 0.0013895034790039062, 0.007572174072265625, 0.0310821533203125, 0.2939453125, 0.0002263784408569336, 0.033416748046875, 0.0194549560546875, 0.443115234375, 0.005970001220703125, 0.1009521484375, 0.04876708984375, 3.4809112548828125e-05, 0.041839599609375], "tokens": [291, 2152, 280, 5651, 429, 6216, 685, 17029, 319, 4175, 32, 8663, 26, 36, 32, 34, 27, 319, 516, 4918, 32, 265, 3507, 104, 26, 36, 319, 298, 429, 225, 35, 293]}
{"line_number": 83, "line_type": "original", "code": "    public double getStandardDeviation() {", "entropy": 1.923828125, "is_bug_line": false, "sus_score": 0.6201352477073669, "per_token_entropy": [5.6953125, 6.890625, 0.16162109375, 2.892578125, 1.3662109375, 0.00885772705078125, 0.006740570068359375, 0.12176513671875, 0.162353515625], "tokens": [264, 562, 2064, 622, 8090, 685, 17029, 346, 301]}
{"line_number": 83, "line_type": "generated", "code": "\n            return Double.POSITIVE_INFINITY;\n        }\n        if (p < 0.0 || p > 1.0) {\n            throw new IllegalArgumentException(\"p is not in [0,1].\");\n        }\n        double x = mean;\n       ", "entropy": 0.2430419921875, "is_bug_line": false, "sus_score": 0.6201352477073669, "per_token_entropy": [0.250244140625, 0.042816162109375, 0.04437255859375, 0.001255035400390625, 0.0066070556640625, 0.00033020973205566406, 0.0002467632293701172, 0.01004791259765625, 0.1461181640625, 0.0015287399291992188, 0.289306640625, 0.461181640625, 0.33740234375, 0.00589752197265625, 0.0019063949584960938, 0.00044918060302734375, 0.00011408329010009766, 0.626953125, 0.67822265625, 0.0033550262451171875, 0.00417327880859375, 0.0008044242858886719, 0.00032520294189453125, 5.269050598144531e-05, 0.0022373199462890625, 1.1563301086425781e-05, 0.0168609619140625, 0.0235748291015625, 0.07061767578125, 0.0018329620361328125, 0.1368408203125, 0.728515625, 1.1044921875, 0.8037109375, 0.9755859375, 0.016204833984375, 0.7958984375, 0.1806640625, 1.4185905456542969e-05, 0.003894805908203125, 0.84375, 0.09478759765625, 0.028289794921875, 0.015899658203125, 0.0021820068359375, 0.8466796875, 1.42578125, 0.359130859375, 0.5322265625, 0.478271484375, 0.060546875, 0.180908203125], "tokens": [324, 442, 6934, 32, 42270, 81, 36069, 45, 291, 320, 291, 415, 308, 98, 333, 225, 34, 32, 34, 1276, 298, 848, 225, 35, 32, 34, 27, 301, 324, 1422, 537, 12137, 440, 98, 438, 646, 328, 428, 34, 30, 35, 997, 724, 291, 320, 291, 2064, 816, 280, 5651, 45, 291]}
{"line_number": 36, "line_type": "original", "code": "    private static final long serialVersionUID = 8589540077390120676L;", "entropy": 1.916015625, "is_bug_line": false, "sus_score": 0.6201352477073669, "per_token_entropy": [2.046875, 6.25390625, 2.259765625, 0.08990478515625, 0.161376953125, 0.0037899017333984375, 0.0004730224609375, 0.6123046875, 2.44140625, 2.47265625, 2.12109375, 2.4609375, 2.08203125, 2.40625, 2.328125, 2.251953125, 2.23046875, 2.478515625, 1.5673828125, 2.494140625, 2.794921875, 2.533203125, 2.28515625, 2.26171875, 1.97265625, 2.263671875, 2.255859375, 0.004001617431640625, 0.4140625], "tokens": [264, 945, 907, 1158, 1946, 19910, 280, 225, 42, 39, 42, 43, 39, 38, 34, 34, 41, 41, 37, 43, 34, 35, 36, 34, 40, 41, 40, 62, 45]}
{"line_number": 36, "line_type": "generated", "code": "\n     * Computes the probability density function of the normal distribution.\n     * @param x Value at which the density should be computed.\n     * @return the probability density\n     */\n    public double density(double x) {\n        double dev = x - mean;", "entropy": 0.31689453125, "is_bug_line": false, "sus_score": 0.6201352477073669, "per_token_entropy": [1.1435546875, 0.212890625, 1.3603515625, 0.2413330078125, 0.416259765625, 0.06427001953125, 0.0443115234375, 0.97900390625, 0.82470703125, 0.4306640625, 0.0650634765625, 0.222900390625, 0.093505859375, 0.07049560546875, 0.8935546875, 0.067626953125, 0.0010051727294921875, 1.98828125, 0.070068359375, 0.00011670589447021484, 0.004894256591796875, 1.6982421875, 1.255859375, 1.728534698486328e-05, 0.029876708984375, 0.0213165283203125, 0.03399658203125, 0.042388916015625, 0.004055023193359375, 0.006229400634765625, 0.1434326171875, 0.7333984375, 0.01239776611328125, 0.352783203125, 0.509765625, 0.07305908203125, 0.16064453125, 0.005596160888671875, 0.1810302734375, 0.00039649009704589844, 0.032470703125, 0.00014328956604003906, 0.10113525390625, 0.04779052734375, 0.1502685546875, 0.53271484375, 0.88330078125, 0.0218048095703125, 0.1202392578125, 0.00672149658203125, 0.07867431640625, 0.052032470703125], "tokens": [275, 319, 41932, 322, 16356, 19324, 667, 432, 322, 4302, 7433, 32, 275, 319, 477, 753, 816, 3846, 821, 1510, 322, 19324, 1395, 526, 15279, 32, 275, 319, 477, 601, 322, 16356, 19324, 275, 569, 284, 562, 2064, 19324, 26, 2627, 816, 27, 301, 291, 2064, 5684, 280, 816, 429, 5651, 45]}
{"line_number": 180, "line_type": "original", "code": "    /**", "entropy": 3.20703125, "is_bug_line": false, "sus_score": 0.6201352477073669, "per_token_entropy": [5.84765625, 0.5654296875], "tokens": [264, 1022]}
{"line_number": 180, "line_type": "generated", "code": "\n\n    /**\n     * Returns the mean of the distribution.\n     * \n     * @return the mean\n     */\n    public double getMean() {\n        return mean;\n    }\n    \n    /**\n     * Returns the standard deviation of the distribution.\n     * \n     * @return", "entropy": 0.2225341796875, "is_bug_line": false, "sus_score": 0.6201352477073669, "per_token_entropy": [1.2705078125, 0.10528564453125, 0.033599853515625, 0.00015652179718017578, 1.6728515625, 0.2239990234375, 0.62255859375, 0.58740234375, 0.85986328125, 0.0855712890625, 0.044219970703125, 0.10113525390625, 0.0170135498046875, 1.2001953125, 0.00035071372985839844, 0.036956787109375, 0.0007953643798828125, 0.0160064697265625, 0.0031185150146484375, 0.126953125, 0.0206298828125, 0.0126800537109375, 0.032073974609375, 0.01448822021484375, 0.87109375, 0.00011777877807617188, 0.07672119140625, 0.004638671875, 0.055328369140625, 0.022674560546875, 0.07550048828125, 0.00586700439453125, 0.00896453857421875, 0.00020706653594970703, 1.501953125, 0.00632476806640625, 0.0076751708984375, 0.00011372566223144531, 0.0540771484375, 0.0017414093017578125, 1.49609375, 0.034698486328125, 0.1854248046875, 0.011962890625, 0.01385498046875, 0.01020050048828125, 0.00811004638671875, 0.0001748800277709961, 0.02392578125, 0.00020837783813476562, 0.00041484832763671875, 0.0002903938293457031], "tokens": [446, 1022, 275, 319, 3759, 322, 5651, 432, 322, 7433, 32, 275, 319, 5384, 319, 477, 601, 322, 5651, 275, 569, 284, 562, 2064, 622, 17081, 346, 301, 291, 442, 5651, 45, 284, 320, 2170, 1022, 275, 319, 3759, 322, 6216, 33809, 432, 322, 7433, 32, 275, 319, 5384, 319, 477, 601]}
{"line_number": 85, "line_type": "original", "code": "    }", "entropy": 1.9951171875, "is_bug_line": false, "sus_score": 0.6152949929237366, "per_token_entropy": [3.611328125, 0.37841796875], "tokens": [264, 320]}
{"line_number": 85, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6152949929237366, "per_token_entropy": [], "tokens": []}
{"line_number": 161, "line_type": "original", "code": "     * bracket a CDF root.  This method is used by", "entropy": 1.6259765625, "is_bug_line": false, "sus_score": 0.603501558303833, "per_token_entropy": [3.943359375, 3.279296875, 14.75, 0.46044921875, 0.016998291015625, 0.00038909912109375, 0.002635955810546875, 0.0394287109375, 0.1922607421875, 0.0144500732421875, 0.052734375, 0.004180908203125, 0.0046234130859375, 0.00536346435546875], "tokens": [262, 319, 33828, 312, 390, 3698, 3051, 32, 225, 1348, 1411, 438, 1654, 810]}
{"line_number": 161, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.603501558303833, "per_token_entropy": [], "tokens": []}
{"line_number": 109, "line_type": "original", "code": "            return 0.5 * (1.0 + Erf.erf((x - mean) /", "entropy": 0.94921875, "is_bug_line": true, "sus_score": 0.5935065150260925, "per_token_entropy": [5.08984375, 3.205078125, 2.2265625, 0.477294921875, 0.304443359375, 1.2451171875, 0.369384765625, 0.72021484375, 1.2080078125, 0.4267578125, 0.018280029296875, 0.13134765625, 3.765625, 0.2474365234375, 0.0035305023193359375, 0.00211334228515625, 0.0059661865234375, 1.2705078125, 0.466552734375, 0.09820556640625, 0.36474609375, 0.049468994140625, 0.133544921875], "tokens": [1468, 442, 225, 34, 32, 39, 319, 308, 35, 32, 34, 474, 516, 4918, 32, 265, 88, 1162, 106, 429, 5651, 27, 517]}
{"line_number": 109, "line_type": "generated", "code": "\n    /**\n     * Access the domain value upper bound, based on <code>p</code>, used to\n     * bracket a CDF root.  This method is used by\n     * {@link #inverseCumulativeProbability(double)} to find critical values", "entropy": 0.04205322265625, "is_bug_line": true, "sus_score": 0.5935065150260925, "per_token_entropy": [1.6494140625, 0.315673828125, 0.08038330078125, 0.00039958953857421875, 0.0869140625, 0.0007839202880859375, 0.011688232421875, 0.006626129150390625, 0.003696441650390625, 6.0558319091796875e-05, 0.0006985664367675781, 1.4662742614746094e-05, 3.612041473388672e-05, 0.00014460086822509766, 8.249282836914062e-05, 0.0002884864807128906, 8.475780487060547e-05, 3.3020973205566406e-05, 1.4662742614746094e-05, 9.66787338256836e-05, 6.914138793945312e-05, 9.262561798095703e-05, 0.00461578369140625, 1.895427703857422e-05, 0.00012969970703125, 4.875659942626953e-05, 0.00022685527801513672, 1.1920928955078125e-06, 1.33514404296875e-05, 3.0040740966796875e-05, 0.006103515625, 0.0004940032958984375, 0.0003533363342285156, 9.09566879272461e-05, 0.00018596649169921875, 0.0001246929168701172, 0.00804901123046875, 6.771087646484375e-05, 0.0006461143493652344, 3.814697265625e-06, 0.0001569986343383789, 0.00021278858184814453, 3.7789344787597656e-05, 0.00016248226165771484, 7.891654968261719e-05, 0.00010967254638671875, 0.0003151893615722656, 0.00315093994140625, 0.00017392635345458984, 1.1920928955078125e-05, 0.002429962158203125, 0.0023822784423828125], "tokens": [284, 1022, 275, 319, 8258, 322, 5880, 786, 8342, 5085, 30, 4122, 544, 333, 687, 48, 98, 377, 687, 2717, 1654, 372, 275, 319, 33828, 312, 390, 3698, 3051, 32, 225, 1348, 1411, 438, 1654, 810, 275, 319, 3088, 1204, 588, 18139, 53, 10318, 35567, 26, 2627, 4370, 372, 2290, 18896, 2078]}
{"line_number": 58, "line_type": "original", "code": "     */", "entropy": 4.8984375, "is_bug_line": false, "sus_score": 0.5903886556625366, "per_token_entropy": [5.234375, 4.5625], "tokens": [262, 569]}
{"line_number": 58, "line_type": "generated", "code": "\n    public double cumulativeProbability(double x) throws MathException {\n        //This is the probability that a random variable from the\n        //standard normal distribution is less than x.\n        double z = (x - mean) / standardDeviation;\n        double ret", "entropy": 0.452880859375, "is_bug_line": false, "sus_score": 0.5903886556625366, "per_token_entropy": [0.29931640625, 0.0753173828125, 0.016845703125, 0.024627685546875, 0.0008039474487304688, 0.002307891845703125, 0.0694580078125, 0.000598907470703125, 0.09381103515625, 0.1800537109375, 0.005924224853515625, 2.384185791015625e-06, 0.1806640625, 0.37548828125, 2.05078125, 3.650390625, 0.6376953125, 1.8271484375, 2.953125, 0.08392333984375, 0.46240234375, 0.6982421875, 0.10394287109375, 0.974609375, 0.71728515625, 1.2548828125, 0.0006680488586425781, 0.875, 0.147216796875, 0.10870361328125, 0.404296875, 0.150634765625, 0.031463623046875, 0.296875, 0.11883544921875, 0.61865234375, 1.05078125, 1.0458984375, 0.020355224609375, 0.03485107421875, 0.01143646240234375, 0.037994384765625, 0.08740234375, 0.0811767578125, 0.0015153884887695312, 0.0350341796875, 1.3589859008789062e-05, -0.0, 0.003833770751953125, 0.43798828125, 1.0283203125, 0.176025390625], "tokens": [284, 562, 2064, 41008, 35567, 26, 2627, 816, 27, 2571, 4175, 984, 301, 291, 434, 2272, 438, 322, 16356, 688, 312, 3995, 2677, 645, 322, 291, 434, 9138, 4302, 7433, 438, 6679, 2784, 816, 32, 291, 2064, 1288, 280, 308, 106, 429, 5651, 27, 517, 6216, 685, 17029, 45, 291, 2064, 2152]}
{"line_number": 114, "line_type": "original", "code": "     * For this distribution, X, this method returns the critical point x, such", "entropy": 1.9189453125, "is_bug_line": false, "sus_score": 0.5812399983406067, "per_token_entropy": [5.0234375, 0.040374755859375, 7.21484375, 0.88232421875, 0.034698486328125, 0.11236572265625, 1.9345703125, 0.016204833984375, 0.0204315185546875, 0.0272369384765625, 0.1595458984375, 3.25390625, 4.640625, 7.6953125, 1.103515625, 0.06512451171875, 0.392822265625], "tokens": [262, 319, 2616, 458, 7433, 30, 1593, 30, 458, 1411, 3217, 322, 18896, 2260, 816, 30, 3751]}
{"line_number": 114, "line_type": "generated", "code": "\n     * @param p the desired probability for the critical value\n     * @return domain value upper bound, i.e.\n     *         P(X &lt; <i>upper bound</i>) &gt; <code>p</code>", "entropy": 0.0133056640625, "is_bug_line": false, "sus_score": 0.5812399983406067, "per_token_entropy": [0.08404541015625, 0.0015039443969726562, 0.1392822265625, 0.0018568038940429688, 0.0003287792205810547, 0.00714874267578125, 6.902217864990234e-05, 0.00035119056701660156, 0.00138092041015625, 6.4373016357421875e-06, 0.0001627206802368164, 0.0011205673217773438, 0.0171051025390625, 0.000217437744140625, 0.00513458251953125, 0.0012674331665039062, 0.00212860107421875, 0.0016727447509765625, 0.03131103515625, 9.97781753540039e-05, 1.2516975402832031e-05, 0.002918243408203125, 0.00014531612396240234, 1.3947486877441406e-05, 0.0006036758422851562, 0.1395263671875, 5.626678466796875e-05, 0.0880126953125, 0.0004470348358154297, 0.0005764961242675781, 0.0006999969482421875, 0.00086212158203125, 0.00011038780212402344, 0.002285003662109375, 0.0006346702575683594, 0.004390716552734375, 5.7220458984375e-06, 0.0030612945556640625, 0.0001302957534790039, 5.4836273193359375e-06, 0.0003414154052734375, 0.0001552104949951172, 5.805492401123047e-05, 0.11968994140625, 0.0056610107421875, 0.0007982254028320312, 5.2094459533691406e-05, 1.3589859008789062e-05, 0.00017154216766357422, 0.0005965232849121094, 0.0003044605255126953, 0.023284912109375], "tokens": [275, 319, 477, 753, 298, 322, 10848, 16356, 436, 322, 18896, 786, 275, 319, 477, 601, 5880, 786, 8342, 5085, 30, 595, 32, 87, 32, 275, 319, 263, 447, 26, 74, 549, 2159, 45, 333, 91, 48, 7607, 5085, 377, 91, 5103, 549, 1837, 45, 333, 687, 48, 98, 377, 687, 48]}
{"line_number": 152, "line_type": "original", "code": "        } else {", "entropy": 3.345703125, "is_bug_line": false, "sus_score": 0.5662994384765625, "per_token_entropy": [4.6015625, 4.48046875, 3.9375, 0.364013671875], "tokens": [351, 320, 813, 301]}
{"line_number": 152, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5662994384765625, "per_token_entropy": [], "tokens": []}
{"line_number": 153, "line_type": "original", "code": "            ret = getMean();", "entropy": 2.296875, "is_bug_line": false, "sus_score": 0.5662994384765625, "per_token_entropy": [6.8203125, 4.359375, 0.0362548828125, 1.1982421875, 0.342529296875, 1.0224609375], "tokens": [1468, 2152, 280, 622, 17081, 473]}
{"line_number": 153, "line_type": "generated", "code": "\n\n    /**\n     * Return the mean.\n     *\n     * @return the mean\n     */\n    public double getNumericalMean() {\n        return getMean();\n    }\n\n    /**\n     * Return the variance.\n     *\n     * @return the variance\n     */\n   ", "entropy": 0.188232421875, "is_bug_line": false, "sus_score": 0.5662994384765625, "per_token_entropy": [2.185546875, 0.172607421875, 0.0411376953125, 0.00021982192993164062, 2.068359375, 0.72802734375, 0.703125, 0.7470703125, 0.13916015625, 0.0301666259765625, 1.0048828125, 0.0014896392822265625, 0.0281982421875, 0.0005855560302734375, 0.00687408447265625, 0.0017709732055664062, 0.23974609375, 0.0238189697265625, 0.010955810546875, 0.0282745361328125, 0.01399993896484375, 0.37744140625, 0.0058746337890625, 0.0014181137084960938, 0.060821533203125, 0.009246826171875, 0.06805419921875, 0.030975341796875, 0.55224609375, 0.00588226318359375, 0.0029850006103515625, 0.00960540771484375, 3.1948089599609375e-05, 0.201171875, 0.0015478134155273438, 0.00397491455078125, 0.00011408329010009766, 0.085205078125, 0.0004055500030517578, 0.04022216796875, 0.002323150634765625, 0.00870513916015625, 0.0001634359359741211, 0.046661376953125, 5.710124969482422e-05, 0.0007834434509277344, 0.00020062923431396484, 0.007366180419921875, 0.00202178955078125, 0.07232666015625, 0.00829315185546875, 0.003673553466796875], "tokens": [446, 1022, 275, 319, 2744, 322, 5651, 32, 275, 319, 275, 319, 477, 601, 322, 5651, 275, 569, 284, 562, 2064, 44929, 14856, 17081, 346, 301, 291, 442, 622, 17081, 473, 284, 320, 446, 1022, 275, 319, 2744, 322, 25809, 32, 275, 319, 275, 319, 477, 601, 322, 25809, 275, 569, 284]}
{"line_number": 94, "line_type": "original", "code": "            throw new IllegalArgumentException(", "entropy": 1.8779296875, "is_bug_line": false, "sus_score": 0.5662994384765625, "per_token_entropy": [2.734375, 3.359375, 0.16357421875, 2.455078125, 0.6767578125], "tokens": [1468, 1422, 537, 12137, 26]}
{"line_number": 94, "line_type": "generated", "code": "\n     */\n    protected double getDomainLowerBound(double p) {\n        return getMean() - getStandardDeviation() * FastMath.sqrt(2.0) * Erf.erfinv(2 * p - 1);\n    }", "entropy": 0.2220458984375, "is_bug_line": false, "sus_score": 0.5662994384765625, "per_token_entropy": [0.92236328125, 1.2470703125, 0.06365966796875, 0.48828125, 0.006084442138671875, 0.0020389556884765625, 0.20361328125, 0.00284576416015625, 0.002399444580078125, 0.0001888275146484375, 0.69384765625, 5.447864532470703e-05, 0.0110321044921875, 0.1094970703125, 0.2149658203125, 1.0556640625, 1.03515625, 0.0266265869140625, 0.0028820037841796875, 0.0252532958984375, 0.806640625, 0.07281494140625, 0.0009541511535644531, 0.00010657310485839844, 0.049041748046875, 0.08538818359375, 1.416015625, 0.0006494522094726562, 0.0006432533264160156, 0.0172576904296875, 0.0223236083984375, 0.0567626953125, 0.23828125, 0.0009899139404296875, 0.12054443359375, 0.0919189453125, 1.2529296875, 0.0030765533447265625, 0.00571441650390625, 0.0268402099609375, 0.34228515625, 0.0001678466796875, 0.01947021484375, 0.0192413330078125, 0.424560546875, 0.01094818115234375, 0.153076171875, 0.0261688232421875, 4.7326087951660156e-05, 0.0428466796875, 0.1209716796875, 0.0025577545166015625], "tokens": [275, 569, 284, 2522, 2064, 622, 5041, 6724, 4716, 26, 2627, 298, 27, 301, 291, 442, 622, 17081, 346, 429, 622, 8090, 685, 17029, 346, 319, 15938, 5717, 32, 8663, 26, 36, 32, 34, 27, 319, 516, 4918, 32, 265, 3507, 104, 26, 36, 319, 298, 429, 225, 35, 293, 284, 320]}
{"line_number": 44, "line_type": "original", "code": "    /**", "entropy": 2.1953125, "is_bug_line": false, "sus_score": 0.5661560297012329, "per_token_entropy": [3.671875, 0.71728515625], "tokens": [264, 1022]}
{"line_number": 44, "line_type": "generated", "code": "\n     * Computes the probability density function of this distribution.\n     * @param x point at which the density function is evaluated\n     * @return density function value at <code>x</code>\n     */\n    public double density(double x) {\n        double", "entropy": 0.252197265625, "is_bug_line": false, "sus_score": 0.5661560297012329, "per_token_entropy": [0.350830078125, 0.039337158203125, 1.068359375, 0.21044921875, 0.429931640625, 0.0618896484375, 0.054595947265625, 1.0546875, 0.65625, 0.01195526123046875, 0.100830078125, 0.035491943359375, 0.0394287109375, 0.5791015625, 0.059112548828125, 0.00087738037109375, 2.384765625, 0.0034351348876953125, 0.00036263465881347656, 0.0010061264038085938, 0.84326171875, 0.356689453125, 0.02178955078125, 0.053924560546875, 0.16259765625, 0.0260009765625, 0.00308990478515625, 0.00469207763671875, 0.9296875, 0.19384765625, 0.81103515625, 0.020294189453125, 0.91552734375, 0.01190948486328125, 4.4226646423339844e-05, 0.0001512765884399414, 7.092952728271484e-05, 0.0009055137634277344, 0.0234527587890625, 0.02288818359375, 0.178955078125, 0.0687255859375, 0.1485595703125, 0.005260467529296875, 0.1878662109375, 0.0002491474151611328, 0.0213470458984375, 0.00015687942504882812, 0.1240234375, 0.040374755859375, 0.254150390625, 0.5400390625], "tokens": [275, 319, 41932, 322, 16356, 19324, 667, 432, 458, 7433, 32, 275, 319, 477, 753, 816, 2260, 821, 1510, 322, 19324, 667, 438, 22423, 275, 319, 477, 601, 19324, 667, 786, 821, 333, 687, 48, 106, 377, 687, 48, 275, 569, 284, 562, 2064, 19324, 26, 2627, 816, 27, 301, 291, 2064]}
{"line_number": 154, "line_type": "original", "code": "        }", "entropy": 4.5, "is_bug_line": false, "sus_score": 0.5628457069396973, "per_token_entropy": [4.98828125, 4.01171875], "tokens": [351, 320]}
{"line_number": 154, "line_type": "generated", "code": "\n\n    /**\n     * Returns the mean.\n     *\n     * @return the mean\n     */\n    public double getNumericalMean() {\n        return getMean();\n    }\n\n    /**\n     * Returns the variance.\n     *\n     * @return the variance\n     */\n   ", "entropy": 0.16455078125, "is_bug_line": false, "sus_score": 0.5628457069396973, "per_token_entropy": [1.9970703125, 0.1668701171875, 0.03582763671875, 0.0001608133316040039, 1.5, 0.35107421875, 0.60302734375, 0.99560546875, 0.08636474609375, 0.01250457763671875, 0.91748046875, 0.00124359130859375, 0.0213165283203125, 0.000392913818359375, 0.0235595703125, 0.0010528564453125, 0.32373046875, 0.0283203125, 0.01049041748046875, 0.0195770263671875, 0.01195526123046875, 0.428955078125, 0.005748748779296875, 0.0016889572143554688, 0.052337646484375, 0.0084991455078125, 0.054901123046875, 0.028778076171875, 0.41748046875, 0.00605010986328125, 0.002864837646484375, 0.011138916015625, 3.063678741455078e-05, 0.1741943359375, 0.00170135498046875, 0.00438690185546875, 7.987022399902344e-05, 0.00945281982421875, 0.00020420551300048828, 0.0611572265625, 0.0020294189453125, 0.006587982177734375, 0.00015223026275634766, 0.04071044921875, 5.4836273193359375e-05, 0.0006265640258789062, 0.00016260147094726562, 0.007427215576171875, 0.002716064453125, 0.10528564453125, 0.008026123046875, 0.002635955810546875], "tokens": [446, 1022, 275, 319, 3759, 322, 5651, 32, 275, 319, 275, 319, 477, 601, 322, 5651, 275, 569, 284, 562, 2064, 44929, 14856, 17081, 346, 301, 291, 442, 622, 17081, 473, 284, 320, 446, 1022, 275, 319, 3759, 322, 25809, 32, 275, 319, 275, 319, 477, 601, 322, 25809, 275, 569, 284]}
{"line_number": 235, "line_type": "original", "code": "", "entropy": 0.310791015625, "is_bug_line": false, "sus_score": 0.551409900188446, "per_token_entropy": [0.310791015625], "tokens": [203]}
{"line_number": 235, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.551409900188446, "per_token_entropy": [], "tokens": []}
{"line_number": 265, "line_type": "original", "code": "", "entropy": 0.310791015625, "is_bug_line": false, "sus_score": 0.551409900188446, "per_token_entropy": [0.310791015625], "tokens": [203]}
{"line_number": 265, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.551409900188446, "per_token_entropy": [], "tokens": []}
{"line_number": 267, "line_type": "original", "code": "", "entropy": 0.310791015625, "is_bug_line": false, "sus_score": 0.551409900188446, "per_token_entropy": [0.310791015625], "tokens": [203]}
{"line_number": 267, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.551409900188446, "per_token_entropy": [], "tokens": []}
