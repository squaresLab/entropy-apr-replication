{"line_number": 1182, "line_type": "original", "code": "        return new Complex(realPart, imaginaryPart);", "entropy": 1.1416015625, "is_bug_line": false, "sus_score": 0.6787852048873901, "per_token_entropy": [4.78515625, 1.7060546875, 1.64453125, 0.52490234375, 0.395263671875, 0.76416015625, 3.591796875, 0.1539306640625, 0.0275115966796875, 0.0007648468017578125, 0.0047454833984375, 0.0968017578125], "tokens": [351, 442, 537, 19915, 26, 4543, 2639, 30, 17463, 3172, 2639, 293]}
{"line_number": 1182, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6787852048873901, "per_token_entropy": [], "tokens": []}
{"line_number": 1178, "line_type": "original", "code": "        if (Double.isNaN(realPart) ||", "entropy": 0.99853515625, "is_bug_line": false, "sus_score": 0.6637814044952393, "per_token_entropy": [3.478515625, 1.017578125, 0.11004638671875, 2.494140625, 0.0009541511535644531, 0.4638671875, 0.0018205642700195312, 0.99365234375, 1.4892578125, 0.70458984375, 0.2303466796875], "tokens": [351, 415, 308, 4075, 32, 26821, 26, 4543, 2639, 27, 1276]}
{"line_number": 1178, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6637814044952393, "per_token_entropy": [], "tokens": []}
{"line_number": 1070, "line_type": "original", "code": "        return createComplex(FastMath.sinh(real2) / d,", "entropy": 2.212890625, "is_bug_line": true, "sus_score": 0.6620570421218872, "per_token_entropy": [3.24609375, 1.923828125, 3.06640625, 1.927734375, 2.140625, 0.49072265625, 5.745887756347656e-05, 0.00023162364959716797, 6.90234375, 6.5546875, 0.1051025390625, 4.4296875, 5.2578125, 1.1376953125, 0.14404296875, 0.0794677734375, 0.21337890625], "tokens": [351, 442, 1487, 12267, 26, 12200, 5717, 32, 7102, 90, 26, 4543, 36, 27, 517, 343, 30]}
{"line_number": 1070, "line_type": "generated", "code": "\n        if (n <= 0) {\n            throw new NotPositiveException(LocalizedFormats.DEGREE, n);\n        }\n        double nthRoot = FastMath.pow(abs(), 1.0 / n);\n        double phase = getArgument();", "entropy": 0.22216796875, "is_bug_line": true, "sus_score": 0.6620570421218872, "per_token_entropy": [0.57568359375, 0.97802734375, 0.0311737060546875, 0.039215087890625, 0.42138671875, 0.0005321502685546875, 0.000980377197265625, 0.01029205322265625, 0.00978851318359375, 0.036529541015625, 0.0501708984375, 0.037322998046875, 0.00695037841796875, 0.0004410743713378906, 5.960464477539062e-07, 0.059539794921875, 0.04107666015625, 0.004375457763671875, 0.0001596212387084961, 0.6123046875, 0.0011434555053710938, 0.06634521484375, 0.2293701171875, 0.0010099411010742188, 0.032135009765625, 0.0010004043579101562, 0.81640625, 1.8935546875, 1.2587890625, 0.188232421875, 0.42578125, 0.18798828125, 3.135204315185547e-05, 2.944469451904297e-05, 0.00994873046875, 0.0014524459838867188, 0.55322265625, 0.027679443359375, 0.01172637939453125, 0.00014722347259521484, 0.06182861328125, 0.017333984375, 0.030914306640625, 0.013824462890625, 0.0003952980041503906, 0.263427734375, 0.333740234375, 1.2421875, 0.0297088623046875, 0.0135345458984375, 0.0005741119384765625, 0.92626953125], "tokens": [291, 415, 308, 96, 2511, 225, 34, 27, 301, 324, 1422, 537, 3182, 17991, 984, 26, 24225, 19298, 32, 42633, 7722, 30, 310, 293, 291, 320, 291, 2064, 46245, 4058, 280, 15938, 5717, 32, 7527, 26, 3596, 1026, 225, 35, 32, 34, 517, 310, 293, 291, 2064, 11225, 280, 622, 3484, 473]}
{"line_number": 1026, "line_type": "original", "code": "        return createComplex(FastMath.sin(real2) / d,", "entropy": 0.65185546875, "is_bug_line": true, "sus_score": 0.6607585549354553, "per_token_entropy": [4.46484375, 2.275390625, 0.6689453125, 0.070556640625, 0.054718017578125, 0.63671875, 0.0002665519714355469, 0.0016536712646484375, 0.49072265625, 1.3984375, 0.204833984375, 0.061859130859375, 0.03778076171875, 0.02996826171875, 0.00543975830078125, 0.0238037109375], "tokens": [351, 442, 1487, 12267, 26, 12200, 5717, 32, 7102, 26, 4543, 36, 27, 517, 343, 30]}
{"line_number": 1026, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": true, "sus_score": 0.6607585549354553, "per_token_entropy": [], "tokens": []}
{"line_number": 453, "line_type": "original", "code": "    /**", "entropy": 4.58984375, "is_bug_line": false, "sus_score": 0.6488929986953735, "per_token_entropy": [4.40234375, 4.77734375], "tokens": [264, 1022]}
{"line_number": 453, "line_type": "generated", "code": "\n        return createComplex(-real, -imaginary);\n    }\n\n    /**\n     * Returns a {@code Complex} whose value is\n     * <ul>\n     * <li>{@code this} if {@code norm} equals {@code 1} or {@", "entropy": 0.210205078125, "is_bug_line": false, "sus_score": 0.6488929986953735, "per_token_entropy": [0.13818359375, 0.9833984375, 0.1473388671875, 0.0011730194091796875, 0.02850341796875, 0.031097412109375, 0.0040740966796875, 0.004291534423828125, 0.0010852813720703125, 0.00011968612670898438, 0.00926971435546875, 0.40673828125, 0.0016412734985351562, 0.467529296875, 0.01189422607421875, 0.0071258544921875, 2.09808349609375e-05, 0.1722412109375, 0.230712890625, 0.01433563232421875, 0.002166748046875, 0.00044155120849609375, 0.004108428955078125, 9.369850158691406e-05, 0.0016012191772460938, 0.0003998279571533203, 1.052734375, 0.0038623809814453125, 0.209716796875, 0.30029296875, 0.018157958984375, 0.0006909370422363281, 8.535385131835938e-05, 1.048828125, 4.38690185546875e-05, 0.354736328125, 0.0005497932434082031, 0.166748046875, 0.201171875, 0.0188751220703125, 0.04754638671875, 0.00087738037109375, 1.3505859375, 0.1463623046875, 0.79443359375, 0.255126953125, 0.251220703125, 0.0113067626953125, 0.0184326171875, 1.05859375, 0.172119140625, 0.7802734375], "tokens": [291, 442, 1487, 12267, 3736, 4543, 30, 429, 17792, 3172, 293, 284, 320, 446, 1022, 275, 319, 3759, 312, 3088, 687, 19915, 111, 13696, 786, 438, 275, 319, 333, 338, 48, 275, 319, 333, 374, 19364, 687, 458, 111, 415, 3088, 687, 9807, 111, 12423, 3088, 687, 225, 35, 111, 556, 3088]}
{"line_number": 1024, "line_type": "original", "code": "        double d = FastMath.cos(real2) + FastMath.cosh(imaginary2);", "entropy": 0.63671875, "is_bug_line": true, "sus_score": 0.6486054062843323, "per_token_entropy": [5.82421875, 4.02734375, 2.341796875, 0.1732177734375, 0.25146484375, 7.581710815429688e-05, 0.00024771690368652344, 1.7060546875, 0.00164794921875, 0.141845703125, 0.135498046875, 0.0114593505859375, 0.0176849365234375, 0.0006928443908691406, 2.193450927734375e-05, 0.0008568763732910156, 0.0006866455078125, -0.0, 0.00013899803161621094, 0.00389862060546875, 7.748603820800781e-06, 0.00012958049774169922, 0.0029735565185546875], "tokens": [351, 2064, 343, 280, 15938, 5717, 32, 4952, 26, 4543, 36, 27, 474, 15938, 5717, 32, 331, 615, 26, 17792, 3172, 36, 293]}
{"line_number": 1024, "line_type": "generated", "code": "\n    /**\n     * Compute the argument of this complex number.\n     * The argument is the angle between the positive real axis and\n     * the point representing this number in the complex plane.\n     * The value returned is between -<i>pi</i>", "entropy": 0.1951904296875, "is_bug_line": true, "sus_score": 0.6486054062843323, "per_token_entropy": [1.2802734375, 0.18896484375, 0.04669189453125, 0.00011241436004638672, 0.87353515625, 0.03302001953125, 0.17138671875, 1.2705078125, 0.0019893646240234375, 0.01081085205078125, 0.004657745361328125, 0.005950927734375, 0.1214599609375, 0.00011622905731201172, 0.72216796875, 0.00424957275390625, 0.01326751708984375, 0.003448486328125, 0.022613525390625, 0.71826171875, 0.00768280029296875, 0.0014829635620117188, 0.058746337890625, 0.01995849609375, 0.0200042724609375, 1.16796875, 1.6689300537109375e-06, 0.10882568359375, 0.0088043212890625, 0.11968994140625, 0.0004131793975830078, 0.1229248046875, 0.004268646240234375, 0.0017652511596679688, 0.0164031982421875, 0.0018396377563476562, 0.004608154296875, 0.07183837890625, 9.334087371826172e-05, 0.5615234375, 0.2264404296875, 0.01085662841796875, 0.1536865234375, 0.03936767578125, 0.1712646484375, 1.6708984375, 0.0007958412170410156, 0.0745849609375, 0.007114410400390625, 9.59634780883789e-05, 0.00020575523376464844, 0.0002694129943847656], "tokens": [284, 1022, 275, 319, 12836, 322, 2793, 432, 458, 8640, 1451, 32, 275, 319, 886, 2793, 438, 322, 8775, 3733, 322, 11557, 4011, 6013, 461, 275, 319, 322, 2260, 12681, 458, 1451, 328, 322, 8640, 14442, 32, 275, 319, 886, 786, 4717, 438, 3733, 429, 46, 91, 48, 1295, 377, 91, 48]}
{"line_number": 1068, "line_type": "original", "code": "        double d = FastMath.cosh(real2) + FastMath.cos(imaginary2);", "entropy": 1.77734375, "is_bug_line": true, "sus_score": 0.6486054062843323, "per_token_entropy": [4.6484375, 3.7578125, 4.9375, 0.12091064453125, 0.5771484375, 2.5033950805664062e-05, 5.2928924560546875e-05, 13.1484375, 0.00032830238342285156, 0.0289154052734375, 7.30078125, 3.95703125, 2.318359375, 0.027435302734375, 0.0391845703125, 1.6450881958007812e-05, 0.0009737014770507812, 0.0021533966064453125, 0.001438140869140625, 0.00598907470703125, 0.0008254051208496094, 0.0026702880859375, 0.004184722900390625], "tokens": [351, 2064, 343, 280, 15938, 5717, 32, 331, 615, 26, 4543, 36, 27, 474, 15938, 5717, 32, 4952, 26, 17792, 3172, 36, 293]}
{"line_number": 1068, "line_type": "generated", "code": "\n     */\n    public List<Complex> nthRoot(int n) {\n        if (n <= 0) {\n            throw new NotPositiveException(LocalizedFormats.ROOTS_OF_NEG_NUMBER, n);\n        }\n        if (isNaN)", "entropy": 0.165771484375, "is_bug_line": true, "sus_score": 0.6486054062843323, "per_token_entropy": [0.71826171875, 0.041168212890625, 0.0509033203125, 0.0565185546875, 0.07452392578125, 0.003932952880859375, 0.0020084381103515625, 0.0009784698486328125, 0.01947021484375, 0.149658203125, 0.0010509490966796875, 0.1632080078125, 0.0007905960083007812, 0.0019283294677734375, 0.626953125, 0.3125, 0.53271484375, 0.0220184326171875, 0.0231170654296875, 0.09759521484375, 0.00034165382385253906, 0.00026869773864746094, 0.00577545166015625, 0.0062408447265625, 0.0204010009765625, 0.0301666259765625, 0.0272979736328125, 0.005279541015625, 0.0003371238708496094, 8.344650268554688e-07, 0.0347900390625, 0.050933837890625, 0.004711151123046875, 0.00015866756439208984, 1.3173828125, 0.07232666015625, 0.00275421142578125, 0.1822509765625, 2.682209014892578e-05, 1.0185546875, 0.42333984375, 0.11199951171875, 0.1348876953125, 0.57470703125, 0.004482269287109375, 0.048309326171875, 0.0011777877807617188, 0.7333984375, 0.755859375, 0.0258026123046875, 0.060150146484375, 0.0638427734375], "tokens": [275, 569, 284, 562, 1682, 46, 12267, 48, 46245, 4058, 26, 410, 310, 27, 301, 291, 415, 308, 96, 2511, 225, 34, 27, 301, 324, 1422, 537, 3182, 17991, 984, 26, 24225, 19298, 32, 7789, 69, 81, 2109, 81, 25531, 81, 10463, 30, 310, 293, 291, 320, 291, 415, 308, 26821, 27]}
{"line_number": 393, "line_type": "original", "code": "     * {@code NaN}; false otherwise.", "entropy": 4.515625, "is_bug_line": false, "sus_score": 0.646972119808197, "per_token_entropy": [5.23046875, 4.71484375, 7.953125, 0.61767578125, 7.109375, 6.0, 7.96484375, 0.75634765625, 0.32275390625], "tokens": [262, 319, 3088, 687, 21644, 1255, 901, 5878, 32]}
{"line_number": 393, "line_type": "generated", "code": "\n            Double.isInfinite(imaginary) ||\n            Double.isInfinite(factor.real) ||\n            Double.isInfinite(factor.imaginary)) {\n            return INF;\n        }\n\n        // the following code is written in such a way that no", "entropy": 0.2376708984375, "is_bug_line": false, "sus_score": 0.646972119808197, "per_token_entropy": [1.013671875, 0.1285400390625, 0.00014829635620117188, 0.0071868896484375, 4.5299530029296875e-06, 0.0006880760192871094, 0.312255859375, 1.704692840576172e-05, 0.0823974609375, 0.012969970703125, 0.56201171875, 0.0087127685546875, 0.0004425048828125, 0.0015392303466796875, 1.4543533325195312e-05, 0.0003333091735839844, 0.003993988037109375, 0.0006957054138183594, 0.09112548828125, 0.00463104248046875, 0.00412750244140625, 0.49560546875, 0.0012102127075195312, 0.00016736984252929688, 0.0010499954223632812, 4.291534423828125e-06, 0.00021564960479736328, 0.0022754669189453125, 2.968311309814453e-05, 0.001972198486328125, 9.179115295410156e-06, 0.0826416015625, 0.01788330078125, 0.1846923828125, 0.028289794921875, 0.5302734375, 0.0012083053588867188, 0.017822265625, 0.00069427490234375, 0.88671875, 0.89892578125, 2.578125, 0.286376953125, 0.77001953125, 0.39990234375, 0.79248046875, 0.391357421875, 0.9638671875, 0.1356201171875, 0.0024852752685546875, 0.24267578125, 0.40673828125], "tokens": [324, 6934, 32, 28823, 11949, 26, 17792, 3172, 27, 1276, 324, 6934, 32, 28823, 11949, 26, 9410, 32, 4543, 27, 1276, 324, 6934, 32, 28823, 11949, 26, 9410, 32, 17792, 3172, 490, 301, 324, 442, 47257, 45, 291, 320, 584, 434, 322, 2412, 1340, 438, 6638, 328, 3751, 312, 3352, 688, 1289]}
{"line_number": 442, "line_type": "original", "code": "        if (Double.isInfinite(real) ||", "entropy": 0.9111328125, "is_bug_line": false, "sus_score": 0.6408604383468628, "per_token_entropy": [6.2734375, 1.69140625, 0.070068359375, 0.99267578125, 0.0014781951904296875, 0.29052734375, 0.0002601146697998047, 0.00801849365234375, 0.471435546875, 0.1595458984375, 0.06243896484375], "tokens": [351, 415, 308, 4075, 32, 28823, 11949, 26, 4543, 27, 1276]}
{"line_number": 442, "line_type": "generated", "code": "\n    /**\n     * Returns a {@code Complex} whose value is {@code this * factor}, with {@code factor}\n     * interpreted as a real number.\n     *\n     * @param  factor value to be multiplied by this {@code Complex}.\n    ", "entropy": 0.07940673828125, "is_bug_line": false, "sus_score": 0.6408604383468628, "per_token_entropy": [0.9716796875, 0.1016845703125, 0.035888671875, 3.123283386230469e-05, 0.17626953125, 0.1630859375, 0.048187255859375, 0.00804901123046875, 0.00040435791015625, 0.003284454345703125, 0.0010433197021484375, 0.0011577606201171875, 0.0005464553833007812, 0.2802734375, 0.00044417381286621094, 0.1270751953125, 0.64404296875, 0.2025146484375, 0.193115234375, 0.04638671875, 0.197021484375, 0.0002942085266113281, 0.0038661956787109375, 0.0003337860107421875, 0.005054473876953125, 5.698204040527344e-05, 0.02008056640625, 0.0007886886596679688, 0.05499267578125, 0.62939453125, 0.01042938232421875, 0.013702392578125, 0.04290771484375, 0.0003674030303955078, 0.083740234375, 1.3709068298339844e-05, 0.0184478759765625, 0.0013885498046875, 0.0199127197265625, 0.005741119384765625, 0.00577545166015625, 0.00027179718017578125, 0.00010514259338378906, 0.0005736351013183594, 6.198883056640625e-06, 0.0001499652862548828, 0.0007715225219726562, 0.0013065338134765625, 5.8770179748535156e-05, 0.0003829002380371094, 0.005035400390625, 0.00043702125549316406], "tokens": [284, 1022, 275, 319, 3759, 312, 3088, 687, 19915, 111, 13696, 786, 438, 3088, 687, 458, 319, 10365, 835, 623, 3088, 687, 10365, 111, 275, 319, 30352, 619, 312, 4011, 1451, 32, 275, 319, 275, 319, 477, 753, 225, 10365, 786, 372, 526, 12044, 3032, 810, 458, 3088, 687, 19915, 4009, 275]}
{"line_number": 1067, "line_type": "original", "code": "        double imaginary2 = 2.0 * imaginary;", "entropy": 1.3232421875, "is_bug_line": true, "sus_score": 0.6402673125267029, "per_token_entropy": [3.05078125, 3.130859375, 9.3359375, 0.0002856254577636719, 1.9404296875, 0.05328369140625, 0.08782958984375, 0.0020275115966796875, 0.64697265625, 0.00797271728515625, 0.00617218017578125, 0.256591796875, 9.21487808227539e-05, 0.016357421875], "tokens": [351, 2064, 17463, 3172, 36, 280, 225, 36, 32, 34, 319, 17463, 3172, 45]}
{"line_number": 1067, "line_type": "generated", "code": "\n    public List<Complex> nthRoot(int n) {\n        if (n <= 0) {\n            throw new NotPositiveException(LocalizedFormats.DEGREE, n);\n        }\n        List<Complex> result = new ArrayList<Complex>(n", "entropy": 0.176025390625, "is_bug_line": true, "sus_score": 0.6402673125267029, "per_token_entropy": [2.001953125, 1.33984375, 0.08856201171875, 0.006740570068359375, 0.0014123916625976562, 0.0009279251098632812, 0.027923583984375, 0.1346435546875, 0.00897979736328125, 0.20556640625, 0.0015630722045898438, 0.003093719482421875, 0.552734375, 0.2147216796875, 0.304931640625, 0.0134429931640625, 0.0172576904296875, 0.06829833984375, 0.00030541419982910156, 0.00033211708068847656, 0.006389617919921875, 0.0077667236328125, 0.0172271728515625, 0.025177001953125, 0.0330810546875, 0.006740570068359375, 0.0004837512969970703, 1.1920928955078125e-06, 0.0469970703125, 0.041351318359375, 0.006862640380859375, 0.0001780986785888672, 0.65966796875, 0.0009751319885253906, 0.055267333984375, 0.2498779296875, 0.0011434555053710938, 0.06549072265625, 0.0013570785522460938, 1.078125, 1.2900390625, 0.0010213851928710938, 0.00420379638671875, 0.0004456043243408203, 0.2457275390625, 0.0191802978515625, 0.039703369140625, 0.007007598876953125, 0.03619384765625, 0.002780914306640625, 0.1871337890625, 0.0225067138671875], "tokens": [284, 562, 1682, 46, 12267, 48, 46245, 4058, 26, 410, 310, 27, 301, 291, 415, 308, 96, 2511, 225, 34, 27, 301, 324, 1422, 537, 3182, 17991, 984, 26, 24225, 19298, 32, 42633, 7722, 30, 310, 293, 291, 320, 291, 1682, 46, 12267, 48, 1056, 280, 537, 5059, 46, 12267, 1563, 96]}
{"line_number": 1066, "line_type": "original", "code": "        double real2 = 2.0 * real;", "entropy": 1.0810546875, "is_bug_line": true, "sus_score": 0.6396150588989258, "per_token_entropy": [3.12109375, 3.32421875, 3.07421875, 2.291015625, 0.0589599609375, 0.484619140625, 0.0518798828125, 0.206787109375, 0.007450103759765625, 0.005977630615234375, 0.321533203125, 0.01751708984375], "tokens": [351, 2064, 4011, 36, 280, 225, 36, 32, 34, 319, 4011, 45]}
{"line_number": 1066, "line_type": "generated", "code": "\n     */\n    public List<Complex> nthRoot(int n) {\n        if (isNaN) {\n            return Collections.singletonList(NaN);\n        }\n        if (isInfinite()) {\n            return Collections.singletonList(INF);\n        }\n\n        double a =", "entropy": 0.1920166015625, "is_bug_line": true, "sus_score": 0.6396150588989258, "per_token_entropy": [0.421142578125, 0.169189453125, 0.055755615234375, 0.051422119140625, 0.0679931640625, 0.004322052001953125, 0.002166748046875, 0.0008254051208496094, 0.026763916015625, 0.11700439453125, 0.0014867782592773438, 0.06890869140625, 0.0006957054138183594, 0.002185821533203125, 0.0232391357421875, 0.2415771484375, 0.6337890625, 0.039031982421875, 0.1956787109375, 0.225341796875, 0.0029048919677734375, 0.01312255859375, 0.10198974609375, 0.430908203125, 0.032257080078125, 0.0012273788452148438, 0.0024852752685546875, 0.0178680419921875, 0.00027179718017578125, 0.028472900390625, 0.0010118484497070312, 0.876953125, 0.281494140625, 0.079345703125, 1.333984375, 0.00034809112548828125, 0.54638671875, 0.0009655952453613281, 0.02203369140625, 0.1484375, 0.02117919921875, 0.004184722900390625, 0.00036215782165527344, 0.00394439697265625, 1.046875, 0.001094818115234375, 0.03887939453125, 0.0007457733154296875, 0.6142578125, 0.814453125, 1.146484375, 0.0228118896484375], "tokens": [275, 569, 284, 562, 1682, 46, 12267, 48, 46245, 4058, 26, 410, 310, 27, 301, 291, 415, 308, 26821, 27, 301, 324, 442, 15496, 32, 36551, 26, 11126, 293, 291, 320, 291, 415, 308, 28823, 11949, 1157, 301, 324, 442, 15496, 32, 36551, 26, 10192, 293, 291, 320, 584, 2064, 312, 280]}
{"line_number": 1023, "line_type": "original", "code": "        double imaginary2 = 2.0 * imaginary;", "entropy": 0.875, "is_bug_line": true, "sus_score": 0.6386051774024963, "per_token_entropy": [5.85546875, 2.70703125, 3.287109375, 0.00024771690368652344, 0.1944580078125, 0.0134124755859375, 0.0408935546875, 0.0005788803100585938, 0.06103515625, 0.0006747245788574219, 0.0052032470703125, 0.061248779296875, 9.560585021972656e-05, 0.0196075439453125], "tokens": [351, 2064, 17463, 3172, 36, 280, 225, 36, 32, 34, 319, 17463, 3172, 45]}
{"line_number": 1023, "line_type": "generated", "code": "\n    /**\n     * Compute the argument of this complex number.\n     * The argument is the angle between the positive real axis and the point\n     * representing this number in the complex plane.\n     * Implements the formula:\n     * <pre>\n     *  <", "entropy": 0.1646728515625, "is_bug_line": true, "sus_score": 0.6386051774024963, "per_token_entropy": [0.69775390625, 0.125732421875, 0.042572021484375, 0.0001436471939086914, 0.701171875, 0.03271484375, 0.237060546875, 1.37109375, 0.0016326904296875, 0.00864410400390625, 0.0053558349609375, 0.006622314453125, 0.10028076171875, 9.608268737792969e-05, 0.693359375, 0.004222869873046875, 0.01184844970703125, 0.0028285980224609375, 0.01953125, 0.66650390625, 0.00785064697265625, 0.0013914108276367188, 0.05865478515625, 0.020050048828125, 0.027374267578125, 0.52099609375, 0.2357177734375, 0.0050811767578125, 1.0848045349121094e-05, 0.2183837890625, 0.0008745193481445312, 0.14013671875, 0.006256103515625, 0.0023632049560546875, 0.01523590087890625, 0.0016412734985351562, 0.00749969482421875, 0.472412109375, 9.763240814208984e-05, 2.0234375, 0.00018024444580078125, 0.01056671142578125, 0.006755828857421875, 0.0005316734313964844, 2.181529998779297e-05, 0.0027217864990234375, 0.0182342529296875, 0.005802154541015625, 0.00015616416931152344, 8.940696716308594e-06, 0.020233154296875, 0.0005321502685546875], "tokens": [284, 1022, 275, 319, 12836, 322, 2793, 432, 458, 8640, 1451, 32, 275, 319, 886, 2793, 438, 322, 8775, 3733, 322, 11557, 4011, 6013, 461, 322, 2260, 275, 319, 12681, 458, 1451, 328, 322, 8640, 14442, 32, 275, 319, 34818, 322, 17568, 44, 275, 319, 333, 1001, 48, 275, 319, 225, 333]}
{"line_number": 867, "line_type": "original", "code": "", "entropy": 2.380859375, "is_bug_line": false, "sus_score": 0.6376088857650757, "per_token_entropy": [2.380859375], "tokens": [203]}
{"line_number": 867, "line_type": "generated", "code": "\n     * <pre>\n     *  <code>\n     *   if (a == 0) {\n     *       if (b == 0) {\n     *           return a + bi;\n     *       }\n     *       else {\n     *", "entropy": 0.1544189453125, "is_bug_line": false, "sus_score": 0.6376088857650757, "per_token_entropy": [0.95703125, 0.036956787109375, 0.5380859375, 1.0126953125, 0.00955963134765625, 0.00563812255859375, 0.00047469139099121094, 0.157958984375, 0.307861328125, 0.0026035308837890625, 0.00042748451232910156, 0.01076507568359375, 0.0002574920654296875, 0.126220703125, 0.15380859375, 0.93115234375, 0.529296875, 0.09124755859375, 0.0005812644958496094, 1.430511474609375e-06, 0.0258941650390625, 0.0108489990234375, 0.0288238525390625, 5.507469177246094e-05, 1.1396484375, 0.0670166015625, 0.00024437904357910156, 0.0006198883056640625, 0.139892578125, 2.6345252990722656e-05, 4.76837158203125e-07, 0.0004439353942871094, 0.005252838134765625, 0.005329132080078125, 5.841255187988281e-06, 0.05780029296875, 0.047576904296875, 0.1705322265625, 0.18017578125, 0.0882568359375, 0.476318359375, 0.0216064453125, 1.2755393981933594e-05, 0.004695892333984375, 0.0001569986343383789, 0.07965087890625, 7.426738739013672e-05, 0.0033206939697265625, 0.51953125, 0.0771484375, 0.00527191162109375, 1.4543533325195312e-05], "tokens": [275, 319, 333, 1001, 48, 275, 319, 225, 333, 687, 48, 275, 319, 261, 415, 308, 83, 610, 225, 34, 27, 301, 275, 319, 958, 415, 308, 84, 610, 225, 34, 27, 301, 275, 319, 2264, 442, 312, 474, 10789, 45, 275, 319, 958, 320, 275, 319, 958, 813, 301, 275, 319]}
{"line_number": 1022, "line_type": "original", "code": "        double real2 = 2.0 * real;", "entropy": 0.75146484375, "is_bug_line": true, "sus_score": 0.6370193958282471, "per_token_entropy": [6.8203125, 1.0576171875, 1.005859375, 0.06695556640625, 0.00511932373046875, 0.00455474853515625, 0.0018529891967773438, 0.0248870849609375, 0.00034737586975097656, 0.0016613006591796875, 0.0193939208984375, 0.004337310791015625], "tokens": [351, 2064, 4011, 36, 280, 225, 36, 32, 34, 319, 4011, 45]}
{"line_number": 1022, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Compute the argument (also known as the phase or polar angle) of this\n     * complex number.\n     * This is the angle between the positive real axis and the point representing\n     * this number in the complex plane.\n     *", "entropy": 0.1553955078125, "is_bug_line": true, "sus_score": 0.6370193958282471, "per_token_entropy": [0.11480712890625, 0.1004638671875, 0.359619140625, 0.046051025390625, 0.02520751953125, 2.491474151611328e-05, 0.316650390625, 0.0190887451171875, 0.439697265625, 0.253662109375, 0.0872802734375, 0.1451416015625, 0.0006012916564941406, 0.0218048095703125, 0.04632568359375, 0.701171875, 0.7421875, 0.06939697265625, 0.0019140243530273438, 0.030853271484375, 0.0185699462890625, 0.046112060546875, 7.152557373046875e-07, 0.005359649658203125, 8.344650268554688e-05, 0.002208709716796875, 0.5146484375, 3.2901763916015625e-05, 1.6826171875, 0.560546875, 0.00820159912109375, 0.00522613525390625, 0.198486328125, 0.00589752197265625, 0.0025348663330078125, 0.0094146728515625, 0.0020999908447265625, 0.01242828369140625, 0.005977630615234375, 0.04193115234375, 0.798828125, 0.0293731689453125, 2.193450927734375e-05, 0.00029921531677246094, 0.12451171875, 0.042510986328125, 0.0031890869140625, 0.0357666015625, 0.0011129379272460938, 0.02117919921875, 0.37646484375, 2.2411346435546875e-05], "tokens": [284, 320, 446, 1022, 275, 319, 12836, 322, 2793, 308, 12227, 8967, 619, 322, 11225, 556, 38060, 8775, 27, 432, 458, 275, 319, 8640, 1451, 32, 275, 319, 1348, 438, 322, 8775, 3733, 322, 11557, 4011, 6013, 461, 322, 2260, 12681, 275, 319, 458, 1451, 328, 322, 8640, 14442, 32, 275, 319]}
{"line_number": 1018, "line_type": "original", "code": "        if (isNaN) {", "entropy": 2.3828125, "is_bug_line": true, "sus_score": 0.6352907419204712, "per_token_entropy": [6.89453125, 1.662109375, 0.103515625, 5.25390625, 0.263427734375, 0.12152099609375], "tokens": [351, 415, 308, 26821, 27, 301]}
{"line_number": 1018, "line_type": "generated", "code": "\n            return NaN;\n        }\n\n        double d = FastMath.cosh(real2) + FastMath.cos(imaginary2);\n\n        return createComplex(FastMath.sinh(real2) / d,\n                             FastMath.sin(", "entropy": 0.0289154052734375, "is_bug_line": true, "sus_score": 0.6352907419204712, "per_token_entropy": [0.239501953125, 0.11614990234375, 0.249755859375, 0.004070281982421875, 0.07110595703125, 0.004779815673828125, 0.294921875, 0.1397705078125, 0.06158447265625, 0.007762908935546875, 0.005390167236328125, 2.7418136596679688e-06, 1.0967254638671875e-05, 0.00385284423828125, 3.5762786865234375e-07, 0.00013399124145507812, 0.00022029876708984375, 0.00011789798736572266, 0.0008678436279296875, 0.00029468536376953125, 0.0006809234619140625, 8.821487426757812e-06, 2.276897430419922e-05, 8.487701416015625e-05, 6.186962127685547e-05, 0.0007071495056152344, 1.0728836059570312e-06, 0.00012314319610595703, 8.761882781982422e-05, 0.21875, 0.022552490234375, 0.0019044876098632812, 9.262561798095703e-05, 0.0009708404541015625, 0.00328826904296875, 6.079673767089844e-06, 2.09808349609375e-05, 8.702278137207031e-06, 2.6226043701171875e-05, 0.00012183189392089844, 9.85860824584961e-05, 9.357929229736328e-05, 0.00453948974609375, 0.00019156932830810547, 0.0001480579376220703, 0.0001239776611328125, 0.048431396484375, 0.00010693073272705078, 3.6954879760742188e-06, 4.100799560546875e-05, 6.663799285888672e-05, 5.221366882324219e-05], "tokens": [324, 442, 21644, 45, 291, 320, 584, 2064, 343, 280, 15938, 5717, 32, 331, 615, 26, 4543, 36, 27, 474, 15938, 5717, 32, 4952, 26, 17792, 3172, 36, 293, 584, 442, 1487, 12267, 26, 12200, 5717, 32, 7102, 90, 26, 4543, 36, 27, 517, 343, 30, 6035, 15938, 5717, 32, 7102, 26]}
{"line_number": 383, "line_type": "original", "code": "     */", "entropy": 4.4453125, "is_bug_line": false, "sus_score": 0.6334934830665588, "per_token_entropy": [5.5234375, 3.369140625], "tokens": [262, 569]}
{"line_number": 383, "line_type": "generated", "code": "\n     * @return {@code this * factor}.\n     */\n    public Complex multiply(Complex factor) {\n        if (isNaN || factor.isNaN) {\n            return NaN;\n        }\n\n        if (isInfinite || factor.isInfinite) {\n            return INF", "entropy": 0.152099609375, "is_bug_line": false, "sus_score": 0.6334934830665588, "per_token_entropy": [0.2069091796875, 0.00783538818359375, 0.0033054351806640625, 0.004581451416015625, 0.0165252685546875, 0.0001119375228881836, 0.00949859619140625, 0.00336456298828125, 0.0016231536865234375, 0.430419921875, 0.33154296875, 0.363037109375, 0.0182037353515625, 0.08966064453125, 0.0207061767578125, 0.0263824462890625, 0.0011472702026367188, 0.1976318359375, 0.0017843246459960938, 0.1881103515625, 0.0088043212890625, 0.1749267578125, 0.59033203125, 0.040283203125, 0.059295654296875, 0.00972747802734375, 0.0180816650390625, 0.0011510848999023438, 2.384185791015625e-05, 0.215576171875, 0.0032672882080078125, 0.006916046142578125, 0.053070068359375, 0.0259552001953125, 0.0006442070007324219, 0.0034637451171875, 0.0004024505615234375, 1.0400390625, 1.0234375, 0.12042236328125, 0.14208984375, 0.00010025501251220703, 0.53076171875, 0.00637054443359375, 0.0009245872497558594, 0.00021791458129882812, 5.960464477539062e-07, 0.035888671875, 0.0010662078857421875, 0.00890350341796875, 0.09381103515625, 1.7666015625], "tokens": [275, 319, 477, 601, 3088, 687, 458, 319, 10365, 4009, 275, 569, 284, 562, 19915, 22213, 26, 12267, 10365, 27, 301, 291, 415, 308, 26821, 1276, 10365, 32, 26821, 27, 301, 324, 442, 21644, 45, 291, 320, 584, 415, 308, 28823, 11949, 1276, 10365, 32, 28823, 11949, 27, 301, 324, 442, 47257]}
{"line_number": 443, "line_type": "original", "code": "            Double.isInfinite(imaginary) ||", "entropy": 2.166015625, "is_bug_line": false, "sus_score": 0.6322271227836609, "per_token_entropy": [8.40625, 8.90625, 0.5771484375, 1.4189453125, 0.0002244710922241211, 0.0214691162109375, 1.578125, 0.0009202957153320312, 0.6259765625, 0.125], "tokens": [1468, 6934, 32, 28823, 11949, 26, 17792, 3172, 27, 1276]}
{"line_number": 443, "line_type": "generated", "code": "\n    /**\n     * Returns a {@code Complex} whose value is {@code this * factor}, with {@code factor}\n     * interpreted as a {@code double}-precision complex number.\n     *\n     * @param  factor value to be multiplied by this", "entropy": 0.14990234375, "is_bug_line": false, "sus_score": 0.6322271227836609, "per_token_entropy": [0.356201171875, 0.039886474609375, 0.031951904296875, 2.2292137145996094e-05, 0.1669921875, 0.1873779296875, 0.05853271484375, 0.009552001953125, 0.0005016326904296875, 0.003490447998046875, 0.001300811767578125, 0.0016689300537109375, 0.0007748603820800781, 0.29150390625, 0.0007138252258300781, 0.09234619140625, 0.62939453125, 0.177001953125, 0.23876953125, 0.06610107421875, 0.1689453125, 0.0003039836883544922, 0.004062652587890625, 0.00036263465881347656, 0.005802154541015625, 6.67572021484375e-05, 0.0159454345703125, 0.0007653236389160156, 0.055572509765625, 2.0, 0.1474609375, 1.490234375, 0.2529296875, 0.356201171875, 0.61767578125, 0.0033111572265625, 0.0648193359375, 0.01537322998046875, 0.0002484321594238281, 0.1624755859375, 1.4185905456542969e-05, 0.023193359375, 0.0013074874877929688, 0.035736083984375, 0.0021266937255859375, 0.01172637939453125, 0.0002987384796142578, 0.00014126300811767578, 0.0002340078353881836, 1.7881393432617188e-05, 0.0001983642578125, 0.0033740997314453125], "tokens": [284, 1022, 275, 319, 3759, 312, 3088, 687, 19915, 111, 13696, 786, 438, 3088, 687, 458, 319, 10365, 835, 623, 3088, 687, 10365, 111, 275, 319, 30352, 619, 312, 3088, 687, 2064, 11915, 15144, 8640, 1451, 32, 275, 319, 275, 319, 477, 753, 225, 10365, 786, 372, 526, 12044, 3032, 810, 458]}
{"line_number": 1063, "line_type": "original", "code": "        if (isNaN) {", "entropy": 1.03125, "is_bug_line": true, "sus_score": 0.6284564733505249, "per_token_entropy": [2.94140625, 0.51513671875, 0.347412109375, 1.65625, 0.5029296875, 0.225830078125], "tokens": [351, 415, 308, 26821, 27, 301]}
{"line_number": 1063, "line_type": "generated", "code": "\n        if (isNaN) {\n            return Arrays.asList(NaN);\n        }\n        if (isInfinite()) {\n            return Arrays.asList(this);\n        }", "entropy": 0.265869140625, "is_bug_line": true, "sus_score": 0.6284564733505249, "per_token_entropy": [1.3544921875, 0.89599609375, 0.193359375, 0.465087890625, 0.482666015625, 0.01476287841796875, 0.048583984375, 0.0860595703125, 0.93115234375, 0.001712799072265625, 0.00982666015625, 0.00439453125, 0.018707275390625, 0.0038585662841796875, 0.03924560546875, 0.002635955810546875, 0.81396484375, 0.238525390625, 0.1019287109375, 0.45458984375, 0.00029850006103515625, 0.3427734375, 0.0012607574462890625, 0.02386474609375, 0.01457977294921875, 0.02294921875, 6.42538070678711e-05, 0.0003876686096191406, 0.0009717941284179688, 2.12109375, 0.0018625259399414062, 0.08074951171875, 0.0028629302978515625], "tokens": [291, 415, 308, 26821, 27, 301, 324, 442, 14473, 32, 14102, 26, 11126, 293, 291, 320, 291, 415, 308, 28823, 11949, 1157, 301, 324, 442, 14473, 32, 14102, 26, 578, 293, 291, 320]}
{"line_number": 807, "line_type": "original", "code": "     * equals {@link Complex#ZERO}.", "entropy": 3.90625, "is_bug_line": false, "sus_score": 0.6244764924049377, "per_token_entropy": [3.05859375, 0.1878662109375, 17.109375, 5.90234375, 0.1112060546875, 0.5224609375, 0.002468109130859375, 6.265625, 1.994140625], "tokens": [262, 319, 12423, 3088, 1204, 19915, 21, 13977, 4009]}
{"line_number": 807, "line_type": "generated", "code": "\n     *   sin(0 + 0i) = 0 + 0i\n     *  </code>\n     * </pre>\n     *\n     * @return the value of sin({@code this}).\n     * @since 1.2", "entropy": 0.1075439453125, "is_bug_line": false, "sus_score": 0.6244764924049377, "per_token_entropy": [0.231201171875, 0.00383758544921875, 1.01953125, 0.014068603515625, 0.0311431884765625, 0.2366943359375, 0.040679931640625, 0.018951416015625, 0.00044345855712890625, 0.01465606689453125, 0.0003294944763183594, 0.0008802413940429688, 0.00020039081573486328, 3.933906555175781e-06, 0.275634765625, 4.1365623474121094e-05, 1.7881393432617188e-06, 0.00244140625, 0.0794677734375, 0.000957489013671875, 0.047637939453125, 0.0006251335144042969, 0.0006556510925292969, 0.0214080810546875, 0.0090484619140625, 0.000949859619140625, 0.0052337646484375, 2.8848648071289062e-05, 0.00836181640625, 0.00946807861328125, 9.369850158691406e-05, 0.1409912109375, 9.119510650634766e-05, 0.010040283203125, 0.00473785400390625, 0.047637939453125, 0.1339111328125, 0.97314453125, 1.14453125, 0.509765625, 2.193450927734375e-05, 0.0005745887756347656, 0.0011348724365234375, 0.163330078125, 0.0087127685546875, 0.210205078125, 0.004962921142578125, 0.1278076171875, 0.0005860328674316406, 0.0333251953125, 0.0001232624053955078, 0.001552581787109375], "tokens": [275, 319, 261, 9812, 26, 34, 474, 225, 34, 91, 27, 280, 225, 34, 474, 225, 34, 91, 275, 319, 225, 576, 687, 48, 275, 319, 576, 1001, 48, 275, 319, 275, 319, 477, 601, 322, 786, 432, 9812, 1371, 50, 687, 458, 12665, 275, 319, 477, 8119, 225, 35, 32, 36]}
{"line_number": 871, "line_type": "original", "code": "", "entropy": 2.853515625, "is_bug_line": false, "sus_score": 0.6224997043609619, "per_token_entropy": [2.853515625], "tokens": [203]}
{"line_number": 871, "line_type": "generated", "code": "\n     * Returns {@link Complex#NaN} if either real or imaginary part of the\n     * input argument is {@code NaN} or if it is {@code null}.\n     * <br/>\n     * Infinite values in real or imaginary parts of", "entropy": 0.155517578125, "is_bug_line": false, "sus_score": 0.6224997043609619, "per_token_entropy": [0.27587890625, 0.04510498046875, 1.537109375, 0.2066650390625, 0.07659912109375, 0.0026569366455078125, 0.00038933753967285156, 0.001140594482421875, 0.0025310516357421875, 0.0309295654296875, 0.1239013671875, 0.00246429443359375, 0.0110626220703125, 0.0002028942108154297, 8.940696716308594e-06, 0.01404571533203125, 0.036773681640625, 0.0145111083984375, 0.054901123046875, 0.00011408329010009766, 0.0005478858947753906, 0.00018310546875, 0.00037980079650878906, 0.0523681640625, 0.00614166259765625, 8.678436279296875e-05, 0.336669921875, 0.78515625, 0.6630859375, 0.26708984375, 0.1923828125, 0.95654296875, 0.081298828125, 0.06451416015625, 0.024566650390625, 0.01116180419921875, 0.0003063678741455078, 0.2086181640625, 0.175537109375, 0.0105743408203125, 0.003948211669921875, 8.356571197509766e-05, 0.346923828125, 0.0041961669921875, 1.32421875, 0.0007519721984863281, 0.00011909008026123047, 0.06298828125, 0.00022482872009277344, 4.76837158203125e-07, 0.063720703125, 0.0080108642578125], "tokens": [275, 319, 3759, 3088, 1204, 19915, 21, 11126, 111, 415, 3154, 4011, 556, 17463, 3172, 1742, 432, 322, 275, 319, 1509, 2793, 438, 3088, 687, 21644, 111, 556, 415, 561, 438, 3088, 687, 744, 4009, 275, 319, 333, 839, 2039, 275, 319, 701, 11949, 2078, 328, 4011, 556, 17463, 3172, 8710, 432]}
{"line_number": 392, "line_type": "original", "code": "     * @return true if either or both parts of this complex number is", "entropy": 1.474609375, "is_bug_line": false, "sus_score": 0.618450939655304, "per_token_entropy": [6.84765625, 3.26171875, 0.98046875, 0.9560546875, 4.55859375, 0.08868408203125, 1.6181640625, 2.275390625, 0.0038928985595703125, 0.08489990234375, 0.0780029296875, 0.1826171875, 0.28759765625, 0.1429443359375, 0.76025390625], "tokens": [262, 319, 477, 601, 861, 415, 3154, 556, 4335, 8710, 432, 458, 8640, 1451, 438]}
{"line_number": 392, "line_type": "generated", "code": "\n        if (isInfinite || factor.isInfinite) {\n            return INF;\n        }\n        double a = getReal();\n        double b = getImaginary();\n        double c = factor.getReal();\n        double d = factor.getImaginary();", "entropy": 0.1064453125, "is_bug_line": false, "sus_score": 0.618450939655304, "per_token_entropy": [0.2420654296875, 0.84033203125, 0.0626220703125, 0.1397705078125, 0.00011682510375976562, 0.034210205078125, 0.00855255126953125, 0.000568389892578125, 0.0005054473876953125, 2.1457672119140625e-06, 0.048828125, 0.0022907257080078125, 0.0203399658203125, 0.07666015625, 1.515625, 0.0062255859375, 0.0190582275390625, 0.0006270408630371094, 0.53125, 0.68359375, 0.215087890625, 0.10357666015625, 0.91259765625, 0.004547119140625, 0.007572174072265625, 0.0009508132934570312, 0.0007801055908203125, 0.0096282958984375, 0.00010752677917480469, 0.01137542724609375, 5.245208740234375e-05, 2.6226043701171875e-06, 5.5789947509765625e-05, 0.00514984130859375, 0.0029239654541015625, 0.00051116943359375, 0.0004551410675048828, 0.0011167526245117188, 0.00010204315185546875, 0.0220184326171875, 5.626678466796875e-05, 0.0007824897766113281, 0.00040411949157714844, 0.0010290145874023438, 4.935264587402344e-05, 4.9591064453125e-05, 0.00020599365234375, 7.152557373046875e-07, 0.0002956390380859375, 5.1021575927734375e-05, 1.7881393432617188e-06, 0.00014734268188476562], "tokens": [291, 415, 308, 28823, 11949, 1276, 10365, 32, 28823, 11949, 27, 301, 324, 442, 47257, 45, 291, 320, 291, 2064, 312, 280, 622, 6877, 473, 291, 2064, 323, 280, 622, 42364, 3172, 473, 291, 2064, 281, 280, 10365, 32, 371, 6877, 473, 291, 2064, 343, 280, 10365, 32, 371, 42364, 3172, 473]}
