{"line_number": 222, "line_type": "original", "code": "    public SubLine wholeLine() {", "entropy": 1.44140625, "is_bug_line": false, "sus_score": 0.5775929689407349, "per_token_entropy": [4.79296875, 2.83984375, 0.439697265625, 0.0024242401123046875, 3.05859375, 0.249267578125, 0.046051025390625, 0.1046142578125], "tokens": [264, 562, 3725, 1811, 9844, 1811, 346, 301]}
{"line_number": 222, "line_type": "generated", "code": "\n    /** Build a sub-line covering a sub-region of the line.\n     * @param interval sub-region of the line\n     * @return a sub-line covering the sub-region of the line\n     */\n    public SubLine build", "entropy": 0.27880859375, "is_bug_line": false, "sus_score": 0.5775929689407349, "per_token_entropy": [0.82177734375, 0.176025390625, 0.28466796875, 0.0279083251953125, 0.0523681640625, 0.004108428955078125, 0.004764556884765625, 0.31640625, 0.0005159378051757812, 0.720703125, 1.6591796875, 0.09820556640625, 2.37109375, 0.1739501953125, 0.01007080078125, 0.134033203125, 0.0203704833984375, 0.0279541015625, 0.0010347366333007812, 0.11944580078125, 0.00893402099609375, 1.4013671875, 1.212890625, 0.01154327392578125, 0.038055419921875, 0.69873046875, 0.03375244140625, 0.10369873046875, 0.60546875, 0.000316619873046875, 0.0008273124694824219, 0.0028553009033203125, 0.06402587890625, 0.0178070068359375, 0.004573822021484375, 0.0023365020751953125, 0.1201171875, 0.0001735687255859375, 0.40771484375, 0.486328125, 0.00391387939453125, 0.0028476715087890625, 0.350341796875, 0.0052337646484375, 0.01451873779296875, 0.013427734375, 0.25927734375, 0.2060546875, 0.0165863037109375, 0.20751953125, 0.0003070831298828125, 1.166015625], "tokens": [284, 1022, 5238, 312, 1361, 31, 928, 6369, 299, 312, 1361, 31, 3419, 432, 322, 1628, 32, 275, 319, 477, 753, 7898, 1361, 31, 3419, 432, 322, 1628, 275, 319, 477, 601, 312, 1361, 31, 928, 6369, 299, 322, 1361, 31, 3419, 432, 322, 1628, 275, 569, 284, 562, 3725, 1811, 1968]}
{"line_number": 79, "line_type": "original", "code": "        this.direction = new Vector3D(1.0 / FastMath.sqrt(norm2), delta);", "entropy": 1.3251953125, "is_bug_line": false, "sus_score": 0.5445365905761719, "per_token_entropy": [3.150390625, 6.0703125, 0.437255859375, 1.0947265625, 0.69140625, 1.3955078125, 0.0266571044921875, 0.00946044921875, 0.0004677772521972656, 0.181396484375, 0.73193359375, 0.049407958984375, 0.0008754730224609375, 7.05859375, 5.05078125, 0.00035119056701660156, 9.918212890625e-05, 0.306396484375, 0.0222015380859375, 2.08984375, 0.260986328125, 0.05755615234375, 3.06640625, 0.06695556640625], "tokens": [351, 458, 32, 7354, 280, 537, 4107, 37, 54, 26, 35, 32, 34, 517, 15938, 5717, 32, 8663, 26, 7927, 36, 471, 7715, 293]}
{"line_number": 79, "line_type": "generated", "code": "\n    }\n\n    /** {@inheritDoc}\n     * @see #pointAt(double)\n     */\n    public Vector<Euclidean3D> toSpace(final Vector1D subPoint) {\n        return pointAt(subPoint.getX());", "entropy": 0.07965087890625, "is_bug_line": false, "sus_score": 0.5445365905761719, "per_token_entropy": [0.261962890625, 0.146240234375, 0.11614990234375, 0.00891876220703125, 0.1185302734375, 0.0001201629638671875, 0.0006585121154785156, 0.0821533203125, 0.0113372802734375, 0.0762939453125, 0.031707763671875, 0.03240966796875, 0.3046875, 0.00017535686492919922, 0.0002830028533935547, 0.00342559814453125, 0.00021326541900634766, 0.0015125274658203125, 0.017913818359375, 0.005802154541015625, 0.0081634521484375, 0.07000732421875, 0.424560546875, 0.0010442733764648438, 6.794929504394531e-06, 0.2333984375, 3.5762786865234375e-07, 0.000118255615234375, 0.19384765625, 0.0014886856079101562, 0.0043487548828125, 0.005046844482421875, 0.001773834228515625, 0.07745361328125, 4.887580871582031e-06, 0.72021484375, 0.41650390625, 0.0008454322814941406, 0.006244659423828125, 0.0115203857421875, 0.022369384765625, 0.286865234375, 3.24249267578125e-05, 0.046630859375, 0.0009908676147460938, 7.748603820800781e-06, 0.0001825094223022461, 0.1424560546875, 0.008087158203125], "tokens": [284, 320, 446, 1022, 3088, 18446, 111, 275, 319, 477, 2970, 588, 1493, 1076, 26, 2627, 27, 275, 569, 284, 562, 4107, 46, 55, 34986, 37, 54, 48, 372, 5135, 26, 3220, 4107, 35, 54, 1361, 1943, 27, 301, 291, 442, 2260, 1076, 26, 1113, 1943, 32, 18817, 1035]}
{"line_number": 249, "line_type": "original", "code": "", "entropy": 0.2042236328125, "is_bug_line": false, "sus_score": 0.5380764603614807, "per_token_entropy": [0.2042236328125], "tokens": [203]}
{"line_number": 249, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5380764603614807, "per_token_entropy": [], "tokens": []}
{"line_number": 87, "line_type": "original", "code": "        final Line reverted = new Line(zero, zero.subtract(direction));", "entropy": 0.70654296875, "is_bug_line": true, "sus_score": 0.48798123002052307, "per_token_entropy": [5.74609375, 3.3046875, 0.111083984375, 0.0298309326171875, 1.9550323486328125e-05, 0.0404052734375, 0.0296630859375, 0.0026874542236328125, 0.1492919921875, 1.0546875, 0.08673095703125, 0.57763671875, 0.0220489501953125, 0.736328125, 0.0396728515625, 0.01505279541015625, 0.059478759765625], "tokens": [351, 1158, 7064, 316, 17445, 280, 537, 7064, 26, 6158, 30, 5934, 32, 25330, 26, 7354, 876]}
{"line_number": 87, "line_type": "generated", "code": "\n    /** Revert the instance.\n     */\n    private Line reverted;", "entropy": 0.52587890625, "is_bug_line": true, "sus_score": 0.48798123002052307, "per_token_entropy": [0.705078125, 0.276123046875, 1.9150390625, 0.11126708984375, 0.269775390625, 0.57373046875, 0.387939453125, 0.09881591796875, 1.2705078125, 0.03594970703125, 0.1138916015625, 0.424560546875, 0.8408203125, 0.0010223388671875, 0.86181640625], "tokens": [284, 1022, 902, 1627, 322, 1980, 32, 275, 569, 284, 945, 7064, 316, 17445, 45]}
{"line_number": 374, "line_type": "original", "code": "", "entropy": 0.2042236328125, "is_bug_line": false, "sus_score": 0.48798123002052307, "per_token_entropy": [0.2042236328125], "tokens": [203]}
{"line_number": 374, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.48798123002052307, "per_token_entropy": [], "tokens": []}
{"line_number": 88, "line_type": "original", "code": "        return reverted;", "entropy": 1.5048828125, "is_bug_line": false, "sus_score": 0.4696970582008362, "per_token_entropy": [5.51953125, 1.1982421875, 0.72509765625, 0.000553131103515625, 0.08135986328125], "tokens": [351, 442, 316, 17445, 45]}
{"line_number": 88, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.4696970582008362, "per_token_entropy": [], "tokens": []}
{"line_number": 80, "line_type": "original", "code": "        zero = new Vector3D(1.0, p1, -p1.dotProduct(delta) / norm2, delta);", "entropy": 0.884765625, "is_bug_line": false, "sus_score": 0.45723846554756165, "per_token_entropy": [6.35546875, 4.5859375, 0.73388671875, 0.96337890625, 0.01265716552734375, 0.0010833740234375, 9.107589721679688e-05, 0.08453369140625, 2.298828125, 0.151123046875, 0.0010128021240234375, 0.058929443359375, 0.97998046875, 0.175048828125, 1.13671875, 1.8271484375, 1.0263671875, 0.063232421875, 0.01003265380859375, 0.07159423828125, 0.00016748905181884766, 0.0017757415771484375, 4.31640625, 0.6640625, 0.015869140625, 0.1378173828125, 0.11114501953125, 0.6123046875, 0.1201171875, 0.028076171875], "tokens": [351, 5934, 280, 537, 4107, 37, 54, 26, 35, 32, 34, 30, 298, 35, 30, 429, 98, 35, 32, 4260, 3409, 26, 6558, 27, 517, 9807, 36, 30, 7715, 293]}
{"line_number": 80, "line_type": "generated", "code": "\n\n    /** {@inheritDoc}\n     * @see #revert()\n     */\n    public Vector3D fromSubSpace(final Vector1D abscissa) {\n        return pointAt(abscissa.getX());\n    }\n\n    /** Get the closest point to", "entropy": 0.30517578125, "is_bug_line": false, "sus_score": 0.45723846554756165, "per_token_entropy": [0.998046875, 0.01523590087890625, 0.2137451171875, 0.00013554096221923828, 0.0005373954772949219, 0.09747314453125, 0.00933074951171875, 0.1080322265625, 0.043853759765625, 0.038970947265625, 1.888671875, 0.0014944076538085938, 0.0017309188842773438, 0.10491943359375, 0.007595062255859375, 0.02874755859375, 1.4150390625, 1.7421875, 0.001750946044921875, 0.79248046875, 0.01323699951171875, 0.00010883808135986328, 8.428096771240234e-05, 0.00444793701171875, 0.0037994384765625, 0.720703125, 1.6570091247558594e-05, 1.7529296875, 0.005649566650390625, 0.00838470458984375, 0.00957489013671875, 0.01375579833984375, 0.01384735107421875, 0.082275390625, 0.2117919921875, 6.604194641113281e-05, 0.045379638671875, 0.0009298324584960938, 1.1920928955078125e-07, 0.00047206878662109375, 0.0005593299865722656, 0.1558837890625, 0.005504608154296875, 0.03564453125, 0.0005488395690917969, 0.4912109375, 0.034576416015625, 1.375, 0.8330078125, 1.857421875, 0.11737060546875, 0.568359375], "tokens": [446, 1022, 3088, 18446, 111, 275, 319, 477, 2970, 588, 43346, 346, 275, 569, 284, 562, 4107, 37, 54, 645, 1721, 5135, 26, 3220, 4107, 35, 54, 1399, 545, 47250, 27, 301, 291, 442, 2260, 1076, 26, 360, 545, 47250, 32, 18817, 1035, 284, 320, 446, 1022, 1390, 322, 18122, 2260, 372]}
{"line_number": 55, "line_type": "original", "code": "        reset(p1, p2);", "entropy": 1.7666015625, "is_bug_line": false, "sus_score": 0.4451015293598175, "per_token_entropy": [6.1640625, 8.5, 0.1568603515625, 0.99609375, 0.0206756591796875, 0.01165771484375, 0.01512908935546875, 0.0018177032470703125, 0.02850341796875], "tokens": [351, 5657, 26, 98, 35, 30, 298, 36, 293]}
{"line_number": 55, "line_type": "generated", "code": "\n\n    /** Get the abscissa of a point on the line.\n     * @param point point belonging to the line\n     * @return abscissa of the point\n     * @exception MathIllegalArgumentException if the point is not on the line\n     */\n   ", "entropy": 0.1571044921875, "is_bug_line": false, "sus_score": 0.4451015293598175, "per_token_entropy": [0.77490234375, 0.0533447265625, 0.70654296875, 0.339599609375, 1.70703125, 0.00011873245239257812, 0.0006451606750488281, 0.369873046875, 0.11798095703125, 0.054351806640625, 0.60595703125, 0.00809478759765625, 0.006450653076171875, 0.051483154296875, 0.034942626953125, 2.658367156982422e-05, 0.273681640625, 0.007129669189453125, 0.264892578125, 0.08197021484375, 0.1485595703125, 0.0221405029296875, 0.004566192626953125, 0.003597259521484375, 0.010345458984375, 0.11248779296875, 0.0001455545425415039, 0.0024547576904296875, 0.017242431640625, 0.312744140625, 0.0002434253692626953, 3.063678741455078e-05, 0.032684326171875, 0.00914764404296875, 0.07470703125, 0.625, 0.326171875, 0.003238677978515625, 0.062164306640625, 0.0131988525390625, 0.10980224609375, 0.010467529296875, 0.01273345947265625, 0.012603759765625, 0.4423828125, 0.1744384765625, 0.047210693359375, 0.0005373954772949219, 0.0088958740234375, 0.01096343994140625, 0.09588623046875, 0.0085906982421875], "tokens": [446, 1022, 1390, 322, 1399, 545, 47250, 432, 312, 2260, 544, 322, 1628, 32, 275, 319, 477, 753, 2260, 2260, 22056, 299, 372, 322, 1628, 275, 319, 477, 601, 1399, 545, 47250, 432, 322, 2260, 275, 319, 477, 3893, 4175, 25907, 415, 322, 2260, 438, 646, 544, 322, 1628, 275, 569, 284]}
{"line_number": 74, "line_type": "original", "code": "        final Vector3D delta = p2.subtract(p1);", "entropy": 0.6982421875, "is_bug_line": false, "sus_score": 0.44089093804359436, "per_token_entropy": [5.4609375, 2.609375, 0.70703125, 0.049041748046875, 6.532669067382812e-05, 0.880859375, 0.20361328125, 0.39501953125, 0.09417724609375, 0.007434844970703125, 0.01457977294921875, 0.00011599063873291016, 0.0031070709228515625, 0.00014209747314453125, 0.048858642578125], "tokens": [351, 1158, 4107, 37, 54, 7715, 280, 298, 36, 32, 25330, 26, 98, 35, 293]}
{"line_number": 74, "line_type": "generated", "code": "\n    /** Get the point at the given abscissa.\n     * @param abscissa desired abscissa for the point\n     * @return one point belonging to the line, at specified abscissa\n     */\n    public Vector3D pointAt", "entropy": 0.20361328125, "is_bug_line": false, "sus_score": 0.44089093804359436, "per_token_entropy": [0.348388671875, 0.0648193359375, 0.94580078125, 0.52880859375, 1.9453125, 0.34619140625, 0.9521484375, 1.0869140625, 0.213134765625, 0.0001506805419921875, 0.0033588409423828125, 0.77392578125, 0.04571533203125, 0.0007619857788085938, 0.57568359375, 0.036651611328125, 0.04534912109375, 0.00156402587890625, 0.000728607177734375, 0.271240234375, 0.0120086669921875, 2.777576446533203e-05, 3.921985626220703e-05, 0.164306640625, 0.0007772445678710938, 0.00559234619140625, 0.033599853515625, 0.001377105712890625, 0.002777099609375, 0.2083740234375, 0.5205078125, 0.004367828369140625, 0.004058837890625, 0.0002340078353881836, 0.0001882314682006836, 0.0007257461547851562, 0.006664276123046875, 0.0289459228515625, 0.007808685302734375, 0.0008935928344726562, 0.00022971630096435547, 1.1920928955078125e-06, 0.00010120868682861328, 0.01413726806640625, 0.4345703125, 0.01806640625, 0.09423828125, 0.1060791015625, 0.36181640625, 0.0005211830139160156, 0.36376953125, 0.0007309913635253906], "tokens": [284, 1022, 1390, 322, 2260, 821, 322, 2702, 1399, 545, 47250, 32, 275, 319, 477, 753, 1399, 545, 47250, 10848, 1399, 545, 47250, 436, 322, 2260, 275, 319, 477, 601, 1591, 2260, 22056, 299, 372, 322, 1628, 30, 821, 3191, 1399, 545, 47250, 275, 569, 284, 562, 4107, 37, 54, 2260, 1076]}
{"line_number": 75, "line_type": "original", "code": "        final double norm2 = delta.getNormSq();", "entropy": 1.2236328125, "is_bug_line": false, "sus_score": 0.44089093804359436, "per_token_entropy": [4.14453125, 3.76171875, 0.64501953125, 1.77734375, 0.313720703125, 0.1297607421875, 3.16015625, 0.1505126953125, 0.1431884765625, 0.0009016990661621094, 0.450439453125, 0.01242828369140625], "tokens": [351, 1158, 2064, 9807, 36, 280, 7715, 32, 371, 14373, 17509, 473]}
{"line_number": 75, "line_type": "generated", "code": "\n     */\n    public Vector1D toSubSpace(final Vector3D p) {\n        return new Vector1D(getAbscissa(p));\n    }\n\n    /** {@inheritDoc}", "entropy": 0.193359375, "is_bug_line": false, "sus_score": 0.44089093804359436, "per_token_entropy": [0.70849609375, 0.3935546875, 0.0299072265625, 0.572265625, 1.3125, 0.7216796875, 0.0001423358917236328, 0.33935546875, 0.023651123046875, 0.07708740234375, 0.00044798851013183594, 0.0355224609375, 0.399658203125, 0.07110595703125, 2.86102294921875e-06, 1.6708984375, 0.00939178466796875, 0.06671142578125, 0.0733642578125, 0.466064453125, 0.0677490234375, 0.043731689453125, 0.0018463134765625, 6.794929504394531e-06, 0.004703521728515625, 0.1317138671875, 0.00025272369384765625, 1.1801719665527344e-05, 7.843971252441406e-05, 0.00037169456481933594, 0.0009217262268066406, 0.0234375, 0.01509857177734375, 0.0007920265197753906, 0.0892333984375, 0.00395965576171875, 0.1822509765625, 0.0001875162124633789, 0.0006394386291503906], "tokens": [275, 569, 284, 562, 4107, 35, 54, 372, 1721, 5135, 26, 3220, 4107, 37, 54, 298, 27, 301, 291, 442, 537, 4107, 35, 54, 26, 371, 2774, 545, 47250, 26, 98, 876, 284, 320, 446, 1022, 3088, 18446, 111]}
{"line_number": 76, "line_type": "original", "code": "        if (norm2 == 0.0) {", "entropy": 1.3740234375, "is_bug_line": false, "sus_score": 0.44089093804359436, "per_token_entropy": [2.755859375, 3.71875, 0.27392578125, 5.34765625, 2.404296875, 0.416259765625, 0.011016845703125, 0.0034275054931640625, 0.810546875, 0.0010251998901367188, 0.013763427734375, 0.724609375], "tokens": [351, 415, 308, 7927, 36, 610, 225, 34, 32, 34, 27, 301]}
{"line_number": 76, "line_type": "generated", "code": "\n     */\n    public double[] embed(final Vector3D point) {\n        return new double[] { getAbscissa(point) };\n    }\n\n    /** {@inheritDoc}\n     * @see #pointAt(double)", "entropy": 0.1719970703125, "is_bug_line": false, "sus_score": 0.44089093804359436, "per_token_entropy": [0.8056640625, 0.233642578125, 0.0618896484375, 0.56005859375, 0.36328125, 0.430419921875, 1.8779296875, 0.0085601806640625, 0.0284423828125, 0.3095703125, 0.08636474609375, 9.5367431640625e-07, 0.11151123046875, 0.04254150390625, 0.09991455078125, 0.130615234375, 0.52783203125, 0.0037994384765625, 0.00034499168395996094, 0.0218505859375, 0.00717926025390625, 0.828125, 5.435943603515625e-05, 2.7418136596679688e-06, 2.0265579223632812e-06, 0.0006580352783203125, 0.00041294097900390625, 0.01218414306640625, 0.004978179931640625, 0.15576171875, 0.0005750656127929688, 0.13916015625, 0.009002685546875, 0.28369140625, 0.0002722740173339844, 0.0004892349243164062, 0.09967041015625, 0.040802001953125, 0.2174072265625, 0.08319091796875, 0.0272979736328125, 0.291015625, 8.034706115722656e-05, 0.0006546974182128906, 0.0033550262451171875, 0.0005431175231933594], "tokens": [275, 569, 284, 562, 2064, 1178, 8195, 26, 3220, 4107, 37, 54, 2260, 27, 301, 291, 442, 537, 2064, 1178, 301, 622, 2774, 545, 47250, 26, 1493, 27, 1472, 284, 320, 446, 1022, 3088, 18446, 111, 275, 319, 477, 2970, 588, 1493, 1076, 26, 2627, 27]}
{"line_number": 152, "line_type": "original", "code": "     * @return true if p belongs to the line", "entropy": 2.17578125, "is_bug_line": false, "sus_score": 0.44029390811920166, "per_token_entropy": [5.4609375, 3.318359375, 0.439697265625, 0.73193359375, 4.4765625, 0.088623046875, 5.78515625, 2.24609375, 0.00916290283203125, 0.09033203125, 1.28515625], "tokens": [262, 319, 477, 601, 861, 415, 298, 17732, 372, 322, 1628]}
{"line_number": 152, "line_type": "generated", "code": "        final double lambda = delta0.dotProduct(line.direction) / n;\n        return line.pointAt(lambda);\n\n    }\n\n    /** Get a line parallel to the instance and passing through a point.\n     * @param point point belonging", "entropy": 0.39599609375, "is_bug_line": false, "sus_score": 0.44029390811920166, "per_token_entropy": [1.3291015625, 0.381591796875, 0.8857421875, 3.1171875, 0.1407470703125, 0.77734375, 0.0018243789672851562, 0.0016021728515625, 0.078369140625, 1.0609626770019531e-05, 0.004413604736328125, 0.8203125, 0.0012044906616210938, 0.00039005279541015625, 0.0308990478515625, 0.046478271484375, 0.019287109375, 0.01496124267578125, 0.5361328125, 0.544921875, 1.14453125, 0.00019741058349609375, 0.55419921875, 9.620189666748047e-05, 0.01180267333984375, 0.006500244140625, 0.127685546875, 0.09222412109375, 0.0008897781372070312, 0.128173828125, 0.06005859375, 1.1220703125, 0.73876953125, 1.4541015625, 2.318359375, 0.0099639892578125, 0.0767822265625, 0.0228729248046875, 1.72265625, 0.436767578125, 0.04742431640625, 0.31591796875, 0.0968017578125, 0.0140838623046875, 0.0066070556640625, 0.0002505779266357422, 0.18798828125, 0.0015039443969726562, 0.455810546875, 0.06964111328125, 0.62841796875, 0.00423431396484375], "tokens": [351, 1158, 2064, 9254, 280, 7715, 34, 32, 4260, 3409, 26, 928, 32, 7354, 27, 517, 310, 45, 291, 442, 1628, 32, 1493, 1076, 26, 5962, 293, 446, 320, 446, 1022, 1390, 312, 1628, 11935, 372, 322, 1980, 461, 13256, 3919, 312, 2260, 32, 275, 319, 477, 753, 2260, 2260, 22056, 299]}
{"line_number": 154, "line_type": "original", "code": "    public boolean contains(final Vector3D p) {", "entropy": 1.6220703125, "is_bug_line": false, "sus_score": 0.43825456500053406, "per_token_entropy": [5.03515625, 7.70703125, 3.818359375, 1.115234375, 0.053802490234375, 0.1993408203125, 0.48046875, 0.047210693359375, 4.410743713378906e-06, 0.7470703125, 0.048919677734375, 0.209228515625], "tokens": [264, 562, 1905, 4304, 26, 3220, 4107, 37, 54, 298, 27, 301]}
{"line_number": 154, "line_type": "generated", "code": "\n        return zero.add(direction.scalarMultiply(a / n)).add(line.direction.scalarMultiply(b / n));\n    }\n\n    /** Compute the intersection point between the instance and another line.\n     * @param line line to check against", "entropy": 0.2325439453125, "is_bug_line": false, "sus_score": 0.43825456500053406, "per_token_entropy": [0.2227783203125, 0.97412109375, 0.7080078125, 0.22802734375, 0.013946533203125, 0.36181640625, 0.274658203125, 0.1561279296875, 0.10186767578125, 0.0022182464599609375, 0.3173828125, 0.042449951171875, 0.93408203125, 0.1209716796875, 0.802734375, 0.06243896484375, 0.00595855712890625, 0.0380859375, 0.0006871223449707031, 0.0013380050659179688, 0.002834320068359375, 0.001026153564453125, 6.878376007080078e-05, 0.0416259765625, 0.0013065338134765625, 0.01059722900390625, 0.002132415771484375, 0.006397247314453125, 0.81689453125, 0.005359649658203125, 0.277587890625, 0.047119140625, 1.9052734375, 0.11968994140625, 1.5654296875, 0.0484619140625, 0.4130859375, 0.227783203125, 0.0205535888671875, 0.01751708984375, 0.45361328125, 0.08837890625, 0.037322998046875, 0.007297515869140625, 7.82012939453125e-05, 0.33056640625, 0.00078582763671875, 0.017120361328125, 0.10040283203125, 0.047119140625, 0.08758544921875, 0.021942138671875], "tokens": [291, 442, 5934, 32, 669, 26, 7354, 32, 13049, 27732, 26, 83, 517, 310, 3427, 669, 26, 928, 32, 7354, 32, 13049, 27732, 26, 84, 517, 310, 876, 284, 320, 446, 1022, 12836, 322, 20877, 2260, 3733, 322, 1980, 461, 4674, 1628, 32, 275, 319, 477, 753, 1628, 1628, 372, 1505, 8187]}
{"line_number": 153, "line_type": "original", "code": "     */", "entropy": 5.6015625, "is_bug_line": false, "sus_score": 0.43699684739112854, "per_token_entropy": [5.3515625, 5.84765625], "tokens": [262, 569]}
{"line_number": 153, "line_type": "generated", "code": "\n        final double b        = delta0.dotProduct(line.direction);\n        final double fac = -a / n;\n\n        return new Vector3D(1.0, zero, a + fac * b, direction);\n\n    }\n\n    /** Get", "entropy": 0.2744140625, "is_bug_line": false, "sus_score": 0.43699684739112854, "per_token_entropy": [0.7607421875, 0.490966796875, 0.23388671875, 0.10809326171875, 0.197998046875, 3.266334533691406e-05, 0.279052734375, 0.00037932395935058594, 0.000209808349609375, 0.035400390625, 0.00033020973205566406, 0.00157928466796875, 0.015167236328125, 0.0007023811340332031, 0.0006494522094726562, 0.0151519775390625, 0.37255859375, 0.07403564453125, 0.0670166015625, 2.0234375, 0.92724609375, 1.078125, 0.6357421875, 0.0469970703125, 0.0231475830078125, 0.0171661376953125, 0.52880859375, 0.289306640625, 1.052734375, 0.0018024444580078125, 0.0003743171691894531, 7.033348083496094e-06, 0.00943756103515625, 0.10089111328125, 0.1416015625, 5.4717063903808594e-05, 0.0017518997192382812, 0.1912841796875, 0.005237579345703125, 1.630859375, 1.0693359375, 0.262451171875, 0.0029239654541015625, 0.0117645263671875, 0.0073394775390625, 0.0105743408203125, 0.02423095703125, 0.08074951171875, 0.0032196044921875, 0.206298828125, 0.042144775390625, 1.1875], "tokens": [291, 1158, 2064, 323, 351, 280, 7715, 34, 32, 4260, 3409, 26, 928, 32, 7354, 293, 291, 1158, 2064, 9652, 280, 429, 83, 517, 310, 45, 584, 442, 537, 4107, 37, 54, 26, 35, 32, 34, 30, 5934, 30, 312, 474, 9652, 319, 323, 30, 6983, 293, 446, 320, 446, 1022, 1390]}
{"line_number": 287, "line_type": "original", "code": "", "entropy": 0.2042236328125, "is_bug_line": false, "sus_score": 0.42941513657569885, "per_token_entropy": [0.2042236328125], "tokens": [203]}
{"line_number": 287, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.42941513657569885, "per_token_entropy": [], "tokens": []}
{"line_number": 286, "line_type": "original", "code": "", "entropy": 0.2042236328125, "is_bug_line": false, "sus_score": 0.3842583894729614, "per_token_entropy": [0.2042236328125], "tokens": [203]}
{"line_number": 286, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.3842583894729614, "per_token_entropy": [], "tokens": []}
{"line_number": 379, "line_type": "original", "code": "", "entropy": 0.2042236328125, "is_bug_line": false, "sus_score": 0.360542356967926, "per_token_entropy": [0.2042236328125], "tokens": [203]}
{"line_number": 379, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.360542356967926, "per_token_entropy": [], "tokens": []}
{"line_number": 138, "line_type": "original", "code": "    /** Check if the instance is similar to another line.", "entropy": 1.0, "is_bug_line": false, "sus_score": 0.3362567722797394, "per_token_entropy": [4.85546875, 0.102783203125, 1.912109375, 0.11834716796875, 0.2314453125, 0.1005859375, 1.1337890625, 2.091796875, 0.011383056640625, 0.2032470703125, 0.3359375, 0.90478515625], "tokens": [264, 1022, 3456, 415, 322, 1980, 438, 6693, 372, 4674, 1628, 32]}
{"line_number": 138, "line_type": "generated", "code": "\n\n    /** Check if the instance is almost equal to another line.\n     * <p>\n     * If the difference between the angular separation and the distance\n     * between the two lines is less than the given tolerance, the lines\n     * are considered to be almost", "entropy": 0.474853515625, "is_bug_line": false, "sus_score": 0.3362567722797394, "per_token_entropy": [1.0224609375, 0.0762939453125, 1.6689453125, 0.14794921875, 0.2139892578125, 0.10858154296875, 0.77001953125, 1.3759765625, 0.673828125, 0.00559234619140625, 0.0716552734375, 0.460205078125, 0.152587890625, 0.0220947265625, 0.0006651878356933594, 0.468505859375, 0.00128936767578125, 0.0008611679077148438, 0.48095703125, 2.3365020751953125e-05, 0.81201171875, 1.4541015625, 1.306640625, 0.157470703125, 1.029296875, 0.74462890625, 0.384521484375, 1.63671875, 0.08197021484375, 0.95947265625, 0.242919921875, 2.4080276489257812e-05, 0.1435546875, 0.1627197265625, 0.90966796875, 1.2939453125, 0.450927734375, 0.8583984375, 0.145263671875, 0.64208984375, 0.323974609375, 0.1842041015625, 0.05322265625, 0.385986328125, 1.1962890625, 0.17041015625, 3.707408905029297e-05, 0.10394287109375, 0.0031337738037109375, 0.53515625, 0.0972900390625, 0.48974609375], "tokens": [446, 1022, 3456, 415, 322, 1980, 438, 17396, 5040, 372, 4674, 1628, 32, 275, 319, 333, 98, 48, 275, 319, 1670, 322, 10563, 3733, 322, 14760, 43751, 461, 322, 7291, 275, 319, 3733, 322, 3134, 5430, 438, 6679, 2784, 322, 2702, 26434, 30, 322, 5430, 275, 319, 884, 11870, 372, 526, 17396]}
{"line_number": 96, "line_type": "original", "code": "    }", "entropy": 1.8515625, "is_bug_line": false, "sus_score": 0.33308467268943787, "per_token_entropy": [3.498046875, 0.2059326171875], "tokens": [264, 320]}
{"line_number": 96, "line_type": "generated", "code": "\n\n    /** Check if the instance is similar to another line.\n     * <p>Lines are considered similar if they contain the same\n     * points. This does not mean they are equal since they can have\n     * opposite directions.</p>\n     * @param", "entropy": 0.08648681640625, "is_bug_line": false, "sus_score": 0.33308467268943787, "per_token_entropy": [0.7236328125, 0.050872802734375, 1.103515625, 0.052032470703125, 0.12054443359375, 0.0870361328125, 0.127197265625, 0.5810546875, 0.004688262939453125, 0.340576171875, 0.08087158203125, 0.316162109375, 0.01290130615234375, 3.4809112548828125e-05, 0.0928955078125, 0.000423431396484375, 0.0009431838989257812, 0.077392578125, 0.002197265625, 0.0005345344543457031, 0.0111541748046875, 0.004146575927734375, 0.0203704833984375, 0.1865234375, 0.022552490234375, 0.00194549560546875, 0.0221099853515625, 8.082389831542969e-05, 0.0195159912109375, 0.3056640625, 0.0152435302734375, 0.00788116455078125, 0.00015664100646972656, 0.0005745887756347656, 0.0006327629089355469, 0.0001342296600341797, 0.0015993118286132812, 0.0067596435546875, 0.0018510818481445312, 0.0006237030029296875, 0.0012407302856445312, 0.00020492076873779297, 5.269050598144531e-05, 0.010986328125, 0.0032825469970703125, 0.0206146240234375, 0.0003409385681152344, 0.00022685527801513672, 0.0014753341674804688, 5.173683166503906e-05, 0.050262451171875, 0.003139495849609375], "tokens": [446, 1022, 3456, 415, 322, 1980, 438, 6693, 372, 4674, 1628, 32, 275, 319, 333, 98, 48, 8683, 884, 11870, 6693, 415, 2953, 4799, 322, 2432, 275, 319, 4981, 32, 1348, 1957, 646, 5651, 2953, 884, 5040, 4558, 2953, 883, 1159, 275, 319, 30519, 29038, 1730, 98, 48, 275, 319, 477, 753]}
{"line_number": 963, "line_type": "original", "code": "", "entropy": 0.2042236328125, "is_bug_line": false, "sus_score": 0.3285175859928131, "per_token_entropy": [0.2042236328125], "tokens": [203]}
{"line_number": 963, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.3285175859928131, "per_token_entropy": [], "tokens": []}
{"line_number": 960, "line_type": "original", "code": "", "entropy": 0.2042236328125, "is_bug_line": false, "sus_score": 0.3267291784286499, "per_token_entropy": [0.2042236328125], "tokens": [203]}
{"line_number": 960, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.3267291784286499, "per_token_entropy": [], "tokens": []}
