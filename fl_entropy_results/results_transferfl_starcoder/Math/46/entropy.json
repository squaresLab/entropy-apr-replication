{"line_number": 277, "line_type": "original", "code": "            double denominator = d * q + c;", "entropy": 3.12890625, "is_bug_line": false, "sus_score": 0.8795356154441833, "per_token_entropy": [4.5625, 4.3203125, 12.28125, 0.06591796875, 3.650390625, 1.5849609375, 4.36328125, 0.044097900390625, 0.32080078125, 0.0909423828125], "tokens": [1468, 2064, 39920, 280, 343, 319, 2678, 474, 281, 45]}
{"line_number": 277, "line_type": "generated", "code": "\n            if (real == other.getReal() && imaginary == other.getImaginary()) {\n                return true;\n            }\n            if (isNaN && other.isNaN) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n   ", "entropy": 0.224609375, "is_bug_line": false, "sus_score": 0.8795356154441833, "per_token_entropy": [0.292236328125, 1.8525390625, 0.2403564453125, 0.7294921875, 0.178955078125, 1.03125, 0.0190277099609375, 1.115234375, 0.006206512451171875, 0.185791015625, 0.03900146484375, 0.291259765625, 0.0015058517456054688, 0.00875091552734375, 0.0153350830078125, 0.0002180337905883789, 0.0012636184692382812, 0.0015401840209960938, 0.0003008842468261719, 0.1129150390625, 0.0246124267578125, 0.11090087890625, 0.02301025390625, 0.0295867919921875, 0.0005922317504882812, 0.016815185546875, 0.0009684562683105469, 1.6279296875, 0.73046875, 0.104248046875, 0.1580810546875, 0.2313232421875, 0.314208984375, 0.01233673095703125, 0.342529296875, 1.20703125, 0.0028705596923828125, 0.01148223876953125, 0.01001739501953125, 0.00920867919921875, 0.0001844167709350586, 0.0074310302734375, 0.0005464553833007812, 0.419189453125, 0.003147125244140625, 0.019805908203125, 0.0009188652038574219, 0.0023555755615234375, 0.00017559528350830078, 0.031463623046875, 0.0020236968994140625, 0.10064697265625], "tokens": [324, 415, 308, 4543, 610, 1604, 32, 371, 6877, 346, 962, 17463, 3172, 610, 1604, 32, 371, 42364, 3172, 1157, 301, 400, 442, 861, 45, 324, 320, 324, 415, 308, 26821, 962, 1604, 32, 26821, 27, 301, 400, 442, 861, 45, 324, 320, 291, 320, 291, 442, 901, 45, 284, 320, 446]}
{"line_number": 278, "line_type": "original", "code": "            return createComplex((imaginary * q + real) / denominator,", "entropy": 2.6328125, "is_bug_line": false, "sus_score": 0.8770492672920227, "per_token_entropy": [4.484375, 0.311767578125, 11.625, 0.37451171875, 4.23828125, 5.921875, 0.0015535354614257812, 2.787109375, 8.234375, 1.255859375, 0.023834228515625, 0.06298828125, 0.019744873046875, 0.052947998046875, 0.09136962890625], "tokens": [1468, 442, 1487, 12267, 1162, 17792, 3172, 319, 2678, 474, 4011, 27, 517, 39920, 30]}
{"line_number": 278, "line_type": "generated", "code": "\n            return (c.real == real) &&\n                   (c.imaginary == imaginary);\n        }\n        return false;\n    }\n\n    /**\n     * Returns {@code true} iff the values of both real and imaginary parts of\n     * this Complex", "entropy": 0.15478515625, "is_bug_line": false, "sus_score": 0.8770492672920227, "per_token_entropy": [0.34619140625, 0.312255859375, 0.6845703125, 1.5068359375, 0.0018444061279296875, 0.2822265625, 0.0241546630859375, 0.07794189453125, 0.2314453125, 0.060943603515625, 1.1884765625, 0.00536346435546875, 0.0026760101318359375, 2.956390380859375e-05, 0.002941131591796875, 0.007167816162109375, 0.0144500732421875, 0.0007047653198242188, 4.0411949157714844e-05, 0.028411865234375, 0.11090087890625, 0.002155303955078125, 0.09716796875, 0.01000213623046875, 0.0029964447021484375, 0.00023853778839111328, 0.02801513671875, 0.002010345458984375, 0.08941650390625, 0.043487548828125, 0.01491546630859375, 5.7578086853027344e-05, 0.95703125, 0.21044921875, 0.0007867813110351562, 0.0074310302734375, 0.0002567768096923828, 0.318359375, 0.0714111328125, 0.022857666015625, 0.0867919921875, 0.10015869140625, 0.430419921875, 0.00044608116149902344, 0.00040221214294433594, 1.1920928955078125e-07, 0.1495361328125, 0.1505126953125, 0.0069580078125, 6.198883056640625e-06, 0.01202392578125, 0.34326171875], "tokens": [324, 442, 308, 85, 32, 4543, 610, 4011, 27, 962, 4511, 308, 85, 32, 17792, 3172, 610, 17463, 3172, 293, 291, 320, 291, 442, 901, 45, 284, 320, 446, 1022, 275, 319, 3759, 3088, 687, 861, 111, 44778, 322, 2078, 432, 4335, 4011, 461, 17463, 3172, 8710, 432, 275, 319, 458, 19915]}
{"line_number": 583, "line_type": "original", "code": "        if (isNaN) {", "entropy": 0.9609375, "is_bug_line": false, "sus_score": 0.8753437399864197, "per_token_entropy": [2.88671875, 2.25390625, 0.08160400390625, 0.2484130859375, 0.267822265625, 0.027069091796875], "tokens": [351, 415, 308, 26821, 27, 301]}
{"line_number": 583, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.8753437399864197, "per_token_entropy": [], "tokens": []}
{"line_number": 267, "line_type": "original", "code": "        final double c = divisor.getReal();", "entropy": 2.1875, "is_bug_line": false, "sus_score": 0.8730517625808716, "per_token_entropy": [2.79296875, 6.65625, 1.013671875, 5.45703125, 0.67724609375, 4.15625, 0.007205963134765625, 0.04962158203125, 1.0029296875, 0.061492919921875], "tokens": [351, 1158, 2064, 281, 280, 33482, 32, 371, 6877, 473]}
{"line_number": 267, "line_type": "generated", "code": "\n     * @return {@code true} if two Complex objects are equal, {@code false}\n     * otherwise\n     */\n    public boolean equals(Object other) {\n        if (this == other) {\n            return true;\n        }\n        if (other instanceof", "entropy": 0.118896484375, "is_bug_line": false, "sus_score": 0.8730517625808716, "per_token_entropy": [0.509765625, 0.1158447265625, 0.0214080810546875, 0.004764556884765625, 0.272705078125, 0.0007119178771972656, 0.0006589889526367188, 0.00018918514251708984, 0.020538330078125, 0.6181640625, 0.0172119140625, 0.02886962890625, 0.0260772705078125, 0.0066375732421875, 0.05670166015625, 0.693359375, 0.000518798828125, 0.0021152496337890625, 8.416175842285156e-05, 0.2447509765625, 0.0004906654357910156, 1.251953125, 0.1514892578125, 0.1064453125, 0.01268768310546875, 0.72998046875, 0.0031452178955078125, 0.0007843971252441406, 0.007476806640625, 0.1341552734375, 0.0013418197631835938, 0.011474609375, 0.006076812744140625, 0.1287841796875, 0.03912353515625, 0.0225677490234375, 0.09381103515625, 0.006256103515625, 0.00015878677368164062, 0.0188446044921875, 0.007080078125, 0.01531219482421875, 0.01204681396484375, 0.0009198188781738281, 0.0003695487976074219, 0.002277374267578125, 0.00026226043701171875, 0.33203125, 0.0074920654296875, 0.0379638671875, 0.040069580078125, 0.361572265625], "tokens": [275, 319, 477, 601, 3088, 687, 861, 111, 415, 3134, 19915, 4684, 884, 5040, 30, 3088, 687, 901, 111, 275, 319, 5878, 275, 569, 284, 562, 1905, 12423, 26, 959, 1604, 27, 301, 291, 415, 308, 578, 610, 1604, 27, 301, 324, 442, 861, 45, 291, 320, 291, 415, 308, 2455, 5113]}
{"line_number": 254, "line_type": "original", "code": "        if (isNaN || divisor.isNaN) {", "entropy": 1.978515625, "is_bug_line": false, "sus_score": 0.872612476348877, "per_token_entropy": [4.62109375, 2.9453125, 0.1043701171875, 1.7236328125, 0.257568359375, 3.98046875, 3.6640625, 0.0086212158203125, 2.408203125, 0.061004638671875], "tokens": [351, 415, 308, 26821, 1276, 33482, 32, 26821, 27, 301]}
{"line_number": 254, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Returns a {@code Complex} whose value is\n     * <code>(this<sup>exponent</sup>)</code>.\n     * Implements the formula\n     * <pre>\n     *  <code>\n     *   e<sup", "entropy": 0.2117919921875, "is_bug_line": false, "sus_score": 0.872612476348877, "per_token_entropy": [0.47607421875, 0.720703125, 0.37841796875, 0.03900146484375, 0.0197906494140625, 0.00013434886932373047, 0.37744140625, 0.35205078125, 0.0206756591796875, 0.0079345703125, 0.0004546642303466797, 0.005584716796875, 0.0006670951843261719, 0.003002166748046875, 0.000476837158203125, 0.703125, 0.0012302398681640625, 0.271240234375, 1.0361328125, 0.35888671875, 0.04754638671875, 0.042083740234375, 0.03594970703125, 0.0198822021484375, 0.49560546875, 0.0018587112426757812, 0.0004696846008300781, 0.0301971435546875, 2.5033950805664062e-05, 0.037139892578125, 0.040008544921875, 0.0003681182861328125, 1.8212890625, 0.07891845703125, 0.73193359375, 0.357421875, 0.00015103816986083984, 0.0224151611328125, 0.328857421875, 0.0113372802734375, 0.0004892349243164062, 2.5153160095214844e-05, 0.2027587890625, 0.0100250244140625, 0.0016040802001953125, 0.002704620361328125, 0.0010623931884765625, 0.0001519918441772461, 0.388427734375, 1.5244140625, 0.007778167724609375, 0.00031256675720214844], "tokens": [284, 320, 446, 1022, 275, 319, 3759, 312, 3088, 687, 19915, 111, 13696, 786, 438, 275, 319, 333, 687, 1563, 578, 46, 5540, 48, 28323, 377, 5540, 22917, 687, 4503, 275, 319, 34818, 322, 17568, 275, 319, 333, 1001, 48, 275, 319, 225, 333, 687, 48, 275, 319, 261, 484, 46, 5540]}
{"line_number": 425, "line_type": "original", "code": "        if (Double.isInfinite(real) ||", "entropy": 0.8955078125, "is_bug_line": false, "sus_score": 0.8712379336357117, "per_token_entropy": [3.24609375, 0.7490234375, 0.1475830078125, 3.451171875, 0.00023293495178222656, 1.205078125, 0.00019633769989013672, 0.0036678314208984375, 0.8349609375, 0.09515380859375, 0.121337890625], "tokens": [351, 415, 308, 4075, 32, 28823, 11949, 26, 4543, 27, 1276]}
{"line_number": 425, "line_type": "generated", "code": "\n     * Returns {@code NaN} if either {@code this} or {@code subtrahend} has one\n     * or more {@code NaN} parts.\n     * <br/>\n     * Returns {@link #INF} if neither {@code this}", "entropy": 0.0892333984375, "is_bug_line": false, "sus_score": 0.8712379336357117, "per_token_entropy": [0.319580078125, 0.0173187255859375, 0.8271484375, 0.007350921630859375, 0.1722412109375, 0.0008096694946289062, 6.115436553955078e-05, 0.0167388916015625, 0.0814208984375, 0.63330078125, 0.0002562999725341797, 0.028076171875, 0.0006833076477050781, 0.27099609375, 0.07720947265625, 7.271766662597656e-06, 0.004119873046875, 0.00028586387634277344, 1.4424324035644531e-05, 8.749961853027344e-05, 0.0001575946807861328, 0.053924560546875, 0.51513671875, 0.318359375, 1.5854835510253906e-05, 0.00028061866760253906, 0.00039887428283691406, 0.08123779296875, 0.001911163330078125, 0.0007958412170410156, 0.0001615285873413086, 0.0092315673828125, 0.474365234375, 0.1024169921875, 0.0003676414489746094, 0.17822265625, 0.02813720703125, 0.00919342041015625, 0.0017261505126953125, 6.210803985595703e-05, 0.0101165771484375, 0.327392578125, 0.0352783203125, 0.0014934539794921875, 0.01537322998046875, 0.00013005733489990234, 0.0064849853515625, 0.0013742446899414062, 0.0022068023681640625, 2.4318695068359375e-05, 0.00708770751953125, 0.0002079010009765625], "tokens": [275, 319, 3759, 3088, 687, 21644, 111, 415, 3154, 3088, 687, 458, 111, 556, 3088, 687, 1361, 359, 2371, 416, 111, 1401, 1591, 275, 319, 556, 1829, 3088, 687, 21644, 111, 8710, 32, 275, 319, 333, 839, 2039, 275, 319, 3759, 3088, 1204, 588, 10192, 111, 415, 25209, 3088, 687, 458, 111]}
{"line_number": 121, "line_type": "original", "code": "        if (isInfinite()) {", "entropy": 1.9794921875, "is_bug_line": false, "sus_score": 0.8689504861831665, "per_token_entropy": [3.291015625, 1.90234375, 0.06988525390625, 6.83203125, 0.0004184246063232422, 1.6337890625, 0.1314697265625], "tokens": [351, 415, 308, 28823, 11949, 1157, 301]}
{"line_number": 121, "line_type": "generated", "code": "\n     * @param  addend Value to be added to this {@code Complex}.\n     * @return {@code this + addend}.\n     */\n    public Complex add(double addend) {\n        if (isNaN) {\n            return NaN;\n        }", "entropy": 0.07183837890625, "is_bug_line": false, "sus_score": 0.8689504861831665, "per_token_entropy": [0.319091796875, 0.0675048828125, 1.46484375, 0.00936126708984375, 0.283447265625, 0.001171112060546875, 8.440017700195312e-05, 0.00394439697265625, 0.0013875961303710938, 0.0001220703125, 0.0017023086547851562, 0.0008611679077148438, 0.004520416259765625, 0.0262908935546875, 0.0002620220184326172, 0.0009965896606445312, 0.10565185546875, 0.01055145263671875, 0.0001512765884399414, 0.0013980865478515625, 0.00146484375, 0.040771484375, 3.3736228942871094e-05, 0.0009026527404785156, 7.867813110351562e-05, 0.0003616809844970703, 7.76052474975586e-05, 0.1370849609375, 0.0692138671875, 0.349365234375, 0.05950927734375, 0.01012420654296875, 0.0019207000732421875, 0.0002238750457763672, 0.00027561187744140625, 0.050537109375, 0.0006089210510253906, 4.5299530029296875e-06, 0.0008907318115234375, 0.0110931396484375, 0.070556640625, 0.26806640625, 0.0008873939514160156, 0.0038089752197265625, 0.2451171875, 0.0005631446838378906, 0.0058135986328125, 0.0020294189453125, 0.054412841796875, 0.00026154518127441406, 0.04766845703125, 0.00015664100646972656], "tokens": [275, 319, 477, 753, 225, 1015, 416, 3846, 372, 526, 3640, 372, 458, 3088, 687, 19915, 4009, 275, 319, 477, 601, 3088, 687, 458, 474, 1015, 416, 4009, 275, 569, 284, 562, 19915, 1015, 26, 2627, 1015, 416, 27, 301, 291, 415, 308, 26821, 27, 301, 324, 442, 21644, 45, 291, 320]}
{"line_number": 164, "line_type": "original", "code": "        return createComplex(real + addend.getReal(),", "entropy": 2.4140625, "is_bug_line": false, "sus_score": 0.8675349354743958, "per_token_entropy": [3.50390625, 15.0078125, 2.0859375, 0.014892578125, 1.6337890625, 3.193359375, 4.28515625, 0.95458984375, 0.0086212158203125, 0.320068359375, 0.0245513916015625, 0.28515625, 0.0587158203125], "tokens": [351, 442, 1487, 12267, 26, 4543, 474, 1015, 416, 32, 371, 6877, 1026]}
{"line_number": 164, "line_type": "generated", "code": "    a^2 + b^2          b^2 + a^2\n     *  </code>\n     * </pre>\n     * where {@code a}, {@code b}, {@code c}, and {@code d} are the four\n     *", "entropy": 0.1387939453125, "is_bug_line": false, "sus_score": 0.8675349354743958, "per_token_entropy": [1.4599609375, 0.44775390625, 0.1544189453125, 1.2516975402832031e-05, 0.001964569091796875, 0.0011053085327148438, 4.744529724121094e-05, 0.00017178058624267578, 1.6181640625, 0.7705078125, 1.5974044799804688e-05, 1.1086463928222656e-05, 0.0008382797241210938, 0.4287109375, 0.00015342235565185547, 0.0019931793212890625, 0.007843017578125, 0.00021886825561523438, 0.058807373046875, 0.00324249267578125, 0.00010216236114501953, 0.002605438232421875, 0.0007419586181640625, 0.0014657974243164062, 0.02630615234375, 8.356571197509766e-05, 0.0126953125, 0.005672454833984375, 0.00017321109771728516, 0.9814453125, 0.05865478515625, 0.0002834796905517578, 0.286865234375, 0.4306640625, 0.00013458728790283203, 2.9802322387695312e-06, 7.152557373046875e-07, 0.00040340423583984375, 0.00034236907958984375, 6.4373016357421875e-06, 2.2292137145996094e-05, 0.005084991455078125, 0.0016851425170898438, 0.004566192626953125, 7.069110870361328e-05, 2.2172927856445312e-05, 0.0015630722045898438, 0.0980224609375, 0.03704833984375, 0.076171875, 0.2276611328125, 6.4373016357421875e-06], "tokens": [264, 312, 80, 36, 474, 323, 80, 36, 2033, 323, 80, 36, 474, 312, 80, 36, 275, 319, 225, 576, 687, 48, 275, 319, 576, 1001, 48, 275, 319, 2154, 3088, 687, 312, 835, 3088, 687, 323, 835, 3088, 687, 281, 835, 461, 3088, 687, 343, 111, 884, 322, 12074, 275, 319]}
{"line_number": 329, "line_type": "original", "code": "                return isNaN;", "entropy": 1.947265625, "is_bug_line": false, "sus_score": 0.8597896099090576, "per_token_entropy": [8.453125, 0.60400390625, 0.62890625, 0.0011997222900390625, 0.047637939453125], "tokens": [2071, 442, 438, 11126, 45]}
{"line_number": 329, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Checks whether either or both parts of this complex number is\n     * infinite.\n     *\n     * @return true if either or both parts of this complex number is\n     * infinite; false otherwise.\n     */\n    public boolean isInfinite", "entropy": 0.0772705078125, "is_bug_line": false, "sus_score": 0.8597896099090576, "per_token_entropy": [0.32861328125, 0.0015192031860351562, 0.050140380859375, 0.004547119140625, 0.00693511962890625, 0.0001304149627685547, 0.21630859375, 0.0338134765625, 0.9052734375, 0.1763916015625, 0.0003681182861328125, 0.0038776397705078125, 0.000438690185546875, 0.0181732177734375, 0.006725311279296875, 0.0025615692138671875, 0.06597900390625, 0.355224609375, 1.1205673217773438e-05, 0.11065673828125, 0.125, 0.0253753662109375, 2.5391578674316406e-05, 0.1558837890625, 5.245208740234375e-05, 0.0086212158203125, 0.00119781494140625, 0.7099609375, 0.0022678375244140625, 0.042449951171875, 0.010711669921875, 0.0004596710205078125, 0.0032901763916015625, 0.0008349418640136719, 0.004177093505859375, 0.0031299591064453125, 0.0078887939453125, 0.011444091796875, 0.42333984375, 0.0002371072769165039, 0.052032470703125, 0.0266265869140625, 0.0352783203125, 0.013916015625, 0.0416259765625, 0.0020160675048828125, 0.01123046875, 0.0018949508666992188, 0.005123138427734375, 0.0006814002990722656, 0.0036411285400390625, 0.00011932849884033203], "tokens": [284, 320, 446, 1022, 275, 319, 17279, 4946, 3154, 556, 4335, 8710, 432, 458, 8640, 1451, 438, 275, 319, 20280, 32, 275, 319, 275, 319, 477, 601, 861, 415, 3154, 556, 4335, 8710, 432, 458, 8640, 1451, 438, 275, 319, 20280, 45, 901, 5878, 32, 275, 569, 284, 562, 1905, 438, 39524]}
{"line_number": 750, "line_type": "original", "code": "        if (isNaN) {", "entropy": 1.0966796875, "is_bug_line": false, "sus_score": 0.8584337830543518, "per_token_entropy": [4.109375, 1.5791015625, 0.08770751953125, 0.058349609375, 0.6728515625, 0.06976318359375], "tokens": [351, 415, 308, 26821, 27, 301]}
{"line_number": 750, "line_type": "generated", "code": "\n     * Implements the formula:\n     * <pre>\n     *  <code>\n     *   sin(a + bi) = sin(a)cosh(b) + cos(a)sinh(b)i\n     *  </code", "entropy": 0.05865478515625, "is_bug_line": false, "sus_score": 0.8584337830543518, "per_token_entropy": [0.66357421875, 0.08380126953125, 0.2279052734375, 7.2479248046875e-05, 0.032379150390625, 0.0033416748046875, 0.033416748046875, 9.691715240478516e-05, 0.005340576171875, 0.00513458251953125, 0.004886627197265625, 0.0007157325744628906, 3.1948089599609375e-05, 0.004840850830078125, 0.189453125, 0.0003631114959716797, 0.00010156631469726562, 0.005718231201171875, 4.017353057861328e-05, 0.02093505859375, 0.0013246536254882812, 0.1866455078125, 0.040069580078125, 0.037933349609375, 0.00408172607421875, 0.0001233816146850586, 0.00011420249938964844, 0.006237030029296875, 0.342041015625, 0.00010228157043457031, 0.03155517578125, 0.11273193359375, 0.02545166015625, 0.00016796588897705078, 3.802776336669922e-05, 0.00018608570098876953, 0.76025390625, 0.19189453125, 2.276897430419922e-05, 3.337860107421875e-06, 7.474422454833984e-05, 0.01430511474609375, 4.0411949157714844e-05, 1.800060272216797e-05, 0.00010585784912109375, 5.543231964111328e-05, 0.0046234130859375, 0.00577545166015625, 8.96453857421875e-05, 0.0017728805541992188, 4.601478576660156e-05, 6.687641143798828e-05], "tokens": [275, 319, 34818, 322, 17568, 44, 275, 319, 333, 1001, 48, 275, 319, 225, 333, 687, 48, 275, 319, 261, 9812, 26, 83, 474, 10789, 27, 280, 9812, 26, 83, 27, 331, 615, 26, 84, 27, 474, 10712, 26, 83, 27, 7102, 90, 26, 84, 27, 91, 275, 319, 225, 576, 687]}
{"line_number": 1272, "line_type": "original", "code": "", "entropy": 0.482421875, "is_bug_line": false, "sus_score": 0.8566896915435791, "per_token_entropy": [0.482421875], "tokens": [203]}
{"line_number": 1272, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.8566896915435791, "per_token_entropy": [], "tokens": []}
{"line_number": 493, "line_type": "original", "code": "        if (isNaN || subtrahend.isNaN) {", "entropy": 1.7763671875, "is_bug_line": false, "sus_score": 0.8489048480987549, "per_token_entropy": [3.892578125, 6.92578125, 1.37109375, 0.67578125, 1.185546875, 6.140625, 0.213623046875, 0.0001627206802368164, 0.0006351470947265625, 0.57373046875, 0.021209716796875, 2.02734375, 0.07232666015625], "tokens": [351, 415, 308, 26821, 1276, 1361, 359, 2371, 416, 32, 26821, 27, 301]}
{"line_number": 493, "line_type": "generated", "code": "\n     * <a href=\"http://mathworld.wolfram.com/InverseHyperbolicSine.html\" TARGET=\"_top\">\n     * inverse hyperbolic sine</a> of this complex number.\n     * Implements the formula:\n    ", "entropy": 0.06451416015625, "is_bug_line": false, "sus_score": 0.8489048480987549, "per_token_entropy": [1.2685546875, 0.0372314453125, 0.103271484375, 0.01314544677734375, 0.00728607177734375, 0.016815185546875, 0.0008268356323242188, 0.0003151893615722656, 0.0009741783142089844, 3.0875205993652344e-05, 6.198883056640625e-06, 0.0002465248107910156, 4.887580871582031e-06, 6.318092346191406e-06, 0.00036907196044921875, 6.318092346191406e-06, 0.00042510032653808594, 0.0230560302734375, 1.34375, 8.475780487060547e-05, 1.049041748046875e-05, 0.04547119140625, 0.0018596649169921875, 2.765655517578125e-05, 0.004314422607421875, 0.2191162109375, 0.0046539306640625, 0.0016260147094726562, 0.001285552978515625, 0.016082763671875, 0.000766754150390625, 0.031341552734375, 0.0018482208251953125, 0.00011599063873291016, 3.5762786865234375e-07, 0.004940032958984375, 7.152557373046875e-06, 0.00399017333984375, 0.00018703937530517578, 0.0011310577392578125, 0.02490234375, 0.0030193328857421875, 0.00922393798828125, 0.0002834796905517578, 0.003284454345703125, 0.0257720947265625, 0.00113677978515625, 0.07757568359375, 0.00020015239715576172, 0.026611328125, 0.0035915374755859375, 0.0248870849609375], "tokens": [275, 319, 333, 83, 976, 347, 525, 555, 3812, 5860, 32, 105, 362, 43579, 32, 508, 33, 23173, 20562, 84, 2073, 48287, 32, 916, 20, 21207, 5617, 1393, 413, 275, 319, 19385, 15223, 84, 2073, 309, 482, 377, 83, 48, 432, 458, 8640, 1451, 32, 275, 319, 34818, 322, 17568, 44, 275]}
{"line_number": 160, "line_type": "original", "code": "        if (isNaN || addend.isNaN) {", "entropy": 2.017578125, "is_bug_line": false, "sus_score": 0.8484650254249573, "per_token_entropy": [3.93359375, 1.4619140625, 0.1771240234375, 3.119140625, 0.1324462890625, 9.78125, 0.0011653900146484375, 0.115478515625, 0.01352691650390625, 3.40625, 0.0579833984375], "tokens": [351, 415, 308, 26821, 1276, 1015, 416, 32, 26821, 27, 301]}
{"line_number": 160, "line_type": "generated", "code": "\n     * If {@code divisor} is {@code 0},\n     * a {@code Complex} whose value is {@code NaN} is returned.\n     * If either {@code this} or {@code divisor} has a value of\n     * {@code NaN", "entropy": 0.24169921875, "is_bug_line": false, "sus_score": 0.8484650254249573, "per_token_entropy": [0.56201171875, 0.1190185546875, 1.25, 0.2763671875, 6.496906280517578e-05, 0.005535125732421875, 0.0181121826171875, 0.01043701171875, 0.67578125, 0.0802001953125, 0.321533203125, 2.6226043701171875e-06, 0.1976318359375, 0.892578125, 3.528594970703125e-05, 1.51171875, 0.031463623046875, 0.1649169921875, 1.47265625, 0.52880859375, 1.1357421875, 0.09814453125, 0.00027871131896972656, 0.392578125, 0.0699462890625, 0.51220703125, 0.005046844482421875, 0.145263671875, 0.003536224365234375, 0.0250244140625, 0.0203399658203125, 0.0010766983032226562, 0.97412109375, 0.496826171875, 0.150390625, 0.00010204315185546875, 0.0092620849609375, 0.0013608932495117188, 0.00034236907958984375, 0.0005431175231933594, 4.017353057861328e-05, 0.0002300739288330078, 3.6835670471191406e-05, 0.0093231201171875, 0.0005135536193847656, 0.1363525390625, 0.0037021636962890625, 0.1278076171875, 0.00010919570922851562, 0.0004336833953857422, 0.002735137939453125, 0.1312255859375], "tokens": [275, 319, 1670, 3088, 687, 33482, 111, 438, 3088, 687, 225, 34, 835, 275, 319, 312, 3088, 687, 19915, 111, 13696, 786, 438, 3088, 687, 21644, 111, 438, 4717, 32, 275, 319, 1670, 3154, 3088, 687, 458, 111, 556, 3088, 687, 33482, 111, 1401, 312, 786, 432, 275, 319, 3088, 687, 21644]}
{"line_number": 2973, "line_type": "original", "code": "", "entropy": 0.482421875, "is_bug_line": false, "sus_score": 0.8482522368431091, "per_token_entropy": [0.482421875], "tokens": [203]}
{"line_number": 2973, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.8482522368431091, "per_token_entropy": [], "tokens": []}
{"line_number": 260, "line_type": "original", "code": "            return isZero ? NaN : INF;", "entropy": 4.37890625, "is_bug_line": true, "sus_score": 0.846316397190094, "per_token_entropy": [6.1328125, 9.3984375, 13.53125, 2.521484375, 1.490234375, 5.5078125, 0.015838623046875, 0.78857421875, 0.0252532958984375], "tokens": [1468, 442, 438, 8039, 1018, 21644, 499, 47257, 45]}
{"line_number": 260, "line_type": "generated", "code": "\n     * numbers are considered to be equal.\n     * <p>\n     * Note that if the real and imaginary parts of two complex numbers\n     * are numerically equal but the real part is negative and the\n     * imaginary part is positive zero,", "entropy": 0.21533203125, "is_bug_line": true, "sus_score": 0.846316397190094, "per_token_entropy": [0.86181640625, 0.00669097900390625, 0.442138671875, 0.0003657341003417969, 0.006195068359375, 0.006534576416015625, 3.600120544433594e-05, 0.0004684925079345703, 0.189697265625, 0.2509765625, 0.0010547637939453125, 0.1441650390625, 0.1259765625, 0.01654052734375, 0.007724761962890625, 0.00013840198516845703, 1.2451171875, 0.00783538818359375, 0.494384765625, 0.258056640625, 0.357666015625, 0.169189453125, 0.0003287792205810547, -0.0, 0.015716552734375, 0.11572265625, 0.124267578125, 0.1458740234375, 0.0031375885009765625, 0.1849365234375, 0.0004029273986816406, 0.043487548828125, 0.353271484375, 1.4781951904296875e-05, 0.115234375, 1.0751953125, 0.014739990234375, 1.6376953125, 0.456787109375, 0.01446533203125, 0.385009765625, 0.888671875, 0.02471923828125, 0.256591796875, 0.00036787986755371094, 8.535385131835938e-05, 8.225440979003906e-06, 0.0023403167724609375, 0.0007457733154296875, 0.01329803466796875, 0.72265625, 0.002902984619140625], "tokens": [275, 319, 7515, 884, 11870, 372, 526, 5040, 32, 275, 319, 333, 98, 48, 275, 319, 5830, 688, 415, 322, 4011, 461, 17463, 3172, 8710, 432, 3134, 8640, 7515, 275, 319, 884, 12738, 1247, 5040, 1273, 322, 4011, 1742, 438, 11003, 461, 322, 275, 319, 17463, 3172, 1742, 438, 11557, 5934, 30]}
{"line_number": 422, "line_type": "original", "code": "        if (isNaN || factor.isNaN) {", "entropy": 1.404296875, "is_bug_line": false, "sus_score": 0.8460792899131775, "per_token_entropy": [5.78125, 2.767578125, 0.0693359375, 1.65234375, 0.509765625, 2.73828125, 0.2034912109375, 0.0022487640380859375, 0.226806640625, 0.0986328125], "tokens": [351, 415, 308, 26821, 1276, 10365, 32, 26821, 27, 301]}
{"line_number": 422, "line_type": "generated", "code": "\n    /**\n     * Returns a {@code Complex} whose value is\n     * <ul>\n     *  <li>{@code this} if {@code other} is not a {@code Complex}.</li>\n     *  <li>{@code NaN} if", "entropy": 0.2061767578125, "is_bug_line": false, "sus_score": 0.8460792899131775, "per_token_entropy": [0.578125, 0.09405517578125, 0.038299560546875, 4.172325134277344e-05, 0.3984375, 0.25341796875, 0.06793212890625, 0.0043487548828125, 0.00039887428283691406, 0.004764556884765625, 0.00013899803161621094, 0.001651763916015625, 0.0005884170532226562, 0.9560546875, 0.0031757354736328125, 0.1573486328125, 0.88623046875, 0.0244598388671875, 0.0010156631469726562, 0.00029850006103515625, 0.84716796875, 0.0001608133316040039, 2.574920654296875e-05, 0.33203125, 0.0006723403930664062, 0.30126953125, 0.60107421875, 0.03729248046875, 0.02178955078125, 0.00092315673828125, 0.99853515625, 0.0137939453125, 0.61669921875, 1.337890625, 0.57958984375, 0.1236572265625, 0.0199737548828125, 0.088134765625, 0.224365234375, 0.6669921875, 9.97781753540039e-05, 4.2438507080078125e-05, 0.0007500648498535156, 5.316734313964844e-05, 0.0017595291137695312, 0.0001628398895263672, 0.00029468536376953125, 0.1719970703125, 0.11627197265625, 0.1368408203125, 0.0008707046508789062, 0.003818511962890625], "tokens": [284, 1022, 275, 319, 3759, 312, 3088, 687, 19915, 111, 13696, 786, 438, 275, 319, 333, 338, 48, 275, 319, 225, 333, 374, 19364, 687, 458, 111, 415, 3088, 687, 1604, 111, 438, 646, 312, 3088, 687, 19915, 111, 1730, 374, 48, 275, 319, 225, 333, 374, 19364, 687, 21644, 111, 415]}
{"line_number": 122, "line_type": "original", "code": "            return Double.POSITIVE_INFINITY;", "entropy": 3.01953125, "is_bug_line": false, "sus_score": 0.8451992273330688, "per_token_entropy": [7.58984375, 2.36328125, 8.609375, 0.08642578125, 5.28125, 0.0008645057678222656, 0.0013780593872070312, 0.22802734375], "tokens": [1468, 442, 6934, 32, 42270, 81, 36069, 45]}
{"line_number": 122, "line_type": "generated", "code": "\n     * @param  addend Value to be added to this {@code Complex}.\n     * @return {@code this + addend}.\n     */\n    public Complex add(double addend) {\n        if (isNaN) {\n            return NaN;\n        }", "entropy": 0.064208984375, "is_bug_line": false, "sus_score": 0.8451992273330688, "per_token_entropy": [0.58740234375, 0.181396484375, 0.85302734375, 0.01349639892578125, 0.26806640625, 0.0009169578552246094, 8.20159912109375e-05, 0.0032024383544921875, 0.0014314651489257812, 8.96453857421875e-05, 0.0014438629150390625, 0.0006656646728515625, 0.0034503936767578125, 0.0219573974609375, 0.00021398067474365234, 0.0008912086486816406, 0.0750732421875, 0.00444793701171875, 0.00015938282012939453, 0.0010890960693359375, 0.0020008087158203125, 0.036773681640625, 3.457069396972656e-05, 0.0007262229919433594, 6.711483001708984e-05, 0.00044155120849609375, 0.00010192394256591797, 0.165771484375, 0.0281219482421875, 0.363037109375, 0.03277587890625, 0.00907135009765625, 0.0016012191772460938, 0.00016558170318603516, 0.00023818016052246094, 0.035736083984375, 0.0006651878356933594, 3.4570693969726562e-06, 0.0008611679077148438, 0.0099945068359375, 0.054168701171875, 0.283203125, 0.0010395050048828125, 0.004550933837890625, 0.1705322265625, 0.0005269050598144531, 0.0079803466796875, 0.0017271041870117188, 0.066650390625, 0.0002999305725097656, 0.041259765625, 0.0001323223114013672], "tokens": [275, 319, 477, 753, 225, 1015, 416, 3846, 372, 526, 3640, 372, 458, 3088, 687, 19915, 4009, 275, 319, 477, 601, 3088, 687, 458, 474, 1015, 416, 4009, 275, 569, 284, 562, 19915, 1015, 26, 2627, 1015, 416, 27, 301, 291, 415, 308, 26821, 27, 301, 324, 442, 21644, 45, 291, 320]}
{"line_number": 118, "line_type": "original", "code": "        if (isNaN) {", "entropy": 1.6376953125, "is_bug_line": false, "sus_score": 0.84303218126297, "per_token_entropy": [4.89453125, 2.337890625, 0.0626220703125, 1.6044921875, 0.8857421875, 0.039337158203125], "tokens": [351, 415, 308, 26821, 27, 301]}
{"line_number": 118, "line_type": "generated", "code": "\n        return NaN;\n    }\n    /**\n     * Returns a {@code Complex} whose value is\n     * {@code (this + addend)}.\n     * Uses the definitional formula\n     * <pre>\n     *  <code>\n     *   (a", "entropy": 0.1981201171875, "is_bug_line": false, "sus_score": 0.84303218126297, "per_token_entropy": [2.068359375, 0.81591796875, 1.0712890625, 0.017578125, 0.090576171875, 0.007572174072265625, 0.97705078125, 1.2001953125, 0.11773681640625, 5.793571472167969e-05, 0.5712890625, 0.326171875, 0.0599365234375, 0.0035495758056640625, 0.0009098052978515625, 0.004833221435546875, 0.0001475811004638672, 0.0006999969482421875, 0.00024819374084472656, 0.1583251953125, 0.0002574920654296875, 0.50244140625, 0.0002028942108154297, 0.003467559814453125, 0.0011720657348632812, 0.71484375, 0.29931640625, 0.007717132568359375, 0.305419921875, 0.0179290771484375, 0.0005183219909667969, 0.84814453125, 0.0002665519714355469, 0.035003662109375, 7.402896881103516e-05, 0.0002453327178955078, 0.00429534912109375, 0.002788543701171875, 0.00829315185546875, 0.005008697509765625, 0.0011119842529296875, 0.000553131103515625, 0.00015175342559814453, 0.021240234375, 0.002452850341796875, 0.00024259090423583984, 0.0004925727844238281, 0.0021266937255859375, 6.079673767089844e-05, 0.007083892822265625, 0.0183868408203125, 0.00011432170867919922], "tokens": [291, 442, 21644, 45, 284, 320, 284, 1022, 275, 319, 3759, 312, 3088, 687, 19915, 111, 13696, 786, 438, 275, 319, 3088, 687, 308, 578, 474, 1015, 416, 31842, 275, 319, 26079, 322, 5644, 279, 17568, 275, 319, 333, 1001, 48, 275, 319, 225, 333, 687, 48, 275, 319, 261, 308, 83]}
{"line_number": 379, "line_type": "original", "code": "        return isNaN;", "entropy": 4.22265625, "is_bug_line": false, "sus_score": 0.8400871753692627, "per_token_entropy": [3.755859375, 5.35546875, 3.58984375, 4.1875, 4.22265625], "tokens": [351, 442, 438, 11126, 45]}
{"line_number": 379, "line_type": "generated", "code": "\n        }\n        double a = real;\n        double b = imaginary;\n        double c = factor.real;\n        double d = factor.imaginary;\n        return new Complex(a * c - b * d, a * d + b * c", "entropy": 0.0904541015625, "is_bug_line": false, "sus_score": 0.8400871753692627, "per_token_entropy": [0.286865234375, 0.0259246826171875, 0.32421875, 0.94970703125, 0.4658203125, 0.07781982421875, 0.94873046875, 0.003978729248046875, 0.0006666183471679688, 0.00030732154846191406, 0.003734588623046875, 4.6133995056152344e-05, 0.001758575439453125, 5.7220458984375e-06, 1.5735626220703125e-05, 0.0015554428100585938, 0.003887176513671875, 0.00043320655822753906, 0.00044226646423339844, 0.0005364418029785156, 6.985664367675781e-05, 0.11651611328125, 3.921985626220703e-05, 0.0008492469787597656, 0.0005779266357421875, 3.528594970703125e-05, 2.5987625122070312e-05, 0.00013375282287597656, 6.4373016357421875e-06, 0.0005612373352050781, 1.6808509826660156e-05, 5.53131103515625e-05, 0.38525390625, 0.548828125, 0.04803466796875, 0.0015707015991210938, 0.036651611328125, 0.0413818359375, 0.043731689453125, 0.0016632080078125, 0.0010738372802734375, 0.00238037109375, 0.0001398324966430664, 0.0011014938354492188, 0.00214385986328125, 0.37255859375, 0.00023758411407470703, 0.0003001689910888672, 0.0008568763732910156, 0.0007801055908203125, 0.0002598762512207031, 0.00022494792938232422], "tokens": [291, 320, 291, 2064, 312, 280, 4011, 45, 291, 2064, 323, 280, 17463, 3172, 45, 291, 2064, 281, 280, 10365, 32, 4543, 45, 291, 2064, 343, 280, 10365, 32, 17792, 3172, 45, 291, 442, 537, 19915, 26, 83, 319, 281, 429, 323, 319, 343, 30, 312, 319, 343, 474, 323, 319, 281]}
{"line_number": 323, "line_type": "original", "code": "        if (this == other) {", "entropy": 2.548828125, "is_bug_line": false, "sus_score": 0.8394308686256409, "per_token_entropy": [2.048828125, 11.875, 1.1181640625, 2.25, 1.1123046875, 1.787109375, 0.1317138671875, 0.07421875], "tokens": [351, 415, 308, 578, 610, 1604, 27, 301]}
{"line_number": 323, "line_type": "generated", "code": "\n     * {@code NaN}.\n     *\n     * @return {@code true} if either (or both) real and imaginary parts of\n     * this complex number is {@code NaN}.\n     */\n    public boolean isNaN() {\n        return isNaN;", "entropy": 0.132568359375, "is_bug_line": false, "sus_score": 0.8394308686256409, "per_token_entropy": [0.96728515625, 0.01898193359375, 1.1162109375, 0.045074462890625, 0.4912109375, 0.07574462890625, 0.08587646484375, 0.0007605552673339844, 0.09735107421875, 8.869171142578125e-05, 0.0172271728515625, 0.0029239654541015625, 0.023101806640625, 0.0002834796905517578, 0.0032062530517578125, 0.0002987384796142578, 0.05657958984375, 0.03631591796875, 0.499267578125, 0.0025615692138671875, 5.7220458984375e-06, 0.0011749267578125, 0.153564453125, 0.08441162109375, 0.03729248046875, 7.62939453125e-06, 0.396240234375, 0.48681640625, 0.1875, 8.249282836914062e-05, 0.10858154296875, 0.20703125, 0.01357269287109375, 0.207275390625, 0.2293701171875, 0.001964569091796875, 0.0426025390625, 0.9365234375, 0.00872802734375, 0.050262451171875, 0.00667572021484375, 0.04071044921875, 0.0053558349609375, 0.0017461776733398438, 0.0006375312805175781, 0.05767822265625, 0.0024700164794921875, 0.044586181640625, 0.0126495361328125, 0.019439697265625, 0.0002491474151611328, 0.00856781005859375], "tokens": [275, 319, 3088, 687, 21644, 4009, 275, 319, 275, 319, 477, 601, 3088, 687, 861, 111, 415, 3154, 308, 271, 4335, 27, 4011, 461, 17463, 3172, 8710, 432, 275, 319, 458, 8640, 1451, 438, 3088, 687, 21644, 4009, 275, 569, 284, 562, 1905, 438, 11126, 346, 301, 291, 442, 438, 11126, 45]}
{"line_number": 3410, "line_type": "original", "code": "", "entropy": 0.482421875, "is_bug_line": false, "sus_score": 0.8355128765106201, "per_token_entropy": [0.482421875], "tokens": [203]}
{"line_number": 3410, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.8355128765106201, "per_token_entropy": [], "tokens": []}
