{"line_number": 387, "line_type": "original", "code": "", "entropy": 0.320068359375, "is_bug_line": false, "sus_score": 0.47674521803855896, "per_token_entropy": [0.320068359375], "tokens": [203]}
{"line_number": 387, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.47674521803855896, "per_token_entropy": [], "tokens": []}
{"line_number": 401, "line_type": "original", "code": "", "entropy": 0.320068359375, "is_bug_line": false, "sus_score": 0.4074643850326538, "per_token_entropy": [0.320068359375], "tokens": [203]}
{"line_number": 401, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.4074643850326538, "per_token_entropy": [], "tokens": []}
{"line_number": 94, "line_type": "original", "code": "            throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p);", "entropy": 1.2958984375, "is_bug_line": true, "sus_score": 0.31929314136505127, "per_token_entropy": [6.39453125, 3.03515625, 1.857421875, 1.208984375, 0.003894805908203125, 0.053741455078125, 0.234130859375, 0.39111328125, 0.95361328125, 0.1309814453125, 0.0012569427490234375, 3.84765625, 5.137920379638672e-05, 0.344482421875, 1.958984375, 3.2265625, 1.10546875, 0.0014696121215820312, 0.024383544921875, 0.7705078125, 1.049041748046875e-05, 0.09271240234375, 5.43359375, 0.04583740234375], "tokens": [1468, 1422, 4175, 19304, 32, 1297, 25907, 26, 24225, 19298, 32, 3908, 81, 42270, 81, 1846, 1296, 1960, 81, 1023, 927, 30, 298, 293]}
{"line_number": 94, "line_type": "generated", "code": "\n        } else {\n            ret = Math.exp(-mean) * FastMath.pow(mean, x) / FastMath.factorial(x);\n        }\n        return ret;\n    }\n\n    /**\n     * The logarithm of the probability mass", "entropy": 0.11956787109375, "is_bug_line": true, "sus_score": 0.31929314136505127, "per_token_entropy": [0.095947265625, 0.0014667510986328125, 0.06549072265625, 0.06427001953125, 0.03851318359375, 0.1611328125, 0.00203704833984375, 0.91845703125, 0.1907958984375, 0.1834716796875, 0.1837158203125, 0.1824951171875, 0.08599853515625, 0.022247314453125, 0.369384765625, 4.649162292480469e-05, 0.00013327598571777344, 0.0009322166442871094, 0.0020542144775390625, 0.004077911376953125, 0.002376556396484375, 0.052032470703125, 0.03436279296875, 0.01708984375, 0.8662109375, 2.5510787963867188e-05, 0.0006155967712402344, 0.1051025390625, 0.000141143798828125, 0.0246734619140625, 0.00208282470703125, 0.00264739990234375, 0.06475830078125, 0.0005025863647460938, 0.135009765625, 0.008697509765625, 0.0015363693237304688, 0.006053924560546875, 0.0177764892578125, 0.00048732757568359375, 0.08251953125, 0.0239105224609375, 0.0230712890625, 3.5762786865234375e-05, 0.78857421875, 0.857421875, 0.38330078125, 0.023681640625, 0.0061492919921875, 0.0265350341796875, 0.00562286376953125, 0.082275390625], "tokens": [291, 320, 813, 301, 324, 2152, 280, 4175, 32, 2832, 3736, 6009, 27, 319, 15938, 5717, 32, 7527, 26, 6009, 30, 816, 27, 517, 15938, 5717, 32, 9410, 564, 26, 106, 293, 291, 320, 291, 442, 2152, 45, 284, 320, 446, 1022, 275, 319, 886, 1245, 31176, 95, 432, 322, 16356, 12697]}
{"line_number": 97, "line_type": "original", "code": "        normal = new NormalDistributionImpl(p, FastMath.sqrt(p));", "entropy": 1.564453125, "is_bug_line": false, "sus_score": 0.31929314136505127, "per_token_entropy": [4.0859375, 8.3125, 0.1614990234375, 0.1005859375, 0.008026123046875, 9.620189666748047e-05, 1.8681640625, 0.10809326171875, 8.0390625, 0.89697265625, 2.548828125, 2.7179718017578125e-05, 0.0001493692398071289, 0.0025882720947265625, 0.00955963134765625, 0.3193359375, 0.1312255859375], "tokens": [351, 4302, 280, 537, 13574, 16218, 3482, 26, 98, 30, 15938, 5717, 32, 8663, 26, 98, 876]}
{"line_number": 97, "line_type": "generated", "code": "\n            ret = FastMath.exp(-mean + x * FastMath.log(mean) - logGamma(x + 1));\n        }\n        return ret;\n    }\n\n    /**\n     * The logarithm of the probability mass function P(X", "entropy": 0.1253662109375, "is_bug_line": false, "sus_score": 0.31929314136505127, "per_token_entropy": [0.5244140625, 0.1793212890625, 0.0017232894897460938, 0.281982421875, 1.1682510375976562e-05, 8.797645568847656e-05, 0.461181640625, 0.1103515625, 0.076171875, 0.21240234375, 0.0732421875, 0.0306549072265625, 0.037994384765625, 8.344650268554688e-06, 5.626678466796875e-05, 5.984306335449219e-05, 0.0009174346923828125, 0.0031185150146484375, 0.0147705078125, 0.00621795654296875, 1.177734375, 0.06744384765625, 0.11065673828125, 0.01107025146484375, 0.012237548828125, 0.0004391670227050781, 4.1604042053222656e-05, 0.2427978515625, 0.08831787109375, 0.0007123947143554688, 0.1544189453125, 0.01314544677734375, 0.004901885986328125, 0.0242919921875, 0.0155029296875, 0.000675201416015625, 0.121337890625, 0.03802490234375, 0.023956298828125, 5.5789947509765625e-05, 0.86962890625, 0.75439453125, 0.397705078125, 0.01241302490234375, 0.0066375732421875, 0.04010009765625, 0.0047149658203125, 0.06719970703125, 0.00316619873046875, 0.232421875, 0.0015687942504882812, 0.006847381591796875], "tokens": [324, 2152, 280, 15938, 5717, 32, 2832, 3736, 6009, 474, 816, 319, 15938, 5717, 32, 751, 26, 6009, 27, 429, 1245, 22386, 26, 106, 474, 225, 35, 876, 291, 320, 291, 442, 2152, 45, 284, 320, 446, 1022, 275, 319, 886, 1245, 31176, 95, 432, 322, 16356, 12697, 667, 447, 26, 74]}
{"line_number": 141, "line_type": "original", "code": "        double ret;", "entropy": 2.328125, "is_bug_line": false, "sus_score": 0.31929314136505127, "per_token_entropy": [5.25390625, 2.337890625, 0.6416015625, 1.0810546875], "tokens": [351, 2064, 2152, 45]}
{"line_number": 141, "line_type": "generated", "code": "\n        if (x < 0) {\n            return 0.0;\n        }\n        return normal.cumulativeProbability(x + 0.5);\n    }\n\n    /**\n     * Returns the probability of success in the specified number of\n     * independent experiments", "entropy": 0.30908203125, "is_bug_line": false, "sus_score": 0.31929314136505127, "per_token_entropy": [0.0977783203125, 1.591796875, 0.020599365234375, 0.06121826171875, 0.354736328125, 0.01525115966796875, 0.0207672119140625, 0.296875, 0.00414276123046875, 0.0197601318359375, 0.174072265625, 0.00649261474609375, 0.0019407272338867188, 1.634765625, 0.00039386749267578125, 0.0198974609375, 0.00856781005859375, 0.00084686279296875, 0.482421875, 0.88232421875, 0.12890625, 0.0289764404296875, 0.04278564453125, 5.1021575927734375e-05, 0.2744140625, 0.06451416015625, 0.005191802978515625, 0.034515380859375, 0.0010623931884765625, 0.00010585784912109375, 0.00013339519500732422, 0.31884765625, 0.1396484375, 0.0006761550903320312, 0.40771484375, 0.0557861328125, 0.022674560546875, 6.16312026977539e-05, 1.7373046875, 0.12066650390625, 1.7490234375, 0.99755859375, 0.484375, 0.75537109375, 0.16259765625, 0.85205078125, 0.0011548995971679688, 0.0152130126953125, 0.453125, 1.52587890625e-05, 0.98876953125, 0.53564453125], "tokens": [291, 415, 308, 106, 333, 225, 34, 27, 301, 324, 442, 225, 34, 32, 34, 45, 291, 320, 291, 442, 4302, 32, 12018, 35567, 26, 106, 474, 225, 34, 32, 39, 293, 284, 320, 446, 1022, 275, 319, 3759, 322, 16356, 432, 3117, 328, 322, 3191, 1451, 432, 275, 319, 16371, 26073]}
{"line_number": 219, "line_type": "original", "code": "     * {@link #inverseCumulativeProbability(double)} to find critical values.", "entropy": 1.07421875, "is_bug_line": false, "sus_score": 0.31929314136505127, "per_token_entropy": [6.34765625, 1.1259765625, 5.33203125, 2.365234375, 0.094482421875, 0.416259765625, 0.0106658935546875, 0.0022907257080078125, 0.0027103424072265625, 0.0086669921875, 0.005542755126953125, 0.398193359375, 1.1806640625, 0.374267578125, 0.521484375, 0.052703857421875, 0.0311126708984375], "tokens": [262, 319, 3088, 1204, 588, 18139, 53, 10318, 35567, 26, 2627, 4370, 372, 2290, 18896, 2078, 32]}
{"line_number": 219, "line_type": "generated", "code": "\n    /**\n     * Returns the mean for the distribution.\n     *\n     * @return the mean for the distribution.\n     */\n    @Override\n    public double getNumericalMean() {\n        return mean;\n    }\n\n    /**\n     * Returns the variance for the distribution", "entropy": 0.154296875, "is_bug_line": false, "sus_score": 0.31929314136505127, "per_token_entropy": [0.8466796875, 0.12152099609375, 0.042083740234375, 7.128715515136719e-05, 1.2509765625, 0.058074951171875, 1.0703125, 0.6220703125, 0.6259765625, 0.1591796875, 0.0044403076171875, 0.05035400390625, 0.001239776611328125, 0.071533203125, 0.00019371509552001953, 0.1016845703125, 0.00027298927307128906, 0.0136871337890625, 0.023712158203125, 1.0966796875, 0.0020904541015625, 0.0008215904235839844, 0.63623046875, 0.00922393798828125, 0.047027587890625, 0.01163482666015625, 0.5390625, 7.855892181396484e-05, 0.005168914794921875, 0.0246734619140625, 0.045196533203125, 0.10357666015625, 0.0004100799560546875, 0.0003604888916015625, 0.00836181640625, 0.003948211669921875, 0.01430511474609375, 0.017669677734375, 0.2449951171875, 0.0018177032470703125, 0.005401611328125, 0.000438690185546875, 0.06866455078125, 0.005359649658203125, 0.00360870361328125, 4.8995018005371094e-05, 0.0261993408203125, 0.00010895729064941406, 0.02520751953125, 0.0013580322265625, 0.002925872802734375, 0.00476837158203125], "tokens": [284, 1022, 275, 319, 3759, 322, 5651, 436, 322, 7433, 32, 275, 319, 275, 319, 477, 601, 322, 5651, 436, 322, 7433, 32, 275, 569, 284, 477, 1788, 284, 562, 2064, 44929, 14856, 17081, 346, 301, 291, 442, 5651, 45, 284, 320, 446, 1022, 275, 319, 3759, 322, 25809, 436, 322, 7433]}
{"line_number": 136, "line_type": "original", "code": "     * @param x the value at which the probability density function is", "entropy": 1.2900390625, "is_bug_line": false, "sus_score": 0.31929314136505127, "per_token_entropy": [3.78125, 1.0078125, 0.426025390625, 4.28125, 0.12347412109375, 0.1513671875, 1.224609375, 0.06903076171875, 0.00010347366333007812, 0.0168914794921875, 4.50390625, 1.12890625, 1.044921875, 0.298095703125], "tokens": [262, 319, 477, 753, 816, 322, 786, 821, 1510, 322, 16356, 19324, 667, 438]}
{"line_number": 136, "line_type": "generated", "code": "\n     */\n    public double probability(double x) {\n        return normal.cumulativeProbability(x + 0.5) * 2;\n    }\n\n    /**\n     * Calculates the Poisson cumulative distribution function using a normal\n     * approximation. The <code", "entropy": 0.191162109375, "is_bug_line": false, "sus_score": 0.31929314136505127, "per_token_entropy": [0.2115478515625, 0.6259765625, 0.01312255859375, 0.7001953125, 0.0057830810546875, 1.3720703125, 0.1396484375, 0.4208984375, 0.0007314682006835938, 0.0009765625, 0.01259613037109375, 0.039520263671875, 0.56201171875, 0.307373046875, 0.006591796875, 0.1461181640625, 5.602836608886719e-05, 0.1697998046875, 0.0139617919921875, 0.0026531219482421875, 0.0260009765625, 0.00011372566223144531, 2.5987625122070312e-05, 4.208087921142578e-05, 0.1485595703125, 0.231689453125, 0.85986328125, 0.00960540771484375, 0.09405517578125, 0.0124359130859375, 3.719329833984375e-05, 0.035980224609375, 0.018463134765625, 0.01104736328125, 2.8371810913085938e-05, 0.55419921875, 0.013275146484375, 1.064453125, 0.00011754035949707031, 1.1787109375, 0.042449951171875, 0.254638671875, 0.061859130859375, 0.050811767578125, 0.262451171875, 0.01357269287109375, 1.4424324035644531e-05, 0.0020008087158203125, 0.005123138427734375, 0.1744384765625, 0.061676025390625, 0.00115966796875], "tokens": [275, 569, 284, 562, 2064, 16356, 26, 2627, 816, 27, 301, 291, 442, 4302, 32, 12018, 35567, 26, 106, 474, 225, 34, 32, 39, 27, 319, 225, 36, 45, 284, 320, 446, 1022, 275, 319, 42236, 322, 7228, 29276, 41008, 7433, 667, 1471, 312, 4302, 275, 319, 39431, 32, 886, 333, 687]}
{"line_number": 93, "line_type": "original", "code": "        if (p <= 0) {", "entropy": 2.412109375, "is_bug_line": false, "sus_score": 0.31929314136505127, "per_token_entropy": [6.92578125, 3.8984375, 0.07177734375, 8.046875, 2.3046875, 0.01029205322265625, 0.0216522216796875, 0.344970703125, 0.08087158203125], "tokens": [351, 415, 308, 98, 2511, 225, 34, 27, 301]}
{"line_number": 93, "line_type": "generated", "code": "\n            ret = 0;\n        } else {\n            ret = Math.exp(-mean) * Math.pow(mean, x) / FastMath.factorial(x);\n        }\n        return ret;\n    }\n\n    /**\n     * The probability density", "entropy": 0.177978515625, "is_bug_line": false, "sus_score": 0.31929314136505127, "per_token_entropy": [0.1439208984375, 0.52783203125, 0.003528594970703125, 0.023651123046875, 0.00010144710540771484, 1.0341796875, 0.034881591796875, 0.003314971923828125, 0.02911376953125, 0.054595947265625, 0.17578125, 0.1207275390625, 0.0026912689208984375, 1.025390625, 0.254638671875, 0.160888671875, 0.2271728515625, 0.198974609375, 0.10931396484375, 0.014190673828125, 1.564453125, 0.03912353515625, 0.00027251243591308594, 0.0011425018310546875, 0.0032787322998046875, 0.0018606185913085938, 0.038543701171875, 0.032501220703125, 0.009735107421875, 0.91943359375, 3.159046173095703e-05, 0.00016236305236816406, 0.09442138671875, 0.00011217594146728516, 0.0277252197265625, 0.0016632080078125, 0.0019140243530273438, 0.0562744140625, 0.0007071495056152344, 0.250732421875, 0.01055908203125, 0.0025386810302734375, 0.004253387451171875, 0.0220489501953125, 0.0004267692565917969, 0.0792236328125, 0.020599365234375, 0.0220489501953125, 4.00543212890625e-05, 0.77587890625, 0.87060546875, 0.26416015625], "tokens": [324, 2152, 280, 225, 34, 45, 291, 320, 813, 301, 324, 2152, 280, 4175, 32, 2832, 3736, 6009, 27, 319, 4175, 32, 7527, 26, 6009, 30, 816, 27, 517, 15938, 5717, 32, 9410, 564, 26, 106, 293, 291, 320, 291, 442, 2152, 45, 284, 320, 446, 1022, 275, 319, 886, 16356, 19324]}
{"line_number": 101, "line_type": "original", "code": "", "entropy": 3.900390625, "is_bug_line": false, "sus_score": 0.31929314136505127, "per_token_entropy": [3.900390625], "tokens": [203]}
{"line_number": 101, "line_type": "generated", "code": "\n        return ret;\n    }\n\n    /**\n     * The logarithm of the probability mass function P(X = x) for a\n     * Poisson distribution.\n     *\n     * @param x the value at which the probability density function is\n     *           ", "entropy": 0.10198974609375, "is_bug_line": false, "sus_score": 0.31929314136505127, "per_token_entropy": [0.1966552734375, 0.1634521484375, 0.01251983642578125, 0.03466796875, 0.08282470703125, 0.00444793701171875, 0.34912109375, 0.04595947265625, 0.0294189453125, 8.213520050048828e-05, 0.92626953125, 0.9443359375, 0.41845703125, 0.020660400390625, 0.005939483642578125, 0.035003662109375, 0.0052490234375, 0.0850830078125, 0.0027256011962890625, 0.2191162109375, 0.0018863677978515625, 0.00861358642578125, 0.0048370361328125, 0.006755828857421875, 0.24658203125, 0.12322998046875, 0.08984375, 0.36865234375, 2.5391578674316406e-05, 0.00972747802734375, 0.00063323974609375, 0.002407073974609375, 0.019866943359375, 0.045684814453125, 0.0005860328674316406, 0.019256591796875, 5.245208740234375e-05, 0.040679931640625, 0.0012226104736328125, 0.00580596923828125, 0.01812744140625, 0.006439208984375, 0.0094146728515625, 0.00010573863983154297, 0.040863037109375, 0.43359375, 0.0233306884765625, 0.006626129150390625, 0.007843017578125, 0.0305023193359375, 0.00010514259338378906, 0.147705078125], "tokens": [291, 442, 2152, 45, 284, 320, 446, 1022, 275, 319, 886, 1245, 31176, 95, 432, 322, 16356, 12697, 667, 447, 26, 74, 280, 816, 27, 436, 312, 275, 319, 7228, 29276, 7433, 32, 275, 319, 275, 319, 477, 753, 816, 322, 786, 821, 1510, 322, 16356, 19324, 667, 438, 275, 319, 1468]}
{"line_number": 102, "line_type": "original", "code": "    /**", "entropy": 3.6796875, "is_bug_line": false, "sus_score": 0.31929314136505127, "per_token_entropy": [4.36328125, 2.99609375], "tokens": [264, 1022]}
{"line_number": 102, "line_type": "generated", "code": "\n    /**\n     * The probability density function P(X = x) for a Poisson distribution.\n     *\n     * @param x the value at which the probability density function is\n     *            evaluated.\n     * @return the value of the probability density function", "entropy": 0.0938720703125, "is_bug_line": false, "sus_score": 0.31929314136505127, "per_token_entropy": [0.459716796875, 0.474365234375, 0.055694580078125, 0.00018036365509033203, 1.0390625, 0.5146484375, 0.28955078125, 0.050994873046875, 1.0185546875, 0.0241241455078125, 0.06256103515625, 0.050567626953125, 0.0064239501953125, 0.0732421875, 0.0301055908203125, 0.064208984375, 0.00824737548828125, 0.0003619194030761719, 0.0438232421875, 0.049346923828125, 0.0169677734375, 0.0011892318725585938, 0.09478759765625, 7.343292236328125e-05, 0.0811767578125, 0.006710052490234375, 0.0046539306640625, 0.0177001953125, 0.011505126953125, 0.0073394775390625, 9.381771087646484e-05, 0.0005002021789550781, 0.019256591796875, 0.01049041748046875, 0.0030193328857421875, 0.0024662017822265625, 0.04974365234375, 0.00019252300262451172, 0.1348876953125, 0.0007100105285644531, 0.00778961181640625, 0.00499725341796875, 0.0004096031188964844, 0.001495361328125, 0.008209228515625, 0.0216522216796875, 0.027679443359375, 0.0016508102416992188, 0.0025005340576171875, 0.0033931732177734375, 0.01361083984375, 0.0091552734375], "tokens": [284, 1022, 275, 319, 886, 16356, 19324, 667, 447, 26, 74, 280, 816, 27, 436, 312, 7228, 29276, 7433, 32, 275, 319, 275, 319, 477, 753, 816, 322, 786, 821, 1510, 322, 16356, 19324, 667, 438, 275, 319, 1468, 22423, 32, 275, 319, 477, 601, 322, 786, 432, 322, 16356, 19324, 667]}
{"line_number": 103, "line_type": "original", "code": "     * Create a new Poisson distribution with the given mean and convergence criterion.", "entropy": 1.6142578125, "is_bug_line": false, "sus_score": 0.31929314136505127, "per_token_entropy": [6.04296875, 1.4404296875, 5.7890625, 0.311279296875, 2.029296875, 1.6025390625, 0.0005984306335449219, 0.435791015625, 0.8798828125, 0.2413330078125, 0.05242919921875, 0.26318359375, 2.244140625, 2.4921875, 1.865234375, 0.14453125], "tokens": [262, 319, 2648, 312, 537, 7228, 29276, 7433, 623, 322, 2702, 5651, 461, 47454, 29502, 32]}
{"line_number": 103, "line_type": "generated", "code": "\n\n    /**\n     * The probability density function P(X = x) for a Poisson distribution.\n     *\n     * @param x the value at which the probability density function is\n     *            evaluated.\n     * @return the value of the probability density function", "entropy": 0.09808349609375, "is_bug_line": false, "sus_score": 0.31929314136505127, "per_token_entropy": [0.76953125, 0.07940673828125, 0.05816650390625, 0.00013887882232666016, 1.1015625, 0.6396484375, 0.250244140625, 0.04693603515625, 1.1162109375, 0.0254974365234375, 0.0738525390625, 0.06463623046875, 0.005611419677734375, 0.070068359375, 0.030853271484375, 0.073974609375, 0.0095977783203125, 0.0004253387451171875, 0.04119873046875, 0.042724609375, 0.0189971923828125, 0.0007481575012207031, 0.11505126953125, 5.3048133850097656e-05, 0.0875244140625, 0.005828857421875, 0.005741119384765625, 0.0192108154296875, 0.012451171875, 0.0079498291015625, 0.00010836124420166016, 0.0005536079406738281, 0.0247344970703125, 0.00933074951171875, 0.0029850006103515625, 0.0027008056640625, 0.0465087890625, 0.00014030933380126953, 0.1339111328125, 0.0009965896606445312, 0.0087432861328125, 0.005512237548828125, 0.0005712509155273438, 0.0018129348754882812, 0.00855255126953125, 0.0225677490234375, 0.02947998046875, 0.0018291473388671875, 0.002353668212890625, 0.0036258697509765625, 0.0113525390625, 0.00861358642578125], "tokens": [446, 1022, 275, 319, 886, 16356, 19324, 667, 447, 26, 74, 280, 816, 27, 436, 312, 7228, 29276, 7433, 32, 275, 319, 275, 319, 477, 753, 816, 322, 786, 821, 1510, 322, 16356, 19324, 667, 438, 275, 319, 1468, 22423, 32, 275, 319, 477, 601, 322, 786, 432, 322, 16356, 19324, 667]}
{"line_number": 104, "line_type": "original", "code": "     *", "entropy": 3.1875, "is_bug_line": false, "sus_score": 0.31929314136505127, "per_token_entropy": [5.421875, 0.95361328125], "tokens": [262, 319]}
{"line_number": 104, "line_type": "generated", "code": "\n    /**\n     * The probability density function P(X = x) for a Poisson distribution.\n     *\n     * @param x the value at which the probability density function is\n     *            evaluated.\n     * @return the value of the probability density function", "entropy": 0.10296630859375, "is_bug_line": false, "sus_score": 0.31929314136505127, "per_token_entropy": [0.4833984375, 0.178466796875, 0.041717529296875, 0.00023651123046875, 1.2431640625, 0.71337890625, 0.25244140625, 0.060302734375, 1.248046875, 0.02978515625, 0.07159423828125, 0.059722900390625, 0.006168365478515625, 0.08135986328125, 0.03558349609375, 0.0794677734375, 0.009979248046875, 0.0004520416259765625, 0.043212890625, 0.049957275390625, 0.0235137939453125, 0.0018062591552734375, 0.11151123046875, 9.334087371826172e-05, 0.124755859375, 0.0086212158203125, 0.004917144775390625, 0.0203399658203125, 0.01207733154296875, 0.00775146484375, 0.00011265277862548828, 0.0005817413330078125, 0.0274200439453125, 0.0088348388671875, 0.0033130645751953125, 0.0028018951416015625, 0.05303955078125, 0.0001825094223022461, 0.145263671875, 0.001178741455078125, 0.0099334716796875, 0.006317138671875, 0.0007600784301757812, 0.0020809173583984375, 0.00910186767578125, 0.02520751953125, 0.030242919921875, 0.0018701553344726562, 0.0025177001953125, 0.003894805908203125, 0.0100860595703125, 0.008697509765625], "tokens": [284, 1022, 275, 319, 886, 16356, 19324, 667, 447, 26, 74, 280, 816, 27, 436, 312, 7228, 29276, 7433, 32, 275, 319, 275, 319, 477, 753, 816, 322, 786, 821, 1510, 322, 16356, 19324, 667, 438, 275, 319, 1468, 22423, 32, 275, 319, 477, 601, 322, 786, 432, 322, 16356, 19324, 667]}
{"line_number": 105, "line_type": "original", "code": "     * @param p the Poisson mean", "entropy": 2.017578125, "is_bug_line": false, "sus_score": 0.31929314136505127, "per_token_entropy": [2.75390625, 0.048736572265625, 2.5703125, 0.70703125, 4.6875, 0.30615234375, 5.4453125, 0.0038890838623046875, 1.6298828125], "tokens": [262, 319, 477, 753, 298, 322, 7228, 29276, 5651]}
{"line_number": 105, "line_type": "generated", "code": "\n     * The probability density function P(X = x) for a Poisson distribution.\n     *\n     * @param x the value at which the probability density function is\n     *            evaluated.\n     * @return the value of the probability density function at x", "entropy": 0.09149169921875, "is_bug_line": false, "sus_score": 0.31929314136505127, "per_token_entropy": [0.3203125, 0.042694091796875, 0.93310546875, 0.638671875, 0.297607421875, 0.0557861328125, 1.3505859375, 0.0330810546875, 0.069580078125, 0.05523681640625, 0.005413055419921875, 0.0830078125, 0.03533935546875, 0.059112548828125, 0.01020050048828125, 0.0004432201385498047, 0.05413818359375, 0.048065185546875, 0.03826904296875, 0.004047393798828125, 0.1439208984375, 0.00010371208190917969, 0.124267578125, 0.01102447509765625, 0.005828857421875, 0.023529052734375, 0.01306915283203125, 0.006847381591796875, 0.00010800361633300781, 0.0005354881286621094, 0.0208892822265625, 0.00830841064453125, 0.003238677978515625, 0.0031452178955078125, 0.040130615234375, 0.00015020370483398438, 0.1026611328125, 0.0014295578002929688, 0.010009765625, 0.007904052734375, 0.0010995864868164062, 0.0020236968994140625, 0.00812530517578125, 0.0233001708984375, 0.03173828125, 0.0020236968994140625, 0.0024852752685546875, 0.0038909912109375, 0.01059722900390625, 0.0081329345703125, 0.0005202293395996094, 0.0023040771484375], "tokens": [275, 319, 886, 16356, 19324, 667, 447, 26, 74, 280, 816, 27, 436, 312, 7228, 29276, 7433, 32, 275, 319, 275, 319, 477, 753, 816, 322, 786, 821, 1510, 322, 16356, 19324, 667, 438, 275, 319, 1468, 22423, 32, 275, 319, 477, 601, 322, 786, 432, 322, 16356, 19324, 667, 821, 816]}
{"line_number": 106, "line_type": "original", "code": "     * @param epsilon the convergence criteria for cumulative probabilites", "entropy": 2.43359375, "is_bug_line": false, "sus_score": 0.31929314136505127, "per_token_entropy": [4.828125, 0.09747314453125, 8.0625, 0.5517578125, 12.234375, 2.107421875, 3.26171875, 0.1392822265625, 0.08636474609375, 0.1549072265625, 0.11297607421875, 0.0021839141845703125, 0.0005288124084472656], "tokens": [262, 319, 477, 753, 23477, 322, 47454, 15261, 436, 41008, 2379, 5175, 4137]}
{"line_number": 106, "line_type": "generated", "code": "distribution.\n     *\n     * @param x the value at which the probability density function is\n     *            evaluated.\n     * @return the probability that a random variable with the given\n     * mean will take a value less than or equal to x.\n     */", "entropy": 0.22802734375, "is_bug_line": false, "sus_score": 0.31929314136505127, "per_token_entropy": [2.18359375, 0.0977783203125, 0.10443115234375, 0.006378173828125, 0.1256103515625, 0.00017583370208740234, 0.177978515625, 0.00534820556640625, 0.0077056884765625, 0.0379638671875, 0.0821533203125, 0.005615234375, 0.00020384788513183594, 0.0093841552734375, 0.6328125, 0.06744384765625, 0.00998687744140625, 0.01360321044921875, 0.043212890625, 0.0001323223114013672, 0.0880126953125, 0.00914764404296875, 0.01068115234375, 0.01015472412109375, 0.0015344619750976562, 0.0031757354736328125, 0.01148223876953125, 0.0278167724609375, 0.92919921875, 0.955078125, 0.0005817413330078125, 0.1668701171875, 0.08306884765625, 0.0308074951171875, 0.783203125, 1.8232421875, 0.86083984375, 0.00025725364685058594, 1.044921875, 0.140869140625, 0.0821533203125, 0.000530242919921875, 0.00010514259338378906, 0.10205078125, 0.011749267578125, 0.0011186599731445312, 0.004726409912109375, 0.002353668212890625, 0.318603515625, 0.296630859375, 0.018402099609375, 0.4296875], "tokens": [13081, 32, 275, 319, 275, 319, 477, 753, 816, 322, 786, 821, 1510, 322, 16356, 19324, 667, 438, 275, 319, 1468, 22423, 32, 275, 319, 477, 601, 322, 16356, 688, 312, 3995, 2677, 623, 322, 2702, 275, 319, 5651, 1098, 4818, 312, 786, 6679, 2784, 556, 5040, 372, 816, 32, 275, 569]}
{"line_number": 107, "line_type": "original", "code": "     * @since 2.1", "entropy": 1.6650390625, "is_bug_line": false, "sus_score": 0.31929314136505127, "per_token_entropy": [5.734375, 0.0246124267578125, 0.873046875, 6.109375, 0.0113525390625, 0.29345703125, 0.00018012523651123047, 0.27490234375], "tokens": [262, 319, 477, 8119, 225, 36, 32, 35]}
{"line_number": 107, "line_type": "generated", "code": "\n     *\n     * @param x the value at which the cumulative probability distribution\n     *            is evaluated.\n     * @return the cumulative probability distribution at x\n     */\n    public double cumulativeProbability(int x) {\n        double ret;\n        if (x <", "entropy": 0.21044921875, "is_bug_line": false, "sus_score": 0.31929314136505127, "per_token_entropy": [0.1556396484375, 0.00997161865234375, 0.3544921875, 0.0018310546875, 0.1387939453125, 0.0054779052734375, 0.00774383544921875, 0.046417236328125, 0.1220703125, 0.005077362060546875, 0.00020015239715576172, 0.00823211669921875, 1.078125, 0.342041015625, 1.826171875, 0.556640625, 0.0001112222671508789, 0.163330078125, 0.395263671875, 0.0122833251953125, 0.1053466796875, 0.01259613037109375, 0.0019207000732421875, 0.004299163818359375, 0.00664520263671875, 0.036834716796875, 1.095703125, 0.0303192138671875, 0.55615234375, 0.6162109375, 0.01232147216796875, 0.267578125, 0.256591796875, 0.01538848876953125, 0.052703857421875, 0.002655029296875, 0.01218414306640625, 0.00013971328735351562, 0.0004131793975830078, 0.292724609375, 0.0005373954772949219, 0.0006957054138183594, 0.029876708984375, 0.1138916015625, 1.4501953125, 0.0245361328125, 0.1090087890625, 0.1658935546875, 0.10235595703125, 0.005924224853515625, 0.04290771484375, 0.28759765625], "tokens": [275, 319, 275, 319, 477, 753, 816, 322, 786, 821, 1510, 322, 41008, 16356, 7433, 275, 319, 1468, 438, 22423, 32, 275, 319, 477, 601, 322, 41008, 16356, 7433, 821, 816, 275, 569, 284, 562, 2064, 41008, 35567, 26, 410, 816, 27, 301, 291, 2064, 2152, 45, 291, 415, 308, 106, 333]}
{"line_number": 109, "line_type": "original", "code": "    public PoissonDistributionImpl(double p, double epsilon) {", "entropy": 1.244140625, "is_bug_line": false, "sus_score": 0.31929314136505127, "per_token_entropy": [2.974609375, 2.90625, 7.37109375, 0.0012521743774414062, 0.003177642822265625, 0.07427978515625, 0.4013671875, 0.1854248046875, 0.1861572265625, 0.796875, 0.55615234375, 0.10723876953125, 1.5673828125, 0.297119140625], "tokens": [264, 562, 7228, 29276, 16218, 3482, 26, 2627, 298, 30, 2064, 23477, 27, 301]}
{"line_number": 109, "line_type": "generated", "code": "\n     * @return the value of the probability distribution function at x\n     */\n    public double cumulativeProbability(int x) {\n        if (x < 0) {\n            return 0.0;\n        } else if (x >= 100", "entropy": 0.205078125, "is_bug_line": false, "sus_score": 0.31929314136505127, "per_token_entropy": [0.52099609375, 0.33349609375, 0.04254150390625, 0.021148681640625, 0.0640869140625, 0.1461181640625, 0.015228271484375, 0.0164031982421875, 0.06243896484375, 0.66845703125, 0.28125, 0.01763916015625, 0.00849151611328125, 0.1771240234375, 0.1484375, 0.11419677734375, 0.044830322265625, 0.003917694091796875, 0.10662841796875, 0.00022077560424804688, 0.0004940032958984375, 0.306884765625, 0.0007266998291015625, 0.0022258758544921875, 0.033905029296875, 0.330078125, 1.0556640625, 0.0150299072265625, 0.0634765625, 0.2176513671875, 0.0019006729125976562, 0.0034999847412109375, 0.0732421875, 0.0024242401123046875, 0.0122222900390625, 0.03326416015625, 0.0036029815673828125, 0.0004634857177734375, 0.189697265625, 4.589557647705078e-05, 0.0010766983032226562, 0.04083251953125, 0.001369476318359375, 0.89111328125, 0.98583984375, 0.0231781005859375, 0.07476806640625, 1.8662109375, 0.5634765625, 0.3056640625, 0.0421142578125, 0.7275390625], "tokens": [275, 319, 477, 601, 322, 786, 432, 322, 16356, 7433, 667, 821, 816, 275, 569, 284, 562, 2064, 41008, 35567, 26, 410, 816, 27, 301, 291, 415, 308, 106, 333, 225, 34, 27, 301, 324, 442, 225, 34, 32, 34, 45, 291, 320, 813, 415, 308, 106, 2377, 225, 35, 34, 34]}
{"line_number": 110, "line_type": "original", "code": "        this(p, epsilon, DEFAULT_MAX_ITERATIONS);", "entropy": 2.103515625, "is_bug_line": false, "sus_score": 0.31929314136505127, "per_token_entropy": [3.033203125, 6.44921875, 4.703125, 6.86328125, 0.81884765625, 1.7568359375, 0.14599609375, 5.28125, 0.001209259033203125, 0.00466156005859375, 0.0016460418701171875, 0.0006279945373535156, 0.001987457275390625, 0.3955078125], "tokens": [351, 458, 26, 98, 30, 23477, 30, 4040, 81, 3459, 81, 10812, 19419, 293]}
{"line_number": 110, "line_type": "generated", "code": "\n     */\n    public double cumulativeProbability(int x) {\n        double ret;\n        if (x < 0) {\n            ret = 0.0;\n        } else {\n            ret = Gamma.regularizedGammaQ(mean, x + ", "entropy": 0.1646728515625, "is_bug_line": false, "sus_score": 0.31929314136505127, "per_token_entropy": [1.0849609375, 0.10052490234375, 0.052825927734375, 0.054351806640625, 0.0054168701171875, 0.058746337890625, 0.000324249267578125, 0.0006022453308105469, 0.375732421875, 0.0007758140563964844, 0.0019397735595703125, 0.0316162109375, 0.37939453125, 1.123046875, 0.0248870849609375, 0.1551513671875, 0.195068359375, 0.0970458984375, 0.006900787353515625, 0.04248046875, 0.28662109375, 0.0029296875, 0.0031261444091796875, 0.09185791015625, 0.001636505126953125, 0.00815582275390625, 0.0134124755859375, 0.0018606185913085938, 0.006290435791015625, 0.0005497932434082031, 0.2457275390625, 5.352497100830078e-05, 0.0010833740234375, 0.07232666015625, 0.0010204315185546875, 0.007656097412109375, 1.095703125, 0.2783203125, 0.27587890625, 0.0009427070617675781, 0.475830078125, 0.017791748046875, 0.0242462158203125, 9.775161743164062e-06, 0.00045299530029296875, 0.63818359375, 0.07061767578125, 0.712890625, 0.01393890380859375, 0.02130126953125, 0.39599609375, 0.005016326904296875], "tokens": [275, 569, 284, 562, 2064, 41008, 35567, 26, 410, 816, 27, 301, 291, 2064, 2152, 45, 291, 415, 308, 106, 333, 225, 34, 27, 301, 324, 2152, 280, 225, 34, 32, 34, 45, 291, 320, 813, 301, 324, 2152, 280, 48264, 32, 16343, 1191, 22386, 67, 26, 6009, 30, 816, 474, 225]}
{"line_number": 112, "line_type": "original", "code": "", "entropy": 2.9296875, "is_bug_line": false, "sus_score": 0.31929314136505127, "per_token_entropy": [2.9296875], "tokens": [203]}
{"line_number": 112, "line_type": "generated", "code": "\n     */\n    public double cumulativeProbability(double x) throws MathException {", "entropy": 0.1976318359375, "is_bug_line": false, "sus_score": 0.31929314136505127, "per_token_entropy": [0.7255859375, 0.165283203125, 0.06671142578125, 0.07177734375, 0.006378173828125, 0.0096588134765625, 0.00024247169494628906, 0.0006003379821777344, 1.451171875, 0.0005631446838378906, 0.00356292724609375, 0.416259765625, 0.002197265625, 1.1444091796875e-05, 0.04498291015625], "tokens": [275, 569, 284, 562, 2064, 41008, 35567, 26, 2627, 816, 27, 2571, 4175, 984, 301]}
{"line_number": 113, "line_type": "original", "code": "    /**", "entropy": 4.16015625, "is_bug_line": false, "sus_score": 0.31929314136505127, "per_token_entropy": [3.697265625, 4.625], "tokens": [264, 1022]}
{"line_number": 113, "line_type": "generated", "code": "\n    public double cumulativeProbability(int x) throws MathException {\n        double ret;\n        if (x < 0) {\n            ret = 0.0;\n        } else if (x < 13) {\n            ret = PoissonDistribution", "entropy": 0.218017578125, "is_bug_line": false, "sus_score": 0.31929314136505127, "per_token_entropy": [0.2132568359375, 0.09698486328125, 0.007640838623046875, 0.01102447509765625, 0.00027179718017578125, 0.0010328292846679688, 0.2401123046875, 0.0010280609130859375, 0.003810882568359375, 0.379638671875, 0.0025081634521484375, 2.4199485778808594e-05, 0.046295166015625, 0.3427734375, 1.267578125, 0.0274200439453125, 0.15869140625, 0.257568359375, 0.11798095703125, 0.0157470703125, 0.061859130859375, 0.338134765625, 0.00437164306640625, 0.007617950439453125, 0.095947265625, 0.0019197463989257812, 0.0102996826171875, 0.0188140869140625, 0.002399444580078125, 0.00807952880859375, 0.0005507469177246094, 0.3046875, 6.580352783203125e-05, 0.0013074874877929688, 0.0238800048828125, 0.0006632804870605469, 0.00933837890625, 0.5185546875, 0.0162811279296875, 0.06744384765625, 1.4951171875, 1.1318359375, 0.3486328125, 1.7861328125, 0.044281005859375, 0.001644134521484375, 0.09527587890625, 0.279052734375, 0.0014171600341796875, 0.998046875, 0.0014772415161132812, 0.469970703125], "tokens": [284, 562, 2064, 41008, 35567, 26, 410, 816, 27, 2571, 4175, 984, 301, 291, 2064, 2152, 45, 291, 415, 308, 106, 333, 225, 34, 27, 301, 324, 2152, 280, 225, 34, 32, 34, 45, 291, 320, 813, 415, 308, 106, 333, 225, 35, 37, 27, 301, 324, 2152, 280, 7228, 29276, 16218]}
{"line_number": 116, "line_type": "original", "code": "     * @param p the Poisson mean", "entropy": 1.66015625, "is_bug_line": false, "sus_score": 0.31929314136505127, "per_token_entropy": [5.67578125, 4.140625, 0.58154296875, 1.20703125, 2.76171875, 0.1925048828125, 0.2332763671875, 0.0010652542114257812, 0.153076171875], "tokens": [262, 319, 477, 753, 298, 322, 7228, 29276, 5651]}
{"line_number": 116, "line_type": "generated", "code": "\n            return 0.0;\n        } else if (x == 0) {", "entropy": 0.21875, "is_bug_line": false, "sus_score": 0.31929314136505127, "per_token_entropy": [0.87109375, 0.271728515625, 0.01019287109375, 0.0030574798583984375, 0.4375, 0.0002040863037109375, 0.00616455078125, 0.059967041015625, 0.0027942657470703125, 0.73876953125, 0.7275390625, 0.017669677734375, 0.0914306640625, 0.58154296875, 0.08160400390625, 0.0027904510498046875, 0.0299072265625, 0.0035915374755859375], "tokens": [324, 442, 225, 34, 32, 34, 45, 291, 320, 813, 415, 308, 106, 610, 225, 34, 27, 301]}
{"line_number": 118, "line_type": "original", "code": "     * @since 2.1", "entropy": 1.6982421875, "is_bug_line": false, "sus_score": 0.31929314136505127, "per_token_entropy": [5.73046875, 4.19921875, 1.4169921875, 1.94921875, 0.010650634765625, 0.2154541015625, 0.0005497932434082031, 0.0645751953125], "tokens": [262, 319, 477, 8119, 225, 36, 32, 35]}
{"line_number": 118, "line_type": "generated", "code": "\n        double ret = 0;\n        int n = 0;\n        double np = 0;\n        while (ret < x) {\n            np = PoissonDistributionImpl.cumulativeProbability(n, mean);\n            if (np >= x) {", "entropy": 0.5673828125, "is_bug_line": false, "sus_score": 0.31929314136505127, "per_token_entropy": [0.6416015625, 1.7900390625, 0.454833984375, 0.460205078125, 1.2607421875, 1.181640625, 0.61669921875, 0.175537109375, 1.8857421875, 1.1943359375, 0.053985595703125, 0.3447265625, 0.032806396484375, 0.01055908203125, 0.10272216796875, 0.9755859375, 2.8671875, 0.26953125, 1.5185546875, 0.54296875, 0.2244873046875, 0.08831787109375, 0.89453125, 0.15185546875, 0.52490234375, 0.0673828125, 0.1292724609375, 0.1495361328125, 0.0178680419921875, 0.069580078125, 2.064453125, 0.1773681640625, 1.609375, 0.0011320114135742188, 0.0100860595703125, 0.10772705078125, 0.0242156982421875, 2.35546875, 0.01007080078125, 0.1455078125, 0.296630859375, 0.10833740234375, 0.057891845703125, 0.5029296875, 0.04327392578125, 0.47607421875, 0.0433349609375, 0.701171875, 1.326171875, 0.7138671875, 0.04412841796875, 0.004241943359375], "tokens": [291, 2064, 2152, 280, 225, 34, 45, 291, 629, 310, 280, 225, 34, 45, 291, 2064, 2065, 280, 225, 34, 45, 291, 2218, 308, 2094, 333, 816, 27, 301, 324, 2065, 280, 7228, 29276, 16218, 3482, 32, 12018, 35567, 26, 96, 30, 5651, 293, 324, 415, 308, 2356, 2377, 816, 27, 301]}
