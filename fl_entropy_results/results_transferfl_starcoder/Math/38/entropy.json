{"line_number": 134, "line_type": "original", "code": "    private ArrayRealVector trustRegionCenterOffset;", "entropy": 1.154296875, "is_bug_line": false, "sus_score": 0.7567754983901978, "per_token_entropy": [2.826171875, 1.4248046875, 0.1080322265625, 0.00385284423828125, 0.00019037723541259766, 6.8515625, 0.00882720947265625, 0.01345062255859375, 0.261474609375, 0.038665771484375], "tokens": [264, 945, 2629, 6877, 2863, 18074, 6062, 7056, 3457, 45]}
{"line_number": 134, "line_type": "generated", "code": "\n     * XXX \"xalt\" in the original code.\n     */\n    private ArrayRealVector alternativeNewPoint;\n    /**\n     * Difference between {@link #newPoint} and {@link #alternativeNewPoint}.\n     * It is used to update {@", "entropy": 0.32861328125, "is_bug_line": false, "sus_score": 0.7567754983901978, "per_token_entropy": [0.34228515625, 1.0830078125, 0.55419921875, 0.01302337646484375, 0.09295654296875, 0.04107666015625, 0.0016632080078125, 0.004241943359375, 0.00079345703125, 0.00038170814514160156, 0.0009284019470214844, 0.01202392578125, 0.03631591796875, 0.0116119384765625, 0.051971435546875, 0.0083160400390625, 0.0040130615234375, 0.00021147727966308594, 0.00016188621520996094, 0.52734375, 0.3349609375, 0.0006470680236816406, 0.0021381378173828125, 0.1871337890625, 0.00998687744140625, 0.10809326171875, 0.00015175342559814453, 2.7734375, 0.14306640625, 0.2098388671875, 0.42578125, 0.0028591156005859375, 0.001983642578125, 0.4677734375, 0.0010290145874023438, 0.006076812744140625, 0.020843505859375, 0.139892578125, 0.0008554458618164062, 0.0015592575073242188, 2.2265625, 0.0015516281127929688, 0.000385284423828125, 0.2197265625, 0.12396240234375, 0.0745849609375, 0.984375, 0.61181640625, 0.962890625, 1.0078125, 2.0078125, 1.2490234375], "tokens": [275, 319, 9439, 313, 106, 3825, 20, 328, 322, 4707, 1340, 32, 275, 569, 284, 945, 2629, 6877, 2863, 15529, 1812, 1943, 45, 284, 1022, 275, 319, 475, 13553, 3733, 3088, 1204, 588, 890, 1943, 111, 461, 3088, 1204, 588, 33424, 1812, 1943, 4009, 275, 319, 2030, 438, 1654, 372, 1974, 3088]}
{"line_number": 126, "line_type": "original", "code": "     * Values of the objective function at the interpolation points.", "entropy": 1.51171875, "is_bug_line": false, "sus_score": 0.7548015713691711, "per_token_entropy": [4.09375, 0.93896484375, 7.5390625, 0.06842041015625, 0.09515380859375, 1.2294921875, 0.076171875, 0.268798828125, 0.35400390625, 1.076171875, 2.2578125, 0.147216796875], "tokens": [262, 319, 14614, 432, 322, 25110, 667, 821, 322, 23334, 4981, 32]}
{"line_number": 126, "line_type": "generated", "code": "\n     */\n    private ArrayRealVector newPoint;\n    /**\n     * New value of the objective function.\n     */\n    private double newValue;\n    /**\n     * Lower bound of the variables.\n     */\n    private ArrayRealVector lowerBound;\n    /**\n     *", "entropy": 0.325439453125, "is_bug_line": false, "sus_score": 0.7548015713691711, "per_token_entropy": [0.1256103515625, 0.9267578125, 0.006916046142578125, 0.01314544677734375, 0.015625, 0.0020542144775390625, 5.245208740234375e-06, 0.0215606689453125, 0.00046896934509277344, 0.006500244140625, 0.08294677734375, 0.0095062255859375, 0.236083984375, 3.4809112548828125e-05, 2.95703125, 1.412109375, 0.027374267578125, 0.0660400390625, 0.321044921875, 0.003936767578125, 0.88525390625, 0.41552734375, 0.480712890625, 0.00691986083984375, 0.0158233642578125, 0.059417724609375, 0.93017578125, 0.0139312744140625, 0.09515380859375, 0.0087890625, 0.1544189453125, 3.2901763916015625e-05, 3.0703125, 0.274658203125, 0.64892578125, 0.0433349609375, 1.283203125, 0.53662109375, 0.08477783203125, 0.27392578125, 0.0021877288818359375, 0.0104217529296875, 1.3427734375, 0.0019044876098632812, 5.841255187988281e-06, 0.00284576416015625, 0.0178375244140625, 0.0008211135864257812, 0.0078582763671875, 0.0005168914794921875, 0.0211944580078125, 6.282329559326172e-05], "tokens": [275, 569, 284, 945, 2629, 6877, 2863, 537, 1943, 45, 284, 1022, 275, 319, 3136, 786, 432, 322, 25110, 667, 32, 275, 569, 284, 945, 2064, 17783, 45, 284, 1022, 275, 319, 35245, 5085, 432, 322, 4886, 32, 275, 569, 284, 945, 2629, 6877, 2863, 7216, 4716, 45, 284, 1022, 275, 319]}
{"line_number": 101, "line_type": "original", "code": "    /**", "entropy": 3.25390625, "is_bug_line": false, "sus_score": 0.7334281802177429, "per_token_entropy": [3.3984375, 3.111328125], "tokens": [264, 1022]}
{"line_number": 101, "line_type": "generated", "code": "\n    private ArrayRealVector lowerDifference;\n    /**\n     * Differences {@link #getUpperBound()} - {@link #originShift}.\n     * All the components of every {@link #trustRegionCenterOffset} are going\n     * to satisfy the bounds", "entropy": 0.0390625, "is_bug_line": false, "sus_score": 0.7334281802177429, "per_token_entropy": [0.196533203125, 0.0670166015625, 0.10992431640625, 0.0048065185546875, 2.9802322387695312e-06, 0.464599609375, 0.6552734375, 0.076171875, 0.09912109375, 0.0015916824340820312, 0.0220489501953125, 2.8371810913085938e-05, 0.05908203125, 0.08447265625, 1.728534698486328e-05, 0.010162353515625, 6.628036499023438e-05, 0.003505706787109375, 0.007579803466796875, 0.0065765380859375, 0.003940582275390625, 0.0193023681640625, 0.002712249755859375, 0.007541656494140625, 5.9604644775390625e-05, 0.0005698204040527344, 0.00141143798828125, 0.0001270771026611328, 0.0384521484375, 0.0154571533203125, 0.0023860931396484375, 0.02392578125, 0.0035800933837890625, 0.0006489753723144531, 0.00026988983154296875, 0.0014200210571289062, 0.004695892333984375, 2.6702880859375e-05, 0.00021517276763916016, 0.0146942138671875, 2.1219253540039062e-05, 0.00036597251892089844, 0.0008497238159179688, 0.00026035308837890625, 0.0015048980712890625, 0.0018367767333984375, 0.01061248779296875, 3.349781036376953e-05, 0.0003581047058105469, 0.00012981891632080078, 0.00038051605224609375, 0.00547027587890625], "tokens": [284, 945, 2629, 6877, 2863, 7216, 24443, 45, 284, 1022, 275, 319, 475, 10256, 3015, 3088, 1204, 588, 371, 9878, 4716, 9741, 429, 3088, 1204, 588, 6946, 10210, 4009, 275, 319, 3367, 322, 6339, 432, 3638, 3088, 1204, 588, 16530, 6062, 7056, 3457, 111, 884, 6783, 275, 319, 372, 30098, 322, 11615]}
{"line_number": 95, "line_type": "original", "code": "    /** Differences between the upper and lower bounds. */", "entropy": 1.693359375, "is_bug_line": false, "sus_score": 0.7325047254562378, "per_token_entropy": [1.6171875, 6.44921875, 4.6328125, 0.6533203125, 0.00032639503479003906, 5.2109375, 1.5107421875, 0.6328125, 0.4423828125, 0.08477783203125, 0.2080078125, 0.267333984375, 0.3017578125], "tokens": [264, 1022, 475, 10256, 3015, 3733, 322, 8342, 461, 7216, 11615, 32, 569]}
{"line_number": 95, "line_type": "generated", "code": "\n     * {@code lowerBoundOffset[i] + trustRegionCenterOffset[i] >= lowerBound[i]}\n     * for all {@code i}.\n     */\n    private ArrayRealVector lowerBoundOffset;\n    /**\n     * Differences {@link", "entropy": 0.3203125, "is_bug_line": false, "sus_score": 0.7325047254562378, "per_token_entropy": [1.08203125, 0.1395263671875, 1.548828125, 0.36572265625, 1.54296875, 0.86767578125, 1.2744140625, 0.452880859375, 0.05084228515625, 0.1602783203125, 1.6259765625, 0.51904296875, 0.00225067138671875, 0.0026416778564453125, 0.002651214599609375, 0.01235198974609375, 0.00209808349609375, 0.08465576171875, 0.95849609375, 0.69873046875, 0.179931640625, 0.0205078125, 0.0015172958374023438, 0.341552734375, 0.73486328125, 0.243896484375, 1.46484375, 0.265625, 0.15087890625, 0.002399444580078125, 0.0102996826171875, 0.3388671875, 0.1810302734375, 0.8984375, 0.01142120361328125, 0.0049896240234375, 0.0877685546875, 0.0007681846618652344, 1.5497207641601562e-06, 0.007724761962890625, 0.007701873779296875, 0.045379638671875, 0.0281829833984375, 0.045440673828125, 0.0017194747924804688, 0.01071929931640625, 2.1219253540039062e-05, 0.061920166015625, 0.10394287109375, 2.9921531677246094e-05, 0.00339508056640625, 0.0005369186401367188], "tokens": [275, 319, 3088, 687, 7216, 4716, 3457, 77, 91, 79, 474, 18074, 6062, 7056, 3457, 77, 91, 79, 2377, 7216, 4716, 77, 91, 6653, 275, 319, 436, 1169, 3088, 687, 595, 4009, 275, 569, 284, 945, 2629, 6877, 2863, 7216, 4716, 3457, 45, 284, 1022, 275, 319, 475, 10256, 3015, 3088, 1204]}
{"line_number": 1721, "line_type": "original", "code": "                            fAtInterpolationPoints.setEntry(nfm - n, f);", "entropy": 1.5908203125, "is_bug_line": false, "sus_score": 0.7267645001411438, "per_token_entropy": [9.8984375, 6.66796875, 0.80810546875, 0.1990966796875, 0.003826141357421875, 3.041015625, 0.1693115234375, 0.045867919921875, 0.006557464599609375, 0.6484375, 0.05596923828125, 2.6328125, 0.10809326171875, 0.03631591796875, 0.248779296875, 0.88232421875], "tokens": [9316, 296, 1076, 38126, 6834, 32, 470, 2711, 26, 10795, 95, 429, 310, 30, 296, 293]}
{"line_number": 1721, "line_type": "generated", "code": "\n     *     NF is the number of calls to F so far, IP is the index of the interpolation\n     *       point that is going to be deleted to make room for a new one, and STEP\n     *       will be set to the initial step for", "entropy": 0.38525390625, "is_bug_line": false, "sus_score": 0.7267645001411438, "per_token_entropy": [0.71337890625, 0.21728515625, 0.272216796875, 1.65625, 0.373779296875, 0.3642578125, 0.1181640625, 0.00031375885009765625, 0.59521484375, 0.68896484375, 0.69580078125, 0.250732421875, 0.00017309188842773438, 0.51318359375, 1.3466796875, 0.63330078125, 0.00664520263671875, 0.70166015625, 0.00618743896484375, 0.00492095947265625, 0.96337890625, 0.034637451171875, 0.00015246868133544922, 0.57763671875, 0.1920166015625, 0.7685546875, 0.100341796875, 1.357421875, 0.0008764266967773438, 0.0005407333374023438, 0.280029296875, 0.0008602142333984375, 0.08941650390625, 0.240234375, 0.0002570152282714844, 0.5498046875, 0.1612548828125, 0.021942138671875, 0.29296875, 0.267822265625, 0.9833984375, 1.1328125, 0.00023043155670166016, 0.0246124267578125, 0.8193359375, 0.00431060791015625, 0.017578125, 0.00017404556274414062, 0.0030536651611328125, 0.7705078125, 0.01947021484375, 1.201171875], "tokens": [275, 319, 262, 34152, 438, 322, 1451, 432, 7399, 372, 506, 1259, 9019, 30, 4600, 438, 322, 1650, 432, 322, 23334, 275, 319, 958, 2260, 688, 438, 6783, 372, 526, 8128, 372, 1930, 8355, 436, 312, 537, 1591, 30, 461, 45669, 275, 319, 958, 1098, 526, 739, 372, 322, 2815, 3111, 436]}
{"line_number": 1719, "line_type": "original", "code": "                        if (f < fAtInterpolationPoints.getEntry(nfm - n)) {", "entropy": 1.2919921875, "is_bug_line": false, "sus_score": 0.7265065312385559, "per_token_entropy": [8.2734375, 3.09375, 0.311279296875, 3.623046875, 0.94384765625, 0.375244140625, 0.461669921875, 0.359130859375, 0.005847930908203125, 0.02716064453125, 0.03680419921875, 0.005313873291015625, 2.185546875, 0.16650390625, 2.69921875, 0.443115234375, 0.19384765625, 0.045867919921875], "tokens": [6797, 415, 308, 88, 333, 296, 1076, 38126, 6834, 32, 48895, 26, 10795, 95, 429, 310, 490, 301]}
{"line_number": 1719, "line_type": "generated", "code": "\n     *     @param npt Number of interpolation points.\n     *     @param x Current point.\n     *     @param f Objective function value at {@code x}.\n     *     @param g Gradient of the objective function at {@code x}.\n    ", "entropy": 0.3896484375, "is_bug_line": false, "sus_score": 0.7265065312385559, "per_token_entropy": [0.66748046875, 0.6591796875, 1.0029296875, 0.78564453125, 0.5703125, 1.640625, 1.96484375, 0.38232421875, 0.00318145751953125, 0.017425537109375, 0.01318359375, 0.64306640625, 0.2178955078125, 0.0533447265625, 0.0206451416015625, 0.0010786056518554688, 0.044219970703125, 1.4931640625, 1.546875, 0.857421875, 0.1304931640625, 0.047515869140625, 0.00531005859375, 0.0025501251220703125, 0.00021886825561523438, 0.0199127197265625, 0.5966796875, 2.296875, 0.364990234375, 0.2279052734375, 0.5439453125, 0.90283203125, 0.0020961761474609375, 0.0088958740234375, 0.032867431640625, 0.01319122314453125, 0.006809234619140625, 0.0035877227783203125, 0.0003311634063720703, 0.0272064208984375, 0.06341552734375, 0.2110595703125, 0.8251953125, 1.1640625, 0.024444580078125, 0.0027904510498046875, 0.057952880859375, 0.025115966796875, 0.00016629695892333984, 0.0016241073608398438, 0.036163330078125, 0.0311126708984375], "tokens": [275, 319, 262, 477, 753, 310, 385, 5104, 432, 23334, 4981, 32, 275, 319, 262, 477, 753, 816, 7500, 2260, 32, 275, 319, 262, 477, 753, 296, 36212, 667, 786, 821, 3088, 687, 816, 4009, 275, 319, 262, 477, 753, 485, 31950, 432, 322, 25110, 667, 821, 3088, 687, 816, 4009, 275]}
{"line_number": 1642, "line_type": "original", "code": "                    if (lowerDifference.getEntry(nfxm) == ZERO) {", "entropy": 1.064453125, "is_bug_line": false, "sus_score": 0.726296603679657, "per_token_entropy": [6.7890625, 2.44921875, 0.06689453125, 4.4609375, 0.0712890625, 0.005336761474609375, 0.003742218017578125, 0.002101898193359375, 2.31640625, 0.07421875, 0.1317138671875, 0.00885772705078125, 0.339599609375, 0.0231781005859375, 0.260986328125, 0.0262603759765625], "tokens": [4696, 415, 308, 5729, 24443, 32, 48895, 26, 96, 5185, 95, 27, 610, 20024, 27, 301]}
{"line_number": 1642, "line_type": "generated", "code": "\n                    trustRegionCenterInterpolationPointIndex = nfm;\n                }\n            }\n\n            // Set the nonzero elements of the H matrix to the values of the\n            // approximate second derivatives of F at the interpolation points.\n\n            if (nfm <= n) {", "entropy": 0.389404296875, "is_bug_line": false, "sus_score": 0.726296603679657, "per_token_entropy": [0.66552734375, 0.513671875, 0.0004684925079345703, 0.0013380050659179688, 0.005977630615234375, 0.0002474784851074219, 0.00528717041015625, 0.0106964111328125, 0.1279296875, 0.09716796875, 0.05194091796875, 0.72705078125, 0.0129852294921875, 0.73876953125, 0.818359375, 0.8642578125, 0.1561279296875, 0.50537109375, 0.01885986328125, 0.009765625, 0.2342529296875, 0.80126953125, 0.00145721435546875, 1.3984375, 0.63330078125, 0.2109375, 0.2093505859375, 0.2144775390625, 0.5869140625, 0.10791015625, 0.006687164306640625, 0.17236328125, 9.608268737792969e-05, 2.18359375, 1.41015625, 0.0270843505859375, 0.13720703125, 0.478515625, 0.1243896484375, 0.014404296875, 1.03515625, 0.0560302734375, 0.2266845703125, 0.318603515625, 1.8818359375, 0.0223541259765625, 0.72509765625, 0.03851318359375, 1.2919921875, 0.15380859375, 0.2081298828125, 0.00180816650390625], "tokens": [528, 18074, 6062, 7056, 38126, 1943, 1284, 280, 310, 12362, 45, 400, 320, 324, 320, 1064, 434, 1756, 322, 2979, 6158, 4702, 432, 322, 677, 5045, 372, 322, 2078, 432, 322, 324, 434, 42496, 3100, 40391, 432, 506, 821, 322, 23334, 4981, 32, 1064, 415, 308, 10795, 95, 2511, 310, 27, 301]}
{"line_number": 1646, "line_type": "original", "code": "                    if (upperDifference.getEntry(nfxm) == ZERO) {", "entropy": 1.6279296875, "is_bug_line": false, "sus_score": 0.726296603679657, "per_token_entropy": [4.76171875, 9.78125, 0.1513671875, 8.078125, 0.010101318359375, 0.0069122314453125, 0.005340576171875, 0.0019140243530273438, 2.318359375, 0.01528167724609375, 0.11688232421875, 0.006732940673828125, 0.40966796875, 0.0099029541015625, 0.325927734375, 0.040924072265625], "tokens": [4696, 415, 308, 7607, 24443, 32, 48895, 26, 96, 5185, 95, 27, 610, 20024, 27, 301]}
{"line_number": 1646, "line_type": "generated", "code": "\n                // case when NF is at most NPT.\n\n            if (nfm <= npt) {\n                if (nfm == 0) {\n                    for (int j = 0; j < n; j++) {\n                        originShift.set", "entropy": 0.3408203125, "is_bug_line": false, "sus_score": 0.726296603679657, "per_token_entropy": [1.9375, 0.6787109375, 1.3740234375, 0.55224609375, 0.087890625, 0.33544921875, 1.2138671875, 0.223388671875, 0.69287109375, 0.7890625, 0.1153564453125, 2.169921875, 0.205078125, 0.0032958984375, 0.11309814453125, 0.0028476715087890625, 0.05487060546875, 0.1260986328125, 0.080078125, 0.020050048828125, 0.003204345703125, 0.08685302734375, 1.0263671875, 0.01361846923828125, 0.20849609375, 0.0031147003173828125, 0.61669921875, 0.1302490234375, 1.0517578125, 0.2406005859375, 0.0016231536865234375, 0.06982421875, 1.5859375, 0.0005545616149902344, 0.0018606185913085938, 0.49462890625, 0.003704071044921875, 0.0032062530517578125, 0.0059356689453125, 0.03875732421875, 0.0003483295440673828, 0.01776123046875, 0.0196685791015625, 0.1929931640625, 0.0079193115234375, 0.00112152099609375, 0.0015697479248046875, 0.0171966552734375, 1.0927734375, 0.00057220458984375, 0.0026397705078125, 0.004871368408203125], "tokens": [400, 434, 1135, 1412, 34152, 438, 821, 4630, 489, 3655, 32, 1064, 415, 308, 10795, 95, 2511, 310, 385, 27, 301, 400, 415, 308, 10795, 95, 610, 225, 34, 27, 301, 528, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 310, 45, 594, 1987, 301, 715, 7382, 10210, 32, 470]}
{"line_number": 1730, "line_type": "original", "code": "                    bMatrix.setEntry(nfm, nfxm, -HALF / interpolationPoints.getEntry(nfm - n, nfxm));", "entropy": 1.3466796875, "is_bug_line": false, "sus_score": 0.7257869839668274, "per_token_entropy": [9.3671875, 8.4375, 0.433349609375, 1.8251953125, 0.04986572265625, 0.0677490234375, 0.006679534912109375, 0.72265625, 0.07391357421875, 0.658203125, 0.80615234375, 0.102783203125, 0.104736328125, 0.01245880126953125, 1.9296875, 4.18359375, 2.755859375, 4.9609375, 0.003650665283203125, 0.0049285888671875, 0.0026702880859375, 0.0009670257568359375, 0.07318115234375, 0.01374053955078125, 4.6015625, 0.1337890625, 0.09716796875, 0.166259765625, 0.01143646240234375, 0.0426025390625, 0.1063232421875], "tokens": [4696, 323, 4161, 32, 470, 2711, 26, 10795, 95, 30, 310, 5185, 95, 30, 429, 34266, 517, 23334, 6834, 32, 48895, 26, 10795, 95, 429, 310, 30, 310, 5185, 95, 876]}
{"line_number": 1730, "line_type": "generated", "code": "\n     *     The other arguments are not modified by BOBYQA.\n     */\n    private void update(final int n, final int npt, final RealMatrix xpt, final RealMatrix xopt, final RealMatrix gopt, final RealMatrix", "entropy": 0.3837890625, "is_bug_line": false, "sus_score": 0.7257869839668274, "per_token_entropy": [0.379638671875, 0.314208984375, 0.131591796875, 1.2119140625, 1.2490234375, 0.416015625, 0.117431640625, 0.5517578125, 0.293701171875, 0.212646484375, 0.830078125, 0.00702667236328125, 0.469970703125, 0.002788543701171875, 0.2802734375, 0.289794921875, 1.0908203125, 0.298828125, 0.654296875, 0.353515625, 2.001953125, 1.109375, 0.336669921875, 0.509765625, 0.2281494140625, 0.02301025390625, 0.459228515625, 0.04620361328125, 0.021484375, 0.0041046142578125, 0.004650115966796875, 0.1890869140625, 1.9794921875, 0.460205078125, 0.05084228515625, 0.06536865234375, 0.0014324188232421875, 0.4912109375, 0.1864013671875, 0.480224609375, 0.07073974609375, 0.0272674560546875, 0.00250244140625, 0.69482421875, 0.11328125, 0.148193359375, 0.09796142578125, 0.00046706199645996094, 0.00431060791015625, 0.900390625, 0.0809326171875, 0.004871368408203125], "tokens": [275, 319, 262, 886, 1604, 4209, 884, 646, 8844, 810, 551, 4384, 75, 19533, 32, 275, 569, 284, 945, 763, 1974, 26, 3220, 629, 310, 30, 1158, 629, 310, 385, 30, 1158, 11443, 4161, 816, 385, 30, 1158, 11443, 4161, 816, 2215, 30, 1158, 11443, 4161, 1983, 385, 30, 1158, 11443, 4161]}
{"line_number": 1720, "line_type": "original", "code": "                            fAtInterpolationPoints.setEntry(nfm, fAtInterpolationPoints.getEntry(nfm - n));", "entropy": 1.5546875, "is_bug_line": false, "sus_score": 0.7246056795120239, "per_token_entropy": [11.296875, 9.5, 5.76953125, 0.054901123046875, 0.002490997314453125, 1.93359375, 0.75390625, 0.0178680419921875, 0.034942626953125, 0.61962890625, 0.048614501953125, 0.3203125, 0.1597900390625, 4.421875, 0.104736328125, 0.00553131103515625, 0.0281829833984375, 0.033050537109375, 0.004436492919921875, 0.208740234375, 0.0965576171875, 1.0888671875, 0.404296875, 0.415771484375], "tokens": [9316, 296, 1076, 38126, 6834, 32, 470, 2711, 26, 10795, 95, 30, 296, 1076, 38126, 6834, 32, 48895, 26, 10795, 95, 429, 310, 876]}
{"line_number": 1720, "line_type": "generated", "code": "\n     *     meanings as the corresponding arguments of BOBYQA. The arguments BNDS_L\n     *     and BNDS_U are the lower and upper bounds of the components of X.\n     *     GOPT is the gradient of the quadr", "entropy": 0.265380859375, "is_bug_line": false, "sus_score": 0.7246056795120239, "per_token_entropy": [0.9150390625, 0.02349853515625, 0.10931396484375, 0.2822265625, 4.172325134277344e-06, 0.01285552978515625, 0.0247802734375, 0.09783935546875, 0.082275390625, 0.0008182525634765625, 0.49755859375, 0.0167083740234375, 0.2095947265625, 0.00020122528076171875, 0.048004150390625, 1.7353515625, 0.06671142578125, 1.77734375, 0.2373046875, 0.459716796875, 0.1279296875, 0.0467529296875, 0.00041866302490234375, 0.021453857421875, 0.0003962516784667969, 9.381771087646484e-05, 4.76837158203125e-07, 0.00180816650390625, 0.0001932382583618164, 0.66357421875, 0.75439453125, 0.270751953125, 0.004825592041015625, 0.0002932548522949219, 0.0096435546875, 0.86572265625, 0.208251953125, 0.375, 0.00013339519500732422, 0.00780487060546875, 0.64794921875, 0.177978515625, 0.06646728515625, 0.0767822265625, 1.2470703125, 0.8359375, 0.5419921875, 0.10406494140625, 0.0108795166015625, 0.0012845993041992188, 0.11798095703125, 0.01126861572265625], "tokens": [275, 319, 262, 5651, 2052, 619, 322, 8435, 4209, 432, 551, 4384, 75, 19533, 32, 886, 4209, 26342, 4135, 81, 62, 275, 319, 262, 461, 26342, 4135, 81, 71, 884, 322, 7216, 461, 8342, 11615, 432, 322, 6339, 432, 1593, 32, 275, 319, 262, 570, 14566, 438, 322, 14999, 432, 322, 28624]}
{"line_number": 1713, "line_type": "original", "code": "                    final int ih = nfx * (nfx + 1) / 2 - 1;", "entropy": 2.14453125, "is_bug_line": false, "sus_score": 0.7225314974784851, "per_token_entropy": [9.6015625, 15.484375, 1.013671875, 4.328125, 0.19970703125, 3.30078125, 1.0234375, 3.2265625, 0.05548095703125, 0.00673675537109375, 0.0015592575073242188, 1.3974609375, 0.0031890869140625, 0.01486968994140625, 0.002819061279296875, 0.00862884521484375, 0.002506256103515625, 4.0650367736816406e-05, 5.07421875, 1.708984375, 0.09381103515625, 0.6396484375], "tokens": [4696, 1158, 629, 37395, 280, 310, 5185, 319, 308, 96, 5185, 474, 225, 35, 27, 517, 225, 36, 429, 225, 35, 45]}
{"line_number": 1713, "line_type": "generated", "code": "\n     *     using the best point obtained so far as an initial approximation for the\n     *     line search.\n     *\n     *     The truncated conjugate gradient algorithm uses the fact that a quadratic\n     *     function has a single minimizer within a", "entropy": 0.52294921875, "is_bug_line": false, "sus_score": 0.7225314974784851, "per_token_entropy": [0.302978515625, 0.0178680419921875, 0.107666015625, 0.172119140625, 0.340576171875, 0.78271484375, 0.351318359375, 0.1953125, 0.921875, 0.0003428459167480469, 0.215576171875, 1.6640625, 0.13720703125, 0.9189453125, 0.95458984375, 0.63623046875, 0.048187255859375, 0.00010144710540771484, 0.006175994873046875, 0.93505859375, 0.01045989990234375, 0.2110595703125, 1.892578125, 0.50048828125, 0.9951171875, 0.0157928466796875, 0.2242431640625, 1.220703125, 0.257080078125, 0.01123046875, 0.0001442432403564453, 0.0027866363525390625, 0.0027408599853515625, 1.1962890625, 1.4541015625, 1.853515625, 1.5537109375, 0.0013885498046875, 1.080078125, 0.30615234375, 2.110004425048828e-05, 0.00812530517578125, 0.00011861324310302734, 0.01145172119140625, 0.935546875, 0.98779296875, 0.327392578125, 1.6748046875, 0.56591796875, 0.0011196136474609375, 1.162109375, 0.033172607421875], "tokens": [275, 319, 262, 1471, 322, 5273, 2260, 17269, 1259, 9019, 619, 600, 2815, 39431, 436, 322, 275, 319, 262, 1628, 3233, 32, 275, 319, 275, 319, 262, 886, 33658, 18333, 888, 332, 14999, 8218, 5251, 322, 8434, 688, 312, 28624, 689, 275, 319, 262, 667, 1401, 312, 3982, 18206, 2265, 4797, 312]}
{"line_number": 1725, "line_type": "original", "code": "                            interpolationPoints.setEntry(nfm - n, nfxm, stepb);", "entropy": 1.7763671875, "is_bug_line": false, "sus_score": 0.7225314974784851, "per_token_entropy": [10.3046875, 7.34765625, 0.1719970703125, 0.23486328125, 4.1796875, 0.07354736328125, 0.01502227783203125, 1.8701171875, 0.04986572265625, 3.025390625, 0.1768798828125, 0.123046875, 1.015625, 0.1661376953125, 0.1455078125, 0.05853271484375, 0.73828125, 4.015625, 0.0283966064453125], "tokens": [9316, 23334, 6834, 32, 470, 2711, 26, 10795, 95, 429, 310, 30, 310, 5185, 95, 30, 3111, 84, 293]}
{"line_number": 1725, "line_type": "generated", "code": "\n     *       the point that minimizes the quadratic model within the trust region\n     *       subject to the SL and SU constraints on the variables.\n     *     D will be set to a new vector that is approximately the direction that\n     *       minimizes", "entropy": 0.26904296875, "is_bug_line": false, "sus_score": 0.7225314974784851, "per_token_entropy": [1.662109375, 0.031768798828125, 0.30908203125, 0.0848388671875, 0.89794921875, 0.9130859375, 0.0323486328125, 0.0010280609130859375, 0.001720428466796875, 0.0235748291015625, 2.09808349609375e-05, 0.0185394287109375, 0.00539398193359375, 0.160888671875, 0.00426483154296875, 0.0223541259765625, 0.259765625, 0.0007867813110351562, 0.03436279296875, 0.06353759765625, 7.772445678710938e-05, 0.0083465576171875, 0.69873046875, 0.005268096923828125, 0.0007243156433105469, 0.080810546875, 0.005329132080078125, 0.00588226318359375, 0.0081939697265625, 0.0116424560546875, 1.09765625, 0.0131072998046875, 0.06292724609375, 1.0244140625, 0.7099609375, 0.01155853271484375, 0.09381103515625, 0.0021152496337890625, 0.252685546875, 0.248046875, 0.2362060546875, 0.2481689453125, 0.1290283203125, 0.7119140625, 0.31201171875, 1.6123046875, 1.505859375, 0.0004973411560058594, 0.00029468536376953125, 0.013458251953125, 0.345458984375, 0.005107879638671875], "tokens": [275, 319, 958, 322, 2260, 688, 18206, 5052, 322, 28624, 689, 1542, 4797, 322, 18074, 6699, 275, 319, 958, 5383, 372, 322, 15247, 461, 10398, 13383, 544, 322, 4886, 32, 275, 319, 262, 475, 1098, 526, 739, 372, 312, 537, 4026, 688, 438, 46196, 322, 6983, 688, 275, 319, 958, 18206, 5052]}
{"line_number": 1736, "line_type": "original", "code": "                    zMatrix.setEntry(nfm - n, nfxm,", "entropy": 2.03515625, "is_bug_line": false, "sus_score": 0.7208474278450012, "per_token_entropy": [7.3515625, 13.4453125, 2.1328125, 1.2373046875, 0.93212890625, 0.06982421875, 0.07464599609375, 2.818359375, 0.09246826171875, 3.490234375, 0.21875, 0.1468505859375, 0.35693359375, 0.06781005859375, 0.0885009765625, 0.03741455078125], "tokens": [4696, 1288, 4161, 32, 470, 2711, 26, 10795, 95, 429, 310, 30, 310, 5185, 95, 30]}
{"line_number": 1736, "line_type": "generated", "code": "\n     *     D is a working space vector. On input it must be set by the user to a\n     *       vector of length N. On output it contains the final calculated trial\n     *       step from XOPT of length N.\n     *     G", "entropy": 0.318603515625, "is_bug_line": false, "sus_score": 0.7208474278450012, "per_token_entropy": [1.4013671875, 0.005504608154296875, 0.282958984375, 3.71875, 1.4091796875, 0.986328125, 0.008148193359375, 0.0018644332885742188, 0.1885986328125, 0.6103515625, 1.7978515625, 0.701171875, 0.1661376953125, 0.2342529296875, 0.0152587890625, 0.0104827880859375, 0.071533203125, 0.0002346038818359375, 0.004962921142578125, 0.0290069580078125, 0.219482421875, 0.1873779296875, 0.0002294778823852539, 0.1162109375, 0.2078857421875, 0.00023293495178222656, 0.09112548828125, 0.0013790130615234375, 0.07403564453125, 0.260498046875, 0.004703521728515625, 0.0087127685546875, 0.482421875, 0.01151275634765625, 0.36865234375, 0.19677734375, 0.8388671875, 0.01568603515625, 1.5735626220703125e-05, 0.004322052001953125, 0.004062652587890625, 0.06591796875, 0.00014770030975341797, 1.239776611328125e-05, 0.4765625, 0.6015625, 0.00019609928131103516, 0.3291015625, 0.11212158203125, 0.0241546630859375, 0.038726806640625, 0.1827392578125], "tokens": [275, 319, 262, 475, 438, 312, 4740, 5122, 4026, 32, 2704, 1509, 561, 2298, 526, 739, 810, 322, 1256, 372, 312, 275, 319, 958, 4026, 432, 3104, 489, 32, 2704, 1688, 561, 4304, 322, 1158, 16453, 22152, 275, 319, 958, 3111, 645, 1593, 14566, 432, 3104, 489, 32, 275, 319, 262, 570]}
{"line_number": 100, "line_type": "original", "code": "    private int trustRegionCenterInterpolationPointIndex;", "entropy": 2.453125, "is_bug_line": false, "sus_score": 0.7119124531745911, "per_token_entropy": [2.337890625, 1.5, 6.046875, 6.33984375, 0.004650115966796875, 0.51171875, 7.21484375, 0.146728515625, 0.32763671875, 0.103271484375], "tokens": [264, 945, 629, 18074, 6062, 7056, 38126, 1943, 1284, 45]}
{"line_number": 100, "line_type": "generated", "code": "\n     */\n    private ArrayRealVector lowerDifference;\n    /**\n     * Differences {@link #getUpperBound()} - {@link #originShift}.\n     * All the components of every {@link #trustRegionCenterOffset} are going\n     * to satisfy", "entropy": 0.03912353515625, "is_bug_line": false, "sus_score": 0.7119124531745911, "per_token_entropy": [0.244384765625, 0.25732421875, 0.03521728515625, 0.0256805419921875, 0.1387939453125, 0.004734039306640625, 1.7881393432617188e-06, 0.325439453125, 0.5400390625, 0.0298004150390625, 0.07879638671875, 0.0016603469848632812, 0.03167724609375, 3.3736228942871094e-05, 0.04815673828125, 0.08697509765625, 1.2040138244628906e-05, 0.00986480712890625, 8.749961853027344e-05, 0.0031757354736328125, 0.00582122802734375, 0.005496978759765625, 0.00402069091796875, 0.019561767578125, 0.0027523040771484375, 0.007022857666015625, 5.543231964111328e-05, 0.0005812644958496094, 0.0012331008911132812, 0.0001201629638671875, 0.037384033203125, 0.02099609375, 0.002635955810546875, 0.0258331298828125, 0.0030040740966796875, 0.0005903244018554688, 0.0002435445785522461, 0.0011463165283203125, 0.004718780517578125, 2.849102020263672e-05, 0.00027751922607421875, 0.015594482421875, 1.811981201171875e-05, 0.0004031658172607422, 0.0011320114135742188, 0.00023639202117919922, 0.0012521743774414062, 0.0017766952514648438, 0.00940704345703125, 3.695487976074219e-05, 0.00035309791564941406, 0.0001270771026611328], "tokens": [275, 569, 284, 945, 2629, 6877, 2863, 7216, 24443, 45, 284, 1022, 275, 319, 475, 10256, 3015, 3088, 1204, 588, 371, 9878, 4716, 9741, 429, 3088, 1204, 588, 6946, 10210, 4009, 275, 319, 3367, 322, 6339, 432, 3638, 3088, 1204, 588, 16530, 6062, 7056, 3457, 111, 884, 6783, 275, 319, 372, 30098]}
{"line_number": 2455, "line_type": "original", "code": "        final StackTraceElement[] elements = t.getStackTrace();", "entropy": 1.0380859375, "is_bug_line": false, "sus_score": 0.7094389796257019, "per_token_entropy": [5.9921875, 3.10546875, 0.734375, 0.00919342041015625, 8.821487426757812e-06, 0.033477783203125, 0.0040283203125, 0.2242431640625, 3.37890625, 0.0005240440368652344, 0.0017547607421875, 0.0002627372741699219, 0.005397796630859375], "tokens": [351, 1158, 9781, 4790, 1308, 1178, 4702, 280, 273, 32, 371, 8429, 473]}
{"line_number": 2455, "line_type": "generated", "code": "\n    private static void print(String s) {\n        System.out.println(s);\n    }", "entropy": 0.485595703125, "is_bug_line": false, "sus_score": 0.7094389796257019, "per_token_entropy": [0.72119140625, 1.0908203125, 0.7919921875, 1.5146484375, 1.623046875, 2.1328125, 0.47412109375, 0.7080078125, 0.056549072265625, 0.0107879638671875, 0.14208984375, 0.60986328125, 0.0001100301742553711, 0.035400390625, 6.29425048828125e-05, 0.04949951171875, 0.08380126953125, 0.09344482421875, 0.01296234130859375, 0.038055419921875, 0.004364013671875], "tokens": [284, 945, 907, 763, 1459, 26, 652, 309, 27, 301, 291, 1171, 32, 541, 32, 3948, 26, 101, 293, 284, 320]}
{"line_number": 1749, "line_type": "original", "code": "                final int ih = ipt * (ipt - 1) / 2 + jpt - 1;", "entropy": 0.91357421875, "is_bug_line": false, "sus_score": 0.7094389796257019, "per_token_entropy": [7.30859375, 1.259765625, 2.259765625, 4.51171875, 0.068603515625, 2.357421875, 0.1424560546875, 0.16357421875, 0.01561737060546875, 0.66015625, 0.0015802383422851562, 0.0009946823120117188, 0.0013446807861328125, 0.005123138427734375, 0.0014162063598632812, 3.695487976074219e-05, 1.0693359375, 0.06878662109375, 0.0005784034729003906, 0.9912109375, 0.05523681640625, 0.06427001953125, 0.015655517578125], "tokens": [2071, 1158, 629, 37395, 280, 45367, 319, 308, 9115, 429, 225, 35, 27, 517, 225, 36, 474, 594, 385, 429, 225, 35, 45]}
{"line_number": 1749, "line_type": "generated", "code": "\n     */\n    private void trsbox(final double delta, final double[] gnew) {\n        final int n = getN();\n        final int npt = getNpt();\n        final double[] xpt = getXpt();\n        final double", "entropy": 0.285400390625, "is_bug_line": false, "sus_score": 0.7094389796257019, "per_token_entropy": [0.6669921875, 0.796875, 0.135498046875, 0.66650390625, 0.406982421875, 1.1376953125, 0.97705078125, 0.005893707275390625, 0.09161376953125, 0.55517578125, 0.1737060546875, 0.091552734375, 0.03424072265625, 0.1568603515625, 0.85888671875, 0.12188720703125, 0.0406494140625, 0.0013704299926757812, 0.0721435546875, 0.412109375, 0.623046875, 0.9755859375, 0.87841796875, 0.274658203125, 0.09271240234375, 0.40869140625, 0.469970703125, 0.0670166015625, 0.14599609375, 0.203857421875, 0.4111328125, 0.1610107421875, 0.03912353515625, 0.0018358230590820312, 0.267822265625, 0.01026153564453125, 0.062347412109375, 0.004802703857421875, 0.08636474609375, 0.07611083984375, 0.474365234375, 0.61279296875, 0.35009765625, 0.41064453125, 0.051239013671875, 0.05859375, 0.0028820037841796875, 0.10302734375, 0.0178375244140625, 0.03759765625, 0.0179443359375, 0.041046142578125], "tokens": [275, 569, 284, 945, 763, 554, 101, 1501, 26, 3220, 2064, 7715, 30, 1158, 2064, 1178, 485, 890, 27, 301, 291, 1158, 629, 310, 280, 622, 64, 473, 291, 1158, 629, 310, 385, 280, 622, 64, 385, 473, 291, 1158, 2064, 1178, 816, 385, 280, 622, 74, 385, 473, 291, 1158, 2064]}
{"line_number": 2457, "line_type": "original", "code": "        return e.getMethodName() + \" (at line \" + e.getLineNumber() + \")\";", "entropy": 2.19921875, "is_bug_line": false, "sus_score": 0.7090252041816711, "per_token_entropy": [6.05859375, 4.0078125, 8.0, 1.9482421875, 0.90185546875, 9.8984375, 2.103515625, 0.3369140625, 1.041015625, 3.91796875, 5.7421875, 1.708984375, 0.12646484375, 0.0406494140625, 0.07452392578125, 0.0014142990112304688, 0.00022304058074951172, 0.003253936767578125, 0.005413055419921875, 0.032562255859375, 0.2489013671875], "tokens": [351, 442, 484, 32, 371, 21781, 346, 474, 313, 308, 269, 1628, 313, 474, 484, 32, 371, 29690, 346, 474, 34348]}
{"line_number": 2457, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.7090252041816711, "per_token_entropy": [], "tokens": []}
{"line_number": 1653, "line_type": "original", "code": "                final int tmp1 = (nfm - np) / n;", "entropy": 1.841796875, "is_bug_line": false, "sus_score": 0.7080636620521545, "per_token_entropy": [3.564453125, 8.34375, 1.166015625, 1.0859375, 2.302734375, 0.1759033203125, 3.130859375, 0.685546875, 0.1094970703125, 0.7119140625, 3.86328125, 0.303955078125, 0.93505859375, 0.69921875, 0.54345703125], "tokens": [2071, 1158, 629, 3691, 35, 280, 308, 10795, 95, 429, 2065, 27, 517, 310, 45]}
{"line_number": 1653, "line_type": "generated", "code": "\n                    numEval <= n) {\n                    bMatrix.setEntry(numEval - 1, 0, ONE);\n                }\n                for (int i = 0; i < numEval; i++) {\n                    for (int j = 0", "entropy": 0.32666015625, "is_bug_line": false, "sus_score": 0.7080636620521545, "per_token_entropy": [0.472900390625, 1.95703125, 0.00018978118896484375, 0.21630859375, 0.1453857421875, 0.356689453125, 0.01398468017578125, 0.07904052734375, 1.2607421875, 0.033477783203125, 0.0139923095703125, 0.01551055908203125, 0.048065185546875, 0.00597381591796875, 0.92138671875, 8.463859558105469e-06, 0.1722412109375, 0.0254364013671875, 0.3095703125, 0.004261016845703125, 2.0625, 0.040618896484375, 0.0011529922485351562, 1.201171875, 0.07049560546875, 1.10546875, 0.000560760498046875, 0.89990234375, 1.7490234375, 0.0006566047668457031, 0.0019893646240234375, 1.2177734375, 0.0015821456909179688, 0.304931640625, 0.0811767578125, 0.156005859375, 0.00281524658203125, 0.185546875, 0.263671875, 0.0001323223114013672, 0.140625, 0.010345458984375, 0.0009794235229492188, 0.0012865066528320312, 0.034637451171875, 0.83642578125, 0.00017964839935302734, 0.0007090568542480469, 0.01224517822265625, 0.00023889541625976562, 0.5390625, 0.006626129150390625], "tokens": [528, 1929, 14066, 2511, 310, 27, 301, 528, 323, 4161, 32, 470, 2711, 26, 1516, 14066, 429, 225, 35, 30, 225, 34, 30, 27143, 293, 400, 320, 400, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 1929, 14066, 45, 595, 1987, 301, 528, 436, 308, 410, 594, 280, 225, 34]}
{"line_number": 2479, "line_type": "original", "code": "            super(PATH_IS_EXPLORED + \" \" + BOBYQAOptimizer.caller(3));", "entropy": 2.234375, "is_bug_line": false, "sus_score": 0.7073051333427429, "per_token_entropy": [8.1484375, 5.5390625, 0.64599609375, 13.796875, 0.00026702880859375, 0.0008111000061035156, 5.7816505432128906e-05, 4.0531158447265625e-05, 2.0265579223632812e-06, 0.0018186569213867188, 4.4921875, 1.4794921875, 2.158203125, 0.0248260498046875, 11.09375, 0.0009398460388183594, 0.04254150390625, 0.0010080337524414062, 2.939453125, 0.08575439453125, 1.2666015625, 0.01287078857421875, 1.861328125, 0.046173095703125], "tokens": [1468, 2599, 26, 4065, 81, 1296, 81, 12275, 1305, 7097, 474, 313, 313, 474, 551, 4384, 75, 19533, 29248, 32, 22485, 26, 37, 876]}
{"line_number": 2479, "line_type": "generated", "code": "\n    /**\n     * This method is called by the {@link #optimize(int,\n     * org.apache.commons.math4.optim.nonlinear.scalar.GoalType,\n     * org.apache.commons.math4.optim.non", "entropy": 0.435302734375, "is_bug_line": false, "sus_score": 0.7073051333427429, "per_token_entropy": [0.9384765625, 0.81884765625, 0.1529541015625, 0.00011324882507324219, 3.669921875, 0.71484375, 0.8876953125, 0.64794921875, 1.583984375, 0.40625, 0.93896484375, 0.16552734375, 0.61572265625, 0.81591796875, 0.330078125, 2.150390625, 0.415771484375, 0.61865234375, 0.0002199411392211914, 1.4462890625, 0.00012171268463134766, 0.05206298828125, 3.8504600524902344e-05, 8.96453857421875e-05, 2.1457672119140625e-06, 0.00841522216796875, 0.6435546875, 9.179115295410156e-06, 0.98681640625, 0.0005230903625488281, 1.373046875, 0.00287628173828125, 3.933906555175781e-06, 0.0711669921875, 0.0005893707275390625, 0.80908203125, 0.00019180774688720703, 0.037078857421875, 0.340087890625, 0.0002340078353881836, 0.379638671875, 2.2530555725097656e-05, 0.00017964839935302734, 4.649162292480469e-06, 2.5153160095214844e-05, 7.152557373046875e-07, 0.0006127357482910156, 0.00011706352233886719, 3.6954879760742188e-06, 0.0079193115234375, 4.887580871582031e-06, 0.60791015625], "tokens": [284, 1022, 275, 319, 1348, 1411, 438, 3823, 810, 322, 3088, 1204, 588, 22926, 26, 410, 30, 275, 319, 1086, 32, 2104, 32, 8369, 32, 3812, 38, 32, 8311, 32, 3780, 8362, 32, 13049, 32, 17357, 620, 30, 275, 319, 1086, 32, 2104, 32, 8369, 32, 3812, 38, 32, 8311, 32, 3780]}
{"line_number": 1656, "line_type": "original", "code": "                if (ipt > n) {", "entropy": 2.375, "is_bug_line": false, "sus_score": 0.7057389616966248, "per_token_entropy": [8.65625, 3.03125, 0.06219482421875, 2.8125, 2.259765625, 1.1884765625, 0.94970703125, 0.033599853515625], "tokens": [2071, 415, 308, 9115, 848, 310, 27, 301]}
{"line_number": 1656, "line_type": "generated", "code": "\n                        final int tmp1 = npt;\n                        npt = numEval + n;\n                        final int tmp2 = npt;\n                        npt = tmp1;\n                        final int tmp3 = npt;\n                        npt = tmp2;\n                        throw", "entropy": 0.239990234375, "is_bug_line": false, "sus_score": 0.7057389616966248, "per_token_entropy": [0.1346435546875, 1.173828125, 0.1864013671875, 0.53466796875, 0.70703125, 0.00426483154296875, 0.42822265625, 0.1480712890625, 0.1451416015625, 0.00522613525390625, 0.0780029296875, 0.0002448558807373047, 0.053619384765625, 0.47119140625, 0.00015211105346679688, 0.01235198974609375, 0.01020050048828125, 0.02459716796875, 0.0168304443359375, 2.603515625, 0.230224609375, 0.09814453125, 0.017364501953125, 0.0023632049560546875, 0.80517578125, 0.6826171875, 0.2244873046875, 0.006046295166015625, 0.03460693359375, 0.005992889404296875, 0.0029888153076171875, 0.038421630859375, 0.0096588134765625, 0.0194091796875, 0.0249786376953125, 1.1611328125, 0.1397705078125, 0.1639404296875, 0.0187530517578125, 0.0022487640380859375, 0.57958984375, 0.34130859375, 0.261474609375, 0.00567626953125, 0.0112152099609375, 0.0015325546264648438, 0.00475311279296875, 0.06512451171875, 0.0099029541015625, 0.00920867919921875, 0.027557373046875, 0.73486328125], "tokens": [715, 1158, 629, 3691, 35, 280, 310, 385, 45, 715, 310, 385, 280, 1929, 14066, 474, 310, 45, 715, 1158, 629, 3691, 36, 280, 310, 385, 45, 715, 310, 385, 280, 3691, 35, 45, 715, 1158, 629, 3691, 37, 280, 310, 385, 45, 715, 310, 385, 280, 3691, 36, 45, 715, 1422]}
{"line_number": 1654, "line_type": "original", "code": "                jpt = nfm - tmp1 * n - n;", "entropy": 2.291015625, "is_bug_line": false, "sus_score": 0.7039435505867004, "per_token_entropy": [6.5703125, 3.744140625, 0.057891845703125, 0.12176513671875, 0.72216796875, 0.357177734375, 0.880859375, 7.2890625, 0.043212890625, 5.7421875, 0.10443115234375, 2.875, 3.16015625, 0.40478515625], "tokens": [2071, 594, 385, 280, 310, 12362, 429, 3691, 35, 319, 310, 429, 310, 45]}
{"line_number": 1654, "line_type": "generated", "code": "\n                    if (f < fAtInterpolationPoints.getEntry(nfmm)) {\n                        interpolationPoints.setEntry(nfm, nfmm, interpolationPoints.getEntry(nfmm, nfmm) - stepa);\n                        interpolationPoints.setEntry(nf", "entropy": 0.276123046875, "is_bug_line": false, "sus_score": 0.7039435505867004, "per_token_entropy": [0.295654296875, 2.298828125, 0.029205322265625, 2.087890625, 0.463623046875, 0.132080078125, 0.3818359375, 0.0036334991455078125, 5.424022674560547e-05, 0.0008487701416015625, 0.0009474754333496094, 0.0013990402221679688, 0.140380859375, 0.1531982421875, 0.083251953125, 0.002910614013671875, 0.060760498046875, 1.16796875, 0.006977081298828125, 0.00311279296875, 0.054107666015625, 0.00218963623046875, 0.0010213851928710938, 0.087158203125, 0.04290771484375, 0.01132965087890625, 0.02496337890625, 9.334087371826172e-05, 0.000934600830078125, 0.701171875, 0.0001316070556640625, 0.0006999969482421875, 0.0005054473876953125, 0.00020742416381835938, 0.08013916015625, 1.2470703125, 0.037506103515625, 0.086669921875, 0.004009246826171875, 0.1414794921875, 1.775390625, 1.2060546875, 0.002346038818359375, 0.01071929931640625, 0.66064453125, 0.85205078125, 0.0010099411010742188, 0.0004711151123046875, 0.0012788772583007812, 0.00013124942779541016, 0.00025653839111328125, 0.01288604736328125], "tokens": [528, 415, 308, 88, 333, 296, 1076, 38126, 6834, 32, 48895, 26, 10795, 2840, 490, 301, 715, 23334, 6834, 32, 470, 2711, 26, 10795, 95, 30, 38272, 2840, 30, 23334, 6834, 32, 48895, 26, 10795, 2840, 30, 38272, 2840, 27, 429, 3111, 83, 293, 715, 23334, 6834, 32, 470, 2711, 26, 10795]}
