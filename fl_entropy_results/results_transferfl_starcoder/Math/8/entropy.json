{"line_number": 187, "line_type": "original", "code": "        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);", "entropy": 0.92236328125, "is_bug_line": true, "sus_score": 0.7981176376342773, "per_token_entropy": [5.734375, 4.03515625, 0.377197265625, 0.051483154296875, 11.6875, 0.043792724609375, 1.9755859375, 0.06732177734375, 0.004184722900390625, 2.19921875, 0.0015363693237304688, 0.0014429092407226562, 0.001224517822265625, 1.8477439880371094e-05, 0.002918243408203125, 1.2040138244628906e-05, 0.055084228515625, 0.0072021484375, 0.0182647705078125, 2.078125, 0.00030684471130371094, 0.03533935546875, 0.11102294921875, 0.0031280517578125, 0.0098724365234375, 0.0228729248046875, 0.0015964508056640625, 0.005062103271484375, 0.062042236328125, 0.0006632804870605469, 0.00664520263671875], "tokens": [351, 1158, 394, 1178, 541, 280, 308, 70, 9795, 1383, 32, 1581, 32, 9057, 32, 1261, 32, 20262, 26, 1738, 45422, 32, 371, 26, 34, 547, 9700, 1026, 3964, 1250, 293]}
{"line_number": 187, "line_type": "generated", "code": "\n\n    /**\n     * Return a random value from the distribution.\n     *\n     * @param rng Random number generator.\n     * @return a random value.\n     */\n    public T sample(UniformRandomProvider rng) {\n        final double randomValue = rng.", "entropy": 0.3095703125, "is_bug_line": true, "sus_score": 0.7981176376342773, "per_token_entropy": [0.72509765625, 0.2178955078125, 0.039794921875, 8.96453857421875e-05, 1.55859375, 1.0751953125, 1.3603515625, 0.84765625, 0.80224609375, 0.1712646484375, 0.81689453125, 1.5224609375, 0.3037109375, 0.0030956268310546875, 0.09039306640625, 0.0004532337188720703, 0.06341552734375, 0.7529296875, 0.71484375, 1.0419921875, 0.273193359375, 0.02044677734375, 0.167724609375, 0.01404571533203125, 0.00312042236328125, 0.016357421875, 0.03302001953125, 0.284912109375, 0.0285797119140625, 0.0125885009765625, 0.044586181640625, 0.0023937225341796875, 0.313720703125, 0.01140594482421875, 0.18798828125, 0.01313018798828125, 0.14013671875, 0.00412750244140625, 1.400390625, 0.0018644332885742188, 0.010009765625, 0.00013566017150878906, 0.005191802978515625, 0.0077972412109375, 0.1668701171875, 0.6171875, 0.049041748046875, 0.12371826171875, 0.01222991943359375, 0.00128173828125, 0.01187896728515625, 0.0005650520324707031], "tokens": [446, 1022, 275, 319, 2744, 312, 3995, 786, 645, 322, 7433, 32, 275, 319, 275, 319, 477, 753, 23735, 9500, 1451, 9750, 32, 275, 319, 477, 601, 312, 3995, 786, 32, 275, 569, 284, 562, 394, 3964, 26, 11938, 6096, 2570, 23735, 27, 301, 291, 1158, 2064, 3995, 882, 280, 23735, 32]}
{"line_number": 189, "line_type": "original", "code": "        for (int i = 0; i < sampleSize; i++) {", "entropy": 0.4775390625, "is_bug_line": false, "sus_score": 0.7981176376342773, "per_token_entropy": [4.84765625, 2.4140625, 0.0192718505859375, 0.049285888671875, 0.0247802734375, 0.00798797607421875, 0.08538818359375, 0.055633544921875, 0.0157470703125, 0.0021152496337890625, 0.00884246826171875, 0.43896484375, 0.004276275634765625, 0.00756072998046875, 0.04010009765625, 0.006092071533203125, 0.0882568359375], "tokens": [351, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 3964, 1250, 45, 595, 1987, 301]}
{"line_number": 189, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.7981176376342773, "per_token_entropy": [], "tokens": []}
{"line_number": 190, "line_type": "original", "code": "            out[i] = sample();", "entropy": 1.443359375, "is_bug_line": false, "sus_score": 0.7955927848815918, "per_token_entropy": [6.8125, 3.013671875, 0.01007843017578125, 0.00917816162109375, 0.01224517822265625, 0.004436492919921875, 1.26171875, 0.421875], "tokens": [1468, 963, 77, 91, 79, 280, 3964, 473]}
{"line_number": 190, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.7955927848815918, "per_token_entropy": [], "tokens": []}
{"line_number": 158, "line_type": "original", "code": "        double sum = 0;", "entropy": 1.494140625, "is_bug_line": false, "sus_score": 0.747948944568634, "per_token_entropy": [5.40234375, 4.03515625, 0.49951171875, 0.05303955078125, 0.0926513671875, 0.00244140625, 0.376953125], "tokens": [351, 2064, 3632, 280, 225, 34, 45]}
{"line_number": 158, "line_type": "generated", "code": "\n\n    /**\n     * Estimate the value of the parameters from the data.\n     *\n     * @param data the input data\n     * @return the estimated parameters\n     * @throws NumberIsTooSmallException if the size of the data set is too small\n    ", "entropy": 0.42529296875, "is_bug_line": false, "sus_score": 0.747948944568634, "per_token_entropy": [1.2939453125, 0.33154296875, 0.05218505859375, 0.00016045570373535156, 2.392578125, 0.008819580078125, 0.036468505859375, 2.103515625, 0.038787841796875, 0.322265625, 1.1943359375, 0.60595703125, 0.1309814453125, 0.435546875, 0.04541015625, 0.1658935546875, 0.017730712890625, 0.149169921875, 0.0011196136474609375, 0.0830078125, 0.041290283203125, 1.4951171875, 0.58447265625, 0.728515625, 0.01018524169921875, 0.028045654296875, 0.2073974609375, 0.00494384765625, 1.2490234375, 2.197265625, 0.1773681640625, 0.50634765625, 0.18798828125, 0.322021484375, 0.0205841064453125, 0.020782470703125, 1.4814453125, 0.07958984375, 0.0009579658508300781, 0.01041412353515625, 1.1563301086425781e-05, 0.0139617919921875, 0.406982421875, 0.7080078125, 0.002979278564453125, 0.2890625, 0.71044921875, 0.345703125, 0.00809478759765625, 0.52978515625, 0.30126953125, 0.0306396484375], "tokens": [446, 1022, 275, 319, 14164, 5679, 322, 786, 432, 322, 3377, 645, 322, 706, 32, 275, 319, 275, 319, 477, 753, 706, 322, 1509, 706, 275, 319, 477, 601, 322, 28625, 3377, 275, 319, 477, 5117, 5104, 1622, 20563, 12470, 984, 415, 322, 1334, 432, 322, 706, 739, 438, 5133, 5532, 275]}
{"line_number": 69, "line_type": "original", "code": "        this(new Well19937c(), samples);", "entropy": 2.33984375, "is_bug_line": false, "sus_score": 0.6840338706970215, "per_token_entropy": [4.1640625, 7.38671875, 4.16015625, 6.78515625, 5.3125, 0.0096435546875, 0.0015535354614257812, 0.00029754638671875, 0.0002532005310058594, 0.00010144710540771484, 0.00141143798828125, 1.0087890625, 2.849609375, 1.0625], "tokens": [351, 458, 26, 890, 22319, 35, 43, 43, 37, 41, 85, 1026, 9801, 293]}
{"line_number": 69, "line_type": "generated", "code": "\n     * @param x the point at which the PMF is evaluated.\n     * @return the value of the probability mass function at {@code x}.\n     * @throws MathIllegalArgumentException if {@code x} is not a valid value.\n     * @see", "entropy": 0.147705078125, "is_bug_line": false, "sus_score": 0.6840338706970215, "per_token_entropy": [0.2890625, 0.044769287109375, 0.64990234375, 0.023712158203125, 0.128662109375, 0.372802734375, 1.20703125, 0.000919342041015625, 0.0006337165832519531, 0.0017061233520507812, 0.0880126953125, 3.933906555175781e-06, 0.044342041015625, 0.004596710205078125, 0.89013671875, 0.00905609130859375, 0.001163482666015625, 0.004924774169921875, 0.007415771484375, 0.06573486328125, 0.012481689453125, 0.0087127685546875, 0.0162200927734375, 0.2027587890625, 0.0008029937744140625, 0.05487060546875, 0.001705169677734375, 0.11663818359375, 1.3947486877441406e-05, 0.00047707557678222656, 0.10546875, 0.0081024169921875, 0.06817626953125, 0.0172119140625, 0.042022705078125, 0.1884765625, 0.293701171875, 0.03802490234375, 0.042510986328125, 0.0001461505889892578, 0.0016183853149414062, 0.0014362335205078125, 0.08526611328125, 0.11553955078125, 0.35888671875, 0.1162109375, 0.378662109375, 0.06622314453125, 0.00751495361328125, 1.095703125, 0.128173828125, 0.2744140625], "tokens": [275, 319, 477, 753, 816, 322, 2260, 821, 1510, 322, 9396, 56, 438, 22423, 32, 275, 319, 477, 601, 322, 786, 432, 322, 16356, 12697, 667, 821, 3088, 687, 816, 4009, 275, 319, 477, 5117, 4175, 25907, 415, 3088, 687, 816, 111, 438, 646, 312, 2080, 786, 32, 275, 319, 477, 2970]}
{"line_number": 182, "line_type": "original", "code": "        if (sampleSize <= 0) {", "entropy": 1.048828125, "is_bug_line": false, "sus_score": 0.6840338706970215, "per_token_entropy": [4.4296875, 2.97265625, 0.1351318359375, 0.58251953125, 0.0211181640625, 2.134765625, 0.034210205078125, 0.038421630859375, 0.01177978515625, 0.1268310546875], "tokens": [351, 415, 308, 3287, 1250, 2511, 225, 34, 27, 301]}
{"line_number": 182, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6840338706970215, "per_token_entropy": [], "tokens": []}
{"line_number": 160, "line_type": "original", "code": "        for (int i = 0; i < probabilities.length; i++) {", "entropy": 0.48876953125, "is_bug_line": false, "sus_score": 0.6248497366905212, "per_token_entropy": [4.7265625, 2.984375, 0.0157318115234375, 0.07562255859375, 0.0301971435546875, 0.00543212890625, 0.03497314453125, 0.0248565673828125, 0.01201629638671875, 0.0016384124755859375, 0.01091766357421875, 0.78271484375, 0.0097503662109375, 0.0007758140563964844, 0.031585693359375, 0.00818634033203125, 0.004878997802734375, 0.0362548828125], "tokens": [351, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 35992, 32, 1322, 45, 595, 1987, 301]}
{"line_number": 160, "line_type": "generated", "code": "\n\n    /**\n     * Return a string representation of the receiver.\n     *\n     * @return a string representation of the receiver\n     */\n    @Override\n    public String toString() {\n        final StringBuilder sb = new StringBuilder();\n        sb.append(this.getClass().", "entropy": 0.2318115234375, "is_bug_line": false, "sus_score": 0.6248497366905212, "per_token_entropy": [1.3515625, 0.26953125, 0.072021484375, 0.00022935867309570312, 1.580078125, 1.1796875, 1.087890625, 0.02642822265625, 0.00441741943359375, 0.011322021484375, 0.521484375, 0.290283203125, 0.022186279296875, 0.046661376953125, 0.126953125, 0.0005793571472167969, 0.085205078125, 0.0014896392822265625, 0.1817626953125, 0.0187530517578125, 0.04150390625, 0.00201416015625, 0.0012826919555664062, 0.01541900634765625, 1.0146484375, 0.00722503662109375, 0.00835418701171875, 0.50537109375, 0.00014662742614746094, 0.006317138671875, 0.00482177734375, 0.0023632049560546875, 0.0009112358093261719, 0.030731201171875, 0.0082244873046875, 0.1339111328125, 0.234130859375, 0.1463623046875, 0.66748046875, 0.003265380859375, 0.002197265625, 0.0002727508544921875, 0.06005859375, 0.186279296875, 0.378173828125, 0.0007214546203613281, 0.0008854866027832031, 0.42138671875, 1.23046875, 0.00605010986328125, 0.04656982421875, 0.009552001953125], "tokens": [446, 1022, 275, 319, 2744, 312, 802, 10293, 432, 322, 13564, 32, 275, 319, 275, 319, 477, 601, 312, 802, 10293, 432, 322, 13564, 275, 569, 284, 477, 1788, 284, 562, 892, 11345, 346, 301, 291, 1158, 9706, 6115, 280, 537, 9706, 473, 291, 6115, 32, 1689, 26, 578, 32, 9700, 922]}
{"line_number": 88, "line_type": "original", "code": "", "entropy": 3.583984375, "is_bug_line": false, "sus_score": 0.5970365405082703, "per_token_entropy": [3.583984375], "tokens": [203]}
{"line_number": 88, "line_type": "generated", "code": "\n     *\n     * @return the definition of probability mass function in the format of list\n     * of pairs.\n     */\n    public List<Pair<T, Double>> getSamples() {\n        final List<Pair<T, Double>> samples = new ArrayList", "entropy": 0.1204833984375, "is_bug_line": false, "sus_score": 0.5970365405082703, "per_token_entropy": [0.1597900390625, 0.1934814453125, 0.6552734375, 0.00461578369140625, 0.019989013671875, 0.0079345703125, 0.3779296875, 0.460693359375, 0.0139312744140625, 0.17626953125, 0.00061798095703125, 0.0010700225830078125, 0.42236328125, 0.00528717041015625, 0.00728607177734375, 0.0009984970092773438, 0.1500244140625, 0.0186614990234375, 0.0013523101806640625, 0.03570556640625, 0.0040435791015625, 0.1939697265625, 0.32568359375, 0.0374755859375, 0.03302001953125, 0.495849609375, 0.00821685791015625, 0.0005669593811035156, 0.0091705322265625, 0.00017380714416503906, 0.0007257461547851562, 0.0003802776336669922, 0.00727081298828125, 4.887580871582031e-05, 0.053741455078125, 1.720703125, 0.021942138671875, 0.01245880126953125, 0.1470947265625, 0.2139892578125, 0.1085205078125, 0.00046896934509277344, 0.00225067138671875, 0.00025773048400878906, 0.00025010108947753906, 0.00014781951904296875, 0.00440216064453125, 5.0187110900878906e-05, 0.095947265625, 0.007381439208984375, 0.0433349609375, 0.0014410018920898438], "tokens": [275, 319, 275, 319, 477, 601, 322, 5644, 432, 16356, 12697, 667, 328, 322, 2179, 432, 1149, 275, 319, 432, 11847, 32, 275, 569, 284, 562, 1682, 46, 5442, 46, 70, 30, 6934, 2005, 622, 13384, 346, 301, 291, 1158, 1682, 46, 5442, 46, 70, 30, 6934, 2005, 9801, 280, 537, 5059]}
{"line_number": 96, "line_type": "original", "code": "                throw new NotPositiveException(sample.getValue());", "entropy": 1.9462890625, "is_bug_line": false, "sus_score": 0.5960744023323059, "per_token_entropy": [6.78125, 5.828125, 0.0880126953125, 3.470703125, 0.41943359375, 5.0067901611328125e-05, 0.95458984375, 3.2265625, 0.4306640625, 0.09710693359375, 0.10296630859375], "tokens": [2071, 1422, 537, 3182, 17991, 984, 26, 3287, 32, 6682, 1035]}
{"line_number": 96, "line_type": "generated", "code": "\n        }\n\n        return samples;\n    }\n\n    /**\n     * Return the number of values of the random variable.\n     *\n     * @return the number of values of the random variable.\n     */\n    public int getDomainSize() {\n        return probabilities.length", "entropy": 0.23046875, "is_bug_line": false, "sus_score": 0.5960744023323059, "per_token_entropy": [0.2003173828125, 0.0050048828125, 0.0728759765625, 0.0025005340576171875, 0.038787841796875, 0.000896453857421875, 0.08074951171875, 0.00205230712890625, 0.316650390625, 0.08416748046875, 0.0261077880859375, 4.398822784423828e-05, 1.6953125, 0.390869140625, 1.990234375, 0.005283355712890625, 1.1689453125, 0.61572265625, 0.34130859375, 0.11566162109375, 0.01337432861328125, 0.52197265625, 0.0496826171875, 0.0002906322479248047, 0.03216552734375, 0.0001322031021118164, 0.0016202926635742188, 0.0003993511199951172, 0.465087890625, 0.1485595703125, 0.0034618377685546875, 0.05029296875, 0.5751953125, 0.016693115234375, 0.0173797607421875, 0.0030670166015625, 0.0682373046875, 0.0030460357666015625, 0.020294189453125, 0.01058197021484375, 0.058685302734375, 0.010009765625, 0.153564453125, 1.787109375, 0.034027099609375, 0.004856109619140625, 0.0014600753784179688, 0.02337646484375, 0.0015010833740234375, 0.7529296875, 0.0004165172576904297, 2.8252601623535156e-05], "tokens": [291, 320, 584, 442, 9801, 45, 284, 320, 446, 1022, 275, 319, 2744, 322, 1451, 432, 2078, 432, 322, 3995, 2677, 32, 275, 319, 275, 319, 477, 601, 322, 1451, 432, 2078, 432, 322, 3995, 2677, 32, 275, 569, 284, 562, 629, 622, 5041, 1250, 346, 301, 291, 442, 35992, 32, 1322]}
{"line_number": 103, "line_type": "original", "code": "", "entropy": 3.37109375, "is_bug_line": false, "sus_score": 0.5927603840827942, "per_token_entropy": [3.37109375], "tokens": [203]}
{"line_number": 103, "line_type": "generated", "code": "\n     * @return a random value.\n     */\n    public T sample() {", "entropy": 0.1370849609375, "is_bug_line": false, "sus_score": 0.5927603840827942, "per_token_entropy": [0.1700439453125, 0.05120849609375, 1.1064453125, 0.0139312744140625, 0.0904541015625, 0.00616455078125, 0.0059051513671875, 0.0285186767578125, 0.2237548828125, 0.1656494140625, 0.043670654296875, 0.128662109375, 0.026580810546875, 0.1126708984375, 0.0034961700439453125, 0.0166168212890625], "tokens": [275, 319, 477, 601, 312, 3995, 786, 32, 275, 569, 284, 562, 394, 3964, 346, 301]}
{"line_number": 97, "line_type": "original", "code": "            }", "entropy": 5.37890625, "is_bug_line": false, "sus_score": 0.5927603840827942, "per_token_entropy": [7.37890625, 3.376953125], "tokens": [1468, 320]}
{"line_number": 97, "line_type": "generated", "code": "\n        return samples;\n    }\n\n    /**\n     * Generate a random value from the distribution.\n     *\n     * @return a random value.\n     */\n    public T sample() {\n        final double r = random.nextDouble();\n        double probability = 0", "entropy": 0.1846923828125, "is_bug_line": false, "sus_score": 0.5927603840827942, "per_token_entropy": [0.3154296875, 0.021942138671875, 0.134765625, 0.0023822784423828125, 0.052520751953125, 0.00272369384765625, 0.2978515625, 0.09014892578125, 0.0292816162109375, 4.1484832763671875e-05, 1.9853515625, 0.046783447265625, 0.1285400390625, 0.06689453125, 0.8349609375, 0.8505859375, 0.129638671875, 0.060882568359375, 0.021484375, 0.0013551712036132812, 0.0308380126953125, 0.0005125999450683594, 0.004833221435546875, 0.004871368408203125, 0.12335205078125, 0.0137939453125, 0.0056304931640625, 0.0016689300537109375, 0.002437591552734375, 0.1650390625, 0.01355743408203125, 0.08221435546875, 0.01177978515625, 0.11810302734375, 0.0020294189453125, 0.004314422607421875, 0.26171875, 0.441162109375, 0.2318115234375, 1.6552734375, 0.0056915283203125, 0.0230865478515625, 0.0002409219741821289, 0.0007357597351074219, 0.0037097930908203125, 0.0026340484619140625, 0.29541015625, 0.10186767578125, 0.65673828125, 0.203369140625, 0.058013916015625, 0.0004892349243164062], "tokens": [291, 442, 9801, 45, 284, 320, 446, 1022, 275, 319, 10945, 312, 3995, 786, 645, 322, 7433, 32, 275, 319, 275, 319, 477, 601, 312, 3995, 786, 32, 275, 569, 284, 562, 394, 3964, 346, 301, 291, 1158, 2064, 540, 280, 3995, 32, 1978, 4075, 473, 291, 2064, 16356, 280, 225, 34]}
{"line_number": 157, "line_type": "original", "code": "        final double randomValue = random.nextDouble();", "entropy": 0.8251953125, "is_bug_line": false, "sus_score": 0.5828235745429993, "per_token_entropy": [4.3984375, 3.05859375, 0.57421875, 0.923828125, 0.002872467041015625, 0.045074462890625, 0.049163818359375, 0.0015058517456054688, 0.00653839111328125, 0.0026721954345703125, 0.014556884765625], "tokens": [351, 1158, 2064, 3995, 882, 280, 3995, 32, 1978, 4075, 473]}
{"line_number": 157, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5828235745429993, "per_token_entropy": [], "tokens": []}
{"line_number": 70, "line_type": "original", "code": "    }", "entropy": 4.109375, "is_bug_line": false, "sus_score": 0.5604944229125977, "per_token_entropy": [2.142578125, 6.078125], "tokens": [264, 320]}
{"line_number": 70, "line_type": "generated", "code": "\n     * @return the value of the probability mass function at {@code x}\n     * @throws MathIllegalArgumentException if {@code x} is not a valid value.\n     */\n    public double probability(T x) throws MathIllegalArgumentException {\n        final int index =", "entropy": 0.16162109375, "is_bug_line": false, "sus_score": 0.5604944229125977, "per_token_entropy": [0.53369140625, 0.278076171875, 0.0162200927734375, 0.018035888671875, 0.08673095703125, 0.01384735107421875, 0.005840301513671875, 0.01528167724609375, 0.1507568359375, 0.0008115768432617188, 0.06915283203125, 0.0010967254638671875, 0.1611328125, 1.239776611328125e-05, 0.0006809234619140625, 0.3876953125, 0.247802734375, 0.229248046875, 0.0305633544921875, 0.0576171875, 0.1837158203125, 0.263916015625, 0.047637939453125, 0.041534423828125, 0.00019347667694091797, 0.0021533966064453125, 0.0018854141235351562, 0.0655517578125, 0.203369140625, 0.463134765625, 0.09619140625, 0.294189453125, 0.281005859375, 0.0333251953125, 0.262939453125, 0.0164794921875, 0.021728515625, 0.0062713623046875, 0.00951385498046875, 0.00026297569274902344, 1.458984375, 0.0011281967163085938, 0.0033321380615234375, 0.39306640625, 0.0017652511596679688, 7.665157318115234e-05, 0.0234222412109375, 0.287353515625, 1.2353515625, 0.133056640625, 0.263427734375, 0.007091522216796875], "tokens": [275, 319, 477, 601, 322, 786, 432, 322, 16356, 12697, 667, 821, 3088, 687, 816, 111, 275, 319, 477, 5117, 4175, 25907, 415, 3088, 687, 816, 111, 438, 646, 312, 2080, 786, 32, 275, 569, 284, 562, 2064, 16356, 26, 70, 816, 27, 2571, 4175, 25907, 301, 291, 1158, 629, 1650, 280]}
{"line_number": 77, "line_type": "original", "code": "     * @param samples definition of probability mass function in the format of", "entropy": 1.3740234375, "is_bug_line": false, "sus_score": 0.5476455688476562, "per_token_entropy": [5.26953125, 4.80859375, 4.359375, 0.468994140625, 3.697265625, 0.37890625, 0.0040740966796875, 0.046142578125, 0.0128021240234375, 0.038360595703125, 0.0947265625, 0.014129638671875, 0.0286102294921875, 0.01000213623046875], "tokens": [262, 319, 477, 753, 9801, 5644, 432, 16356, 12697, 667, 328, 322, 2179, 432]}
{"line_number": 77, "line_type": "generated", "code": "\n                (x!= null && x.equals(singletons.get(i)))) {\n                probability = probabilities[i];\n                break;\n            }\n        }\n\n        return probability;\n    }\n\n    /**\n     * Generates a random value sampled from this distribution.\n    ", "entropy": 0.13623046875, "is_bug_line": false, "sus_score": 0.5476455688476562, "per_token_entropy": [1.4736328125, 0.5751953125, 0.0299072265625, 0.024505615234375, 0.0009598731994628906, 0.00856781005859375, 0.275146484375, 0.00984954833984375, 0.01058197021484375, 0.0015478134155273438, 0.0017986297607421875, 4.76837158203125e-06, 0.000713348388671875, 0.00021076202392578125, 0.0005278587341308594, 0.00023603439331054688, 0.059051513671875, 0.059906005859375, 0.333740234375, 0.00821685791015625, 0.37744140625, 0.002643585205078125, 0.00019121170043945312, 0.00012505054473876953, 0.0013904571533203125, 0.529296875, 0.00994110107421875, 0.0004208087921142578, 0.03558349609375, 0.0010690689086914062, 0.024627685546875, 0.0009765625, 0.138916015625, 0.009765625, 0.0017871856689453125, 0.0007905960083007812, 0.0208587646484375, 0.00017905235290527344, 0.10589599609375, 0.0095367431640625, 0.0084381103515625, 2.0623207092285156e-05, 1.392578125, 0.01434326171875, 0.06658935546875, 0.037384033203125, 0.85595703125, 0.00041556358337402344, 0.173095703125, 0.35791015625, 0.004352569580078125, 0.0250091552734375], "tokens": [400, 308, 106, 863, 744, 962, 816, 32, 3574, 26, 1738, 45422, 32, 371, 26, 91, 7748, 301, 400, 16356, 280, 35992, 77, 91, 970, 400, 1626, 45, 324, 320, 291, 320, 584, 442, 16356, 45, 284, 320, 446, 1022, 275, 319, 32443, 312, 3995, 786, 35313, 645, 458, 7433, 32, 275]}
{"line_number": 66, "line_type": "original", "code": "     */", "entropy": 7.0703125, "is_bug_line": false, "sus_score": 0.5476455688476562, "per_token_entropy": [5.421875, 8.71875], "tokens": [262, 569]}
{"line_number": 66, "line_type": "generated", "code": "\n     * this method represents the probability mass function (PMF) for the\n     * distribution.\n     *\n     * @param x Value at which the PMF is evaluated.\n     * @return the value of the probability mass function at {@code x}.\n    ", "entropy": 0.10284423828125, "is_bug_line": false, "sus_score": 0.5476455688476562, "per_token_entropy": [0.142333984375, 0.006923675537109375, 0.6259765625, 0.006763458251953125, 0.1390380859375, 0.0020542144775390625, 0.0914306640625, 0.001689910888671875, 0.0009489059448242188, 0.0240020751953125, 0.09136962890625, 6.4373016357421875e-06, 0.1412353515625, 0.0616455078125, 0.01373291015625, 0.035369873046875, 1.9669532775878906e-05, 0.0306243896484375, 0.0138702392578125, 0.192138671875, 0.0006418228149414062, 0.10736083984375, 0.00014007091522216797, 0.035980224609375, 0.00681304931640625, 0.0816650390625, 1.6328125, 0.17822265625, 7.95125961303711e-05, 0.007122039794921875, 0.703125, 3.337860107421875e-06, 0.025909423828125, 0.01515960693359375, 0.0027866363525390625, 0.02093505859375, 0.0002765655517578125, 0.0016984939575195312, 0.00444793701171875, 0.158203125, 0.07122802734375, 0.002513885498046875, 0.0278778076171875, 0.08953857421875, 0.00066375732421875, 0.0195465087890625, 0.0016632080078125, 0.268798828125, 8.940696716308594e-06, 0.00021374225616455078, 0.232177734375, 0.028106689453125], "tokens": [275, 319, 458, 1411, 10666, 322, 16356, 12697, 667, 308, 7453, 56, 27, 436, 322, 275, 319, 7433, 32, 275, 319, 275, 319, 477, 753, 816, 3846, 821, 1510, 322, 9396, 56, 438, 22423, 32, 275, 319, 477, 601, 322, 786, 432, 322, 16356, 12697, 667, 821, 3088, 687, 816, 4009, 275]}
{"line_number": 87, "line_type": "original", "code": "        random = rng;", "entropy": 5.97265625, "is_bug_line": false, "sus_score": 0.5246518850326538, "per_token_entropy": [6.02734375, 9.9609375, 11.5390625, 2.189453125, 0.1502685546875], "tokens": [351, 3995, 280, 23735, 45]}
{"line_number": 87, "line_type": "generated", "code": "\n     * of pairs.\n     *\n     * @return the list of pairs defining the probability mass function\n     */\n    public List<Pair<T, Double>> getProbabilityMassFunction() {\n        final List<Pair<T, Double>> samples = new ArrayList", "entropy": 0.202880859375, "is_bug_line": false, "sus_score": 0.5246518850326538, "per_token_entropy": [0.88427734375, 0.1337890625, 0.043121337890625, 0.0499267578125, 0.1121826171875, 0.365478515625, 0.00791168212890625, 0.14599609375, 0.0016584396362304688, 0.01143646240234375, 0.0038299560546875, 0.353271484375, 1.4853515625, 0.06829833984375, 0.473876953125, 1.6259765625, 0.178955078125, 0.369384765625, 0.01331329345703125, 0.01153564453125, 0.775390625, 0.05584716796875, 0.0188446044921875, 0.4033203125, 0.006900787353515625, 0.0006308555603027344, 0.0136260986328125, 0.00018548965454101562, 0.000873565673828125, 0.0003993511199951172, 0.006744384765625, 5.161762237548828e-05, 0.031707763671875, 1.3701171875, 0.358642578125, 0.0029449462890625, 0.0626220703125, 0.003803253173828125, 0.16943359375, 0.185791015625, 0.1060791015625, 0.00032520294189453125, 0.0017337799072265625, 0.0001785755157470703, 0.0002803802490234375, 4.935264587402344e-05, 0.003780364990234375, 0.00010013580322265625, 0.54345703125, 0.01294708251953125, 0.06817626953125, 0.0015230178833007812], "tokens": [275, 319, 432, 11847, 32, 275, 319, 275, 319, 477, 601, 322, 1149, 432, 11847, 20720, 322, 16356, 12697, 667, 275, 569, 284, 562, 1682, 46, 5442, 46, 70, 30, 6934, 2005, 622, 35567, 15679, 2447, 346, 301, 291, 1158, 1682, 46, 5442, 46, 70, 30, 6934, 2005, 9801, 280, 537, 5059]}
{"line_number": 113, "line_type": "original", "code": "    /**", "entropy": 7.29296875, "is_bug_line": false, "sus_score": 0.5246518850326538, "per_token_entropy": [6.8046875, 7.78125], "tokens": [264, 1022]}
{"line_number": 113, "line_type": "generated", "code": "\n                return singletons.get(i);", "entropy": 0.02191162109375, "is_bug_line": false, "sus_score": 0.5246518850326538, "per_token_entropy": [0.1025390625, 0.064208984375, 0.01763916015625, 1.1324882507324219e-05, 0.002529144287109375, 0.0003981590270996094, 0.0004849433898925781, 0.0004165172576904297, 0.00893402099609375], "tokens": [400, 442, 20206, 45422, 32, 371, 26, 91, 293]}
{"line_number": 92, "line_type": "original", "code": "        for (int i = 0; i < samples.size(); i++) {", "entropy": 0.474365234375, "is_bug_line": false, "sus_score": 0.5170813202857971, "per_token_entropy": [1.9033203125, 4.78125, 0.00696563720703125, 0.031829833984375, 0.0047454833984375, 0.004405975341796875, 0.003223419189453125, 0.0013589859008789062, 0.0293426513671875, 0.001453399658203125, 0.00887298583984375, 1.5087890625, 0.01080322265625, 0.09832763671875, 0.00246429443359375, 0.0465087890625, 0.00734710693359375, 0.08514404296875], "tokens": [351, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 9801, 32, 891, 473, 595, 1987, 301]}
{"line_number": 92, "line_type": "generated", "code": "\n        final List<Pair<T, Double>> samples = new ArrayList<Pair<T, Double>>(singletons.size());\n        for (int i = 0; i < singletons.size(); i++) {\n            samples.add(new Pair", "entropy": 0.055877685546875, "is_bug_line": false, "sus_score": 0.5170813202857971, "per_token_entropy": [0.26025390625, 0.6923828125, 0.13525390625, 0.0023174285888671875, 0.01296234130859375, 0.0012388229370117188, 0.01326751708984375, 0.004070281982421875, 0.00571441650390625, 0.0007042884826660156, 0.10186767578125, 0.00876617431640625, 0.038360595703125, 0.0015134811401367188, 0.0203704833984375, 0.001239776611328125, 0.00170135498046875, 0.0005650520324707031, 0.0002560615539550781, 0.0157012939453125, 0.427490234375, 0.269775390625, 1.5735626220703125e-05, 0.0017290115356445312, 0.00029349327087402344, 0.0032062530517578125, 0.441650390625, 0.05340576171875, 0.00286865234375, 0.012054443359375, 0.0013141632080078125, 0.001949310302734375, 0.0006089210510253906, 0.0001550912857055664, 0.01000213623046875, 0.000514984130859375, 0.00461578369140625, 0.0869140625, 1.1682510375976562e-05, 0.0002498626708984375, 0.00046515464782714844, 0.0008625984191894531, 0.037200927734375, 0.00592803955078125, 0.00417327880859375, 0.056976318359375, 0.077880859375, 0.00025010108947753906, 0.002956390380859375, 0.00020170211791992188, 0.0675048828125, 0.014312744140625], "tokens": [291, 1158, 1682, 46, 5442, 46, 70, 30, 6934, 2005, 9801, 280, 537, 5059, 46, 5442, 46, 70, 30, 6934, 15165, 1738, 45422, 32, 891, 1035, 291, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 20206, 45422, 32, 891, 473, 595, 1987, 301, 324, 9801, 32, 669, 26, 890, 16588]}
{"line_number": 1276, "line_type": "original", "code": "", "entropy": 0.259033203125, "is_bug_line": false, "sus_score": 0.5170813202857971, "per_token_entropy": [0.259033203125], "tokens": [203]}
{"line_number": 1276, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5170813202857971, "per_token_entropy": [], "tokens": []}
{"line_number": 46, "line_type": "original", "code": "    /**", "entropy": 3.12890625, "is_bug_line": false, "sus_score": 0.5170813202857971, "per_token_entropy": [3.150390625, 3.109375], "tokens": [264, 1022]}
{"line_number": 46, "line_type": "generated", "code": "\n        if (MathArrays.sum(probs) <= 0) {\n            throw new MathArithmeticException(LocalizedFormats.PROBS_ MUST_SUM_TO_1);\n        }", "entropy": 0.283935546875, "is_bug_line": false, "sus_score": 0.5170813202857971, "per_token_entropy": [0.65673828125, 1.4892578125, 0.2666015625, 0.253173828125, 0.01364898681640625, 5.7816505432128906e-05, 0.658203125, 0.0051422119140625, 0.0016326904296875, 0.033355712890625, 1.0419921875, 0.0167236328125, 0.0009303092956542969, 0.1318359375, 0.004974365234375, 0.0640869140625, 0.0811767578125, 0.043701171875, 0.028533935546875, 0.05621337890625, 3.218650817871094e-05, 0.2052001953125, 0.0065460205078125, 6.568431854248047e-05, 0.00042939186096191406, 2.732421875, 0.6689453125, 0.00020384788513183594, 1.6005859375, 0.0011682510375976562, 0.45947265625, 0.00292205810546875, 0.03643798828125, 0.004161834716796875, 0.059783935546875, 0.14794921875, 0.014892578125, 0.00011873245239257812], "tokens": [291, 415, 308, 5717, 9978, 32, 1036, 26, 27057, 27, 2511, 225, 34, 27, 301, 324, 1422, 537, 4175, 37375, 984, 26, 24225, 19298, 32, 2383, 11413, 81, 22487, 81, 14401, 81, 1407, 81, 35, 293, 291, 320]}
{"line_number": 65, "line_type": "original", "code": "     * is infinite.", "entropy": 7.9296875, "is_bug_line": false, "sus_score": 0.5170813202857971, "per_token_entropy": [7.99609375, 0.79052734375, 14.421875, 12.3984375, 4.0625], "tokens": [262, 319, 438, 20280, 32]}
{"line_number": 65, "line_type": "generated", "code": "\n     * this method returns {@code P(X = x)}.\n     *\n     * @param x the value.\n     * @return the probability of {@code x}.\n     * @throws MathIllegalArgumentException if {@code x} is not a valid value.\n    ", "entropy": 0.1646728515625, "is_bug_line": false, "sus_score": 0.5170813202857971, "per_token_entropy": [0.457763671875, 0.01467132568359375, 0.08856201171875, 0.0013227462768554688, 0.01517486572265625, 0.1671142578125, 0.0007696151733398438, 0.75634765625, 0.0039043426513671875, 0.03924560546875, 0.5341796875, 0.450439453125, 0.178955078125, 0.2396240234375, 0.00017499923706054688, 0.375732421875, 8.809566497802734e-05, 0.0202484130859375, 0.004383087158203125, 0.127197265625, 0.77880859375, 0.517578125, 0.56689453125, 0.002864837646484375, 6.794929504394531e-05, 0.0013523101806640625, 0.003948211669921875, 0.052337646484375, 0.01357269287109375, 0.716796875, 0.045166015625, 8.535385131835938e-05, 0.306884765625, 0.06646728515625, 0.006000518798828125, 0.047943115234375, 0.0019931793212890625, 0.0284423828125, 0.08050537109375, 0.12548828125, 0.049713134765625, 0.1533203125, 0.00020599365234375, 0.00771331787109375, 0.00484466552734375, 0.170654296875, 0.391845703125, 0.63623046875, 0.1796875, 0.100830078125, 0.023529052734375, 0.0064544677734375], "tokens": [275, 319, 458, 1411, 3217, 3088, 687, 447, 26, 74, 280, 816, 31842, 275, 319, 275, 319, 477, 753, 816, 322, 786, 32, 275, 319, 477, 601, 322, 16356, 432, 3088, 687, 816, 4009, 275, 319, 477, 5117, 4175, 25907, 415, 3088, 687, 816, 111, 438, 646, 312, 2080, 786, 32, 275]}
