{"line_number": 235, "line_type": "original", "code": "                targetY = -REDUCTION_FACTOR * yB;", "entropy": 1.5107421875, "is_bug_line": true, "sus_score": 0.6161029934883118, "per_token_entropy": [5.7578125, 5.390625, 0.023834228515625, 0.0244903564453125, 2.5859375, 1.6865234375, 4.470348358154297e-05, 4.267692565917969e-05, 0.00043201446533203125, 0.015380859375, 0.74853515625, 3.3984375, 0.0146942138671875], "tokens": [2071, 1760, 75, 280, 429, 7097, 35054, 81, 31100, 319, 533, 52, 45]}
{"line_number": 235, "line_type": "generated", "code": "\n            }\n\n            // update the bracketing interval and the aging counters\n            if (nextY * yA <= 0) {\n                // we have a sign change: the guessed root is outside of the\n                // current tightest bracketing interval\n               ", "entropy": 0.43505859375, "is_bug_line": true, "sus_score": 0.6161029934883118, "per_token_entropy": [0.2408447265625, 0.0017728805541992188, 1.4501953125, 0.267822265625, 0.892578125, 0.623046875, 0.2080078125, 0.02069091796875, 0.09686279296875, 0.51708984375, 0.54931640625, 0.5107421875, 0.0011835098266601562, 0.344482421875, 0.06732177734375, 0.337158203125, 0.058837890625, 0.1431884765625, 0.5625, 1.224609375, 0.00807952880859375, 0.08795166015625, 2.20703125, 0.00148773193359375, 1.9311904907226562e-05, 0.0712890625, 0.0010271072387695312, 0.09564208984375, 0.37646484375, 1.4091796875, 0.3193359375, 0.5654296875, 0.06390380859375, 0.00946044921875, 1.771484375, 0.5205078125, 0.0316162109375, 0.00015175342559814453, 0.056610107421875, 0.0826416015625, 1.27734375, 0.1767578125, 0.22412109375, 2.36328125, 0.0002142190933227539, 0.427734375, 1.2470703125, 0.09271240234375, 0.03033447265625, 0.172607421875, 0.0203094482421875, 0.79736328125], "tokens": [324, 320, 1064, 434, 1974, 322, 33828, 299, 7898, 461, 322, 1894, 299, 30923, 324, 415, 308, 1978, 75, 319, 533, 51, 2511, 225, 34, 27, 301, 400, 434, 996, 1159, 312, 2596, 1539, 44, 322, 37615, 1246, 3051, 438, 11127, 432, 322, 400, 434, 1550, 39595, 445, 33828, 299, 7898, 400]}
{"line_number": 316, "line_type": "original", "code": "            System.arraycopy(x, signChangeIndex, x, signChangeIndex + 1, nbPoints - signChangeIndex);", "entropy": 0.98681640625, "is_bug_line": false, "sus_score": 0.6018691658973694, "per_token_entropy": [5.3359375, 7.78125, 0.0012722015380859375, 0.460693359375, 0.0034580230712890625, 0.4365234375, 0.01332855224609375, 10.046875, 0.0029888153076171875, 0.01922607421875, 0.5537109375, 0.44384765625, 0.06787109375, 0.2196044921875, 2.5272369384765625e-05, 1.33514404296875e-05, 0.04473876953125, 0.00548553466796875, 0.0194091796875, 0.0006427764892578125, 1.01953125, 0.0022029876708984375, 0.026214599609375, 0.04296875, 7.867813110351562e-06, 5.125999450683594e-06, 0.091796875], "tokens": [1468, 1171, 32, 40863, 26, 106, 30, 2596, 1791, 1284, 30, 816, 30, 2596, 1791, 1284, 474, 225, 35, 30, 12939, 6834, 429, 2596, 1791, 1284, 293]}
{"line_number": 316, "line_type": "generated", "code": "\n            x[i] = (y[i + 1] - y[i]) / (x[i + 1] - x[i]);\n        }\n\n        // evaluate Q at the target value\n        double delta = y[start] -", "entropy": 0.274658203125, "is_bug_line": false, "sus_score": 0.6018691658973694, "per_token_entropy": [0.08624267578125, 1.412109375, 0.043701171875, 0.01116180419921875, 0.036285400390625, 0.186279296875, 1.060546875, 0.5185546875, 8.535385131835938e-05, 0.0032444000244140625, 0.07537841796875, 0.0003368854522705078, 0.0004634857177734375, 0.0007157325744628906, 0.09490966796875, 0.027435302734375, 0.00017559528350830078, 0.0005536079406738281, 0.0013895034790039062, 0.01140594482421875, 0.00304412841796875, 0.07080078125, 7.343292236328125e-05, 0.00014126300811767578, 0.0007390975952148438, 5.996227264404297e-05, 7.152557373046875e-06, 4.756450653076172e-05, 0.0004706382751464844, 0.0007939338684082031, 0.00017893314361572266, 0.0003058910369873047, 0.0125579833984375, 0.34130859375, 0.00048661231994628906, 0.5087890625, 0.07037353515625, 0.673828125, 0.4130859375, 0.55126953125, 1.0537109375, 0.12646484375, 1.2587890625, 0.306396484375, 0.382568359375, 2.1328125, 0.32763671875, 1.283203125, 0.0005869865417480469, 0.77099609375, 0.374267578125, 0.040618896484375], "tokens": [324, 816, 77, 91, 79, 280, 308, 107, 77, 91, 474, 225, 35, 79, 429, 533, 77, 91, 1130, 517, 308, 106, 77, 91, 474, 225, 35, 79, 429, 816, 77, 91, 1989, 291, 320, 584, 434, 13396, 1910, 821, 322, 1760, 786, 291, 2064, 7715, 280, 533, 77, 1366, 79, 429]}
{"line_number": 318, "line_type": "original", "code": "            System.arraycopy(y, signChangeIndex, y, signChangeIndex + 1, nbPoints - signChangeIndex);", "entropy": 1.1123046875, "is_bug_line": false, "sus_score": 0.5976545214653015, "per_token_entropy": [5.4921875, 9.390625, 0.0015201568603515625, 0.947265625, 0.0037250518798828125, 2.041015625, 0.0031986236572265625, 9.4375, 0.003223419189453125, 0.01390838623046875, 0.7431640625, 0.344970703125, 0.044403076171875, 0.1419677734375, 2.8252601623535156e-05, 4.458427429199219e-05, 0.1846923828125, 0.1075439453125, 0.01457977294921875, 0.0010509490966796875, 0.93115234375, 0.0030269622802734375, 0.06256103515625, 0.0286407470703125, 1.895427703857422e-05, 0.00016498565673828125, 0.09588623046875], "tokens": [1468, 1171, 32, 40863, 26, 107, 30, 2596, 1791, 1284, 30, 533, 30, 2596, 1791, 1284, 474, 225, 35, 30, 12939, 6834, 429, 2596, 1791, 1284, 293]}
{"line_number": 318, "line_type": "generated", "code": "\n                final double ratio = x[j] / x[i];\n                x[j] = x[j - 1] - ratio * (x[j - 1] - x[j - 2]);\n                y[j] =", "entropy": 0.166015625, "is_bug_line": false, "sus_score": 0.5976545214653015, "per_token_entropy": [0.054901123046875, 1.0966796875, 0.04486083984375, 1.68359375, 0.06732177734375, 0.71826171875, 0.00018596649169921875, 0.016815185546875, 0.022552490234375, 0.0283355712890625, 0.004238128662109375, 3.600120544433594e-05, 0.480224609375, 0.01364898681640625, 0.06658935546875, 0.1929931640625, 0.00033545494079589844, 0.0006837844848632812, 0.50830078125, 0.81787109375, 0.404541015625, 7.450580596923828e-05, 0.004180908203125, 0.1461181640625, 0.08648681640625, 1.0967254638671875e-05, 0.00205230712890625, 0.0208892822265625, 0.822265625, 0.0005164146423339844, 0.173095703125, 0.00437164306640625, 6.413459777832031e-05, 0.0008993148803710938, 0.32275390625, 0.0005502700805664062, 2.300739288330078e-05, 2.2649765014648438e-05, 0.0001932382583618164, 0.0011491775512695312, 0.00015854835510253906, 0.125244140625, 0.305908203125, 0.0277252197265625, 0.0008406639099121094, 0.003993988037109375, 0.330810546875, 0.0259552001953125, 2.4199485778808594e-05, 0.0004546642303466797, 0.004909515380859375, 0.001163482666015625], "tokens": [400, 1158, 2064, 12488, 280, 816, 77, 92, 79, 517, 816, 77, 91, 970, 400, 816, 77, 92, 79, 280, 816, 77, 92, 429, 225, 35, 79, 429, 12488, 319, 308, 106, 77, 92, 429, 225, 35, 79, 429, 816, 77, 92, 429, 225, 36, 1989, 400, 533, 77, 92, 79, 280]}
{"line_number": 54, "line_type": "original", "code": "    private static final int MAXIMAL_AGING = 2;", "entropy": 2.80078125, "is_bug_line": false, "sus_score": 0.5584293007850647, "per_token_entropy": [3.76953125, 9.796875, 0.82568359375, 0.01097869873046875, 2.029296875, 4.3984375, 0.2440185546875, 0.0006251335144042969, 12.1015625, 0.1844482421875, 0.1046142578125, 2.173828125, 0.7587890625], "tokens": [264, 945, 907, 1158, 629, 7482, 24037, 81, 44561, 280, 225, 36, 45]}
{"line_number": 54, "line_type": "generated", "code": "\n            throw new NumberIsTooSmallException(maximalOrder, 2, true);\n        }\n        this.maximalOrder = maximalOrder;\n        this.allowed = AllowedSolution.ANY_SIDE;\n    }\n\n    /**\n     * @return the", "entropy": 0.0762939453125, "is_bug_line": false, "sus_score": 0.5584293007850647, "per_token_entropy": [0.460205078125, 0.03857421875, 0.005035400390625, 0.0013227462768554688, 2.1338462829589844e-05, 9.059906005859375e-06, 1.8477439880371094e-05, 7.009506225585938e-05, 0.0009260177612304688, 0.0037841796875, 0.0003802776336669922, 0.00035572052001953125, 0.00024366378784179688, 0.0025463104248046875, 0.0035800933837890625, 0.0009236335754394531, 0.009979248046875, 0.00017559528350830078, 0.2015380859375, 0.0006837844848632812, 0.072509765625, 0.0016269683837890625, 7.748603820800781e-06, 0.0012235641479492188, 1.6689300537109375e-05, 1.0728836059570312e-06, 0.00017344951629638672, 0.00036406517028808594, 2.0265579223632812e-06, 0.0007185935974121094, 0.0030078887939453125, 0.0288238525390625, 0.0030155181884765625, 7.653236389160156e-05, 0.00019490718841552734, 0.0012197494506835938, 0.0005617141723632812, 1.6689300537109375e-06, 1.1563301086425781e-05, 0.0005402565002441406, 4.76837158203125e-06, 1.1920928955078125e-06, 0.0006589889526367188, 0.02777099609375, 0.0006976127624511719, 0.150390625, 0.06756591796875, 0.056549072265625, 1.4781951904296875e-05, 1.7578125, 0.448486328125, 0.6142578125], "tokens": [324, 1422, 537, 5104, 1622, 20563, 12470, 984, 26, 1449, 2977, 2871, 30, 225, 36, 30, 861, 293, 291, 320, 291, 458, 32, 1449, 2977, 2871, 280, 1769, 2977, 2871, 45, 291, 458, 32, 11327, 280, 38886, 13628, 32, 15205, 81, 25590, 45, 284, 320, 446, 1022, 275, 319, 477, 601, 322]}
{"line_number": 374, "line_type": "original", "code": "        for (int j = end - 1; j >= start; --j) {", "entropy": 0.83740234375, "is_bug_line": false, "sus_score": 0.5519856214523315, "per_token_entropy": [4.46875, 4.5546875, 0.0406494140625, 0.061309814453125, 2.00390625, 0.01110076904296875, 0.87060546875, 0.032928466796875, 0.0086517333984375, 0.0748291015625, 0.0252838134765625, 0.0111083984375, 2.2578125, 1.0732421875, 0.19287109375, 0.033355712890625, 0.00015664100646972656, 0.0033130645751953125, 0.1806640625], "tokens": [351, 436, 308, 410, 594, 280, 943, 429, 225, 35, 45, 594, 2377, 1477, 45, 769, 92, 27, 301]}
{"line_number": 374, "line_type": "generated", "code": "\n    /** {@inheritDoc} */\n    @Override\n    protected double doSolve() {\n\n        // prepare the bracketing interval\n        final double[] x = new double[4];\n        final double[] y = new double[4];\n        x[0] = get", "entropy": 0.37109375, "is_bug_line": false, "sus_score": 0.5519856214523315, "per_token_entropy": [0.92626953125, 0.36474609375, 1.2216796875, 0.0007276535034179688, 0.0011739730834960938, 0.007228851318359375, 0.0140838623046875, 0.85595703125, 0.020843505859375, 0.015533447265625, 0.1436767578125, 0.7333984375, 0.025146484375, 0.006999969482421875, 0.00054168701171875, 0.09210205078125, 0.66455078125, 0.38720703125, 2.513671875, 0.82568359375, 0.97119140625, 0.05816650390625, 0.058319091796875, 0.4677734375, 1.2509765625, 0.0850830078125, 2.82421875, 0.470703125, 0.284912109375, 0.123046875, 0.0019588470458984375, 0.0148468017578125, 1.2470703125, 0.0645751953125, 0.039031982421875, 0.23486328125, 0.006046295166015625, 0.01323699951171875, 0.006595611572265625, 0.0009889602661132812, 0.0009975433349609375, 0.0005469322204589844, 0.0005979537963867188, 0.0328369140625, 4.2438507080078125e-05, 0.478759765625, 1.279296875, 0.0007128715515136719, 0.0222625732421875, 0.00019991397857666016, 0.00464630126953125, 0.427978515625], "tokens": [284, 1022, 3088, 18446, 111, 569, 284, 477, 1788, 284, 2522, 2064, 745, 37530, 346, 301, 584, 434, 11656, 322, 33828, 299, 7898, 291, 1158, 2064, 1178, 816, 280, 537, 2064, 77, 38, 970, 291, 1158, 2064, 1178, 533, 280, 537, 2064, 77, 38, 970, 291, 816, 77, 34, 79, 280, 622]}
{"line_number": 246, "line_type": "original", "code": "            int start = 0;", "entropy": 2.462890625, "is_bug_line": false, "sus_score": 0.5500220060348511, "per_token_entropy": [5.16796875, 5.96484375, 4.6328125, 1.427734375, 0.0294342041015625, 0.0113372802734375, 0.007045745849609375], "tokens": [1468, 629, 1477, 280, 225, 34, 45]}
{"line_number": 246, "line_type": "generated", "code": "\n                System.arraycopy(y, start, y, 0, nbPoints);\n                start = 0;\n                end   = nbPoints;\n\n            }\n\n            // update the bracketing interval\n            if (nextY < 0) {\n                // we", "entropy": 0.232666015625, "is_bug_line": false, "sus_score": 0.5500220060348511, "per_token_entropy": [0.52783203125, 0.12030029296875, 2.562999725341797e-05, 2.0265579223632812e-06, 3.528594970703125e-05, 0.016326904296875, 0.0002281665802001953, 0.0006113052368164062, 6.318092346191406e-05, 0.00373077392578125, 5.3882598876953125e-05, 0.00026988983154296875, 0.00030231475830078125, 8.976459503173828e-05, 0.00104522705078125, 9.274482727050781e-05, 0.0002143383026123047, 0.9482421875, 1.41015625, 0.036285400390625, 0.0072174072265625, 0.001026153564453125, 0.00020682811737060547, 0.81884765625, 0.07452392578125, 0.055908203125, 0.00012254714965820312, 0.0131988525390625, 6.413459777832031e-05, 0.010772705078125, 0.72705078125, 0.00033020973205566406, 0.1845703125, 0.1668701171875, 1.31640625, 0.6298828125, 0.36572265625, 0.0528564453125, 0.14892578125, 0.94189453125, 0.40869140625, 0.0723876953125, 0.1690673828125, 0.376953125, 0.79052734375, 0.152587890625, 0.00036025047302246094, 0.10125732421875, 0.0006299018859863281, 0.1552734375, 0.671875, 0.623046875], "tokens": [400, 1171, 32, 40863, 26, 107, 30, 1477, 30, 533, 30, 225, 34, 30, 12939, 6834, 293, 400, 1477, 280, 225, 34, 45, 400, 943, 261, 280, 12939, 6834, 45, 1064, 320, 1064, 434, 1974, 322, 33828, 299, 7898, 324, 415, 308, 1978, 75, 333, 225, 34, 27, 301, 400, 434, 996]}
{"line_number": 38, "line_type": "original", "code": " * </p>", "entropy": 5.4765625, "is_bug_line": false, "sus_score": 0.5481821894645691, "per_token_entropy": [8.171875, 9.078125, 4.3046875, 0.35107421875], "tokens": [319, 576, 98, 48]}
{"line_number": 38, "line_type": "generated", "code": "\n        throws NumberIsTooSmallException {\n        super(relativeAccuracy, absoluteAccuracy);\n        if (maximalOrder < 2) {\n            throw new NumberIsTooSmallException(maximalOrder, 2, true);\n        }\n        this.max", "entropy": 0.026580810546875, "is_bug_line": false, "sus_score": 0.5481821894645691, "per_token_entropy": [0.68603515625, 0.209228515625, 0.001453399658203125, 5.245208740234375e-06, 1.1920928955078125e-07, 5.125999450683594e-06, 1.9669532775878906e-05, 0.01349639892578125, 0.11260986328125, 0.2266845703125, 0.0002460479736328125, 0.0012712478637695312, 3.5762786865234375e-06, 0.00013375282287597656, 0.00322723388671875, 2.86102294921875e-06, 0.0020465850830078125, 0.03179931640625, 0.017578125, 0.0002734661102294922, 0.002216339111328125, 9.298324584960938e-06, 3.0517578125e-05, 0.0010061264038085938, 0.00011241436004638672, 0.0018529891967773438, 0.0004987716674804688, 0.00556182861328125, 0.01219940185546875, 0.001918792724609375, 0.002033233642578125, 0.00015592575073242188, 3.2186508178710938e-06, 9.298324584960938e-06, 0.00013315677642822266, 2.777576446533203e-05, 0.00014829635620117188, 0.0007076263427734375, 8.940696716308594e-06, 0.0012083053588867188, 7.200241088867188e-05, 0.00022077560424804688, 0.00093841552734375, 0.0003795623779296875, 0.0024700164794921875, 2.2649765014648438e-05, 0.01342010498046875, 1.52587890625e-05, 0.025115966796875, 0.0016241073608398438, 6.67572021484375e-06, 0.00131988525390625], "tokens": [291, 2571, 5104, 1622, 20563, 12470, 984, 301, 291, 2599, 26, 9535, 26201, 30, 7976, 26201, 293, 291, 415, 308, 1449, 2977, 2871, 333, 225, 36, 27, 301, 324, 1422, 537, 5104, 1622, 20563, 12470, 984, 26, 1449, 2977, 2871, 30, 225, 36, 30, 861, 293, 291, 320, 291, 458, 32, 1449]}
{"line_number": 47, "line_type": "original", "code": "    /** Default absolute accuracy. */", "entropy": 2.404296875, "is_bug_line": false, "sus_score": 0.5479049682617188, "per_token_entropy": [5.20703125, 5.89453125, 4.48828125, 1.046875, 0.0011453628540039062, 0.172607421875, 0.009918212890625], "tokens": [264, 1022, 4101, 7976, 14222, 32, 569]}
{"line_number": 47, "line_type": "generated", "code": "\n        throws NumberIsTooSmallException {\n        super(relativeAccuracy, absoluteAccuracy);\n        if (maximalOrder < 2) {\n            throw new NumberIsTooSmallException(maximalOrder, 2, true);\n        }\n        this.max", "entropy": 0.01526641845703125, "is_bug_line": false, "sus_score": 0.5479049682617188, "per_token_entropy": [0.1622314453125, 0.090087890625, 0.00079345703125, 4.291534423828125e-06, -0.0, 3.933906555175781e-06, 1.5497207641601562e-05, 0.01076507568359375, 0.147705078125, 0.189453125, 0.00036072731018066406, 0.0017452239990234375, 6.67572021484375e-06, 0.0002275705337524414, 0.004253387451171875, 7.987022399902344e-06, 0.001903533935546875, 0.079345703125, 0.0253753662109375, 0.00031876564025878906, 0.002330780029296875, 1.0848045349121094e-05, 1.7762184143066406e-05, 0.0010356903076171875, 0.0001043081283569336, 0.0016088485717773438, 0.0003886222839355469, 0.0035343170166015625, 0.01128387451171875, 0.0016317367553710938, 0.00183868408203125, 0.0001341104507446289, 2.5033950805664062e-06, 8.821487426757812e-06, 5.900859832763672e-05, 2.09808349609375e-05, 0.0001424551010131836, 0.0006690025329589844, 9.894371032714844e-06, 0.0010824203491210938, 6.723403930664062e-05, 0.00021398067474365234, 0.0008559226989746094, 0.00032901763916015625, 0.0022907257080078125, 1.823902130126953e-05, 0.0142669677734375, 5.2928924560546875e-05, 0.03302001953125, 0.0014095306396484375, 7.152557373046875e-06, 0.0010166168212890625], "tokens": [291, 2571, 5104, 1622, 20563, 12470, 984, 301, 291, 2599, 26, 9535, 26201, 30, 7976, 26201, 293, 291, 415, 308, 1449, 2977, 2871, 333, 225, 36, 27, 301, 324, 1422, 537, 5104, 1622, 20563, 12470, 984, 26, 1449, 2977, 2871, 30, 225, 36, 30, 861, 293, 291, 320, 291, 458, 32, 1449]}
{"line_number": 273, "line_type": "original", "code": "            } while (Double.isNaN(nextX) && (end - start > 1));", "entropy": 1.1845703125, "is_bug_line": false, "sus_score": 0.547877311706543, "per_token_entropy": [6.8671875, 3.59765625, 0.06597900390625, 0.4931640625, 3.544921875, 0.004322052001953125, 1.6162109375, 0.0032749176025390625, 0.2022705078125, 0.036834716796875, 1.064453125, 1.541015625, 0.53662109375, 2.876953125, 0.09857177734375, 0.020294189453125, 0.56640625, 0.0509033203125, 0.460205078125, 0.046783447265625], "tokens": [1468, 320, 2218, 308, 4075, 32, 26821, 26, 1978, 74, 27, 962, 308, 416, 429, 1477, 848, 225, 35, 876]}
{"line_number": 273, "line_type": "generated", "code": "\n\n            // update aging counters\n            agingA = agingA + 1;\n            agingB = agingB + 1;\n\n        } while (nbPoints < x.length);\n\n        // we have reached the maximum number of iterations,", "entropy": 0.35546875, "is_bug_line": false, "sus_score": 0.547877311706543, "per_token_entropy": [0.6123046875, 0.269775390625, 1.529296875, 1.2607421875, 0.003662109375, 0.9990234375, 0.33349609375, 0.418212890625, 0.0002727508544921875, 0.057098388671875, 0.32421875, 0.424560546875, 0.0018167495727539062, 1.0205078125, 0.61279296875, 0.3564453125, 0.0338134765625, 0.0877685546875, 0.01253509521484375, 0.038360595703125, 1.0013580322265625e-05, 0.002872467041015625, 0.003559112548828125, 0.022491455078125, 5.984306335449219e-05, 0.019927978515625, 0.0135345458984375, 0.0038242340087890625, 0.00274658203125, 0.00212860107421875, 0.86181640625, 0.007671356201171875, 0.41455078125, 0.33056640625, 1.1318359375, 0.0751953125, 0.1016845703125, 0.5849609375, 0.01226043701171875, 0.00037384033203125, 0.1407470703125, 0.154541015625, 0.231689453125, 0.98388671875, 0.72021484375, 2.5, 0.04693603515625, 0.149169921875, 0.0701904296875, 0.000850677490234375, 0.99951171875, 0.50341796875], "tokens": [1064, 434, 1974, 1894, 299, 30923, 324, 1894, 299, 51, 280, 1894, 299, 51, 474, 225, 35, 45, 324, 1894, 299, 52, 280, 1894, 299, 52, 474, 225, 35, 45, 584, 320, 2218, 308, 1490, 6834, 333, 816, 32, 1322, 293, 584, 434, 996, 1159, 16673, 322, 7091, 1451, 432, 17576, 30]}
{"line_number": 46, "line_type": "original", "code": "", "entropy": 4.48046875, "is_bug_line": false, "sus_score": 0.5472649335861206, "per_token_entropy": [4.48046875], "tokens": [203]}
{"line_number": 46, "line_type": "generated", "code": "\n        throws NumberIsTooSmallException {\n        super(relativeAccuracy, absoluteAccuracy);\n        if (maximalOrder < 2) {\n            throw new NumberIsTooSmallException(maximalOrder, 2, true);\n        }\n        this.max", "entropy": 0.01617431640625, "is_bug_line": false, "sus_score": 0.5472649335861206, "per_token_entropy": [0.2001953125, 0.1256103515625, 0.0007815361022949219, 3.814697265625e-06, -0.0, 4.172325134277344e-06, 1.2636184692382812e-05, 0.01132965087890625, 0.13720703125, 0.199462890625, 0.0003197193145751953, 0.0016622543334960938, 4.5299530029296875e-06, 0.00019657611846923828, 0.0035686492919921875, 4.291534423828125e-06, 0.0019664764404296875, 0.05914306640625, 0.0242919921875, 0.00028824806213378906, 0.0021381378173828125, 8.344650268554688e-06, 1.7881393432617188e-05, 0.0010175704956054688, 8.893013000488281e-05, 0.0016851425170898438, 0.000377655029296875, 0.0035533905029296875, 0.01009368896484375, 0.0015707015991210938, 0.0018854141235351562, 0.00012564659118652344, 2.9802322387695312e-06, 9.417533874511719e-06, 5.626678466796875e-05, 2.372264862060547e-05, 0.0001322031021118164, 0.0006327629089355469, 6.556510925292969e-06, 0.00104522705078125, 6.282329559326172e-05, 0.0002167224884033203, 0.0008578300476074219, 0.0003528594970703125, 0.002124786376953125, 1.8358230590820312e-05, 0.0117340087890625, 5.614757537841797e-05, 0.03253173828125, 0.0015211105346679688, 7.748603820800781e-06, 0.0010690689086914062], "tokens": [291, 2571, 5104, 1622, 20563, 12470, 984, 301, 291, 2599, 26, 9535, 26201, 30, 7976, 26201, 293, 291, 415, 308, 1449, 2977, 2871, 333, 225, 36, 27, 301, 324, 1422, 537, 5104, 1622, 20563, 12470, 984, 26, 1449, 2977, 2871, 30, 225, 36, 30, 861, 293, 291, 320, 291, 458, 32, 1449]}
{"line_number": 65, "line_type": "original", "code": "    /**", "entropy": 5.0625, "is_bug_line": false, "sus_score": 0.5472204089164734, "per_token_entropy": [4.1796875, 5.94140625], "tokens": [264, 1022]}
{"line_number": 65, "line_type": "generated", "code": "\n     * @param functionValueAccuracy function value accuracy.", "entropy": 0.398193359375, "is_bug_line": false, "sus_score": 0.5472204089164734, "per_token_entropy": [0.4736328125, 0.0733642578125, 0.01114654541015625, 0.1436767578125, 1.3193359375, 0.080810546875, 0.001758575439453125, 1.6865234375, 0.0399169921875, 0.004154205322265625, 0.54345703125], "tokens": [275, 319, 477, 753, 667, 882, 26201, 667, 786, 14222, 32]}
{"line_number": 378, "line_type": "original", "code": "        return x0;", "entropy": 2.06640625, "is_bug_line": false, "sus_score": 0.5377010703086853, "per_token_entropy": [5.6484375, 1.591796875, 2.138671875, 0.93310546875, 0.02703857421875], "tokens": [351, 442, 816, 34, 45]}
{"line_number": 378, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5377010703086853, "per_token_entropy": [], "tokens": []}
{"line_number": 42, "line_type": "original", "code": " */", "entropy": 10.3203125, "is_bug_line": false, "sus_score": 0.529043436050415, "per_token_entropy": [10.3203125], "tokens": [569]}
{"line_number": 42, "line_type": "generated", "code": "\n        throws NumberIsTooSmallException {\n        super(relativeAccuracy, absoluteAccuracy);\n        if (maximalOrder < 2) {\n            throw new NumberIsTooSmallException(maximalOrder, 2, true);\n        }\n        this.max", "entropy": 0.029754638671875, "is_bug_line": false, "sus_score": 0.529043436050415, "per_token_entropy": [0.6259765625, 0.432861328125, 0.001399993896484375, 8.940696716308594e-06, -0.0, 8.702278137207031e-06, 5.0187110900878906e-05, 0.0151824951171875, 0.12432861328125, 0.1781005859375, 0.0003299713134765625, 0.0017900466918945312, 6.794929504394531e-06, 0.00017464160919189453, 0.0026187896728515625, 8.463859558105469e-06, 0.0019397735595703125, 0.043792724609375, 0.021392822265625, 0.0004494190216064453, 0.0017528533935546875, 2.205371856689453e-05, 4.0411949157714844e-05, 0.0010671615600585938, 0.00010406970977783203, 0.0015745162963867188, 0.0004470348358154297, 0.00830078125, 0.0167388916015625, 0.0018148422241210938, 0.00433349609375, 0.0002853870391845703, 3.814697265625e-06, 9.5367431640625e-06, 0.00016617774963378906, 2.9325485229492188e-05, 0.00019311904907226562, 0.0008087158203125, 8.821487426757812e-06, 0.0012760162353515625, 6.663799285888672e-05, 0.00021922588348388672, 0.0008544921875, 0.00040459632873535156, 0.0026988983154296875, 2.6226043701171875e-05, 0.01934814453125, 8.869171142578125e-05, 0.0305328369140625, 0.0020122528076171875, 1.0013580322265625e-05, 0.0012521743774414062], "tokens": [291, 2571, 5104, 1622, 20563, 12470, 984, 301, 291, 2599, 26, 9535, 26201, 30, 7976, 26201, 293, 291, 415, 308, 1449, 2977, 2871, 333, 225, 36, 27, 301, 324, 1422, 537, 5104, 1622, 20563, 12470, 984, 26, 1449, 2977, 2871, 30, 225, 36, 30, 861, 293, 291, 320, 291, 458, 32, 1449]}
{"line_number": 69, "line_type": "original", "code": "        this(DEFAULT_ABSOLUTE_ACCURACY, DEFAULT_MAXIMAL_ORDER);", "entropy": 1.140625, "is_bug_line": false, "sus_score": 0.5283389687538147, "per_token_entropy": [5.9921875, 1.244140625, 2.46484375, 9.171875, 0.0005497932434082031, 2.080078125, 0.0006361007690429688, 2.2292137145996094e-05, 0.00012767314910888672, 0.0038299560546875, 4.76837158203125e-07, 3.5762786865234375e-07, 0.0367431640625, 1.5615234375, 0.0003025531768798828, 0.172119140625, 0.0003142356872558594, 2.6106834411621094e-05, 0.0003864765167236328, 0.08551025390625], "tokens": [351, 458, 26, 5807, 81, 1319, 18634, 9315, 81, 1186, 7516, 32220, 30, 4040, 81, 3459, 24037, 81, 9349, 293]}
{"line_number": 69, "line_type": "generated", "code": "\n\n    /**\n     * {@inheritDoc}\n     */\n    public double solve(final int maxEval,\n                       final UnivariateFunction f,\n                       final double min,\n                       final double max)\n        throws NoBracketingException {\n\n        // Check limits\n        MathUtils.check", "entropy": 0.29638671875, "is_bug_line": false, "sus_score": 0.5283389687538147, "per_token_entropy": [0.576171875, 0.0595703125, 0.0887451171875, 7.236003875732422e-05, 1.1357421875, 0.00021088123321533203, 0.0009136199951171875, 0.006134033203125, 0.1197509765625, 0.09954833984375, 0.86376953125, 0.62890625, 0.03631591796875, 0.0027217864990234375, 0.12188720703125, 0.442626953125, 0.007183074951171875, 0.56787109375, 0.00038552284240722656, 0.6669921875, 0.01331329345703125, 0.0017232894897460938, 1.6689300537109375e-06, 0.00994873046875, 0.045745849609375, 0.2171630859375, 0.1500244140625, 0.01277923583984375, 0.01873779296875, 0.0241851806640625, 0.0036258697509765625, 0.2154541015625, 0.0007762908935546875, 5.2809715270996094e-05, 0.0002846717834472656, 0.1773681640625, 0.5087890625, 0.00041604042053222656, 0.6728515625, 0.0004954338073730469, 6.091594696044922e-05, 1.0728836059570312e-06, 1.421875, 0.857421875, 0.473876953125, 2.173828125, 0.98095703125, 0.8486328125, 0.75146484375, 0.053314208984375, 2.5391578674316406e-05, 0.35498046875], "tokens": [446, 1022, 275, 319, 3088, 18446, 111, 275, 569, 284, 562, 2064, 10932, 26, 3220, 629, 1769, 14066, 30, 5556, 1158, 1683, 27623, 2447, 296, 30, 5556, 1158, 2064, 1847, 30, 5556, 1158, 2064, 1769, 27, 291, 2571, 3139, 24086, 299, 984, 301, 584, 434, 3456, 17740, 291, 4175, 2755, 32, 1553]}
{"line_number": 149, "line_type": "original", "code": "        x[1] = getStartValue();", "entropy": 1.708984375, "is_bug_line": false, "sus_score": 0.5266252160072327, "per_token_entropy": [2.025390625, 2.4609375, 3.58203125, 2.5859375, 0.035400390625, 0.07989501953125, 2.859375, 3.14453125, 0.250244140625, 0.0670166015625], "tokens": [351, 816, 77, 35, 79, 280, 622, 2130, 882, 473]}
{"line_number": 149, "line_type": "generated", "code": "\n        double xB    = x[signChangeIndex];\n        double yA    = y[signChangeIndex - 1];\n        double yB    = y[signChangeIndex];\n\n        // check if an exception should be thrown\n        verifyBracketing", "entropy": 0.28759765625, "is_bug_line": false, "sus_score": 0.5266252160072327, "per_token_entropy": [0.260498046875, 0.041839599609375, 0.08953857421875, 0.005584716796875, 0.0169219970703125, 8.106231689453125e-06, 0.004856109619140625, 0.003353118896484375, 0.007419586181640625, 1.4185905456542969e-05, 2.110004425048828e-05, 0.475830078125, 0.1380615234375, 0.051177978515625, 0.88232421875, 0.012298583984375, 0.00685882568359375, 7.62939453125e-06, 0.00539398193359375, 0.00032019615173339844, 0.0002589225769042969, 7.033348083496094e-05, 2.384185791015625e-06, 0.0005865097045898438, 0.00044226646423339844, 9.930133819580078e-05, 0.0017251968383789062, 0.07421875, 0.00966644287109375, 0.042633056640625, 0.033843994140625, 0.0018091201782226562, 0.00026035308837890625, 0.0014028549194335938, 0.00012803077697753906, 0.00016546249389648438, 7.510185241699219e-06, 1.0013580322265625e-05, 0.0024566650390625, 0.90869140625, 0.552734375, 2.71875, 1.2216796875, 1.3974609375, 3.005859375, 0.5966796875, 0.0008988380432128906, 0.0110626220703125, 0.166259765625, 1.298828125, 0.89453125, 0.00958251953125], "tokens": [291, 2064, 816, 52, 264, 280, 816, 77, 1333, 1791, 1284, 970, 291, 2064, 533, 51, 264, 280, 533, 77, 1333, 1791, 1284, 429, 225, 35, 970, 291, 2064, 533, 52, 264, 280, 533, 77, 1333, 1791, 1284, 970, 584, 434, 1505, 415, 600, 3756, 1395, 526, 12163, 291, 6144, 24086, 299]}
{"line_number": 125, "line_type": "original", "code": "        if (maximalOrder < 2) {", "entropy": 1.119140625, "is_bug_line": false, "sus_score": 0.5210136771202087, "per_token_entropy": [2.525390625, 1.9443359375, 0.1500244140625, 4.02734375, 0.04571533203125, 0.0064697265625, 2.2109375, 0.041717529296875, 1.0791015625, 0.028472900390625, 0.251708984375], "tokens": [351, 415, 308, 1449, 2977, 2871, 333, 225, 36, 27, 301]}
{"line_number": 125, "line_type": "generated", "code": "\n        } else {\n\n            // find the root by brent's method\n            nbPoints        = 3;\n            signChangeIndex = 2;\n\n            // evaluate third point\n            y[2] = computeObjectiveValue(x[2]);\n            if (", "entropy": 0.3583984375, "is_bug_line": false, "sus_score": 0.5210136771202087, "per_token_entropy": [1.201171875, 0.09796142578125, 0.06842041015625, 0.151611328125, 0.46484375, 0.0260772705078125, 2.892578125, 1.771484375, 1.0546875, 0.986328125, 0.459228515625, 0.84716796875, 0.441650390625, 0.0498046875, 0.26513671875, 0.426025390625, 4.6253204345703125e-05, 0.341796875, 4.7206878662109375e-05, 0.10601806640625, 0.5302734375, 0.00012242794036865234, 0.01190185546875, 0.00872039794921875, 1.1682510375976562e-05, 1.0728836059570312e-05, 8.916854858398438e-05, 0.330322265625, 1.185546875, 0.0007715225219726562, 1.3525390625, 0.5029296875, 1.064453125, 0.359130859375, 0.5595703125, 0.1466064453125, 0.2724609375, 7.724761962890625e-05, 0.0049896240234375, 4.5418739318847656e-05, 0.0094146728515625, 0.0166778564453125, 9.655952453613281e-06, 1.430511474609375e-06, 0.0001004934310913086, 0.002239227294921875, 7.748603820800781e-06, 0.0016565322875976562, 3.063678741455078e-05, 0.4013671875, 0.2225341796875, 0.003749847412109375], "tokens": [291, 320, 813, 301, 1064, 434, 2290, 322, 3051, 810, 323, 16502, 1182, 1411, 324, 12939, 6834, 351, 280, 225, 37, 45, 324, 2596, 1791, 1284, 280, 225, 36, 45, 1064, 434, 13396, 10970, 2260, 324, 533, 77, 36, 79, 280, 7596, 33312, 882, 26, 106, 77, 36, 1989, 324, 415, 308]}
{"line_number": 394, "line_type": "original", "code": "        return super.solve(maxEval, f, min, max, startValue);", "entropy": 0.31103515625, "is_bug_line": false, "sus_score": 0.520897388458252, "per_token_entropy": [4.38671875, 0.64990234375, 0.27001953125, 0.0013189315795898438, 0.012725830078125, 0.001873016357421875, 0.01398468017578125, 0.0018167495727539062, 0.0011072158813476562, 0.0179901123046875, 0.0008578300476074219, 0.0074615478515625, 0.000461578369140625, 0.003955841064453125, 0.10430908203125, 0.0775146484375, 0.0011682510375976562, 0.044342041015625], "tokens": [351, 442, 2599, 32, 19596, 26, 1449, 14066, 30, 296, 30, 1847, 30, 1769, 30, 1477, 882, 293]}
{"line_number": 394, "line_type": "generated", "code": "\n    /**\n     * {@inheritDoc}\n     *\n     * <p>\n     * The default implementation behaves as follows:\n     * </p>\n     * <ul>\n     *   <li>If {@code min > max} the function is considered to be", "entropy": 0.515625, "is_bug_line": false, "sus_score": 0.520897388458252, "per_token_entropy": [1.0380859375, 0.3828125, 1.173828125, 4.971027374267578e-05, 2.55078125, 0.00601959228515625, 0.004459381103515625, 0.01346588134765625, 0.11993408203125, 1.20703125, 0.0151519775390625, 1.376953125, 0.005229949951171875, 0.0032939910888671875, 0.36474609375, 4.029273986816406e-05, 1.62890625, 1.505859375, 0.1417236328125, 3.201171875, 0.1712646484375, 0.233642578125, 0.27783203125, 0.322509765625, 0.00045371055603027344, 0.9716796875, 0.0003991127014160156, 0.0024585723876953125, 0.005340576171875, 0.0003612041473388672, 0.1514892578125, 0.0869140625, 0.006511688232421875, 0.0007925033569335938, 0.00017714500427246094, 0.428466796875, 0.0005927085876464844, 0.002536773681640625, 0.0030956268310546875, 1.3173828125, 0.38330078125, 0.353515625, 0.6787109375, 1.4931640625, 0.054840087890625, 0.98828125, 0.64794921875, 0.396728515625, 1.5615234375, 1.041015625, 0.393310546875, 0.0966796875], "tokens": [284, 1022, 275, 319, 3088, 18446, 111, 275, 319, 275, 319, 333, 98, 48, 275, 319, 886, 1244, 4736, 44779, 619, 11588, 44, 275, 319, 576, 98, 48, 275, 319, 333, 338, 48, 275, 319, 261, 333, 374, 48, 2797, 3088, 687, 1847, 848, 1769, 111, 322, 667, 438, 11870, 372, 526]}
{"line_number": 37, "line_type": "original", "code": " * </ul>", "entropy": 5.21875, "is_bug_line": false, "sus_score": 0.5195382237434387, "per_token_entropy": [8.0703125, 8.0859375, 4.515625, 0.1973876953125], "tokens": [319, 576, 338, 48]}
{"line_number": 37, "line_type": "generated", "code": "        throws NumberIsTooSmallException {\n        super(relativeAccuracy, absoluteAccuracy);\n        if (maximalOrder < 2) {\n            throw new NumberIsTooSmallException(maximalOrder, 2, true);\n        }\n        this.max", "entropy": 0.035003662109375, "is_bug_line": false, "sus_score": 0.5195382237434387, "per_token_entropy": [1.0849609375, 0.07781982421875, 0.002704620361328125, 1.33514404296875e-05, 2.0265579223632812e-06, 6.330013275146484e-05, 9.34600830078125e-05, 0.0215301513671875, 0.2626953125, 0.2210693359375, 0.0002529621124267578, 0.0008950233459472656, 7.152557373046875e-06, 0.00015747547149658203, 0.00374603271484375, 5.364418029785156e-06, 0.0020427703857421875, 0.048309326171875, 0.0188751220703125, 0.0002512931823730469, 0.0018978118896484375, 1.1920928955078125e-05, 3.552436828613281e-05, 0.0012845993041992188, 0.0001131296157836914, 0.002002716064453125, 0.0005006790161132812, 0.004116058349609375, 0.01203155517578125, 0.0019273757934570312, 0.0012187957763671875, 0.0001493692398071289, 4.410743713378906e-06, 5.0067901611328125e-06, 0.00011134147644042969, 3.1113624572753906e-05, 0.0001366138458251953, 0.0007176399230957031, 1.2278556823730469e-05, 0.0010709762573242188, 7.092952728271484e-05, 0.00020194053649902344, 0.0009121894836425781, 0.00036215782165527344, 0.0027217864990234375, 2.3365020751953125e-05, 0.013214111328125, 1.990795135498047e-05, 0.027130126953125, 0.0016107559204101562, 6.67572021484375e-06, 0.0013074874877929688], "tokens": [351, 2571, 5104, 1622, 20563, 12470, 984, 301, 291, 2599, 26, 9535, 26201, 30, 7976, 26201, 293, 291, 415, 308, 1449, 2977, 2871, 333, 225, 36, 27, 301, 324, 1422, 537, 5104, 1622, 20563, 12470, 984, 26, 1449, 2977, 2871, 30, 225, 36, 30, 861, 293, 291, 320, 291, 458, 32, 1449]}
{"line_number": 124, "line_type": "original", "code": "        super(relativeAccuracy, absoluteAccuracy, functionValueAccuracy);", "entropy": 1.6923828125, "is_bug_line": false, "sus_score": 0.5142813324928284, "per_token_entropy": [2.615234375, 8.5, 7.94140625, 1.18359375, 0.00354766845703125, 0.0731201171875, 0.173583984375, 0.0001703500747680664, 0.186279296875, 0.68798828125, 0.000789642333984375, 0.0013608932495117188, 0.630859375], "tokens": [351, 2599, 26, 9535, 26201, 30, 7976, 26201, 30, 667, 882, 26201, 293]}
{"line_number": 124, "line_type": "generated", "code": "\n\n        } else {\n\n            // expand the interval if it does not bracket the root\n            nbPoints        = 3;\n            signChangeIndex = 0;", "entropy": 0.21630859375, "is_bug_line": false, "sus_score": 0.5142813324928284, "per_token_entropy": [1.6708984375, 0.002933502197265625, 0.01000213623046875, 0.170166015625, 0.296630859375, 0.04217529296875, 2.275390625, 0.246826171875, 0.03662109375, 0.7421875, 0.0804443359375, 0.00989532470703125, 0.002033233642578125, 0.2015380859375, 0.03936767578125, 0.0017328262329101562, 0.052825927734375, 0.09869384765625, 2.0623207092285156e-05, 0.09161376953125, 2.5987625122070312e-05, 0.09014892578125, 0.33056640625, 0.0002741813659667969, 0.007114410400390625, 0.0110015869140625, 2.1457672119140625e-06, 4.410743713378906e-06, 8.678436279296875e-05, 0.231201171875, 0.18115234375, 0.00021719932556152344], "tokens": [584, 320, 813, 301, 1064, 434, 11764, 322, 7898, 415, 561, 1957, 646, 33828, 322, 3051, 324, 12939, 6834, 351, 280, 225, 37, 45, 324, 2596, 1791, 1284, 280, 225, 34, 45]}
{"line_number": 265, "line_type": "original", "code": "                        --end;", "entropy": 4.578125, "is_bug_line": false, "sus_score": 0.5107519626617432, "per_token_entropy": [11.296875, 4.265625, 2.71875, 0.0281219482421875], "tokens": [6797, 769, 416, 45]}
{"line_number": 265, "line_type": "generated", "code": "\n\n            // update the bracketing interval and the aging counters\n            if (nextY < 0) {\n                // the guessed root is on the \"positive\" side of the root,\n                // we keep the current high bracket\n                xA = next", "entropy": 0.63037109375, "is_bug_line": false, "sus_score": 0.5107519626617432, "per_token_entropy": [0.568359375, 0.1513671875, 1.0478515625, 0.430419921875, 0.8505859375, 0.01788330078125, 0.1641845703125, 1.5703125, 1.0146484375, 0.14013671875, 0.0022678375244140625, 1.0927734375, 0.201416015625, 0.9384765625, 0.054107666015625, 0.61962890625, 0.2193603515625, 0.6416015625, 0.08868408203125, 0.001697540283203125, 0.168701171875, 0.0023403167724609375, 0.08526611328125, 0.491943359375, 1.1875, 1.3583984375, 0.0008416175842285156, 0.240966796875, 0.149658203125, 1.29296875, 0.020660400390625, 1.455078125, 1.33203125, 0.161865234375, 0.0855712890625, 0.251708984375, 0.1217041015625, 1.671875, 1.22265625, 0.69482421875, 0.0160980224609375, 1.1259765625, 2.521484375, 0.439208984375, 1.548828125, 1.9755859375, 0.267578125, 1.181640625, 0.9345703125, 0.55029296875, 0.1434326171875, 0.27294921875], "tokens": [1064, 434, 1974, 322, 33828, 299, 7898, 461, 322, 1894, 299, 30923, 324, 415, 308, 1978, 75, 333, 225, 34, 27, 301, 400, 434, 322, 37615, 1246, 3051, 438, 544, 322, 313, 18502, 20, 5209, 432, 322, 3051, 30, 400, 434, 996, 4986, 322, 1550, 3857, 33828, 400, 816, 51, 280, 2354]}
{"line_number": 59, "line_type": "original", "code": "    /** Maximal order. */", "entropy": 2.39453125, "is_bug_line": false, "sus_score": 0.5069374442100525, "per_token_entropy": [5.0546875, 0.304931640625, 10.078125, 0.00450897216796875, 0.413330078125, 0.62451171875, 0.28759765625], "tokens": [264, 1022, 7462, 2977, 2532, 32, 569]}
{"line_number": 59, "line_type": "generated", "code": "\n\n    /**\n     * Get the maximal order.\n     *\n     * @return the maximal order.\n     */\n    public int getMaximalOrder() {\n        return maximalOrder;\n    }\n\n    /**\n     * Get the allowed solutions.\n     *\n     *", "entropy": 0.110595703125, "is_bug_line": false, "sus_score": 0.5069374442100525, "per_token_entropy": [0.418701171875, 0.076904296875, 0.06072998046875, 1.3709068298339844e-05, 1.3662109375, 0.0201873779296875, 0.397705078125, 0.0006008148193359375, 0.09912109375, 0.2054443359375, 0.02581787109375, 0.0012254714965820312, 0.2230224609375, 0.0006003379821777344, 0.0018682479858398438, 0.0002918243408203125, 0.431884765625, 0.01515960693359375, 0.0018968582153320312, 0.03076171875, 0.265869140625, 0.0021514892578125, 0.0369873046875, 0.00710296630859375, 0.00823211669921875, 0.01311492919921875, 0.0002655982971191406, 0.00010955333709716797, 5.328655242919922e-05, 0.003025054931640625, 0.002101898193359375, 0.00988006591796875, 0.0002180337905883789, 0.00832366943359375, 4.5418739318847656e-05, 2.6226043701171875e-06, 0.0005922317504882812, 0.00806427001953125, 0.000110626220703125, 0.49755859375, 0.03631591796875, 0.10113525390625, 1.4185905456542969e-05, 0.367431640625, 0.005901336669921875, 0.564453125, 0.36376953125, 0.01995849609375, 0.0252685546875, 0.0002200603485107422, 0.0229034423828125, 1.7642974853515625e-05], "tokens": [446, 1022, 275, 319, 1390, 322, 1769, 2977, 2532, 32, 275, 319, 275, 319, 477, 601, 322, 1769, 2977, 2532, 32, 275, 569, 284, 562, 629, 39486, 2977, 2871, 346, 301, 291, 442, 1769, 2977, 2871, 45, 284, 320, 446, 1022, 275, 319, 1390, 322, 6660, 16295, 32, 275, 319, 275, 319]}
