{"line_number": 311, "line_type": "original", "code": "      }", "entropy": 5.8359375, "is_bug_line": false, "sus_score": 0.49477335810661316, "per_token_entropy": [8.1640625, 3.505859375], "tokens": [647, 320]}
{"line_number": 311, "line_type": "generated", "code": "\n\n  private double estimateError(final double[][] yDotK,\n                              final double[]  y,\n                              final double[]  yTmp,\n                              final double    stepSize) {\n\n    double error = 0;\n    for (int j = 0;", "entropy": 0.2076416015625, "is_bug_line": false, "sus_score": 0.49477335810661316, "per_token_entropy": [1.12890625, 1.2822265625, 0.76318359375, 0.8359375, 0.01166534423828125, 0.004852294921875, 0.319091796875, 0.10455322265625, 0.0433349609375, 0.019378662109375, 0.00362396240234375, 0.0204620361328125, 0.0022735595703125, 0.390380859375, 0.008331298828125, 0.00159454345703125, 0.0029239654541015625, 1.3486328125, 0.017578125, 0.60693359375, 0.0027065277099609375, 0.00027370452880859375, 0.0001842975616455078, 0.00012409687042236328, 0.003322601318359375, 0.0194854736328125, 0.258056640625, 0.0010013580322265625, 0.0021114349365234375, 0.00557708740234375, 0.0005059242248535156, 0.073486328125, 0.41796875, 0.008941650390625, 0.0007476806640625, 0.013031005859375, 0.361083984375, 1.4375, 0.091796875, 0.13671875, 0.0699462890625, 0.056182861328125, 0.08380126953125, 0.27490234375, 0.193359375, 0.0006160736083984375, 0.017852783203125, 0.35009765625, 0.0002455711364746094, 0.00036716461181640625, 0.00021314620971679688, 0.0022220611572265625], "tokens": [719, 945, 2064, 20772, 924, 26, 3220, 2064, 11336, 533, 10025, 61, 30, 4985, 1158, 2064, 1178, 225, 533, 30, 4985, 1158, 2064, 1178, 225, 533, 15770, 30, 4985, 1158, 2064, 264, 3111, 1250, 27, 301, 446, 2064, 1048, 280, 225, 34, 45, 284, 436, 308, 410, 594, 280, 225, 34, 45]}
{"line_number": 499, "line_type": "original", "code": "", "entropy": 0.395751953125, "is_bug_line": false, "sus_score": 0.4654392600059509, "per_token_entropy": [0.395751953125], "tokens": [203]}
{"line_number": 499, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.4654392600059509, "per_token_entropy": [], "tokens": []}
{"line_number": 501, "line_type": "original", "code": "", "entropy": 0.395751953125, "is_bug_line": false, "sus_score": 0.4650605022907257, "per_token_entropy": [0.395751953125], "tokens": [203]}
{"line_number": 501, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.4650605022907257, "per_token_entropy": [], "tokens": []}
{"line_number": 919, "line_type": "original", "code": "", "entropy": 0.395751953125, "is_bug_line": false, "sus_score": 0.4453141987323761, "per_token_entropy": [0.395751953125], "tokens": [203]}
{"line_number": 919, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.4453141987323761, "per_token_entropy": [], "tokens": []}
{"line_number": 505, "line_type": "original", "code": "", "entropy": 0.395751953125, "is_bug_line": false, "sus_score": 0.4453141987323761, "per_token_entropy": [0.395751953125], "tokens": [203]}
{"line_number": 505, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.4453141987323761, "per_token_entropy": [], "tokens": []}
{"line_number": 650, "line_type": "original", "code": "", "entropy": 0.395751953125, "is_bug_line": false, "sus_score": 0.4422938823699951, "per_token_entropy": [0.395751953125], "tokens": [203]}
{"line_number": 650, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.4422938823699951, "per_token_entropy": [], "tokens": []}
{"line_number": 356, "line_type": "original", "code": "    resetInternalState();", "entropy": 3.72265625, "is_bug_line": false, "sus_score": 0.4337816834449768, "per_token_entropy": [5.3984375, 10.5546875, 1.9609375, 0.15673828125, 0.53369140625], "tokens": [264, 5657, 4292, 1078, 473]}
{"line_number": 356, "line_type": "generated", "code": "\n  /** Filter the proposed step.\n   * @param step proposed step\n   * @param forward integration direction indicator\n   * @param isLast true if this is the last integration step\n   * @return filtered step\n   */\n  protected double filterStep(double step", "entropy": 0.23828125, "is_bug_line": false, "sus_score": 0.4337816834449768, "per_token_entropy": [0.50341796875, 0.2344970703125, 1.5029296875, 0.51171875, 0.826171875, 0.03997802734375, 0.58642578125, 0.163818359375, 0.0002903938293457031, 0.79150390625, 0.0005850791931152344, 0.75244140625, 0.1827392578125, 0.06121826171875, 0.1343994140625, 8.094310760498047e-05, 0.0007824897766113281, 0.0122833251953125, 0.0728759765625, 0.513671875, 0.0017499923706054688, 0.2222900390625, 0.0138702392578125, 3.6716461181640625e-05, 0.0029850006103515625, 0.0208282470703125, 0.373291015625, 0.0118865966796875, 1.2109375, 0.0205535888671875, 0.791015625, 0.10491943359375, 0.015411376953125, 0.023345947265625, 0.71923828125, 0.032684326171875, 0.057464599609375, 0.002910614013671875, 0.0491943359375, 0.0024776458740234375, 0.059051513671875, 0.0633544921875, 0.289794921875, 0.1036376953125, 0.00585174560546875, 0.130615234375, 0.11383056640625, 0.0011281967163085938, 3.9458274841308594e-05, 0.0007190704345703125, 1.0556640625, 0.0017137527465820312], "tokens": [334, 1022, 8287, 322, 17934, 3111, 32, 664, 319, 477, 753, 3111, 17934, 3111, 664, 319, 477, 753, 7386, 10516, 6983, 18384, 664, 319, 477, 753, 438, 3267, 861, 415, 458, 438, 322, 2401, 10516, 3111, 664, 319, 477, 601, 13996, 3111, 664, 569, 334, 2522, 2064, 2761, 3533, 26, 2627, 3111]}
{"line_number": 431, "line_type": "original", "code": "", "entropy": 0.395751953125, "is_bug_line": false, "sus_score": 0.43323367834091187, "per_token_entropy": [0.395751953125], "tokens": [203]}
{"line_number": 431, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.43323367834091187, "per_token_entropy": [], "tokens": []}
{"line_number": 358, "line_type": "original", "code": "", "entropy": 2.95703125, "is_bug_line": false, "sus_score": 0.43198642134666443, "per_token_entropy": [2.95703125], "tokens": [203]}
{"line_number": 358, "line_type": "generated", "code": "  /** Filter the proposed step.\n   * <p>\n   * This method is called after acceptStep has been called, and it\n   * can be used to perform stepsize control. The default implementation\n   * does nothing.\n   * </p>\n  ", "entropy": 0.6552734375, "is_bug_line": false, "sus_score": 0.43198642134666443, "per_token_entropy": [1.14453125, 0.0419921875, 2.248046875, 0.65869140625, 0.767578125, 0.042144775390625, 0.5, 0.08245849609375, 0.0011529922485351562, 1.1005859375, 0.00539398193359375, 0.0006527900695800781, 0.2464599609375, 6.80685043334961e-05, 0.5703125, 0.042694091796875, 0.94482421875, 0.348388671875, 1.6513671875, 1.59375, 1.06640625, 1.140625, 0.6611328125, 0.04949951171875, 1.78515625, 1.240234375, 2.671875, 1.2509765625, 0.00042176246643066406, 2.087890625, 0.12359619140625, 0.34912109375, 0.301025390625, 2.6015625, 0.7724609375, 0.40087890625, 0.039794921875, 1.244140625, 0.66015625, 1.0146484375, 0.332275390625, 0.04827880859375, 0.00010728836059570312, 0.8125, 0.043212890625, 1.0615234375, 0.251220703125, 0.0022830963134765625, 0.03460693359375, 0.0001575946807861328, 0.00986480712890625, 0.0012950897216796875], "tokens": [225, 1022, 8287, 322, 17934, 3111, 32, 664, 319, 333, 98, 48, 664, 319, 1348, 1411, 438, 3823, 2685, 5514, 3533, 1401, 2583, 3823, 30, 461, 561, 664, 319, 883, 526, 1654, 372, 4436, 3111, 891, 3498, 32, 886, 1244, 4736, 664, 319, 1957, 7553, 32, 664, 319, 576, 98, 48, 664]}
{"line_number": 435, "line_type": "original", "code": "", "entropy": 0.395751953125, "is_bug_line": false, "sus_score": 0.431907057762146, "per_token_entropy": [0.395751953125], "tokens": [203]}
{"line_number": 435, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.431907057762146, "per_token_entropy": [], "tokens": []}
{"line_number": 295, "line_type": "original", "code": "                  // reject the step to match exactly the next switch time", "entropy": 4.0625, "is_bug_line": false, "sus_score": 0.4308915436267853, "per_token_entropy": [5.0625, 6.2421875, 6.66015625, 0.93310546875, 0.01125335693359375, 6.09375, 6.70703125, 5.27734375, 0.427001953125, 2.748046875, 7.8046875, 0.783203125], "tokens": [5688, 434, 7658, 322, 3111, 372, 2530, 11114, 322, 2354, 3578, 1133]}
{"line_number": 295, "line_type": "generated", "code": "\n            safety * Math.pow(error, exp));\n        hNew = filterStep(stepSize * factor, forward, false);\n      }\n\n    } while (!lastStep);\n\n    return stepStart;\n\n  }", "entropy": 0.307861328125, "is_bug_line": false, "sus_score": 0.4308915436267853, "per_token_entropy": [1.755859375, 1.3994140625, 0.00977325439453125, 0.034515380859375, 0.0008053779602050781, 0.0242767333984375, 0.002841949462890625, 0.0204315185546875, 0.0916748046875, 0.01474761962890625, 0.0267791748046875, 0.1319580078125, 0.59912109375, 0.0248565673828125, 0.033660888671875, 0.09375, 8.07046890258789e-05, 0.0005745887756347656, 0.050994873046875, 0.03497314453125, 0.0034236907958984375, 0.0020427703857421875, 0.0009160041809082031, 0.00823974609375, 0.002735137939453125, 0.52880859375, 0.0006394386291503906, 0.9677734375, 0.0009064674377441406, 0.67822265625, 0.004222869873046875, 1.607421875, 0.08380126953125, 1.2021484375, 1.7642974853515625e-05, 0.479248046875, 0.73046875, 0.83349609375, 1.189453125, 0.443115234375, 0.0156097412109375, 0.1080322265625, 0.0011930465698242188], "tokens": [324, 26160, 319, 4175, 32, 7527, 26, 731, 30, 2910, 876, 291, 420, 1812, 280, 2761, 3533, 26, 2997, 1250, 319, 10365, 30, 7386, 30, 901, 293, 397, 320, 446, 320, 2218, 1429, 2135, 3533, 293, 446, 442, 3111, 2130, 45, 719, 320]}
{"line_number": 196, "line_type": "original", "code": "", "entropy": 3.4375, "is_bug_line": false, "sus_score": 0.4308915436267853, "per_token_entropy": [3.4375], "tokens": [203]}
{"line_number": 196, "line_type": "generated", "code": "\n          scale = MathArrays.buildArray(y0.length, 1.0);\n        } else {\n          // subsequent stages\n          final double[] yTmpDotK = yDotK[0];\n          for (int i = 0; i", "entropy": 0.35498046875, "is_bug_line": false, "sus_score": 0.4308915436267853, "per_token_entropy": [0.31103515625, 0.4111328125, 0.0270233154296875, 1.0693359375, 0.0032825469970703125, 0.00024008750915527344, 0.0660400390625, 0.0002703666687011719, 0.00032639503479003906, 0.43505859375, 0.5615234375, 0.006061553955078125, 0.0013799667358398438, 0.274169921875, 0.10723876953125, 0.112060546875, 0.06964111328125, 0.0007448196411132812, 0.1092529296875, 1.0322265625, 0.003429412841796875, 0.0460205078125, 0.04925537109375, 0.25439453125, 1.1376953125, 0.89013671875, 0.061981201171875, 0.2388916015625, 1.58984375, 0.327880859375, 0.5859375, 1.5419921875, 0.8505859375, 0.75927734375, 1.0869140625, 0.18994140625, 0.22900390625, 0.013458251953125, 0.0038776397705078125, 0.021697998046875, 0.626953125, 0.01029205322265625, 0.242919921875, 1.197265625, 0.012420654296875, 0.0083160400390625, 1.5791015625, 0.0012912750244140625, 0.01363372802734375, 0.281494140625, 0.004856109619140625, 0.00139617919921875], "tokens": [616, 5247, 280, 4175, 9978, 32, 1832, 1261, 26, 107, 34, 32, 1322, 30, 225, 35, 32, 34, 293, 291, 320, 813, 301, 616, 434, 16490, 31416, 616, 1158, 2064, 1178, 533, 15770, 10025, 61, 280, 533, 10025, 61, 77, 34, 970, 616, 436, 308, 410, 595, 280, 225, 34, 45, 595]}
{"line_number": 201, "line_type": "original", "code": "", "entropy": 4.6796875, "is_bug_line": false, "sus_score": 0.4305262863636017, "per_token_entropy": [4.6796875], "tokens": [203]}
{"line_number": 201, "line_type": "generated", "code": "\n            }\n          final double[] yTmpDot = MathArrays.buildArray(y0.length);\n          for (int j = 0; j < y0.length; ++j) {\n            yTmpDot[j] = yDotK", "entropy": 0.301513671875, "is_bug_line": false, "sus_score": 0.4305262863636017, "per_token_entropy": [0.95556640625, 0.11181640625, 0.603515625, 2.095703125, 0.1683349609375, 0.71826171875, 1.287109375, 0.67724609375, 1.5751953125, 0.5751953125, 1.96484375, 0.00988006591796875, 0.0004870891571044922, 0.366455078125, 0.00019991397857666016, 0.0001856088638305664, 0.560546875, 0.18896484375, 0.005645751953125, 0.002109527587890625, 0.1793212890625, 0.05438232421875, 0.54541015625, 0.01824951171875, 0.00440216064453125, 1.0302734375, 0.0020542144775390625, 0.0013828277587890625, 0.00016021728515625, 0.0116729736328125, 0.00034809112548828125, 0.0029582977294921875, 0.1883544921875, 0.223876953125, 2.3365020751953125e-05, 4.756450653076172e-05, 0.0011196136474609375, 0.0176239013671875, 0.0002932548522949219, 0.00206756591796875, 0.01007843017578125, 0.60400390625, 0.306640625, 0.004852294921875, 0.12225341796875, 0.00028061866760253906, 0.0006861686706542969, 0.00016450881958007812, 0.0050201416015625, 0.4208984375, 0.049468994140625, 0.001232147216796875], "tokens": [324, 320, 616, 1158, 2064, 1178, 533, 15770, 10025, 280, 4175, 9978, 32, 1832, 1261, 26, 107, 34, 32, 1322, 293, 616, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 533, 34, 32, 1322, 45, 3311, 92, 27, 301, 324, 533, 15770, 10025, 77, 92, 79, 280, 533, 10025, 61]}
{"line_number": 359, "line_type": "original", "code": "  }", "entropy": 3.703125, "is_bug_line": false, "sus_score": 0.4141830503940582, "per_token_entropy": [1.7763671875, 5.62890625], "tokens": [225, 320]}
{"line_number": 359, "line_type": "generated", "code": "\n\n  /** Get the safety factor for stepsize control.\n   * @return safety factor\n   */\n  public double getSafety() {\n    return safety;\n  }\n\n  /** Set the safety factor for stepsize control.\n   * @param safety safety factor\n   */", "entropy": 0.10028076171875, "is_bug_line": false, "sus_score": 0.4141830503940582, "per_token_entropy": [0.7607421875, 0.053924560546875, 1.7001953125, 0.0372314453125, 1.0283203125, 0.26318359375, 0.427734375, 0.1962890625, 0.037994384765625, 0.07391357421875, 0.051513671875, 0.0238189697265625, 0.00010979175567626953, 0.046112060546875, 0.0025959014892578125, 0.00748443603515625, 0.00485992431640625, 0.275390625, 0.016143798828125, 0.0030193328857421875, 0.00728607177734375, 0.003692626953125, 0.0196533203125, 0.0007371902465820312, 0.0028858184814453125, 0.00016832351684570312, 0.0277252197265625, 0.00013267993927001953, 0.0020008087158203125, 0.00045871734619140625, 0.00039458274841308594, 0.00019502639770507812, 0.0128326416015625, 0.0002605915069580078, 0.01171875, 0.0028591156005859375, 0.002559661865234375, 0.0014123916625976562, 0.004665374755859375, 0.0010223388671875, 0.00011432170867919922, 4.124641418457031e-05, 0.004764556884765625, 0.0087738037109375, 9.822845458984375e-05, 0.0037670135498046875, 0.0004935264587402344, 0.0149078369140625, 0.008270263671875, 0.0026988983154296875, 0.047760009765625, 0.0105743408203125], "tokens": [719, 1022, 1390, 322, 26160, 10365, 436, 3111, 891, 3498, 32, 664, 319, 477, 601, 26160, 10365, 664, 569, 334, 562, 2064, 43597, 21732, 346, 301, 284, 442, 26160, 45, 334, 320, 719, 1022, 1756, 322, 26160, 10365, 436, 3111, 891, 3498, 32, 664, 319, 477, 753, 26160, 26160, 10365, 664, 569]}
{"line_number": 346, "line_type": "original", "code": "                                                safety * Math.pow(error, exp)));", "entropy": 3.0625, "is_bug_line": false, "sus_score": 0.40943586826324463, "per_token_entropy": [14.34375, 14.46875, 2.052734375, 0.336669921875, 0.00957489013671875, 0.07305908203125, 0.03326416015625, 0.1669921875, 0.041229248046875, 0.019989013671875, 2.1328125], "tokens": [30635, 26160, 319, 4175, 32, 7527, 26, 731, 30, 2910, 4236]}
{"line_number": 346, "line_type": "generated", "code": "  protected double computeErrorRatio(final double[][] yDotK,\n      final double[] y0, final double[] y1, final double h) {\n\n    double errorRatio = 1;\n    final int stages = yDotK.length;\n   ", "entropy": 0.319091796875, "is_bug_line": false, "sus_score": 0.40943586826324463, "per_token_entropy": [1.1748046875, 1.1708984375, 0.07476806640625, 0.3134765625, 0.006664276123046875, 0.49267578125, 0.003643035888671875, 0.12347412109375, 0.06707763671875, 1.0751953125, 0.01317596435546875, 0.0001766681671142578, 0.00016200542449951172, 0.0014972686767578125, 2.015625, 0.01529693603515625, 0.00560760498046875, 0.00656890869140625, 0.11279296875, 0.0017566680908203125, 0.00066375732421875, 0.04052734375, 0.0007171630859375, 0.0022296905517578125, 0.00027251243591308594, 0.0007157325744628906, 0.0016632080078125, 0.0762939453125, 0.0013456344604492188, 0.005786895751953125, 0.0028553009033203125, 0.0208587646484375, 0.488525390625, 1.5048828125, 0.38818359375, 0.84521484375, 0.12481689453125, 0.155517578125, 0.208251953125, 0.450927734375, 0.48583984375, 1.9111328125, 0.9697265625, 0.98681640625, 0.1448974609375, 0.2486572265625, 0.01094818115234375, 0.0006151199340820312, 0.0189056396484375, 0.0003459453582763672, 0.0262298583984375, 0.78857421875], "tokens": [225, 2522, 2064, 7596, 924, 10681, 26, 3220, 2064, 11336, 533, 10025, 61, 30, 397, 1158, 2064, 1178, 533, 34, 30, 1158, 2064, 1178, 533, 35, 30, 1158, 2064, 420, 27, 301, 446, 2064, 1048, 10681, 280, 225, 35, 45, 284, 1158, 629, 31416, 280, 533, 10025, 61, 32, 1322, 45, 284]}
{"line_number": 496, "line_type": "original", "code": "", "entropy": 0.395751953125, "is_bug_line": false, "sus_score": 0.40943586826324463, "per_token_entropy": [0.395751953125], "tokens": [203]}
{"line_number": 496, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.40943586826324463, "per_token_entropy": [], "tokens": []}
{"line_number": 498, "line_type": "original", "code": "", "entropy": 0.395751953125, "is_bug_line": false, "sus_score": 0.40943586826324463, "per_token_entropy": [0.395751953125], "tokens": [203]}
{"line_number": 498, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.40943586826324463, "per_token_entropy": [], "tokens": []}
{"line_number": 500, "line_type": "original", "code": "", "entropy": 0.395751953125, "is_bug_line": false, "sus_score": 0.40943586826324463, "per_token_entropy": [0.395751953125], "tokens": [203]}
{"line_number": 500, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.40943586826324463, "per_token_entropy": [], "tokens": []}
{"line_number": 502, "line_type": "original", "code": "", "entropy": 0.395751953125, "is_bug_line": false, "sus_score": 0.40943586826324463, "per_token_entropy": [0.395751953125], "tokens": [203]}
{"line_number": 502, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.40943586826324463, "per_token_entropy": [], "tokens": []}
{"line_number": 259, "line_type": "original", "code": "        // next stages", "entropy": 5.98828125, "is_bug_line": false, "sus_score": 0.40943586826324463, "per_token_entropy": [5.80859375, 5.94921875, 5.30859375, 6.890625], "tokens": [351, 434, 2354, 31416]}
{"line_number": 259, "line_type": "generated", "code": "\n        }\n\n      }\n\n      // update the data\n      stepStart += stepSize;\n      for (int j = 0; j < y0.length; ++j) {\n        y[j] = yTmp[j];\n      }\n\n      // dispatch", "entropy": 0.2239990234375, "is_bug_line": false, "sus_score": 0.40943586826324463, "per_token_entropy": [0.212890625, 0.0007224082946777344, 0.900390625, 0.0024929046630859375, 0.2364501953125, 0.56982421875, 2.111328125, 0.5869140625, 0.76708984375, 0.74462890625, 0.9287109375, 0.1090087890625, 0.275146484375, 0.9365234375, 7.832050323486328e-05, 0.00017726421356201172, 0.11102294921875, 0.8955078125, 0.000873565673828125, 0.004528045654296875, 0.1629638671875, 0.0002970695495605469, 0.000614166259765625, 0.000331878662109375, 0.0002238750457763672, 0.00023305416107177734, 0.0005006790161132812, 0.0203704833984375, 0.1212158203125, 0.0005812644958496094, 3.3020973205566406e-05, 0.00035452842712402344, 0.0009069442749023438, 5.328655242919922e-05, 0.00055694580078125, 0.0019817352294921875, 0.041778564453125, 0.022125244140625, 0.053253173828125, 0.0015707015991210938, 0.0005431175231933594, 0.312255859375, 0.00699615478515625, 0.00044417381286621094, 0.0001100301742553711, 5.900859832763672e-05, 0.0006151199340820312, 0.1309814453125, 0.0004405975341796875, 0.421875, 0.38525390625, 0.56591796875], "tokens": [291, 320, 1687, 320, 1687, 434, 1974, 322, 706, 397, 3111, 2130, 1454, 3111, 1250, 45, 397, 436, 308, 410, 594, 280, 225, 34, 45, 594, 333, 533, 34, 32, 1322, 45, 3311, 92, 27, 301, 291, 533, 77, 92, 79, 280, 533, 15770, 77, 92, 970, 397, 320, 1687, 434, 7520]}
{"line_number": 319, "line_type": "original", "code": "      // provide the step data to the step handler", "entropy": 4.69921875, "is_bug_line": false, "sus_score": 0.40943586826324463, "per_token_entropy": [6.2109375, 9.296875, 6.98828125, 3.365234375, 5.6328125, 10.1171875, 1.55078125, 0.249755859375, 2.109375, 1.47265625], "tokens": [647, 434, 2355, 322, 3111, 706, 372, 322, 3111, 4899]}
{"line_number": 319, "line_type": "generated", "code": "\n   * @param minReduction minimal reduction factor\n   */\n  public void setMinReduction(final double minReduction) {\n    this.minReduction = minReduction;\n  }\n\n  /** Get the maximal growth factor for stepsize control.\n   * @return", "entropy": 0.0360107421875, "is_bug_line": false, "sus_score": 0.40943586826324463, "per_token_entropy": [0.1326904296875, 0.006526947021484375, 0.09429931640625, 0.0020580291748046875, 0.07275390625, 0.06390380859375, 0.0916748046875, 0.05987548828125, 0.004405975341796875, 0.32421875, 0.10650634765625, 0.006771087646484375, 0.003139495849609375, 0.002101898193359375, 0.0007681846618652344, 0.00019550323486328125, 0.0010519027709960938, 0.0029296875, 0.07440185546875, 0.0008335113525390625, 0.00028514862060546875, 5.233287811279297e-05, 0.00037479400634765625, 0.0017862319946289062, 0.0264739990234375, 0.0215606689453125, 0.0001169443130493164, 0.0008549690246582031, 2.288818359375e-05, 0.0091705322265625, 0.0137481689453125, 0.000583648681640625, 0.0007624626159667969, 0.031219482421875, 0.00018739700317382812, 0.0294647216796875, 0.0021877288818359375, 0.0194091796875, 0.01232147216796875, 0.30419921875, 0.01074981689453125, 0.004261016845703125, 0.034576416015625, 0.00771331787109375, 0.0036830902099609375, 0.0020160675048828125, 0.000606536865234375, 0.01248931884765625, 0.251953125, 0.00012803077697753906, 0.0175323486328125, 0.0002053976058959961], "tokens": [664, 319, 477, 753, 1847, 35802, 16645, 25160, 10365, 664, 569, 334, 562, 763, 739, 2928, 35802, 26, 3220, 2064, 1847, 35802, 27, 301, 284, 458, 32, 887, 35802, 280, 1847, 35802, 45, 334, 320, 719, 1022, 1390, 322, 1769, 2977, 27934, 10365, 436, 3111, 891, 3498, 32, 664, 319, 477, 601]}
