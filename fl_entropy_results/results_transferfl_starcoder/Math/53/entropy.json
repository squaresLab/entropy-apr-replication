{"line_number": 153, "line_type": "original", "code": "        return createComplex(real + rhs.getReal(),", "entropy": 1.6708984375, "is_bug_line": true, "sus_score": 0.4705664813518524, "per_token_entropy": [2.791015625, 5.59375, 1.44140625, 0.79443359375, 0.07275390625, 2.857421875, 4.1171875, 1.4951171875, 0.06317138671875, 0.1136474609375, 0.6083984375, 0.105224609375], "tokens": [351, 442, 1487, 12267, 26, 4543, 474, 9322, 32, 371, 6877, 1026]}
{"line_number": 153, "line_type": "generated", "code": "\n     *  {@link #ZERO} is returned.\n     * </ul></p>\n     *\n     * @param rhs the divisor\n     * @return the quotient of this complex number and <code>rhs</code>\n     * @throws NullArgumentException", "entropy": 0.1727294921875, "is_bug_line": true, "sus_score": 0.4705664813518524, "per_token_entropy": [0.99365234375, 0.013214111328125, 0.58984375, 0.87353515625, 0.00635528564453125, 0.0491943359375, 0.57080078125, 0.00457000732421875, 0.030548095703125, 0.005039215087890625, 1.0283203125, 0.2213134765625, 0.021026611328125, 0.10400390625, 0.65625, 0.2210693359375, 0.051361083984375, 0.0285797119140625, 0.0193634033203125, 0.0004296302795410156, 0.51513671875, 6.914138793945312e-05, 0.036346435546875, 0.0015439987182617188, 0.0275115966796875, 0.248779296875, 0.1572265625, 0.006984710693359375, 1.6450881958007812e-05, 0.0007390975952148438, 0.0016498565673828125, 0.2393798828125, 0.71728515625, 6.67572021484375e-05, 0.056427001953125, 0.154541015625, 0.61669921875, 0.02789306640625, 0.1417236328125, 0.433349609375, 0.000316619873046875, 3.7789344787597656e-05, 0.0225372314453125, 0.001674652099609375, 0.0003402233123779297, 0.052947998046875, 0.0052490234375, 0.0018110275268554688, 0.003658294677734375, 0.01384735107421875, 0.011749267578125, 0.00016987323760986328], "tokens": [275, 319, 225, 3088, 1204, 588, 13977, 111, 438, 4717, 32, 275, 319, 576, 338, 855, 98, 48, 275, 319, 275, 319, 477, 753, 9322, 322, 33482, 275, 319, 477, 601, 322, 32785, 1606, 432, 458, 8640, 1451, 461, 333, 687, 48, 14312, 377, 687, 48, 275, 319, 477, 5117, 9282, 8308]}
{"line_number": 2331, "line_type": "original", "code": "", "entropy": 0.481201171875, "is_bug_line": false, "sus_score": 0.4281514585018158, "per_token_entropy": [0.481201171875], "tokens": [203]}
{"line_number": 2331, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.4281514585018158, "per_token_entropy": [], "tokens": []}
{"line_number": 152, "line_type": "original", "code": "        MathUtils.checkNotNull(rhs);", "entropy": 4.52734375, "is_bug_line": true, "sus_score": 0.40657511353492737, "per_token_entropy": [4.74609375, 12.71875, 9.625, 0.04437255859375, 8.6875, 0.005596160888671875, 0.10101318359375, 0.2763671875], "tokens": [351, 4175, 2755, 32, 42698, 26, 14312, 293]}
{"line_number": 152, "line_type": "generated", "code": "\n     *  <code>rhs</code> is infinite (positive or negative), the result is\n     *  {@link #ZERO}.</li>\n     * <li>If this is infinite and <code>rhs</code> is finite, the", "entropy": 0.14794921875, "is_bug_line": true, "sus_score": 0.40657511353492737, "per_token_entropy": [0.72021484375, 0.0051422119140625, 0.88720703125, 0.0426025390625, 0.001308441162109375, 0.0032749176025390625, 0.0288238525390625, 0.0030345916748046875, 0.0004973411560058594, 0.00022733211517333984, 0.005542755126953125, 0.0181427001953125, 0.52685546875, 0.60302734375, 0.0053863525390625, 0.00024175643920898438, 0.1324462890625, 1.5107421875, 0.0831298828125, 0.257568359375, 0.1072998046875, 5.817413330078125e-05, 0.11895751953125, 0.4765625, 0.00066375732421875, 0.0110626220703125, 0.02056884765625, 0.281982421875, 0.00640869140625, 0.00042438507080078125, 0.0211944580078125, 0.08953857421875, 0.00048422813415527344, 0.19677734375, 0.006549835205078125, 0.0009317398071289062, 0.0035381317138671875, 0.62060546875, 0.0013360977172851562, 0.0005893707275390625, 0.6796875, 0.01029205322265625, 0.0004024505615234375, 4.8041343688964844e-05, 0.0178375244140625, 0.00023305416107177734, 9.417533874511719e-06, 6.556510925292969e-05, 0.0011587142944335938, 0.011749267578125, 0.004962921142578125, 0.168701171875], "tokens": [275, 319, 225, 333, 687, 48, 14312, 377, 687, 48, 438, 20280, 308, 18502, 556, 11003, 471, 322, 1056, 438, 275, 319, 225, 3088, 1204, 588, 13977, 111, 1730, 374, 48, 275, 319, 333, 374, 48, 2797, 458, 438, 20280, 461, 333, 687, 48, 14312, 377, 687, 48, 438, 32916, 30, 322]}
{"line_number": 319, "line_type": "original", "code": "        return isNaN;", "entropy": 3.09765625, "is_bug_line": false, "sus_score": 0.3933641314506531, "per_token_entropy": [2.40625, 3.638671875, 5.828125, 3.087890625, 0.5341796875], "tokens": [351, 442, 438, 11126, 45]}
{"line_number": 319, "line_type": "generated", "code": "\n            Double.isInfinite(rhs.real) || Double.isInfinite(rhs.imaginary)) {\n            return INF;\n        }\n\n        // (a + bi)(c + di) = (ac - bd) + (ad + bc)i", "entropy": 0.12939453125, "is_bug_line": false, "sus_score": 0.3933641314506531, "per_token_entropy": [1.216796875, 0.1807861328125, 9.97781753540039e-05, 0.0017070770263671875, 4.291534423828125e-06, 0.000530242919921875, 0.00955963134765625, 0.00043964385986328125, 0.10626220703125, 0.0033702850341796875, 0.01070404052734375, 0.2152099609375, 5.257129669189453e-05, 0.0018110275268554688, 3.981590270996094e-05, 0.00044035911560058594, 0.00759124755859375, 4.1604042053222656e-05, 0.0009303092956542969, 3.1113624572753906e-05, 0.0611572265625, 0.01215362548828125, 0.15185546875, 0.03448486328125, 0.8271484375, 0.0026607513427734375, 0.036865234375, 0.0006389617919921875, 0.92578125, 0.966796875, 1.673828125, 0.049713134765625, 0.053497314453125, 0.0026226043701171875, 0.005367279052734375, 0.00079345703125, 0.0013513565063476562, 0.0005459785461425781, 0.0011844635009765625, 0.007415771484375, 0.0019178390502929688, 0.06512451171875, 0.03570556640625, 0.00423431396484375, 0.0002149343490600586, 0.000957489013671875, 0.0004699230194091797, 0.04339599609375, 0.0016202926635742188, 0.00011706352233886719, 4.947185516357422e-05, 0.0028533935546875], "tokens": [324, 6934, 32, 28823, 11949, 26, 14312, 32, 4543, 27, 1276, 6934, 32, 28823, 11949, 26, 14312, 32, 17792, 3172, 490, 301, 324, 442, 47257, 45, 291, 320, 584, 434, 308, 83, 474, 10789, 2502, 85, 474, 2068, 27, 280, 308, 329, 429, 25236, 27, 474, 308, 339, 474, 17754, 27, 91]}
{"line_number": 997, "line_type": "original", "code": "        return new Complex(realPart, imaginaryPart);", "entropy": 1.3974609375, "is_bug_line": false, "sus_score": 0.38811513781547546, "per_token_entropy": [5.98828125, 1.4208984375, 3.568359375, 0.63037109375, 0.81298828125, 0.314208984375, 3.859375, 0.039215087890625, 0.0281219482421875, 0.0007958412170410156, 0.00458526611328125, 0.09210205078125], "tokens": [351, 442, 537, 19915, 26, 4543, 2639, 30, 17463, 3172, 2639, 293]}
{"line_number": 997, "line_type": "generated", "code": "\n\n    /**\n     * <p>Creates a complex number given the real part. The imaginary part\n     * is set to zero.</p>\n     *\n     * @param realPart Real part.\n     * @return a new complex number instance\n     */\n   ", "entropy": 0.319091796875, "is_bug_line": false, "sus_score": 0.38811513781547546, "per_token_entropy": [1.40625, 0.11328125, 0.87353515625, 5.7578086853027344e-05, 1.6884765625, 0.002201080322265625, 0.00435638427734375, 2.232421875, 0.0102996826171875, 0.98095703125, 0.053680419921875, 0.1358642578125, 0.046356201171875, 0.1361083984375, 0.333740234375, 0.262939453125, 1.23828125, 0.0267791748046875, 8.344650268554688e-07, 0.01100921630859375, 0.7578125, 4.6133995056152344e-05, 0.313720703125, 0.6982421875, 2.6941299438476562e-05, 0.5146484375, 0.017791748046875, 6.16312026977539e-05, 0.0007801055908203125, 0.004985809326171875, 0.001461029052734375, 0.50439453125, 1.7523765563964844e-05, 0.062744140625, 0.0020351409912109375, 0.031005859375, 1.2041015625, 1.0556640625, 0.0692138671875, 0.03485107421875, 0.004497528076171875, 0.0013294219970703125, 0.0025920867919921875, 0.005893707275390625, 0.1697998046875, 0.399658203125, 0.2099609375, 0.0095977783203125, 0.0237274169921875, 0.28466796875, 0.6328125, 0.01207733154296875], "tokens": [446, 1022, 275, 319, 333, 98, 48, 26001, 312, 8640, 1451, 2702, 322, 4011, 1742, 32, 886, 17463, 3172, 1742, 275, 319, 438, 739, 372, 5934, 1730, 98, 48, 275, 319, 275, 319, 477, 753, 4011, 2639, 11443, 1742, 32, 275, 319, 477, 601, 312, 537, 8640, 1451, 1980, 275, 569, 284]}
{"line_number": 308, "line_type": "original", "code": "        return real;", "entropy": 3.541015625, "is_bug_line": false, "sus_score": 0.3207024335861206, "per_token_entropy": [3.6484375, 0.84326171875, 7.765625, 1.9052734375], "tokens": [351, 442, 4011, 45]}
{"line_number": 308, "line_type": "generated", "code": "\n     * @param rhs  the complex number to multiply with\n     * @return  <code>this * rhs</code>\n     */\n    public Complex multiply(Complex rhs) {\n        return multiply(rhs.getReal(), rhs.getImaginary());", "entropy": 0.234619140625, "is_bug_line": false, "sus_score": 0.3207024335861206, "per_token_entropy": [0.87255859375, 0.2322998046875, 0.263427734375, 0.0186004638671875, 0.1754150390625, 1.3837890625, 0.52880859375, 0.96728515625, 0.003528594970703125, 0.057647705078125, 0.09381103515625, 0.2230224609375, 0.576171875, 0.00026345252990722656, 0.005237579345703125, 0.002536773681640625, 1.14453125, 0.7470703125, 0.03375244140625, 0.04754638671875, 0.0020656585693359375, 0.03759765625, 0.0128173828125, 0.0006456375122070312, 3.2901763916015625e-05, 0.010650634765625, 0.01568603515625, 0.51708984375, 0.026336669921875, 0.053436279296875, 0.028839111328125, 0.09326171875, 0.0007200241088867188, 0.146240234375, 0.00038504600524902344, 0.035430908203125, 0.01073455810546875, 0.26904296875, 2.23828125, 0.46484375, 0.0291595458984375, 0.45751953125, 0.123046875, 0.15869140625, 0.0038604736328125, 0.0307769775390625, 0.04779052734375, 0.00014674663543701172, 0.0010881423950195312, 3.337860107421875e-05, 3.6954879760742188e-06, 0.0098876953125], "tokens": [275, 319, 477, 753, 9322, 225, 322, 8640, 1451, 372, 22213, 623, 275, 319, 477, 601, 225, 333, 687, 48, 578, 319, 9322, 377, 687, 48, 275, 569, 284, 562, 19915, 22213, 26, 12267, 9322, 27, 301, 291, 442, 22213, 26, 14312, 32, 371, 6877, 1026, 9322, 32, 371, 42364, 3172, 1035]}
{"line_number": 299, "line_type": "original", "code": "        return imaginary;", "entropy": 4.75, "is_bug_line": false, "sus_score": 0.30706581473350525, "per_token_entropy": [2.4921875, 10.1953125, 8.8359375, 0.00681304931640625, 2.212890625], "tokens": [351, 442, 17463, 3172, 45]}
{"line_number": 299, "line_type": "generated", "code": "    * infinite parts and if either this or <code>rhs</code>", "entropy": 0.32470703125, "is_bug_line": false, "sus_score": 0.30706581473350525, "per_token_entropy": [1.626953125, 0.54052734375, 0.149658203125, 0.00742340087890625, 0.343994140625, 0.357666015625, 1.349609375, 0.771484375, 0.004207611083984375, 0.024932861328125, 0.00032639503479003906, 0.00016880035400390625, 0.01275634765625, 0.003509521484375, 0.000301361083984375, 0.0005345344543457031], "tokens": [264, 319, 20280, 8710, 461, 415, 3154, 458, 556, 333, 687, 48, 14312, 377, 687, 48]}
{"line_number": 2334, "line_type": "original", "code": "", "entropy": 0.481201171875, "is_bug_line": false, "sus_score": 0.30124515295028687, "per_token_entropy": [0.481201171875], "tokens": [203]}
{"line_number": 2334, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.30124515295028687, "per_token_entropy": [], "tokens": []}
{"line_number": 85, "line_type": "original", "code": "     *", "entropy": 3.984375, "is_bug_line": false, "sus_score": 0.27210983633995056, "per_token_entropy": [7.95703125, 0.01018524169921875], "tokens": [262, 319]}
{"line_number": 85, "line_type": "generated", "code": "\n     * <p>\n     * Returns <code>NaN</code> if either (or both) real and imaginary part of\n     * the second addend is <code>NaN</code>.\n     * <p>\n     * If the sum is", "entropy": 0.290283203125, "is_bug_line": false, "sus_score": 0.27210983633995056, "per_token_entropy": [0.028656005859375, 0.0001304149627685547, 0.806640625, 0.01425933837890625, 0.006000518798828125, 0.011077880859375, 1.7523765563964844e-05, 1.552734375, 0.027099609375, 0.0011758804321289062, 7.069110870361328e-05, 0.0202484130859375, 0.007686614990234375, 0.00019657611846923828, 0.00018846988677978516, 0.29541015625, 0.0181427001953125, 1.24609375, 0.10028076171875, 3.409385681152344e-05, 0.0001226663589477539, 0.20068359375, 0.37548828125, 0.026092529296875, 2.384185791015625e-07, 0.9189453125, 0.01175689697265625, 0.018280029296875, 1.7642974853515625e-05, 0.8046875, 0.9208984375, 0.8115234375, 0.002559661865234375, 0.01122283935546875, 0.0069122314453125, 0.0002319812774658203, 1.2874603271484375e-05, 0.00010383129119873047, 0.0002899169921875, 0.00013756752014160156, 1.7333984375, 0.81884765625, 0.003124237060546875, 1.8935546875, 0.058074951171875, 0.006832122802734375, 0.0016794204711914062, 1.4781951904296875e-05, 1.0361328125, 1.1884765625, 0.09747314453125, 0.01383209228515625], "tokens": [275, 319, 333, 98, 48, 275, 319, 3759, 333, 687, 48, 11126, 377, 687, 48, 415, 3154, 308, 271, 4335, 27, 4011, 461, 17463, 3172, 1742, 432, 275, 319, 322, 3100, 1015, 416, 438, 333, 687, 48, 11126, 377, 687, 4503, 275, 319, 333, 98, 48, 275, 319, 1670, 322, 3632, 438]}
{"line_number": 94, "line_type": "original", "code": "        isNaN = Double.isNaN(real) || Double.isNaN(imaginary);", "entropy": 1.796875, "is_bug_line": false, "sus_score": 0.22574837505817413, "per_token_entropy": [4.359375, 13.421875, 3.935546875, 2.8828125, 4.5234375, 0.00023937225341796875, 0.02020263671875, 0.0004291534423828125, 1.20703125, 0.0806884765625, 0.0179595947265625, 0.09332275390625, 0.00017499923706054688, 0.0035381317138671875, 0.0002720355987548828, 0.0217742919921875, 0.0002970695495605469, 1.7705078125], "tokens": [351, 438, 11126, 280, 6934, 32, 26821, 26, 4543, 27, 1276, 6934, 32, 26821, 26, 17792, 3172, 293]}
{"line_number": 94, "line_type": "generated", "code": "part of the result.\n     *\n     * @param rhs the addend\n     * @return <code>this + rhs</code>\n     */\n    public Complex add(Complex rhs) {\n        if (isNaN || rhs.isNaN()) {\n            return NaN", "entropy": 0.2291259765625, "is_bug_line": false, "sus_score": 0.22574837505817413, "per_token_entropy": [1.2890625, 0.22265625, 2.087890625, 2.166015625, 1.2275390625, 0.1463623046875, 0.042633056640625, 0.9052734375, 0.0006084442138671875, 0.004261016845703125, 0.00044155120849609375, 0.035797119140625, 0.78857421875, 0.361083984375, 7.62939453125e-05, 0.004322052001953125, 2.09808349609375e-05, 9.167194366455078e-05, 4.315376281738281e-05, 0.60693359375, 0.0014495849609375, 0.01031494140625, 0.00011181831359863281, 0.00263214111328125, 0.002887725830078125, 0.00019407272338867188, 1.1444091796875e-05, 0.00638580322265625, 0.004619598388671875, 0.2384033203125, 0.004306793212890625, 0.0311279296875, 0.007083892822265625, 0.002140045166015625, 8.380413055419922e-05, 0.12384033203125, 7.736682891845703e-05, 0.002201080322265625, 0.00734710693359375, 0.1876220703125, 0.335693359375, 0.00574493408203125, 0.166015625, 0.0272979736328125, 0.00400543212890625, 0.0008358955383300781, 7.200241088867188e-05, 0.72705078125, 0.001026153564453125, 0.008941650390625, 0.08575439453125, 0.0275115966796875], "tokens": [2050, 432, 322, 1056, 32, 275, 319, 275, 319, 477, 753, 9322, 322, 1015, 416, 275, 319, 477, 601, 333, 687, 48, 578, 474, 9322, 377, 687, 48, 275, 569, 284, 562, 19915, 1015, 26, 12267, 9322, 27, 301, 291, 415, 308, 26821, 1276, 9322, 32, 26821, 1157, 301, 324, 442, 21644]}
{"line_number": 95, "line_type": "original", "code": "        isInfinite = !isNaN &&", "entropy": 3.244140625, "is_bug_line": false, "sus_score": 0.22551031410694122, "per_token_entropy": [5.83203125, 6.70703125, 0.89697265625, 1.1298828125, 7.30078125, 0.77978515625, 0.061920166015625], "tokens": [351, 438, 39524, 280, 653, 26821, 962]}
{"line_number": 95, "line_type": "generated", "code": "\n     * @param rhs The complex number to add.\n     * @return <code>this + rhs</code>\n     */\n    public Complex add(Complex rhs) {\n        if (isNaN || rhs.isNaN()) {\n            return NaN;\n        }\n       ", "entropy": 0.15673828125, "is_bug_line": false, "sus_score": 0.22551031410694122, "per_token_entropy": [0.128173828125, 0.0036411285400390625, 0.94091796875, 0.0037746429443359375, 0.028411865234375, 1.9072265625, 0.1771240234375, 0.0098876953125, 0.0012922286987304688, 0.720703125, 0.454345703125, 0.00434112548828125, 0.0002918243408203125, 0.0008950233459472656, 0.0002689361572265625, 0.34716796875, 0.003086090087890625, 0.0259552001953125, 0.00015878677368164062, 0.00634765625, 0.003444671630859375, 0.000850677490234375, 1.3113021850585938e-05, 0.278564453125, 0.04681396484375, 0.1427001953125, 0.0119476318359375, 0.035614013671875, 0.007266998291015625, 0.001804351806640625, 0.00010919570922851562, 0.125732421875, 0.00012886524200439453, 0.00266265869140625, 0.01082611083984375, 0.15234375, 0.58935546875, 0.00875091552734375, 0.1297607421875, 0.0226287841796875, 0.0031604766845703125, 0.0008234977722167969, 5.447864532470703e-05, 0.828125, 0.0009474754333496094, 0.00795745849609375, 0.04827880859375, 0.0286102294921875, 0.00034356117248535156, 0.0187835693359375, 0.000888824462890625, 0.87646484375], "tokens": [275, 319, 477, 753, 9322, 886, 8640, 1451, 372, 1015, 32, 275, 319, 477, 601, 333, 687, 48, 578, 474, 9322, 377, 687, 48, 275, 569, 284, 562, 19915, 1015, 26, 12267, 9322, 27, 301, 291, 415, 308, 26821, 1276, 9322, 32, 26821, 1157, 301, 324, 442, 21644, 45, 291, 320, 291]}
{"line_number": 92, "line_type": "original", "code": "        this.imaginary = imaginary;", "entropy": 4.7578125, "is_bug_line": false, "sus_score": 0.21982523798942566, "per_token_entropy": [2.654296875, 1.9150390625, 14.4296875, 10.4375, 0.0005807876586914062, 2.064453125, 10.453125, 0.003673553466796875, 0.8515625], "tokens": [351, 458, 32, 17792, 3172, 280, 17463, 3172, 45]}
{"line_number": 92, "line_type": "generated", "code": "\n     * this method returns a complex number with the value of either <code>this</code>\n     * or <code>rhs</code>, whichever is not a NaN value.</p>\n     *\n     * @param rhs the addend\n    ", "entropy": 0.182373046875, "is_bug_line": false, "sus_score": 0.21982523798942566, "per_token_entropy": [1.271484375, 0.003326416015625, 1.052734375, 0.004131317138671875, 0.2451171875, 0.333251953125, 0.460205078125, 0.004245758056640625, 0.032379150390625, 0.062255859375, 0.004039764404296875, 0.1939697265625, 1.564453125, 0.12176513671875, 0.0013751983642578125, 0.00399017333984375, 0.09478759765625, 0.007434844970703125, 0.00011920928955078125, 0.0005927085876464844, 0.2255859375, 0.00021636486053466797, 0.001651763916015625, 0.0001188516616821289, 0.00013375282287597656, 5.638599395751953e-05, 0.0003495216369628906, 1.823902130126953e-05, 0.0007023811340332031, 1.396484375, 0.04254150390625, 5.602836608886719e-06, 6.4373016357421875e-06, 0.25048828125, 0.0177764892578125, 0.01309967041015625, 0.0165557861328125, 0.02044677734375, 0.339599609375, 0.0003991127014160156, 0.0205841064453125, 0.03155517578125, 0.00024962425231933594, 0.26708984375, 1.895427703857422e-05, 0.00566864013671875, 0.0003879070281982422, 0.02825927734375, 0.93994140625, 0.40234375, 8.666515350341797e-05, 0.0037517547607421875], "tokens": [275, 319, 458, 1411, 3217, 312, 8640, 1451, 623, 322, 786, 432, 3154, 333, 687, 48, 578, 377, 687, 48, 275, 319, 556, 333, 687, 48, 14312, 377, 687, 2717, 640, 17345, 424, 438, 646, 312, 21644, 786, 1730, 98, 48, 275, 319, 275, 319, 477, 753, 9322, 322, 1015, 416, 275]}
{"line_number": 90, "line_type": "original", "code": "        super();", "entropy": 6.57421875, "is_bug_line": false, "sus_score": 0.21573852002620697, "per_token_entropy": [4.61328125, 11.0078125, 4.1015625], "tokens": [351, 2599, 473]}
{"line_number": 90, "line_type": "generated", "code": "\n     * @param  c number to be added\n     * @return {@code this + c}\n     * @see #subtract(Complex)\n     */\n    public Complex add(Complex c) {\n        return new Complex(real + c.real, imag", "entropy": 0.20263671875, "is_bug_line": false, "sus_score": 0.21573852002620697, "per_token_entropy": [0.2371826171875, 0.016754150390625, 0.1810302734375, 0.0026798248291015625, 0.97314453125, 0.1177978515625, 0.9931640625, 0.0003247261047363281, 0.11212158203125, 0.00016868114471435547, 0.05206298828125, 0.00018489360809326172, 0.0004057884216308594, 0.00017976760864257812, 1.759765625, 0.0028247833251953125, 0.0005173683166503906, 0.0565185546875, 0.00261688232421875, 0.0022125244140625, 0.01446533203125, 1.67578125, 0.061614990234375, 0.5751953125, 0.64111328125, 0.29150390625, 0.01561737060546875, 0.2958984375, 0.007503509521484375, 0.00732421875, 0.225830078125, 0.0164642333984375, 0.0265655517578125, 0.002788543701171875, 0.0010547637939453125, 0.00019621849060058594, 0.10845947265625, 0.0015506744384765625, 0.01241302490234375, 0.01552581787109375, 0.139404296875, 0.41455078125, 0.1019287109375, 0.0003840923309326172, 0.005420684814453125, 0.232177734375, 0.001434326171875, 0.0011157989501953125, 3.063678741455078e-05, 1.0849609375, 0.005191802978515625, 0.0418701171875], "tokens": [275, 319, 477, 753, 225, 281, 1451, 372, 526, 3640, 275, 319, 477, 601, 3088, 687, 458, 474, 281, 111, 275, 319, 477, 2970, 588, 25330, 26, 12267, 27, 275, 569, 284, 562, 19915, 1015, 26, 12267, 281, 27, 301, 291, 442, 537, 19915, 26, 4543, 474, 281, 32, 4543, 30, 17463]}
{"line_number": 91, "line_type": "original", "code": "        this.real = real;", "entropy": 2.58984375, "is_bug_line": false, "sus_score": 0.21512332558631897, "per_token_entropy": [6.3828125, 2.7421875, 1.2373046875, 1.7001953125, 2.75, 0.62744140625, 2.6875], "tokens": [351, 458, 32, 4543, 280, 4011, 45]}
{"line_number": 91, "line_type": "generated", "code": "\n     * @param  c Number to be added.\n     * @return <code>this + c</code>\n     */\n    public Complex add(Complex c) {\n        return new Complex(real + c.getRealPart(), imaginary + c", "entropy": 0.162109375, "is_bug_line": false, "sus_score": 0.21512332558631897, "per_token_entropy": [0.295166015625, 0.0044708251953125, 1.6787109375, 0.006938934326171875, 1.2236328125, 0.111328125, 0.6748046875, 0.00016295909881591797, 0.065673828125, 0.0004413127899169922, 0.63818359375, 0.00885772705078125, 0.0003654956817626953, 0.000949859619140625, 0.0003809928894042969, 0.283447265625, 0.0692138671875, 0.0032215118408203125, 0.0007114410400390625, 0.0290374755859375, 0.0025577545166015625, 0.0006794929504394531, 2.6464462280273438e-05, 0.1717529296875, 0.0084686279296875, 0.28515625, 0.0127410888671875, 0.033782958984375, 0.00717926025390625, 0.003353118896484375, 0.0002791881561279297, 0.137939453125, 0.001285552978515625, 0.01451873779296875, 0.01300048828125, 0.1473388671875, 0.63720703125, 0.1470947265625, 0.0004153251647949219, 0.0043792724609375, 0.2666015625, 0.0013074874877929688, 0.0013523101806640625, 3.1113624572753906e-05, 0.339599609375, 0.00032806396484375, 0.61865234375, 0.00048732757568359375, 0.46826171875, 3.266334533691406e-05, 0.0033893585205078125, 0.008087158203125], "tokens": [275, 319, 477, 753, 225, 281, 5104, 372, 526, 3640, 32, 275, 319, 477, 601, 333, 687, 48, 578, 474, 281, 377, 687, 48, 275, 569, 284, 562, 19915, 1015, 26, 12267, 281, 27, 301, 291, 442, 537, 19915, 26, 4543, 474, 281, 32, 371, 6877, 2639, 1026, 17463, 3172, 474, 281]}
{"line_number": 52, "line_type": "original", "code": "    public static final Complex I = new Complex(0.0, 1.0);", "entropy": 1.3974609375, "is_bug_line": false, "sus_score": 0.15602460503578186, "per_token_entropy": [5.23828125, 8.8984375, 4.50390625, 3.283203125, 0.26806640625, 2.501953125, 0.157958984375, 0.239990234375, 0.02703857421875, 0.0260162353515625, 0.0094757080078125, 1.0576171875, 6.318092346191406e-06, 0.0031299591064453125, 0.03802490234375, 3.075599670410156e-05, 0.0011358261108398438, 5.602836608886719e-06, 0.28662109375], "tokens": [264, 562, 907, 1158, 19915, 439, 280, 537, 19915, 26, 34, 32, 34, 30, 225, 35, 32, 34, 293]}
{"line_number": 52, "line_type": "generated", "code": "\n     * The absolute value of a complex number is defined to be the distance\n     * between that number and the origin, i.e.\n     * <pre>\n     *  <code>|a + bi", "entropy": 0.3505859375, "is_bug_line": false, "sus_score": 0.15602460503578186, "per_token_entropy": [0.5654296875, 0.006214141845703125, 0.7841796875, 0.1563720703125, 0.00025153160095214844, 1.5654296875, 0.04010009765625, 0.0236358642578125, 0.0005464553833007812, 0.456787109375, 0.59521484375, 0.162353515625, 0.00164794921875, 0.83447265625, 0.150146484375, 0.2509765625, 2.9206275939941406e-05, 0.2459716796875, 0.34375, 0.0022716522216796875, 0.0005178451538085938, 0.01971435546875, 0.388427734375, 1.677734375, 1.4375, 0.00022041797637939453, 0.006175994873046875, 0.03546142578125, 0.330078125, 0.00115966796875, 0.35400390625, 1.2470703125, 0.1741943359375, 0.0090179443359375, 0.000247955322265625, 1.197265625, 1.1044921875, 0.0040740966796875, 0.4189453125, 0.045166015625, 0.06463623046875, 0.027679443359375], "tokens": [275, 319, 886, 7976, 786, 432, 312, 8640, 1451, 438, 3417, 372, 526, 322, 7291, 275, 319, 3733, 688, 1451, 461, 322, 7382, 30, 595, 32, 87, 32, 275, 319, 333, 1001, 48, 275, 319, 225, 333, 687, 25894, 83, 474, 10789]}
{"line_number": 56, "line_type": "original", "code": "    public static final Complex NaN = new Complex(Double.NaN, Double.NaN);", "entropy": 1.21484375, "is_bug_line": false, "sus_score": 0.15602460503578186, "per_token_entropy": [5.109375, 4.15625, 6.1796875, 2.255859375, 0.37890625, 2.947265625, 0.12396240234375, 0.09613037109375, 0.00919342041015625, 0.0139312744140625, 0.065673828125, 0.0016880035400390625, 0.001239776611328125, 0.0282440185546875, 0.220458984375, 0.0014247894287109375, 0.00012123584747314453, 0.28759765625], "tokens": [264, 562, 907, 1158, 19915, 21644, 280, 537, 19915, 26, 4075, 32, 11126, 30, 6934, 32, 11126, 293]}
{"line_number": 56, "line_type": "generated", "code": "\n     * @return the absolute value\n     * @see #abs()\n     * @see #absSq()\n     */\n    public double abs() {\n        if (isNaN) {\n            return Double.NaN;\n        }\n        if (isInfinite) {\n           ", "entropy": 0.189208984375, "is_bug_line": false, "sus_score": 0.15602460503578186, "per_token_entropy": [0.11798095703125, 0.042083740234375, 0.349609375, 0.007625579833984375, 0.30615234375, 0.049407958984375, 0.00013494491577148438, 0.1878662109375, 1.109375, 0.070556640625, 0.8076171875, 0.697265625, 0.07257080078125, 0.56640625, 0.103271484375, 0.7998046875, 0.01329803466796875, 0.2364501953125, 0.204833984375, 0.65966796875, 0.619140625, 0.00597381591796875, 0.041259765625, 0.44287109375, 0.193115234375, 0.134521484375, 0.04559326171875, 0.0599365234375, 0.0106201171875, 0.042144775390625, 0.322998046875, 0.384765625, 0.02227783203125, 0.060211181640625, 0.140869140625, 0.0021953582763671875, 0.01158905029296875, 0.0311737060546875, 0.0004639625549316406, 4.172325134277344e-06, 0.00028586387634277344, 0.00015246868133544922, 0.0086822509765625, 0.0006384849548339844, 0.402099609375, 0.26708984375, 0.004215240478515625, 0.01078033447265625, 1.1920928955078125e-05, 0.1619873046875, 0.0010938644409179688, 0.006221771240234375], "tokens": [275, 319, 477, 601, 322, 7976, 786, 275, 319, 477, 2970, 588, 3596, 346, 275, 319, 477, 2970, 588, 3596, 17509, 346, 275, 569, 284, 562, 2064, 11366, 346, 301, 291, 415, 308, 26821, 27, 301, 324, 442, 6934, 32, 11126, 45, 291, 320, 291, 415, 308, 28823, 11949, 27, 301, 324]}
{"line_number": 60, "line_type": "original", "code": "    public static final Complex INF = new Complex(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY);", "entropy": 1.1962890625, "is_bug_line": false, "sus_score": 0.15602460503578186, "per_token_entropy": [1.923828125, 7.55859375, 4.875, 2.259765625, 0.83447265625, 6.14453125, 0.0809326171875, 0.046142578125, 0.004791259765625, 0.0211029052734375, 0.356689453125, 0.00194549560546875, 0.00717926025390625, 0.0003821849822998047, 5.233287811279297e-05, 0.0137786865234375, 2.048828125, 0.0006122589111328125, 0.137939453125, 0.00018775463104248047, 9.250640869140625e-05, 0.0136566162109375], "tokens": [264, 562, 907, 1158, 19915, 47257, 280, 537, 19915, 26, 4075, 32, 42270, 81, 36069, 30, 6934, 32, 42270, 81, 36069, 293]}
{"line_number": 60, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Add a complex to this complex.\n     *\n     * @param a the complex to be added\n     * @return this + a\n     */\n    public Complex add(Complex a) {\n        return new Complex(real + a.", "entropy": 0.277099609375, "is_bug_line": false, "sus_score": 0.15602460503578186, "per_token_entropy": [1.01953125, 0.01593017578125, 0.07647705078125, 0.0199127197265625, 0.02459716796875, 2.1457672119140625e-05, 0.70751953125, 0.4541015625, 0.0294952392578125, 1.037109375, 0.0743408203125, 0.10076904296875, 0.73095703125, 0.006740570068359375, 2.86102294921875e-05, 0.8818359375, 1.9550323486328125e-05, 0.0108795166015625, 0.001251220703125, 1.6875, 0.82080078125, 0.27685546875, 0.405029296875, 1.2529296875, 0.001163482666015625, 0.06475830078125, 4.3511390686035156e-05, 0.0005488395690917969, 0.0015411376953125, 1.96875, 0.01160430908203125, 0.06591796875, 0.006870269775390625, 0.407470703125, 0.00672149658203125, 0.004688262939453125, 0.0018634796142578125, 0.0007200241088867188, 0.0002124309539794922, 0.049041748046875, 0.0007023811340332031, 0.0084228515625, 0.023345947265625, 0.47119140625, 0.8466796875, 0.32421875, 0.0005726814270019531, 0.005218505859375, 0.50390625, 0.0017642974853515625, 0.0026950836181640625, 4.935264587402344e-05], "tokens": [284, 320, 446, 1022, 275, 319, 2222, 312, 8640, 372, 458, 8640, 32, 275, 319, 275, 319, 477, 753, 312, 322, 8640, 372, 526, 3640, 275, 319, 477, 601, 458, 474, 312, 275, 569, 284, 562, 19915, 1015, 26, 12267, 312, 27, 301, 291, 442, 537, 19915, 26, 4543, 474, 312, 32]}
{"line_number": 63, "line_type": "original", "code": "    public static final Complex ONE = new Complex(1.0, 0.0);", "entropy": 0.9052734375, "is_bug_line": false, "sus_score": 0.15602460503578186, "per_token_entropy": [2.384765625, 7.26953125, 4.3203125, 1.69921875, 0.607421875, 0.73388671875, 0.06134033203125, 0.0133209228515625, 0.0011377334594726562, 0.012451171875, 0.004833221435546875, 0.0645751953125, 2.288818359375e-05, 0.0129241943359375, 0.005146026611328125, 0.0036411285400390625, 0.007190704345703125, 1.800060272216797e-05, 0.004131317138671875], "tokens": [264, 562, 907, 1158, 19915, 27143, 280, 537, 19915, 26, 35, 32, 34, 30, 225, 34, 32, 34, 293]}
{"line_number": 63, "line_type": "generated", "code": "\n        return FastMath.hypot(real, imaginary);\n    }\n\n    /**\n     * Add a complex number to this complex number.\n     * <p>\n     * If either (or both) argument is infinite, returns\n     * <code>Double", "entropy": 0.21240234375, "is_bug_line": false, "sus_score": 0.15602460503578186, "per_token_entropy": [0.615234375, 0.771484375, 0.12158203125, 4.5299530029296875e-06, 4.4226646423339844e-05, 0.486328125, -0.0, 0.0007076263427734375, 0.1614990234375, 0.006252288818359375, 0.0018396377563476562, 1.4901161193847656e-05, 0.0010366439819335938, 0.220703125, 0.0028839111328125, 0.1632080078125, 0.016845703125, 0.0200042724609375, 2.562999725341797e-05, 1.00390625, 0.6611328125, 0.03265380859375, 0.5703125, 0.014617919921875, 0.008209228515625, 0.148193359375, 0.0002779960632324219, 0.0026226043701171875, 0.005584716796875, 1.4066696166992188e-05, 0.78173828125, 0.00287628173828125, 0.0032062530517578125, 0.01123809814453125, 9.179115295410156e-06, 0.212890625, 0.136962890625, 1.029296875, 0.0020351409912109375, 3.707408905029297e-05, 0.00017392635345458984, 1.181640625, 0.10430908203125, 0.319091796875, 1.09765625, 0.77490234375, 0.261962890625, 5.1021575927734375e-05, 0.0015430450439453125, 0.002315521240234375, 9.870529174804688e-05, 0.08221435546875], "tokens": [291, 442, 15938, 5717, 32, 90, 19107, 26, 4543, 30, 17463, 3172, 293, 284, 320, 446, 1022, 275, 319, 2222, 312, 8640, 1451, 372, 458, 8640, 1451, 32, 275, 319, 333, 98, 48, 275, 319, 1670, 3154, 308, 271, 4335, 27, 2793, 438, 20280, 30, 3217, 275, 319, 333, 687, 48, 4075]}
{"line_number": 66, "line_type": "original", "code": "    public static final Complex ZERO = new Complex(0.0, 0.0);", "entropy": 0.95947265625, "is_bug_line": false, "sus_score": 0.15602460503578186, "per_token_entropy": [2.2890625, 7.625, 4.23828125, 1.1962890625, 0.3193359375, 2.2421875, 0.025421142578125, 0.0443115234375, 0.0017528533935546875, 0.1265869140625, 0.00498199462890625, 0.07940673828125, 0.00010585784912109375, 0.0228118896484375, 0.0052032470703125, 0.00026297569274902344, 0.0008111000061035156, 3.552436828613281e-05, 0.007843017578125], "tokens": [264, 562, 907, 1158, 19915, 20024, 280, 537, 19915, 26, 34, 32, 34, 30, 225, 34, 32, 34, 293]}
{"line_number": 66, "line_type": "generated", "code": "\n        }\n\n        double x = getReal();\n        double y = getImaginary();\n        return FastMath.hypot(x, y);\n    }\n\n    /**\n     * Add a complex number to this complex number.\n     *\n     * @param a the", "entropy": 0.29052734375, "is_bug_line": false, "sus_score": 0.15602460503578186, "per_token_entropy": [0.50732421875, 0.69580078125, 0.190673828125, 1.59375, 1.5810546875, 0.84521484375, 1.4072265625, 0.1356201171875, 0.51611328125, 0.005947113037109375, 0.09698486328125, 0.001590728759765625, 0.00016069412231445312, 0.00498199462890625, 0.00039649009704589844, 9.894371032714844e-06, 7.152557373046875e-05, 0.362548828125, 0.465576171875, 0.1824951171875, 5.245208740234375e-06, 1.5497207641601562e-05, 0.33056640625, -0.0, 0.0005698204040527344, 0.0035037994384765625, 0.0014591217041015625, 0.0032711029052734375, 0.0013189315795898438, 0.19873046875, 0.0011873245239257812, 0.2064208984375, 0.0232391357421875, 0.027618408203125, 2.276897430419922e-05, 1.0185546875, 0.7509765625, 0.0279693603515625, 0.49072265625, 0.01354217529296875, 0.0112762451171875, 0.1356201171875, 0.0003490447998046875, 0.0031280517578125, 0.0061187744140625, 1.5497207641601562e-05, 0.7431640625, 1.2278556823730469e-05, 0.0103912353515625, 0.0003941059112548828, 1.9130859375, 0.59619140625], "tokens": [291, 320, 584, 2064, 816, 280, 622, 6877, 473, 291, 2064, 533, 280, 622, 42364, 3172, 473, 291, 442, 15938, 5717, 32, 90, 19107, 26, 106, 30, 533, 293, 284, 320, 446, 1022, 275, 319, 2222, 312, 8640, 1451, 372, 458, 8640, 1451, 32, 275, 319, 275, 319, 477, 753, 312, 322]}
{"line_number": 97, "line_type": "original", "code": "    }", "entropy": 3.125, "is_bug_line": false, "sus_score": 0.15602460503578186, "per_token_entropy": [2.447265625, 3.80078125], "tokens": [264, 320]}
{"line_number": 97, "line_type": "generated", "code": "\n\n    /**\n     * Return the difference between this and the specified complex number.\n     * <p>\n     * Uses the definitional formula\n     * <pre>\n     * (a + bi) - (c + di) = (a-c) +", "entropy": 0.11712646484375, "is_bug_line": false, "sus_score": 0.15602460503578186, "per_token_entropy": [1.439453125, 0.0162353515625, 0.040313720703125, 0.00016510486602783203, 0.6552734375, 0.0183868408203125, 1.0361328125, 1.2138671875, 0.0013399124145507812, 0.55859375, 0.223876953125, 0.59375, 0.1328125, 0.0018978118896484375, 0.0016260147094726562, 0.04339599609375, 7.474422454833984e-05, 0.017303466796875, 0.0009608268737792969, 0.0005102157592773438, 0.00078582763671875, 1.621246337890625e-05, 0.002471923828125, 2.2411346435546875e-05, 0.0657958984375, 0.0003209114074707031, 2.7418136596679688e-05, 0.0009336471557617188, 4.1961669921875e-05, 0.0011816024780273438, 0.0007328987121582031, 0.0027828216552734375, 0.0002605915069580078, 0.0014047622680664062, 0.00035452842712402344, 1.33514404296875e-05, 0.0117340087890625, 0.00021255016326904297, 5.125999450683594e-06, 0.0018157958984375, 9.226799011230469e-05, 3.0994415283203125e-06, 0.0001590251922607422, 0.00033020973205566406, 5.817413330078125e-05, 0.0005669593811035156, 1.1086463928222656e-05, 4.649162292480469e-06, 0.0004181861877441406, 0.00024437904357910156, 9.012222290039062e-05, 0.00027108192443847656], "tokens": [446, 1022, 275, 319, 2744, 322, 10563, 3733, 458, 461, 322, 3191, 8640, 1451, 32, 275, 319, 333, 98, 48, 275, 319, 26079, 322, 5644, 279, 17568, 275, 319, 333, 1001, 48, 275, 319, 308, 83, 474, 10789, 27, 429, 308, 85, 474, 2068, 27, 280, 308, 83, 31, 85, 27, 474]}
