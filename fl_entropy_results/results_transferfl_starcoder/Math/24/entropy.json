{"line_number": 561, "line_type": "original", "code": "", "entropy": 0.239501953125, "is_bug_line": false, "sus_score": 0.6400274634361267, "per_token_entropy": [0.239501953125], "tokens": [203]}
{"line_number": 561, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6400274634361267, "per_token_entropy": [], "tokens": []}
{"line_number": 146, "line_type": "original", "code": "        while (true) {", "entropy": 2.603515625, "is_bug_line": false, "sus_score": 0.6284293532371521, "per_token_entropy": [5.78515625, 8.3359375, 0.09039306640625, 1.3544921875, 0.0038299560546875, 0.049774169921875], "tokens": [351, 2218, 308, 1508, 27, 301]}
{"line_number": 146, "line_type": "generated", "code": "\n                        d = C * e;\n                    }\n                } else {\n                    // Bisection step.\n                    if (x < m) {\n                        e = b - x;\n                    } else {\n                        e = a - x;\n                    }\n                    d = ", "entropy": 0.10894775390625, "is_bug_line": false, "sus_score": 0.6284293532371521, "per_token_entropy": [0.80908203125, 0.0025787353515625, 0.0009140968322753906, 0.86376953125, 0.5654296875, 1.895427703857422e-05, 0.0004987716674804688, 0.03045654296875, 0.00040435791015625, 0.0240478515625, 0.0008845329284667969, 0.04962158203125, 0.003253936767578125, 0.099609375, 0.01192474365234375, 0.08367919921875, 0.419677734375, 2.2292137145996094e-05, 0.2132568359375, 0.007122039794921875, 0.00444793701171875, 0.9169921875, 0.00037288665771484375, 0.0008349418640136719, 0.0270233154296875, 7.748603820800781e-06, 9.5367431640625e-05, 0.0004596710205078125, 0.0010805130004882812, 0.0003209114074707031, 8.940696716308594e-05, 0.00023508071899414062, 0.0001468658447265625, 0.00014984607696533203, 3.933906555175781e-05, 0.0004515647888183594, 2.09808349609375e-05, 0.0018186569213867188, 0.00020301342010498047, 0.00092315673828125, 4.851818084716797e-05, 2.288818359375e-05, 2.5033950805664062e-06, 1.4662742614746094e-05, 9.083747863769531e-05, 4.2438507080078125e-05, 0.000698089599609375, 0.0001544952392578125, 0.10302734375, 0.0003192424774169922, 9.274482727050781e-05, 1.41796875], "tokens": [715, 343, 280, 390, 319, 484, 45, 528, 320, 400, 320, 813, 301, 528, 434, 551, 1125, 382, 3111, 32, 528, 415, 308, 106, 333, 345, 27, 301, 715, 484, 280, 323, 429, 816, 45, 528, 320, 813, 301, 715, 484, 280, 312, 429, 816, 45, 528, 320, 528, 343, 280, 225]}
{"line_number": 87, "line_type": "original", "code": "", "entropy": 4.32421875, "is_bug_line": false, "sus_score": 0.6172108054161072, "per_token_entropy": [4.32421875], "tokens": [203]}
{"line_number": 87, "line_type": "generated", "code": "\n        }\n\n        double fv = fx;\n        double fw = fx;\n\n        // First iteration.\n        final UnivariatePointValuePair first = new UnivariatePointValuePair(x, fx);\n        if (checker!= null && checker.converged(first)) {", "entropy": 0.246826171875, "is_bug_line": false, "sus_score": 0.6172108054161072, "per_token_entropy": [0.417724609375, 0.1856689453125, 0.499755859375, 0.6103515625, 0.1522216796875, 0.0018262863159179688, 0.00017523765563964844, 1.8835067749023438e-05, 0.0207977294921875, 0.006443023681640625, 0.0012083053588867188, 0.00386810302734375, 1.811981201171875e-05, 9.059906005859375e-06, 0.2213134765625, 1.4873046875, 1.484375, 1.5068359375, 0.04119873046875, 0.02813720703125, 1.677734375, 0.66796875, 9.5367431640625e-07, 0.035400390625, 1.3828277587890625e-05, 1.671875, 0.06494140625, 0.1632080078125, 0.0263824462890625, 1.3113021850585938e-06, 3.0159950256347656e-05, 1.0728836059570312e-06, 0.00033736228942871094, 0.1204833984375, 0.00018918514251708984, 0.265869140625, 0.0007023811340332031, 0.1788330078125, 0.666015625, 0.01263427734375, 0.020904541015625, 0.38671875, 2.491474151611328e-05, 0.0106964111328125, 0.0626220703125, 9.5367431640625e-06, 0.005336761474609375, 0.00022792816162109375, 0.000965118408203125, 0.11993408203125, 0.0026988983154296875, 0.0070037841796875], "tokens": [291, 320, 584, 2064, 36756, 280, 20670, 45, 291, 2064, 22085, 280, 20670, 45, 584, 434, 8819, 13330, 32, 291, 1158, 1683, 27623, 1943, 14782, 1932, 280, 537, 1683, 27623, 1943, 14782, 26, 106, 30, 20670, 293, 291, 415, 308, 17099, 863, 744, 962, 26664, 32, 32620, 3886, 26, 2232, 490, 301]}
{"line_number": 99, "line_type": "original", "code": "     * @throws NotStrictlyPositiveException if {@code abs <= 0}.", "entropy": 1.1064453125, "is_bug_line": false, "sus_score": 0.6137010455131531, "per_token_entropy": [6.66796875, 4.03125, 1.6748046875, 0.445068359375, 4.71875, 0.11724853515625, 1.5497207641601562e-06, 0.00028204917907714844, 4.029273986816406e-05, 0.093017578125, 0.1572265625, 0.0005879402160644531, 0.759765625, 0.11151123046875, 0.0024166107177734375, 0.0003180503845214844, 0.031494140625], "tokens": [262, 319, 477, 5117, 3182, 15891, 631, 17991, 984, 415, 3088, 687, 11366, 2511, 225, 34, 4009]}
{"line_number": 99, "line_type": "generated", "code": "\n            double tol2 = 2 * tol1;\n\n            // Check for convergence.\n            if (FastMath.abs(x - m) <= (tol2 - 0.5 * (b - a))) {\n                return current;\n            }\n\n           ", "entropy": 0.1331787109375, "is_bug_line": false, "sus_score": 0.6137010455131531, "per_token_entropy": [0.378662109375, 1.6962890625, 0.036346435546875, 0.0341796875, 0.25537109375, 0.052093505859375, 0.002010345458984375, 0.1756591796875, 0.01195526123046875, 2.9802322387695312e-06, 0.0037937164306640625, 0.3466796875, 0.3388671875, 0.03314208984375, 0.4990234375, 0.2269287109375, 0.158935546875, 0.04425048828125, 0.1246337890625, 0.1905517578125, 0.2724609375, 3.254413604736328e-05, 1.3947486877441406e-05, 0.0012969970703125, 0.0002351999282836914, 0.00012958049774169922, 0.00020802021026611328, 0.09356689453125, 8.440017700195312e-05, 0.0151214599609375, 0.0421142578125, 0.00125885009765625, 9.763240814208984e-05, 0.00107574462890625, 0.0096282958984375, 0.0004711151123046875, 2.193450927734375e-05, 0.0001456737518310547, 0.00121307373046875, 0.0008587837219238281, 2.181529998779297e-05, 0.000873565673828125, 7.56978988647461e-05, 0.0031833648681640625, 0.00958251953125, 0.124755859375, 1.2001953125, 0.42919921875, 0.0012359619140625, 0.0140380859375, 0.00011539459228515625, 0.092041015625], "tokens": [324, 2064, 26907, 36, 280, 225, 36, 319, 26907, 35, 45, 1064, 434, 3456, 436, 47454, 32, 324, 415, 308, 12200, 5717, 32, 3596, 26, 106, 429, 345, 27, 2511, 308, 14598, 36, 429, 225, 34, 32, 39, 319, 308, 84, 429, 312, 2610, 301, 400, 442, 1550, 45, 324, 320, 1064]}
{"line_number": 89, "line_type": "original", "code": "     * The arguments are used for implementing the original stopping criterion", "entropy": 2.5390625, "is_bug_line": false, "sus_score": 0.5809763073921204, "per_token_entropy": [5.6953125, 4.91015625, 2.365234375, 4.69921875, 0.4033203125, 0.055877685546875, 5.83203125, 0.9248046875, 0.314208984375, 2.0859375, 2.25, 0.939453125], "tokens": [262, 319, 886, 4209, 884, 1654, 436, 19359, 322, 4707, 31937, 29502]}
{"line_number": 89, "line_type": "generated", "code": "\n        while (true) {\n            double xm = 0.5 * (a + b);\n            double tol1 = relativeThreshold * Math.abs(x) + absoluteThreshold;\n            double tol2 = 2 * tol1;\n\n            //", "entropy": 0.12054443359375, "is_bug_line": false, "sus_score": 0.5809763073921204, "per_token_entropy": [0.64990234375, 0.998046875, 0.01861572265625, 0.49267578125, 0.0005755424499511719, 0.04150390625, 0.384521484375, 0.1456298828125, 0.5517578125, 0.006256103515625, 0.055267333984375, 0.08160400390625, 0.00013196468353271484, 0.01197052001953125, 0.0008287429809570312, 0.0013275146484375, 3.123283386230469e-05, 5.555152893066406e-05, 0.0002894401550292969, 1.4662742614746094e-05, 4.589557647705078e-05, 0.03424072265625, 0.028106689453125, 0.0026149749755859375, 0.06231689453125, 0.10797119140625, 0.0274200439453125, 3.2782554626464844e-05, 0.0080718994140625, 1.12109375, 0.0002372264862060547, 0.038665771484375, 3.421306610107422e-05, 0.0096282958984375, 2.8252601623535156e-05, 0.0014858245849609375, 0.0005884170532226562, 1.1563301086425781e-05, 6.401538848876953e-05, 0.0195159912109375, 0.01242828369140625, 0.00030612945556640625, 0.0018291473388671875, 0.0006022453308105469, 0.01053619384765625, 0.0006551742553710938, 0.11016845703125, 0.0004801750183105469, -0.0, 9.942054748535156e-05, 0.272216796875, 0.95849609375], "tokens": [291, 2218, 308, 1508, 27, 301, 324, 2064, 816, 95, 280, 225, 34, 32, 39, 319, 308, 83, 474, 323, 293, 324, 2064, 26907, 35, 280, 6491, 10675, 319, 4175, 32, 3596, 26, 106, 27, 474, 7976, 10675, 45, 324, 2064, 26907, 36, 280, 225, 36, 319, 26907, 35, 45, 1064, 434]}
{"line_number": 2238, "line_type": "original", "code": "", "entropy": 0.239501953125, "is_bug_line": false, "sus_score": 0.5704632997512817, "per_token_entropy": [0.239501953125], "tokens": [203]}
{"line_number": 2238, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5704632997512817, "per_token_entropy": [], "tokens": []}
{"line_number": 1823, "line_type": "original", "code": "", "entropy": 0.239501953125, "is_bug_line": false, "sus_score": 0.5692704916000366, "per_token_entropy": [0.239501953125], "tokens": [203]}
{"line_number": 1823, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5692704916000366, "per_token_entropy": [], "tokens": []}
{"line_number": 2255, "line_type": "original", "code": "", "entropy": 0.239501953125, "is_bug_line": false, "sus_score": 0.568977415561676, "per_token_entropy": [0.239501953125], "tokens": [203]}
{"line_number": 2255, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.568977415561676, "per_token_entropy": [], "tokens": []}
{"line_number": 2253, "line_type": "original", "code": "", "entropy": 0.239501953125, "is_bug_line": false, "sus_score": 0.5663174390792847, "per_token_entropy": [0.239501953125], "tokens": [203]}
{"line_number": 2253, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5663174390792847, "per_token_entropy": [], "tokens": []}
{"line_number": 532, "line_type": "original", "code": "", "entropy": 0.239501953125, "is_bug_line": false, "sus_score": 0.5550025105476379, "per_token_entropy": [0.239501953125], "tokens": [203]}
{"line_number": 532, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5550025105476379, "per_token_entropy": [], "tokens": []}
{"line_number": 1795, "line_type": "original", "code": "", "entropy": 0.239501953125, "is_bug_line": false, "sus_score": 0.5401403903961182, "per_token_entropy": [0.239501953125], "tokens": [203]}
{"line_number": 1795, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5401403903961182, "per_token_entropy": [], "tokens": []}
{"line_number": 78, "line_type": "original", "code": "            throw new NumberIsTooSmallException(rel, MIN_RELATIVE_TOLERANCE, true);", "entropy": 0.5869140625, "is_bug_line": false, "sus_score": 0.5398864150047302, "per_token_entropy": [4.65234375, 5.8828125, 0.01151275634765625, 0.476806640625, 0.0003399848937988281, 7.56978988647461e-05, 0.09466552734375, 7.152557373046875e-06, 0.027679443359375, 0.35888671875, 0.024444580078125, 0.0692138671875, 0.004772186279296875, 0.0024738311767578125, 0.00021946430206298828, 0.0001214742660522461, 0.0008382797241210938, 7.152557373046875e-07, 4.506111145019531e-05, 0.042449951171875, 1.263671875, 0.0003688335418701172], "tokens": [1468, 1422, 537, 5104, 1622, 20563, 12470, 984, 26, 2808, 30, 14369, 81, 16477, 13829, 81, 1407, 10062, 6307, 30, 861, 293]}
{"line_number": 78, "line_type": "generated", "code": "\n\n        final double fa = getRawFunctionValue(a);\n        final double fb = getRawFunctionValue(b);\n        if (fb < fa) {\n            final double tmp = a;\n            a = b;\n            b = tmp;\n\n            final double", "entropy": 0.2479248046875, "is_bug_line": false, "sus_score": 0.5398864150047302, "per_token_entropy": [1.7802734375, 1.9140625, 0.08514404296875, 1.2373046875, 0.023193359375, 0.82421875, 0.619140625, 0.2313232421875, 0.0667724609375, 0.04400634765625, 0.016357421875, 0.002300262451171875, 0.0164337158203125, 0.04925537109375, 0.0017404556274414062, 0.045318603515625, 0.00010657310485839844, 0.000514984130859375, 0.00017189979553222656, 0.00010132789611816406, 2.2649765014648438e-06, 1.4066696166992188e-05, 0.0002903938293457031, 1.4901161193847656e-05, 1.2001953125, 1.1181640625, 0.2265625, 0.89306640625, 0.39013671875, 0.0027484893798828125, 0.0018320083618164062, 0.0013628005981445312, 0.0633544921875, 0.97265625, 0.0157470703125, 0.50927734375, 0.0173492431640625, 0.01251983642578125, 7.62939453125e-06, 0.0173187255859375, 0.004192352294921875, 0.0012378692626953125, 0.00012755393981933594, 5.125999450683594e-06, 0.0004856586456298828, 7.104873657226562e-05, 4.875659942626953e-05, 0.0005903244018554688, 2.205371856689453e-05, 0.45751953125, 0.0288238525390625, 9.822845458984375e-05], "tokens": [584, 1158, 2064, 2093, 280, 622, 6189, 2447, 882, 26, 83, 293, 291, 1158, 2064, 22254, 280, 622, 6189, 2447, 882, 26, 84, 293, 291, 415, 308, 4342, 333, 2093, 27, 301, 324, 1158, 2064, 3691, 280, 312, 45, 324, 312, 280, 323, 45, 324, 323, 280, 3691, 45, 1064, 1158, 2064]}
{"line_number": 152, "line_type": "original", "code": "            final boolean stop = FastMath.abs(x - m) <= tol2 - 0.5 * (b - a);", "entropy": 1.4521484375, "is_bug_line": false, "sus_score": 0.5342170000076294, "per_token_entropy": [5.17578125, 11.6640625, 3.2265625, 1.361328125, 0.325927734375, 3.521484375, 0.00010907649993896484, 0.0012311935424804688, 0.020782470703125, 0.0018014907836914062, 5.6875, 0.056732177734375, 5.015625, 0.00498199462890625, 0.6298828125, 1.5869140625, 1.44921875, 0.80859375, 0.09600830078125, 0.00024330615997314453, 0.0015153884887695312, 0.00035572052001953125, 0.00650787353515625, 0.00611114501953125, 0.000690460205078125, 0.002658843994140625, 0.00044846534729003906, 0.01084136962890625], "tokens": [1468, 1158, 1905, 4719, 280, 15938, 5717, 32, 3596, 26, 106, 429, 345, 27, 2511, 26907, 36, 429, 225, 34, 32, 39, 319, 308, 84, 429, 312, 293]}
{"line_number": 152, "line_type": "generated", "code": "\n                    } else {\n                        e = a - x;", "entropy": 0.017852783203125, "is_bug_line": false, "sus_score": 0.5342170000076294, "per_token_entropy": [0.1417236328125, 0.0019550323486328125, 0.004573822021484375, 0.0019989013671875, 0.04364013671875, 0.001018524169921875, 0.00011622905731201172, 8.821487426757812e-06, 5.841255187988281e-05, 0.0001266002655029297, 0.001140594482421875], "tokens": [528, 320, 813, 301, 715, 484, 280, 312, 429, 816, 45]}
{"line_number": 90, "line_type": "original", "code": "     * of Brent's algorithm.", "entropy": 3.63671875, "is_bug_line": false, "sus_score": 0.5331085324287415, "per_token_entropy": [5.73828125, 6.69140625, 9.9453125, 3.59765625, 0.00392913818359375, 0.419921875, 1.9921875, 0.70947265625], "tokens": [262, 319, 432, 551, 16502, 1182, 8218, 32]}
{"line_number": 90, "line_type": "generated", "code": "\n        // First iteration.\n        while (true) {\n            double xm = 0.5 * (a + b);\n            double tol1 = relativeThreshold * FastMath.abs(x) + absoluteThreshold;\n            double tol2 = 2", "entropy": 0.18701171875, "is_bug_line": false, "sus_score": 0.5331085324287415, "per_token_entropy": [0.408935546875, 1.8291015625, 1.3818359375, 2.09375, 0.048248291015625, 0.034423828125, 0.9296875, 0.04388427734375, 0.62109375, 0.0005121231079101562, 0.03985595703125, 0.34228515625, 0.360107421875, 0.255859375, 0.01031494140625, 0.06610107421875, 0.11199951171875, 0.00023066997528076172, 0.01419830322265625, 0.0008988380432128906, 0.001346588134765625, 4.4465065002441406e-05, 4.744529724121094e-05, 0.0003371238708496094, 1.823902130126953e-05, 5.221366882324219e-05, 0.033233642578125, 0.0406494140625, 0.0016727447509765625, 0.04266357421875, 0.06964111328125, 0.049713134765625, 5.5670738220214844e-05, 0.0074005126953125, 0.79296875, 4.756450653076172e-05, 4.506111145019531e-05, 0.007480621337890625, 6.842613220214844e-05, 0.006969451904296875, 6.198883056640625e-05, 0.006305694580078125, 0.0022182464599609375, 1.5497207641601562e-05, 9.09566879272461e-05, 0.0204010009765625, 0.018890380859375, 0.0003197193145751953, 0.0011167526245117188, 0.001125335693359375, 0.0259857177734375, 0.0006461143493652344], "tokens": [291, 434, 8819, 13330, 32, 291, 2218, 308, 1508, 27, 301, 324, 2064, 816, 95, 280, 225, 34, 32, 39, 319, 308, 83, 474, 323, 293, 324, 2064, 26907, 35, 280, 6491, 10675, 319, 15938, 5717, 32, 3596, 26, 106, 27, 474, 7976, 10675, 45, 324, 2064, 26907, 36, 280, 225, 36]}
{"line_number": 265, "line_type": "original", "code": "                }", "entropy": 5.4921875, "is_bug_line": false, "sus_score": 0.5314664244651794, "per_token_entropy": [8.8125, 2.17578125], "tokens": [2071, 320]}
{"line_number": 265, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5314664244651794, "per_token_entropy": [], "tokens": []}
{"line_number": 233, "line_type": "original", "code": "", "entropy": 3.529296875, "is_bug_line": false, "sus_score": 0.5292975306510925, "per_token_entropy": [3.529296875], "tokens": [203]}
{"line_number": 233, "line_type": "generated", "code": "\n    private UnivariatePointValuePair select(UnivariatePointValuePair a,\n                                            UnivariatePointValuePair b,\n                                            boolean isMinim) {\n        if (a == null) {\n            return b;\n        }\n        if (b == null) {\n            return", "entropy": 0.0718994140625, "is_bug_line": false, "sus_score": 0.5292975306510925, "per_token_entropy": [0.2445068359375, 0.1800537109375, 0.2286376953125, 2.86102294921875e-06, 9.179115295410156e-05, 0.0001119375228881836, 0.406005859375, 0.36767578125, 0.849609375, 2.384185791015625e-06, 0.0002598762512207031, 1.7523765563964844e-05, 0.0012731552124023438, 0.00029969215393066406, 0.5693359375, 0.0015277862548828125, 2.384185791015625e-07, 1.6808509826660156e-05, 4.76837158203125e-07, 8.857250213623047e-05, 0.0018749237060546875, 0.006076812744140625, 0.09112548828125, 0.002658843994140625, 0.0004162788391113281, 0.0002129077911376953, 0.00897979736328125, 0.01114654541015625, 0.1490478515625, 0.2587890625, 0.01343536376953125, 0.0284271240234375, 0.033355712890625, 0.0004215240478515625, 0.029449462890625, 0.003131866455078125, 0.00981903076171875, 0.050872802734375, 0.01104736328125, 0.0004112720489501953, 0.0038471221923828125, 0.0004322528839111328, 0.1461181640625, 0.01690673828125, 0.0024776458740234375, 0.0016422271728515625, 0.0009074211120605469, 2.5987625122070312e-05, 0.0010471343994140625, 0.0003752708435058594, 0.0022106170654296875, 0.0018301010131835938], "tokens": [284, 945, 1683, 27623, 1943, 14782, 2192, 26, 1061, 27623, 1943, 14782, 312, 30, 3391, 1683, 27623, 1943, 14782, 323, 30, 3391, 1905, 438, 2928, 449, 27, 301, 291, 415, 308, 83, 610, 744, 27, 301, 324, 442, 323, 45, 291, 320, 291, 415, 308, 84, 610, 744, 27, 301, 324, 442]}
{"line_number": 65, "line_type": "original", "code": "     * @param rel Relative threshold.", "entropy": 1.8779296875, "is_bug_line": false, "sus_score": 0.526965320110321, "per_token_entropy": [5.53515625, 4.8671875, 1.2626953125, 0.6796875, 2.591796875, 0.01261138916015625, 0.058929443359375, 0.01538848876953125], "tokens": [262, 319, 477, 753, 1875, 29457, 10084, 32]}
{"line_number": 65, "line_type": "generated", "code": "\n        // Check arguments.\n        if (lo >= hi) {\n            throw new NumberIsTooSmallException(lo, hi, false);\n        }\n        if (relativeThreshold < MIN_RELATIVE_TOLERANCE) {\n            throw new NumberIsToo", "entropy": 0.28466796875, "is_bug_line": false, "sus_score": 0.526965320110321, "per_token_entropy": [0.4306640625, 1.3583984375, 1.9013671875, 2.09765625, 0.29296875, 0.06787109375, 0.5947265625, 0.07537841796875, 0.88330078125, 0.5830078125, 0.1148681640625, 0.00215911865234375, 0.0014095306396484375, 0.00986480712890625, 0.046905517578125, 0.004764556884765625, 0.36083984375, 0.00010502338409423828, 6.592273712158203e-05, 0.0005545616149902344, 2.86102294921875e-06, 0.0005154609680175781, 0.09039306640625, 0.0011272430419921875, 0.0267791748046875, 0.00030541419982910156, 0.8291015625, 8.0108642578125e-05, 0.0174713134765625, 0.0002567768096923828, 1.0244140625, 0.81494140625, 0.06488037109375, 2.578125, 0.00018537044525146484, 0.3564453125, 0.09173583984375, 1.0132789611816406e-05, 3.4689903259277344e-05, 2.181529998779297e-05, 3.5762786865234375e-07, 1.0013580322265625e-05, 1.1920928955078125e-07, 5.960464477539062e-07, 0.042755126953125, 0.0011453628540039062, 0.00878143310546875, 0.028228759765625, 0.0008878707885742188, 0.002140045166015625, 1.5139579772949219e-05, -0.0], "tokens": [291, 434, 3456, 4209, 32, 291, 415, 308, 315, 2377, 13677, 27, 301, 324, 1422, 537, 5104, 1622, 20563, 12470, 984, 26, 315, 30, 13677, 30, 901, 293, 291, 320, 291, 415, 308, 9535, 10675, 333, 14369, 81, 16477, 13829, 81, 1407, 10062, 6307, 27, 301, 324, 1422, 537, 5104, 1622, 20563]}
{"line_number": 148, "line_type": "original", "code": "            final double tol1 = relativeThreshold * FastMath.abs(x) + absoluteThreshold;", "entropy": 1.681640625, "is_bug_line": false, "sus_score": 0.5227150321006775, "per_token_entropy": [7.640625, 10.4453125, 0.2978515625, 3.275390625, 2.08984375, 0.79736328125, 6.5625, 0.364013671875, 0.354248046875, 1.703125, 1.9431114196777344e-05, 0.0004189014434814453, 0.03778076171875, 0.0014448165893554688, 0.0138092041015625, 0.0089263916015625, 0.0111846923828125, 0.016387939453125, 0.0002015829086303711, 0.020172119140625], "tokens": [1468, 1158, 2064, 26907, 35, 280, 6491, 10675, 319, 15938, 5717, 32, 3596, 26, 106, 27, 474, 7976, 10675, 45]}
{"line_number": 148, "line_type": "generated", "code": "\n                } else {\n                    // Bisection step.\n                    if (x < m) {\n                        e = b - x;\n                    } else {\n                        e = a - x;\n                    }\n                    d = 0.5 * e;\n                }\n\n               ", "entropy": 0.03973388671875, "is_bug_line": false, "sus_score": 0.5227150321006775, "per_token_entropy": [0.1259765625, 0.00713348388671875, 0.0811767578125, 0.0199432373046875, 0.1739501953125, 0.0167083740234375, 0.0548095703125, 0.390869140625, 2.2649765014648438e-05, 0.1844482421875, 0.00807952880859375, 0.003566741943359375, 0.5498046875, 0.0016584396362304688, 0.0024318695068359375, 0.10540771484375, 1.1801719665527344e-05, 0.0001233816146850586, 0.0003228187561035156, 0.0009055137634277344, 0.0014600753784179688, 0.0001010894775390625, 0.00036716461181640625, 0.0005140304565429688, 0.0006718635559082031, 3.600120544433594e-05, 0.0004878044128417969, 4.100799560546875e-05, 0.001911163330078125, 0.00014448165893554688, 0.00034117698669433594, 2.9087066650390625e-05, 2.014636993408203e-05, 2.384185791015625e-06, 1.800060272216797e-05, 8.404254913330078e-05, 4.744529724121094e-05, 0.00022339820861816406, 8.726119995117188e-05, 0.005771636962890625, 0.0001201629638671875, 2.7894973754882812e-05, 0.01033782958984375, 1.633167266845703e-05, 5.9604644775390625e-06, 1.5497207641601562e-06, 0.0011281967163085938, 3.325939178466797e-05, 3.5643577575683594e-05, 0.0099029541015625, 0.0005774497985839844, 0.303955078125], "tokens": [400, 320, 813, 301, 528, 434, 551, 1125, 382, 3111, 32, 528, 415, 308, 106, 333, 345, 27, 301, 715, 484, 280, 323, 429, 816, 45, 528, 320, 813, 301, 715, 484, 280, 312, 429, 816, 45, 528, 320, 528, 343, 280, 225, 34, 32, 39, 319, 484, 45, 400, 320, 2110]}
{"line_number": 562, "line_type": "original", "code": "", "entropy": 0.239501953125, "is_bug_line": false, "sus_score": 0.518216073513031, "per_token_entropy": [0.239501953125], "tokens": [203]}
{"line_number": 562, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.518216073513031, "per_token_entropy": [], "tokens": []}
{"line_number": 234, "line_type": "original", "code": "                // Update a, b, v, w and x.", "entropy": 2.677734375, "is_bug_line": false, "sus_score": 0.512265145778656, "per_token_entropy": [5.9609375, 8.515625, 7.1171875, 3.927734375, 2.537109375, 0.1627197265625, 0.93115234375, 1.017578125, 0.15869140625, 0.71533203125, 1.8857421875, 1.40625, 0.477294921875], "tokens": [2071, 434, 4000, 312, 30, 323, 30, 354, 30, 341, 461, 816, 32]}
{"line_number": 234, "line_type": "generated", "code": "\n                                         UnivariatePointValuePair b,\n                                         boolean isMinim) {\n        if (a == null) {\n            return b;\n        }\n        if (b == null) {\n            return a;\n        }\n        if (isMinim) {\n            if", "entropy": 0.0926513671875, "is_bug_line": false, "sus_score": 0.512265145778656, "per_token_entropy": [2.01953125, 0.00907135009765625, 1.430511474609375e-06, 3.647804260253906e-05, 1.0728836059570312e-06, 0.0003962516784667969, 0.0163726806640625, 0.03240966796875, 0.087890625, 0.004512786865234375, 0.00042748451232910156, 0.0002359151840209961, 0.005283355712890625, 0.0123443603515625, 0.1759033203125, 0.207763671875, 0.009521484375, 0.0264129638671875, 0.030731201171875, 0.000560760498046875, 0.0338134765625, 0.00365447998046875, 0.01457977294921875, 0.05804443359375, 0.0104827880859375, 0.0004715919494628906, 0.005290985107421875, 0.0006766319274902344, 0.1695556640625, 0.015625, 0.0020694732666015625, 0.001377105712890625, 0.001087188720703125, 3.1113624572753906e-05, 0.0010747909545898438, 0.00032806396484375, 0.00281524658203125, 0.002155303955078125, 0.003021240234375, 4.3511390686035156e-05, 0.0028839111328125, 7.164478302001953e-05, 0.3369140625, 0.6123046875, 0.078857421875, 0.125244140625, 0.018096923828125, 0.0001437664031982422, 0.102783203125, 0.0009546279907226562, 0.05291748046875, 0.52099609375], "tokens": [11244, 1683, 27623, 1943, 14782, 323, 30, 11244, 1905, 438, 2928, 449, 27, 301, 291, 415, 308, 83, 610, 744, 27, 301, 324, 442, 323, 45, 291, 320, 291, 415, 308, 84, 610, 744, 27, 301, 324, 442, 312, 45, 291, 320, 291, 415, 308, 297, 2928, 449, 27, 301, 324, 415]}
{"line_number": 289, "line_type": "original", "code": "        if (b == null) {", "entropy": 1.26953125, "is_bug_line": false, "sus_score": 0.5041691660881042, "per_token_entropy": [5.19140625, 2.380859375, 0.09832763671875, 2.185546875, 0.2261962890625, 0.0007452964782714844, 0.01190948486328125, 0.0609130859375], "tokens": [351, 415, 308, 84, 610, 744, 27, 301]}
{"line_number": 289, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5041691660881042, "per_token_entropy": [], "tokens": []}
