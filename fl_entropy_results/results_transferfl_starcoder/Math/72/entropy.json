{"line_number": 225, "line_type": "original", "code": "                         double x1, double y1,", "entropy": 2.9296875, "is_bug_line": false, "sus_score": 0.48188337683677673, "per_token_entropy": [7.84765625, 1.49609375, 6.27734375, 0.6767578125, 7.2578125, 2.376953125, 0.381591796875, 0.0059814453125, 0.036163330078125], "tokens": [8240, 2064, 816, 35, 30, 2064, 533, 35, 30]}
{"line_number": 225, "line_type": "generated", "code": "\n                    double q = y0 / y2;\n                    double r = y1 / y2;\n                    p = r * (2.0 * x1 - x0) * (q - r);\n                    p1 = (q - 1.", "entropy": 0.2369384765625, "is_bug_line": false, "sus_score": 0.48188337683677673, "per_token_entropy": [0.167236328125, 0.89599609375, 0.2344970703125, 0.27392578125, 1.23828125, 0.1591796875, 0.033203125, 0.59716796875, 0.008575439453125, 0.006664276123046875, 0.05975341796875, 0.1123046875, 0.028045654296875, 0.2117919921875, 0.007434844970703125, 0.39404296875, 0.006618499755859375, 0.0008435249328613281, 0.01432037353515625, 0.0002524852752685547, 0.05255126953125, 0.958984375, 0.0762939453125, 1.10546875, 0.1331787109375, 0.038818359375, 0.59814453125, 0.638671875, 0.005611419677734375, 0.25927734375, 0.007579803466796875, 0.2257080078125, 0.01021575927734375, 0.53515625, 0.103271484375, 0.182861328125, 0.048919677734375, 0.1103515625, 1.275390625, 0.0350341796875, 0.81103515625, 0.21142578125, 0.024749755859375, 0.0626220703125, 0.0714111328125, 0.0014600753784179688, 0.10675048828125, 0.140869140625, 0.0031032562255859375, 0.00439453125, 0.0001876354217529297, 0.031707763671875], "tokens": [528, 2064, 2678, 280, 533, 34, 517, 533, 36, 45, 528, 2064, 540, 280, 533, 35, 517, 533, 36, 45, 528, 298, 280, 540, 319, 308, 36, 32, 34, 319, 816, 35, 429, 816, 34, 27, 319, 308, 99, 429, 540, 293, 528, 298, 35, 280, 308, 99, 429, 225, 35, 32]}
{"line_number": 113, "line_type": "original", "code": "        double yMin = f.value(min);", "entropy": 1.01953125, "is_bug_line": false, "sus_score": 0.4805544316768646, "per_token_entropy": [6.69921875, 2.4296875, 1.4169921875, 0.4736328125, 0.0645751953125, 0.1114501953125, 0.01092529296875, 0.0017309188842773438, 0.00044465065002441406, 0.00678253173828125, 0.00415802001953125], "tokens": [351, 2064, 533, 2928, 280, 296, 32, 853, 26, 887, 293]}
{"line_number": 113, "line_type": "generated", "code": "\n    public double solve(final UnivariateRealFunction f,\n                        final double min, final double max)\n        throws MaxIterationsExceededException, FunctionEvaluationException {\n\n        clearResult();\n        verifyInterval(min, max);\n\n        // return the first endpoint if it", "entropy": 0.11773681640625, "is_bug_line": false, "sus_score": 0.4805544316768646, "per_token_entropy": [0.07366943359375, 0.32568359375, 0.0082244873046875, 0.003986358642578125, 0.00710296630859375, 0.34521484375, 0.004283905029296875, 1.7881393432617188e-06, 3.886222839355469e-05, 4.8279762268066406e-05, 0.0007429122924804688, 0.00032067298889160156, 0.6689453125, 0.0400390625, 0.0004146099090576172, 0.0011568069458007812, 5.900859832763672e-05, 0.00872039794921875, 7.140636444091797e-05, 0.0002567768096923828, 0.0015010833740234375, 0.046356201171875, 0.00010979175567626953, 0.005382537841796875, 5.602836608886719e-06, 3.6954879760742188e-06, 4.410743713378906e-06, 0.0014829635620117188, 0.009429931640625, 4.6133995056152344e-05, 2.9802322387695312e-06, 0.0198974609375, 0.3125, 0.382080078125, 0.0002104043960571289, 0.0001659393310546875, 0.12744140625, 0.11016845703125, 1.5546875, 0.00296783447265625, 0.00630950927734375, 0.00041604042053222656, 0.005718231201171875, 0.01152801513671875, 0.1951904296875, 0.580078125, 0.84521484375, 0.0694580078125, 0.32275390625, 0.0100555419921875, 0.0106201171875, 0.0014972686767578125], "tokens": [284, 562, 2064, 10932, 26, 3220, 1683, 27623, 6877, 2447, 296, 30, 715, 1158, 2064, 1847, 30, 1158, 2064, 1769, 27, 291, 2571, 7462, 31219, 28741, 984, 30, 4540, 19637, 984, 301, 584, 4233, 1394, 473, 291, 6144, 5757, 26, 887, 30, 1769, 293, 584, 434, 442, 322, 1932, 6998, 415, 561]}
{"line_number": 180, "line_type": "original", "code": "            if (Math.abs(yMin) <= functionValueAccuracy) {", "entropy": 1.474609375, "is_bug_line": false, "sus_score": 0.4800790250301361, "per_token_entropy": [6.0625, 1.474609375, 0.08538818359375, 0.437744140625, 0.003894805908203125, 0.010467529296875, 0.001239776611328125, 2.044921875, 12.53125, 0.1285400390625, 0.1563720703125, 0.074951171875, 0.002532958984375, 0.0002903938293457031, 0.46337890625, 0.12310791015625], "tokens": [1468, 415, 308, 5717, 32, 3596, 26, 107, 2928, 27, 2511, 667, 882, 26201, 27, 301]}
{"line_number": 180, "line_type": "generated", "code": "\n        if (Math.abs(delta) <= functionValueAccuracy) {\n            // we have a solution\n            setResult(x1, y1);\n            return x1;\n        }\n\n        // set up linear interpolation\n        double slope = (y1 -", "entropy": 0.533203125, "is_bug_line": false, "sus_score": 0.4800790250301361, "per_token_entropy": [0.303955078125, 1.68359375, 0.100830078125, 0.52734375, 0.00327301025390625, 0.01097869873046875, 0.001155853271484375, 0.1929931640625, 0.019744873046875, 0.67724609375, 0.880859375, 0.0243377685546875, 0.001338958740234375, 0.2322998046875, 0.031280517578125, 0.092529296875, 1.0048828125, 1.986328125, 1.2080078125, 1.5712890625, 3.130859375, 0.9140625, 0.1907958984375, 0.003063201904296875, 0.004833221435546875, 0.0186309814453125, 0.328369140625, 0.0032749176025390625, 0.78662109375, 0.0019989013671875, 0.00786590576171875, 0.08258056640625, 0.026031494140625, 0.00620269775390625, 0.0015878677368164062, 0.0004863739013671875, 0.0169677734375, 0.0009660720825195312, 0.5068359375, 0.74658203125, 3.3828125, 0.736328125, 2.009765625, 1.2470703125, 0.444580078125, 0.61669921875, 1.4384765625, 0.07696533203125, 0.055877685546875, 0.07757568359375, 0.289794921875, 0.00809478759765625], "tokens": [291, 415, 308, 5717, 32, 3596, 26, 6558, 27, 2511, 667, 882, 26201, 27, 301, 324, 434, 996, 1159, 312, 5295, 324, 739, 1394, 26, 106, 35, 30, 533, 35, 293, 324, 442, 816, 35, 45, 291, 320, 584, 434, 739, 973, 10081, 23334, 291, 2064, 33327, 280, 308, 107, 35, 429]}
{"line_number": 106, "line_type": "original", "code": "        double yInitial = f.value(initial);", "entropy": 1.12109375, "is_bug_line": false, "sus_score": 0.4800790250301361, "per_token_entropy": [4.03515625, 3.626953125, 1.19140625, 3.259765625, 0.026702880859375, 0.1280517578125, 0.00958251953125, 0.00511932373046875, 0.004283905029296875, 0.040924072265625, 0.0113067626953125], "tokens": [351, 2064, 533, 4678, 280, 296, 32, 853, 26, 4332, 293]}
{"line_number": 106, "line_type": "generated", "code": "\n     * @return the value where the function is zero\n     * @throws MaxIterationsExceededException if the maximum iteration count\n     * is exceeded\n     * @throws FunctionEvaluationException if an error occurs evaluating\n     * the function\n     * @throws IllegalArgumentException if the function", "entropy": 0.119140625, "is_bug_line": false, "sus_score": 0.4800790250301361, "per_token_entropy": [0.1285400390625, 0.03533935546875, 0.01213836669921875, 0.1072998046875, 0.112548828125, 0.055511474609375, 0.00623321533203125, 0.01043701171875, 0.004634857177734375, 0.00067138671875, 0.0009207725524902344, 0.271240234375, 0.00920867919921875, 0.0030155181884765625, 0.0214996337890625, 0.039520263671875, 6.556510925292969e-05, 9.894371032714844e-05, 3.719329833984375e-05, 1.044921875, 0.02978515625, 0.0291900634765625, 0.2255859375, 0.06842041015625, 0.4326171875, 7.462501525878906e-05, 0.03515625, 0.0003936290740966797, 0.1591796875, 0.007205963134765625, 0.0003733634948730469, 0.0020732879638671875, 0.00586700439453125, 0.0001233816146850586, 0.00019824504852294922, 0.0109405517578125, 0.0704345703125, 0.0008425712585449219, 0.0026950836181640625, 0.04925537109375, 0.11541748046875, 0.00020766258239746094, 0.80224609375, 0.0019350051879882812, 0.051666259765625, 0.2257080078125, 0.0015926361083984375, 0.022186279296875, 0.03277587890625, 0.0160675048828125, 0.6669921875, 1.2626953125], "tokens": [275, 319, 477, 601, 322, 786, 2154, 322, 667, 438, 5934, 275, 319, 477, 5117, 7462, 31219, 28741, 984, 415, 322, 7091, 13330, 2385, 275, 319, 438, 31793, 275, 319, 477, 5117, 4540, 19637, 984, 415, 600, 1048, 12984, 38680, 275, 319, 322, 667, 275, 319, 477, 5117, 12137, 415, 322, 667]}
{"line_number": 114, "line_type": "original", "code": "        if (Math.abs(yMin) <= functionValueAccuracy) {", "entropy": 1.0830078125, "is_bug_line": false, "sus_score": 0.475493460893631, "per_token_entropy": [6.2421875, 7.3984375, 0.04278564453125, 1.4736328125, 0.004268646240234375, 0.260009765625, 0.0028057098388671875, 0.337158203125, 1.2255859375, 0.0364990234375, 0.1553955078125, 0.053558349609375, 0.0023212432861328125, 0.0003368854522705078, 0.0633544921875, 0.0308837890625], "tokens": [351, 415, 308, 5717, 32, 3596, 26, 107, 2928, 27, 2511, 667, 882, 26201, 27, 301]}
{"line_number": 114, "line_type": "generated", "code": "\n        final double min, final double max)\n        throws MaxIterationsExceededException, FunctionEvaluationException {\n\n        clearResult();\n        verifySequence(min, max);\n\n        // return the first endpoint if it is good enough\n        double yMin = f.value(", "entropy": 0.10711669921875, "is_bug_line": false, "sus_score": 0.475493460893631, "per_token_entropy": [0.93115234375, 0.24267578125, 0.0023899078369140625, 0.01104736328125, 0.0007739067077636719, 0.07080078125, 0.0001806020736694336, 0.006267547607421875, 0.0195159912109375, 0.2275390625, 0.002193450927734375, 0.00714874267578125, 6.318092346191406e-06, 4.172325134277344e-06, 3.2186508178710938e-06, 0.0027103424072265625, 0.019500732421875, 2.956390380859375e-05, 1.430511474609375e-06, 0.0179443359375, 0.48486328125, 0.359619140625, 0.00019025802612304688, 0.00021660327911376953, 0.1690673828125, 0.12188720703125, 0.650390625, 0.0007762908935546875, 0.0010623931884765625, 0.00014007091522216797, 0.03729248046875, 0.004154205322265625, 0.250244140625, 0.5595703125, 0.79443359375, 0.086181640625, 0.282958984375, 0.0161590576171875, 0.015380859375, 0.001621246337890625, 0.0009369850158691406, 0.00899505615234375, 0.0004680156707763672, 0.03094482421875, 0.0701904296875, 0.031524658203125, 0.02044677734375, 0.0022602081298828125, 0.006061553955078125, 8.392333984375e-05, 0.0003902912139892578, 4.184246063232422e-05], "tokens": [291, 1158, 2064, 1847, 30, 1158, 2064, 1769, 27, 291, 2571, 7462, 31219, 28741, 984, 30, 4540, 19637, 984, 301, 584, 4233, 1394, 473, 291, 6144, 5897, 26, 887, 30, 1769, 293, 584, 434, 442, 322, 1932, 6998, 415, 561, 438, 4644, 8448, 291, 2064, 533, 2928, 280, 296, 32, 853, 26]}
{"line_number": 183, "line_type": "original", "code": "            } else if (Math.abs(yMax) <= functionValueAccuracy) {", "entropy": 1.2578125, "is_bug_line": false, "sus_score": 0.4754301607608795, "per_token_entropy": [6.92578125, 6.359375, 1.2275390625, 1.26953125, 0.09423828125, 1.54296875, 0.0174407958984375, 0.0233612060546875, 0.0045928955078125, 0.7451171875, 3.498046875, 0.10491943359375, 0.4130859375, 0.11163330078125, 0.003566741943359375, 0.00040984153747558594, 0.2130126953125, 0.078369140625], "tokens": [1468, 320, 813, 415, 308, 5717, 32, 3596, 26, 107, 2708, 27, 2511, 667, 882, 26201, 27, 301]}
{"line_number": 183, "line_type": "generated", "code": "\n        while (i < maxIterations) {\n            // check for convergence\n            if (FastMath.abs(delta) <= functionValueAccuracy ||\n                FastMath.abs(oldDelta) <= functionValueAccuracy) {\n                setResult(x1, y", "entropy": 0.33154296875, "is_bug_line": false, "sus_score": 0.4754301607608795, "per_token_entropy": [0.29296875, 0.53271484375, 0.42822265625, 0.9443359375, 0.1854248046875, 1.4462890625, 0.88623046875, 0.5771484375, 0.0306243896484375, 0.480224609375, 1.06640625, 2.64453125, 0.431396484375, 0.2744140625, 0.220703125, 0.345947265625, 0.1497802734375, 0.72802734375, 0.0004191398620605469, 0.00012183189392089844, 0.0189971923828125, 0.0031375885009765625, 0.271484375, 0.00911712646484375, 0.37548828125, 0.18310546875, 0.0283050537109375, 0.0013427734375, 1.8486328125, 0.42822265625, 0.1839599609375, 4.291534423828125e-06, 1.2278556823730469e-05, 0.006710052490234375, 0.0024356842041015625, 0.34423828125, 2.6106834411621094e-05, 0.302490234375, 0.049713134765625, 0.1829833984375, 0.0021343231201171875, 4.2438507080078125e-05, 0.16552734375, 0.0292510986328125, 0.1400146484375, 0.335693359375, 0.0026874542236328125, 0.0093231201171875, 0.04095458984375, 0.27783203125, 0.005710601806640625, 0.32080078125], "tokens": [291, 2218, 308, 91, 333, 1769, 31219, 27, 301, 324, 434, 1505, 436, 47454, 324, 415, 308, 12200, 5717, 32, 3596, 26, 6558, 27, 2511, 667, 882, 26201, 1276, 400, 15938, 5717, 32, 3596, 26, 1455, 9189, 27, 2511, 667, 882, 26201, 27, 301, 400, 739, 1394, 26, 106, 35, 30, 533]}
{"line_number": 107, "line_type": "original", "code": "        if (Math.abs(yInitial) <= functionValueAccuracy) {", "entropy": 0.74267578125, "is_bug_line": false, "sus_score": 0.47321903705596924, "per_token_entropy": [2.966796875, 2.17578125, 0.1806640625, 1.2626953125, 0.00257110595703125, 0.14404296875, 0.0032711029052734375, 0.5791015625, 4.01171875, 0.01007080078125, 0.1490478515625, 0.11505126953125, 0.0170440673828125, 0.00128173828125, 0.031036376953125, 0.2357177734375], "tokens": [351, 415, 308, 5717, 32, 3596, 26, 107, 4678, 27, 2511, 667, 882, 26201, 27, 301]}
{"line_number": 107, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Find a zero in the given interval.\n     * <p>\n     * This method assumes that the values of the function at the endpoints\n     * have opposite signs. An <code>IllegalArgumentException</code> is thrown\n     * if", "entropy": 0.26611328125, "is_bug_line": false, "sus_score": 0.47321903705596924, "per_token_entropy": [2.28125, 0.450927734375, 0.208740234375, 0.068603515625, 0.056121826171875, 0.00021004676818847656, 0.802734375, 0.045379638671875, 0.00916290283203125, 0.436767578125, 0.05548095703125, 0.046173095703125, 0.00335693359375, 1.0751953125, 0.07366943359375, 0.00072479248046875, 0.15673828125, 0.0030956268310546875, 0.002704620361328125, 0.12188720703125, 3.063678741455078e-05, 1.55078125, 0.231201171875, 1.0830078125, 0.1527099609375, 0.232177734375, 0.84814453125, 0.00878143310546875, 0.007232666015625, 0.01299285888671875, 0.0172271728515625, 0.0655517578125, 0.250244140625, 0.72509765625, 2.3603439331054688e-05, 0.1978759765625, 0.0120086669921875, 0.05340576171875, 0.314208984375, 1.6875, 0.0176849365234375, 0.0007572174072265625, 0.0006289482116699219, 0.01110076904296875, 0.0013055801391601562, 6.079673767089844e-06, 0.0002027750015258789, 0.0556640625, 0.178466796875, 0.1968994140625, 2.5510787963867188e-05, 0.023345947265625], "tokens": [284, 320, 446, 1022, 275, 319, 7477, 312, 5934, 328, 322, 2702, 7898, 32, 275, 319, 333, 98, 48, 275, 319, 1348, 1411, 22416, 688, 322, 2078, 432, 322, 667, 821, 322, 17532, 275, 319, 1159, 30519, 39842, 32, 2244, 333, 687, 48, 25907, 377, 687, 48, 438, 12163, 275, 319, 415]}
{"line_number": 115, "line_type": "original", "code": "            setResult(yMin, 0);", "entropy": 1.9423828125, "is_bug_line": true, "sus_score": 0.4707469046115875, "per_token_entropy": [7.38671875, 8.0546875, 0.22998046875, 0.0291748046875, 1.9052734375, 1.6259765625, 0.01215362548828125, 0.156982421875, 0.01131439208984375, 0.01076507568359375], "tokens": [1468, 739, 1394, 26, 107, 2928, 30, 225, 34, 293]}
{"line_number": 115, "line_type": "generated", "code": "\n        throws MaxIterationsExceededException, FunctionEvaluationException {\n\n        clearResult();\n        verifySequence(min, max);\n\n        // return the first endpoint if it is good enough\n        double yMin = f.value(min);\n        if (Math.abs(", "entropy": 0.10906982421875, "is_bug_line": true, "sus_score": 0.4707469046115875, "per_token_entropy": [0.334228515625, 0.66259765625, 0.0281219482421875, 1.1205673217773438e-05, 4.5299530029296875e-06, 5.364418029785156e-06, 0.00966644287109375, 0.0283966064453125, 8.344650268554688e-06, 2.384185791015625e-06, 0.0325927734375, 0.56640625, 0.6728515625, 0.0003108978271484375, 0.0004100799560546875, 0.1334228515625, 0.108154296875, 0.74462890625, 0.0006136894226074219, 0.0009746551513671875, 0.00011682510375976562, 0.037384033203125, 0.0040435791015625, 0.267578125, 0.5283203125, 0.88623046875, 0.07720947265625, 0.2939453125, 0.01142120361328125, 0.01345062255859375, 0.001918792724609375, 0.000843048095703125, 0.01039886474609375, 0.00042438507080078125, 0.0166473388671875, 0.0899658203125, 0.032440185546875, 0.0191802978515625, 0.0021953582763671875, 0.00775146484375, 8.666515350341797e-05, 0.0004737377166748047, 2.3245811462402344e-05, 0.0003216266632080078, 9.59634780883789e-05, 0.02099609375, 0.01096343994140625, 0.0007810592651367188, 0.0113983154296875, 0.0003597736358642578, 6.0677528381347656e-05, 2.586841583251953e-05], "tokens": [291, 2571, 7462, 31219, 28741, 984, 30, 4540, 19637, 984, 301, 584, 4233, 1394, 473, 291, 6144, 5897, 26, 887, 30, 1769, 293, 584, 434, 442, 322, 1932, 6998, 415, 561, 438, 4644, 8448, 291, 2064, 533, 2928, 280, 296, 32, 853, 26, 887, 293, 291, 415, 308, 5717, 32, 3596, 26]}
{"line_number": 116, "line_type": "original", "code": "            return result;", "entropy": 5.29296875, "is_bug_line": false, "sus_score": 0.4695316255092621, "per_token_entropy": [5.16015625, 12.828125, 3.16015625, 0.01727294921875], "tokens": [1468, 442, 1056, 45]}
{"line_number": 116, "line_type": "generated", "code": "\n        FunctionEvaluationException {\n\n        clearResult();\n        verifyBracketing(min, max);\n\n        // return the first endpoint if it is good enough\n        double yMin = f.value(min);\n        if (Math.abs(yMin) <= function", "entropy": 0.1556396484375, "is_bug_line": false, "sus_score": 0.4695316255092621, "per_token_entropy": [1.056640625, 0.1700439453125, 0.00030922889709472656, 7.653236389160156e-05, 0.06719970703125, 0.466796875, 0.77197265625, 0.0003323554992675781, 0.0003204345703125, 0.132568359375, 0.1204833984375, 1.3203125, 0.2666015625, 0.002140045166015625, 0.4013671875, 0.00030994415283203125, 0.0207061767578125, 0.440185546875, 0.35546875, 0.59912109375, 1.1435546875, 0.0927734375, 0.38232421875, 0.01395416259765625, 0.01336669921875, 0.002017974853515625, 0.0009522438049316406, 0.01482391357421875, 0.000530242919921875, 0.01403045654296875, 0.082763671875, 0.032073974609375, 0.0269012451171875, 0.0022144317626953125, 0.0067901611328125, 4.8995018005371094e-05, 0.0003190040588378906, 1.8835067749023438e-05, 0.0002779960632324219, 9.167194366455078e-05, 0.02752685546875, 0.01422119140625, 0.0008907318115234375, 0.0137481689453125, 0.0007910728454589844, 6.29425048828125e-05, 3.457069396972656e-05, 0.000347137451171875, 0.0003476142883300781, 0.0002186298370361328, 0.00647735595703125, 0.0037517547607421875], "tokens": [291, 4540, 19637, 984, 301, 584, 4233, 1394, 473, 291, 6144, 24086, 299, 26, 887, 30, 1769, 293, 584, 434, 442, 322, 1932, 6998, 415, 561, 438, 4644, 8448, 291, 2064, 533, 2928, 280, 296, 32, 853, 26, 887, 293, 291, 415, 308, 5717, 32, 3596, 26, 107, 2928, 27, 2511, 667]}
{"line_number": 184, "line_type": "original", "code": "                setResult(max, 0);", "entropy": 3.001953125, "is_bug_line": false, "sus_score": 0.463447242975235, "per_token_entropy": [6.78125, 5.33203125, 0.06396484375, 0.0164794921875, 10.46875, 1.78515625, 2.349609375, 0.10894775390625, 0.1170654296875], "tokens": [2071, 739, 1394, 26, 1449, 30, 225, 34, 293]}
{"line_number": 184, "line_type": "generated", "code": "\n            // Check for convergence.\n            if (FastMath.abs(delta) <= functionValueAccuracy) {\n                setResult(x1, y1);\n                return x1;\n            }\n\n            // Check for exceeding iteration count.\n            ++i;", "entropy": 0.321533203125, "is_bug_line": false, "sus_score": 0.463447242975235, "per_token_entropy": [0.295166015625, 0.9013671875, 3.26953125, 0.40869140625, 0.35009765625, 0.462890625, 0.1497802734375, 0.45703125, 0.11175537109375, 0.96142578125, 0.0004734992980957031, 0.00014257431030273438, 0.0177764892578125, 0.0023441314697265625, 0.257568359375, 0.0100860595703125, 0.251708984375, 0.658203125, 0.023712158203125, 0.0017595291137695312, 0.335205078125, 0.01174163818359375, 0.11334228515625, 0.341796875, 0.0017347335815429688, 0.006206512451171875, 0.027587890625, 0.2626953125, 0.006214141845703125, 0.2064208984375, 0.002742767333984375, 0.0199432373046875, 0.031585693359375, 0.1751708984375, 0.007404327392578125, 0.0007615089416503906, 0.00029730796813964844, 0.0187530517578125, 0.0005078315734863281, 0.21826171875, 0.322998046875, 1.8154296875, 0.1810302734375, 1.064453125, 0.0004811286926269531, 1.8115234375, 0.060272216796875, 0.160400390625, 0.033782958984375, 0.8837890625, 0.0037937164306640625, 0.00025773048400878906], "tokens": [324, 434, 3456, 436, 47454, 32, 324, 415, 308, 12200, 5717, 32, 3596, 26, 6558, 27, 2511, 667, 882, 26201, 27, 301, 400, 739, 1394, 26, 106, 35, 30, 533, 35, 293, 400, 442, 816, 35, 45, 324, 320, 1064, 434, 3456, 436, 27419, 299, 13330, 2385, 32, 324, 3311, 91, 45]}
{"line_number": 103, "line_type": "original", "code": "        verifySequence(min, initial, max);", "entropy": 2.466796875, "is_bug_line": false, "sus_score": 0.441275030374527, "per_token_entropy": [4.51953125, 10.59375, 4.27734375, 0.04510498046875, 1.341796875, 0.043182373046875, 3.16015625, 0.01485443115234375, 0.290283203125, 0.39013671875], "tokens": [351, 6144, 5897, 26, 887, 30, 2815, 30, 1769, 293]}
{"line_number": 103, "line_type": "generated", "code": "\n     * @param f function to solve.\n     * @param min the lower bound for the interval.\n     * @param max the upper bound for the interval.\n     * @return the value where the function is zero\n     * @throws MaxIterationsExceededException", "entropy": 0.05181884765625, "is_bug_line": false, "sus_score": 0.441275030374527, "per_token_entropy": [0.4951171875, 0.08258056640625, 0.357666015625, 0.0107269287109375, 0.0721435546875, 0.09906005859375, 0.004337310791015625, 0.0105133056640625, 0.08447265625, 0.0207366943359375, 0.00014126300811767578, 0.0004711151123046875, 0.0006818771362304688, 0.14794921875, 0.269287109375, 0.0111541748046875, 0.002658843994140625, 0.01198577880859375, 0.0006213188171386719, 0.00881195068359375, 0.0196685791015625, 0.003147125244140625, 3.719329833984375e-05, 0.00011050701141357422, 0.00031375885009765625, 0.60546875, 0.0009813308715820312, 0.0007801055908203125, 0.00038814544677734375, 0.00020837783813476562, 2.8014183044433594e-05, 0.00022864341735839844, 0.0137176513671875, 0.0231475830078125, 0.0003554821014404297, 0.00665283203125, 0.08428955078125, 0.06781005859375, 0.02227783203125, 0.001598358154296875, 0.00399017333984375, 0.002109527587890625, 0.0003180503845214844, 0.0004227161407470703, 0.11279296875, 0.003124237060546875, 0.0020732879638671875, 0.0138702392578125, 0.01390838623046875, 1.9550323486328125e-05, 3.4928321838378906e-05, 3.266334533691406e-05], "tokens": [275, 319, 477, 753, 296, 667, 372, 10932, 32, 275, 319, 477, 753, 1847, 322, 7216, 5085, 436, 322, 7898, 32, 275, 319, 477, 753, 1769, 322, 8342, 5085, 436, 322, 7898, 32, 275, 319, 477, 601, 322, 786, 2154, 322, 667, 438, 5934, 275, 319, 477, 5117, 7462, 31219, 28741, 984]}
{"line_number": 102, "line_type": "original", "code": "        clearResult();", "entropy": 3.830078125, "is_bug_line": false, "sus_score": 0.4381943643093109, "per_token_entropy": [4.22265625, 10.9921875, 0.103759765625, 0.0052337646484375], "tokens": [351, 4233, 1394, 473]}
{"line_number": 102, "line_type": "generated", "code": "\n     *\n     * @param f function to solve.\n     * @param min the lower bound for the interval.\n     * @param max the upper bound for the interval.\n     * @return the value where the function is zero\n     * @throws MaxIterations", "entropy": 0.041534423828125, "is_bug_line": false, "sus_score": 0.4381943643093109, "per_token_entropy": [0.2568359375, 0.01195526123046875, 0.7197265625, 0.00084686279296875, 0.02008056640625, 0.00296783447265625, 0.056488037109375, 0.09197998046875, 0.0045928955078125, 0.0106658935546875, 0.078369140625, 0.016754150390625, 5.2094459533691406e-05, 0.00022280216217041016, 0.00032711029052734375, 0.08123779296875, 0.1719970703125, 0.00830078125, 0.0024166107177734375, 0.01143646240234375, 0.0004935264587402344, 0.00748443603515625, 0.019927978515625, 0.0025348663330078125, 1.9669532775878906e-05, 4.1484832763671875e-05, 0.00019693374633789062, 0.268310546875, 0.0007729530334472656, 0.0007505416870117188, 0.00034499168395996094, 0.00019252300262451172, 2.47955322265625e-05, 0.00017774105072021484, 0.0123138427734375, 0.0272369384765625, 0.00021958351135253906, 0.00798797607421875, 0.044921875, 0.054534912109375, 0.0179290771484375, 0.0012063980102539062, 0.0038814544677734375, 0.0019321441650390625, 0.0002982616424560547, 0.0004611015319824219, 0.112060546875, 0.0023479461669921875, 0.0021419525146484375, 0.01049041748046875, 0.012481689453125, 1.7404556274414062e-05], "tokens": [275, 319, 275, 319, 477, 753, 296, 667, 372, 10932, 32, 275, 319, 477, 753, 1847, 322, 7216, 5085, 436, 322, 7898, 32, 275, 319, 477, 753, 1769, 322, 8342, 5085, 436, 322, 7898, 32, 275, 319, 477, 601, 322, 786, 2154, 322, 667, 438, 5934, 275, 319, 477, 5117, 7462, 31219]}
{"line_number": 247, "line_type": "original", "code": "                setResult(x1, i);", "entropy": 1.4560546875, "is_bug_line": false, "sus_score": 0.43108901381492615, "per_token_entropy": [7.19140625, 4.56640625, 0.060089111328125, 0.0139007568359375, 0.03485107421875, 0.043914794921875, 1.046875, 0.07745361328125, 0.06744384765625], "tokens": [2071, 739, 1394, 26, 106, 35, 30, 595, 293]}
{"line_number": 247, "line_type": "generated", "code": "\n            if (Math.abs(delta) <= tolerance) {\n                // correct small jumps\n                delta = oldDelta;\n            }\n            // update the bracketing values\n            x0 = x1;\n            y0 = y1;\n            if (Math.", "entropy": 0.43798828125, "is_bug_line": false, "sus_score": 0.43108901381492615, "per_token_entropy": [0.25341796875, 1.5634765625, 0.07293701171875, 0.8720703125, 0.0013761520385742188, 0.008880615234375, 0.001102447509765625, 0.07147216796875, 0.01320648193359375, 0.9404296875, 0.033538818359375, 0.050506591796875, 0.004085540771484375, 0.041229248046875, 0.853515625, 2.2890625, 1.54296875, 2.978515625, 0.1031494140625, 1.01953125, 0.005619049072265625, 0.998046875, 0.0003337860107421875, 0.059478759765625, 0.02362060546875, 0.000362396240234375, 0.47900390625, 2.083984375, 1.453125, 0.83642578125, 0.98486328125, 0.697265625, 0.0141143798828125, 0.0232391357421875, 0.31494140625, 0.244873046875, 0.006778717041015625, 0.05303955078125, 0.03887939453125, 0.0006465911865234375, 0.01214599609375, 0.50048828125, 0.0008068084716796875, 0.0001347064971923828, 8.213520050048828e-05, 0.0002739429473876953, 4.792213439941406e-05, 0.0711669921875, 0.1444091796875, 0.06500244140625, 0.951171875, 0.0003261566162109375], "tokens": [324, 415, 308, 5717, 32, 3596, 26, 6558, 27, 2511, 26434, 27, 301, 400, 434, 3809, 5532, 44622, 400, 7715, 280, 3610, 9189, 45, 324, 320, 324, 434, 1974, 322, 33828, 299, 2078, 324, 816, 34, 280, 816, 35, 45, 324, 533, 34, 280, 533, 35, 45, 324, 415, 308, 5717, 32]}
{"line_number": 185, "line_type": "original", "code": "                ret = max;", "entropy": 3.740234375, "is_bug_line": false, "sus_score": 0.4295617938041687, "per_token_entropy": [3.673828125, 7.01171875, 0.09625244140625, 7.65234375, 0.262939453125], "tokens": [2071, 2152, 280, 1769, 45]}
{"line_number": 185, "line_type": "generated", "code": "\n            } else {\n                // swap points\n                double tmp = x2;\n                x2 = x1;\n                x1 = tmp;\n\n                tmp = y2;\n                y2 = y1;\n                y1 = tmp;\n            }\n\n            // check", "entropy": 0.232177734375, "is_bug_line": false, "sus_score": 0.4295617938041687, "per_token_entropy": [0.9638671875, 0.0090179443359375, 0.17724609375, 0.133544921875, 0.50927734375, 0.67626953125, 1.3125, 0.71142578125, 0.1138916015625, 0.8193359375, 0.51953125, 0.5595703125, 0.08843994140625, 0.3916015625, 0.0009002685546875, 0.05389404296875, 0.058502197265625, 0.0005879402160644531, 0.022216796875, 0.000553131103515625, 0.1270751953125, 0.0002827644348144531, 0.0240325927734375, 0.002002716064453125, 0.0008544921875, 0.0004596710205078125, 0.10064697265625, 0.0002720355987548828, 0.423583984375, 0.032073974609375, 0.00250244140625, 0.0022830963134765625, 0.001018524169921875, 6.127357482910156e-05, 0.00232696533203125, 0.0007433891296386719, 0.0001678466796875, 0.00041222572326660156, 0.00017404556274414062, 0.0001081228256225586, 5.7816505432128906e-05, 0.0026607513427734375, 0.00020742416381835938, 0.0004150867462158203, 0.00038051605224609375, 0.003917694091796875, 0.0005831718444824219, 0.163818359375, 0.0009551048278808594, 0.1611328125, 0.95361328125, 2.939453125], "tokens": [324, 320, 813, 301, 400, 434, 12947, 4981, 400, 2064, 3691, 280, 816, 36, 45, 400, 816, 36, 280, 816, 35, 45, 400, 816, 35, 280, 3691, 45, 2110, 3691, 280, 533, 36, 45, 400, 533, 36, 280, 533, 35, 45, 400, 533, 35, 280, 3691, 45, 324, 320, 1064, 434, 1505]}
{"line_number": 196, "line_type": "original", "code": "            if (yMin == 0.0) {", "entropy": 1.91015625, "is_bug_line": false, "sus_score": 0.408348947763443, "per_token_entropy": [4.08203125, 2.80078125, 0.11029052734375, 4.59765625, 7.87890625, 1.591796875, 0.11260986328125, 0.0013952255249023438, 1.2431640625, 0.027252197265625, 0.3642578125, 0.11175537109375], "tokens": [1468, 415, 308, 107, 2928, 610, 225, 34, 32, 34, 27, 301]}
{"line_number": 196, "line_type": "generated", "code": "\n                // be a local extrema or some other degenerate case).\n                setResult(x1, y1);\n                return x1;\n            }\n            // compute the new approximation for the root\n            final double delta2 = 2 * (x", "entropy": 0.5673828125, "is_bug_line": false, "sus_score": 0.408348947763443, "per_token_entropy": [0.515625, 2.236328125, 1.439453125, 1.771484375, 0.734375, 0.37060546875, 0.60107421875, 2.6464462280273438e-05, 1.2314453125, 3.306640625, 0.0560302734375, 2.34375, 0.218017578125, 0.4248046875, 0.64208984375, 0.270751953125, 0.44091796875, 0.002410888671875, 0.006866455078125, 0.037689208984375, 0.0180511474609375, 0.00860595703125, 0.436767578125, 0.00344085693359375, 0.028778076171875, 0.07354736328125, 0.096923828125, 0.005245208740234375, 0.0012311935424804688, 0.00032258033752441406, 0.05474853515625, 0.0006260871887207031, 1.03515625, 1.345703125, 1.8056640625, 0.20751953125, 0.39892578125, 0.320068359375, 0.472412109375, 0.032379150390625, 0.021697998046875, 0.25244140625, 1.0029296875, 0.0176544189453125, 2.23828125, 0.31103515625, 0.063720703125, 1.2255859375, 0.210693359375, 0.272216796875, 0.457275390625, 0.431640625], "tokens": [400, 434, 526, 312, 2196, 1447, 268, 934, 556, 1629, 1604, 409, 5536, 1135, 547, 400, 739, 1394, 26, 106, 35, 30, 533, 35, 293, 400, 442, 816, 35, 45, 324, 320, 324, 434, 7596, 322, 537, 39431, 436, 322, 3051, 324, 1158, 2064, 7715, 36, 280, 225, 36, 319, 308, 106]}
{"line_number": 173, "line_type": "original", "code": "        double yMin = f.value(min);", "entropy": 1.322265625, "is_bug_line": false, "sus_score": 0.40802937746047974, "per_token_entropy": [5.19921875, 1.2490234375, 1.806640625, 4.37890625, 0.1612548828125, 0.712890625, 0.0012350082397460938, 0.0013561248779296875, 0.0005407333374023438, 1.03515625, 0.004116058349609375], "tokens": [351, 2064, 533, 2928, 280, 296, 32, 853, 26, 887, 293]}
{"line_number": 173, "line_type": "generated", "code": "\n    private double solve(final UnivariateRealFunction f,\n                        final double x0, final double y0,\n                        final double x1, final double y1,\n                        final double x2, final double y2)\n        throws MaxIterationsExceededException,", "entropy": 0.05084228515625, "is_bug_line": false, "sus_score": 0.40802937746047974, "per_token_entropy": [0.165283203125, 0.59521484375, 0.0099945068359375, 0.0029506683349609375, 0.0028171539306640625, 0.1270751953125, 0.0027904510498046875, 7.3909759521484375e-06, 1.0132789611816406e-05, 2.6941299438476562e-05, 0.0005407333374023438, 0.00033473968505859375, 0.62451171875, 0.367919921875, 0.0005764961242675781, 0.0041961669921875, 0.005458831787109375, 0.00031566619873046875, 0.08612060546875, 0.0004057884216308594, 0.00042128562927246094, 6.9141387939453125e-06, 7.343292236328125e-05, 0.1661376953125, 0.05029296875, 0.0001595020294189453, 0.0003845691680908203, 0.01751708984375, 7.605552673339844e-05, 0.0221710205078125, 7.402896881103516e-05, 0.0001443624496459961, 1.5735626220703125e-05, 0.0004291534423828125, 0.00574493408203125, 0.1583251953125, 0.00020778179168701172, 0.0005931854248046875, 0.00011813640594482422, 0.00014090538024902344, 0.00946044921875, 0.00014412403106689453, 0.00020182132720947266, 1.71661376953125e-05, 0.01837158203125, 0.1400146484375, 0.0009031295776367188, 0.05230712890625, 1.5974044799804688e-05, 1.0371208190917969e-05, 9.059906005859375e-06, 0.0037937164306640625], "tokens": [284, 945, 2064, 10932, 26, 3220, 1683, 27623, 6877, 2447, 296, 30, 715, 1158, 2064, 816, 34, 30, 1158, 2064, 533, 34, 30, 715, 1158, 2064, 816, 35, 30, 1158, 2064, 533, 35, 30, 715, 1158, 2064, 816, 36, 30, 1158, 2064, 533, 36, 27, 291, 2571, 7462, 31219, 28741, 984, 30]}
{"line_number": 240, "line_type": "original", "code": "                y1 = y2;", "entropy": 2.599609375, "is_bug_line": false, "sus_score": 0.3960033655166626, "per_token_entropy": [7.95703125, 8.1171875, 1.46484375, 0.01505279541015625, 0.1580810546875, 0.4765625, 0.0079498291015625], "tokens": [2071, 533, 35, 280, 533, 36, 45]}
{"line_number": 240, "line_type": "generated", "code": "\n                    delta = 0.5 * dx;\n                    oldDelta = delta;\n                } else {\n                    // Accept the step, update variables for next step.\n                    delta = p / p1;\n                    oldDelta = delta;\n                    x0 = x1", "entropy": 0.178955078125, "is_bug_line": false, "sus_score": 0.3960033655166626, "per_token_entropy": [0.051055908203125, 0.09637451171875, 0.001926422119140625, 0.003116607666015625, 8.726119995117188e-05, 2.7894973754882812e-05, 9.191036224365234e-05, 0.001842498779296875, 0.0023555755615234375, 0.0004458427429199219, 0.0205078125, 0.00934600830078125, 0.00039577484130859375, 0.0022792816162109375, 0.003559112548828125, 0.0001996755599975586, 0.0213165283203125, 0.00013065338134765625, 0.01024627685546875, 0.050445556640625, 0.0177764892578125, 0.1846923828125, 1.548828125, 0.1185302734375, 0.76708984375, 0.564453125, 1.3798828125, 0.429443359375, 0.12353515625, 0.48095703125, 0.38818359375, 0.045379638671875, 0.04290771484375, 1.3076171875, 0.010467529296875, 0.01529693603515625, 0.0682373046875, 0.001026153564453125, 1.6689300537109375e-06, 0.0005803108215332031, 0.013885498046875, 0.83154296875, 0.00033354759216308594, 0.00045943260192871094, 0.0189971923828125, 0.0002868175506591797, 0.027008056640625, 0.26953125, 0.340087890625, 0.00899505615234375, 0.0017290115356445312, 0.0172882080078125], "tokens": [528, 7715, 280, 225, 34, 32, 39, 319, 12211, 45, 528, 3610, 9189, 280, 7715, 45, 400, 320, 813, 301, 528, 434, 16217, 322, 3111, 30, 1974, 4886, 436, 2354, 3111, 32, 528, 7715, 280, 298, 517, 298, 35, 45, 528, 3610, 9189, 280, 7715, 45, 528, 816, 34, 280, 816, 35]}
{"line_number": 239, "line_type": "original", "code": "                y0 = y1;", "entropy": 2.748046875, "is_bug_line": false, "sus_score": 0.3893938362598419, "per_token_entropy": [8.515625, 7.484375, 1.8310546875, 0.1253662109375, 0.044097900390625, 1.2255859375, 0.01202392578125], "tokens": [2071, 533, 34, 280, 533, 35, 45]}
{"line_number": 239, "line_type": "generated", "code": "\n                    // Fall back to bisection.\n                    delta = 0.5 * dx;\n                    oldDelta = delta;\n                } else {\n                    // Accept the interpolation.\n                    oldDelta = delta;\n                    delta = p / p1;\n                }\n           ", "entropy": 0.15380859375, "is_bug_line": false, "sus_score": 0.3893938362598419, "per_token_entropy": [0.050445556640625, 1.791015625, 1.5302734375, 0.01751708984375, 0.2235107421875, 0.0156097412109375, 0.0002574920654296875, 1.3113021850585938e-06, 0.11309814453125, 0.00672149658203125, 0.0304107666015625, 0.0011873245239257812, 0.003002166748046875, 6.556510925292969e-05, 1.621246337890625e-05, 6.890296936035156e-05, 0.0016908645629882812, 0.001708984375, 0.0002046823501586914, 0.020538330078125, 0.00659942626953125, 0.0002608299255371094, 0.0022373199462890625, 0.0026149749755859375, 0.00015473365783691406, 0.0185546875, 0.00016236305236816406, 0.01019287109375, 0.049896240234375, 0.02349853515625, 0.133544921875, 1.033203125, 0.2408447265625, 1.2587890625, 0.2666015625, 0.01947021484375, 0.5439453125, 0.00026702880859375, 0.00024628639221191406, 0.0662841796875, 9.131431579589844e-05, 0.01204681396484375, 0.10369873046875, 0.0038242340087890625, 0.007678985595703125, 0.001728057861328125, 0.0014400482177734375, 1.3113021850585938e-06, 0.0011463165283203125, 0.354248046875, 0.0002149343490600586, 0.0262908935546875], "tokens": [528, 434, 36643, 1751, 372, 323, 1125, 382, 32, 528, 7715, 280, 225, 34, 32, 39, 319, 12211, 45, 528, 3610, 9189, 280, 7715, 45, 400, 320, 813, 301, 528, 434, 16217, 322, 23334, 32, 528, 3610, 9189, 280, 7715, 45, 528, 7715, 280, 298, 517, 298, 35, 45, 400, 320, 324]}
{"line_number": 241, "line_type": "original", "code": "                y2 = y0;", "entropy": 2.447265625, "is_bug_line": false, "sus_score": 0.3850683271884918, "per_token_entropy": [6.78515625, 6.73046875, 1.185546875, 0.01012420654296875, 0.80712890625, 1.58203125, 0.0251007080078125], "tokens": [2071, 533, 36, 280, 533, 34, 45]}
{"line_number": 241, "line_type": "generated", "code": "\n                } else {\n                    // Accept the step, if it is not too large.\n                    if (Math.abs(p) < Math.abs(0.5 * oldDelta * p1)) {\n                        delta = p / p1;\n                    }", "entropy": 0.2342529296875, "is_bug_line": false, "sus_score": 0.3850683271884918, "per_token_entropy": [0.127197265625, 0.00047969818115234375, 0.03155517578125, 0.047027587890625, 0.01300048828125, 0.1893310546875, 1.8447265625, 0.1263427734375, 0.85986328125, 0.7900390625, 1.81640625, 0.002227783203125, 0.76171875, 0.1781005859375, 0.028411865234375, 0.0462646484375, 0.06463623046875, 0.0135345458984375, 0.1732177734375, 0.0179290771484375, 1.78125, 0.0001500844955444336, 6.80685043334961e-05, 0.0003769397735595703, 0.211669921875, 0.0017633438110351562, 0.59912109375, 0.9033203125, 3.552436828613281e-05, 0.0008258819580078125, 0.00047850608825683594, 0.01454925537109375, 1.1920928955078125e-07, 0.01094818115234375, 0.0210113525390625, 1.173828125, 6.830692291259766e-05, 0.0008759498596191406, 0.00032019615173339844, 0.00012671947479248047, 0.0014581680297851562, 0.0029392242431640625, 0.01486968994140625, 0.022308349609375, 0.004299163818359375, 0.001361846923828125, 0.00965118408203125, 0.0010862350463867188, 9.5367431640625e-07, 0.0007042884826660156, 0.265380859375, 0.0012636184692382812], "tokens": [400, 320, 813, 301, 528, 434, 16217, 322, 3111, 30, 415, 561, 438, 646, 5133, 7622, 32, 528, 415, 308, 5717, 32, 3596, 26, 98, 27, 333, 4175, 32, 3596, 26, 34, 32, 39, 319, 3610, 9189, 319, 298, 35, 490, 301, 715, 7715, 280, 298, 517, 298, 35, 45, 528, 320]}
{"line_number": 236, "line_type": "original", "code": "                x0 = x1;", "entropy": 3.546875, "is_bug_line": false, "sus_score": 0.37926244735717773, "per_token_entropy": [6.453125, 6.296875, 1.0859375, 10.4375, 0.031280517578125, 0.5107421875, 0.0053253173828125], "tokens": [2071, 816, 34, 280, 816, 35, 45]}
{"line_number": 236, "line_type": "generated", "code": "\n                        p >= Math.abs(0.5 * p1)) {\n                    // Inverse quadratic interpolation failed,\n                    // use bisection.\n                    delta = 0.5 * dx;\n                    oldDelta = delta;\n                } else {\n                   ", "entropy": 0.086181640625, "is_bug_line": false, "sus_score": 0.37926244735717773, "per_token_entropy": [0.5888671875, 0.297607421875, 0.25439453125, 0.2154541015625, 0.00011551380157470703, 0.001739501953125, 0.0033321380615234375, 0.057861328125, 2.7418136596679688e-06, 0.0003941059112548828, 0.0377197265625, 0.230712890625, 0.0017414093017578125, 0.11083984375, 0.04217529296875, 0.0254974365234375, 0.103515625, 0.329833984375, 0.0252838134765625, 0.0005936622619628906, 7.68899917602539e-05, 0.004245758056640625, 0.327392578125, 0.245361328125, 0.1845703125, 0.00101470947265625, 0.30615234375, 0.012603759765625, 0.00011360645294189453, 1.3113021850585938e-06, 0.270751953125, 0.01023101806640625, 0.051544189453125, 0.0009522438049316406, 0.0026874542236328125, 6.604194641113281e-05, 9.894371032714844e-06, 4.38690185546875e-05, 0.0008754730224609375, 0.001712799072265625, 0.00014030933380126953, 0.0126800537109375, 0.00846099853515625, 0.00031447410583496094, 0.0017366409301757812, 0.0029354095458984375, 0.0001609325408935547, 0.006931304931640625, 0.00015306472778320312, 0.013336181640625, 0.67236328125, 0.0125885009765625], "tokens": [715, 298, 2377, 4175, 32, 3596, 26, 34, 32, 39, 319, 298, 35, 490, 301, 528, 434, 701, 3565, 28624, 689, 23334, 3803, 30, 528, 434, 793, 323, 1125, 382, 32, 528, 7715, 280, 225, 34, 32, 39, 319, 12211, 45, 528, 3610, 9189, 280, 7715, 45, 400, 320, 813, 301, 528]}
{"line_number": 238, "line_type": "original", "code": "                x2 = x0;", "entropy": 2.228515625, "is_bug_line": false, "sus_score": 0.376969575881958, "per_token_entropy": [7.79296875, 6.38671875, 0.5732421875, 0.044219970703125, 0.1507568359375, 0.62939453125, 0.024261474609375], "tokens": [2071, 816, 36, 280, 816, 34, 45]}
{"line_number": 238, "line_type": "generated", "code": "\n                    // closer to the lower bound, so use it.\n                    delta = p / p1;\n                    oldDelta = delta;\n                } else {\n                    // Bisection.\n                    delta = 0.5 * dx;\n                    oldDelta = delta;", "entropy": 0.2232666015625, "is_bug_line": false, "sus_score": 0.376969575881958, "per_token_entropy": [0.10552978515625, 0.055450439453125, 1.3515625, 0.00804901123046875, 1.2041015625, 1.96875, 0.339599609375, 0.98388671875, 1.390625, 1.2451171875, 0.9833984375, 0.296875, 0.0260467529296875, 0.159912109375, 0.0033397674560546875, 0.56982421875, 0.005611419677734375, 0.00167083740234375, 3.933906555175781e-06, 0.0028514862060546875, 0.10675048828125, 0.01971435546875, 0.0003032684326171875, 0.0007152557373046875, 0.024688720703125, 0.0004112720489501953, 0.017333984375, 0.00018966197967529297, 0.015960693359375, 0.0105438232421875, 0.036529541015625, 0.2384033203125, 0.1358642578125, 0.026885986328125, 3.6954879760742188e-06, 0.06671142578125, 0.0093536376953125, 0.15966796875, 0.004238128662109375, 0.0197296142578125, 0.00017845630645751953, 9.179115295410156e-06, 2.7298927307128906e-05, 0.0005445480346679688, 0.001605987548828125, 8.797645568847656e-05, 0.0037250518798828125, 0.0014791488647460938, 0.00015556812286376953, 6.592273712158203e-05, 0.005771636962890625, 0.00011050701141357422], "tokens": [528, 434, 30682, 372, 322, 7216, 5085, 30, 1259, 793, 561, 32, 528, 7715, 280, 298, 517, 298, 35, 45, 528, 3610, 9189, 280, 7715, 45, 400, 320, 813, 301, 528, 434, 551, 1125, 382, 32, 528, 7715, 280, 225, 34, 32, 39, 319, 12211, 45, 528, 3610, 9189, 280, 7715, 45]}
