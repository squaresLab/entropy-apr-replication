{"line_number": 417, "line_type": "original", "code": "        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;", "entropy": 1.3154296875, "is_bug_line": true, "sus_score": 0.49597635865211487, "per_token_entropy": [5.23828125, 5.0546875, 2.1640625, 6.18359375, 0.0010080337524414062, 1.1279296875, 0.00010693073272705078, 0.0211334228515625, 0.0006823539733886719, 0.00299835205078125, 0.01256561279296875, 5.0187110900878906e-05, 0.009033203125, 3.1948089599609375e-05, 0.0004734992980957031, 0.00507354736328125, 0.281005859375, 5.56640625, 0.017059326171875, 9.78708267211914e-05, 1.9384765625], "tokens": [351, 442, 308, 4075, 32, 26821, 26, 106, 27, 962, 6934, 32, 26821, 26, 107, 490, 1276, 816, 610, 533, 45]}
{"line_number": 417, "line_type": "generated", "code": "\n     *\n     * @param x first value\n     * @param y second value\n     * @param maxUlps {@code (maxUlps - 1)} is the number of floating point\n     * values between {@code x} and {@code y}.", "entropy": 0.05535888671875, "is_bug_line": true, "sus_score": 0.49597635865211487, "per_token_entropy": [0.50634765625, 0.0577392578125, 0.7919921875, 0.00039887428283691406, 0.0311737060546875, 0.0020389556884765625, 0.0050201416015625, 0.01180267333984375, 0.0006103515625, 0.0012302398681640625, 7.033348083496094e-06, 5.6624412536621094e-05, 1.5139579772949219e-05, 4.112720489501953e-05, 9.036064147949219e-05, 8.749961853027344e-05, 0.0006575584411621094, 7.271766662597656e-06, 0.0022373199462890625, 0.0008025169372558594, 0.0322265625, 0.0251007080078125, 2.384185791015625e-07, 0.007236480712890625, 0.0007462501525878906, 0.01236724853515625, 0.004802703857421875, 0.0006966590881347656, 1.1920928955078125e-06, 0.00043320655822753906, 0.0003235340118408203, 5.245208740234375e-06, 0.00021386146545410156, 0.0008397102355957031, 6.61611557006836e-05, 0.165283203125, 0.0028896331787109375, 0.037750244140625, 0.0021457672119140625, 0.280517578125, 9.965896606445312e-05, 0.8662109375, 0.0027980804443359375, 0.01399993896484375, 1.430511474609375e-06, 0.0007467269897460938, 3.337860107421875e-05, 3.230571746826172e-05, 5.0067901611328125e-05, 3.6954879760742188e-06, 5.364418029785156e-06, 0.008331298828125], "tokens": [275, 319, 275, 319, 477, 753, 816, 1932, 786, 275, 319, 477, 753, 533, 3100, 786, 275, 319, 477, 753, 1769, 28522, 1069, 3088, 687, 308, 1449, 28522, 1069, 429, 225, 35, 4370, 438, 322, 1451, 432, 15394, 2260, 275, 319, 2078, 3733, 3088, 687, 816, 111, 461, 3088, 687, 533, 4009]}
{"line_number": 529, "line_type": "original", "code": "        for (int i = 0; i < x.length; ++i) {", "entropy": 0.91796875, "is_bug_line": false, "sus_score": 0.4538898766040802, "per_token_entropy": [2.77734375, 5.29296875, 0.073974609375, 0.475830078125, 0.0474853515625, 0.020111083984375, 0.1055908203125, 3.69921875, 0.056304931640625, 0.007801055908203125, 0.0294952392578125, 4.18359375, 0.031036376953125, 0.01145172119140625, 0.06646728515625, 0.3486328125, 0.0017518997192382812, 0.009613037109375, 0.1988525390625], "tokens": [351, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 816, 32, 1322, 45, 3311, 91, 27, 301]}
{"line_number": 529, "line_type": "generated", "code": "\n     * @return <code>n!</code>\n     * @throws IllegalArgumentException if n is negative\n     * @throws ArithmeticException if the result can not be represented as a\n     * <code>long</code>.\n     * @see <a\n     *", "entropy": 0.237060546875, "is_bug_line": false, "sus_score": 0.4538898766040802, "per_token_entropy": [0.58935546875, 0.05670166015625, 0.0309906005859375, 0.0411376953125, 1.0693359375, 0.0188751220703125, 0.0010595321655273438, 0.00858306884765625, 0.0411376953125, 0.0002892017364501953, 0.133544921875, 0.1783447265625, 0.0416259765625, 0.006610870361328125, 0.041259765625, 0.380859375, 0.0521240234375, 1.03515625, 0.51953125, 0.0205078125, 0.396240234375, 0.201904296875, 0.022430419921875, 0.04083251953125, 0.026641845703125, 0.0003437995910644531, 0.1151123046875, 0.1331787109375, 0.0232086181640625, 0.455322265625, 0.06170654296875, 0.061279296875, 0.1561279296875, 0.034210205078125, 1.4013671875, 0.25634765625, 0.0007152557373046875, 0.45166015625, 0.0216827392578125, 0.00043773651123046875, 0.01236724853515625, 0.006488800048828125, 0.00029468536376953125, 0.1744384765625, 0.1551513671875, 1.0244140625, 0.088134765625, 0.41943359375, 0.7158203125, 0.006175994873046875, 1.58984375, 0.00777435302734375], "tokens": [275, 319, 477, 601, 333, 687, 48, 96, 12975, 687, 48, 275, 319, 477, 5117, 12137, 415, 310, 438, 11003, 275, 319, 477, 5117, 47721, 984, 415, 322, 1056, 883, 646, 526, 17718, 619, 312, 275, 319, 333, 687, 48, 3222, 377, 687, 4503, 275, 319, 477, 2970, 333, 83, 275, 319]}
{"line_number": 523, "line_type": "original", "code": "        if ((x == null) || (y == null)) {", "entropy": 1.3583984375, "is_bug_line": false, "sus_score": 0.4533125162124634, "per_token_entropy": [4.515625, 5.87890625, 2.673828125, 4.54296875, 0.755859375, 0.12939453125, 0.008331298828125, 0.25634765625, 0.0740966796875, 0.056884765625, 0.032623291015625, 0.0009508132934570312, 0.0626220703125, 0.0277252197265625], "tokens": [351, 415, 1833, 106, 610, 744, 27, 1276, 308, 107, 610, 744, 490, 301]}
{"line_number": 523, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.4533125162124634, "per_token_entropy": [], "tokens": []}
{"line_number": 526, "line_type": "original", "code": "        if (x.length != y.length) {", "entropy": 1.4130859375, "is_bug_line": false, "sus_score": 0.44919633865356445, "per_token_entropy": [3.328125, 1.6015625, 0.162353515625, 5.83203125, 4.54296875, 0.09149169921875, 1.185546875, 0.15869140625, 0.003017425537109375, 0.0011138916015625, 0.01079559326171875, 0.0426025390625], "tokens": [351, 415, 308, 106, 32, 1322, 863, 533, 32, 1322, 27, 301]}
{"line_number": 526, "line_type": "generated", "code": "\n     * @param n the number to take the factorial of\n     * @return n!\n     * @throws IllegalArgumentException if n is negative\n     * @throws ArithmeticException if the result can not be represented as\n     * a <code>long</code>.", "entropy": 0.2178955078125, "is_bug_line": false, "sus_score": 0.44919633865356445, "per_token_entropy": [1.205078125, 0.43017578125, 0.66162109375, 0.054962158203125, 0.01383209228515625, 1.16015625, 1.1806640625, 0.28955078125, 0.37060546875, 0.00765228271484375, 0.00847625732421875, 0.0009675025939941406, 0.004833221435546875, 0.38818359375, 0.000797271728515625, 0.003360748291015625, 0.0307769775390625, 0.29296875, 0.01910400390625, 0.0309295654296875, 0.07037353515625, 0.005802154541015625, 0.059814453125, 0.467529296875, 0.045440673828125, 0.405517578125, 0.441650390625, 0.0170135498046875, 0.320556640625, 0.202392578125, 0.014007568359375, 0.03472900390625, 0.0282440185546875, 0.0003600120544433594, 0.090576171875, 0.1434326171875, 0.025146484375, 0.40380859375, 0.0526123046875, 0.08251953125, 0.0865478515625, 0.0295257568359375, 0.810546875, 0.0006957054138183594, 0.82470703125, 0.271484375, 0.03564453125, 0.0005626678466796875, 0.0230255126953125, 0.00627899169921875, 2.3126602172851562e-05, 0.17626953125], "tokens": [275, 319, 477, 753, 310, 322, 1451, 372, 4818, 322, 10365, 564, 432, 275, 319, 477, 601, 310, 19, 275, 319, 477, 5117, 12137, 415, 310, 438, 11003, 275, 319, 477, 5117, 47721, 984, 415, 322, 1056, 883, 646, 526, 17718, 619, 275, 319, 312, 333, 687, 48, 3222, 377, 687, 4503]}
{"line_number": 530, "line_type": "original", "code": "            if (!equals(x[i], y[i])) {", "entropy": 2.375, "is_bug_line": false, "sus_score": 0.44513213634490967, "per_token_entropy": [7.0078125, 2.54296875, 4.85546875, 10.703125, 0.243896484375, 3.92578125, 3.482421875, 0.06536865234375, 0.025360107421875, 0.053924560546875, 0.00424957275390625, 0.0020751953125, 0.025390625, 0.30810546875], "tokens": [1468, 415, 1429, 3574, 26, 106, 77, 91, 614, 533, 77, 91, 5259, 301]}
{"line_number": 530, "line_type": "generated", "code": "\n     */\n    public static long factorial(int n) {\n        if (n < 0) {\n            throw new IllegalArgumentException(LocalizedFormats.FACTORIAL_NEGATIVE.get(Integer.valueOf(n)));\n        }\n        if (n <= 1", "entropy": 0.2025146484375, "is_bug_line": false, "sus_score": 0.44513213634490967, "per_token_entropy": [1.005859375, 0.7548828125, 0.044281005859375, 0.047271728515625, 0.002407073974609375, 0.050262451171875, 0.025604248046875, 0.0009775161743164062, 0.00324249267578125, 0.251953125, 0.000274658203125, 0.00763702392578125, 0.03961181640625, 0.2252197265625, 0.32373046875, 0.016326904296875, 0.004055023193359375, 0.032806396484375, 0.0009174346923828125, 0.0003142356872558594, 0.02227783203125, 0.00653839111328125, 0.04827880859375, 0.064453125, 0.060302734375, 0.2142333984375, 1.3388671875, 0.427001953125, 0.0070953369140625, 0.0016803741455078125, 0.5732421875, 0.004940032958984375, 0.002071380615234375, 0.0380859375, 0.55322265625, 0.440185546875, 0.1939697265625, 1.4775390625, 0.0004115104675292969, 0.01230621337890625, 0.0007262229919433594, 0.0008292198181152344, 0.0007152557373046875, 0.07208251953125, 0.0006251335144042969, 0.59716796875, 0.65380859375, 0.025238037109375, 0.006183624267578125, 0.7734375, 0.048736572265625, 0.0287017822265625], "tokens": [275, 569, 284, 562, 907, 1946, 10365, 564, 26, 410, 310, 27, 301, 291, 415, 308, 96, 333, 225, 34, 27, 301, 324, 1422, 537, 12137, 26, 24225, 19298, 32, 31100, 5796, 81, 43518, 32, 371, 26, 3061, 32, 9162, 26, 96, 4236, 291, 320, 291, 415, 308, 96, 2511, 225, 35]}
{"line_number": 524, "line_type": "original", "code": "            return !((x == null) ^ (y == null));", "entropy": 2.091796875, "is_bug_line": false, "sus_score": 0.42861422896385193, "per_token_entropy": [6.49609375, 4.671875, 10.1640625, 5.56640625, 2.275390625, 0.06402587890625, 0.015869140625, 0.0013666152954101562, 0.01995849609375, 0.0015716552734375, 0.001720428466796875, 0.0007252693176269531, 0.0019397735595703125, 0.0146942138671875], "tokens": [1468, 442, 653, 1162, 106, 610, 744, 27, 5304, 308, 107, 610, 744, 876]}
{"line_number": 524, "line_type": "generated", "code": "\n     * then an <code>ArithmeticException</code> is thrown.\n     * </ul>\n     * </p>\n     *\n     * @param n the argument.\n     * @return n!\n     * @throws IllegalArgumentException if <code>n</", "entropy": 0.27490234375, "is_bug_line": false, "sus_score": 0.42861422896385193, "per_token_entropy": [0.57177734375, 0.1336669921875, 1.736328125, 1.041015625, 0.1033935546875, 0.00595855712890625, 0.0002703666687011719, 0.045623779296875, 0.0011348724365234375, 0.002902984619140625, 0.0002961158752441406, 0.0016298294067382812, 0.032440185546875, 0.010711669921875, 0.62353515625, 1.142578125, 0.0316162109375, 0.043975830078125, 0.11126708984375, 0.39990234375, 0.0165863037109375, 0.0044708251953125, 1.041015625, 0.043853759765625, 0.0199737548828125, 0.0228729248046875, 0.0024547576904296875, 0.386474609375, 0.0015211105346679688, 0.040191650390625, 0.0189361572265625, 0.0052947998046875, 0.935546875, 1.2197265625, 0.2025146484375, 0.0159759521484375, 0.0001939535140991211, 0.0025539398193359375, 0.0220489501953125, 0.6318359375, 0.499755859375, 0.044891357421875, 0.0325927734375, 0.005649566650390625, 0.0372314453125, 0.420654296875, 0.042388916015625, 1.080078125, 0.006961822509765625, 0.0016107559204101562, 0.0089569091796875, 1.439453125], "tokens": [275, 319, 1615, 600, 333, 687, 48, 37375, 984, 377, 687, 48, 438, 12163, 32, 275, 319, 576, 338, 48, 275, 319, 576, 98, 48, 275, 319, 275, 319, 477, 753, 310, 322, 2793, 32, 275, 319, 477, 601, 310, 19, 275, 319, 477, 5117, 12137, 415, 333, 687, 48, 96, 377]}
{"line_number": 527, "line_type": "original", "code": "            return false;", "entropy": 4.4921875, "is_bug_line": false, "sus_score": 0.41407132148742676, "per_token_entropy": [7.296875, 1.5078125, 9.1328125, 0.031524658203125], "tokens": [1468, 442, 901, 45]}
{"line_number": 527, "line_type": "generated", "code": "\n     */\n    public static long factorial(int n) {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n < 0 : \" + n);\n        }\n        if (n <= 1) {\n            return 1;", "entropy": 0.20556640625, "is_bug_line": false, "sus_score": 0.41407132148742676, "per_token_entropy": [0.826171875, 1.328125, 0.04412841796875, 0.056610107421875, 0.0025844573974609375, 0.03619384765625, 0.0299224853515625, 0.0010690689086914062, 0.0036525726318359375, 0.261962890625, 0.00027632713317871094, 0.004581451416015625, 0.04901123046875, 0.22998046875, 0.3046875, 0.01386260986328125, 0.00362396240234375, 0.0343017578125, 0.0011720657348632812, 0.0003783702850341797, 0.022491455078125, 0.007366180419921875, 0.05841064453125, 0.0645751953125, 0.07196044921875, 0.19384765625, 0.5791015625, 0.88134765625, 1.42578125, 0.0099334716796875, 1.7404556274414062e-05, 1.373046875, 0.07684326171875, 0.002071380615234375, 0.00677490234375, 0.00786590576171875, 0.0576171875, 0.0004050731658935547, 0.5751953125, 0.69189453125, 0.0191192626953125, 0.006011962890625, 0.89794921875, 0.07861328125, 0.052581787109375, 0.0267333984375, 0.0023670196533203125, 0.07025146484375, 0.0156402587890625, 0.08111572265625, 0.00017690658569335938, 0.10174560546875], "tokens": [275, 569, 284, 562, 907, 1946, 10365, 564, 26, 410, 310, 27, 301, 291, 415, 308, 96, 333, 225, 34, 27, 301, 324, 1422, 537, 12137, 440, 96, 333, 225, 34, 499, 313, 474, 310, 293, 291, 320, 291, 415, 308, 96, 2511, 225, 35, 27, 301, 324, 442, 225, 35, 45]}
{"line_number": 534, "line_type": "original", "code": "        return true;", "entropy": 4.09375, "is_bug_line": false, "sus_score": 0.41120490431785583, "per_token_entropy": [5.5390625, 0.8603515625, 9.953125, 0.020660400390625], "tokens": [351, 442, 861, 45]}
{"line_number": 534, "line_type": "generated", "code": "\n    public static long factorial(int n) {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be >= 0\");\n        }\n\n        long result = 1;\n        for (int i = 2; i <=", "entropy": 0.1875, "is_bug_line": false, "sus_score": 0.41120490431785583, "per_token_entropy": [0.40380859375, 0.82080078125, 0.002819061279296875, 0.039306640625, 0.0288238525390625, 0.0012712478637695312, 0.005340576171875, 0.2327880859375, 0.0004410743713378906, 0.0097503662109375, 0.09490966796875, 0.330078125, 0.27294921875, 0.0180206298828125, 0.005100250244140625, 0.05133056640625, 0.00098419189453125, 0.00029778480529785156, 0.0280609130859375, 0.006671905517578125, 0.033538818359375, 0.0301055908203125, 0.0589599609375, 0.0867919921875, 0.59130859375, 1.005859375, 0.53125, 0.51123046875, 0.82763671875, 0.001239776611328125, 0.00017142295837402344, 0.448486328125, 0.1634521484375, 0.00040459632873535156, 1.12109375, 0.7607421875, 0.153076171875, 0.008270263671875, 0.0208740234375, 0.0015392303466796875, 0.12939453125, 0.2379150390625, 0.126220703125, 0.052825927734375, 0.2396240234375, 0.0115966796875, 0.006977081298828125, 0.1917724609375, 0.04193115234375, 0.0022563934326171875, 0.0009336471557617188, 0.0012884140014648438], "tokens": [284, 562, 907, 1946, 10365, 564, 26, 410, 310, 27, 301, 291, 415, 308, 96, 333, 225, 34, 27, 301, 324, 1422, 537, 12137, 440, 96, 2298, 526, 2377, 225, 34, 724, 291, 320, 584, 1946, 1056, 280, 225, 35, 45, 291, 436, 308, 410, 595, 280, 225, 36, 45, 595, 2511]}
{"line_number": 33, "line_type": "original", "code": "public final class MathUtils {", "entropy": 4.03515625, "is_bug_line": false, "sus_score": 0.31384432315826416, "per_token_entropy": [4.8359375, 8.0625, 8.875, 1.7890625, 0.1123046875, 0.537109375], "tokens": [923, 1158, 443, 4175, 2755, 301]}
{"line_number": 33, "line_type": "generated", "code": "\n    public static int addAndCheck(int x, int y) throws ArithmeticException {\n        long s = (long)x + (long)y;\n        if (s < Integer.MIN_VALUE || s > Integer.MAX_VALUE) {", "entropy": 0.10455322265625, "is_bug_line": false, "sus_score": 0.31384432315826416, "per_token_entropy": [0.483642578125, 0.1553955078125, 0.003299713134765625, 0.0196533203125, 0.2100830078125, 0.333984375, 0.00020194053649902344, 0.00011742115020751953, 0.58056640625, 0.0008225440979003906, 0.0011844635009765625, 0.020843505859375, 8.130073547363281e-05, 0.002971649169921875, 0.9853515625, 0.003963470458984375, 2.86102294921875e-06, 0.06109619140625, 0.38134765625, 0.478759765625, 0.08624267578125, 0.0016021728515625, 0.011932373046875, 0.016754150390625, 0.0004367828369140625, 0.5361328125, 7.224082946777344e-05, 0.134765625, 3.075599670410156e-05, 1.895427703857422e-05, 0.003047943115234375, 0.0007052421569824219, 0.0889892578125, 0.031982421875, 0.5498046875, 0.104736328125, 0.0270233154296875, 0.0058746337890625, 3.123283386230469e-05, 1.633167266845703e-05, 7.152557373046875e-07, 4.649162292480469e-06, 0.00434112548828125, 0.10333251953125, 0.000186920166015625, 0.00017464160919189453, 1.0609626770019531e-05, 3.2186508178710938e-06, 1.3113021850585938e-06, 9.179115295410156e-06, 0.0007023811340332031, 0.004985809326171875], "tokens": [284, 562, 907, 629, 1015, 2185, 2140, 26, 410, 816, 30, 629, 533, 27, 2571, 47721, 984, 301, 291, 1946, 309, 280, 308, 3222, 27, 106, 474, 308, 3222, 27, 107, 45, 291, 415, 308, 101, 333, 4401, 32, 4683, 81, 5975, 1276, 309, 848, 4401, 32, 3459, 81, 5975, 27, 301]}
{"line_number": 75, "line_type": "original", "code": "    private static final long[] FACTORIALS = new long[] {", "entropy": 1.5615234375, "is_bug_line": false, "sus_score": 0.31384432315826416, "per_token_entropy": [5.75390625, 4.59765625, 0.09765625, 3.89453125, 0.212890625, 1.2529296875, 5.35546875, 0.88623046875, 0.4248046875, 0.003612518310546875, 0.062164306640625, 0.0849609375, 1.8720703125, 0.0191192626953125, 0.282958984375, 0.17822265625], "tokens": [264, 945, 907, 1158, 1946, 1178, 506, 3821, 758, 5796, 69, 280, 537, 1946, 1178, 301]}
{"line_number": 75, "line_type": "generated", "code": "\n     *\n     * @param a an addend\n     * @param b an addend\n     * @param pattern the pattern to use for the message if the check fails\n     * @return the sum <code>a+b</code>\n     * @", "entropy": 0.14111328125, "is_bug_line": false, "sus_score": 0.31384432315826416, "per_token_entropy": [0.1744384765625, 0.002201080322265625, 0.75244140625, 0.0014123916625976562, 0.01264190673828125, 0.0011739730834960938, 0.0435791015625, 0.03521728515625, 0.0006432533264160156, 0.00024080276489257812, 0.03411865234375, 3.0279159545898438e-05, 8.0108642578125e-05, 0.00020503997802734375, 0.001651763916015625, 0.000438690185546875, 0.00010788440704345703, 0.0003504753112792969, 0.0455322265625, 0.00010657310485839844, 0.0008368492126464844, 0.0293121337890625, 0.56494140625, 0.75732421875, 0.5322265625, 0.5380859375, 0.029296875, 0.1466064453125, 0.26806640625, 0.9208984375, 0.388671875, 1.3564453125, 0.48193359375, 0.01654052734375, 0.041046142578125, 0.00013744831085205078, 0.00919342041015625, 0.04925537109375, 0.0035686492919921875, 0.0258636474609375, 0.007152557373046875, 0.0016651153564453125, 0.0003972053527832031, 0.006916046142578125, 0.00475311279296875, 0.0004329681396484375, 0.0005431175231933594, 0.0011272430419921875, 0.00269317626953125, 0.044830322265625, 0.0002758502960205078, 0.0007429122924804688], "tokens": [275, 319, 275, 319, 477, 753, 312, 600, 1015, 416, 275, 319, 477, 753, 323, 600, 1015, 416, 275, 319, 477, 753, 5257, 322, 5257, 372, 793, 436, 322, 1474, 415, 322, 1505, 8158, 275, 319, 477, 601, 322, 3632, 333, 687, 48, 83, 29, 84, 377, 687, 48, 275, 319, 477]}
