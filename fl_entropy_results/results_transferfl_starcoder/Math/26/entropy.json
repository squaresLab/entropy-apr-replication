{"line_number": 3258, "line_type": "original", "code": "", "entropy": 0.3046875, "is_bug_line": false, "sus_score": 0.7311581969261169, "per_token_entropy": [0.3046875], "tokens": [203]}
{"line_number": 3258, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.7311581969261169, "per_token_entropy": [], "tokens": []}
{"line_number": 3254, "line_type": "original", "code": "", "entropy": 0.3046875, "is_bug_line": false, "sus_score": 0.7262413501739502, "per_token_entropy": [0.3046875], "tokens": [203]}
{"line_number": 3254, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.7262413501739502, "per_token_entropy": [], "tokens": []}
{"line_number": 2927, "line_type": "original", "code": "", "entropy": 0.3046875, "is_bug_line": false, "sus_score": 0.7209066152572632, "per_token_entropy": [0.3046875], "tokens": [203]}
{"line_number": 2927, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.7209066152572632, "per_token_entropy": [], "tokens": []}
{"line_number": 3255, "line_type": "original", "code": "", "entropy": 0.3046875, "is_bug_line": false, "sus_score": 0.6083643436431885, "per_token_entropy": [0.3046875], "tokens": [203]}
{"line_number": 3255, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6083643436431885, "per_token_entropy": [], "tokens": []}
{"line_number": 3241, "line_type": "original", "code": "", "entropy": 0.3046875, "is_bug_line": false, "sus_score": 0.6045550107955933, "per_token_entropy": [0.3046875], "tokens": [203]}
{"line_number": 3241, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6045550107955933, "per_token_entropy": [], "tokens": []}
{"line_number": 3245, "line_type": "original", "code": "", "entropy": 0.3046875, "is_bug_line": false, "sus_score": 0.6042965054512024, "per_token_entropy": [0.3046875], "tokens": [203]}
{"line_number": 3245, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6042965054512024, "per_token_entropy": [], "tokens": []}
{"line_number": 3250, "line_type": "original", "code": "", "entropy": 0.3046875, "is_bug_line": false, "sus_score": 0.5909382104873657, "per_token_entropy": [0.3046875], "tokens": [203]}
{"line_number": 3250, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5909382104873657, "per_token_entropy": [], "tokens": []}
{"line_number": 3249, "line_type": "original", "code": "", "entropy": 0.3046875, "is_bug_line": false, "sus_score": 0.5863556861877441, "per_token_entropy": [0.3046875], "tokens": [203]}
{"line_number": 3249, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5863556861877441, "per_token_entropy": [], "tokens": []}
{"line_number": 43, "line_type": "original", "code": "", "entropy": 3.09765625, "is_bug_line": false, "sus_score": 0.5805850625038147, "per_token_entropy": [3.09765625], "tokens": [203]}
{"line_number": 43, "line_type": "generated", "code": "\n    /**\n     * Create a fraction given the double value.\n     * @param value the double value to convert to a fraction.\n     * @param epsilon maximum error allowed. The resulting fraction is within\n     *        <code>epsilon</code> of <", "entropy": 0.136474609375, "is_bug_line": false, "sus_score": 0.5805850625038147, "per_token_entropy": [0.377197265625, 0.01059722900390625, 0.01210784912109375, 2.5987625122070312e-05, 0.2099609375, 0.00325775146484375, 0.0273895263671875, 0.1123046875, 0.0295562744140625, 0.09197998046875, 0.00872802734375, 0.99267578125, 0.018798828125, 0.00038242340087890625, 0.310546875, 0.0005283355712890625, 0.0235443115234375, 0.00783538818359375, 0.00392913818359375, 0.0011415481567382812, 0.004550933837890625, 0.0007572174072265625, 0.004146575927734375, 0.0005273818969726562, 0.001312255859375, 0.0187530517578125, 0.002651214599609375, 0.01316070556640625, 0.0036773681640625, 0.03692626953125, 0.0229644775390625, 0.54150390625, 0.499755859375, 0.521484375, 0.47265625, 0.93115234375, 0.1005859375, 0.0249481201171875, 0.037261962890625, 0.038330078125, 0.01294708251953125, 3.540515899658203e-05, 0.45263671875, 0.73681640625, 0.00968170166015625, 0.27001953125, 0.01021575927734375, 0.0206298828125, 0.0014810562133789062, 0.0002237558364868164, 0.004840850830078125, 0.059844970703125], "tokens": [284, 1022, 275, 319, 2648, 312, 18795, 2702, 322, 2064, 786, 32, 275, 319, 477, 753, 786, 322, 2064, 786, 372, 4483, 372, 312, 18795, 32, 275, 319, 477, 753, 23477, 7091, 1048, 6660, 32, 886, 14302, 18795, 438, 4797, 275, 319, 351, 333, 687, 48, 20094, 377, 687, 48, 432, 333]}
{"line_number": 385, "line_type": "original", "code": "     */", "entropy": 2.75390625, "is_bug_line": false, "sus_score": 0.40633392333984375, "per_token_entropy": [3.34765625, 2.16015625], "tokens": [262, 569]}
{"line_number": 385, "line_type": "generated", "code": "\n     * <p>Subtracts the value of another fraction from the value of this one,\n     * returning the result in reduced form.  The algorithm follows Knuth, 4.5.1.</p>\n     *\n     * @param fraction ", "entropy": 0.07769775390625, "is_bug_line": false, "sus_score": 0.40633392333984375, "per_token_entropy": [0.488525390625, 0.09307861328125, 0.22412109375, 0.0004742145538330078, 0.0018949508666992188, 0.51416015625, 0.0033168792724609375, 0.053741455078125, 0.00315093994140625, 4.1604042053222656e-05, 0.294189453125, 0.0181427001953125, 0.00028228759765625, 0.09765625, 0.00012493133544921875, 0.0015106201171875, 0.00400543212890625, 0.10089111328125, 0.0044403076171875, 0.52099609375, 3.8623809814453125e-05, 0.0033416748046875, 1.2516975402832031e-05, 0.0003108978271484375, 0.0020351409912109375, 0.021087646484375, 2.4437904357910156e-05, 0.2471923828125, 0.72021484375, 0.007038116455078125, 0.019378662109375, 0.01287841796875, 0.125732421875, 2.384185791015625e-07, 0.006229400634765625, 0.1405029296875, 3.5762786865234375e-07, 0.0001024007797241211, 1.5497207641601562e-06, 1.7642974853515625e-05, 0.0021533966064453125, 0.093994140625, 0.00012814998626708984, 0.0015134811401367188, 0.09234619140625, 0.00016736984252929688, 0.097900390625, 7.62939453125e-06, 0.0112152099609375, 0.00017201900482177734, 0.00032019615173339844, 0.00818634033203125], "tokens": [275, 319, 333, 98, 48, 34460, 101, 322, 786, 432, 4674, 18795, 645, 322, 786, 432, 458, 1591, 30, 275, 319, 14116, 322, 1056, 328, 22974, 2234, 32, 225, 886, 8218, 11588, 44327, 860, 30, 225, 38, 32, 39, 32, 35, 1730, 98, 48, 275, 319, 275, 319, 477, 753, 18795, 225]}
{"line_number": 386, "line_type": "original", "code": "    @Override", "entropy": 5.03125, "is_bug_line": false, "sus_score": 0.40633392333984375, "per_token_entropy": [6.05859375, 3.869140625, 5.16796875], "tokens": [264, 477, 1788]}
{"line_number": 386, "line_type": "generated", "code": "\n     * @param i  the integer to add, must not be {@code null}\n     * @return a {@code Fraction} instance with the resulting values\n     * @throws NullArgumentException if the integer is {@code null}\n     * @throws MathArithmetic", "entropy": 0.0888671875, "is_bug_line": false, "sus_score": 0.40633392333984375, "per_token_entropy": [0.0914306640625, 0.046142578125, 0.433349609375, 0.00574493408203125, 0.62744140625, 0.284912109375, 0.1304931640625, 0.324462890625, 0.0287628173828125, 0.01033782958984375, 0.50244140625, 0.275390625, 0.271728515625, 0.00836944580078125, 0.173583984375, 0.00019741058349609375, 0.0014314651489257812, 0.0020618438720703125, 0.0179595947265625, 0.002346038818359375, 0.0005283355712890625, 0.0163421630859375, 0.082763671875, 0.035247802734375, 0.0024433135986328125, 0.002658843994140625, 0.0009813308715820312, 0.00492095947265625, 0.0005154609680175781, 0.0006532669067382812, 0.0025539398193359375, 0.022308349609375, 0.046295166015625, 0.03582763671875, 0.0006818771362304688, 0.01090240478515625, 0.051300048828125, 7.259845733642578e-05, 0.004276275634765625, 0.0104827880859375, 0.927734375, 0.0025768280029296875, 0.013336181640625, 0.0004172325134277344, 0.00014317035675048828, 0.0006318092346191406, 0.018096923828125, 0.0584716796875, 0.0013294219970703125, 0.019439697265625, 0.0067138671875, 0.0013513565063476562], "tokens": [275, 319, 477, 753, 595, 225, 322, 4991, 372, 1015, 30, 2298, 646, 526, 3088, 687, 744, 111, 275, 319, 477, 601, 312, 3088, 687, 40823, 111, 1980, 623, 322, 14302, 2078, 275, 319, 477, 5117, 9282, 8308, 415, 322, 4991, 438, 3088, 687, 744, 111, 275, 319, 477, 5117, 4175, 37375]}
{"line_number": 406, "line_type": "original", "code": "        if (numerator==Integer.MIN_VALUE) {", "entropy": 1.3525390625, "is_bug_line": false, "sus_score": 0.40633392333984375, "per_token_entropy": [5.66015625, 2.046875, 0.2001953125, 2.005859375, 0.2152099609375, 4.61328125, 1.1484375, 0.0006051063537597656, 0.082763671875, 1.9073486328125e-05, 1.5497207641601562e-05, 1.59765625, 0.0093536376953125], "tokens": [351, 415, 308, 1516, 11290, 379, 3061, 32, 4683, 81, 5975, 27, 301]}
{"line_number": 406, "line_type": "generated", "code": "\n\n    /**\n     * Subtract an integer from the fraction.\n     * @param i the <tt>integer</tt> to subtract.\n     * @return this - i\n     */\n    public Fraction subtract(final int i) {\n        return new Fraction(num", "entropy": 0.05596923828125, "is_bug_line": false, "sus_score": 0.40633392333984375, "per_token_entropy": [1.4111328125, 0.1722412109375, 0.0219573974609375, 2.2292137145996094e-05, 0.400634765625, 0.112060546875, 0.02557373046875, 0.0687255859375, 0.0243988037109375, 0.01258087158203125, 0.014617919921875, 0.00821685791015625, 0.00010895729064941406, 0.0150909423828125, 0.000507354736328125, 0.0028076171875, 0.0125274658203125, 0.1505126953125, 0.0009055137634277344, 6.783008575439453e-05, 0.007770538330078125, 0.0011844635009765625, 1.71661376953125e-05, 0.0001360177993774414, 0.0002617835998535156, 0.130615234375, 0.024261474609375, 0.001007080078125, 0.0003566741943359375, 0.00030803680419921875, 0.0002162456512451172, 0.00974273681640625, 0.05084228515625, 0.005706787109375, 0.018585205078125, 0.042388916015625, 0.005794525146484375, 0.0016202926635742188, 0.0002994537353515625, 0.00041937828063964844, 0.00018322467803955078, 0.0655517578125, 0.00167083740234375, 0.0006394386291503906, 0.0003685951232910156, 0.0006861686706542969, 0.014434814453125, 0.0134429931640625, 0.052154541015625, 0.0001310110092163086, 0.00270843505859375, 0.00222015380859375], "tokens": [446, 1022, 275, 319, 48588, 600, 4991, 645, 322, 18795, 32, 275, 319, 477, 753, 595, 322, 333, 2251, 48, 5823, 377, 2251, 48, 372, 27799, 32, 275, 319, 477, 601, 458, 429, 595, 275, 569, 284, 562, 40823, 27799, 26, 3220, 629, 595, 27, 301, 291, 442, 537, 40823, 26, 1516]}
{"line_number": 411, "line_type": "original", "code": "", "entropy": 2.298828125, "is_bug_line": false, "sus_score": 0.4058391749858856, "per_token_entropy": [2.298828125], "tokens": [203]}
{"line_number": 411, "line_type": "generated", "code": "\n     */\n    public Fraction subtract(final int i) {\n        return new Fraction(numerator - i * denominator, denominator);\n    }\n\n    /**\n     * <p>Multiply the value of this fraction by another, returning the result in\n     * reduced form", "entropy": 0.14794921875, "is_bug_line": false, "sus_score": 0.4058391749858856, "per_token_entropy": [2.11328125, 0.392578125, 0.03668212890625, 0.0105133056640625, 0.0010118484497070312, 0.0009288787841796875, 0.00024700164794921875, 0.1124267578125, 0.003589630126953125, 0.0006814002990722656, 0.0004665851593017578, 0.0015125274658203125, 0.0212554931640625, 0.033660888671875, 0.067626953125, 0.0001671314239501953, 0.002719879150390625, 0.0028591156005859375, 7.271766662597656e-06, 0.0006561279296875, 0.0024890899658203125, 0.007144927978515625, 0.00023472309112548828, 0.0013322830200195312, 0.00130462646484375, 0.0004930496215820312, 0.28515625, 0.0012578964233398438, 0.343017578125, 0.046905517578125, 0.035736083984375, 0.0005388259887695312, 0.94091796875, 0.00023949146270751953, 0.0015277862548828125, 1.287109375, 0.037872314453125, 0.016754150390625, 1.990795135498047e-05, 0.0011644363403320312, 0.0020580291748046875, 0.0013666152954101562, 0.01027679443359375, 0.00678253173828125, 0.00324249267578125, 5.555152893066406e-05, 0.288330078125, 0.2169189453125, 1.349609375, 1.9073486328125e-06, 0.0003466606140136719, 1.3113021850585938e-05], "tokens": [275, 569, 284, 562, 40823, 27799, 26, 3220, 629, 595, 27, 301, 291, 442, 537, 40823, 26, 1516, 11290, 429, 595, 319, 39920, 30, 39920, 293, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 27732, 322, 786, 432, 458, 18795, 810, 4674, 30, 14116, 322, 1056, 328, 275, 319, 22974, 2234]}
{"line_number": 392, "line_type": "original", "code": "     * Gets the fraction as a <tt>long</tt>. This returns the whole number part", "entropy": 1.19921875, "is_bug_line": false, "sus_score": 0.4057272970676422, "per_token_entropy": [5.88671875, 2.42578125, 5.26953125, 0.395751953125, 0.1302490234375, 0.00970458984375, 0.027862548828125, 0.01363372802734375, 0.00904083251953125, 0.00021648406982421875, 5.00390625, 0.139404296875, 7.510185241699219e-05, 0.025054931640625, 0.09771728515625, 2.640625, 0.1741943359375, 1.2177734375, 0.06982421875, 0.44580078125], "tokens": [262, 319, 7124, 322, 18795, 619, 312, 333, 2251, 48, 3222, 377, 2251, 4503, 1348, 3217, 322, 9844, 1451, 1742]}
{"line_number": 392, "line_type": "generated", "code": "\n    /**\n     * Subtract an integer from the fraction.\n     * @param i the <tt>integer</tt> to subtract.\n     * @return this - i\n     */\n    public Fraction subtract(final int i) {\n        return new Fraction(num", "entropy": 0.08428955078125, "is_bug_line": false, "sus_score": 0.4057272970676422, "per_token_entropy": [0.76025390625, 0.06427001953125, 0.0662841796875, 3.409385681152344e-05, 1.20703125, 1.6689453125, 0.01419830322265625, 0.07391357421875, 0.0085906982421875, 0.0037631988525390625, 0.01351165771484375, 0.0084228515625, 0.00020265579223632812, 0.01190185546875, 0.0006699562072753906, 0.004093170166015625, 0.00838470458984375, 0.051025390625, 0.0005145072937011719, 9.036064147949219e-05, 0.00389862060546875, 0.0013589859008789062, 1.0967254638671875e-05, 0.0006732940673828125, 0.0003407001495361328, 0.1568603515625, 0.0219573974609375, 0.0009388923645019531, 0.0009927749633789062, 0.000690460205078125, 0.0002701282501220703, 0.0059814453125, 0.053558349609375, 0.00478363037109375, 0.00783538818359375, 0.018218994140625, 0.006633758544921875, 0.0018262863159179688, 0.00037026405334472656, 0.0103607177734375, 0.0007715225219726562, 0.058074951171875, 0.0013456344604492188, 0.0003230571746826172, 0.00109100341796875, 0.0015058517456054688, 0.00922393798828125, 0.01441192626953125, 0.0282745361328125, 9.655952453613281e-05, 0.0016307830810546875, 0.001270294189453125], "tokens": [284, 1022, 275, 319, 48588, 600, 4991, 645, 322, 18795, 32, 275, 319, 477, 753, 595, 322, 333, 2251, 48, 5823, 377, 2251, 48, 372, 27799, 32, 275, 319, 477, 601, 458, 429, 595, 275, 569, 284, 562, 40823, 27799, 26, 3220, 629, 595, 27, 301, 291, 442, 537, 40823, 26, 1516]}
{"line_number": 388, "line_type": "original", "code": "        return (int)doubleValue();", "entropy": 2.013671875, "is_bug_line": false, "sus_score": 0.4015088677406311, "per_token_entropy": [3.85546875, 1.78515625, 4.34765625, 0.50048828125, 0.3173828125, 2.244140625, 1.0498046875], "tokens": [351, 442, 308, 410, 27, 46952, 473]}
{"line_number": 388, "line_type": "generated", "code": "\n     */\n    public Fraction add(int i) {\n        return add(new Fraction(i));\n    }\n\n    /**\n     * <p>Subtracts the value of another fraction from the value of this one,\n     * returning the result in reduced form.", "entropy": 0.140869140625, "is_bug_line": false, "sus_score": 0.4015088677406311, "per_token_entropy": [1.3779296875, 0.1650390625, 0.0521240234375, 0.01641845703125, 0.00804901123046875, 0.0011434555053710938, 0.00432586669921875, 0.056793212890625, 0.0005354881286621094, 0.0004260540008544922, 0.0045623779296875, 0.07135009765625, 0.7099609375, 0.1307373046875, 1.0537109375, 0.1492919921875, 0.002742767333984375, 0.0017852783203125, 0.0011434555053710938, 0.6728515625, 0.053131103515625, 0.00017070770263671875, 0.09564208984375, 0.01739501953125, 0.0282745361328125, 0.00041294097900390625, 0.69873046875, 0.0001169443130493164, 0.0005459785461425781, 0.203857421875, 0.035186767578125, 0.419189453125, 0.01270294189453125, 3.337860107421875e-05, 0.09808349609375, 0.008544921875, 0.0003502368927001953, 0.046783447265625, 0.0007700920104980469, 0.00186920166015625, 0.0010318756103515625, 0.034149169921875, 0.004909515380859375, 0.759765625, 4.649162292480469e-06, 0.0038242340087890625, 1.4424324035644531e-05, 0.0004570484161376953, 0.0010805130004882812, 0.00978851318359375, 2.0742416381835938e-05, 0.30859375], "tokens": [275, 569, 284, 562, 40823, 1015, 26, 410, 595, 27, 301, 291, 442, 1015, 26, 890, 40823, 26, 91, 876, 284, 320, 446, 1022, 275, 319, 333, 98, 48, 34460, 101, 322, 786, 432, 4674, 18795, 645, 322, 786, 432, 458, 1591, 30, 275, 319, 14116, 322, 1056, 328, 22974, 2234, 32]}
{"line_number": 419, "line_type": "original", "code": "", "entropy": 3.12890625, "is_bug_line": false, "sus_score": 0.3991177976131439, "per_token_entropy": [3.12890625], "tokens": [203]}
{"line_number": 419, "line_type": "generated", "code": "\n     * @param fraction  the fraction to add or subtract, must not be {@code null}\n     * @param isAdd  {@code true} to add, {@code false} to subtract\n     * @return a {@code Fraction} instance with the", "entropy": 0.09820556640625, "is_bug_line": false, "sus_score": 0.3991177976131439, "per_token_entropy": [0.333251953125, 0.1319580078125, 0.1728515625, 0.002323150634765625, 0.0150299072265625, 0.84521484375, 0.0479736328125, 0.2125244140625, 0.004451751708984375, 0.93701171875, 0.98779296875, 0.00029778480529785156, 0.0247039794921875, 0.0016107559204101562, 0.003772735595703125, 2.491474151611328e-05, 0.0213623046875, 7.867813110351562e-06, 0.00013256072998046875, 0.001983642578125, 0.0030422210693359375, 0.00012552738189697266, 0.00024366378784179688, 0.0013532638549804688, 0.07733154296875, 0.4287109375, 0.0487060546875, 0.287109375, 4.792213439941406e-05, 0.0011835098266601562, 0.00013375282287597656, 0.291015625, 0.00339508056640625, 0.0169830322265625, 0.00847625732421875, 0.00020170211791992188, 0.00046706199645996094, 0.005825042724609375, 0.0012273788452148438, 3.790855407714844e-05, 0.0022220611572265625, 0.0007276535034179688, 0.00034499168395996094, 0.0010366439819335938, 0.148681640625, 0.025970458984375, 0.0004513263702392578, 0.0010919570922851562, 0.0003459453582763672, 0.005687713623046875, 7.76052474975586e-05, 8.45193862915039e-05], "tokens": [275, 319, 477, 753, 18795, 225, 322, 18795, 372, 1015, 556, 27799, 30, 2298, 646, 526, 3088, 687, 744, 111, 275, 319, 477, 753, 438, 1103, 225, 3088, 687, 861, 111, 372, 1015, 30, 3088, 687, 901, 111, 372, 27799, 275, 319, 477, 601, 312, 3088, 687, 40823, 111, 1980, 623, 322]}
{"line_number": 438, "line_type": "original", "code": "     */", "entropy": 7.63671875, "is_bug_line": false, "sus_score": 0.3990790843963623, "per_token_entropy": [7.1484375, 8.125], "tokens": [262, 569]}
{"line_number": 438, "line_type": "generated", "code": "\n        final long a = MathUtils.unsignedInt(numerator);\n        final long b = MathUtils.unsignedInt(denominator);\n        final long c = MathUtils.unsignedInt(fraction.numerator);\n        final long d = MathUtils.", "entropy": 0.151611328125, "is_bug_line": false, "sus_score": 0.3990790843963623, "per_token_entropy": [0.249267578125, 0.61669921875, 0.64111328125, 1.7392578125, 0.275634765625, 0.55517578125, 0.3759765625, 0.00018358230590820312, 1.1376953125, 1.419921875, 0.045318603515625, 0.432861328125, 7.069110870361328e-05, 0.050537109375, 0.022857666015625, 0.062469482421875, 0.0026092529296875, 0.0005679130554199219, 0.0006794929504394531, 0.000823974609375, 0.00036334991455078125, 9.40561294555664e-05, 0.0007634162902832031, 0.00012111663818359375, 0.00048542022705078125, 0.1654052734375, 1.1920928955078125e-07, 0.0003733634948730469, 0.0173492431640625, 0.01910400390625, 0.0007343292236328125, 0.0224761962890625, 0.00013744831085205078, 0.0007481575012207031, 4.76837158203125e-05, 0.0001201629638671875, 0.00045609474182128906, 0.00010883808135986328, 0.00010728836059570312, 0.00012254714965820312, 0.0001741647720336914, 0.005100250244140625, 1.430511474609375e-06, 0.002105712890625, 0.005298614501953125, 0.00872802734375, 0.00011491775512695312, 2.6702880859375e-05, 0.000728607177734375, 4.744529724121094e-05, 2.0623207092285156e-05, 4.6253204345703125e-05], "tokens": [291, 1158, 1946, 312, 280, 4175, 2755, 32, 3856, 1428, 26, 1516, 11290, 293, 291, 1158, 1946, 323, 280, 4175, 2755, 32, 3856, 1428, 26, 29805, 9693, 293, 291, 1158, 1946, 281, 280, 4175, 2755, 32, 3856, 1428, 26, 21284, 32, 1516, 11290, 293, 291, 1158, 1946, 343, 280, 4175, 2755, 32]}
{"line_number": 402, "line_type": "original", "code": "     * Return the additive inverse of this fraction.", "entropy": 2.099609375, "is_bug_line": false, "sus_score": 0.39617541432380676, "per_token_entropy": [3.509765625, 2.9453125, 11.078125, 0.1507568359375, 5.078125, 0.0007491111755371094, 0.01398468017578125, 0.00585174560546875, 0.056396484375, 0.06781005859375, 0.1883544921875], "tokens": [262, 319, 2744, 322, 1015, 4823, 19385, 432, 458, 18795, 32]}
{"line_number": 402, "line_type": "generated", "code": "\n     */\n    public Fraction subtract(Fraction fraction) {\n        return addSub(fraction, false /* subtract */);\n    }\n\n    /**\n     * Subtract an integer from the fraction.\n     * @param i the <tt>integer</tt> to subtract.", "entropy": 0.0236663818359375, "is_bug_line": false, "sus_score": 0.39617541432380676, "per_token_entropy": [0.21142578125, 0.04119873046875, 0.0079193115234375, 0.00270843505859375, 0.0003483295440673828, 0.0020427703857421875, 0.0001575946807861328, 0.068115234375, 0.000102996826171875, 0.00223541259765625, 0.00276947021484375, 0.01763916015625, 0.04046630859375, 0.0008287429809570312, 0.00499725341796875, 0.00014388561248779297, 0.00019180774688720703, 0.00125885009765625, 0.006237030029296875, 0.039031982421875, 0.01386260986328125, 0.0015659332275390625, 0.0014247894287109375, 0.01410675048828125, 0.0001430511474609375, 0.050323486328125, 0.01534271240234375, 0.039520263671875, 8.225440979003906e-05, 0.09796142578125, 0.056915283203125, 0.02362060546875, 0.072998046875, 0.01971435546875, 0.0180816650390625, 0.01276397705078125, 0.0290985107421875, 6.532669067382812e-05, 0.00988006591796875, 0.00030994415283203125, 0.0016469955444335938, 0.010711669921875, 0.149658203125, 0.0010890960693359375, 5.2809715270996094e-05, 0.009429931640625, 0.0012845993041992188, 4.398822784423828e-05, 9.226799011230469e-05, 0.00021147727966308594, 0.09619140625, 0.03216552734375], "tokens": [275, 569, 284, 562, 40823, 27799, 26, 20709, 18795, 27, 301, 291, 442, 1015, 1721, 26, 21284, 30, 901, 1257, 27799, 569, 293, 284, 320, 446, 1022, 275, 319, 48588, 600, 4991, 645, 322, 18795, 32, 275, 319, 477, 753, 595, 322, 333, 2251, 48, 5823, 377, 2251, 48, 372, 27799, 32]}
{"line_number": 425, "line_type": "original", "code": "     * @return a {@code Fraction} instance with the resulting values", "entropy": 0.99951171875, "is_bug_line": false, "sus_score": 0.39615291357040405, "per_token_entropy": [4.8359375, 3.90234375, 0.77587890625, 2.830078125, 1.24609375, 0.170654296875, 0.01090240478515625, 0.0093231201171875, 0.00131988525390625, 0.018707275390625, 0.00600433349609375, 0.004100799560546875, 0.0692138671875, 0.10772705078125], "tokens": [262, 319, 477, 601, 312, 3088, 687, 40823, 111, 1980, 623, 322, 14302, 2078]}
{"line_number": 425, "line_type": "generated", "code": "\n     */\n    private Fraction addSub(Fraction fraction, boolean isAdd) {\n        MathUtils.checkNotNull(fraction);\n\n        if (denominator == fraction.getDenominator()) {\n            if (isAdd) {\n                numerator += fraction.getNumerator", "entropy": 0.1707763671875, "is_bug_line": false, "sus_score": 0.39615291357040405, "per_token_entropy": [0.125244140625, 0.021881103515625, 0.0060882568359375, 0.05194091796875, 0.0027332305908203125, 0.0001404285430908203, 7.3909759521484375e-06, 0.0001882314682006836, 0.0482177734375, 0.00017786026000976562, 0.00035119056701660156, 0.258056640625, 7.605552673339844e-05, 5.412101745605469e-05, 0.0052337646484375, 0.046173095703125, 0.82373046875, 0.9306640625, 0.1494140625, 4.839897155761719e-05, 0.005725860595703125, 0.00012195110321044922, 0.00010764598846435547, 0.01019287109375, 0.83984375, 0.6474609375, 0.04583740234375, 1.3115234375, 2.0265579223632812e-06, 0.364013671875, 0.005184173583984375, 6.35385513305664e-05, 0.64404296875, 0.0005316734313964844, 9.5367431640625e-07, 0.01541900634765625, 0.004215240478515625, 0.06536865234375, 0.91064453125, 0.018096923828125, 0.208984375, 0.0014791488647460938, 0.01507568359375, 0.0013875961303710938, 0.026092529296875, 0.77490234375, 0.0002930164337158203, 0.331787109375, 0.00045990943908691406, 4.363059997558594e-05, 0.160888671875, 3.5762786865234375e-06], "tokens": [275, 569, 284, 945, 40823, 1015, 1721, 26, 20709, 18795, 30, 1905, 438, 1103, 27, 301, 291, 4175, 2755, 32, 42698, 26, 21284, 293, 584, 415, 308, 29805, 9693, 610, 18795, 32, 371, 43484, 9693, 1157, 301, 324, 415, 308, 297, 1103, 27, 301, 400, 1929, 11290, 1454, 18795, 32, 15207, 11290]}
{"line_number": 429, "line_type": "original", "code": "     */", "entropy": 4.79296875, "is_bug_line": false, "sus_score": 0.3958284854888916, "per_token_entropy": [6.12109375, 3.46484375], "tokens": [262, 569]}
{"line_number": 429, "line_type": "generated", "code": "\n        }\n        if (denominator == fraction.denominator) {\n            if (isAdd) {\n                numerator += fraction.numerator;\n            } else {\n                numerator -= fraction.numerator;\n            }\n        } else {\n            // use", "entropy": 0.20703125, "is_bug_line": false, "sus_score": 0.3958284854888916, "per_token_entropy": [0.369140625, 0.8486328125, 1.03125, 0.890625, 0.04510498046875, 1.421875, 3.5762786865234375e-06, 0.21630859375, 0.013275146484375, 8.440017700195312e-05, 0.498046875, 4.76837158203125e-07, 0.009765625, 0.00341796875, 0.062103271484375, 1.076171875, 0.01166534423828125, 0.12646484375, 0.0004982948303222656, 0.009002685546875, 0.0012998580932617188, 0.040740966796875, 1.0302734375, 0.0002646446228027344, 0.386962890625, 0.0002880096435546875, 2.7179718017578125e-05, 0.002079010009765625, 6.318092346191406e-06, 0.0007076263427734375, 0.1573486328125, 0.0003554821014404297, 0.0032901763916015625, 0.0017786026000976562, 0.0115814208984375, 0.003978729248046875, 1.3113021850585938e-06, 0.0022449493408203125, 0.00013399124145507812, 3.886222839355469e-05, 0.00017321109771728516, 2.384185791015625e-05, 0.00022912025451660156, 0.2626953125, 0.0005540847778320312, 0.84765625, 0.0004856586456298828, 0.004306793212890625, 0.007015228271484375, 0.03863525390625, 0.814453125, 0.51416015625], "tokens": [291, 320, 291, 415, 308, 29805, 9693, 610, 18795, 32, 29805, 9693, 27, 301, 324, 415, 308, 297, 1103, 27, 301, 400, 1929, 11290, 1454, 18795, 32, 1516, 11290, 45, 324, 320, 813, 301, 400, 1929, 11290, 5912, 18795, 32, 1516, 11290, 45, 324, 320, 291, 320, 813, 301, 324, 434, 793]}
{"line_number": 407, "line_type": "original", "code": "            throw new MathArithmeticException(LocalizedFormats.OVERFLOW_IN_FRACTION, numerator, denominator);", "entropy": 1.0615234375, "is_bug_line": false, "sus_score": 0.3955801725387573, "per_token_entropy": [7.3515625, 3.41796875, 0.27734375, 0.1763916015625, 0.0296783447265625, 1.3113021850585938e-06, 0.6435546875, 0.2166748046875, 0.019561767578125, 0.0011663436889648438, 0.76220703125, 0.000385284423828125, 0.57177734375, 0.00342559814453125, 0.004016876220703125, 0.10418701171875, 7.987022399902344e-06, 5.9453125, 2.86328125, 0.0533447265625, 0.1339111328125, 1.3837890625, 0.459228515625], "tokens": [1468, 1422, 537, 4175, 37375, 984, 26, 24225, 19298, 32, 9425, 18118, 81, 521, 81, 4002, 8750, 30, 1929, 11290, 30, 39920, 293]}
{"line_number": 407, "line_type": "generated", "code": "\n    /**\n     * Subtract an integer from the fraction.\n     * @param i the <tt>integer</tt> to subtract.\n     * @return this - i\n     */\n    public Fraction subtract(final int i) {\n        return new Fraction(num", "entropy": 0.057952880859375, "is_bug_line": false, "sus_score": 0.3955801725387573, "per_token_entropy": [0.8583984375, 0.265625, 0.04510498046875, 8.368492126464844e-05, 0.85986328125, 0.1754150390625, 0.032867431640625, 0.06396484375, 0.0265960693359375, 0.012054443359375, 0.0172882080078125, 0.01186370849609375, 0.0004458427429199219, 0.01513671875, 0.0008578300476074219, 0.0038471221923828125, 0.01418304443359375, 0.1474609375, 0.00083160400390625, 7.605552673339844e-05, 0.007778167724609375, 0.001178741455078125, 1.5020370483398438e-05, 0.0001823902130126953, 0.00032067298889160156, 0.144287109375, 0.0234527587890625, 0.0010204315185546875, 0.0006632804870605469, 0.0005440711975097656, 0.00018858909606933594, 0.01025390625, 0.0543212890625, 0.005527496337890625, 0.0205078125, 0.022247314453125, 0.01050567626953125, 0.00339508056640625, 0.0005679130554199219, 0.0007042884826660156, 0.00040984153747558594, 0.06671142578125, 0.0014553070068359375, 0.0006246566772460938, 0.0003647804260253906, 0.00128173828125, 0.0111541748046875, 0.0195465087890625, 0.046783447265625, 0.00015664100646972656, 0.0027179718017578125, 0.0035457611083984375], "tokens": [284, 1022, 275, 319, 48588, 600, 4991, 645, 322, 18795, 32, 275, 319, 477, 753, 595, 322, 333, 2251, 48, 5823, 377, 2251, 48, 372, 27799, 32, 275, 319, 477, 601, 458, 429, 595, 275, 569, 284, 562, 40823, 27799, 26, 3220, 629, 595, 27, 301, 291, 442, 537, 40823, 26, 1516]}
