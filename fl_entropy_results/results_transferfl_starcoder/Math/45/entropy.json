{"line_number": 57, "line_type": "original", "code": "     *", "entropy": 4.015625, "is_bug_line": false, "sus_score": 0.36283186078071594, "per_token_entropy": [6.14453125, 1.884765625], "tokens": [262, 319]}
{"line_number": 57, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Compute the difference of this matrix and {@code m}.\n     *\n     * @param m Matrix to be subtracted.\n     * @return {@code this} - {@code m}.\n     * @throws org.apache.commons", "entropy": 0.0780029296875, "is_bug_line": false, "sus_score": 0.36283186078071594, "per_token_entropy": [0.5029296875, 0.6728515625, 0.252197265625, 0.00984954833984375, 0.5498046875, 2.9206275939941406e-05, 0.4853515625, 0.1669921875, 0.115966796875, 0.166259765625, 0.00010120868682861328, 0.0015897750854492188, 0.002468109130859375, 0.0335693359375, 9.66787338256836e-05, 0.00010848045349121094, 0.0021572113037109375, 0.01279449462890625, 4.410743713378906e-05, 0.0162811279296875, 5.996227264404297e-05, 0.0015316009521484375, 0.0002694129943847656, 0.0004012584686279297, 0.003093719482421875, 0.00010991096496582031, 0.0005993843078613281, 0.0276336669921875, 0.00020265579223632812, 0.005084991455078125, 0.0005092620849609375, 7.867813110351562e-06, 0.00042176246643066406, 0.0004093647003173828, 0.0066375732421875, 5.996227264404297e-05, 0.00042319297790527344, 0.00027251243591308594, 0.625, 0.3603515625, 7.867813110351562e-05, 0.00026297569274902344, 0.0029449462890625, 0.0016698837280273438, 0.0009751319885253906, 0.00020051002502441406, 0.0004794597625732422, 0.022216796875, -0.0, 5.4836273193359375e-06, 4.76837158203125e-07, 2.1696090698242188e-05], "tokens": [284, 320, 446, 1022, 275, 319, 12836, 322, 10563, 432, 458, 5045, 461, 3088, 687, 345, 4009, 275, 319, 275, 319, 477, 753, 345, 9320, 372, 526, 27799, 318, 32, 275, 319, 477, 601, 3088, 687, 458, 111, 429, 3088, 687, 345, 4009, 275, 319, 477, 5117, 1086, 32, 2104, 32, 8369]}
{"line_number": 49, "line_type": "original", "code": "        super(rowDimension, columnDimension);", "entropy": 4.09765625, "is_bug_line": true, "sus_score": 0.36268019676208496, "per_token_entropy": [3.32421875, 10.0625, 10.1484375, 0.7236328125, 10.90625, 0.212646484375, 0.257080078125, 0.00806427001953125, 1.2216796875], "tokens": [351, 2599, 26, 643, 9883, 30, 2623, 9883, 293]}
{"line_number": 49, "line_type": "generated", "code": "\n            final int column = iterator.key() % columns;", "entropy": 0.11151123046875, "is_bug_line": true, "sus_score": 0.36268019676208496, "per_token_entropy": [0.214599609375, 0.81494140625, 0.063232421875, 0.161865234375, 0.0018558502197265625, 0.00870513916015625, 3.7670135498046875e-05, 0.0005931854248046875, 0.000335693359375, 0.066162109375, 0.003448486328125, 0.0024890899658203125], "tokens": [324, 1158, 629, 2623, 280, 10032, 32, 678, 346, 904, 6090, 45]}
{"line_number": 54, "line_type": "original", "code": "", "entropy": 4.59765625, "is_bug_line": false, "sus_score": 0.344363808631897, "per_token_entropy": [4.59765625], "tokens": [203]}
{"line_number": 54, "line_type": "generated", "code": "\n        return out;\n    }\n\n    /**\n     * Compute the difference of this matrix and {@code m}.\n     *\n     * @param m Matrix to be subtracted.\n     * @return {@code this} + {@code m}.\n     * @throws org", "entropy": 0.067626953125, "is_bug_line": false, "sus_score": 0.344363808631897, "per_token_entropy": [0.1585693359375, 0.05364990234375, 0.0032520294189453125, 0.005840301513671875, 0.33203125, 0.0017337799072265625, 0.359619140625, 0.00783538818359375, 0.58740234375, 2.6106834411621094e-05, 0.475341796875, 0.130126953125, 0.1697998046875, 0.1832275390625, 9.5367431640625e-05, 0.0012826919555664062, 0.002132415771484375, 0.0264434814453125, 7.295608520507812e-05, 8.344650268554688e-05, 0.0017766952514648438, 0.0018396377563476562, 1.4781951904296875e-05, 0.00859832763671875, 2.7418136596679688e-06, 0.0009751319885253906, 0.0001976490020751953, 0.00032973289489746094, 0.002429962158203125, 9.524822235107422e-05, 0.0005168914794921875, 0.02532958984375, 0.00018465518951416016, 0.0042266845703125, 0.0003597736358642578, 5.0067901611328125e-06, 0.0005216598510742188, 0.0002856254577636719, 0.005260467529296875, 6.008148193359375e-05, 0.0003495216369628906, 0.0002410411834716797, 0.939453125, 0.00714111328125, 0.00011539459228515625, 0.0008993148803710938, 0.002513885498046875, 0.0008988380432128906, 0.0005130767822265625, 0.00021708011627197266, 0.0004088878631591797, 0.011383056640625], "tokens": [291, 442, 963, 45, 284, 320, 446, 1022, 275, 319, 12836, 322, 10563, 432, 458, 5045, 461, 3088, 687, 345, 4009, 275, 319, 275, 319, 477, 753, 345, 9320, 372, 526, 27799, 318, 32, 275, 319, 477, 601, 3088, 687, 458, 111, 474, 3088, 687, 345, 4009, 275, 319, 477, 5117, 1086]}
{"line_number": 50, "line_type": "original", "code": "        this.rows = rowDimension;", "entropy": 2.638671875, "is_bug_line": true, "sus_score": 0.32917913794517517, "per_token_entropy": [3.52734375, 5.30859375, 0.01181793212890625, 7.36328125, 0.2098388671875, 1.71484375, 2.92578125, 0.0443115234375], "tokens": [351, 458, 32, 2138, 280, 2698, 9883, 45]}
{"line_number": 50, "line_type": "generated", "code": "\n            out.entries.addTo(row * columns + iterator.key() % columns, iterator.value());\n        }\n\n        return out;\n    }\n\n    /**\n     * Compute the difference of this matrix and {@code m}.\n     *\n     * @param m", "entropy": 0.1358642578125, "is_bug_line": true, "sus_score": 0.32917913794517517, "per_token_entropy": [0.167236328125, 1.05859375, 0.0010528564453125, 0.47705078125, 0.0017871856689453125, 0.3583984375, 1.642578125, 0.06414794921875, 0.25244140625, 0.0245819091796875, 0.006809234619140625, 0.01343536376953125, 0.0010356903076171875, 0.051361083984375, 0.1201171875, 0.07098388671875, 0.0038852691650390625, 0.004055023193359375, 0.189453125, 0.0005297660827636719, 0.0037403106689453125, 0.0125885009765625, 0.054840087890625, 0.0009160041809082031, 0.492431640625, 0.012298583984375, 0.00099945068359375, 0.0006160736083984375, 0.41162109375, 8.0108642578125e-05, 0.12457275390625, 0.007091522216796875, 0.52685546875, 3.0517578125e-05, 0.41064453125, 0.132568359375, 0.1474609375, 0.1728515625, 0.0001049041748046875, 0.001224517822265625, 0.002471923828125, 0.0263824462890625, 8.571147918701172e-05, 9.143352508544922e-05, 0.0017805099487304688, 0.0015773773193359375, 1.1801719665527344e-05, 0.00769805908203125, 2.5033950805664062e-06, 0.0009202957153320312, 0.00020420551300048828, 0.0003159046173095703], "tokens": [324, 963, 32, 9150, 32, 23402, 26, 643, 319, 6090, 474, 10032, 32, 678, 346, 904, 6090, 30, 10032, 32, 853, 1035, 291, 320, 584, 442, 963, 45, 284, 320, 446, 1022, 275, 319, 12836, 322, 10563, 432, 458, 5045, 461, 3088, 687, 345, 4009, 275, 319, 275, 319, 477, 753, 345]}
{"line_number": 51, "line_type": "original", "code": "        this.columns = columnDimension;", "entropy": 3.705078125, "is_bug_line": true, "sus_score": 0.32356828451156616, "per_token_entropy": [4.3671875, 5.42578125, 0.0068511962890625, 11.734375, 1.263671875, 5.54296875, 1.1767578125, 0.127685546875], "tokens": [351, 458, 32, 6057, 280, 2623, 9883, 45]}
{"line_number": 51, "line_type": "generated", "code": "\n            final int column = iterator.key() % columns;\n            out.setEntry(row, column, iterator.value() + out.getEntry(row, column));\n        }\n\n        return out;\n    }\n\n    /** {@inheritDoc} */\n    @Override", "entropy": 0.1776123046875, "is_bug_line": true, "sus_score": 0.32356828451156616, "per_token_entropy": [0.10205078125, 1.0185546875, 0.11309814453125, 0.2415771484375, 0.0022335052490234375, 0.0079345703125, 3.838539123535156e-05, 0.0006647109985351562, 0.0005197525024414062, 0.0670166015625, 0.00372314453125, 0.00296783447265625, 0.26025390625, 0.79345703125, 0.000797271728515625, 1.392578125, 0.0103607177734375, 0.005840301513671875, 0.00713348388671875, 0.0005178451538085938, 0.00911712646484375, 0.00018525123596191406, 1.376953125, 0.0014543533325195312, 0.01220703125, 1.2451171875, 0.0086212158203125, 0.462890625, 0.0004489421844482422, 0.07086181640625, 0.0028553009033203125, 0.001194000244140625, 0.00017917156219482422, 0.004817962646484375, 0.002712249755859375, 0.08074951171875, 0.00133514404296875, 0.436767578125, 0.0068817138671875, 0.0008687973022460938, 0.0005359649658203125, 0.422607421875, 0.00012111663818359375, 0.128173828125, 0.0092620849609375, 0.8740234375, 2.562999725341797e-05, 0.0005660057067871094, 0.001956939697265625, 0.01007843017578125, 0.027984619140625, 0.00038504600524902344], "tokens": [324, 1158, 629, 2623, 280, 10032, 32, 678, 346, 904, 6090, 45, 324, 963, 32, 470, 2711, 26, 643, 30, 2623, 30, 10032, 32, 853, 346, 474, 963, 32, 48895, 26, 643, 30, 2623, 876, 291, 320, 584, 442, 963, 45, 284, 320, 446, 1022, 3088, 18446, 111, 569, 284, 477, 1788]}
{"line_number": 60, "line_type": "original", "code": "    public OpenMapRealMatrix(OpenMapRealMatrix matrix) {", "entropy": 1.564453125, "is_bug_line": false, "sus_score": 0.22532247006893158, "per_token_entropy": [4.67578125, 0.4345703125, 1.8916015625, 0.01102447509765625, 0.00022673606872558594, 0.005100250244140625, 11.984375, 0.888671875, 0.00627899169921875, 0.0002639293670654297, 0.0003898143768310547, 1.7041015625, 0.0297393798828125, 0.279296875], "tokens": [264, 562, 3927, 1208, 6877, 4161, 26, 2961, 1208, 6877, 4161, 5045, 27, 301]}
{"line_number": 60, "line_type": "generated", "code": "\n    public RealMatrix add(RealMatrix m) {\n        return copy().add(m);\n    }\n\n    /**\n     * Compute the difference of this matrix and {@code m}.\n     *\n     * @param m Matrix to be subtracted.\n     * @", "entropy": 0.165283203125, "is_bug_line": false, "sus_score": 0.22532247006893158, "per_token_entropy": [0.05108642578125, 0.1629638671875, 0.7685546875, 0.019622802734375, 0.213134765625, 0.0009431838989257812, 0.62451171875, 9.5367431640625e-06, 0.0015878677368164062, 0.0013093948364257812, 0.0080413818359375, 0.5947265625, 1.0185546875, 2.619140625, 0.0021381378173828125, 0.08367919921875, 0.43115234375, 0.01067352294921875, 0.142822265625, 0.0276641845703125, 0.0013093948364257812, 0.119873046875, 0.005825042724609375, 0.623046875, 4.8995018005371094e-05, 0.58544921875, 0.12432861328125, 0.11419677734375, 0.142333984375, 0.00012636184692382812, 0.0021266937255859375, 0.00301361083984375, 0.02630615234375, 9.107589721679688e-05, 0.0001163482666015625, 0.0023937225341796875, 0.0021514892578125, 2.1219253540039062e-05, 0.01189422607421875, 2.002716064453125e-05, 0.000957489013671875, 0.0001996755599975586, 0.0002498626708984375, 0.0026569366455078125, 0.0001214742660522461, 0.0006084442138671875, 0.03765869140625, 0.00031685829162597656, 0.00592803955078125, 0.00033211708068847656, 9.179115295410156e-06, 0.0005841255187988281], "tokens": [284, 562, 11443, 4161, 1015, 26, 6877, 4161, 345, 27, 301, 291, 442, 1933, 922, 669, 26, 95, 293, 284, 320, 446, 1022, 275, 319, 12836, 322, 10563, 432, 458, 5045, 461, 3088, 687, 345, 4009, 275, 319, 275, 319, 477, 753, 345, 9320, 372, 526, 27799, 318, 32, 275, 319, 477]}
{"line_number": 53, "line_type": "original", "code": "    }", "entropy": 2.025390625, "is_bug_line": false, "sus_score": 0.1949205845594406, "per_token_entropy": [3.650390625, 0.401611328125], "tokens": [264, 320]}
{"line_number": 53, "line_type": "generated", "code": "\n        }\n\n        return out;\n    }\n\n    /**\n     * Compute the difference of this matrix and {@code m}.\n     *\n     * @param m Matrix to be subtracted.\n     * @return {@code this} - m.\n     * @throws org", "entropy": 0.09869384765625, "is_bug_line": false, "sus_score": 0.1949205845594406, "per_token_entropy": [0.373779296875, 0.27978515625, 0.6708984375, 0.0155487060546875, 0.0011844635009765625, 0.0012378692626953125, 0.29443359375, 0.0002734661102294922, 0.153076171875, 0.006328582763671875, 0.552734375, 2.8014183044433594e-05, 0.412353515625, 0.1400146484375, 0.1322021484375, 0.1707763671875, 9.036064147949219e-05, 0.0011701583862304688, 0.00212860107421875, 0.0309295654296875, 7.390975952148438e-05, 8.845329284667969e-05, 0.0016536712646484375, 0.0017642974853515625, 1.4185905456542969e-05, 0.00814056396484375, 3.4570693969726562e-06, 0.0008363723754882812, 0.0001621246337890625, 0.0003113746643066406, 0.0024013519287109375, 8.738040924072266e-05, 0.0004246234893798828, 0.0237579345703125, 0.00019824504852294922, 0.00392913818359375, 0.0003197193145751953, 5.4836273193359375e-06, 0.0006089210510253906, 0.00023043155670166016, 0.004787445068359375, 5.602836608886719e-05, 0.00037860870361328125, 0.00024056434631347656, 0.544921875, 1.23046875, 0.0126800537109375, 0.0011148452758789062, 0.0017881393432617188, 0.00030303001403808594, 0.0006971359252929688, 0.05242919921875], "tokens": [291, 320, 584, 442, 963, 45, 284, 320, 446, 1022, 275, 319, 12836, 322, 10563, 432, 458, 5045, 461, 3088, 687, 345, 4009, 275, 319, 275, 319, 477, 753, 345, 9320, 372, 526, 27799, 318, 32, 275, 319, 477, 601, 3088, 687, 458, 111, 429, 345, 32, 275, 319, 477, 5117, 1086]}
{"line_number": 52, "line_type": "original", "code": "        this.entries = new OpenIntToDoubleHashMap(0.0);", "entropy": 2.126953125, "is_bug_line": true, "sus_score": 0.18092899024486542, "per_token_entropy": [2.46875, 7.15625, 0.01221466064453125, 0.650390625, 10.3671875, 3.037109375, 0.0333251953125, 0.01212310791015625, 0.0004572868347167969, 0.00042939186096191406, 0.09375, 6.33984375, 1.4462890625, 0.033721923828125, 0.25927734375], "tokens": [351, 458, 32, 9150, 280, 537, 3927, 1428, 40609, 8254, 26, 34, 32, 34, 293]}
{"line_number": 52, "line_type": "generated", "code": "\n            if (out.entries.containsKey(row * columns + col)) {\n                out.entries.addToValue(row * columns + col, iterator.value());\n            } else {\n                out.entries.put(row * columns + col, iterator", "entropy": 0.119140625, "is_bug_line": true, "sus_score": 0.18092899024486542, "per_token_entropy": [0.8134765625, 1.9013671875, 0.170166015625, 0.7392578125, 0.0009388923645019531, 0.277099609375, 0.0027828216552734375, 0.01464080810546875, 0.005260467529296875, 0.51611328125, 0.056671142578125, 0.048980712890625, 0.0016679763793945312, 0.0011644363403320312, 0.0162506103515625, 0.0155181884765625, 0.1527099609375, 0.235107421875, 0.00014150142669677734, 0.12322998046875, 0.0010986328125, 0.5546875, 0.245849609375, 0.0012979507446289062, 0.01268768310546875, 0.002185821533203125, 0.015045166015625, 0.0005125999450683594, 0.000362396240234375, 0.0006089210510253906, 0.08197021484375, 0.00046706199645996094, 0.00400543212890625, 0.010345458984375, 0.041961669921875, 0.0010232925415039062, 0.02880859375, 0.00409698486328125, 0.029296875, 0.008697509765625, 1.4662742614746094e-05, 0.0312042236328125, 6.413459777832031e-05, 0.0002105236053466797, 0.008056640625, 0.00823211669921875, 0.0007767677307128906, 0.0016965866088867188, 0.00017273426055908203, 0.0001283884048461914, 0.0003185272216796875, 0.006763458251953125], "tokens": [324, 415, 308, 541, 32, 9150, 32, 15943, 26, 643, 319, 6090, 474, 932, 490, 301, 400, 963, 32, 9150, 32, 23402, 882, 26, 643, 319, 6090, 474, 932, 30, 10032, 32, 853, 1035, 324, 320, 813, 301, 400, 963, 32, 9150, 32, 524, 26, 643, 319, 6090, 474, 932, 30, 10032]}
