{"line_number": 294, "line_type": "original", "code": "                optima[i + 1]       = currX;", "entropy": 1.3623046875, "is_bug_line": false, "sus_score": 0.6225306391716003, "per_token_entropy": [9.1640625, 3.38671875, 0.0017061233520507812, 0.53125, 2.5, 2.40234375, 0.0010595321655273438, 0.0016374588012695312, 0.0010175704956054688, 0.5458984375, 0.00026106834411621094, 0.50732421875, 0.01316070556640625, 0.01421356201171875], "tokens": [2071, 6552, 83, 77, 91, 474, 225, 35, 79, 958, 280, 9985, 74, 45]}
{"line_number": 294, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6225306391716003, "per_token_entropy": [], "tokens": []}
{"line_number": 295, "line_type": "original", "code": "                optimaValues[i + 1] = currY;", "entropy": 1.279296875, "is_bug_line": false, "sus_score": 0.6217336058616638, "per_token_entropy": [9.0625, 3.900390625, 0.0024814605712890625, 1.8720703125, 0.263671875, 0.896484375, 1.5869140625, 0.0005617141723632812, 0.001312255859375, 0.0017995834350585938, 0.006305694580078125, 0.26171875, 0.0176849365234375, 0.025299072265625], "tokens": [2071, 6552, 83, 3354, 77, 91, 474, 225, 35, 79, 280, 9985, 75, 45]}
{"line_number": 295, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6217336058616638, "per_token_entropy": [], "tokens": []}
{"line_number": 444, "line_type": "original", "code": "", "entropy": 0.38671875, "is_bug_line": false, "sus_score": 0.6178820729255676, "per_token_entropy": [0.38671875], "tokens": [203]}
{"line_number": 444, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6178820729255676, "per_token_entropy": [], "tokens": []}
{"line_number": 308, "line_type": "original", "code": "        return optima[0];", "entropy": 1.0732421875, "is_bug_line": false, "sus_score": 0.5908716917037964, "per_token_entropy": [5.5703125, 1.3095703125, 0.5908203125, 7.939338684082031e-05, 0.02716064453125, 0.005702972412109375, 0.013702392578125], "tokens": [351, 442, 6552, 83, 77, 34, 970]}
{"line_number": 308, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5908716917037964, "per_token_entropy": [], "tokens": []}
{"line_number": 43, "line_type": "original", "code": "    /** Underlying classical optimizer. */", "entropy": 2.6484375, "is_bug_line": false, "sus_score": 0.5905472636222839, "per_token_entropy": [2.08984375, 4.34375, 13.15625, 0.06756591796875, 3.951171875, 0.034637451171875, 0.056304931640625, 0.09454345703125, 0.0379638671875], "tokens": [264, 1022, 20107, 9461, 443, 1578, 16302, 32, 569]}
{"line_number": 43, "line_type": "generated", "code": "\n    public int getMaximalIterationCount() {\n        return maxIterations;\n    }\n\n    /** {@inheritDoc} */", "entropy": 0.12152099609375, "is_bug_line": false, "sus_score": 0.5905472636222839, "per_token_entropy": [0.1822509765625, 0.07867431640625, 0.75390625, 0.278564453125, 0.291015625, 0.077880859375, 2.181529998779297e-05, 0.0008177757263183594, 0.0033016204833984375, 0.057769775390625, 0.011077880859375, 0.1510009765625, 0.0032939910888671875, 0.01204681396484375, 0.01216888427734375, 0.0006728172302246094, 0.2401123046875, 0.0229339599609375, 0.495849609375, 2.872943878173828e-05, 5.173683166503906e-05, 0.0010814666748046875], "tokens": [284, 562, 629, 39486, 2977, 21863, 1534, 346, 301, 291, 442, 1769, 31219, 45, 284, 320, 446, 1022, 3088, 18446, 111, 569]}
{"line_number": 301, "line_type": "original", "code": "        if (Double.isNaN(optima[0])) {", "entropy": 0.8310546875, "is_bug_line": false, "sus_score": 0.5830242037773132, "per_token_entropy": [4.984375, 3.185546875, 0.0997314453125, 1.0595703125, 0.000598907470703125, 0.06427001953125, 0.0005350112915039062, 0.873046875, 0.0002605915069580078, 0.36474609375, 0.06683349609375, 0.054534912109375, 0.048492431640625], "tokens": [351, 415, 308, 4075, 32, 26821, 26, 8311, 83, 77, 34, 5259, 301]}
{"line_number": 301, "line_type": "generated", "code": "\n        throw new OptimizationException(\n                LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,\n                starts);\n    }\n\n    /** {@inheritDoc} */\n    public double[] getOptima() throws IllegalStateException {\n        if (optima", "entropy": 0.15576171875, "is_bug_line": false, "sus_score": 0.5830242037773132, "per_token_entropy": [1.796875, 0.70751953125, 0.09088134765625, 0.677734375, 3.7670135498046875e-05, 0.00800323486328125, 0.3486328125, 0.0023670196533203125, 5.2809715270996094e-05, 2.7418136596679688e-05, 0.0001081228256225586, 0.16455078125, 0.0002818107604980469, 0.00432586669921875, 0.0003719329833984375, 1.704692840576172e-05, 0.002765655517578125, 0.0016641616821289062, 0.00015211105346679688, 0.06591796875, 2.0265579223632812e-05, 0.00011420249938964844, 3.147125244140625e-05, 0.00273895263671875, 0.08135986328125, 0.29736328125, 0.0213623046875, 0.0134124755859375, 0.0704345703125, 0.002201080322265625, 0.45654296875, 0.0261383056640625, 0.173583984375, 0.00028443336486816406, 0.0003578662872314453, 0.0010890960693359375, 0.01078033447265625, 0.04620361328125, 0.82177734375, 0.380615234375, 0.03607177734375, 0.2413330078125, 0.0286102294921875, 0.002696990966796875, 0.78759765625, 0.5185546875, 0.007602691650390625, 0.03515625, 0.158203125, 0.0019855499267578125, 0.005077362060546875, 6.4373016357421875e-06], "tokens": [291, 1422, 537, 41916, 984, 26, 400, 7089, 1191, 19298, 32, 2576, 81, 25127, 7143, 1955, 81, 12003, 81, 15205, 81, 7383, 81, 9864, 30, 400, 11187, 293, 284, 320, 446, 1022, 3088, 18446, 111, 569, 284, 562, 2064, 1178, 622, 5482, 10510, 346, 2571, 21665, 301, 291, 415, 308, 8311, 83]}
{"line_number": 296, "line_type": "original", "code": "                currX = optima[j];", "entropy": 1.6943359375, "is_bug_line": false, "sus_score": 0.5329451560974121, "per_token_entropy": [9.3515625, 2.494140625, 1.595703125, 0.041748046875, 0.90576171875, 0.00010132789611816406, 0.01126861572265625, 0.82958984375, 0.017547607421875], "tokens": [2071, 9985, 74, 280, 6552, 83, 77, 92, 970]}
{"line_number": 296, "line_type": "generated", "code": "\n    /** {@inheritDoc} */\n    public double[] getOptima() {\n        return optima.clone();\n    }\n\n    /** {@inheritDoc} */\n    public double[] getOptimaValues() {\n        return optimaValues.clone();\n    }", "entropy": 0.1268310546875, "is_bug_line": false, "sus_score": 0.5329451560974121, "per_token_entropy": [1.263671875, 0.50830078125, 0.8544921875, 0.0007128715515136719, 0.0006885528564453125, 0.0032634735107421875, 0.0205841064453125, 0.11822509765625, 0.9384765625, 0.36669921875, 0.0215911865234375, 0.115234375, 0.0269622802734375, 0.0032978057861328125, 0.52880859375, 0.038787841796875, 0.133544921875, 0.0211944580078125, 5.125999450683594e-06, 0.1688232421875, 0.00011718273162841797, 0.0006880760192871094, 0.01560211181640625, 0.00333404541015625, 0.41748046875, 0.0128631591796875, 0.09423828125, 0.00017917156219482422, 0.00019431114196777344, 0.0007543563842773438, 0.003955841064453125, 0.0172882080078125, 0.1956787109375, 0.1553955078125, 0.00389862060546875, 0.082763671875, 0.01476287841796875, 0.0012159347534179688, 0.001369476318359375, 0.1585693359375, 0.00647735595703125, 0.007534027099609375, 0.00177764892578125, 4.601478576660156e-05, 0.0018701553344726562, 0.0016107559204101562, 3.5881996154785156e-05, 0.0002980232238769531, 0.004734039306640625, 0.00110626220703125], "tokens": [284, 1022, 3088, 18446, 111, 569, 284, 562, 2064, 1178, 622, 5482, 10510, 346, 301, 291, 442, 6552, 83, 32, 6358, 473, 284, 320, 446, 1022, 3088, 18446, 111, 569, 284, 562, 2064, 1178, 622, 5482, 10510, 3354, 346, 301, 291, 442, 6552, 83, 3354, 32, 6358, 473, 284, 320]}
{"line_number": 297, "line_type": "original", "code": "                currY = optimaValues[j];", "entropy": 2.01171875, "is_bug_line": false, "sus_score": 0.5304207801818848, "per_token_entropy": [9.8203125, 6.12890625, 1.6767578125, 0.017608642578125, 1.640625, 0.0001493692398071289, 0.006427764892578125, 0.0018301010131835938, 0.81103515625, 0.00528717041015625], "tokens": [2071, 9985, 75, 280, 6552, 83, 3354, 77, 92, 970]}
{"line_number": 297, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5304207801818848, "per_token_entropy": [], "tokens": []}
{"line_number": 280, "line_type": "original", "code": "                int i = j - 1;", "entropy": 2.39453125, "is_bug_line": false, "sus_score": 0.49267616868019104, "per_token_entropy": [8.5234375, 4.30859375, 0.44580078125, 0.238037109375, 6.6015625, 1.3232421875, 0.0067138671875, 0.05126953125, 0.04296875], "tokens": [2071, 629, 595, 280, 594, 429, 225, 35, 45]}
{"line_number": 280, "line_type": "generated", "code": "\n    /**\n     * Get the optimum found by the multi-start algorithm.\n     *\n     * @return the optimum point\n     * @throws NoDataException if no optimum point has been found yet\n     */\n    public double getOptimum() throws No", "entropy": 0.43115234375, "is_bug_line": false, "sus_score": 0.49267616868019104, "per_token_entropy": [1.3544921875, 0.6240234375, 0.7109375, 0.00043964385986328125, 1.490234375, 0.0867919921875, 2.533203125, 0.0008883476257324219, 2.052734375, 0.5634765625, 0.0307769775390625, 1.3486328125, 0.005908966064453125, 0.0099029541015625, 0.66064453125, 0.033416748046875, 0.0401611328125, 0.0009455680847167969, 0.5439453125, 0.0008630752563476562, 0.0208892822265625, 0.08209228515625, 0.33203125, 0.33837890625, 7.069110870361328e-05, 1.4697265625, 0.2027587890625, 0.1131591796875, 0.01300048828125, 0.0933837890625, 2.298828125, 0.38916015625, 0.042816162109375, 0.2449951171875, 0.32177734375, 0.0015316009521484375, 0.82861328125, 0.10809326171875, 0.006656646728515625, 0.1795654296875, 0.9072265625, 0.080810546875, 0.974609375, 0.018707275390625, 0.155029296875, 0.041717529296875, 0.123046875, 0.01467132568359375, 0.1556396484375, 0.48291015625, 0.2763671875, 0.01328277587890625], "tokens": [284, 1022, 275, 319, 1390, 322, 2919, 3085, 2431, 810, 322, 6959, 31, 1366, 8218, 32, 275, 319, 275, 319, 477, 601, 322, 2919, 3085, 2260, 275, 319, 477, 5117, 3139, 43451, 415, 1289, 2919, 3085, 2260, 1401, 2583, 2431, 6305, 275, 569, 284, 562, 2064, 622, 5482, 3085, 346, 2571, 3139]}
{"line_number": 194, "line_type": "original", "code": "            throw MathRuntimeException.createIllegalStateException(LocalizedFormats.NO_OPTIMUM_COMPUTED_YET);", "entropy": 0.6025390625, "is_bug_line": false, "sus_score": 0.49267616868019104, "per_token_entropy": [3.623046875, 5.703125, 0.97900390625, 0.01236724853515625, 0.00458526611328125, 0.006748199462890625, 2.6015625, 0.337890625, 0.0701904296875, 0.0014371871948242188, 0.00283050537109375, 0.93994140625, 0.0011768341064453125, 0.15625, 6.711483001708984e-05, 0.00033092498779296875, 0.0001615285873413086, 0.005680084228515625, 1.0371208190917969e-05, 1.1920928955078125e-07, 0.00199127197265625, 0.0009160041809082031, 8.344650268554688e-07, 0.01274871826171875], "tokens": [1468, 1422, 4175, 19304, 32, 1297, 45173, 26, 24225, 19298, 32, 2576, 81, 1952, 12551, 2347, 81, 5762, 1068, 1345, 81, 75, 1218, 293]}
{"line_number": 194, "line_type": "generated", "code": "\n                final double x = optimizer.optimize(f, goalType, bound1, bound2);\n                optima[i] = x;\n                optimaValues[i] = f.value(x);\n                ++totalIterations;\n                totalEvaluations", "entropy": 0.1961669921875, "is_bug_line": false, "sus_score": 0.49267616868019104, "per_token_entropy": [1.154296875, 1.587890625, 0.10888671875, 2.294921875, 0.27099609375, 0.053070068359375, 0.0010242462158203125, 0.00626373291015625, 0.0002551078796386719, 0.27099609375, 0.0012388229370117188, 0.0155181884765625, 0.00885772705078125, 0.0011243820190429688, 0.0211334228515625, 0.0003554821014404297, 0.0004863739013671875, 0.0018672943115234375, 0.00010335445404052734, 0.025299072265625, 0.888671875, 0.39990234375, 1.2159347534179688e-05, 0.1553955078125, 0.002483367919921875, 0.0011167526245117188, 0.98095703125, 0.01149749755859375, 0.0005693435668945312, 0.06683349609375, 0.1572265625, 2.765655517578125e-05, 0.0009241104125976562, 0.00023794174194335938, 6.973743438720703e-05, 0.00035500526428222656, 0.00904083251953125, 0.037322998046875, 7.069110870361328e-05, 0.0013799667358398438, 0.0014247894287109375, 0.004344940185546875, 0.0004963874816894531, 0.83251953125, 0.6611328125, 0.0421142578125, 0.054351806640625, 0.0145111083984375, 0.0243988037109375, 0.03167724609375, 0.00021576881408691406, 2.1457672119140625e-06], "tokens": [400, 1158, 2064, 816, 280, 16302, 32, 22926, 26, 88, 30, 12260, 620, 30, 5085, 35, 30, 5085, 36, 293, 400, 6552, 83, 77, 91, 79, 280, 816, 45, 400, 6552, 83, 3354, 77, 91, 79, 280, 296, 32, 853, 26, 106, 293, 400, 3311, 2999, 31219, 45, 400, 3380, 10491, 993]}
{"line_number": 220, "line_type": "original", "code": "            throw MathRuntimeException.createIllegalStateException(LocalizedFormats.NO_OPTIMUM_COMPUTED_YET);", "entropy": 0.72216796875, "is_bug_line": false, "sus_score": 0.49267616868019104, "per_token_entropy": [4.19140625, 5.31640625, 1.90625, 0.030029296875, 0.00347137451171875, 0.0050811767578125, 4.796875, 0.0875244140625, 0.06903076171875, 0.002117156982421875, 0.0018548965454101562, 0.82080078125, 0.00042557716369628906, 0.053253173828125, 2.6226043701171875e-06, 0.00017631053924560547, 7.140636444091797e-05, 0.00628662109375, 2.849102020263672e-05, 5.2094459533691406e-05, 0.00763702392578125, 0.004486083984375, 3.337860107421875e-06, 0.0194549560546875], "tokens": [1468, 1422, 4175, 19304, 32, 1297, 45173, 26, 24225, 19298, 32, 2576, 81, 1952, 12551, 2347, 81, 5762, 1068, 1345, 81, 75, 1218, 293]}
{"line_number": 220, "line_type": "generated", "code": "\n        }\n\n        return optima[0];\n    }", "entropy": 0.363525390625, "is_bug_line": false, "sus_score": 0.49267616868019104, "per_token_entropy": [0.505859375, 0.0732421875, 0.2066650390625, 1.5146484375, 0.1539306640625, 2.7060508728027344e-05, 0.0154571533203125, 0.00661468505859375, 0.001865386962890625, 1.513671875, 0.00576019287109375], "tokens": [291, 320, 584, 442, 6552, 83, 77, 34, 970, 284, 320]}
{"line_number": 127, "line_type": "original", "code": "        return optimizer.getRelativeAccuracy();", "entropy": 4.30859375, "is_bug_line": false, "sus_score": 0.49267616868019104, "per_token_entropy": [4.5546875, 11.296875, 3.435546875, 0.004558563232421875, 0.028350830078125, 14.6953125, 0.38720703125, 0.0799560546875], "tokens": [351, 442, 16302, 32, 371, 11777, 26201, 473]}
{"line_number": 127, "line_type": "generated", "code": "\n     * in the constructor. The elements are sorted in increasing order of\n     * the objective function value.\n     * </p>\n     * @return an array containing all the optima found during the last call to\n     * {@link #optimize(Univariate", "entropy": 0.33642578125, "is_bug_line": false, "sus_score": 0.49267616868019104, "per_token_entropy": [1.212890625, 0.0102081298828125, 0.77392578125, 0.0227813720703125, 0.1160888671875, 0.301513671875, 1.0771484375, 1.63671875, 1.02734375, 0.187255859375, 0.1678466796875, 0.2073974609375, 0.023345947265625, 0.52783203125, 0.282470703125, 4.494190216064453e-05, 0.33349609375, 1.2939453125, 0.10150146484375, 0.08367919921875, 0.295166015625, 0.65185546875, 0.00931549072265625, 0.036041259765625, 5.602836608886719e-06, 0.0174560546875, 0.048126220703125, 0.0013570785522460938, 0.44140625, 0.011688232421875, 1.5234375, 0.0035762786865234375, 0.08221435546875, 0.9296875, 0.033966064453125, 0.286865234375, 0.00296783447265625, 0.5859375, 1.115234375, 0.09283447265625, 0.0843505859375, 0.3349609375, 1.2041015625, 0.1240234375, 0.0013341903686523438, 0.08990478515625, 0.0039043426513671875, 0.07159423828125, 0.00264739990234375, 0.008544921875, 0.0180511474609375, 0.00033354759216308594], "tokens": [275, 319, 328, 322, 4374, 32, 886, 4702, 884, 8594, 328, 23647, 2532, 432, 275, 319, 322, 25110, 667, 786, 32, 275, 319, 576, 98, 48, 275, 319, 477, 601, 600, 1417, 6621, 1169, 322, 6552, 83, 2431, 5929, 322, 2401, 1476, 372, 275, 319, 3088, 1204, 588, 22926, 26, 1061, 27623]}
{"line_number": 97, "line_type": "original", "code": "        return optimizer.getResult();", "entropy": 3.734375, "is_bug_line": true, "sus_score": 0.49267616868019104, "per_token_entropy": [5.12890625, 4.30859375, 3.298828125, 0.029510498046875, 9.625, 0.00921630859375], "tokens": [351, 442, 16302, 32, 23965, 473]}
{"line_number": 97, "line_type": "generated", "code": "\n    }\n\n    /** {@inheritDoc} */\n    public void setMaximalIterationCount(int max) {\n        this.maxIterations = max;\n    }\n\n    /** {@inheritDoc} */\n    public void setMaxEvaluations(int max) {\n        this.", "entropy": 0.0810546875, "is_bug_line": true, "sus_score": 0.49267616868019104, "per_token_entropy": [0.1580810546875, 0.0009565353393554688, 0.0090789794921875, 0.00582122802734375, 0.07177734375, 6.341934204101562e-05, 6.902217864990234e-05, 0.000457763671875, 0.002655029296875, 0.005489349365234375, 0.00815582275390625, 0.0008254051208496094, 0.0447998046875, 0.1881103515625, 0.000396728515625, 2.491474151611328e-05, 8.428096771240234e-05, 0.0321044921875, 0.31884765625, 0.8671875, 0.0123748779296875, 0.29248046875, 1.5068359375, 0.0001366138458251953, 0.0256195068359375, 0.010589599609375, 0.10919189453125, 0.049041748046875, 0.00768280029296875, 0.2340087890625, 0.0002486705780029297, 0.004665374755859375, 0.0038471221923828125, 0.05609130859375, 4.971027374267578e-05, 8.535385131835938e-05, 0.00191497802734375, 0.005458831787109375, 0.0018815994262695312, 0.00702667236328125, 0.0005350112915039062, 0.01049041748046875, 0.01508331298828125, 3.5762786865234375e-07, 0.00010383129119873047, 0.00910186767578125, 0.002346038818359375, 0.0257568359375, 0.0032291412353515625, 0.060760498046875, 0.042724609375, 5.638599395751953e-05], "tokens": [284, 320, 446, 1022, 3088, 18446, 111, 569, 284, 562, 763, 739, 2708, 2977, 21863, 1534, 26, 410, 1769, 27, 301, 291, 458, 32, 1449, 31219, 280, 1769, 45, 284, 320, 446, 1022, 3088, 18446, 111, 569, 284, 562, 763, 739, 2708, 10491, 993, 26, 410, 1769, 27, 301, 291, 458, 32]}
{"line_number": 147, "line_type": "original", "code": "        optimizer.setAbsoluteAccuracy(accuracy);", "entropy": 2.541015625, "is_bug_line": false, "sus_score": 0.49267616868019104, "per_token_entropy": [4.390625, 4.79296875, 0.057159423828125, 2.453125, 5.5546875, 0.0013685226440429688, 0.01422119140625, 5.55859375, 0.04547119140625], "tokens": [351, 16302, 32, 470, 12043, 26201, 26, 15924, 293]}
{"line_number": 147, "line_type": "generated", "code": "\n    }\n\n    /** Get the values of the optima found during the last call to {@link\n     * #optimize(UnivariateRealFunction, GoalType, double, double) optimize}.\n     * <p>The optimizer stores all the optima found during", "entropy": 0.0833740234375, "is_bug_line": false, "sus_score": 0.49267616868019104, "per_token_entropy": [0.253662109375, 0.00971221923828125, 0.1727294921875, 0.0168914794921875, 0.330078125, 0.2431640625, 0.82568359375, 0.05670166015625, 0.039215087890625, 0.249755859375, 0.001041412353515625, 0.364013671875, 0.091552734375, 0.006801605224609375, 0.007015228271484375, 0.0162506103515625, 0.006511688232421875, 0.4853515625, 0.0006322860717773438, 0.013427734375, 1.2040138244628906e-05, 0.00499725341796875, 0.0030612945556640625, 0.0018463134765625, 0.01340484619140625, 7.152557373046875e-07, 7.987022399902344e-06, 0.0001437664031982422, 0.00020992755889892578, 0.0006461143493652344, 3.6954879760742188e-06, 0.00014984607696533203, 0.00157928466796875, 0.0008568763732910156, 0.0030307769775390625, 0.002552032470703125, 0.09173583984375, 0.04718017578125, 0.01204681396484375, 0.00015223026275634766, 0.148681640625, 0.00031304359436035156, 0.00136566162109375, 0.385498046875, 0.271484375, 0.0029144287109375, 0.07318115234375, 0.0010557174682617188, 0.068603515625, 4.7087669372558594e-05, 0.00867462158203125, 0.0014562606811523438], "tokens": [284, 320, 446, 1022, 1390, 322, 2078, 432, 322, 6552, 83, 2431, 5929, 322, 2401, 1476, 372, 3088, 1204, 275, 319, 588, 22926, 26, 1061, 27623, 6877, 2447, 30, 42010, 620, 30, 2064, 30, 2064, 27, 22269, 4009, 275, 319, 333, 98, 48, 1318, 16302, 15321, 1169, 322, 6552, 83, 2431, 5929]}
{"line_number": 162, "line_type": "original", "code": "        optimizer.setRelativeAccuracy(accuracy);", "entropy": 2.71484375, "is_bug_line": false, "sus_score": 0.49267616868019104, "per_token_entropy": [3.6640625, 13.9375, 0.1807861328125, 2.4921875, 2.154296875, 0.0014009475708007812, 0.01275634765625, 1.9638671875, 0.0308837890625], "tokens": [351, 16302, 32, 470, 11777, 26201, 26, 15924, 293]}
{"line_number": 162, "line_type": "generated", "code": "\n     * all starts.</p>\n     * @return array containing the function values at the optima\n     * @exception IllegalStateException if {@link #optimize(UnivariateRealFunction,\n     * GoalType, double, double) optimize} has not been called\n    ", "entropy": 0.059051513671875, "is_bug_line": false, "sus_score": 0.49267616868019104, "per_token_entropy": [0.99169921875, 0.10101318359375, 0.160888671875, 0.0094451904296875, 0.246337890625, 0.0006661415100097656, 0.005794525146484375, 0.0345458984375, 0.0008549690246582031, 0.211181640625, 0.01305389404296875, 0.01122283935546875, 0.00394439697265625, 0.02923583984375, 0.64013671875, 0.1124267578125, 0.0289306640625, 0.25341796875, 0.004070281982421875, 0.00032448768615722656, 0.047576904296875, 0.0019330978393554688, 0.0153656005859375, 0.01947021484375, 0.01666259765625, 0.0011758804321289062, 0.004425048828125, 0.0002837181091308594, 0.01080322265625, 0.0005350112915039062, 0.0003085136413574219, 0.0029659271240234375, 2.6345252990722656e-05, 0.00010323524475097656, 0.00021004676818847656, 0.00043654441833496094, 0.027008056640625, 3.7670135498046875e-05, 0.0018072128295898438, 1.919269561767578e-05, 4.398822784423828e-05, 0.0004940032958984375, 0.00037360191345214844, 0.0003349781036376953, 0.0078887939453125, 0.0005526542663574219, 0.0005774497985839844, 0.006206512451171875, 0.0008893013000488281, 0.0017299652099609375, 0.0006012916564941406, 0.04034423828125], "tokens": [275, 319, 1169, 11187, 1730, 98, 48, 275, 319, 477, 601, 1417, 6621, 322, 667, 2078, 821, 322, 6552, 83, 275, 319, 477, 3893, 21665, 415, 3088, 1204, 588, 22926, 26, 1061, 27623, 6877, 2447, 30, 275, 319, 42010, 620, 30, 2064, 30, 2064, 27, 22269, 111, 1401, 646, 2583, 3823, 275]}
{"line_number": 285, "line_type": "original", "code": "                    optimaValues[i + 1] = mIY;", "entropy": 1.7626953125, "is_bug_line": false, "sus_score": 0.49267616868019104, "per_token_entropy": [10.28125, 3.54296875, 0.004421234130859375, 1.7041015625, 0.67041015625, 0.74951171875, 0.57177734375, 0.0009641647338867188, 0.0018749237060546875, 0.0032978057861328125, 0.01175689697265625, 7.0546875, 0.0180816650390625, 0.054351806640625], "tokens": [4696, 6552, 83, 3354, 77, 91, 474, 225, 35, 79, 280, 345, 27169, 45]}
{"line_number": 285, "line_type": "generated", "code": "\n\n    /**\n     * {@inheritDoc}\n     *\n     * @throws MathIllegalArgumentException if the lower bound is greater than\n     *         the upper bound\n     */\n    public double[] optimize(final MultivariateRealFunction f, final GoalType goalType,\n                            final double", "entropy": 0.41845703125, "is_bug_line": false, "sus_score": 0.49267616868019104, "per_token_entropy": [2.09375, 0.1165771484375, 1.125, 0.00027108192443847656, 2.78125, 0.01094818115234375, 0.00290679931640625, 0.0282135009765625, 0.130859375, 0.54150390625, 0.0168914794921875, 1.052734375, 0.57275390625, 1.2421875, 1.7958984375, 0.1666259765625, 0.58154296875, 1.8291015625, 0.186767578125, 0.462646484375, 0.59326171875, 0.10089111328125, 0.56787109375, 0.00017821788787841797, 0.90380859375, 0.21240234375, 0.010101318359375, 0.0036563873291015625, 0.304443359375, 0.252197265625, 0.01947021484375, 0.2322998046875, 0.50048828125, 0.407958984375, 1.1513671875, 0.150146484375, 0.0362548828125, 0.52978515625, 1.4662742614746094e-05, 0.0031757354736328125, 0.0007996559143066406, 0.06903076171875, 0.0015687942504882812, 0.2255859375, 0.006008148193359375, 2.7894973754882812e-05, 0.1260986328125, 0.0029773712158203125, 0.003978729248046875, 0.5087890625, 0.0154876708984375, 0.08367919921875], "tokens": [446, 1022, 275, 319, 3088, 18446, 111, 275, 319, 275, 319, 477, 5117, 4175, 25907, 415, 322, 7216, 5085, 438, 10761, 2784, 275, 319, 263, 322, 8342, 5085, 275, 569, 284, 562, 2064, 1178, 22269, 26, 3220, 18423, 27623, 6877, 2447, 296, 30, 1158, 42010, 620, 12260, 620, 30, 1014, 1158, 2064]}
{"line_number": 286, "line_type": "original", "code": "                    if (i-- != 0) {", "entropy": 2.89453125, "is_bug_line": false, "sus_score": 0.49267616868019104, "per_token_entropy": [10.03125, 2.916015625, 0.157470703125, 3.876953125, 7.36328125, 4.2578125, 0.1419677734375, 0.0306854248046875, 0.05401611328125, 0.1260986328125], "tokens": [4696, 415, 308, 91, 287, 863, 225, 34, 27, 301]}
{"line_number": 286, "line_type": "generated", "code": "\n\n    /** {@inheritDoc} */\n    public int getStarts() {\n        return starts;\n    }\n\n    /** {@inheritDoc} */\n    public int getMaxIterations() {\n        return maxIterations;\n    }\n\n    /** {@inheritDoc} */\n    public int getMaxEvaluations()", "entropy": 0.168701171875, "is_bug_line": false, "sus_score": 0.49267616868019104, "per_token_entropy": [2.201171875, 0.17529296875, 0.83203125, 0.0007615089416503906, 0.0006418228149414062, 0.0020732879638671875, 0.01044464111328125, 0.1658935546875, 1.119140625, 0.444580078125, 0.71240234375, 0.0013380050659179688, 0.005573272705078125, 0.0154571533203125, 0.0015668869018554688, 0.040191650390625, 0.0013551712036132812, 0.00543975830078125, 0.0008039474487304688, 0.381103515625, 0.0136566162109375, 0.1463623046875, 0.00023818016052246094, 0.0002529621124267578, 0.0007276535034179688, 0.004276275634765625, 0.0194854736328125, 0.56689453125, 0.9228515625, 0.54248046875, 0.0008063316345214844, 0.0011510848999023438, 0.0036525726318359375, 0.0027294158935546875, 0.028839111328125, 0.0018596649169921875, 0.0058441162109375, 0.0011072158813476562, 7.939338684082031e-05, 0.035858154296875, 0.0029926300048828125, 0.020751953125, 0.00033211708068847656, 0.00041961669921875, 0.00299835205078125, 0.0011243820190429688, 0.0008511543273925781, 0.2109375, 0.1148681640625, 0.0002722740173339844, 1.0848045349121094e-05, 0.0002200603485107422], "tokens": [446, 1022, 3088, 18446, 111, 569, 284, 562, 629, 622, 36541, 346, 301, 291, 442, 11187, 45, 284, 320, 446, 1022, 3088, 18446, 111, 569, 284, 562, 629, 39486, 31219, 346, 301, 291, 442, 1769, 31219, 45, 284, 320, 446, 1022, 3088, 18446, 111, 569, 284, 562, 629, 39486, 10491, 993, 346]}
{"line_number": 284, "line_type": "original", "code": "                    optima[i + 1]       = mIX;", "entropy": 1.3857421875, "is_bug_line": false, "sus_score": 0.49267616868019104, "per_token_entropy": [9.8828125, 3.134765625, 0.0022907257080078125, 0.67822265625, 1.0302734375, 1.1787109375, 0.0026111602783203125, 0.003910064697265625, 0.0025157928466796875, 0.2529296875, 0.000301361083984375, 3.236328125, 0.0034198760986328125, 0.004924774169921875], "tokens": [4696, 6552, 83, 77, 91, 474, 225, 35, 79, 958, 280, 345, 6578, 45]}
{"line_number": 284, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.49267616868019104, "per_token_entropy": [], "tokens": []}
{"line_number": 78, "line_type": "original", "code": "    public MultiStartUnivariateRealOptimizer(final UnivariateRealOptimizer optimizer,", "entropy": 1.0390625, "is_bug_line": false, "sus_score": 0.49267616868019104, "per_token_entropy": [4.48828125, 5.80859375, 4.3359375, 0.001556396484375, 0.005176544189453125, 1.2040138244628906e-05, 3.266334533691406e-05, 0.0038661956787109375, 0.923828125, 0.2042236328125, 0.185791015625, 2.1576881408691406e-05, 0.0008325576782226562, 0.01495361328125, 0.0055389404296875, 0.64990234375], "tokens": [264, 562, 10473, 2130, 1061, 27623, 6877, 29248, 26, 3220, 1683, 27623, 6877, 29248, 16302, 30]}
{"line_number": 78, "line_type": "generated", "code": "\n    }\n\n    /** {@inheritDoc} */\n    public void setAbsoluteAccuracy(final double accuracy) {\n        optimizer.setAbsoluteAccuracy(accuracy);\n    }\n\n    /** {@inheritDoc} */\n    public void setMaximalIterationCount(final int maxIterations) {", "entropy": 0.10198974609375, "is_bug_line": false, "sus_score": 0.49267616868019104, "per_token_entropy": [0.5439453125, 0.44873046875, 0.08331298828125, 0.01357269287109375, 0.529296875, 6.99758529663086e-05, 0.00010180473327636719, 0.00392913818359375, 0.037139892578125, 0.015899658203125, 0.77099609375, 0.159423828125, 0.92578125, 4.649162292480469e-06, 0.00010895729064941406, 0.1312255859375, 0.0005450248718261719, 0.09210205078125, 0.0004677772521972656, 0.0028934478759765625, 0.0185394287109375, 0.00925445556640625, 7.236003875732422e-05, 0.0003418922424316406, 0.0005316734313964844, 3.1113624572753906e-05, 7.557868957519531e-05, 0.0033931732177734375, 0.0006213188171386719, 0.1612548828125, 0.00015151500701904297, 0.0303497314453125, 0.00495147705078125, 0.11077880859375, 6.139278411865234e-05, 3.62396240234375e-05, 0.0006022453308105469, 0.0265655517578125, 0.0021343231201171875, 0.008575439453125, 0.0027790069580078125, 0.1290283203125, 0.17822265625, 0.00023174285888671875, 3.814697265625e-06, 3.8504600524902344e-05, 0.024688720703125, 4.57763671875e-05, 0.390869140625, 0.435791015625, 0.0036792755126953125, 0.001522064208984375], "tokens": [284, 320, 446, 1022, 3088, 18446, 111, 569, 284, 562, 763, 739, 12043, 26201, 26, 3220, 2064, 14222, 27, 301, 291, 16302, 32, 470, 12043, 26201, 26, 15924, 293, 284, 320, 446, 1022, 3088, 18446, 111, 569, 284, 562, 763, 739, 2708, 2977, 21863, 1534, 26, 3220, 629, 1769, 31219, 27, 301]}
{"line_number": 108, "line_type": "original", "code": "    }", "entropy": 1.8740234375, "is_bug_line": false, "sus_score": 0.49267616868019104, "per_token_entropy": [3.310546875, 0.438232421875], "tokens": [264, 320]}
{"line_number": 108, "line_type": "generated", "code": "\n\n    /** {@inheritDoc} */\n    public void setRelativeAccuracy(double accuracy) {\n        optimizer.setRelativeAccuracy(accuracy);\n    }\n\n    /**\n     * Get the number of starts to perform.\n     * @return number of starts to perform\n     */\n   ", "entropy": 0.143310546875, "is_bug_line": false, "sus_score": 0.49267616868019104, "per_token_entropy": [0.279052734375, 0.0186920166015625, 0.1800537109375, 3.5762786865234375e-05, 0.00014901161193847656, 0.0009794235229492188, 0.003643035888671875, 0.007808685302734375, 0.017364501953125, 0.013092041015625, 0.038543701171875, 2.8371810913085938e-05, 3.9696693420410156e-05, 0.011138916015625, 0.01491546630859375, 0.00015044212341308594, 0.0030574798583984375, 0.0034351348876953125, 0.0016374588012695312, 3.790855407714844e-05, 0.0003237724304199219, 0.004608154296875, 4.100799560546875e-05, 6.878376007080078e-05, 0.00091552734375, 0.00017392635345458984, 0.089111328125, 0.0003414154052734375, 0.1497802734375, 0.025390625, 0.69482421875, 6.783008575439453e-05, 0.91943359375, 0.051055908203125, 1.263671875, 0.0005125999450683594, 0.1558837890625, 0.703125, 0.36962890625, 0.75537109375, 0.0165557861328125, 0.0006499290466308594, 0.158935546875, 0.00048613548278808594, 0.262451171875, 0.00033926963806152344, 0.007049560546875, 0.47412109375, 0.0059814453125, 0.6806640625, 0.0660400390625, 0.0031871795654296875], "tokens": [446, 1022, 3088, 18446, 111, 569, 284, 562, 763, 739, 11777, 26201, 26, 2627, 14222, 27, 301, 291, 16302, 32, 470, 11777, 26201, 26, 15924, 293, 284, 320, 446, 1022, 275, 319, 1390, 322, 1451, 432, 11187, 372, 4436, 32, 275, 319, 477, 601, 1451, 432, 11187, 372, 4436, 275, 569, 284]}
{"line_number": 242, "line_type": "original", "code": "                final double bound1 = (i == 0) ? min : min + generator.nextDouble() * (max - min);", "entropy": 0.9130859375, "is_bug_line": false, "sus_score": 0.49267616868019104, "per_token_entropy": [5.58203125, 7.1796875, 0.1368408203125, 1.71875, 3.248046875, 0.05987548828125, 1.7353515625, 0.84814453125, 0.0723876953125, 0.043914794921875, 0.0019502639770507812, 0.004062652587890625, 0.00196075439453125, 1.8994140625, 0.0192108154296875, 2.9453125, 0.004665374755859375, 0.01092529296875, 0.0016794204711914062, 0.0007653236389160156, 0.00025773048400878906, 0.000579833984375, 0.0016374588012695312, 0.0022106170654296875, 0.03509521484375, 0.0008568763732910156, 0.0004439353942871094, 0.0016384124755859375], "tokens": [2071, 1158, 2064, 5085, 35, 280, 308, 91, 610, 225, 34, 27, 1018, 1847, 499, 1847, 474, 9750, 32, 1978, 4075, 346, 319, 308, 1449, 429, 1847, 293]}
{"line_number": 242, "line_type": "generated", "code": "\n                    }\n                }\n                optima[i + 1]       = currX;\n                optimaValues[i + 1] = currY;\n            }\n        }\n\n        // return the best point found across all starts\n        return currX;\n\n   ", "entropy": 0.1575927734375, "is_bug_line": false, "sus_score": 0.49267616868019104, "per_token_entropy": [0.4365234375, 0.00141143798828125, 0.03082275390625, 0.00018608570098876953, 0.092529296875, 0.07391357421875, 9.5367431640625e-07, 0.0085906982421875, 0.0025691986083984375, 0.00760650634765625, 8.14199447631836e-05, 0.0001068115234375, 0.00017058849334716797, 0.180419921875, 4.172325134277344e-06, 0.006786346435546875, 5.042552947998047e-05, 0.0001074075698852539, 0.0008482933044433594, 9.739398956298828e-05, 2.384185791015625e-06, 0.00025391578674316406, 0.0001842975616455078, 0.0001323223114013672, 0.00038695335388183594, 6.198883056640625e-05, 8.928775787353516e-05, 0.0001232624053955078, 6.389617919921875e-05, 0.0007390975952148438, 8.702278137207031e-05, 0.00189208984375, 0.384033203125, 0.0002033710479736328, 0.190185546875, 0.00036025047302246094, 0.13232421875, 0.81640625, 2.0234375, 0.11328125, 0.29150390625, 0.417236328125, 0.97314453125, 0.509765625, 0.06365966796875, 0.034423828125, 0.1068115234375, 0.1954345703125, 0.857421875, 0.00238037109375, 0.00064849853515625, 0.2325439453125], "tokens": [528, 320, 400, 320, 400, 6552, 83, 77, 91, 474, 225, 35, 79, 958, 280, 9985, 74, 45, 400, 6552, 83, 3354, 77, 91, 474, 225, 35, 79, 280, 9985, 75, 45, 324, 320, 291, 320, 584, 434, 442, 322, 5273, 2260, 2431, 10160, 1169, 11187, 291, 442, 9985, 74, 45, 446]}
