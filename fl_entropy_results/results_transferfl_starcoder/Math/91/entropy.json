{"line_number": 604, "line_type": "original", "code": "", "entropy": 0.266845703125, "is_bug_line": false, "sus_score": 0.6509875059127808, "per_token_entropy": [0.266845703125], "tokens": [203]}
{"line_number": 604, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6509875059127808, "per_token_entropy": [], "tokens": []}
{"line_number": 260, "line_type": "original", "code": "        double dOn = object.doubleValue();", "entropy": 2.51171875, "is_bug_line": true, "sus_score": 0.6424870491027832, "per_token_entropy": [5.6875, 5.9140625, 1.546875, 2.705078125, 0.0233154296875, 6.68359375, 0.0196685791015625, 0.0256195068359375, 0.00708770751953125], "tokens": [351, 2064, 343, 1484, 280, 1300, 32, 46952, 473]}
{"line_number": 260, "line_type": "generated", "code": "\n    public float floatValue() {\n        return (float)numerator / (float)denominator;\n    }\n    \n    /**\n     * Gets the fraction as a <tt>int</tt>. This returns the whole number\n     * part of the fraction.\n    ", "entropy": 0.10247802734375, "is_bug_line": true, "sus_score": 0.6424870491027832, "per_token_entropy": [0.402587890625, 0.08349609375, 0.004730224609375, 0.0004744529724121094, 5.817413330078125e-05, 0.009307861328125, 0.014404296875, 0.1370849609375, 0.04052734375, 0.0224761962890625, 0.002025604248046875, 0.006256103515625, 0.43115234375, 0.0011310577392578125, 0.0026264190673828125, 0.0009560585021972656, 0.00010788440704345703, 0.0003292560577392578, 0.00159454345703125, 5.7220458984375e-06, 0.0013675689697265625, 0.0458984375, 0.00021350383758544922, 0.1339111328125, 0.0135345458984375, 0.010009765625, 0.00021839141845703125, 0.154541015625, 0.046051025390625, 0.10699462890625, 0.00815582275390625, 0.1473388671875, 0.01139068603515625, 0.0180206298828125, 0.00010716915130615234, 0.71728515625, 0.0005478858947753906, 0.013397216796875, 0.0047149658203125, 0.04345703125, 0.26220703125, 0.00262451171875, 1.126953125, 0.0144500732421875, 1.138671875, 1.4066696166992188e-05, 0.07440185546875, 0.00049591064453125, 0.001190185546875, 0.0065155029296875, 0.0129852294921875, 0.048004150390625], "tokens": [284, 562, 1897, 1897, 882, 346, 301, 291, 442, 308, 1808, 27, 1516, 11290, 517, 308, 1808, 27, 29805, 9693, 45, 284, 320, 2170, 1022, 275, 319, 7124, 322, 18795, 619, 312, 333, 2251, 48, 410, 377, 2251, 4503, 1348, 3217, 322, 9844, 1451, 275, 319, 1742, 432, 322, 18795, 32, 275]}
{"line_number": 259, "line_type": "original", "code": "        double nOd = doubleValue();", "entropy": 1.5322265625, "is_bug_line": true, "sus_score": 0.6161559820175171, "per_token_entropy": [3.505859375, 4.03125, 2.91796875, 0.026611328125, 0.0142364501953125, 1.7294921875, 0.0127105712890625, 0.0183868408203125], "tokens": [351, 2064, 310, 24806, 280, 2064, 882, 473]}
{"line_number": 259, "line_type": "generated", "code": "\n     */\n    public float floatValue() {\n        return (float)numerator / (float)denominator;\n    }\n    \n    /**\n     * Gets the fraction as a <tt>int</tt>. This returns the whole number part\n     * of the fraction", "entropy": 0.08953857421875, "is_bug_line": true, "sus_score": 0.6161559820175171, "per_token_entropy": [0.6689453125, 0.0726318359375, 0.1328125, 0.013458251953125, 0.002201080322265625, 0.000507354736328125, 5.221366882324219e-05, 0.005893707275390625, 0.007663726806640625, 0.1337890625, 0.019866943359375, 0.010772705078125, 0.0009312629699707031, 0.004825592041015625, 0.1748046875, 0.0008230209350585938, 0.0022602081298828125, 0.0008521080017089844, 9.1552734375e-05, 0.0001633167266845703, 0.0010519027709960938, 5.125999450683594e-06, 0.0012378692626953125, 0.076904296875, 0.00023472309112548828, 0.13720703125, 0.0106658935546875, 0.033233642578125, 0.0003616809844970703, 0.1678466796875, 0.0287628173828125, 0.08001708984375, 0.004550933837890625, 0.1607666015625, 0.01171875, 0.00829315185546875, 0.0001341104507446289, 0.5859375, 0.0006275177001953125, 0.00281524658203125, 0.0038661956787109375, 0.039886474609375, 0.28857421875, 0.002777099609375, 1.23828125, 0.01372528076171875, 0.40576171875, 0.08526611328125, 9.5367431640625e-05, 0.0004088878631591797, 0.0025119781494140625, 0.01094818115234375], "tokens": [275, 569, 284, 562, 1897, 1897, 882, 346, 301, 291, 442, 308, 1808, 27, 1516, 11290, 517, 308, 1808, 27, 29805, 9693, 45, 284, 320, 2170, 1022, 275, 319, 7124, 322, 18795, 619, 312, 333, 2251, 48, 410, 377, 2251, 4503, 1348, 3217, 322, 9844, 1451, 1742, 275, 319, 432, 322, 18795]}
{"line_number": 270, "line_type": "original", "code": "        return (double)numerator / (double)denominator;", "entropy": 1.2685546875, "is_bug_line": false, "sus_score": 0.5855026841163635, "per_token_entropy": [5.40625, 1.74609375, 3.552734375, 4.3828125, 0.0653076171875, 0.86767578125, 0.00893402099609375, 0.77001953125, 0.86669921875, 0.0125274658203125, 0.00295257568359375, 0.0232696533203125, 0.0002130270004272461, 0.066650390625], "tokens": [351, 442, 308, 2627, 27, 1516, 11290, 517, 308, 2627, 27, 29805, 9693, 45]}
{"line_number": 270, "line_type": "generated", "code": "\n    }\n    \n    /**\n     * Access the numerator.\n     * @return the numerator.\n     */\n    public int getNumerator() {\n        return numerator;", "entropy": 0.01227569580078125, "is_bug_line": false, "sus_score": 0.5855026841163635, "per_token_entropy": [0.08001708984375, 0.005126953125, 0.07073974609375, 0.00394439697265625, 0.00444793701171875, 4.172325134277344e-06, 0.0238800048828125, 0.0004963874816894531, 0.0183258056640625, 0.0019130706787109375, 0.00249481201171875, 0.039764404296875, 8.690357208251953e-05, 0.0028514862060546875, 0.0002219676971435547, 0.00615692138671875, 0.00347900390625, 0.0009355545043945312, 0.0267486572265625, 0.00505828857421875, 0.0006146430969238281, 0.00748443603515625, 0.00023353099822998047, 0.002635955810546875, 0.003543853759765625, 1.2278556823730469e-05, 0.0009455680847167969, 0.0009264945983886719, 0.0743408203125, 0.0027637481689453125, 0.0023784637451171875, 2.6702880859375e-05, 0.0124969482421875], "tokens": [284, 320, 2170, 1022, 275, 319, 8258, 322, 1929, 11290, 32, 275, 319, 477, 601, 322, 1929, 11290, 32, 275, 569, 284, 562, 629, 44929, 11290, 346, 301, 291, 442, 1929, 11290, 45]}
{"line_number": 583, "line_type": "original", "code": "", "entropy": 0.266845703125, "is_bug_line": false, "sus_score": 0.5762414336204529, "per_token_entropy": [0.266845703125], "tokens": [203]}
{"line_number": 583, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5762414336204529, "per_token_entropy": [], "tokens": []}
{"line_number": 563, "line_type": "original", "code": "", "entropy": 0.266845703125, "is_bug_line": false, "sus_score": 0.5453554391860962, "per_token_entropy": [0.266845703125], "tokens": [203]}
{"line_number": 563, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5453554391860962, "per_token_entropy": [], "tokens": []}
{"line_number": 261, "line_type": "original", "code": "        return (nOd < dOn) ? -1 : ((nOd > dOn) ? +1 : 0);", "entropy": 1.193359375, "is_bug_line": false, "sus_score": 0.5313439965248108, "per_token_entropy": [4.75, 0.68408203125, 0.277099609375, 11.1640625, 0.89208984375, 2.21484375, 2.53125, 0.01483917236328125, 0.50146484375, 0.0259246826171875, 3.14453125, 0.7470703125, 1.6982421875, 0.71630859375, 0.0306396484375, 0.0005807876586914062, 0.105224609375, 0.003932952880859375, 0.000446319580078125, 0.004306793212890625, 0.000736236572265625, 2.626953125, 0.005725860595703125, 0.003833770751953125, 0.0237274169921875, 0.0002543926239013672, 0.041839599609375], "tokens": [351, 442, 308, 96, 24806, 333, 343, 1484, 27, 1018, 429, 35, 499, 1833, 96, 24806, 848, 343, 1484, 27, 1018, 474, 35, 499, 225, 34, 293]}
{"line_number": 261, "line_type": "generated", "code": "\n    }\n    \n    /**\n     * Gets the fraction as a <tt>int</tt>. This returns the whole number\n     * part of the fraction.\n     * @return the whole number part of the fraction.\n     */\n    public int intValue() {", "entropy": 0.1319580078125, "is_bug_line": false, "sus_score": 0.5313439965248108, "per_token_entropy": [0.266845703125, 0.0010128021240234375, 0.08477783203125, 0.01192474365234375, 0.00727081298828125, 0.0001519918441772461, 0.1207275390625, 0.047943115234375, 0.112548828125, 0.006946563720703125, 0.222900390625, 0.010650634765625, 0.01031494140625, 8.046627044677734e-05, 0.39453125, 0.0004837512969970703, 0.0037212371826171875, 0.00312042236328125, 0.056060791015625, 0.2220458984375, 0.0031375885009765625, 1.1826171875, 0.01001739501953125, 1.2939453125, 1.3589859008789062e-05, 0.08642578125, 0.0005221366882324219, 0.0013828277587890625, 0.0069122314453125, 0.01146697998046875, 0.050384521484375, 0.0008854866027832031, 0.018157958984375, 0.00039124488830566406, 0.0189208984375, 0.0478515625, 0.0024509429931640625, 0.7451171875, 0.00501251220703125, 0.0030879974365234375, 0.00437164306640625, 0.9326171875, 0.0031108856201171875, 0.036346435546875, 0.019439697265625, 0.0024814605712890625, 0.004669189453125, 0.6513671875, 0.00019299983978271484, 0.002544403076171875, 0.001102447509765625], "tokens": [284, 320, 2170, 1022, 275, 319, 7124, 322, 18795, 619, 312, 333, 2251, 48, 410, 377, 2251, 4503, 1348, 3217, 322, 9844, 1451, 275, 319, 1742, 432, 322, 18795, 32, 275, 319, 477, 601, 322, 9844, 1451, 1742, 432, 322, 18795, 32, 275, 569, 284, 562, 629, 629, 882, 346, 301]}
{"line_number": 616, "line_type": "original", "code": "", "entropy": 0.266845703125, "is_bug_line": false, "sus_score": 0.5196613073348999, "per_token_entropy": [0.266845703125], "tokens": [203]}
{"line_number": 616, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5196613073348999, "per_token_entropy": [], "tokens": []}
{"line_number": 597, "line_type": "original", "code": "", "entropy": 0.266845703125, "is_bug_line": false, "sus_score": 0.5150171518325806, "per_token_entropy": [0.266845703125], "tokens": [203]}
{"line_number": 597, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5150171518325806, "per_token_entropy": [], "tokens": []}
{"line_number": 584, "line_type": "original", "code": "", "entropy": 0.266845703125, "is_bug_line": false, "sus_score": 0.5140560269355774, "per_token_entropy": [0.266845703125], "tokens": [203]}
{"line_number": 584, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5140560269355774, "per_token_entropy": [], "tokens": []}
{"line_number": 577, "line_type": "original", "code": "", "entropy": 0.266845703125, "is_bug_line": false, "sus_score": 0.5135708451271057, "per_token_entropy": [0.266845703125], "tokens": [203]}
{"line_number": 577, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5135708451271057, "per_token_entropy": [], "tokens": []}
{"line_number": 608, "line_type": "original", "code": "", "entropy": 0.266845703125, "is_bug_line": false, "sus_score": 0.5101200938224792, "per_token_entropy": [0.266845703125], "tokens": [203]}
{"line_number": 608, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5101200938224792, "per_token_entropy": [], "tokens": []}
{"line_number": 603, "line_type": "original", "code": "", "entropy": 0.266845703125, "is_bug_line": false, "sus_score": 0.5083587765693665, "per_token_entropy": [0.266845703125], "tokens": [203]}
{"line_number": 603, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5083587765693665, "per_token_entropy": [], "tokens": []}
{"line_number": 590, "line_type": "original", "code": "", "entropy": 0.266845703125, "is_bug_line": false, "sus_score": 0.5069064497947693, "per_token_entropy": [0.266845703125], "tokens": [203]}
{"line_number": 590, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5069064497947693, "per_token_entropy": [], "tokens": []}
{"line_number": 576, "line_type": "original", "code": "", "entropy": 0.266845703125, "is_bug_line": false, "sus_score": 0.5064879655838013, "per_token_entropy": [0.266845703125], "tokens": [203]}
{"line_number": 576, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5064879655838013, "per_token_entropy": [], "tokens": []}
{"line_number": 617, "line_type": "original", "code": "", "entropy": 0.266845703125, "is_bug_line": false, "sus_score": 0.504918098449707, "per_token_entropy": [0.266845703125], "tokens": [203]}
{"line_number": 617, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.504918098449707, "per_token_entropy": [], "tokens": []}
{"line_number": 210, "line_type": "original", "code": "        if (den == 0) {", "entropy": 2.275390625, "is_bug_line": false, "sus_score": 0.5044432878494263, "per_token_entropy": [3.583984375, 1.7568359375, 0.065673828125, 12.921875, 0.81494140625, 0.72900390625, 0.06463623046875, 0.47265625, 0.0823974609375], "tokens": [351, 415, 308, 5114, 610, 225, 34, 27, 301]}
{"line_number": 210, "line_type": "generated", "code": "\n        return -1;\n    }\n    \n    /**\n     * Returns the double value of this fraction.  The result is cached to\n     * avoid recomputation.\n     * @return the double value.\n     */\n    public double doubleValue() {\n        return (double", "entropy": 0.42529296875, "is_bug_line": false, "sus_score": 0.5044432878494263, "per_token_entropy": [0.60009765625, 0.8154296875, 2.546875, 0.0860595703125, 0.006885528564453125, 0.16357421875, 0.001102447509765625, 0.2919921875, 0.02447509765625, 0.01085662841796875, 2.9087066650390625e-05, 1.8095703125, 0.36669921875, 1.0224609375, 0.082763671875, 0.31103515625, 0.268310546875, 0.0338134765625, 0.116943359375, 1.0390625, 1.2109375, 1.0537109375, 0.1866455078125, 1.2890625, 0.98388671875, 0.37548828125, 2.2649765014648438e-06, 0.771484375, 0.428955078125, 1.7685546875, 0.281005859375, 0.035980224609375, 0.0017061233520507812, 0.06317138671875, 0.0032558441162109375, 0.043731689453125, 0.360107421875, 0.0180511474609375, 1.3916015625, 0.008270263671875, 0.0382080078125, 0.01195526123046875, 0.016448974609375, 0.009735107421875, 0.0003075599670410156, 8.702278137207031e-06, 0.0039215087890625, 0.0026607513427734375, 0.0809326171875, 1.4580078125, 0.60546875, 0.014495849609375], "tokens": [291, 442, 429, 35, 45, 284, 320, 2170, 1022, 275, 319, 3759, 322, 2064, 786, 432, 458, 18795, 32, 225, 886, 1056, 438, 10814, 372, 275, 319, 7358, 316, 47851, 32, 275, 319, 477, 601, 322, 2064, 786, 32, 275, 569, 284, 562, 2064, 2064, 882, 346, 301, 291, 442, 308, 2627]}
{"line_number": 607, "line_type": "original", "code": "", "entropy": 0.266845703125, "is_bug_line": false, "sus_score": 0.5006264448165894, "per_token_entropy": [0.266845703125], "tokens": [203]}
{"line_number": 607, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5006264448165894, "per_token_entropy": [], "tokens": []}
{"line_number": 561, "line_type": "original", "code": "", "entropy": 0.266845703125, "is_bug_line": false, "sus_score": 0.4969627261161804, "per_token_entropy": [0.266845703125], "tokens": [203]}
{"line_number": 561, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.4969627261161804, "per_token_entropy": [], "tokens": []}
{"line_number": 562, "line_type": "original", "code": "", "entropy": 0.266845703125, "is_bug_line": false, "sus_score": 0.4966934025287628, "per_token_entropy": [0.266845703125], "tokens": [203]}
{"line_number": 562, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.4966934025287628, "per_token_entropy": [], "tokens": []}
{"line_number": 580, "line_type": "original", "code": "", "entropy": 0.266845703125, "is_bug_line": false, "sus_score": 0.4951491951942444, "per_token_entropy": [0.266845703125], "tokens": [203]}
{"line_number": 580, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.4951491951942444, "per_token_entropy": [], "tokens": []}
