{"line_number": 2331, "line_type": "original", "code": "        Dfp tempDfp = DfpMath.pow(getTwo(), exponent);", "entropy": 1.5498046875, "is_bug_line": false, "sus_score": 0.5839418768882751, "per_token_entropy": [6.19921875, 7.57421875, 0.003910064697265625, 2.537109375, 2.25, 0.01253509521484375, 0.10736083984375, 2.919921875, 0.00045800209045410156, 1.2392578125, 0.0012359619140625, 3.158203125, 0.00963592529296875, 0.54150390625, 0.028839111328125, 0.004367828369140625, 0.95556640625, 0.341796875], "tokens": [351, 475, 4426, 1779, 54, 4426, 280, 475, 4426, 5717, 32, 7527, 26, 371, 8617, 1026, 19715, 293]}
{"line_number": 2331, "line_type": "generated", "code": "\n        return x;\n\n    }\n\n    /** Convert the instance into a double.\n     * @return a double approximating the instance\n     * @see #toDouble()\n     */\n    public double doubleValue() {\n        return toDouble();\n    }\n\n    /** Convert", "entropy": 0.1673583984375, "is_bug_line": false, "sus_score": 0.5839418768882751, "per_token_entropy": [0.46533203125, 0.057098388671875, 0.007781982421875, 0.0028209686279296875, 0.66064453125, 0.0011854171752929688, 0.21435546875, 0.041290283203125, 0.677734375, 0.1544189453125, 0.03741455078125, 0.222412109375, 0.0665283203125, 1.3916015625, 0.8740234375, 0.111328125, 0.00545501708984375, 0.3046875, 0.06304931640625, 0.081787109375, 0.12164306640625, 0.043548583984375, 0.00011086463928222656, 1.1324882507324219e-05, 0.0022563934326171875, 0.005321502685546875, 0.130859375, 0.0755615234375, 0.01220703125, 0.0277862548828125, 0.0103302001953125, 0.1708984375, 0.01294708251953125, 0.0135040283203125, 0.1829833984375, 0.043060302734375, 0.055999755859375, 0.2470703125, 0.9580078125, 0.00018143653869628906, 0.0215301513671875, 0.00542449951171875, 0.329345703125, 0.0236968994140625, 0.0164642333984375, 0.001983642578125, 0.004703521728515625, 0.0188446044921875, 0.00023949146270751953, 0.1590576171875, 0.031402587890625, 0.537109375], "tokens": [291, 442, 816, 45, 446, 320, 446, 1022, 8125, 322, 1980, 1991, 312, 2064, 32, 275, 319, 477, 601, 312, 2064, 16756, 449, 1741, 322, 1980, 275, 319, 477, 2970, 588, 39982, 346, 275, 569, 284, 562, 2064, 2064, 882, 346, 301, 291, 442, 372, 4075, 473, 284, 320, 446, 1022, 8125]}
{"line_number": 2355, "line_type": "original", "code": "        String str = y.toString();", "entropy": 2.083984375, "is_bug_line": false, "sus_score": 0.578069269657135, "per_token_entropy": [4.65234375, 4.8359375, 0.57666015625, 0.040618896484375, 6.296875, 0.0261077880859375, 0.0921630859375, 0.1500244140625], "tokens": [351, 892, 596, 280, 533, 32, 3108, 473]}
{"line_number": 2355, "line_type": "generated", "code": "\n    /**\n     * Convert the instance into a {@link BigDecimal}.\n     *\n     * @return a {@link BigDecimal} approximation of the instance\n     */\n    public BigDecimal toBigDecimal() {\n        return new BigDecimal(toString());\n    }", "entropy": 0.335205078125, "is_bug_line": false, "sus_score": 0.578069269657135, "per_token_entropy": [0.60595703125, 0.49267578125, 0.865234375, 0.0008077621459960938, 1.716796875, 0.60791015625, 0.1524658203125, 0.3583984375, 0.15478515625, 0.9404296875, 0.08599853515625, 0.52099609375, 0.2227783203125, 0.401123046875, 0.003086090087890625, 1.89453125, 0.0036106109619140625, 0.220703125, 0.115966796875, 0.2154541015625, 0.345947265625, 0.0089111328125, 0.00928497314453125, 0.03070068359375, 1.984375, 0.1278076171875, 0.10748291015625, 0.020416259765625, 0.097900390625, 0.55615234375, 0.01788330078125, 0.0289764404296875, 0.0130767822265625, 0.00457763671875, 0.0173187255859375, 0.011199951171875, 0.00852203369140625, 0.453857421875, 0.82275390625, 0.2431640625, 0.001434326171875, 0.081787109375, 0.6884765625, 0.137451171875, 0.01544189453125, 0.0018796920776367188], "tokens": [284, 1022, 275, 319, 8125, 322, 1980, 1991, 312, 3088, 1204, 17280, 4009, 275, 319, 275, 319, 477, 601, 312, 3088, 1204, 17280, 111, 39431, 432, 322, 1980, 275, 569, 284, 562, 17280, 372, 20827, 346, 301, 291, 442, 537, 17280, 26, 3108, 1035, 284, 320]}
{"line_number": 2357, "line_type": "original", "code": "        long mantissa = Long.parseLong(str);", "entropy": 1.3837890625, "is_bug_line": false, "sus_score": 0.5779373645782471, "per_token_entropy": [5.7109375, 3.33984375, 1.1875, 0.019805908203125, 6.9141387939453125e-06, 0.232421875, 4.46484375, 0.029449462890625, 1.27734375, 0.1591796875, 0.2392578125, 0.1470947265625, 1.1806640625], "tokens": [351, 1946, 345, 29913, 2496, 280, 6359, 32, 2208, 3952, 26, 466, 293]}
{"line_number": 2357, "line_type": "generated", "code": "\n\n    /**\n     * Returns the largest (closest to +infinity) {@code Dfp} value that is\n     * equal to this {@code Dfp} value.\n     *\n     * @return The smallest (closest to -infinity) {@code Dfp}", "entropy": 0.31689453125, "is_bug_line": false, "sus_score": 0.5779373645782471, "per_token_entropy": [0.921875, 0.1514892578125, 0.994140625, 0.000705718994140625, 2.173828125, 0.82861328125, 2.02734375, 0.1663818359375, 0.00974273681640625, 1.3709068298339844e-05, 1.498046875, 0.30419921875, 6.783008575439453e-05, 1.0205078125, 0.0123291015625, 0.047515869140625, 0.0024871826171875, 0.0020275115966796875, 0.1275634765625, 0.321533203125, 0.01004791259765625, 0.65966796875, 0.00010120868682861328, 1.1171875, 0.0002472400665283203, 0.5693359375, 0.00861358642578125, 6.711483001708984e-05, 0.001007080078125, 0.00028634071350097656, 0.191650390625, 0.0045013427734375, 0.069091796875, 0.1490478515625, 0.004669189453125, 0.384521484375, 0.0003578662872314453, 0.0606689453125, 0.0147857666015625, 1.162109375, 0.291748046875, 0.0232696533203125, 0.10595703125, 9.751319885253906e-05, 0.419189453125, 0.0035247802734375, 7.045269012451172e-05, 0.6123046875, 0.00086212158203125, 0.004375457763671875, 6.23464584350586e-05, 0.0007801055908203125], "tokens": [446, 1022, 275, 319, 3759, 322, 22909, 308, 19093, 372, 474, 36295, 27, 3088, 687, 475, 4426, 111, 786, 688, 438, 275, 319, 5040, 372, 458, 3088, 687, 475, 4426, 111, 786, 32, 275, 319, 275, 319, 477, 601, 886, 29044, 308, 19093, 372, 429, 36295, 27, 3088, 687, 475, 4426, 111]}
{"line_number": 2326, "line_type": "original", "code": "        int exponent = (int)(y.log10() * 3.32);", "entropy": 1.8828125, "is_bug_line": false, "sus_score": 0.5755314230918884, "per_token_entropy": [5.06640625, 3.79296875, 2.41015625, 1.8896484375, 0.302978515625, 0.01413726806640625, 2.197265625, 6.8984375, 1.16796875, 4.7109375, 0.64013671875, 2.765655517578125e-05, 0.2113037109375, 0.67724609375, 0.389404296875, 0.2406005859375, 0.0210113525390625, 0.01345062255859375, 0.0037288665771484375, 7.00390625], "tokens": [351, 629, 19715, 280, 308, 410, 2502, 107, 32, 751, 35, 34, 346, 319, 225, 37, 32, 37, 36, 293]}
{"line_number": 2326, "line_type": "generated", "code": "\n        if (negate) {\n            bits = -bits;\n        }\n\n        return Double.longBitsToDouble(bits);\n\n    }\n\n    /** Convert the instance into a float.\n     * @return a float approximating the instance\n     * @see #", "entropy": 0.1690673828125, "is_bug_line": false, "sus_score": 0.5755314230918884, "per_token_entropy": [0.3466796875, 1.0400390625, 0.045654296875, 0.054901123046875, 9.179115295410156e-06, 0.01751708984375, 0.0316162109375, 0.016754150390625, 0.1175537109375, 0.65966796875, 0.49169921875, 0.01242828369140625, 0.006412506103515625, 0.022705078125, 0.000957489013671875, 0.234130859375, 0.254638671875, 0.0333251953125, 0.0004277229309082031, 0.0008606910705566406, 0.00016307830810546875, 0.0001748800277709961, 0.0006432533264160156, 0.0031070709228515625, 0.002117156982421875, 0.51953125, 0.0010004043579101562, 0.2359619140625, 0.03643798828125, 0.6884765625, 0.1343994140625, 0.040435791015625, 0.1982421875, 0.0662841796875, 3.00390625, 0.035491943359375, 0.07916259765625, 0.0007619857788085938, 0.10711669921875, 0.00386810302734375, 0.0181732177734375, 0.034423828125, 0.014739990234375, 0.00014519691467285156, 5.6862831115722656e-05, 0.00506591796875, 0.0020160675048828125, 0.031097412109375, 0.1080322265625, 0.005035400390625, 0.01500701904296875, 0.01094818115234375], "tokens": [291, 415, 308, 8095, 332, 27, 301, 324, 7030, 280, 429, 5960, 45, 291, 320, 584, 442, 6934, 32, 3222, 8733, 40609, 26, 5960, 293, 446, 320, 446, 1022, 8125, 322, 1980, 1991, 312, 1897, 32, 275, 319, 477, 601, 312, 1897, 16756, 449, 1741, 322, 1980, 275, 319, 477, 2970, 588]}
{"line_number": 2376, "line_type": "original", "code": "        double x = Double.longBitsToDouble(bits);", "entropy": 1.0439453125, "is_bug_line": false, "sus_score": 0.5751937627792358, "per_token_entropy": [6.1171875, 4.48828125, 1.099609375, 0.1849365234375, 0.2054443359375, 0.0020198822021484375, 0.0226898193359375, 0.0006132125854492188, 0.0007166862487792969, 0.091796875, 0.1990966796875, 0.107421875], "tokens": [351, 2064, 816, 280, 6934, 32, 3222, 8733, 40609, 26, 5960, 293]}
{"line_number": 2376, "line_type": "generated", "code": "\n\n    /**\n     * Returns a {@link java.lang.String} representation of this instance.\n     * @return a string representation of the instance\n     */\n    @Override\n    public String toString() {\n\n        if (isNaN()) {\n            return \"NaN\";\n       ", "entropy": 0.286376953125, "is_bug_line": false, "sus_score": 0.5751937627792358, "per_token_entropy": [1.0, 0.1529541015625, 1.029296875, 0.0008363723754882812, 2.0546875, 0.916015625, 0.42236328125, 0.310791015625, 1.017578125, 0.00013530254364013672, 0.385986328125, 0.0003528594970703125, 0.0823974609375, 0.10162353515625, 0.0438232421875, 0.008209228515625, 0.2578125, 0.447509765625, 0.6923828125, 0.11737060546875, 0.021636962890625, 0.412841796875, 0.0926513671875, 0.4833984375, 1.1611328125, 0.0234222412109375, 0.130615234375, 0.4267578125, 0.078857421875, 0.175537109375, 0.161376953125, 0.0181884765625, 0.310546875, 0.0023345947265625, 0.0089874267578125, 0.00991058349609375, 0.0213165283203125, 0.0006098747253417969, 0.09515380859375, 0.0121307373046875, 1.029296875, 0.77880859375, 0.04827880859375, 0.0841064453125, 0.0330810546875, 0.0086669921875, 0.01800537109375, 0.00969696044921875, 0.1553955078125, 0.01605224609375, 0.004772186279296875, 0.0158233642578125], "tokens": [446, 1022, 275, 319, 3759, 312, 3088, 1204, 1383, 32, 1581, 32, 652, 111, 10293, 432, 458, 1980, 32, 275, 319, 477, 601, 312, 802, 10293, 432, 322, 1980, 275, 569, 284, 477, 1788, 284, 562, 892, 11345, 346, 301, 584, 415, 308, 26821, 1157, 301, 324, 442, 313, 11126, 866, 291]}
{"line_number": 2340, "line_type": "original", "code": "        y = y.divide(DfpMath.pow(getTwo(), exponent));", "entropy": 1.08984375, "is_bug_line": false, "sus_score": 0.5751695036888123, "per_token_entropy": [6.78515625, 5.80859375, 0.058074951171875, 0.16943359375, 0.00102996826171875, 2.56640625, 0.005283355712890625, 2.078125, 0.00017070770263671875, 0.409912109375, 0.0007538795471191406, 0.10205078125, 0.0042266845703125, 0.271484375, 0.0112762451171875, 0.0006556510925292969, 1.1376953125, 0.2177734375], "tokens": [351, 533, 280, 533, 32, 23987, 26, 54, 4426, 5717, 32, 7527, 26, 371, 8617, 1026, 19715, 876]}
{"line_number": 2340, "line_type": "generated", "code": "\n    public double[] toSplitDouble() {\n\n        if (isInfinite()) {\n            if (lessThan(getZero())) {\n                return new double[] { Double.NEGATIVE_INFINITY, 0 };\n            } else {\n                return new double[] { Double", "entropy": 0.1009521484375, "is_bug_line": false, "sus_score": 0.5751695036888123, "per_token_entropy": [0.06573486328125, 0.04736328125, 0.15966796875, 0.0127410888671875, 0.0011138916015625, 0.0023651123046875, 0.0011625289916992188, 0.0034465789794921875, 0.00814056396484375, 0.27587890625, 0.452392578125, 0.0087127685546875, 1.32421875, 0.0004467964172363281, 0.0136260986328125, 0.0006642341613769531, 0.01274871826171875, 0.191650390625, 0.00252532958984375, 0.0100860595703125, 1.5020370483398438e-05, 0.0003476142883300781, 0.0022983551025390625, 0.00011432170867919922, 0.0007543563842773438, 0.000537872314453125, 0.0042724609375, 0.017333984375, 0.007266998291015625, 0.0017576217651367188, 0.062225341796875, 0.19482421875, 0.83935546875, 0.000102996826171875, 0.0158233642578125, 8.344650268554688e-06, 1.9073486328125e-06, 0.0158233642578125, 0.71728515625, 0.006927490234375, 0.74609375, 0.00382232666015625, 0.0006842613220214844, 0.0021495819091796875, 0.0009694099426269531, 0.002269744873046875, 0.0011816024780273438, 0.0007853507995605469, 0.00034165382385253906, 0.0023288726806640625, 0.0005335807800292969, 0.006229400634765625], "tokens": [284, 562, 2064, 1178, 372, 7334, 4075, 346, 301, 584, 415, 308, 28823, 11949, 1157, 301, 324, 415, 308, 2274, 11546, 26, 371, 8039, 5156, 301, 400, 442, 537, 2064, 1178, 301, 6934, 32, 43518, 81, 36069, 30, 225, 34, 1472, 324, 320, 813, 301, 400, 442, 537, 2064, 1178, 301, 6934]}
{"line_number": 2354, "line_type": "original", "code": "        y = y.multiply(newInstance(4503599627370496l)).rint();", "entropy": 1.2744140625, "is_bug_line": false, "sus_score": 0.572260856628418, "per_token_entropy": [5.0703125, 6.40234375, 0.227783203125, 0.33935546875, 0.0058135986328125, 1.3359375, 0.0082550048828125, 6.546875, 0.07269287109375, 3.41796875, 0.347412109375, 0.00572967529296875, 0.0003807544708251953, 0.0003299713134765625, 0.00019109249114990234, 0.0006213188171386719, 0.0002567768096923828, 0.00040793418884277344, 0.0005478858947753906, 0.0005240440368652344, 9.989738464355469e-05, 0.0001266002655029297, 0.0003905296325683594, 0.00021255016326904297, 0.01776123046875, 5.16015625, 1.927734375, 6.05078125, 0.029754638671875], "tokens": [351, 533, 280, 533, 32, 20123, 26, 20262, 26, 38, 39, 34, 37, 39, 43, 43, 40, 36, 41, 37, 41, 34, 38, 43, 40, 94, 3427, 10744, 473]}
{"line_number": 2354, "line_type": "generated", "code": "\n    /**\n     * Convert a double into a {@link Dfp} instance.\n     * <p>\n     * This method is a wrapper around the {@link #Dfp(double)} constructor.\n     *\n     * @param value double to convert\n     *", "entropy": 0.57763671875, "is_bug_line": false, "sus_score": 0.572260856628418, "per_token_entropy": [0.72021484375, 0.221435546875, 1.0419921875, 0.0008072853088378906, 1.6591796875, 1.5087890625, 1.1728515625, 0.6064453125, 0.1700439453125, 0.93603515625, 0.2166748046875, 0.0357666015625, 0.00038814544677734375, 0.7470703125, 0.56103515625, 0.5576171875, 0.2208251953125, 0.0011444091796875, 1.126953125, 0.048309326171875, 0.01186370849609375, 0.06463623046875, 0.0006532669067382812, 1.20703125, 0.3642578125, 1.02734375, 2.0546875, 3.697265625, 0.564453125, 0.299560546875, 1.0625, 0.0235748291015625, 0.51025390625, 0.75732421875, 4.744529724121094e-05, 0.00180816650390625, 0.14697265625, 0.087890625, 0.097412109375, 0.284423828125, 0.074462890625, 0.0015811920166015625, 0.826171875, 0.0003504753112792969, 0.013336181640625, 0.0042724609375, 1.732421875, 2.18359375, 1.08203125, 0.11187744140625, 0.1795654296875, 0.0006890296936035156], "tokens": [284, 1022, 275, 319, 8125, 312, 2064, 1991, 312, 3088, 1204, 475, 4426, 111, 1980, 32, 275, 319, 333, 98, 48, 275, 319, 1348, 1411, 438, 312, 7767, 6835, 322, 3088, 1204, 588, 54, 4426, 26, 2627, 4370, 4374, 32, 275, 319, 275, 319, 477, 753, 786, 2064, 372, 4483, 275, 319]}
{"line_number": 2313, "line_type": "original", "code": "        if (isNaN()) {", "entropy": 3.171875, "is_bug_line": false, "sus_score": 0.5704809427261353, "per_token_entropy": [4.703125, 4.28125, 0.0474853515625, 9.796875, 0.1318359375, 0.07122802734375], "tokens": [351, 415, 308, 26821, 1157, 301]}
{"line_number": 2313, "line_type": "generated", "code": "\n        }\n\n        double d = Double.longBitsToDouble(((mantissa & 0x000fffffffffffffL) << 52) | ((long) exponent << 52) | (mantissa & 0x80", "entropy": 0.268798828125, "is_bug_line": false, "sus_score": 0.5704809427261353, "per_token_entropy": [0.3115234375, 0.0142974853515625, 0.266357421875, 1.1767578125, 0.76171875, 0.2451171875, 0.3447265625, 0.01358795166015625, 0.0013971328735351562, 0.0002834796905517578, 0.0003879070281982422, 0.7978515625, 0.85400390625, 5.257129669189453e-05, 2.384185791015625e-07, 0.61083984375, 1.1630859375, 0.00598907470703125, 0.75, 0.38037109375, 0.020233154296875, 0.0097198486328125, 0.055328369140625, 0.0212554931640625, 0.002994537353515625, 0.109130859375, 0.2259521484375, 0.00844573974609375, 0.0063629150390625, 0.0007333755493164062, 0.0313720703125, 0.195556640625, 0.84716796875, 0.65966796875, 0.47314453125, 0.74462890625, 0.2003173828125, 0.0012693405151367188, 9.799003601074219e-05, 0.006591796875, 0.27880859375, 0.019256591796875, 0.97705078125, 0.295654296875, 4.673004150390625e-05, 1.049041748046875e-05, 0.70068359375, 0.059661865234375, 0.0025177001953125, 0.004604339599609375, 0.322509765625, 3.600120544433594e-05], "tokens": [291, 320, 584, 2064, 343, 280, 6934, 32, 3222, 8733, 40609, 7728, 95, 29913, 2496, 549, 225, 34, 106, 34, 34, 34, 20629, 35030, 62, 27, 1264, 225, 39, 36, 27, 523, 1833, 3222, 27, 19715, 1264, 225, 39, 36, 27, 523, 308, 95, 29913, 2496, 549, 225, 34, 106, 42, 34]}
{"line_number": 2119, "line_type": "original", "code": "            buffer[--q] = '-';", "entropy": 3.119140625, "is_bug_line": false, "sus_score": 0.5699437856674194, "per_token_entropy": [5.984375, 9.890625, 0.93212890625, 3.666015625, 4.671875, 0.0180206298828125, 0.01087188720703125, 2.90625, 0.003574371337890625], "tokens": [1468, 3112, 77, 287, 99, 79, 280, 6470, 920]}
{"line_number": 2119, "line_type": "generated", "code": "\n                break;\n\n            case DfpField.FLAG_OVERFLOW:\n                if (nans == FINITE) {\n                    def = newInstance(getZero());\n                    def.nans = INFINITE;\n                }\n\n                if (nans == IN", "entropy": 0.1810302734375, "is_bug_line": false, "sus_score": 0.5699437856674194, "per_token_entropy": [0.240478515625, 0.327880859375, 0.0001512765884399414, 0.0802001953125, 0.00585174560546875, 0.0006108283996582031, 1.4543533325195312e-05, 0.00018298625946044922, 0.0002079010009765625, 0.000102996826171875, 1.0013580322265625e-05, 0.01291656494140625, 9.298324584960938e-05, 0.0011110305786132812, 1.2919921875, 1.275390625, 0.1021728515625, 0.481689453125, 0.0115509033203125, 0.107421875, 0.427490234375, 3.5762786865234375e-07, 0.5576171875, 0.00466156005859375, 0.1124267578125, 0.471435546875, 0.01200103759765625, 0.07391357421875, 0.021881103515625, 0.0033435821533203125, 0.142822265625, 0.027801513671875, 0.0016937255859375, 0.05511474609375, 0.03424072265625, 0.003673553466796875, 1.173828125, 0.00030684471130371094, 0.0018873214721679688, 0.223876953125, 2.944469451904297e-05, 0.002288818359375, 0.004688262939453125, 0.5810546875, 0.0008716583251953125, 1.0927734375, 0.03961181640625, 0.00640869140625, 0.01074981689453125, 5.7578086853027344e-05, 0.01074981689453125, 0.373291015625], "tokens": [400, 1626, 45, 1064, 1135, 475, 4426, 1176, 32, 4694, 81, 9425, 18118, 44, 400, 415, 308, 96, 693, 610, 30460, 2345, 27, 301, 528, 665, 280, 537, 1810, 26, 371, 8039, 1035, 528, 665, 32, 96, 693, 280, 1236, 12611, 2345, 45, 400, 320, 2110, 415, 308, 96, 693, 610, 1236]}
{"line_number": 2305, "line_type": "original", "code": "        if (isInfinite()) {", "entropy": 2.236328125, "is_bug_line": false, "sus_score": 0.5685771107673645, "per_token_entropy": [4.50390625, 1.1796875, 0.05413818359375, 9.796875, 0.00679779052734375, 0.1025390625, 0.01247406005859375], "tokens": [351, 415, 308, 28823, 11949, 1157, 301]}
{"line_number": 2305, "line_type": "generated", "code": "\n        return negate? -y.doubleValue() : y.doubleValue();\n    }\n\n    /** Convert the instance into a long integer.\n     * @return a long integer approximating the instance\n     * @exception NumberFormatException if the conversion cannot be performed\n    ", "entropy": 0.35498046875, "is_bug_line": false, "sus_score": 0.5685771107673645, "per_token_entropy": [0.76806640625, 1.744140625, 1.001953125, 9.453296661376953e-05, 0.03338623046875, 0.239990234375, 0.048004150390625, 0.001026153564453125, 0.7890625, 0.016815185546875, 0.00164031982421875, 0.00479888916015625, 0.0003113746643066406, 0.00214385986328125, 0.001720428466796875, 0.45751953125, 0.0018606185913085938, 0.3046875, 0.05084228515625, 0.60693359375, 0.12109375, 0.034454345703125, 0.157470703125, 0.058441162109375, 1.6083984375, 1.275390625, 0.3154296875, 0.154296875, 0.0030117034912109375, 0.3662109375, 0.0242919921875, 0.2998046875, 0.06768798828125, 0.375, 0.05511474609375, 0.00021922588348388672, 0.00024509429931640625, 0.01544189453125, 0.0181884765625, 0.137939453125, 0.58349609375, 0.027984619140625, 1.2734375, 0.87158203125, 0.02337646484375, 0.1806640625, 0.479736328125, 2.197265625, 0.79541015625, 0.0950927734375, 0.63720703125, 0.1295166015625], "tokens": [291, 442, 7528, 332, 1018, 429, 107, 32, 46952, 346, 499, 533, 32, 46952, 473, 284, 320, 446, 1022, 8125, 322, 1980, 1991, 312, 1946, 4991, 32, 275, 319, 477, 601, 312, 1946, 4991, 16756, 449, 1741, 322, 1980, 275, 319, 477, 3893, 5104, 25944, 415, 322, 11741, 4881, 526, 13555, 275]}
{"line_number": 2318, "line_type": "original", "code": "        boolean negate = false;", "entropy": 2.65234375, "is_bug_line": false, "sus_score": 0.5675153732299805, "per_token_entropy": [4.31640625, 9.3046875, 3.1796875, 1.0859375, 0.3095703125, 0.367919921875, 0.0053558349609375], "tokens": [351, 1905, 7528, 332, 280, 901, 45]}
{"line_number": 2318, "line_type": "generated", "code": "\n        }\n\n        if (negate) {\n            mantissa = -mantissa;\n        }\n\n        return Double.longBitsToDouble(((long)exponent) << 52 | mantissa);\n\n    }\n\n    /** Convert the instance into a float", "entropy": 0.27197265625, "is_bug_line": false, "sus_score": 0.5675153732299805, "per_token_entropy": [0.8935546875, 0.007625579833984375, 0.272705078125, 1.7939453125, 0.034454345703125, 1.2060546875, 1.5497207641601562e-06, 0.02264404296875, 0.00604248046875, 0.009429931640625, 0.1307373046875, 2.086162567138672e-05, 3.0994415283203125e-06, 0.044036865234375, 0.037200927734375, 0.0218658447265625, 1.1920928955078125e-07, 2.6226043701171875e-06, 0.0016193389892578125, 0.033050537109375, 0.0002663135528564453, 0.1337890625, 1.0732421875, 0.2078857421875, 0.009490966796875, 0.0021514892578125, 0.00021326541900634766, 0.000621795654296875, 0.91259765625, 0.3681640625, 0.1768798828125, 0.32470703125, 1.2470703125, 0.002536773681640625, 0.00247955322265625, 5.328655242919922e-05, 0.00014293193817138672, 0.049774169921875, 0.414306640625, 2.384185791015625e-07, 4.291534423828125e-06, 0.1064453125, 0.4462890625, 0.0008563995361328125, 0.257568359375, 0.041839599609375, 0.669921875, 0.14599609375, 0.04241943359375, 0.1907958984375, 0.06365966796875, 2.736328125], "tokens": [291, 320, 584, 415, 308, 8095, 332, 27, 301, 324, 345, 29913, 2496, 280, 429, 95, 29913, 2496, 45, 291, 320, 584, 442, 6934, 32, 3222, 8733, 40609, 7728, 3222, 27, 28323, 27, 1264, 225, 39, 36, 523, 345, 29913, 2496, 293, 446, 320, 446, 1022, 8125, 322, 1980, 1991, 312, 1897]}
{"line_number": 2375, "line_type": "original", "code": "        long bits = mantissa | ((exponent + 1023L) << 52);", "entropy": 1.0234375, "is_bug_line": false, "sus_score": 0.5666628479957581, "per_token_entropy": [6.21484375, 2.50390625, 0.2213134765625, 0.049224853515625, 7.703125, 0.10491943359375, 2.47955322265625e-05, 2.287109375, 1.4306640625, 0.576171875, 0.2462158203125, 0.1124267578125, 0.01364898681640625, 0.00042700767517089844, 0.0175933837890625, 0.011932373046875, 1.693359375, 0.03521728515625, 0.01103973388671875, 0.007030487060546875, 0.0016355514526367188, 0.000812530517578125, 0.308349609375], "tokens": [351, 1946, 7030, 280, 345, 29913, 2496, 523, 1833, 28323, 474, 225, 35, 34, 36, 37, 62, 27, 1264, 225, 39, 36, 293]}
{"line_number": 2375, "line_type": "generated", "code": "\n\n    /** Get the sign of the instance.\n     * @return -1.0, 0.0 or 1.0\n     */\n    public double signum() {\n        if (lessThan(getZero())) {\n            return -1.0", "entropy": 0.2802734375, "is_bug_line": false, "sus_score": 0.5666628479957581, "per_token_entropy": [1.5478515625, 0.160888671875, 2.669921875, 0.28515625, 3.111328125, 0.39306640625, 0.238037109375, 0.051239013671875, 0.5693359375, 0.1260986328125, 0.0038700103759765625, 0.10638427734375, 0.006557464599609375, 0.958984375, 0.0025157928466796875, 0.120361328125, 0.00044727325439453125, 0.5849609375, 0.032867431640625, 0.0107421875, 0.0039520263671875, 7.045269012451172e-05, 0.26513671875, 0.1292724609375, 0.0004944801330566406, 0.0012521743774414062, 0.0005173683166503906, 0.505859375, 0.06524658203125, 0.012725830078125, 0.0257415771484375, 0.04541015625, 0.06884765625, 0.212158203125, 0.01105499267578125, 0.006153106689453125, 0.3056640625, 1.01953125, 0.03173828125, 0.6240234375, 2.8252601623535156e-05, 0.01294708251953125, 0.082275390625, 0.0002472400665283203, 0.003444671630859375, 0.0053558349609375, 0.00627899169921875, 0.00823974609375, 0.004825592041015625, 0.0028667449951171875, 0.12744140625, 4.7326087951660156e-05], "tokens": [446, 1022, 1390, 322, 2596, 432, 322, 1980, 32, 275, 319, 477, 601, 429, 35, 32, 34, 30, 225, 34, 32, 34, 556, 225, 35, 32, 34, 275, 569, 284, 562, 2064, 2596, 378, 346, 301, 291, 415, 308, 2274, 11546, 26, 371, 8039, 5156, 301, 324, 442, 429, 35, 32, 34]}
{"line_number": 2356, "line_type": "original", "code": "        str = str.substring(0, str.length()-1);", "entropy": 1.26171875, "is_bug_line": false, "sus_score": 0.5665530562400818, "per_token_entropy": [5.32421875, 7.66796875, 0.138427734375, 0.9306640625, 0.0860595703125, 0.55419921875, 0.00801849365234375, 0.5546875, 0.004528045654296875, 0.66162109375, 0.007358551025390625, 0.372802734375, 1.869140625, 0.381591796875, 0.35888671875], "tokens": [351, 596, 280, 596, 32, 8723, 26, 34, 30, 596, 32, 1322, 17662, 35, 293]}
{"line_number": 2356, "line_type": "generated", "code": "\n    /**\n     * Returns a {@link Dfp} whose value is\n     * <tt>(this &lt;&lt; n)</tt>, with rounding according to the context settings.\n     * The shift distance may be negative.\n     * <p>\n    ", "entropy": 0.41650390625, "is_bug_line": false, "sus_score": 0.5665530562400818, "per_token_entropy": [0.74169921875, 0.284423828125, 0.94091796875, 0.0008282661437988281, 2.08984375, 0.875, 0.38623046875, 0.336669921875, 0.9794921875, 0.00148773193359375, 0.1112060546875, 1.0146484375, 0.0026683807373046875, 0.00156402587890625, 0.498291015625, 0.0006127357482910156, 0.365478515625, 0.68359375, 0.002197265625, 0.0193328857421875, 0.53515625, 0.72412109375, 0.2181396484375, 0.0211029052734375, 0.0212554931640625, 0.0171051025390625, 0.129638671875, 9.870529174804688e-05, 0.42333984375, 0.57861328125, 2.916015625, 0.8212890625, 0.0985107421875, 0.006229400634765625, 0.020111083984375, 1.3359375, 0.0013856887817382812, 0.030609130859375, 0.004222869873046875, 1.21484375, 0.6796875, 0.0090484619140625, 1.4755859375, 0.0005121231079101562, 0.0253143310546875, 0.2027587890625, 0.0712890625, 0.0036869049072265625, 0.67724609375, 0.00559234619140625, 0.03997802734375, 0.0101165771484375], "tokens": [284, 1022, 275, 319, 3759, 312, 3088, 1204, 475, 4426, 111, 13696, 786, 438, 275, 319, 333, 2251, 1563, 578, 549, 2159, 2395, 2159, 45, 310, 2874, 2251, 2717, 623, 35396, 9267, 372, 322, 1619, 4070, 32, 275, 319, 886, 5733, 7291, 1631, 526, 11003, 32, 275, 319, 333, 98, 48, 275]}
{"line_number": 2345, "line_type": "original", "code": "        if (exponent < -1074) {", "entropy": 1.4482421875, "is_bug_line": false, "sus_score": 0.5662420988082886, "per_token_entropy": [2.63671875, 4.78125, 0.137451171875, 5.09375, 1.646484375, 0.63134765625, 0.037384033203125, 0.019989013671875, 2.0546875, 0.2398681640625, 0.07403564453125, 0.0231170654296875], "tokens": [351, 415, 308, 28323, 333, 429, 35, 34, 41, 38, 27, 301]}
{"line_number": 2345, "line_type": "generated", "code": "\n        split[1] = Double.longBitsToDouble(Double.doubleToLongBits(toDouble()) | ~mask);\n\n        return split;\n    }\n\n    /** Convert the instance into a {@link BigDecimal}.\n     * @return a BigDecimal approximating the", "entropy": 0.2265625, "is_bug_line": false, "sus_score": 0.5662420988082886, "per_token_entropy": [0.5888671875, 0.381103515625, 0.0003094673156738281, 0.0268707275390625, 0.00084686279296875, 0.0016040802001953125, 0.061126708984375, 0.00010609626770019531, 0.00855255126953125, 2.1457672119140625e-05, 5.364418029785156e-06, 0.1639404296875, 0.03411865234375, 0.00032901763916015625, 2.562999725341797e-05, 9.894371032714844e-06, 0.0003330707550048828, 8.821487426757812e-06, 0.0013704299926757812, 0.8046875, 0.00751495361328125, 0.65185546875, 0.60693359375, 0.01003265380859375, 0.01416778564453125, 1.1025390625, 0.0528564453125, 0.0026645660400390625, 0.0004930496215820312, 0.51708984375, 0.0019626617431640625, 0.275146484375, 0.09454345703125, 0.9453125, 0.26318359375, 0.03704833984375, 0.1297607421875, 0.1334228515625, 1.740234375, 0.075927734375, 0.5859375, 0.09039306640625, 0.1033935546875, 0.00394439697265625, 0.29541015625, 0.08612060546875, 0.12115478515625, 1.08984375, 0.64599609375, 0.00016200542449951172, 0.00025773048400878906, 0.0252685546875], "tokens": [291, 6122, 77, 35, 79, 280, 6934, 32, 3222, 8733, 40609, 26, 4075, 32, 2627, 705, 3952, 8733, 26, 39982, 1157, 523, 3165, 3965, 293, 584, 442, 6122, 45, 284, 320, 446, 1022, 8125, 322, 1980, 1991, 312, 3088, 1204, 17280, 4009, 275, 319, 477, 601, 312, 17280, 16756, 449, 1741, 322]}
{"line_number": 2342, "line_type": "original", "code": "            y = y.subtract(getOne());", "entropy": 2.486328125, "is_bug_line": false, "sus_score": 0.5659731030464172, "per_token_entropy": [6.125, 6.58203125, 0.32177734375, 0.91943359375, 0.018035888671875, 1.9970703125, 0.008331298828125, 6.26953125, 0.1278076171875], "tokens": [1468, 533, 280, 533, 32, 25330, 26, 37751, 1035]}
{"line_number": 2342, "line_type": "generated", "code": "\n        return split;\n    }\n\n    /** Convert the instance into a float.\n     * @return a float approximating the instance\n     * @see #toSplitFloat()\n     */\n    public float toFloat() {\n\n        if (isInfinite()) {\n           ", "entropy": 0.146728515625, "is_bug_line": false, "sus_score": 0.5659731030464172, "per_token_entropy": [0.268310546875, 0.28515625, 0.00859832763671875, 0.0010290145874023438, 0.16943359375, 0.0009102821350097656, 0.248046875, 0.08447265625, 1.203125, 0.26318359375, 0.034637451171875, 0.1427001953125, 0.11871337890625, 2.75390625, 0.0268096923828125, 0.056060791015625, 0.0006098747253417969, 0.0740966796875, 0.00283050537109375, 0.033050537109375, 0.03033447265625, 0.02301025390625, 0.00021159648895263672, 7.915496826171875e-05, 0.004322052001953125, 0.0018854141235351562, 0.0286712646484375, 0.1602783203125, 0.0052337646484375, 0.0308837890625, 0.00913238525390625, 0.2340087890625, 0.10504150390625, 0.0033702850341796875, 0.004116058349609375, 0.00603485107421875, 0.011383056640625, 0.007076263427734375, 0.0031681060791015625, 0.0017175674438476562, 0.00034165382385253906, 0.01470947265625, 0.00322723388671875, 0.0030956268310546875, 0.380126953125, 0.125244140625, 0.004970550537109375, 0.63037109375, 0.00015091896057128906, 0.00795745849609375, 0.00042748451232910156, 0.01486968994140625], "tokens": [291, 442, 6122, 45, 284, 320, 446, 1022, 8125, 322, 1980, 1991, 312, 1897, 32, 275, 319, 477, 601, 312, 1897, 16756, 449, 1741, 322, 1980, 275, 319, 477, 2970, 588, 452, 7334, 3670, 346, 275, 569, 284, 562, 1897, 372, 3670, 346, 301, 584, 415, 308, 28823, 11949, 1157, 301, 324]}
{"line_number": 2328, "line_type": "original", "code": "            exponent--;", "entropy": 4.984375, "is_bug_line": false, "sus_score": 0.5648955702781677, "per_token_entropy": [6.58984375, 5.859375, 2.5078125], "tokens": [1468, 19715, 10612]}
{"line_number": 2328, "line_type": "generated", "code": "\n\n        if (negate) {\n            x = -x;\n        }\n\n        return x;\n    }\n\n    /** Convert the instance into a long.\n     * @return a long approximating the instance\n     * @see #toDfp()\n     */", "entropy": 0.2313232421875, "is_bug_line": false, "sus_score": 0.5648955702781677, "per_token_entropy": [0.90966796875, 0.83154296875, 0.0158843994140625, 0.033477783203125, 3.933906555175781e-06, 0.0165557861328125, 0.007534027099609375, 0.007732391357421875, 0.25634765625, 0.017425537109375, 0.0227813720703125, 0.01116943359375, 0.00038695335388183594, 0.003814697265625, 0.0007824897766113281, 0.1385498046875, 0.08160400390625, 0.0044708251953125, 0.0005931854248046875, 0.986328125, 0.002277374267578125, 0.257080078125, 0.045745849609375, 0.630859375, 0.1470947265625, 0.0364990234375, 0.2066650390625, 0.06268310546875, 2.01171875, 0.61669921875, 0.1875, 0.0026073455810546875, 0.27099609375, 0.0202178955078125, 0.1300048828125, 0.05181884765625, 0.21044921875, 0.00032711029052734375, 0.00016117095947265625, 0.010589599609375, 0.015350341796875, 0.12249755859375, 0.40234375, 0.0243377685546875, 0.99169921875, 0.0216217041015625, 0.2783203125, 1.3671875, 0.331298828125, 0.056365966796875, 0.017608642578125, 0.152099609375], "tokens": [584, 415, 308, 8095, 332, 27, 301, 324, 816, 280, 429, 106, 45, 291, 320, 584, 442, 816, 45, 284, 320, 446, 1022, 8125, 322, 1980, 1991, 312, 1946, 32, 275, 319, 477, 601, 312, 1946, 16756, 449, 1741, 322, 1980, 275, 319, 477, 2970, 588, 452, 54, 4426, 346, 275, 569]}
{"line_number": 1234, "line_type": "original", "code": "            a.exp = b.exp;", "entropy": 1.8017578125, "is_bug_line": false, "sus_score": 0.5646890997886658, "per_token_entropy": [6.73828125, 2.328125, 2.078125, 2.05078125, 1.8681640625, 0.87109375, 0.0015201568603515625, 0.0010519027709960938, 0.2802734375], "tokens": [1468, 312, 32, 2832, 280, 323, 32, 2832, 45]}
{"line_number": 1234, "line_type": "generated", "code": "\n        }\n\n        return result;\n    }", "entropy": 0.259765625, "is_bug_line": false, "sus_score": 0.5646890997886658, "per_token_entropy": [0.1434326171875, 0.004150390625, 0.2117919921875, 1.4375, 0.027130126953125, 0.0726318359375, 0.1690673828125, 0.01302337646484375], "tokens": [291, 320, 584, 442, 1056, 45, 284, 320]}
{"line_number": 2366, "line_type": "original", "code": "        if (exponent <= -1023) {", "entropy": 1.0263671875, "is_bug_line": false, "sus_score": 0.5641236901283264, "per_token_entropy": [4.3828125, 1.82421875, 0.1207275390625, 1.1005859375, 3.46484375, 0.295654296875, 0.02215576171875, 0.032379150390625, 0.479248046875, 0.4345703125, 0.132568359375, 0.0191802978515625], "tokens": [351, 415, 308, 28323, 2511, 429, 35, 34, 36, 37, 27, 301]}
{"line_number": 2366, "line_type": "generated", "code": "\n    /**\n     * Convert the instance into a {@link BigDecimal}.\n     * @return a {@link BigDecimal} approximating the instance\n     * @see #toBigDecimal(int)\n     */\n    public BigDecimal toBigDecimal() {\n        return toBigDecimal(0", "entropy": 0.30029296875, "is_bug_line": false, "sus_score": 0.5641236901283264, "per_token_entropy": [1.1630859375, 0.27880859375, 0.8603515625, 0.0009198188781738281, 1.8291015625, 0.5791015625, 0.140625, 0.369873046875, 0.1883544921875, 1.126953125, 0.092529296875, 0.5498046875, 0.2122802734375, 0.39013671875, 0.002925872802734375, 0.59521484375, 0.088623046875, 0.2073974609375, 0.404296875, 0.00890350341796875, 0.00868988037109375, 0.0171051025390625, 0.97265625, 0.00011849403381347656, 0.00021719932556152344, 0.037353515625, 0.019439697265625, 0.0665283203125, 1.00390625, 0.0357666015625, 0.2103271484375, 0.12249755859375, 0.403076171875, 1.1533203125, 0.12109375, 0.38916015625, 0.048614501953125, 0.023956298828125, 0.2021484375, 0.017364501953125, 0.01448822021484375, 0.00867462158203125, 0.0009694099426269531, 0.0188446044921875, 0.00629425048828125, 0.00534820556640625, 0.389892578125, 0.203125, 0.080810546875, 0.00412750244140625, 0.006175994873046875, 0.93212890625], "tokens": [284, 1022, 275, 319, 8125, 322, 1980, 1991, 312, 3088, 1204, 17280, 4009, 275, 319, 477, 601, 312, 3088, 1204, 17280, 111, 16756, 449, 1741, 322, 1980, 275, 319, 477, 2970, 588, 452, 20827, 26, 410, 27, 275, 569, 284, 562, 17280, 372, 20827, 346, 301, 291, 442, 372, 20827, 26, 34]}
{"line_number": 2319, "line_type": "original", "code": "        if (lessThan(getZero())) {", "entropy": 1.7421875, "is_bug_line": true, "sus_score": 0.5641109943389893, "per_token_entropy": [6.71875, 1.1494140625, 0.036773681640625, 8.6953125, 0.0006799697875976562, 0.046722412109375, 0.60107421875, 0.0108184814453125, 0.1571044921875, 0.00988006591796875], "tokens": [351, 415, 308, 2274, 11546, 26, 371, 8039, 5156, 301]}
{"line_number": 2319, "line_type": "generated", "code": "\n            if (negate) {\n                return -Double.longBitsToDouble((((mantissa) << 52) | (exponent + 1023) << 52));\n            } else {\n                return Double.longBitsToDouble((((", "entropy": 0.2493896484375, "is_bug_line": true, "sus_score": 0.5641109943389893, "per_token_entropy": [0.77197265625, 1.390625, 0.043914794921875, 0.335205078125, 0.0002065896987915039, 0.05206298828125, 0.01393890380859375, 0.0204010009765625, 1.103515625, 0.8173828125, 0.85546875, 0.0035343170166015625, 0.00635528564453125, 0.0004603862762451172, 0.00394439697265625, 1.6025390625, 1.701171875, 2.4437904357910156e-05, 1.430511474609375e-06, 1.2744140625, 0.51220703125, 0.04095458984375, 0.006031036376953125, 0.0077972412109375, 0.07720947265625, 0.174072265625, 0.51171875, 0.2283935546875, 0.08154296875, 0.029693603515625, 0.001316070556640625, 0.00014507770538330078, 0.0670166015625, 0.01317596435546875, 0.73193359375, 0.00390625, 0.0011053085327148438, 0.0177459716796875, 0.01342010498046875, 0.2288818359375, 0.0194244384765625, 0.0005102157592773438, 0.142822265625, 0.0040283203125, 0.0122833251953125, 0.0025806427001953125, 0.0078582763671875, 4.279613494873047e-05, 6.67572021484375e-05, 3.4570693969726562e-06, 3.421306610107422e-05, 0.033721923828125], "tokens": [324, 415, 308, 8095, 332, 27, 301, 400, 442, 429, 4075, 32, 3222, 8733, 40609, 27324, 95, 29913, 2496, 27, 1264, 225, 39, 36, 27, 523, 308, 28323, 474, 225, 35, 34, 36, 37, 27, 1264, 225, 39, 36, 876, 324, 320, 813, 301, 400, 442, 6934, 32, 3222, 8733, 40609, 27324]}
{"line_number": 1041, "line_type": "original", "code": "        return result;", "entropy": 3.087890625, "is_bug_line": false, "sus_score": 0.5637006163597107, "per_token_entropy": [6.9140625, 1.8798828125, 3.5234375, 0.035980224609375], "tokens": [351, 442, 1056, 45]}
{"line_number": 1041, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5637006163597107, "per_token_entropy": [], "tokens": []}
{"line_number": 1102, "line_type": "original", "code": "        if (mant[mant.length-1] > 10) {", "entropy": 0.79296875, "is_bug_line": false, "sus_score": 0.5636132955551147, "per_token_entropy": [2.779296875, 1.904296875, 0.05828857421875, 2.359375, 0.0013761520385742188, 0.37158203125, 0.414794921875, 0.00018656253814697266, 0.0008921623229980469, 0.0002598762512207031, 0.2435302734375, 0.01261138916015625, 0.06005859375, 1.619140625, 1.7734375, 1.2197265625, 0.400146484375, 1.7861328125, 0.06610107421875], "tokens": [351, 415, 308, 95, 692, 77, 95, 692, 32, 1322, 31, 35, 79, 848, 225, 35, 34, 27, 301]}
{"line_number": 1102, "line_type": "generated", "code": "\n        mant[mant.length-1] = mant[mant.length-1] - rh;\n\n        if (mant[mant.length-1] < 0) {\n            mant[mant.length-", "entropy": 0.2130126953125, "is_bug_line": false, "sus_score": 0.5636132955551147, "per_token_entropy": [0.61376953125, 1.388671875, 0.0003333091735839844, 0.022491455078125, 0.55078125, 6.747245788574219e-05, 0.0007114410400390625, 0.00027108192443847656, 0.2003173828125, 0.0206756591796875, 0.01538848876953125, 0.2958984375, 0.70751953125, 0.00032520294189453125, 0.0005016326904296875, 0.00138092041015625, 1.0728836059570312e-05, 0.0002589225769042969, 0.0001087188720703125, 0.009124755859375, 0.00508880615234375, 0.204345703125, 0.841796875, 0.5693359375, 0.427734375, 1.0556640625, 1.7451171875, 0.0291748046875, 0.2216796875, 0.00030875205993652344, 0.001987457275390625, 0.0028209686279296875, 4.76837158203125e-07, 0.00016069412231445312, 8.976459503173828e-05, 0.02374267578125, 0.0017080307006835938, 0.024810791015625, 0.83740234375, 0.035400390625, 0.007015228271484375, 0.01885986328125, 0.032867431640625, 0.1767578125, 0.97314453125, 0.0002827644348144531, 0.001132965087890625, 0.00311279296875, 1.3709068298339844e-05, 9.334087371826172e-05, 2.5033950805664062e-05, 0.0078582763671875], "tokens": [291, 345, 692, 77, 95, 692, 32, 1322, 31, 35, 79, 280, 345, 692, 77, 95, 692, 32, 1322, 31, 35, 79, 429, 35949, 45, 584, 415, 308, 95, 692, 77, 95, 692, 32, 1322, 31, 35, 79, 333, 225, 34, 27, 301, 324, 345, 692, 77, 95, 692, 32, 1322, 31]}
