{"line_number": 649, "line_type": "original", "code": "     * @param period  period to convert", "entropy": 0.8623046875, "is_bug_line": false, "sus_score": 0.5631939172744751, "per_token_entropy": [6.39453125, 0.211669921875, 0.300537109375, 0.72998046875, 0.067626953125, 0.027587890625, 0.018524169921875, 0.0006961822509765625, 0.01087188720703125], "tokens": [262, 319, 477, 753, 7918, 225, 7918, 372, 4483]}
{"line_number": 649, "line_type": "generated", "code": "\n     * @throws IllegalArgumentException if period is invalid\n     * @throws UnsupportedOperationException if an unsupported field's value is non-zero\n     */\n    public Period(Object period, Chronology chrono, PeriodType type) {\n        super(period, type, chrono);", "entropy": 0.02581787109375, "is_bug_line": false, "sus_score": 0.5631939172744751, "per_token_entropy": [0.0640869140625, 0.003475189208984375, 0.04150390625, 0.845703125, 0.000980377197265625, 8.630752563476562e-05, 0.014984130859375, 0.001186370849609375, 0.0001964569091796875, 0.0031528472900390625, 0.01291656494140625, 0.00011861324310302734, 0.00037980079650878906, 0.0010766983032226562, 6.29425048828125e-05, 0.004047393798828125, 0.00010097026824951172, 0.000568389892578125, 0.00022590160369873047, 0.0014753341674804688, 0.0004336833953857422, 0.0004177093505859375, 0.00021886825561523438, 2.372264862060547e-05, 0.00634002685546875, 0.024383544921875, 0.0032825469970703125, 0.016204833984375, 0.006862640380859375, 9.381771087646484e-05, 0.01419830322265625, 0.0016727447509765625, 0.00025963783264160156, 0.236572265625, 4.863739013671875e-05, 3.5762786865234375e-07, 0.00018894672393798828, 0.00014352798461914062, 0.0014257431030273438, 3.600120544433594e-05, 0.0011358261108398438, 6.580352783203125e-05, 0.0011186599731445312, 0.002162933349609375, 0.0010843276977539062, 0.00011527538299560547, 0.00014770030975341797, 3.0040740966796875e-05, 0.02410888671875, 0.0011186599731445312, 0.0013513565063476562, 0.0007557868957519531], "tokens": [275, 319, 477, 5117, 12137, 415, 7918, 438, 5535, 275, 319, 477, 5117, 25820, 415, 600, 26877, 1600, 1182, 786, 438, 2979, 31, 6158, 275, 569, 284, 562, 24156, 26, 959, 7918, 30, 1884, 2558, 10537, 45868, 30, 24156, 620, 827, 27, 301, 291, 2599, 26, 8438, 30, 827, 30, 45868, 293]}
{"line_number": 690, "line_type": "original", "code": "", "entropy": 3.177734375, "is_bug_line": false, "sus_score": 0.5415534973144531, "per_token_entropy": [3.177734375], "tokens": [203]}
{"line_number": 690, "line_type": "generated", "code": "\n    /**\n     * Gets the months field part of the period.\n     * \n     * @return the number of months in the period, zero if unsupported\n     */\n    public int getMonths() {\n        return getPeriodType().getIndexedField(this, Period", "entropy": 0.0199432373046875, "is_bug_line": false, "sus_score": 0.5415534973144531, "per_token_entropy": [0.2078857421875, 0.08197021484375, 0.007411956787109375, 4.3392181396484375e-05, 0.48681640625, 0.0006084442138671875, 0.0880126953125, 0.005901336669921875, 0.0016679763793945312, 7.581710815429688e-05, 5.507469177246094e-05, 0.0004107952117919922, 0.0167236328125, 0.00302886962890625, 2.396106719970703e-05, 0.041534423828125, 1.2636184692382812e-05, 0.0006570816040039062, 0.00048470497131347656, 0.0009059906005859375, 0.003326416015625, 0.0001590251922607422, 0.016754150390625, 0.0018644332885742188, 0.0004119873046875, 0.00036644935607910156, 0.0018892288208007812, 0.0176849365234375, 0.0001283884048461914, 0.0004286766052246094, 0.0033016204833984375, 0.00774383544921875, 0.009490966796875, 0.0018358230590820312, 0.0003476142883300781, 0.00014030933380126953, 0.00011241436004638672, 0.0002532005310058594, 0.00022339820861816406, 0.00911712646484375, 0.004390716552734375, 0.0031108856201171875, 0.00044655799865722656, 9.5367431640625e-07, 7.236003875732422e-05, 0.0011072158813476562, 0.00024044513702392578, 6.67572021484375e-06, 0.000278472900390625, 0.00044846534729003906, 9.834766387939453e-05, 0.0068206787109375], "tokens": [284, 1022, 275, 319, 7124, 322, 17723, 1600, 1742, 432, 322, 7918, 32, 275, 319, 5384, 319, 477, 601, 322, 1451, 432, 17723, 328, 322, 7918, 30, 5934, 415, 26877, 275, 569, 284, 562, 629, 622, 34042, 346, 301, 291, 442, 622, 7754, 620, 922, 371, 14775, 1176, 26, 578, 30, 24156]}
{"line_number": 575, "line_type": "original", "code": "     * Both <code>LocalDate</code> and <code>LocalTime</code> are contiguous.", "entropy": 0.857421875, "is_bug_line": false, "sus_score": 0.539677083492279, "per_token_entropy": [5.34375, 2.5390625, 9.671875, 1.0810546875, 0.0012884140014648438, 0.00010979175567626953, 0.08416748046875, 0.001071929931640625, 0.00030684471130371094, 0.0005064010620117188, 0.0030803680419921875, 0.005645751953125, 0.0020313262939453125, 4.279613494873047e-05, 0.0028095245361328125, 0.0005817413330078125, 0.0004699230194091797, -0.0, 0.0004906654357910156, 0.06854248046875, 0.033447265625, 0.023834228515625], "tokens": [262, 319, 23730, 333, 687, 48, 28726, 377, 687, 48, 461, 333, 687, 48, 3325, 1043, 377, 687, 48, 884, 47882, 32]}
{"line_number": 575, "line_type": "generated", "code": "\n     */\n    public Period(ReadableDuration duration, ReadableInstant endInstant) {\n        super(duration, endInstant, null);\n    }\n\n    /**\n     * Creates a period from the given duration and end point.\n     *\n     * @param duration ", "entropy": 0.00873565673828125, "is_bug_line": false, "sus_score": 0.539677083492279, "per_token_entropy": [0.09429931640625, 0.089111328125, 0.003520965576171875, 0.00434112548828125, 0.0010099411010742188, 1.3232231140136719e-05, 0.00011742115020751953, 0.045623779296875, 1.1563301086425781e-05, 2.4199485778808594e-05, 0.0009074211120605469, -0.0, 0.00010895729064941406, 2.7060508728027344e-05, 2.682209014892578e-05, 5.984306335449219e-05, 0.00021219253540039062, 0.0026340484619140625, 0.010528564453125, 0.00020313262939453125, 0.12347412109375, 0.00032019615173339844, 0.000293731689453125, 8.702278137207031e-06, 0.007434844970703125, 0.002361297607421875, 0.0002911090850830078, 0.005245208740234375, 3.361701965332031e-05, 0.00922393798828125, 0.0031986236572265625, 0.001377105712890625, 0.00022494792938232422, 0.00128936767578125, 3.886222839355469e-05, 0.0008945465087890625, 0.00028324127197265625, 0.002582550048828125, 0.0002951622009277344, 0.005268096923828125, 0.0003447532653808594, 0.0014886856079101562, 0.000217437744140625, 0.0023097991943359375, 0.01641845703125, 7.784366607666016e-05, 0.01471710205078125, 7.128715515136719e-05, 9.34600830078125e-05, 2.47955322265625e-05, 0.0010690689086914062, 0.0004837512969970703], "tokens": [275, 569, 284, 562, 24156, 26, 23422, 6196, 7459, 30, 4841, 444, 22183, 943, 22183, 27, 301, 291, 2599, 26, 6932, 30, 943, 22183, 30, 744, 293, 284, 320, 446, 1022, 275, 319, 9301, 312, 7918, 645, 322, 2702, 7459, 461, 943, 2260, 32, 275, 319, 275, 319, 477, 753, 7459, 225]}
{"line_number": 1628, "line_type": "original", "code": "            years = FieldUtils.safeAdd(years, months / 12);", "entropy": 1.578125, "is_bug_line": true, "sus_score": 0.5378894209861755, "per_token_entropy": [8.1015625, 6.33984375, 0.128662109375, 8.9375, 0.0010776519775390625, 0.0005469322204589844, 0.03948974609375, 1.8212890625, 0.004886627197265625, 0.09576416015625, 0.0029735565185546875, 1.158203125, 0.0172576904296875, 0.1658935546875, 4.935264587402344e-05, 0.000156402587890625, 0.01409149169921875], "tokens": [1468, 11274, 280, 5692, 2755, 32, 4770, 1103, 26, 24420, 30, 17723, 517, 225, 35, 36, 293]}
{"line_number": 1628, "line_type": "generated", "code": "\n    /**\n     * Returns a new instance with the specified amount of time added.\n     * <p>\n     * This instance is immutable and unaffected by this method call.\n     * <p>\n     * The specified amount is converted to milliseconds using the standard", "entropy": 0.37548828125, "is_bug_line": true, "sus_score": 0.5378894209861755, "per_token_entropy": [1.1240234375, 0.68310546875, 0.086669921875, 0.00013685226440429688, 2.12109375, 0.32080078125, 0.52197265625, 0.26416015625, 0.233154296875, 0.4814453125, 0.071533203125, 1.517578125, 0.6298828125, 1.1201171875, 0.1575927734375, 0.05560302734375, 0.0141143798828125, 0.0005116462707519531, 0.059478759765625, 0.0011577606201171875, 0.0007410049438476562, 0.0006623268127441406, 2.7179718017578125e-05, 0.51611328125, 1.220703125, 0.0003077983856201172, 0.00021350383758544922, 0.0002313852310180664, 0.322509765625, 0.0005521774291992188, 2.2649765014648438e-06, 0.0001138448715209961, 0.001728057861328125, 0.0003962516784667969, 0.0007205009460449219, 0.0008759498596191406, 0.00028228759765625, 0.60498046875, 0.0004076957702636719, 0.0014820098876953125, 0.0006117820739746094, 0.00014483928680419922, 0.43115234375, 2.55859375, 0.85009765625, 0.33935546875, 1.349609375, 0.202880859375, 0.1365966796875, 0.384765625, 0.126220703125, 1.0146484375], "tokens": [284, 1022, 275, 319, 3759, 312, 537, 1980, 623, 322, 3191, 5168, 432, 1133, 3640, 32, 275, 319, 333, 98, 48, 275, 319, 1348, 1980, 438, 26055, 461, 707, 31316, 810, 458, 1411, 1476, 32, 275, 319, 333, 98, 48, 275, 319, 886, 3191, 5168, 438, 12785, 372, 18574, 1471, 322, 6216]}
{"line_number": 896, "line_type": "original", "code": "        getPeriodType().setIndexedField(this, PeriodType.YEAR_INDEX, values, years);", "entropy": 0.60498046875, "is_bug_line": false, "sus_score": 0.5374842286109924, "per_token_entropy": [5.91015625, 4.60546875, 0.07373046875, 0.0002460479736328125, 0.0139923095703125, 0.04364013671875, 0.01251983642578125, 0.00027942657470703125, 0.01030731201171875, 0.041351318359375, 0.00020432472229003906, 0.0158538818359375, 0.000415802001953125, 0.01267242431640625, 2.365234375, 0.0008530616760253906, 0.0032672882080078125, 0.0023555755615234375, 0.10174560546875, 0.0010309219360351562, 0.07672119140625, 0.021331787109375], "tokens": [351, 622, 7754, 620, 922, 470, 14775, 1176, 26, 578, 30, 24156, 620, 32, 23164, 81, 9193, 30, 2078, 30, 11274, 293]}
{"line_number": 896, "line_type": "generated", "code": "\n    /**\n     * Returns a new period with the specified number of hours.\n     * <p>\n     * This period instance is immutable and unaffected by this method call.\n     *\n     * @param hours  the amount of hours to add, may be", "entropy": 0.04241943359375, "is_bug_line": false, "sus_score": 0.5374842286109924, "per_token_entropy": [1.0341796875, 0.81884765625, 0.1268310546875, 0.0002758502960205078, 0.0223236083984375, 0.0011072158813476562, 0.0006504058837890625, 0.01392364501953125, 0.0014219284057617188, 0.0008707046508789062, 0.0017709732055664062, 0.0049896240234375, 0.00022232532501220703, 0.09649658203125, 0.03179931640625, 0.0091705322265625, 0.00010943412780761719, 0.002506256103515625, 2.300739288330078e-05, 2.2530555725097656e-05, 0.0002727508544921875, 1.7523765563964844e-05, 0.0020160675048828125, 0.000858306884765625, 3.981590270996094e-05, 2.0265579223632812e-06, 2.4080276489257812e-05, 5.4836273193359375e-06, 1.537799835205078e-05, 1.704692840576172e-05, 1.0728836059570312e-05, 3.4570693969726562e-06, 1.3828277587890625e-05, 2.3603439331054688e-05, 9.953975677490234e-05, 0.0018129348754882812, 8.940696716308594e-05, 0.0240325927734375, 2.3603439331054688e-05, 0.00019359588623046875, 0.0005388259887695312, 0.0014123916625976562, 0.0005393028259277344, 2.86102294921875e-05, 0.0006532669067382812, 0.0001728534698486328, 0.0032958984375, 3.24249267578125e-05, 4.8041343688964844e-05, 0.000213623046875, 1.4543533325195312e-05, 0.00017189979553222656], "tokens": [284, 1022, 275, 319, 3759, 312, 537, 7918, 623, 322, 3191, 1451, 432, 11632, 32, 275, 319, 333, 98, 48, 275, 319, 1348, 7918, 1980, 438, 26055, 461, 707, 31316, 810, 458, 1411, 1476, 32, 275, 319, 275, 319, 477, 753, 11632, 225, 322, 5168, 432, 11632, 372, 1015, 30, 1631, 526]}
{"line_number": 541, "line_type": "original", "code": "     * Both <code>LocalDate</code> and <code>LocalTime</code> are contiguous.", "entropy": 0.943359375, "is_bug_line": false, "sus_score": 0.5340335965156555, "per_token_entropy": [4.86328125, 0.08935546875, 15.4609375, 0.2020263671875, 0.0052032470703125, 0.00026988983154296875, 0.0191497802734375, 0.0005745887756347656, 0.00014495849609375, 0.00018966197967529297, 0.00409698486328125, 0.01148223876953125, 0.00027680397033691406, 5.698204040527344e-05, 0.0005407333374023438, 0.0004055500030517578, 0.00016486644744873047, 0.0002894401550292969, 0.0003247261047363281, 0.047088623046875, 0.0186920166015625, 0.0242767333984375], "tokens": [262, 319, 23730, 333, 687, 48, 28726, 377, 687, 48, 461, 333, 687, 48, 3325, 1043, 377, 687, 48, 884, 47882, 32]}
{"line_number": 541, "line_type": "generated", "code": "\n     * @throws IllegalArgumentException if the partials are null or invalid\n     * @since 1.1\n     */\n    public Period(ReadablePartial start, ReadablePartial end, PeriodType type) {\n        super(start, end, type);\n    }", "entropy": 0.0205841064453125, "is_bug_line": false, "sus_score": 0.5340335965156555, "per_token_entropy": [0.043853759765625, 0.041259765625, 0.0035572052001953125, 0.19287109375, 0.001953125, 0.0003235340118408203, 0.007358551025390625, 0.004726409912109375, 0.00031185150146484375, 0.001819610595703125, 0.003734588623046875, 0.005519866943359375, 0.00350189208984375, 0.11260986328125, 0.301025390625, 0.0023288726806640625, 0.09112548828125, 6.67572021484375e-05, 0.02398681640625, 2.5510787963867188e-05, 0.05621337890625, 0.0166778564453125, 0.006130218505859375, 0.00855255126953125, 0.007251739501953125, 0.006061553955078125, 0.0007905960083007812, 0.0035610198974609375, 0.00095367431640625, 0.0001881122589111328, 5.626678466796875e-05, 0.0002741813659667969, -0.0, 8.344650268554688e-07, 0.00017559528350830078, 0.07635498046875, 0.00244140625, 3.2782554626464844e-05, 0.0034027099609375, 0.0001901388168334961, 0.00415802001953125, 0.006252288818359375, 0.003192901611328125, 0.00019490718841552734, 0.0007205009460449219, 0.00013303756713867188, 8.71419906616211e-05, 0.0005574226379394531, 0.0046844482421875, 0.003307342529296875, 0.01506805419921875, 0.0010662078857421875], "tokens": [275, 319, 477, 5117, 12137, 415, 322, 7360, 101, 884, 744, 556, 5535, 275, 319, 477, 8119, 225, 35, 32, 35, 275, 569, 284, 562, 24156, 26, 23422, 12221, 1477, 30, 4841, 444, 12221, 943, 30, 24156, 620, 827, 27, 301, 291, 2599, 26, 1366, 30, 943, 30, 827, 293, 284, 320]}
{"line_number": 564, "line_type": "original", "code": "", "entropy": 2.95703125, "is_bug_line": false, "sus_score": 0.533667266368866, "per_token_entropy": [2.95703125], "tokens": [203]}
{"line_number": 564, "line_type": "generated", "code": "\n    /**\n     * Creates a period from the given start point and the duration.\n     *\n     * @param startInstant  the interval start, null means now\n     * @param duration  the duration of the interval, null means zero-length\n     * @", "entropy": 0.032012939453125, "is_bug_line": false, "sus_score": 0.533667266368866, "per_token_entropy": [1.017578125, 0.3623046875, 0.01519012451171875, 0.0005741119384765625, 0.01267242431640625, 0.000247955322265625, 0.0027790069580078125, 0.0031185150146484375, 0.00931549072265625, 0.000514984130859375, 0.00351715087890625, 0.003444671630859375, 0.0006108283996582031, 0.0014400482177734375, 0.0010318756103515625, 0.0035114288330078125, 0.01557159423828125, 0.00016880035400390625, 0.044281005859375, 1.239776611328125e-05, 0.00013768672943115234, 9.09566879272461e-05, 0.0041961669921875, 0.044158935546875, 0.0005283355712890625, 0.0011987686157226562, 0.0005860328674316406, 4.863739013671875e-05, 0.0007429122924804688, 0.0008249282836914062, 3.814697265625e-05, 8.428096771240234e-05, 0.0069427490234375, 5.710124969482422e-05, 1.7404556274414062e-05, 1.2636184692382812e-05, 0.005207061767578125, 0.00522613525390625, 2.2292137145996094e-05, 0.00010764598846435547, 0.0005402565002441406, 1.0609626770019531e-05, 9.369850158691406e-05, 0.0010833740234375, 0.0027675628662109375, 4.291534423828125e-05, 0.0006060600280761719, 0.0014810562133789062, 1.3113021850585938e-05, 0.06304931640625, 0.02642822265625, 2.872943878173828e-05], "tokens": [284, 1022, 275, 319, 9301, 312, 7918, 645, 322, 2702, 1477, 2260, 461, 322, 7459, 32, 275, 319, 275, 319, 477, 753, 1477, 22183, 225, 322, 7898, 1477, 30, 744, 6058, 2464, 275, 319, 477, 753, 7459, 225, 322, 7459, 432, 322, 7898, 30, 744, 6058, 5934, 31, 1322, 275, 319, 477]}
{"line_number": 1625, "line_type": "original", "code": "        int years = getYears();", "entropy": 1.2421875, "is_bug_line": false, "sus_score": 0.5323203206062317, "per_token_entropy": [5.61328125, 2.23046875, 0.72216796875, 0.0232696533203125, 0.08721923828125, 0.001316070556640625, 0.020782470703125], "tokens": [351, 629, 11274, 280, 622, 33221, 473]}
{"line_number": 1625, "line_type": "generated", "code": "\n    /**\n     * Returns a new instance with each element in this period multiplied by the specified scalar.\n     * <p>\n     * This method operates in the same way as the \"multiply\" method on the\n     * built in {@link Period}", "entropy": 0.476318359375, "is_bug_line": false, "sus_score": 0.5323203206062317, "per_token_entropy": [0.8232421875, 0.38134765625, 0.0531005859375, 6.937980651855469e-05, 2.02734375, 0.31591796875, 0.51708984375, 0.255126953125, 0.216796875, 1.494140625, 0.5673828125, 0.25, 0.3310546875, 0.055694580078125, 0.70751953125, 0.000732421875, 0.289794921875, 0.4482421875, 1.767578125, 0.029571533203125, 0.0428466796875, 0.0035400390625, 0.0009164810180664062, 0.1136474609375, 0.0026073455810546875, 0.0018167495727539062, 0.0008525848388671875, 2.086162567138672e-05, 0.49658203125, 0.048065185546875, 0.76123046875, 2.384185791015625e-06, 0.04193115234375, 0.3046875, 0.2464599609375, 0.0120086669921875, 0.0034465789794921875, 1.2119140625, 2.044921875, 1.22265625, 0.0565185546875, 0.1502685546875, 0.2216796875, 1.2646484375, 1.841796875, 1.3113021850585938e-05, 1.751953125, 0.445556640625, 0.7373046875, 0.05328369140625, 0.99658203125, 0.16162109375], "tokens": [284, 1022, 275, 319, 3759, 312, 537, 1980, 623, 2504, 1994, 328, 458, 7918, 12044, 3032, 810, 322, 3191, 13145, 32, 275, 319, 333, 98, 48, 275, 319, 1348, 1411, 4331, 1196, 328, 322, 2432, 3352, 619, 322, 313, 20123, 20, 1411, 544, 322, 275, 319, 6895, 328, 3088, 1204, 24156, 111]}
{"line_number": 1624, "line_type": "original", "code": "        Period result = new Period(millis, type, ISOChronology.getInstanceUTC());", "entropy": 1.4326171875, "is_bug_line": false, "sus_score": 0.5305978655815125, "per_token_entropy": [5.5859375, 4.93359375, 1.3173828125, 0.0635986328125, 0.96875, 0.0400390625, 0.1446533203125, 2.25, 0.482421875, 1.376953125, 3.345703125, 5.3671875, 0.779296875, 0.0174560546875, 6.556510925292969e-06, 0.0019741058349609375, 0.005481719970703125, 0.49462890625, 0.037109375], "tokens": [351, 24156, 1056, 280, 537, 24156, 26, 36916, 30, 827, 30, 19687, 828, 2558, 10537, 32, 7426, 15689, 1035]}
{"line_number": 1624, "line_type": "generated", "code": "\n    /**\n     * Normalizes this period using the specified rules.\n     * <p>\n     * This method allows you to normalize a period.\n     * However to achieve this it makes the assumption that all years are\n     * 12 months, all weeks", "entropy": 0.1588134765625, "is_bug_line": false, "sus_score": 0.5305978655815125, "per_token_entropy": [0.63427734375, 0.385498046875, 0.04901123046875, 6.258487701416016e-05, 1.908203125, 0.0026092529296875, 0.01186370849609375, 0.02264404296875, 0.1676025390625, 1.240234375, 0.62646484375, 0.5390625, 0.408203125, 0.0186004638671875, 0.00019919872283935547, 0.149658203125, 0.0001842975616455078, 0.00018203258514404297, 0.00021326541900634766, 1.4901161193847656e-05, 0.1575927734375, 0.006519317626953125, 0.032135009765625, 0.0023899078369140625, 0.0006279945373535156, 0.037078857421875, 0.003192901611328125, 0.0008144378662109375, 0.5966796875, 0.245849609375, 0.00012540817260742188, 0.302490234375, 0.011810302734375, 0.0011234283447265625, 0.000118255615234375, 0.01554107666015625, 0.0906982421875, 0.0186614990234375, 0.004909515380859375, 0.006256103515625, 0.2452392578125, 0.032440185546875, 0.02325439453125, 0.01491546630859375, 1.1920928955078125e-05, 0.07379150390625, 0.09869384765625, 0.01531219482421875, 0.01090240478515625, 0.01312255859375, 0.01039886474609375, 0.020050048828125], "tokens": [284, 1022, 275, 319, 13574, 5052, 458, 7918, 1471, 322, 3191, 7019, 32, 275, 319, 333, 98, 48, 275, 319, 1348, 1411, 6972, 844, 372, 13316, 312, 7918, 32, 275, 319, 8746, 372, 22209, 458, 561, 7410, 322, 33444, 688, 1169, 11274, 884, 275, 319, 225, 35, 36, 17723, 30, 1169, 22599]}
{"line_number": 1631, "line_type": "original", "code": "                result = result.withYears(years);", "entropy": 1.4052734375, "is_bug_line": true, "sus_score": 0.5295332670211792, "per_token_entropy": [10.140625, 3.568359375, 0.0196685791015625, 0.0484619140625, 0.01439666748046875, 0.031524658203125, 0.188232421875, 0.0201416015625, 0.01396942138671875, 0.01165008544921875], "tokens": [2071, 1056, 280, 1056, 32, 1793, 33221, 26, 24420, 293]}
{"line_number": 1631, "line_type": "generated", "code": "\n\n    /**\n     * Normalizes this period using standard rules, assuming a 12 month year,\n     * 7 day week, 24 hour day, 60 minute hour and 60 second minute.\n     * <p>\n     *", "entropy": 0.1588134765625, "is_bug_line": true, "sus_score": 0.5295332670211792, "per_token_entropy": [1.330078125, 1.1318359375, 0.048004150390625, 6.651878356933594e-05, 3.1640625, 0.005008697509765625, 0.0243682861328125, 0.035980224609375, 0.262451171875, 0.67431640625, 0.0213775634765625, 0.12310791015625, 0.06524658203125, 0.0300140380859375, 0.0675048828125, 0.43896484375, 0.0237274169921875, 0.0003752708435058594, 0.01467132568359375, 0.04437255859375, 0.005889892578125, 0.0004513263702392578, 0.0240631103515625, 0.024749755859375, 0.0005660057067871094, 0.00041174888610839844, 0.01259613037109375, 0.0024547576904296875, 0.006961822509765625, 0.0006246566772460938, 0.00032782554626464844, 6.115436553955078e-05, 0.00685882568359375, 0.005126953125, 0.0004725456237792969, 8.344650268554688e-06, 0.00014674663543701172, 0.00023090839385986328, 0.01409912109375, 0.0020236968994140625, 9.179115295410156e-05, 0.00020182132720947266, 0.0002244710922241211, 0.0005273818969726562, 0.5498046875, 0.0204620361328125, 0.0011587142944335938, 0.069091796875, 0.00012993812561035156, 6.699562072753906e-05, 0.0002903938293457031, 2.372264862060547e-05], "tokens": [446, 1022, 275, 319, 13574, 5052, 458, 7918, 1471, 6216, 7019, 30, 26933, 312, 225, 35, 36, 6811, 4947, 30, 275, 319, 225, 41, 5808, 8209, 30, 225, 36, 38, 12021, 5808, 30, 225, 40, 34, 16044, 12021, 461, 225, 40, 34, 3100, 16044, 32, 275, 319, 333, 98, 48, 275, 319]}
{"line_number": 1617, "line_type": "original", "code": "        type = DateTimeUtils.getPeriodType(type);", "entropy": 1.3984375, "is_bug_line": false, "sus_score": 0.5294609069824219, "per_token_entropy": [5.0234375, 8.65625, 0.0589599609375, 1.984375, 0.003810882568359375, 0.003536224365234375, 0.128662109375, 0.318359375, 0.00012087821960449219, 0.045166015625, 0.302001953125, 0.25732421875], "tokens": [351, 827, 280, 6666, 2755, 32, 371, 7754, 620, 26, 681, 293]}
{"line_number": 1617, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5294609069824219, "per_token_entropy": [], "tokens": []}
{"line_number": 535, "line_type": "original", "code": "     * two <code>LocalDate</code> objects, or two <code>LocalTime</code> objects,", "entropy": 1.0126953125, "is_bug_line": false, "sus_score": 0.5221607089042664, "per_token_entropy": [4.578125, 0.09283447265625, 14.453125, 1.38671875, 0.0183868408203125, 0.0005102157592773438, 0.6328125, 0.002178192138671875, 0.00023877620697021484, 0.0106658935546875, 0.223876953125, 1.1923828125, 0.41259765625, 0.1934814453125, 0.25439453125, 0.0006318092346191406, 0.00018227100372314453, 0.006378173828125, 0.0033512115478515625, 0.0010089874267578125, 3.075599670410156e-05, 0.00363922119140625, 0.0887451171875, 0.75], "tokens": [262, 319, 3134, 333, 687, 48, 28726, 377, 687, 48, 4684, 30, 556, 3134, 333, 687, 48, 3325, 1043, 377, 687, 48, 4684, 30]}
{"line_number": 535, "line_type": "generated", "code": "\n     * An alternative way of constructing a Period from two Partials\n     * is {@link #fieldDifference(ReadablePartial, ReadablePartial)}.\n     * That method handles all kinds of partials.\n     *\n     * @param start  the start of the", "entropy": 0.0318603515625, "is_bug_line": false, "sus_score": 0.5221607089042664, "per_token_entropy": [0.28515625, 0.0006136894226074219, 1.0498046875, 0.0024051666259765625, 0.0021209716796875, 0.001941680908203125, 0.002773284912109375, 0.0009059906005859375, 0.0037403106689453125, 0.004337310791015625, 0.0100860595703125, 0.003215789794921875, 0.0014429092407226562, 0.09881591796875, 3.910064697265625e-05, 0.00214385986328125, 0.0037212371826171875, 6.008148193359375e-05, 0.01041412353515625, 0.019775390625, 0.0001024007797241211, 0.0016832351684570312, 0.0012083053588867188, 0.0003261566162109375, 0.0003476142883300781, 0.0018167495727539062, -0.0, 1.1086463928222656e-05, 0.0228424072265625, 0.0127410888671875, 2.3484230041503906e-05, 0.026519775390625, 0.00037097930908203125, 0.0009617805480957031, 0.0015087127685546875, 0.0003662109375, 9.417533874511719e-06, 0.01000213623046875, 0.00019752979278564453, 0.0084991455078125, 0.018585205078125, 3.5762786865234375e-05, 0.033050537109375, 4.220008850097656e-05, 0.001003265380859375, 0.000270843505859375, 0.00360107421875, 0.003849029541015625, 0.0012521743774414062, 0.0017843246459960938, 0.0010528564453125, 0.00010597705841064453], "tokens": [275, 319, 2244, 15529, 3352, 432, 44654, 312, 24156, 645, 3134, 14584, 101, 275, 319, 438, 3088, 1204, 588, 1495, 24443, 26, 23422, 12221, 30, 4841, 444, 12221, 31842, 275, 319, 8053, 1411, 13650, 1169, 26682, 432, 7360, 101, 32, 275, 319, 275, 319, 477, 753, 1477, 225, 322, 1477, 432, 322]}
{"line_number": 737, "line_type": "original", "code": "        return getPeriodType().getIndexedField(this, PeriodType.YEAR_INDEX);", "entropy": 0.89306640625, "is_bug_line": false, "sus_score": 0.5216701030731201, "per_token_entropy": [6.7578125, 1.466796875, 0.09503173828125, 0.037322998046875, 0.0003044605255126953, 0.0022602081298828125, 0.01519012451171875, 0.006931304931640625, 0.0004420280456542969, 0.0045928955078125, 0.007366180419921875, 0.0006237030029296875, 0.0310516357421875, 0.00026917457580566406, 0.00510406494140625, 8.484375, 0.004161834716796875, 0.0129852294921875, 0.035491943359375], "tokens": [351, 442, 622, 7754, 620, 922, 371, 14775, 1176, 26, 578, 30, 24156, 620, 32, 23164, 81, 9193, 293]}
{"line_number": 737, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Gets the seconds field part of the period.\n     * \n     * @return the number of seconds in the period, zero if unsupported\n     */\n    public int getSeconds() {\n        return getPeriodType().getIndexedField(this", "entropy": 0.05706787109375, "is_bug_line": false, "sus_score": 0.5216701030731201, "per_token_entropy": [1.0888671875, 1.3388671875, 0.07220458984375, 0.1219482421875, 0.1953125, 7.450580596923828e-05, 0.0242156982421875, 8.046627044677734e-05, 0.019989013671875, 0.0017719268798828125, 0.00028252601623535156, 6.0677528381347656e-05, 4.851818084716797e-05, 0.000518798828125, 0.0034503936767578125, 0.002117156982421875, 2.4437904357910156e-05, 0.01462554931640625, 5.0067901611328125e-06, 0.00014150142669677734, 0.000331878662109375, 6.496906280517578e-05, 0.00015056133270263672, 5.91278076171875e-05, 0.00447845458984375, 0.00046253204345703125, 3.337860107421875e-05, 0.00022161006927490234, 0.0009751319885253906, 0.002132415771484375, 9.047985076904297e-05, 0.0002218484878540039, 0.0020389556884765625, 0.003387451171875, 0.01128387451171875, 0.0006084442138671875, 0.001094818115234375, 1.6689300537109375e-06, 6.759166717529297e-05, 1.7642974853515625e-05, 0.0001348257064819336, 0.048065185546875, 0.003063201904296875, 0.0011491775512695312, 0.000194549560546875, 3.6954879760742188e-06, 1.895427703857422e-05, 0.0002760887145996094, 0.0005426406860351562, 1.33514404296875e-05, 2.5033950805664062e-05, 0.0001310110092163086], "tokens": [284, 320, 446, 1022, 275, 319, 7124, 322, 6791, 1600, 1742, 432, 322, 7918, 32, 275, 319, 5384, 319, 477, 601, 322, 1451, 432, 6791, 328, 322, 7918, 30, 5934, 415, 26877, 275, 569, 284, 562, 629, 622, 9023, 346, 301, 291, 442, 622, 7754, 620, 922, 371, 14775, 1176, 26, 578]}
{"line_number": 746, "line_type": "original", "code": "        return getPeriodType().getIndexedField(this, PeriodType.MONTH_INDEX);", "entropy": 0.80517578125, "is_bug_line": false, "sus_score": 0.5213563442230225, "per_token_entropy": [6.75390625, 1.966796875, 0.1376953125, 0.0221099853515625, 0.00043201446533203125, 0.0017938613891601562, 0.01288604736328125, 0.0059814453125, 0.0010776519775390625, 0.0033740997314453125, 0.0094146728515625, 0.0006113052368164062, 0.0271148681640625, 0.0005655288696289062, 0.006748199462890625, 6.3203125, 0.0046539306640625, 0.0028896331787109375, 0.0201416015625], "tokens": [351, 442, 622, 7754, 620, 922, 371, 14775, 1176, 26, 578, 30, 24156, 620, 32, 22846, 81, 9193, 293]}
{"line_number": 746, "line_type": "generated", "code": "\n    /**\n     * Gets the millis field part of the period.\n     * \n     * @return the number of millis in the period, zero if unsupported\n     */\n    public int getMillis() {\n        return getPeriodType().getIndexedField(this, Period", "entropy": 0.05841064453125, "is_bug_line": false, "sus_score": 0.5213563442230225, "per_token_entropy": [1.2705078125, 0.79736328125, 0.1080322265625, 0.0002932548522949219, 0.2127685546875, 0.0025424957275390625, 0.06951904296875, 0.00826263427734375, 0.0032901763916015625, 0.0003135204315185547, 0.0004489421844482422, 0.004642486572265625, 0.00698089599609375, 0.0093536376953125, 0.00024437904357910156, 0.038848876953125, 1.3828277587890625e-05, 0.0007472038269042969, 0.000911712646484375, 0.0007319450378417969, 0.0021305084228515625, 0.00020706653594970703, 0.30322265625, 0.005924224853515625, 6.42538070678711e-05, 0.0008664131164550781, 0.003337860107421875, 0.0032825469970703125, 0.00019884109497070312, 0.0005106925964355469, 0.00505828857421875, 0.00799560546875, 0.02740478515625, 0.004863739013671875, 0.0124359130859375, 5.984306335449219e-05, 0.0001195669174194336, 0.0026416778564453125, 0.000873565673828125, 0.0953369140625, 0.0081024169921875, 0.00321197509765625, 0.0008840560913085938, 2.193450927734375e-05, 5.900859832763672e-05, 0.0003173351287841797, 0.0004684925079345703, 0.00017964839935302734, 0.0002372264862060547, 0.00046825408935546875, 0.0002428293228149414, 0.01006317138671875], "tokens": [284, 1022, 275, 319, 7124, 322, 42302, 1600, 1742, 432, 322, 7918, 32, 275, 319, 5384, 319, 477, 601, 322, 1451, 432, 42302, 328, 322, 7918, 30, 5934, 415, 26877, 275, 569, 284, 562, 629, 622, 10906, 346, 301, 291, 442, 622, 7754, 620, 922, 371, 14775, 1176, 26, 578, 30, 24156]}
{"line_number": 852, "line_type": "original", "code": "     */", "entropy": 4.90625, "is_bug_line": false, "sus_score": 0.5209153890609741, "per_token_entropy": [5.6484375, 4.16796875], "tokens": [262, 569]}
{"line_number": 852, "line_type": "generated", "code": "\n     * <p>\n     * This period instance is immutable and unaffected by this method call.\n     *\n     * @param months  the amount of months to add, may be negative\n     * @return the new period with the increased months\n     * @", "entropy": 0.01221466064453125, "is_bug_line": false, "sus_score": 0.5209153890609741, "per_token_entropy": [0.13525390625, 0.0038356781005859375, 0.02587890625, 0.0005702972412109375, 4.0531158447265625e-05, 0.01302337646484375, 1.0728836059570312e-05, 0.018096923828125, 0.002620697021484375, 9.274482727050781e-05, 4.172325134277344e-06, 7.164478302001953e-05, 7.987022399902344e-06, 5.9723854064941406e-05, 1.9788742065429688e-05, 1.9073486328125e-06, 1.3947486877441406e-05, 9.953975677490234e-05, 7.927417755126953e-05, 0.0003025531768798828, 0.028045654296875, 0.00024139881134033203, 0.1419677734375, 4.00543212890625e-05, 0.0005025863647460938, 0.0016536712646484375, 0.0020961761474609375, 0.00237274169921875, 0.00010645389556884766, 0.00429534912109375, 0.00010788440704345703, 0.03070068359375, 0.0003914833068847656, 0.00045871734619140625, 0.0009441375732421875, 0.0003724098205566406, 0.000110626220703125, 4.6253204345703125e-05, 0.00983428955078125, 2.7298927307128906e-05, 2.2172927856445312e-05, 0.0008969306945800781, 0.00018203258514404297, 7.11679458618164e-05, 0.0006575584411621094, 0.003253936767578125, 0.00957489013671875, 0.0013170242309570312, 0.004726409912109375, 0.187744140625, 0.0022983551025390625, 7.653236389160156e-05], "tokens": [275, 319, 333, 98, 48, 275, 319, 1348, 7918, 1980, 438, 26055, 461, 707, 31316, 810, 458, 1411, 1476, 32, 275, 319, 275, 319, 477, 753, 17723, 225, 322, 5168, 432, 17723, 372, 1015, 30, 1631, 526, 11003, 275, 319, 477, 601, 322, 537, 7918, 623, 322, 28952, 17723, 275, 319, 477]}
{"line_number": 755, "line_type": "original", "code": "        return getPeriodType().getIndexedField(this, PeriodType.WEEK_INDEX);", "entropy": 0.58740234375, "is_bug_line": false, "sus_score": 0.5205196142196655, "per_token_entropy": [6.21484375, 2.154296875, 0.76806640625, 0.12274169921875, 0.0009617805480957031, 0.01428985595703125, 0.11431884765625, 0.02703857421875, 0.004238128662109375, 0.0116119384765625, 0.0182952880859375, 0.0018930435180664062, 0.1693115234375, 0.00047469139099121094, 0.03216552734375, 1.3984375, 0.00716400146484375, 0.07452392578125, 0.032379150390625], "tokens": [351, 442, 622, 7754, 620, 922, 371, 14775, 1176, 26, 578, 30, 24156, 620, 32, 39636, 81, 9193, 293]}
{"line_number": 755, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5205196142196655, "per_token_entropy": [], "tokens": []}
{"line_number": 783, "line_type": "original", "code": "        return getPeriodType().getIndexedField(this, PeriodType.MINUTE_INDEX);", "entropy": 1.51171875, "is_bug_line": false, "sus_score": 0.5205130577087402, "per_token_entropy": [4.34375, 0.95556640625, 4.94140625, 0.5732421875, 0.00722503662109375, 0.01496124267578125, 5.203125, 4.59375, 0.053314208984375, 0.10186767578125, 0.266357421875, 0.0079803466796875, 0.6181640625, 0.0005588531494140625, 0.033782958984375, 6.5234375, 0.0005164146423339844, 0.0007634162902832031, 0.47119140625], "tokens": [351, 442, 622, 7754, 620, 922, 371, 14775, 1176, 26, 578, 30, 24156, 620, 32, 47229, 81, 9193, 293]}
{"line_number": 783, "line_type": "generated", "code": "\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Adds a number of years to the specified period.\n     * <p>\n     * This period instance is immutable and unaffected by this method call.\n     * \n     * @param years  the amount of years to", "entropy": 0.246337890625, "is_bug_line": false, "sus_score": 0.5205130577087402, "per_token_entropy": [0.92919921875, 1.595703125, 0.1634521484375, 0.78759765625, 0.028228759765625, 0.0340576171875, 0.048126220703125, 0.00847625732421875, 2.777576446533203e-05, 1.9091796875, 0.8359375, 1.2529296875, 0.0013256072998046875, 0.82275390625, 0.0631103515625, 0.2529296875, 0.17822265625, 0.47119140625, 1.203125, 0.07867431640625, 0.00021457672119140625, 0.209716796875, 0.0004897117614746094, 0.0004239082336425781, 0.0004534721374511719, 1.9550323486328125e-05, 0.1324462890625, 0.5244140625, 0.0120849609375, 0.0015058517456054688, 0.0004525184631347656, 0.00013816356658935547, 0.00412750244140625, 0.00015604496002197266, 0.000885009765625, 7.891654968261719e-05, 0.0001971721649169922, 0.0004813671112060547, 0.0021839141845703125, 0.002155303955078125, 0.00010704994201660156, 0.1754150390625, 2.0742416381835938e-05, 0.0002868175506591797, 0.000797271728515625, 0.006771087646484375, 0.0277557373046875, 0.026611328125, 0.98583984375, 0.01544189453125, 0.0016193389892578125, 0.01183319091796875], "tokens": [284, 320, 446, 434, 42510, 284, 1022, 275, 319, 15450, 312, 1451, 432, 11274, 372, 322, 3191, 7918, 32, 275, 319, 333, 98, 48, 275, 319, 1348, 7918, 1980, 438, 26055, 461, 707, 31316, 810, 458, 1411, 1476, 32, 275, 319, 5384, 319, 477, 753, 11274, 225, 322, 5168, 432, 11274, 372]}
{"line_number": 774, "line_type": "original", "code": "        return getPeriodType().getIndexedField(this, PeriodType.HOUR_INDEX);", "entropy": 0.8359375, "is_bug_line": false, "sus_score": 0.5205115675926208, "per_token_entropy": [4.9375, 2.419921875, 2.857421875, 0.67431640625, 0.006988525390625, 0.03558349609375, 1.5771484375, 0.23779296875, 0.041290283203125, 0.2086181640625, 0.043243408203125, 0.00165557861328125, 0.61865234375, 0.000759124755859375, 0.0928955078125, 2.06640625, 0.0014410018920898438, 0.0003268718719482422, 0.05780029296875], "tokens": [351, 442, 622, 7754, 620, 922, 371, 14775, 1176, 26, 578, 30, 24156, 620, 32, 30540, 81, 9193, 293]}
{"line_number": 774, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Creates a new Period instance with the specified amount added to each\n     * field.\n     * <p>\n     * This period instance is immutable and unaffected by this method call.\n     * \n     * @param years  the amount", "entropy": 0.2393798828125, "is_bug_line": false, "sus_score": 0.5205115675926208, "per_token_entropy": [1.3642578125, 2.068359375, 0.15625, 0.73828125, 0.275634765625, 0.00011515617370605469, 0.74609375, 0.00970458984375, 0.0114593505859375, 0.0960693359375, 0.026275634765625, 0.09161376953125, 0.224853515625, 0.464111328125, 1.2109375, 0.275634765625, 0.59033203125, 0.62939453125, 0.87353515625, 2.6941299438476562e-05, 0.3818359375, 0.9990234375, 0.1287841796875, 0.0002161264419555664, 0.04595947265625, 0.0015897750854492188, 0.0002340078353881836, 0.00037932395935058594, 3.647804260253906e-05, 0.2249755859375, 0.049407958984375, 0.005523681640625, 0.0009775161743164062, 2.956390380859375e-05, 9.763240814208984e-05, 0.0014257431030273438, 0.0001856088638305664, 8.45193862915039e-05, 8.33272933959961e-05, 5.626678466796875e-05, 0.00015592575073242188, 0.002544403076171875, 0.002033233642578125, 0.00070953369140625, 0.19873046875, 2.7298927307128906e-05, 0.0011377334594726562, 0.005466461181640625, 0.0189666748046875, 0.02850341796875, 0.2210693359375, 0.269775390625], "tokens": [284, 320, 446, 1022, 275, 319, 9301, 312, 537, 24156, 1980, 623, 322, 3191, 5168, 3640, 372, 2504, 275, 319, 1600, 32, 275, 319, 333, 98, 48, 275, 319, 1348, 7918, 1980, 438, 26055, 461, 707, 31316, 810, 458, 1411, 1476, 32, 275, 319, 5384, 319, 477, 753, 11274, 225, 322, 5168]}
{"line_number": 801, "line_type": "original", "code": "        return getPeriodType().getIndexedField(this, PeriodType.MILLI_INDEX);", "entropy": 1.4189453125, "is_bug_line": false, "sus_score": 0.5205107927322388, "per_token_entropy": [2.396484375, 2.609375, 4.3359375, 0.52197265625, 0.0255889892578125, 0.045196533203125, 4.10546875, 3.318359375, 0.047943115234375, 0.0684814453125, 0.223388671875, 0.0116424560546875, 2.798828125, 0.0018711090087890625, 0.07415771484375, 5.29296875, 0.6171875, 0.287109375, 0.1776123046875], "tokens": [351, 442, 622, 7754, 620, 922, 371, 14775, 1176, 26, 578, 30, 24156, 620, 32, 32206, 81, 9193, 293]}
{"line_number": 801, "line_type": "generated", "code": "\n     * @throws IllegalArgumentException if the field is null or unsupported\n     */\n    public Period withField(DurationFieldType field, int value) {\n        if (field == null) {\n            throw new IllegalArgumentException(\"Field must not be null\");\n        }\n        if (!", "entropy": 0.145263671875, "is_bug_line": false, "sus_score": 0.5205107927322388, "per_token_entropy": [0.72021484375, 0.640625, 0.0030765533447265625, 0.00911712646484375, 0.038848876953125, 0.0005812644958496094, 0.043853759765625, 0.0023040771484375, 0.4228515625, 0.04150390625, 0.2003173828125, 0.072509765625, 0.1341552734375, 0.40771484375, 0.01299285888671875, 0.06707763671875, 0.0748291015625, 0.0009908676147460938, 0.01421356201171875, 0.0294647216796875, 0.69970703125, 0.2352294921875, 0.001220703125, 0.00020015239715576172, 0.000583648681640625, 0.0002532005310058594, 0.001270294189453125, 0.01390838623046875, 0.052398681640625, 0.9873046875, 0.0145111083984375, 0.0263671875, 0.02349853515625, 0.00015914440155029297, 0.0074615478515625, 0.00019121170043945312, 0.0023193359375, 0.0135040283203125, 0.0003139972686767578, 0.0033168792724609375, 0.002742767333984375, 0.029571533203125, 0.0005311965942382812, 0.0003235340118408203, 6.0677528381347656e-05, 0.01039886474609375, 0.00893402099609375, 0.03643798828125, 0.0006895065307617188, 0.068115234375, 1.0927734375, 1.2802734375], "tokens": [275, 319, 477, 5117, 12137, 415, 322, 1600, 438, 744, 556, 26877, 275, 569, 284, 562, 24156, 623, 1176, 26, 6196, 19204, 1600, 30, 629, 786, 27, 301, 291, 415, 308, 1495, 610, 744, 27, 301, 324, 1422, 537, 12137, 440, 1176, 2298, 646, 526, 744, 724, 291, 320, 291, 415, 1429]}
{"line_number": 764, "line_type": "original", "code": "        return getPeriodType().getIndexedField(this, PeriodType.DAY_INDEX);", "entropy": 1.2900390625, "is_bug_line": false, "sus_score": 0.5205100774765015, "per_token_entropy": [3.015625, 2.849609375, 3.25, 0.343017578125, 0.0036792755126953125, 0.023773193359375, 7.01953125, 4.71875, 0.03460693359375, 0.056549072265625, 0.061248779296875, 0.0035419464111328125, 0.1612548828125, 0.0007009506225585938, 0.00980377197265625, 2.693359375, 0.0007853507995605469, 0.2232666015625, 0.0455322265625], "tokens": [351, 442, 622, 7754, 620, 922, 371, 14775, 1176, 26, 578, 30, 24156, 620, 32, 14318, 81, 9193, 293]}
{"line_number": 764, "line_type": "generated", "code": "\n     */\n    public Period withPeriodType(PeriodType type) {\n        return new Period(getPeriodType().validate(this, type), type);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Creates a new Period instance with the specified years added.\n    ", "entropy": 0.2529296875, "is_bug_line": false, "sus_score": 0.5205100774765015, "per_token_entropy": [0.68603515625, 0.0814208984375, 0.00787353515625, 0.10638427734375, 0.25634765625, 0.1998291015625, 0.005939483642578125, 0.00011086463928222656, 0.0005941390991210938, 0.00507354736328125, 4.887580871582031e-06, 0.00010061264038085938, 0.0002846717834472656, 0.005523681640625, 0.118408203125, 0.7900390625, 0.7646484375, 0.0198516845703125, 0.01061248779296875, 0.7353515625, 0.77685546875, 0.007244110107421875, 0.007659912109375, 1.68359375, 1.103515625, 0.54248046875, 0.473388671875, 0.07421875, 0.144775390625, 0.037109375, 0.01000213623046875, 0.043365478515625, 0.00012254714965820312, 0.266357421875, 0.427001953125, 0.033050537109375, 0.0179443359375, 0.0308685302734375, 0.005237579345703125, 3.802776336669922e-05, 1.6015625, 0.00984954833984375, 0.00872802734375, 0.1832275390625, 0.04779052734375, 0.143310546875, 0.1982421875, 0.16455078125, 0.94482421875, 0.25048828125, 0.10955810546875, 0.010101318359375], "tokens": [275, 569, 284, 562, 24156, 623, 7754, 620, 26, 7754, 620, 827, 27, 301, 291, 442, 537, 24156, 26, 371, 7754, 620, 922, 4635, 26, 578, 30, 827, 471, 827, 293, 284, 320, 446, 434, 42510, 284, 1022, 275, 319, 9301, 312, 537, 24156, 1980, 623, 322, 3191, 11274, 3640, 32, 275]}
{"line_number": 792, "line_type": "original", "code": "        return getPeriodType().getIndexedField(this, PeriodType.SECOND_INDEX);", "entropy": 0.75830078125, "is_bug_line": false, "sus_score": 0.5202807188034058, "per_token_entropy": [5.34375, 2.404296875, 2.654296875, 0.75341796875, 0.01007080078125, 0.029571533203125, 1.59375, 0.143310546875, 0.01285552978515625, 0.039398193359375, 0.056671142578125, 0.0022983551025390625, 0.35107421875, 0.0010557174682617188, 0.048095703125, 0.8623046875, 0.0001919269561767578, 0.0015239715576171875, 0.0970458984375], "tokens": [351, 442, 622, 7754, 620, 922, 371, 14775, 1176, 26, 578, 30, 24156, 620, 32, 23790, 81, 9193, 293]}
{"line_number": 792, "line_type": "generated", "code": "\n\n    /**\n     * Creates a new Period instance with the specified field set.\n     * <p>\n     * This period instance is immutable and unaffected by this method call.\n     * \n     * @param field  the field to set, not null\n     *", "entropy": 0.14892578125, "is_bug_line": false, "sus_score": 0.5202807188034058, "per_token_entropy": [1.255859375, 0.53955078125, 0.0285186767578125, 4.076957702636719e-05, 0.49462890625, 0.0068817138671875, 0.00356292724609375, 0.059600830078125, 0.0194091796875, 0.09124755859375, 0.07647705078125, 0.07257080078125, 0.92919921875, 0.89892578125, 0.98388671875, 0.0065155029296875, 0.00011110305786132812, 0.022857666015625, 0.0005373954772949219, 0.00010764598846435547, 0.00020003318786621094, 1.7642974853515625e-05, 0.60009765625, 0.0173797607421875, 0.0012111663818359375, 0.0001112222671508789, 2.1696090698242188e-05, 0.00011646747589111328, 0.00023651123046875, 0.0001817941665649414, 0.0001176595687866211, 3.24249267578125e-05, 0.00019419193267822266, 5.352497100830078e-05, 0.00286865234375, 0.0017032623291015625, 0.0002980232238769531, 0.257080078125, 2.1576881408691406e-05, 0.0005426406860351562, 0.004856109619140625, 0.79443359375, 0.07952880859375, 0.0158843994140625, 0.041656494140625, 0.15185546875, 0.011810302734375, 0.2247314453125, 0.035980224609375, 0.0009183883666992188, 0.0106353759765625, 3.9458274841308594e-05], "tokens": [446, 1022, 275, 319, 9301, 312, 537, 24156, 1980, 623, 322, 3191, 1600, 739, 32, 275, 319, 333, 98, 48, 275, 319, 1348, 7918, 1980, 438, 26055, 461, 707, 31316, 810, 458, 1411, 1476, 32, 275, 319, 5384, 319, 477, 753, 1600, 225, 322, 1600, 372, 739, 30, 646, 744, 275, 319]}
