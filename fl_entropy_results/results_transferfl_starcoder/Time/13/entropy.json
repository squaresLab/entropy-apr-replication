{"line_number": 1140, "line_type": "original", "code": "                int dp = (int) (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND);", "entropy": 0.74560546875, "is_bug_line": false, "sus_score": 0.7134885787963867, "per_token_entropy": [5.73828125, 6.16015625, 3.76171875, 0.318603515625, 1.5107421875, 1.6953125, 0.01318359375, 0.2939453125, 0.1488037109375, 0.0011911392211914062, 0.003833770751953125, 0.00939178466796875, 0.355224609375, 0.04779052734375, 0.007747650146484375, 0.007781982421875, 0.044830322265625, 0.00043511390686035156, 0.0002834796905517578, 0.0007834434509277344, 3.814697265625e-05, 9.5367431640625e-07, 0.0001468658447265625, 1.633167266845703e-05, 1.5974044799804688e-05, 0.0014219284057617188, 0.0015087127685546875], "tokens": [2071, 629, 11339, 280, 308, 410, 27, 308, 5717, 32, 3596, 26, 853, 3952, 27, 904, 6666, 5229, 32, 63, 13142, 1296, 81, 3687, 81, 23790, 293]}
{"line_number": 1140, "line_type": "generated", "code": "\n                if (mustParse) {\n                    return ~position;\n                } else {\n                    return position;\n                }\n            }\n\n            int end = text.length();\n\n            if (iPrefix!= null) {\n                int newPos = iPrefix.parse(text", "entropy": 0.329833984375, "is_bug_line": false, "sus_score": 0.7134885787963867, "per_token_entropy": [0.08929443359375, 0.89013671875, 0.09246826171875, 0.060302734375, 5.054473876953125e-05, 0.07257080078125, 0.00969696044921875, 0.04144287109375, 0.3427734375, 0.88525390625, 0.01110076904296875, 0.004909515380859375, 0.045074462890625, 0.00032806396484375, 0.74267578125, 0.0130462646484375, 0.01531219482421875, 0.0760498046875, 0.05267333984375, 0.0019254684448242188, 0.00469207763671875, 0.0004646778106689453, 0.02288818359375, 0.0003342628479003906, 0.2249755859375, 1.0556640625, 3.419921875, 0.38818359375, 1.35546875, 0.0012607574462890625, 0.00615692138671875, 0.01666259765625, 0.8671875, 1.7490234375, 0.042266845703125, 0.162109375, 0.360107421875, 0.029876708984375, 0.0003902912139892578, 0.0229644775390625, 0.0007009506225585938, 0.028289794921875, 0.99755859375, 1.513671875, 0.357421875, 0.01033782958984375, 0.693359375, 0.0003180503845214844, 0.0002357959747314453, 0.0184783935546875, 0.210205078125, 0.1507568359375], "tokens": [400, 415, 308, 12172, 4480, 27, 301, 528, 442, 3165, 2705, 45, 400, 320, 813, 301, 528, 442, 2747, 45, 400, 320, 324, 320, 1064, 629, 943, 280, 1344, 32, 1322, 473, 1064, 415, 308, 91, 5419, 863, 744, 27, 301, 400, 629, 537, 2996, 280, 595, 5419, 32, 2208, 26, 878]}
{"line_number": 1141, "line_type": "original", "code": "                if (iFieldType == SECONDS_MILLIS || dp > 0) {", "entropy": 0.8251953125, "is_bug_line": true, "sus_score": 0.7131726145744324, "per_token_entropy": [4.0390625, 2.19921875, 0.12225341796875, 0.8857421875, 0.86669921875, 0.57373046875, 0.06829833984375, 0.0005240440368652344, 1.3113021850585938e-06, 0.0228118896484375, 0.2021484375, 4.649162292480469e-06, 9.775161743164062e-06, 2.18359375, 5.07421875, 0.1783447265625, 0.007091522216796875, 0.00475311279296875, 0.0472412109375, 0.027069091796875], "tokens": [2071, 415, 308, 91, 19204, 610, 5490, 1725, 4135, 81, 63, 13142, 1296, 1276, 11339, 848, 225, 34, 27, 301]}
{"line_number": 1141, "line_type": "generated", "code": "\n            }\n\n            int value = 0;\n            int valuePos = position;\n            int limit = text.length();\n            int multiplier = 1;\n\n            if (iPrefix!= null) {\n                int parsePos = iPrefix.parse(text,", "entropy": 0.45751953125, "is_bug_line": true, "sus_score": 0.7131726145744324, "per_token_entropy": [0.361572265625, 0.1016845703125, 0.39453125, 1.0927734375, 2.0546875, 0.472900390625, 0.43115234375, 0.004634857177734375, 0.015869140625, 0.251220703125, 0.525390625, 2.767578125, 1.4462890625, 0.022308349609375, 0.452880859375, 0.00720977783203125, 0.433837890625, 0.52294921875, 1.1044921875, 0.0797119140625, 0.63330078125, 0.00022482872009277344, 0.0008072853088378906, 0.00858306884765625, 0.6435546875, 1.1396484375, 2.208984375, 0.035980224609375, 0.173095703125, 0.035797119140625, 0.0266571044921875, 1.1845703125, 0.82470703125, 0.0180511474609375, 0.07867431640625, 0.12939453125, 0.03143310546875, 0.0004467964172363281, 0.040496826171875, 0.00121307373046875, 0.0287628173828125, 1.0439453125, 1.701171875, 1.05859375, 0.019744873046875, 0.0634765625, 0.00023233890533447266, 0.00029015541076660156, 0.0018558502197265625, 0.092041015625, 0.026580810546875, 0.0014123916625976562], "tokens": [324, 320, 1064, 629, 786, 280, 225, 34, 45, 324, 629, 786, 2996, 280, 2747, 45, 324, 629, 2723, 280, 1344, 32, 1322, 473, 324, 629, 30266, 280, 225, 35, 45, 1064, 415, 308, 91, 5419, 863, 744, 27, 301, 400, 629, 3185, 2996, 280, 595, 5419, 32, 2208, 26, 878, 30]}
{"line_number": 1127, "line_type": "original", "code": "                value = (int) (valueLong / DateTimeConstants.MILLIS_PER_SECOND);", "entropy": 0.81640625, "is_bug_line": false, "sus_score": 0.7127673625946045, "per_token_entropy": [6.78125, 8.390625, 0.64794921875, 0.1788330078125, 0.0183258056640625, 0.0225830078125, 0.1378173828125, 0.041778564453125, 0.00595855712890625, 0.80029296875, 0.042694091796875, 0.004215240478515625, 0.00045943260192871094, 0.009490966796875, 3.516674041748047e-05, 1.8596649169921875e-05, 0.0003650188446044922, 1.6927719116210938e-05, 7.700920104980469e-05, 0.055908203125, 0.002719879150390625], "tokens": [2071, 786, 280, 308, 410, 27, 308, 853, 3952, 517, 6666, 5229, 32, 63, 13142, 1296, 81, 3687, 81, 23790, 293]}
{"line_number": 1127, "line_type": "generated", "code": "\n            if (iSuffix!= null) {\n                iSuffix.printTo(out, value);\n            }\n        }\n    }\n\n    /**\n     * Class used to store a {@link PeriodFormatter} and the {@link DateTimeFormat} that created it.\n    ", "entropy": 0.61181640625, "is_bug_line": false, "sus_score": 0.7127673625946045, "per_token_entropy": [0.44921875, 0.021484375, 0.0003657341003417969, 0.001583099365234375, 0.01230621337890625, 0.0005431175231933594, 0.0002512931823730469, 0.0007414817810058594, 0.0009398460388183594, 0.0167999267578125, 0.002750396728515625, 7.987022399902344e-05, 5.8531761169433594e-05, 0.00011968612670898438, 4.6253204345703125e-05, 0.000335693359375, 0.00594329833984375, 0.0003070831298828125, 0.0011911392211914062, 0.001941680908203125, 0.004863739013671875, 0.0004115104675292969, 0.031524658203125, 0.0015439987182617188, 1.1103515625, 0.117431640625, 1.5166015625, 1.5078125, 0.1588134765625, 0.0004024505615234375, 3.525390625, 1.728515625, 0.4345703125, 2.447265625, 1.3125, 3.5390625, 0.05108642578125, 1.1533203125, 0.2470703125, 0.55419921875, 0.86865234375, 1.3671875, 2.35546875, 0.0102386474609375, 1.6796875, 1.7490234375, 0.336669921875, 1.798828125, 1.3330078125, 0.0623779296875, 0.1968994140625, 0.09613037109375], "tokens": [324, 415, 308, 91, 14059, 863, 744, 27, 301, 400, 595, 14059, 32, 1216, 705, 26, 541, 30, 786, 293, 324, 320, 291, 320, 284, 320, 446, 1022, 275, 319, 1709, 1654, 372, 2968, 312, 3088, 1204, 24156, 8736, 111, 461, 322, 3088, 1204, 6666, 2207, 111, 688, 3272, 561, 32, 275]}
{"line_number": 1142, "line_type": "original", "code": "                    buf.append('.');", "entropy": 4.58203125, "is_bug_line": true, "sus_score": 0.7122736573219299, "per_token_entropy": [8.9609375, 7.08203125, 0.263427734375, 0.7958984375, 5.796875], "tokens": [4696, 4845, 32, 1689, 49129]}
{"line_number": 1142, "line_type": "generated", "code": "\n            int value = FormatUtils.parseUnpaddedInteger(text, position, locale);\n            if (value == Integer.MIN_VALUE) {\n                return ~position;\n            }\n            position += FormatUtils.getDigitCount(value);", "entropy": 0.296630859375, "is_bug_line": true, "sus_score": 0.7122736573219299, "per_token_entropy": [0.4306640625, 0.95947265625, 1.6083984375, 0.3896484375, 0.7509765625, 0.0002849102020263672, 0.0002951622009277344, 0.11474609375, 1.6875, 0.0029888153076171875, 0.0021343231201171875, 0.0269317626953125, 0.03472900390625, 0.0017757415771484375, 0.0046539306640625, 0.70947265625, 0.67041015625, 0.0115814208984375, 0.2322998046875, 0.86279296875, 0.0732421875, 0.50244140625, 0.80712890625, 0.2744140625, 0.00039887428283691406, 0.01061248779296875, 4.887580871582031e-06, 8.344650268554688e-06, 0.0628662109375, 0.0020427703857421875, 0.035186767578125, 0.07659912109375, 0.4794921875, 0.0032901763916015625, 0.00127410888671875, 0.055328369140625, 0.0004973411560058594, 0.2666015625, 0.4755859375, 0.25341796875, 0.0902099609375, 7.998943328857422e-05, 0.00015437602996826172, 0.94677734375, 1.5703125, 0.0003228187561035156, 0.012786865234375, 0.0154571533203125, 0.01062774658203125], "tokens": [324, 629, 786, 280, 10276, 2755, 32, 2208, 1061, 34294, 3061, 26, 878, 30, 2747, 30, 11259, 293, 324, 415, 308, 853, 610, 4401, 32, 4683, 81, 5975, 27, 301, 400, 442, 3165, 2705, 45, 324, 320, 324, 2747, 1454, 10276, 2755, 32, 371, 21530, 1534, 26, 853, 293]}
{"line_number": 1674, "line_type": "original", "code": "                buf.append(iText);", "entropy": 2.26953125, "is_bug_line": false, "sus_score": 0.7122736573219299, "per_token_entropy": [4.25, 12.09375, 0.1627197265625, 0.164306640625, 0.120361328125, 1.0830078125, 0.240234375, 0.037200927734375], "tokens": [2071, 4845, 32, 1689, 26, 91, 1031, 293]}
{"line_number": 1674, "line_type": "generated", "code": "\n                        break;\n                    }\n                }\n            }\n\n            if (!found) {\n                position = iAfterParser.parseInto(period, periodStr, position, locale);\n            }\n            \n            return position;\n        }\n    }", "entropy": 0.1617431640625, "is_bug_line": false, "sus_score": 0.7122736573219299, "per_token_entropy": [0.69482421875, 0.1212158203125, 0.00054168701171875, 0.0164642333984375, 0.0008015632629394531, 0.01337432861328125, 0.00023186206817626953, 0.19384765625, 0.0002053976058959961, 0.50244140625, 0.09796142578125, 0.52783203125, 0.0241546630859375, 0.146484375, 0.0014705657958984375, 0.02392578125, 1.4130859375, 0.01316070556640625, 0.31787109375, 0.0438232421875, 0.0010175704956054688, 0.0005993843078613281, 0.0012950897216796875, 0.0003314018249511719, 0.01544189453125, 0.0084075927734375, 3.8743019104003906e-05, 0.00130462646484375, 0.00016963481903076172, 7.581710815429688e-05, 0.03997802734375, 0.0005006790161132812, 0.003955841064453125, 0.00043201446533203125, 0.310546875, 0.0003151893615722656, 1.7138671875, 0.05780029296875, 0.00905609130859375, 0.0021457672119140625, 0.00858306884765625, 0.0008673667907714844, 0.72900390625, 0.059661865234375], "tokens": [715, 1626, 45, 528, 320, 400, 320, 324, 320, 1064, 415, 1429, 6264, 27, 301, 400, 2747, 280, 595, 5125, 2825, 32, 2208, 13651, 26, 8438, 30, 7918, 2007, 30, 2747, 30, 11259, 293, 324, 320, 6428, 442, 2747, 45, 291, 320, 284, 320]}
{"line_number": 238, "line_type": "original", "code": "     * Set the minimum digits printed for the next and following appended", "entropy": 1.423828125, "is_bug_line": false, "sus_score": 0.711581289768219, "per_token_entropy": [3.986328125, 0.0126953125, 9.40625, 0.2161865234375, 2.580078125, 0.72119140625, 0.361083984375, 0.148193359375, 0.07440185546875, 0.016815185546875, 0.032470703125, 0.211669921875, 0.75537109375], "tokens": [262, 319, 1756, 322, 9340, 16105, 21440, 436, 322, 2354, 461, 2412, 22363]}
{"line_number": 238, "line_type": "generated", "code": "\n     *\n     * @return this PeriodFormatterBuilder\n     */\n    public PeriodFormatterBuilder printZeroRarelyFirst() {\n        iPrintZeroSetting = PRINT_ZERO_RARELY_FIRST;\n        return this;\n    }\n\n    /**\n     * Only", "entropy": 0.07037353515625, "is_bug_line": false, "sus_score": 0.711581289768219, "per_token_entropy": [0.11083984375, 0.0025806427001953125, 0.875, 0.0005059242248535156, 0.00743865966796875, 0.004215240478515625, 0.0005311965942382812, 0.00018668174743652344, 0.00022995471954345703, 5.054473876953125e-05, 0.01318359375, 0.015106201171875, 0.006717681884765625, 0.0009360313415527344, 0.0001392364501953125, 0.00011110305786132812, 2.2649765014648438e-06, 0.0004329681396484375, 0.00011789798736572266, 0.0009388923645019531, 2.1576881408691406e-05, 2.1457672119140625e-06, 0.00012230873107910156, 0.0013589859008789062, 0.0002837181091308594, 0.007843017578125, 0.0012598037719726562, 0.002170562744140625, 4.863739013671875e-05, 0.00011444091796875, 0.0001583099365234375, 0.00222015380859375, 0.00031757354736328125, 0.00021350383758544922, 1.7523765563964844e-05, 0.00018465518951416016, 1.049041748046875e-05, 0.0006346702575683594, 0.00019860267639160156, 0.0005097389221191406, 0.00013971328735351562, 0.0010461807250976562, 0.0005693435668945312, 5.435943603515625e-05, 4.589557647705078e-05, 0.00955963134765625, 1.895427703857422e-05, 0.03533935546875, 0.0107269287109375, 0.058319091796875, 0.00017178058624267578, 2.484375], "tokens": [275, 319, 275, 319, 477, 601, 458, 24156, 8736, 1796, 275, 569, 284, 562, 24156, 8736, 1796, 1459, 8039, 68, 586, 631, 3472, 346, 301, 291, 595, 4014, 8039, 7085, 280, 24309, 81, 13977, 81, 68, 3195, 7704, 81, 16838, 45, 291, 442, 458, 45, 284, 320, 446, 1022, 275, 319, 9287]}
{"line_number": 1422, "line_type": "original", "code": "                int seconds = period.get(DurationFieldType.seconds());", "entropy": 1.1162109375, "is_bug_line": false, "sus_score": 0.7104951739311218, "per_token_entropy": [6.5, 2.86328125, 4.734375, 0.0390625, 0.052398681640625, 0.0015325546264648438, 0.0005526542663574219, 0.11810302734375, 0.1678466796875, 0.0005583763122558594, 0.0011072158813476562, 0.034393310546875, 0.003753662109375], "tokens": [2071, 629, 6791, 280, 7918, 32, 371, 26, 6196, 19204, 32, 6360, 1035]}
{"line_number": 1422, "line_type": "generated", "code": "\n\n        /**\n         * @return true if the field is supported by the period type\n         */\n        boolean isSupported(PeriodType type, int field) {\n            if (type == null) {\n                return false;\n            }\n            switch (field) {\n           ", "entropy": 0.336181640625, "is_bug_line": false, "sus_score": 0.7104951739311218, "per_token_entropy": [2.212890625, 1.0986328125, 0.053070068359375, 0.00025534629821777344, 1.2587890625, 0.38525390625, 0.8994140625, 0.0948486328125, 1.28125, 1.2802734375, 0.7890625, 0.20849609375, 0.7353515625, 0.145263671875, 0.6806640625, 0.366455078125, 0.76904296875, 0.04058837890625, 0.01041412353515625, 0.52490234375, 0.0005326271057128906, 0.0007519721984863281, 0.0007033348083496094, 0.003173828125, 2.110004425048828e-05, 0.609375, 0.0009050369262695312, 0.01513671875, 0.173828125, 0.09637451171875, 0.004016876220703125, 0.03369140625, 0.62939453125, 0.02606201171875, 0.1915283203125, 0.14111328125, 0.005100250244140625, 0.08917236328125, 0.0021820068359375, 0.0433349609375, 0.08868408203125, 1.2607421875, 6.866455078125e-05, 0.0352783203125, 0.0002384185791015625, 0.258056640625, 0.81884765625, 0.045379638671875, 0.01212310791015625, 0.0008168220520019531, 0.0007224082946777344, 0.06524658203125], "tokens": [584, 1022, 276, 319, 477, 601, 861, 415, 322, 1600, 438, 5420, 810, 322, 7918, 827, 276, 569, 291, 1905, 438, 10323, 26, 7754, 620, 827, 30, 629, 1600, 27, 301, 324, 415, 308, 681, 610, 744, 27, 301, 400, 442, 901, 45, 324, 320, 324, 3578, 308, 1495, 27, 301, 324]}
{"line_number": 1423, "line_type": "original", "code": "                int millis = period.get(DurationFieldType.millis());", "entropy": 1.5947265625, "is_bug_line": false, "sus_score": 0.7104951739311218, "per_token_entropy": [6.15234375, 5.37890625, 5.53125, 0.64453125, 1.4462890625, 0.01148223876953125, 0.035003662109375, 0.6611328125, 0.8232421875, 0.0022144317626953125, 0.0023670196533203125, 0.0074005126953125, 0.0386962890625], "tokens": [2071, 629, 42302, 280, 7918, 32, 371, 26, 6196, 19204, 32, 36916, 1035]}
{"line_number": 1423, "line_type": "generated", "code": "\n            return true;\n        }\n    }\n\n    static class SimplePeriodFormatterBuilder {\n        private final PeriodType iType;\n        private final StringBuilder iBuilder;\n        private final String[] iFieldStrings;\n        private final String[] iFieldPatterns;\n        private final", "entropy": 0.58935546875, "is_bug_line": false, "sus_score": 0.7104951739311218, "per_token_entropy": [0.3408203125, 0.41552734375, 1.2275390625, 0.011322021484375, 0.051849365234375, 0.00152587890625, 1.7978515625, 0.046539306640625, 1.115234375, 1.8173828125, 0.73681640625, 3.138671875, 0.90625, 0.430908203125, 0.37451171875, 0.2041015625, 0.355224609375, 0.466064453125, 0.87109375, 1.26953125, 0.36083984375, 0.04156494140625, 0.2393798828125, 0.00921630859375, 0.0772705078125, 0.0208282470703125, 0.41552734375, 1.611328125, 0.0167694091796875, 1.876953125, 0.347412109375, 0.1512451171875, 0.0166778564453125, 0.5654296875, 2.27734375, 1.6123046875, 0.0013761520385742188, 0.26318359375, 0.52294921875, 0.09039306640625, 0.08538818359375, 0.007274627685546875, 0.39892578125, 1.71484375, 0.206787109375, 0.00029730796813964844, 0.26708984375, 1.4267578125, 0.004856109619140625, 0.0640869140625, 0.004062652587890625, 0.35791015625], "tokens": [324, 442, 861, 45, 291, 320, 284, 320, 446, 907, 443, 7155, 7754, 8736, 1796, 301, 291, 945, 1158, 24156, 620, 595, 620, 45, 291, 945, 1158, 9706, 595, 1796, 45, 291, 945, 1158, 892, 1178, 595, 1176, 9634, 45, 291, 945, 1158, 892, 1178, 595, 1176, 18134, 45, 291, 945, 1158]}
{"line_number": 1424, "line_type": "original", "code": "                value = (seconds * (long) DateTimeConstants.MILLIS_PER_SECOND) + millis;", "entropy": 1.482421875, "is_bug_line": false, "sus_score": 0.7104951739311218, "per_token_entropy": [3.96875, 8.078125, 0.08270263671875, 4.03125, 7.79296875, 1.5732421875, 4.62890625, 0.85107421875, 0.0143890380859375, 2.09375, 0.16455078125, 0.002170562744140625, 0.00627899169921875, 2.47955322265625e-05, 4.1961669921875e-05, 0.00019741058349609375, 0.00010311603546142578, 8.58306884765625e-06, 0.01020050048828125, 0.402099609375, 0.2191162109375, 0.1650390625, 0.0174102783203125], "tokens": [2071, 786, 280, 308, 6360, 319, 308, 3222, 27, 6666, 5229, 32, 63, 13142, 1296, 81, 3687, 81, 23790, 27, 474, 42302, 45]}
{"line_number": 1424, "line_type": "generated", "code": "\n            }\n            return true;\n        }\n\n        /**\n         * @param value  value to check\n         * @param width  width to check\n         * @return true if value fits in width\n         */\n        private boolean fits(long value, int width) {", "entropy": 0.58837890625, "is_bug_line": false, "sus_score": 0.7104951739311218, "per_token_entropy": [0.64111328125, 0.2276611328125, 0.1455078125, 0.13330078125, 1.5537109375, 0.0002567768096923828, 0.06640625, 0.0012989044189453125, 0.36669921875, 1.4619140625, 0.057647705078125, 0.00019621849060058594, 1.4814453125, 1.12890625, 1.90625, 1.2353515625, 1.98046875, 0.35888671875, 2.328125, 0.38134765625, 0.0120086669921875, 0.0038604736328125, 0.61328125, 2.55078125, 0.041961669921875, 1.146484375, 0.9609375, 0.7021484375, 0.775390625, 0.0244903564453125, 0.003932952880859375, 0.29833984375, 0.1070556640625, 0.08837890625, 0.8857421875, 1.4951171875, 1.109375, 0.91162109375, 0.454345703125, 0.039398193359375, 0.00331878662109375, 1.7099609375, 0.17333984375, 0.3935546875, 0.359130859375, 0.2227783203125, 0.001201629638671875, 0.0004391670227050781, 0.026519775390625, 0.0014619827270507812, 0.0130462646484375, 0.00201416015625], "tokens": [324, 320, 324, 442, 861, 45, 291, 320, 584, 1022, 276, 319, 477, 753, 786, 225, 786, 372, 1505, 276, 319, 477, 753, 1861, 225, 1861, 372, 1505, 276, 319, 477, 601, 861, 415, 786, 30596, 328, 1861, 276, 569, 291, 945, 1905, 30596, 26, 3222, 786, 30, 629, 1861, 27, 301]}
{"line_number": 1494, "line_type": "original", "code": "                return type.isSupported(DurationFieldType.seconds()) ||", "entropy": 2.056640625, "is_bug_line": false, "sus_score": 0.7102013826370239, "per_token_entropy": [6.796875, 4.91015625, 4.99609375, 0.4814453125, 1.1005859375, 0.0251007080078125, 0.0192718505859375, 2.04296875, 0.002086639404296875, 0.00258636474609375, 3.919921875, 1.203125, 1.23046875], "tokens": [2071, 442, 827, 32, 297, 10323, 26, 6196, 19204, 32, 6360, 1157, 1276]}
{"line_number": 1494, "line_type": "generated", "code": "\n        Literal(String text) {\n            iText = text;\n        }\n\n        public int estimatePrintedLength() {\n            return iText.length();\n        }\n\n        public void printTo(StringBuffer buf, ReadablePeriod period, Locale locale) {\n           ", "entropy": 0.13427734375, "is_bug_line": false, "sus_score": 0.7102013826370239, "per_token_entropy": [0.38427734375, 0.7529296875, 0.015472412109375, 0.035552978515625, 0.05291748046875, 0.0113372802734375, 0.001953125, 0.0239105224609375, 0.25390625, 0.00010704994201660156, 0.0014925003051757812, 0.12139892578125, 0.0178070068359375, 0.032958984375, 0.0003788471221923828, 0.317626953125, 0.51904296875, 0.25537109375, 0.876953125, 0.1015625, 0.0008101463317871094, 0.004573822021484375, 0.0218048095703125, 0.0009484291076660156, 0.07000732421875, 0.028167724609375, 0.072509765625, 0.0003204345703125, 0.039337158203125, 0.0009431838989257812, 0.018646240234375, 0.01157379150390625, 0.00036454200744628906, 0.07794189453125, 0.057220458984375, 0.52734375, 0.0015859603881835938, 3.5643577575683594e-05, 0.0009307861328125, 1.009765625, 0.0090179443359375, 0.0020771026611328125, 0.23974609375, 5.125999450683594e-05, 0.005550384521484375, 0.005550384521484375, 0.01309967041015625, 0.9345703125, 0.001300811767578125, 0.004756927490234375, 0.00047850608825683594, 0.046234130859375], "tokens": [291, 24849, 26, 652, 1344, 27, 301, 324, 595, 1031, 280, 1344, 45, 291, 320, 584, 562, 629, 20772, 4014, 318, 2380, 346, 301, 324, 442, 595, 1031, 32, 1322, 473, 291, 320, 584, 562, 763, 1459, 705, 26, 35322, 4845, 30, 4841, 444, 7754, 7918, 30, 23265, 11259, 27, 301, 324]}
{"line_number": 1466, "line_type": "original", "code": "                    return false;", "entropy": 4.890625, "is_bug_line": false, "sus_score": 0.7093281149864197, "per_token_entropy": [7.63671875, 6.453125, 5.47265625, 0.004367828369140625], "tokens": [4696, 442, 901, 45]}
{"line_number": 1466, "line_type": "generated", "code": "\n                break;\n            case MINUTES:", "entropy": 0.08184814453125, "is_bug_line": false, "sus_score": 0.7093281149864197, "per_token_entropy": [0.382568359375, 0.2568359375, 0.0004906654357910156, 0.00714111328125, 0.0052337646484375, 0.0024471282958984375, 8.58306884765625e-05, 0.00013887882232666016], "tokens": [400, 1626, 45, 324, 1135, 14369, 46520, 44]}
{"line_number": 1441, "line_type": "original", "code": "                        return Long.MAX_VALUE;", "entropy": 2.35546875, "is_bug_line": false, "sus_score": 0.7085056304931641, "per_token_entropy": [7.94921875, 0.341796875, 10.1328125, 0.042388916015625, 0.290283203125, 0.0004107952117919922, 0.0005640983581542969, 0.087890625], "tokens": [6797, 442, 6359, 32, 3459, 81, 5975, 45]}
{"line_number": 1441, "line_type": "generated", "code": "\n            }\n        }\n\n        /**\n         * Returns the number of fields in this formatter.\n         */\n        public int size() {\n            return iFieldCount;\n        }\n\n        /**\n         * Returns the field at the specified index.\n         *\n         * @param index", "entropy": 0.429443359375, "is_bug_line": false, "sus_score": 0.7085056304931641, "per_token_entropy": [1.4609375, 0.215087890625, 0.082275390625, 0.002269744873046875, 0.399169921875, 1.8720703125, 0.228271484375, 0.00030612945556640625, 2.134765625, 0.619140625, 2.42578125, 0.010162353515625, 1.0595703125, 1.3720703125, 1.078125, 0.5927734375, 0.28955078125, 0.1981201171875, 1.490234375, 0.0261077880859375, 0.477294921875, 0.041473388671875, 0.04168701171875, 0.001094818115234375, 0.0088653564453125, 0.11309814453125, 0.26416015625, 0.1474609375, 0.12158203125, 0.953125, 0.032257080078125, 0.004512786865234375, 0.0002872943878173828, 0.13720703125, 0.15234375, 0.006984710693359375, 0.00012171268463134766, 0.461669921875, 0.49072265625, 1.1787109375, 0.54443359375, 0.1051025390625, 0.0865478515625, 0.00240325927734375, 0.12548828125, 0.050048828125, 0.5966796875, 0.32958984375, 0.0005011558532714844, 0.0008392333984375, 0.2509765625, 0.048126220703125], "tokens": [324, 320, 291, 320, 584, 1022, 276, 319, 3759, 322, 1451, 432, 3829, 328, 458, 14971, 32, 276, 569, 291, 562, 629, 1334, 346, 301, 324, 442, 595, 1176, 1534, 45, 291, 320, 584, 1022, 276, 319, 3759, 322, 1600, 821, 322, 3191, 1650, 32, 276, 319, 276, 319, 477, 753, 1650]}
{"line_number": 1085, "line_type": "original", "code": "            return 0;", "entropy": 3.869140625, "is_bug_line": false, "sus_score": 0.7078728675842285, "per_token_entropy": [4.3515625, 8.140625, 6.421875, 0.430908203125, 0.00653076171875], "tokens": [1468, 442, 225, 34, 45]}
{"line_number": 1085, "line_type": "generated", "code": "\n            }\n            else {\n                FormatUtils.appendNumber(buf, value, minDigits, iPrintZeroSetting);\n            }\n            if (iSuffix!= null) {\n                iSuffix.printTo(buf, value);\n            }\n        }\n        \n        public", "entropy": 0.21728515625, "is_bug_line": false, "sus_score": 0.7078728675842285, "per_token_entropy": [0.2744140625, 0.00287628173828125, 1.58984375, 0.326416015625, 0.421630859375, 0.401611328125, 0.818359375, 0.0007128715515136719, 0.0005540847778320312, 0.0782470703125, 1.822265625, 0.06475830078125, 0.166259765625, 0.00112152099609375, 0.07806396484375, 0.0178375244140625, 0.05609130859375, 0.0009813308715820312, 0.7001953125, 0.88525390625, 0.58740234375, 0.0005240440368652344, 0.00011599063873291016, 0.60693359375, 0.11309814453125, 9.965896606445312e-05, 0.1533203125, 0.005641937255859375, 0.0009822845458984375, 0.003749847412109375, 0.188720703125, 0.00136566162109375, 7.534027099609375e-05, 0.005855560302734375, 0.00027489662170410156, 0.004180908203125, 0.002719879150390625, 0.00018143653869628906, 1.7881393432617188e-05, 8.881092071533203e-05, 0.00011301040649414062, 6.377696990966797e-05, 6.651878356933594e-05, 0.0002281665802001953, 0.0019435882568359375, 0.00943756103515625, 0.006603240966796875, 0.00018799304962158203, 0.0572509765625, 0.00018525123596191406, 1.4853515625, 0.354736328125], "tokens": [324, 320, 324, 813, 301, 400, 10276, 2755, 32, 1689, 1918, 26, 1954, 30, 786, 30, 1847, 22326, 30, 595, 4014, 8039, 7085, 293, 324, 320, 324, 415, 308, 91, 14059, 863, 744, 27, 301, 400, 595, 14059, 32, 1216, 705, 26, 1954, 30, 786, 293, 324, 320, 291, 320, 2746, 562]}
{"line_number": 1662, "line_type": "original", "code": "            if (iUseBefore) {", "entropy": 0.849609375, "is_bug_line": false, "sus_score": 0.7073416709899902, "per_token_entropy": [4.8125, 0.489013671875, 0.08428955078125, 0.63671875, 0.33056640625, 0.1832275390625, 0.2548828125, 0.006866455078125], "tokens": [1468, 415, 308, 91, 4391, 5658, 27, 301]}
{"line_number": 1662, "line_type": "generated", "code": "\n            if (iUseBefore) {\n                if (position == oldPos) {\n                    return position;\n                }\n                found = true;\n            }\n\n            if (position < periodStr.length() && iText.regionMatches(true, 0,", "entropy": 0.34228515625, "is_bug_line": false, "sus_score": 0.7073416709899902, "per_token_entropy": [0.767578125, 0.4150390625, 0.12054443359375, 0.4404296875, 0.1634521484375, 0.1868896484375, 0.214599609375, 0.0017852783203125, 0.0162506103515625, 0.3974609375, 0.042388916015625, 0.480224609375, 1.30859375, 0.1614990234375, 2.1576881408691406e-05, 0.200927734375, 0.0011396408081054688, 0.025054931640625, 1.80078125, 0.73779296875, 0.0248260498046875, 0.01812744140625, 0.0003261566162109375, 0.5693359375, 0.70556640625, 0.005947113037109375, 0.042266845703125, 7.891654968261719e-05, 0.1923828125, 0.000324249267578125, 0.94287109375, 0.78662109375, 0.206787109375, 1.705078125, 0.67919921875, 0.038970947265625, 0.00010609626770019531, 9.202957153320312e-05, 2.0503997802734375e-05, 0.9365234375, 0.09942626953125, 0.76123046875, 0.880859375, 0.083740234375, 1.052734375, 0.00027680397033691406, 0.014801025390625, 0.53857421875, 0.00098419189453125, 0.0239410400390625, 0.0011091232299804688, 0.00021791458129882812], "tokens": [324, 415, 308, 91, 4391, 5658, 27, 301, 400, 415, 308, 2705, 610, 3610, 2996, 27, 301, 528, 442, 2747, 45, 400, 320, 400, 2431, 280, 861, 45, 324, 320, 1064, 415, 308, 2705, 333, 7918, 2007, 32, 1322, 346, 962, 595, 1031, 32, 3419, 16197, 26, 1508, 30, 225, 34, 30]}
{"line_number": 868, "line_type": "original", "code": "            buf.append(iText);", "entropy": 2.763671875, "is_bug_line": false, "sus_score": 0.70714271068573, "per_token_entropy": [4.6953125, 11.71875, 0.10205078125, 0.09283447265625, 0.0294342041015625, 1.5029296875, 3.90625, 0.055816650390625], "tokens": [1468, 4845, 32, 1689, 26, 91, 1031, 293]}
{"line_number": 868, "line_type": "generated", "code": "\n        }\n\n        public int calculatePrintedLength(int value) {\n            if (value == 1) {\n                return iSingularText.length();\n            }\n            return iPluralText.length();\n        }\n\n        public void printTo(StringBuffer", "entropy": 0.058746337890625, "is_bug_line": false, "sus_score": 0.70714271068573, "per_token_entropy": [0.58740234375, 0.0004429817199707031, 0.0794677734375, 0.029388427734375, 0.00765228271484375, 0.0006885528564453125, 7.414817810058594e-05, 3.814697265625e-06, 2.4199485778808594e-05, 0.0007119178771972656, 0.003841400146484375, 0.00951385498046875, 0.0001842975616455078, 0.00023221969604492188, 0.12322998046875, 1.125, 0.0253753662109375, 0.040130615234375, 0.2147216796875, 0.003997802734375, 0.00853729248046875, 0.006420135498046875, 0.0022296905517578125, 0.045318603515625, 0.0051422119140625, 0.0018148422241210938, 0.00022900104522705078, 2.9206275939941406e-05, 7.128715515136719e-05, 0.0023059844970703125, 0.00013577938079833984, 0.0018224716186523438, 0.0305328369140625, 0.00011491775512695312, 0.4736328125, 0.1500244140625, 0.0115966796875, 0.0012598037719726562, 2.5033950805664062e-06, 1.0609626770019531e-05, 0.003021240234375, 0.00014698505401611328, 0.00403594970703125, 0.0098724365234375, 4.76837158203125e-05, 0.037200927734375, 0.0025730133056640625, 0.0027370452880859375, 7.832050323486328e-05, 1.52587890625e-05, 3.254413604736328e-05, 0.0008950233459472656], "tokens": [291, 320, 584, 562, 629, 9169, 4014, 318, 2380, 26, 410, 786, 27, 301, 324, 415, 308, 853, 610, 225, 35, 27, 301, 400, 442, 595, 19534, 1900, 1031, 32, 1322, 473, 324, 320, 324, 442, 595, 1822, 5361, 1031, 32, 1322, 473, 291, 320, 584, 562, 763, 1459, 705, 26, 35322]}
{"line_number": 1143, "line_type": "original", "code": "                    FormatUtils.appendPaddedInteger(buf, dp, 3);", "entropy": 1.6240234375, "is_bug_line": false, "sus_score": 0.7069340944290161, "per_token_entropy": [9.453125, 5.1640625, 0.03631591796875, 0.018035888671875, 6.3203125, 0.7431640625, 0.0006508827209472656, 0.0012044906616210938, 0.2305908203125, 0.375244140625, 0.00745391845703125, 3.427734375, 0.1212158203125, 0.054229736328125, 0.01342010498046875, 0.017333984375], "tokens": [4696, 10276, 2755, 32, 1689, 66, 11043, 3061, 26, 1954, 30, 11339, 30, 225, 37, 293]}
{"line_number": 1143, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.7069340944290161, "per_token_entropy": [], "tokens": []}
{"line_number": 1673, "line_type": "original", "code": "            } else if (iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0) {", "entropy": 0.71875, "is_bug_line": false, "sus_score": 0.7066107988357544, "per_token_entropy": [5.796875, 1.7314453125, 2.494140625, 1.80859375, 0.1817626953125, 0.52880859375, 1.0283203125, 1.2197265625, 0.8505859375, 3.263671875, 0.63720703125, 0.37158203125, 0.0017957687377929688, 0.00115203857421875, 0.0096588134765625, 0.007106781005859375, 0.01099395751953125, 0.0016956329345703125, 0.00756072998046875, 0.058563232421875, 0.0020885467529296875, 0.00708770751953125, 0.002223968505859375, 0.04412841796875, 0.0011777877807617188, 0.00341796875, 0.029632568359375, 0.0225067138671875], "tokens": [1468, 320, 813, 415, 308, 91, 4391, 5125, 962, 2685, 32, 998, 4140, 705, 4014, 26, 8438, 30, 225, 35, 30, 11259, 27, 848, 225, 34, 27, 301]}
{"line_number": 1673, "line_type": "generated", "code": "\n                        found = true;\n                        break;\n                    }\n                }\n            }\n\n            if (!found) {\n                return -1;\n            }\n\n            if (iUseAfter) {\n                position = iAfterParser.parseInto(period, periodStr, position,", "entropy": 0.148193359375, "is_bug_line": false, "sus_score": 0.7066107988357544, "per_token_entropy": [0.1942138671875, 0.7197265625, 0.008148193359375, 0.0199127197265625, 0.0005736351013183594, 0.07220458984375, 0.042877197265625, 0.000270843505859375, 0.01020050048828125, 0.000751495361328125, 0.01145172119140625, 0.00021851062774658203, 0.2479248046875, 0.00033545494079589844, 0.56640625, 0.09979248046875, 0.59375, 0.0204010009765625, 0.1275634765625, 0.0015201568603515625, 0.028961181640625, 0.5908203125, 0.5625, 0.017242431640625, 0.0013227462768554688, 0.01348876953125, 0.00016605854034423828, 0.375732421875, 1.14453125, 0.0975341796875, 0.265625, 0.1575927734375, 0.72998046875, 0.06829833984375, 0.0006880760192871094, 0.031646728515625, 0.79345703125, 0.0113983154296875, 0.0189666748046875, 0.0031337738037109375, 0.00910186767578125, 0.0006880760192871094, 0.0011453628540039062, 0.0004761219024658203, 0.0213775634765625, 0.01030731201171875, 6.091594696044922e-05, 0.001522064208984375, 5.0187110900878906e-05, 6.389617919921875e-05, 0.008148193359375, 0.00052642822265625], "tokens": [715, 2431, 280, 861, 45, 715, 1626, 45, 528, 320, 400, 320, 324, 320, 1064, 415, 1429, 6264, 27, 301, 400, 442, 429, 35, 45, 324, 320, 1064, 415, 308, 91, 4391, 5125, 27, 301, 400, 2747, 280, 595, 5125, 2825, 32, 2208, 13651, 26, 8438, 30, 7918, 2007, 30, 2747, 30]}
{"line_number": 1403, "line_type": "original", "code": "                value = period.get(DurationFieldType.weeks());", "entropy": 1.35546875, "is_bug_line": false, "sus_score": 0.7056024670600891, "per_token_entropy": [4.58203125, 6.29296875, 0.053436279296875, 1.958984375, 0.00720977783203125, 0.00760650634765625, 0.10125732421875, 1.5234375, 0.0027313232421875, 0.006191253662109375, 3.01953125, 0.0197906494140625, 0.04205322265625], "tokens": [2071, 786, 280, 7918, 32, 371, 26, 6196, 19204, 32, 9892, 101, 1035]}
{"line_number": 1403, "line_type": "generated", "code": "\n                    } else {\n                        return Long.MAX_VALUE;\n                    }\n                    break;\n                case PRINT_ZERO_RARELY_MIDDLE:\n                    if (isZero(period) && iFieldFormatters[iFieldType] == this) {\n                        int", "entropy": 0.0960693359375, "is_bug_line": false, "sus_score": 0.7056024670600891, "per_token_entropy": [0.330322265625, 0.01050567626953125, 0.96240234375, 0.01354217529296875, 0.021453857421875, 0.01239013671875, 0.0036163330078125, 2.5272369384765625e-05, 4.8160552978515625e-05, 1.0013580322265625e-05, 3.933906555175781e-06, 8.90493392944336e-05, 0.01149749755859375, 0.0001405477523803711, 0.11407470703125, 0.007564544677734375, 0.001003265380859375, 0.042022705078125, 0.463134765625, 0.0012054443359375, 3.910064697265625e-05, 0.005443572998046875, 0.00022089481353759766, 0.466552734375, 0.0019044876098632812, 0.0008168220520019531, 0.58349609375, 0.56591796875, 0.005672454833984375, 0.1361083984375, 0.1844482421875, 0.021636962890625, 0.049224853515625, 0.00811004638671875, 0.0005321502685546875, 0.00021529197692871094, 0.09814453125, 0.050445556640625, 0.0251922607421875, 0.0009870529174804688, 0.0008411407470703125, 7.152557373046875e-07, 0.00033354759216308594, 0.0003871917724609375, 0.0003330707550048828, 0.0021152496337890625, 0.00646209716796875, 0.0006456375122070312, 0.03271484375, 0.0014467239379882812, 0.1590576171875, 0.5927734375], "tokens": [528, 320, 813, 301, 715, 442, 6359, 32, 3459, 81, 5975, 45, 528, 320, 528, 1626, 45, 400, 1135, 24309, 81, 13977, 81, 68, 3195, 7704, 81, 47589, 44, 528, 415, 308, 297, 8039, 26, 8438, 27, 962, 595, 1176, 2207, 5725, 77, 91, 19204, 79, 610, 458, 27, 301, 715, 629]}
{"line_number": 1434, "line_type": "original", "code": "                    if (isZero(period) && iFieldFormatters[iFieldType] == this) {", "entropy": 0.95556640625, "is_bug_line": false, "sus_score": 0.7052271366119385, "per_token_entropy": [6.25, 3.365234375, 0.06671142578125, 3.357421875, 4.53515625, 0.31298828125, 0.0721435546875, 0.42431640625, 0.077880859375, 0.18408203125, 0.019989013671875, 0.0030498504638671875, 6.67572021484375e-06, 0.00284576416015625, 0.49658203125, 0.8173828125, 0.0111541748046875, 0.01226043701171875, 0.00814056396484375, 0.016326904296875, 0.027984619140625], "tokens": [4696, 415, 308, 297, 8039, 26, 8438, 27, 962, 595, 1176, 2207, 5725, 77, 91, 19204, 79, 610, 458, 27, 301]}
{"line_number": 1434, "line_type": "generated", "code": "\n            case HOURS:\n                return type.isSupported(DurationFieldType.hours());\n            case MINUTES:\n                return type.isSupported(DurationFieldType.minutes());\n            case SECONDS:\n                return type.isSupported(DurationFieldType.seconds", "entropy": 0.0367431640625, "is_bug_line": false, "sus_score": 0.7052271366119385, "per_token_entropy": [0.6005859375, 0.8408203125, 0.144287109375, 0.000148773193359375, 0.00025391578674316406, 0.0111083984375, 0.054351806640625, 0.00817108154296875, 0.01461029052734375, 0.0035953521728515625, 0.0011539459228515625, 0.0087738037109375, 0.00040721893310546875, 0.041259765625, 0.0001804828643798828, 0.00016033649444580078, 0.0006999969482421875, 0.01169586181640625, 0.076171875, 0.00940704345703125, 0.0013713836669921875, 3.910064697265625e-05, 2.8014183044433594e-05, 0.00347137451171875, 0.0002498626708984375, 0.0007581710815429688, 0.00026798248291015625, 6.520748138427734e-05, 4.279613494873047e-05, 8.213520050048828e-05, 0.00621795654296875, 6.711483001708984e-05, 0.0002727508544921875, 0.00039577484130859375, 0.00035309791564941406, 0.0208740234375, 0.004405975341796875, 0.0003230571746826172, 1.5020370483398438e-05, -0.0, 0.0049896240234375, 0.0163116455078125, 0.00225830078125, 0.00688934326171875, 0.00011491775512695312, 0.0004944801330566406, 6.413459777832031e-05, 0.0007944107055664062, 0.01015472412109375, 0.0006837844848632812, 3.123283386230469e-05, 0.0013980865478515625], "tokens": [324, 1135, 11551, 1263, 69, 44, 400, 442, 827, 32, 297, 10323, 26, 6196, 19204, 32, 14991, 1035, 324, 1135, 14369, 46520, 44, 400, 442, 827, 32, 297, 10323, 26, 6196, 19204, 32, 18461, 1035, 324, 1135, 5490, 1725, 4135, 44, 400, 442, 827, 32, 297, 10323, 26, 6196, 19204, 32, 6360]}
{"line_number": 1661, "line_type": "original", "code": "            before.printTo(buf, period, locale);", "entropy": 1.4580078125, "is_bug_line": false, "sus_score": 0.7048780918121338, "per_token_entropy": [5.6953125, 5.69140625, 4.421875, 0.462158203125, 0.06365966796875, 0.0517578125, 1.0380859375, 0.00872039794921875, 0.0269927978515625, 0.007297515869140625, 0.017791748046875, 0.0095977783203125], "tokens": [1468, 2670, 32, 1216, 705, 26, 1954, 30, 7918, 30, 11259, 293]}
{"line_number": 1661, "line_type": "generated", "code": "\n            if (iUseAfter) {\n                int newPos = position;\n                position = iAfterParser.parseInto(period, periodStr, position, locale);\n\n                if (position < 0) {\n                    position = newPos;\n                }\n           ", "entropy": 0.2685546875, "is_bug_line": false, "sus_score": 0.7048780918121338, "per_token_entropy": [0.603515625, 0.7548828125, 0.053009033203125, 0.1339111328125, 0.052001953125, 0.8310546875, 0.1884765625, 0.0022907257080078125, 0.0170745849609375, 1.1259765625, 3.306640625, 0.306640625, 0.060272216796875, 0.8056640625, 0.4091796875, 0.08660888671875, 0.71923828125, 0.00576019287109375, 0.1661376953125, 0.04296875, 0.003620147705078125, 0.000537872314453125, 0.0006361007690429688, 0.0038738250732421875, 0.00034117698669433594, 0.0122528076171875, 0.00012063980102539062, 0.00423431396484375, 5.078315734863281e-05, 0.00016498565673828125, 0.422607421875, 0.002971649169921875, 0.003681182861328125, 0.00041937828063964844, 1.2470703125, 0.0677490234375, 0.01433563232421875, 0.05401611328125, 0.358154296875, 0.01480865478515625, 0.0004069805145263672, 0.08538818359375, 0.0021686553955078125, 0.01092529296875, 1.09375, 0.00047588348388671875, 0.5986328125, 3.2067298889160156e-05, 0.01023101806640625, 0.10418701171875, 0.0002689361572265625, 0.1710205078125], "tokens": [324, 415, 308, 91, 4391, 5125, 27, 301, 400, 629, 537, 2996, 280, 2747, 45, 400, 2747, 280, 595, 5125, 2825, 32, 2208, 13651, 26, 8438, 30, 7918, 2007, 30, 2747, 30, 11259, 293, 2110, 415, 308, 2705, 333, 225, 34, 27, 301, 528, 2747, 280, 537, 2996, 45, 400, 320, 324]}
{"line_number": 1676, "line_type": "original", "code": "            after.printTo(buf, period, locale);", "entropy": 1.6201171875, "is_bug_line": false, "sus_score": 0.7048780918121338, "per_token_entropy": [3.396484375, 10.265625, 2.41015625, 1.9443359375, 0.03326416015625, 0.0445556640625, 1.26171875, 0.006626129150390625, 0.035400390625, 0.00482940673828125, 0.0196533203125, 0.01088714599609375], "tokens": [1468, 2685, 32, 1216, 705, 26, 1954, 30, 7918, 30, 11259, 293]}
{"line_number": 1676, "line_type": "generated", "code": "\n                }\n            }\n\n            if (found) {\n                // If we found a separator, then we can't have any more text.\n                return position;\n            }\n\n            // Now parse the text.\n            PeriodParser afterParser = iAfterParser;\n            if", "entropy": 0.83056640625, "is_bug_line": false, "sus_score": 0.7048780918121338, "per_token_entropy": [0.2249755859375, 0.0069122314453125, 0.42236328125, 0.000881195068359375, 0.57958984375, 0.130126953125, 0.490478515625, 0.1324462890625, 0.1212158203125, 0.00160980224609375, 0.063720703125, 2.072265625, 2.763671875, 0.62353515625, 0.8671875, 0.5166015625, 0.476318359375, 0.2344970703125, 1.5, 1.3408203125, 2.58984375, 1.1279296875, 1.8583984375, 1.548828125, 1.71875, 2.7734375, 0.88427734375, 0.135498046875, 1.3349609375, 0.49169921875, 0.111083984375, 0.016448974609375, 0.00041413307189941406, 0.5703125, 1.138671875, 3.34375, 1.6318359375, 0.490234375, 2.052734375, 1.291015625, 0.1265869140625, 1.8876953125, 1.21484375, 1.08984375, 0.0838623046875, 0.01751708984375, 0.0224761962890625, 0.00762176513671875, 0.0012264251708984375, 0.0023651123046875, 0.10906982421875, 0.95263671875], "tokens": [400, 320, 324, 320, 1064, 415, 308, 6264, 27, 301, 400, 434, 1670, 996, 2431, 312, 17584, 30, 1615, 996, 883, 1330, 1159, 1346, 1829, 1344, 32, 400, 442, 2747, 45, 324, 320, 1064, 434, 9080, 3185, 322, 1344, 32, 324, 24156, 2825, 2685, 2825, 280, 595, 5125, 2825, 45, 324, 415]}
