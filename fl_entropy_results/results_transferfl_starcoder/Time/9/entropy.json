{"line_number": 619, "line_type": "original", "code": "        return -(int) offsetFormatter().withChronology(chrono).parseMillis(str);", "entropy": 2.306640625, "is_bug_line": false, "sus_score": 0.6687353849411011, "per_token_entropy": [3.59375, 1.5029296875, 12.921875, 4.71875, 0.1153564453125, 2.876953125, 6.74609375, 3.486328125, 1.6826171875, 3.064453125, 0.0052490234375, 0.0016412734985351562, 0.00513458251953125, 3.494140625, 0.1143798828125, 0.34033203125, 0.114013671875, 0.270263671875, 0.91943359375, 0.152587890625], "tokens": [351, 442, 25298, 410, 27, 3401, 8736, 922, 1793, 828, 2558, 10537, 26, 18317, 547, 2208, 10906, 26, 466, 293]}
{"line_number": 619, "line_type": "generated", "code": "\n     */\n    private static OffsetIdPrinter getIdPrinter() {\n        if (idPrinter == null) {\n            idPrinter = new OffsetIdPrinter();\n        }\n        return idPrinter;\n    }\n\n    /**\n     * Gets a printer/parser for managing the offset", "entropy": 0.22265625, "is_bug_line": false, "sus_score": 0.6687353849411011, "per_token_entropy": [1.7734375, 0.0694580078125, 0.03143310546875, 0.48193359375, 0.1680908203125, 1.51953125, 1.0283203125, 0.0298004150390625, 2.224609375, 0.1826171875, 0.03424072265625, 0.0038204193115234375, 0.12548828125, 0.7734375, 0.0095062255859375, 0.395263671875, 0.0205230712890625, 0.04278564453125, 0.0005292892456054688, 0.0023975372314453125, 0.00473785400390625, 0.15283203125, 0.09124755859375, 0.0013551712036132812, 0.0010547637939453125, 0.1070556640625, 0.01849365234375, 0.0012769699096679688, 0.0008783340454101562, 0.07073974609375, 0.07666015625, 0.0001087188720703125, 0.0225067138671875, 0.0028743743896484375, 0.00606536865234375, 2.6941299438476562e-05, 0.0004940032958984375, 0.0286102294921875, 0.0011119842529296875, 0.200439453125, 0.449462890625, 0.0150146484375, 0.00020885467529296875, 0.73486328125, 0.068115234375, 0.1610107421875, 0.0268707275390625, 0.0008978843688964844, 0.00415802001953125, 0.03076171875, 0.0180206298828125, 0.360595703125], "tokens": [275, 569, 284, 945, 907, 12073, 606, 14384, 19851, 14384, 346, 301, 291, 415, 308, 314, 14384, 610, 744, 27, 301, 324, 804, 14384, 280, 537, 12073, 606, 14384, 473, 291, 320, 291, 442, 804, 14384, 45, 284, 320, 446, 1022, 275, 319, 7124, 312, 23307, 33, 3922, 436, 26934, 322, 3401]}
{"line_number": 220, "line_type": "original", "code": "                id = printOffset(offset);", "entropy": 3.19140625, "is_bug_line": false, "sus_score": 0.6662744283676147, "per_token_entropy": [7.53125, 8.8359375, 0.067138671875, 8.15625, 0.006076812744140625, 0.05078125, 0.78515625, 0.10455322265625], "tokens": [2071, 804, 280, 1459, 3457, 26, 2881, 293]}
{"line_number": 220, "line_type": "generated", "code": "\n        } catch (ArithmeticException ex) {\n            throw new IllegalArgumentException(\"Offset too large: \" + hoursOffset + \":\" + minutesOffset);\n        }\n        return fixedOffsetZone(hoursOffset + \":\" + minutesOffset, offset);\n    }\n\n    /**\n     *", "entropy": 0.134033203125, "is_bug_line": false, "sus_score": 0.6662744283676147, "per_token_entropy": [0.393798828125, 0.0013742446899414062, 0.03167724609375, 0.007053375244140625, 0.055084228515625, 1.3470649719238281e-05, 0.2413330078125, 0.0019283294677734375, 0.0008554458618164062, 0.0277557373046875, 0.1175537109375, 0.004673004150390625, 0.004993438720703125, 0.371337890625, 1.0859375, 0.463134765625, 0.03515625, 0.2322998046875, 0.040740966796875, 0.0038051605224609375, 0.2213134765625, 0.0004031658172607422, 0.052764892578125, 0.2274169921875, 0.0032787322998046875, 0.017669677734375, 3.921985626220703e-05, 0.35205078125, 0.01006317138671875, 0.0005745887756347656, 0.073974609375, 0.45703125, 0.1358642578125, 0.0013113021850585938, 0.0002275705337524414, 0.50244140625, 0.70654296875, 0.001514434814453125, 0.3408203125, 0.044097900390625, 0.00016498565673828125, 0.0333251953125, 5.173683166503906e-05, 0.00795745849609375, 0.006092071533203125, 0.00600433349609375, 0.0152587890625, 0.00013053417205810547, 0.27099609375, 0.355712890625, 0.00536346435546875, 6.67572021484375e-05], "tokens": [291, 320, 2368, 308, 37375, 984, 538, 27, 301, 324, 1422, 537, 12137, 440, 3457, 5133, 7622, 44, 313, 474, 11632, 3457, 474, 17917, 474, 10135, 3457, 293, 291, 320, 291, 442, 5253, 3457, 6767, 26, 14991, 3457, 474, 17917, 474, 10135, 3457, 30, 3401, 293, 284, 320, 446, 1022, 275, 319]}
{"line_number": 216, "line_type": "original", "code": "            int offset = parseOffset(id);", "entropy": 2.3359375, "is_bug_line": false, "sus_score": 0.6602323651313782, "per_token_entropy": [4.31640625, 6.1875, 2.37109375, 0.376708984375, 6.375, 0.058807373046875, 0.1112060546875, 0.52099609375, 0.7138671875], "tokens": [1468, 629, 3401, 280, 3185, 3457, 26, 314, 293]}
{"line_number": 216, "line_type": "generated", "code": "\n                offset = -hoursInMinutes;\n            } else {\n                minutesOffset = FieldUtils.safeAdd(hoursInMinutes, minutesOffset);", "entropy": 0.169189453125, "is_bug_line": false, "sus_score": 0.6602323651313782, "per_token_entropy": [0.87939453125, 0.56591796875, 0.00743865966796875, 1.1513671875, 1.28125, 0.2509765625, 0.00010943412780761719, 0.134033203125, 0.12060546875, 0.0005321502685546875, 0.013427734375, 0.089599609375, 0.1986083984375, 0.136474609375, 0.00396728515625, 0.002307891845703125, 0.0029239654541015625, 2.86102294921875e-06, 7.30752944946289e-05, 9.1552734375e-05, 0.0022296905517578125, 0.0008983612060546875, 0.0394287109375, 0.0015668869018554688, 0.0005030632019042969, 0.00015485286712646484, 0.0210723876953125, 2.7894973754882812e-05, 0.0010957717895507812], "tokens": [400, 3401, 280, 429, 14991, 383, 16338, 45, 324, 320, 813, 301, 400, 10135, 3457, 280, 5692, 2755, 32, 4770, 1103, 26, 14991, 383, 16338, 30, 10135, 3457, 293]}
{"line_number": 283, "line_type": "original", "code": "        String id = printOffset(millisOffset);", "entropy": 2.650390625, "is_bug_line": true, "sus_score": 0.6563180088996887, "per_token_entropy": [7.05859375, 7.609375, 2.064453125, 0.1773681640625, 8.03125, 0.007659912109375, 0.04046630859375, 1.3115234375, 0.0223388671875, 0.1806640625], "tokens": [351, 892, 804, 280, 1459, 3457, 26, 36916, 3457, 293]}
{"line_number": 283, "line_type": "generated", "code": "\n                }\n            }\n        }\n\n        throw new IllegalArgumentException(\"Unknown time zone ID: \" + id);\n    }\n\n    /**\n     * Gets a time zone instance for a Java time zone.\n     *\n     * @param zone  the zone to convert, not null", "entropy": 0.341552734375, "is_bug_line": true, "sus_score": 0.6563180088996887, "per_token_entropy": [1.603515625, 0.0164031982421875, 0.0361328125, 0.00019240379333496094, 0.08953857421875, 0.0003230571746826172, 0.677734375, 1.4267578125, 0.00821685791015625, 0.0260162353515625, 0.040374755859375, 1.46875, 0.01427459716796875, 0.00518035888671875, 0.67529296875, 0.03717041015625, 0.07159423828125, 0.004482269287109375, 0.4599609375, 0.0433349609375, 0.0267791748046875, 0.0004405975341796875, 0.2188720703125, 0.231201171875, 0.0152130126953125, 0.00011837482452392578, 0.72802734375, 0.32177734375, 0.12060546875, 0.0020751953125, 0.0714111328125, 0.58984375, 0.8544921875, 1.4208984375, 0.90771484375, 0.032623291015625, 1.291015625, 0.0687255859375, 0.00018537044525146484, 1.7490234375, 2.9921531677246094e-05, 0.016876220703125, 0.0094146728515625, 0.448486328125, 0.130126953125, 0.006805419921875, 0.36474609375, 0.036041259765625, 0.033843994140625, 0.03955078125, 1.3271484375, 0.002925872802734375], "tokens": [400, 320, 324, 320, 291, 320, 584, 1422, 537, 12137, 440, 5842, 1133, 10790, 2484, 44, 313, 474, 804, 293, 284, 320, 446, 1022, 275, 319, 7124, 312, 1133, 10790, 1980, 436, 312, 4949, 1133, 10790, 32, 275, 319, 275, 319, 477, 753, 10790, 225, 322, 10790, 372, 4483, 30, 646, 744]}
{"line_number": 265, "line_type": "original", "code": "                minutesOffset = FieldUtils.safeAdd(hoursInMinutes, -minutesOffset);", "entropy": 1.94921875, "is_bug_line": true, "sus_score": 0.6555582284927368, "per_token_entropy": [6.80859375, 12.609375, 1.009765625, 0.11590576171875, 1.26171875, 5.9604644775390625e-05, 0.00027251243591308594, 0.004047393798828125, 1.1748046875, 0.016693115234375, 0.3564453125, 0.041961669921875, 0.01715087890625, 0.0047454833984375, 8.4453125, 2.96875, 0.2420654296875, 0.0141143798828125], "tokens": [2071, 10135, 3457, 280, 5692, 2755, 32, 4770, 1103, 26, 14991, 383, 16338, 30, 429, 18461, 3457, 293]}
{"line_number": 265, "line_type": "generated", "code": "\n        } else {\n            dtz = getProvider().getZone(id);\n        }\n        if (dtz == null) {\n            dtz = getProvider().getZone(id, new SimpleProviderContext(zone));\n        }\n        if (dt", "entropy": 0.3857421875, "is_bug_line": true, "sus_score": 0.6555582284927368, "per_token_entropy": [0.475830078125, 0.03448486328125, 1.556640625, 0.390869140625, 0.249755859375, 0.4892578125, 2.944469451904297e-05, 0.00021922588348388672, 1.1943359375, 0.2008056640625, 0.0303955078125, 0.0989990234375, 0.822265625, 0.00830841064453125, 0.486572265625, 0.0567626953125, 0.294921875, 0.00014698505401611328, 0.42236328125, 0.09014892578125, 0.0030460357666015625, 0.0027751922607421875, 2.7418136596679688e-06, 0.26318359375, 0.0016803741455078125, 0.03570556640625, 0.0010957717895507812, 0.11029052734375, 1.818359375, 0.0016422271728515625, 0.00017440319061279297, 1.2421875, 0.335693359375, 0.031005859375, 0.06390380859375, 0.01055145263671875, 0.043426513671875, 1.40625, 1.068359375, 1.849609375, 1.0380859375, 0.86328125, 1.2021484375, 0.31591796875, 0.7705078125, 0.219482421875, 0.1851806640625, 0.00026607513427734375, 0.1514892578125, 0.1219482421875, 0.002262115478515625, 0.00379180908203125], "tokens": [291, 320, 813, 301, 324, 8793, 108, 280, 622, 2570, 922, 371, 6767, 26, 314, 293, 291, 320, 291, 415, 308, 2632, 108, 610, 744, 27, 301, 324, 8793, 108, 280, 622, 2570, 922, 371, 6767, 26, 314, 30, 537, 7155, 2570, 1222, 26, 5634, 876, 291, 320, 291, 415, 308, 2632]}
{"line_number": 269, "line_type": "original", "code": "            offset = FieldUtils.safeMultiply(minutesOffset, DateTimeConstants.MILLIS_PER_MINUTE);", "entropy": 1.3447265625, "is_bug_line": false, "sus_score": 0.6484971046447754, "per_token_entropy": [5.234375, 10.1171875, 0.298095703125, 4.33984375, 1.8715858459472656e-05, 0.0002124309539794922, 0.0271759033203125, 2.166015625, 0.033203125, 5.48828125, 1.4296875, 0.0153961181640625, 1.38671875, 0.2469482421875, 0.0009183883666992188, 0.0323486328125, 0.00016224384307861328, 2.6226043701171875e-05, 2.86102294921875e-06, 8.547306060791016e-05, 1.0967254638671875e-05, 0.07940673828125, 0.03204345703125], "tokens": [1468, 3401, 280, 5692, 2755, 32, 4770, 27732, 26, 18461, 3457, 30, 6666, 5229, 32, 63, 13142, 1296, 81, 3687, 81, 47229, 293]}
{"line_number": 269, "line_type": "generated", "code": "\n        }\n        if (dtz == null) {\n            throw new IllegalArgumentException(\"The time zone id '\" + id + \"' is not recognised\");\n        }\n        return dtz;\n    }\n\n    /**\n     * Gets a time zone instance for a JDK Time", "entropy": 0.1463623046875, "is_bug_line": false, "sus_score": 0.6484971046447754, "per_token_entropy": [0.2376708984375, 0.140869140625, 0.2044677734375, 0.1844482421875, 0.002719879150390625, 0.006114959716796875, 4.0411949157714844e-05, 0.1580810546875, 0.0032024383544921875, 0.026519775390625, 0.0004906654357910156, 0.0228424072265625, 0.3798828125, 0.00800323486328125, 0.01525115966796875, 0.0245513916015625, 0.2315673828125, 0.81201171875, 0.0013294219970703125, 0.43701171875, 0.0570068359375, 0.017181396484375, 0.053466796875, 0.015960693359375, 0.002330780029296875, 0.0087432861328125, 0.0021209716796875, 0.00191497802734375, 4.172325134277344e-06, 0.01267242431640625, 0.0321044921875, 4.8041343688964844e-05, 0.07354736328125, 0.070068359375, 0.004138946533203125, 5.7220458984375e-06, 0.012939453125, 0.0323486328125, 0.0003643035888671875, 0.2244873046875, 0.1898193359375, 0.01494598388671875, 0.00011157989501953125, 0.47509765625, 0.35498046875, 0.11895751953125, 0.0015048980712890625, 0.0714111328125, 0.5595703125, 0.83203125, 1.3388671875, 0.1387939453125], "tokens": [291, 320, 291, 415, 308, 2632, 108, 610, 744, 27, 301, 324, 1422, 537, 12137, 440, 1318, 1133, 10790, 804, 6113, 474, 804, 474, 5335, 438, 646, 37768, 8593, 724, 291, 320, 291, 442, 8793, 108, 45, 284, 320, 446, 1022, 275, 319, 7124, 312, 1133, 10790, 1980, 436, 312, 33090, 3717]}
{"line_number": 221, "line_type": "original", "code": "                return fixedOffsetZone(id, offset);", "entropy": 2.28125, "is_bug_line": false, "sus_score": 0.6470480561256409, "per_token_entropy": [7.72265625, 3.53125, 7.3984375, 0.3701171875, 0.21484375, 0.95263671875, 1.80078125, 0.220947265625, 0.322021484375, 0.28515625], "tokens": [2071, 442, 5253, 3457, 6767, 26, 314, 30, 3401, 293]}
{"line_number": 221, "line_type": "generated", "code": "\n        }\n        return forOffsetMillis(offset);\n    }\n\n    /**\n     * Gets a time zone instance for the specified offset to UTC in milliseconds.\n     * <p>\n     * This factory is a convenient way of constructing zones with a fixed offset.\n    ", "entropy": 0.07025146484375, "is_bug_line": false, "sus_score": 0.6470480561256409, "per_token_entropy": [0.152099609375, 0.0015020370483398438, 0.071533203125, 0.48388671875, 0.63037109375, 0.00884246826171875, 0.02142333984375, 0.0029296875, 0.016357421875, 0.006000518798828125, 0.0328369140625, 0.00012862682342529297, 0.06463623046875, 0.09625244140625, 0.0007843971252441406, 6.29425048828125e-05, 0.140380859375, 0.032806396484375, 0.045013427734375, 0.0003192424774169922, 0.044281005859375, 0.1976318359375, 0.05303955078125, 0.0263519287109375, 0.31005859375, 0.046875, 0.0009927749633789062, 0.142333984375, 0.211181640625, 0.025390625, 0.0031185150146484375, 3.325939178466797e-05, 0.60302734375, 0.00034356117248535156, 8.285045623779297e-05, 0.00023281574249267578, 3.635883331298828e-05, 0.053558349609375, 0.0546875, 0.01049041748046875, 0.018829345703125, 0.005519866943359375, 0.00021350383758544922, 0.001094818115234375, 0.0006537437438964844, 0.0015230178833007812, 0.0032825469970703125, 0.0030612945556640625, 0.0013990402221679688, 0.0120086669921875, 0.00885772705078125, 0.00475311279296875], "tokens": [291, 320, 291, 442, 436, 3457, 10906, 26, 2881, 293, 284, 320, 446, 1022, 275, 319, 7124, 312, 1133, 10790, 1980, 436, 322, 3191, 3401, 372, 17197, 328, 18574, 32, 275, 319, 333, 98, 48, 275, 319, 1348, 7763, 438, 312, 27388, 3352, 432, 44654, 32019, 623, 312, 5253, 3401, 32, 275]}
{"line_number": 273, "line_type": "original", "code": "        return forOffsetMillis(offset);", "entropy": 2.1484375, "is_bug_line": false, "sus_score": 0.6453469395637512, "per_token_entropy": [2.96875, 1.9111328125, 3.666015625, 3.279296875, 0.09613037109375, 0.03753662109375, 4.5, 0.72265625], "tokens": [351, 442, 436, 3457, 10906, 26, 2881, 293]}
{"line_number": 273, "line_type": "generated", "code": "\n        return null;\n    }\n\n    /**\n     * Gets a time zone instance from an ID using a map of aliases to time\n     * zone IDs.\n     * <p>\n     * This method is not designed to parse time zones with rules created by\n     *", "entropy": 0.546875, "is_bug_line": false, "sus_score": 0.6453469395637512, "per_token_entropy": [0.9375, 1.455078125, 2.6875, 0.002593994140625, 0.056884765625, 0.0006608963012695312, 0.27490234375, 0.1846923828125, 0.01346588134765625, 0.00016033649444580078, 0.459716796875, 0.33740234375, 0.10986328125, 0.00189971923828125, 0.078369140625, 1.763671875, 0.61474609375, 1.16015625, 2.716796875, 0.498046875, 2.828125, 0.46240234375, 1.4521484375, 1.6005859375, 2.166015625, 1.5595703125, 5.1140785217285156e-05, 0.1351318359375, 0.564453125, 0.1422119140625, 0.70556640625, 0.0006880760192871094, 0.5380859375, 0.002132415771484375, 0.00084686279296875, 0.0016565322875976562, 7.808208465576172e-05, 0.6220703125, 0.40869140625, 0.73583984375, 0.6708984375, 0.1053466796875, 0.0164642333984375, 0.13916015625, 0.0802001953125, 0.037994384765625, 0.0382080078125, 0.01557159423828125, 0.0181884765625, 0.022125244140625, 0.0066070556640625, 3.600120544433594e-05], "tokens": [291, 442, 744, 45, 284, 320, 446, 1022, 275, 319, 7124, 312, 1133, 10790, 1980, 645, 600, 2484, 1471, 312, 1992, 432, 20664, 372, 1133, 275, 319, 10790, 15342, 32, 275, 319, 333, 98, 48, 275, 319, 1348, 1411, 438, 646, 15764, 372, 3185, 1133, 32019, 623, 7019, 3272, 810, 275, 319]}
{"line_number": 267, "line_type": "original", "code": "                minutesOffset = FieldUtils.safeAdd(hoursInMinutes, minutesOffset);", "entropy": 1.677734375, "is_bug_line": true, "sus_score": 0.6451011896133423, "per_token_entropy": [7.70703125, 13.0390625, 1.0927734375, 0.146484375, 1.744140625, 2.777576446533203e-05, 0.00029087066650390625, 0.00859832763671875, 1.3515625, 0.0111846923828125, 1.126953125, 0.1414794921875, 0.031463623046875, 0.005817413330078125, 1.9755859375, 0.099853515625, 0.0274658203125], "tokens": [2071, 10135, 3457, 280, 5692, 2755, 32, 4770, 1103, 26, 14991, 383, 16338, 30, 10135, 3457, 293]}
{"line_number": 267, "line_type": "generated", "code": "\n        if (dtz == null) {\n            dtz = cProvider.getZone(id);\n        }\n        if (dtz == null) {\n            throw new IllegalArgumentException(\"The datetime zone id '\" + id + \"' is not recognised\");\n       ", "entropy": 0.085205078125, "is_bug_line": true, "sus_score": 0.6451011896133423, "per_token_entropy": [0.5419921875, 0.350341796875, 0.01010894775390625, 0.00933074951171875, 4.792213439941406e-05, 0.19677734375, 0.0027408599853515625, 0.0703125, 0.0011959075927734375, 0.08782958984375, 0.3623046875, 0.0002244710922241211, 0.00023615360260009766, 0.29248046875, 0.004962921142578125, 0.0017957687377929688, 0.0028285980224609375, 0.0033969879150390625, 0.0032253265380859375, 0.025238037109375, 0.007015228271484375, 0.12451171875, 0.00655364990234375, 0.323486328125, 0.103515625, 0.0023136138916015625, 0.0028553009033203125, 8.368492126464844e-05, 0.18310546875, 0.0021266937255859375, 0.0244598388671875, 0.0006079673767089844, 0.045867919921875, 0.4072265625, 0.007083892822265625, 0.014312744140625, 0.0246734619140625, 0.14794921875, 0.8330078125, 0.0019741058349609375, 0.027923583984375, 0.02667236328125, 0.0204620361328125, 0.0694580078125, 0.0163421630859375, 0.002391815185546875, 0.0036602020263671875, 0.00106048583984375, 0.001644134521484375, 5.7220458984375e-06, 0.01155853271484375, 0.0191497802734375], "tokens": [291, 415, 308, 2632, 108, 610, 744, 27, 301, 324, 8793, 108, 280, 281, 2570, 32, 371, 6767, 26, 314, 293, 291, 320, 291, 415, 308, 2632, 108, 610, 744, 27, 301, 324, 1422, 537, 12137, 440, 1318, 7138, 10790, 804, 6113, 474, 804, 474, 5335, 438, 646, 37768, 8593, 724, 291]}
{"line_number": 2357, "line_type": "original", "code": "", "entropy": 0.5927734375, "is_bug_line": false, "sus_score": 0.6409993171691895, "per_token_entropy": [0.5927734375], "tokens": [203]}
{"line_number": 2357, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6409993171691895, "per_token_entropy": [], "tokens": []}
{"line_number": 359, "line_type": "original", "code": "            zone = ref.get();", "entropy": 2.837890625, "is_bug_line": false, "sus_score": 0.6401253342628479, "per_token_entropy": [8.2421875, 5.66796875, 0.476806640625, 5.40234375, 0.04864501953125, 0.005588531494140625, 0.01129913330078125], "tokens": [1468, 10790, 280, 2488, 32, 371, 473]}
{"line_number": 359, "line_type": "generated", "code": "\n    private static void setProvider0(Provider provider) {\n        if (provider == null) {\n            provider = new DefaultProvider();\n        }\n        cProvider = provider;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Parses an offset in the form +/-", "entropy": 0.302734375, "is_bug_line": false, "sus_score": 0.6401253342628479, "per_token_entropy": [0.70654296875, 0.7412109375, 0.008575439453125, 0.22705078125, 0.022003173828125, 0.0001436471939086914, 0.0011358261108398438, 0.0055999755859375, 0.010711669921875, 0.0140533447265625, 0.00315093994140625, 0.1466064453125, 0.1402587890625, 0.394775390625, 0.0214080810546875, 0.02740478515625, 0.11297607421875, 0.016448974609375, 0.0234832763671875, 0.00341033935546875, 0.09881591796875, 0.07757568359375, 0.0005016326904296875, 1.2197265625, 0.64013671875, 0.5439453125, 0.0283050537109375, 0.04095458984375, 0.0002760887145996094, 0.182373046875, 1.203125, 0.0083160400390625, 0.0036602020263671875, 0.003910064697265625, 0.0009851455688476562, 1.6640625, 0.0035266876220703125, 0.26318359375, 0.50341796875, 0.0166473388671875, 0.0226898193359375, 0.2010498046875, 0.00562286376953125, 0.00010371208190917969, 1.6806640625, 1.3271484375, 0.11956787109375, 2.083984375, 0.267333984375, 0.1600341796875, 0.68115234375, 0.0643310546875], "tokens": [284, 945, 907, 763, 739, 2570, 34, 26, 2570, 6887, 27, 301, 291, 415, 308, 6385, 610, 744, 27, 301, 324, 6887, 280, 537, 4101, 2570, 473, 291, 320, 291, 281, 2570, 280, 6887, 45, 284, 320, 446, 434, 42510, 284, 1022, 275, 319, 44280, 600, 3401, 328, 322, 2234, 474, 15913]}
{"line_number": 2330, "line_type": "original", "code": "", "entropy": 0.5927734375, "is_bug_line": false, "sus_score": 0.6390536427497864, "per_token_entropy": [0.5927734375], "tokens": [203]}
{"line_number": 2330, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6390536427497864, "per_token_entropy": [], "tokens": []}
{"line_number": 2315, "line_type": "original", "code": "", "entropy": 0.5927734375, "is_bug_line": false, "sus_score": 0.6380191445350647, "per_token_entropy": [0.5927734375], "tokens": [203]}
{"line_number": 2315, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6380191445350647, "per_token_entropy": [], "tokens": []}
{"line_number": 2358, "line_type": "original", "code": "", "entropy": 0.5927734375, "is_bug_line": false, "sus_score": 0.6380167603492737, "per_token_entropy": [0.5927734375], "tokens": [203]}
{"line_number": 2358, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6380167603492737, "per_token_entropy": [], "tokens": []}
{"line_number": 607, "line_type": "original", "code": "                return null;", "entropy": 3.912109375, "is_bug_line": false, "sus_score": 0.6374955773353577, "per_token_entropy": [7.33203125, 0.1328125, 8.1640625, 0.017425537109375], "tokens": [2071, 442, 744, 45]}
{"line_number": 607, "line_type": "generated", "code": "\n        }\n\n        int millis = offset / DateTimeConstants.MILLIS_PER_SECOND;\n        buf.append('.');\n        FormatUtils.appendPaddedInteger(buf, millis, 3);\n        return buf.toString();\n    }\n\n    /**\n     *", "entropy": 0.08819580078125, "is_bug_line": false, "sus_score": 0.6374955773353577, "per_token_entropy": [0.572265625, 0.011474609375, 0.265625, 0.4013671875, 0.0147857666015625, 0.0010175704956054688, 0.0255126953125, 0.1158447265625, 0.2939453125, 0.012542724609375, 3.0875205993652344e-05, 0.0004978179931640625, 2.0265579223632812e-06, 1.4066696166992188e-05, 1.2755393981933594e-05, 6.9141387939453125e-06, 0.00024211406707763672, 0.79150390625, 0.00162506103515625, 0.024871826171875, 0.1617431640625, 0.0001710653305053711, 0.00048160552978515625, 0.06353759765625, 0.01934814453125, 0.032989501953125, 6.508827209472656e-05, 8.7738037109375e-05, 0.001895904541015625, 0.007007598876953125, 4.76837158203125e-07, 0.0010824203491210938, 0.0003955364227294922, 0.000492095947265625, 4.315376281738281e-05, 0.00304412841796875, 0.003322601318359375, 0.0173797607421875, 0.0241241455078125, 0.0036258697509765625, 0.32177734375, 0.1505126953125, 0.0005941390991210938, 0.0001043081283569336, 5.3882598876953125e-05, 0.0014028549194335938, 0.02581787109375, 0.00396728515625, 0.499755859375, 0.685546875, 0.023590087890625, 0.00012886524200439453], "tokens": [291, 320, 584, 629, 42302, 280, 3401, 517, 6666, 5229, 32, 63, 13142, 1296, 81, 3687, 81, 23790, 45, 291, 4845, 32, 1689, 49129, 291, 10276, 2755, 32, 1689, 66, 11043, 3061, 26, 1954, 30, 42302, 30, 225, 37, 293, 291, 442, 4845, 32, 3108, 473, 284, 320, 446, 1022, 275, 319]}
{"line_number": 2367, "line_type": "original", "code": "", "entropy": 0.5927734375, "is_bug_line": false, "sus_score": 0.6369045972824097, "per_token_entropy": [0.5927734375], "tokens": [203]}
{"line_number": 2367, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6369045972824097, "per_token_entropy": [], "tokens": []}
{"line_number": 636, "line_type": "original", "code": "            buf.append('-');", "entropy": 2.927734375, "is_bug_line": false, "sus_score": 0.6365742087364197, "per_token_entropy": [4.95703125, 9.5, 0.08709716796875, 0.10711669921875, 2.8125, 0.09783935546875], "tokens": [1468, 4845, 32, 1689, 12605, 895]}
{"line_number": 636, "line_type": "generated", "code": "\n     * \n     * @param id  the time zone id, not null\n     */\n    public DateTimeZoneBuilder(String id) {\n        if (id == null) {\n            throw new IllegalArgumentException(\"The id must not be null\");\n        }\n        iID", "entropy": 0.1893310546875, "is_bug_line": false, "sus_score": 0.6365742087364197, "per_token_entropy": [0.486328125, 0.43505859375, 0.42919921875, 0.0012187957763671875, 0.0026378631591796875, 0.0081329345703125, 0.385009765625, 0.033721923828125, 0.055633544921875, 0.791015625, 0.061920166015625, 0.0638427734375, 0.35986328125, 0.61474609375, 0.046783447265625, 0.01549530029296875, 0.1448974609375, 0.0249786376953125, 0.8291015625, 0.9033203125, 0.00040531158447265625, 0.264404296875, 0.030517578125, 0.01039886474609375, 0.0011196136474609375, 0.0056610107421875, 0.0033740997314453125, 0.0914306640625, 0.99609375, 0.006015777587890625, 0.003620147705078125, 0.01441192626953125, 0.00036406517028808594, 0.01849365234375, 0.00119781494140625, 0.02978515625, 0.0125274658203125, 0.0018138885498046875, 0.26904296875, 0.1051025390625, 0.7802734375, 0.9443359375, 0.1639404296875, 0.003021240234375, 7.843971252441406e-05, 0.006069183349609375, 0.0130767822265625, 0.02166748046875, 0.00011909008026123047, 0.115234375, 0.2315673828125, 0.00241851806640625], "tokens": [275, 319, 5384, 319, 477, 753, 804, 225, 322, 1133, 10790, 804, 30, 646, 744, 275, 569, 284, 562, 6666, 6767, 1796, 26, 652, 804, 27, 301, 291, 415, 308, 314, 610, 744, 27, 301, 324, 1422, 537, 12137, 440, 1318, 804, 2298, 646, 526, 744, 724, 291, 320, 291, 595, 779]}
{"line_number": 2309, "line_type": "original", "code": "", "entropy": 0.5927734375, "is_bug_line": false, "sus_score": 0.6353118419647217, "per_token_entropy": [0.5927734375], "tokens": [203]}
{"line_number": 2309, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6353118419647217, "per_token_entropy": [], "tokens": []}
{"line_number": 357, "line_type": "original", "code": "        Reference<DateTimeZone> ref = iFixedOffsetCache.get(id);", "entropy": 1.0654296875, "is_bug_line": false, "sus_score": 0.6352246403694153, "per_token_entropy": [3.251953125, 6.859375, 1.412109375, 0.326416015625, 0.002544403076171875, 0.3369140625, 0.6396484375, 0.153076171875, 0.98681640625, 1.1943359375, 0.0213623046875, 0.0115814208984375, 1.447265625, 0.32177734375, 0.53271484375, 0.595703125, 0.00820159912109375], "tokens": [351, 9494, 46, 4852, 6767, 48, 2488, 280, 595, 8222, 3457, 2597, 32, 371, 26, 314, 293]}
{"line_number": 357, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Sets the zone provider factory.\n     * <p>\n     * The zone provider is a pluggable instance factory that supplies the\n     * actual instances of DateTimeZone.\n     * \n     * @param provider  provider to use,", "entropy": 0.0595703125, "is_bug_line": false, "sus_score": 0.6352246403694153, "per_token_entropy": [0.300537109375, 0.01271820068359375, 0.2274169921875, 1.126953125, 0.00627899169921875, 0.00010061264038085938, 0.2486572265625, 0.006198883056640625, 0.12139892578125, 0.0014171600341796875, 0.0650634765625, 0.35791015625, 0.03399658203125, 0.0022411346435546875, 0.241455078125, 7.212162017822266e-05, 6.568431854248047e-05, 0.0009131431579589844, 0.00010192394256591797, 0.11480712890625, 0.006420135498046875, 0.0005216598510742188, 0.0012750625610351562, 0.000385284423828125, 0.00023484230041503906, 2.396106719970703e-05, 0.0007767677307128906, 0.0002149343490600586, 8.368492126464844e-05, 7.414817810058594e-05, 2.384185791015625e-07, 0.00020003318786621094, 0.002994537353515625, 1.6927719116210938e-05, 0.00016820430755615234, 0.00017201900482177734, 1.2636184692382812e-05, 0.00997161865234375, 4.4345855712890625e-05, 0.004108428955078125, 0.03582763671875, 0.0027751922607421875, 0.0872802734375, 0.00015354156494140625, 0.0013322830200195312, 0.004978179931640625, 0.007755279541015625, 0.01070404052734375, 0.0221710205078125, 0.0015363693237304688, 0.0022029876708984375, 0.0256805419921875], "tokens": [284, 320, 446, 1022, 275, 319, 9013, 322, 10790, 6887, 7763, 32, 275, 319, 333, 98, 48, 275, 319, 886, 10790, 6887, 438, 312, 20527, 15329, 1980, 7763, 688, 11066, 6827, 322, 275, 319, 4648, 6942, 432, 6666, 6767, 32, 275, 319, 5384, 319, 477, 753, 6887, 225, 6887, 372, 793, 30]}
{"line_number": 2453, "line_type": "original", "code": "", "entropy": 0.5927734375, "is_bug_line": false, "sus_score": 0.6347059607505798, "per_token_entropy": [0.5927734375], "tokens": [203]}
{"line_number": 2453, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6347059607505798, "per_token_entropy": [], "tokens": []}
{"line_number": 605, "line_type": "original", "code": "        Chronology chrono = new BaseChronology() {", "entropy": 1.28125, "is_bug_line": false, "sus_score": 0.6337112188339233, "per_token_entropy": [3.40234375, 5.92578125, 0.11395263671875, 0.000247955322265625, 0.223876953125, 0.0435791015625, 3.40234375, 3.001953125, 0.05267333984375, 8.678436279296875e-05, 1.9311904907226562e-05, 0.413330078125, 0.0750732421875], "tokens": [351, 1884, 2558, 10537, 45868, 280, 537, 3772, 828, 2558, 10537, 346, 301]}
{"line_number": 605, "line_type": "generated", "code": "\n        return buf.toString();\n    }", "entropy": 0.163330078125, "is_bug_line": false, "sus_score": 0.6337112188339233, "per_token_entropy": [0.65869140625, 0.43212890625, 0.046417236328125, 0.0009016990661621094, 0.0009760856628417969, 0.0185546875, 0.143310546875, 0.005832672119140625], "tokens": [291, 442, 4845, 32, 3108, 473, 284, 320]}
