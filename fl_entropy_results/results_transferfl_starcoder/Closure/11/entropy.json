{"line_number": 1165, "line_type": "original", "code": "      for (ObjectType interfaceType : ctorType.getExtendedInterfaces()) {", "entropy": 1.927734375, "is_bug_line": false, "sus_score": 0.5814239382743835, "per_token_entropy": [4.44140625, 6.40625, 0.0164337158203125, 0.92919921875, 2.06640625, 0.119873046875, 0.08428955078125, 0.11492919921875, 11.2109375, 0.0372314453125, 0.067138671875, 3.337890625, 0.006561279296875, 0.007568359375, 0.07574462890625], "tokens": [647, 436, 308, 15898, 2568, 620, 499, 34484, 620, 32, 371, 14861, 12295, 1157, 301]}
{"line_number": 1165, "line_type": "generated", "code": "\n    }\n  }", "entropy": 0.10162353515625, "is_bug_line": false, "sus_score": 0.5814239382743835, "per_token_entropy": [0.2396240234375, 0.0246124267578125, 0.1390380859375, 0.003108978271484375], "tokens": [284, 320, 334, 320]}
{"line_number": 1142, "line_type": "original", "code": "        && !declaredOverride", "entropy": 5.6015625, "is_bug_line": false, "sus_score": 0.5566415190696716, "per_token_entropy": [5.890625, 13.40625, 5.046875, 2.826171875, 0.8369140625], "tokens": [351, 962, 653, 26549, 1788]}
{"line_number": 1142, "line_type": "generated", "code": "\n   * property with the given name is defined in the constructor's\n   * prototype chain.\n   *\n   * @param ctorOrInterfaceType The constructor or interface type\n   *     for which to look up the property\n   * @param propertyName The name of the", "entropy": 0.64794921875, "is_bug_line": false, "sus_score": 0.5566415190696716, "per_token_entropy": [0.619140625, 0.007556915283203125, 1.404296875, 2.662109375, 0.1837158203125, 0.0986328125, 0.0615234375, 0.853515625, 2.017578125, 0.92333984375, 1.53515625, 1.7431640625, 1.4013671875, 1.8935546875, 0.00032067298889160156, 0.422119140625, 1.224609375, 0.7177734375, 0.249267578125, 0.480224609375, 0.53173828125, 0.004150390625, 0.2890625, 0.09075927734375, 0.4794921875, 0.65625, 0.129150390625, 0.923828125, 0.8466796875, 0.450439453125, 0.1998291015625, 0.0323486328125, 0.19580078125, 1.1494140625, 0.005611419677734375, 0.91357421875, 2.130859375, 0.04241943359375, 0.767578125, 2.2890625, 0.81103515625, 0.09112548828125, 0.365234375, 1.09765625, 0.0050811767578125, 0.0072174072265625, 0.013946533203125, 0.32568359375, 0.084716796875, 0.258056640625, 0.009185791015625, 0.006847381591796875], "tokens": [664, 319, 2804, 623, 322, 2702, 636, 438, 3417, 328, 322, 4374, 1182, 664, 319, 21666, 8241, 32, 664, 319, 664, 319, 477, 753, 34484, 1527, 3041, 620, 886, 4374, 556, 2568, 827, 664, 319, 262, 436, 1510, 372, 2779, 973, 322, 2804, 664, 319, 477, 753, 28859, 886, 636, 432, 322]}
{"line_number": 736, "line_type": "original", "code": "        break;", "entropy": 5.31640625, "is_bug_line": false, "sus_score": 0.5370111465454102, "per_token_entropy": [6.9609375, 8.96875, 0.0244598388671875], "tokens": [351, 1626, 45]}
{"line_number": 736, "line_type": "generated", "code": "\n        }\n        break;\n\n      // These nodes are typed during the type inference.\n      case Token.CALL:\n      case Token.NEW:\n        if (n.getJSType()!= null) { // If we didn't run type inference.\n          ensure", "entropy": 0.19091796875, "is_bug_line": false, "sus_score": 0.5370111465454102, "per_token_entropy": [0.14794921875, 0.0023593902587890625, 0.37158203125, 0.367919921875, 0.0002779960632324219, 0.045989990234375, 1.212890625, 0.88037109375, 0.16845703125, 0.9638671875, 0.58251953125, 0.98193359375, 0.365234375, 0.08251953125, 0.1414794921875, 0.09869384765625, 0.0265350341796875, 0.061187744140625, 0.0005645751953125, 1.2636184692382812e-05, 1.033203125, 0.0008068084716796875, 0.495849609375, 0.00213623046875, 0.00033926963806152344, 4.649162292480469e-06, 0.09716796875, 0.0008459091186523438, 0.50341796875, 0.7216796875, 0.050689697265625, 0.049957275390625, 0.0005388259887695312, 0.11102294921875, 0.0001474618911743164, 1.3828277587890625e-05, 0.0010404586791992188, 0.06207275390625, 0.0006031990051269531, 0.0064849853515625, 0.001102447509765625, 0.12396240234375, 0.021026611328125, 0.0037841796875, 0.01030731201171875, 0.00011837482452392578, 0.0019321441650390625, 0.0010328292846679688, 0.0002040863037109375, 0.0039215087890625, 0.01258087158203125, 0.10888671875], "tokens": [291, 320, 291, 1626, 45, 1687, 434, 8204, 5166, 884, 20639, 5929, 322, 827, 22410, 32, 397, 1135, 6512, 32, 5038, 44, 397, 1135, 6512, 32, 11356, 44, 291, 415, 308, 96, 32, 371, 4624, 620, 346, 863, 744, 27, 301, 434, 1670, 996, 9075, 1330, 1420, 827, 22410, 32, 616, 7279]}
{"line_number": 748, "line_type": "original", "code": "      case Token.CATCH:", "entropy": 2.451171875, "is_bug_line": false, "sus_score": 0.5361323952674866, "per_token_entropy": [5.875, 3.55859375, 0.005062103271484375, 0.003627777099609375, 5.24609375, 0.01837158203125], "tokens": [647, 1135, 6512, 32, 39410, 44]}
{"line_number": 748, "line_type": "generated", "code": "\n  }\n\n  private void visitObjLitKey(NodeTraversal t, Node key, Node n) {\n    if (!key.hasChildren()) {\n      return;\n    }\n    Node value = key.getFirstChild();\n    JSType valueType = getJS", "entropy": 0.34130859375, "is_bug_line": false, "sus_score": 0.5361323952674866, "per_token_entropy": [1.9697265625, 0.0657958984375, 0.256591796875, 0.9150390625, 0.477294921875, 0.1973876953125, 0.673828125, 0.0014429092407226562, 0.007122039794921875, 0.0100860595703125, 1.1494140625, 0.2496337890625, 0.005237579345703125, 2.4318695068359375e-05, 0.003063201904296875, 0.39697265625, 0.027099609375, 0.00490570068359375, 1.4033203125, 0.0030155181884765625, 0.004299163818359375, 0.006900787353515625, 1.314453125, 1.6875, 0.071044921875, 0.0007348060607910156, 1.853515625, 0.0008397102355957031, 0.083984375, 0.01338958740234375, 0.057525634765625, 0.484130859375, 0.0006570816040039062, 0.036834716796875, 3.254413604736328e-05, 0.44775390625, 0.73095703125, 0.5830078125, 0.04925537109375, 0.01229095458984375, 0.00041484832763671875, 0.72265625, 0.00026702880859375, 0.017913818359375, 0.09686279296875, 0.5537109375, 0.0002224445343017578, 0.91064453125, 0.01251220703125, 0.023834228515625, 0.15478515625, 0.0036373138427734375], "tokens": [334, 320, 719, 945, 763, 7725, 3273, 27472, 953, 26, 1212, 35699, 273, 30, 4004, 1202, 30, 4004, 310, 27, 301, 284, 415, 1429, 678, 32, 2040, 7640, 1157, 301, 397, 442, 45, 284, 320, 284, 4004, 786, 280, 1202, 32, 25657, 2931, 473, 284, 7750, 620, 786, 620, 280, 622, 4624]}
{"line_number": 1629, "line_type": "original", "code": "          (functionType.getReturnType().isUnknownType() ||", "entropy": 1.94921875, "is_bug_line": false, "sus_score": 0.5354703664779663, "per_token_entropy": [5.64453125, 7.4296875, 2.603515625, 1.0029296875, 0.0206756591796875, 2.78125, 3.068359375, 0.04571533203125, 0.30908203125, 1.646484375, 0.0013780593872070312, 0.159423828125, 0.630859375], "tokens": [2033, 308, 1126, 620, 32, 371, 28085, 922, 297, 5842, 620, 346, 1276]}
{"line_number": 1629, "line_type": "generated", "code": "\n      // If the parameter is optional, then it is legal to pass fewer\n      // arguments than the function type expects.\n      if (parameter.isOptionalArg() &&\n          arguments.hasNext()) {\n        continue;\n      }\n\n      // TODO(nicksan", "entropy": 0.76220703125, "is_bug_line": false, "sus_score": 0.5354703664779663, "per_token_entropy": [0.39599609375, 1.310546875, 2.291015625, 0.95166015625, 0.62109375, 0.64501953125, 1.568359375, 0.323974609375, 0.492919921875, 1.654296875, 1.5419921875, 1.8408203125, 0.496826171875, 2.255859375, 1.0380859375, 0.6005859375, 0.0003108978271484375, 0.31689453125, 0.1353759765625, 1.05859375, 1.7783203125, 1.62890625, 1.8818359375, 0.2001953125, 0.437255859375, 0.28515625, 0.1376953125, 0.365478515625, 0.64892578125, 0.142578125, 0.42431640625, 0.07745361328125, 1.060546875, 0.2335205078125, 0.8203125, 2.2265625, 0.003910064697265625, 0.00684356689453125, 0.3681640625, 0.0032939910888671875, 0.0292510986328125, 0.76708984375, 0.0034542083740234375, 0.042572021484375, 0.00011610984802246094, 0.984375, 0.564453125, 3.37890625, 0.426513671875, 1.16796875, 0.003002166748046875, 6.937980651855469e-05], "tokens": [397, 434, 1670, 322, 3395, 438, 5302, 30, 1615, 561, 438, 23452, 372, 3097, 36845, 397, 434, 4209, 2784, 322, 667, 827, 23119, 32, 397, 415, 308, 5609, 32, 297, 7556, 1765, 346, 962, 616, 4209, 32, 16421, 1157, 301, 291, 4036, 45, 397, 320, 1687, 434, 4296, 26, 96, 6758, 278]}
{"line_number": 1715, "line_type": "original", "code": "", "entropy": 3.892578125, "is_bug_line": false, "sus_score": 0.5344387888908386, "per_token_entropy": [3.892578125], "tokens": [203]}
{"line_number": 1715, "line_type": "generated", "code": "\n        break;\n\n      case Token.ASSIGN:\n        JSType jsType = getJSType(t.getEnclosingFunction());\n        if (jsType.isFunctionType()) {\n          FunctionType functionType = jsType.toMaybeFunctionType();\n          if (", "entropy": 0.26318359375, "is_bug_line": false, "sus_score": 0.5344387888908386, "per_token_entropy": [0.392578125, 1.849609375, 0.0007238388061523438, 0.16845703125, 0.15625, 0.00026226043701171875, 1.2159347534179688e-05, 0.25048828125, 1.044921875, 0.89208984375, 1.8359375, 0.00045299530029296875, 2.400390625, 0.09637451171875, 0.04364013671875, 0.1002197265625, 0.007781982421875, 0.0008473396301269531, 0.0033512115478515625, 0.307373046875, 0.0007648468017578125, 0.004917144775390625, 0.06011962890625, 2.2649765014648438e-06, 0.0235595703125, 0.007709503173828125, 0.46875, 0.3466796875, 0.07763671875, 0.0210113525390625, 3.4570693969726562e-06, 0.0345458984375, 0.0306854248046875, 0.0035915374755859375, 0.02923583984375, 0.0004127025604248047, 0.01947021484375, 0.11273193359375, 0.0006594657897949219, 0.05413818359375, 0.004276275634765625, 0.0010995864868164062, 0.00925445556640625, 1.430511474609375e-06, 0.0001176595687866211, 0.0011930465698242188, 0.00225067138671875, 0.00017583370208740234, 0.0001323223114013672, 0.58251953125, 2.078125, 0.158447265625], "tokens": [291, 1626, 45, 1687, 1135, 6512, 32, 25620, 44, 291, 7750, 620, 4060, 620, 280, 622, 4624, 620, 26, 102, 32, 371, 776, 21664, 2447, 1035, 291, 415, 308, 754, 620, 32, 39504, 620, 1157, 301, 616, 4540, 620, 667, 620, 280, 4060, 620, 32, 452, 13257, 44334, 473, 616, 415, 308]}
{"line_number": 1430, "line_type": "original", "code": "    for (Node name : n.children()) {", "entropy": 1.7841796875, "is_bug_line": false, "sus_score": 0.5330299735069275, "per_token_entropy": [2.32421875, 6.84765625, 2.28515625, 0.6728515625, 4.19921875, 0.468994140625, 1.6728515625, 0.01496124267578125, 1.0126953125, 0.01360321044921875, 0.116943359375], "tokens": [264, 436, 308, 1212, 636, 499, 310, 32, 4915, 1157, 301]}
{"line_number": 1430, "line_type": "generated", "code": "\n   * @param n The node being visited.\n   * @param superInterface The super interface for which we are checking\n   *   conflicts\n   * @param properties The properties that are being added by this class\n   */\n  private void checkPropertyConflicts(", "entropy": 0.8359375, "is_bug_line": false, "sus_score": 0.5330299735069275, "per_token_entropy": [0.49658203125, 0.415283203125, 0.0552978515625, 0.06097412109375, 1.43359375, 0.10894775390625, 0.46728515625, 0.1685791015625, 0.0162811279296875, 0.10986328125, 0.1900634765625, 1.1484375, 0.0494384765625, 0.1187744140625, 1.912109375, 1.0380859375, 0.84033203125, 0.904296875, 0.1126708984375, 2.529296875, 0.40625, 0.96923828125, 1.37890625, 0.458251953125, 0.9326171875, 0.158935546875, 3.0625, 1.4609375, 0.8359375, 0.6650390625, 0.049713134765625, 0.56298828125, 3.04296875, 1.0146484375, 0.68408203125, 1.8037109375, 1.4892578125, 2.1015625, 1.3701171875, 1.5888671875, 1.3876953125, 1.125, 0.390625, 0.72607421875, 0.037628173828125, 0.1658935546875, 0.144287109375, 0.1036376953125, 2.294921875, 0.04302978515625, 0.385009765625, 0.4580078125], "tokens": [664, 319, 477, 753, 310, 886, 1541, 3998, 21286, 32, 664, 319, 477, 753, 2599, 3041, 886, 2599, 2568, 436, 1510, 996, 884, 11056, 664, 319, 261, 20172, 664, 319, 477, 753, 4308, 886, 4308, 688, 884, 3998, 3640, 810, 458, 443, 664, 569, 334, 945, 763, 1505, 1653, 19610, 101, 26]}
{"line_number": 689, "line_type": "original", "code": "", "entropy": 3.984375, "is_bug_line": false, "sus_score": 0.5320257544517517, "per_token_entropy": [3.984375], "tokens": [203]}
{"line_number": 689, "line_type": "generated", "code": "\n      case Token.HOOK:\n        visitHook(t, n);\n        break;\n\n      case Token.COMMA:\n        // The type of the left-hand side expression determines the type of the\n        // entire comma expression.\n        visitComma(t, n", "entropy": 0.4365234375, "is_bug_line": false, "sus_score": 0.5320257544517517, "per_token_entropy": [0.09332275390625, 0.068359375, 0.0009870529174804688, 0.00026535987854003906, 0.75390625, 0.00014770030975341797, 0.15576171875, 0.4990234375, 0.8828125, 0.0189208984375, 0.09332275390625, 0.0030269622802734375, 0.0084686279296875, 0.053985595703125, 0.012420654296875, 0.1712646484375, 7.855892181396484e-05, 0.327392578125, 0.03619384765625, 0.00044345855712890625, 2.8848648071289062e-05, 0.84130859375, 0.00014531612396240234, 0.1397705078125, 2.326171875, 1.958984375, 1.4326171875, 0.09466552734375, 0.460693359375, 2.173828125, 0.87255859375, 0.76318359375, 0.1793212890625, 1.73046875, 1.169921875, 0.086669921875, 0.478759765625, 0.1383056640625, 0.4873046875, 0.0016813278198242188, 0.00037217140197753906, 1.6611328125, 0.300048828125, 0.1748046875, 0.134521484375, 0.297607421875, 0.92578125, 0.1468505859375, 0.464599609375, 0.06494140625, 0.0016031265258789062, 0.019805908203125], "tokens": [397, 1135, 6512, 32, 29243, 44, 291, 7725, 9824, 26, 102, 30, 310, 293, 291, 1626, 45, 1687, 1135, 6512, 32, 47451, 44, 291, 434, 886, 827, 432, 322, 2841, 31, 4668, 5209, 6101, 24384, 322, 827, 432, 322, 291, 434, 9449, 18231, 6101, 32, 291, 7725, 34010, 26, 102, 30, 310]}
{"line_number": 1433, "line_type": "original", "code": "      Var var = t.getScope().getVar(name.getString());", "entropy": 2.224609375, "is_bug_line": false, "sus_score": 0.5301637649536133, "per_token_entropy": [3.60546875, 13.3046875, 5.75390625, 1.6494140625, 4.00390625, 0.033416748046875, 0.40673828125, 0.1397705078125, 0.1275634765625, 0.576171875, 0.21484375, 1.171875, 2.23828125, 0.06878662109375, 0.0743408203125], "tokens": [647, 7329, 773, 280, 273, 32, 371, 5504, 922, 48086, 26, 426, 32, 7069, 1035]}
{"line_number": 1433, "line_type": "generated", "code": "\n   */\n  private void checkSuperInterface(NodeTraversal t, Node n, String functionName,\n      Set<String> properties) {\n    // TODO(johnlenz): This should be done in a more generic way.\n    // The problem is that", "entropy": 0.65625, "is_bug_line": false, "sus_score": 0.5301637649536133, "per_token_entropy": [0.66845703125, 0.7265625, 0.04095458984375, 0.1595458984375, 0.12176513671875, 0.1451416015625, 0.66552734375, 0.61962890625, 1.2431640625, 0.3759765625, 0.0027675628662109375, 0.0006418228149414062, 0.00039958953857421875, 0.04351806640625, 0.008514404296875, 0.0002617835998535156, 0.251708984375, 0.016387939453125, 0.00041747093200683594, 0.0137939453125, 0.5419921875, 1.25, 0.019378662109375, 0.004367828369140625, 0.0004673004150390625, 0.036041259765625, 0.024261474609375, 0.01045989990234375, 0.155029296875, 2.47265625, 1.63671875, 0.046142578125, 0.876953125, 0.006153106689453125, 0.001285552978515625, 0.1124267578125, 3.1328125, 2.0390625, 1.1630859375, 2.056640625, 1.6015625, 1.001953125, 1.3544921875, 1.1748046875, 0.1864013671875, 1.2216796875, 0.4970703125, 0.96142578125, 2.50390625, 2.505859375, 0.1962890625, 0.2384033203125], "tokens": [664, 569, 334, 945, 763, 1505, 11069, 3041, 26, 1212, 35699, 273, 30, 4004, 310, 30, 892, 667, 558, 30, 397, 1756, 46, 652, 48, 4308, 27, 301, 284, 434, 4296, 26, 25172, 1657, 108, 711, 1348, 1395, 526, 3390, 328, 312, 1829, 10140, 3352, 32, 284, 434, 886, 3708, 438, 688]}
{"line_number": 738, "line_type": "original", "code": "", "entropy": 5.39453125, "is_bug_line": false, "sus_score": 0.5290073752403259, "per_token_entropy": [5.39453125], "tokens": [203]}
{"line_number": 738, "line_type": "generated", "code": "\n          }\n        }\n        break;\n\n      case Token.GETPROP:\n        visitGetProp(t, n);\n        break;\n\n      case Token.CALL:\n        visitCall(t, n);\n        break;\n\n      case Token.NEW:\n        visitNew", "entropy": 0.1849365234375, "is_bug_line": false, "sus_score": 0.5290073752403259, "per_token_entropy": [0.269775390625, 0.0239715576171875, 0.1258544921875, 0.0003898143768310547, 0.1270751953125, 0.31103515625, 0.0004394054412841797, 0.1312255859375, 0.369384765625, 0.0007271766662597656, 1.800060272216797e-05, 1.802734375, 0.254638671875, 0.00200653076171875, 0.28369140625, 0.6845703125, 0.09844970703125, 0.1610107421875, 0.0224761962890625, 0.0259552001953125, 0.0009045600891113281, 0.01885986328125, 0.1827392578125, 0.04095458984375, 0.18212890625, 0.0003974437713623047, 0.05413818359375, 0.07525634765625, 0.01258087158203125, 2.2172927856445312e-05, 2.998046875, 0.0008802413940429688, 0.2086181640625, 0.18896484375, 0.04864501953125, 0.119873046875, 0.0150909423828125, 0.0009641647338867188, 0.0069732666015625, 0.072998046875, 0.012847900390625, 0.058319091796875, 0.00019228458404541016, 0.05706787109375, 0.10479736328125, 0.00551605224609375, 1.7881393432617188e-05, 0.273193359375, 0.0023651123046875, 0.0298919677734375, 0.134765625, 0.01096343994140625], "tokens": [616, 320, 291, 320, 291, 1626, 45, 1687, 1135, 6512, 32, 2788, 15262, 44, 291, 7725, 936, 6567, 26, 102, 30, 310, 293, 291, 1626, 45, 1687, 1135, 6512, 32, 5038, 44, 291, 7725, 1853, 26, 102, 30, 310, 293, 291, 1626, 45, 1687, 1135, 6512, 32, 11356, 44, 291, 7725, 1812]}
{"line_number": 747, "line_type": "original", "code": "      case Token.BREAK:", "entropy": 2.44921875, "is_bug_line": false, "sus_score": 0.5288992524147034, "per_token_entropy": [7.453125, 3.8125, 0.007686614990234375, 0.0021610260009765625, 3.416015625, 0.006134033203125], "tokens": [647, 1135, 6512, 32, 26924, 44]}
{"line_number": 747, "line_type": "generated", "code": "\n    if (typeable) {\n      // Type inference can be expensive, so don't run it unless we have to.\n      JSType inferredType = n.getJSType();\n      if (inferredType == null) {\n        inferredType = type", "entropy": 0.662109375, "is_bug_line": false, "sus_score": 0.5288992524147034, "per_token_entropy": [0.83642578125, 0.53466796875, 0.20849609375, 0.2049560546875, 0.0099945068359375, 0.1629638671875, 0.004573822021484375, 0.025909423828125, 2.267578125, 3.630859375, 2.166015625, 2.9765625, 3.0234375, 2.640625, 0.572265625, 0.25634765625, 1.873046875, 0.00019919872283935547, 1.01171875, 0.10711669921875, 1.5517578125, 0.92236328125, 0.85693359375, 0.1026611328125, 0.0416259765625, 0.0252838134765625, 1.1435546875, 0.0003616809844970703, 1.0380859375, 0.83984375, 0.0263671875, 0.88623046875, 0.00018715858459472656, 0.01100921630859375, 0.002445220947265625, 8.821487426757812e-06, 0.0260467529296875, 0.0312042236328125, 0.260986328125, 0.2047119140625, 0.1175537109375, 0.0005216598510742188, 0.0001016855239868164, 0.94091796875, 0.0176849365234375, 0.17724609375, 0.0018177032470703125, 0.0258026123046875, 0.9453125, 0.0006847381591796875, 0.0006575584411621094, 1.7216796875], "tokens": [284, 415, 308, 681, 444, 27, 301, 397, 434, 2768, 22410, 883, 526, 32440, 30, 1259, 2800, 1330, 1420, 561, 7351, 996, 1159, 372, 32, 397, 7750, 620, 43134, 620, 280, 310, 32, 371, 4624, 620, 473, 397, 415, 308, 266, 14981, 620, 610, 744, 27, 301, 291, 43134, 620, 280, 827]}
{"line_number": 1436, "line_type": "original", "code": "        JSType valueType = getJSType(value);", "entropy": 1.8349609375, "is_bug_line": false, "sus_score": 0.5283021330833435, "per_token_entropy": [7.81640625, 5.44140625, 0.01873779296875, 5.453125, 0.05389404296875, 0.09405517578125, 0.78125, 0.04949951171875, 0.0013704299926757812, 0.009613037109375, 2.1015625, 0.190185546875], "tokens": [351, 7750, 620, 786, 620, 280, 622, 4624, 620, 26, 853, 293]}
{"line_number": 1436, "line_type": "generated", "code": "\n   */\n  private void checkSuperInterfacePropertyConflict(NodeTraversal t, Node n,\n      String functionName, Set<String> properties, Set<String> currentProperties) {\n    if (properties.containsAll(currentProperties)) {\n      return;", "entropy": 0.2354736328125, "is_bug_line": false, "sus_score": 0.5283021330833435, "per_token_entropy": [0.69580078125, 0.24267578125, 0.03607177734375, 0.1390380859375, 0.1512451171875, 0.1280517578125, 0.7783203125, 0.5751953125, 2.07421875, 0.1920166015625, 0.3984375, 0.5966796875, 0.00598907470703125, 0.0015001296997070312, 0.0009851455688476562, 0.1480712890625, 0.00444793701171875, 0.0003108978271484375, 0.36328125, 0.064453125, 0.0177154541015625, 0.0005350112915039062, 0.0013227462768554688, 0.76806640625, 0.00876617431640625, 0.003688812255859375, 0.00025272369384765625, 0.033935546875, 0.01503753662109375, 0.64404296875, 0.0008234977722167969, 0.0007548332214355469, 0.0002455711364746094, 0.037109375, 0.006374359130859375, 0.04840087890625, 0.061370849609375, 0.221923828125, 0.87353515625, 0.3515625, 0.51318359375, 0.328857421875, 1.1845703125, 0.2978515625, 0.00031256675720214844, 0.006610870361328125, 9.942054748535156e-05, 0.05322265625, 0.0088348388671875, 0.0191650390625, 0.1353759765625, 0.0034637451171875], "tokens": [664, 569, 334, 945, 763, 1505, 11069, 3041, 1653, 19610, 26, 1212, 35699, 273, 30, 4004, 310, 30, 397, 892, 667, 558, 30, 1756, 46, 652, 48, 4308, 30, 1756, 46, 652, 48, 1550, 3289, 27, 301, 284, 415, 308, 4642, 32, 4752, 1934, 26, 1700, 3289, 490, 301, 397, 442, 45]}
{"line_number": 1628, "line_type": "original", "code": "          !functionType.isNativeObjectType() &&", "entropy": 2.501953125, "is_bug_line": false, "sus_score": 0.5273654460906982, "per_token_entropy": [5.62109375, 9.6953125, 2.4921875, 0.01212310791015625, 0.016082763671875, 0.349853515625, 5.390625, 0.966796875, 0.0919189453125, 0.384033203125], "tokens": [2033, 653, 1126, 620, 32, 297, 6134, 15898, 346, 962]}
{"line_number": 1628, "line_type": "generated", "code": "\n      visitParameter(t, call, ordinal, parameter, argument);\n    }\n\n    // Check for too many arguments.\n    if (arguments.hasNext()) {\n      report(t, call, TOO_MANY_ARGUMENTS);\n    }\n\n    //", "entropy": 0.3388671875, "is_bug_line": false, "sus_score": 0.5273654460906982, "per_token_entropy": [0.49072265625, 2.12109375, 0.274169921875, 0.055908203125, 0.024566650390625, 0.0004508495330810547, 0.88232421875, 0.00896453857421875, 0.9599609375, 0.00695037841796875, 0.296142578125, 0.0413818359375, 0.137451171875, 0.54248046875, 0.2130126953125, 0.00022685527801513672, 0.6005859375, 0.78076171875, 2.07421875, 0.8603515625, 0.6640625, 0.391845703125, 0.392822265625, 0.76123046875, 0.106689453125, 0.09588623046875, 0.00884246826171875, 0.468994140625, 1.5854835510253906e-05, 0.00015628337860107422, 0.1851806640625, 0.0002682209014892578, 0.01409912109375, 0.489013671875, 0.017791748046875, 0.01116943359375, 4.220008850097656e-05, 0.411865234375, 0.0045928955078125, 1.0673828125, 0.0037021636962890625, 7.271766662597656e-06, 0.006153106689453125, 1.3113021850585938e-06, 0.0036602020263671875, 0.6767578125, 0.0001741647720336914, 0.791015625, 0.2252197265625, 0.0002510547637939453, 0.415283203125, 0.038543701171875], "tokens": [397, 7725, 3012, 26, 102, 30, 1476, 30, 40127, 30, 3395, 30, 2793, 293, 284, 320, 446, 434, 3456, 436, 5133, 5075, 4209, 32, 284, 415, 308, 8299, 32, 16421, 1157, 301, 397, 3639, 26, 102, 30, 1476, 30, 2823, 65, 81, 10656, 75, 81, 29940, 69, 293, 284, 320, 446, 434]}
{"line_number": 735, "line_type": "original", "code": "        typeable = false;", "entropy": 1.7763671875, "is_bug_line": false, "sus_score": 0.5255271792411804, "per_token_entropy": [7.43359375, 3.1796875, 0.01256561279296875, 0.0024242401123046875, 0.0254364013671875, 0.001773834228515625], "tokens": [351, 827, 444, 280, 901, 45]}
{"line_number": 735, "line_type": "generated", "code": "\n        break;\n\n      case Token.CALL:\n        visitCall(t, n);\n        break;\n\n      case Token.NEW:\n        visitNew(t, n);\n        break;\n\n      case Token.THIS:\n        ensureTyped(t, n);\n       ", "entropy": 0.15771484375, "is_bug_line": false, "sus_score": 0.5255271792411804, "per_token_entropy": [0.043426513671875, 0.043792724609375, 0.00025010108947753906, 0.03948974609375, 0.416259765625, 0.0008335113525390625, 1.3232231140136719e-05, 1.392578125, 0.0007600784301757812, 0.298828125, 0.4560546875, 0.0799560546875, 0.29541015625, 0.07403564453125, 0.004703521728515625, 0.020660400390625, 0.16455078125, 0.275634765625, 0.12298583984375, 0.0029315948486328125, 0.0275115966796875, 0.108154296875, 0.00024044513702392578, 5.9604644775390625e-06, 0.59765625, 0.0011930465698242188, 0.038482666015625, 0.191162109375, 0.01441192626953125, 0.0230560302734375, 0.0128173828125, 0.0004527568817138672, 0.0036602020263671875, 0.03216552734375, 0.022216796875, 0.043792724609375, 5.519390106201172e-05, 0.01297760009765625, 0.1064453125, 0.00084686279296875, 9.655952453613281e-06, 0.90869140625, 0.0002593994140625, 0.1361083984375, 0.56591796875, 0.0179443359375, 0.004116058349609375, 0.005359649658203125, 0.000274658203125, 0.0070037841796875, 1.337890625, 0.25244140625], "tokens": [291, 1626, 45, 1687, 1135, 6512, 32, 5038, 44, 291, 7725, 1853, 26, 102, 30, 310, 293, 291, 1626, 45, 1687, 1135, 6512, 32, 11356, 44, 291, 7725, 1812, 26, 102, 30, 310, 293, 291, 1626, 45, 1687, 1135, 6512, 32, 25339, 44, 291, 7279, 11851, 26, 102, 30, 310, 293, 291]}
{"line_number": 1014, "line_type": "original", "code": "    if (allowedValueType.isEnumElementType()) {", "entropy": 1.6943359375, "is_bug_line": false, "sus_score": 0.5239810943603516, "per_token_entropy": [5.90234375, 1.3515625, 0.298583984375, 5.55078125, 0.0946044921875, 0.51513671875, 1.5185546875, 1.544921875, 1.626953125, 0.228759765625, 0.0137176513671875], "tokens": [264, 415, 308, 11327, 17653, 32, 297, 2759, 22452, 1157, 301]}
{"line_number": 1014, "line_type": "generated", "code": "\n  /**\n   * Checks that a property of an object literal is consistent with its\n   * declared type.\n   *\n   * @param t the traversal\n   * @param assign the assignment node\n   * @param functionType the type of the object literal\n   *", "entropy": 0.53759765625, "is_bug_line": false, "sus_score": 0.5239810943603516, "per_token_entropy": [0.35546875, 0.76513671875, 0.05010986328125, 0.0002448558807373047, 1.7353515625, 0.6376953125, 1.607421875, 0.9033203125, 2.33203125, 1.0029296875, 0.7109375, 1.0126953125, 1.0126953125, 2.646484375, 0.079345703125, 1.7275390625, 0.74072265625, 7.224082946777344e-05, 0.681640625, 0.328369140625, 0.58154296875, 0.22265625, 0.255615234375, 0.315673828125, 0.00286865234375, 0.3486328125, 0.026275634765625, 0.2181396484375, 0.305419921875, 0.0343017578125, 0.01947021484375, 0.0038909912109375, 0.0006880760192871094, 0.001956939697265625, 0.69873046875, 0.15869140625, 0.77490234375, 0.33984375, 0.1529541015625, 0.016326904296875, 0.0006356239318847656, 0.00226593017578125, 0.8037109375, 0.0159454345703125, 0.1513671875, 1.70703125, 0.055511474609375, 0.0689697265625, 1.3310546875, 0.51953125, 0.488037109375, 0.006191253662109375], "tokens": [334, 1022, 664, 319, 17279, 688, 312, 2804, 432, 600, 1300, 10652, 438, 14488, 623, 2819, 664, 319, 17103, 827, 32, 664, 319, 664, 319, 477, 753, 273, 322, 34395, 664, 319, 477, 753, 5313, 322, 13807, 1541, 664, 319, 477, 753, 667, 620, 322, 827, 432, 322, 1300, 10652, 664, 319]}
{"line_number": 1196, "line_type": "original", "code": "    Preconditions.checkArgument(!ctor.isUnknownType());", "entropy": 2.49609375, "is_bug_line": false, "sus_score": 0.5230793952941895, "per_token_entropy": [5.21875, 4.99609375, 0.004268646240234375, 0.00875091552734375, 1.65234375, 3.76171875, 5.484375, 1.478515625, 0.045013427734375, 7.1171875, 0.0057373046875, 0.1871337890625], "tokens": [264, 40596, 32, 1553, 3484, 3836, 5314, 32, 297, 5842, 620, 1035]}
{"line_number": 1196, "line_type": "generated", "code": "\n  }\n\n  /**\n   * Visits an ASSIGN node for cases such as\n   * <pre>\n   * interface.property2.property =...;\n   * </pre>\n   */\n  private void visitInterfaceSetprop(NodeTraversal t, Node", "entropy": 0.1270751953125, "is_bug_line": false, "sus_score": 0.5230793952941895, "per_token_entropy": [0.97314453125, 0.0033931732177734375, 0.268310546875, 0.330810546875, 0.0300750732421875, 9.191036224365234e-05, 1.2705078125, 0.0027294158935546875, 0.371337890625, 0.361572265625, 0.0001838207244873047, 0.018157958984375, 0.1427001953125, 0.07061767578125, 0.04010009765625, 0.00047850608825683594, 0.0728759765625, 0.00045680999755859375, 0.01494598388671875, 0.001911163330078125, 0.00047278404235839844, 0.002849578857421875, 0.00016176700592041016, 0.86767578125, 0.0496826171875, 0.2327880859375, 0.37841796875, 0.2137451171875, 0.1119384765625, 0.052703857421875, 0.043243408203125, 0.002193450927734375, 0.0013828277587890625, 0.0021419525146484375, 0.0157012939453125, 4.1604042053222656e-05, 0.0006690025329589844, 0.0012197494506835938, 0.06793212890625, 0.011260986328125, 0.0216064453125, 0.01161956787109375, 0.010833740234375, 0.1400146484375, 0.326904296875, 0.0194854736328125, 0.005504608154296875, 0.0330810546875, 0.00023448467254638672, 0.0006299018859863281, 2.0384788513183594e-05, 0.01044464111328125], "tokens": [334, 320, 719, 1022, 664, 319, 6255, 1507, 600, 32397, 3479, 1541, 436, 6792, 3751, 619, 664, 319, 333, 1001, 48, 664, 319, 2568, 32, 2433, 36, 32, 2433, 280, 2417, 45, 664, 319, 576, 1001, 48, 664, 569, 334, 945, 763, 7725, 3041, 885, 4641, 26, 1212, 35699, 273, 30, 4004]}
{"line_number": 1080, "line_type": "original", "code": "    boolean superClassHasProperty = superClass != null &&", "entropy": 2.01171875, "is_bug_line": false, "sus_score": 0.5219027996063232, "per_token_entropy": [5.81640625, 7.5546875, 1.6904296875, 0.481689453125, 1.2353515625, 0.303955078125, 2.755859375, 0.151123046875, 0.0009102821350097656, 0.1337890625], "tokens": [264, 1905, 47514, 3993, 1653, 280, 47514, 863, 744, 962]}
{"line_number": 1080, "line_type": "generated", "code": "\n        &&!superClassHasDeclaredProperty\n        &&!foundInterfaceProperty\n        && superInterfaceHasProperty\n        &&!superInterfaceHasDeclaredProperty) {\n      // Neither the supertype nor any interface implements the property\n      compiler.report(t.makeError(", "entropy": 0.415771484375, "is_bug_line": false, "sus_score": 0.5219027996063232, "per_token_entropy": [0.242431640625, 0.197021484375, 0.578125, 0.317138671875, 0.6123046875, 0.01824951171875, 0.0045928955078125, 0.0006194114685058594, 0.69921875, 0.01415252685546875, 0.1593017578125, 1.1611328125, 0.0004467964172363281, 0.0005292892456054688, 0.6591796875, 0.016998291015625, 2.052734375, 0.004467010498046875, 0.0008215904235839844, 0.1722412109375, 0.2489013671875, 0.0078125, 0.211669921875, 0.0096893310546875, 0.004337310791015625, 0.0003287792205810547, 0.00243377685546875, 9.179115295410156e-06, 0.3974609375, 0.00440216064453125, 0.1341552734375, 0.55810546875, 3.75, 0.67431640625, 1.09765625, 0.002941131591796875, 0.08734130859375, 0.496826171875, 1.072265625, 2.919921875, 0.458740234375, 0.25537109375, 1.5908203125, 0.58837890625, 0.0005555152893066406, 0.001667022705078125, 0.007778167724609375, 0.1251220703125, 3.7550926208496094e-05, 0.00262451171875, 0.004993438720703125, 0.0002460479736328125], "tokens": [291, 962, 653, 5266, 1339, 3993, 22050, 1653, 291, 962, 653, 6264, 3041, 1653, 291, 962, 2599, 3041, 3993, 1653, 291, 962, 653, 5266, 3041, 3993, 22050, 1653, 27, 301, 397, 434, 23212, 322, 5154, 43981, 12356, 1346, 2568, 4575, 322, 2804, 397, 8980, 32, 3734, 26, 102, 32, 2682, 924, 26]}
{"line_number": 984, "line_type": "original", "code": "   * @param t the traversal", "entropy": 2.306640625, "is_bug_line": false, "sus_score": 0.5184272527694702, "per_token_entropy": [5.0859375, 5.26953125, 0.2666015625, 0.051513671875, 3.888671875, 1.4560546875, 0.1163330078125], "tokens": [261, 319, 477, 753, 273, 322, 34395]}
{"line_number": 984, "line_type": "generated", "code": "\n    if (keyType.isUnknownType() ||\n        keyType.isFunctionType() ||\n        keyType.isEnumType() ||\n        keyType.isStruct()) {\n      return;\n    }\n\n    String propertyName = NodeUtil.getObjectLitKeyName(", "entropy": 0.44384765625, "is_bug_line": false, "sus_score": 0.5184272527694702, "per_token_entropy": [0.362060546875, 1.5986328125, 0.232666015625, 1.2763671875, 0.30712890625, 0.2529296875, 0.473876953125, 1.4140625, 0.0164337158203125, 0.96533203125, 0.568359375, 1.634765625, 0.76904296875, 0.0469970703125, 0.015655517578125, 1.2255859375, 0.359375, 0.08331298828125, 0.01690673828125, 0.06005859375, 0.0838623046875, 0.0218353271484375, 0.0008559226989746094, 0.112548828125, 1.5009765625, 0.186767578125, 0.84423828125, 0.01380157470703125, 0.00914764404296875, 0.11083984375, 0.007587432861328125, 0.0021648406982421875, 0.1829833984375, 2.7265625, 0.79638671875, 0.0021533966064453125, 0.04412841796875, 0.83154296875, 0.0021762847900390625, 0.02227783203125, 5.602836608886719e-05, 0.257568359375, 1.9423828125, 1.2275390625, 0.03387451171875, 0.334228515625, 6.687641143798828e-05, 1.2278556823730469e-05, 0.0821533203125, 0.0010128021240234375, 0.01531982421875, 0.0021686553955078125], "tokens": [284, 415, 308, 678, 620, 32, 297, 5842, 620, 346, 1276, 291, 1202, 620, 32, 39504, 620, 346, 1276, 291, 1202, 620, 32, 297, 2759, 620, 346, 1276, 291, 1202, 620, 32, 297, 3858, 1157, 301, 397, 442, 45, 284, 320, 446, 892, 28859, 280, 4004, 1733, 32, 19734, 27472, 35601, 26]}
{"line_number": 963, "line_type": "original", "code": "      String property2 = NodeUtil.getStringValue(object.getLastChild());", "entropy": 2.14453125, "is_bug_line": false, "sus_score": 0.5181877017021179, "per_token_entropy": [7.890625, 4.93359375, 1.9775390625, 3.822265625, 0.035186767578125, 2.435546875, 0.00021219253540039062, 0.006458282470703125, 2.462890625, 0.1485595703125, 0.0013036727905273438, 6.5078125, 3.15234375, 0.9130859375, 0.0006084442138671875, 0.0187835693359375], "tokens": [647, 892, 2804, 36, 280, 4004, 1733, 32, 7069, 882, 26, 1473, 32, 20197, 2931, 1035]}
{"line_number": 963, "line_type": "generated", "code": "\n    if (owner.isAssign()) {\n      Node assign = owner;\n      Node lvalue = assign.getFirstChild();\n      if (lvalue.isGetProp()) {\n        Node object = lvalue.getFirstChild();\n        if (object.is", "entropy": 0.376220703125, "is_bug_line": false, "sus_score": 0.5181877017021179, "per_token_entropy": [1.330078125, 0.8720703125, 0.2303466796875, 1.171875, 0.07708740234375, 0.9013671875, 0.383056640625, 0.50048828125, 0.0009503364562988281, 0.05926513671875, 1.69921875, 1.8466796875, 0.4716796875, 0.0163726806640625, 0.09918212890625, 0.12103271484375, 0.82568359375, 0.7265625, 0.01153564453125, 0.009552001953125, 0.043792724609375, 0.00020873546600341797, 0.075439453125, 0.0002536773681640625, 0.00824737548828125, 0.3798828125, 0.96923828125, 0.1142578125, 0.288330078125, 4.935264587402344e-05, 0.06756591796875, 0.59228515625, 0.46728515625, 0.00327301025390625, 0.332763671875, 0.0012302398681640625, 0.06817626953125, 1.189453125, 0.6767578125, 0.09466552734375, 0.03594970703125, 8.702278137207031e-06, 0.003917694091796875, 0.01294708251953125, 5.2928924560546875e-05, 0.0016231536865234375, 0.28515625, 1.869140625, 0.2037353515625, 0.2052001953125, 0.0178985595703125, 0.193359375], "tokens": [284, 415, 308, 5632, 32, 297, 9079, 1157, 301, 397, 4004, 5313, 280, 7423, 45, 397, 4004, 456, 853, 280, 5313, 32, 25657, 2931, 473, 397, 415, 308, 94, 853, 32, 297, 936, 6567, 1157, 301, 291, 4004, 1300, 280, 456, 853, 32, 25657, 2931, 473, 291, 415, 308, 1473, 32, 297]}
{"line_number": 1617, "line_type": "original", "code": "      boolean isExtern = false;", "entropy": 1.4306640625, "is_bug_line": false, "sus_score": 0.5178353190422058, "per_token_entropy": [7.1015625, 2.27734375, 0.93505859375, 0.9248046875, 0.0001246929168701172, 0.09381103515625, 0.097412109375, 0.0143890380859375], "tokens": [647, 1905, 438, 571, 900, 280, 901, 45]}
{"line_number": 1617, "line_type": "generated", "code": "\n    JSDocInfo functionJSDocInfo = functionType.getJSDocInfo();\n    if( functionJSDocInfo!= null  &&\n        functionJSDocInfo.getParameterCount() > 0) {\n      for (int i", "entropy": 0.196533203125, "is_bug_line": false, "sus_score": 0.5178353190422058, "per_token_entropy": [0.11614990234375, 2.306640625, 0.0005512237548828125, 1.7881393432617188e-06, 5.555152893066406e-05, 0.8623046875, 0.080078125, 7.30752944946289e-05, 2.586841583251953e-05, 0.0006961822509765625, 0.0139617919921875, 0.072998046875, 6.747245788574219e-05, 0.0004184246063232422, 0.00433349609375, 0.0008230209350585938, 4.172325134277344e-06, 4.0531158447265625e-06, 8.463859558105469e-06, 0.004817962646484375, 0.1456298828125, 0.6259765625, 0.451904296875, 0.06488037109375, 0.0021076202392578125, 4.76837158203125e-07, 2.384185791015625e-07, 2.7418136596679688e-06, 0.06329345703125, 0.0017490386962890625, 0.69873046875, 0.0096435546875, 0.06439208984375, 0.0065155029296875, 0.0016880035400390625, 8.58306884765625e-06, 0.00031828880310058594, 1.1086463928222656e-05, 0.0004475116729736328, 0.6953125, 0.08935546875, 0.00896453857421875, 0.3603515625, 0.08135986328125, 0.01959228515625, 0.466552734375, 0.01422119140625, 0.07794189453125, 1.333984375, 0.28955078125, 0.9814453125, 0.1954345703125], "tokens": [284, 971, 3181, 542, 1120, 667, 60, 3181, 542, 1120, 280, 667, 620, 32, 371, 60, 3181, 542, 1120, 473, 284, 415, 26, 667, 60, 3181, 542, 1120, 863, 744, 225, 962, 291, 667, 60, 3181, 542, 1120, 32, 17761, 1534, 346, 848, 225, 34, 27, 301, 397, 436, 308, 410, 595]}
{"line_number": 1438, "line_type": "original", "code": "        nameType = (nameType == null) ? getNativeType(UNKNOWN_TYPE) : nameType;", "entropy": 1.8681640625, "is_bug_line": false, "sus_score": 0.5174962878227234, "per_token_entropy": [8.8671875, 8.125, 2.783203125, 0.12310791015625, 5.9140625, 1.107421875, 0.2415771484375, 0.90625, 0.04400634765625, 0.119873046875, 0.316162109375, 4.0, 4.18359375, 0.0665283203125, 0.1505126953125, 5.14453125, 0.4365234375, 0.0219879150390625, 0.19384765625, 0.07379150390625, 0.0966796875, 0.000377655029296875, 0.03900146484375], "tokens": [351, 636, 620, 280, 308, 426, 620, 610, 744, 27, 1018, 622, 6134, 620, 26, 14174, 81, 2319, 27, 499, 636, 620, 45]}
{"line_number": 1438, "line_type": "generated", "code": "\n  private void checkSuperInterfaceProperties(NodeTraversal t, Node n,\n      String functionName, Set<String> properties, Set<String> currentProperties,\n      JSType interfaceType) {\n    JSType objectType = validator.getObjectLitType(", "entropy": 0.35498046875, "is_bug_line": false, "sus_score": 0.5174962878227234, "per_token_entropy": [0.6103515625, 0.17041015625, 0.1513671875, 0.1583251953125, 1.033203125, 0.486572265625, 1.72265625, 0.0831298828125, 0.7060546875, 0.00557708740234375, 0.0013141632080078125, 0.0011339187622070312, 0.1463623046875, 0.005390167236328125, 0.0004303455352783203, 0.361083984375, 0.046875, 0.0253448486328125, 0.0005464553833007812, 0.0017156600952148438, 0.84228515625, 0.01255035400390625, 0.002796173095703125, 0.00022459030151367188, 0.031768798828125, 0.00960540771484375, 0.9560546875, 0.0010862350463867188, 0.000804901123046875, 0.0002033710479736328, 0.07452392578125, 0.005237579345703125, 0.0234832763671875, 0.030914306640625, 0.316650390625, 0.0005369186401367188, 0.088134765625, 0.0007381439208984375, 0.06402587890625, 0.037078857421875, 0.2333984375, 1.9794921875, 0.004467010498046875, 3.923828125, 0.1253662109375, 0.01171875, 2.046875, 0.00027251243591308594, 0.61328125, 0.84130859375, 0.31787109375, 0.1444091796875], "tokens": [334, 945, 763, 1505, 11069, 3041, 3289, 26, 1212, 35699, 273, 30, 4004, 310, 30, 397, 892, 667, 558, 30, 1756, 46, 652, 48, 4308, 30, 1756, 46, 652, 48, 1550, 3289, 30, 397, 7750, 620, 2568, 620, 27, 301, 284, 7750, 620, 1300, 620, 280, 13420, 32, 19734, 27472, 620, 26]}
