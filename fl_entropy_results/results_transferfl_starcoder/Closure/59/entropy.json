{"line_number": 708, "line_type": "original", "code": "    }", "entropy": 3.31640625, "is_bug_line": false, "sus_score": 0.7482996582984924, "per_token_entropy": [2.064453125, 4.5703125], "tokens": [264, 320]}
{"line_number": 708, "line_type": "generated", "code": "\n    if (options.externExports) {\n      externExports = new ExternExports(externsRoot, options);\n      externExports.process();\n      if (hasErrors()) {\n        return;\n      }\n    }\n  }\n\n  private void removeTryCatch", "entropy": 0.45263671875, "is_bug_line": false, "sus_score": 0.7482996582984924, "per_token_entropy": [0.4990234375, 1.9296875, 0.296630859375, 0.7119140625, 0.0019741058349609375, 1.6416015625, 0.0011835098266601562, 0.493896484375, 0.007122039794921875, 0.0838623046875, 1.9912109375, 0.2030029296875, 1.4091796875, 0.83251953125, 0.0819091796875, 0.00011086463928222656, 0.011260986328125, 0.37841796875, 0.99951171875, 0.1658935546875, 0.654296875, 0.4541015625, 1.1572265625, 0.80517578125, 0.310302734375, 0.09075927734375, 0.0038299560546875, 0.0013942718505859375, 0.29296875, 0.88623046875, 1.505859375, 0.7861328125, 0.08941650390625, 0.72705078125, 0.0034923553466796875, 0.01218414306640625, 0.00313568115234375, 0.0215301513671875, 0.06915283203125, 0.0019359588623046875, 0.0004963874816894531, 0.00011229515075683594, 0.1861572265625, 0.0005345344543457031, 0.256103515625, 0.001598358154296875, 0.048309326171875, 0.8740234375, 0.113525390625, 2.150390625, 0.289794921875, 1.5974044799804688e-05], "tokens": [284, 415, 308, 2184, 32, 4318, 20723, 27, 301, 397, 12098, 20723, 280, 537, 1283, 900, 20723, 26, 4318, 101, 4058, 30, 2075, 293, 397, 12098, 20723, 32, 2416, 473, 397, 415, 308, 2040, 7352, 1157, 301, 291, 442, 45, 397, 320, 284, 320, 334, 320, 719, 945, 763, 3345, 8296, 20377]}
{"line_number": 1121, "line_type": "original", "code": "  /**", "entropy": 5.515625, "is_bug_line": false, "sus_score": 0.735300600528717, "per_token_entropy": [4.73046875, 6.296875], "tokens": [225, 1022]}
{"line_number": 1121, "line_type": "generated", "code": "      }\n        }\n      }\n\n      // Parse main sources.\n      for (CompilerInput input : inputs) {\n        Node n = input.getAstRoot(this);\n        if (hasErrors()) {\n          return null;\n        }\n        jsRoot.addChild", "entropy": 0.20263671875, "is_bug_line": false, "sus_score": 0.735300600528717, "per_token_entropy": [2.068359375, 0.44580078125, 1.052734375, 1.5517578125, 0.9638671875, 0.018707275390625, 0.208984375, 0.40087890625, 0.299560546875, 0.83447265625, 0.693359375, 0.180419921875, 0.033782958984375, 0.289794921875, 0.0007100105285644531, 0.01580810546875, 0.0010137557983398438, 0.0041656494140625, 0.00201416015625, 0.0145111083984375, 0.00138092041015625, 0.002162933349609375, 0.0892333984375, 0.9228515625, 0.035980224609375, 0.00904083251953125, 0.031951904296875, 7.62939453125e-05, 0.01154327392578125, 0.007480621337890625, 0.00010442733764648438, 0.0033397674560546875, 0.00162506103515625, 0.00475311279296875, 0.05572509765625, 0.02581787109375, 0.0065460205078125, 0.051361083984375, 9.942054748535156e-05, 0.0056304931640625, 0.00039386749267578125, 0.003238677978515625, 0.0155029296875, 0.0004029273986816406, 2.5987625122070312e-05, 0.0007476806640625, 3.337860107421875e-06, 0.10015869140625, 0.07232666015625, 3.838539123535156e-05, 5.2928924560546875e-05, 0.0001398324966430664], "tokens": [647, 320, 291, 320, 397, 320, 1687, 434, 8661, 2575, 10849, 32, 397, 436, 308, 8115, 1612, 1509, 499, 7806, 27, 301, 291, 4004, 310, 280, 1509, 32, 371, 19511, 4058, 26, 578, 293, 291, 415, 308, 2040, 7352, 1157, 301, 616, 442, 744, 45, 291, 320, 291, 4060, 4058, 32, 21545]}
{"line_number": 730, "line_type": "original", "code": "    phaseOptimizer.process(externsRoot, jsRoot);", "entropy": 1.837890625, "is_bug_line": false, "sus_score": 0.7143145203590393, "per_token_entropy": [6.23828125, 6.28125, 0.004337310791015625, 0.0089569091796875, 6.4453125, 0.748046875, 3.1640625, 0.48828125, 0.205078125, 0.1824951171875, 0.0748291015625, 0.0001703500747680664, 0.0443115234375], "tokens": [264, 11225, 29248, 32, 2416, 26, 4318, 101, 4058, 30, 4060, 4058, 293]}
{"line_number": 730, "line_type": "generated", "code": "\n  /**\n   * Returns a mutable map of extern files that should be included in the\n   * compilation.\n   */\n  public Map<String, Node> getExternExports() {\n    return externExports;\n  }\n\n  /**\n   * Returns a mutable map", "entropy": 0.60107421875, "is_bug_line": false, "sus_score": 0.7143145203590393, "per_token_entropy": [0.5185546875, 1.328125, 0.253662109375, 0.0004551410675048828, 3.837890625, 1.6953125, 3.228515625, 1.5712890625, 0.58740234375, 1.5986328125, 1.96484375, 1.55859375, 1.376953125, 0.0367431640625, 1.2587890625, 0.86181640625, 0.45263671875, 0.489501953125, 0.00047135353088378906, 0.576171875, 0.368408203125, 0.53466796875, 0.326171875, 0.0088043212890625, 0.283447265625, 0.464111328125, 0.00150299072265625, 0.028106689453125, 3.445148468017578e-05, 1.072265625, 0.0037746429443359375, 0.0182647705078125, 0.031585693359375, -0.0, 0.55224609375, 0.0161590576171875, 0.0003902912139892578, 0.0113372802734375, 0.55419921875, 0.01090240478515625, 0.00017559528350830078, 0.005126953125, 0.004512786865234375, 0.0001087188720703125, 0.25146484375, 0.69775390625, 0.12017822265625, 0.0006432533264160156, 1.720703125, 0.763671875, 0.10809326171875, 0.11822509765625], "tokens": [334, 1022, 664, 319, 3759, 312, 14786, 1992, 432, 12098, 2276, 688, 1395, 526, 5964, 328, 322, 664, 319, 16260, 32, 664, 569, 334, 562, 3516, 46, 652, 30, 4004, 48, 622, 571, 900, 20723, 346, 301, 284, 442, 12098, 20723, 45, 334, 320, 719, 1022, 664, 319, 3759, 312, 14786, 1992]}
{"line_number": 729, "line_type": "original", "code": "    phaseOptimizer.consume(getPassConfig().getChecks());", "entropy": 2.65234375, "is_bug_line": false, "sus_score": 0.7118960022926331, "per_token_entropy": [4.29296875, 8.2578125, 0.53759765625, 0.0141754150390625, 8.9609375, 0.294189453125, 5.34765625, 2.314453125, 0.716796875, 0.214599609375, 2.26953125, 1.1318359375, 0.1229248046875], "tokens": [264, 11225, 29248, 32, 19885, 26, 371, 6129, 1063, 922, 371, 19393, 1035]}
{"line_number": 729, "line_type": "generated", "code": "  };\n\n  private void removeTryCatchFinally() {\n    logger.info(\"Removing try-catch-finally blocks\");\n    startPass(\"removeTryCatchFinally\");\n\n    RemoveTryCatchFinally pass = new RemoveTryCatchFinally(this);\n    process(pass", "entropy": 0.2169189453125, "is_bug_line": false, "sus_score": 0.7118960022926331, "per_token_entropy": [1.2138671875, 0.142822265625, 0.275146484375, 0.80224609375, 0.71240234375, 0.591796875, 0.02252197265625, 3.6954879760742188e-06, 0.00015532970428466797, 0.0024318695068359375, 0.0017080307006835938, 0.007762908935546875, 0.89111328125, 0.0001723766326904297, 0.057952880859375, 0.00499725341796875, 0.32470703125, 0.3115234375, 1.2158203125, 0.0195159912109375, 0.055694580078125, 0.0003578662872314453, 0.9453125, 0.0660400390625, 0.1102294921875, 0.113037109375, 0.0035572052001953125, 0.00604248046875, 0.1082763671875, 0.0099945068359375, 0.0051116943359375, 0.0174102783203125, 0.01145172119140625, 0.1978759765625, 1.2099609375, 0.00720977783203125, 0.0017499923706054688, 0.2066650390625, 1.2158203125, 0.0033054351806640625, 0.09246826171875, 0.0003581047058105469, 1.2159347534179688e-05, 3.933906555175781e-05, 6.592273712158203e-05, 0.024932861328125, 0.137451171875, 0.06329345703125, 0.027587890625, 0.041900634765625, 0.002040863037109375, 0.0006089210510253906], "tokens": [225, 1472, 719, 945, 763, 3345, 8296, 20377, 28325, 346, 301, 284, 4082, 32, 1338, 440, 34849, 1596, 31, 5628, 31, 22192, 9058, 724, 284, 1477, 6129, 440, 2546, 8296, 20377, 28325, 724, 446, 6478, 8296, 20377, 28325, 3097, 280, 537, 6478, 8296, 20377, 28325, 26, 578, 293, 284, 2164, 26, 4617]}
{"line_number": 724, "line_type": "original", "code": "", "entropy": 3.3359375, "is_bug_line": false, "sus_score": 0.6865983605384827, "per_token_entropy": [3.3359375], "tokens": [203]}
{"line_number": 724, "line_type": "generated", "code": "\n    new SanityCheck.Factory();\n\n  private void removeTryCatchFinally() {\n    if (options.removeTryCatchFinally) {\n      startPass(\"removeTryCatchFinally\");\n\n      Node externs = externsRoot;\n      Node root = jsRoot", "entropy": 0.49267578125, "is_bug_line": false, "sus_score": 0.6865983605384827, "per_token_entropy": [1.2333984375, 0.1976318359375, 0.9140625, 2.6226043701171875e-06, 0.0142822265625, 1.814453125, 0.3408203125, 1.263671875, 0.58544921875, 1.001953125, 0.7236328125, 1.1484375, 0.031982421875, 5.602836608886719e-06, 0.0001862049102783203, 0.00342559814453125, 0.002468109130859375, 0.012969970703125, 2.607421875, 0.311767578125, 0.521484375, 0.00203704833984375, 0.96337890625, 0.755859375, 7.021427154541016e-05, 0.1317138671875, 0.392578125, 0.002338409423828125, 0.0122833251953125, 1.611328125, 0.034637451171875, 0.0111846923828125, 0.1923828125, 0.037994384765625, 0.0033168792724609375, 0.01995849609375, 0.021697998046875, 0.82861328125, 2.294921875, 0.91015625, 0.12200927734375, 0.5380859375, 1.66796875, 0.06640625, 0.02081298828125, 0.552734375, 0.12548828125, 0.299072265625, 1.2197265625, 0.00946807861328125, 0.0426025390625, 4.00543212890625e-05], "tokens": [284, 537, 21100, 543, 2140, 32, 2214, 473, 719, 945, 763, 3345, 8296, 20377, 28325, 346, 301, 284, 415, 308, 2184, 32, 2546, 8296, 20377, 28325, 27, 301, 397, 1477, 6129, 440, 2546, 8296, 20377, 28325, 724, 1687, 4004, 12098, 101, 280, 12098, 101, 4058, 45, 397, 4004, 3051, 280, 4060, 4058]}
{"line_number": 1784, "line_type": "original", "code": "    if (level.isOn()) {", "entropy": 2.640625, "is_bug_line": false, "sus_score": 0.6669432520866394, "per_token_entropy": [3.708984375, 2.490234375, 0.24658203125, 9.859375, 0.87060546875, 2.017578125, 2.708984375, 1.7626953125, 0.09814453125], "tokens": [264, 415, 308, 2649, 32, 297, 1484, 1157, 301]}
{"line_number": 1784, "line_type": "generated", "code": "\n   */\n  @Override\n  public boolean hasErrors() {\n    return errorManager.getErrorCount() > 0;\n  }\n\n  /**\n   * Gets a list of all errors.\n   */\n  @Override\n  public List<JSError> getErrors()", "entropy": 0.298828125, "is_bug_line": false, "sus_score": 0.6669432520866394, "per_token_entropy": [0.11297607421875, 0.83984375, 0.005718231201171875, 0.36865234375, 0.0015707015991210938, 0.0019292831420898438, 0.85693359375, 0.302001953125, 0.281494140625, 0.17138671875, 0.0019168853759765625, 0.00139617919921875, 0.1148681640625, 0.12188720703125, 0.4453125, 0.0005726814270019531, 0.006931304931640625, 0.56201171875, 0.0113677978515625, 0.0008139610290527344, 0.2071533203125, 0.00476837158203125, 0.000484466552734375, 0.041473388671875, 0.02069091796875, 0.0004887580871582031, 0.30810546875, 0.65283203125, 0.055389404296875, 0.0003952980041503906, 2.6796875, 1.6513671875, 0.78759765625, 0.0171966552734375, 0.74462890625, 1.078125, 1.2314453125, 0.136962890625, 0.182373046875, 0.0040435791015625, 1.08984375, 0.0017404556274414062, 0.0017223358154296875, 0.052978515625, 0.359130859375, 0.00598907470703125, 0.006500244140625, 5.8531761169433594e-05, 0.0030765533447265625, 0.0018663406372070312, 0.00025916099548339844, 0.0015354156494140625], "tokens": [664, 569, 334, 477, 1788, 334, 562, 1905, 1401, 7352, 346, 301, 284, 442, 1048, 1572, 32, 32618, 1534, 346, 848, 225, 34, 45, 334, 320, 719, 1022, 664, 319, 7124, 312, 1149, 432, 1169, 3878, 32, 664, 569, 334, 477, 1788, 334, 562, 1682, 46, 60, 21887, 48, 622, 7352, 346]}
{"line_number": 1110, "line_type": "original", "code": "  TypeValidator getTypeValidator() {", "entropy": 3.638671875, "is_bug_line": false, "sus_score": 0.65631103515625, "per_token_entropy": [5.640625, 8.5234375, 0.4736328125, 10.4609375, 0.00452423095703125, 0.314453125, 0.044891357421875], "tokens": [225, 2768, 7063, 24115, 7063, 346, 301]}
{"line_number": 1110, "line_type": "generated", "code": "\n        parseExterns(input);", "entropy": 0.52490234375, "is_bug_line": false, "sus_score": 0.65631103515625, "per_token_entropy": [0.21875, 1.41796875, 0.427490234375, 2.384185791015625e-07, 0.308837890625, 1.1201171875, 0.1202392578125, 0.583984375], "tokens": [291, 3185, 571, 900, 101, 26, 1131, 293]}
{"line_number": 994, "line_type": "original", "code": "    externs.add(0, input);", "entropy": 2.66796875, "is_bug_line": false, "sus_score": 0.65631103515625, "per_token_entropy": [8.0625, 6.171875, 0.08563232421875, 1.1064453125, 0.0721435546875, 0.016998291015625, 10.265625, 0.33935546875, 0.54150390625, 0.00991058349609375], "tokens": [264, 12098, 101, 32, 669, 26, 34, 30, 1509, 293]}
{"line_number": 994, "line_type": "generated", "code": "\n\n  /**\n   * Creates an input from a {@link SourceFile}.\n   *\n   * @param sourceFile the {@code SourceFile}\n   * @return the {@code CompilerInput}\n   */\n  protected CompilerInput createInput(SourceFile sourceFile) {", "entropy": 0.5771484375, "is_bug_line": false, "sus_score": 0.65631103515625, "per_token_entropy": [0.478759765625, 1.5322265625, 0.46923828125, 0.0006351470947265625, 3.4375, 1.611328125, 1.0078125, 1.63671875, 0.5693359375, 2.611328125, 0.1759033203125, 0.587890625, 0.221435546875, 1.2109375, 0.46728515625, 0.27734375, 0.59228515625, 0.006603240966796875, 0.54931640625, 0.1983642578125, 0.8740234375, 0.1549072265625, 2.138671875, 1.4453125, 1.3291015625, 0.0236968994140625, 0.00278472900390625, 0.060455322265625, 1.0087890625, 0.12152099609375, 0.014190673828125, 0.76025390625, 0.5439453125, 1.1328125, 0.161865234375, 0.051788330078125, 0.0022144317626953125, 0.0100250244140625, 0.45654296875, 0.126953125, 0.0032711029052734375, 0.85302734375, 0.0255584716796875, 4.494190216064453e-05, 0.634765625, 0.261474609375, 0.080322265625, 0.009857177734375, 0.00437164306640625, 0.0005450248718261719, 0.05572509765625, 0.00923919677734375], "tokens": [719, 1022, 664, 319, 9301, 600, 1509, 645, 312, 3088, 1204, 6374, 974, 4009, 664, 319, 664, 319, 477, 753, 1914, 974, 322, 3088, 687, 6374, 974, 111, 664, 319, 477, 601, 322, 3088, 687, 20209, 1612, 111, 664, 569, 334, 2522, 20209, 1612, 1487, 1612, 26, 17900, 1914, 974, 27, 301]}
{"line_number": 2945, "line_type": "original", "code": "", "entropy": 0.31689453125, "is_bug_line": false, "sus_score": 0.6552035212516785, "per_token_entropy": [0.31689453125], "tokens": [203]}
{"line_number": 2945, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6552035212516785, "per_token_entropy": [], "tokens": []}
{"line_number": 1720, "line_type": "original", "code": "  public LanguageMode languageMode() {", "entropy": 3.029296875, "is_bug_line": false, "sus_score": 0.6453182697296143, "per_token_entropy": [3.09765625, 3.208984375, 11.3515625, 0.008819580078125, 4.9140625, 0.365234375, 1.2822265625, 0.01230621337890625], "tokens": [225, 562, 6633, 2101, 2898, 2101, 346, 301]}
{"line_number": 1720, "line_type": "generated", "code": "\n  private static final Set<String> SUPPRESSABLE_WARNINGS =\n      ImmutableSet.of(\n          \"ambiguousFunctionDecl\",\n          \"checkRegExp\",\n          \"deprecated\",\n          \"duplicate\",\n          \"es3\",\n          \"es5strict\",", "entropy": 0.2415771484375, "is_bug_line": false, "sus_score": 0.6453182697296143, "per_token_entropy": [0.39453125, 0.6357421875, 0.2059326171875, 0.095458984375, 0.865234375, 0.00806427001953125, 0.291015625, 0.00016629695892333984, 0.9208984375, 0.0173492431640625, 0.71923828125, 0.041778564453125, 0.0341796875, 0.537109375, 0.06915283203125, 1.5693359375, 0.415771484375, 0.0012874603271484375, 0.3828125, 0.011962890625, 0.372314453125, 0.67919921875, 0.90087890625, 0.64501953125, 0.0001379251480102539, 0.03192138671875, 0.005138397216796875, 0.00461578369140625, 0.09320068359375, 0.0051116943359375, 0.328369140625, 0.28759765625, 0.00014293193817138672, 0.0280609130859375, 0.0024280548095703125, 1.0068359375, 0.0027675628662109375, 0.012786865234375, 0.0017919540405273438, 0.09698486328125, 0.01276397705078125, 0.00400543212890625, 0.0017099380493164062, 0.341552734375, 0.197509765625, 0.0019359588623046875, 0.01666259765625, 0.0016965866088867188, 0.11376953125, 0.09466552734375, 0.052520751953125, 0.0004260540008544922], "tokens": [334, 945, 907, 1158, 1756, 46, 652, 48, 28135, 8412, 2147, 81, 10431, 69, 280, 397, 12932, 885, 32, 1028, 26, 616, 313, 2733, 16879, 2447, 5484, 392, 616, 313, 1553, 28258, 392, 616, 313, 15040, 392, 616, 313, 19992, 392, 616, 313, 307, 37, 392, 616, 313, 307, 39, 5848, 392]}
{"line_number": 1274, "line_type": "original", "code": "  Node parseSyntheticCode(String js) {", "entropy": 2.986328125, "is_bug_line": false, "sus_score": 0.6410406231880188, "per_token_entropy": [4.80078125, 2.61328125, 7.015625, 13.1171875, 0.0012960433959960938, 0.10693359375, 0.5712890625, 0.80615234375, 3.123046875, 0.59033203125, 0.10260009765625], "tokens": [225, 4004, 3185, 24105, 18228, 1227, 26, 652, 4060, 27, 301]}
{"line_number": 1274, "line_type": "generated", "code": "\n          return jsRoot.toStringTree();\n        } finally {\n          stopTracer(tracer, \"toSource\");\n        }\n      }\n    });\n  }\n\n  /**\n   * Converts a subtree back to js code.\n   */\n  public String toSource(Node n", "entropy": 0.174072265625, "is_bug_line": false, "sus_score": 0.6410406231880188, "per_token_entropy": [0.215576171875, 0.86279296875, 1.1923828125, 0.11016845703125, 0.06268310546875, 0.492919921875, 0.34130859375, 0.625, 0.055389404296875, 0.0032196044921875, 0.010711669921875, 0.0003705024719238281, 0.024200439453125, 0.0430908203125, 0.0002620220184326172, 0.00020420551300048828, 0.0001347064971923828, 0.00665283203125, 0.0008535385131835938, 0.00472259521484375, 0.0005555152893066406, 0.0020694732666015625, 0.007122039794921875, 0.00036215782165527344, 0.0205841064453125, 0.0019588470458984375, 0.1290283203125, 0.07977294921875, 0.00879669189453125, 0.0008769035339355469, 0.2060546875, 0.60693359375, 0.0731201171875, 0.0003368854522705078, 0.607421875, 0.837890625, 0.250732421875, 0.69677734375, 0.02301025390625, 0.1573486328125, 0.04144287109375, 0.0704345703125, 0.100830078125, 0.1650390625, 0.005489349365234375, 0.29736328125, 0.135986328125, 0.12310791015625, 0.02386474609375, 0.0012950897216796875, 0.0186767578125, 0.3046875], "tokens": [616, 442, 4060, 4058, 32, 3108, 3350, 473, 291, 320, 8295, 301, 616, 4719, 24046, 26, 30209, 30, 313, 452, 2028, 724, 291, 320, 397, 320, 284, 1122, 334, 320, 719, 1022, 664, 319, 25337, 312, 37255, 1751, 372, 4060, 1340, 32, 664, 569, 334, 562, 892, 372, 2028, 26, 1212, 310]}
{"line_number": 1268, "line_type": "original", "code": "    initCompilerOptionsIfTesting();", "entropy": 1.712890625, "is_bug_line": false, "sus_score": 0.6384134292602539, "per_token_entropy": [2.783203125, 8.015625, 0.95703125, 0.046356201171875, 0.1484375, 0.0021209716796875, 0.040435791015625], "tokens": [264, 3219, 8115, 2031, 2797, 10855, 473]}
{"line_number": 1268, "line_type": "generated", "code": "\n   *\n   * @return The js code.\n   */\n  @Override\n  public String toSource() {\n    return toSource(jsRoot);\n  }\n\n  /**\n   * Converts a subtree back to js code.\n   *\n   * @return The js", "entropy": 0.3310546875, "is_bug_line": false, "sus_score": 0.6384134292602539, "per_token_entropy": [0.1732177734375, 0.62646484375, 0.9521484375, 0.0318603515625, 0.417236328125, 0.9130859375, 0.7060546875, 1.0673828125, 0.5302734375, 1.056640625, 0.040740966796875, 0.04522705078125, 0.0180816650390625, 0.96484375, 0.008514404296875, 0.00382232666015625, 0.29833984375, 0.017059326171875, 0.003162384033203125, 0.11016845703125, 0.414794921875, 0.0007581710815429688, 0.15185546875, 1.212890625, 0.9677734375, 0.06439208984375, 0.01287841796875, 1.5673828125, 0.002468109130859375, 0.3037109375, 0.00859832763671875, 0.0003447532653808594, 0.054901123046875, 0.716796875, 0.053924560546875, 0.0003490447998046875, 0.1900634765625, 0.486572265625, 0.1829833984375, 0.5439453125, 0.013336181640625, 0.0916748046875, 0.060028076171875, 0.044464111328125, 0.44189453125, 0.0732421875, 0.1033935546875, 0.0011501312255859375, 0.038909912109375, 1.3974609375, 0.01593017578125, 0.0153350830078125], "tokens": [664, 319, 664, 319, 477, 601, 886, 4060, 1340, 32, 664, 569, 334, 477, 1788, 334, 562, 892, 372, 2028, 346, 301, 284, 442, 372, 2028, 26, 754, 4058, 293, 334, 320, 719, 1022, 664, 319, 25337, 312, 37255, 1751, 372, 4060, 1340, 32, 664, 319, 664, 319, 477, 601, 886, 4060]}
{"line_number": 2911, "line_type": "original", "code": "", "entropy": 0.31689453125, "is_bug_line": false, "sus_score": 0.6344676613807678, "per_token_entropy": [0.31689453125], "tokens": [203]}
{"line_number": 2911, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6344676613807678, "per_token_entropy": [], "tokens": []}
{"line_number": 1853, "line_type": "original", "code": "    if (inputsByName.containsKey(sourceName)) {", "entropy": 1.5380859375, "is_bug_line": false, "sus_score": 0.6341086626052856, "per_token_entropy": [4.03515625, 2.45703125, 0.0694580078125, 5.04296875, 1.0693359375, 0.190185546875, 2.982421875, 0.29150390625, 1.1484375, 1.0107421875, 0.0467529296875, 0.10894775390625], "tokens": [264, 415, 308, 8075, 9813, 32, 15943, 26, 1855, 558, 490, 301]}
{"line_number": 1853, "line_type": "generated", "code": "\n    return sourceMap;\n  }\n\n  //------------------------------------------------------------------------\n  // Private helpers\n  //------------------------------------------------------------------------\n\n  private void addSourceMap(SourceFile sourceFile) {\n    if (sourceMap == null) {\n      sourceMap = new SourceMap(sourceFile);\n   ", "entropy": 0.5244140625, "is_bug_line": false, "sus_score": 0.6341086626052856, "per_token_entropy": [0.1612548828125, 0.36376953125, 0.414306640625, 0.022430419921875, 0.174560546875, 0.0504150390625, 0.00098419189453125, 0.264404296875, 2.25390625, 0.1689453125, 0.035797119140625, 0.0124359130859375, 0.0008935928344726562, 2.66796875, 1.0439453125, 0.0204315185546875, 0.00017082691192626953, 0.0037899017333984375, 0.0024585723876953125, 0.0762939453125, 0.71923828125, 0.826171875, 2.673828125, 3.529296875, 1.505859375, 0.8642578125, 0.90185546875, 0.95703125, 0.44384765625, 0.39892578125, 0.043426513671875, 0.2410888671875, 0.8193359375, 0.1185302734375, 0.271240234375, 0.240966796875, 1.103515625, 0.00722503662109375, 0.0960693359375, 0.002414703369140625, 0.0272979736328125, 0.46533203125, 0.0032825469970703125, 0.00954437255859375, 0.10003662109375, 0.0712890625, 0.0052490234375, 0.85107421875, 0.958984375, 0.054412841796875, 1.0400390625, 0.1763916015625], "tokens": [284, 442, 1914, 1208, 45, 334, 320, 719, 434, 2657, 430, 334, 434, 12400, 18564, 334, 434, 2657, 430, 719, 945, 763, 1015, 2028, 1208, 26, 17900, 1914, 974, 27, 301, 284, 415, 308, 1855, 1208, 610, 744, 27, 301, 397, 1914, 1208, 280, 537, 6374, 1208, 26, 1855, 974, 293, 284]}
{"line_number": 717, "line_type": "original", "code": "   */", "entropy": 5.6640625, "is_bug_line": false, "sus_score": 0.6323831677436829, "per_token_entropy": [8.6015625, 2.724609375], "tokens": [261, 569]}
{"line_number": 717, "line_type": "generated", "code": "\n\n  /**\n   * Process the AST, running the various passes in the compiler.\n   */\n  public void process(Node externs, Node root) {\n    Preconditions.checkState(externsRoot == null);\n    Preconditions.checkState(jsRoot ==", "entropy": 0.6279296875, "is_bug_line": false, "sus_score": 0.6323831677436829, "per_token_entropy": [1.20703125, 1.1865234375, 0.22314453125, 0.0003085136413574219, 4.0703125, 1.095703125, 1.103515625, 1.548828125, 2.041015625, 1.4755859375, 2.9375, 1.412109375, 1.9140625, 0.56201171875, 2.3828125, 0.79833984375, 0.12548828125, 0.38720703125, 0.01079559326171875, 0.32568359375, 0.038330078125, 0.0107879638671875, 0.62353515625, 0.342041015625, 0.045623779296875, 0.024322509765625, 0.978515625, 0.0178985595703125, 0.19873046875, 0.0194854736328125, 0.00586700439453125, 0.065185546875, 2.529296875, 0.0003407001495361328, 0.056610107421875, 0.1865234375, 0.1737060546875, 1.1474609375, 0.03814697265625, 0.312744140625, 0.01148223876953125, 0.0011749267578125, 0.865234375, 0.018890380859375, 0.1021728515625, 5.0067901611328125e-06, 0.0001894235610961914, 0.003520965576171875, 0.0004215240478515625, 0.0276641845703125, 7.021427154541016e-05, 0.0011758804321289062], "tokens": [719, 1022, 664, 319, 6833, 322, 16095, 30, 3974, 322, 10297, 18200, 328, 322, 8980, 32, 664, 569, 334, 562, 763, 2164, 26, 1212, 12098, 101, 30, 4004, 3051, 27, 301, 284, 40596, 32, 1553, 1078, 26, 4318, 101, 4058, 610, 744, 293, 284, 40596, 32, 1553, 1078, 26, 754, 4058, 610]}
{"line_number": 957, "line_type": "original", "code": "", "entropy": 3.384765625, "is_bug_line": false, "sus_score": 0.6320821046829224, "per_token_entropy": [3.384765625], "tokens": [203]}
{"line_number": 957, "line_type": "generated", "code": "\n  /**\n   * Creates a new input file.\n   * @param name The name of the input file.\n   * @return The newly created input.\n   */\n  protected CompilerInput newInput(String name) {\n    if (inputsByName.containsKey(", "entropy": 0.36962890625, "is_bug_line": false, "sus_score": 0.6320821046829224, "per_token_entropy": [0.337646484375, 0.7041015625, 0.4765625, 0.0004189014434814453, 2.775390625, 0.2388916015625, 0.2435302734375, 1.087890625, 0.99267578125, 1.7685546875, 0.3173828125, 0.14697265625, 0.60400390625, 0.06732177734375, 0.7119140625, 0.1513671875, 0.248291015625, 0.064208984375, 0.0218658447265625, 1.3388671875, 0.3359375, 0.232666015625, 0.1339111328125, 0.210205078125, 0.0255889892578125, 1.2158203125, 0.3837890625, 1.2275390625, 0.115234375, 0.1844482421875, 1.1982421875, 0.0251617431640625, 0.12152099609375, 0.00738525390625, 0.364013671875, 0.0296630859375, 0.00018656253814697266, 0.078369140625, 0.25146484375, 0.0025615692138671875, 0.03521728515625, 0.00643157958984375, 0.06451416015625, 0.0016307830810546875, 0.00885009765625, 0.400146484375, 0.00833892822265625, 0.254638671875, 0.00045752525329589844, 0.0002808570861816406, 0.0031375885009765625, 6.0677528381347656e-05], "tokens": [334, 1022, 664, 319, 9301, 312, 537, 1509, 803, 32, 664, 319, 477, 753, 636, 886, 636, 432, 322, 1509, 803, 32, 664, 319, 477, 601, 886, 16381, 3272, 1509, 32, 664, 569, 334, 2522, 20209, 1612, 537, 1612, 26, 652, 636, 27, 301, 284, 415, 308, 8075, 9813, 32, 15943, 26]}
{"line_number": 1070, "line_type": "original", "code": "", "entropy": 3.90625, "is_bug_line": false, "sus_score": 0.6307875514030457, "per_token_entropy": [3.90625], "tokens": [203]}
{"line_number": 1070, "line_type": "generated", "code": "\n  @Override\n  protected JSParser createParser() {\n    return new JSParser(\n        this,\n        options.languageIn,\n        options.languageOut,\n        options.devMode,\n        options.checkTypes,\n        options.checkSymbols,\n        options", "entropy": 0.4580078125, "is_bug_line": false, "sus_score": 0.6307875514030457, "per_token_entropy": [0.2344970703125, 0.65869140625, 0.00783538818359375, 0.0028076171875, 1.5966796875, 1.806640625, 0.5830078125, 0.039520263671875, 0.0518798828125, 0.51171875, 0.01172637939453125, 0.0133514404296875, 0.403076171875, 0.07904052734375, 0.09381103515625, 0.025390625, 0.0259246826171875, 1.16015625, 1.1259765625, 0.021148681640625, 1.001953125, 0.90478515625, 0.1474609375, 1.326171875, 1.0126953125, 0.04705810546875, 0.07244873046875, 0.224853515625, 0.004547119140625, 0.3603515625, 0.0018520355224609375, 0.0797119140625, 0.002300262451171875, 0.358154296875, 0.006237030029296875, 1.453125, 0.0491943359375, 0.273193359375, 0.01275634765625, 0.27197265625, 0.00043773651123046875, 3.236328125, 0.1597900390625, 0.09429931640625, 0.0064544677734375, 0.135009765625, 0.0007410049438476562, 2.365234375, 1.513671875, 0.1058349609375, 0.0019140243530273438, 0.1243896484375], "tokens": [334, 477, 1788, 334, 2522, 7750, 2825, 1487, 2825, 346, 301, 284, 442, 537, 7750, 2825, 26, 291, 458, 30, 291, 2075, 32, 4189, 383, 30, 291, 2075, 32, 4189, 1512, 30, 291, 2075, 32, 1902, 2101, 30, 291, 2075, 32, 1553, 2424, 30, 291, 2075, 32, 1553, 19898, 30, 291, 2075]}
{"line_number": 683, "line_type": "original", "code": "  }", "entropy": 1.099609375, "is_bug_line": false, "sus_score": 0.6294716000556946, "per_token_entropy": [2.171875, 0.0271148681640625], "tokens": [225, 320]}
{"line_number": 683, "line_type": "generated", "code": "\n    }\n\n    runCustomPasses(CustomPassExecutionTime.AFTER_CHECKS);\n  }\n\n  /**\n   * Run custom passes.\n   *\n   * @param time The time at which the custom passes should be run.\n   */\n  private void runCustom", "entropy": 0.36474609375, "is_bug_line": false, "sus_score": 0.6294716000556946, "per_token_entropy": [0.391845703125, 0.2012939453125, 0.398193359375, 0.94921875, 0.0240936279296875, 0.0007405281066894531, 4.172325134277344e-06, 0.0015592575073242188, 0.001644134521484375, 2.6226043701171875e-06, 1.2993812561035156e-05, 1.9550323486328125e-05, 8.678436279296875e-05, 0.1517333984375, 0.00016701221466064453, 0.00923919677734375, 0.02288818359375, 0.640625, 0.001354217529296875, 0.1307373046875, 1.2470703125, 0.1351318359375, 0.00021851062774658203, 2.087890625, 2.384765625, 0.1619873046875, 1.1171875, 0.1693115234375, 0.708984375, 0.382080078125, 0.00238037109375, 0.141357421875, 0.038421630859375, 1.203125, 0.98193359375, 0.68603515625, 0.767578125, 0.002292633056640625, 0.5966796875, 0.58056640625, 0.19873046875, 0.73974609375, 0.485107421875, 0.1546630859375, 0.1796875, 0.0721435546875, 0.043060302734375, 0.0034389495849609375, 0.76171875, 0.0093994140625, 0.00035572052001953125, 0.0002052783966064453], "tokens": [284, 320, 446, 1420, 3402, 66, 2515, 26, 3402, 6129, 6136, 1043, 32, 33177, 81, 28157, 293, 334, 320, 719, 1022, 664, 319, 4489, 3115, 18200, 32, 664, 319, 664, 319, 477, 753, 1133, 886, 1133, 821, 1510, 322, 3115, 18200, 1395, 526, 1420, 32, 664, 569, 334, 945, 763, 1420, 3402]}
{"line_number": 1970, "line_type": "original", "code": "   */", "entropy": 3.98828125, "is_bug_line": false, "sus_score": 0.6288564801216125, "per_token_entropy": [6.375, 1.603515625], "tokens": [261, 569]}
{"line_number": 1970, "line_type": "generated", "code": "  public static IntermediateState createForTesting() {\n    IntermediateState state = new IntermediateState();\n    state.externsRoot = null;\n    state.jsRoot = null;\n    state.externs = new ArrayList<>();\n    state.inputs =", "entropy": 0.311279296875, "is_bug_line": false, "sus_score": 0.6288564801216125, "per_token_entropy": [1.779296875, 1.2412109375, 0.998046875, 1.1474609375, 0.0003311634063720703, 0.0011196136474609375, 1.8251953125, 2.759765625, 0.73779296875, 0.0212249755859375, 0.06402587890625, 0.73046875, 0.00019621849060058594, 0.0008578300476074219, 0.1444091796875, 0.004680633544921875, 0.01247406005859375, 0.001789093017578125, 1.1920928955078125e-07, 1.239776611328125e-05, 0.0011682510375976562, 0.2047119140625, 0.30859375, 0.0012121200561523438, 0.5576171875, 0.0004220008850097656, 0.27294921875, 0.0005879402160644531, 1.71875, 0.0004630088806152344, 0.01285552978515625, 0.02020263671875, 0.0003864765167236328, 0.0828857421875, 6.508827209472656e-05, 6.401538848876953e-05, 0.136962890625, 0.00018203258514404297, 0.0162200927734375, 0.042938232421875, 0.0002589225769042969, 0.07745361328125, 0.0003421306610107422, 0.001506805419921875, 0.80029296875, 0.006103515625, 0.38916015625, 0.006298065185546875, 0.006107330322265625, 5.4955482482910156e-05, 0.04888916015625, 0.0002551078796386719], "tokens": [225, 562, 907, 4803, 6246, 1078, 1487, 37484, 346, 301, 284, 4803, 6246, 1078, 1603, 280, 537, 4803, 6246, 1078, 473, 284, 1603, 32, 4318, 101, 4058, 280, 744, 45, 284, 1603, 32, 754, 4058, 280, 744, 45, 284, 1603, 32, 4318, 101, 280, 537, 5059, 6981, 284, 1603, 32, 8075, 280]}
{"line_number": 1624, "line_type": "original", "code": "  public void processDefines() {", "entropy": 4.4453125, "is_bug_line": false, "sus_score": 0.6283864974975586, "per_token_entropy": [2.62890625, 10.1640625, 1.8564453125, 4.16015625, 10.8359375, 1.2421875, 0.228515625], "tokens": [225, 562, 763, 2164, 32652, 346, 301]}
{"line_number": 1624, "line_type": "generated", "code": "    new ArrayList<>();\n\n  public void addChangeHandler(CodeChangeHandler handler) {\n    codeChangeHandlers.add(handler);\n  }\n\n  /**\n   * Runs the pass specified by {@code name} over the AST.\n   *\n   * @param name", "entropy": 0.5498046875, "is_bug_line": false, "sus_score": 0.6283864974975586, "per_token_entropy": [1.41015625, 0.92626953125, 0.0181427001953125, 0.274169921875, 1.05078125, 1.4970703125, 0.313232421875, 0.293212890625, 0.92529296875, 0.00853729248046875, 0.0011625289916992188, 0.03204345703125, 1.4662742614746094e-05, 0.0003898143768310547, 0.14111328125, 0.0011577606201171875, 0.000682830810546875, 0.02838134765625, 0.3515625, 4.410743713378906e-06, 0.00020992755889892578, 7.259845733642578e-05, 0.00058746337890625, 0.00023674964904785156, 0.01092529296875, 8.630752563476562e-05, 0.077880859375, 0.00036907196044921875, 0.05816650390625, 1.7705078125, 0.344482421875, 0.0002684593200683594, 4.12109375, 1.2470703125, 2.896484375, 2.73046875, 0.2205810546875, 0.60693359375, 0.050537109375, 1.4677734375, 0.354736328125, 1.8486328125, 0.1529541015625, 0.45556640625, 0.57666015625, 0.345947265625, 0.576171875, 0.4501953125, 0.00395965576171875, 0.38427734375, 0.30224609375, 0.262939453125], "tokens": [264, 537, 5059, 6981, 719, 562, 763, 1015, 1791, 1972, 26, 1227, 1791, 1972, 4899, 27, 301, 284, 1340, 1791, 15556, 32, 669, 26, 4531, 293, 334, 320, 719, 1022, 664, 319, 35696, 322, 3097, 3191, 810, 3088, 687, 636, 111, 2288, 322, 16095, 32, 664, 319, 664, 319, 477, 753, 636]}
{"line_number": 1863, "line_type": "original", "code": "    SourceFile input = getSourceFileByName(sourceName);", "entropy": 1.7958984375, "is_bug_line": false, "sus_score": 0.6279817223548889, "per_token_entropy": [7.0703125, 4.66796875, 1.501953125, 4.9296875, 1.431640625, 1.4033203125, 0.0362548828125, 0.061767578125, 0.1494140625, 0.25, 0.04315185546875, 0.00417327880859375], "tokens": [264, 6374, 974, 1509, 280, 622, 17900, 9813, 26, 1855, 558, 293]}
{"line_number": 1863, "line_type": "generated", "code": "\n  //------------------------------------------------------------------------\n  // Package-private pass factories\n  //------------------------------------------------------------------------\n\n  @Override\n  public void add(CompilerPass pass) {\n    passes.add(pass);\n  }\n\n  @Override\n  public void add(List<? extends CompilerPass> passes", "entropy": 0.595703125, "is_bug_line": false, "sus_score": 0.6279817223548889, "per_token_entropy": [0.61865234375, 2.009765625, 0.21044921875, 0.035888671875, 0.0281982421875, 0.002628326416015625, 3.16796875, 0.07684326171875, 0.0262451171875, 3.701171875, 3.203125, 0.1636962890625, 0.0001366138458251953, 0.01473236083984375, 0.0019683837890625, 0.11358642578125, 0.83203125, 0.02288818359375, 0.0022754669189453125, 2.396484375, 3.041015625, 1.5146484375, 1.4287109375, 0.8349609375, 0.0396728515625, 0.07659912109375, 0.06494140625, 0.007434844970703125, 0.01983642578125, 1.328125, 0.0902099609375, 0.030792236328125, 0.0172119140625, 0.0299530029296875, 0.005855560302734375, 0.2000732421875, 9.906291961669922e-05, 0.121826171875, 0.207275390625, 0.0026340484619140625, 0.0004277229309082031, 0.379638671875, 0.53515625, 0.54833984375, 0.5947265625, 2.291015625, 0.8818359375, 0.000316619873046875, 0.0032558441162109375, 0.0005121231079101562, 0.00040411949157714844, 0.035186767578125], "tokens": [334, 434, 2657, 430, 334, 434, 9707, 31, 2055, 3097, 47723, 334, 434, 2657, 430, 719, 477, 1788, 334, 562, 763, 1015, 26, 8115, 6129, 3097, 27, 301, 284, 18200, 32, 669, 26, 4617, 293, 334, 320, 719, 477, 1788, 334, 562, 763, 1015, 26, 720, 1888, 2026, 20209, 6129, 48, 18200]}
