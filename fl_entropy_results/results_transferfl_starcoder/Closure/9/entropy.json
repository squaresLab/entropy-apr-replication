{"line_number": 121, "line_type": "original", "code": "      filename = filename.substring(filenamePrefix.length());", "entropy": 2.416015625, "is_bug_line": true, "sus_score": 0.499606728553772, "per_token_entropy": [3.4453125, 10.6796875, 6.546875, 3.06640625, 0.65283203125, 1.7265625, 0.01264190673828125, 1.9560546875, 0.60400390625, 0.0570068359375, 0.00582122802734375, 0.240966796875], "tokens": [647, 4870, 280, 4870, 32, 8723, 26, 3607, 5419, 32, 1322, 1035]}
{"line_number": 121, "line_type": "generated", "code": ")));\n    }\n\n    private Node getCurrentScriptNode(Node n) {\n      while (!n.isScript()) {\n        n = n.getParent();\n      }\n      return n;\n    }\n\n    /**\n     * Visits the script node.\n     */\n    private", "entropy": 0.330322265625, "is_bug_line": true, "sus_score": 0.499606728553772, "per_token_entropy": [0.9873046875, 0.419189453125, 9.393692016601562e-05, 0.05072021484375, 1.3310546875, 0.599609375, 0.0111846923828125, 0.0001512765884399414, 8.082389831542969e-05, 0.0007867813110351562, 0.0010385513305664062, 0.2484130859375, 0.0004611015319824219, 0.000171661376953125, 0.00992584228515625, 1.0419921875, 1.70703125, 0.014312744140625, 1.3589859008789062e-05, 0.006740570068359375, 0.00177001953125, 0.029327392578125, 0.004642486572265625, 0.005237579345703125, 0.057403564453125, 0.0003414154052734375, 0.0011491775512695312, 2.777576446533203e-05, 0.000667572021484375, 0.0018777847290039062, 0.09466552734375, 7.009506225585938e-05, 0.077392578125, 0.00710296630859375, 0.0006747245788574219, 0.0005331039428710938, 0.0016012191772460938, 0.00019180774688720703, 0.039154052734375, 0.44921875, 0.046356201171875, 0.00022089481353759766, 2.44140625, 0.0170135498046875, 2.32421875, 1.1298828125, 0.96142578125, 1.2294921875, 1.6337890625, 0.1580810546875, 0.0014286041259765625, 0.02691650390625], "tokens": [4236, 284, 320, 446, 945, 4004, 23418, 3206, 1212, 26, 1212, 310, 27, 301, 397, 2218, 1429, 96, 32, 297, 3206, 1157, 301, 291, 310, 280, 310, 32, 18789, 473, 397, 320, 397, 442, 310, 45, 284, 320, 446, 1022, 275, 319, 6255, 1507, 322, 3261, 1541, 32, 275, 569, 284, 945]}
{"line_number": 54, "line_type": "original", "code": "    this(compiler, filenamePrefix, true);", "entropy": 2.392578125, "is_bug_line": false, "sus_score": 0.49578699469566345, "per_token_entropy": [3.216796875, 9.5234375, 5.50390625, 1.0283203125, 0.0792236328125, 1.0234375, 0.13818359375, 0.462646484375, 2.72265625, 0.2218017578125], "tokens": [264, 458, 26, 10199, 30, 4870, 5419, 30, 861, 293]}
{"line_number": 54, "line_type": "generated", "code": "\n\n    return toModuleName(normalizeSourceName(requiredFilename));\n  }\n\n  /**\n   * Normalize a filename.\n   * - Turns relative filenames into absolute filenames.\n   * - Removes leading./ and./ or../ from filenames.\n   * - Replaces back", "entropy": 0.8466796875, "is_bug_line": false, "sus_score": 0.49578699469566345, "per_token_entropy": [1.724609375, 0.90771484375, 0.3193359375, 0.00037360191345214844, 0.0044097900390625, 1.08984375, 0.044708251953125, 0.0005712509155273438, 0.0019683837890625, 0.395263671875, 0.0006389617919921875, 0.03778076171875, 0.0062255859375, 0.0007848739624023438, 0.1473388671875, 0.288818359375, 0.057342529296875, 5.5789947509765625e-05, 2.32421875, 0.7802734375, 0.9912109375, 2.8515625, 0.99462890625, 0.39208984375, 2.720703125, 2.576171875, 0.455322265625, 2.21875, 2.037109375, 0.421142578125, 0.064697265625, 0.984375, 0.73974609375, 0.028167724609375, 0.0185546875, 0.032440185546875, 1.2109375, 0.99267578125, 0.51513671875, 1.595703125, 1.7392578125, 2.080078125, 0.2203369140625, 2.705078125, 1.3740234375, 0.34326171875, 0.01430511474609375, 0.322021484375, 0.11749267578125, 2.63671875, 0.003940582275390625, 2.5078125], "tokens": [446, 442, 372, 32547, 26, 12944, 2028, 558, 26, 3648, 10239, 876, 334, 320, 719, 1022, 664, 319, 40249, 312, 4870, 32, 664, 319, 429, 20349, 101, 6491, 26719, 1991, 7976, 26719, 32, 664, 319, 429, 24992, 15996, 5841, 461, 5841, 556, 11762, 645, 26719, 32, 664, 319, 429, 902, 15778, 1751]}
{"line_number": 120, "line_type": "original", "code": "    if (filename.indexOf(filenamePrefix) == 0) {", "entropy": 2.279296875, "is_bug_line": true, "sus_score": 0.45018938183784485, "per_token_entropy": [4.65625, 9.0390625, 0.44140625, 8.7109375, 2.193359375, 2.984375, 1.3427734375, 4.140625, 0.04376220703125, 0.08843994140625, 0.358642578125, 0.10186767578125, 0.0014219284057617188, 0.02984619140625, 0.0601806640625], "tokens": [264, 415, 308, 3607, 32, 7142, 26, 3607, 5419, 27, 610, 225, 34, 27, 301]}
{"line_number": 120, "line_type": "generated", "code": "));\n    }\n\n    /**\n     * Visits a script node and adds a call to goog.require for any modules that\n     * have been encountered.\n     */\n    private void visitScript(NodeTraversal t, Node script) {\n      if (scriptNodeCount", "entropy": 0.55712890625, "is_bug_line": true, "sus_score": 0.45018938183784485, "per_token_entropy": [1.6943359375, 0.51806640625, 0.0007104873657226562, 0.049713134765625, 0.343994140625, 0.03912353515625, 0.00013887882232666016, 2.10546875, 0.01279449462890625, 1.369140625, 0.53076171875, 0.3994140625, 1.791015625, 2.375, 1.359375, 2.0859375, 0.04150390625, 0.9990234375, 0.004337310791015625, 0.85791015625, 1.0625, 1.615234375, 1.021484375, 1.2431640625, 0.0097503662109375, 0.0007610321044921875, 1.556640625, 0.52734375, 1.896484375, 1.111328125, 0.25, 0.0411376953125, 0.0009284019470214844, 0.022735595703125, 0.00627899169921875, 0.0002582073211669922, 0.00012671947479248047, 0.00029397010803222656, 0.0014390945434570312, 0.00016307830810546875, 0.0041046142578125, 1.2278556823730469e-05, 0.0027008056640625, 0.27099609375, 0.031097412109375, 0.0002256631851196289, 0.03778076171875, 1.26953125, 0.08209228515625, 0.1839599609375, 0.140380859375, 0.000553131103515625], "tokens": [876, 284, 320, 446, 1022, 275, 319, 6255, 1507, 312, 3261, 1541, 461, 10476, 312, 1476, 372, 47917, 32, 1981, 436, 1346, 7896, 688, 275, 319, 1159, 2583, 18927, 32, 275, 569, 284, 945, 763, 7725, 3206, 26, 1212, 35699, 273, 30, 4004, 3261, 27, 301, 397, 415, 308, 1423, 1212, 1534]}
{"line_number": 89, "line_type": "original", "code": "    return MODULE_NAME_PREFIX +", "entropy": 3.306640625, "is_bug_line": false, "sus_score": 0.4165380597114563, "per_token_entropy": [5.37109375, 9.65625, 7.62109375, 0.023345947265625, 0.79052734375, 0.025909423828125, 0.067626953125, 2.890625], "tokens": [264, 442, 30522, 81, 2474, 81, 9857, 474]}
{"line_number": 89, "line_type": "generated", "code": "\n          n.getChild(0).matchesQualifiedName(\"require\")) {\n        processRequireCall(t, n, parent);\n      } else if (n.isAssign() && n.getFirstChild().matchesName(\"module\") &&\n          n.getLastChild().", "entropy": 0.301025390625, "is_bug_line": false, "sus_score": 0.4165380597114563, "per_token_entropy": [0.51220703125, 0.837890625, 0.0029697418212890625, 1.0078125, 0.59033203125, 0.026611328125, 0.0020427703857421875, 0.276611328125, 0.62109375, 0.5625, 0.21044921875, 0.36279296875, 0.0305938720703125, 0.74169921875, 2.001953125, 0.318115234375, 0.9443359375, 0.00997161865234375, 0.4111328125, 0.0116119384765625, 0.039825439453125, 0.77587890625, 0.1109619140625, 0.0290374755859375, 0.236083984375, 0.00020182132720947266, 0.401611328125, 0.039459228515625, 0.0308685302734375, 0.192626953125, 0.0008225440979003906, 0.08856201171875, 0.34765625, 0.2259521484375, 0.048919677734375, 0.40625, 0.0006608963012695312, 0.79150390625, 0.0007090568542480469, 0.0208892822265625, 0.370849609375, 0.61083984375, 0.053680419921875, 0.1444091796875, 0.28857421875, 0.2169189453125, 0.485595703125, 0.055999755859375, 0.00011551380157470703, 0.142578125, 0.0013532638549804688, 0.0028839111328125], "tokens": [616, 310, 32, 24213, 26, 34, 547, 8933, 41340, 440, 1981, 2131, 301, 291, 2164, 3797, 1853, 26, 102, 30, 310, 30, 2935, 293, 397, 320, 813, 415, 308, 96, 32, 297, 9079, 346, 962, 310, 32, 25657, 2931, 922, 8933, 558, 440, 1647, 657, 962, 616, 310, 32, 20197, 2931, 922]}
{"line_number": 323, "line_type": "original", "code": "", "entropy": 0.1846923828125, "is_bug_line": false, "sus_score": 0.38209524750709534, "per_token_entropy": [0.1846923828125], "tokens": [203]}
{"line_number": 323, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.38209524750709534, "per_token_entropy": [], "tokens": []}
{"line_number": 391, "line_type": "original", "code": "", "entropy": 0.1846923828125, "is_bug_line": false, "sus_score": 0.38209524750709534, "per_token_entropy": [0.1846923828125], "tokens": [203]}
{"line_number": 391, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.38209524750709534, "per_token_entropy": [], "tokens": []}
{"line_number": 82, "line_type": "original", "code": "", "entropy": 3.5859375, "is_bug_line": false, "sus_score": 0.3781599998474121, "per_token_entropy": [3.5859375], "tokens": [203]}
{"line_number": 82, "line_type": "generated", "code": "\n    @Override\n    public void visit(NodeTraversal t, Node n, Node parent) {\n      switch (n.getType()) {\n        case Token.CALL:\n          visitRequire(n);\n          break;\n        case Token.SCRIPT:\n          visitScript(", "entropy": 0.16552734375, "is_bug_line": false, "sus_score": 0.3781599998474121, "per_token_entropy": [0.2279052734375, 0.3671875, 0.00031447410583496094, 0.00942230224609375, 0.0022182464599609375, 0.005519866943359375, 0.024749755859375, 0.00026798248291015625, 0.00022137165069580078, 0.0133056640625, 0.0181884765625, 2.956390380859375e-05, 0.0002887248992919922, 0.0168609619140625, 0.00144195556640625, 0.0015363693237304688, 0.0017414093017578125, 6.663799285888672e-05, 0.0011091232299804688, 0.1146240234375, 1.5009765625, 0.02044677734375, 0.0006074905395507812, 1.6570091247558594e-05, 0.04986572265625, 8.356571197509766e-05, 0.0380859375, 0.19482421875, 0.0233612060546875, 0.1375732421875, 0.006443023681640625, 0.71142578125, 0.00188446044921875, 0.05426025390625, 0.751953125, 1.2841796875, 0.228515625, 0.79931640625, 0.43798828125, 0.0257568359375, 0.08544921875, 0.00018525123596191406, 0.1861572265625, 0.024139404296875, 0.00904083251953125, 6.556510925292969e-06, 0.8515625, 0.0006556510925292969, 0.0235595703125, 0.270263671875, 0.0687255859375, 0.0182952880859375], "tokens": [284, 477, 1788, 284, 562, 763, 7725, 26, 1212, 35699, 273, 30, 4004, 310, 30, 4004, 2935, 27, 301, 397, 3578, 308, 96, 32, 10272, 1157, 301, 291, 1135, 6512, 32, 5038, 44, 616, 7725, 3797, 26, 96, 293, 616, 1626, 45, 291, 1135, 6512, 32, 12210, 44, 616, 7725, 3206, 26]}
{"line_number": 62, "line_type": "original", "code": "    this.reportDependencies = reportDependencies;", "entropy": 1.99609375, "is_bug_line": false, "sus_score": 0.37619972229003906, "per_token_entropy": [4.14453125, 10.5078125, 0.0830078125, 2.541015625, 0.28515625, 0.240966796875, 0.14306640625, 0.0036220550537109375, 0.01371002197265625], "tokens": [264, 458, 32, 3734, 12713, 280, 3639, 12713, 45]}
{"line_number": 62, "line_type": "generated", "code": "\n    }\n    return toModuleName(normalizeSourceName(requiredFilename));\n  }\n\n  /**\n   * Turns a filename into a JS identifier that is used for globalNames in\n   * rewritten code. Removes leading./, replaces / with $, removes trailing", "entropy": 0.2454833984375, "is_bug_line": false, "sus_score": 0.37619972229003906, "per_token_entropy": [0.329345703125, 0.06719970703125, 0.7802734375, 0.0682373046875, 0.04364013671875, 3.1113624572753906e-05, 0.0006704330444335938, 0.89990234375, 0.0023651123046875, 6.139278411865234e-05, 0.00031113624572753906, 0.0086822509765625, 6.198883056640625e-06, 0.01233673095703125, 0.01284027099609375, 0.00047087669372558594, 0.14892578125, 0.3818359375, 0.06829833984375, 0.0005078315734863281, 2.0390625, 0.45361328125, 0.21142578125, 0.79736328125, 0.276611328125, 0.1295166015625, 0.65185546875, 0.1549072265625, 0.100830078125, 0.08135986328125, 0.03277587890625, 0.10504150390625, 2.486328125, 0.9013671875, 0.125244140625, 0.01506805419921875, 0.00023055076599121094, 0.0972900390625, 0.0013246536254882812, 0.00617218017578125, 0.035003662109375, 0.537109375, 0.051849365234375, 0.0933837890625, 0.0968017578125, 0.153564453125, 0.018798828125, 0.01146697998046875, 0.10479736328125, 0.056549072265625, 0.08380126953125, 0.0313720703125], "tokens": [284, 320, 284, 442, 372, 32547, 26, 12944, 2028, 558, 26, 3648, 10239, 876, 334, 320, 719, 1022, 664, 319, 20349, 101, 312, 4870, 1991, 312, 7750, 7248, 688, 438, 1654, 436, 3649, 4109, 328, 664, 319, 316, 15557, 1340, 32, 24992, 15996, 5841, 30, 30598, 517, 623, 398, 30, 20080, 19938]}
{"line_number": 124, "line_type": "original", "code": "    return filename;", "entropy": 4.24609375, "is_bug_line": true, "sus_score": 0.370773047208786, "per_token_entropy": [5.421875, 4.72265625, 6.18359375, 0.66259765625], "tokens": [264, 442, 4870, 45]}
{"line_number": 124, "line_type": "generated", "code": "\n\n    private Node getCurrentScriptNode(Node n) {\n      while (n!= null) {\n        if (n.isScript()) {\n          return n;\n        }\n        n = n.getParent();\n      }\n      throw new IllegalStateException(\"No enclosing script", "entropy": 0.2064208984375, "is_bug_line": true, "sus_score": 0.370773047208786, "per_token_entropy": [0.84912109375, 1.4580078125, 1.091796875, 0.0220794677734375, 0.0003178119659423828, 0.00013720989227294922, 0.0010471343994140625, 0.0011501312255859375, 0.228271484375, 0.0006270408630371094, 0.00031685829162597656, 0.0164794921875, 1.0712890625, 0.2425537109375, 0.0855712890625, 0.1610107421875, 0.00618743896484375, 0.77099609375, 0.0002675056457519531, 0.0016832351684570312, 0.0172119140625, 0.0035724639892578125, 0.0089263916015625, 0.0004184246063232422, 0.026031494140625, 0.0014944076538085938, 0.0092010498046875, 0.01031494140625, 0.0145721435546875, 0.010955810546875, 0.0008258819580078125, 0.0011730194091796875, 0.000942230224609375, 1.4066696166992188e-05, 0.15283203125, 0.032562255859375, 0.00029349327087402344, 0.004047393798828125, 5.2094459533691406e-05, 0.0007863044738769531, 0.0008678436279296875, 0.0035037994384765625, 8.71419906616211e-05, 0.11175537109375, 0.5380859375, 0.00485992431640625, 0.24169921875, 0.2178955078125, 1.3056640625, 1.900390625, 0.0020847320556640625, 0.0989990234375], "tokens": [446, 945, 4004, 23418, 3206, 1212, 26, 1212, 310, 27, 301, 397, 2218, 308, 96, 863, 744, 27, 301, 291, 415, 308, 96, 32, 297, 3206, 1157, 301, 616, 442, 310, 45, 291, 320, 291, 310, 280, 310, 32, 18789, 473, 397, 320, 397, 1422, 537, 21665, 440, 2023, 931, 21664, 3261]}
{"line_number": 355, "line_type": "original", "code": "", "entropy": 0.1846923828125, "is_bug_line": false, "sus_score": 0.36676710844039917, "per_token_entropy": [0.1846923828125], "tokens": [203]}
{"line_number": 355, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.36676710844039917, "per_token_entropy": [], "tokens": []}
{"line_number": 55, "line_type": "original", "code": "  }", "entropy": 5.2578125, "is_bug_line": false, "sus_score": 0.3663959801197052, "per_token_entropy": [4.33203125, 6.1796875], "tokens": [225, 320]}
{"line_number": 55, "line_type": "generated", "code": "\n        requiredFilename.startsWith(\"./\")) {\n      // Relative path.\n      String base = currentFilename.substring(0,\n          currentFilename.lastIndexOf(MODULE_SLASH));\n      String normalized = normalizeSourceName(requiredFilename);\n      return toModuleName(base", "entropy": 0.48779296875, "is_bug_line": false, "sus_score": 0.3663959801197052, "per_token_entropy": [0.4501953125, 0.224609375, 0.00022780895233154297, 0.00159454345703125, 0.1876220703125, 1.302734375, 0.6884765625, 0.00836944580078125, 0.10736083984375, 1.6416015625, 1.5966796875, 1.6591796875, 1.9404296875, 0.30322265625, 0.90576171875, 3.150390625, 0.51904296875, 0.74072265625, 0.000896453857421875, 0.79931640625, 0.8701171875, 0.00024771690368652344, 0.339111328125, 0.0006060600280761719, 0.280029296875, 0.297119140625, 2.0265579223632812e-06, 0.0011434555053710938, 0.00566864013671875, 0.1654052734375, 0.01349639892578125, 1.3113021850585938e-06, 0.001262664794921875, 1.0728836059570312e-06, 0.341064453125, 0.1876220703125, 0.9560546875, 1.943359375, 0.408447265625, 0.7041015625, 0.17236328125, 0.0017232894897460938, 0.003498077392578125, 0.4638671875, 3.0994415283203125e-06, 0.3525390625, 0.12017822265625, 1.0751953125, 0.168701171875, 0.00011670589447021484, 0.01275634765625, 0.2469482421875], "tokens": [291, 2129, 10239, 32, 13912, 12004, 2131, 301, 397, 434, 29457, 1519, 32, 397, 892, 1695, 280, 1550, 10239, 32, 8723, 26, 34, 30, 616, 1550, 10239, 32, 27296, 26, 9856, 81, 3898, 7877, 876, 397, 892, 17666, 280, 13316, 2028, 558, 26, 3648, 10239, 293, 397, 442, 372, 32547, 26, 1439]}
{"line_number": 59, "line_type": "original", "code": "    this.compiler = compiler;", "entropy": 2.92578125, "is_bug_line": false, "sus_score": 0.3531956076622009, "per_token_entropy": [4.03125, 9.734375, 0.00576019287109375, 2.763671875, 3.826171875, 0.09857177734375, 0.027374267578125], "tokens": [264, 458, 32, 10199, 280, 8980, 45]}
{"line_number": 59, "line_type": "generated", "code": "\n      } catch (URISyntaxException e) {\n        throw new RuntimeException(\"Invalid URI syntax: \" + requiredFilename, e);\n      }\n    }\n\n    return toModuleName(normalizeSourceName(requiredFilename));\n  }\n\n  /**\n   * Normalizes filenames to be", "entropy": 0.400146484375, "is_bug_line": false, "sus_score": 0.3531956076622009, "per_token_entropy": [0.372802734375, 0.0034160614013671875, 0.00447845458984375, 0.0104827880859375, 0.0009813308715820312, 6.115436553955078e-05, 0.339599609375, 0.0017414093017578125, 0.01273345947265625, 0.1478271484375, 0.60546875, 0.004085540771484375, 0.1551513671875, 1.1875, 2.177734375, 2.28125, 1.3837890625, 1.3857421875, 0.2802734375, 0.035919189453125, 0.70263671875, 0.0004622936248779297, 0.86328125, 0.08819580078125, 0.0013065338134765625, 0.01373291015625, 0.00125885009765625, 0.0767822265625, 0.0003745555877685547, 0.6748046875, 0.10369873046875, 0.054931640625, 2.956390380859375e-05, 0.0004639625549316406, 0.88134765625, 0.0019407272338867188, 3.9458274841308594e-05, 0.0002505779266357422, 0.00921630859375, 4.76837158203125e-06, 0.01226043701171875, 0.00518798828125, 0.0002505779266357422, 0.088134765625, 0.35107421875, 0.06756591796875, 0.0003199577331542969, 1.6220703125, 0.012725830078125, 1.841796875, 1.0771484375, 1.8720703125], "tokens": [397, 320, 2368, 308, 1263, 45349, 484, 27, 301, 291, 1422, 537, 13386, 440, 3817, 7412, 8345, 44, 313, 474, 2129, 10239, 30, 484, 293, 397, 320, 284, 320, 446, 442, 372, 32547, 26, 12944, 2028, 558, 26, 3648, 10239, 876, 334, 320, 719, 1022, 664, 319, 13574, 5052, 26719, 372, 526]}
{"line_number": 58, "line_type": "original", "code": "      boolean reportDependencies) {", "entropy": 3.9453125, "is_bug_line": false, "sus_score": 0.275497168302536, "per_token_entropy": [3.810546875, 11.8515625, 5.54296875, 0.2169189453125, 1.90625, 0.343505859375], "tokens": [647, 1905, 3639, 12713, 27, 301]}
{"line_number": 58, "line_type": "generated", "code": "\n           .getPath();\n      } catch (URISyntaxException ex) {\n        throw new RuntimeException(ex);\n      }\n    }\n\n    return toModuleName(requiredFilename);\n  }\n\n  /**\n   * Turns a JS identifier into a filename that can be used for require", "entropy": 0.379150390625, "is_bug_line": false, "sus_score": 0.275497168302536, "per_token_entropy": [0.450439453125, 0.0171966552734375, 1.033203125, 0.1204833984375, 0.1920166015625, 0.0006284713745117188, 0.005710601806640625, 0.00926971435546875, 0.0005459785461425781, 8.225440979003906e-05, 1.6689453125, 0.00650787353515625, 0.0159912109375, 0.229248046875, 0.66455078125, 0.004390716552734375, 0.211181640625, 0.356689453125, 0.049774169921875, 0.0125885009765625, 0.01479339599609375, 0.0016498565673828125, 0.1239013671875, 0.0005483627319335938, 0.54638671875, 0.1285400390625, 0.05059814453125, 4.5418739318847656e-05, 0.0006208419799804688, 0.431396484375, 2.372264862060547e-05, 0.00888824462890625, 0.004184722900390625, 0.0004401206970214844, 0.0894775390625, 0.252685546875, 0.05865478515625, 0.0004982948303222656, 2.09375, 0.41748046875, 0.1392822265625, 1.4794921875, 0.146240234375, 0.83349609375, 0.08624267578125, 0.418212890625, 1.6923828125, 1.001953125, 0.02008056640625, 0.60986328125, 1.54296875, 2.466796875], "tokens": [324, 638, 17684, 473, 397, 320, 2368, 308, 1263, 45349, 538, 27, 301, 291, 1422, 537, 13386, 26, 327, 293, 397, 320, 284, 320, 446, 442, 372, 32547, 26, 3648, 10239, 293, 334, 320, 719, 1022, 664, 319, 20349, 101, 312, 7750, 7248, 1991, 312, 4870, 688, 883, 526, 1654, 436, 1205]}
{"line_number": 63, "line_type": "original", "code": "  }", "entropy": 2.177734375, "is_bug_line": false, "sus_score": 0.275497168302536, "per_token_entropy": [3.185546875, 1.1689453125], "tokens": [225, 320]}
{"line_number": 63, "line_type": "generated", "code": "\n    return toModuleName(normalizeSourceName(requiredFilename));\n  }\n\n  /**\n   * Normalizes a filename to a URI path by removing the.js suffix and\n   * the leading./ if present.\n   */\n  public static String normalizeSourceName(String", "entropy": 0.57763671875, "is_bug_line": false, "sus_score": 0.275497168302536, "per_token_entropy": [0.74560546875, 0.1573486328125, 0.07763671875, 8.666515350341797e-05, 0.0010938644409179688, 0.488525390625, 0.002178192138671875, 6.35385513305664e-05, 0.00038623809814453125, 0.0191802978515625, 1.609325408935547e-05, 0.01318359375, 0.028106689453125, 0.00293731689453125, 0.2374267578125, 0.33203125, 0.0621337890625, 0.00042819976806640625, 1.6669921875, 0.01241302490234375, 0.87451171875, 0.83935546875, 1.2373046875, 1.7255859375, 1.970703125, 2.22265625, 2.013671875, 0.43212890625, 1.3037109375, 2.892578125, 0.1043701171875, 0.7548828125, 0.94189453125, 0.3984375, 0.0015544891357421875, 3.099609375, 1.791015625, 0.7744140625, 1.189453125, 0.748046875, 0.09283447265625, 0.11553955078125, 0.07562255859375, 0.006298065185546875, 0.55126953125, 0.00927734375, 0.001697540283203125, 0.005466461181640625, 0.0043182373046875, 4.172325134277344e-05, 0.00023937225341796875, 0.00252532958984375], "tokens": [284, 442, 372, 32547, 26, 12944, 2028, 558, 26, 3648, 10239, 876, 334, 320, 719, 1022, 664, 319, 13574, 5052, 312, 4870, 372, 312, 7412, 1519, 810, 15255, 322, 638, 754, 12809, 461, 664, 319, 322, 15996, 5841, 415, 5024, 32, 664, 569, 334, 562, 907, 892, 13316, 2028, 558, 26, 652]}
{"line_number": 423, "line_type": "original", "code": "", "entropy": 0.1846923828125, "is_bug_line": false, "sus_score": 0.27348193526268005, "per_token_entropy": [0.1846923828125], "tokens": [203]}
{"line_number": 423, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.27348193526268005, "per_token_entropy": [], "tokens": []}
{"line_number": 422, "line_type": "original", "code": "", "entropy": 0.1846923828125, "is_bug_line": false, "sus_score": 0.26589661836624146, "per_token_entropy": [0.1846923828125], "tokens": [203]}
{"line_number": 422, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.26589661836624146, "per_token_entropy": [], "tokens": []}
{"line_number": 424, "line_type": "original", "code": "", "entropy": 0.1846923828125, "is_bug_line": false, "sus_score": 0.25835198163986206, "per_token_entropy": [0.1846923828125], "tokens": [203]}
{"line_number": 424, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.25835198163986206, "per_token_entropy": [], "tokens": []}
{"line_number": 156, "line_type": "original", "code": "     * Visit require calls. Emit corresponding goog.require and rewrite require", "entropy": 2.78515625, "is_bug_line": false, "sus_score": 0.2538067400455475, "per_token_entropy": [5.23828125, 1.228515625, 3.841796875, 3.21484375, 0.9140625, 1.9248046875, 5.96875, 5.390625, 0.52880859375, 0.00695037841796875, 0.037445068359375, 3.68359375, 3.646484375, 3.37109375], "tokens": [262, 319, 23317, 1205, 7399, 32, 22755, 8435, 47917, 32, 1981, 461, 21817, 1205]}
{"line_number": 156, "line_type": "generated", "code": "\n    /**\n     * Emits a call to {@code goog.module.get} to override the module exports\n     * object.\n     */\n    private void emitOptionalModuleExportsOverride(Node script, String moduleName) {\n      if (!modulesWithExports.contains", "entropy": 0.493408203125, "is_bug_line": false, "sus_score": 0.2538067400455475, "per_token_entropy": [0.2705078125, 0.9501953125, 0.156005859375, 0.00063323974609375, 2.3203125, 1.6220703125, 1.8056640625, 1.7509765625, 0.0595703125, 1.3798828125, 0.1640625, 0.58251953125, 0.0037288665771484375, 0.77587890625, 0.0338134765625, 0.89501953125, 0.12335205078125, 1.6884765625, 2.45703125, 0.54833984375, 1.1904296875, 1.138671875, 0.67919921875, 0.0017595291137695312, 0.8857421875, 0.9423828125, 0.50927734375, 0.1878662109375, 0.01187896728515625, 0.037567138671875, 0.01033782958984375, 0.0498046875, 0.00682830810546875, 6.747245788574219e-05, 1.7523765563964844e-05, 9.226799011230469e-05, 0.00036144256591796875, 0.0631103515625, 0.11895751953125, 0.00823974609375, 0.348388671875, 0.049835205078125, 0.002170562744140625, 0.0031337738037109375, 0.04913330078125, 0.276611328125, 0.892578125, 0.3251953125, 0.0017156600952148438, 0.00010311603546142578, 0.00043201446533203125, 0.26904296875], "tokens": [284, 1022, 275, 319, 22755, 101, 312, 1476, 372, 3088, 687, 47917, 32, 1647, 32, 371, 111, 372, 2684, 322, 2297, 10917, 275, 319, 1300, 32, 275, 569, 284, 945, 763, 9533, 7556, 2459, 20723, 1788, 26, 1212, 3261, 30, 892, 46009, 27, 301, 397, 415, 1429, 3477, 1554, 20723, 32, 4752]}
{"line_number": 85, "line_type": "original", "code": "   * rewritten code. Removes leading ./, replaces / with $, removes trailing .js", "entropy": 3.8125, "is_bug_line": false, "sus_score": 0.24911139905452728, "per_token_entropy": [7.55078125, 8.2265625, 8.8671875, 1.939453125, 6.296875, 3.37109375, 10.75, 7.7109375, 4.65625, 2.607421875, 1.12890625, 0.7294921875, 0.24462890625, 0.5634765625, 0.8759765625, 3.56640625, 3.1796875, 0.14794921875, 0.01490020751953125], "tokens": [261, 319, 316, 15557, 1340, 32, 24992, 15996, 5841, 30, 30598, 517, 623, 398, 30, 20080, 19938, 638, 754]}
{"line_number": 85, "line_type": "generated", "code": "\n    @Override\n    public void visit(NodeTraversal t, Node n, Node parent) {\n      if (n.isScript()) {\n        scriptNodeCount++;\n      }\n\n      if (n.isAssign()) {\n        Node left = n.getFirstChild", "entropy": 0.184814453125, "is_bug_line": false, "sus_score": 0.24911139905452728, "per_token_entropy": [0.5849609375, 0.884765625, 0.0006732940673828125, 0.006809234619140625, 0.0032634735107421875, 0.0032520294189453125, 0.0194244384765625, 0.00015485286712646484, 0.00017404556274414062, 0.0271148681640625, 0.0290069580078125, 1.7642974853515625e-05, 0.00016891956329345703, 0.0196685791015625, 0.001590728759765625, 0.00102996826171875, 0.0015573501586914062, 6.687641143798828e-05, 0.0006670951843261719, 0.13720703125, 0.69140625, 0.0970458984375, 0.17333984375, 0.004444122314453125, 0.3251953125, 0.4091796875, 0.061614990234375, 0.0023975372314453125, 0.049896240234375, 0.8916015625, 0.00040984153747558594, 7.152557373046875e-06, 0.062103271484375, 0.77001953125, 0.0001462697982788086, 0.425537109375, 0.32568359375, 0.1729736328125, 0.309326171875, 0.00264739990234375, 0.2205810546875, 0.46923828125, 0.84375, 0.0004658699035644531, 0.019805908203125, 0.791015625, 0.61767578125, 0.04180908203125, 0.00734710693359375, 1.4901161193847656e-05, 0.0972900390625, 0.003086090087890625], "tokens": [284, 477, 1788, 284, 562, 763, 7725, 26, 1212, 35699, 273, 30, 4004, 310, 30, 4004, 2935, 27, 301, 397, 415, 308, 96, 32, 297, 3206, 1157, 301, 291, 3261, 1212, 1534, 3334, 397, 320, 1687, 415, 308, 96, 32, 297, 9079, 1157, 301, 291, 4004, 2841, 280, 310, 32, 25657, 2931]}
{"line_number": 148, "line_type": "original", "code": "", "entropy": 4.125, "is_bug_line": false, "sus_score": 0.24457557499408722, "per_token_entropy": [4.125], "tokens": [203]}
{"line_number": 148, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Emit assignment to module.exports if there are any module.exports\n     * assignments in the script.\n     */\n    private void visitModuleExports(Node n) {\n      modulesWithExports.add(getCurrentScriptNode(n).", "entropy": 0.42529296875, "is_bug_line": false, "sus_score": 0.24457557499408722, "per_token_entropy": [0.75830078125, 0.034393310546875, 0.1556396484375, 0.385986328125, 0.029876708984375, 0.0002357959747314453, 1.8759765625, 2.419921875, 0.2958984375, 0.5107421875, 0.0943603515625, 0.0141754150390625, 0.91845703125, 2.2265625, 0.98828125, 0.83544921875, 2.939453125, 0.1639404296875, 0.016326904296875, 0.5263671875, 0.0032711029052734375, 0.340576171875, 0.83984375, 0.435791015625, 1.365234375, 0.337158203125, 0.260498046875, 0.0601806640625, 0.0031223297119140625, 0.0247039794921875, 0.00400543212890625, 0.2080078125, 0.0010890960693359375, 4.208087921142578e-05, 0.00057220458984375, 0.00101470947265625, 0.1043701171875, 0.0002465248107910156, 0.0003178119659423828, 0.023162841796875, 0.8115234375, 0.0001289844512939453, 6.365776062011719e-05, 0.0009984970092773438, 0.0018472671508789062, 0.010833740234375, 1.42578125, 0.11663818359375, 0.4111328125, 0.00627899169921875, 0.0019741058349609375, 0.11859130859375], "tokens": [284, 320, 446, 1022, 275, 319, 22755, 13807, 372, 2297, 32, 3783, 415, 2017, 884, 1346, 2297, 32, 3783, 275, 319, 29410, 328, 322, 3261, 32, 275, 569, 284, 945, 763, 7725, 2459, 20723, 26, 1212, 310, 27, 301, 397, 7896, 1554, 20723, 32, 669, 26, 12331, 3206, 1212, 26, 96, 547]}
{"line_number": 72, "line_type": "original", "code": "    return toModuleName(normalizeSourceName(filename));", "entropy": 1.9052734375, "is_bug_line": false, "sus_score": 0.18193265795707703, "per_token_entropy": [4.28515625, 3.29296875, 2.962890625, 0.00037097930908203125, 0.004993438720703125, 6.73828125, 3.28515625, 0.044342041015625, 0.171875, 0.1112060546875, 0.060028076171875], "tokens": [264, 442, 372, 32547, 26, 12944, 2028, 558, 26, 3607, 876]}
{"line_number": 72, "line_type": "generated", "code": "\n    }\n    return filename;\n  }\n\n  private void rewriteModule(NodeTraversal t, Node n, JSModule module) {\n    this.module = module;\n    NodeTraversal.traverse(t.getCompiler(), n, new RewriteModuleCallback(module", "entropy": 0.48681640625, "is_bug_line": false, "sus_score": 0.18193265795707703, "per_token_entropy": [0.2181396484375, 0.033935546875, 0.75634765625, 0.1072998046875, 0.0771484375, 0.07733154296875, 0.01129913330078125, 0.0007481575012207031, 0.19287109375, 0.87060546875, 1.9267578125, 1.9140625, 1.8603515625, 0.56689453125, 0.3818359375, 0.8681640625, 0.05914306640625, 0.018829345703125, 0.29345703125, 0.78759765625, 0.429931640625, 1.11328125, 0.00042319297790527344, 0.2088623046875, 0.18017578125, 0.0229034423828125, 0.1488037109375, 0.97314453125, 0.00039267539978027344, 0.0025463104248046875, 0.00043320655822753906, 0.007099151611328125, 0.0005664825439453125, 0.71240234375, 1.1220703125, 3.03515625, 0.011962890625, 0.0165557861328125, 0.1048583984375, 0.9287109375, 0.022918701171875, 0.313720703125, 0.005527496337890625, 0.0006871223449707031, 0.183837890625, 0.0909423828125, 0.59326171875, 1.1259765625, 1.0966796875, 0.20068359375, 0.5712890625, 1.060546875], "tokens": [284, 320, 284, 442, 4870, 45, 334, 320, 719, 945, 763, 21817, 2459, 26, 1212, 35699, 273, 30, 4004, 310, 30, 7750, 2459, 2297, 27, 301, 284, 458, 32, 1647, 280, 2297, 45, 284, 4004, 35699, 32, 33261, 26, 102, 32, 371, 8115, 1026, 310, 30, 537, 44950, 2459, 3296, 26, 1647]}
