{"line_number": 1470, "line_type": "original", "code": "   * scope chain to use in name lookups as well as error reporting.", "entropy": 4.10546875, "is_bug_line": false, "sus_score": 0.5402897000312805, "per_token_entropy": [6.0234375, 4.26953125, 13.203125, 6.171875, 3.609375, 4.484375, 3.1484375, 4.66796875, 1.9521484375, 0.020782470703125, 7.39453125, 2.400390625, 0.1368408203125, 5.6875, 2.0625, 0.4267578125], "tokens": [261, 319, 4576, 8241, 372, 793, 328, 636, 2779, 9016, 619, 4487, 619, 1048, 15945, 32]}
{"line_number": 1470, "line_type": "generated", "code": "      // check properties\n      validator.expectAllInterfaceProperties(t, n, functionType);\n    } else {\n      // check properties\n      validator.expectAllProperties(t, n, functionType);\n    }", "entropy": 0.254638671875, "is_bug_line": false, "sus_score": 0.5402897000312805, "per_token_entropy": [1.3837890625, 0.360595703125, 0.7197265625, 0.11016845703125, 0.33642578125, 0.328125, 0.0003554821014404297, 0.12359619140625, 0.10906982421875, 0.060699462890625, 0.0159454345703125, 0.0015974044799804688, 0.01476287841796875, 9.059906005859375e-05, 0.0026912689208984375, 0.0018510818481445312, 0.005207061767578125, 0.0009546279907226562, 0.0045318603515625, 0.382080078125, 0.0010385513305664062, 0.346923828125, 0.333251953125, 0.1387939453125, 0.5625, 1.7890625, 1.037109375, 0.27685546875, 0.1536865234375, 0.00012314319610595703, 0.1348876953125, 0.1424560546875, 1.3515625, 0.032318115234375, 0.0216522216796875, 0.002349853515625, 0.00821685791015625, 0.027679443359375, 0.0267791748046875, 0.01554107666015625, 0.048614501953125, 0.52783203125, 0.00048351287841796875], "tokens": [647, 434, 1505, 4308, 397, 13420, 32, 2358, 1934, 3041, 3289, 26, 102, 30, 310, 30, 667, 620, 293, 284, 320, 813, 301, 397, 434, 1505, 4308, 397, 13420, 32, 2358, 1934, 3289, 26, 102, 30, 310, 30, 667, 620, 293, 284, 320]}
{"line_number": 1791, "line_type": "original", "code": "   * @return true if the sub-tree n is a reference, false otherwise.", "entropy": 2.916015625, "is_bug_line": false, "sus_score": 0.5397772789001465, "per_token_entropy": [6.921875, 1.529296875, 5.80078125, 1.2431640625, 4.51953125, 0.1282958984375, 0.497802734375, 10.0, 1.353515625, 0.880859375, 6.54296875, 1.6240234375, 1.27734375, 4.34375, 2.22265625, 0.9462890625, 2.1171875, 0.55712890625], "tokens": [261, 319, 477, 601, 861, 415, 322, 1361, 31, 3242, 310, 438, 312, 4121, 30, 901, 5878, 32]}
{"line_number": 1791, "line_type": "generated", "code": "  private void attachFunctionType(Node n, FunctionType type) {\n    Preconditions.checkArgument(type!= null);\n    n.putBooleanProp(Node.IS_FUNCTION_TYPE_PROP, true);\n    n.setJSType(type);", "entropy": 0.31298828125, "is_bug_line": false, "sus_score": 0.5397772789001465, "per_token_entropy": [1.3369140625, 1.384765625, 1.130859375, 1.3876953125, 1.0107421875, 0.09368896484375, 0.32958984375, 0.099609375, 0.266845703125, 0.1339111328125, 0.0005354881286621094, 0.46484375, 0.007080078125, 0.00923919677734375, 0.0704345703125, 1.51171875, 0.0002765655517578125, 0.0272674560546875, 0.90966796875, 0.051666259765625, 0.8427734375, 0.63720703125, 0.0025691986083984375, 0.10479736328125, 0.144775390625, 0.75, 0.0005044937133789062, 0.9619140625, 0.1549072265625, 0.0179595947265625, 0.003711700439453125, 0.0772705078125, 0.004436492919921875, 0.62548828125, 0.0001195669174194336, 0.051788330078125, 0.05767822265625, 0.2303466796875, 0.25146484375, 0.5, 0.00034809112548828125, 0.050048828125, 0.00012421607971191406, 0.038116455078125, 0.132568359375, 0.0001652240753173828, 0.261474609375, 0.01456451416015625, 1.800060272216797e-05, 0.0011701583862304688, 0.0274505615234375, 0.10076904296875], "tokens": [225, 945, 763, 12386, 44334, 26, 1212, 310, 30, 4540, 620, 827, 27, 301, 284, 40596, 32, 1553, 3484, 26, 681, 863, 744, 293, 284, 310, 32, 524, 4709, 6567, 26, 1212, 32, 1296, 81, 9842, 81, 2319, 81, 15262, 30, 861, 293, 284, 310, 32, 470, 4624, 620, 26, 681, 293]}
{"line_number": 1454, "line_type": "original", "code": "                  functionName, name, oType.toString(),", "entropy": 2.9765625, "is_bug_line": false, "sus_score": 0.537106990814209, "per_token_entropy": [9.8359375, 4.296875, 2.466796875, 3.91796875, 6.234375, 0.39111328125, 2.30078125, 0.07501220703125, 1.4765625, 0.72705078125, 1.0146484375], "tokens": [5688, 667, 558, 30, 636, 30, 337, 620, 32, 3108, 1026]}
{"line_number": 1454, "line_type": "generated", "code": "\n        HashMap<String, ObjectType> properties = new HashMap<String, ObjectType>();\n        HashMap<String, ObjectType> currentProperties = new HashMap<String, ObjectType>();\n        ObjectType prototype = functionType.getPrototype();\n        checkInterfaceConflictProperties(t, n", "entropy": 0.30078125, "is_bug_line": false, "sus_score": 0.537106990814209, "per_token_entropy": [0.7880859375, 1.2607421875, 0.00782012939453125, 0.0008225440979003906, 0.0001596212387084961, 0.028228759765625, 0.0005040168762207031, 0.59521484375, 0.0272064208984375, 0.64306640625, 0.0299530029296875, 0.1990966796875, 0.00615692138671875, 0.0005507469177246094, 0.094970703125, 0.0180511474609375, 0.0897216796875, 0.8564453125, 0.0008411407470703125, 0.0003407001495361328, 3.6835670471191406e-05, 0.0048980712890625, 0.000110626220703125, 0.0865478515625, 0.0121307373046875, 0.006900787353515625, 1.0390625, 0.273681640625, 0.0014829635620117188, 0.0018758773803710938, 0.0003998279571533203, 0.1318359375, 0.0025577545166015625, 0.1427001953125, 2.873046875, 2.966796875, 0.55908203125, 0.12237548828125, 0.0015707015991210938, 0.003986358642578125, 0.209716796875, 0.032928466796875, 0.0626220703125, 0.04022216796875, 2.244140625, 0.061737060546875, 0.0007572174072265625, 0.00202178955078125, 0.0015411376953125, 0.087158203125, 0.00015652179718017578, 0.01490020751953125], "tokens": [291, 8322, 46, 652, 30, 42562, 48, 4308, 280, 537, 8322, 46, 652, 30, 42562, 2923, 291, 8322, 46, 652, 30, 42562, 48, 1550, 3289, 280, 537, 8322, 46, 652, 30, 42562, 2923, 291, 42562, 21666, 280, 667, 620, 32, 371, 17534, 473, 291, 1505, 3041, 19610, 3289, 26, 102, 30, 310]}
{"line_number": 1452, "line_type": "original", "code": "          compiler.report(", "entropy": 1.779296875, "is_bug_line": false, "sus_score": 0.5350090265274048, "per_token_entropy": [4.57421875, 4.21875, 0.0010290145874023438, 0.03924560546875, 0.061737060546875], "tokens": [2033, 8980, 32, 3734, 26]}
{"line_number": 1452, "line_type": "generated", "code": "\n        }\n      }\n    }\n\n    // Check that all properties are defined on the function type.\n    Set<String> functionPropertyNames = functionType.getPropertyNames();\n    for (Node param = n.getFirstChild().getNext();\n        param!= null;", "entropy": 0.64404296875, "is_bug_line": false, "sus_score": 0.5350090265274048, "per_token_entropy": [0.399658203125, 0.0172119140625, 0.398681640625, 0.0004734992980957031, 0.327880859375, 0.001834869384765625, 1.6484375, 1.23828125, 1.544921875, 1.7958984375, 2.25390625, 2.25390625, 1.4306640625, 1.59765625, 1.513671875, 0.97265625, 1.869140625, 1.16796875, 0.92333984375, 0.09381103515625, 3.24609375, 0.0020999908447265625, 0.00910186767578125, 8.296966552734375e-05, 1.5478515625, 0.52734375, 0.0213470458984375, 0.0122222900390625, 0.1427001953125, 0.000835418701171875, 0.005283355712890625, 0.06427001953125, 0.00791168212890625, 0.0009756088256835938, 0.12646484375, 0.845703125, 0.0013828277587890625, 0.56591796875, 0.96142578125, 0.56396484375, 0.11492919921875, 0.0011806488037109375, 0.90185546875, 0.01312255859375, 0.054351806640625, 0.005126953125, 0.07806396484375, 1.951171875, 0.0195159912109375, 0.0233306884765625, 0.033233642578125, 0.2152099609375], "tokens": [291, 320, 397, 320, 284, 320, 446, 434, 3456, 688, 1169, 4308, 884, 3417, 544, 322, 667, 827, 32, 284, 1756, 46, 652, 48, 667, 1653, 4109, 280, 667, 620, 32, 12707, 4109, 473, 284, 436, 308, 1212, 4356, 280, 310, 32, 25657, 2931, 922, 23017, 473, 291, 4356, 863, 744, 45]}
{"line_number": 1922, "line_type": "original", "code": "", "entropy": 0.2327880859375, "is_bug_line": false, "sus_score": 0.5343675017356873, "per_token_entropy": [0.2327880859375], "tokens": [203]}
{"line_number": 1922, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5343675017356873, "per_token_entropy": [], "tokens": []}
{"line_number": 1772, "line_type": "original", "code": "      // implemented by the EnumClass, e.g. the unknown type and the any", "entropy": 4.0, "is_bug_line": false, "sus_score": 0.5342398285865784, "per_token_entropy": [7.09765625, 1.025390625, 10.1328125, 1.265625, 2.91015625, 6.79296875, 6.83203125, 4.59375, 5.9765625, 0.005718231201171875, 0.005092620849609375, 0.2296142578125, 3.630859375, 6.9609375, 0.60986328125, 5.25, 1.9130859375, 6.73828125], "tokens": [647, 434, 7586, 810, 322, 7819, 1339, 30, 484, 32, 89, 32, 322, 8665, 827, 461, 322, 1346]}
{"line_number": 1772, "line_type": "generated", "code": "\n  /**\n   * This method gets the JSType from the Node argument and verifies that it is\n   * present.\n   */\n  private JSType getJSType(Node n, JSType defaultType) {\n    JSType jsType = n.getJS", "entropy": 0.2342529296875, "is_bug_line": false, "sus_score": 0.5342398285865784, "per_token_entropy": [0.94091796875, 0.410400390625, 0.060943603515625, 0.00040841102600097656, 1.359375, 0.27685546875, 1.802734375, 0.096435546875, 0.216796875, 0.0026874542236328125, 0.369384765625, 0.052886962890625, 0.1937255859375, 0.007659912109375, 0.31103515625, 0.1492919921875, 0.004077911376953125, 0.0162811279296875, 0.03399658203125, 0.00923919677734375, 0.0002949237823486328, 0.048004150390625, 0.1689453125, 0.1795654296875, 0.056884765625, 0.032440185546875, 0.04248046875, 0.12286376953125, 3.0159950256347656e-05, 0.06573486328125, 0.15234375, 0.039886474609375, 0.400146484375, 0.168212890625, 0.0311126708984375, 0.81494140625, 1.037109375, 0.00153350830078125, 2.22265625, 0.11810302734375, 0.00676727294921875, 0.0011615753173828125, 0.016357421875, 0.05120849609375, 1.33514404296875e-05, 0.044097900390625, 0.00010013580322265625, 0.0011272430419921875, 0.03594970703125, 0.001491546630859375, 0.0012426376342773438, 7.49826431274414e-05], "tokens": [334, 1022, 664, 319, 1348, 1411, 8561, 322, 7750, 620, 645, 322, 4004, 2793, 461, 47369, 688, 561, 438, 664, 319, 5024, 32, 664, 569, 334, 945, 7750, 620, 622, 4624, 620, 26, 1212, 310, 30, 7750, 620, 1244, 620, 27, 301, 284, 7750, 620, 4060, 620, 280, 310, 32, 371, 4624]}
{"line_number": 1767, "line_type": "original", "code": "            \"element type must match enum's type\");", "entropy": 4.80859375, "is_bug_line": false, "sus_score": 0.531545877456665, "per_token_entropy": [6.8515625, 8.109375, 10.9296875, 0.78662109375, 5.13671875, 9.453125, 0.56689453125, 3.01953125, 2.603515625, 0.64794921875], "tokens": [1468, 313, 2543, 827, 2298, 2530, 3833, 1182, 827, 724]}
{"line_number": 1767, "line_type": "generated", "code": "    }\n    return jsType;\n  }\n\n  /**\n   * This method is used to determine if a variable declaration has an\n   * initializer.  A variable declaration has an initializer if its\n   * initializer is not null or if it has a type annotation.", "entropy": 0.798828125, "is_bug_line": false, "sus_score": 0.531545877456665, "per_token_entropy": [2.119140625, 0.219482421875, 0.1138916015625, 0.02813720703125, 0.0709228515625, 7.033348083496094e-06, 0.0019779205322265625, 0.01415252685546875, 0.0010938644409179688, 0.1632080078125, 0.230712890625, 0.0380859375, 0.00013434886932373047, 1.17578125, 0.365966796875, 2.6640625, 0.488037109375, 0.1356201171875, 1.9814453125, 0.252197265625, 1.2568359375, 2.537109375, 1.8203125, 1.365234375, 1.357421875, 0.67724609375, 0.00018870830535888672, 0.2166748046875, 0.5927734375, 2.259765625, 2.251953125, 0.67236328125, 0.284423828125, 1.3095703125, 0.045379638671875, 0.0149078369140625, 0.35693359375, 1.70703125, 2.22265625, 0.0003445148468017578, 1.6025390625, 1.3779296875, 0.779296875, 0.466064453125, 1.0830078125, 0.771484375, 0.439453125, 0.8408203125, 0.96240234375, 1.451171875, 0.41015625, 0.33447265625], "tokens": [264, 320, 284, 442, 4060, 620, 45, 334, 320, 719, 1022, 664, 319, 1348, 1411, 438, 1654, 372, 9921, 415, 312, 2677, 13317, 1401, 600, 664, 319, 24733, 32, 225, 399, 2677, 13317, 1401, 600, 24733, 415, 2819, 664, 319, 24733, 438, 646, 744, 556, 415, 561, 1401, 312, 827, 11188, 32]}
{"line_number": 1570, "line_type": "original", "code": "      if (functionType.isConstructor() &&", "entropy": 1.0517578125, "is_bug_line": true, "sus_score": 0.5314930081367493, "per_token_entropy": [3.69140625, 0.32080078125, 0.194091796875, 2.025390625, 0.001285552978515625, 0.0035152435302734375, 0.432861328125, 2.7265625, 0.6884765625, 0.43505859375], "tokens": [647, 415, 308, 1126, 620, 32, 297, 7932, 346, 962]}
{"line_number": 1570, "line_type": "generated", "code": "\n    if (numArgs > functionType.getParameters().size()) {\n      report(t, call, EXTRA_ARGUMENTS, functionType.toString());\n    }\n  }\n\n  /**\n   * Visits a GETPROP node.\n   *\n   * @", "entropy": 0.318115234375, "is_bug_line": true, "sus_score": 0.5314930081367493, "per_token_entropy": [0.34423828125, 0.262939453125, 0.20947265625, 0.7607421875, 8.606910705566406e-05, 0.67431640625, 0.56494140625, 0.00015044212341308594, 8.702278137207031e-05, 0.6201171875, 0.1810302734375, 0.022735595703125, 0.289794921875, 0.00312042236328125, 0.03985595703125, 0.6220703125, 0.01073455810546875, 0.012451171875, 0.00010383129119873047, 0.0273284912109375, 0.00820159912109375, 2.0390625, 0.1190185546875, 0.00010406970977783203, 0.861328125, 0.11798095703125, 0.267822265625, 1.9912109375, 0.0012683868408203125, 0.044342041015625, 0.5009765625, 0.5869140625, 0.232421875, 0.0002651214599609375, 1.119140625, 0.0005626678466796875, 0.16015625, 0.1181640625, 0.0184326171875, 9.417533874511719e-05, 0.76611328125, 0.0006995201110839844, 0.393798828125, 1.68359375, 0.2001953125, 0.251220703125, 0.1259765625, 0.059722900390625, 0.12152099609375, 0.05767822265625, 0.0008606910705566406, 0.046630859375], "tokens": [284, 415, 308, 1516, 3080, 848, 667, 620, 32, 44034, 922, 891, 1157, 301, 397, 3639, 26, 102, 30, 1476, 30, 2783, 12512, 81, 29940, 69, 30, 667, 620, 32, 3108, 1035, 284, 320, 334, 320, 719, 1022, 664, 319, 6255, 1507, 312, 6272, 15262, 1541, 32, 664, 319, 664, 319, 477]}
{"line_number": 1921, "line_type": "original", "code": "", "entropy": 0.2327880859375, "is_bug_line": false, "sus_score": 0.5306610465049744, "per_token_entropy": [0.2327880859375], "tokens": [203]}
{"line_number": 1921, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5306610465049744, "per_token_entropy": [], "tokens": []}
{"line_number": 1451, "line_type": "original", "code": "            oType.getPropertyType(name))) {", "entropy": 2.478515625, "is_bug_line": false, "sus_score": 0.5291481614112854, "per_token_entropy": [3.40234375, 10.4609375, 1.0625, 0.50390625, 2.744140625, 0.024658203125, 0.050567626953125, 0.0908203125, 6.1171875, 0.31982421875], "tokens": [1468, 337, 620, 32, 12707, 620, 26, 426, 2610, 301]}
{"line_number": 1451, "line_type": "generated", "code": "\n          }\n        }\n      }\n    }\n    visitParameterList(t, n, functionType);\n    visitFunctionBody(t, n, functionType);\n  }\n\n  /**\n   * Visits a function body.\n   *\n   * @param t The", "entropy": 0.294677734375, "is_bug_line": false, "sus_score": 0.5291481614112854, "per_token_entropy": [0.420166015625, 0.035125732421875, 0.1285400390625, 0.0008301734924316406, 0.421630859375, 0.0002551078796386719, 0.340087890625, 0.00225830078125, 0.8232421875, 1.31640625, 0.07952880859375, 0.001270294189453125, 0.002750396728515625, 0.00463104248046875, 0.00028228759765625, 0.005947113037109375, 0.0099945068359375, 0.00832366943359375, 0.0009722709655761719, 0.01325225830078125, 0.267333984375, 1.896484375, 1.7705078125, 0.303955078125, 0.0202178955078125, 0.045379638671875, 0.0023441314697265625, 0.04083251953125, 0.4326171875, 0.0660400390625, 0.1656494140625, 0.288330078125, 0.6279296875, 0.0039043426513671875, 0.12005615234375, 0.1968994140625, 0.01354217529296875, 0.0002980232238769531, 0.89794921875, 0.0029087066650390625, 0.5693359375, 1.4833984375, 0.880859375, 0.6474609375, 0.161376953125, 0.304931640625, 0.302001953125, 0.002197265625, 0.1260986328125, 0.0036792755126953125, 0.0294036865234375, 0.03399658203125], "tokens": [616, 320, 291, 320, 397, 320, 284, 320, 284, 7725, 3012, 720, 26, 102, 30, 310, 30, 667, 620, 293, 284, 7725, 2447, 3050, 26, 102, 30, 310, 30, 667, 620, 293, 334, 320, 719, 1022, 664, 319, 6255, 1507, 312, 667, 3361, 32, 664, 319, 664, 319, 477, 753, 273, 886]}
{"line_number": 1252, "line_type": "original", "code": "   *", "entropy": 5.515625, "is_bug_line": false, "sus_score": 0.5291058421134949, "per_token_entropy": [7.390625, 3.63671875], "tokens": [261, 319]}
{"line_number": 1252, "line_type": "generated", "code": "\n            report(t, n, INEXISTENT_PROPERTY, propName,\n                objectType.toString());\n          }\n        }\n      } else if (propType.equals(typeRegistry.getNativeType(UNKNOWN_TYPE))) {\n        if (object", "entropy": 0.3251953125, "is_bug_line": false, "sus_score": 0.5291058421134949, "per_token_entropy": [0.9697265625, 0.89404296875, 0.10638427734375, 0.027435302734375, 0.00016689300537109375, 0.01192474365234375, 0.0029659271240234375, 1.8603515625, 0.01189422607421875, 0.00010478496551513672, 0.00022304058074951172, 0.00409698486328125, 0.1656494140625, 0.451904296875, 0.00667572021484375, 0.72705078125, 1.263671875, 0.67041015625, 0.0008749961853027344, 0.11370849609375, 0.59716796875, 0.1768798828125, 0.2568359375, 0.0009002685546875, 0.77978515625, 0.00024008750915527344, 0.113037109375, 8.189678192138672e-05, 1.169921875, 0.474853515625, 0.342041015625, 0.97900390625, 0.0594482421875, 0.355224609375, 0.50244140625, 0.0003743171691894531, 0.07000732421875, 0.00010156631469726562, 3.6597251892089844e-05, 0.0142059326171875, 0.0011053085327148438, 0.0033397674560546875, 0.0006570816040039062, 0.50341796875, 8.225440979003906e-06, 0.0019254684448242188, 0.397216796875, 0.0005793571472167969, 0.076904296875, 1.7568359375, 0.4287109375, 0.55615234375], "tokens": [324, 3639, 26, 102, 30, 310, 30, 1236, 27530, 1438, 81, 12315, 30, 7018, 558, 30, 400, 1300, 620, 32, 3108, 1035, 616, 320, 291, 320, 397, 320, 813, 415, 308, 4641, 620, 32, 3574, 26, 681, 5378, 32, 371, 6134, 620, 26, 14174, 81, 2319, 2610, 301, 291, 415, 308, 1473]}
{"line_number": 1814, "line_type": "original", "code": "      // halting the compilation but we should log this and analyze to track", "entropy": 5.3671875, "is_bug_line": false, "sus_score": 0.5286701917648315, "per_token_entropy": [5.75390625, 2.267578125, 14.609375, 0.55322265625, 5.72265625, 2.44921875, 7.27734375, 5.45703125, 3.017578125, 5.58203125, 1.8505859375, 4.8046875, 8.9453125, 5.0390625, 7.171875], "tokens": [647, 434, 20158, 1054, 322, 16260, 1273, 996, 1395, 1245, 458, 461, 22928, 372, 4562]}
{"line_number": 1814, "line_type": "generated", "code": "\n   *\n   * @param n The node to be type checked.\n   * @param castType The type that the node must be cast to.\n   */\n  private void ensureTyped(NodeTraversal t, Node n, JSType castType) {\n   ", "entropy": 0.3564453125, "is_bug_line": false, "sus_score": 0.5286701917648315, "per_token_entropy": [0.2308349609375, 0.24755859375, 0.6044921875, 0.043365478515625, 1.0087890625, 0.07415771484375, 0.6025390625, 0.41455078125, 0.1041259765625, 0.6337890625, 1.310546875, 1.486328125, 0.50927734375, 0.3466796875, 0.10693359375, 0.2288818359375, 0.019012451171875, 0.04962158203125, 1.923828125, 0.7099609375, 0.1556396484375, 0.403076171875, 1.3818359375, 0.62255859375, 0.314453125, 0.9189453125, 0.74951171875, 0.50439453125, 0.457763671875, 0.1759033203125, 0.0948486328125, 0.33984375, 0.020263671875, 0.246337890625, 0.050933837890625, 0.62451171875, 0.201904296875, 0.2254638671875, 0.0643310546875, 0.023895263671875, 0.003070831298828125, 5.936622619628906e-05, 0.004283905029296875, 0.0011606216430664062, 0.0007147789001464844, 0.020294189453125, 6.4373016357421875e-06, 0.1480712890625, 0.0016603469848632812, 0.002620697021484375, 0.0007572174072265625, 0.1219482421875], "tokens": [664, 319, 664, 319, 477, 753, 310, 886, 1541, 372, 526, 827, 8137, 32, 664, 319, 477, 753, 9936, 620, 886, 827, 688, 322, 1541, 2298, 526, 9936, 372, 32, 664, 569, 334, 945, 763, 7279, 11851, 26, 1212, 35699, 273, 30, 4004, 310, 30, 7750, 620, 9936, 620, 27, 301, 284]}
{"line_number": 1823, "line_type": "original", "code": "  /**", "entropy": 4.921875, "is_bug_line": false, "sus_score": 0.5286011099815369, "per_token_entropy": [4.09765625, 5.74609375], "tokens": [225, 1022]}
{"line_number": 1823, "line_type": "generated", "code": "\n   */\n  private void ensureTyped(NodeTraversal t, Node n, JSType type) {\n    JSType previousType = n.getJSType();\n    if (previousType == null) {\n      n.setJSType(type);\n      return", "entropy": 0.2000732421875, "is_bug_line": false, "sus_score": 0.5286011099815369, "per_token_entropy": [0.11383056640625, 0.457763671875, 0.017608642578125, 0.09454345703125, 0.01178741455078125, 0.059967041015625, 0.005367279052734375, 0.01270294189453125, 0.0323486328125, 0.0003631114959716797, 0.0016422271728515625, 6.556510925292969e-05, 0.0022640228271484375, 0.0008378028869628906, 0.0002760887145996094, 0.012664794921875, 1.430511474609375e-06, 0.00907135009765625, 0.0038776397705078125, 0.0012903213500976562, 0.0733642578125, 0.66650390625, 0.00020885467529296875, 3.126953125, 0.14990234375, 0.01552581787109375, 0.1611328125, 7.76052474975586e-05, 0.01540374755859375, 0.0034313201904296875, 1.0848045349121094e-05, 0.0027523040771484375, 0.258544921875, 0.79541015625, 0.0911865234375, 0.361572265625, 1.3709068298339844e-05, 0.7548828125, 0.047943115234375, 0.234619140625, 0.0008473396301269531, 0.024871826171875, 0.98388671875, 0.0002791881561279297, 0.0460205078125, 0.01464080810546875, 7.3909759521484375e-06, 0.002544403076171875, 0.0128326416015625, 0.04913330078125, 1.0546875, 0.61865234375], "tokens": [664, 569, 334, 945, 763, 7279, 11851, 26, 1212, 35699, 273, 30, 4004, 310, 30, 7750, 620, 827, 27, 301, 284, 7750, 620, 4552, 620, 280, 310, 32, 371, 4624, 620, 473, 284, 415, 308, 8884, 620, 610, 744, 27, 301, 397, 310, 32, 470, 4624, 620, 26, 681, 293, 397, 442]}
{"line_number": 1455, "line_type": "original", "code": "                  interfaceType.toString()));", "entropy": 4.765625, "is_bug_line": false, "sus_score": 0.5283324122428894, "per_token_entropy": [9.6171875, 8.7734375, 1.453125, 0.61279296875, 4.16015625, 3.98046875], "tokens": [5688, 2568, 620, 32, 3108, 5073]}
{"line_number": 1455, "line_type": "generated", "code": "\n      }\n    } else {\n      // TODO(user): add support for namespaced objects.\n      // TODO(user): add support for checking that the function\n      // is not overriding a property with a different type.\n      // TODO(user): add support", "entropy": 0.7763671875, "is_bug_line": false, "sus_score": 0.5283324122428894, "per_token_entropy": [0.91455078125, 0.01461029052734375, 0.109375, 0.0018634796142578125, 0.72607421875, 0.376708984375, 0.0775146484375, 0.91455078125, 2.09765625, 0.043792724609375, 0.44482421875, 0.042755126953125, 2.458984375, 0.54345703125, 0.00946044921875, 0.669921875, 0.00528717041015625, 0.378662109375, 0.1431884765625, 0.0362548828125, 2.1953125, 1.0673828125, 0.009674072265625, 0.1273193359375, 0.0033588409423828125, 1.8046875, 0.3701171875, 0.01175689697265625, 3.78125, 2.736328125, 1.5498046875, 1.416015625, 2.279296875, 0.005229949951171875, 1.734375, 1.09765625, 1.26953125, 0.473876953125, 1.431640625, 1.5869140625, 0.44384765625, 0.814453125, 0.25390625, 0.8564453125, 0.175048828125, 1.4111328125, 0.68896484375, 0.003570556640625, 0.0221405029296875, 0.0003151893615722656, 0.6875, 0.05859375], "tokens": [397, 320, 284, 320, 813, 301, 397, 434, 4296, 26, 496, 711, 1015, 2193, 436, 636, 19985, 4684, 32, 397, 434, 4296, 26, 496, 711, 1015, 2193, 436, 11056, 688, 322, 667, 397, 434, 438, 646, 37599, 312, 2804, 623, 312, 3449, 827, 32, 397, 434, 4296, 26, 496, 711, 1015, 2193]}
{"line_number": 1028, "line_type": "original", "code": "      JSDocInfo info, JSType propertyType) {", "entropy": 2.5234375, "is_bug_line": false, "sus_score": 0.5282111763954163, "per_token_entropy": [7.26171875, 5.56640625, 0.0029449462890625, 3.4570693969726562e-06, 7.283687591552734e-05, 2.67578125, 7.4140625, 3.681640625, 0.0084686279296875, 2.82421875, 0.046295166015625, 3.306640625, 0.0302886962890625], "tokens": [647, 971, 3181, 542, 1120, 3099, 30, 7750, 620, 2804, 620, 27, 301]}
{"line_number": 1028, "line_type": "generated", "code": "\n    // If the supertype doesn't resolve correctly, we've warned about this\n    // already.\n    if (superClassHasProperty) {\n      if (declaredOverride) {\n        if (foundInterfaceProperty) {\n          compiler.report(t.", "entropy": 0.349853515625, "is_bug_line": false, "sus_score": 0.5282111763954163, "per_token_entropy": [0.26025390625, 0.9873046875, 2.53515625, 0.7666015625, 1.0712890625, 0.0077362060546875, 0.8447265625, 0.00014650821685791016, 0.1314697265625, 0.131591796875, 0.019378662109375, 0.033050537109375, 0.01241302490234375, 0.015960693359375, 0.00012433528900146484, 0.0026988983154296875, 0.008636474609375, 0.0024051666259765625, 0.0006923675537109375, 0.0019550323486328125, 0.0179443359375, 0.024200439453125, 0.05938720703125, 0.18603515625, 0.9443359375, 0.030242919921875, 1.1630859375, 1.3589859008789062e-05, 0.463134765625, 0.0123748779296875, 0.037872314453125, 1.7998046875, 0.46630859375, 0.896484375, 0.0021648406982421875, 0.2379150390625, 0.0027980804443359375, 0.01593017578125, 1.8662109375, 0.49951171875, 1.501953125, 0.00040841102600097656, 5.316734313964844e-05, 0.10345458984375, 0.0006666183471679688, 0.0173797607421875, 0.8173828125, 0.0003986358642578125, 0.001140594482421875, 0.00566864013671875, 0.17578125, 5.793571472167969e-05], "tokens": [284, 434, 1670, 322, 5154, 43981, 4163, 1330, 5889, 8464, 30, 996, 4763, 17161, 318, 2625, 458, 284, 434, 3425, 32, 284, 415, 308, 5266, 1339, 3993, 1653, 27, 301, 397, 415, 308, 26549, 1788, 27, 301, 291, 415, 308, 6264, 3041, 1653, 27, 301, 616, 8980, 32, 3734, 26, 102, 32]}
{"line_number": 1563, "line_type": "original", "code": "        CompilerInput functionSource = compiler.getInput(sourceName);", "entropy": 2.087890625, "is_bug_line": false, "sus_score": 0.5280808210372925, "per_token_entropy": [5.72265625, 7.6953125, 0.26953125, 2.30859375, 0.425537109375, 0.102783203125, 4.98828125, 0.02142333984375, 0.01549530029296875, 0.00914764404296875, 4.953125, 0.58935546875, 0.0428466796875], "tokens": [351, 20209, 1612, 667, 2028, 280, 8980, 32, 29647, 26, 1855, 558, 293]}
{"line_number": 1563, "line_type": "generated", "code": "\n      // TODO(johnlenz): this is a hack to handle cases where the parameter is\n      // a union type.\n      // It is important to handle the case where the parameter is a union type\n      // because the type of the argument can be a", "entropy": 1.2060546875, "is_bug_line": false, "sus_score": 0.5280808210372925, "per_token_entropy": [0.253662109375, 1.634765625, 2.15625, 0.59130859375, 0.67529296875, 0.0014562606811523438, 0.0015764236450195312, 0.06402587890625, 3.783203125, 1.435546875, 1.23828125, 1.220703125, 0.73486328125, 2.787109375, 2.619140625, 0.434814453125, 1.1962890625, 1.736328125, 1.8056640625, 0.303466796875, 0.00203704833984375, 1.482421875, 2.146484375, 0.52490234375, 0.88525390625, 1.556640625, 1.8583984375, 3.333984375, 1.8798828125, 4.03125, 0.5478515625, 2.943359375, 1.6298828125, 0.8154296875, 0.33203125, 0.64111328125, 0.57177734375, 0.2724609375, 0.55126953125, 0.114990234375, 0.7509765625, 0.1856689453125, 0.01210784912109375, 0.830078125, 1.6318359375, 2.30859375, 0.97021484375, 0.424560546875, 0.91748046875, 2.052734375, 0.35888671875, 1.4755859375], "tokens": [397, 434, 4296, 26, 25172, 1657, 108, 711, 458, 438, 312, 16445, 372, 2887, 6792, 2154, 322, 3395, 438, 397, 434, 312, 15234, 827, 32, 397, 434, 2030, 438, 8913, 372, 2887, 322, 1135, 2154, 322, 3395, 438, 312, 15234, 827, 397, 434, 3301, 322, 827, 432, 322, 2793, 883, 526, 312]}
{"line_number": 1355, "line_type": "original", "code": "    Node left = n.getFirstChild();", "entropy": 1.0009765625, "is_bug_line": false, "sus_score": 0.5273000001907349, "per_token_entropy": [3.935546875, 2.869140625, 1.9208984375, 0.037628173828125, 0.044189453125, 0.003841400146484375, 0.1712646484375, 0.0009851455688476562, 0.0257720947265625], "tokens": [264, 4004, 2841, 280, 310, 32, 25657, 2931, 473]}
{"line_number": 1355, "line_type": "generated", "code": "\n   *\n   * @param t The node traversal object that supplies context, such as the\n   * scope chain to use in name lookups as well as error reporting.\n   * @param n The node being visited.\n   */\n  private void visitNew", "entropy": 0.01110076904296875, "is_bug_line": false, "sus_score": 0.5273000001907349, "per_token_entropy": [0.1400146484375, 0.09564208984375, 0.1102294921875, 0.001338958740234375, 0.02484130859375, 0.0016775131225585938, 0.007354736328125, 0.00783538818359375, 0.00325775146484375, 0.0008645057678222656, 0.0005617141723632812, 0.005306243896484375, 0.0005283355712890625, 2.0265579223632812e-06, 0.0005578994750976562, 0.0022430419921875, 0.0009775161743164062, 0.00041747093200683594, 0.0023097991943359375, 0.007328033447265625, 0.00039124488830566406, 0.02301025390625, 0.000514984130859375, 0.0007987022399902344, 0.00019168853759765625, 0.00016891956329345703, 0.0008840560913085938, 0.0003991127014160156, 5.602836608886719e-06, 0.0010356903076171875, 2.2649765014648438e-05, 0.0002148151397705078, 0.00012767314910888672, 0.0003898143768310547, 0.0004336833953857422, 0.01568603515625, 0.0026988983154296875, 0.0009484291076660156, 0.00017189979553222656, 0.00304412841796875, 0.0025920867919921875, 0.00632476806640625, 0.0009188652038574219, 0.00010025501251220703, 0.000530242919921875, 0.0377197265625, 0.017181396484375, 0.0129852294921875, 0.031005859375, 0.0020599365234375, 0.0003719329833984375, 0.001125335693359375], "tokens": [664, 319, 664, 319, 477, 753, 273, 886, 1541, 34395, 1300, 688, 11066, 6827, 1619, 30, 3751, 619, 322, 664, 319, 4576, 8241, 372, 793, 328, 636, 2779, 9016, 619, 4487, 619, 1048, 15945, 32, 664, 319, 477, 753, 310, 886, 1541, 3998, 21286, 32, 664, 569, 334, 945, 763, 7725, 1812]}
{"line_number": 1258, "line_type": "original", "code": "  private void visitGetProp(NodeTraversal t, Node n, Node parent) {", "entropy": 1.1396484375, "is_bug_line": false, "sus_score": 0.5272383689880371, "per_token_entropy": [4.13671875, 9.0, 0.2431640625, 4.703125, 0.40771484375, 0.31689453125, 0.72607421875, 0.038482666015625, 0.019927978515625, 0.006885528564453125, 0.00033783912658691406, 0.1522216796875, 0.0302276611328125, 0.16162109375, 0.47216796875, 0.0265045166015625, 0.01007080078125, 0.064453125], "tokens": [225, 945, 763, 7725, 936, 6567, 26, 1212, 35699, 273, 30, 4004, 310, 30, 4004, 2935, 27, 301]}
{"line_number": 1258, "line_type": "generated", "code": "\n      // We don't know what type this is, so we can't check it.\n      // We could check for a method on it, but that would require\n      // a lot of type inference, so we don't.\n      return;\n    }\n ", "entropy": 1.115234375, "is_bug_line": false, "sus_score": 0.5272383689880371, "per_token_entropy": [0.609375, 1.0869140625, 2.703125, 1.615234375, 0.0002237558364868164, 0.849609375, 1.25390625, 1.669921875, 0.5537109375, 0.324951171875, 0.58642578125, 0.6708984375, 1.0107421875, 0.88134765625, 0.07745361328125, 1.671875, 1.216796875, 0.427734375, 0.35693359375, 1.38671875, 2.00390625, 2.568359375, 2.998046875, 2.279296875, 2.4765625, 2.201171875, 2.587890625, 1.7685546875, 0.72265625, 0.223388671875, 1.0078125, 1.3193359375, 1.75390625, 0.6708984375, 0.0018472671508789062, 1.9599609375, 2.216796875, 0.67333984375, 1.505859375, 0.7333984375, 1.396484375, 0.78125, 0.7177734375, 1.3837890625, 0.00010669231414794922, 1.2275390625, 0.334716796875, 0.896484375, 0.001934051513671875, 0.185791015625, 0.0026302337646484375, 0.459228515625], "tokens": [397, 434, 2688, 2800, 1330, 3702, 2769, 827, 458, 438, 30, 1259, 996, 883, 1330, 1505, 561, 32, 397, 434, 2688, 3065, 1505, 436, 312, 1411, 544, 561, 30, 1273, 688, 2268, 1205, 397, 434, 312, 8215, 432, 827, 22410, 30, 1259, 996, 2800, 1330, 32, 397, 442, 45, 284, 320, 334]}
{"line_number": 1213, "line_type": "original", "code": "   * @param t The node traversal object that supplies context, such as the", "entropy": 0.9140625, "is_bug_line": false, "sus_score": 0.5263090133666992, "per_token_entropy": [6.59375, 3.576171875, 2.302734375, 0.357177734375, 2.2421875, 0.0855712890625, 0.0225830078125, 0.0038471221923828125, 0.00678253173828125, 0.02490234375, 0.00774383544921875, 3.504753112792969e-05, 0.046875, 0.020294189453125, 0.2020263671875, 0.020538330078125, 0.0286102294921875], "tokens": [261, 319, 477, 753, 273, 886, 1541, 34395, 1300, 688, 11066, 6827, 1619, 30, 3751, 619, 322]}
{"line_number": 1213, "line_type": "generated", "code": "\n      visitAnnotatedAssignGetprop(t, parent, n.getJSType(), n.getFirstChild(),\n          n.getLastChild().getString(), n.getLastChild());\n    } else {\n      visitGetPropWithoutType(t, n, parent);", "entropy": 0.25439453125, "is_bug_line": false, "sus_score": 0.5263090133666992, "per_token_entropy": [0.477783203125, 1.576171875, 0.1336669921875, 0.0036163330078125, 0.0031261444091796875, 0.0123443603515625, 0.001476287841796875, 0.11761474609375, 0.0005211830139160156, 0.277099609375, 0.017303466796875, 0.25390625, 0.0022945404052734375, 0.0037136077880859375, 0.0003330707550048828, 3.6597251892089844e-05, 0.0070037841796875, 0.99462890625, 0.0894775390625, 0.01934814453125, 4.1365623474121094e-05, 0.00023257732391357422, 0.0758056640625, 0.049407958984375, 0.00011920928955078125, 0.16845703125, 0.0016021728515625, 0.006191253662109375, 0.00235748291015625, 0.0010509490966796875, 0.3251953125, 0.0147247314453125, 0.0455322265625, 0.0001462697982788086, 0.13671875, 0.54296875, 0.00431060791015625, 0.4677734375, 0.272216796875, 0.27978515625, 1.140625, 1.1640625, 0.5068359375, 2.83203125, 0.43359375, 0.3271484375, 0.0150299072265625, 0.0008263587951660156, 0.0100860595703125, 0.304443359375, 0.08270263671875, 0.0209808349609375], "tokens": [397, 7725, 33767, 9079, 936, 4641, 26, 102, 30, 2935, 30, 310, 32, 371, 4624, 620, 1026, 310, 32, 25657, 2931, 1026, 616, 310, 32, 20197, 2931, 922, 7069, 1026, 310, 32, 20197, 2931, 1035, 284, 320, 813, 301, 397, 7725, 936, 6567, 11446, 620, 26, 102, 30, 310, 30, 2935, 293]}
{"line_number": 354, "line_type": "original", "code": "", "entropy": 4.2890625, "is_bug_line": false, "sus_score": 0.5258737206459045, "per_token_entropy": [4.2890625], "tokens": [203]}
{"line_number": 354, "line_type": "generated", "code": "\n        if (info!= null && info.hasType()) {\n          if (reportUnknownTypes == CheckLevel.ERROR) {\n            compiler.report(JSError.make(n, Check.UNKNOWN_TYPE_NAME));\n          } else if (report", "entropy": 0.30517578125, "is_bug_line": false, "sus_score": 0.5258737206459045, "per_token_entropy": [0.2418212890625, 0.22265625, 0.09722900390625, 0.08392333984375, 0.05657958984375, 5.054473876953125e-05, 0.415771484375, 0.14208984375, 0.0003380775451660156, 1.0458984375, 0.033935546875, 0.35107421875, 0.007472991943359375, 0.05615234375, 2.662109375, 0.1865234375, 0.88720703125, 0.60498046875, 0.0002658367156982422, 0.92822265625, 0.014801025390625, 3.7670135498046875e-05, 1.728534698486328e-05, 0.09228515625, 0.0283966064453125, 0.002124786376953125, 0.032806396484375, 0.9619140625, 0.00020205974578857422, 0.038604736328125, 0.0013599395751953125, 0.67333984375, 0.0139617919921875, 0.00040221214294433594, 0.0028476715087890625, 0.0007214546203613281, 0.5302734375, 0.004993438720703125, 1.74609375, 0.9208984375, 0.35888671875, 0.0015649795532226562, 0.39697265625, 0.314453125, 0.5107421875, 0.501953125, 0.0146636962890625, 0.0001327991485595703, 0.403076171875, 0.274169921875, 0.0046234130859375, 0.006618499755859375], "tokens": [291, 415, 308, 1338, 863, 744, 962, 3099, 32, 2040, 620, 1157, 301, 616, 415, 308, 3734, 5842, 2424, 610, 3456, 2656, 32, 2930, 27, 301, 324, 8980, 32, 3734, 26, 60, 21887, 32, 2682, 26, 96, 30, 3456, 32, 14174, 81, 2319, 81, 2474, 876, 616, 320, 813, 415, 308, 3734]}
{"line_number": 1037, "line_type": "original", "code": "        superClass.getPrototype().hasProperty(propertyName);", "entropy": 2.21484375, "is_bug_line": false, "sus_score": 0.52577143907547, "per_token_entropy": [4.29296875, 5.140625, 0.212158203125, 1.830078125, 1.650390625, 0.05596923828125, 5.3203125, 0.043121337890625, 0.028961181640625, 0.04925537109375, 5.734375], "tokens": [351, 47514, 32, 371, 17534, 922, 2040, 1653, 26, 24948, 293]}
{"line_number": 1037, "line_type": "generated", "code": "\n          topInstanceType.toString()));\n    }\n\n    if (superClassHasProperty) {\n      // Make sure the property type is compatible with the superclass property\n      // type.\n      JSType superPropertyType =\n          superClass.getTopMostDefiningType(propertyName", "entropy": 0.474365234375, "is_bug_line": false, "sus_score": 0.52577143907547, "per_token_entropy": [0.9775390625, 0.11700439453125, 0.0004374980926513672, 0.00013017654418945312, 0.1571044921875, 0.00901031494140625, 0.056854248046875, 0.28076171875, 2.3603439331054688e-05, 0.339599609375, 0.60498046875, 0.334228515625, 1.5380859375, 0.1806640625, 0.291748046875, 2.6226043701171875e-06, 0.68310546875, 0.0004742145538330078, 0.01654052734375, 1.5771484375, 2.98828125, 0.0165863037109375, 0.72900390625, 1.1416015625, 0.89794921875, 0.355712890625, 0.458251953125, 0.35498046875, 0.114990234375, 0.86767578125, 1.513671875, 0.76318359375, 0.8798828125, 0.1170654296875, 0.408203125, 0.28173828125, 1.2177734375, 0.000293731689453125, 1.208984375, 0.350830078125, 0.0177459716796875, 0.67822265625, 0.3388671875, 0.00881195068359375, 0.39697265625, 0.8134765625, 0.0021572113037109375, 0.572265625, 9.930133819580078e-05, 0.0017070770263671875, 0.006134033203125, 0.002765655517578125], "tokens": [616, 2663, 1810, 620, 32, 3108, 5073, 284, 320, 446, 415, 308, 5266, 1339, 3993, 1653, 27, 301, 397, 434, 6400, 3654, 322, 2804, 827, 438, 13022, 623, 322, 37475, 2804, 397, 434, 827, 32, 397, 7750, 620, 2599, 29360, 280, 616, 47514, 32, 371, 3155, 20132, 1350, 19068, 620, 26, 24948]}
