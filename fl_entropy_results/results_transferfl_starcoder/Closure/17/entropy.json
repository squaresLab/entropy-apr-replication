{"line_number": 1291, "line_type": "original", "code": "              if (rValue.getJSType() != null && !rValue.getJSType().isUnknownType()) {", "entropy": 1.189453125, "is_bug_line": true, "sus_score": 0.7694586515426636, "per_token_entropy": [10.1953125, 2.326171875, 0.1495361328125, 6.02734375, 0.07159423828125, 1.2939453125, 4.07421875, 0.02056884765625, 0.0006947517395019531, 0.162841796875, 0.317626953125, 0.00640106201171875, 1.9970703125, 2.732421875, 0.306396484375, 0.002452850341796875, 0.01213836669921875, 0.67138671875, 0.0024261474609375, 2.0623207092285156e-05, 0.01047515869140625, 0.2369384765625, 0.0567626953125, 0.000682830810546875, 0.2041015625, 0.038604736328125], "tokens": [2850, 415, 308, 100, 882, 32, 371, 4624, 620, 346, 863, 744, 962, 653, 100, 882, 32, 371, 4624, 620, 922, 297, 5842, 620, 1157, 301]}
{"line_number": 1291, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Look for calls that set a delegate method's visibility.\n     */\n    private void checkForVisibilityDefiningCalls(\n        Node n, Map<String, Visibility> delegateMethods) {\n      codingConvention.checkForVisibilityDefining", "entropy": 0.25, "is_bug_line": true, "sus_score": 0.7694586515426636, "per_token_entropy": [0.96875, 0.018310546875, 0.138671875, 0.1983642578125, 0.033935546875, 0.00022912025451660156, 1.15234375, 0.0175933837890625, 1.234375, 0.408935546875, 1.0546875, 0.370361328125, 0.1536865234375, 0.14501953125, 0.03607177734375, 2.251953125, 0.0855712890625, 0.007488250732421875, 0.138671875, 0.00048422813415527344, 0.019317626953125, 0.0406494140625, 0.01334381103515625, 0.010833740234375, 0.135986328125, 0.058258056640625, 9.715557098388672e-05, 0.000797271728515625, 0.00160980224609375, 0.2122802734375, 0.021728515625, 0.0836181640625, 0.0032138824462890625, 0.431640625, 0.0002130270004272461, 0.01526641845703125, 7.867813110351562e-06, 0.7255859375, 0.00632476806640625, 0.0297393798828125, 1.6572265625, 0.57763671875, 0.00585174560546875, 0.2147216796875, 0.30322265625, 6.532669067382812e-05, 5.698204040527344e-05, 0.0029621124267578125, 0.00078582763671875, 0.005718231201171875, 0.0019931793212890625, 3.5762786865234375e-06], "tokens": [284, 320, 446, 1022, 275, 319, 12615, 436, 7399, 688, 739, 312, 11165, 1411, 1182, 16709, 32, 275, 569, 284, 945, 763, 1505, 1562, 9950, 1350, 19068, 17838, 26, 291, 4004, 310, 30, 3516, 46, 652, 30, 32169, 48, 11165, 8891, 27, 301, 397, 10613, 21748, 32, 1553, 1562, 9950, 1350, 19068]}
{"line_number": 1290, "line_type": "original", "code": "            if (rValue != null) {", "entropy": 2.5234375, "is_bug_line": false, "sus_score": 0.7543869614601135, "per_token_entropy": [6.25, 9.4296875, 0.10968017578125, 4.078125, 0.034027099609375, 0.84716796875, 0.0017747879028320312, 1.8916015625, 0.08203125], "tokens": [1468, 415, 308, 100, 882, 863, 744, 27, 301]}
{"line_number": 1290, "line_type": "generated", "code": "\n        Node n, String className, String shortClassName,\n        Map<String, String> delegateClassNames,\n        Map<String, String> delegateMethods,\n        Map<String, String> delegateMethodCallingConventions) {\n      codingConvention.checkForClass", "entropy": 0.56005859375, "is_bug_line": false, "sus_score": 0.7543869614601135, "per_token_entropy": [1.0751953125, 0.25927734375, 0.1339111328125, 0.31982421875, 2.02734375, 1.2001953125, 0.278076171875, 1.6318359375, 3.830078125, 0.337890625, 0.2802734375, 0.6708984375, 1.619140625, 0.0027446746826171875, 0.0205078125, 3.0994415283203125e-05, 0.56201171875, 0.0013399124145507812, 0.56689453125, 1.23046875, 0.4931640625, 0.492431640625, 0.55712890625, 0.003292083740234375, 0.0102996826171875, 0.00026154518127441406, 0.375, 0.0014295578002929688, 0.2822265625, 1.90234375, 0.63818359375, 0.26416015625, 0.62841796875, 0.0012073516845703125, 0.01229095458984375, 0.00028824806213378906, 0.356201171875, 0.00293731689453125, 0.393798828125, 1.7587890625, 2.591796875, 0.01409149169921875, 8.368492126464844e-05, 1.0400390625, 0.055206298828125, 0.43017578125, 0.75146484375, 6.866455078125e-05, 0.00013959407806396484, 0.01189422607421875, 0.00244903564453125, 0.006855010986328125], "tokens": [291, 4004, 310, 30, 892, 2615, 30, 892, 4504, 8469, 30, 291, 3516, 46, 652, 30, 892, 48, 11165, 42872, 30, 291, 3516, 46, 652, 30, 892, 48, 11165, 8891, 30, 291, 3516, 46, 652, 30, 892, 48, 11165, 1868, 15585, 609, 22004, 27, 301, 397, 10613, 21748, 32, 1553, 1562, 1339]}
{"line_number": 748, "line_type": "original", "code": "        defineName(name, n, parent,", "entropy": 1.728515625, "is_bug_line": false, "sus_score": 0.7474693655967712, "per_token_entropy": [4.94921875, 3.75, 2.62890625, 0.9384765625, 0.66357421875, 0.30322265625, 3.39453125, 0.11181640625, 0.477294921875, 0.0657958984375], "tokens": [351, 5597, 558, 26, 426, 30, 310, 30, 2935, 30]}
{"line_number": 748, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Defines a slot in the current scope.\n     *\n     * @param name The {@link Token#NAME} node.\n     * @param parent The parent of the {@code name} node.\n     * @param type The type", "entropy": 0.35595703125, "is_bug_line": false, "sus_score": 0.7474693655967712, "per_token_entropy": [0.55810546875, 0.045166015625, 0.171875, 0.09136962890625, 0.031524658203125, 6.580352783203125e-05, 0.77490234375, 0.1610107421875, 1.9296875, 0.57861328125, 0.134765625, 0.5947265625, 0.0662841796875, 0.342041015625, 0.38037109375, 0.50439453125, 1.5400390625, 0.003055572509765625, 0.3369140625, 0.01383209228515625, 0.54052734375, 0.435302734375, 2.185546875, 0.18115234375, 0.482421875, 0.009246826171875, 0.0093536376953125, 0.0222320556640625, 0.079833984375, 1.0263671875, 0.03607177734375, 0.004703521728515625, 0.006305694580078125, 0.0005955696105957031, 2.31640625, 0.2451171875, 0.495849609375, 0.379150390625, 0.1241455078125, 0.302490234375, 0.08978271484375, 0.021026611328125, 0.01540374755859375, 0.006011962890625, 0.30810546875, 0.053375244140625, 0.08770751953125, 0.005558013916015625, 0.00589752197265625, 0.146484375, 0.1109619140625, 0.52001953125], "tokens": [284, 320, 446, 1022, 275, 319, 23982, 312, 9848, 328, 322, 1550, 4576, 32, 275, 319, 275, 319, 477, 753, 636, 886, 3088, 1204, 6512, 21, 2474, 111, 1541, 32, 275, 319, 477, 753, 2935, 886, 2935, 432, 322, 3088, 687, 636, 111, 1541, 32, 275, 319, 477, 753, 827, 886, 827]}
{"line_number": 788, "line_type": "original", "code": "      Node value = name.getFirstChild();", "entropy": 3.43359375, "is_bug_line": false, "sus_score": 0.746038019657135, "per_token_entropy": [3.72265625, 12.1171875, 6.1796875, 2.212890625, 4.1328125, 0.5166015625, 1.845703125, 0.0167694091796875, 0.1600341796875], "tokens": [647, 4004, 786, 280, 636, 32, 25657, 2931, 473]}
{"line_number": 788, "line_type": "generated", "code": "\n     *     create a function type for {@code A.prototype.foo}.\n     * @return A function type, or null if no function type could be created.\n     */\n    private FunctionType createFunctionTypeFromNodes(\n        Node rValue, String name", "entropy": 0.37451171875, "is_bug_line": false, "sus_score": 0.746038019657135, "per_token_entropy": [0.6220703125, 0.28955078125, 0.224365234375, 1.96875, 0.361328125, 0.427001953125, 0.1396484375, 0.1826171875, 0.6455078125, 0.0037136077880859375, 0.65185546875, 0.02166748046875, 0.01058197021484375, 0.010894775390625, 0.003246307373046875, 0.81298828125, 0.2227783203125, 0.5830078125, 0.28759765625, 0.0804443359375, 1.1279296875, 1.052734375, 0.014984130859375, 1.3037109375, 0.89794921875, 0.953125, 0.1497802734375, 2.310546875, 1.25390625, 0.09979248046875, 0.494873046875, 0.0257720947265625, 0.67138671875, 0.1781005859375, 0.030364990234375, 0.05419921875, 0.0098114013671875, 0.5849609375, 0.012237548828125, 4.5418739318847656e-05, 0.004856109619140625, 0.00025463104248046875, 0.008453369140625, 0.00194549560546875, 0.007358551025390625, 0.2724609375, 0.00482177734375, 0.0377197265625, 0.00033164024353027344, 0.0003917217254638672, 0.34814453125, 0.008392333984375], "tokens": [275, 319, 262, 1487, 312, 667, 827, 436, 3088, 687, 399, 32, 3889, 32, 3986, 4009, 275, 319, 477, 601, 399, 667, 827, 30, 556, 744, 415, 1289, 667, 827, 3065, 526, 3272, 32, 275, 569, 284, 945, 4540, 620, 1487, 44334, 1792, 5909, 26, 291, 4004, 540, 882, 30, 892, 636]}
{"line_number": 1038, "line_type": "original", "code": "    }", "entropy": 3.04296875, "is_bug_line": false, "sus_score": 0.6756336688995361, "per_token_entropy": [2.7578125, 3.326171875], "tokens": [264, 320]}
{"line_number": 1038, "line_type": "generated", "code": "\n     * @param n the defining NAME or GETPROP node.\n     * @param parent the {@code n}'s parent.\n     * @param name the variable's name.\n     * @param type the variable's type. It may be {@code null", "entropy": 0.196044921875, "is_bug_line": false, "sus_score": 0.6756336688995361, "per_token_entropy": [0.599609375, 0.10699462890625, 0.164794921875, 0.01532745361328125, 0.724609375, 1.6591796875, 0.7314453125, 0.69677734375, 0.355712890625, 0.022216796875, 0.008331298828125, 0.035552978515625, 0.09912109375, 0.06231689453125, 0.0020694732666015625, 0.0032176971435546875, 0.0008292198181152344, 0.1671142578125, 0.0160980224609375, 0.036712646484375, 0.0007252693176269531, 0.00466156005859375, 0.0011587142944335938, 0.00017702579498291016, 0.0009150505065917969, 0.0163421630859375, 0.0289459228515625, 0.01520538330078125, 0.0022716522216796875, 0.00304412841796875, 1.1201171875, 0.1103515625, 1.4443359375, 0.1488037109375, 0.40576171875, 0.273681640625, 0.292724609375, 0.016693115234375, 0.0036525726318359375, 0.002513885498046875, 0.045501708984375, 0.012939453125, 0.021759033203125, 0.003444671630859375, 0.0299224853515625, 0.07025146484375, 0.44384765625, 0.07421875, 0.029632568359375, 0.05364990234375, 0.00765228271484375, 0.0036106109619140625], "tokens": [275, 319, 477, 753, 310, 322, 20720, 8912, 556, 6272, 15262, 1541, 32, 275, 319, 477, 753, 2935, 322, 3088, 687, 310, 8129, 101, 2935, 32, 275, 319, 477, 753, 636, 322, 2677, 1182, 636, 32, 275, 319, 477, 753, 827, 322, 2677, 1182, 827, 32, 2030, 1631, 526, 3088, 687, 744]}
{"line_number": 1428, "line_type": "original", "code": "        FunctionType delegateBaseCtor = delegateBaseObject.getConstructor();", "entropy": 1.7119140625, "is_bug_line": false, "sus_score": 0.6745726466178894, "per_token_entropy": [6.0703125, 3.837890625, 0.033050537109375, 6.22265625, 3.685546875, 0.488037109375, 0.05755615234375, 3.19140625, 0.19970703125, 0.10565185546875, 0.03363037109375, 0.0283966064453125, 0.0160675048828125, 0.006359100341796875], "tokens": [351, 4540, 620, 11165, 1761, 30092, 280, 11165, 1761, 959, 32, 371, 7932, 473]}
{"line_number": 1428, "line_type": "generated", "code": "\n      if (info!= null) {\n        if (info.isType()) {\n          ObjectType type = ObjectType.cast(typeRegistry.getType(info.getType()));\n          if (type!= null) {\n            if (ownerNode.isName()) {", "entropy": 0.381591796875, "is_bug_line": false, "sus_score": 0.6745726466178894, "per_token_entropy": [0.281005859375, 1.3525390625, 0.2384033203125, 1.4765625, 0.2381591796875, 0.0004582405090332031, 0.689453125, 0.0025157928466796875, 0.05047607421875, 1.18359375, 0.06732177734375, 0.265869140625, 0.0019893646240234375, 0.85205078125, 1.2353515625, 0.8896484375, 0.0017871856689453125, 0.045379638671875, 1.96484375, 0.291015625, 0.12286376953125, 0.8369140625, 0.0006275177001953125, 0.07403564453125, 0.002410888671875, 0.9921875, 0.0019588470458984375, 0.002147674560546875, 0.009674072265625, 0.00390625, 0.66357421875, 0.0162353515625, 0.03289794921875, 0.052490234375, 0.0880126953125, 0.23291015625, 0.00946044921875, 0.028472900390625, 0.08526611328125, 0.00044465065002441406, 0.11883544921875, 0.001964569091796875, 0.04364013671875, 1.3828125, 0.09600830078125, 2.03515625, 0.6728515625, 0.045379638671875, 0.323974609375, 0.499267578125, 0.2354736328125, 0.0005044937133789062], "tokens": [397, 415, 308, 1338, 863, 744, 27, 301, 291, 415, 308, 1338, 32, 297, 620, 1157, 301, 616, 42562, 827, 280, 42562, 32, 2405, 26, 681, 5378, 32, 10272, 26, 1338, 32, 10272, 5073, 616, 415, 308, 681, 863, 744, 27, 301, 324, 415, 308, 5632, 1212, 32, 297, 558, 1157, 301]}
{"line_number": 1010, "line_type": "original", "code": "            info.getEnumParameterType().evaluate(scope, typeRegistry);", "entropy": 2.671875, "is_bug_line": false, "sus_score": 0.6726579070091248, "per_token_entropy": [6.8515625, 7.92578125, 1.2529296875, 1.32421875, 3.123046875, 0.00830078125, 4.2890625, 5.82421875, 0.95947265625, 1.2099609375, 1.7705078125, 2.259765625, 0.054656982421875, 0.5478515625], "tokens": [1468, 3099, 32, 371, 2759, 46453, 922, 13697, 26, 3473, 30, 827, 5378, 293]}
{"line_number": 1010, "line_type": "generated", "code": "\n     * @param parent the {@code n}'s parent.\n     * @param type the variable's type. It may be {@code null}, in which case\n     *     the variable's type will be inferred.\n     * @param inferred whether the variable", "entropy": 0.1412353515625, "is_bug_line": false, "sus_score": 0.6726579070091248, "per_token_entropy": [0.415771484375, 0.1090087890625, 0.0361328125, 0.01369476318359375, 0.9423828125, 0.1480712890625, 0.388671875, 0.004375457763671875, 0.5458984375, 0.0030002593994140625, 0.00025534629821777344, 0.00823974609375, 0.119873046875, 0.3876953125, 0.1826171875, 0.005947113037109375, 0.016937255859375, 0.340087890625, 0.03594970703125, 0.0307769775390625, 0.006549835205078125, 0.035552978515625, 0.12091064453125, 0.255615234375, 0.046844482421875, 0.033050537109375, 0.0633544921875, 0.0030536651611328125, 0.0012331008911132812, 0.036773681640625, 0.0098724365234375, 0.0010004043579101562, 0.00832366943359375, 0.0173187255859375, 6.949901580810547e-05, 0.018157958984375, 0.06085205078125, 0.0252532958984375, 0.0009708404541015625, 0.0012445449829101562, 0.01143646240234375, 0.0048065185546875, 0.057403564453125, 0.0202484130859375, 0.1370849609375, 0.255615234375, 0.01079559326171875, 0.02447509765625, 0.93115234375, 0.46142578125, 0.392333984375, 0.55712890625], "tokens": [275, 319, 477, 753, 2935, 322, 3088, 687, 310, 8129, 101, 2935, 32, 275, 319, 477, 753, 827, 322, 2677, 1182, 827, 32, 2030, 1631, 526, 3088, 687, 744, 835, 328, 1510, 1135, 275, 319, 262, 322, 2677, 1182, 827, 1098, 526, 43134, 32, 275, 319, 477, 753, 43134, 4946, 322, 2677]}
{"line_number": 1841, "line_type": "original", "code": "  } // end GlobalScopeBuilder", "entropy": 2.625, "is_bug_line": false, "sus_score": 0.671747088432312, "per_token_entropy": [2.4296875, 0.252197265625, 5.34765625, 0.295654296875, 9.984375, 0.02447509765625, 0.03753662109375], "tokens": [225, 320, 434, 943, 6564, 5504, 1796]}
{"line_number": 1841, "line_type": "generated", "code": "\n  }", "entropy": 0.51220703125, "is_bug_line": false, "sus_score": 0.671747088432312, "per_token_entropy": [0.94287109375, 0.081787109375], "tokens": [334, 320]}
{"line_number": 2067, "line_type": "original", "code": "", "entropy": 0.259521484375, "is_bug_line": false, "sus_score": 0.6695405840873718, "per_token_entropy": [0.259521484375], "tokens": [203]}
{"line_number": 2067, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6695405840873718, "per_token_entropy": [], "tokens": []}
{"line_number": 409, "line_type": "original", "code": "", "entropy": 3.8828125, "is_bug_line": false, "sus_score": 0.6686767935752869, "per_token_entropy": [3.8828125], "tokens": [203]}
{"line_number": 409, "line_type": "generated", "code": "\n      if (lentObjectLiterals!= null) {\n        for (Node n : lentObjectLiterals) {\n          JSType t = n.getJSType();\n          if (t!= null) {\n            t.resolveLendsType(", "entropy": 0.272216796875, "is_bug_line": false, "sus_score": 0.6686767935752869, "per_token_entropy": [0.9462890625, 1.5732421875, 0.1719970703125, 0.578125, 0.0005583763122558594, 0.0014133453369140625, 0.00036907196044921875, 0.00018513202667236328, 0.039459228515625, 0.00011289119720458984, 0.113037109375, 0.0004630088806152344, 0.0201263427734375, 0.305419921875, 0.0011339187622070312, 0.0141143798828125, 1.4580078125, 0.0073089599609375, 0.00989532470703125, 1.1682510375976562e-05, 5.960464477539062e-07, 0.00010585784912109375, 0.0032405853271484375, 0.0006818771362304688, 0.00024890899658203125, 0.0105438232421875, 1.95703125, 0.0016546249389648438, 2.09765625, 0.005504608154296875, 0.68798828125, 0.00043964385986328125, 0.22900390625, 0.2154541015625, 0.0007658004760742188, 0.030517578125, 0.0307159423828125, 0.2081298828125, 0.032440185546875, 0.02276611328125, 0.2685546875, 0.0005087852478027344, 0.63134765625, 0.0022754669189453125, 0.005802154541015625, 0.697265625, 0.179931640625, 0.86083984375, 0.234130859375, 0.001049041748046875, 0.39501953125, 0.10302734375], "tokens": [397, 415, 308, 94, 304, 959, 62, 18588, 863, 744, 27, 301, 291, 436, 308, 1212, 310, 499, 456, 304, 959, 62, 18588, 27, 301, 616, 7750, 620, 273, 280, 310, 32, 371, 4624, 620, 473, 616, 415, 308, 102, 863, 744, 27, 301, 324, 273, 32, 5284, 62, 1494, 620, 26]}
{"line_number": 3095, "line_type": "original", "code": "", "entropy": 0.259521484375, "is_bug_line": false, "sus_score": 0.6675682067871094, "per_token_entropy": [0.259521484375], "tokens": [203]}
{"line_number": 3095, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6675682067871094, "per_token_entropy": [], "tokens": []}
{"line_number": 1368, "line_type": "original", "code": "        }", "entropy": 3.9921875, "is_bug_line": false, "sus_score": 0.6669499278068542, "per_token_entropy": [5.73046875, 2.25390625], "tokens": [351, 320]}
{"line_number": 1368, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Check for calls to goog.inherits.\n     */\n    private void checkForGoogInherits(Node n) {\n      if (n.isCall()) {\n        Node callee = n.getFirstChild();\n        if (", "entropy": 0.3662109375, "is_bug_line": false, "sus_score": 0.6669499278068542, "per_token_entropy": [0.3896484375, 0.006793975830078125, 0.393798828125, 0.339599609375, 0.035125732421875, 0.00041413307189941406, 2.822265625, 0.9921875, 1.5712890625, 0.69677734375, 1.345703125, 0.00616455078125, 0.869140625, 0.81591796875, 0.1314697265625, 0.2161865234375, 0.0102081298828125, 0.0295257568359375, 0.0599365234375, 0.038604736328125, 0.054473876953125, 0.95068359375, 0.0031757354736328125, 0.0401611328125, 1.2159347534179688e-05, 0.3740234375, 0.2117919921875, 0.4736328125, 0.58984375, 0.003021240234375, 0.186767578125, 0.94970703125, 0.266357421875, 0.56640625, 0.0284881591796875, 0.6162109375, 0.8671875, 0.5625, 0.0002281665802001953, 0.0178680419921875, 0.4609375, 0.431640625, 4.76837158203125e-06, 0.058197021484375, 0.03399658203125, 8.404254913330078e-05, 0.04541015625, 0.0012693405151367188, 0.043304443359375, 0.066162109375, 0.33154296875, 0.043060302734375], "tokens": [284, 320, 446, 1022, 275, 319, 3456, 436, 7399, 372, 47917, 32, 24525, 32, 275, 569, 284, 945, 763, 1505, 1562, 57, 18011, 383, 18245, 26, 1212, 310, 27, 301, 397, 415, 308, 96, 32, 297, 1853, 1157, 301, 291, 4004, 2182, 13369, 280, 310, 32, 25657, 2931, 473, 291, 415, 308]}
{"line_number": 2071, "line_type": "original", "code": "", "entropy": 0.259521484375, "is_bug_line": false, "sus_score": 0.6646831035614014, "per_token_entropy": [0.259521484375], "tokens": [203]}
{"line_number": 2071, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6646831035614014, "per_token_entropy": [], "tokens": []}
{"line_number": 593, "line_type": "original", "code": "            defineObjectLiteral(n);", "entropy": 3.26171875, "is_bug_line": false, "sus_score": 0.6605362296104431, "per_token_entropy": [9.5078125, 3.99609375, 1.2373046875, 0.2054443359375, 2.873046875, 3.515625, 1.4951171875], "tokens": [1468, 5597, 959, 8208, 26, 96, 293]}
{"line_number": 593, "line_type": "generated", "code": "\n\n      if (createdEnumType) {\n        type.setEnumType(true);\n      }\n\n      // Handle any properties that are defined on the literal.\n      for (Node key : objectLit.children()) {\n        if (key.isDefaultValue()) {", "entropy": 0.6728515625, "is_bug_line": false, "sus_score": 0.6605362296104431, "per_token_entropy": [1.5888671875, 0.865234375, 0.2008056640625, 0.51806640625, 0.001132965087890625, 3.5881996154785156e-05, 0.059539794921875, 0.0014057159423828125, 0.01409149169921875, 1.3271484375, 0.64111328125, 0.705078125, 0.75439453125, 1.66796875, 0.204833984375, 0.1402587890625, 0.0084686279296875, 0.2296142578125, 0.0001329183578491211, 1.3916015625, 1.1484375, 2.927734375, 2.009765625, 1.78125, 1.8876953125, 1.2529296875, 2.625, 2.498046875, 0.4892578125, 0.96142578125, 0.37060546875, 0.02337646484375, 0.57958984375, 0.0007371902465820312, 0.004505157470703125, 0.9423828125, 1.060546875, 0.132080078125, 0.000171661376953125, 0.0014734268188476562, 0.00679779052734375, 0.0008988380432128906, 0.0001857280731201172, 0.01183319091796875, 0.488037109375, 0.2398681640625, 0.138916015625, 0.003787994384765625, 0.82861328125, 2.15234375, 0.10089111328125, 0.0013570785522460938], "tokens": [1687, 415, 308, 4524, 2759, 620, 27, 301, 291, 827, 32, 470, 2759, 620, 26, 1508, 293, 397, 320, 1687, 434, 7968, 1346, 4308, 688, 884, 3417, 544, 322, 10652, 32, 397, 436, 308, 1212, 1202, 499, 1300, 27472, 32, 4915, 1157, 301, 291, 415, 308, 678, 32, 297, 20035, 1157, 301]}
{"line_number": 781, "line_type": "original", "code": "     * @param var The parent of the {@code name} node, which must be a", "entropy": 1.9208984375, "is_bug_line": false, "sus_score": 0.6601911783218384, "per_token_entropy": [1.29296875, 0.1041259765625, 7.37109375, 0.07037353515625, 6.15234375, 0.75732421875, 4.59375, 2.283203125, 0.19921875, 2.009765625, 0.99755859375, 1.5322265625, 0.08099365234375, 0.1494140625, 1.5615234375, 2.43359375, 3.6015625, 0.405029296875, 0.89013671875], "tokens": [262, 319, 477, 753, 773, 886, 2935, 432, 322, 3088, 687, 636, 111, 1541, 30, 1510, 2298, 526, 312]}
{"line_number": 781, "line_type": "generated", "code": "\n     *     you're sure you have enough information to do so.\n     */\n    FunctionType createFunctionTypeFromNodes(\n        Node n, String functionName, JSDocInfo info, Node lValue) {\n      FunctionType type = createFunctionType(function", "entropy": 0.3662109375, "is_bug_line": false, "sus_score": 0.6601911783218384, "per_token_entropy": [0.52685546875, 0.000560760498046875, 0.5439453125, 0.417724609375, 0.92041015625, 1.021484375, 0.92236328125, 1.4580078125, 1.5947265625, 0.131103515625, 0.2486572265625, 1.3369140625, 0.037933349609375, 0.061767578125, 0.09375, 0.677734375, 0.01247406005859375, 0.96728515625, 3.314018249511719e-05, 0.00235748291015625, 0.00020706653594970703, 0.005985260009765625, 0.0018215179443359375, 0.0028896331787109375, 0.43115234375, 0.005298614501953125, 0.5419921875, 0.0017833709716796875, 0.39990234375, 0.3896484375, 0.0009360313415527344, 0.0008807182312011719, 0.04278564453125, 2.7418136596679688e-06, 2.384185791015625e-07, 0.00010454654693603516, 0.05755615234375, 0.00208282470703125, 0.04376220703125, 0.0270538330078125, 0.00789642333984375, 0.0028743743896484375, 0.0015306472778320312, 0.1995849609375, 1.0537109375, 0.0265655517578125, 0.91064453125, 0.253173828125, 1.8994140625, 0.2220458984375, 0.693359375, 0.8466796875], "tokens": [275, 319, 262, 844, 4484, 3654, 844, 1159, 8448, 2471, 372, 745, 1259, 32, 275, 569, 284, 4540, 620, 1487, 44334, 1792, 5909, 26, 291, 4004, 310, 30, 892, 667, 558, 30, 971, 3181, 542, 1120, 3099, 30, 4004, 456, 882, 27, 301, 397, 4540, 620, 827, 280, 1487, 44334, 26, 1126]}
{"line_number": 680, "line_type": "original", "code": "", "entropy": 4.41015625, "is_bug_line": false, "sus_score": 0.6584054231643677, "per_token_entropy": [4.41015625], "tokens": [203]}
{"line_number": 680, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Defines a formal parameter.\n     */\n    void defineFormalParameter(Node n, Node parent) {\n      assertDefinitionNode(n, Token.NAME);\n      defineSlot(n, parent, null);\n    }\n\n    /**\n    ", "entropy": 0.2003173828125, "is_bug_line": false, "sus_score": 0.6584054231643677, "per_token_entropy": [1.11328125, 0.0195159912109375, 0.14404296875, 0.1112060546875, 0.0222930908203125, 0.0005059242248535156, 0.348388671875, 0.202880859375, 1.19921875, 0.0215301513671875, 0.202392578125, 0.091552734375, 0.18505859375, 0.004528045654296875, 0.026214599609375, 0.0034961700439453125, 0.86962890625, 1.013671875, 0.002422332763671875, 0.07342529296875, 0.05877685546875, 0.2193603515625, 0.0855712890625, 0.1170654296875, 0.149658203125, 0.0007076263427734375, 0.03338623046875, 0.1280517578125, 0.004177093505859375, 4.5299530029296875e-06, 6.0558319091796875e-05, 0.0004534721374511719, 2.384185791015625e-05, 0.0247344970703125, 4.1365623474121094e-05, 0.0672607421875, 0.001277923583984375, 0.12548828125, 1.1845703125, 0.08343505859375, 0.00494384765625, 0.00771331787109375, 0.01334381103515625, 0.80712890625, 0.10858154296875, 0.51220703125, 0.06671142578125, 0.7685546875, 0.00030350685119628906, 0.10711669921875, 0.06353759765625, 0.01074981689453125], "tokens": [284, 320, 446, 1022, 275, 319, 23982, 312, 32523, 3395, 32, 275, 569, 284, 763, 5597, 48336, 3012, 26, 1212, 310, 30, 4004, 2935, 27, 301, 397, 1201, 3373, 1212, 26, 96, 30, 6512, 32, 2474, 293, 397, 5597, 9490, 26, 96, 30, 2935, 30, 744, 293, 284, 320, 446, 1022, 275]}
{"line_number": 2037, "line_type": "original", "code": "", "entropy": 0.259521484375, "is_bug_line": false, "sus_score": 0.6569983959197998, "per_token_entropy": [0.259521484375], "tokens": [203]}
{"line_number": 2037, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6569983959197998, "per_token_entropy": [], "tokens": []}
{"line_number": 1976, "line_type": "original", "code": "        data.get(t.getScopeRoot()).recordNonEmptyReturn();", "entropy": 2.078125, "is_bug_line": false, "sus_score": 0.6568989157676697, "per_token_entropy": [8.578125, 4.234375, 0.060699462890625, 1.443359375, 0.01552581787109375, 2.8046875, 0.006011962890625, 0.0369873046875, 0.002788543701171875, 0.114501953125, 0.233154296875, 0.5078125, 5.875, 6.92578125, 2.197265625, 0.2276611328125], "tokens": [351, 706, 32, 371, 26, 102, 32, 371, 5504, 4058, 4251, 4133, 3910, 2766, 2891, 473]}
{"line_number": 1976, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6568989157676697, "per_token_entropy": [], "tokens": []}
{"line_number": 2082, "line_type": "original", "code": "", "entropy": 0.259521484375, "is_bug_line": false, "sus_score": 0.656280517578125, "per_token_entropy": [0.259521484375], "tokens": [203]}
{"line_number": 2082, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.656280517578125, "per_token_entropy": [], "tokens": []}
{"line_number": 3099, "line_type": "original", "code": "", "entropy": 0.259521484375, "is_bug_line": false, "sus_score": 0.6557486653327942, "per_token_entropy": [0.259521484375], "tokens": [203]}
{"line_number": 3099, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6557486653327942, "per_token_entropy": [], "tokens": []}
{"line_number": 1283, "line_type": "original", "code": "        } else if (info.isConstructor() || info.isInterface()) {", "entropy": 1.29296875, "is_bug_line": false, "sus_score": 0.6547212600708008, "per_token_entropy": [6.7265625, 3.53515625, 3.48828125, 0.763671875, 0.048797607421875, 0.80615234375, 0.99169921875, 1.064453125, 1.046875, 1.09765625, 1.46875, 0.495849609375, 0.01415252685546875, 0.09771728515625, 0.00994873046875, 0.321533203125, 0.0122222900390625], "tokens": [351, 320, 813, 415, 308, 1338, 32, 297, 7932, 346, 1276, 3099, 32, 297, 3041, 1157, 301]}
{"line_number": 1283, "line_type": "generated", "code": "\n    /**\n     * Look for calls that set a delegate method's calling convention.\n     */\n    private void checkForCallingConventionDefiningCalls(\n        Node n, Map<String, String> delegateCallingConventions) {\n      if (n.isCall", "entropy": 0.20751953125, "is_bug_line": false, "sus_score": 0.6547212600708008, "per_token_entropy": [0.64990234375, 0.59619140625, 0.03228759765625, 0.00021731853485107422, 1.9033203125, 0.03240966796875, 0.87939453125, 0.2744140625, 0.275146484375, 0.1253662109375, 0.06524658203125, 0.0518798828125, 0.017547607421875, 0.99072265625, 0.005886077880859375, 0.040618896484375, 0.00426483154296875, 0.03271484375, 0.005947113037109375, 0.02374267578125, 0.047454833984375, 0.035125732421875, 0.0239715576171875, 0.33837890625, 0.0015802383422851562, 0.05426025390625, 1.8477439880371094e-05, 0.009490966796875, 0.040771484375, 0.09674072265625, 0.047637939453125, 0.048309326171875, 0.051910400390625, 0.34326171875, 0.0011739730834960938, 0.01007843017578125, 3.4809112548828125e-05, 0.04949951171875, 0.0002073049545288086, 0.005023956298828125, 0.0134429931640625, 0.0011463165283203125, 1.3113021850585938e-06, 0.337158203125, 0.0182342529296875, 0.181884765625, 1.068359375, 0.1998291015625, 0.318115234375, 0.08294677734375, 0.12109375, 1.234375], "tokens": [284, 1022, 275, 319, 12615, 436, 7399, 688, 739, 312, 11165, 1411, 1182, 8276, 20636, 32, 275, 569, 284, 945, 763, 1505, 1562, 15585, 21748, 1350, 19068, 17838, 26, 291, 4004, 310, 30, 3516, 46, 652, 30, 892, 48, 11165, 15585, 609, 22004, 27, 301, 397, 415, 308, 96, 32, 297, 1853]}
