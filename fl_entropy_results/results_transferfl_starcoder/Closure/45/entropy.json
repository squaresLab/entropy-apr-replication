{"line_number": 735, "line_type": "original", "code": "            } else if (!NodeUtil.isLiteralValue(", "entropy": 1.9423828125, "is_bug_line": false, "sus_score": 0.6669799089431763, "per_token_entropy": [8.1171875, 5.67578125, 2.93359375, 0.73046875, 2.599609375, 2.1328125, 0.0009121894836425781, 0.0004703998565673828, 0.0635986328125, 1.0126953125, 0.03729248046875, 0.01029205322265625], "tokens": [1468, 320, 813, 415, 1429, 1212, 1733, 32, 297, 8208, 882, 26]}
{"line_number": 735, "line_type": "generated", "code": "\n      if (NodeUtil.isEnhancedFor(var.getParentNode().getParent())) {\n        // Skip enhanced for variables.\n        it.remove();\n        continue;\n      }\n\n      // TODO(johnlenz): make sure the variable is not referenced\n      //", "entropy": 0.71044921875, "is_bug_line": false, "sus_score": 0.6669799089431763, "per_token_entropy": [0.214111328125, 0.8759765625, 0.409912109375, 1.8984375, 0.0008869171142578125, 0.00025725364685058594, 0.052886962890625, 1.42578125, 0.027801513671875, 0.308837890625, 0.0306243896484375, 0.02984619140625, 0.07257080078125, 0.01277923583984375, 1.2587890625, 0.00616455078125, 0.57763671875, 0.00989532470703125, 0.10882568359375, 1.001953125, 2.1484375, 1.412109375, 0.6162109375, 1.341796875, 0.9208984375, 0.482421875, 1.2939453125, 2.1576881408691406e-05, 0.0033416748046875, 0.0002570152282714844, 0.3173828125, 0.067138671875, 0.0013332366943359375, 0.00850677490234375, 7.677078247070312e-05, 0.74853515625, 1.36328125, 2.39453125, 0.01666259765625, 0.609375, 0.005401611328125, 0.0008726119995117188, 0.039581298828125, 4.48046875, 1.2919921875, 2.685546875, 1.671875, 0.64599609375, 1.09375, 1.5712890625, 1.3671875, 0.0115509033203125], "tokens": [397, 415, 308, 1212, 1733, 32, 297, 45715, 1562, 26, 869, 32, 18789, 1212, 922, 18789, 5156, 301, 291, 434, 17221, 41119, 436, 4886, 32, 291, 561, 32, 2546, 473, 291, 4036, 45, 397, 320, 1687, 434, 4296, 26, 25172, 1657, 108, 711, 1930, 3654, 322, 2677, 438, 646, 15167, 397, 434]}
{"line_number": 1566, "line_type": "original", "code": "", "entropy": 0.197021484375, "is_bug_line": false, "sus_score": 0.6523990035057068, "per_token_entropy": [0.197021484375], "tokens": [203]}
{"line_number": 1566, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6523990035057068, "per_token_entropy": [], "tokens": []}
{"line_number": 938, "line_type": "original", "code": "        return new Assign(assignNode, current, isPropAssign);", "entropy": 1.2490234375, "is_bug_line": false, "sus_score": 0.6484742164611816, "per_token_entropy": [7.10546875, 0.939453125, 3.03515625, 1.029296875, 0.1455078125, 0.294921875, 0.3955078125, 0.004192352294921875, 4.4296875, 0.0310516357421875, 0.020660400390625, 0.031402587890625, 0.0007214546203613281, 0.0236968994140625], "tokens": [351, 442, 537, 17069, 26, 5157, 1212, 30, 1550, 30, 438, 6567, 9079, 293]}
{"line_number": 938, "line_type": "generated", "code": "  }\n\n  /**\n   * @return true if this is a call to goog.inherits\n   */\n  static boolean isCallToGoogInherits(Node n) {\n    return n.isCall() &&\n        n.getFirstChild().matchesQualifiedName(\"", "entropy": 0.56591796875, "is_bug_line": false, "sus_score": 0.6484742164611816, "per_token_entropy": [1.51171875, 0.59619140625, 1.4599609375, 0.67822265625, 0.087158203125, 0.000396728515625, 3.775390625, 0.6279296875, 2.240234375, 0.061981201171875, 2.04296875, 1.5712890625, 0.50927734375, 2.7109375, 0.43798828125, 1.3642578125, 0.006153106689453125, 0.59521484375, 1.3388671875, 0.03369140625, 0.13916015625, 1.5146484375, 0.0128173828125, 0.06719970703125, 0.98779296875, 0.01708984375, 0.1158447265625, 0.00017082691192626953, 0.043243408203125, 0.00024890899658203125, 0.00798797607421875, 0.0252532958984375, 0.401611328125, 0.031494140625, 0.0004482269287109375, 0.06280517578125, 0.984375, 0.50439453125, 0.01666259765625, 0.12261962890625, 0.158203125, 0.0007901191711425781, 0.1685791015625, 1.0224609375, 0.5419921875, 0.00024056434631347656, 0.09326171875, 0.0010347366333007812, 0.004047393798828125, 0.365234375, 0.0611572265625, 0.31689453125], "tokens": [225, 320, 719, 1022, 664, 319, 477, 601, 861, 415, 458, 438, 312, 1476, 372, 47917, 32, 24525, 664, 569, 334, 907, 1905, 438, 1853, 705, 57, 18011, 383, 18245, 26, 1212, 310, 27, 301, 284, 442, 310, 32, 297, 1853, 346, 962, 291, 310, 32, 25657, 2931, 922, 8933, 41340, 440]}
{"line_number": 1404, "line_type": "original", "code": "", "entropy": 0.197021484375, "is_bug_line": false, "sus_score": 0.6472043395042419, "per_token_entropy": [0.197021484375], "tokens": [203]}
{"line_number": 1404, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6472043395042419, "per_token_entropy": [], "tokens": []}
{"line_number": 1420, "line_type": "original", "code": "", "entropy": 0.197021484375, "is_bug_line": false, "sus_score": 0.6461516618728638, "per_token_entropy": [0.197021484375], "tokens": [203]}
{"line_number": 1420, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6461516618728638, "per_token_entropy": [], "tokens": []}
{"line_number": 346, "line_type": "original", "code": "    for (Iterator<Var> it = scope.getVars(); it.hasNext(); ) {", "entropy": 1.4599609375, "is_bug_line": false, "sus_score": 0.6399081349372864, "per_token_entropy": [5.140625, 2.072265625, 0.0085906982421875, 8.1484375, 0.025665283203125, 4.953125, 0.011688232421875, 0.038818359375, 0.0175628662109375, 4.54296875, 0.01195526123046875, 1.537109375, 0.07452392578125, 0.845703125, 0.23779296875, 0.001689910888671875, 0.0005793571472167969, 0.0086822509765625, 1.4833984375, 0.043212890625], "tokens": [264, 436, 308, 5731, 46, 1881, 48, 561, 280, 4576, 32, 371, 12034, 473, 561, 32, 16421, 473, 829, 301]}
{"line_number": 346, "line_type": "generated", "code": "\n      Node param = function.getFirstChild();\n      if (param.isName()) {\n        // no formal parameters\n        return null;\n      } else if (param.isParamList()) {\n        return param;\n      } else {\n        throw new IllegalStateException(\"", "entropy": 0.450439453125, "is_bug_line": false, "sus_score": 0.6399081349372864, "per_token_entropy": [1.2705078125, 1.2197265625, 1.2470703125, 0.349853515625, 1.1865234375, 0.0050811767578125, 1.1630859375, 0.001979827880859375, 0.18701171875, 0.0777587890625, 0.88427734375, 0.2130126953125, 0.08294677734375, 0.276123046875, 0.375732421875, 2.044921875, 0.22607421875, 0.002849578857421875, 0.0293426513671875, 1.056640625, 3.056640625, 1.828125, 0.367919921875, 0.6142578125, 0.093505859375, 0.5673828125, 0.0009508132934570312, 0.019012451171875, 0.00010013580322265625, 1.1123046875, 0.767578125, 0.07012939453125, 0.019622802734375, 0.00208282470703125, 0.407470703125, 0.031951904296875, 0.0002378225326538086, 0.0146484375, 0.0004055500030517578, 0.0098876953125, 0.396728515625, 0.055389404296875, 0.01384735107421875, 0.0056610107421875, 7.641315460205078e-05, 0.560546875, 0.1358642578125, 0.01326751708984375, 0.625, 0.018951416015625, 0.12255859375, 0.58203125], "tokens": [397, 4004, 4356, 280, 667, 32, 25657, 2931, 473, 397, 415, 308, 753, 32, 297, 558, 1157, 301, 291, 434, 1289, 32523, 3377, 291, 442, 744, 45, 397, 320, 813, 415, 308, 753, 32, 297, 3180, 720, 1157, 301, 291, 442, 4356, 45, 397, 320, 813, 301, 291, 1422, 537, 21665, 440]}
{"line_number": 1507, "line_type": "original", "code": "", "entropy": 0.197021484375, "is_bug_line": false, "sus_score": 0.6387981176376343, "per_token_entropy": [0.197021484375], "tokens": [203]}
{"line_number": 1507, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6387981176376343, "per_token_entropy": [], "tokens": []}
{"line_number": 337, "line_type": "original", "code": "    collectMaybeUnreferencedVars(fnScope);", "entropy": 1.189453125, "is_bug_line": false, "sus_score": 0.6383441686630249, "per_token_entropy": [5.02734375, 5.58984375, 1.1748046875, 0.006649017333984375, 0.0005993843078613281, 0.059234619140625, 0.006397247314453125, 0.01430511474609375, 0.00022804737091064453, 0.008697509765625], "tokens": [264, 7901, 13257, 1061, 36307, 12034, 26, 3359, 5504, 293]}
{"line_number": 337, "line_type": "generated", "code": "\n      // Strip unreferenced args from the function declaration and\n      // from the call sites.\n      // TODO(johnlenz): consider using a more efficient algorithm\n      // to find the callers.\n      for (Node callSite : callSiteOptimizer.get", "entropy": 0.88818359375, "is_bug_line": false, "sus_score": 0.6383441686630249, "per_token_entropy": [0.216064453125, 0.89111328125, 2.560546875, 0.1041259765625, 0.00974273681640625, 0.1968994140625, 0.7783203125, 0.80712890625, 0.62158203125, 0.3359375, 0.8193359375, 1.0849609375, 0.00447845458984375, 1.5166015625, 1.107421875, 0.7607421875, 0.501953125, 0.5146484375, 0.17529296875, 2.763671875, 1.2294921875, 0.03375244140625, 0.0237274169921875, 0.001995086669921875, 0.001636505126953125, 0.0187835693359375, 2.73828125, 2.748046875, 1.1875, 3.068359375, 1.525390625, 1.4970703125, 1.20703125, 0.1898193359375, 2.05859375, 2.349609375, 0.697265625, 1.716796875, 1.943359375, 1.3759765625, 0.45556640625, 1.779296875, 0.0135955810546875, 0.673828125, 0.62353515625, 0.36328125, 0.173583984375, 0.332275390625, 0.053955078125, 0.1072998046875, 0.006153106689453125, 0.2264404296875], "tokens": [397, 434, 41928, 707, 36307, 2181, 645, 322, 667, 13317, 461, 397, 434, 645, 322, 1476, 17289, 32, 397, 434, 4296, 26, 25172, 1657, 108, 711, 6295, 1471, 312, 1829, 17457, 8218, 397, 434, 372, 2290, 322, 1476, 483, 32, 397, 436, 308, 1212, 1476, 7294, 499, 1476, 7294, 29248, 32, 371]}
{"line_number": 1433, "line_type": "original", "code": "", "entropy": 0.197021484375, "is_bug_line": false, "sus_score": 0.6346110701560974, "per_token_entropy": [0.197021484375], "tokens": [203]}
{"line_number": 1433, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6346110701560974, "per_token_entropy": [], "tokens": []}
{"line_number": 2233, "line_type": "original", "code": "", "entropy": 0.197021484375, "is_bug_line": false, "sus_score": 0.6243368983268738, "per_token_entropy": [0.197021484375], "tokens": [203]}
{"line_number": 2233, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6243368983268738, "per_token_entropy": [], "tokens": []}
{"line_number": 1402, "line_type": "original", "code": "", "entropy": 0.197021484375, "is_bug_line": false, "sus_score": 0.6199176907539368, "per_token_entropy": [0.197021484375], "tokens": [203]}
{"line_number": 1402, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6199176907539368, "per_token_entropy": [], "tokens": []}
{"line_number": 1432, "line_type": "original", "code": "", "entropy": 0.197021484375, "is_bug_line": false, "sus_score": 0.6105630993843079, "per_token_entropy": [0.197021484375], "tokens": [203]}
{"line_number": 1432, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6105630993843079, "per_token_entropy": [], "tokens": []}
{"line_number": 1192, "line_type": "original", "code": "", "entropy": 0.197021484375, "is_bug_line": false, "sus_score": 0.6100043058395386, "per_token_entropy": [0.197021484375], "tokens": [203]}
{"line_number": 1192, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6100043058395386, "per_token_entropy": [], "tokens": []}
{"line_number": 1426, "line_type": "original", "code": "", "entropy": 0.197021484375, "is_bug_line": false, "sus_score": 0.6096464395523071, "per_token_entropy": [0.197021484375], "tokens": [203]}
{"line_number": 1426, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6096464395523071, "per_token_entropy": [], "tokens": []}
{"line_number": 1431, "line_type": "original", "code": "", "entropy": 0.197021484375, "is_bug_line": false, "sus_score": 0.609616756439209, "per_token_entropy": [0.197021484375], "tokens": [203]}
{"line_number": 1431, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.609616756439209, "per_token_entropy": [], "tokens": []}
{"line_number": 1403, "line_type": "original", "code": "", "entropy": 0.197021484375, "is_bug_line": false, "sus_score": 0.6094995141029358, "per_token_entropy": [0.197021484375], "tokens": [203]}
{"line_number": 1403, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6094995141029358, "per_token_entropy": [], "tokens": []}
{"line_number": 914, "line_type": "original", "code": "     */", "entropy": 6.3359375, "is_bug_line": false, "sus_score": 0.5937108993530273, "per_token_entropy": [6.08984375, 6.578125], "tokens": [262, 569]}
{"line_number": 914, "line_type": "generated", "code": "        parent.replaceChild(assignNode,\n            assignNode.getLastChild());\n      }\n    }\n  }", "entropy": 0.2509765625, "is_bug_line": false, "sus_score": 0.5937108993530273, "per_token_entropy": [1.0419921875, 0.927734375, 0.000606536865234375, 0.140869140625, 7.724761962890625e-05, 0.0005502700805664062, 0.0772705078125, 7.474422454833984e-05, 0.0005826950073242188, 1.3232421875, 0.045440673828125, 0.0002658367156982422, 7.939338684082031e-05, 0.01300811767578125, 5.626678466796875e-05, 0.69384765625, 0.245849609375, 0.0001571178436279297, 0.12152099609375, 0.0011663436889648438, 0.884765625, 0.0020694732666015625], "tokens": [351, 2935, 32, 3227, 2931, 26, 5157, 1212, 30, 324, 5313, 1212, 32, 20197, 2931, 1035, 397, 320, 284, 320, 334, 320]}
{"line_number": 1700, "line_type": "original", "code": "", "entropy": 0.197021484375, "is_bug_line": false, "sus_score": 0.584859311580658, "per_token_entropy": [0.197021484375], "tokens": [203]}
{"line_number": 1700, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.584859311580658, "per_token_entropy": [], "tokens": []}
{"line_number": 661, "line_type": "original", "code": "            defFinder.getDefinitionsReferencedAt(nameNode);", "entropy": 3.095703125, "is_bug_line": false, "sus_score": 0.5817563533782959, "per_token_entropy": [7.51171875, 8.2578125, 0.2335205078125, 0.0245361328125, 2.27734375, 1.8720703125, 6.69921875, 0.33251953125, 1.6923828125, 5.75390625, 1.390625, 1.1083984375], "tokens": [1468, 665, 15882, 32, 371, 12676, 34481, 1076, 26, 426, 1212, 293]}
{"line_number": 661, "line_type": "generated", "code": "\n    } while (changes);\n  }\n\n  /**\n   * A simple definition finder that can be used to find the definition\n   * of a function.\n   */\n  private static class SimpleDefinitionFinder {\n    private final AbstractCompiler compiler;\n    private final DefinitionGraph", "entropy": 0.6494140625, "is_bug_line": false, "sus_score": 0.5817563533782959, "per_token_entropy": [1.94140625, 0.234130859375, 0.02008056640625, 0.1033935546875, 0.037567138671875, 0.030364990234375, 0.2042236328125, 0.00222015380859375, 0.29150390625, 0.317138671875, 0.05487060546875, 0.0001577138900756836, 3.703125, 2.16796875, 1.8330078125, 0.6044921875, 1.2109375, 2.630859375, 1.8388671875, 0.5517578125, 0.5888671875, 0.96728515625, 1.28515625, 0.78955078125, 0.69189453125, 0.001819610595703125, 1.23828125, 0.305419921875, 0.90771484375, 1.4853515625, 0.324462890625, 0.134765625, 0.0270538330078125, 0.1668701171875, 1.32421875, 0.156982421875, 0.08709716796875, 0.036163330078125, 0.0011758804321289062, 0.7734375, 0.372802734375, 0.58740234375, 0.289306640625, 0.947265625, 0.025177001953125, 0.0007748603820800781, 0.00130462646484375, 0.274658203125, 0.15625, 0.060882568359375, 1.125, 0.8701171875], "tokens": [284, 320, 2218, 308, 12764, 293, 334, 320, 719, 1022, 664, 319, 399, 4281, 5644, 43606, 688, 883, 526, 1654, 372, 2290, 322, 5644, 664, 319, 432, 312, 667, 32, 664, 569, 334, 945, 907, 443, 7155, 3373, 15882, 301, 284, 945, 1158, 7400, 8115, 8980, 45, 284, 945, 1158, 16429, 3406]}
{"line_number": 1015, "line_type": "original", "code": "", "entropy": 0.197021484375, "is_bug_line": false, "sus_score": 0.5798641443252563, "per_token_entropy": [0.197021484375], "tokens": [203]}
{"line_number": 1015, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5798641443252563, "per_token_entropy": [], "tokens": []}
{"line_number": 419, "line_type": "original", "code": "      boolean changeCallSignature = canChangeSignature(function);", "entropy": 2.4375, "is_bug_line": false, "sus_score": 0.5784797072410583, "per_token_entropy": [4.66796875, 2.9765625, 3.576171875, 0.91455078125, 0.845703125, 0.050750732421875, 3.4375, 0.00937652587890625, 0.0014429092407226562, 8.9375, 3.595703125, 0.243408203125], "tokens": [647, 1905, 1539, 1853, 7785, 280, 883, 1791, 7785, 26, 1126, 293]}
{"line_number": 419, "line_type": "generated", "code": "\n          if (modifyAllCallSites) {\n            toRemove.add(param);\n          } else {\n            toReplaceWithZero.add(param);\n          }\n        }\n      }\n      return param!= null;\n    }\n\n    /**\n     * Determines if the", "entropy": 0.17529296875, "is_bug_line": false, "sus_score": 0.5784797072410583, "per_token_entropy": [0.1815185546875, 0.40771484375, 0.0770263671875, 0.089599609375, 0.00913238525390625, 9.40561294555664e-05, 0.0003311634063720703, 0.12890625, 0.0010976791381835938, 0.03857421875, 0.873046875, 0.00862884521484375, 0.0006084442138671875, 0.033416748046875, 0.0008645057678222656, 0.00928497314453125, 0.08428955078125, 0.50830078125, 0.0013866424560546875, 0.061279296875, 0.129150390625, 0.06146240234375, 0.7216796875, 0.0011053085327148438, 7.033348083496094e-05, 0.00010955333709716797, 0.0006031990051269531, 0.001316070556640625, 0.00038623809814453125, 0.005340576171875, 0.0111236572265625, 0.04022216796875, 0.00022268295288085938, 0.68603515625, 0.0008130073547363281, 1.0126953125, 0.0017147064208984375, 0.381591796875, 0.0059356689453125, 0.07257080078125, 0.10040283203125, 0.00016498565673828125, 0.0034885406494140625, 0.00803375244140625, 0.0005440711975097656, 0.276123046875, 0.250732421875, 0.024932861328125, 0.00020360946655273438, 0.9765625, 0.60791015625, 1.2177734375], "tokens": [616, 415, 308, 15193, 1934, 1853, 28351, 27, 301, 324, 372, 4913, 32, 669, 26, 753, 293, 616, 320, 813, 301, 324, 372, 9388, 1554, 8039, 32, 669, 26, 753, 293, 616, 320, 291, 320, 397, 320, 397, 442, 4356, 863, 744, 45, 284, 320, 446, 1022, 275, 319, 34450, 415, 322]}
