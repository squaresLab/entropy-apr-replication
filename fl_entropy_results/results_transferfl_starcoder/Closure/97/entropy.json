{"line_number": 1377, "line_type": "original", "code": "", "entropy": 0.226806640625, "is_bug_line": false, "sus_score": 0.6456442475318909, "per_token_entropy": [0.226806640625], "tokens": [203]}
{"line_number": 1377, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6456442475318909, "per_token_entropy": [], "tokens": []}
{"line_number": 1375, "line_type": "original", "code": "", "entropy": 0.226806640625, "is_bug_line": false, "sus_score": 0.642719030380249, "per_token_entropy": [0.226806640625], "tokens": [203]}
{"line_number": 1375, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.642719030380249, "per_token_entropy": [], "tokens": []}
{"line_number": 1376, "line_type": "original", "code": "", "entropy": 0.226806640625, "is_bug_line": false, "sus_score": 0.6278539896011353, "per_token_entropy": [0.226806640625], "tokens": [203]}
{"line_number": 1376, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6278539896011353, "per_token_entropy": [], "tokens": []}
{"line_number": 985, "line_type": "original", "code": "      } else {", "entropy": 4.8125, "is_bug_line": false, "sus_score": 0.5797668099403381, "per_token_entropy": [4.56640625, 9.265625, 4.08984375, 1.3349609375], "tokens": [647, 320, 813, 301]}
{"line_number": 985, "line_type": "generated", "code": "\n      Node next = elem.getNext();\n      if (next!= null && NodeUtil.isString(elem) &&\n          NodeUtil.isString(next)) {\n        NodeUtil.fuseStringNodes(elem, next);\n        if (sb == null) {", "entropy": 0.328369140625, "is_bug_line": false, "sus_score": 0.5797668099403381, "per_token_entropy": [0.051239013671875, 1.0400390625, 0.998046875, 0.0535888671875, 0.01294708251953125, 0.0020389556884765625, 0.0005521774291992188, 0.0010747909545898438, 0.1556396484375, 0.30712890625, 0.2763671875, 1.7041015625, 0.1998291015625, 0.00017595291137695312, 0.177978515625, 1.197265625, 0.0031986236572265625, 6.401538848876953e-05, 0.068359375, 0.367919921875, 0.09747314453125, 0.064697265625, 0.051727294921875, 0.76171875, 0.0188751220703125, 4.57763671875e-05, 1.8477439880371094e-05, 0.0181427001953125, 0.0004038810729980469, 0.01348876953125, 0.1170654296875, 0.0008692741394042969, 0.04058837890625, 2.251953125, 1.4462890625, 0.0023708343505859375, 1.7763671875, 0.1416015625, 0.438720703125, 0.016998291015625, 0.03826904296875, 0.01873779296875, 0.0199432373046875, 0.05657958984375, 0.30859375, 2.388671875, 0.034027099609375, 0.28857421875, 0.043182373046875, 9.250640869140625e-05, 0.0020885467529296875, 0.0008182525634765625], "tokens": [397, 4004, 2354, 280, 10313, 32, 23017, 473, 397, 415, 308, 1978, 863, 744, 962, 4004, 1733, 32, 35690, 26, 7613, 27, 962, 616, 4004, 1733, 32, 35690, 26, 1978, 490, 301, 291, 4004, 1733, 32, 30619, 652, 5909, 26, 7613, 30, 2354, 293, 291, 415, 308, 5682, 610, 744, 27, 301]}
{"line_number": 862, "line_type": "original", "code": "          if (undefinedLeft) {", "entropy": 2.02734375, "is_bug_line": false, "sus_score": 0.5790578722953796, "per_token_entropy": [6.3984375, 4.3515625, 0.169677734375, 2.12109375, 0.86767578125, 0.2548828125, 0.028228759765625], "tokens": [2033, 415, 308, 6376, 3679, 27, 301]}
{"line_number": 862, "line_type": "generated", "code": "\n        default:\n          return n;\n        }\n\n        if (result) {\n          n.parent.replaceChild(n, left.cloneTree());\n        }\n        return n;\n      }\n    }", "entropy": 0.5908203125, "is_bug_line": false, "sus_score": 0.5790578722953796, "per_token_entropy": [1.408203125, 1.6640625, 0.001983642578125, 0.1346435546875, 0.2685546875, 0.0213165283203125, 0.0018339157104492188, 1.84765625, 0.119384765625, 0.966796875, 0.83935546875, 0.260986328125, 0.41259765625, 0.1075439453125, 0.01096343994140625, 0.066650390625, 1.3564453125, 0.397705078125, 2.8203125, 0.82470703125, 0.66064453125, 0.1158447265625, 0.006198883056640625, 0.051422119140625, 0.0111083984375, 1.46484375, 1.66796875, 1.9169921875, 0.039215087890625, 0.007404327392578125, 0.35888671875, 0.0006008148193359375, 1.6015625, 0.60693359375, 0.31884765625, 0.2060546875, 0.200927734375, 0.03643798828125, 0.650390625, 0.173583984375], "tokens": [291, 1244, 44, 616, 442, 310, 45, 291, 320, 584, 415, 308, 1267, 27, 301, 616, 310, 32, 2544, 32, 3227, 2931, 26, 96, 30, 2841, 32, 6358, 3350, 1035, 291, 320, 291, 442, 310, 45, 397, 320, 284, 320]}
{"line_number": 984, "line_type": "original", "code": "        return n;", "entropy": 2.486328125, "is_bug_line": false, "sus_score": 0.5772461295127869, "per_token_entropy": [5.06640625, 4.6015625, 0.2646484375, 0.0096588134765625], "tokens": [351, 442, 310, 45]}
{"line_number": 984, "line_type": "generated", "code": "\n    while (elem!= null) {\n      if (NodeUtil.isString(elem)) {\n        if (sb == null) {\n          sb = new StringBuilder();\n        }\n        sb.append(NodeUtil.getStringValue(elem));\n      } else if", "entropy": 0.140625, "is_bug_line": false, "sus_score": 0.5772461295127869, "per_token_entropy": [0.3818359375, 0.301025390625, 0.0169830322265625, 0.0289764404296875, 0.0025501251220703125, 0.0007433891296386719, 0.0088348388671875, 0.01329803466796875, 0.03009033203125, 0.55517578125, 0.1431884765625, 0.89306640625, 0.0024261474609375, 3.0994415283203125e-05, 0.09039306640625, 0.2288818359375, 0.00138092041015625, 0.1953125, 0.00046181678771972656, 0.0533447265625, 0.59130859375, 0.0196685791015625, 0.1148681640625, 0.009918212890625, 9.119510650634766e-05, 0.002197265625, 0.0013132095336914062, 0.0198516845703125, 0.031829833984375, 0.00010991096496582031, 0.004749298095703125, 0.0008616447448730469, 0.190185546875, 0.07513427734375, 0.00017547607421875, 0.182861328125, 0.2470703125, 0.0002148151397705078, 0.00033092498779296875, 0.004711151123046875, 0.50439453125, 0.01212310791015625, 0.00010025501251220703, 0.0985107421875, 0.001926422119140625, 0.0011301040649414062, 0.0012502670288085938, 0.0069732666015625, 0.62890625, 0.0012235641479492188, 0.0106658935546875, 1.6015625], "tokens": [284, 2218, 308, 7613, 863, 744, 27, 301, 397, 415, 308, 1212, 1733, 32, 35690, 26, 7613, 490, 301, 291, 415, 308, 5682, 610, 744, 27, 301, 616, 6115, 280, 537, 9706, 473, 291, 320, 291, 6115, 32, 1689, 26, 1212, 1733, 32, 7069, 882, 26, 7613, 876, 397, 320, 813, 415]}
{"line_number": 986, "line_type": "original", "code": "        fromIndex = (int) secondArg.getDouble();", "entropy": 2.4453125, "is_bug_line": false, "sus_score": 0.576642632484436, "per_token_entropy": [4.6015625, 10.2421875, 1.125, 0.049346923828125, 3.65625, 4.671875, 0.08636474609375, 4.70703125, 0.09185791015625, 0.064697265625, 0.00417327880859375, 0.039825439453125], "tokens": [351, 645, 1284, 280, 308, 410, 27, 3100, 1765, 32, 37792, 473]}
{"line_number": 986, "line_type": "generated", "code": "\n      } else {\n        arrayFoldedChildren.add(elem);\n        foldedSize += elem.getString().length();\n      }\n      prev = elem;\n      elem = elem.getNext();\n    }\n    if (joinString == null) {\n     ", "entropy": 0.1607666015625, "is_bug_line": false, "sus_score": 0.576642632484436, "per_token_entropy": [0.45263671875, 0.00501251220703125, 0.86669921875, 0.36328125, 0.0361328125, 1.3974609375, 0.0007581710815429688, 1.1920928955078125e-07, -0.0, 5.328655242919922e-05, 0.00023412704467773438, 0.00460052490234375, 0.0006914138793945312, 0.0267333984375, 0.01468658447265625, 0.568359375, 0.2113037109375, -0.0, 5.4955482482910156e-05, 0.06805419921875, 0.52587890625, 0.00029587745666503906, 0.291015625, 0.0195465087890625, 0.0011835098266601562, 0.005359649658203125, 0.265869140625, 7.200241088867188e-05, 0.05853271484375, 0.11419677734375, 0.00021469593048095703, 0.001087188720703125, 0.0007300376892089844, 0.0014629364013671875, 0.0030384063720703125, 0.00024580955505371094, 0.00843048095703125, 0.0002391338348388672, 0.00018846988677978516, 0.0004658699035644531, 0.02117919921875, 0.0003509521484375, 0.465087890625, 0.75146484375, 0.07525634765625, 1.091796875, 2.1576881408691406e-05, 0.460205078125, 0.007171630859375, 0.13818359375, 0.001857757568359375, 0.035125732421875], "tokens": [397, 320, 813, 301, 291, 1417, 56, 362, 981, 7640, 32, 669, 26, 7613, 293, 291, 14801, 981, 1250, 1454, 10313, 32, 7069, 922, 1322, 473, 397, 320, 397, 7323, 280, 10313, 45, 397, 10313, 280, 10313, 32, 23017, 473, 284, 320, 284, 415, 308, 2524, 652, 610, 744, 27, 301, 397]}
{"line_number": 809, "line_type": "original", "code": "", "entropy": 3.123046875, "is_bug_line": false, "sus_score": 0.5763751864433289, "per_token_entropy": [3.123046875], "tokens": [203]}
{"line_number": 809, "line_type": "generated", "code": "\n      default:\n        return n;\n    }\n\n    return result? n.getParent() : n;\n  }\n\n  /**\n   * Returns a string representation of the given node.  This is not the\n   * same as {@link #toString} in that it", "entropy": 0.7041015625, "is_bug_line": false, "sus_score": 0.5763751864433289, "per_token_entropy": [0.4384765625, 0.78076171875, 0.0020008087158203125, 0.0679931640625, 0.45556640625, 0.01611328125, 0.0012416839599609375, 0.47802734375, 0.0013179779052734375, 0.386474609375, 1.1005859375, 0.76806640625, 0.2457275390625, 1.7294921875, 0.420166015625, 1.37890625, 0.382568359375, 0.0041351318359375, 0.143798828125, 0.75927734375, 0.09375, 0.003604888916015625, 1.23828125, 1.291015625, 0.1212158203125, 0.0008187294006347656, 2.771484375, 1.751953125, 1.7578125, 0.51220703125, 0.01314544677734375, 0.37548828125, 0.7900390625, 0.7783203125, 0.357421875, 1.326171875, 1.1279296875, 0.405517578125, 1.630859375, 1.5087890625, 0.4072265625, 0.00107574462890625, 1.5224609375, 0.0222930908203125, 1.3740234375, 0.0927734375, 1.6708984375, 0.57080078125, 0.97705078125, 1.8681640625, 0.2086181640625, 0.477783203125], "tokens": [397, 1244, 44, 291, 442, 310, 45, 284, 320, 446, 442, 1056, 1018, 310, 32, 18789, 346, 499, 310, 45, 334, 320, 719, 1022, 664, 319, 3759, 312, 802, 10293, 432, 322, 2702, 1541, 32, 225, 1348, 438, 646, 322, 664, 319, 2432, 619, 3088, 1204, 588, 3108, 111, 328, 688, 561]}
{"line_number": 924, "line_type": "original", "code": "", "entropy": 3.03125, "is_bug_line": false, "sus_score": 0.5754550695419312, "per_token_entropy": [3.03125], "tokens": [203]}
{"line_number": 924, "line_type": "generated", "code": "\n    if (secondArg!= null) {\n      if (!NodeUtil.isImmutableValue(secondArg)) {\n        return n;\n      }\n      if (secondArg.getType()!= Token.NUMBER) {\n        return n;\n      }\n      double second", "entropy": 0.2176513671875, "is_bug_line": false, "sus_score": 0.5754550695419312, "per_token_entropy": [0.311279296875, 0.5166015625, 0.2978515625, 0.267822265625, 3.0994415283203125e-06, 0.39990234375, 0.0008721351623535156, 0.6484375, 0.0018873214721679688, 0.050689697265625, 0.619140625, 0.833984375, 0.1683349609375, 0.00018143653869628906, 1.0967254638671875e-05, 0.226318359375, 0.484130859375, 0.002349853515625, 0.0001766681671142578, 0.0582275390625, 1.430511474609375e-06, 0.08990478515625, 0.0009188652038574219, 0.00846099853515625, 0.039398193359375, 0.002838134765625, 0.00015032291412353516, 0.042633056640625, 5.4836273193359375e-05, 0.90576171875, 1.5439453125, 0.50048828125, 0.8193359375, 4.76837158203125e-07, 0.0019931793212890625, 0.05474853515625, 0.0019140243530273438, 0.25927734375, 0.0008826255798339844, 1.5974044799804688e-05, 0.004566192626953125, 0.090576171875, 0.0008463859558105469, 0.006443023681640625, 0.052520751953125, 0.0017299652099609375, 0.0002079010009765625, 0.058319091796875, 0.00017249584197998047, 0.286865234375, 1.04296875, 0.61181640625], "tokens": [284, 415, 308, 3090, 1765, 863, 744, 27, 301, 397, 415, 1429, 1212, 1733, 32, 297, 15027, 882, 26, 3090, 1765, 490, 301, 291, 442, 310, 45, 397, 320, 397, 415, 308, 3090, 1765, 32, 10272, 346, 863, 6512, 32, 10463, 27, 301, 291, 442, 310, 45, 397, 320, 397, 2064, 3100]}
{"line_number": 1032, "line_type": "original", "code": "    Node elem = arrayNode.getFirstChild();", "entropy": 1.880859375, "is_bug_line": false, "sus_score": 0.5746099352836609, "per_token_entropy": [5.20703125, 2.662109375, 6.859375, 0.3203125, 2.01953125, 1.552734375, 0.0221710205078125, 0.1495361328125, 0.003574371337890625, 0.0228729248046875], "tokens": [264, 4004, 10313, 280, 1417, 1212, 32, 25657, 2931, 473]}
{"line_number": 1032, "line_type": "generated", "code": "\n          return n;\n        }\n        n.getParent().replaceChild(n, foldedStringNode);\n        reportCodeChange();\n        return foldedStringNode;\n      default:\n        if (foldedSize > originalSize) {\n          return n;\n       ", "entropy": 0.11297607421875, "is_bug_line": false, "sus_score": 0.5746099352836609, "per_token_entropy": [0.389404296875, 1.046875, 0.02099609375, 0.0009446144104003906, 0.1046142578125, 0.0004477500915527344, 0.2034912109375, 1.724609375, 0.004589080810546875, 0.03857421875, 0.00014030933380126953, 0.0013790130615234375, 7.76052474975586e-05, 0.00018095970153808594, 0.03118896484375, 0.0003998279571533203, 0.0269622802734375, 2.384185791015625e-07, 0.0002377033233642578, 9.679794311523438e-05, 0.09637451171875, 0.046173095703125, 0.079833984375, 0.0004258155822753906, 3.170967102050781e-05, 0.0009479522705078125, 0.021331787109375, 0.0126953125, 0.004573822021484375, 1.1920928955078125e-07, 0.00015866756439208984, 1.4781951904296875e-05, 0.00431060791015625, 0.4775390625, 0.0435791015625, 0.00206756591796875, 0.136474609375, 0.95703125, 0.0222320556640625, 0.1318359375, 5.960464477539062e-07, 0.0006422996520996094, 0.17041015625, 0.01212310791015625, 1.2874603271484375e-05, 0.0184173583984375, 0.000614166259765625, 0.0237579345703125, 0.01247406005859375, 0.0007491111755371094, 2.9921531677246094e-05, 0.004276275634765625], "tokens": [616, 442, 310, 45, 291, 320, 291, 310, 32, 18789, 922, 3227, 2931, 26, 96, 30, 14801, 981, 652, 1212, 293, 291, 3639, 1227, 1791, 473, 291, 442, 14801, 981, 652, 1212, 45, 397, 1244, 44, 291, 415, 308, 8025, 981, 1250, 848, 4707, 1250, 27, 301, 616, 442, 310, 45, 291]}
{"line_number": 937, "line_type": "original", "code": "  /**", "entropy": 5.453125, "is_bug_line": false, "sus_score": 0.5745835900306702, "per_token_entropy": [4.91796875, 5.9921875], "tokens": [225, 1022]}
{"line_number": 937, "line_type": "generated", "code": "\n        // If the index is negative, or greater than the string length,\n        // the result is always -1.\n        if (fromIndex < 0 || fromIndex > lstring.length()) {\n          return NodeUtil.newStringNode(-1", "entropy": 0.411376953125, "is_bug_line": false, "sus_score": 0.5745835900306702, "per_token_entropy": [0.52001953125, 0.80126953125, 2.0859375, 1.111328125, 1.54296875, 0.2303466796875, 0.85009765625, 0.1695556640625, 2.75, 1.318359375, 0.09344482421875, 0.197998046875, 0.76806640625, 0.38671875, 0.1461181640625, 0.62451171875, 0.001544952392578125, 1.4140625, 0.28515625, 0.1983642578125, 0.212646484375, 0.195068359375, 0.0004944801330566406, 0.282958984375, 0.129638671875, 0.0655517578125, 0.1761474609375, 0.0325927734375, 5.602836608886719e-06, 0.0867919921875, 0.0017223358154296875, 2.8967857360839844e-05, 0.1588134765625, 0.0311737060546875, 3.528594970703125e-05, 0.2266845703125, 0.0030231475830078125, 1.537799835205078e-05, 0.0004248619079589844, 0.00014889240264892578, 0.0068817138671875, 0.004177093505859375, 0.0304107666015625, 0.662109375, 1.6279296875, 1.1005859375, 0.0009112358093261719, 0.0157012939453125, 0.251708984375, 0.33056640625, 0.254638671875, 0.00025653839111328125], "tokens": [291, 434, 1670, 322, 1650, 438, 11003, 30, 556, 10761, 2784, 322, 802, 3104, 30, 291, 434, 322, 1056, 438, 5182, 429, 35, 32, 291, 415, 308, 1070, 1284, 333, 225, 34, 1276, 645, 1284, 848, 456, 800, 32, 1322, 1157, 301, 616, 442, 4004, 1733, 32, 890, 652, 1212, 3736, 35]}
{"line_number": 979, "line_type": "original", "code": "    int fromIndex = isIndexOf ? 0 : lstring.length();", "entropy": 1.6513671875, "is_bug_line": false, "sus_score": 0.5735064148902893, "per_token_entropy": [3.556640625, 3.787109375, 5.6328125, 0.1005859375, 0.0203399658203125, 7.7734375, 0.0645751953125, 0.0050506591796875, 3.14453125, 0.055938720703125, 0.0305328369140625, 1.1943359375, 0.007648468017578125, 0.0026912689208984375, 0.7529296875, 0.288818359375], "tokens": [264, 629, 645, 1284, 280, 438, 15836, 1018, 225, 34, 499, 456, 800, 32, 1322, 473]}
{"line_number": 979, "line_type": "generated", "code": "\n    for (Node arrayChild : arrayNode.children()) {\n      if (arrayChild.getType() == Token.STRING) {\n        arrayFoldedChildren.add(Node.newString(arrayChild.getString() + joinString));\n      }", "entropy": 0.1685791015625, "is_bug_line": false, "sus_score": 0.5735064148902893, "per_token_entropy": [0.07171630859375, 0.174560546875, 0.0041961669921875, 0.0162353515625, 1.322265625, 0.06793212890625, 0.267822265625, 0.16796875, 0.006900787353515625, 0.0076141357421875, 0.05743408203125, 0.0292816162109375, 0.0024433135986328125, 0.021392822265625, 0.705078125, 0.1414794921875, 0.2529296875, 0.0015659332275390625, 0.0238800048828125, 0.2484130859375, 0.0009284019470214844, 0.339599609375, 0.0010547637939453125, 2.8967857360839844e-05, 0.181396484375, 0.04632568359375, 0.00048041343688964844, 0.00823211669921875, 0.50439453125, 0.031524658203125, 2.384185791015625e-07, -0.0, 0.0007414817810058594, 0.0011920928955078125, 0.01384735107421875, 0.0015420913696289062, 1.1357421875, 0.055419921875, 0.0009918212890625, 0.0006155967712402344, 0.00603485107421875, 1.8876953125, 0.0006575584411621094, 0.004817962646484375, 0.00325775146484375, 0.19677734375, 0.2066650390625, 0.4658203125, 2.944469451904297e-05, 0.0082244873046875, 0.06732177734375, 0.0003581047058105469], "tokens": [284, 436, 308, 1212, 1417, 2931, 499, 1417, 1212, 32, 4915, 1157, 301, 397, 415, 308, 955, 2931, 32, 10272, 346, 610, 6512, 32, 5203, 27, 301, 291, 1417, 56, 362, 981, 7640, 32, 669, 26, 1212, 32, 890, 652, 26, 955, 2931, 32, 7069, 346, 474, 7140, 652, 876, 397, 320]}
{"line_number": 925, "line_type": "original", "code": "  private Node tryFoldKnownMethods(Node subtree) {", "entropy": 2.5078125, "is_bug_line": false, "sus_score": 0.5733182430267334, "per_token_entropy": [4.25390625, 8.8828125, 0.82861328125, 0.22412109375, 0.01166534423828125, 10.5234375, 3.912109375, 0.11004638671875, 0.06475830078125, 1.20703125, 0.053253173828125, 0.02276611328125], "tokens": [225, 945, 4004, 1596, 15483, 19279, 8891, 26, 1212, 37255, 27, 301]}
{"line_number": 925, "line_type": "generated", "code": "\n    if (searchValue == null ||\n        (secondArg!= null &&!NodeUtil.isImmutableValue(secondArg))) {\n      return n;\n    }\n\n    int start = isIndexOf? 0 : lstring.length();\n    int index =", "entropy": 0.27783203125, "is_bug_line": false, "sus_score": 0.5733182430267334, "per_token_entropy": [0.439208984375, 0.62255859375, 0.3232421875, 0.83203125, 7.081031799316406e-05, 0.11944580078125, 0.0005164146423339844, 0.97705078125, 1.2197265625, 0.463134765625, 0.205810546875, 2.384185791015625e-06, 0.007312774658203125, 0.0005049705505371094, 0.0224761962890625, 0.52978515625, 0.045928955078125, 0.00024819374084472656, 1.430511474609375e-05, 0.25390625, 0.37353515625, 0.0027065277099609375, 5.257129669189453e-05, 0.00455474853515625, 2.86102294921875e-06, 0.0574951171875, 0.0012874603271484375, 0.026336669921875, 0.040283203125, 0.003021240234375, 0.00021028518676757812, 0.0239410400390625, 0.00025725364685058594, 0.318603515625, 0.53564453125, 1.990234375, 0.65869140625, 1.5087890625, 1.895427703857422e-05, 0.0190887451171875, 0.0109100341796875, 0.00010228157043457031, 0.002971649169921875, 0.1837158203125, 2.5391578674316406e-05, 0.0012493133544921875, 0.01080322265625, 0.28369140625, 0.324462890625, 0.3837890625, 1.45703125, 0.1680908203125], "tokens": [284, 415, 308, 1903, 882, 610, 744, 1276, 291, 308, 3090, 1765, 863, 744, 962, 653, 1212, 1733, 32, 297, 15027, 882, 26, 3090, 1765, 2610, 301, 397, 442, 310, 45, 284, 320, 446, 629, 1477, 280, 438, 15836, 1018, 225, 34, 499, 456, 800, 32, 1322, 473, 284, 629, 1650, 280]}
{"line_number": 857, "line_type": "original", "code": "        break;", "entropy": 2.181640625, "is_bug_line": false, "sus_score": 0.5730085372924805, "per_token_entropy": [5.390625, 1.15234375, 0.00495147705078125], "tokens": [351, 1626, 45]}
{"line_number": 857, "line_type": "generated", "code": "\n\n          default:\n            return n;  // don't handle that op\n        }", "entropy": 0.30615234375, "is_bug_line": false, "sus_score": 0.5730085372924805, "per_token_entropy": [2.1640625, 1.2998046875, 0.0011196136474609375, 0.0794677734375, 0.125732421875, 0.003993988037109375, 0.0012273788452148438, 0.4462890625, 0.00010132789611816406, 0.5341796875, 0.000255584716796875, 0.031280517578125, 0.084716796875, 0.0372314453125, 0.08819580078125, 0.0006771087646484375], "tokens": [5678, 1244, 44, 324, 442, 310, 45, 225, 434, 2800, 1330, 2887, 688, 3089, 291, 320]}
{"line_number": 980, "line_type": "original", "code": "    if (secondArg != null) {", "entropy": 2.177734375, "is_bug_line": false, "sus_score": 0.5725166201591492, "per_token_entropy": [5.2265625, 1.9619140625, 0.07122802734375, 9.4140625, 0.0869140625, 2.546875, 0.0048980712890625, 0.26708984375, 0.01690673828125], "tokens": [264, 415, 308, 3090, 1765, 863, 744, 27, 301]}
{"line_number": 980, "line_type": "generated", "code": "\n      for (Node c = arrayNode.getFirstChild(); c!= null; c = c.getNext()) {\n        String s = NodeUtil.getStringValue(c);\n        if (s!= null) {\n          if (sb == null) {\n           ", "entropy": 0.1519775390625, "is_bug_line": false, "sus_score": 0.5725166201591492, "per_token_entropy": [0.320556640625, 0.484130859375, 0.00464630126953125, 0.00860595703125, 1.9443359375, 0.418212890625, 0.0240325927734375, 0.0003814697265625, 0.01381683349609375, 0.005863189697265625, 0.000659942626953125, 0.015167236328125, 0.053375244140625, 0.0024871826171875, 0.00022363662719726562, 0.009063720703125, 0.027374267578125, 0.00225830078125, 0.0005917549133300781, 0.0001850128173828125, 1.7642974853515625e-05, 0.0019083023071289062, 0.0020885467529296875, 0.0242919921875, 1.255859375, 1.8662109375, 0.05548095703125, 0.1414794921875, 0.0010528564453125, 2.9087066650390625e-05, 0.069580078125, 0.00011706352233886719, 0.0006299018859863281, 0.004543304443359375, 0.007602691650390625, 0.1597900390625, 0.0714111328125, 0.02734375, 0.0858154296875, 0.50634765625, 7.05718994140625e-05, 0.02447509765625, 0.0006322860717773438, 0.021087646484375, 0.07861328125, 0.0166015625, 0.083984375, 0.026885986328125, 8.165836334228516e-05, 0.004238128662109375, 0.002277374267578125, 0.0251617431640625], "tokens": [397, 436, 308, 1212, 281, 280, 1417, 1212, 32, 25657, 2931, 473, 281, 863, 744, 45, 281, 280, 281, 32, 23017, 1157, 301, 291, 892, 309, 280, 4004, 1733, 32, 7069, 882, 26, 85, 293, 291, 415, 308, 101, 863, 744, 27, 301, 616, 415, 308, 5682, 610, 744, 27, 301, 324]}
{"line_number": 1033, "line_type": "original", "code": "    // Merges adjacent String nodes.", "entropy": 3.9609375, "is_bug_line": false, "sus_score": 0.5720652341842651, "per_token_entropy": [5.5625, 0.640625, 14.8046875, 3.767578125, 1.53125, 2.953125, 1.541015625, 0.8916015625], "tokens": [264, 434, 13908, 101, 31701, 892, 5166, 32]}
{"line_number": 1033, "line_type": "generated", "code": "\n          Node newStringNode = Node.newString(\n              NodeUtil.getStringValue(foldedStringNode));\n          foldedStringNode.getParent().replaceChild(foldedStringNode, newStringNode);\n          foldedStringNode = newStringNode", "entropy": 0.2081298828125, "is_bug_line": false, "sus_score": 0.5720652341842651, "per_token_entropy": [0.32080078125, 2.078125, 1.353515625, 0.86328125, 0.257568359375, 0.01140594482421875, 0.30859375, 0.09503173828125, 0.00017893314361572266, 0.0009126663208007812, 0.295654296875, 0.51708984375, 0.64453125, 0.0078277587890625, 0.0006403923034667969, 0.09832763671875, 0.001522064208984375, 0.0013427734375, 0.006816864013671875, -0.0, 0.0005273818969726562, 3.421306610107422e-05, 0.05291748046875, 0.119384765625, 0.83447265625, 3.5762786865234375e-06, 0.003307342529296875, 4.756450653076172e-05, 0.12384033203125, 0.089599609375, 0.0022029876708984375, 0.003963470458984375, 5.7697296142578125e-05, 0.00010371208190917969, 0.179931640625, 2.384185791015625e-07, 6.61611557006836e-05, 6.079673767089844e-06, 0.00010037422180175781, 1.7724609375, 0.00010800361633300781, 0.0001842975616455078, 0.00027060508728027344, 0.24560546875, 0.50634765625, 1.3113021850585938e-06, 0.0018281936645507812, 5.519390106201172e-05, 0.01861572265625, 0.0037212371826171875, 0.00011229515075683594, 5.841255187988281e-06], "tokens": [616, 4004, 537, 652, 1212, 280, 4004, 32, 890, 652, 26, 1090, 4004, 1733, 32, 7069, 882, 26, 8025, 981, 652, 1212, 876, 616, 14801, 981, 652, 1212, 32, 18789, 922, 3227, 2931, 26, 8025, 981, 652, 1212, 30, 537, 652, 1212, 293, 616, 14801, 981, 652, 1212, 280, 537, 652, 1212]}
{"line_number": 975, "line_type": "original", "code": "    // searchValue must be a valid string.", "entropy": 2.900390625, "is_bug_line": false, "sus_score": 0.5709316730499268, "per_token_entropy": [4.72265625, 3.55859375, 8.6875, 0.61376953125, 4.23828125, 0.1446533203125, 0.66796875, 4.484375, 0.416259765625, 1.458984375], "tokens": [264, 434, 3233, 882, 2298, 526, 312, 2080, 802, 32]}
{"line_number": 975, "line_type": "generated", "code": "\n    }\n\n    String joinedString = \"\";\n    for (Node child : arrayNode.children()) {\n      if (child.getType()!= Token.STRING) {\n        return n;\n      }\n      joinedString += child.getString();\n    }\n\n    Node newNode", "entropy": 0.2135009765625, "is_bug_line": false, "sus_score": 0.5709316730499268, "per_token_entropy": [0.06671142578125, 0.0270538330078125, 0.22705078125, 0.796875, 1.6884765625, 1.146484375, 0.015838623046875, 0.9345703125, 0.2705078125, 0.490478515625, 0.00428009033203125, 0.0233612060546875, 1.1416015625, 0.5361328125, 0.077392578125, 0.0003237724304199219, 0.0073394775390625, 0.046844482421875, 0.00904083251953125, 0.0012969970703125, 0.0228424072265625, 0.70849609375, 0.154052734375, 0.181884765625, 0.020538330078125, 0.1298828125, 0.0006804466247558594, 0.6181640625, 0.0007529258728027344, 1.1920928955078125e-05, 0.00016415119171142578, 0.006855010986328125, 0.00313568115234375, 0.01445770263671875, 0.26318359375, 0.00922393798828125, 0.00036835670471191406, 0.052459716796875, 0.0007162094116210938, 0.304931640625, 0.045166015625, 2.4437904357910156e-05, 0.040252685546875, 0.2396240234375, 0.0002262592315673828, 0.007404327392578125, 0.019439697265625, 0.07061767578125, 0.0013093948364257812, 0.447021484375, 0.1854248046875, 0.039764404296875], "tokens": [284, 320, 446, 892, 27033, 652, 280, 5121, 284, 436, 308, 1212, 2838, 499, 1417, 1212, 32, 4915, 1157, 301, 397, 415, 308, 2661, 32, 10272, 346, 863, 6512, 32, 5203, 27, 301, 291, 442, 310, 45, 397, 320, 397, 27033, 652, 1454, 2838, 32, 7069, 473, 284, 320, 446, 4004, 33202]}
{"line_number": 981, "line_type": "original", "code": "      // Third-argument and non-numeric second arg are problematic. Discard.", "entropy": 3.662109375, "is_bug_line": false, "sus_score": 0.570783257484436, "per_token_entropy": [7.1640625, 2.205078125, 8.4375, 4.33203125, 4.53515625, 5.73828125, 3.662109375, 0.0258636474609375, 2.974609375, 1.384765625, 2.267578125, 1.451171875, 6.546875, 0.438720703125, 8.859375, 1.5478515625, 0.6943359375], "tokens": [647, 434, 38172, 31, 2669, 461, 2979, 31, 10125, 3100, 1638, 884, 42612, 32, 3645, 2294, 32]}
{"line_number": 981, "line_type": "generated", "code": "\n    for (Node child : arrayNode.children()) {\n      if (child.getType() == Token.STRING) {\n        String value = NodeUtil.getStringValue(child);\n        if (value == null) {\n          return n;\n        }\n       ", "entropy": 0.20068359375, "is_bug_line": false, "sus_score": 0.570783257484436, "per_token_entropy": [0.06903076171875, 0.2119140625, 0.0048980712890625, 0.011016845703125, 1.216796875, 0.268310546875, 0.1824951171875, 0.0013551712036132812, 0.007289886474609375, 0.060028076171875, 0.01309967041015625, 0.00921630859375, 0.033111572265625, 0.74609375, 0.166748046875, 1.0068359375, 0.0716552734375, 0.1771240234375, 0.0006418228149414062, 0.386962890625, 0.0007486343383789062, 2.6464462280273438e-05, 0.5791015625, 0.037353515625, 0.00026869773864746094, 0.0208892822265625, 0.64990234375, 1.6416015625, 0.0198822021484375, 0.70849609375, 0.0036220550537109375, 1.8596649169921875e-05, 0.021270751953125, 0.0005359649658203125, 0.0008311271667480469, 0.0014438629150390625, 0.007740020751953125, 0.0980224609375, 0.1507568359375, 0.031280517578125, 0.245849609375, 0.6279296875, 0.00043654441833496094, 0.00986480712890625, 0.00269317626953125, 0.0152435302734375, 0.544921875, 0.072509765625, 0.0001779794692993164, 0.0178375244140625, 0.00022459030151367188, 0.27783203125], "tokens": [284, 436, 308, 1212, 2838, 499, 1417, 1212, 32, 4915, 1157, 301, 397, 415, 308, 2661, 32, 10272, 346, 610, 6512, 32, 5203, 27, 301, 291, 892, 786, 280, 4004, 1733, 32, 7069, 882, 26, 2661, 293, 291, 415, 308, 853, 610, 744, 27, 301, 616, 442, 310, 45, 291, 320, 291]}
{"line_number": 332, "line_type": "original", "code": "    if (!right.hasChildren() ||", "entropy": 2.3203125, "is_bug_line": false, "sus_score": 0.5698797106742859, "per_token_entropy": [3.078125, 7.88671875, 3.603515625, 2.62109375, 0.043609619140625, 1.5107421875, 0.021209716796875, 1.169921875, 0.939453125], "tokens": [264, 415, 1429, 990, 32, 2040, 7640, 346, 1276]}
{"line_number": 332, "line_type": "generated", "code": "\n      default:\n        return n;\n    }", "entropy": 0.1673583984375, "is_bug_line": false, "sus_score": 0.5698797106742859, "per_token_entropy": [0.87451171875, 0.208251953125, 0.0015687942504882812, 0.0484619140625, 0.313232421875, 0.00986480712890625, 0.0003581047058105469, 0.0484619140625, 0.0015649795532226562], "tokens": [397, 1244, 44, 291, 442, 310, 45, 284, 320]}
{"line_number": 1076, "line_type": "original", "code": "        Node foldedStringNode = arrayFoldedChildren.remove(0);", "entropy": 1.9296875, "is_bug_line": false, "sus_score": 0.5698040723800659, "per_token_entropy": [6.41796875, 3.751953125, 5.61328125, 5.7816505432128906e-05, 1.828125, 0.10009765625, 0.058837890625, 6.23046875, 4.390625, 0.0008678436279296875, 0.0055999755859375, 1.763671875, 0.03436279296875, 2.140625, 0.10455322265625, 0.340576171875, 0.036712646484375], "tokens": [351, 4004, 14801, 981, 652, 1212, 280, 1417, 56, 362, 981, 7640, 32, 2546, 26, 34, 293]}
{"line_number": 1076, "line_type": "generated", "code": "\n      }\n\n      Node arrayNode = left;\n      double index = NodeUtil.getDoubleValue(right);\n      if (index == Math.floor(index)) {\n        if (index < 0) {\n          return n;\n        }\n\n        int i =", "entropy": 0.440185546875, "is_bug_line": false, "sus_score": 0.5698040723800659, "per_token_entropy": [0.05682373046875, 0.002536773681640625, 0.375244140625, 1.6591796875, 1.5703125, 0.53076171875, 0.00823211669921875, 0.0577392578125, 0.0189056396484375, 0.2481689453125, 1.6943359375, 0.294677734375, 0.2364501953125, 0.892578125, 0.00933074951171875, 5.602836608886719e-05, 0.0999755859375, 0.00272369384765625, 0.0015621185302734375, 0.00888824462890625, 0.03509521484375, 0.5166015625, 0.869140625, 0.167724609375, 0.1534423828125, 1.43359375, 0.94921875, 0.0003948211669921875, 0.275634765625, 0.00021457672119140625, 0.0005235671997070312, 0.4404296875, 0.0005860328674316406, 0.0704345703125, 2.09765625, 0.08380126953125, 0.26171875, 1.01171875, 0.09979248046875, 0.0015583038330078125, 0.2315673828125, 0.002651214599609375, 0.030364990234375, 0.79541015625, 0.114501953125, 0.0004992485046386719, 0.1773681640625, 0.00018918514251708984, 1.15625, 1.455078125, 2.65234375, 0.037353515625], "tokens": [397, 320, 1687, 4004, 1417, 1212, 280, 2841, 45, 397, 2064, 1650, 280, 4004, 1733, 32, 37792, 882, 26, 990, 293, 397, 415, 308, 1055, 610, 4175, 32, 9121, 26, 1055, 490, 301, 291, 415, 308, 1055, 333, 225, 34, 27, 301, 616, 442, 310, 45, 291, 320, 584, 629, 595, 280]}
{"line_number": 1075, "line_type": "original", "code": "      case 1:", "entropy": 3.671875, "is_bug_line": false, "sus_score": 0.5688435435295105, "per_token_entropy": [4.546875, 6.3046875, 6.11328125, 0.86865234375, 0.52197265625], "tokens": [647, 1135, 225, 35, 44]}
{"line_number": 1075, "line_type": "generated", "code": "\n        return n;\n      }\n\n      double index = NodeUtil.getDoubleValue(right);\n      if (index < 0) {\n        return n;\n      }\n\n      Node arrayNode = left;\n      int indexAsInt = (int) index;\n     ", "entropy": 0.32763671875, "is_bug_line": false, "sus_score": 0.5688435435295105, "per_token_entropy": [0.15771484375, 0.2392578125, 0.2127685546875, 0.0005555152893066406, 0.0234527587890625, 5.4001808166503906e-05, 0.33056640625, 1.625, 0.338623046875, 0.26513671875, 1.154296875, 0.006244659423828125, 5.316734313964844e-05, 0.1551513671875, 0.0033397674560546875, 0.0016088485717773438, 0.00717926025390625, 0.030029296875, 0.38330078125, 0.64892578125, 0.2021484375, 0.140625, 0.94873046875, 0.017303466796875, 0.00397491455078125, 0.35498046875, 0.00107574462890625, 0.045257568359375, 0.61279296875, 0.0621337890625, 0.00022411346435546875, 0.01053619384765625, 8.213520050048828e-05, 0.30029296875, 0.81201171875, 1.2587890625, 0.84814453125, 0.0107879638671875, 0.095947265625, 0.0230560302734375, 0.26611328125, 1.1416015625, 1.798828125, 1.923828125, 0.067626953125, 0.01141357421875, 0.10064697265625, 0.00463104248046875, 0.0016641616821289062, 0.120361328125, 0.0006866455078125, 0.256103515625], "tokens": [291, 442, 310, 45, 397, 320, 1687, 2064, 1650, 280, 4004, 1733, 32, 37792, 882, 26, 990, 293, 397, 415, 308, 1055, 333, 225, 34, 27, 301, 291, 442, 310, 45, 397, 320, 1687, 4004, 1417, 1212, 280, 2841, 45, 397, 629, 1650, 1465, 1428, 280, 308, 410, 27, 1650, 45, 397]}
