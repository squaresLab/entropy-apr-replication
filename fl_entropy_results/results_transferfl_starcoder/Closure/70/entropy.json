{"line_number": 1744, "line_type": "original", "code": "              defineSlot(astParameter, functionNode,", "entropy": 2.005859375, "is_bug_line": true, "sus_score": 0.7984318137168884, "per_token_entropy": [11.53125, 3.734375, 0.1953125, 0.072998046875, 3.314453125, 0.9140625, 0.054107666015625, 0.2088623046875, 0.01076507568359375, 0.0210723876953125], "tokens": [2850, 5597, 9490, 26, 633, 3012, 30, 667, 1212, 30]}
{"line_number": 1744, "line_type": "generated", "code": "\n  /**\n   * A class for traversing a JavaScript AST and finding all of the variables\n   * that are defined.\n   *\n   * @author <EMAIL> (<NAME>)\n   *\n   */\n  static class VarCollector extends AbstractShallowCallback {", "entropy": 0.7705078125, "is_bug_line": true, "sus_score": 0.7984318137168884, "per_token_entropy": [0.97412109375, 0.560546875, 0.65380859375, 0.0005373954772949219, 3.064453125, 2.708984375, 1.234375, 2.61328125, 0.001674652099609375, 0.0004241466522216797, 0.98388671875, 1.64453125, 0.5224609375, 0.8955078125, 1.55078125, 0.81103515625, 1.3583984375, 0.09368896484375, 2.369140625, 0.1820068359375, 0.0010051727294921875, 0.77392578125, 0.5, 1.1025390625, 2.1796875, 0.3271484375, 1.2021484375, 0.2095947265625, 0.04449462890625, 1.400390625, 0.58056640625, 0.01244354248046875, 0.027740478515625, 0.00327301025390625, 0.01291656494140625, 8.225440979003906e-06, 0.0013065338134765625, 0.0018463134765625, 1.6005859375, 0.91943359375, 0.335693359375, 0.037384033203125, 1.701171875, 0.032684326171875, 1.4716796875, 1.185546875, 0.12060546875, 0.10565185546875, 1.2431640625, 0.0165557861328125, 0.60400390625, 0.09326171875], "tokens": [334, 1022, 664, 319, 399, 443, 436, 8321, 424, 1738, 312, 9657, 16095, 461, 17340, 1169, 432, 322, 4886, 664, 319, 688, 884, 3417, 32, 664, 319, 664, 319, 477, 2116, 333, 17945, 48, 11304, 2474, 5103, 664, 319, 664, 569, 334, 907, 443, 7329, 15395, 2026, 7400, 1189, 4568, 3296, 301]}
{"line_number": 922, "line_type": "original", "code": "      EnumType enumType = null;", "entropy": 1.6533203125, "is_bug_line": false, "sus_score": 0.6922748684883118, "per_token_entropy": [4.2890625, 7.8984375, 0.040069580078125, 0.39892578125, 0.0196533203125, 0.24267578125, 0.332275390625, 0.005680084228515625], "tokens": [647, 7819, 620, 3833, 620, 280, 744, 45]}
{"line_number": 922, "line_type": "generated", "code": "\n     */\n    private void defineTypedVariable(Node name, Node parent, JSType type) {\n      Preconditions.checkState(name.isName());\n      Preconditions.checkState(parent.isVar() || parent.isLet() ||\n          parent.", "entropy": 0.23291015625, "is_bug_line": false, "sus_score": 0.6922748684883118, "per_token_entropy": [0.1962890625, 0.36767578125, 0.017364501953125, 0.392578125, 0.5068359375, 0.31201171875, 0.097900390625, 0.44970703125, 0.01177215576171875, 0.46728515625, 0.01824951171875, 0.005779266357421875, 0.03973388671875, 0.006275177001953125, 0.00180816650390625, 0.03021240234375, 2.9802322387695312e-06, 0.0037059783935546875, 0.047088623046875, 0.01088714599609375, 0.09478759765625, 0.6015625, 0.0007123947143554688, 0.01324462890625, 0.61279296875, 0.0074615478515625, 0.1793212890625, 0.01323699951171875, 0.68896484375, 0.007659912109375, 0.18798828125, 0.484619140625, 1.1884765625, 8.26120376586914e-05, 0.021636962890625, 0.17822265625, 0.064208984375, 1.2021484375, 0.463134765625, 0.04461669921875, 0.92431640625, 0.07489013671875, 0.0198516845703125, 0.045654296875, 0.0002734661102294922, 0.10791015625, 0.8408203125, 0.245849609375, 0.1646728515625, 0.63134765625, 0.0187835693359375, 0.00015485286712646484], "tokens": [275, 569, 284, 945, 763, 5597, 11851, 3818, 26, 1212, 636, 30, 4004, 2935, 30, 7750, 620, 827, 27, 301, 397, 40596, 32, 1553, 1078, 26, 426, 32, 297, 558, 1035, 397, 40596, 32, 1553, 1078, 26, 2544, 32, 297, 1881, 346, 1276, 2935, 32, 297, 9809, 346, 1276, 616, 2935, 32]}
{"line_number": 1652, "line_type": "original", "code": "        JSType realType = null;", "entropy": 1.666015625, "is_bug_line": false, "sus_score": 0.690711259841919, "per_token_entropy": [3.478515625, 5.5546875, 0.0111541748046875, 2.564453125, 0.0248870849609375, 0.07489013671875, 1.607421875, 0.00955963134765625], "tokens": [351, 7750, 620, 4011, 620, 280, 744, 45]}
{"line_number": 1652, "line_type": "generated", "code": "\n        // TODO(johnlenz): this is a temporary hack to avoid\n        //                crashing on code like this:\n        //                  function f(/** function() */ x) {}\n        //                The problem is that we don't have enough\n        //", "entropy": 1.048828125, "is_bug_line": false, "sus_score": 0.690711259841919, "per_token_entropy": [0.39892578125, 0.98681640625, 2.5546875, 0.07086181640625, 1.3720703125, 0.0021686553955078125, 0.0009984970092773438, 0.050384521484375, 3.251953125, 0.9150390625, 0.94873046875, 3.275390625, 0.58740234375, 0.64990234375, 2.859375, 1.8896484375, 0.0018281936645507812, 4.578125, 2.326171875, 0.08795166015625, 0.88623046875, 2.751953125, 0.724609375, 1.4560546875, 0.143310546875, 0.0310211181640625, 0.0163116455078125, 1.06640625, 1.31640625, 1.431640625, 0.53857421875, 2.15234375, 1.7177734375, 0.728515625, 0.09332275390625, 1.1025390625, 0.1290283203125, 1.2890625, 0.047119140625, 0.334228515625, 0.921875, 1.8828125, 1.55078125, 0.08819580078125, 0.2705078125, 1.1748046875, 1.3857421875, 0.00110626220703125, 1.0126953125, 1.34375, 0.13525390625, 0.01337432861328125], "tokens": [291, 434, 4296, 26, 25172, 1657, 108, 711, 458, 438, 312, 14016, 16445, 372, 7358, 291, 434, 2071, 14865, 299, 544, 1340, 2124, 458, 44, 291, 434, 5688, 667, 296, 26, 1332, 667, 346, 569, 816, 27, 2149, 291, 434, 2071, 886, 3708, 438, 688, 996, 2800, 1330, 1159, 8448, 291, 434]}
{"line_number": 1108, "line_type": "original", "code": "                // this.", "entropy": 5.17578125, "is_bug_line": false, "sus_score": 0.6903828382492065, "per_token_entropy": [10.75, 1.76953125, 5.9296875, 2.25], "tokens": [2071, 434, 458, 32]}
{"line_number": 1108, "line_type": "generated", "code": "\n      if (info!= null && info.hasType()) {\n        return info.getType();\n      } else if (rValue!= null && rValue.isQualifiedName()) {\n        // If the right-hand side is a qualified name,\n        // then", "entropy": 0.417724609375, "is_bug_line": false, "sus_score": 0.6903828382492065, "per_token_entropy": [0.177978515625, 1.10546875, 0.1146240234375, 0.57421875, 0.3876953125, 0.0001341104507446289, 0.73046875, 0.302001953125, 0.0013446807861328125, 0.255859375, 0.0240020751953125, 0.042388916015625, 0.0006527900695800781, 0.025360107421875, 0.56494140625, 0.451904296875, 0.0011968612670898438, 0.056640625, 0.087890625, 0.0177459716796875, 5.543231964111328e-05, 1.1767578125, 0.1842041015625, 0.047027587890625, 0.77978515625, 0.0003516674041748047, 0.08734130859375, 9.500980377197266e-05, 0.931640625, 0.288330078125, 1.8477439880371094e-05, 0.0038242340087890625, 1.1015625, 0.826171875, 0.1910400390625, 0.00048470497131347656, 0.02789306640625, 0.82373046875, 1.9375, 0.76953125, 2.181640625, 0.74951171875, 0.03497314453125, 0.289306640625, 0.334228515625, 0.26416015625, 0.0567626953125, 0.01532745361328125, 0.19775390625, 2.04296875, 0.00371551513671875, 1.451171875], "tokens": [397, 415, 308, 1338, 863, 744, 962, 3099, 32, 2040, 620, 1157, 301, 291, 442, 3099, 32, 10272, 473, 397, 320, 813, 415, 308, 100, 882, 863, 744, 962, 540, 882, 32, 297, 41340, 1157, 301, 291, 434, 1670, 322, 2091, 31, 4668, 5209, 438, 312, 16793, 636, 30, 291, 434, 1615]}
{"line_number": 1382, "line_type": "original", "code": "        // Determining declaration for #1 + #3 + #4", "entropy": 1.4501953125, "is_bug_line": false, "sus_score": 0.6903645992279053, "per_token_entropy": [7.859375, 1.9013671875, 5.96484375, 0.0101470947265625, 0.4482421875, 0.028656005859375, 0.0188446044921875, 1.955078125, 1.3759765625, 0.003162384033203125, 0.1983642578125, 0.490234375, 0.0017862319946289062, 0.040863037109375], "tokens": [351, 434, 27063, 299, 13317, 436, 588, 35, 474, 588, 37, 474, 588, 38]}
{"line_number": 1382, "line_type": "generated", "code": "\n    if (info!= null &&!info.isConstant()) {\n      // If this is a constant, we don't need to do anything else.\n      return;\n    }\n\n    // Now that we know that we're not declaring a constant, we can", "entropy": 0.8955078125, "is_bug_line": false, "sus_score": 0.6903645992279053, "per_token_entropy": [0.6806640625, 1.4990234375, 0.2392578125, 1.0673828125, 0.155517578125, 0.0002467632293701172, 0.81982421875, 1.9267578125, 0.5078125, 0.00019943714141845703, 0.5849609375, 0.79150390625, 0.533203125, 0.0019273757934570312, 0.035430908203125, 1.533203125, 2.162109375, 1.712890625, 0.397705078125, 0.568359375, 3.267578125, 0.80126953125, 1.78125, 1.1396484375, 0.00019431114196777344, 1.2666015625, 0.1300048828125, 2.39453125, 0.78076171875, 1.25390625, 0.5634765625, 0.06597900390625, 0.55712890625, 0.01245880126953125, 0.0020885467529296875, 7.998943328857422e-05, 0.333984375, 1.1083984375, 3.697265625, 1.4287109375, 0.26123046875, 1.2607421875, 1.5126953125, 1.5263671875, 0.830078125, 1.392578125, 0.70654296875, 0.260498046875, 0.349365234375, 0.1737060546875, 1.287109375, 1.1943359375], "tokens": [284, 415, 308, 1338, 863, 744, 962, 653, 1338, 32, 297, 5465, 1157, 301, 397, 434, 1670, 458, 438, 312, 8082, 30, 996, 2800, 1330, 1849, 372, 745, 7991, 813, 32, 397, 442, 45, 284, 320, 446, 434, 9080, 688, 996, 3702, 688, 996, 4484, 646, 40176, 312, 8082, 30, 996, 883]}
{"line_number": 867, "line_type": "original", "code": "              .buildAndRegister();", "entropy": 4.69921875, "is_bug_line": false, "sus_score": 0.6898151636123657, "per_token_entropy": [11.3359375, 4.64453125, 2.48828125, 4.77734375, 1.9521484375, 2.982421875], "tokens": [2850, 638, 1832, 2185, 4329, 473]}
{"line_number": 867, "line_type": "generated", "code": "\n    private EnumType createEnumType(Node rValue, String name, JSDocInfo info,\n        Node lvalueNode) {\n      if (rValue.isObjectLit()) {\n        return new EnumType(name, info, rValue, error", "entropy": 0.347900390625, "is_bug_line": false, "sus_score": 0.6898151636123657, "per_token_entropy": [0.30078125, 0.31298828125, 0.63671875, 0.00072479248046875, 0.497802734375, 0.01190185546875, 0.08154296875, 0.0738525390625, 0.4365234375, 0.020782470703125, 0.003101348876953125, 0.01824951171875, 0.2442626953125, 0.002349853515625, 0.004482269287109375, 0.45361328125, 4.291534423828125e-06, 1.1920928955078125e-07, 0.0004639625549316406, 0.0013217926025390625, 0.035369873046875, 0.59521484375, 0.0134124755859375, 0.00498199462890625, 0.0037631988525390625, 0.002445220947265625, 0.07720947265625, 0.0352783203125, 0.1873779296875, 2.291015625, 0.150634765625, 1.103515625, 8.20159912109375e-05, 0.259765625, 0.41015625, 0.0053253173828125, 0.12744140625, 0.0004968643188476562, 0.0316162109375, 0.87353515625, 1.3369140625, 0.052978515625, 0.0076751708984375, 0.0751953125, 0.71533203125, 0.048614501953125, 1.98046875, 0.267822265625, 0.61376953125, 4.1365623474121094e-05, 0.77197265625, 2.9140625], "tokens": [284, 945, 7819, 620, 1487, 2759, 620, 26, 1212, 540, 882, 30, 892, 636, 30, 971, 3181, 542, 1120, 3099, 30, 291, 4004, 456, 853, 1212, 27, 301, 397, 415, 308, 100, 882, 32, 37704, 27472, 1157, 301, 291, 442, 537, 7819, 620, 26, 426, 30, 3099, 30, 540, 882, 30, 1048]}
{"line_number": 1743, "line_type": "original", "code": "            if (jsDocParameter != null) {", "entropy": 2.048828125, "is_bug_line": false, "sus_score": 0.689213216304779, "per_token_entropy": [11.0859375, 2.765625, 0.1309814453125, 3.412109375, 0.303466796875, 2.22265625, 0.354248046875, 0.006488800048828125, 0.1617431640625, 0.047027587890625], "tokens": [1468, 415, 308, 754, 4216, 3012, 863, 744, 27, 301]}
{"line_number": 1743, "line_type": "generated", "code": "\n  /**\n   * Returns a function that creates a new ScopeCreator.\n   *\n   * @param compiler The compiler.\n   * @param root The root of the scope.\n   * @param scopeType The type of the scope.\n   * @param block", "entropy": 0.8564453125, "is_bug_line": false, "sus_score": 0.689213216304779, "per_token_entropy": [1.1640625, 0.437744140625, 0.69970703125, 0.00048828125, 2.953125, 1.68359375, 3.44140625, 0.401123046875, 3.115234375, 0.45458984375, 1.6455078125, 2.595703125, 2.75, 1.841796875, 0.40283203125, 0.8349609375, 0.55419921875, 0.00478363037109375, 0.58544921875, 0.1331787109375, 1.962890625, 0.5224609375, 0.50537109375, 1.23828125, 0.01412200927734375, 0.1959228515625, 0.0097198486328125, 0.369140625, 1.2353515625, 0.36767578125, 0.175537109375, 0.43994140625, 0.01116943359375, 1.31640625, 1.177734375, 0.048980712890625, 0.12152099609375, 0.0135498046875, 0.263916015625, 1.7080078125, 1.2265625, 0.1396484375, 0.22607421875, 0.0162353515625, 0.5771484375, 0.2440185546875, 0.385986328125, 0.05303955078125, 0.2015380859375, 0.012969970703125, 0.40966796875, 3.654296875], "tokens": [334, 1022, 664, 319, 3759, 312, 667, 688, 9585, 312, 537, 22148, 11143, 32, 664, 319, 664, 319, 477, 753, 8980, 886, 8980, 32, 664, 319, 477, 753, 3051, 886, 3051, 432, 322, 4576, 32, 664, 319, 477, 753, 4576, 620, 886, 827, 432, 322, 4576, 32, 664, 319, 477, 753, 2163]}
{"line_number": 648, "line_type": "original", "code": "     */", "entropy": 4.8359375, "is_bug_line": false, "sus_score": 0.6830657720565796, "per_token_entropy": [4.25, 5.421875], "tokens": [262, 569]}
{"line_number": 648, "line_type": "generated", "code": "\n      // Declare the function.\n      if (lValue!= null) {\n        defineSlot(lValue, n, functionName, functionType, false);\n      } else {\n        setDeferredType(n, functionType);\n      }\n\n      // Define the", "entropy": 0.38134765625, "is_bug_line": false, "sus_score": 0.6830657720565796, "per_token_entropy": [0.499267578125, 0.5927734375, 3.2578125, 0.52001953125, 0.2061767578125, 1.859375, 0.089111328125, 1.060546875, 0.044219970703125, 1.5556640625, 0.0002644062042236328, 0.1358642578125, 0.0027313232421875, 0.1634521484375, 0.0011739730834960938, 0.0204620361328125, 0.66796875, 0.1943359375, 0.0038471221923828125, 0.07391357421875, 3.337860107421875e-06, 0.000766754150390625, 0.6875, 0.051605224609375, 0.0875244140625, 0.0131072998046875, 0.051849365234375, 0.037017822265625, 7.271766662597656e-05, 0.156982421875, 0.355712890625, 0.035125732421875, 0.198486328125, 0.00013458728790283203, 0.64697265625, 0.1964111328125, 0.0117645263671875, 0.74951171875, 0.02093505859375, 0.0169525146484375, 0.0013532638549804688, 0.1654052734375, 0.01320648193359375, 0.007488250732421875, 0.00041294097900390625, 0.005359649658203125, 0.047210693359375, 3.552436828613281e-05, 1.09375, 0.289794921875, 3.103515625, 0.826171875], "tokens": [397, 434, 36239, 322, 667, 32, 397, 415, 308, 94, 882, 863, 744, 27, 301, 291, 5597, 9490, 26, 94, 882, 30, 310, 30, 667, 558, 30, 667, 620, 30, 901, 293, 397, 320, 813, 301, 291, 739, 25398, 620, 26, 96, 30, 667, 620, 293, 397, 320, 1687, 434, 14054, 322]}
{"line_number": 876, "line_type": "original", "code": "     * Find the function that's being overridden on this type, if any.", "entropy": 2.8046875, "is_bug_line": false, "sus_score": 0.6821067929267883, "per_token_entropy": [6.23046875, 5.6875, 7.03515625, 0.3994140625, 4.9765625, 1.958984375, 2.599609375, 0.72216796875, 2.27734375, 5.39453125, 2.421875, 1.916015625, 2.0078125, 0.8388671875, 0.29736328125, 0.1046142578125], "tokens": [262, 319, 7477, 322, 667, 688, 1182, 3998, 26625, 544, 458, 827, 30, 415, 1346, 32]}
{"line_number": 876, "line_type": "generated", "code": "\n        if (var!= null) {\n          enumType = EnumType.cast(var.getType());\n          if (enumType == null) {\n            errorReporter.report(rValue,\n                \"Type annotation does not refer to an enum\");\n          }", "entropy": 0.412841796875, "is_bug_line": false, "sus_score": 0.6821067929267883, "per_token_entropy": [0.7275390625, 0.488525390625, 0.0267486572265625, 0.01361083984375, 0.1414794921875, 0.00022780895233154297, 0.35302734375, 0.0018224716186523438, 0.063720703125, 0.556640625, 0.000736236572265625, 0.0005626678466796875, 1.4775390625, 0.00585174560546875, 0.0082855224609375, 0.091064453125, 0.006275177001953125, 0.012420654296875, 0.00047969818115234375, 0.064453125, 0.006771087646484375, 1.546875, 0.244384765625, 0.0095977783203125, 0.018096923828125, 4.947185516357422e-05, 0.3505859375, 0.00027632713317871094, 0.06414794921875, 0.0015325546264648438, 0.032806396484375, 1.16796875, 0.728515625, 0.0035190582275390625, 0.7939453125, 0.004116058349609375, 1.6728515625, 0.0031299591064453125, 0.0243988037109375, 0.8701171875, 0.7509765625, 2.1953125, 1.8828125, 2.140625, 0.001605987548828125, 1.0732421875, 0.038330078125, 0.1875, 0.2320556640625, 0.9052734375, 0.468994140625, 5.5909156799316406e-05], "tokens": [291, 415, 308, 869, 863, 744, 27, 301, 616, 3833, 620, 280, 7819, 620, 32, 2405, 26, 869, 32, 10272, 1035, 616, 415, 308, 3868, 620, 610, 744, 27, 301, 324, 1048, 20624, 32, 3734, 26, 100, 882, 30, 400, 313, 620, 11188, 1957, 646, 5279, 372, 600, 3833, 724, 616, 320]}
{"line_number": 1048, "line_type": "original", "code": "        validator.expectUndeclaredVariable(", "entropy": 5.02734375, "is_bug_line": false, "sus_score": 0.6809671521186829, "per_token_entropy": [6.86328125, 12.1953125, 0.2666015625, 6.8046875, 8.3125, 3.515625, 1.990234375, 0.2841796875], "tokens": [351, 13420, 32, 2358, 1061, 26549, 3818, 26]}
{"line_number": 1048, "line_type": "generated", "code": "\n                sourceName, n, parent, newVar, variableName, type);\n          }\n        }\n      }\n    }\n\n\n    /**\n     * Returns whether the given qualified name is rooted in the global scope.\n     *\n     * @param n A qualified name", "entropy": 0.335693359375, "is_bug_line": false, "sus_score": 0.6809671521186829, "per_token_entropy": [1.5625, 0.36474609375, 0.0026645660400390625, 0.00390625, 0.1295166015625, 0.004299163818359375, 0.054931640625, 0.0018148422241210938, 0.459716796875, 0.0005254745483398438, 0.03887939453125, 0.09088134765625, 2.1576881408691406e-05, 0.08056640625, 0.276611328125, 0.12042236328125, 0.190673828125, 0.0001423358917236328, 0.1785888671875, 0.0004246234893798828, 0.35009765625, 0.0007615089416503906, 0.09832763671875, 0.0021419525146484375, 1.431640625, 0.30517578125, 0.0965576171875, 0.00022649765014648438, 2.189453125, 0.48388671875, 0.8828125, 0.72119140625, 1.0703125, 0.033966064453125, 0.9990234375, 0.8798828125, 0.00032210350036621094, 0.1243896484375, 0.306396484375, 0.1641845703125, 0.217041015625, 0.1304931640625, 0.00530242919921875, 0.99365234375, 0.85400390625, 0.0017480850219726562, 0.40234375, 0.03240966796875, 0.31640625, 0.52685546875, 0.25048828125, 0.024017333984375], "tokens": [400, 1914, 558, 30, 310, 30, 2935, 30, 537, 1881, 30, 2677, 558, 30, 827, 293, 616, 320, 291, 320, 397, 320, 284, 320, 4057, 1022, 275, 319, 3759, 4946, 322, 2702, 16793, 636, 438, 3051, 318, 328, 322, 3649, 4576, 32, 275, 319, 275, 319, 477, 753, 310, 399, 16793, 636]}
{"line_number": 1527, "line_type": "original", "code": "        if (jsType != null &&", "entropy": 2.451171875, "is_bug_line": false, "sus_score": 0.6809197664260864, "per_token_entropy": [2.8984375, 4.54296875, 0.07891845703125, 4.859375, 4.7578125, 0.9921875, 0.01354217529296875, 1.4736328125], "tokens": [351, 415, 308, 754, 620, 863, 744, 962]}
{"line_number": 1527, "line_type": "generated", "code": "\n        case Token.FUNCTION:\n          // TODO(user): handle the case where the function is assigned to a\n          // variable.\n          //\n          // TODO(user): handle anonymous functions\n          //\n          // TODO(user): handle functions declared in a local scope", "entropy": 0.892578125, "is_bug_line": false, "sus_score": 0.6809197664260864, "per_token_entropy": [0.5244140625, 0.238525390625, 0.004638671875, 0.0003147125244140625, 0.52587890625, 0.0032291412353515625, 0.32080078125, 2.2578125, 2.5703125, 0.0261383056640625, 1.427734375, 0.0533447265625, 3.896484375, 3.330078125, 0.75439453125, 0.376220703125, 1.162109375, 0.445068359375, 0.630859375, 1.759765625, 0.275634765625, 0.1859130859375, 0.05859375, 0.0047149658203125, 1.5771484375, 0.9599609375, 0.44384765625, 2.61328125, 2.359375, 0.01351165771484375, 1.7392578125, 0.0100860595703125, 0.230224609375, 0.01251220703125, 0.7041015625, 2.40625, 0.11712646484375, 3.06640625, 1.2470703125, 0.390869140625, 0.1617431640625, 0.297119140625, 0.008270263671875, 0.042999267578125, 0.0027103424072265625, 0.39501953125, 1.1494140625, 1.3955078125, 1.0849609375, 1.6123046875, 1.501953125, 0.03466796875], "tokens": [291, 1135, 6512, 32, 9842, 44, 616, 434, 4296, 26, 496, 711, 2887, 322, 1135, 2154, 322, 667, 438, 11012, 372, 312, 616, 434, 2677, 32, 616, 434, 616, 434, 4296, 26, 496, 711, 2887, 23231, 4442, 616, 434, 616, 434, 4296, 26, 496, 711, 2887, 4442, 17103, 328, 312, 2196, 4576]}
{"line_number": 1646, "line_type": "original", "code": "        // TODO(nicksantos|user): This is a terrible, terrible hack", "entropy": 0.8505859375, "is_bug_line": false, "sus_score": 0.6799755692481995, "per_token_entropy": [4.8828125, 2.392578125, 1.7060546875, 0.0523681640625, 0.8974609375, 0.00033211708068847656, 0.0008702278137207031, 4.935264587402344e-05, 1.1474609375, 0.0677490234375, 0.032928466796875, 3.08203125, 0.716796875, 0.55859375, 0.39794921875, 0.0029926300048828125, 0.255615234375, 0.75439453125, 0.0008654594421386719, 0.0670166015625], "tokens": [351, 434, 4296, 26, 96, 6758, 278, 10369, 110, 496, 711, 1348, 438, 312, 3944, 46409, 30, 3944, 46409, 16445]}
{"line_number": 1646, "line_type": "generated", "code": "\n     */\n    @Override\n    public void visit(NodeTraversal t, Node n, JSDocInfo info) {\n      if (n.isName()) {\n        visitName(n, info);\n      } else if (n.isParamList())", "entropy": 0.231689453125, "is_bug_line": false, "sus_score": 0.6799755692481995, "per_token_entropy": [0.297119140625, 0.1588134765625, 0.0234832763671875, 0.21435546875, 0.0011034011840820312, 0.0219268798828125, 0.2315673828125, 0.0301971435546875, 0.00676727294921875, 0.003597259521484375, 0.00836181640625, 4.947185516357422e-05, 0.0009870529174804688, 2.86102294921875e-06, 0.00021541118621826172, 0.00045609474182128906, 0.09307861328125, 0.3720703125, 0.004474639892578125, 1.5497207641601562e-06, 0.0030879974365234375, 0.0762939453125, 0.005367279052734375, 0.0029087066650390625, 0.226318359375, 0.978515625, 0.11651611328125, 0.54345703125, 0.01568603515625, 0.89306640625, 1.490234375, 0.1368408203125, 0.0006976127624511719, 0.061614990234375, 1.666015625, 0.1158447265625, 0.21435546875, 1.0791015625, 0.364501953125, 0.37451171875, 0.1844482421875, 0.12078857421875, 9.822845458984375e-05, 0.5712890625, 0.1060791015625, 0.01166534423828125, 0.1378173828125, 0.00024211406707763672, 0.44482421875, 0.59765625, 0.0143890380859375, 0.0253753662109375], "tokens": [275, 569, 284, 477, 1788, 284, 562, 763, 7725, 26, 1212, 35699, 273, 30, 4004, 310, 30, 971, 3181, 542, 1120, 3099, 27, 301, 397, 415, 308, 96, 32, 297, 558, 1157, 301, 291, 7725, 558, 26, 96, 30, 3099, 293, 397, 320, 813, 415, 308, 96, 32, 297, 3180, 720, 1157]}
{"line_number": 1651, "line_type": "original", "code": "        JSDocInfo info = candidate.getJSDocInfo();", "entropy": 1.259765625, "is_bug_line": false, "sus_score": 0.677238941192627, "per_token_entropy": [6.3046875, 1.1962890625, 0.0003352165222167969, 2.5033950805664062e-06, 0.003665924072265625, 0.022491455078125, 0.01654052734375, 11.2578125, 0.056549072265625, 0.0202484130859375, 0.0011959075927734375, 5.245208740234375e-06, 1.5497207641601562e-06, 0.00289154052734375, 0.01129150390625], "tokens": [351, 971, 3181, 542, 1120, 3099, 280, 15133, 32, 371, 60, 3181, 542, 1120, 473]}
{"line_number": 1651, "line_type": "generated", "code": "\n      // TODO(nicksantos", "entropy": 0.63330078125, "is_bug_line": false, "sus_score": 0.677238941192627, "per_token_entropy": [0.1624755859375, 1.791015625, 1.9814453125, 0.039825439453125, 1.08984375, 0.0004849433898925781, 0.0005469322204589844, 1.1205673217773438e-05], "tokens": [397, 434, 4296, 26, 96, 6758, 278, 10369]}
{"line_number": 1543, "line_type": "original", "code": "    private final Node node;", "entropy": 2.083984375, "is_bug_line": false, "sus_score": 0.6763336062431335, "per_token_entropy": [0.89404296875, 1.0302734375, 3.650390625, 3.341796875, 3.5078125, 0.08203125], "tokens": [264, 945, 1158, 4004, 1541, 45]}
{"line_number": 1543, "line_type": "generated", "code": "\n    protected void addDeclaration(\n        String name, JSType type, Node n, JSType ownerType, Scope scope) {\n      if (type == null) {\n        type = JSType.UNKNOWN;\n      }\n\n      if (scope == null) {", "entropy": 0.59130859375, "is_bug_line": false, "sus_score": 0.6763336062431335, "per_token_entropy": [0.74560546875, 0.73828125, 0.6220703125, 1.7646484375, 1.6455078125, 0.271484375, 1.666015625, 1.17578125, 0.1397705078125, 0.00220489501953125, 0.9423828125, 0.0007414817810058594, 0.609375, 0.00896453857421875, 0.81689453125, 0.34130859375, 0.08819580078125, 2.23046875, 0.083740234375, 1.509765625, 0.1142578125, 0.6201171875, 2.33203125, 0.92724609375, 0.192626953125, 0.11431884765625, 0.1849365234375, 1.1103515625, 0.18994140625, 1.1201171875, 0.69580078125, 0.0218048095703125, 0.198486328125, 0.00679779052734375, 0.0168609619140625, 1.3974609375, 0.0007262229919433594, 0.7041015625, 9.620189666748047e-05, 0.042449951171875, 0.055816650390625, 0.000858306884765625, 0.04083251953125, 5.4717063903808594e-05, 0.880859375, 0.974609375, 0.147216796875, 1.439453125, 0.94580078125, 0.75390625, 0.118408203125, 0.0010833740234375], "tokens": [284, 2522, 763, 1015, 10367, 26, 291, 892, 636, 30, 7750, 620, 827, 30, 4004, 310, 30, 7750, 620, 7423, 620, 30, 22148, 4576, 27, 301, 397, 415, 308, 681, 610, 744, 27, 301, 291, 827, 280, 7750, 620, 32, 14174, 45, 397, 320, 1687, 415, 308, 3473, 610, 744, 27, 301]}
{"line_number": 1662, "line_type": "original", "code": "", "entropy": 3.51953125, "is_bug_line": false, "sus_score": 0.6760886907577515, "per_token_entropy": [3.51953125], "tokens": [203]}
{"line_number": 1662, "line_type": "generated", "code": "\n      if (fnNode.getType() == Token.FUNCTION) {\n        Node name = fnNode.getFirstChild();\n        if (name.getType() == Token.NAME) {\n          String fnName = name.getString();\n          if (fnName.", "entropy": 0.334716796875, "is_bug_line": false, "sus_score": 0.6760886907577515, "per_token_entropy": [0.265869140625, 1.3115234375, 0.1845703125, 0.685546875, 0.006267547607421875, 0.10443115234375, 1.1123046875, 0.0025539398193359375, 0.2491455078125, 0.0012950897216796875, 3.325939178466797e-05, 0.04620361328125, 0.28173828125, 0.0242156982421875, 0.064208984375, 2.158203125, 1.28125, 0.876953125, 0.599609375, 0.0007238388061523438, 0.0014429092407226562, 0.10003662109375, 0.001007080078125, 0.277587890625, 0.0955810546875, 0.67724609375, 0.1312255859375, 0.0867919921875, 0.41748046875, 0.399658203125, 0.00121307373046875, 0.1748046875, 0.0006327629089355469, 4.7206878662109375e-05, 0.036285400390625, 0.3203125, 0.00201416015625, 0.022613525390625, 1.54296875, 1.138671875, 0.10113525390625, 0.0028858184814453125, 0.03009033203125, 0.0004229545593261719, 0.0260772705078125, 0.00592803955078125, 0.1888427734375, 1.04296875, 0.209228515625, 0.63232421875, 0.142822265625, 0.341796875], "tokens": [397, 415, 308, 3359, 1212, 32, 10272, 346, 610, 6512, 32, 9842, 27, 301, 291, 4004, 636, 280, 2771, 1212, 32, 25657, 2931, 473, 291, 415, 308, 426, 32, 10272, 346, 610, 6512, 32, 2474, 27, 301, 616, 892, 2771, 558, 280, 636, 32, 7069, 473, 616, 415, 308, 3359, 558, 32]}
{"line_number": 967, "line_type": "original", "code": "     * variable's type or {@code null} if its type is inferred.", "entropy": 2.431640625, "is_bug_line": false, "sus_score": 0.6758962869644165, "per_token_entropy": [2.984375, 0.015625, 10.2265625, 3.216796875, 0.0902099609375, 9.265625, 3.33984375, 0.2188720703125, 5.01953125, 0.25341796875, 0.336181640625, 2.875, 0.0831298828125, 0.243896484375, 0.69775390625, 0.04052734375], "tokens": [262, 319, 2677, 1182, 827, 556, 3088, 687, 744, 111, 415, 2819, 827, 438, 43134, 32]}
{"line_number": 967, "line_type": "generated", "code": "\n     *     {@code inferred} is {@code true}.\n     */\n    private void defineSlot(Node n, Node parent, String variableName, JSType type,\n        boolean inferred) {\n      Preconditions.checkArgument(inferred || type!= null);", "entropy": 0.12109375, "is_bug_line": false, "sus_score": 0.6758962869644165, "per_token_entropy": [0.1571044921875, 0.06951904296875, 0.060943603515625, 0.32861328125, 0.01285552978515625, 0.025543212890625, 0.0036487579345703125, 0.006488800048828125, 0.0230865478515625, 0.0002875328063964844, 0.005847930908203125, 0.0217742919921875, 0.023223876953125, 1.013671875, 0.01532745361328125, 0.91162109375, 0.0240631103515625, 0.0019397735595703125, 0.08660888671875, 0.005077362060546875, 0.42333984375, 0.0009279251098632812, 3.647804260253906e-05, 0.0697021484375, 0.000293731689453125, 6.473064422607422e-05, 0.06805419921875, 0.0086517333984375, 2.944469451904297e-05, 0.0002467632293701172, 0.6748046875, 1.1920928955078125e-07, 0.00392913818359375, 0.006099700927734375, 0.372314453125, 0.002899169921875, 0.0005803108215332031, 0.0010671615600585938, 0.0014743804931640625, 0.09368896484375, 0.82568359375, 0.0005083084106445312, 0.019012451171875, 0.2008056640625, 0.039337158203125, 0.658203125, 1.4424324035644531e-05, 0.0062713623046875, 0.005420684814453125, 0.0008931159973144531, 0.00049591064453125, 0.0166168212890625], "tokens": [275, 319, 262, 3088, 687, 43134, 111, 438, 3088, 687, 861, 4009, 275, 569, 284, 945, 763, 5597, 9490, 26, 1212, 310, 30, 4004, 2935, 30, 892, 2677, 558, 30, 7750, 620, 827, 30, 291, 1905, 43134, 27, 301, 397, 40596, 32, 1553, 3484, 26, 266, 14981, 1276, 827, 863, 744, 293]}
{"line_number": 1123, "line_type": "original", "code": "          && type.isConstructor()) {", "entropy": 2.943359375, "is_bug_line": false, "sus_score": 0.6754563450813293, "per_token_entropy": [2.7578125, 10.9609375, 4.83984375, 1.408203125, 0.77685546875, 1.3642578125, 1.3974609375, 0.042236328125], "tokens": [2033, 962, 827, 32, 297, 7932, 1157, 301]}
{"line_number": 1123, "line_type": "generated", "code": "\n          // TODO(nicksantos): We should check that the type is a subtype of\n          // the declared type.\n          return info.getConstructorType();\n        } else if (info.isConstant()) {\n          return info.getType();\n        }", "entropy": 0.68408203125, "is_bug_line": false, "sus_score": 0.6754563450813293, "per_token_entropy": [0.416259765625, 1.2939453125, 2.357421875, 0.027923583984375, 0.94482421875, 0.001926422119140625, 9.47713851928711e-05, 0.0003325939178466797, 0.0125885009765625, 2.796875, 1.14453125, 3.0703125, 0.9384765625, 0.55029296875, 1.6689453125, 1.6748046875, 1.5166015625, 0.734375, 0.619140625, 0.18505859375, 0.0012054443359375, 0.86962890625, 1.6201171875, 0.28857421875, 0.58154296875, 0.47412109375, 0.6669921875, 1.8466796875, 0.01116943359375, 0.650390625, 1.041015625, 0.40576171875, 0.184814453125, 0.2435302734375, 0.0027294158935546875, 1.1845703125, 0.271728515625, 0.0301666259765625, 0.15869140625, 0.0018768310546875, 0.69775390625, 1.169921875, 0.60107421875, 0.0003275871276855469, 0.038360595703125, 0.62158203125, 0.61865234375, 0.0013685226440429688, 1.0927734375, 0.233642578125, 0.00920867919921875, 0.0010480880737304688], "tokens": [616, 434, 4296, 26, 96, 6758, 278, 10369, 711, 2688, 1395, 1505, 688, 322, 827, 438, 312, 36991, 432, 616, 434, 322, 17103, 827, 32, 616, 442, 3099, 32, 371, 7932, 620, 473, 291, 320, 813, 415, 308, 1338, 32, 297, 5465, 1157, 301, 616, 442, 3099, 32, 10272, 473, 291, 320]}
{"line_number": 877, "line_type": "original", "code": "     */", "entropy": 6.9296875, "is_bug_line": false, "sus_score": 0.6746075749397278, "per_token_entropy": [6.1328125, 7.7265625], "tokens": [262, 569]}
{"line_number": 877, "line_type": "generated", "code": "\n          enumType = (EnumType) var.getType();\n        }\n      }\n\n      if (enumType == null) {\n        enumType = new EnumType(name, info.getEnumParameterType(),\n            compiler.getTypeRegistry());\n      }\n\n      if (", "entropy": 0.27587890625, "is_bug_line": false, "sus_score": 0.6746075749397278, "per_token_entropy": [0.587890625, 0.287109375, 0.0019121170043945312, 0.0014820098876953125, 0.257568359375, 0.0017156600952148438, 9.775161743164062e-06, 0.0004048347473144531, 0.029937744140625, 0.0006361007690429688, 0.0025177001953125, 0.23779296875, 0.311767578125, 0.0005917549133300781, 0.2119140625, 0.0002579689025878906, 0.85498046875, 0.2269287109375, 0.006389617919921875, 0.034698486328125, 3.6597251892089844e-05, 0.007663726806640625, 0.00010156631469726562, 0.060882568359375, 0.0004830360412597656, 0.06390380859375, 1.376953125, 0.0033588409423828125, 0.00041031837463378906, 0.38525390625, 0.01629638671875, 0.0010900497436523438, 0.0243682861328125, 0.312744140625, 0.24462890625, 1.3349609375, 0.650390625, 0.14794921875, 0.0193023681640625, 0.0020008087158203125, 1.0771484375, 0.82080078125, 1.08203125, 0.88916015625, 0.7626953125, 0.0236968994140625, 0.326904296875, 0.39013671875, 6.556510925292969e-05, 0.284912109375, 0.958984375, 0.02789306640625], "tokens": [616, 3833, 620, 280, 308, 2759, 620, 27, 773, 32, 10272, 473, 291, 320, 397, 320, 1687, 415, 308, 3868, 620, 610, 744, 27, 301, 291, 3833, 620, 280, 537, 7819, 620, 26, 426, 30, 3099, 32, 371, 2759, 46453, 1026, 324, 8980, 32, 10272, 5378, 1035, 397, 320, 1687, 415, 308]}
{"line_number": 1047, "line_type": "original", "code": "        Var oldVar = scopeToDeclareIn.getVar(variableName);", "entropy": 1.4931640625, "is_bug_line": false, "sus_score": 0.6735484600067139, "per_token_entropy": [4.046875, 8.453125, 6.0859375, 0.361083984375, 0.06689453125, 0.41357421875, 0.54541015625, 0.0021648406982421875, 0.003231048583984375, 0.0255126953125, 2.171875, 0.04986572265625, 0.086669921875, 0.0009474754333496094, 0.07525634765625], "tokens": [351, 7329, 3610, 1881, 280, 4576, 705, 33052, 383, 32, 48086, 26, 4502, 558, 293]}
{"line_number": 1047, "line_type": "generated", "code": "                getNativeType(U2U_CONSTRUCTOR_TYPE)));\n\n            // Declare var.prototype.constructor in the scope chain.\n            scopeToDeclareIn.declare(variableName + \".prototype.constructor\", n,\n                fnType, input, true", "entropy": 0.2626953125, "is_bug_line": false, "sus_score": 0.6735484600067139, "per_token_entropy": [1.6015625, 0.476318359375, 0.0270843505859375, 0.1619873046875, 0.002803802490234375, 1.15625, 0.000133514404296875, 0.0014886856079101562, 5.4717063903808594e-05, 0.319091796875, 0.0007653236389160156, 0.0006194114685058594, 0.022125244140625, 0.39208984375, 1.14453125, 0.57275390625, 1.1591796875, 1.111328125, 0.038818359375, 0.2239990234375, 0.3994140625, 0.07330322265625, 0.4833984375, 0.1407470703125, 0.2119140625, 0.021270751953125, 0.14013671875, 0.058349609375, 0.427978515625, 0.0115814208984375, 3.314018249511719e-05, 7.927417755126953e-05, 0.0002429485321044922, 0.0010366439819335938, 0.0097198486328125, 0.356201171875, 7.224082946777344e-05, 0.00555419921875, 0.00951385498046875, 0.0268707275390625, 0.00791168212890625, 3.6597251892089844e-05, 0.00043272972106933594, 1.236328125, 0.00014102458953857422, 0.053680419921875, 0.213134765625, 3.921985626220703e-05, 0.150146484375, 0.0230712890625, 0.047576904296875, 1.1416015625], "tokens": [2071, 622, 6134, 620, 26, 71, 36, 71, 81, 1725, 43753, 81, 2319, 4236, 1064, 434, 36239, 773, 32, 3889, 32, 9430, 328, 322, 4576, 8241, 32, 324, 4576, 705, 33052, 383, 32, 8238, 26, 4502, 558, 474, 4939, 3889, 32, 9430, 392, 310, 30, 400, 2771, 620, 30, 1509, 30, 861]}
{"line_number": 1419, "line_type": "original", "code": "        if (ownerType instanceof FunctionType) {", "entropy": 1.2529296875, "is_bug_line": false, "sus_score": 0.6725324988365173, "per_token_entropy": [4.5390625, 0.56396484375, 0.107177734375, 0.2247314453125, 0.01020050048828125, 6.42578125, 0.41845703125, 0.021881103515625, 0.2149658203125, 0.005519866943359375], "tokens": [351, 415, 308, 5632, 620, 5113, 4540, 620, 27, 301]}
{"line_number": 1419, "line_type": "generated", "code": "\n        if (ownerType!= null) {\n          ownerType.defineDeclaredProperty(propName, unknownType, isExtern, n);\n        }\n      }\n    }\n\n    /**\n     * Define a variable in the current scope.\n     * @param n", "entropy": 0.266845703125, "is_bug_line": false, "sus_score": 0.6725324988365173, "per_token_entropy": [0.7861328125, 0.50830078125, 0.1427001953125, 0.1785888671875, 0.01013946533203125, 0.295654296875, 0.003017425537109375, 0.5302734375, 0.0009560585021972656, 0.038177490234375, 0.6142578125, 0.000431060791015625, 0.0058441162109375, 0.0189361572265625, 0.06719970703125, 0.0012454986572265625, 0.0020599365234375, 0.1663818359375, 7.62939453125e-06, 0.0002808570861816406, 0.1490478515625, 3.6597251892089844e-05, 0.0036373138427734375, 0.419189453125, 0.00010645389556884766, 1.0728836059570312e-06, 0.01235198974609375, 0.1591796875, 0.0034084320068359375, 0.07733154296875, 6.186962127685547e-05, 1.3837890625, 0.0007572174072265625, 0.05877685546875, 0.0013093948364257812, 0.5849609375, 0.337158203125, 0.04827880859375, 0.000133514404296875, 2.994140625, 0.327392578125, 1.2900390625, 0.73046875, 0.18798828125, 0.4775390625, 0.05401611328125, 0.26953125, 0.341064453125, 0.06585693359375, 0.152099609375, 0.0030841827392578125, 0.37109375], "tokens": [291, 415, 308, 5632, 620, 863, 744, 27, 301, 616, 7423, 620, 32, 1234, 22050, 1653, 26, 4641, 558, 30, 8665, 620, 30, 438, 571, 900, 30, 310, 293, 291, 320, 397, 320, 284, 320, 446, 1022, 275, 319, 14054, 312, 2677, 328, 322, 1550, 4576, 32, 275, 319, 477, 753, 310]}
{"line_number": 1049, "line_type": "original", "code": "            sourceName, n, parent, oldVar, variableName, type);", "entropy": 2.021484375, "is_bug_line": false, "sus_score": 0.6722062230110168, "per_token_entropy": [3.3359375, 9.359375, 0.4921875, 1.0732421875, 0.5625, 0.274658203125, 4.6640625, 0.5205078125, 5.4609375, 0.0256805419921875, 0.34521484375, 3.513671875, 0.0024700164794921875, 0.2841796875, 1.1669921875, 1.2705078125], "tokens": [1468, 1914, 558, 30, 310, 30, 2935, 30, 3610, 1881, 30, 2677, 558, 30, 827, 293]}
{"line_number": 1049, "line_type": "generated", "code": "\n          }\n        }\n      }\n    }\n\n    /**\n     * Sets the type of a variable without actually declaring it.\n     *\n     * This is used for variables that are declared in the global scope,\n     * but we don't want to declare them until they", "entropy": 0.787109375, "is_bug_line": false, "sus_score": 0.6722062230110168, "per_token_entropy": [1.099609375, 0.0218505859375, 0.26416015625, 0.0003497600555419922, 0.41748046875, 0.00170135498046875, 0.1761474609375, 0.0019369125366210938, 0.90576171875, 0.59375, 0.09051513671875, 0.0002105236053466797, 1.7763671875, 0.412841796875, 0.9892578125, 0.5634765625, 0.5556640625, 1.5009765625, 3.365234375, 2.154296875, 0.5712890625, 0.1695556640625, 0.457275390625, 0.404052734375, 0.27001953125, 0.7900390625, 0.0018405914306640625, 2.080078125, 0.65673828125, 0.7607421875, 1.1455078125, 1.505859375, 0.75048828125, 0.468017578125, 1.1044921875, 0.99560546875, 1.705078125, 0.31787109375, 0.12841796875, 1.21484375, 0.310546875, 0.0003452301025390625, 0.327392578125, 3.919921875, 1.1103515625, 5.0187110900878906e-05, 0.853515625, 0.09832763671875, 0.80810546875, 0.349365234375, 1.33203125, 1.427734375], "tokens": [616, 320, 291, 320, 397, 320, 284, 320, 446, 1022, 275, 319, 9013, 322, 827, 432, 312, 2677, 2876, 6723, 40176, 561, 32, 275, 319, 275, 319, 1348, 438, 1654, 436, 4886, 688, 884, 17103, 328, 322, 3649, 4576, 30, 275, 319, 1273, 996, 2800, 1330, 2637, 372, 8864, 3026, 6222, 2953]}
