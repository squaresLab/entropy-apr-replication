{"line_number": 1656, "line_type": "original", "code": "      if (functionType.getExtendedInterfacesCount() > 1) {", "entropy": 2.025390625, "is_bug_line": false, "sus_score": 0.6695281863212585, "per_token_entropy": [3.666015625, 4.91796875, 0.9619140625, 0.6337890625, 0.11016845703125, 0.011566162109375, 0.388427734375, 8.015625, 0.5849609375, 7.25, 0.00614166259765625, 1.27734375, 0.0025539398193359375, 3.212890625, 1.287109375, 0.0770263671875], "tokens": [647, 415, 308, 1126, 620, 32, 371, 14861, 12295, 1534, 346, 848, 225, 35, 27, 301]}
{"line_number": 1656, "line_type": "generated", "code": "\n         !isExtern) {\n        report(t, n, CONSTRUCTOR_NOT_CALLABLE, functionType.toString());\n        ensureTyped(t, n);\n        return;\n      }\n\n      // Check that the number of arguments passed to the function", "entropy": 0.36865234375, "is_bug_line": false, "sus_score": 0.6695281863212585, "per_token_entropy": [0.3974609375, 0.80224609375, 0.517578125, 0.01110076904296875, 3.135204315185547e-05, 0.176025390625, 0.055145263671875, 0.1357421875, 0.6083984375, 0.032745361328125, 0.055389404296875, 0.00010180473327636719, 0.044677734375, 0.005496978759765625, 1.2060546875, 0.124267578125, 0.0130767822265625, 0.261962890625, 0.0002753734588623047, 0.1019287109375, 0.00013530254364013672, 0.1866455078125, 0.97900390625, 0.107177734375, 0.05487060546875, 0.0265045166015625, 0.0277099609375, 0.3857421875, 0.29541015625, 0.0006008148193359375, 0.00029969215393066406, 0.0012006759643554688, 8.285045623779297e-05, 0.004608154296875, 0.0028667449951171875, 0.07659912109375, 0.01560211181640625, 0.0012693405151367188, 0.0209197998046875, 0.0002849102020263672, 0.1654052734375, 0.6689453125, 2.4921875, 1.4384765625, 1.00390625, 2.044921875, 0.06341552734375, 0.69970703125, 1.99609375, 0.95361328125, 0.599609375, 0.302490234375], "tokens": [616, 653, 297, 571, 900, 27, 301, 291, 3639, 26, 102, 30, 310, 30, 2198, 43753, 81, 3908, 81, 5038, 2147, 30, 667, 620, 32, 3108, 1035, 291, 7279, 11851, 26, 102, 30, 310, 293, 291, 442, 45, 397, 320, 1687, 434, 3456, 688, 322, 1451, 432, 4209, 5403, 372, 322, 667]}
{"line_number": 1664, "line_type": "original", "code": "          checkInterfaceConflictProperties(t, n, functionPrivateName,", "entropy": 3.162109375, "is_bug_line": false, "sus_score": 0.6581465601921082, "per_token_entropy": [6.6328125, 3.66796875, 8.078125, 8.15625, 10.015625, 0.046142578125, 0.54541015625, 0.0121612548828125, 0.181884765625, 0.10931396484375, 0.42724609375, 5.27734375, 0.0142822265625, 1.1171875], "tokens": [2033, 1505, 3041, 19610, 3289, 26, 102, 30, 310, 30, 667, 6527, 558, 30]}
{"line_number": 1664, "line_type": "generated", "code": "\n      if (functionType.hasThisType()) {\n        report(t, n, FUNCTION_TYPE_WITH_THIS, childType.toString());\n      }\n\n      // If the function type is a property function, then it must be called\n      // in", "entropy": 0.6015625, "is_bug_line": false, "sus_score": 0.6581465601921082, "per_token_entropy": [0.481689453125, 0.61376953125, 0.26953125, 0.39697265625, 0.0120391845703125, 0.0062408447265625, 0.84521484375, 0.262451171875, 0.07672119140625, 0.751953125, 0.00434112548828125, 0.052886962890625, 2.1171875, 0.06414794921875, 0.037261962890625, 6.687641143798828e-05, 0.0240936279296875, 0.00919342041015625, 1.2890625, 0.0004017353057861328, 1.3662109375, 0.083251953125, 0.224365234375, 3.5643577575683594e-05, 0.056610107421875, 0.576171875, 0.5029296875, 0.01351165771484375, 0.0181121826171875, 0.0016698837280273438, 0.0199432373046875, 0.1474609375, 0.00014519691467285156, 0.376220703125, 0.4541015625, 2.857421875, 0.78173828125, 0.33837890625, 1.3642578125, 0.83935546875, 1.65234375, 2.58203125, 2.443359375, 0.375732421875, 0.736328125, 1.6357421875, 1.26171875, 0.55517578125, 0.53515625, 0.25439453125, 0.00278472900390625, 1.9111328125], "tokens": [397, 415, 308, 1126, 620, 32, 2040, 2272, 620, 1157, 301, 291, 3639, 26, 102, 30, 310, 30, 17747, 81, 2319, 81, 12003, 81, 25339, 30, 2838, 620, 32, 3108, 1035, 397, 320, 1687, 434, 1670, 322, 667, 827, 438, 312, 2804, 667, 30, 1615, 561, 2298, 526, 3823, 397, 434, 328]}
{"line_number": 1662, "line_type": "original", "code": "        for (ObjectType interfaceType : functionType.getExtendedInterfaces()) {", "entropy": 1.357421875, "is_bug_line": false, "sus_score": 0.6578571796417236, "per_token_entropy": [5.2734375, 4.41796875, 0.00908660888671875, 5.12890625, 2.197265625, 0.27490234375, 0.392578125, 0.794921875, 0.0014429092407226562, 0.1492919921875, 0.1864013671875, 1.5107421875, 0.0010919570922851562, 0.006771087646484375, 0.00736236572265625], "tokens": [351, 436, 308, 15898, 2568, 620, 499, 667, 620, 32, 371, 14861, 12295, 1157, 301]}
{"line_number": 1662, "line_type": "generated", "code": "\n      if (functionType.isConstructor() ||\n          functionType.isInterface() ||\n          functionType.isEnum()) {\n        // Constructors, interfaces, and enums are not callable\n        report(t, n, NOT_CALLABLE, childType.", "entropy": 0.398193359375, "is_bug_line": false, "sus_score": 0.6578571796417236, "per_token_entropy": [0.2266845703125, 1.349609375, 0.371337890625, 0.34130859375, 0.052001953125, 0.017120361328125, 0.21044921875, 0.599609375, 0.75439453125, 2.064453125, 0.9677734375, 0.484619140625, 0.0278167724609375, 0.0012006759643554688, 0.1231689453125, 0.1910400390625, 0.275634765625, 0.0723876953125, 0.0222015380859375, 0.2159423828125, 0.0202484130859375, 0.0008120536804199219, 0.10296630859375, 1.6806640625, 1.16015625, 0.002105712890625, 0.048187255859375, 0.96630859375, 1.0517578125, 0.86328125, 0.1915283203125, 0.54248046875, 0.10626220703125, 0.0777587890625, 1.2939453125, 1.12109375, 1.0400390625, 0.892578125, 0.34521484375, 0.0166778564453125, 0.0133056640625, 6.437301635742188e-05, 0.01201629638671875, 0.001689910888671875, 0.58740234375, 0.00013625621795654297, 0.01093292236328125, 7.462501525878906e-05, 0.038330078125, 0.1419677734375, 0.00592041015625, 0.004852294921875], "tokens": [397, 415, 308, 1126, 620, 32, 297, 7932, 346, 1276, 616, 667, 620, 32, 297, 3041, 346, 1276, 616, 667, 620, 32, 297, 2759, 1157, 301, 291, 434, 34758, 30, 14091, 30, 461, 38923, 884, 646, 20695, 291, 3639, 26, 102, 30, 310, 30, 2370, 81, 5038, 2147, 30, 2838, 620, 32]}
{"line_number": 1644, "line_type": "original", "code": "    } else if (functionType.isInterface()) {", "entropy": 1.2451171875, "is_bug_line": false, "sus_score": 0.6463820934295654, "per_token_entropy": [5.19921875, 1.9521484375, 1.0048828125, 0.1512451171875, 0.027374267578125, 4.359375, 0.0921630859375, 0.277587890625, 0.1873779296875, 1.3857421875, 0.25830078125, 0.045684814453125], "tokens": [264, 320, 813, 415, 308, 1126, 620, 32, 297, 3041, 1157, 301]}
{"line_number": 1644, "line_type": "generated", "code": "\n      // Check for a constructor call\n      if (functionType.isConstructor()) {\n        ObjectType prototype = functionType.getPrototype();\n        if (prototype.isFunctionType()) {\n          FunctionType constructor = prototype.toMaybeFunctionType();\n          if (constructor.", "entropy": 0.5576171875, "is_bug_line": false, "sus_score": 0.6463820934295654, "per_token_entropy": [0.2447509765625, 0.8486328125, 1.970703125, 2.19140625, 3.09765625, 2.388671875, 0.5517578125, 1.486328125, 0.34326171875, 0.05718994140625, 0.46240234375, 0.0001786947250366211, 0.015289306640625, 0.032989501953125, 0.00576019287109375, 0.1640625, 0.0008497238159179688, 0.056365966796875, 2.05859375, 3.220703125, 0.28857421875, 0.0762939453125, 2.8967857360839844e-05, 0.0002689361572265625, 0.134033203125, 0.005306243896484375, 0.005962371826171875, 0.160400390625, 0.6435546875, 0.298828125, 0.281494140625, 1.07421875, 1.1015625, 0.69482421875, 0.429443359375, 0.0006670951843261719, 0.01424407958984375, 0.84130859375, 0.00293731689453125, 1.08203125, 1.2900390625, 0.07501220703125, 0.00041985511779785156, 0.0357666015625, 0.0042572021484375, 0.0042724609375, 0.0004506111145019531, 0.1279296875, 0.55224609375, 0.339599609375, 0.1397705078125, 0.0899658203125], "tokens": [397, 434, 3456, 436, 312, 4374, 1476, 397, 415, 308, 1126, 620, 32, 297, 7932, 1157, 301, 291, 42562, 21666, 280, 667, 620, 32, 371, 17534, 473, 291, 415, 308, 3889, 32, 39504, 620, 1157, 301, 616, 4540, 620, 4374, 280, 21666, 32, 452, 13257, 44334, 473, 616, 415, 308, 9430, 32]}
{"line_number": 1604, "line_type": "original", "code": "    if (functionType.isConstructor()) {", "entropy": 1.251953125, "is_bug_line": false, "sus_score": 0.6441932916641235, "per_token_entropy": [5.21484375, 2.8125, 0.2415771484375, 0.40673828125, 0.0267486572265625, 0.02685546875, 0.7412109375, 2.75390625, 0.274658203125, 0.01885986328125], "tokens": [264, 415, 308, 1126, 620, 32, 297, 7932, 1157, 301]}
{"line_number": 1604, "line_type": "generated", "code": "\n      ObjectType base = functionType.getSuperClass();\n      if (base!= null &&\n          base.getConstructor()!= getNativeType(OBJECT_FUNCTION_TYPE)) {\n        compiler.report(\n            t.makeError(n, CONFLICT", "entropy": 0.324462890625, "is_bug_line": false, "sus_score": 0.6441932916641235, "per_token_entropy": [0.79638671875, 2.185546875, 1.9599609375, 2.52734375, 0.1343994140625, 0.0006480216979980469, 0.00565338134765625, 0.1829833984375, 0.82080078125, 0.1273193359375, 0.314208984375, 0.068115234375, 0.418212890625, 0.057159423828125, 0.0286407470703125, 0.2373046875, 0.246826171875, 0.68359375, 1.841796875, 0.490966796875, 0.168701171875, 0.2763671875, 0.342529296875, 0.031097412109375, 0.041534423828125, 1.04296875, 0.0005135536193847656, 0.00201416015625, 0.0006146430969238281, 0.036285400390625, 0.0004534721374511719, 0.0036792755126953125, 0.00057220458984375, 0.0015020370483398438, 0.78369140625, 0.0014543533325195312, 0.0174560546875, 0.64794921875, 1.5735626220703125e-05, 0.0008134841918945312, 0.0005536079406738281, 0.25830078125, 0.0008044242858886719, 0.0005650520324707031, 0.00261688232421875, 0.00020372867584228516, 0.00043892860412597656, 0.0129852294921875, 0.0008516311645507812, 0.062164306640625, 0.0005135536193847656, 8.58306884765625e-06], "tokens": [397, 42562, 1695, 280, 667, 620, 32, 371, 11069, 1339, 473, 397, 415, 308, 1439, 863, 744, 962, 616, 1695, 32, 371, 7932, 346, 863, 622, 6134, 620, 26, 8460, 81, 9842, 81, 2319, 490, 301, 291, 8980, 32, 3734, 26, 324, 273, 32, 2682, 924, 26, 96, 30, 2198, 34033, 935]}
{"line_number": 1501, "line_type": "original", "code": "   * @param n The node being visited.", "entropy": 1.6748046875, "is_bug_line": false, "sus_score": 0.6410992741584778, "per_token_entropy": [6.05859375, 7.0078125, 1.59765625, 0.2080078125, 1.3515625, 0.2222900390625, 0.2064208984375, 0.07513427734375, 0.0032329559326171875, 0.0244598388671875], "tokens": [261, 319, 477, 753, 310, 886, 1541, 3998, 21286, 32]}
{"line_number": 1501, "line_type": "generated", "code": "\n    }\n  }\n\n  /**\n   * Visits a CALL node.\n   */\n  private void visitCall(NodeTraversal t, Node n) {\n    Node callee = n.getFirstChild();\n    JSType type = getJSType(callee).restrict", "entropy": 0.12139892578125, "is_bug_line": false, "sus_score": 0.6410992741584778, "per_token_entropy": [0.229248046875, 0.026092529296875, 0.06732177734375, 0.000682830810546875, 0.1087646484375, 0.11468505859375, 0.019378662109375, 0.00017774105072021484, 0.56396484375, 0.0020313262939453125, 0.324462890625, 0.67138671875, 0.146240234375, 0.09344482421875, 0.05401611328125, 0.39208984375, 0.0023403167724609375, 0.01056671142578125, 0.0024394989013671875, 0.0004963874816894531, 0.00107574462890625, 0.0195159912109375, 0.0025634765625, 0.0012769699096679688, 0.0011005401611328125, 6.592273712158203e-05, 0.0008368492126464844, 0.0226287841796875, 0.0158538818359375, 0.0018310546875, 0.083251953125, 0.5205078125, 0.5810546875, 8.463859558105469e-06, 0.053009033203125, 0.0221099853515625, 0.0001367330551147461, 0.01018524169921875, 0.00026035308837890625, 0.00836944580078125, 0.132568359375, 0.5224609375, 0.0007281303405761719, 0.392333984375, 0.0171966552734375, 0.028594970703125, 0.00335693359375, 4.887580871582031e-06, 0.0006809234619140625, 0.0023899078369140625, 1.033203125, 0.00341796875], "tokens": [284, 320, 334, 320, 719, 1022, 664, 319, 6255, 1507, 312, 16084, 1541, 32, 664, 569, 334, 945, 763, 7725, 1853, 26, 1212, 35699, 273, 30, 4004, 310, 27, 301, 284, 4004, 2182, 13369, 280, 310, 32, 25657, 2931, 473, 284, 7750, 620, 827, 280, 622, 4624, 620, 26, 29203, 547, 20757]}
{"line_number": 637, "line_type": "original", "code": "        // often do this if they think their type annotations screwed up.", "entropy": 5.0625, "is_bug_line": false, "sus_score": 0.621592104434967, "per_token_entropy": [4.73046875, 1.8359375, 13.2734375, 9.5625, 3.72265625, 5.70703125, 3.947265625, 6.76953125, 4.046875, 3.1640625, 5.4375, 11.3125, 0.5126953125, 0.07415771484375, 1.8134765625], "tokens": [351, 434, 12270, 745, 458, 415, 2953, 3540, 3623, 827, 14695, 27115, 35257, 973, 32]}
{"line_number": 637, "line_type": "generated", "code": "\n          report(t, n, SUSPICIOUS_COMPARISON,\n              leftType.toString(), rightType.toString());\n        }\n        ensureTyped(t, n, BOOLEAN_TYPE);\n        break;\n\n      case Token.INSTANCEOF:", "entropy": 0.16845703125, "is_bug_line": false, "sus_score": 0.621592104434967, "per_token_entropy": [0.343017578125, 0.446533203125, 0.062744140625, 0.076171875, 0.00027751922607421875, 0.00792694091796875, 0.0009946823120117188, 2.49609375, 1.0478515625, 0.0008816719055175781, 9.059906005859375e-06, 0.047119140625, 0.85693359375, 0.0003604888916015625, 0.0002529621124267578, 6.186962127685547e-05, 0.0787353515625, 0.640625, 0.470458984375, 0.003368377685546875, 0.0242462158203125, 0.0193939208984375, 0.03643798828125, 0.281494140625, 1.5020370483398438e-05, 0.00021386146545410156, 0.001461029052734375, 0.06988525390625, 0.342529296875, 0.00026917457580566406, 0.162353515625, 0.04901123046875, 9.036064147949219e-05, 0.00010228157043457031, 0.0006456375122070312, 1.2993812561035156e-05, 0.0002989768981933594, 6.29425048828125e-05, 0.01629638671875, 1.6689300537109375e-06, 4.935264587402344e-05, 0.0025691986083984375, 0.00974273681640625, 0.006740570068359375, 7.712841033935547e-05, 0.04376220703125, 0.02813720703125, 0.0008540153503417969, 0.00016033649444580078, 1.0771484375, 3.4689903259277344e-05, 0.00024890899658203125], "tokens": [616, 3639, 26, 102, 30, 310, 30, 358, 2045, 25370, 32153, 81, 5762, 783, 1296, 567, 30, 1090, 2841, 620, 32, 3108, 1026, 2091, 620, 32, 3108, 1035, 291, 320, 291, 7279, 11851, 26, 102, 30, 310, 30, 36143, 81, 2319, 293, 291, 1626, 45, 1687, 1135, 6512, 32, 12452, 2109, 44]}
{"line_number": 997, "line_type": "original", "code": "      ensureTyped(t, assign, rightType);", "entropy": 2.091796875, "is_bug_line": false, "sus_score": 0.5817250609397888, "per_token_entropy": [5.80859375, 6.37890625, 0.030670166015625, 0.006450653076171875, 0.012054443359375, 0.0019006729125976562, 0.08795166015625, 4.671875, 4.453125, 0.162353515625, 1.3896484375], "tokens": [647, 7279, 11851, 26, 102, 30, 5313, 30, 2091, 620, 293]}
{"line_number": 997, "line_type": "generated", "code": "\n    }\n  }\n\n  private void checkDeclaredPropertyInheritance(\n      NodeTraversal t, Node assign, FunctionType functionType,\n      String property, JSDocInfo info, JSType propertyType) {\n    JSType objType = functionType.getInstanceType", "entropy": 0.20263671875, "is_bug_line": false, "sus_score": 0.5817250609397888, "per_token_entropy": [0.1531982421875, 0.0031223297119140625, 0.1937255859375, 0.0013685226440429688, 0.19189453125, 0.61474609375, 0.100830078125, 0.03759765625, 0.20068359375, 0.0018491744995117188, 0.0014867782592773438, 0.00144195556640625, 0.07110595703125, 0.0007596015930175781, 0.000530242919921875, 0.0018396377563476562, 3.063678741455078e-05, 0.045867919921875, 0.57080078125, 0.0031452178955078125, 0.1016845703125, 0.00023376941680908203, 0.70654296875, 0.08367919921875, 0.0005664825439453125, 0.429931640625, 0.0022430419921875, 0.366455078125, 0.0022029876708984375, 0.01000213623046875, 4.76837158203125e-07, -0.0, 4.589557647705078e-05, 0.006168365478515625, 0.0002529621124267578, 0.010040283203125, 3.6954879760742188e-06, 0.1358642578125, 0.0023784637451171875, 0.0011148452758789062, 0.0013341903686523438, 0.1114501953125, 1.96875, 0.0034008026123046875, 2.8828125, 0.1531982421875, 0.057159423828125, 0.61083984375, 0.00026488304138183594, 0.0394287109375, 0.5673828125, 0.08905029296875], "tokens": [284, 320, 334, 320, 719, 945, 763, 1505, 22050, 1653, 39631, 26, 397, 4004, 35699, 273, 30, 4004, 5313, 30, 4540, 620, 667, 620, 30, 397, 892, 2804, 30, 971, 3181, 542, 1120, 3099, 30, 7750, 620, 2804, 620, 27, 301, 284, 7750, 620, 2830, 620, 280, 667, 620, 32, 7426, 620]}
{"line_number": 1313, "line_type": "original", "code": "    //    InterfaceFoo.prototype.foobar;", "entropy": 4.0859375, "is_bug_line": false, "sus_score": 0.5801035165786743, "per_token_entropy": [3.1640625, 2.25390625, 4.9140625, 11.484375, 8.3046875, 0.93212890625, 1.2568359375, 0.1927490234375, 5.8359375, 2.490234375], "tokens": [264, 434, 264, 13199, 13611, 32, 3889, 32, 26018, 45]}
{"line_number": 1313, "line_type": "generated", "code": "\n    }\n\n    if (type.isUnknownType()) {\n      // The type is unknown, but if it's an unknown type,\n      // we don't need to do anything else.\n      return true;\n    }\n\n    if (type.isFunctionType())", "entropy": 0.8544921875, "is_bug_line": false, "sus_score": 0.5801035165786743, "per_token_entropy": [0.736328125, 0.01081085205078125, 0.7529296875, 1.2275390625, 0.16455078125, 0.2890625, 0.281005859375, 0.7744140625, 0.69384765625, 0.0008349418640136719, 0.505859375, 0.001953125, 0.0750732421875, 1.4482421875, 3.197265625, 1.3154296875, 1.64453125, 0.9921875, 1.1826171875, 1.1611328125, 2.923828125, 0.7734375, 0.84619140625, 2.609375, 2.068359375, 1.4697265625, 2.048828125, 1.7392578125, 0.0008454322814941406, 1.587890625, 1.8154296875, 7.95125961303711e-05, 1.6611328125, 0.0806884765625, 1.0380859375, 0.47802734375, 1.5322265625, 0.5185546875, 0.349365234375, 0.435546875, 1.1005859375, 0.0001169443130493164, 0.0413818359375, 0.0004031658172607422, 0.2044677734375, 0.9736328125, 0.10906982421875, 0.211181640625, 0.0275115966796875, 0.609375, 0.29736328125, 0.4296875], "tokens": [284, 320, 446, 415, 308, 681, 32, 297, 5842, 620, 1157, 301, 397, 434, 886, 827, 438, 8665, 30, 1273, 415, 561, 1182, 600, 8665, 827, 30, 397, 434, 996, 2800, 1330, 1849, 372, 745, 7991, 813, 32, 397, 442, 861, 45, 284, 320, 446, 415, 308, 681, 32, 39504, 620, 1157]}
{"line_number": 987, "line_type": "original", "code": "          leftType = var.getType();", "entropy": 3.640625, "is_bug_line": false, "sus_score": 0.5784375667572021, "per_token_entropy": [8.2109375, 9.9765625, 0.364013671875, 0.3662109375, 9.578125, 0.4130859375, 0.034088134765625, 0.1824951171875], "tokens": [2033, 2841, 620, 280, 773, 32, 10272, 473]}
{"line_number": 987, "line_type": "generated", "code": "\n    }\n  }\n\n  private void checkPropertyInheritanceOnGetprop(\n      NodeTraversal t, Node n, Node object, String property,\n      JSDocInfo info, JSType propertyType) {\n    // Inheritance checks for prototype properties.\n    //", "entropy": 0.2232666015625, "is_bug_line": false, "sus_score": 0.5784375667572021, "per_token_entropy": [0.493896484375, 0.002490997314453125, 0.259765625, 0.0008459091186523438, 0.1607666015625, 0.68896484375, 0.66064453125, 0.329833984375, 1.5107421875, 0.84423828125, 0.12213134765625, 0.71533203125, 0.724609375, 1.1484375, 0.1737060546875, 0.035430908203125, 0.041107177734375, 0.0017595291137695312, 2.6464462280273438e-05, 0.066650390625, 0.440185546875, 0.01049041748046875, 0.5322265625, 0.3212890625, 0.034088134765625, 0.178466796875, 0.115234375, 0.1572265625, 0.356201171875, 0.1522216796875, 2.7060508728027344e-05, 1.1920928955078125e-07, 0.00014495849609375, 0.00396728515625, 0.1390380859375, 0.055389404296875, 0.00017178058624267578, 0.1514892578125, 0.0015554428100585938, 0.06280517578125, 0.005138397216796875, 0.196044921875, 0.2384033203125, 0.251953125, 0.0005044937133789062, 0.0126190185546875, 0.0139617919921875, 0.0389404296875, 0.004367828369140625, 0.0222625732421875, 0.049591064453125, 0.08050537109375], "tokens": [284, 320, 334, 320, 719, 945, 763, 1505, 1653, 39631, 1484, 936, 4641, 26, 397, 4004, 35699, 273, 30, 4004, 310, 30, 4004, 1300, 30, 892, 2804, 30, 397, 971, 3181, 542, 1120, 3099, 30, 7750, 620, 2804, 620, 27, 301, 284, 434, 34274, 723, 9371, 436, 21666, 4308, 32, 284, 434]}
{"line_number": 1233, "line_type": "original", "code": "    if (superClassHasDeclaredProperty) {", "entropy": 1.9345703125, "is_bug_line": false, "sus_score": 0.5748925805091858, "per_token_entropy": [5.53515625, 0.289306640625, 0.0836181640625, 6.27734375, 4.19921875, 1.3359375, 1.2158203125, 0.02093505859375, 0.318359375, 0.06781005859375], "tokens": [264, 415, 308, 5266, 1339, 3993, 22050, 1653, 27, 301]}
{"line_number": 1233, "line_type": "generated", "code": "\n      if (maybeSuperInstanceType.isUnknownType()) {\n        return true;\n      }\n      if (maybeSuperInstanceType.isEmptyType()) {\n        return false;\n      }\n      ctor = maybeSuperInstanceType.getConstructor();\n    }\n  }", "entropy": 0.11041259765625, "is_bug_line": false, "sus_score": 0.5748925805091858, "per_token_entropy": [0.2861328125, 0.30419921875, 0.071044921875, 0.0743408203125, 0.0002142190933227539, 0.00017786026000976562, 1.1920928955078125e-06, 0.341064453125, 0.2310791015625, 0.3935546875, 0.0020122528076171875, 1.2373046875, 0.004550933837890625, 0.045989990234375, 0.1998291015625, 0.0438232421875, 9.489059448242188e-05, 0.01849365234375, 7.998943328857422e-05, 0.6826171875, 0.46875, 0.03125, 0.033905029296875, 7.510185241699219e-05, 1.4424324035644531e-05, 8.082389831542969e-05, 0.01030731201171875, 0.071044921875, 0.0029125213623046875, 0.032135009765625, 0.0004172325134277344, 0.00391387939453125, 0.06072998046875, 0.035186767578125, 0.00010097026824951172, 0.0062713623046875, 6.794929504394531e-05, 0.2369384765625, 0.2430419921875, 0.0008492469787597656, 0.0692138671875, 5.424022674560547e-05, 2.7894973754882812e-05, 4.029273986816406e-05, 0.002323150634765625, 0.09771728515625, 0.071044921875, 0.00478363037109375, 0.2359619140625, 0.0006341934204101562, 0.0823974609375, 0.00257110595703125], "tokens": [397, 415, 308, 16877, 11069, 1810, 620, 32, 297, 5842, 620, 1157, 301, 291, 442, 861, 45, 397, 320, 397, 415, 308, 16877, 11069, 1810, 620, 32, 6393, 620, 1157, 301, 291, 442, 901, 45, 397, 320, 397, 34484, 280, 8762, 11069, 1810, 620, 32, 371, 7932, 473, 284, 320, 334, 320]}
{"line_number": 1327, "line_type": "original", "code": "    if (assign.getLastChild().isFunction()", "entropy": 2.306640625, "is_bug_line": false, "sus_score": 0.5734975337982178, "per_token_entropy": [4.29296875, 1.90234375, 0.227783203125, 5.15625, 2.927734375, 3.21484375, 0.00592803955078125, 0.318115234375, 3.294921875, 1.7197265625], "tokens": [264, 415, 308, 5157, 32, 20197, 2931, 922, 39504, 346]}
{"line_number": 1327, "line_type": "generated", "code": "\n   *\n   * @param t The node traversal object that supplies context, such as the\n   * scope chain to use in name lookups as well as error reporting.\n   * @param n The node being visited.\n   * @param parent The parent", "entropy": 0.04351806640625, "is_bug_line": false, "sus_score": 0.5734975337982178, "per_token_entropy": [0.316650390625, 0.6376953125, 0.445068359375, 0.00605010986328125, 0.13623046875, 0.0240478515625, 0.052337646484375, 0.0254669189453125, 0.01251983642578125, 0.0025272369384765625, 0.00366973876953125, 0.0280914306640625, 0.002246856689453125, 5.841255187988281e-06, 0.0023441314697265625, 0.00919342041015625, 0.0033473968505859375, 0.0012722015380859375, 0.00818634033203125, 0.0111083984375, 0.0003006458282470703, 0.051177978515625, 0.00218963623046875, 0.005184173583984375, 0.0005478858947753906, 0.0012798309326171875, 0.002330780029296875, 0.00272369384765625, 6.079673767089844e-05, 0.0037517547607421875, 0.00013577938079833984, 9.584426879882812e-05, 0.0005292892456054688, 0.0014781951904296875, 0.0015134811401367188, 0.01971435546875, 0.000865936279296875, 0.0026569366455078125, 0.001697540283203125, 0.0297088623046875, 0.0074462890625, 0.095458984375, 0.00460052490234375, 0.00029158592224121094, 0.0022430419921875, 0.016845703125, 0.0494384765625, 0.003849029541015625, 0.1839599609375, 0.033782958984375, 0.005512237548828125, 0.0032939910888671875], "tokens": [664, 319, 664, 319, 477, 753, 273, 886, 1541, 34395, 1300, 688, 11066, 6827, 1619, 30, 3751, 619, 322, 664, 319, 4576, 8241, 372, 793, 328, 636, 2779, 9016, 619, 4487, 619, 1048, 15945, 32, 664, 319, 477, 753, 310, 886, 1541, 3998, 21286, 32, 664, 319, 477, 753, 2935, 886, 2935]}
{"line_number": 638, "line_type": "original", "code": "        //", "entropy": 4.1015625, "is_bug_line": false, "sus_score": 0.571841299533844, "per_token_entropy": [4.640625, 3.564453125], "tokens": [351, 434]}
{"line_number": 638, "line_type": "generated", "code": "\n          report(t, n, SUSPICIOUS_COMPARISON,\n              leftType.toString(), rightType.toString());\n        }\n        ensureTyped(t, n, BOOLEAN_TYPE);\n        break;\n\n      case Token.INSTANCEOF:", "entropy": 0.160888671875, "is_bug_line": false, "sus_score": 0.571841299533844, "per_token_entropy": [0.79736328125, 0.7548828125, 0.07763671875, 0.07232666015625, 0.00027060508728027344, 0.0060577392578125, 0.0010709762573242188, 1.9248046875, 0.908203125, 0.0009493827819824219, 9.775161743164062e-06, 0.0657958984375, 0.6240234375, 0.0002918243408203125, 0.00012552738189697266, 5.543231964111328e-05, 0.1058349609375, 0.58740234375, 0.57080078125, 0.002201080322265625, 0.0228424072265625, 0.024749755859375, 0.044097900390625, 0.29150390625, 1.9311904907226562e-05, 0.00010192394256591797, 0.0017824172973632812, 0.06005859375, 0.0867919921875, 1.6808509826660156e-05, 0.1513671875, 0.057525634765625, 9.453296661376953e-05, 0.0001728534698486328, 0.0006532669067382812, 2.3126602172851562e-05, 0.0002371072769165039, 6.341934204101562e-05, 0.0203399658203125, 2.7418136596679688e-06, 6.651878356933594e-05, 0.0026035308837890625, 0.00968170166015625, 0.0083770751953125, 0.0003578662872314453, 0.05029296875, 0.0302581787109375, 0.0007848739624023438, 0.00014317035675048828, 0.998046875, 3.349781036376953e-05, 0.00024008750915527344], "tokens": [616, 3639, 26, 102, 30, 310, 30, 358, 2045, 25370, 32153, 81, 5762, 783, 1296, 567, 30, 1090, 2841, 620, 32, 3108, 1026, 2091, 620, 32, 3108, 1035, 291, 320, 291, 7279, 11851, 26, 102, 30, 310, 30, 36143, 81, 2319, 293, 291, 1626, 45, 1687, 1135, 6512, 32, 12452, 2109, 44]}
{"line_number": 615, "line_type": "original", "code": "        ensureTyped(t, n, NUMBER_TYPE);", "entropy": 1.6552734375, "is_bug_line": false, "sus_score": 0.571050763130188, "per_token_entropy": [4.59375, 10.1796875, 0.038665771484375, 0.04388427734375, 0.038818359375, 0.00024187564849853516, 0.05804443359375, 0.00888824462890625, 4.70703125, 8.237361907958984e-05, 0.0003573894500732422, 0.19384765625], "tokens": [351, 7279, 11851, 26, 102, 30, 310, 30, 23801, 81, 2319, 293]}
{"line_number": 615, "line_type": "generated", "code": "\n              rightType.toString(), result.toString());\n        }\n\n        break;\n      }\n\n      case Token.LT:\n      case Token.GT:\n      case Token.LE:\n      case Token.GE: {\n        left = n.getFirstChild();\n        right", "entropy": 0.1341552734375, "is_bug_line": false, "sus_score": 0.571050763130188, "per_token_entropy": [0.4912109375, 0.3837890625, 0.0055999755859375, 0.00853729248046875, 0.0009160041809082031, 0.301025390625, 0.4326171875, 0.293212890625, 0.1500244140625, 0.2445068359375, 0.10369873046875, 0.0001761913299560547, 0.59765625, 1.8671875, 0.0005216598510742188, 0.00926971435546875, 0.0002092123031616211, 0.085205078125, 0.03924560546875, 0.0007543563842773438, 0.00011801719665527344, 0.91748046875, 0.0002334117889404297, 0.00782012939453125, 8.189678192138672e-05, 1.6927719116210938e-05, 7.152557373046875e-06, 0.104736328125, 3.2901763916015625e-05, 0.0146484375, 0.00015294551849365234, 1.919269561767578e-05, 7.152557373046875e-06, 0.042510986328125, 0.0005097389221191406, 0.0007529258728027344, 6.794929504394531e-06, 4.291534423828125e-06, 7.271766662597656e-06, 0.002716064453125, 0.0002684593200683594, 0.53076171875, 0.01490020751953125, 0.295654296875, 0.00838470458984375, 0.0035381317138671875, 8.58306884765625e-06, 0.004718780517578125, 3.6954879760742188e-06, 0.0002111196517944336, 0.0021152496337890625, 0.0087890625], "tokens": [1090, 2091, 620, 32, 3108, 1026, 1056, 32, 3108, 1035, 291, 320, 584, 1626, 45, 397, 320, 1687, 1135, 6512, 32, 11704, 44, 397, 1135, 6512, 32, 11502, 44, 397, 1135, 6512, 32, 815, 44, 397, 1135, 6512, 32, 3055, 44, 301, 291, 2841, 280, 310, 32, 25657, 2931, 473, 291, 2091]}
{"line_number": 1646, "line_type": "original", "code": "      for (ObjectType extInterface : functionType.getExtendedInterfaces()) {", "entropy": 1.3232421875, "is_bug_line": false, "sus_score": 0.5694957971572876, "per_token_entropy": [4.48828125, 5.3515625, 0.01355743408203125, 3.3828125, 5.5078125, 0.041534423828125, 0.1298828125, 0.398193359375, 0.0247039794921875, 0.296630859375, 0.162353515625, 0.0194549560546875, 0.0006852149963378906, 0.007198333740234375, 0.0169525146484375], "tokens": [647, 436, 308, 15898, 1447, 3041, 499, 667, 620, 32, 371, 14861, 12295, 1157, 301]}
{"line_number": 1646, "line_type": "generated", "code": "\n        if (functionJSDocInfo!= null &&\n            functionJSDocInfo.isExtern()) {\n          isExtern = true;\n        }\n      }\n\n      // Check for the @constructor tag\n      if (functionType.isConstructor()) {", "entropy": 0.38720703125, "is_bug_line": false, "sus_score": 0.5694957971572876, "per_token_entropy": [0.7236328125, 0.46337890625, 0.033294677734375, 0.09503173828125, 0.06787109375, 3.933906555175781e-06, -0.0, 1.2755393981933594e-05, 0.052001953125, 0.00018489360809326172, 1.1044921875, 0.6181640625, 0.144775390625, 0.00641632080078125, 8.785724639892578e-05, 1.8477439880371094e-05, 0.0001270771026611328, 0.0011739730834960938, 0.41064453125, 0.165283203125, 8.940696716308594e-06, 0.272216796875, 0.0012483596801757812, 0.0196075439453125, 0.07659912109375, 0.00017440319061279297, 1.0728836059570312e-06, 0.0013866424560546875, 0.00571441650390625, 0.0009036064147949219, 0.1007080078125, 0.0001819133758544922, 0.371337890625, 0.0682373046875, 0.4111328125, 1.30078125, 2.203125, 2.109375, 2.48828125, 2.25, 0.75634765625, 0.404052734375, 1.3115234375, 0.350341796875, 0.496826171875, 0.449462890625, 0.2052001953125, 0.00836944580078125, 0.031890869140625, 0.01343536376953125, 0.537109375, 0.0007662773132324219], "tokens": [291, 415, 308, 1126, 60, 3181, 542, 1120, 863, 744, 962, 324, 667, 60, 3181, 542, 1120, 32, 297, 571, 900, 1157, 301, 616, 438, 571, 900, 280, 861, 45, 291, 320, 397, 320, 1687, 434, 3456, 436, 322, 477, 9430, 2604, 397, 415, 308, 1126, 620, 32, 297, 7932, 1157, 301]}
{"line_number": 996, "line_type": "original", "code": "            t, assign, rightType, leftType, \"assignment\")) {", "entropy": 2.71875, "is_bug_line": false, "sus_score": 0.5689008235931396, "per_token_entropy": [5.625, 4.2578125, 2.232421875, 0.30908203125, 0.03826904296875, 5.7421875, 0.10772705078125, 1.423828125, 3.40625, 0.07354736328125, 0.2978515625, 5.87109375, 3.205078125, 7.96484375, 0.2406005859375], "tokens": [1468, 273, 30, 5313, 30, 2091, 620, 30, 2841, 620, 30, 313, 14794, 2131, 301]}
{"line_number": 996, "line_type": "generated", "code": "\n        // TODO(nicksantos): Handle the case where the prototype is a\n        // @struct.\n        //\n        // /** @constructor */\n        // function Foo() {\n        //   this.prototype.foo = 1;\n        // }\n       ", "entropy": 0.78076171875, "is_bug_line": false, "sus_score": 0.5689008235931396, "per_token_entropy": [2.287109375, 1.28515625, 1.2392578125, 0.026397705078125, 0.93310546875, 0.0001838207244873047, 0.0006208419799804688, 3.933906555175781e-06, 0.035369873046875, 3.154296875, 2.40234375, 0.6318359375, 0.3486328125, 1.1875, 1.8662109375, 0.7197265625, 1.1943359375, 1.5185546875, 0.0008244514465332031, 3.556640625, 1.421875, 0.97265625, 1.8447265625, 0.2998046875, 1.232421875, 0.00176239013671875, 1.8544921875, 0.166015625, 0.9775390625, 0.08984375, 0.2301025390625, 0.0003399848937988281, 0.298583984375, 0.5732421875, 0.0184783935546875, 0.88330078125, 0.474853515625, 0.0002551078796386719, 0.2470703125, 0.974609375, 0.02099609375, 0.82763671875, 0.1683349609375, 1.6015625, 0.07830810546875, 0.463134765625, 1.1748046875, 0.6640625, 0.1617431640625, 0.00818634033203125, 0.06927490234375, 0.404052734375], "tokens": [291, 434, 4296, 26, 96, 6758, 278, 10369, 711, 7968, 322, 1135, 2154, 322, 21666, 438, 312, 291, 434, 477, 1167, 32, 291, 434, 291, 434, 1022, 477, 9430, 569, 291, 434, 667, 17988, 346, 301, 291, 434, 261, 458, 32, 3889, 32, 3986, 280, 225, 35, 45, 291, 434, 320, 291]}
{"line_number": 646, "line_type": "original", "code": "        JSType rightTypeRestricted = rightType.restrictByNotNullOrUndefined();", "entropy": 1.1435546875, "is_bug_line": false, "sus_score": 0.567906379699707, "per_token_entropy": [4.9765625, 9.2578125, 0.00189208984375, 1.6845703125, 1.08203125, 0.430908203125, 0.01255035400390625, 0.55078125, 0.0008392333984375, 0.2288818359375, 0.0114593505859375, 0.002532958984375, 0.007965087890625, 0.0310211181640625, 0.0004451274871826172, 0.012115478515625], "tokens": [351, 7750, 620, 2091, 620, 37455, 280, 2091, 620, 32, 20757, 1083, 4926, 1527, 14339, 473]}
{"line_number": 646, "line_type": "generated", "code": "\n        }\n        ensureTyped(t, n, BOOLEAN_TYPE);\n        break;\n\n      case Token.INSTANCEOF:\n        left = n.getFirstChild();\n        right = n.getLastChild();\n        if (right.isString()) {\n          checkTypeof", "entropy": 0.169677734375, "is_bug_line": false, "sus_score": 0.567906379699707, "per_token_entropy": [0.431396484375, 0.0018968582153320312, 0.1431884765625, 0.08929443359375, 0.0002397298812866211, 0.0003268718719482422, 0.0012969970703125, 9.441375732421875e-05, 0.00021326541900634766, 5.638599395751953e-05, 0.0321044921875, 4.76837158203125e-06, 5.1021575927734375e-05, 0.0016078948974609375, 0.01273345947265625, 0.00972747802734375, 0.0004611015319824219, 0.04608154296875, 0.02587890625, 0.0006971359252929688, 0.00010383129119873047, 0.92919921875, 3.5643577575683594e-05, 0.000263214111328125, 0.21923828125, 1.119140625, 0.50341796875, 0.00829315185546875, 2.872943878173828e-05, 0.046112060546875, 0.00013625621795654297, 0.003131866455078125, 0.018951416015625, 0.209716796875, 0.0123443603515625, 0.005580902099609375, 7.367134094238281e-05, 0.0012454986572265625, 9.298324584960938e-06, 0.0021991729736328125, 0.4169921875, 1.240234375, 0.331787109375, 1.05078125, 0.034271240234375, 0.430419921875, 0.08013916015625, 0.000232696533203125, 0.00997161865234375, 1.0361328125, 0.283447265625, 0.026763916015625], "tokens": [291, 320, 291, 7279, 11851, 26, 102, 30, 310, 30, 36143, 81, 2319, 293, 291, 1626, 45, 1687, 1135, 6512, 32, 12452, 2109, 44, 291, 2841, 280, 310, 32, 25657, 2931, 473, 291, 2091, 280, 310, 32, 20197, 2931, 473, 291, 415, 308, 990, 32, 35690, 1157, 301, 616, 1505, 620, 1028]}
{"line_number": 3108, "line_type": "original", "code": "", "entropy": 0.25244140625, "is_bug_line": false, "sus_score": 0.5644609928131104, "per_token_entropy": [0.25244140625], "tokens": [203]}
{"line_number": 3108, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5644609928131104, "per_token_entropy": [], "tokens": []}
{"line_number": 1436, "line_type": "original", "code": "  }", "entropy": 1.7392578125, "is_bug_line": false, "sus_score": 0.5643013119697571, "per_token_entropy": [1.8330078125, 1.6455078125], "tokens": [225, 320]}
{"line_number": 1436, "line_type": "generated", "code": "\n   */\n  @Override\n  public void visit(NodeTraversal t, Node n, Node parent) {\n    JSType childType = getJSType(n.getFirstChild());\n    Node index = n.getLastChild();\n    JSType indexType = get", "entropy": 0.194091796875, "is_bug_line": false, "sus_score": 0.5643013119697571, "per_token_entropy": [0.72998046875, 0.4794921875, 0.005596160888671875, 1.1142578125, 0.001934051513671875, 0.01959228515625, 0.00838470458984375, 0.0018854141235351562, 0.01177215576171875, 0.036712646484375, 0.004001617431640625, 0.0001958608627319336, 0.00154876708984375, 1.430511474609375e-06, 0.1119384765625, 0.00749969482421875, 0.0247802734375, 0.06793212890625, 0.0164337158203125, 0.0004520416259765625, 0.00119781494140625, 0.11541748046875, 1.412109375, 7.56978988647461e-05, 1.474609375, 0.00920867919921875, 0.0316162109375, 0.04638671875, 0.0025005340576171875, 1.9073486328125e-06, 0.001251220703125, 0.01383209228515625, 0.1678466796875, 0.043487548828125, 0.0001207590103149414, 0.01708984375, 0.222900390625, 1.3720703125, 0.360595703125, 0.44482421875, 0.0077972412109375, 8.702278137207031e-05, 0.0113677978515625, 6.794929504394531e-06, 0.00525665283203125, 0.56640625, 0.7548828125, 0.0001207590103149414, 0.2423095703125, 0.003955841064453125, 0.043365478515625, 0.07562255859375], "tokens": [664, 569, 334, 477, 1788, 334, 562, 763, 7725, 26, 1212, 35699, 273, 30, 4004, 310, 30, 4004, 2935, 27, 301, 284, 7750, 620, 2838, 620, 280, 622, 4624, 620, 26, 96, 32, 25657, 2931, 1035, 284, 4004, 1650, 280, 310, 32, 20197, 2931, 473, 284, 7750, 620, 1650, 620, 280, 622]}
{"line_number": 1139, "line_type": "original", "code": "      }", "entropy": 2.46875, "is_bug_line": false, "sus_score": 0.5642822980880737, "per_token_entropy": [2.72265625, 2.212890625], "tokens": [647, 320]}
{"line_number": 1139, "line_type": "generated", "code": "\n        if (interfaceType == null) {\n          continue;\n        }\n        foundInterfaceProperty =\n            foundInterfaceProperty ||\n            interfaceType.getInstanceType().hasProperty(propertyName);\n      }\n    }\n\n    if (superClassHasProperty &&!superClassHas", "entropy": 0.2489013671875, "is_bug_line": false, "sus_score": 0.5642822980880737, "per_token_entropy": [1.443359375, 0.56396484375, 0.0927734375, 0.223388671875, 0.004009246826171875, 1.1455078125, 0.0009760856628417969, 0.333740234375, 0.0202484130859375, 0.04443359375, 0.269775390625, 0.0011997222900390625, 0.034637451171875, 0.0003399848937988281, 0.2496337890625, 0.83251953125, 4.971027374267578e-05, 8.869171142578125e-05, 0.326904296875, 0.65185546875, 0.1309814453125, 2.0265579223632812e-05, 8.463859558105469e-06, 0.0243988037109375, 0.157470703125, 0.098388671875, 0.0015468597412109375, 0.006748199462890625, 0.304931640625, 0.00027489662170410156, 0.003162384033203125, 0.00518798828125, 0.0017461776733398438, 0.0008225440979003906, 0.0066070556640625, 0.02349853515625, 0.4443359375, 9.846687316894531e-05, 0.09527587890625, 0.0004470348358154297, 0.23388671875, 0.9619140625, 0.381103515625, 0.9775390625, 0.147705078125, 0.0279693603515625, 0.291015625, 1.306640625, 0.5908203125, 0.282958984375, 0.1988525390625, 0.002239227294921875], "tokens": [291, 415, 308, 3337, 620, 610, 744, 27, 301, 616, 4036, 45, 291, 320, 291, 2431, 3041, 1653, 280, 324, 2431, 3041, 1653, 1276, 324, 2568, 620, 32, 7426, 620, 922, 2040, 1653, 26, 24948, 293, 397, 320, 284, 320, 446, 415, 308, 5266, 1339, 3993, 1653, 962, 653, 5266, 1339, 3993]}
{"line_number": 1324, "line_type": "original", "code": "              abstractMethodMessage));", "entropy": 5.640625, "is_bug_line": false, "sus_score": 0.5641604661941528, "per_token_entropy": [10.6796875, 10.1796875, 4.3671875, 1.341796875, 1.6416015625], "tokens": [2850, 5547, 1868, 1175, 876]}
{"line_number": 1324, "line_type": "generated", "code": "\n\n  /**\n   * Visits a GETPROP node.\n   *\n   * @param t The node traversal object that supplies context, such as the\n   * scope chain to use in name lookups as well as error reporting.\n   * @param n The", "entropy": 0.11456298828125, "is_bug_line": false, "sus_score": 0.5641604661941528, "per_token_entropy": [1.4052734375, 0.332763671875, 0.03875732421875, 0.00018393993377685547, 1.078125, 0.0015020370483398438, 0.3447265625, 1.5556640625, 0.1231689453125, 0.07440185546875, 0.26611328125, 0.08294677734375, 0.0826416015625, 0.140380859375, 0.00035691261291503906, 0.13427734375, 0.0246429443359375, 0.061737060546875, 0.01910400390625, 0.0120391845703125, 0.0021610260009765625, 0.0033435821533203125, 0.025238037109375, 0.0025730133056640625, 5.9604644775390625e-06, 0.0028705596923828125, 0.009368896484375, 0.0028228759765625, 0.001102447509765625, 0.00833892822265625, 0.00849151611328125, 0.00019156932830810547, 0.0491943359375, 0.0024166107177734375, 0.0052947998046875, 0.0006642341613769531, 0.0013036727905273438, 0.0020961761474609375, 0.0032329559326171875, 4.8160552978515625e-05, 0.0038089752197265625, 0.00013566017150878906, 7.092952728271484e-05, 0.0006170272827148438, 0.0012187957763671875, 0.001491546630859375, 0.0011463165283203125, 0.0010004043579101562, 0.002094268798828125, 0.0010366439819335938, 0.0279388427734375, 0.0068359375], "tokens": [719, 1022, 664, 319, 6255, 1507, 312, 6272, 15262, 1541, 32, 664, 319, 664, 319, 477, 753, 273, 886, 1541, 34395, 1300, 688, 11066, 6827, 1619, 30, 3751, 619, 322, 664, 319, 4576, 8241, 372, 793, 328, 636, 2779, 9016, 619, 4487, 619, 1048, 15945, 32, 664, 319, 477, 753, 310, 886]}
