{"line_number": 652, "line_type": "original", "code": "      // IDE-mode is defined to stop here, before the heavy rewriting begins.", "entropy": 4.09765625, "is_bug_line": false, "sus_score": 0.5624915957450867, "per_token_entropy": [6.05859375, 2.927734375, 8.3203125, 2.49609375, 0.50732421875, 3.19140625, 7.34375, 2.71875, 7.20703125, 2.173828125, 2.283203125, 3.298828125, 2.24609375, 8.5625, 7.6796875, 1.5595703125, 4.8828125, 0.302734375], "tokens": [647, 434, 16310, 31, 2816, 438, 3417, 372, 4719, 2442, 30, 2670, 322, 32389, 316, 20117, 30694, 32]}
{"line_number": 652, "line_type": "generated", "code": "\n    this.passes = passes;\n  }\n\n  public void setCompilerOptions(CompilerOptions options) {\n    this.options = options;\n  }\n\n  public void setCheckTypes(boolean checkTypes) {\n    this.checkTypes = checkTypes;\n ", "entropy": 0.347412109375, "is_bug_line": false, "sus_score": 0.5624915957450867, "per_token_entropy": [0.335693359375, 0.1326904296875, 0.00013113021850585938, 0.00577545166015625, 0.0004839897155761719, 0.00450897216796875, 0.0047760009765625, 0.2412109375, 0.0009393692016601562, 0.25439453125, 2.072265625, 0.5888671875, 1.8466796875, 2.513671875, 0.8994140625, 0.02947998046875, 0.061859130859375, 6.091594696044922e-05, 0.12078857421875, 0.001918792724609375, 0.012603759765625, 0.047760009765625, 0.6904296875, 0.0007481575012207031, 0.01184844970703125, 0.0133209228515625, 0.042144775390625, 0.023651123046875, 0.339111328125, 0.00045299530029296875, 0.14794921875, 0.9111328125, 0.935546875, 0.546875, 3.42578125, 0.358154296875, 0.0377197265625, 0.055572509765625, 0.276611328125, 0.0301361083984375, 0.00637054443359375, 0.0014028549194335938, 0.015533447265625, 0.74365234375, 0.00012052059173583984, 0.2110595703125, 0.0031261444091796875, 0.01471710205078125, 0.007110595703125, 0.0001552104949951172, 0.0010519027709960938, 0.0323486328125], "tokens": [284, 458, 32, 32373, 280, 18200, 45, 334, 320, 719, 562, 763, 739, 8115, 2031, 26, 8115, 2031, 2075, 27, 301, 284, 458, 32, 2184, 280, 2075, 45, 334, 320, 719, 562, 763, 739, 2140, 2424, 26, 4398, 1505, 2424, 27, 301, 284, 458, 32, 1553, 2424, 280, 1505, 2424, 45, 334]}
{"line_number": 1274, "line_type": "original", "code": "  }", "entropy": 2.732421875, "is_bug_line": false, "sus_score": 0.5499390363693237, "per_token_entropy": [4.296875, 1.1689453125], "tokens": [225, 320]}
{"line_number": 1274, "line_type": "generated", "code": "\n          stopTracer(tracer, \"toSourceArray\");\n        }\n      }\n    });\n  }\n\n  private void toSource(CodeBuilder cb, int i, Node scriptNode) {\n    cb.append(\"//@ sourceURL=\");\n    cb.append(script", "entropy": 0.256103515625, "is_bug_line": false, "sus_score": 0.5499390363693237, "per_token_entropy": [1.095703125, 0.07611083984375, 0.00015223026275634766, 0.0004887580871582031, 0.00015604496002197266, 0.0009355545043945312, 0.0004448890686035156, 0.001163482666015625, 5.245208740234375e-06, 0.019439697265625, 0.0031909942626953125, 0.057098388671875, 0.00020229816436767578, 0.01190185546875, 0.0004456043243408203, 0.02484130859375, 0.0005292892456054688, 0.0205535888671875, 0.00026726722717285156, 0.08795166015625, 0.9677734375, 0.17138671875, 0.01434326171875, 0.0005326271057128906, 0.0020389556884765625, 0.03466796875, 5.984306335449219e-05, 0.1466064453125, 0.00034165382385253906, 0.00571441650390625, 0.55712890625, 0.0006537437438964844, 0.0010099411010742188, 0.380859375, 0.07196044921875, 0.0005197525024414062, 0.048583984375, 0.04205322265625, 1.80859375, 0.00037741661071777344, 0.53955078125, 1.6796875, 3.125, 0.373291015625, 0.002338409423828125, 0.62548828125, 0.0283355712890625, 0.13525390625, 8.320808410644531e-05, 0.002895355224609375, 0.0177154541015625, 1.126953125], "tokens": [616, 4719, 24046, 26, 30209, 30, 313, 452, 2028, 1261, 724, 291, 320, 397, 320, 284, 1122, 334, 320, 719, 945, 763, 372, 2028, 26, 1227, 1796, 6596, 30, 629, 595, 30, 4004, 3261, 1212, 27, 301, 284, 6596, 32, 1689, 440, 33342, 1914, 2413, 31525, 284, 6596, 32, 1689, 26, 1423]}
{"line_number": 946, "line_type": "original", "code": "", "entropy": 3.626953125, "is_bug_line": false, "sus_score": 0.5490989685058594, "per_token_entropy": [3.626953125], "tokens": [203]}
{"line_number": 946, "line_type": "generated", "code": "\n  //------------------------------------------------------------------------\n  // Parse\n  //------------------------------------------------------------------------\n\n  /**\n   * Parses a source file.\n   *\n   * @param sourceFile The file to parse.\n   * @return The parse tree.\n   * @throws IOException If there is an error reading", "entropy": 0.52294921875, "is_bug_line": false, "sus_score": 0.5490989685058594, "per_token_entropy": [0.2171630859375, 0.93408203125, 0.056884765625, 0.0218048095703125, 0.0035305023193359375, 0.0006551742553710938, 3.216796875, 0.5244140625, 0.0001049041748046875, 0.0012979507446289062, 0.0002598762512207031, 0.086181640625, 0.935546875, 0.1783447265625, 0.00044608116149902344, 1.0810546875, 0.9306640625, 1.7822265625, 0.58203125, 1.2802734375, 0.331298828125, 0.1959228515625, 0.56689453125, 0.00345611572265625, 0.2359619140625, 0.18994140625, 0.94091796875, 1.466796875, 0.412109375, 1.4775390625, 0.2174072265625, 0.334716796875, 0.1839599609375, 0.04388427734375, 0.0689697265625, 0.033111572265625, 0.98046875, 0.37109375, 1.146484375, 0.0182342529296875, 0.6142578125, 0.0318603515625, 0.86181640625, 0.0843505859375, 0.0261688232421875, 0.4990234375, 0.76806640625, 1.1357421875, 0.59326171875, 1.0595703125, 0.33056640625, 0.1507568359375], "tokens": [334, 434, 2657, 430, 334, 434, 8661, 334, 434, 2657, 430, 719, 1022, 664, 319, 44280, 312, 1914, 803, 32, 664, 319, 664, 319, 477, 753, 1914, 974, 886, 803, 372, 3185, 32, 664, 319, 477, 601, 886, 3185, 4345, 32, 664, 319, 477, 5117, 6291, 1670, 2017, 438, 600, 1048, 9175]}
{"line_number": 1270, "line_type": "original", "code": "", "entropy": 3.94921875, "is_bug_line": false, "sus_score": 0.5467319488525391, "per_token_entropy": [3.94921875], "tokens": [203]}
{"line_number": 1270, "line_type": "generated", "code": "\n            sources[i] = cb.toString();\n          }\n          return sources;\n        } finally {\n          stopTracer(tracer, \"toSourceArray\");\n        }\n      }\n    });\n  }\n\n  private void toSource(CodeBuilder cb, int i,", "entropy": 0.06103515625, "is_bug_line": false, "sus_score": 0.5467319488525391, "per_token_entropy": [0.375, 0.28857421875, 0.0004279613494873047, 0.0008063316345214844, 0.0007104873657226562, 0.000583648681640625, 0.034271240234375, 0.0008077621459960938, 0.02056884765625, 0.006488800048828125, 0.293212890625, 0.00021278858184814453, 0.051361083984375, 0.01117706298828125, 0.00025963783264160156, 0.0003159046173095703, 0.0197601318359375, 0.0005388259887695312, 0.001537322998046875, 0.00022876262664794922, 0.00650787353515625, 0.0022220611572265625, 3.6597251892089844e-05, 0.00013172626495361328, 2.849102020263672e-05, 0.0004341602325439453, 0.00027632713317871094, 0.000537872314453125, 7.62939453125e-06, 0.017120361328125, 0.0008263587951660156, 0.0017347335815429688, 1.0967254638671875e-05, 0.003398895263671875, 0.00025153160095214844, 0.0175628662109375, 0.0005555152893066406, 0.0061798095703125, 0.00030350685119628906, 0.1416015625, 0.91455078125, 0.170654296875, 0.0111083984375, 0.00045990943908691406, 0.0021762847900390625, 0.03125, 6.246566772460938e-05, 0.1435546875, 0.0003807544708251953, 0.005817413330078125, 0.58740234375, 0.0008139610290527344], "tokens": [324, 10849, 77, 91, 79, 280, 6596, 32, 3108, 473, 616, 320, 616, 442, 10849, 45, 291, 320, 8295, 301, 616, 4719, 24046, 26, 30209, 30, 313, 452, 2028, 1261, 724, 291, 320, 397, 320, 284, 1122, 334, 320, 719, 945, 763, 372, 2028, 26, 1227, 1796, 6596, 30, 629, 595, 30]}
{"line_number": 1416, "line_type": "original", "code": "        if (root.getJSDocInfo() != null &&", "entropy": 1.228515625, "is_bug_line": false, "sus_score": 0.5396965146064758, "per_token_entropy": [6.55078125, 2.474609375, 0.1846923828125, 4.33203125, 0.11541748046875, 0.76171875, 0.018890380859375, 0.00014853477478027344, 4.76837158203125e-07, 6.258487701416016e-05, 1.337890625, 0.040008544921875, 0.00091552734375, 1.384765625], "tokens": [351, 415, 308, 2388, 32, 371, 60, 3181, 542, 1120, 346, 863, 744, 962]}
{"line_number": 1416, "line_type": "generated", "code": "\n   *\n   * @param n The root of the AST.\n   * @param sourceMap The source map builder. If not null, then the\n   *     generated code will be associated with the source map.\n   */\n  @Override\n  String toSource", "entropy": 0.55810546875, "is_bug_line": false, "sus_score": 0.5396965146064758, "per_token_entropy": [0.27099609375, 0.296142578125, 1.0283203125, 0.0167388916015625, 0.288330078125, 0.03826904296875, 0.5751953125, 0.66015625, 0.57275390625, 0.75, 0.024688720703125, 0.499267578125, 0.5341796875, 0.049591064453125, 0.0194244384765625, 0.007526397705078125, 0.02703857421875, 0.049835205078125, 0.026641845703125, 1.2841796875, 0.55908203125, 0.0313720703125, 1.7421875, 1.2275390625, 1.7685546875, 1.759765625, 0.09033203125, 0.039031982421875, 1.982421875, 1.0439453125, 1.1826171875, 0.0012493133544921875, 0.587890625, 0.61669921875, 1.109375, 0.345458984375, 0.84619140625, 1.8828125, 0.061859130859375, 0.434814453125, 0.947265625, 0.09124755859375, 0.642578125, 0.11199951171875, 1.1474609375, 0.0258331298828125, 1.4775390625, 0.077392578125, 0.0020847320556640625, 0.1806640625, 0.00023686885833740234, 0.0009355545043945312], "tokens": [664, 319, 664, 319, 477, 753, 310, 886, 3051, 432, 322, 16095, 32, 664, 319, 477, 753, 1914, 1208, 886, 1914, 1992, 4906, 32, 1670, 646, 744, 30, 1615, 322, 664, 319, 262, 4723, 1340, 1098, 526, 5746, 623, 322, 1914, 1992, 32, 664, 569, 334, 477, 1788, 334, 892, 372, 2028]}
{"line_number": 1440, "line_type": "original", "code": "          char lastChar = code.charAt(length - 1);", "entropy": 1.9423828125, "is_bug_line": false, "sus_score": 0.5389217734336853, "per_token_entropy": [9.4609375, 4.7734375, 0.175537109375, 0.006275177001953125, 0.2230224609375, 10.9453125, 0.401123046875, 0.7421875, 0.005184173583984375, 0.34765625, 0.01177978515625, 0.004482269287109375, 0.0726318359375, 0.0166473388671875], "tokens": [2033, 1351, 2401, 2659, 280, 1340, 32, 15611, 26, 1322, 429, 225, 35, 293]}
{"line_number": 1440, "line_type": "generated", "code": "\n    private int numLines = 0;\n    private int numColumns = 0;\n\n    public CodeBuilder() {\n    }\n\n    /**\n     * Appends a string to the buffer.\n     */\n    public CodeBuilder append(String s) {\n      sb", "entropy": 0.295166015625, "is_bug_line": false, "sus_score": 0.5389217734336853, "per_token_entropy": [0.375, 0.1976318359375, 0.1522216796875, 1.5830078125, 0.07452392578125, 0.28271484375, 0.005901336669921875, 0.1534423828125, 0.01020050048828125, 0.6923828125, 0.0242156982421875, 0.05755615234375, 0.802734375, 0.326171875, 0.060943603515625, 0.01143646240234375, 0.0008268356323242188, 0.0028362274169921875, 0.6083984375, 0.98828125, 0.370849609375, 0.00020515918731689453, 0.1656494140625, 0.35888671875, 0.5263671875, 0.0009508132934570312, 0.11395263671875, 1.3798828125, 0.30615234375, 0.0012922286987304688, 1.4921875, 0.001911163330078125, 0.7294921875, 0.6796875, 0.392822265625, 0.2318115234375, 0.328369140625, 0.29638671875, 0.2022705078125, 0.2286376953125, 0.00201416015625, 0.0260009765625, 0.03460693359375, 1.3709068298339844e-05, 0.0017690658569335938, 0.0028667449951171875, 0.036041259765625, 0.28759765625, 0.0027866363525390625, 0.0005970001220703125, 0.050506591796875, 0.681640625], "tokens": [284, 945, 629, 1929, 8683, 280, 225, 34, 45, 284, 945, 629, 1929, 7627, 280, 225, 34, 45, 446, 562, 4402, 1796, 346, 301, 284, 320, 446, 1022, 275, 319, 1995, 1494, 312, 802, 372, 322, 3112, 32, 275, 569, 284, 562, 4402, 1796, 5489, 26, 652, 309, 27, 301, 397, 6115]}
{"line_number": 1034, "line_type": "original", "code": "  @Override", "entropy": 1.4814453125, "is_bug_line": false, "sus_score": 0.5361543893814087, "per_token_entropy": [2.833984375, 1.603515625, 0.007511138916015625], "tokens": [225, 477, 1788]}
{"line_number": 1034, "line_type": "generated", "code": "\n\n  /**\n   * Parses and type checks a JavaScript file.\n   *\n   * @param externs An externs file to parse in addition to the file\n   *     to parse.\n   * @param js An input stream to parse.\n   * @param", "entropy": 0.79150390625, "is_bug_line": false, "sus_score": 0.5361543893814087, "per_token_entropy": [1.02734375, 1.388671875, 0.485595703125, 0.0005555152893066406, 1.9521484375, 2.833984375, 1.32421875, 0.37548828125, 1.044921875, 1.8271484375, 0.67333984375, 0.5029296875, 0.26611328125, 0.255615234375, 0.176025390625, 0.00313568115234375, 0.2176513671875, 0.30810546875, 1.7265625, 0.0295562744140625, 1.484375, 0.904296875, 0.10308837890625, 0.2432861328125, 1.6748046875, 1.1875, 2.53125, 0.029327392578125, 0.01654052734375, 0.464599609375, 2.1484375, 2.13671875, 0.0252532958984375, 0.265625, 1.3544921875, 0.5146484375, 0.290771484375, 0.447265625, 0.1824951171875, 0.082763671875, 0.51318359375, 2.30859375, 0.9423828125, 0.1064453125, 0.8125, 1.978515625, 0.9658203125, 0.45458984375, 0.1085205078125, 0.0889892578125, 0.034820556640625, 0.34228515625], "tokens": [719, 1022, 664, 319, 44280, 461, 827, 9371, 312, 9657, 803, 32, 664, 319, 664, 319, 477, 753, 12098, 101, 2244, 12098, 101, 803, 372, 3185, 328, 10879, 372, 322, 803, 664, 319, 262, 372, 3185, 32, 664, 319, 477, 753, 4060, 2244, 1509, 3443, 372, 3185, 32, 664, 319, 477, 753]}
{"line_number": 1025, "line_type": "original", "code": "", "entropy": 3.46484375, "is_bug_line": false, "sus_score": 0.5359524488449097, "per_token_entropy": [3.46484375], "tokens": [203]}
{"line_number": 1025, "line_type": "generated", "code": "    return typeValidator;\n  }\n\n  @Override\n  public Node getRoot() {\n    return root;\n  }\n\n  @Override\n  public Node getExternsRoot() {\n    return externsRoot;\n  }\n\n  @Override\n  public Iterable<Compiler", "entropy": 0.329345703125, "is_bug_line": false, "sus_score": 0.5359524488449097, "per_token_entropy": [1.08203125, 0.533203125, 0.5166015625, 0.0114288330078125, 0.0509033203125, 0.1419677734375, 0.0003924369812011719, 0.269775390625, 0.1165771484375, 0.006717681884765625, 0.001369476318359375, 0.5791015625, 3.15234375, 0.814453125, 0.8779296875, 0.0162506103515625, 0.00038743019104003906, 0.044921875, 0.103271484375, 0.43603515625, 0.035491943359375, 0.00942230224609375, 0.00011479854583740234, 0.11962890625, 0.132568359375, 0.005828857421875, 0.0023403167724609375, 0.238525390625, 1.3466796875, 0.204833984375, 2.072265625, -0.0, 0.6025390625, 0.00669097900390625, 0.0014200210571289062, 0.00030994415283203125, 0.01251983642578125, 0.0171966552734375, 0.0029773712158203125, 0.00019288063049316406, 0.00047397613525390625, 0.0026092529296875, 0.0190277099609375, 7.259845733642578e-05, 0.121337890625, 0.08441162109375, 0.0031223297119140625, 0.0021209716796875, 0.216796875, 2.984375, 0.046905517578125, 0.08050537109375], "tokens": [264, 442, 827, 7063, 45, 334, 320, 719, 477, 1788, 334, 562, 4004, 622, 4058, 346, 301, 284, 442, 3051, 45, 334, 320, 719, 477, 1788, 334, 562, 4004, 622, 571, 900, 101, 4058, 346, 301, 284, 442, 12098, 101, 4058, 45, 334, 320, 719, 477, 1788, 334, 562, 19209, 46, 8115]}
{"line_number": 1963, "line_type": "original", "code": "  public void setState(IntermediateState state) {", "entropy": 1.2529296875, "is_bug_line": false, "sus_score": 0.534325361251831, "per_token_entropy": [2.328125, 3.03515625, 1.04296875, 5.453125, 0.36279296875, 0.1529541015625, 0.00023615360260009766, 0.0236968994140625, 0.041168212890625, 0.0919189453125], "tokens": [225, 562, 763, 21914, 26, 38179, 1078, 1603, 27, 301]}
{"line_number": 1963, "line_type": "generated", "code": "\n  /**\n   * Sets the global variable references to the given map.\n   */\n  public void setGlobalVarReferences(ReferenceMap refMap) {\n    globalRefMap = refMap;\n  }", "entropy": 0.45166015625, "is_bug_line": false, "sus_score": 0.534325361251831, "per_token_entropy": [0.52880859375, 1.5205078125, 0.2396240234375, 0.0005068778991699219, 2.533203125, 0.493896484375, 2.134765625, 0.9873046875, 2.03515625, 1.5458984375, 0.50830078125, 0.75732421875, 0.625, 0.28173828125, 0.39453125, 0.273681640625, 0.042694091796875, 0.6259765625, 0.02606201171875, 0.03265380859375, 0.00415802001953125, 0.024444580078125, 0.060272216796875, 0.06610107421875, 0.271240234375, 0.0025691986083984375, 1.521484375, 0.0081329345703125, 0.019866943359375, 0.0010700225830078125, 0.00765228271484375, 0.320556640625, 0.034454345703125, 0.00020492076873779297, 0.000835418701171875, 0.09844970703125, 0.00015115737915039062, 0.0017538070678710938, 0.027679443359375, 0.0008020401000976562], "tokens": [334, 1022, 664, 319, 9013, 322, 3649, 2677, 10647, 372, 322, 2702, 1992, 32, 664, 569, 334, 562, 763, 739, 4455, 1881, 15661, 26, 3564, 1208, 2488, 1208, 27, 301, 284, 3649, 2084, 1208, 280, 2488, 1208, 45, 334, 320]}
{"line_number": 1433, "line_type": "original", "code": "        if (!code.isEmpty()) {", "entropy": 2.3125, "is_bug_line": false, "sus_score": 0.532845675945282, "per_token_entropy": [7.58984375, 2.162109375, 2.443359375, 4.828125, 0.13818359375, 0.923828125, 0.360107421875, 0.052032470703125], "tokens": [351, 415, 1429, 687, 32, 6393, 1157, 301]}
{"line_number": 1433, "line_type": "generated", "code": "\n\n  /**\n   * Returns the source map that was generated for the most recently parsed\n   * script.\n   *\n   * @return The source map, or null if no source map was generated.\n   */\n  public SourceMap getSourceMap() {\n    return", "entropy": 0.52783203125, "is_bug_line": false, "sus_score": 0.532845675945282, "per_token_entropy": [1.17578125, 0.53662109375, 0.1505126953125, 0.0008368492126464844, 2.466796875, 1.0283203125, 2.35546875, 0.4970703125, 1.5498046875, 0.82470703125, 0.73291015625, 1.8505859375, 0.4775390625, 0.9755859375, 1.0537109375, 1.8095703125, 0.34716796875, 0.0007920265197753906, 1.181640625, 0.1839599609375, 0.34716796875, 1.39453125, 0.26806640625, 0.0174560546875, 0.43603515625, 0.53125, 0.397705078125, 0.478759765625, 0.00560760498046875, 0.958984375, 0.1673583984375, 0.256591796875, 0.05572509765625, 0.8779296875, 0.425537109375, 0.0374755859375, 0.34814453125, 0.28857421875, 0.2308349609375, 0.00836181640625, 0.04241943359375, 0.005680084228515625, 0.34912109375, 0.1165771484375, 0.004802703857421875, 0.0714111328125, 0.0247802734375, 0.002269744873046875, 0.0020427703857421875, 0.000957489013671875, 0.005870819091796875, 0.09765625], "tokens": [719, 1022, 664, 319, 3759, 322, 1914, 1992, 688, 1597, 4723, 436, 322, 4630, 18821, 8436, 664, 319, 3261, 32, 664, 319, 664, 319, 477, 601, 886, 1914, 1992, 30, 556, 744, 415, 1289, 1914, 1992, 1597, 4723, 32, 664, 569, 334, 562, 6374, 1208, 622, 2028, 1208, 346, 301, 284, 442]}
{"line_number": 977, "line_type": "original", "code": "    if (inputsByName.containsKey(name)) {", "entropy": 1.6728515625, "is_bug_line": false, "sus_score": 0.5319625735282898, "per_token_entropy": [4.2890625, 0.66650390625, 0.02496337890625, 8.9296875, 0.5341796875, 0.061431884765625, 1.2099609375, 0.0108642578125, 2.275390625, 0.10430908203125, 0.300537109375], "tokens": [264, 415, 308, 8075, 9813, 32, 15943, 26, 426, 490, 301]}
{"line_number": 977, "line_type": "generated", "code": "\n    if (module!= null) {\n      module.replaceInput(oldInput, newInput);\n    }", "entropy": 0.20947265625, "is_bug_line": false, "sus_score": 0.5319625735282898, "per_token_entropy": [0.289794921875, 0.98779296875, 0.0208587646484375, 0.05377197265625, 0.146728515625, 0.004608154296875, 0.046630859375, 0.004444122314453125, 0.0533447265625, 0.80029296875, 0.0284881591796875, 1.0400390625, 0.95703125, 0.033905029296875, 0.053192138671875, 0.0006222724914550781, 0.007350921630859375, 0.0032501220703125, 0.0003094673156738281, 0.00787353515625, 0.0709228515625, 6.496906280517578e-05], "tokens": [284, 415, 308, 1647, 863, 744, 27, 301, 397, 2297, 32, 3227, 1612, 26, 1455, 1612, 30, 537, 1612, 293, 284, 320]}
{"line_number": 1154, "line_type": "original", "code": "              MISSING_ENTRY_ERROR, e.getMessage()));", "entropy": 3.662109375, "is_bug_line": false, "sus_score": 0.5303894877433777, "per_token_entropy": [4.4375, 15.796875, 0.05316162109375, 0.859375, 11.140625, 0.13525390625, 0.301025390625, 4.5546875, 5.421875, 0.1431884765625, 0.16552734375, 0.9345703125], "tokens": [2850, 44739, 11312, 81, 8711, 81, 2930, 30, 484, 32, 7719, 5073]}
{"line_number": 1154, "line_type": "generated", "code": "\n            return null;\n          }\n        }\n\n        // Set the input as the parent of the root node, so that\n        // we can traverse it later.\n        n.parent = input;\n\n        if (options.tracer.isOn()) {\n          tracker.", "entropy": 0.71044921875, "is_bug_line": false, "sus_score": 0.5303894877433777, "per_token_entropy": [1.1630859375, 0.083740234375, 0.0164947509765625, 0.00177764892578125, 0.0242462158203125, 7.82012939453125e-05, 0.130126953125, 0.00017392635345458984, 0.0648193359375, 1.49609375, 4.11328125, 0.76953125, 1.0517578125, 1.5810546875, 0.73095703125, 0.66015625, 0.77734375, 0.299560546875, 1.21875, 0.4951171875, 2.158203125, 0.5234375, 0.17822265625, 1.2138671875, 0.000858306884765625, 1.89453125, 0.269287109375, 2.982421875, 2.236328125, 1.41796875, 0.5517578125, 0.10302734375, 0.2122802734375, 0.0006289482116699219, 0.70458984375, 0.00646209716796875, 0.77001953125, 0.04656982421875, 0.27294921875, 1.5458984375, 0.0838623046875, 1.3154296875, 0.0007910728454589844, 2.802734375, 0.0782470703125, 0.0291748046875, 0.00360870361328125, 0.1431884765625, 0.006420135498046875, 0.023712158203125, 0.6845703125, 0.00572967529296875], "tokens": [324, 442, 744, 45, 616, 320, 291, 320, 584, 434, 1756, 322, 1509, 619, 322, 2935, 432, 322, 3051, 1541, 30, 1259, 688, 291, 434, 996, 883, 29046, 561, 6125, 32, 291, 310, 32, 2544, 280, 1509, 45, 584, 415, 308, 2184, 32, 30209, 32, 297, 1484, 1157, 301, 616, 16720, 32]}
{"line_number": 1439, "line_type": "original", "code": "          int length = code.length();", "entropy": 3.529296875, "is_bug_line": false, "sus_score": 0.5301535725593567, "per_token_entropy": [9.890625, 2.419921875, 2.66015625, 0.47998046875, 11.34375, 1.2294921875, 0.11187744140625, 0.100830078125], "tokens": [2033, 629, 3104, 280, 1340, 32, 1322, 473]}
{"line_number": 1439, "line_type": "generated", "code": "\n    private StringBuilder buf = new StringBuilder();\n    private int lineIndex;\n    private int columnIndex;\n\n    public CodeBuilder() {\n      this.lineIndex = 0;\n      this.columnIndex = 0;\n    }\n\n    public CodeBuilder append(String", "entropy": 0.277587890625, "is_bug_line": false, "sus_score": 0.5301535725593567, "per_token_entropy": [0.377685546875, 0.340087890625, 1.44140625, 0.88232421875, 0.51708984375, 0.01351165771484375, 0.0021648406982421875, 0.09405517578125, 0.4033203125, 0.052001953125, 0.238525390625, 0.6044921875, 0.525390625, 1.3310546875, 0.2149658203125, 0.0102386474609375, 0.03106689453125, 0.53076171875, 0.0180816650390625, 0.806640625, 0.8837890625, 0.10986328125, 9.655952453613281e-05, 0.104248046875, 0.20849609375, 0.280517578125, 0.26025390625, 0.90234375, 0.03875732421875, 0.0006914138793945312, 0.0003979206085205078, 0.025665283203125, 0.157958984375, 9.703636169433594e-05, 0.026092529296875, 0.0031490325927734375, 5.1856040954589844e-05, 9.691715240478516e-05, 4.9591064453125e-05, 0.0003490447998046875, 0.028411865234375, 0.0160980224609375, 0.00036835670471191406, 0.026519775390625, 0.0001010894775390625, 0.182861328125, 0.53173828125, 0.81591796875, 0.00013005733489990234, 1.23828125, 0.0253143310546875, 0.1282958984375], "tokens": [284, 945, 9706, 4845, 280, 537, 9706, 473, 284, 945, 629, 1628, 1284, 45, 284, 945, 629, 46452, 45, 446, 562, 4402, 1796, 346, 301, 397, 458, 32, 928, 1284, 280, 225, 34, 45, 397, 458, 32, 2592, 1284, 280, 225, 34, 45, 284, 320, 446, 562, 4402, 1796, 5489, 26, 652]}
{"line_number": 1295, "line_type": "original", "code": "            }", "entropy": 2.9453125, "is_bug_line": false, "sus_score": 0.529118001461029, "per_token_entropy": [3.2734375, 2.6171875], "tokens": [1468, 320]}
{"line_number": 1295, "line_type": "generated", "code": "\n            continue;\n          }\n          toSource(cb, i, scriptNode);\n        }\n        return cb.toString();\n      }\n    });\n  }\n\n  /**\n   * Converts the parse tree for an input back to js code.\n   */\n  public String to", "entropy": 0.15673828125, "is_bug_line": false, "sus_score": 0.529118001461029, "per_token_entropy": [0.60107421875, 0.94580078125, 0.01378631591796875, 0.11407470703125, 0.0032501220703125, 0.114501953125, 0.405029296875, 0.0006356239318847656, 0.002735137939453125, 0.0010700225830078125, 0.00026869773864746094, 0.03546142578125, 0.01015472412109375, 0.0032825469970703125, 1.430511474609375e-05, 0.00878143310546875, 0.29345703125, 0.0005021095275878906, 0.0260467529296875, 0.0301513671875, 0.0022125244140625, 6.985664367675781e-05, 0.002109527587890625, 0.001888275146484375, 0.004161834716796875, 0.0001131296157836914, 0.0071258544921875, 0.0008907318115234375, 0.0045318603515625, 0.00020313262939453125, 0.12127685546875, 0.71728515625, 0.06964111328125, 0.001041412353515625, 0.3935546875, 1.0859375, 0.29541015625, 0.0611572265625, 0.1617431640625, 1.7509765625, 0.435302734375, 0.033660888671875, 0.001125335693359375, 0.00783538818359375, 0.0055389404296875, 0.034149169921875, 0.0095672607421875, 0.037506103515625, 0.0017185211181640625, 0.264892578125, 0.0203094482421875, 0.0017042160034179688], "tokens": [324, 4036, 45, 616, 320, 616, 372, 2028, 26, 2500, 30, 595, 30, 3261, 1212, 293, 291, 320, 291, 442, 6596, 32, 3108, 473, 397, 320, 284, 1122, 334, 320, 719, 1022, 664, 319, 25337, 322, 3185, 4345, 436, 600, 1509, 1751, 372, 4060, 1340, 32, 664, 569, 334, 562, 892, 372]}
{"line_number": 2096, "line_type": "original", "code": "", "entropy": 0.29296875, "is_bug_line": false, "sus_score": 0.5287408828735352, "per_token_entropy": [0.29296875], "tokens": [203]}
{"line_number": 2096, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5287408828735352, "per_token_entropy": [], "tokens": []}
{"line_number": 1973, "line_type": "original", "code": "  }", "entropy": 3.037109375, "is_bug_line": false, "sus_score": 0.5286146402359009, "per_token_entropy": [1.9248046875, 4.1484375], "tokens": [225, 320]}
{"line_number": 1973, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5286146402359009, "per_token_entropy": [], "tokens": []}
{"line_number": 1959, "line_type": "original", "code": "  /**", "entropy": 5.02734375, "is_bug_line": false, "sus_score": 0.5276243090629578, "per_token_entropy": [2.55859375, 7.49609375], "tokens": [225, 1022]}
{"line_number": 1959, "line_type": "generated", "code": "\n  }\n\n  @Override\n  void updateExternVarReferences(Map<Var, ReferenceCollection> refMapPatch,\n      Node collectionRoot) {\n    Preconditions.checkState(collectionRoot.getType() == Token.SCRIPT\n        || collectionRoot.getType()", "entropy": 0.172607421875, "is_bug_line": false, "sus_score": 0.5276243090629578, "per_token_entropy": [0.65380859375, 0.224853515625, 0.48291015625, 0.2548828125, 0.036468505859375, 0.0015153884887695312, 1.30078125, 2.2578125, 1.8642578125, 1.9073486328125e-06, 0.490478515625, 0.1334228515625, 0.0049591064453125, 0.2200927734375, 0.0004723072052001953, 0.06903076171875, 0.0009493827819824219, 0.020111083984375, 0.00888824462890625, 0.00016951560974121094, 0.0767822265625, 0.0008769035339355469, 0.08013916015625, 0.11309814453125, 0.1328125, 0.045562744140625, 0.2066650390625, 0.0007290840148925781, 0.030120849609375, 0.0033626556396484375, 0.01300811767578125, 0.11895751953125, 9.179115295410156e-06, 0.00043892860412597656, 0.01512908935546875, 0.00380706787109375, 0.010772705078125, 1.0848045349121094e-05, 0.00467681884765625, 0.004665374755859375, 5.698204040527344e-05, 0.0011930465698242188, 0.0002524852752685547, 8.940696716308594e-06, 0.0151214599609375, 0.06597900390625, 0.0008320808410644531, 0.00017762184143066406, 0.0013265609741210938, 0.0001367330551147461, 2.09808349609375e-05, 0.0001672506332397461], "tokens": [334, 320, 719, 477, 1788, 334, 763, 1974, 571, 900, 1881, 15661, 26, 1208, 46, 1881, 30, 9494, 2256, 48, 2488, 1208, 9784, 30, 397, 4004, 4491, 4058, 27, 301, 284, 40596, 32, 1553, 1078, 26, 4170, 4058, 32, 10272, 346, 610, 6512, 32, 12210, 291, 1276, 4491, 4058, 32, 10272, 346]}
{"line_number": 1560, "line_type": "original", "code": "    PhaseOptimizer phaseOptimizer = new PhaseOptimizer(this, tracker);", "entropy": 1.4912109375, "is_bug_line": false, "sus_score": 0.5267028212547302, "per_token_entropy": [2.6484375, 5.08203125, 0.00824737548828125, 0.98583984375, 0.0338134765625, 0.035614013671875, 0.41845703125, 0.130859375, 3.421306610107422e-05, 0.074951171875, 1.2802734375, 1.13671875, 8.890625, 0.147705078125], "tokens": [264, 26159, 29248, 11225, 29248, 280, 537, 26159, 29248, 26, 578, 30, 16720, 293]}
{"line_number": 1560, "line_type": "generated", "code": "\n    if (options.devMode == DevMode.EVERY_PASS) {\n      sanityCheck = new SanityCheck(this);\n    }\n\n    // If we are not running in a browser, we can't use the browser's\n    // native Function", "entropy": 0.7783203125, "is_bug_line": false, "sus_score": 0.5267028212547302, "per_token_entropy": [0.257568359375, 0.80712890625, 0.0799560546875, 0.1312255859375, 0.0011587142944335938, 0.198974609375, 0.0006198883056640625, 0.229248046875, 0.0043792724609375, 1.8835067749023438e-05, 8.52346420288086e-05, 0.0201568603515625, 6.67572021484375e-06, 6.4373016357421875e-06, 0.0004508495330810547, 0.014862060546875, 0.0014781951904296875, 0.00331878662109375, 0.8017578125, 0.00716400146484375, 0.420654296875, 0.16748046875, 0.4716796875, 1.4781951904296875e-05, 0.0059051513671875, 0.347412109375, 0.462158203125, 0.172607421875, 0.2254638671875, 8.976459503173828e-05, 1.076171875, 1.4609375, 4.21484375, 1.56640625, 1.1630859375, 1.89453125, 2.4140625, 1.712890625, 1.3779296875, 1.53125, 0.447021484375, 1.2099609375, 1.8427734375, 1.6689453125, 1.833984375, 1.359375, 1.794921875, 0.83154296875, 1.37109375, 0.0014104843139648438, 1.6396484375, 3.23828125], "tokens": [284, 415, 308, 2184, 32, 1902, 2101, 610, 12801, 2101, 32, 55, 37237, 81, 9691, 27, 301, 397, 37090, 2140, 280, 537, 21100, 543, 2140, 26, 578, 293, 284, 320, 446, 434, 1670, 996, 884, 646, 3974, 328, 312, 5427, 30, 996, 883, 1330, 793, 322, 5427, 1182, 284, 434, 7555, 4540]}
{"line_number": 1081, "line_type": "original", "code": "  //------------------------------------------------------------------------", "entropy": 2.611328125, "is_bug_line": false, "sus_score": 0.5264986157417297, "per_token_entropy": [3.630859375, 0.380859375, 6.37109375, 0.05908203125], "tokens": [225, 434, 2657, 430]}
{"line_number": 1081, "line_type": "generated", "code": "      // Parse main js sources.\n      for (CompilerInput input : inputs) {\n        Node n = input.getAstRoot(this);\n        if (hasErrors()) {\n          return null;\n        }\n        jsRoot.addChildToBack(n);", "entropy": 0.091552734375, "is_bug_line": false, "sus_score": 0.5264986157417297, "per_token_entropy": [1.083984375, 0.294921875, 0.1702880859375, 0.417236328125, 1.0927734375, 0.040496826171875, 0.0209808349609375, 0.0440673828125, 0.1351318359375, 0.000576019287109375, 0.005100250244140625, 0.0006160736083984375, 0.0053253173828125, 0.0015840530395507812, 0.5341796875, 0.015716552734375, 0.0032176971435546875, 0.01335906982421875, 0.472412109375, 0.020111083984375, 0.007228851318359375, 0.057464599609375, 9.906291961669922e-05, 0.0033740997314453125, 0.004711151123046875, 6.556510925292969e-05, 0.0008873939514160156, 0.0013265609741210938, 0.00677490234375, 0.0245513916015625, 0.0194549560546875, 0.007465362548828125, 0.054656982421875, 7.641315460205078e-05, 0.005329132080078125, 0.00028896331787109375, 0.0011339187622070312, 0.007373809814453125, 0.0003044605255126953, 2.6106834411621094e-05, 0.0005297660827636719, 2.1457672119140625e-06, 0.0684814453125, 0.1102294921875, 8.130073547363281e-05, 0.00012099742889404297, 0.00011479854583740234, 2.586841583251953e-05, 0.00012493133544921875, 0.0001270771026611328, 0.00390625, 0.0021419525146484375], "tokens": [647, 434, 8661, 2575, 4060, 10849, 32, 397, 436, 308, 8115, 1612, 1509, 499, 7806, 27, 301, 291, 4004, 310, 280, 1509, 32, 371, 19511, 4058, 26, 578, 293, 291, 415, 308, 2040, 7352, 1157, 301, 616, 442, 744, 45, 291, 320, 291, 4060, 4058, 32, 21545, 705, 2495, 26, 96, 293]}
{"line_number": 1102, "line_type": "original", "code": "", "entropy": 3.9140625, "is_bug_line": false, "sus_score": 0.5262563824653625, "per_token_entropy": [3.9140625], "tokens": [203]}
{"line_number": 1102, "line_type": "generated", "code": "\n        }\n\n        // Re-order the inputs.\n        externs.clear();\n        externs.addAll(inputs.subList(0, externCount));\n        inputs.subList(externCount, inputs.size()).clear();", "entropy": 0.357421875, "is_bug_line": false, "sus_score": 0.5262563824653625, "per_token_entropy": [0.196533203125, 0.01444244384765625, 2.091796875, 0.87353515625, 2.263671875, 0.5986328125, 1.291015625, 0.3525390625, 0.476806640625, 1.29296875, 0.09033203125, 2.017578125, 0.10345458984375, 1.0009765625, 0.2464599609375, 0.0001837015151977539, 0.0157928466796875, 0.3037109375, 0.03411865234375, 0.037506103515625, 0.0027942657470703125, 0.002788543701171875, 0.05120849609375, 0.09722900390625, 0.96142578125, 0.0007991790771484375, 0.0005345344543457031, 0.01343536376953125, 0.00021648406982421875, 0.56005859375, 0.37353515625, 0.01163482666015625, 0.057647705078125, 0.08111572265625, 0.348388671875, 0.2509765625, 2.0503997802734375e-05, 0.00012242794036865234, 0.483154296875, 0.00536346435546875, 0.004001617431640625, 0.06793212890625, 0.0008320808410644531, 3.147125244140625e-05, 0.1082763671875, 0.0034542083740234375, 3.516674041748047e-05], "tokens": [291, 320, 584, 434, 902, 31, 1174, 322, 7806, 32, 291, 12098, 101, 32, 3815, 473, 291, 12098, 101, 32, 15120, 26, 8075, 32, 1113, 720, 26, 34, 30, 12098, 1534, 876, 291, 7806, 32, 1113, 720, 26, 4318, 1534, 30, 7806, 32, 891, 4251, 3815, 473]}
{"line_number": 1974, "line_type": "original", "code": "", "entropy": 2.578125, "is_bug_line": false, "sus_score": 0.5262298583984375, "per_token_entropy": [2.578125], "tokens": [203]}
{"line_number": 1974, "line_type": "generated", "code": "\n  /**\n   * @return A list of externs files that were used during the compilation.\n   */\n  public List<CompilerInput> getExterns() {\n    return externs;\n  }\n\n  /**\n   * @return A list of inputs that", "entropy": 0.560546875, "is_bug_line": false, "sus_score": 0.5262298583984375, "per_token_entropy": [0.375732421875, 1.8251953125, 0.26708984375, 0.0004298686981201172, 2.830078125, 0.5341796875, 2.34375, 1.81640625, 0.0635986328125, 2.78515625, 0.43798828125, 1.712890625, 1.7216796875, 1.1435546875, 1.4423828125, 1.724609375, 0.96337890625, 0.7578125, 0.264892578125, 0.170166015625, 0.160400390625, 0.01110076904296875, 0.6474609375, 0.12408447265625, 0.0159912109375, 0.5390625, 0.0002827644348144531, 0.0007371902465820312, 0.0181121826171875, 0.0159454345703125, 3.5762786865234375e-07, 0.79736328125, 0.08551025390625, 0.0006337165832519531, 0.00962066650390625, 0.025634765625, 0.089599609375, 0.00042176246643066406, 0.006145477294921875, 0.01140594482421875, 4.208087921142578e-05, 0.310302734375, 0.3046875, 0.054046630859375, 0.00035190582275390625, 0.462158203125, 0.04473876953125, 0.1978759765625, 0.0550537109375, 0.00467681884765625, 1.5361328125, 0.427001953125], "tokens": [334, 1022, 664, 319, 477, 601, 399, 1149, 432, 12098, 101, 2276, 688, 4528, 1654, 5929, 322, 16260, 32, 664, 569, 334, 562, 1682, 46, 8115, 1612, 48, 622, 571, 900, 101, 346, 301, 284, 442, 12098, 101, 45, 334, 320, 719, 1022, 664, 319, 477, 601, 399, 1149, 432, 7806, 688]}
