{"line_number": 679, "line_type": "original", "code": "     * @param rValue the function node. It must be a {@link Token#FUNCTION}.", "entropy": 1.7548828125, "is_bug_line": false, "sus_score": 0.719837486743927, "per_token_entropy": [6.4765625, 3.767578125, 0.61572265625, 0.1922607421875, 3.7734375, 0.06378173828125, 2.017578125, 0.884765625, 0.63427734375, 2.541015625, 5.71875, 2.3671875, 0.77685546875, 0.85888671875, 1.4091796875, 0.254150390625, 0.163818359375, 0.004047393798828125, 0.01155853271484375, 2.5625], "tokens": [262, 319, 477, 753, 540, 882, 322, 667, 1541, 32, 2030, 2298, 526, 312, 3088, 1204, 6512, 21, 9842, 4009]}
{"line_number": 679, "line_type": "generated", "code": "\n        if (owner!= null) {\n          overriddenPropType = getOverriddenType(name, owner,\n              scope.isGlobal(), scope.isLocal());\n        }\n\n        if (overriddenPropType!= null) {\n          functionType = overriddenProp", "entropy": 0.4326171875, "is_bug_line": false, "sus_score": 0.719837486743927, "per_token_entropy": [0.457763671875, 0.429931640625, 0.0396728515625, 0.264404296875, 0.06878662109375, 0.0005593299865722656, 0.411865234375, 0.017913818359375, 0.06890869140625, 0.8896484375, 0.000835418701171875, 0.00031876564025878906, 0.0005059242248535156, 0.86669921875, 0.352783203125, 0.0122833251953125, 0.939453125, 0.13232421875, 1.4091796875, 0.032867431640625, 0.27685546875, 0.8720703125, 1.8232421875, 2.1328125, 0.345703125, 1.2275390625, 1.6806640625, 1.4208984375, 1.830078125, 0.1429443359375, 0.293701171875, 0.52587890625, 0.2362060546875, 0.2178955078125, 6.687641143798828e-05, 0.386474609375, 0.93505859375, 0.02398681640625, 0.50439453125, 4.649162292480469e-06, 2.2649765014648438e-05, 2.384185791015625e-07, 0.311767578125, 0.0001462697982788086, 0.1783447265625, 0.00017559528350830078, 0.0112457275390625, 0.2452392578125, 6.246566772460938e-05, 0.00021028518676757812, 0.4873046875, 5.364418029785156e-06], "tokens": [291, 415, 308, 5632, 863, 744, 27, 301, 616, 26625, 6567, 620, 280, 622, 3966, 21657, 620, 26, 426, 30, 7423, 30, 1090, 4576, 32, 297, 4455, 1026, 4576, 32, 297, 3325, 1035, 291, 320, 584, 415, 308, 1498, 21657, 6567, 620, 863, 744, 27, 301, 616, 667, 620, 280, 26625, 6567]}
{"line_number": 1385, "line_type": "original", "code": "      }", "entropy": 2.234375, "is_bug_line": false, "sus_score": 0.7073699235916138, "per_token_entropy": [3.908203125, 0.5595703125], "tokens": [647, 320]}
{"line_number": 1385, "line_type": "generated", "code": "\n      }\n    }\n  }", "entropy": 0.257080078125, "is_bug_line": false, "sus_score": 0.7073699235916138, "per_token_entropy": [0.828125, 0.0732421875, 0.068603515625, 0.0015010833740234375, 0.54150390625, 0.02880859375], "tokens": [397, 320, 284, 320, 334, 320]}
{"line_number": 1045, "line_type": "original", "code": "                  CONSTRUCTOR_EXPECTED));", "entropy": 6.81640625, "is_bug_line": false, "sus_score": 0.7036807537078857, "per_token_entropy": [9.6484375, 12.09375, 2.3515625, 0.238525390625, 10.03125, 6.53515625], "tokens": [5688, 2198, 43753, 81, 30331, 876]}
{"line_number": 1045, "line_type": "generated", "code": "    */\n    private void declareQualifiedSymbol(DocInfo info) {\n      if (info.isInterfaceMember()) {\n        return;\n      }\n\n      String qualifiedName = info.getQualifiedName();\n      if (qualifiedName == null) {\n        return;\n     ", "entropy": 0.377685546875, "is_bug_line": false, "sus_score": 0.7036807537078857, "per_token_entropy": [2.005859375, 0.56884765625, 0.0303802490234375, 0.5087890625, 0.1856689453125, 0.10162353515625, 1.30859375, 0.09027099609375, 0.058074951171875, 1.2158203125, 0.007396697998046875, 0.0103912353515625, 0.0860595703125, 0.0227508544921875, 0.0809326171875, 1.5869140625, 0.2244873046875, 0.1707763671875, 0.392333984375, 0.6376953125, 1.41015625, 1.0224609375, 0.420166015625, 0.00131988525390625, 0.0145263671875, 1.349609375, 0.0010366439819335938, 0.0418701171875, 0.00021851062774658203, 0.264892578125, 1.13671875, 1.4912109375, 0.11517333984375, 0.01116180419921875, 0.0941162109375, 0.0009546279907226562, 0.39501953125, 0.2244873046875, 0.020050048828125, 0.216064453125, 0.91259765625, 0.14453125, 0.166259765625, 0.004974365234375, 0.662109375, 0.004150390625, 0.0888671875, 0.00226593017578125, 0.00688934326171875, 0.11859130859375, 0.0003674030303955078, 0.0059661865234375], "tokens": [264, 569, 284, 945, 763, 8864, 24233, 6084, 26, 4216, 1120, 3099, 27, 301, 397, 415, 308, 1338, 32, 297, 3041, 4592, 1157, 301, 291, 442, 45, 397, 320, 1687, 892, 16793, 558, 280, 3099, 32, 371, 41340, 473, 397, 415, 308, 22362, 558, 610, 744, 27, 301, 291, 442, 45, 397]}
{"line_number": 930, "line_type": "original", "code": "        // If we're in the global scope, also declare var.prototype", "entropy": 2.66796875, "is_bug_line": false, "sus_score": 0.7014394402503967, "per_token_entropy": [3.099609375, 1.4853515625, 2.794921875, 1.5244140625, 1.4658203125, 1.384765625, 2.048828125, 0.11322021484375, 0.01580810546875, 0.4833984375, 5.98828125, 3.17578125, 7.74609375, 2.337890625, 6.3515625], "tokens": [351, 434, 1670, 996, 4484, 328, 322, 3649, 4576, 30, 2329, 8864, 773, 32, 3889]}
{"line_number": 930, "line_type": "generated", "code": "\n        // If this is a declaration, then the type of the property\n        // is the declared type.\n        JSType type = n.getJSType();\n        if (type!= null) {\n          return type;\n        }\n\n        // If this is an", "entropy": 0.6484375, "is_bug_line": false, "sus_score": 0.7014394402503967, "per_token_entropy": [0.16455078125, 1.28515625, 2.228515625, 1.888671875, 0.26171875, 0.51611328125, 3.24609375, 1.630859375, 1.150390625, 2.087890625, 0.7353515625, 0.9814453125, 0.296630859375, 1.380859375, 0.736328125, 0.00098419189453125, 0.64892578125, 0.55615234375, 0.5888671875, 0.078369140625, 0.9873046875, 0.7314453125, 1.919921875, 0.0006613731384277344, 0.9892578125, 0.0950927734375, 1.1142578125, 0.0009889602661132812, 0.12158203125, 0.002834320068359375, 0.00014078617095947266, 0.01288604736328125, 0.11273193359375, 0.268798828125, 0.06683349609375, 0.116943359375, 0.6513671875, 0.000995635986328125, 0.462646484375, 0.0011205673217773438, 0.0125885009765625, 0.35009765625, 0.03375244140625, 0.0328369140625, 0.0063934326171875, 4.9591064453125e-05, 0.7255859375, 0.345458984375, 1.3583984375, 0.90185546875, 0.1490478515625, 1.6904296875], "tokens": [291, 434, 1670, 458, 438, 312, 13317, 30, 1615, 322, 827, 432, 322, 2804, 291, 434, 438, 322, 17103, 827, 32, 291, 7750, 620, 827, 280, 310, 32, 371, 4624, 620, 473, 291, 415, 308, 681, 863, 744, 27, 301, 616, 442, 827, 45, 291, 320, 584, 434, 1670, 458, 438, 600]}
{"line_number": 2136, "line_type": "original", "code": "", "entropy": 0.2008056640625, "is_bug_line": false, "sus_score": 0.6994218230247498, "per_token_entropy": [0.2008056640625], "tokens": [203]}
{"line_number": 2136, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6994218230247498, "per_token_entropy": [], "tokens": []}
{"line_number": 991, "line_type": "original", "code": "      SubclassRelationship relationship =", "entropy": 2.775390625, "is_bug_line": false, "sus_score": 0.6989681124687195, "per_token_entropy": [4.4140625, 9.9609375, 1.02734375, 0.5400390625, 0.62060546875, 0.09991455078125], "tokens": [647, 3725, 823, 13175, 12112, 280]}
{"line_number": 991, "line_type": "generated", "code": "\n        ObjectType.cast(type);\n        typeRegistry.registerType(objectLiteralCast.typeName, type);\n        if (objectLiteralCast.isInterface) {\n          type.setInterface(true);\n        }\n        for (Map.Entry<String,", "entropy": 0.6640625, "is_bug_line": false, "sus_score": 0.6989681124687195, "per_token_entropy": [0.9873046875, 2.314453125, 2.208984375, 0.91650390625, 0.019744873046875, 0.662109375, 1.005859375, 0.833984375, 2.7265625, 0.67724609375, 0.0032520294189453125, 1.9677734375, 0.56640625, 0.4814453125, 0.90625, 0.0019273757934570312, 0.0008897781372070312, 0.005535125732421875, 1.49609375, 0.171630859375, 0.272216796875, 0.056854248046875, 0.97705078125, 2.232421875, 0.076416015625, 0.85986328125, 0.0266265869140625, 0.0011663436889648438, 0.0116729736328125, 2.30859375, 2.015625, 0.3388671875, 0.0010347366333007812, 0.04083251953125, 0.5029296875, 0.127197265625, 0.43408203125, 0.390869140625, 0.07012939453125, 0.07330322265625, 0.0116119384765625, 0.131103515625, 7.021427154541016e-05, 0.93359375, 2.705078125, 0.0030059814453125, 1.91796875, 0.0017690658569335938, 0.00014257431030273438, 0.0217742919921875, 0.027496337890625, 0.00025963783264160156], "tokens": [291, 42562, 32, 2405, 26, 681, 293, 291, 827, 5378, 32, 3317, 620, 26, 1473, 8208, 8946, 32, 24494, 30, 827, 293, 291, 415, 308, 1473, 8208, 8946, 32, 297, 3041, 27, 301, 616, 827, 32, 470, 3041, 26, 1508, 293, 291, 320, 291, 436, 308, 1208, 32, 2711, 46, 652, 30]}
{"line_number": 978, "line_type": "original", "code": "        return rhsValue.getJSType();", "entropy": 2.0703125, "is_bug_line": false, "sus_score": 0.6979866623878479, "per_token_entropy": [4.875, 3.716796875, 5.83203125, 0.46533203125, 1.86328125, 1.7978515625, 0.00527191162109375, 8.761882781982422e-05, 0.06683349609375], "tokens": [351, 442, 9322, 882, 32, 371, 4624, 620, 473]}
{"line_number": 978, "line_type": "generated", "code": "\n      }\n    }\n\n    /**\n     * Look for a type declaration on a FUNCTION node.\n     *\n     * @param info The doc info for this function.\n     * @param n A top-level FUNCTION node (it should not be contained inside\n     *", "entropy": 0.2452392578125, "is_bug_line": false, "sus_score": 0.6979866623878479, "per_token_entropy": [0.425537109375, 0.0380859375, 0.464111328125, 0.0011510848999023438, 0.30517578125, 0.2327880859375, 0.04095458984375, 0.00011050701141357422, 1.6396484375, 0.0413818359375, 1.482421875, 0.68896484375, 0.1220703125, 0.32177734375, 0.2000732421875, 3.314453125, 0.06268310546875, 0.11309814453125, 0.0243988037109375, 0.1697998046875, 0.278564453125, 0.0002741813659667969, 0.056915283203125, 0.0161590576171875, 0.294921875, 0.029022216796875, 0.1300048828125, 0.0034961700439453125, 0.0094451904296875, 0.043182373046875, 0.16455078125, 0.061920166015625, 0.007564544677734375, 0.06488037109375, 0.00408172607421875, 0.014923095703125, 0.1558837890625, 0.359130859375, 0.80322265625, 0.0013208389282226562, 2.8014183044433594e-05, 0.031524658203125, 0.013885498046875, 0.403564453125, 0.0611572265625, 0.005496978759765625, 0.0008478164672851562, 0.0011053085327148438, 0.007053375244140625, 0.0250244140625, 0.01047515869140625, 5.793571472167969e-05], "tokens": [397, 320, 284, 320, 446, 1022, 275, 319, 12615, 436, 312, 827, 13317, 544, 312, 17747, 1541, 32, 275, 319, 275, 319, 477, 753, 3099, 886, 3693, 3099, 436, 458, 667, 32, 275, 319, 477, 753, 310, 399, 2663, 31, 2649, 17747, 1541, 308, 283, 1395, 646, 526, 14549, 6517, 275, 319]}
{"line_number": 678, "line_type": "original", "code": "     * @param name the function's name", "entropy": 1.71875, "is_bug_line": false, "sus_score": 0.6976290345191956, "per_token_entropy": [5.94921875, 2.658203125, 0.341796875, 0.1402587890625, 2.37890625, 1.267578125, 0.9931640625, 1.4443359375, 0.2978515625], "tokens": [262, 319, 477, 753, 636, 322, 667, 1182, 636]}
{"line_number": 678, "line_type": "generated", "code": "\n        functionType = getOverriddenType(name, owner, rValue,\n            lvalueNode, parametersNode, fnBlock, info);\n      }\n\n      if (functionType == null) {\n        // Find the type of any function in a parent scope", "entropy": 0.6025390625, "is_bug_line": false, "sus_score": 0.6976290345191956, "per_token_entropy": [0.42529296875, 2.162109375, 0.004619598388671875, 0.0009260177612304688, 1.2861328125, 0.1085205078125, 0.1695556640625, 0.265869140625, 0.07147216796875, 0.85791015625, 0.06866455078125, 0.87060546875, 0.49267578125, 1.5478515625, 2.384185791015625e-05, 0.427978515625, 2.03515625, 1.962890625, 0.0002872943878173828, 0.0002605915069580078, 0.5205078125, 1.7744140625, 0.00013720989227294922, 0.487060546875, 0.521484375, 0.41357421875, 0.7626953125, 0.8837890625, 0.31982421875, 0.481689453125, 4.410743713378906e-05, 0.07623291015625, 0.23046875, 0.004146575927734375, 0.0306396484375, 3.2782554626464844e-05, 0.054443359375, 7.462501525878906e-05, 0.1788330078125, 0.00017392635345458984, 0.00926971435546875, 0.66796875, 1.5810546875, 0.0927734375, 0.265869140625, 0.2099609375, 0.52197265625, 2.25, 2.279296875, 1.3369140625, 2.46875, 0.151123046875], "tokens": [291, 667, 620, 280, 622, 3966, 21657, 620, 26, 426, 30, 7423, 30, 540, 882, 30, 324, 456, 853, 1212, 30, 3377, 1212, 30, 2771, 2227, 30, 3099, 293, 397, 320, 1687, 415, 308, 1126, 620, 610, 744, 27, 301, 291, 434, 7477, 322, 827, 432, 1346, 667, 328, 312, 2935, 4576]}
{"line_number": 1210, "line_type": "original", "code": "    private ObjectType getObjectSlot(String slotName) {", "entropy": 1.6396484375, "is_bug_line": false, "sus_score": 0.6974350214004517, "per_token_entropy": [6.484375, 2.513671875, 4.109375, 3.658203125, 0.034576416015625, 0.01387786865234375, 0.080322265625, 1.0849609375, 0.035003662109375, 0.0039043426513671875, 0.017181396484375], "tokens": [264, 945, 42562, 43423, 9490, 26, 652, 9848, 558, 27, 301]}
{"line_number": 1210, "line_type": "generated", "code": "\n      Node functionNode = function.getNode();\n      Node body = functionNode.getLastChild();\n      JSType thisType = null;\n      JSType parentType = null;\n      if (function.isConstructor()) {\n        // Constructors have an implicit 'this", "entropy": 0.74169921875, "is_bug_line": false, "sus_score": 0.6974350214004517, "per_token_entropy": [0.6630859375, 2.1953125, 1.01171875, 0.5322265625, 0.00844573974609375, 1.82421875, 1.2080078125, 1.1201171875, 0.0279541015625, 0.169189453125, 1.3388671875, 1.74609375, 0.2481689453125, 0.3466796875, 0.01531982421875, 0.0031795501708984375, 0.006252288818359375, 0.0003962516784667969, 0.358642578125, 0.27587890625, 3.162109375, 0.0018777847290039062, 2.0859375, 0.023956298828125, 0.07354736328125, 1.4873046875, 0.0016326904296875, 0.447021484375, 1.8369140625, 0.00016069412231445312, 2.517578125, 0.39990234375, 0.040252685546875, 0.2122802734375, 0.00039005279541015625, 0.452392578125, 1.25390625, 0.1854248046875, 0.5791015625, 1.2509765625, 0.31201171875, 0.46875, 0.11492919921875, 0.0006475448608398438, 0.0188140869140625, 1.46484375, 0.94970703125, 1.30078125, 1.8310546875, 1.4091796875, 1.580078125, 0.00824737548828125], "tokens": [397, 4004, 667, 1212, 280, 667, 32, 17699, 473, 397, 4004, 3361, 280, 667, 1212, 32, 20197, 2931, 473, 397, 7750, 620, 458, 620, 280, 744, 45, 397, 7750, 620, 2935, 620, 280, 744, 45, 397, 415, 308, 1126, 32, 297, 7932, 1157, 301, 291, 434, 34758, 1159, 600, 10353, 330, 578]}
{"line_number": 785, "line_type": "original", "code": "      }", "entropy": 2.8046875, "is_bug_line": false, "sus_score": 0.6962051391601562, "per_token_entropy": [5.46875, 0.1412353515625], "tokens": [647, 320]}
{"line_number": 785, "line_type": "generated", "code": "\n      }\n\n      return enumType;\n    }\n\n    /**\n     * Gets a typedef.\n     *\n     * @param name the typedef's name such as {@code goog.foo.Bar}\n     * @param value the typedef's original value. This value may", "entropy": 0.30859375, "is_bug_line": false, "sus_score": 0.6962051391601562, "per_token_entropy": [0.7509765625, 0.16357421875, 0.337890625, 0.467041015625, 0.004344940185546875, 7.62939453125e-06, 0.0081787109375, 0.0166015625, 0.0015134811401367188, 0.422607421875, 0.29638671875, 0.036346435546875, 0.0002739429473876953, 1.2294921875, 0.7763671875, 1.3681640625, 1.7666015625, 1.0302734375, 0.1470947265625, 0.1817626953125, 0.0018491744995117188, 0.0731201171875, 0.036376953125, 0.54638671875, 0.265869140625, 0.303466796875, 0.1092529296875, 0.06024169921875, 0.6708984375, 0.0011625289916992188, 0.05810546875, 0.0006680488586425781, 1.1337890625, 0.0016527175903320312, 1.2783203125, 0.016510009765625, 0.541015625, 0.11322021484375, 0.04559326171875, 0.00765228271484375, 0.00377655029296875, 0.1884765625, 0.70849609375, 0.045623779296875, 0.0928955078125, 0.039337158203125, 0.278564453125, 0.07159423828125, 0.250732421875, 0.06640625, 0.0191802978515625, 0.017181396484375], "tokens": [397, 320, 1687, 442, 3833, 620, 45, 284, 320, 446, 1022, 275, 319, 7124, 312, 10338, 32, 275, 319, 275, 319, 477, 753, 636, 322, 10338, 1182, 636, 3751, 619, 3088, 687, 47917, 32, 3986, 32, 2900, 111, 275, 319, 477, 753, 786, 322, 10338, 1182, 4707, 786, 32, 1348, 786, 1631]}
{"line_number": 1115, "line_type": "original", "code": "        Var qVar = scope.getVar(qName);", "entropy": 2.494140625, "is_bug_line": false, "sus_score": 0.6927347183227539, "per_token_entropy": [3.17578125, 10.7265625, 14.6015625, 0.1534423828125, 0.024505615234375, 0.51123046875, 0.0011768341064453125, 0.50146484375, 0.0164794921875, 0.155517578125, 0.000942230224609375, 0.0506591796875], "tokens": [351, 7329, 2678, 1881, 280, 4576, 32, 48086, 26, 99, 558, 293]}
{"line_number": 1115, "line_type": "generated", "code": "\n            rhsValue.isFunction() &&\n            rhsValue.getFirstChild().isAssign());\n      }\n\n      // We do not want to declare a property twice in the same scope.\n      //\n      // For example, in:\n      //   /** @type {number", "entropy": 0.8232421875, "is_bug_line": false, "sus_score": 0.6927347183227539, "per_token_entropy": [0.6982421875, 0.818359375, 0.0011701583862304688, 0.005031585693359375, 0.36767578125, 0.71728515625, 0.15869140625, 0.6416015625, 1.400390625, 0.0024509429931640625, 0.0160675048828125, 0.9970703125, 0.0005617141723632812, 0.12347412109375, 0.99853515625, 1.01171875, 0.2705078125, 0.2178955078125, 7.784366607666016e-05, 0.060577392578125, 1.46484375, 3.220703125, 3.0546875, 0.156005859375, 1.32421875, 0.08551025390625, 1.44140625, 1.783203125, 2.60546875, 2.13671875, 2.623046875, 0.63037109375, 0.305419921875, 0.374755859375, 0.673828125, 0.086181640625, 0.52685546875, 3.19921875, 0.0010738372802734375, 2.162109375, 0.1529541015625, 0.26806640625, 1.904296875, 0.82958984375, 0.006511688232421875, 0.0020084381103515625, 1.4248046875, 0.90966796875, 0.040557861328125, 0.468017578125, 0.0225982666015625, 0.423095703125], "tokens": [324, 9322, 882, 32, 39504, 346, 962, 324, 9322, 882, 32, 25657, 2931, 922, 297, 9079, 1035, 397, 320, 1687, 434, 2688, 745, 646, 2637, 372, 8864, 312, 2804, 19465, 328, 322, 2432, 4576, 32, 397, 434, 397, 434, 2616, 2280, 30, 328, 44, 397, 434, 261, 1022, 477, 681, 301, 2171]}
{"line_number": 770, "line_type": "original", "code": "      // First, check to see if the property is implemented", "entropy": 2.470703125, "is_bug_line": false, "sus_score": 0.691837728023529, "per_token_entropy": [5.2265625, 1.033203125, 7.9296875, 2.966796875, 1.0595703125, 1.453125, 0.049041748046875, 0.049285888671875, 1.0712890625, 2.830078125, 0.92822265625, 5.0390625], "tokens": [647, 434, 8819, 30, 1505, 372, 2318, 415, 322, 2804, 438, 7586]}
{"line_number": 770, "line_type": "generated", "code": "\n            } else {\n              enumType.defineProperty(keyName,\n                  compiler.getCodingConvention().getConstantType(keyName),\n                  null, false, false);\n            }\n\n            key = key.getNext();\n          }\n        } else {\n         ", "entropy": 0.371337890625, "is_bug_line": false, "sus_score": 0.691837728023529, "per_token_entropy": [0.353271484375, 0.01200103759765625, 0.80615234375, 0.392822265625, 0.040618896484375, 1.1611328125, 0.0045166015625, 0.0102996826171875, 0.2105712890625, 0.90625, 0.0268707275390625, 0.365234375, 0.0254058837890625, 0.11212158203125, 1.7255859375, 2.197265625, 0.0046539306640625, 0.42578125, 0.00267791748046875, 0.00018727779388427734, 0.0019092559814453125, 0.0341796875, 0.791015625, 0.430419921875, 0.67919921875, 0.019256591796875, 0.52685546875, 0.341552734375, 0.449462890625, 0.05816650390625, 1.2958984375, 1.4931640625, 1.1494140625, 0.09100341796875, 0.9638671875, 0.8447265625, 0.22216796875, 0.00010800361633300781, 0.294677734375, 0.02783203125, 0.000278472900390625, 0.00281524658203125, 5.340576171875e-05, 9.28640365600586e-05, 0.00732421875, 0.01538848876953125, 3.528594970703125e-05, 0.294189453125, 0.0012845993041992188, 0.3251953125, 0.0936279296875, 0.06805419921875], "tokens": [324, 320, 813, 301, 1090, 3833, 620, 32, 1234, 1653, 26, 678, 558, 30, 1750, 8980, 32, 11640, 431, 299, 21748, 922, 371, 5465, 620, 26, 678, 558, 471, 1750, 744, 30, 901, 30, 901, 293, 324, 320, 1064, 1202, 280, 1202, 32, 23017, 473, 616, 320, 291, 320, 813, 301, 616]}
{"line_number": 2132, "line_type": "original", "code": "", "entropy": 0.2008056640625, "is_bug_line": false, "sus_score": 0.6907105445861816, "per_token_entropy": [0.2008056640625], "tokens": [203]}
{"line_number": 2132, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6907105445861816, "per_token_entropy": [], "tokens": []}
{"line_number": 1208, "line_type": "original", "code": "     * @return An object type, or null if this slot does not contain an object.", "entropy": 2.435546875, "is_bug_line": false, "sus_score": 0.6903989911079407, "per_token_entropy": [3.203125, 0.2406005859375, 5.28125, 1.6552734375, 3.546875, 2.4140625, 4.13671875, 4.578125, 1.0283203125, 0.1580810546875, 0.27294921875, 2.71484375, 8.046875, 2.7734375, 0.23779296875, 2.37890625, 1.9580078125, 1.091796875, 0.5751953125], "tokens": [262, 319, 477, 601, 2244, 1300, 827, 30, 556, 744, 415, 458, 9848, 1957, 646, 4799, 600, 1300, 32]}
{"line_number": 1208, "line_type": "generated", "code": "\n     */\n    private void collectFunctionProperties(Node n) {\n      if (n.isFunction()) {\n        FunctionTypeBuilder builder =\n            new FunctionTypeBuilder(typeRegistry, n, scope);\n        builder.processFunction(n);\n        builder.process", "entropy": 0.5947265625, "is_bug_line": false, "sus_score": 0.6903989911079407, "per_token_entropy": [0.415283203125, 1.236328125, 0.0128631591796875, 1.271484375, 0.255615234375, 0.76513671875, 1.23046875, 0.888671875, 0.19580078125, 0.35986328125, 0.56298828125, 0.61865234375, 0.00395965576171875, 0.0181884765625, 1.9345703125, 0.239990234375, 0.428466796875, 0.057708740234375, 0.75927734375, 0.1055908203125, 0.00048279762268066406, 0.018890380859375, 1.3017578125, 0.0178680419921875, 0.88623046875, 0.9013671875, 0.009246826171875, 1.17578125, 0.415771484375, 0.01131439208984375, 0.0008716583251953125, 0.00021147727966308594, 0.013916015625, 1.1044921875, 0.00399017333984375, 0.1260986328125, 1.236328125, 0.20166015625, 0.8359375, 0.70263671875, 0.1917724609375, 0.90576171875, 0.0005321502685546875, 1.65234375, 1.5576171875, 1.1826171875, 0.51416015625, 0.60498046875, 0.7724609375, 1.4931640625, 0.00293731689453125, 1.734375], "tokens": [275, 569, 284, 945, 763, 7901, 2447, 3289, 26, 1212, 310, 27, 301, 397, 415, 308, 96, 32, 39504, 1157, 301, 291, 4540, 620, 1796, 4906, 280, 324, 537, 4540, 620, 1796, 26, 681, 5378, 30, 310, 30, 4576, 293, 291, 4906, 32, 2416, 2447, 26, 96, 293, 291, 4906, 32, 2416]}
{"line_number": 990, "line_type": "original", "code": "        NodeTraversal t, Node n, Node parent) {", "entropy": 2.724609375, "is_bug_line": false, "sus_score": 0.6896572709083557, "per_token_entropy": [4.328125, 6.2421875, 8.078125, 6.9296875, 0.0565185546875, 1.6552734375, 0.06475830078125, 0.5771484375, 2.509765625, 0.78955078125, 1.2578125, 0.2030029296875], "tokens": [351, 4004, 35699, 273, 30, 4004, 310, 30, 4004, 2935, 27, 301]}
{"line_number": 990, "line_type": "generated", "code": "\n            typeRegistry.getType(objectLiteralCast.className));\n        if (type!= null) {\n          FunctionType ctor = type.getConstructor();\n          if (ctor!= null) {\n            ctor.setCast(true);\n          }\n        }\n      }", "entropy": 0.2064208984375, "is_bug_line": false, "sus_score": 0.6896572709083557, "per_token_entropy": [0.49853515625, 0.39990234375, 0.0007486343383789062, 0.0017852783203125, 0.057373046875, 0.013885498046875, 0.044921875, 0.0001926422119140625, 0.00011801719665527344, 0.004833221435546875, 0.6142578125, 0.04119873046875, 0.1656494140625, 0.394287109375, 0.0026569366455078125, 0.00975799560546875, 0.0994873046875, 0.00017368793487548828, 0.047576904296875, 0.00464630126953125, 0.0538330078125, 1.28125, 0.0006852149963378906, 0.939453125, 0.190673828125, 0.049957275390625, 0.0035552978515625, 0.007389068603515625, 0.004146575927734375, 0.0011758804321289062, 0.1837158203125, 0.2249755859375, 0.002716064453125, 0.01300811767578125, 0.06005859375, 0.00014257431030273438, 0.05511474609375, 0.0009927749633789062, 0.0885009765625, 1.65234375, 0.050323486328125, 0.62841796875, 0.669921875, 0.46484375, 1.328125, 0.0038509368896484375, 0.207763671875, 7.641315460205078e-05, 0.1314697265625, 3.325939178466797e-05, 0.033782958984375, 0.00047087669372558594], "tokens": [324, 827, 5378, 32, 10272, 26, 1473, 8208, 8946, 32, 8678, 876, 291, 415, 308, 681, 863, 744, 27, 301, 616, 4540, 620, 34484, 280, 827, 32, 371, 7932, 473, 616, 415, 308, 5314, 863, 744, 27, 301, 324, 34484, 32, 470, 8946, 26, 1508, 293, 616, 320, 291, 320, 397, 320]}
{"line_number": 931, "line_type": "original", "code": "        // in the scope chain.", "entropy": 4.02734375, "is_bug_line": false, "sus_score": 0.6884894967079163, "per_token_entropy": [3.466796875, 1.7197265625, 5.97265625, 1.6435546875, 6.89453125, 4.40625, 4.10546875], "tokens": [351, 434, 328, 322, 4576, 8241, 32]}
{"line_number": 931, "line_type": "generated", "code": "\n      }\n    }\n\n    /**\n     * Look for a type declaration on a NAME node.\n     *\n     * @param info The doc info for this property.\n     * @param n A top-level NAME node.\n     * @param rhsValue The node", "entropy": 0.1480712890625, "is_bug_line": false, "sus_score": 0.6884894967079163, "per_token_entropy": [0.3408203125, 0.06982421875, 0.09783935546875, 0.0011615753173828125, 0.195068359375, 0.26806640625, 0.026611328125, 0.00012290477752685547, 0.93701171875, 0.029754638671875, 0.1064453125, 0.1060791015625, 0.03326416015625, 0.140869140625, 0.1468505859375, 1.142578125, 0.2305908203125, 0.0938720703125, 0.06011962890625, 0.10638427734375, 0.0667724609375, 0.00037741661071777344, 0.044525146484375, 0.0126495361328125, 0.1673583984375, 0.01512908935546875, 0.029327392578125, 0.002414703369140625, 0.006526947021484375, 0.0191497802734375, 0.875, 0.022430419921875, 0.007701873779296875, 0.14697265625, 0.0081329345703125, 0.00611114501953125, 0.06622314453125, 0.126708984375, 0.402587890625, 0.001434326171875, 2.181529998779297e-05, 0.0288848876953125, 0.0068817138671875, 0.99560546875, 0.0185546875, 0.377197265625, 0.007534027099609375, 0.01751708984375, 0.05230712890625, 0.00742340087890625, 0.00687408447265625, 0.019378662109375], "tokens": [397, 320, 284, 320, 446, 1022, 275, 319, 12615, 436, 312, 827, 13317, 544, 312, 8912, 1541, 32, 275, 319, 275, 319, 477, 753, 3099, 886, 3693, 3099, 436, 458, 2804, 32, 275, 319, 477, 753, 310, 399, 2663, 31, 2649, 8912, 1541, 32, 275, 319, 477, 753, 9322, 882, 886, 1541]}
{"line_number": 864, "line_type": "original", "code": "     *", "entropy": 4.88671875, "is_bug_line": false, "sus_score": 0.6877607107162476, "per_token_entropy": [5.19921875, 4.57421875], "tokens": [262, 319]}
{"line_number": 864, "line_type": "generated", "code": "\n        if (shouldDeclareOnGlobalThis) {\n          Var var = scopeToDeclareIn.getVar(variableName);\n          if (var.isTypeInferred()) {\n            // If the variable is inferred, then we can't declare it on\n            //", "entropy": 0.51611328125, "is_bug_line": false, "sus_score": 0.6877607107162476, "per_token_entropy": [0.87158203125, 0.342041015625, 0.053558349609375, 0.1846923828125, 0.00033736228942871094, 1.2516975402832031e-05, 4.5299530029296875e-06, 2.205371856689453e-05, 0.08673095703125, 0.0014514923095703125, 0.0496826171875, 2.546875, 0.61181640625, 0.034637451171875, 0.19921875, 0.44677734375, 3.612041473388672e-05, 4.851818084716797e-05, 0.0019283294677734375, 0.1903076171875, 0.0052947998046875, 0.01465606689453125, 2.0265579223632812e-06, 0.005558013916015625, 0.0546875, 1.5302734375, 0.131591796875, 0.10382080078125, 1.7607421875, 0.45068359375, 0.6162109375, 0.01505279541015625, 0.00514984130859375, 0.312744140625, 0.0009541511535644531, 0.0200347900390625, 1.841796875, 2.4921875, 0.97021484375, 0.89794921875, 0.8017578125, 1.64453125, 0.263916015625, 0.88037109375, 1.365234375, 2.240234375, 0.49560546875, 0.9169921875, 0.346923828125, 0.615234375, 0.427490234375, 0.0010118484497070312], "tokens": [291, 415, 308, 3163, 33052, 1484, 4455, 2272, 27, 301, 616, 7329, 773, 280, 4576, 705, 33052, 383, 32, 48086, 26, 4502, 558, 293, 616, 415, 308, 869, 32, 297, 620, 383, 14981, 1157, 301, 324, 434, 1670, 322, 2677, 438, 43134, 30, 1615, 996, 883, 1330, 8864, 561, 544, 324, 434]}
{"line_number": 1621, "line_type": "original", "code": "", "entropy": 0.2008056640625, "is_bug_line": false, "sus_score": 0.687676727771759, "per_token_entropy": [0.2008056640625], "tokens": [203]}
{"line_number": 1621, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.687676727771759, "per_token_entropy": [], "tokens": []}
{"line_number": 974, "line_type": "original", "code": "      } else if (info != null && info.hasEnumParameterType()) {", "entropy": 1.3193359375, "is_bug_line": false, "sus_score": 0.6867133975028992, "per_token_entropy": [5.10546875, 1.2646484375, 3.490234375, 2.234375, 0.046356201171875, 5.3125, 0.72119140625, 0.0007729530334472656, 0.158447265625, 0.0762939453125, 0.001789093017578125, 0.1429443359375, 2.3984375, 0.055511474609375, 0.08209228515625, 0.01421356201171875], "tokens": [647, 320, 813, 415, 308, 1338, 863, 744, 962, 3099, 32, 2040, 2759, 46453, 1157, 301]}
{"line_number": 974, "line_type": "generated", "code": "\n            if (functionType.hasReturnType()) {\n              getterType.setReturnType(functionType.getReturnType());\n            }\n            if (functionType.hasInstanceType()) {\n              getterType.setInstanceType(functionType.getInstanceType());\n            }", "entropy": 0.2283935546875, "is_bug_line": false, "sus_score": 0.6867133975028992, "per_token_entropy": [0.212646484375, 2.43359375, 0.19384765625, 0.97802734375, 0.001972198486328125, 0.022003173828125, 1.4697265625, 1.4287109375, 0.12091064453125, 0.005817413330078125, 0.019317626953125, 0.480712890625, 5.459785461425781e-05, 0.038055419921875, 0.087158203125, 0.0218658447265625, 0.01287078857421875, 0.1739501953125, 3.314018249511719e-05, 0.0005559921264648438, 0.0034618377685546875, 0.0013580322265625, 0.1563720703125, 0.049468994140625, 5.2809715270996094e-05, 0.6474609375, 1.099609375, 0.049530029296875, 0.062744140625, 1.1324882507324219e-05, 0.0003998279571533203, 0.38623046875, 1.4443359375, 0.00662994384765625, 0.02191162109375, 0.0002593994140625, 0.0009646415710449219, 0.0673828125, 1.7404556274414062e-05, 0.0008072853088378906, 0.016845703125, 0.08782958984375, 0.0009632110595703125, 0.0005636215209960938, 0.055389404296875, 5.841255187988281e-06, 5.7578086853027344e-05, 0.0015420913696289062, 4.839897155761719e-05, 0.0024662017822265625, 0.0119476318359375, 2.4199485778808594e-05], "tokens": [324, 415, 308, 1126, 620, 32, 2040, 28085, 1157, 301, 1090, 19037, 620, 32, 470, 28085, 26, 1126, 620, 32, 371, 28085, 1035, 324, 320, 324, 415, 308, 1126, 620, 32, 2040, 1810, 620, 1157, 301, 1090, 19037, 620, 32, 470, 1810, 620, 26, 1126, 620, 32, 7426, 620, 1035, 324, 320]}
{"line_number": 647, "line_type": "original", "code": "        if (functionType.isReturnTypeInferred() &&", "entropy": 1.7607421875, "is_bug_line": false, "sus_score": 0.6854358911514282, "per_token_entropy": [5.38671875, 2.5390625, 0.129150390625, 1.5615234375, 0.039093017578125, 0.1865234375, 0.31396484375, 8.8359375, 0.006565093994140625, 0.007450103759765625, 1.5625, 0.55078125], "tokens": [351, 415, 308, 1126, 620, 32, 297, 28085, 383, 14981, 346, 962]}
{"line_number": 647, "line_type": "generated", "code": "\n            scope.isLocal()) {\n          defineSlot(rValue, lvalueNode, null);\n        } else {\n          defineSlot(rValue, lvalueNode, functionType);\n        }\n          }\n        }\n      }\n\n      if (functionType ==", "entropy": 0.249755859375, "is_bug_line": false, "sus_score": 0.6854358911514282, "per_token_entropy": [1.43359375, 2.22265625, 0.00959014892578125, 0.110595703125, 0.0361328125, 0.101806640625, 0.00991058349609375, 0.52685546875, 1.7607421875, 0.055908203125, 0.00809478759765625, 1.7861328125, 0.004970550537109375, 0.031158447265625, 0.2626953125, 0.001117706298828125, 0.01120758056640625, 0.0207366943359375, 0.7275390625, 0.006927490234375, 0.34375, 0.00493621826171875, 0.1650390625, 0.0287628173828125, 0.10980224609375, 0.05810546875, 0.0019426345825195312, 0.0005350112915039062, 0.024322509765625, 3.063678741455078e-05, 0.0008559226989746094, 0.003337860107421875, 0.0001424551010131836, 0.00070953369140625, 0.0006341934204101562, 0.01212310791015625, 6.449222564697266e-05, 0.00388336181640625, 0.0721435546875, 0.0173187255859375, 1.86328125, 0.1466064453125, 0.1611328125, 0.00406646728515625, 0.05853271484375, 0.00638580322265625, 0.154541015625, 0.53857421875, 0.008331298828125, 0.05426025390625, 3.4689903259277344e-05, 0.0102691650390625], "tokens": [324, 4576, 32, 297, 3325, 1157, 301, 616, 5597, 9490, 26, 100, 882, 30, 456, 853, 1212, 30, 744, 293, 291, 320, 813, 301, 616, 5597, 9490, 26, 100, 882, 30, 456, 853, 1212, 30, 667, 620, 293, 291, 320, 616, 320, 291, 320, 397, 320, 1687, 415, 308, 1126, 620, 610]}
{"line_number": 833, "line_type": "original", "code": "          }", "entropy": 5.30859375, "is_bug_line": false, "sus_score": 0.682355523109436, "per_token_entropy": [6.53125, 4.0859375], "tokens": [2033, 320]}
{"line_number": 833, "line_type": "generated", "code": "\n      } else if (n.isGetProp() && n.getFirstChild().getType() == Token.NAME) {\n        shouldDeclareOnGlobalThis = true;", "entropy": 0.265380859375, "is_bug_line": false, "sus_score": 0.682355523109436, "per_token_entropy": [0.6005859375, 0.030303955078125, 0.1695556640625, 0.369140625, 0.01503753662109375, 0.10528564453125, 0.0008172988891601562, 1.08203125, 0.31103515625, 0.0009479522705078125, 1.50390625, 0.2763671875, 0.52392578125, 0.0023937225341796875, 0.57177734375, 0.00012922286987304688, 0.07110595703125, 0.84912109375, 0.0011157989501953125, 0.0224456787109375, 0.0007042884826660156, 0.00017154216766357422, 0.80419921875, 0.0572509765625, 0.001117706298828125, 0.12054443359375, 1.2646484375, 0.00011563301086425781, 1.6689300537109375e-05, 1.0251998901367188e-05, 0.00043129920959472656, 0.022735595703125, 0.242919921875, 0.00261688232421875], "tokens": [397, 320, 813, 415, 308, 96, 32, 297, 936, 6567, 346, 962, 310, 32, 25657, 2931, 922, 10272, 346, 610, 6512, 32, 2474, 27, 301, 291, 1395, 33052, 1484, 4455, 2272, 280, 861, 45]}
