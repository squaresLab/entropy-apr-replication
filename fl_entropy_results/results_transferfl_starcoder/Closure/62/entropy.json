{"line_number": 91, "line_type": "original", "code": "      b.append('\\n');", "entropy": 2.02734375, "is_bug_line": false, "sus_score": 0.7685178518295288, "per_token_entropy": [3.0703125, 8.3984375, 0.057037353515625, 0.01007843017578125, 2.61328125, 0.023345947265625, 0.01255035400390625], "tokens": [647, 323, 32, 1689, 9442, 96, 895]}
{"line_number": 91, "line_type": "generated", "code": "\n      for (int i = 0; i < region.getEndingLineNumber(); i++) {\n        int end = code.indexOf('\\n', start);\n        if (end == -1) {\n          end = code.length();\n        }\n        builder", "entropy": 0.1573486328125, "is_bug_line": false, "sus_score": 0.7685178518295288, "per_token_entropy": [0.181640625, 0.80419921875, 0.020538330078125, 0.0960693359375, 0.55712890625, 0.021484375, 0.65771484375, 0.1829833984375, 0.1851806640625, 0.0305328369140625, 0.57763671875, 0.201171875, 0.0002913475036621094, 0.11883544921875, 0.320068359375, 0.00791168212890625, 0.261962890625, 0.041168212890625, 0.01531219482421875, 0.0023288726806640625, 0.01540374755859375, 0.6455078125, 0.82080078125, 0.1131591796875, 0.062225341796875, 5.459785461425781e-05, 0.00173187255859375, 0.0545654296875, 0.00018644332885742188, 0.00159454345703125, 0.00466156005859375, 0.050445556640625, 0.0293731689453125, 0.318603515625, 0.0008959770202636719, 0.050201416015625, 0.27783203125, 0.0091705322265625, 0.0006837844848632812, 0.0037670135498046875, 0.003509521484375, 0.0143280029296875, 0.3974609375, 0.0003523826599121094, 0.01500701904296875, 2.5272369384765625e-05, 0.001987457275390625, 0.048919677734375, 0.022125244140625, 0.00020134449005126953, 0.283447265625, 0.650390625], "tokens": [397, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 6699, 32, 371, 42360, 29690, 473, 595, 1987, 301, 291, 629, 943, 280, 1340, 32, 7142, 9442, 96, 370, 1477, 293, 291, 415, 308, 416, 610, 429, 35, 27, 301, 616, 943, 280, 1340, 32, 1322, 473, 291, 320, 291, 4906]}
{"line_number": 92, "line_type": "original", "code": "      int charno = error.getCharno();", "entropy": 1.8759765625, "is_bug_line": false, "sus_score": 0.7624734044075012, "per_token_entropy": [3.275390625, 2.3046875, 4.625, 0.10528564453125, 0.043792724609375, 8.6640625, 0.031463623046875, 1.037109375, 0.26416015625, 0.0264129638671875, 0.26904296875], "tokens": [647, 629, 1351, 1347, 280, 1048, 32, 371, 2659, 1347, 473]}
{"line_number": 92, "line_type": "generated", "code": "\n      while (end!= -1) {\n        builder.append(String.format(\"%\" + numberLength + \"d", "entropy": 0.1834716796875, "is_bug_line": false, "sus_score": 0.7624734044075012, "per_token_entropy": [0.47802734375, 0.5595703125, 0.00801849365234375, 0.481689453125, 0.689453125, 0.00494384765625, 0.0009708404541015625, 0.01458740234375, 0.0024852752685546875, 0.0238189697265625, 1.01171875, 0.0242919921875, 0.00812530517578125, 0.20654296875, 0.392822265625, 0.004199981689453125, 0.0018215179443359375, 0.201416015625, 0.30810546875, 0.007053375244140625, 0.08966064453125, 0.0003762245178222656, 0.007404327392578125, 0.007656097412109375, 0.052764892578125], "tokens": [397, 2218, 308, 416, 863, 429, 35, 27, 301, 291, 4906, 32, 1689, 26, 652, 32, 1643, 4912, 20, 474, 1451, 2380, 474, 313, 86]}
{"line_number": 78, "line_type": "original", "code": "        b.append(':');", "entropy": 2.953125, "is_bug_line": false, "sus_score": 0.7285948395729065, "per_token_entropy": [5.41796875, 5.2265625, 0.01096343994140625, 0.0037708282470703125, 6.28515625, 0.78076171875], "tokens": [351, 323, 32, 1689, 16487, 895]}
{"line_number": 78, "line_type": "generated", "code": "\n      }\n      StringBuilder b = new StringBuilder();\n      int line = region.getBeginLineNumber();\n      int endLine = region.getEndLineNumber();\n      if (line!= endLine) {\n        b.append(line);\n        b.append(\"-\");\n       ", "entropy": 0.38232421875, "is_bug_line": false, "sus_score": 0.7285948395729065, "per_token_entropy": [0.071533203125, 0.0246734619140625, 0.646484375, 0.849609375, 0.4365234375, 0.0010814666748046875, 0.0029544830322265625, 0.0001327991485595703, 0.06805419921875, 0.0848388671875, 1.28515625, 2.2109375, 1.7919921875, 0.044403076171875, 0.00018906593322753906, 0.57373046875, 0.57763671875, 1.046875, 0.00836944580078125, 0.04833984375, 0.81103515625, 0.6279296875, 0.315673828125, 0.0051422119140625, 0.007160186767578125, 8.761882781982422e-05, 0.00926971435546875, 9.262561798095703e-05, 0.0134735107421875, 0.11236572265625, 2.029296875, 0.01326751708984375, 0.2734375, 2.271484375, 0.14013671875, 3.0994415283203125e-06, 0.045562744140625, 0.0014257431030273438, 0.17529296875, 0.65771484375, 0.0006399154663085938, 0.0011806488037109375, 0.252685546875, 0.30859375, 0.361083984375, 0.1279296875, 0.042694091796875, 0.00046181678771972656, 0.0003819465637207031, 1.419921875, 0.005889892578125, 0.0760498046875], "tokens": [397, 320, 397, 9706, 323, 280, 537, 9706, 473, 397, 629, 1628, 280, 6699, 32, 371, 5942, 29690, 473, 397, 629, 943, 1811, 280, 6699, 32, 45709, 29690, 473, 397, 415, 308, 928, 863, 943, 1811, 27, 301, 291, 323, 32, 1689, 26, 928, 293, 291, 323, 32, 1689, 10359, 724, 291]}
{"line_number": 79, "line_type": "original", "code": "        b.append(error.lineNumber);", "entropy": 2.16015625, "is_bug_line": false, "sus_score": 0.7274704575538635, "per_token_entropy": [5.71484375, 6.90234375, 0.037109375, 0.0179443359375, 0.74755859375, 6.90234375, 0.019287109375, 0.9677734375, 0.0037021636962890625, 0.27734375], "tokens": [351, 323, 32, 1689, 26, 731, 32, 928, 1918, 293]}
{"line_number": 79, "line_type": "generated", "code": "\n      return region.toString();\n    }\n  }", "entropy": 0.25634765625, "is_bug_line": false, "sus_score": 0.7274704575538635, "per_token_entropy": [0.7607421875, 0.443359375, 0.94091796875, 0.04278564453125, 0.06463623046875, 0.1385498046875, 0.02325439453125, 0.0005626678466796875, 0.1461181640625, 0.00284576416015625], "tokens": [397, 442, 6699, 32, 3108, 473, 284, 320, 334, 320]}
{"line_number": 76, "line_type": "original", "code": "      b.append(error.sourceName);", "entropy": 2.57421875, "is_bug_line": false, "sus_score": 0.7231162190437317, "per_token_entropy": [4.34375, 10.703125, 0.0911865234375, 0.0168609619140625, 0.37255859375, 7.29296875, 0.0131072998046875, 2.787109375, 0.015350341796875, 0.11090087890625], "tokens": [647, 323, 32, 1689, 26, 731, 32, 1855, 558, 293]}
{"line_number": 76, "line_type": "generated", "code": "\n      return null;\n    }\n  }", "entropy": 0.353271484375, "is_bug_line": false, "sus_score": 0.7231162190437317, "per_token_entropy": [0.1993408203125, 0.62451171875, 1.796875, 0.0010213851928710938, 0.02508544921875, 0.002819061279296875, 0.1724853515625, 0.0032806396484375], "tokens": [397, 442, 744, 45, 284, 320, 334, 320]}
{"line_number": 81, "line_type": "original", "code": "      b.append(\": \");", "entropy": 3.9140625, "is_bug_line": false, "sus_score": 0.721985399723053, "per_token_entropy": [4.23046875, 9.4609375, 0.0181884765625, 0.005573272705078125, 6.37109375, 3.390625], "tokens": [647, 323, 32, 1689, 17919, 7170]}
{"line_number": 81, "line_type": "generated", "code": "\n      }\n\n      StringBuilder b = new StringBuilder();\n      int lineCount = 0;\n      for (String line : code.split(\"\\n\")) {\n        b.append(String.format(\"%4d", "entropy": 0.327392578125, "is_bug_line": false, "sus_score": 0.721985399723053, "per_token_entropy": [0.7607421875, 0.006168365478515625, 1.068359375, 0.66748046875, 0.401123046875, 0.0009160041809082031, 0.0028362274169921875, 4.2557716369628906e-05, 0.10888671875, 0.08953857421875, 1.158203125, 1.671875, 1.3203125, 0.005710601806640625, 0.83837890625, 0.61279296875, 0.01013946533203125, 0.08282470703125, 0.8720703125, 0.005847930908203125, 0.1751708984375, 0.0279083251953125, 0.036865234375, 0.48828125, 0.0004596710205078125, 0.00684356689453125, 0.48095703125, 0.03314208984375, 0.281005859375, 0.0011186599731445312, 0.0266571044921875, 1.0595703125, 0.00033402442932128906, 0.006336212158203125, 0.121337890625, 0.3701171875, 0.0007390975952148438, 0.016326904296875, 0.1417236328125, 0.4228515625, 0.03778076171875], "tokens": [397, 320, 1687, 9706, 323, 280, 537, 9706, 473, 397, 629, 1628, 1534, 280, 225, 34, 45, 397, 436, 308, 652, 1628, 499, 1340, 32, 2998, 5528, 96, 2131, 301, 291, 323, 32, 1689, 26, 652, 32, 1643, 4912, 38, 86]}
{"line_number": 77, "line_type": "original", "code": "      if (error.lineNumber > 0) {", "entropy": 1.5185546875, "is_bug_line": false, "sus_score": 0.7107993364334106, "per_token_entropy": [3.904296875, 4.96875, 0.036163330078125, 4.984375, 0.0361328125, 1.7880859375, 0.0310516357421875, 2.04296875, 0.06842041015625, 0.208740234375, 0.10406494140625, 0.041229248046875], "tokens": [647, 415, 308, 731, 32, 928, 1918, 848, 225, 34, 27, 301]}
{"line_number": 77, "line_type": "generated", "code": "\n        return \"\";\n      }\n\n      StringBuilder b = new StringBuilder();\n      int lineStart = region.start.line;\n      int lineEnd = region.end.line;\n      for (int line = lineStart; line <= lineEnd; line++) {\n       ", "entropy": 0.280029296875, "is_bug_line": false, "sus_score": 0.7107993364334106, "per_token_entropy": [0.465576171875, 0.12384033203125, 0.92431640625, 0.03192138671875, 0.0008783340454101562, 0.89404296875, 0.638671875, 0.44873046875, 0.0010251998901367188, 0.0020599365234375, 7.033348083496094e-05, 0.05621337890625, 0.1790771484375, 1.2099609375, 2.236328125, 1.3583984375, 0.09356689453125, 0.10479736328125, 0.0002046823501586914, 1.8232421875, 0.16943359375, 0.10797119140625, 0.100341796875, 0.055023193359375, 0.3056640625, 0.25537109375, 0.028472900390625, 0.011016845703125, 0.012847900390625, 5.924701690673828e-05, 0.0115203857421875, 0.0028171539306640625, 0.0301971435546875, 0.06365966796875, 0.341064453125, 1.087890625, 0.0042572021484375, 0.010589599609375, 1.10546875, 0.08282470703125, 0.007595062255859375, 9.608268737792969e-05, 0.00853729248046875, 0.0045166015625, 0.049652099609375, 0.001682281494140625, 0.00013756752014160156, 0.00234222412109375, 0.055023193359375, 0.002346038818359375, 0.0004417896270751953, 0.05230712890625], "tokens": [291, 442, 5121, 397, 320, 1687, 9706, 323, 280, 537, 9706, 473, 397, 629, 1628, 2130, 280, 6699, 32, 1366, 32, 928, 45, 397, 629, 1628, 2102, 280, 6699, 32, 416, 32, 928, 45, 397, 436, 308, 410, 1628, 280, 1628, 2130, 45, 1628, 2511, 1628, 2102, 45, 1628, 1987, 301, 291]}
{"line_number": 69, "line_type": "original", "code": "    String sourceExcerpt = source == null ? null :", "entropy": 2.001953125, "is_bug_line": false, "sus_score": 0.6695511341094971, "per_token_entropy": [4.0078125, 4.97265625, 5.37109375, 0.98681640625, 0.01055908203125, 0.31005859375, 1.884765625, 5.140625, 0.005107879638671875, 0.54931640625, 0.4384765625, 0.358154296875], "tokens": [264, 892, 1914, 571, 21112, 280, 1914, 610, 744, 1018, 744, 499]}
{"line_number": 69, "line_type": "generated", "code": "\n   * @param region the region to be formatted\n   * @return line excerpt without any modification.\n   */\n  public static SourceExcerpt formatRegion(SourceRegion region) {\n    StringBuilder b = new StringBuilder();\n    for (int i = region.", "entropy": 0.435791015625, "is_bug_line": false, "sus_score": 0.6695511341094971, "per_token_entropy": [0.2041015625, 1.048828125, 0.7734375, 0.11907958984375, 0.92822265625, 1.9677734375, 0.2154541015625, 0.192138671875, 0.82470703125, 0.08636474609375, 0.366455078125, 0.1348876953125, 0.00970458984375, 0.40625, 2.01953125, 0.1417236328125, 0.0033702850341796875, 0.93603515625, 0.1083984375, 0.04779052734375, 1.68359375, 0.0650634765625, 0.0249481201171875, 0.031768798828125, 1.0029296875, 0.57470703125, 0.95947265625, 0.0015573501586914062, 5.125999450683594e-06, 0.5888671875, 0.1300048828125, 0.112060546875, 0.900390625, 0.184814453125, 0.0026226043701171875, 0.07550048828125, 0.002620697021484375, 0.0938720703125, 1.7451171875, 0.63232421875, 0.002231597900390625, 0.003509521484375, 0.00015997886657714844, 0.05804443359375, 0.15478515625, 2.12890625, 0.0100250244140625, 0.2724609375, 0.408203125, 0.05548095703125, 0.212158203125, 8.273124694824219e-05], "tokens": [664, 319, 477, 753, 6699, 322, 6699, 372, 526, 14186, 664, 319, 477, 601, 1628, 538, 21112, 2876, 1346, 11401, 32, 664, 569, 334, 562, 907, 6374, 571, 21112, 2179, 6062, 26, 2028, 6062, 6699, 27, 301, 284, 9706, 323, 280, 537, 9706, 473, 284, 436, 308, 410, 595, 280, 6699, 32]}
{"line_number": 36, "line_type": "original", "code": "   * A constructor for when the client doesn't care about source information.", "entropy": 3.197265625, "is_bug_line": false, "sus_score": 0.6640399098396301, "per_token_entropy": [5.703125, 3.716796875, 4.21484375, 7.76953125, 1.609375, 6.76953125, 1.4462890625, 6.6796875, 1.8974609375, 0.004894256591796875, 1.2880859375, 0.6171875, 2.623046875, 3.2734375, 0.35595703125], "tokens": [261, 319, 399, 4374, 436, 1412, 322, 2043, 4163, 1330, 9347, 2625, 1914, 2471, 32]}
{"line_number": 36, "line_type": "generated", "code": "\n          }\n          b.append('^');\n        }\n      }\n    }\n    return b.toString();\n  }\n\n  private String getLevelName(CheckLevel level) {\n    if (level == CheckLevel.ERROR) {\n      return \"ERROR\";\n   ", "entropy": 0.21044921875, "is_bug_line": false, "sus_score": 0.6640399098396301, "per_token_entropy": [0.568359375, 0.72265625, 0.46337890625, 0.319091796875, 0.00011754035949707031, 0.0025043487548828125, 1.146484375, 0.0875244140625, 0.00588226318359375, 0.6923828125, 0.004352569580078125, 0.147216796875, 0.0131683349609375, 0.6787109375, 0.0032501220703125, 0.63427734375, 0.315673828125, 0.007053375244140625, 4.208087921142578e-05, 0.0004489421844482422, 0.0112457275390625, 0.006206512451171875, 0.00033545494079589844, 0.5068359375, 0.84375, 0.7783203125, 0.00652313232421875, 0.002361297607421875, 0.0003821849822998047, 0.0003325939178466797, 0.0171051025390625, 3.5762786865234375e-06, 0.036590576171875, 0.0011644363403320312, 0.00033974647521972656, 0.0213775634765625, 1.9619140625, 0.005619049072265625, 0.021881103515625, 0.306396484375, 0.109130859375, 1.1563301086425781e-05, 4.291534423828125e-06, 0.2249755859375, 0.0177764892578125, 0.01329803466796875, 0.0302276611328125, 0.0018329620361328125, 0.03155517578125, 0.16357421875, 0.005428314208984375, 0.006744384765625], "tokens": [616, 320, 616, 323, 32, 1689, 463, 80, 895, 291, 320, 397, 320, 284, 320, 284, 442, 323, 32, 3108, 473, 334, 320, 719, 945, 892, 622, 2656, 558, 26, 2140, 2656, 3193, 27, 301, 284, 415, 308, 2649, 610, 3456, 2656, 32, 2930, 27, 301, 397, 442, 313, 2930, 866, 284]}
{"line_number": 68, "line_type": "original", "code": "    SourceExcerptProvider source = getSource();", "entropy": 2.033203125, "is_bug_line": false, "sus_score": 0.6591238975524902, "per_token_entropy": [4.81640625, 5.5625, 0.30712890625, 0.0036563873291015625, 0.97119140625, 1.6953125, 2.21875, 4.38671875, 0.045196533203125, 0.32177734375], "tokens": [264, 6374, 571, 21112, 2570, 1914, 280, 622, 2028, 473]}
{"line_number": 68, "line_type": "generated", "code": "\n   * @param region The region to format.\n   * @return The formatted region.\n   */\n  public String formatRegion(SourceRegion region) {\n    Preconditions.checkArgument(region.start.sourceName.equals(\n        region.end.source", "entropy": 0.3505859375, "is_bug_line": false, "sus_score": 0.6591238975524902, "per_token_entropy": [0.07440185546875, 0.552734375, 0.8359375, 0.09649658203125, 0.99365234375, 1.09375, 0.13232421875, 0.17333984375, 0.273193359375, 0.282470703125, 0.08782958984375, 0.12890625, 0.01227569580078125, 0.66455078125, 0.434814453125, 0.423828125, 0.1788330078125, 0.1864013671875, 0.023651123046875, 0.01465606689453125, 0.01505279541015625, 0.7080078125, 0.447265625, 0.01486968994140625, 0.0760498046875, 0.0037212371826171875, 1.1953125, 0.0819091796875, 0.004909515380859375, 0.0177154541015625, 0.00110626220703125, 0.0526123046875, 1.0654296875, 0.00015592575073242188, 0.33154296875, 0.383544921875, 0.054656982421875, 0.78466796875, 0.61474609375, 2.3671875, 0.44677734375, 0.26611328125, 1.345703125, 0.6181640625, 0.0029239654541015625, 0.0010480880737304688, 0.64990234375, 0.004077911376953125, 1.4066696166992188e-05, 0.0153045654296875, 0.000278472900390625, 0.0005335807800292969], "tokens": [664, 319, 477, 753, 6699, 886, 6699, 372, 2179, 32, 664, 319, 477, 601, 886, 14186, 6699, 32, 664, 569, 334, 562, 892, 2179, 6062, 26, 2028, 6062, 6699, 27, 301, 284, 40596, 32, 1553, 3484, 26, 3419, 32, 1366, 32, 1855, 558, 32, 3574, 26, 291, 6699, 32, 416, 32, 1855]}
{"line_number": 84, "line_type": "original", "code": "    b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR));", "entropy": 2.130859375, "is_bug_line": false, "sus_score": 0.6579740047454834, "per_token_entropy": [4.9453125, 4.46875, 0.039764404296875, 0.006092071533203125, 0.6201171875, 4.8359375, 9.203125, 6.1875, 0.2724609375, 2.333984375, 4.0234375, 6.60546875, 0.0017538070678710938, 0.001007080078125, 0.02850341796875, 0.355712890625, 0.615234375, 0.00021159648895263672, 0.0015621185302734375, 0.00021660327911376953, 0.1895751953125], "tokens": [264, 323, 32, 1689, 26, 371, 2656, 558, 26, 5691, 1018, 3456, 2656, 32, 10431, 499, 3456, 2656, 32, 2930, 876]}
{"line_number": 84, "line_type": "generated", "code": "\n      return code;\n    }\n  }", "entropy": 0.34765625, "is_bug_line": false, "sus_score": 0.6579740047454834, "per_token_entropy": [0.224853515625, 1.306640625, 1.0, 0.11700439453125, 0.01264190673828125, 0.0003705024719238281, 0.11700439453125, 0.0020580291748046875], "tokens": [397, 442, 1340, 45, 284, 320, 334, 320]}
{"line_number": 89, "line_type": "original", "code": "    if (sourceExcerpt != null) {", "entropy": 1.599609375, "is_bug_line": false, "sus_score": 0.6543933153152466, "per_token_entropy": [3.64453125, 4.546875, 0.06103515625, 5.05078125, 0.7021484375, 0.025634765625, 1.72265625, 0.0037746429443359375, 0.12432861328125, 0.11236572265625], "tokens": [264, 415, 308, 1855, 571, 21112, 863, 744, 27, 301]}
{"line_number": 89, "line_type": "generated", "code": "\n      StringBuilder b = new StringBuilder();\n      for (int i = region.getStartingLineNumber();\n           i <= region.getEndingLineNumber(); i++) {\n        b.append(String.format(\"%\" + numberLength + \"d", "entropy": 0.1451416015625, "is_bug_line": false, "sus_score": 0.6543933153152466, "per_token_entropy": [0.328125, 0.58251953125, 0.4033203125, 0.001361846923828125, 0.003559112548828125, 0.00020563602447509766, 0.10772705078125, 0.0938720703125, 1.076171875, 0.004680633544921875, 0.09515380859375, 0.330322265625, 0.00907135009765625, 0.2060546875, 6.73532485961914e-05, 0.132080078125, 0.169189453125, 0.009429931640625, 0.0533447265625, 0.439208984375, 0.002727508544921875, 0.059051513671875, 0.001346588134765625, 9.965896606445312e-05, 0.00021266937255859375, 0.0017032623291015625, 1.621246337890625e-05, 0.007152557373046875, 0.367919921875, 0.00635528564453125, 0.0016498565673828125, 0.0440673828125, 0.77490234375, 0.0008497238159179688, 0.0279998779296875, 0.1806640625, 0.513671875, 0.00634002685546875, 0.0019931793212890625, 0.2137451171875, 0.374267578125, 0.00429534912109375, 0.1060791015625, 0.00012350082397460938, 0.00470733642578125, 0.00960540771484375, 0.0625], "tokens": [397, 9706, 323, 280, 537, 9706, 473, 397, 436, 308, 410, 595, 280, 6699, 32, 371, 15624, 29690, 473, 2607, 595, 2511, 6699, 32, 371, 42360, 29690, 473, 595, 1987, 301, 291, 323, 32, 1689, 26, 652, 32, 1643, 4912, 20, 474, 1451, 2380, 474, 313, 86]}
{"line_number": 75, "line_type": "original", "code": "    if (error.sourceName != null) {", "entropy": 1.1328125, "is_bug_line": false, "sus_score": 0.6465272903442383, "per_token_entropy": [2.658203125, 3.447265625, 0.1082763671875, 2.568359375, 0.032257080078125, 2.515625, 0.019378662109375, 0.728515625, 0.0120697021484375, 0.338623046875, 0.0304718017578125], "tokens": [264, 415, 308, 731, 32, 1855, 558, 863, 744, 27, 301]}
{"line_number": 75, "line_type": "generated", "code": "\n    @Override\n    public String format(String text, String sourceName, int lineNumber,\n        ExcerptProvider excerptProvider) {\n      Preconditions.checkArgument(sourceName!= null);\n      Preconditions.checkArgument(lineNumber >= 0);\n      Preconditions", "entropy": 0.42333984375, "is_bug_line": false, "sus_score": 0.6465272903442383, "per_token_entropy": [0.814453125, 2.3671875, 0.004451751708984375, 0.07781982421875, 0.0127410888671875, 0.15380859375, 0.34326171875, 1.166015625, 0.41748046875, 1.8447265625, 0.6357421875, 0.62353515625, 0.56787109375, 0.0911865234375, 0.054412841796875, 0.34375, 0.237060546875, 0.414306640625, 0.2314453125, 1.3173828125, 0.0004875659942626953, 1.02734375, 0.57666015625, 0.10858154296875, 0.02496337890625, 0.0271453857421875, 0.03424072265625, 0.0909423828125, 2.154296875, 0.0005850791931152344, 0.271240234375, 0.12646484375, 0.0308990478515625, 1.48828125, 0.004718780517578125, 0.1546630859375, 0.0010614395141601562, 0.33544921875, 0.276611328125, 0.80517578125, 8.213520050048828e-05, 0.00751495361328125, 0.00823211669921875, 0.0105438232421875, 0.5244140625, 0.0012083053588867188, 1.0458984375, 0.009063720703125, 0.1556396484375, 0.0215911865234375, 0.434326171875, 0.53759765625], "tokens": [284, 477, 1788, 284, 562, 892, 2179, 26, 652, 1344, 30, 892, 1914, 558, 30, 629, 47643, 30, 291, 1283, 21112, 2570, 538, 21112, 2570, 27, 301, 397, 40596, 32, 1553, 3484, 26, 1855, 558, 863, 744, 293, 397, 40596, 32, 1553, 3484, 26, 928, 1918, 2377, 225, 34, 293, 397, 40596]}
{"line_number": 88, "line_type": "original", "code": "    b.append('\\n');", "entropy": 1.787109375, "is_bug_line": false, "sus_score": 0.6459990739822388, "per_token_entropy": [4.3515625, 6.23828125, 0.076904296875, 0.066162109375, 1.74609375, 0.01554107666015625, 0.01311492919921875], "tokens": [264, 323, 32, 1689, 9442, 96, 895]}
{"line_number": 88, "line_type": "generated", "code": "\n      StringBuilder b = new StringBuilder();\n      for (int i = region.getStartingLineNumber();\n           i <= region.getEndingLineNumber(); i++) {\n        String line = code.substring(\n            code.indexOf('\\n', b.length()) + ", "entropy": 0.242919921875, "is_bug_line": false, "sus_score": 0.6459990739822388, "per_token_entropy": [0.1962890625, 0.97216796875, 0.5185546875, 0.001438140869140625, 0.003932952880859375, 0.00019478797912597656, 0.1998291015625, 0.10150146484375, 0.9052734375, 0.00464630126953125, 0.059539794921875, 0.32373046875, 0.00965118408203125, 0.2186279296875, 6.902217864990234e-05, 0.124755859375, 0.18701171875, 0.0095672607421875, 0.050323486328125, 0.455078125, 0.0026702880859375, 0.06170654296875, 0.0014801025390625, 0.00013077259063720703, 0.00028777122497558594, 0.001800537109375, 1.4543533325195312e-05, 0.00691986083984375, 0.3779296875, 0.006317138671875, 0.0014905929565429688, 0.041107177734375, 1.2939453125, 1.388671875, 0.0673828125, 0.91650390625, 0.046844482421875, 0.06719970703125, 0.002742767333984375, 1.2587890625, 0.49072265625, 0.0155181884765625, 0.17822265625, 0.2095947265625, 0.00020122528076171875, 0.0178985595703125, 1.06640625, 0.0198822021484375, 0.003810882568359375, 0.7255859375, 0.0170135498046875, 0.00341796875], "tokens": [397, 9706, 323, 280, 537, 9706, 473, 397, 436, 308, 410, 595, 280, 6699, 32, 371, 15624, 29690, 473, 2607, 595, 2511, 6699, 32, 371, 42360, 29690, 473, 595, 1987, 301, 291, 892, 1628, 280, 1340, 32, 8723, 26, 324, 1340, 32, 7142, 9442, 96, 370, 323, 32, 1322, 1157, 474, 225]}
{"line_number": 87, "line_type": "original", "code": "    b.append(error.description);", "entropy": 2.650390625, "is_bug_line": false, "sus_score": 0.6449984312057495, "per_token_entropy": [4.98828125, 3.826171875, 0.0601806640625, 0.029876708984375, 1.4130859375, 7.36328125, 0.0195159912109375, 6.0234375, 0.1322021484375], "tokens": [264, 323, 32, 1689, 26, 731, 32, 2310, 293]}
{"line_number": 87, "line_type": "generated", "code": "\n      StringBuilder b = new StringBuilder();\n      int lineNumber = region.getStartingLineNumber();\n      for (String line : code.split(\"\\n\")) {\n        b.append(String.format(\"%\" + numberLength + \"d", "entropy": 0.21826171875, "is_bug_line": false, "sus_score": 0.6449984312057495, "per_token_entropy": [0.27197265625, 0.83154296875, 0.52099609375, 0.0012826919555664062, 0.004901885986328125, 0.00015473365783691406, 0.295654296875, 0.10589599609375, 1.376953125, 2.32421875, 0.08349609375, 0.0279083251953125, 0.00010025501251220703, 0.06793212890625, 0.213623046875, 0.0013971328735351562, 0.01064300537109375, 0.05841064453125, 0.54345703125, 0.0221710205078125, 0.10723876953125, 0.020904541015625, 0.03656005859375, 0.35546875, 0.0007295608520507812, 0.00543975830078125, 0.442626953125, 0.039581298828125, 0.2396240234375, 0.0020694732666015625, 0.0168609619140625, 0.5986328125, 0.0007634162902832031, 0.01146697998046875, 0.1298828125, 0.3984375, 0.002506256103515625, 0.0009226799011230469, 0.2230224609375, 0.40576171875, 0.004650115966796875, 0.149169921875, 0.00018918514251708984, 0.005741119384765625, 0.0058441162109375, 0.07574462890625], "tokens": [397, 9706, 323, 280, 537, 9706, 473, 397, 629, 47643, 280, 6699, 32, 371, 15624, 29690, 473, 397, 436, 308, 652, 1628, 499, 1340, 32, 2998, 5528, 96, 2131, 301, 291, 323, 32, 1689, 26, 652, 32, 1643, 4912, 20, 474, 1451, 2380, 474, 313, 86]}
{"line_number": 110, "line_type": "original", "code": "    return b.toString();", "entropy": 2.978515625, "is_bug_line": false, "sus_score": 0.6366031765937805, "per_token_entropy": [4.78125, 5.4921875, 7.29296875, 0.023590087890625, 0.2744140625, 0.01393890380859375], "tokens": [264, 442, 323, 32, 3108, 473]}
{"line_number": 110, "line_type": "generated", "code": "\n        builder.append(\"| \");\n        builder.append(line);\n\n        // next line\n        lineNumber++;\n        start = end + 1;\n        end = code.indexOf('\\n', start);\n      }\n      return builder.toString();\n    }\n  }\n\n ", "entropy": 0.1717529296875, "is_bug_line": false, "sus_score": 0.6366031765937805, "per_token_entropy": [0.45263671875, 0.78955078125, 0.0002727508544921875, 0.00057220458984375, 0.712890625, 0.1741943359375, 0.37158203125, 0.09423828125, 0.00027251243591308594, 6.711483001708984e-05, 0.0009503364562988281, 0.0200958251953125, 0.03326416015625, 1.326171875, 0.295166015625, 0.67236328125, 0.5361328125, 0.1448974609375, 0.869140625, 0.0187835693359375, 0.00582122802734375, 0.2086181640625, 0.0004401206970214844, 0.00795745849609375, 0.09674072265625, 0.003688812255859375, 0.00017821788787841797, 0.0002911090850830078, 0.005252838134765625, 0.035797119140625, 0.0013027191162109375, 0.019683837890625, 1.3589859008789062e-05, 0.000118255615234375, 0.005069732666015625, 0.00013399124145507812, 8.71419906616211e-05, 0.016876220703125, 0.0016651153564453125, 0.061370849609375, 0.000164031982421875, 0.3125, 0.160888671875, 0.1802978515625, 0.0002799034118652344, 0.3037109375, 0.0018510818481445312, 0.007762908935546875, 0.0007390975952148438, 0.0736083984375, 0.00186920166015625, 0.89990234375], "tokens": [291, 4906, 32, 1689, 35619, 7170, 291, 4906, 32, 1689, 26, 928, 293, 584, 434, 2354, 1628, 291, 47643, 3334, 291, 1477, 280, 943, 474, 225, 35, 45, 291, 943, 280, 1340, 32, 7142, 9442, 96, 370, 1477, 293, 397, 320, 397, 442, 4906, 32, 3108, 473, 284, 320, 334, 320, 719]}
{"line_number": 82, "line_type": "original", "code": "    }", "entropy": 2.623046875, "is_bug_line": false, "sus_score": 0.6351725459098816, "per_token_entropy": [5.0625, 0.1824951171875], "tokens": [264, 320]}
{"line_number": 82, "line_type": "generated", "code": "\n      }\n      StringBuilder b = new StringBuilder();\n      LineNumberingFormatter formatter = new LineNumberingFormatter();\n      for (int i = region.getStartLine(); i <= region.getEndLine(); i++) {\n        String line = formatter.formatLine(", "entropy": 0.27978515625, "is_bug_line": false, "sus_score": 0.6351725459098816, "per_token_entropy": [0.285400390625, 0.2122802734375, 0.53564453125, 0.73876953125, 0.4248046875, 0.0009174346923828125, 0.003139495849609375, 0.00012385845184326172, 0.1044921875, 0.10260009765625, 2.41015625, 0.8984375, 0.461669921875, 0.9609375, 0.77587890625, 0.007709503173828125, 0.15966796875, 0.002445220947265625, 2.384185791015625e-07, 0.0001850128173828125, 4.088878631591797e-05, 0.0030460357666015625, 0.08880615234375, 1.115234375, 0.005298614501953125, 0.499267578125, 0.310302734375, 0.01397705078125, 0.6982421875, 7.033348083496094e-05, 0.5966796875, 0.71826171875, 0.043365478515625, 0.138427734375, 0.174072265625, 0.001003265380859375, 5.054473876953125e-05, 0.0035991668701171875, 0.0009908676147460938, 0.003314971923828125, 0.032928466796875, 0.003902435302734375, 0.000461578369140625, 0.0186309814453125, 0.86572265625, 0.1533203125, 0.056121826171875, 0.90576171875, 0.0005254745483398438, 0.002399444580078125, 0.0036792755126953125, 0.0027904510498046875], "tokens": [397, 320, 397, 9706, 323, 280, 537, 9706, 473, 397, 7064, 1918, 299, 8736, 14971, 280, 537, 7064, 1918, 299, 8736, 473, 397, 436, 308, 410, 595, 280, 6699, 32, 31862, 1811, 473, 595, 2511, 6699, 32, 45709, 1811, 473, 595, 1987, 301, 291, 892, 1628, 280, 14971, 32, 1643, 1811, 26]}
{"line_number": 122, "line_type": "original", "code": "      return line;", "entropy": 3.90234375, "is_bug_line": false, "sus_score": 0.6297120451927185, "per_token_entropy": [2.111328125, 5.8046875, 7.578125, 0.11248779296875], "tokens": [647, 442, 1628, 45]}
{"line_number": 122, "line_type": "generated", "code": "\n      }\n      return builder.toString();\n    }\n  }\n\n  /**\n   * Formats a region by appending line numbers in front, e.g.\n   * <pre>   9", "entropy": 0.26611328125, "is_bug_line": false, "sus_score": 0.6297120451927185, "per_token_entropy": [1.4306640625, 0.0280609130859375, 0.45068359375, 0.138671875, 0.14794921875, 0.0006971359252929688, 0.7470703125, 0.0063018798828125, 0.04296875, 0.0007724761962890625, 0.1002197265625, 0.006072998046875, 0.5859375, 0.395751953125, 0.1490478515625, 0.0005593299865722656, 0.880859375, 0.0008878707885742188, 0.37353515625, 0.0859375, 0.2454833984375, 1.2177734375, 0.002223968505859375, 0.6865234375, 0.12109375, 0.300537109375, 0.0276641845703125, 0.3193359375, 0.10345458984375, 0.0002428293228149414, 0.0002161264419555664, 0.00742340087890625, 0.0078887939453125, 0.00048470497131347656, 0.034881591796875, 0.00567626953125, 0.09161376953125, 1.3671875, 0.266357421875], "tokens": [397, 320, 397, 442, 4906, 32, 3108, 473, 284, 320, 334, 320, 719, 1022, 664, 319, 3720, 1966, 312, 6699, 810, 1123, 4013, 1628, 7515, 328, 8432, 30, 484, 32, 89, 32, 664, 319, 333, 1001, 48, 264, 43]}
{"line_number": 200, "line_type": "original", "code": "", "entropy": 0.443359375, "is_bug_line": false, "sus_score": 0.6241984963417053, "per_token_entropy": [0.443359375], "tokens": [203]}
{"line_number": 200, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.6241984963417053, "per_token_entropy": [], "tokens": []}
{"line_number": 85, "line_type": "original", "code": "    b.append(\" - \");", "entropy": 2.841796875, "is_bug_line": false, "sus_score": 0.6222009658813477, "per_token_entropy": [7.01171875, 3.69921875, 0.0565185546875, 0.017913818359375, 2.1796875, 6.4765625, 0.450439453125], "tokens": [264, 323, 32, 1689, 440, 429, 7170]}
{"line_number": 85, "line_type": "generated", "code": "\n      StringBuilder b = new StringBuilder();\n      int lineCount = region.getLastLine() - region.getStartLine() + 1;\n      int digits = lineCount > 0? (int) Math.floor(Math.log10(lineCount", "entropy": 0.405029296875, "is_bug_line": false, "sus_score": 0.6222009658813477, "per_token_entropy": [0.57373046875, 1.9130859375, 0.5458984375, 0.0012531280517578125, 0.004535675048828125, 0.00019025802612304688, 0.310791015625, 0.1590576171875, 0.88525390625, 1.7626953125, 1.0634765625, 0.00589752197265625, 1.208984375, 0.0005211830139160156, 0.71630859375, 0.90283203125, 0.2119140625, 0.0987548828125, 0.0033664703369140625, 4.220008850097656e-05, 1.1796875, 0.0048675537109375, 0.1806640625, 0.005279541015625, 0.0010404586791992188, 0.0035247802734375, 0.0015459060668945312, 0.1551513671875, 0.97412109375, 1.806640625, 0.068603515625, 1.7978515625, 0.0033321380615234375, 1.8837890625, 0.06524658203125, 0.3515625, 0.08428955078125, 0.239013671875, 0.040008544921875, 0.0247039794921875, 0.259765625, 0.0008835792541503906, 1.4716796875, 0.005767822265625, 0.03155517578125, 0.0007414817810058594, 0.0009918212890625, 0.041900634765625, 6.306171417236328e-05, 0.0031795501708984375, 0.0014438629150390625, 0.00016260147094726562], "tokens": [397, 9706, 323, 280, 537, 9706, 473, 397, 629, 1628, 1534, 280, 6699, 32, 20197, 1811, 346, 429, 6699, 32, 31862, 1811, 346, 474, 225, 35, 45, 397, 629, 16105, 280, 1628, 1534, 848, 225, 34, 1018, 308, 410, 27, 4175, 32, 9121, 26, 5717, 32, 751, 35, 34, 26, 928, 1534]}
{"line_number": 144, "line_type": "original", "code": "        // line extraction", "entropy": 5.4375, "is_bug_line": false, "sus_score": 0.607744038105011, "per_token_entropy": [6.94140625, 2.427734375, 2.9140625, 9.4609375], "tokens": [351, 434, 1628, 32808]}
{"line_number": 144, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.607744038105011, "per_token_entropy": [], "tokens": []}
