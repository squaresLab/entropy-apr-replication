{"line_number": 1660, "line_type": "original", "code": "      FunctionType fnType = type.toMaybeFunctionType();", "entropy": 1.7548828125, "is_bug_line": false, "sus_score": 0.6190411448478699, "per_token_entropy": [3.798828125, 7.96484375, 0.01163482666015625, 1.849609375, 0.09442138671875, 0.07989501953125, 3.19140625, 0.185791015625, 3.82421875, 0.0211029052734375, 0.040802001953125, 0.005615234375], "tokens": [647, 4540, 620, 2771, 620, 280, 827, 32, 452, 13257, 44334, 473]}
{"line_number": 1660, "line_type": "generated", "code": "\n    }\n  }\n\n  /**\n   * Check whether there's any property conflict for a particular super\n   * interface\n   * @param t The node traversal object that supplies context\n   * @param n The node being visited\n   * @param functionName The function", "entropy": 0.12939453125, "is_bug_line": false, "sus_score": 0.6190411448478699, "per_token_entropy": [0.283447265625, 0.048736572265625, 0.11798095703125, 0.0037364959716796875, 0.205810546875, 0.0762939453125, 0.0163726806640625, 0.0003020763397216797, 0.970703125, 0.2239990234375, 0.40185546875, 0.10491943359375, 0.0645751953125, 0.69384765625, 0.07305908203125, 0.2421875, 0.450927734375, 0.288330078125, 0.9892578125, 0.364013671875, 0.000331878662109375, 0.2188720703125, 0.392578125, 0.01384735107421875, 0.033416748046875, 0.00095367431640625, 0.0221710205078125, 0.006198883056640625, 0.0026035308837890625, 0.0018453598022460938, 0.0010280609130859375, 0.0009212493896484375, 0.0001163482666015625, 5.888938903808594e-05, 0.0003795623779296875, 0.01306915283203125, 0.0018444061279296875, 7.104873657226562e-05, 0.0001443624496459961, 0.0633544921875, 0.002658843994140625, 0.0261077880859375, 0.0021572113037109375, 0.0003161430358886719, 0.005096435546875, 0.00341033935546875, 0.00013256072998046875, 0.0017108917236328125, 0.25537109375, 0.0198516845703125, 0.0034885406494140625, 0.01019287109375], "tokens": [284, 320, 334, 320, 719, 1022, 664, 319, 3456, 4946, 2017, 1182, 1346, 2804, 11730, 436, 312, 8409, 2599, 664, 319, 2568, 664, 319, 477, 753, 273, 886, 1541, 34395, 1300, 688, 11066, 6827, 1619, 664, 319, 477, 753, 310, 886, 1541, 3998, 21286, 664, 319, 477, 753, 667, 558, 886, 667]}
{"line_number": 694, "line_type": "original", "code": "      case Token.LE:", "entropy": 2.037109375, "is_bug_line": false, "sus_score": 0.6180182695388794, "per_token_entropy": [6.22265625, 1.7255859375, 0.0037288665771484375, 0.0004520416259765625, 4.25390625, 0.0089263916015625], "tokens": [647, 1135, 6512, 32, 815, 44]}
{"line_number": 694, "line_type": "generated", "code": "\n        if (rightType.isStruct()) {\n          report(t, right, INSTANCEOF_USED_WITH_STRUCT);\n        }\n        ensureTyped(t, n, BOOLEAN_TYPE);\n        break;\n\n      case Token.LSH:\n      case", "entropy": 0.107177734375, "is_bug_line": false, "sus_score": 0.6180182695388794, "per_token_entropy": [0.160400390625, 0.97802734375, 0.1746826171875, 0.423583984375, 0.0484619140625, 0.01270294189453125, 0.1961669921875, 0.1744384765625, 0.0635986328125, 0.0003337860107421875, 0.003963470458984375, 0.06072998046875, 0.00774383544921875, 0.007175445556640625, 8.571147918701172e-05, 0.07989501953125, 0.0011444091796875, 0.1348876953125, 0.029876708984375, 0.00036787986755371094, 0.016510009765625, 0.00013053417205810547, 0.04339599609375, 6.508827209472656e-05, 0.01348114013671875, 0.08148193359375, 0.023223876953125, 0.00011861324310302734, 0.17822265625, 0.2418212890625, 0.00045013427734375, 0.0002732276916503906, 0.0031280517578125, 5.3763389587402344e-05, 0.001415252685546875, 0.00017011165618896484, 0.004863739013671875, 1.5020370483398438e-05, 5.364418029785156e-06, 0.003070831298828125, 0.0207061767578125, 0.00762176513671875, 0.0005316734313964844, 0.11029052734375, 0.06158447265625, 0.0014238357543945312, 1.3947486877441406e-05, 1.9609375, 0.12493896484375, 0.0018281936645507812, 0.1134033203125, 0.0002803802490234375], "tokens": [291, 415, 308, 990, 620, 32, 297, 3858, 1157, 301, 616, 3639, 26, 102, 30, 2091, 30, 40000, 2109, 81, 9208, 81, 12003, 81, 10143, 293, 291, 320, 291, 7279, 11851, 26, 102, 30, 310, 30, 36143, 81, 2319, 293, 291, 1626, 45, 1687, 1135, 6512, 32, 62, 2514, 44, 397, 1135]}
{"line_number": 794, "line_type": "original", "code": "        validator.expectObject(t, child, childType, \"with requires an object\");", "entropy": 3.00390625, "is_bug_line": false, "sus_score": 0.603310763835907, "per_token_entropy": [7.2265625, 9.390625, 0.0019817352294921875, 0.97314453125, 2.99609375, 2.646484375, 0.2091064453125, 0.0077362060546875, 6.546875, 2.3828125, 1.796875, 0.050384521484375, 2.029296875, 2.9296875, 5.7890625, 10.625, 0.732421875, 0.13134765625, 0.60791015625], "tokens": [351, 13420, 32, 2358, 959, 26, 102, 30, 2838, 30, 2838, 620, 30, 313, 1793, 7171, 600, 1300, 724]}
{"line_number": 794, "line_type": "generated", "code": "\n          typeable = false;\n        }\n        break;\n\n      // These nodes are typed during the type inference.\n      case Token.CALL:\n      case Token.NEW:\n      case Token.THIS:\n      case Token.TRUE:\n      case Token.FALSE:", "entropy": 0.2376708984375, "is_bug_line": false, "sus_score": 0.603310763835907, "per_token_entropy": [0.6318359375, 0.26611328125, 0.006282806396484375, 0.0007643699645996094, 0.01110076904296875, 0.0005116462707519531, 0.259521484375, 0.00040912628173828125, 0.06109619140625, 0.019989013671875, 0.00011849403381347656, 0.0289306640625, 1.001953125, 0.76123046875, 0.1678466796875, 0.91552734375, 0.80517578125, 1.2421875, 0.55078125, 0.134033203125, 0.3486328125, 0.1396484375, 0.0323486328125, 0.0599365234375, 0.0006165504455566406, 3.790855407714844e-05, 0.79541015625, 0.0006823539733886719, 0.46630859375, 0.0018377304077148438, 0.00037479400634765625, 1.3113021850585938e-05, 0.12335205078125, 0.0007357597351074219, 0.93310546875, 0.004268646240234375, 0.0003521442413330078, 3.6954879760742188e-06, 1.30859375, 0.0002627372741699219, 0.469482421875, 0.0037593841552734375, 0.00026607513427734375, 1.33514404296875e-05, 0.79736328125, 0.0004715919494628906, 0.0019207000732421875, 2.47955322265625e-05, 3.4570693969726562e-06, 3.695487976074219e-05, 0.003932952880859375, 2.9802322387695312e-06], "tokens": [616, 827, 444, 280, 901, 45, 291, 320, 291, 1626, 45, 1687, 434, 8204, 5166, 884, 20639, 5929, 322, 827, 22410, 32, 397, 1135, 6512, 32, 5038, 44, 397, 1135, 6512, 32, 11356, 44, 397, 1135, 6512, 32, 25339, 44, 397, 1135, 6512, 32, 6373, 44, 397, 1135, 6512, 32, 7347, 44]}
{"line_number": 1661, "line_type": "original", "code": "      if (fnType != null) {", "entropy": 1.3837890625, "is_bug_line": true, "sus_score": 0.5821467638015747, "per_token_entropy": [4.4609375, 2.0, 0.152587890625, 4.17578125, 0.09771728515625, 1.2548828125, 0.004093170166015625, 0.262939453125, 0.045623779296875], "tokens": [647, 415, 308, 3359, 620, 863, 744, 27, 301]}
{"line_number": 1661, "line_type": "generated", "code": "\n  }\n\n  /**\n   * Check whether there's any property conflict for a particular super\n   * interface\n   * @param t The node traversal object that supplies context\n   * @param n The node being visited\n   * @param functionName The function name being", "entropy": 0.1451416015625, "is_bug_line": true, "sus_score": 0.5821467638015747, "per_token_entropy": [0.5712890625, 0.211669921875, 0.262451171875, 0.0958251953125, 0.0230712890625, 0.0003197193145751953, 1.12109375, 0.2281494140625, 0.4638671875, 0.11114501953125, 0.06610107421875, 0.63818359375, 0.07440185546875, 0.2391357421875, 0.479248046875, 0.319580078125, 1.0458984375, 0.373046875, 0.0003075599670410156, 0.258056640625, 0.40283203125, 0.0227203369140625, 0.04046630859375, 0.0012884140014648438, 0.026641845703125, 0.0084686279296875, 0.003147125244140625, 0.002162933349609375, 0.0011844635009765625, 0.0010833740234375, 0.00013816356658935547, 1.811981201171875e-05, 0.00041365623474121094, 0.0171051025390625, 0.0019073486328125, 0.00010514259338378906, 0.00022661685943603516, 0.088134765625, 0.0034275054931640625, 0.0305328369140625, 0.0025043487548828125, 0.00038313865661621094, 0.005767822265625, 0.004177093505859375, 0.00022125244140625, 0.002239227294921875, 0.23291015625, 0.034332275390625, 0.004001617431640625, 0.01016998291015625, 0.001621246337890625, 0.0126495361328125], "tokens": [334, 320, 719, 1022, 664, 319, 3456, 4946, 2017, 1182, 1346, 2804, 11730, 436, 312, 8409, 2599, 664, 319, 2568, 664, 319, 477, 753, 273, 886, 1541, 34395, 1300, 688, 11066, 6827, 1619, 664, 319, 477, 753, 310, 886, 1541, 3998, 21286, 664, 319, 477, 753, 667, 558, 886, 667, 636, 3998]}
{"line_number": 1563, "line_type": "original", "code": "  }", "entropy": 0.65869140625, "is_bug_line": false, "sus_score": 0.5766029953956604, "per_token_entropy": [1.2587890625, 0.05865478515625], "tokens": [225, 320]}
{"line_number": 1563, "line_type": "generated", "code": "  }\n\n  /**\n   * Visits a GETPROP node.\n   *\n   * @param t The node traversal object that supplies context, such as the\n   * scope chain to use in name lookups as well as error reporting.\n   * @param", "entropy": 0.06671142578125, "is_bug_line": false, "sus_score": 0.5766029953956604, "per_token_entropy": [1.259765625, 0.058624267578125, 0.478759765625, 0.1536865234375, 0.0209503173828125, 0.0003352165222167969, 0.615234375, 0.0013742446899414062, 0.08984375, 0.492919921875, 0.04345703125, 0.041534423828125, 0.057861328125, 0.0297698974609375, 0.00246429443359375, 0.014404296875, 6.127357482910156e-05, 0.0127105712890625, 0.0008854866027832031, 0.01666259765625, 0.005016326904296875, 0.00293731689453125, 0.0010290145874023438, 0.0019369125366210938, 0.005825042724609375, 0.000698089599609375, 6.9141387939453125e-06, 0.00084686279296875, 0.0015897750854492188, 0.000690460205078125, 0.00025725364685058594, 0.0019435882568359375, 0.005016326904296875, 5.9604644775390625e-06, 0.043975830078125, 9.524822235107422e-05, 0.00030350685119628906, 0.0001100301742553711, 0.00010037422180175781, 0.00019860267639160156, 0.00043654441833496094, 1.1920928955078125e-07, 0.0002865791320800781, 3.5762786865234375e-06, 0.0003006458282470703, 0.00014019012451171875, 0.00018656253814697266, 0.0008730888366699219, 0.00046896934509277344, 0.0007071495056152344, 0.0007510185241699219, 0.00016891956329345703], "tokens": [225, 320, 719, 1022, 664, 319, 6255, 1507, 312, 6272, 15262, 1541, 32, 664, 319, 664, 319, 477, 753, 273, 886, 1541, 34395, 1300, 688, 11066, 6827, 1619, 30, 3751, 619, 322, 664, 319, 4576, 8241, 372, 793, 328, 636, 2779, 9016, 619, 4487, 619, 1048, 15945, 32, 664, 319, 477, 753]}
{"line_number": 2038, "line_type": "original", "code": "    JSType jsType = n.getJSType();", "entropy": 1.0693359375, "is_bug_line": false, "sus_score": 0.5665392279624939, "per_token_entropy": [3.794921875, 2.62109375, 0.0009126663208007812, 4.28515625, 0.0259552001953125, 0.074951171875, 1.779296875, 0.005390167236328125, 0.179443359375, 0.0225830078125, 9.322166442871094e-05, 0.03826904296875], "tokens": [264, 7750, 620, 4060, 620, 280, 310, 32, 371, 4624, 620, 473]}
{"line_number": 2038, "line_type": "generated", "code": "\n    if (type.isFunctionType()) {\n      n.putBooleanProp(Node.IS_FUNCTION_NODE, true);\n    }\n    if (type == getNativeType(UNKNOWN_TYPE)) {\n      // TODO(nicksantos): This", "entropy": 0.369873046875, "is_bug_line": false, "sus_score": 0.5665392279624939, "per_token_entropy": [0.1534423828125, 0.626953125, 0.207275390625, 0.71875, 0.50439453125, 0.1497802734375, 0.467529296875, 0.97509765625, 0.0051727294921875, 0.027984619140625, 1.4580078125, 0.005352020263671875, 1.5703125, 0.01523590087890625, 0.043792724609375, 0.002410888671875, 0.0189361572265625, 0.0030078887939453125, 0.1337890625, 4.601478576660156e-05, 0.0304107666015625, 0.03680419921875, 0.6669921875, 0.0794677734375, 0.016387939453125, 0.00043654441833496094, 0.1424560546875, 0.000102996826171875, 1.1826171875, 1.1845703125, 0.2666015625, 1.216796875, 1.794921875, 0.912109375, 0.019378662109375, 0.017974853515625, 0.0013885498046875, 0.198974609375, 9.441375732421875e-05, 0.0002453327178955078, 0.260498046875, 0.00286102294921875, 0.05975341796875, 1.7978515625, 1.2880859375, 0.0210723876953125, 0.343994140625, 0.00014269351959228516, 0.00023424625396728516, 1.1920928955078125e-06, 0.0177764892578125, 0.5791015625], "tokens": [284, 415, 308, 681, 32, 39504, 620, 1157, 301, 397, 310, 32, 524, 4709, 6567, 26, 1212, 32, 1296, 81, 9842, 81, 9179, 30, 861, 293, 284, 320, 284, 415, 308, 681, 610, 622, 6134, 620, 26, 14174, 81, 2319, 490, 301, 397, 434, 4296, 26, 96, 6758, 278, 10369, 711, 1348]}
{"line_number": 2039, "line_type": "original", "code": "    if (jsType == null) {", "entropy": 2.017578125, "is_bug_line": false, "sus_score": 0.547251284122467, "per_token_entropy": [3.4609375, 5.99609375, 0.405517578125, 4.3125, 1.8701171875, 1.630859375, 0.105224609375, 0.323486328125, 0.059234619140625], "tokens": [264, 415, 308, 754, 620, 610, 744, 27, 301]}
{"line_number": 2039, "line_type": "generated", "code": "\n        n.isCast(),\n        \"Function nodes must always have function type\");\n\n    // Casts are only allowed on LHS of assignments.\n    if (n.isCast() &&!n.getParent().isAssign()) {", "entropy": 0.7744140625, "is_bug_line": false, "sus_score": 0.547251284122467, "per_token_entropy": [0.8154296875, 1.6064453125, 0.007556915283203125, 0.83984375, 1.70703125, 1.0380859375, 0.595703125, 0.10345458984375, 2.234375, 0.916015625, 1.11328125, 1.4326171875, 0.6708984375, 0.5966796875, 0.1248779296875, 0.81494140625, 1.033203125, 1.49609375, 3.455078125, 0.42236328125, 1.3798828125, 1.875, 1.7158203125, 0.4912109375, 2.23828125, 1.4384765625, 1.1962890625, 0.69189453125, 0.73046875, 0.1529541015625, 0.47119140625, 0.2373046875, 0.1873779296875, 0.00433349609375, 0.08282470703125, 0.18896484375, 0.48876953125, 0.113525390625, 0.61279296875, 0.2052001953125, 0.0004124641418457031, 0.8388671875, 0.00011134147644042969, 0.0036029815673828125, 0.0024089813232421875, 0.04345703125, 0.002323150634765625], "tokens": [291, 310, 32, 297, 8946, 1026, 291, 313, 2447, 5166, 2298, 5182, 1159, 667, 827, 724, 446, 434, 23894, 101, 884, 1755, 6660, 544, 498, 11493, 432, 29410, 32, 284, 415, 308, 96, 32, 297, 8946, 346, 962, 653, 96, 32, 18789, 922, 297, 9079, 1157, 301]}
{"line_number": 792, "line_type": "original", "code": "        Node child = n.getFirstChild();", "entropy": 1.748046875, "is_bug_line": false, "sus_score": 0.5413565039634705, "per_token_entropy": [7.11328125, 4.49609375, 3.013671875, 0.53662109375, 0.19384765625, 0.01000213623046875, 0.34765625, 0.0005297660827636719, 0.021240234375], "tokens": [351, 4004, 2838, 280, 310, 32, 25657, 2931, 473]}
{"line_number": 792, "line_type": "generated", "code": "\n        typeable = false;\n        break;\n\n      // These nodes are typed during the type inference.\n      case Token.CALL:", "entropy": 0.34423828125, "is_bug_line": false, "sus_score": 0.5413565039634705, "per_token_entropy": [0.236572265625, 0.984375, 0.044952392578125, 0.000946044921875, 0.042724609375, 0.00020945072174072266, 0.0159149169921875, 0.042327880859375, 0.0004305839538574219, 0.045867919921875, 0.99755859375, 0.6279296875, 0.1685791015625, 0.93212890625, 0.78125, 1.3681640625, 0.43603515625, 0.11285400390625, 0.259521484375, 0.1143798828125, 0.03411865234375, 0.041168212890625, 0.0006995201110839844, 5.829334259033203e-05, 1.6640625, 0.0006947517395019531], "tokens": [291, 827, 444, 280, 901, 45, 291, 1626, 45, 1687, 434, 8204, 5166, 884, 20639, 5929, 322, 827, 22410, 32, 397, 1135, 6512, 32, 5038, 44]}
{"line_number": 1237, "line_type": "original", "code": "        boolean interfaceHasProperty =", "entropy": 2.8984375, "is_bug_line": false, "sus_score": 0.5375944972038269, "per_token_entropy": [3.68359375, 4.01953125, 7.8125, 1.0146484375, 0.79638671875, 0.058837890625], "tokens": [351, 1905, 2568, 3993, 1653, 280]}
{"line_number": 1237, "line_type": "generated", "code": "\n      }\n      if (!superClassPropType.equals(propertyType)) {\n        compiler.report(t.makeError(n, reportInvalidOverride,\n            INVALID_OVERRIDE_TYPE, propertyName,\n            topInstanceType.toString(),\n            propertyType.", "entropy": 0.298583984375, "is_bug_line": false, "sus_score": 0.5375944972038269, "per_token_entropy": [0.80615234375, 0.049346923828125, 0.426025390625, 0.58837890625, 0.4833984375, 1.255859375, 0.014251708984375, 0.032012939453125, 2.3365020751953125e-05, 0.007389068603515625, 1.76953125, 0.0306854248046875, 0.00943756103515625, 1.0848045349121094e-05, 0.2158203125, 0.00025010108947753906, 0.041290283203125, 0.83544921875, 0.00012576580047607422, 0.00128173828125, 0.00939178466796875, 0.0838623046875, 0.000324249267578125, 0.00173187255859375, 0.00235748291015625, 0.00021386146545410156, 0.06304931640625, 0.0016450881958007812, 1.607421875, 1.2568359375, 0.0267333984375, 0.0345458984375, 0.0206756591796875, 0.30517578125, 0.0021800994873046875, 0.291748046875, 0.482421875, 1.181640625, 0.01544952392578125, 0.28173828125, 0.025665283203125, 0.381591796875, 1.248046875, 0.0001316070556640625, 3.0517578125e-05, 0.0214385986328125, 0.006343841552734375, 0.328125, 0.61669921875, 0.60791015625, 0.0011491775512695312, 0.053741455078125], "tokens": [397, 320, 397, 415, 1429, 5266, 1339, 6567, 620, 32, 3574, 26, 2433, 620, 490, 301, 291, 8980, 32, 3734, 26, 102, 32, 2682, 924, 26, 96, 30, 3639, 3817, 1788, 30, 324, 22855, 81, 25879, 81, 2319, 30, 28859, 30, 324, 2663, 1810, 620, 32, 3108, 1026, 324, 2804, 620, 32]}
{"line_number": 1731, "line_type": "original", "code": "          baseConstructor.isInterface()) {", "entropy": 3.208984375, "is_bug_line": false, "sus_score": 0.5368460416793823, "per_token_entropy": [4.15625, 10.5859375, 2.376953125, 3.57421875, 3.55859375, 0.09857177734375, 1.27734375, 0.036285400390625], "tokens": [2033, 1695, 7932, 32, 297, 3041, 1157, 301]}
{"line_number": 1731, "line_type": "generated", "code": "\n        checkInterfaceConflictProperties(t, n, functionPrivateName,\n            functionType.getOwnProperties(), new HashMap<String, ObjectType>(),\n            functionType);\n      }\n    } else {\n      // Check whether the extended interfaces have any conflicts\n      if (", "entropy": 0.304443359375, "is_bug_line": false, "sus_score": 0.5368460416793823, "per_token_entropy": [0.455810546875, 1.263671875, 0.0660400390625, 0.023468017578125, 0.1385498046875, 0.0025081634521484375, 0.2213134765625, 0.0002808570861816406, 0.00518798828125, 0.001338958740234375, 0.440185546875, 0.054718017578125, 1.2040138244628906e-05, 0.035858154296875, 0.2490234375, 0.311279296875, 0.002017974853515625, 0.0132598876953125, 1.3994140625, 0.5185546875, 0.01207733154296875, 0.02899169921875, 0.74609375, 0.007282257080078125, 0.036224365234375, 0.002170562744140625, 6.29425048828125e-05, 0.08416748046875, 0.01139068603515625, 0.070068359375, 0.0513916015625, 0.00013375282287597656, 0.62109375, 0.406982421875, 0.0017900466918945312, 1.27734375, 0.004291534423828125, 0.755859375, 0.55078125, 0.0850830078125, 0.7216796875, 2.373046875, 0.75537109375, 0.41748046875, 0.81689453125, 0.1759033203125, 0.044342041015625, 0.0264739990234375, 0.012420654296875, 0.147705078125, 0.373779296875, 0.0162200927734375], "tokens": [291, 1505, 3041, 19610, 3289, 26, 102, 30, 310, 30, 667, 6527, 558, 30, 324, 667, 620, 32, 371, 8140, 3289, 1026, 537, 8322, 46, 652, 30, 42562, 17971, 324, 667, 620, 293, 397, 320, 284, 320, 813, 301, 397, 434, 3456, 4946, 322, 13969, 14091, 1159, 1346, 20172, 397, 415, 308]}
{"line_number": 1510, "line_type": "original", "code": "  private SuggestionPair getClosestPropertySuggestion(", "entropy": 1.544921875, "is_bug_line": false, "sus_score": 0.5330891013145447, "per_token_entropy": [4.8828125, 8.515625, 2.00390625, 0.0004642009735107422, 0.0007257461547851562, 0.0228729248046875, 0.007293701171875, 0.007335662841796875, 0.0001690387725830078, 0.01523590087890625], "tokens": [225, 945, 28192, 285, 5442, 622, 34940, 1653, 28807, 26]}
{"line_number": 1510, "line_type": "generated", "code": "\n    } else {\n      return null;\n    }\n  }\n\n  private boolean isPropertyTest(Node n) {\n    if (n.isAssign()) {\n      n = n.getLastChild();\n    }\n    return n.isGetProp() || n", "entropy": 0.240966796875, "is_bug_line": false, "sus_score": 0.5330891013145447, "per_token_entropy": [0.1336669921875, 0.09613037109375, 1.044921875, 0.0166778564453125, 0.0194244384765625, 0.01285552978515625, 0.003856658935546875, 0.0017070770263671875, 0.1644287109375, 0.0016374588012695312, 0.0797119140625, 0.003726959228515625, 0.7568359375, 0.9140625, 1.181640625, 0.082763671875, 0.04693603515625, 0.0264892578125, 0.0018978118896484375, 0.0014095306396484375, 0.071533203125, 0.0025634765625, 0.00019848346710205078, 0.0208892822265625, 1.6494140625, 0.161865234375, 0.131103515625, 0.10113525390625, 0.2607421875, 1.0498046875, 0.2333984375, 0.00191497802734375, 0.007015228271484375, 1.3701171875, 0.0005064010620117188, 0.0304107666015625, 5.4717063903808594e-05, 0.32470703125, 0.0108489990234375, 0.11322021484375, 0.038116455078125, 2.288818359375e-05, 0.30615234375, 0.6962890625, 0.24169921875, 0.0189971923828125, 0.328857421875, 0.1871337890625, 0.0528564453125, 0.24951171875, 0.1656494140625, 0.11175537109375], "tokens": [284, 320, 813, 301, 397, 442, 744, 45, 284, 320, 334, 320, 719, 945, 1905, 438, 1653, 1006, 26, 1212, 310, 27, 301, 284, 415, 308, 96, 32, 297, 9079, 1157, 301, 397, 310, 280, 310, 32, 20197, 2931, 473, 284, 320, 284, 442, 310, 32, 297, 936, 6567, 346, 1276, 310]}
{"line_number": 663, "line_type": "original", "code": "        // because it probably means they screwed up.", "entropy": 3.431640625, "is_bug_line": false, "sus_score": 0.5294175744056702, "per_token_entropy": [4.35546875, 1.6494140625, 8.3515625, 2.9375, 7.26171875, 2.240234375, 3.103515625, 5.81640625, 0.0043792724609375, 0.0290679931640625, 2.0078125], "tokens": [351, 434, 3301, 561, 7801, 6058, 2953, 27115, 35257, 973, 32]}
{"line_number": 663, "line_type": "generated", "code": "\n          if (leftType.isUnknownType() && rightType.isUnknownType()) {\n            message = \"operands of comparison\";\n          }", "entropy": 0.46337890625, "is_bug_line": false, "sus_score": 0.5294175744056702, "per_token_entropy": [0.1993408203125, 0.9228515625, 0.380859375, 0.69970703125, 0.0054779052734375, 0.022003173828125, 2.3828125, 1.1181640625, 0.626953125, 0.40087890625, 1.6640625, 0.2161865234375, 5.841255187988281e-05, 0.004383087158203125, 0.417724609375, 0.0374755859375, 0.0001971721649169922, 0.0251922607421875, 0.000621795654296875, 0.0400390625, 1.0576171875, 0.2298583984375, 0.2186279296875, 2.25, 0.2257080078125, 0.14599609375, 0.0880126953125, 0.053955078125, 3.445148468017578e-05], "tokens": [616, 415, 308, 1873, 620, 32, 297, 5842, 620, 346, 962, 2091, 620, 32, 297, 5842, 620, 1157, 301, 324, 1474, 280, 313, 29508, 432, 14828, 866, 616, 320]}
{"line_number": 845, "line_type": "original", "code": "        } else {", "entropy": 2.640625, "is_bug_line": false, "sus_score": 0.5290725231170654, "per_token_entropy": [5.65625, 3.5078125, 0.01384735107421875, 1.3857421875], "tokens": [351, 320, 813, 301]}
{"line_number": 845, "line_type": "generated", "code": "\n      unknownCount++;\n    } else if (type.isNoType()) {\n      noCount++;\n    } else {\n      typedCount++;\n    }\n  }\n\n  /**\n   * Counts the given node in the untyped statistics.\n   * @param n", "entropy": 0.237060546875, "is_bug_line": false, "sus_score": 0.5290725231170654, "per_token_entropy": [0.25439453125, 0.286865234375, 0.085205078125, 0.00833892822265625, 0.1346435546875, 0.0004875659942626953, 0.034759521484375, 0.36328125, 0.033538818359375, 0.028228759765625, 0.032623291015625, 0.48486328125, 0.186279296875, 0.138671875, 0.057037353515625, 0.00038170814514160156, 0.499267578125, 0.2335205078125, 0.876953125, 0.0015039443969726562, 0.0328369140625, 9.572505950927734e-05, 0.04986572265625, 0.96533203125, 0.0916748046875, 0.2396240234375, 0.031768798828125, 0.005126953125, 0.1658935546875, 0.0006308555603027344, 0.350830078125, 0.0011005401611328125, 0.1552734375, 0.564453125, 0.09698486328125, 0.0003399848937988281, 2.61328125, 0.05767822265625, 0.18310546875, 0.341552734375, 0.1470947265625, 0.142578125, 0.0224151611328125, 2.10546875, 0.0011892318725585938, 0.0391845703125, 0.043792724609375, 0.0304718017578125, 0.039886474609375, 0.04559326171875, 0.0007243156433105469, 0.0200958251953125], "tokens": [397, 8665, 1534, 3334, 284, 320, 813, 415, 308, 681, 32, 297, 2023, 620, 1157, 301, 397, 1289, 1534, 3334, 284, 320, 813, 301, 397, 20639, 1534, 3334, 284, 320, 334, 320, 719, 1022, 664, 319, 9618, 101, 322, 2702, 1541, 328, 322, 5406, 8858, 14564, 32, 664, 319, 477, 753, 310]}
{"line_number": 1657, "line_type": "original", "code": "    Node constructor = n.getFirstChild();", "entropy": 2.1328125, "is_bug_line": false, "sus_score": 0.5287274718284607, "per_token_entropy": [4.6875, 7.25, 5.015625, 0.416748046875, 0.9443359375, 0.034027099609375, 0.6064453125, 0.0029392242431640625, 0.2430419921875], "tokens": [264, 4004, 4374, 280, 310, 32, 25657, 2931, 473]}
{"line_number": 1657, "line_type": "generated", "code": "\n        }\n      } else if (currentProperties.get(name) == null) {\n        compiler.report(\n            t.makeError(n, MISSING_INTERFACE_PROPERTY,\n                functionName, name, interfaceType.toString()));", "entropy": 0.2047119140625, "is_bug_line": false, "sus_score": 0.5287274718284607, "per_token_entropy": [0.32958984375, 0.01151275634765625, 0.2269287109375, 5.91278076171875e-05, 0.370849609375, 0.619140625, 0.458251953125, 0.1861572265625, 0.131103515625, 0.0222015380859375, 1.2734375, 0.00015747547149658203, 0.002422332763671875, 0.0024356842041015625, 0.693359375, 0.003681182861328125, 0.062225341796875, 0.0003941059112548828, 0.0294647216796875, 0.7197265625, 8.666515350341797e-05, 0.0009598731994628906, 0.00139617919921875, 0.37255859375, 0.0012769699096679688, 6.35385513305664e-05, 0.0003666877746582031, 0.0004742145538330078, 0.0001380443572998047, 0.0172576904296875, 0.00024127960205078125, 2.142578125, 0.006282806396484375, 5.424022674560547e-05, 1.01171875, 0.01268768310546875, 0.204833984375, 0.2410888671875, 0.470947265625, 0.07769775390625, 6.270408630371094e-05, 0.0009102821350097656, 0.1138916015625, 0.039154052734375, 0.1480712890625, 0.00027370452880859375, 0.00844573974609375, 0.0036029815673828125, 0.007770538330078125], "tokens": [291, 320, 397, 320, 813, 415, 308, 1700, 3289, 32, 371, 26, 426, 27, 610, 744, 27, 301, 291, 8980, 32, 3734, 26, 324, 273, 32, 2682, 924, 26, 96, 30, 44739, 11312, 81, 11695, 81, 12315, 30, 400, 667, 558, 30, 636, 30, 2568, 620, 32, 3108, 5073]}
{"line_number": 1658, "line_type": "original", "code": "    JSType type = getJSType(constructor).restrictByNotNullOrUndefined();", "entropy": 2.203125, "is_bug_line": false, "sus_score": 0.5287274718284607, "per_token_entropy": [4.17578125, 9.2578125, 0.005321502685546875, 3.1015625, 0.97998046875, 3.91796875, 0.6220703125, 0.00042939186096191406, 0.02337646484375, 7.0390625, 4.65234375, 2.646484375, 0.00559234619140625, 0.755859375, 0.1932373046875, 0.01194000244140625, 0.037353515625], "tokens": [264, 7750, 620, 827, 280, 622, 4624, 620, 26, 9430, 547, 20757, 1083, 4926, 1527, 14339, 473]}
{"line_number": 1658, "line_type": "generated", "code": "\n        if (oType.isPropertyTypeInferred()) {\n          oType.setPropertyType(name, interfaceType.getPropertyType(name));\n          oType.setDeclaredPropertyType(name,\n              interfaceType.getDeclaredPropertyType(name));\n        }\n      }", "entropy": 0.373779296875, "is_bug_line": false, "sus_score": 0.5287274718284607, "per_token_entropy": [1.0556640625, 0.85107421875, 0.3017578125, 1.330078125, 4.172325134277344e-05, 0.13134765625, 0.6611328125, 0.97802734375, 0.307373046875, 0.71240234375, 1.1728515625, 0.0020809173583984375, 0.04278564453125, 1.2939453125, 0.0001270771026611328, 0.168212890625, 0.7373046875, 0.54833984375, 0.2490234375, 0.2406005859375, 0.0061187744140625, 0.5791015625, 1.537799835205078e-05, 0.050750732421875, 0.00832366943359375, 0.00037288665771484375, 0.0019855499267578125, 0.001438140869140625, 0.0220489501953125, 1.537109375, 0.407470703125, 0.00015497207641601562, 0.00299072265625, 0.50341796875, 2.2734375, 0.450927734375, 0.007228851318359375, 0.127197265625, 0.022308349609375, 1.228515625, 0.08917236328125, 2.777576446533203e-05, 0.0004944801330566406, 0.217041015625, 0.0033397674560546875, 0.0006127357482910156, 0.0013303756713867188, 0.00884246826171875, 0.284912109375, 8.034706115722656e-05, 0.8193359375, 0.00045490264892578125], "tokens": [291, 415, 308, 97, 620, 32, 297, 29360, 383, 14981, 1157, 301, 616, 337, 620, 32, 470, 29360, 26, 426, 30, 2568, 620, 32, 12707, 620, 26, 426, 876, 616, 337, 620, 32, 470, 22050, 29360, 26, 426, 30, 1090, 2568, 620, 32, 36868, 29360, 26, 426, 876, 291, 320, 397, 320]}
{"line_number": 834, "line_type": "original", "code": "        }", "entropy": 5.765625, "is_bug_line": false, "sus_score": 0.5278579592704773, "per_token_entropy": [9.4921875, 2.041015625], "tokens": [351, 320]}
{"line_number": 834, "line_type": "generated", "code": "\n  }\n\n  private void visitObjLitKey(NodeTraversal t, Node key, Node objLit, JSType type) {\n    if (key.isString()) {\n      return;\n    }\n    if (key.isComputedProp()) {\n      return;", "entropy": 0.301513671875, "is_bug_line": false, "sus_score": 0.5278579592704773, "per_token_entropy": [0.2454833984375, 0.022125244140625, 0.1053466796875, 0.4833984375, 0.310546875, 0.68505859375, 0.67822265625, 0.0027027130126953125, 0.00839996337890625, 0.004398345947265625, 0.1348876953125, 0.005458831787109375, 0.0031108856201171875, 2.9802322387695312e-05, 0.030303955078125, 0.1756591796875, 0.0298309326171875, 0.01139068603515625, 1.08984375, 0.9345703125, 0.0139312744140625, 0.15966796875, 2.384185791015625e-07, 1.2353515625, 0.005329132080078125, 0.005046844482421875, 0.015716552734375, 0.89501953125, 0.312255859375, 0.1796875, 0.0208740234375, 0.87744140625, 0.1800537109375, 0.00250244140625, 0.0177001953125, 2.603515625, 0.0006947517395019531, 0.067626953125, 7.843971252441406e-05, 0.6787109375, 1.08984375, 0.2218017578125, 0.187255859375, 0.0008025169372558594, 0.12078857421875, 0.360595703125, 0.020538330078125, 0.08209228515625, 0.000553131103515625, 0.00971221923828125, 1.353515625, 0.0005216598510742188], "tokens": [334, 320, 719, 945, 763, 7725, 3273, 27472, 953, 26, 1212, 35699, 273, 30, 4004, 1202, 30, 4004, 2830, 27472, 30, 7750, 620, 827, 27, 301, 284, 415, 308, 678, 32, 35690, 1157, 301, 397, 442, 45, 284, 320, 284, 415, 308, 678, 32, 297, 24821, 6567, 1157, 301, 397, 442, 45]}
{"line_number": 1024, "line_type": "original", "code": "   * After a struct object is created, we can't add new properties to it, with", "entropy": 3.02734375, "is_bug_line": false, "sus_score": 0.5270844101905823, "per_token_entropy": [5.8984375, 5.3359375, 8.0859375, 3.544921875, 5.08203125, 5.46875, 0.63134765625, 0.57470703125, 0.2230224609375, 1.6259765625, 2.16796875, 1.501953125, 1.8994140625, 1.814453125, 2.302734375, 1.0263671875, 0.36767578125, 2.23828125, 7.7421875], "tokens": [261, 319, 9723, 312, 1671, 1300, 438, 3272, 30, 996, 883, 1330, 1015, 537, 4308, 372, 561, 30, 623]}
{"line_number": 1024, "line_type": "generated", "code": "\n    if (info!= null && info.isInterface()) {\n      return;\n    }\n\n    JSType objType = getJSType(object);\n    if (objType.isUnknownType()) {\n      return;\n    }\n\n    if (objType.", "entropy": 0.38720703125, "is_bug_line": false, "sus_score": 0.5270844101905823, "per_token_entropy": [0.541015625, 0.7998046875, 0.365234375, 1.1640625, 0.350341796875, 0.00016701221466064453, 0.2086181640625, 0.299072265625, 0.0005931854248046875, 1.263671875, 0.9609375, 1.1015625, 0.003887176513671875, 0.056243896484375, 0.919921875, 0.002124786376953125, 0.0322265625, 7.700920104980469e-05, 0.63720703125, 1.6689453125, 0.0010290145874023438, 1.3056640625, 0.08526611328125, 0.035369873046875, 0.384521484375, 0.0254669189453125, 1.0251998901367188e-05, 0.0045013427734375, 0.0016489028930664062, 0.0257415771484375, 0.1728515625, 0.5732421875, 0.3642578125, 0.167724609375, 0.00012183189392089844, 0.9296875, 0.548828125, 1.3349609375, 0.07867431640625, 0.58349609375, 0.0014123916625976562, 0.0263519287109375, 0.31396484375, 0.0010547637939453125, 0.0189971923828125, 9.226799011230469e-05, 0.47802734375, 1.3388671875, 0.398681640625, 0.443115234375, 6.842613220214844e-05, 0.11627197265625], "tokens": [284, 415, 308, 1338, 863, 744, 962, 3099, 32, 297, 3041, 1157, 301, 397, 442, 45, 284, 320, 446, 7750, 620, 2830, 620, 280, 622, 4624, 620, 26, 1473, 293, 284, 415, 308, 2067, 620, 32, 297, 5842, 620, 1157, 301, 397, 442, 45, 284, 320, 446, 415, 308, 2067, 620, 32]}
{"line_number": 702, "line_type": "original", "code": "        } else if (leftType.isNumber()) {", "entropy": 1.9599609375, "is_bug_line": false, "sus_score": 0.5236298441886902, "per_token_entropy": [5.015625, 6.01953125, 1.2109375, 0.29150390625, 0.044403076171875, 5.12890625, 1.330078125, 0.2333984375, 1.703125, 0.5869140625, 0.0036869049072265625], "tokens": [351, 320, 813, 415, 308, 1873, 620, 32, 42128, 1157, 301]}
{"line_number": 702, "line_type": "generated", "code": "\n      case Token.ASSIGN_ADD:\n      case Token.ASSIGN_SUB:\n      case Token.ASSIGN_MUL:\n      case Token.ASSIGN_DIV:\n      case Token.ASSIGN_MOD:\n      case Token.ASSIGN_BITOR:\n      case Token", "entropy": 0.093505859375, "is_bug_line": false, "sus_score": 0.5236298441886902, "per_token_entropy": [0.1734619140625, 0.056365966796875, 0.0016546249389648438, 0.0002529621124267578, 1.3515625, 0.0006084442138671875, 0.6025390625, 0.0030345916748046875, 0.146240234375, 0.0005097389221191406, 6.413459777832031e-05, 6.61611557006836e-05, 0.002407073974609375, 7.62939453125e-06, 1.513671875, 0.0005831718444824219, 0.020599365234375, 0.00013196468353271484, 1.4781951904296875e-05, 4.291534423828125e-06, 0.0013675689697265625, 1.239776611328125e-05, 0.0143890380859375, 2.0265579223632812e-05, 0.003467559814453125, 7.712841033935547e-05, 4.398822784423828e-05, 2.7418136596679688e-06, 0.00011360645294189453, 6.723403930664062e-05, 0.44873046875, 4.887580871582031e-05, 0.06280517578125, 0.0003597736358642578, 1.1086463928222656e-05, 4.780292510986328e-05, 0.0006670951843261719, 9.417533874511719e-06, 0.0379638671875, 0.0001595020294189453, 0.19873046875, 0.0015077590942382812, 4.6372413635253906e-05, 1.6570091247558594e-05, 0.0088958740234375, 3.3736228942871094e-05, 0.1558837890625, 0.051177978515625, 4.172325134277344e-05, 0.0013837814331054688, 5.519390106201172e-05, 5.841255187988281e-06], "tokens": [397, 1135, 6512, 32, 25620, 81, 5363, 44, 397, 1135, 6512, 32, 25620, 81, 7100, 44, 397, 1135, 6512, 32, 25620, 81, 12769, 44, 397, 1135, 6512, 32, 25620, 81, 13888, 44, 397, 1135, 6512, 32, 25620, 81, 6719, 44, 397, 1135, 6512, 32, 25620, 81, 5670, 758, 44, 397, 1135, 6512]}
{"line_number": 1117, "line_type": "original", "code": "      report(t, key, ILLEGAL_OBJLIT_KEY, \"dict\");", "entropy": 0.96875, "is_bug_line": false, "sus_score": 0.5229155421257019, "per_token_entropy": [5.3828125, 4.85546875, 0.1624755859375, 0.0753173828125, 0.0022735595703125, 0.09527587890625, 0.0079193115234375, 1.7734375, 6.67572021484375e-05, 0.0006895065307617188, 0.0003046989440917969, 0.509765625, 0.01201629638671875, 0.0017757415771484375, 0.44189453125, 0.50048828125, 0.5166015625, 3.796875, 0.2685546875], "tokens": [647, 3639, 26, 102, 30, 1202, 30, 14587, 24139, 726, 81, 13289, 22532, 81, 3307, 30, 313, 2665, 724]}
{"line_number": 1117, "line_type": "generated", "code": "\n      }\n    }\n  }\n\n  /**\n   * Checks that an object literal is typed.\n   *\n   * @param t the traversal\n   * @param objlit the object literal node\n   */\n  private void visitObjLit(NodeTraversal t, Node obj", "entropy": 0.3671875, "is_bug_line": false, "sus_score": 0.5229155421257019, "per_token_entropy": [1.0771484375, 0.0030460357666015625, 0.18408203125, 0.00034809112548828125, 0.54052734375, 0.0003502368927001953, 0.2203369140625, 0.306640625, 0.059783935546875, 0.0001919269561767578, 1.9091796875, 0.87841796875, 2.068359375, 1.015625, 0.25634765625, 2.046875, 2.134765625, 0.96630859375, 0.240966796875, 0.376953125, 0.6416015625, 0.0027294158935546875, 0.30810546875, 0.018524169921875, 0.13671875, 0.1337890625, 0.0195465087890625, 0.01401519775390625, 0.040496826171875, 0.002277374267578125, 0.004077911376953125, 0.673828125, 0.05902099609375, 0.0682373046875, 0.529296875, 0.0147857666015625, 0.56640625, 0.10113525390625, 0.11981201171875, 0.003692626953125, 0.12127685546875, 0.031463623046875, 0.900390625, 0.1357421875, 0.0036411285400390625, 0.07269287109375, 0.0684814453125, 0.0003733634948730469, 0.0011091232299804688, 7.808208465576172e-05, 0.004238128662109375, 0.01174163818359375], "tokens": [397, 320, 284, 320, 334, 320, 719, 1022, 664, 319, 17279, 688, 600, 1300, 10652, 438, 20639, 32, 664, 319, 664, 319, 477, 753, 273, 322, 34395, 664, 319, 477, 753, 2830, 2507, 322, 1300, 10652, 1541, 664, 569, 334, 945, 763, 7725, 3273, 27472, 26, 1212, 35699, 273, 30, 4004, 2830]}
{"line_number": 1633, "line_type": "original", "code": "        JSType valueType = getJSType(value);", "entropy": 1.8291015625, "is_bug_line": false, "sus_score": 0.5220952033996582, "per_token_entropy": [7.98828125, 5.2890625, 0.0168609619140625, 5.265625, 0.049530029296875, 0.080322265625, 0.7626953125, 0.044342041015625, 0.0015478134155273438, 0.0089569091796875, 2.251953125, 0.1942138671875], "tokens": [351, 7750, 620, 786, 620, 280, 622, 4624, 620, 26, 853, 293]}
{"line_number": 1633, "line_type": "generated", "code": "\n   */\n  private void checkSuperInterfaceConflict(NodeTraversal t, Node n,\n      String functionName, Set<String> properties, Set<String> currentProperties) {\n    if (!properties.isEmpty()) {\n      for (String prop : properties)", "entropy": 0.286376953125, "is_bug_line": false, "sus_score": 0.5220952033996582, "per_token_entropy": [0.63720703125, 0.2451171875, 0.03564453125, 0.1448974609375, 0.153564453125, 0.1309814453125, 0.8056640625, 0.6474609375, 1.9609375, 0.6982421875, 0.474853515625, 0.00484466552734375, 0.001003265380859375, 0.0010251998901367188, 0.1004638671875, 0.006591796875, 0.0002827644348144531, 0.39208984375, 0.060638427734375, 0.014434814453125, 0.0005292892456054688, 0.0012922286987304688, 0.76318359375, 0.009033203125, 0.003932952880859375, 0.0002715587615966797, 0.03424072265625, 0.01416778564453125, 0.6845703125, 0.0008344650268554688, 0.0006761550903320312, 0.00019693374633789062, 0.0284881591796875, 0.005695343017578125, 0.0455322265625, 0.0509033203125, 0.217529296875, 0.8408203125, 1.1796875, 0.426513671875, 0.0006785392761230469, 0.7900390625, 0.59033203125, 0.0011539459228515625, 0.056427001953125, 0.9501953125, 0.00823211669921875, 0.028778076171875, 1.099609375, 0.363525390625, 0.170654296875, 0.00858306884765625], "tokens": [664, 569, 334, 945, 763, 1505, 11069, 3041, 19610, 26, 1212, 35699, 273, 30, 4004, 310, 30, 397, 892, 667, 558, 30, 1756, 46, 652, 48, 4308, 30, 1756, 46, 652, 48, 1550, 3289, 27, 301, 284, 415, 1429, 4642, 32, 6393, 1157, 301, 397, 436, 308, 652, 7018, 499, 4308, 27]}
{"line_number": 651, "line_type": "original", "code": "        } else if (right.isTypeOf() && left.isString()) {", "entropy": 1.9609375, "is_bug_line": false, "sus_score": 0.5188695788383484, "per_token_entropy": [4.71875, 7.25390625, 0.435546875, 0.399658203125, 0.10504150390625, 0.57568359375, 5.39453125, 2.318359375, 3.1640625, 1.51953125, 0.396728515625, 4.3828125, 0.457763671875, 0.1759033203125, 0.072509765625, 0.00632476806640625], "tokens": [351, 320, 813, 415, 308, 990, 32, 297, 18496, 346, 962, 2841, 32, 35690, 1157, 301]}
{"line_number": 651, "line_type": "generated", "code": "\n              t, n.getLastChild(), rightType, \"comparison\");\n        }\n        if (leftType.isNumber()) {\n          validator.expectNumber(", "entropy": 0.20947265625, "is_bug_line": false, "sus_score": 0.5188695788383484, "per_token_entropy": [0.63818359375, 0.076416015625, 0.0024700164794921875, 0.252685546875, 0.036712646484375, 0.06927490234375, 2.193450927734375e-05, 0.00872802734375, 0.16357421875, 0.0002073049545288086, 0.01418304443359375, 0.83447265625, 1.3408203125, 0.67578125, 0.19921875, 0.00029969215393066406, 0.6572265625, 1.0126953125, 0.1260986328125, 0.1346435546875, 5.1975250244140625e-05, 0.033294677734375, 0.044342041015625, 0.12225341796875, 0.00016939640045166016, 0.0256805419921875, 0.021484375, 5.1975250244140625e-05, 0.0001436471939086914, 0.0007691383361816406, 0.0008893013000488281], "tokens": [1090, 273, 30, 310, 32, 20197, 2931, 1026, 2091, 620, 30, 313, 25500, 724, 291, 320, 291, 415, 308, 1873, 620, 32, 42128, 1157, 301, 616, 13420, 32, 2358, 1918, 26]}
