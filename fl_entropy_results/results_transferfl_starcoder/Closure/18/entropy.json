{"line_number": 1430, "line_type": "original", "code": "", "entropy": 4.16015625, "is_bug_line": false, "sus_score": 0.6753092408180237, "per_token_entropy": [4.16015625], "tokens": [203]}
{"line_number": 1430, "line_type": "generated", "code": "\n              // TODO(johnlenz): we should report this error on the\n              // require statement and not the module.\n              // TODO(johnlenz): we should report this error on the\n              // require statement and not the module.\n              // TODO(", "entropy": 0.82275390625, "is_bug_line": false, "sus_score": 0.6753092408180237, "per_token_entropy": [1.68359375, 1.19140625, 1.48046875, 0.02850341796875, 0.880859375, 0.1097412109375, 0.00083160400390625, 0.0325927734375, 3.376953125, 0.9892578125, 2.3515625, 1.8154296875, 0.7998046875, 1.625, 0.2017822265625, 1.583984375, 0.00531768798828125, 2.439453125, 1.30859375, 2.380859375, 0.402099609375, 0.83837890625, 1.4765625, 1.5380859375, 0.4443359375, 1.896484375, 2.625, 0.0216217041015625, 0.329833984375, 0.00394439697265625, 1.2278556823730469e-05, 0.0124664306640625, 1.8544921875, 0.357666015625, 1.6875, 1.0498046875, 0.3310546875, 0.96875, 0.409423828125, 0.1873779296875, 0.0137939453125, 0.78466796875, 0.0833740234375, 0.204345703125, 0.056610107421875, 0.022674560546875, 0.060333251953125, 0.037567138671875, 0.285888671875, 0.395751953125, 0.11102294921875, 0.0009593963623046875], "tokens": [1090, 434, 4296, 26, 25172, 1657, 108, 711, 996, 1395, 3639, 458, 1048, 544, 322, 1090, 434, 1205, 7603, 461, 646, 322, 2297, 32, 1090, 434, 4296, 26, 25172, 1657, 108, 711, 996, 1395, 3639, 458, 1048, 544, 322, 1090, 434, 1205, 7603, 461, 646, 322, 2297, 32, 1090, 434, 4296, 26]}
{"line_number": 1446, "line_type": "original", "code": "    // that are equivalent to a signal file and which express their deps", "entropy": 5.1796875, "is_bug_line": false, "sus_score": 0.6730687022209167, "per_token_entropy": [2.41796875, 2.275390625, 8.328125, 3.052734375, 8.0390625, 1.205078125, 2.294921875, 9.03125, 7.82421875, 4.05859375, 4.9921875, 8.703125, 3.462890625, 6.796875], "tokens": [264, 434, 688, 884, 13741, 372, 312, 7060, 803, 461, 1510, 3915, 3623, 21022]}
{"line_number": 1446, "line_type": "generated", "code": "\n      }\n    }\n    if (options.transformAMDToCJSModules) {\n      // TODO(johnlenz): this is a hack. The problem is that the module\n      // graph can change when the module names are transformed.\n      this.module", "entropy": 1.05078125, "is_bug_line": false, "sus_score": 0.6730687022209167, "per_token_entropy": [0.64794921875, 0.0263671875, 0.326171875, 0.0036067962646484375, 2.197265625, 1.0966796875, 0.07666015625, 0.0762939453125, 0.0005850791931152344, 0.8369140625, 0.0079803466796875, 0.0069580078125, 0.004810333251953125, 1.2636184692382812e-05, 0.0009584426879882812, 0.0833740234375, 0.0027980804443359375, 0.0806884765625, 2.115234375, 1.5771484375, 0.055633544921875, 1.27734375, 0.142822265625, 0.0007748603820800781, 0.047271728515625, 3.390625, 1.3798828125, 1.1455078125, 0.884765625, 2.1640625, 2.71484375, 2.654296875, 0.1142578125, 0.239990234375, 1.9072265625, 2.7734375, 1.0458984375, 0.0029926300048828125, 1.990234375, 3.16015625, 2.013671875, 1.88671875, 2.5390625, 2.765625, 2.21875, 0.478759765625, 2.5859375, 0.759765625, 0.5966796875, 1.892578125, 0.00013256072998046875, 0.6552734375], "tokens": [397, 320, 284, 320, 284, 415, 308, 2184, 32, 3792, 23883, 705, 53, 4624, 12242, 27, 301, 397, 434, 4296, 26, 25172, 1657, 108, 711, 458, 438, 312, 16445, 32, 886, 3708, 438, 688, 322, 2297, 397, 434, 3996, 883, 1539, 1412, 322, 2297, 4467, 884, 21634, 32, 397, 458, 32, 1647]}
{"line_number": 1030, "line_type": "original", "code": "    }", "entropy": 1.455078125, "is_bug_line": false, "sus_score": 0.5926007628440857, "per_token_entropy": [2.65234375, 0.2568359375], "tokens": [264, 320]}
{"line_number": 1030, "line_type": "generated", "code": "\n    }\n\n    return true;\n  }\n\n  @Override\n  public Collection<CompilerInput> getExternInputs() {\n    return externs;\n  }\n\n  @Override\n  public Iterable<CompilerInput> getInputsInOrder() {\n    return inputsById.", "entropy": 0.2393798828125, "is_bug_line": false, "sus_score": 0.5926007628440857, "per_token_entropy": [0.59521484375, 0.214599609375, 0.98486328125, 0.3056640625, 0.0021152496337890625, 0.0002894401550292969, 0.0645751953125, 0.0008273124694824219, 0.28076171875, 1.0693359375, 0.00785064697265625, 0.004878997802734375, 0.060791015625, 2.650390625, 0.02947998046875, 0.0311431884765625, 0.0021495819091796875, 7.987022399902344e-05, 0.31298828125, 0.60107421875, 3.5762786865234375e-07, 0.05633544921875, 0.01113128662109375, 0.0003535747528076172, 0.043792724609375, 0.0160675048828125, 0.1295166015625, 0.0010223388671875, 0.0206451416015625, 0.02001953125, 4.279613494873047e-05, 0.188232421875, 0.37890625, 0.004734039306640625, 0.0008511543273925781, 0.051483154296875, 2.115234375, 0.055572509765625, 0.1514892578125, 0.028411865234375, 0.0002589225769042969, 0.5, 0.055145263671875, 0.03411865234375, 0.53955078125, 0.009185791015625, 0.001705169677734375, 0.09149169921875, 0.239990234375, 0.425048828125, 0.0552978515625, 0.0043792724609375], "tokens": [284, 320, 446, 442, 861, 45, 334, 320, 719, 477, 1788, 334, 562, 7376, 46, 8115, 1612, 48, 622, 571, 900, 13719, 346, 301, 284, 442, 12098, 101, 45, 334, 320, 719, 477, 1788, 334, 562, 19209, 46, 8115, 1612, 48, 622, 13719, 383, 2871, 346, 301, 284, 442, 7806, 3213, 32]}
{"line_number": 985, "line_type": "original", "code": "    if (options.ambiguateProperties ||", "entropy": 1.4482421875, "is_bug_line": false, "sus_score": 0.5916716456413269, "per_token_entropy": [2.62109375, 0.6650390625, 0.0828857421875, 0.420166015625, 0.01110076904296875, 6.11328125, 0.0447998046875, 4.5299530029296875e-06, 0.01148223876953125, 4.51171875], "tokens": [264, 415, 308, 2184, 32, 2733, 12591, 332, 3289, 1276]}
{"line_number": 985, "line_type": "generated", "code": "\n    if (options.getLanguageIn() == LanguageMode.ECMASCRIPT5) {\n      input.setExternExports(true);\n    }", "entropy": 0.48193359375, "is_bug_line": false, "sus_score": 0.5916716456413269, "per_token_entropy": [0.2459716796875, 0.810546875, 0.0867919921875, 0.454345703125, 0.0099945068359375, 3.5078125, 0.57177734375, 0.59619140625, 0.30078125, 0.257080078125, 0.4365234375, 0.00024437904357910156, 0.00013637542724609375, 0.081298828125, 7.033348083496094e-05, 0.001132965087890625, 0.0003991127014160156, 0.50341796875, 0.2481689453125, 0.003631591796875, 0.031463623046875, 1.771484375, 0.006694793701171875, 0.73291015625, 0.9833984375, 0.0005517005920410156, 1.4248046875, 0.1741943359375, 2.0234375, 0.00678253173828125, 0.146728515625, 9.465217590332031e-05], "tokens": [284, 415, 308, 2184, 32, 371, 5971, 383, 346, 610, 6633, 2101, 32, 55, 3103, 1099, 38225, 39, 27, 301, 397, 1509, 32, 470, 571, 900, 20723, 26, 1508, 293, 284, 320]}
{"line_number": 1017, "line_type": "original", "code": "    inputsById.remove(id);", "entropy": 2.271484375, "is_bug_line": false, "sus_score": 0.5909214019775391, "per_token_entropy": [2.462890625, 5.36328125, 0.6640625, 0.00704193115234375, 0.72998046875, 0.001888275146484375, 8.8671875, 0.0804443359375], "tokens": [264, 7806, 3213, 32, 2546, 26, 314, 293]}
{"line_number": 1017, "line_type": "generated", "code": "\n    oldInput.setAstRoot(newRoot);\n    return true;\n  }\n\n  @Override\n  public CompilerInput newNonExternInput(String name) {\n    SourceAst ast = new SyntheticAst(name);\n    if (inputsById.", "entropy": 0.245361328125, "is_bug_line": false, "sus_score": 0.5909214019775391, "per_token_entropy": [0.196533203125, 1.1728515625, 0.00528717041015625, 0.003910064697265625, 1.2568359375, 0.06988525390625, 0.05078125, 0.038818359375, 0.07342529296875, 0.0008225440979003906, 0.155517578125, 0.1514892578125, 0.47119140625, 0.0046844482421875, 0.00220489501953125, 0.09698486328125, 0.0008883476257324219, 0.26904296875, 1.0673828125, 0.0474853515625, 0.005001068115234375, 0.11279296875, 2.291015625, 0.11944580078125, 0.80224609375, 1.197265625, 0.051422119140625, 0.006145477294921875, 0.08392333984375, 0.002696990966796875, 0.23291015625, 0.35498046875, 0.63330078125, 0.007503509521484375, 0.022216796875, 0.77392578125, 0.027496337890625, 0.0249176025390625, 0.00461578369140625, 0.050537109375, 0.430908203125, 0.0002117156982421875, 0.0006189346313476562, 0.0013093948364257812, 0.006092071533203125, 0.0233917236328125, 0.01409912109375, 0.2568359375, 0.002277374267578125, 0.07720947265625, 0.0005478858947753906, 7.891654968261719e-05], "tokens": [284, 3610, 1612, 32, 470, 19511, 4058, 26, 890, 4058, 293, 284, 442, 861, 45, 334, 320, 719, 477, 1788, 334, 562, 20209, 1612, 537, 3910, 571, 900, 1612, 26, 652, 636, 27, 301, 284, 6374, 19511, 10020, 280, 537, 40261, 18228, 19511, 26, 426, 293, 284, 415, 308, 8075, 3213, 32]}
{"line_number": 983, "line_type": "original", "code": "  @Override", "entropy": 4.13671875, "is_bug_line": false, "sus_score": 0.5902806520462036, "per_token_entropy": [4.08984375, 7.5546875, 0.7578125], "tokens": [225, 477, 1788]}
{"line_number": 983, "line_type": "generated", "code": "\n    externs.add(input);\n    return input;\n  }\n\n  /**\n   * Adds an extern file to AST.\n   * @param externsFile The extern file to be added.\n   */\n  protected void addExtern(SourceFile externsFile", "entropy": 0.380615234375, "is_bug_line": false, "sus_score": 0.5902806520462036, "per_token_entropy": [0.48876953125, 0.64404296875, 0.05853271484375, 0.0216522216796875, 0.0111236572265625, 0.0016498565673828125, 0.004688262939453125, 0.0010690689086914062, 0.58154296875, 0.25390625, 0.004810333251953125, 0.0003075599670410156, 0.141357421875, 0.0001506805419921875, 0.170654296875, 1.56640625, 0.08795166015625, 0.00044035911560058594, 1.5703125, 0.81689453125, 0.69775390625, 1.0908203125, 0.364990234375, 1.1259765625, 0.1160888671875, 0.1590576171875, 0.10638427734375, 0.178466796875, 0.043914794921875, 0.44482421875, 1.8583984375, 1.373046875, 0.3603515625, 0.474365234375, 0.572265625, 0.3603515625, 0.25341796875, 0.10369873046875, 0.1468505859375, 0.0291595458984375, 0.28515625, 0.01145172119140625, 0.33740234375, 0.199462890625, 0.0616455078125, 0.020477294921875, 1.0728836059570312e-06, 0.217041015625, 2.349609375, 0.0016527175903320312, 0.023834228515625, 0.0017147064208984375], "tokens": [284, 12098, 101, 32, 669, 26, 1131, 293, 284, 442, 1509, 45, 334, 320, 719, 1022, 664, 319, 15450, 600, 12098, 803, 372, 16095, 32, 664, 319, 477, 753, 12098, 101, 974, 886, 12098, 803, 372, 526, 3640, 32, 664, 569, 334, 2522, 763, 1015, 571, 900, 26, 17900, 12098, 101, 974]}
{"line_number": 984, "line_type": "original", "code": "  boolean areNodesEqualForInlining(Node n1, Node n2) {", "entropy": 2.46484375, "is_bug_line": false, "sus_score": 0.590235710144043, "per_token_entropy": [4.41796875, 7.9453125, 6.54296875, 4.8671875, 6.91796875, 5.58984375, 3.072265625, 2.10546875, 0.138916015625, 0.15283203125, 0.0179595947265625, 0.0010385513305664062, 0.0217742919921875, 0.004001617431640625, 0.0002155303955078125, 0.0850830078125, 0.0279388427734375], "tokens": [225, 1905, 884, 5909, 1324, 1562, 29021, 26, 1212, 310, 35, 30, 4004, 310, 36, 27, 301]}
{"line_number": 984, "line_type": "generated", "code": "\n    externAndJsRoot.addChildToFront(ast.getAstRoot(this));\n  }\n\n  @Override\n  public CompilerInput newNonExternInput(String name, String source) {\n    return newNonExternInput(name, source,", "entropy": 0.24072265625, "is_bug_line": false, "sus_score": 0.590235710144043, "per_token_entropy": [0.373046875, 1.3291015625, 0.658203125, 0.0006361007690429688, 0.01140594482421875, 0.0211944580078125, 0.018463134765625, 0.005558013916015625, 0.31396484375, 0.003765106201171875, 0.169677734375, 0.0018463134765625, 0.005390167236328125, 0.0206146240234375, 0.0030498504638671875, 0.004669189453125, 0.002155303955078125, 0.00681304931640625, 0.697265625, 0.03289794921875, 0.182373046875, 0.382080078125, 0.0145416259765625, 0.01153564453125, 0.0267486572265625, 0.763671875, 0.0134124755859375, 0.2330322265625, 0.82763671875, 0.0545654296875, 0.00928497314453125, 0.07672119140625, 0.0016880035400390625, 0.11669921875, 0.2017822265625, 1.2236328125, 0.6826171875, 0.953125, 0.18701171875, 0.02362060546875, 0.0278167724609375, 1.52734375, 0.083740234375, 0.1898193359375, 0.0028209686279296875, 3.9577484130859375e-05, 0.0218353271484375, 0.00595855712890625, 0.24267578125, 0.0020618438720703125, 0.69482421875, 0.048675537109375], "tokens": [284, 12098, 2185, 10535, 4058, 32, 21545, 705, 10112, 26, 633, 32, 371, 19511, 4058, 26, 578, 876, 334, 320, 719, 477, 1788, 334, 562, 20209, 1612, 537, 3910, 571, 900, 1612, 26, 652, 636, 30, 892, 1914, 27, 301, 284, 442, 537, 3910, 571, 900, 1612, 26, 426, 30, 1914, 30]}
{"line_number": 986, "line_type": "original", "code": "        options.disambiguateProperties) {", "entropy": 3.228515625, "is_bug_line": false, "sus_score": 0.5886186361312866, "per_token_entropy": [7.5390625, 6.21484375, 0.0169677734375, 7.42578125, 0.798828125, 0.00020170211791992188, 9.393692016601562e-05, 0.457763671875, 9.7265625, 0.1153564453125], "tokens": [351, 2075, 32, 1285, 2733, 12591, 332, 3289, 27, 301]}
{"line_number": 986, "line_type": "generated", "code": "\n  }", "entropy": 0.703125, "is_bug_line": false, "sus_score": 0.5886186361312866, "per_token_entropy": [0.5576171875, 0.8486328125], "tokens": [334, 320]}
{"line_number": 993, "line_type": "original", "code": "  }", "entropy": 3.1328125, "is_bug_line": false, "sus_score": 0.5866268873214722, "per_token_entropy": [2.771484375, 3.49609375], "tokens": [225, 320]}
{"line_number": 993, "line_type": "generated", "code": "\n\n  /**\n   * Removes an input file from AST.\n   * @param input The input to be removed.\n   */\n  protected void removeInput(CompilerInput input) {\n    InputId id = input.getInputId();\n    if (inputsById.remove", "entropy": 0.287353515625, "is_bug_line": false, "sus_score": 0.5866268873214722, "per_token_entropy": [0.470458984375, 1.42578125, 0.09906005859375, 0.0007472038269042969, 3.166015625, 0.60986328125, 0.1273193359375, 0.0576171875, 0.032318115234375, 0.08636474609375, 0.0518798828125, 0.04132080078125, 0.041748046875, 0.075927734375, 0.00420379638671875, 2.033203125, 0.420654296875, 0.2249755859375, 0.0716552734375, 0.01078033447265625, 0.00194549560546875, 0.00936126708984375, 0.007572174072265625, 0.04937744140625, 0.01479339599609375, 0.386962890625, 0.0234222412109375, 0.007221221923828125, 0.732421875, 0.0208892822265625, 0.05029296875, 0.00037932395935058594, 0.002185821533203125, 0.0038890838623046875, 0.0008244514465332031, 0.0132293701171875, 1.46484375, 0.0017557144165039062, 0.136962890625, 0.0010280609130859375, 0.005161285400390625, 0.0007104873657226562, 0.006683349609375, 1.049041748046875e-05, 0.00016820430755615234, 0.02996826171875, 0.75, 0.187255859375, 0.888671875, 0.0017232894897460938, 0.0030727386474609375, 1.0859375], "tokens": [719, 1022, 664, 319, 24992, 600, 1509, 803, 645, 16095, 32, 664, 319, 477, 753, 1509, 886, 1509, 372, 526, 6556, 32, 664, 569, 334, 2522, 763, 3345, 1612, 26, 8115, 1612, 1509, 27, 301, 284, 4237, 606, 804, 280, 1509, 32, 29647, 606, 473, 284, 415, 308, 8075, 3213, 32, 2546]}
{"line_number": 1371, "line_type": "original", "code": "          options.closurePass) {", "entropy": 3.810546875, "is_bug_line": false, "sus_score": 0.5857747197151184, "per_token_entropy": [5.59375, 8.171875, 0.00949859619140625, 4.625, 0.0095062255859375, 8.2265625, 0.03302001953125], "tokens": [2033, 2075, 32, 15912, 6129, 27, 301]}
{"line_number": 1371, "line_type": "generated", "code": "\n        // If the input file is explicitly marked as a nocompile file, then\n        // throw it out of the inputs.\n        input.getModule().remove(input);\n\n        input.setIsExtern(true);\n        externs.add(input);\n\n       ", "entropy": 0.302734375, "is_bug_line": false, "sus_score": 0.5857747197151184, "per_token_entropy": [0.2362060546875, 0.4453125, 0.497314453125, 0.2203369140625, 0.0440673828125, 0.0158233642578125, 0.032928466796875, 0.05950927734375, 0.012420654296875, 0.05523681640625, 1.0068359375, 0.2083740234375, 0.2210693359375, 0.1148681640625, 0.0221099853515625, 0.310546875, 0.031341552734375, 0.0029201507568359375, 1.458984375, 0.09417724609375, 0.5576171875, 0.1451416015625, 0.047698974609375, 1.228515625, 1.3447265625, 0.2109375, 0.329345703125, 0.001850128173828125, 0.130615234375, 0.0006580352783203125, 0.0022125244140625, 0.0011720657348632812, 0.00018870830535888672, 0.00019085407257080078, 0.74072265625, 1.9296875, 0.103515625, 0.11077880859375, 0.2342529296875, 4.76837158203125e-07, 0.0031642913818359375, 0.541015625, 0.00035071372985839844, 0.55322265625, 1.25390625, 0.006916046142578125, 0.0020122528076171875, 0.0021533966064453125, 0.00012874603271484375, 0.0006647109985351562, 0.0001232624053955078, 1.169921875], "tokens": [291, 434, 1670, 322, 1509, 803, 438, 13413, 15177, 619, 312, 1289, 6993, 803, 30, 1615, 291, 434, 1422, 561, 963, 432, 322, 7806, 32, 291, 1509, 32, 48639, 922, 2546, 26, 1131, 293, 584, 1509, 32, 31066, 571, 900, 26, 1508, 293, 291, 12098, 101, 32, 669, 26, 1131, 293, 584]}
{"line_number": 974, "line_type": "original", "code": "    final Compiler self = this;", "entropy": 3.302734375, "is_bug_line": false, "sus_score": 0.5851183533668518, "per_token_entropy": [6.1328125, 5.65625, 4.05859375, 7.08203125, 0.1580810546875, 0.020751953125, 0.022979736328125], "tokens": [264, 1158, 20209, 630, 280, 458, 45]}
{"line_number": 974, "line_type": "generated", "code": "\n  /**\n   * Adds an extern file to AST.\n   * @param externInput The extern input to be added.\n   */\n  protected void addExternInput(CompilerInput externInput) {\n    externs.add(externInput);\n  }\n\n ", "entropy": 0.3046875, "is_bug_line": false, "sus_score": 0.5851183533668518, "per_token_entropy": [0.509765625, 0.98291015625, 0.1275634765625, 0.0010662078857421875, 1.580078125, 0.6376953125, 0.309814453125, 0.80859375, 0.43994140625, 0.83447265625, 0.1116943359375, 0.1458740234375, 0.14697265625, 0.2021484375, 0.039215087890625, 0.212158203125, 2.388671875, 0.435302734375, 0.13427734375, 0.5283203125, 0.40966796875, 0.154296875, 0.057342529296875, 0.132568359375, 0.01222991943359375, 0.1878662109375, 0.01126861572265625, 0.2274169921875, 0.06060791015625, 0.0200042724609375, 0.01396942138671875, 1.1920928955078125e-06, 0.60498046875, 0.003177642822265625, 0.228515625, 0.0008902549743652344, 0.0011005401611328125, 0.000568389892578125, 0.01322174072265625, 0.00672149658203125, 0.0240631103515625, 1.0166015625, 0.1395263671875, 0.005046844482421875, 0.0193023681640625, 0.0010862350463867188, 0.0027141571044921875, 0.0001780986785888672, 0.0007257461547851562, 1.169921875, 0.0015535354614257812, 0.7412109375], "tokens": [334, 1022, 664, 319, 15450, 600, 12098, 803, 372, 16095, 32, 664, 319, 477, 753, 12098, 1612, 886, 12098, 1509, 372, 526, 3640, 32, 664, 569, 334, 2522, 763, 1015, 571, 900, 1612, 26, 8115, 1612, 12098, 1612, 27, 301, 284, 12098, 101, 32, 669, 26, 4318, 1612, 293, 334, 320, 719]}
{"line_number": 981, "line_type": "original", "code": "  }", "entropy": 3.25390625, "is_bug_line": false, "sus_score": 0.5844647288322449, "per_token_entropy": [4.0625, 2.4453125], "tokens": [225, 320]}
{"line_number": 981, "line_type": "generated", "code": "\n    return ast.getInput(this);\n  }\n\n  @Override\n  public CompilerInput newExternInput(String name, String source) {\n    CompilerInput input = newExternInput(name);\n    input.setSource(source);\n    return input", "entropy": 0.2498779296875, "is_bug_line": false, "sus_score": 0.5844647288322449, "per_token_entropy": [0.31396484375, 1.0576171875, 0.61376953125, 0.447998046875, 0.41357421875, 0.60888671875, 0.1561279296875, 0.06890869140625, 0.0845947265625, 0.0005054473876953125, 0.1878662109375, 0.389892578125, 0.00986480712890625, 0.0005669593811035156, 0.041778564453125, 0.50830078125, 0.016754150390625, 0.391357421875, 1.587890625, 4.76837158203125e-07, 0.280517578125, 0.017181396484375, 0.330078125, 0.1278076171875, 0.0011682510375976562, 0.814453125, 1.1865234375, 0.094970703125, 0.008697509765625, 0.079345703125, 1.53125, 0.0009965896606445312, 0.267822265625, 0.0022430419921875, 0.008880615234375, 0.00441741943359375, 9.5367431640625e-07, 0.00012946128845214844, 0.0004417896270751953, 0.0006160736083984375, 0.0038547515869140625, 0.0167388916015625, 0.12396240234375, 0.00045013427734375, 0.263671875, 0.436767578125, 0.089599609375, 0.1334228515625, 0.143798828125, 0.0102081298828125, 0.109130859375, 0.0013608932495117188], "tokens": [284, 442, 10020, 32, 29647, 26, 578, 293, 334, 320, 719, 477, 1788, 334, 562, 20209, 1612, 537, 571, 900, 1612, 26, 652, 636, 30, 892, 1914, 27, 301, 284, 20209, 1612, 1509, 280, 537, 571, 900, 1612, 26, 426, 293, 284, 1509, 32, 470, 2028, 26, 1855, 293, 284, 442, 1509]}
{"line_number": 979, "line_type": "original", "code": "      }", "entropy": 2.615234375, "is_bug_line": false, "sus_score": 0.5844148397445679, "per_token_entropy": [2.84765625, 2.3828125], "tokens": [647, 320]}
{"line_number": 979, "line_type": "generated", "code": "\n    }\n    CompilerInput input = new CompilerInput(ast, true);\n    inputsById.put(input.getInputId(), input);\n    externs.add(input);\n    return input;\n  }\n\n  @Override\n  public CompilerInput newStringInput", "entropy": 0.2362060546875, "is_bug_line": false, "sus_score": 0.5844148397445679, "per_token_entropy": [0.783203125, 0.02490234375, 0.1881103515625, 0.779296875, 0.0012502670288085938, 0.25830078125, 0.00344085693359375, 0.32568359375, 0.65625, 0.005229949951171875, 0.02081298828125, 0.49853515625, 1.166015625, 1.6259765625, 0.2025146484375, 0.0285797119140625, 0.297607421875, 0.00299835205078125, 0.000751495361328125, 0.0017023086547851562, 0.0008783340454101562, 1.1806640625, 0.00118255615234375, 0.255615234375, 1.0132789611816406e-05, 0.00014293193817138672, 0.0017547607421875, 0.00015819072723388672, 0.013153076171875, 0.060394287109375, 0.00531005859375, 0.002323150634765625, 0.01491546630859375, 0.00024700164794921875, 0.0014772415161132812, 0.0001493692398071289, 0.041717529296875, 0.1414794921875, 0.005458831787109375, 0.00016629695892333984, 0.0205230712890625, 0.0004246234893798828, 0.07366943359375, 0.29345703125, 0.0095977783203125, 0.00029921531677246094, 0.036956787109375, 0.59326171875, 0.013458251953125, 0.26123046875, 2.240234375, 0.1412353515625], "tokens": [284, 320, 284, 20209, 1612, 1509, 280, 537, 20209, 1612, 26, 633, 30, 861, 293, 284, 7806, 3213, 32, 524, 26, 1131, 32, 29647, 606, 1026, 1509, 293, 284, 12098, 101, 32, 669, 26, 1131, 293, 284, 442, 1509, 45, 334, 320, 719, 477, 1788, 334, 562, 20209, 1612, 537, 652, 1612]}
{"line_number": 990, "line_type": "original", "code": "    } else {", "entropy": 4.1171875, "is_bug_line": false, "sus_score": 0.5842306613922119, "per_token_entropy": [0.9560546875, 8.4609375, 6.78125, 0.274169921875], "tokens": [264, 320, 813, 301]}
{"line_number": 990, "line_type": "generated", "code": "\n    inputsById.put(id, input);\n    return input;\n  }\n\n  @Override\n  public CompilerInput addNewInput(String name, String source) {\n    return putCompilerInput(new InputId(name), new StringCompilerInput(name", "entropy": 0.294189453125, "is_bug_line": false, "sus_score": 0.5842306613922119, "per_token_entropy": [0.5966796875, 0.44140625, 0.00665283203125, 0.002841949462890625, 0.002689361572265625, 0.0021820068359375, 0.0276031494140625, 0.0004832744598388672, 0.0015954971313476562, 0.0010995864868164062, 0.044647216796875, 0.10272216796875, 0.0032501220703125, 0.0002378225326538086, 0.006198883056640625, 0.0002593994140625, 0.06903076171875, 0.6015625, 0.01849365234375, 0.00307464599609375, 0.06378173828125, 1.013671875, 0.090576171875, 1.3330078125, 0.43017578125, 0.1263427734375, 0.0161895751953125, 0.517578125, 0.8291015625, 0.4873046875, 0.55419921875, 0.79443359375, 0.262451171875, 0.0148162841796875, 0.0110321044921875, 1.111328125, 1.171875, 0.0038318634033203125, 0.0001499652862548828, 0.0011415481567382812, 0.5595703125, 0.93701171875, 0.0011930465698242188, 0.25341796875, 0.11761474609375, 0.0938720703125, 0.31201171875, 1.3203125, 0.525390625, 8.928775787353516e-05, 0.0012416839599609375, 0.406494140625], "tokens": [284, 7806, 3213, 32, 524, 26, 314, 30, 1509, 293, 284, 442, 1509, 45, 334, 320, 719, 477, 1788, 334, 562, 20209, 1612, 1015, 1812, 1612, 26, 652, 636, 30, 892, 1914, 27, 301, 284, 442, 4162, 8115, 1612, 26, 890, 4237, 606, 26, 426, 471, 537, 892, 8115, 1612, 26, 426]}
{"line_number": 1016, "line_type": "original", "code": "    Preconditions.checkState(input.isExtern(), \"Not an extern input: %s\", input.getName());", "entropy": 1.001953125, "is_bug_line": false, "sus_score": 0.583899736404419, "per_token_entropy": [2.970703125, 4.9921875, 0.000942230224609375, 0.0104522705078125, 0.12109375, 0.0350341796875, 5.76171875, 0.82666015625, 0.96826171875, 0.147705078125, 1.7881393432617188e-06, 0.387939453125, 0.58349609375, 3.98046875, 1.146484375, 0.04052734375, 0.8515625, 0.26171875, 0.056640625, 0.0016164779663085938, 0.01434326171875, 0.73046875, 0.42041015625, 0.73681640625, 0.004535675048828125], "tokens": [264, 40596, 32, 1553, 1078, 26, 1131, 32, 297, 571, 900, 1026, 313, 1337, 600, 12098, 1509, 44, 904, 101, 392, 1509, 32, 5165, 1035]}
{"line_number": 1016, "line_type": "generated", "code": "\n    oldInput.setAstRoot(newRoot);\n    return true;\n  }\n\n  /**\n   * Removes an extern file from AST.\n   * @param externName The name of the extern file to be removed.\n   */\n  protected void removeExtern", "entropy": 0.35595703125, "is_bug_line": false, "sus_score": 0.583899736404419, "per_token_entropy": [0.1102294921875, 0.93310546875, 0.0016880035400390625, 0.001674652099609375, 1.04296875, 0.051910400390625, 0.06646728515625, 0.038604736328125, 0.060760498046875, 0.0005950927734375, 0.12841796875, 0.035186767578125, 0.41748046875, 0.004215240478515625, 0.001125335693359375, 0.032562255859375, 0.0014429092407226562, 0.301025390625, 1.087890625, 0.52392578125, 0.0004208087921142578, 2.48828125, 1.103515625, 1.353515625, 1.60546875, 0.2012939453125, 0.44677734375, 0.07659912109375, 0.107177734375, 0.098876953125, 0.1448974609375, 0.01508331298828125, 0.8359375, 1.294921875, 0.355224609375, 0.326416015625, 0.0175628662109375, 0.035980224609375, 0.055328369140625, 1.6591796875, 0.15625, 0.034881591796875, 0.00272369384765625, 0.0297698974609375, 0.011993408203125, 0.0721435546875, 0.0130615234375, 1.0361328125, 0.059295654296875, 0.005077362060546875, 0.031524658203125, 3.0994415283203125e-06], "tokens": [284, 3610, 1612, 32, 470, 19511, 4058, 26, 890, 4058, 293, 284, 442, 861, 45, 334, 320, 719, 1022, 664, 319, 24992, 600, 12098, 803, 645, 16095, 32, 664, 319, 477, 753, 12098, 558, 886, 636, 432, 322, 12098, 803, 372, 526, 6556, 32, 664, 569, 334, 2522, 763, 3345, 571, 900]}
{"line_number": 994, "line_type": "original", "code": "", "entropy": 4.71875, "is_bug_line": false, "sus_score": 0.5833150148391724, "per_token_entropy": [4.71875], "tokens": [203]}
{"line_number": 994, "line_type": "generated", "code": "\n  public CompilerInput addNewInput(String name, String source) {\n    SourceAst ast = new SyntheticAst(name, source);\n    CompilerInput input = new CompilerInput(ast, false);\n    putCompilerInput(input.getInputId(),", "entropy": 0.192138671875, "is_bug_line": false, "sus_score": 0.5833150148391724, "per_token_entropy": [0.47998046875, 0.44677734375, 0.1461181640625, 0.0014028549194335938, 0.599609375, 0.432861328125, 0.3486328125, 0.0230560302734375, 0.541015625, 0.95263671875, 0.1968994140625, 0.37939453125, 0.953125, 0.262451171875, 0.0189361572265625, 0.06951904296875, 1.47265625, 0.1041259765625, 0.057098388671875, 0.004894256591796875, 0.10833740234375, 0.5947265625, 5.888938903808594e-05, 0.00506591796875, 0.0051727294921875, 0.08038330078125, 0.1090087890625, 0.07171630859375, 0.04095458984375, 0.0328369140625, 0.77783203125, 0.000640869140625, 0.0501708984375, 0.0024166107177734375, 0.0482177734375, 0.0024566650390625, 0.0001590251922607422, 0.00020313262939453125, 0.002101898193359375, 0.2017822265625, 0.053802490234375, 0.003841400146484375, 0.0173492431640625, 0.236083984375, 0.0007271766662597656, 7.212162017822266e-05, 0.0002772808074951172, 0.053192138671875, 0.0004260540008544922, 0.0018901824951171875, 2.849102020263672e-05, 1.4901161193847656e-05], "tokens": [334, 562, 20209, 1612, 1015, 1812, 1612, 26, 652, 636, 30, 892, 1914, 27, 301, 284, 6374, 19511, 10020, 280, 537, 40261, 18228, 19511, 26, 426, 30, 1914, 293, 284, 20209, 1612, 1509, 280, 537, 20209, 1612, 26, 633, 30, 901, 293, 284, 4162, 8115, 1612, 26, 1131, 32, 29647, 606, 1026]}
{"line_number": 1038, "line_type": "original", "code": "  private CompilerInput putCompilerInput(InputId id, CompilerInput input) {", "entropy": 0.9521484375, "is_bug_line": false, "sus_score": 0.5825749635696411, "per_token_entropy": [4.76953125, 7.30078125, 2.85546875, 0.1514892578125, 0.74658203125, 0.028656005859375, 0.0008907318115234375, 0.0252227783203125, 0.1015625, 8.511543273925781e-05, 0.02789306640625, 0.00693511962890625, 0.047943115234375, 5.0902366638183594e-05, 0.055328369140625, 0.0280914306640625, 0.046112060546875], "tokens": [225, 945, 20209, 1612, 4162, 8115, 1612, 26, 1612, 606, 804, 30, 20209, 1612, 1509, 27, 301]}
{"line_number": 1038, "line_type": "generated", "code": "\n    newInput.setCompiler(this);\n    return true;\n  }", "entropy": 0.1336669921875, "is_bug_line": false, "sus_score": 0.5825749635696411, "per_token_entropy": [0.314208984375, 0.67431640625, 0.0017232894897460938, 0.0005631446838378906, 0.0191650390625, 0.044342041015625, 0.0004925727844238281, 0.006011962890625, 0.0010814666748046875, 0.42138671875, 0.35986328125, 0.12274169921875, 0.002178192138671875, 0.036895751953125, 0.0010919570922851562], "tokens": [284, 537, 1612, 32, 470, 8115, 26, 578, 293, 284, 442, 861, 45, 334, 320]}
{"line_number": 1033, "line_type": "original", "code": "    externsRoot.addChildToFront(ast.getAstRoot(this));", "entropy": 1.71875, "is_bug_line": false, "sus_score": 0.5795183181762695, "per_token_entropy": [3.759765625, 0.67626953125, 0.003025054931640625, 12.703125, 0.1470947265625, 2.740234375, 0.0262298583984375, 1.4560546875, 0.013031005859375, 3.09375, 0.048126220703125, 0.0721435546875, 3.95703125, 0.0242462158203125, 0.1842041015625, 0.1981201171875, 0.1192626953125], "tokens": [264, 12098, 101, 4058, 32, 21545, 705, 10112, 26, 633, 32, 371, 19511, 4058, 26, 578, 876]}
{"line_number": 1033, "line_type": "generated", "code": "\n    return true;\n  }\n\n  /**\n   * @return The externs to use for this compilation.\n   */\n  public List<CompilerInput> getExterns() {\n    return externs;\n  }\n\n  @Override\n  public void report(J", "entropy": 0.53173828125, "is_bug_line": false, "sus_score": 0.5795183181762695, "per_token_entropy": [0.10308837890625, 1.103515625, 0.01220703125, 0.0022945404052734375, 0.042938232421875, 0.0006670951843261719, 0.3701171875, 1.330078125, 0.53125, 0.00063323974609375, 2.8125, 0.439208984375, 1.794921875, 1.21875, 0.64794921875, 3.333984375, 0.8193359375, 0.92041015625, 0.6396484375, 0.35693359375, 0.1868896484375, 0.2548828125, 0.044403076171875, 0.00972747802734375, 0.9091796875, 0.468505859375, 0.0260162353515625, 0.016082763671875, 0.0001024007797241211, 6.0677528381347656e-05, 0.0258026123046875, 0.004673004150390625, -0.0, 0.351318359375, 0.11480712890625, 0.0033283233642578125, 0.1251220703125, 0.0256500244140625, 0.0269622802734375, 0.00027108192443847656, 0.0088043212890625, 0.0081787109375, 3.790855407714844e-05, 0.1995849609375, 1.1513671875, 0.01174163818359375, 0.003719329833984375, 0.08612060546875, 2.767578125, 2.0078125, 0.87548828125, 1.466796875], "tokens": [284, 442, 861, 45, 334, 320, 719, 1022, 664, 319, 477, 601, 886, 12098, 101, 372, 793, 436, 458, 16260, 32, 664, 569, 334, 562, 1682, 46, 8115, 1612, 48, 622, 571, 900, 101, 346, 301, 284, 442, 12098, 101, 45, 334, 320, 719, 477, 1788, 334, 562, 763, 3639, 26, 60]}
{"line_number": 956, "line_type": "original", "code": "", "entropy": 3.619140625, "is_bug_line": false, "sus_score": 0.5786949992179871, "per_token_entropy": [3.619140625], "tokens": [203]}
{"line_number": 956, "line_type": "generated", "code": "\n  /**\n   * Returns the externs (in externs input) with the given name, or null if not\n   * found.\n   */\n  public Externs getExtern(String name) {\n    return externsByName.get(name);", "entropy": 0.603515625, "is_bug_line": false, "sus_score": 0.5786949992179871, "per_token_entropy": [0.275390625, 1.140625, 0.1439208984375, 0.0005269050598144531, 1.041015625, 0.53369140625, 1.583984375, 0.79541015625, 3.078125, 4.27734375, 1.28515625, 0.84130859375, 2.18359375, 1.6806640625, 2.18359375, 0.0748291015625, 0.1221923828125, 0.38427734375, 1.0068359375, 0.326171875, 0.2188720703125, 0.3212890625, 1.978515625, 0.11822509765625, 0.0013132095336914062, 0.2020263671875, 0.041351318359375, 0.11639404296875, 0.142822265625, 0.003173828125, 0.44970703125, 1.5615234375, 3.5762786865234375e-07, 0.12078857421875, 0.71533203125, 0.0013971328735351562, -0.0, 0.6005859375, 0.0256500244140625, 0.430419921875, 0.003940582275390625, 0.0013523101806640625, 0.003566741943359375, 0.323974609375, 0.07843017578125, 0.1871337890625, 0.74365234375, 0.00939178466796875, 0.001781463623046875, 0.0010576248168945312, 0.004596710205078125, 0.005367279052734375], "tokens": [334, 1022, 664, 319, 3759, 322, 12098, 101, 308, 266, 12098, 101, 1509, 27, 623, 322, 2702, 636, 30, 556, 744, 415, 646, 664, 319, 2431, 32, 664, 569, 334, 562, 1283, 900, 101, 622, 571, 900, 26, 652, 636, 27, 301, 284, 442, 12098, 101, 9813, 32, 371, 26, 426, 293]}
{"line_number": 2148, "line_type": "original", "code": "", "entropy": 3.603515625, "is_bug_line": false, "sus_score": 0.5760688185691833, "per_token_entropy": [3.603515625], "tokens": [203]}
{"line_number": 2148, "line_type": "generated", "code": "\n      return cfa.toDot(jsRoot);\n    }\n    return \"\";\n  }\n\n  /** Gets the DOT graph of the AST generated at the end of compilation. */\n  public String getAstDotGraph(Node n) throws IOException {\n    if (", "entropy": 0.23779296875, "is_bug_line": false, "sus_score": 0.5760688185691833, "per_token_entropy": [0.5302734375, 0.405517578125, 0.7333984375, 0.0018701553344726562, 0.0020751953125, 0.457763671875, 0.0074615478515625, 1.8486328125, 1.0302734375, 0.0017261505126953125, 0.3720703125, 0.157958984375, 0.0021114349365234375, 0.57666015625, 0.0447998046875, 0.740234375, 0.026641845703125, 0.0007200241088867188, 0.280029296875, 0.32373046875, 0.412109375, 0.09185791015625, 0.27880859375, 0.0252838134765625, 0.03680419921875, 0.059112548828125, 0.31982421875, 1.0888671875, 0.11053466796875, 0.00689697265625, 0.0087127685546875, 0.0006232261657714844, 0.036773681640625, 0.02923583984375, 0.00281524658203125, 0.005550384521484375, 0.041412353515625, 0.03741455078125, 0.058441162109375, 0.337890625, 0.40185546875, 0.017578125, 0.06414794921875, 0.407958984375, 0.60205078125, 0.037078857421875, 0.0323486328125, 0.002788543701171875, 0.003864288330078125, 0.007289886474609375, 0.25244140625, 0.002811431884765625], "tokens": [397, 442, 281, 1919, 32, 452, 10025, 26, 754, 4058, 293, 284, 320, 284, 442, 5121, 334, 320, 719, 1022, 7124, 322, 32763, 3996, 432, 322, 16095, 4723, 821, 322, 943, 432, 16260, 32, 569, 334, 562, 892, 622, 19511, 10025, 3406, 26, 1212, 310, 27, 2571, 6291, 301, 284, 415, 308]}
{"line_number": 1037, "line_type": "original", "code": "", "entropy": 3.541015625, "is_bug_line": false, "sus_score": 0.5753508806228638, "per_token_entropy": [3.541015625], "tokens": [203]}
{"line_number": 1037, "line_type": "generated", "code": "\n    Preconditions.checkState(\n        inputIdOnAst.equals(newInput.getInputId()),\n        \"inputId on AST is not the same as the new input's id: %s vs %s\",\n        inputIdOnAst, newInput.", "entropy": 0.409912109375, "is_bug_line": false, "sus_score": 0.5753508806228638, "per_token_entropy": [0.196533203125, 0.30859375, 0.000736236572265625, 0.00148773193359375, 0.005878448486328125, 0.0009036064147949219, 0.417724609375, 0.1947021484375, 8.07046890258789e-05, 4.6133995056152344e-05, 2.5510787963867188e-05, 0.251708984375, 0.0577392578125, 0.0002225637435913086, 1.1845703125, 0.005748748779296875, 0.00024366378784179688, 0.001132965087890625, 0.0002052783966064453, 0.60888671875, 0.08013916015625, 0.1993408203125, 2.13671875, 0.417236328125, 1.8359375, 0.52587890625, 2.181640625, 1.12109375, 1.28515625, 0.099365234375, 0.12939453125, 0.978515625, 1.8232421875, 0.1868896484375, 1.6435546875, 0.7568359375, 0.81201171875, 0.281494140625, 0.0007486343383789062, 0.74853515625, 0.194091796875, 0.0003631114959716797, 0.1090087890625, 0.0328369140625, 0.0182952880859375, 0.00010669231414794922, 8.702278137207031e-06, 0.0004322528839111328, 0.049346923828125, 0.426025390625, 0.00017392635345458984, 0.006866455078125], "tokens": [284, 40596, 32, 1553, 1078, 26, 291, 1509, 606, 1484, 19511, 32, 3574, 26, 890, 1612, 32, 29647, 606, 6182, 291, 313, 1131, 606, 544, 16095, 438, 646, 322, 2432, 619, 322, 537, 1509, 1182, 804, 44, 904, 101, 8480, 904, 101, 392, 291, 1509, 606, 1484, 19511, 30, 537, 1612, 32]}
