{"line_number": 99, "line_type": "original", "code": "", "entropy": 2.990234375, "is_bug_line": false, "sus_score": 0.7095704078674316, "per_token_entropy": [2.990234375], "tokens": [203]}
{"line_number": 99, "line_type": "generated", "code": "  }\n\n  private void handlePossibleFileOverviewJsDoc(Comment comment) {\n    String commentText = comment.getValue();\n    String commentTextLower = commentText.toLowerCase();\n    if (commentTextLower.contains(\"@fileoverview\")) {\n      if (", "entropy": 0.32666015625, "is_bug_line": false, "sus_score": 0.7095704078674316, "per_token_entropy": [1.787109375, 0.07684326171875, 0.2066650390625, 0.7802734375, 0.11566162109375, 0.0251617431640625, 0.0021190643310546875, 0.0003712177276611328, 0.00015926361083984375, 5.793571472167969e-05, 2.384185791015625e-07, 0.001033782958984375, 0.018768310546875, 0.0841064453125, 0.0025634765625, 0.00240325927734375, 0.06463623046875, 1.6689453125, 0.345458984375, 1.1044921875, 0.0112762451171875, 0.07958984375, 0.002323150634765625, 0.1585693359375, 0.1256103515625, 0.165283203125, 2.23046875, 1.3515625, 0.94921875, 0.99169921875, 0.06610107421875, 0.017425537109375, 0.0135345458984375, 0.00289154052734375, 0.06134033203125, 0.040008544921875, 0.297119140625, 0.40283203125, 0.171875, 0.1361083984375, 0.0168304443359375, 0.0767822265625, 0.004848480224609375, 1.1064453125, 0.0587158203125, 0.32177734375, 0.002407073974609375, 0.237548828125, 0.0006990432739257812, 0.04150390625, 1.4375, 0.11767578125], "tokens": [225, 320, 719, 945, 763, 2887, 23708, 974, 19310, 10535, 4216, 26, 6315, 5093, 27, 301, 284, 892, 5093, 1031, 280, 5093, 32, 6682, 473, 284, 892, 5093, 1031, 6724, 280, 5093, 1031, 32, 10493, 473, 284, 415, 308, 3647, 1031, 6724, 32, 4752, 10253, 761, 11034, 2131, 301, 397, 415, 308]}
{"line_number": 500, "line_type": "original", "code": "      node.setCharno(position2charno(leftParamPos));", "entropy": 1.201171875, "is_bug_line": false, "sus_score": 0.7078346610069275, "per_token_entropy": [4.7578125, 1.548828125, 0.01160430908203125, 3.80078125, 1.46484375, 0.0006909370422363281, 0.0157012939453125, 0.671875, 0.0021152496337890625, 0.00042748451232910156, 0.0007929801940917969, 0.01065826416015625, 5.05078125, 1.7177734375, 0.046539306640625, 0.12432861328125], "tokens": [647, 1541, 32, 470, 2659, 1347, 26, 2705, 36, 1594, 1347, 26, 1873, 3180, 2996, 876]}
{"line_number": 500, "line_type": "generated", "code": "\n      node.addChildToBack(transformBlock(functionNode.getBody()));\n      return node;\n    }\n\n    @Override\n    Node processIf(If ifNode) {\n      Node node = newNode(Token.IF);\n      node.addChildToBack(transform", "entropy": 0.11553955078125, "is_bug_line": false, "sus_score": 0.7078346610069275, "per_token_entropy": [0.25927734375, 1.0615234375, 0.004589080810546875, 0.0213470458984375, 0.0001894235610961914, 0.00577545166015625, 0.0009412765502929688, 0.051177978515625, 0.41162109375, 0.006107330322265625, 0.0074615478515625, 3.361701965332031e-05, 0.0011205673217773438, 0.0035305023193359375, 0.001384735107421875, 0.292724609375, 0.343505859375, 0.004138946533203125, 0.0009927749633789062, 0.046539306640625, 0.0007257461547851562, 0.195556640625, 0.050994873046875, 0.00037980079650878906, 0.0128021240234375, 0.0124053955078125, 0.0023937225341796875, 0.74072265625, 0.2412109375, 0.0020542144775390625, 0.058197021484375, 0.0160369873046875, 0.002166748046875, 0.0006670951843261719, 0.01328277587890625, 0.41845703125, 0.143310546875, 0.003986358642578125, 0.029449462890625, 0.0038909912109375, 0.4970703125, 3.504753112792969e-05, 0.1705322265625, 0.6640625, 0.059478759765625, 0.069091796875, 0.0004870891571044922, 0.003002166748046875, 0.0005426406860351562, 0.0208892822265625, 0.0004076957702636719, 0.051361083984375], "tokens": [397, 1541, 32, 21545, 705, 2495, 26, 3792, 2227, 26, 1126, 1212, 32, 25426, 5073, 397, 442, 1541, 45, 284, 320, 446, 477, 1788, 284, 4004, 2164, 2797, 26, 2797, 415, 1212, 27, 301, 397, 4004, 1541, 280, 33202, 26, 1763, 32, 2952, 293, 397, 1541, 32, 21545, 705, 2495, 26, 3792]}
{"line_number": 498, "line_type": "original", "code": "      int leftParamPos = callNode.getAbsolutePosition() + callNode.getLp();", "entropy": 1.236328125, "is_bug_line": false, "sus_score": 0.69931960105896, "per_token_entropy": [6.83203125, 3.169921875, 2.68359375, 0.8076171875, 0.1884765625, 0.0163116455078125, 6.0859375, 0.02008056640625, 0.00759124755859375, 0.228271484375, 1.3701171875, 0.0191650390625, 0.374755859375, 0.05340576171875, 1.673828125, 0.0015783309936523438, 0.001995086669921875, 0.18701171875, 0.8857421875, 0.12646484375], "tokens": [647, 629, 2841, 3180, 2996, 280, 1476, 1212, 32, 371, 12043, 2731, 346, 474, 1476, 1212, 32, 371, 42016, 473]}
{"line_number": 498, "line_type": "generated", "code": "\n      node.addChildToBack(lp);\n      node.addChildToBack(transformBlock(functionNode.getBody()));\n      return node;\n    }\n\n    @Override\n    Node processIf(If ifNode) {\n      Node node = newNode(Token.IF", "entropy": 0.11627197265625, "is_bug_line": false, "sus_score": 0.69931960105896, "per_token_entropy": [0.1903076171875, 0.7060546875, 0.0011768341064453125, 0.017059326171875, 0.00146484375, 0.42333984375, 0.0003979206085205078, 0.01430511474609375, 0.00177764892578125, 0.278076171875, 0.4228515625, 0.001285552978515625, 0.01145172119140625, 0.0001138448715209961, 0.0015354156494140625, 0.0009164810180664062, 0.0574951171875, 0.330810546875, 0.005168914794921875, 0.010040283203125, 1.2278556823730469e-05, 0.0010766983032226562, 0.003330230712890625, 0.0011816024780273438, 0.345703125, 0.53173828125, 0.0030345916748046875, 0.0005931854248046875, 0.05377197265625, 0.0008478164672851562, 0.252197265625, 0.041015625, 0.0004813671112060547, 0.01146697998046875, 0.008575439453125, 0.0016384124755859375, 0.80224609375, 0.1689453125, 0.002490997314453125, 0.05712890625, 0.013397216796875, 0.0021076202392578125, 0.0006699562072753906, 0.01200103759765625, 0.429443359375, 0.1461181640625, 0.003749847412109375, 0.02764892578125, 0.0048828125, 0.52392578125, 2.4318695068359375e-05, 0.12152099609375], "tokens": [397, 1541, 32, 21545, 705, 2495, 26, 1915, 293, 397, 1541, 32, 21545, 705, 2495, 26, 3792, 2227, 26, 1126, 1212, 32, 25426, 5073, 397, 442, 1541, 45, 284, 320, 446, 477, 1788, 284, 4004, 2164, 2797, 26, 2797, 415, 1212, 27, 301, 397, 4004, 1541, 280, 33202, 26, 1763, 32, 2952]}
{"line_number": 569, "line_type": "original", "code": "      Node n =  newNode(", "entropy": 2.59375, "is_bug_line": false, "sus_score": 0.6989660263061523, "per_token_entropy": [7.109375, 3.265625, 0.33447265625, 0.03790283203125, 5.31640625, 2.07421875, 0.0170745849609375], "tokens": [647, 4004, 310, 280, 225, 33202, 26]}
{"line_number": 569, "line_type": "generated", "code": "\n      return newStringNode(transformTokenType(nameNode.getType()),\n          nameNode.getIdentifier());\n    }\n\n    @Override\n    Node processNew(NewExpression newExpressionNode) {\n      Node node = newNode(Token.NEW);\n      node.addChildTo", "entropy": 0.1822509765625, "is_bug_line": false, "sus_score": 0.6989660263061523, "per_token_entropy": [0.55419921875, 0.71826171875, 0.2222900390625, 0.0308074951171875, 0.0018491744995117188, 0.0099945068359375, 0.51220703125, 0.030548095703125, 0.0016927719116210938, 0.01226043701171875, 0.0015201568603515625, 0.00109100341796875, 0.043792724609375, 0.00611114501953125, 0.7099609375, 0.03277587890625, 0.00217437744140625, 0.001270294189453125, 0.5703125, 0.018646240234375, 0.11566162109375, 0.0006175041198730469, 0.0572509765625, 0.03668212890625, 0.0002053976058959961, 0.003673553466796875, 0.0076751708984375, 0.0010519027709960938, 0.49462890625, 0.33544921875, 0.01548004150390625, 1.341796875, 0.65478515625, 0.6455078125, 0.7021484375, 0.0010557174682617188, 0.0012178421020507812, 0.180419921875, 0.223388671875, 0.64306640625, 0.0038585662841796875, 0.0205841064453125, 0.001461029052734375, 0.12939453125, 0.00012624263763427734, 0.0018377304077148438, 0.00753021240234375, 0.07464599609375, 0.2861328125, 0.0003383159637451172, 0.005542755126953125, 0.00011932849884033203], "tokens": [397, 442, 537, 652, 1212, 26, 3792, 27579, 26, 426, 1212, 32, 10272, 6182, 616, 636, 1212, 32, 47538, 1035, 284, 320, 446, 477, 1788, 284, 4004, 2164, 1812, 26, 1812, 3487, 537, 3487, 1212, 27, 301, 397, 4004, 1541, 280, 33202, 26, 1763, 32, 11356, 293, 397, 1541, 32, 21545, 705]}
{"line_number": 307, "line_type": "original", "code": "      if (literalNode.isDestructuring()) {", "entropy": 1.4677734375, "is_bug_line": false, "sus_score": 0.6966972947120667, "per_token_entropy": [4.4296875, 3.2265625, 0.3349609375, 6.70703125, 0.44873046875, 0.060943603515625, 1.3017578125, 0.8193359375, 1.0848045349121094e-05, 0.0012807846069335938, 0.2261962890625, 0.047943115234375], "tokens": [647, 415, 308, 7538, 1212, 32, 297, 5077, 33940, 4093, 1157, 301]}
{"line_number": 307, "line_type": "generated", "code": "\n     */\n    private void parseDirectives(Node script) {\n      List<String> directives = new ArrayList<>();\n      for (Node child : script.children()) {\n        if (isDirective(child)) {\n          directives.add(getStringValue(child));", "entropy": 0.30322265625, "is_bug_line": false, "sus_score": 0.6966972947120667, "per_token_entropy": [0.62744140625, 0.40673828125, 0.016265869140625, 0.179931640625, 0.03515625, 0.00130462646484375, 0.00013399124145507812, 0.005401611328125, 0.030029296875, 0.60302734375, 0.541015625, 0.0020275115966796875, 0.08331298828125, 1.51953125, 0.0214080810546875, 1.134765625, 0.003337860107421875, 0.62939453125, 0.026763916015625, 0.82568359375, 0.007190704345703125, 0.205078125, 0.1553955078125, 1.3623046875, 0.00783538818359375, 0.70361328125, 0.76611328125, 0.27880859375, 0.0202484130859375, 0.0009284019470214844, 0.007320404052734375, 0.0030498504638671875, 0.0007753372192382812, 0.0213470458984375, 0.233154296875, 0.079345703125, 1.7294921875, 0.2059326171875, 0.312255859375, 0.005649566650390625, 0.055267333984375, 0.0013341903686523438, 0.01873779296875, 0.61767578125, 0.0005512237548828125, 0.003253936767578125, 0.01076507568359375, 1.34765625, 0.68896484375, 0.05523681640625, 0.01360321044921875, 0.1522216796875], "tokens": [275, 569, 284, 945, 763, 3185, 47378, 26, 1212, 3261, 27, 301, 397, 1682, 46, 652, 48, 30914, 280, 537, 5059, 6981, 397, 436, 308, 1212, 2838, 499, 3261, 32, 4915, 1157, 301, 291, 415, 308, 297, 17208, 26, 2661, 490, 301, 616, 30914, 32, 669, 26, 7069, 882, 26, 2661, 876]}
{"line_number": 575, "line_type": "original", "code": "      n.setLineno(exprNode.getLineno());", "entropy": 0.69970703125, "is_bug_line": false, "sus_score": 0.6946803331375122, "per_token_entropy": [3.583984375, 3.875, 0.0247344970703125, 0.07269287109375, 1.791015625, 1.4185905456542969e-05, 0.011199951171875, 0.24560546875, 0.0067138671875, 0.0152435302734375, 0.0909423828125, 0.06915283203125, 0.00010526180267333984, 0.01233673095703125], "tokens": [647, 310, 32, 470, 7366, 7888, 26, 3385, 1212, 32, 371, 7366, 7888, 1035]}
{"line_number": 575, "line_type": "generated", "code": "\n    }\n\n    @Override\n    Node processNumber(NumberLiteral numberNode) {\n      return newNumberNode(numberNode.getValue());\n    }\n\n    @Override\n    Node processObjectLiteral(ObjectLiteral objectNode) {\n      Node node = newNode(Token.", "entropy": 0.1915283203125, "is_bug_line": false, "sus_score": 0.6946803331375122, "per_token_entropy": [0.2705078125, 0.0287628173828125, 0.0655517578125, 0.0709228515625, 0.0004112720489501953, 0.005680084228515625, 0.007640838623046875, 0.0009613037109375, 0.63330078125, 0.1031494140625, 0.00690460205078125, 1.072265625, 0.283447265625, 0.0546875, 0.0009965896606445312, 0.0030841827392578125, 0.05596923828125, 0.64990234375, 0.242431640625, 1.46875, 0.049560546875, 0.0096435546875, 0.65576171875, 0.0023365020751953125, 0.1773681640625, 0.274658203125, 0.11419677734375, 0.11895751953125, 0.0004227161407470703, 0.0577392578125, 0.03515625, 0.0001270771026611328, 0.005466461181640625, 0.0065155029296875, 0.0005812644958496094, 0.2213134765625, 0.422607421875, 0.006259918212890625, 0.0132598876953125, 0.00926971435546875, 0.9853515625, 0.873046875, 0.0012407302856445312, 0.0018520355224609375, 0.0276336669921875, 0.40625, 0.4169921875, 0.0019350051879882812, 0.02703857421875, 0.00826263427734375, 0.0076904296875, 6.949901580810547e-05], "tokens": [284, 320, 446, 477, 1788, 284, 4004, 2164, 1918, 26, 1918, 8208, 1451, 1212, 27, 301, 397, 442, 537, 1918, 1212, 26, 2171, 1212, 32, 6682, 1035, 284, 320, 446, 477, 1788, 284, 4004, 2164, 959, 8208, 26, 959, 8208, 1300, 1212, 27, 301, 397, 4004, 1541, 280, 33202, 26, 1763, 32]}
{"line_number": 492, "line_type": "original", "code": "      Node node = newNode(transformTokenType(callNode.getType()),", "entropy": 2.076171875, "is_bug_line": false, "sus_score": 0.6943812966346741, "per_token_entropy": [3.650390625, 7.03515625, 8.2421875, 0.09832763671875, 0.09771728515625, 0.005069732666015625, 3.625, 0.1405029296875, 0.0029315948486328125, 2.724609375, 0.018341064453125, 0.0114898681640625, 0.0179901123046875, 3.388671875], "tokens": [647, 4004, 1541, 280, 33202, 26, 3792, 27579, 26, 1851, 1212, 32, 10272, 6182]}
{"line_number": 492, "line_type": "generated", "code": "\n          position2charno(functionNode.getAbsolutePosition());\n      lp.setCharno(lparenCharno);\n      node.addChildToBack(lp);\n\n      Node rp = newNode(Token.RP);\n      rp.setLineno(function", "entropy": 0.174560546875, "is_bug_line": false, "sus_score": 0.6943812966346741, "per_token_entropy": [1.9150390625, 0.88720703125, 0.0060577392578125, 0.0010786056518554688, 0.00038623809814453125, 0.00873565673828125, 0.332763671875, 0.0001806020736694336, 0.005157470703125, 0.0285491943359375, 0.07965087890625, 0.0157318115234375, 0.2366943359375, 0.0968017578125, 0.049652099609375, 0.0002086162567138672, 0.004680633544921875, 0.000942230224609375, 1.0013580322265625e-05, 0.000579833984375, 0.0110321044921875, 1.430511474609375e-06, 4.410743713378906e-06, 2.86102294921875e-05, 0.0023326873779296875, 0.134521484375, 0.1109619140625, 9.5367431640625e-05, 0.000255584716796875, 0.0001327991485595703, 0.317626953125, 0.00012063980102539062, 0.0017652511596679688, 0.0007100105285644531, 0.79736328125, 1.79296875, 0.8916015625, 0.00665283203125, 0.0252532958984375, 0.0014247894287109375, 0.0170135498046875, 3.6835670471191406e-05, 0.005222320556640625, 0.022979736328125, 0.05865478515625, 0.98095703125, 0.0007829666137695312, 0.00893402099609375, 0.1571044921875, 3.170967102050781e-05, 0.00605010986328125, 0.0556640625], "tokens": [616, 2747, 36, 1594, 1347, 26, 1126, 1212, 32, 371, 12043, 2731, 1035, 397, 14532, 32, 470, 2659, 1347, 26, 1915, 11727, 2659, 1347, 293, 397, 1541, 32, 21545, 705, 2495, 26, 1915, 293, 1687, 4004, 26465, 280, 33202, 26, 1763, 32, 5735, 293, 397, 26465, 32, 470, 7366, 7888, 26, 1126]}
{"line_number": 313, "line_type": "original", "code": "      for (AstNode child : literalNode.getElements()) {", "entropy": 1.7578125, "is_bug_line": false, "sus_score": 0.6939474940299988, "per_token_entropy": [3.830078125, 3.587890625, 0.024383544921875, 3.74609375, 0.005672454833984375, 0.70751953125, 0.2095947265625, 7.97265625, 0.1322021484375, 0.28466796875, 4.08203125, 0.0017423629760742188, 0.006580352783203125, 0.020355224609375], "tokens": [647, 436, 308, 19511, 1212, 2838, 499, 10652, 1212, 32, 4649, 101, 1157, 301]}
{"line_number": 313, "line_type": "generated", "code": "\n      if (n.getType() == Token.STRING) {\n        String value = n.getString();\n        if (value.equals(\"use strict\")) {\n          node.putBooleanProp(Node.IS_STRICT, true);\n        } else if (", "entropy": 0.289794921875, "is_bug_line": false, "sus_score": 0.6939474940299988, "per_token_entropy": [0.7490234375, 1.3955078125, 0.1387939453125, 1.4140625, 0.02655029296875, 0.6884765625, 0.006855010986328125, 0.09613037109375, 0.00324249267578125, 0.0013647079467773438, 0.5673828125, 0.3720703125, 0.006748199462890625, 0.060760498046875, 0.76171875, 1.1748046875, 0.01273345947265625, 0.39453125, 0.0005702972412109375, 0.004383087158203125, 0.01181793212890625, 0.128173828125, 0.429931640625, 0.1654052734375, 0.311767578125, 0.10089111328125, 1.1865234375, 0.19580078125, 0.00801849365234375, 0.01377105712890625, 0.06268310546875, 0.007244110107421875, 0.026611328125, 0.7666015625, 0.0069732666015625, 0.41552734375, 0.07403564453125, 0.00142669677734375, 0.00585174560546875, 0.004512786865234375, 6.592273712158203e-05, 1.5078125, 4.553794860839844e-05, 0.07568359375, 0.1412353515625, 0.01442718505859375, 0.0004725456237792969, 0.31787109375, 0.0005340576171875, 0.630859375, 0.525390625, 0.055938720703125], "tokens": [397, 415, 308, 96, 32, 10272, 346, 610, 6512, 32, 5203, 27, 301, 291, 892, 786, 280, 310, 32, 7069, 473, 291, 415, 308, 853, 32, 3574, 440, 539, 6523, 2131, 301, 616, 1541, 32, 524, 4709, 6567, 26, 1212, 32, 1296, 81, 22982, 30, 861, 293, 291, 320, 813, 415, 308]}
{"line_number": 340, "line_type": "original", "code": "      Node assign = processInfixExpression(assignmentNode);", "entropy": 2.408203125, "is_bug_line": true, "sus_score": 0.6938566565513611, "per_token_entropy": [4.51953125, 1.634765625, 9.125, 0.767578125, 3.2890625, 5.4765625, 0.0174560546875, 1.3203125, 0.2030029296875, 1.9384765625, 0.084228515625, 0.50830078125], "tokens": [647, 4004, 5313, 280, 2164, 383, 3299, 3487, 26, 14794, 1212, 293]}
{"line_number": 340, "line_type": "generated", "code": "\n      return n;\n    }\n\n    @Override\n    Node processBlock(Block blockNode) {\n      Node block = newNode(Token.BLOCK);\n      for (AstNode child : blockNode.getStatements()) {\n        block.addChildToBack(transform(", "entropy": 0.2420654296875, "is_bug_line": true, "sus_score": 0.6938566565513611, "per_token_entropy": [1.9296875, 0.2247314453125, 2.1484375, 0.06402587890625, 0.060577392578125, 0.00399017333984375, 0.11419677734375, 0.09259033203125, 0.0006170272827148438, 0.2164306640625, 0.0238037109375, 0.0129547119140625, 1.0888671875, 0.0008330345153808594, 0.0131378173828125, 0.0157470703125, 0.48828125, 0.0009288787841796875, 0.00891876220703125, 0.1578369140625, 0.298095703125, 1.9921875, 0.06488037109375, 0.036285400390625, 0.00403594970703125, 0.0271148681640625, 2.384185791015625e-06, 0.0008602142333984375, 0.06396484375, 0.1451416015625, 0.3828125, 0.0028476715087890625, 0.2178955078125, 0.00028896331787109375, 0.51904296875, 0.019317626953125, 0.0024814605712890625, 0.00035881996154785156, 0.1650390625, 1.3125, 2.372264862060547e-05, 0.0015726089477539062, 0.00176239013671875, 0.0196685791015625, 0.59814453125, 0.00012636184692382812, 0.0010280609130859375, 0.0008778572082519531, 0.0002779960632324219, 0.0022106170654296875, 0.0240478515625, 0.01102447509765625], "tokens": [397, 442, 310, 45, 284, 320, 446, 477, 1788, 284, 4004, 2164, 2227, 26, 2227, 2163, 1212, 27, 301, 397, 4004, 2163, 280, 33202, 26, 1763, 32, 10322, 293, 397, 436, 308, 19511, 1212, 2838, 499, 2163, 1212, 32, 19702, 1728, 1157, 301, 291, 2163, 32, 21545, 705, 2495, 26, 3792, 26]}
{"line_number": 499, "line_type": "original", "code": "      node.setLineno(callNode.getLineno());", "entropy": 1.435546875, "is_bug_line": false, "sus_score": 0.6929779052734375, "per_token_entropy": [6.64453125, 0.85009765625, 0.0023212432861328125, 0.152099609375, 3.3046875, 2.0265579223632812e-06, 0.01116943359375, 8.890625, 0.036834716796875, 0.007476806640625, 0.12030029296875, 0.060699462890625, 0.0007433891296386719, 0.015838623046875], "tokens": [647, 1541, 32, 470, 7366, 7888, 26, 1851, 1212, 32, 371, 7366, 7888, 1035]}
{"line_number": 499, "line_type": "generated", "code": "\n      node.setCharno(position2charno(functionNode.getAbsolutePosition()));\n      node.addChildToBack(transformBlock(functionNode.getBody()));\n      return node;\n    }\n\n    @Override\n    Node processIf(If ifNode)", "entropy": 0.11334228515625, "is_bug_line": false, "sus_score": 0.6929779052734375, "per_token_entropy": [0.1580810546875, 0.72900390625, 0.002696990966796875, 0.364990234375, 0.041839599609375, 0.00015401840209960938, 0.002864837646484375, 0.165283203125, 5.5670738220214844e-05, 6.651878356933594e-05, 0.0003020763397216797, 0.002899169921875, 0.64404296875, 0.00040435791015625, 0.004444122314453125, 0.19140625, 0.2022705078125, 0.0211944580078125, 0.0948486328125, 0.25048828125, 0.76611328125, 0.004840850830078125, 0.1258544921875, 0.00015664100646972656, 0.00963592529296875, 0.001171112060546875, 0.05908203125, 0.275390625, 0.006305694580078125, 0.0081634521484375, 1.8596649169921875e-05, 0.001720428466796875, 0.00466156005859375, 0.00093841552734375, 0.1737060546875, 0.1968994140625, 0.0018663406372070312, 0.0007047653198242188, 0.0533447265625, 0.0009889602661132812, 0.1981201171875, 0.058502197265625, 0.0004172325134277344, 0.0159149169921875, 0.01126861572265625, 0.0017786026000976562, 0.7900390625, 0.181640625, 0.0024261474609375, 0.04998779296875, 0.01354217529296875, 0.002002716064453125], "tokens": [397, 1541, 32, 470, 2659, 1347, 26, 2705, 36, 1594, 1347, 26, 1126, 1212, 32, 371, 12043, 2731, 5073, 397, 1541, 32, 21545, 705, 2495, 26, 3792, 2227, 26, 1126, 1212, 32, 25426, 5073, 397, 442, 1541, 45, 284, 320, 446, 477, 1788, 284, 4004, 2164, 2797, 26, 2797, 415, 1212, 27]}
{"line_number": 377, "line_type": "original", "code": "      }", "entropy": 3.853515625, "is_bug_line": false, "sus_score": 0.6869989037513733, "per_token_entropy": [6.59765625, 1.1083984375], "tokens": [647, 320]}
{"line_number": 377, "line_type": "generated", "code": "\n    }\n\n    @Override\n    Node processContinueStatement(ContinueStatement statementNode) {\n      Node node = newNode(Token.CONTINUE);\n      if (statementNode.getLabel()!= null) {\n        Node labelName = transform(statementNode.getLabel());\n       ", "entropy": 0.013641357421875, "is_bug_line": false, "sus_score": 0.6869989037513733, "per_token_entropy": [0.08343505859375, 0.008453369140625, 0.0751953125, 0.069091796875, 0.0003695487976074219, 0.000885009765625, 0.006969451904296875, 0.0021343231201171875, 0.016754150390625, 0.0001710653305053711, 0.00010395050048828125, 0.0111541748046875, 3.0875205993652344e-05, 0.017913818359375, 0.005474090576171875, 0.0001533031463623047, 0.0008411407470703125, 0.004352569580078125, 0.022705078125, 0.0196990966796875, 0.00027632713317871094, 0.0020465850830078125, 0.00033354759216308594, 0.0008730888366699219, 1.6570091247558594e-05, 0.0043182373046875, 0.0024204254150390625, 0.004497528076171875, 0.0115509033203125, 0.00040650367736816406, 0.00018346309661865234, 4.565715789794922e-05, 4.565715789794922e-05, 0.055694580078125, 0.034820556640625, 0.0009012222290039062, 0.00010859966278076172, 0.0008955001831054688, 0.0006771087646484375, 0.0036907196044921875, 0.1474609375, 0.0357666015625, 0.038604736328125, 0.00151824951171875, 0.00408172607421875, 0.0020885467529296875, 0.00024044513702392578, 9.775161743164062e-06, 0.0004074573516845703, 0.00048470497131347656, 0.0027313232421875, 0.006504058837890625], "tokens": [284, 320, 446, 477, 1788, 284, 4004, 2164, 17743, 5495, 26, 17743, 5495, 7603, 1212, 27, 301, 397, 4004, 1541, 280, 33202, 26, 1763, 32, 45405, 293, 397, 415, 308, 9849, 1212, 32, 38892, 346, 863, 744, 27, 301, 291, 4004, 2266, 558, 280, 4522, 26, 9849, 1212, 32, 38892, 1035, 291]}
{"line_number": 321, "line_type": "original", "code": "      if (skipCount > 0) {", "entropy": 1.837890625, "is_bug_line": false, "sus_score": 0.6867160797119141, "per_token_entropy": [4.08203125, 2.140625, 0.286376953125, 5.34765625, 5.1640625, 1.1103515625, 0.032196044921875, 0.07080078125, 0.10260009765625, 0.04193115234375], "tokens": [647, 415, 308, 5961, 1534, 848, 225, 34, 27, 301]}
{"line_number": 321, "line_type": "generated", "code": "\n          directives.add(directive);\n        }\n      }\n\n      if (directives == null) {\n        return;\n      }\n\n      // We need to preserve the order of the directives, so we can't use a\n      // LinkedHashSet.\n      List<String>", "entropy": 0.48681640625, "is_bug_line": false, "sus_score": 0.6867160797119141, "per_token_entropy": [0.73291015625, 0.98876953125, 0.034210205078125, 0.04254150390625, 0.00714111328125, 0.01123046875, 0.011688232421875, 0.1851806640625, 0.0024204254150390625, 0.173095703125, 0.0008077621459960938, 0.939453125, 0.58740234375, 0.016571044921875, 0.01983642578125, 1.689453125, 0.00019311904907226562, 0.033477783203125, 0.0167236328125, 0.05072021484375, 0.2315673828125, 0.0016994476318359375, 0.018890380859375, 0.0002231597900390625, 0.329345703125, 0.73486328125, 3.615234375, 2.279296875, 0.281005859375, 1.78515625, 0.76513671875, 0.6044921875, 0.268310546875, 0.34814453125, 0.09893798828125, 0.8720703125, 0.60498046875, 0.5556640625, 0.75439453125, 0.023193359375, 0.42236328125, 0.6015625, 0.3095703125, 0.006687164306640625, 1.734375, 0.024871826171875, 0.40576171875, 0.76318359375, 1.2939453125, 0.0020160675048828125, 0.034942626953125, 4.649162292480469e-05], "tokens": [616, 30914, 32, 669, 26, 23338, 293, 291, 320, 397, 320, 1687, 415, 308, 33436, 610, 744, 27, 301, 291, 442, 45, 397, 320, 1687, 434, 2688, 1849, 372, 24070, 322, 2532, 432, 322, 30914, 30, 1259, 996, 883, 1330, 793, 312, 397, 434, 18227, 17175, 32, 397, 1682, 46, 652, 48]}
{"line_number": 579, "line_type": "original", "code": "      n.setCharno(position2charno(exprNode.getAbsolutePosition() +", "entropy": 0.92041015625, "is_bug_line": false, "sus_score": 0.6863229274749756, "per_token_entropy": [4.7578125, 5.859375, 0.1707763671875, 0.76708984375, 0.47265625, 0.00020945072174072266, 0.01560211181640625, 0.439208984375, 0.0083465576171875, 0.0009737014770507812, 0.0007410049438476562, 0.01194000244140625, 2.2890625, 0.02685546875, 0.0230560302734375, 1.185546875, 0.12109375, 0.0293731689453125, 2.0390625, 0.1856689453125], "tokens": [647, 310, 32, 470, 2659, 1347, 26, 2705, 36, 1594, 1347, 26, 3385, 1212, 32, 371, 12043, 2731, 346, 474]}
{"line_number": 579, "line_type": "generated", "code": "\n      return newStringNode(Token.STRING, literalNode.getValue());\n    }\n\n    @Override\n    Node processObjectLiteral(ObjectLiteral literalNode) {\n      Node node = newNode(Token.OBJECTLIT);\n      for (ObjectProperty prop : literalNode.", "entropy": 0.14306640625, "is_bug_line": false, "sus_score": 0.6863229274749756, "per_token_entropy": [0.9931640625, 0.55029296875, 0.31005859375, 0.482421875, 0.0025348663330078125, 0.007904052734375, 0.63720703125, 0.0006241798400878906, 0.7080078125, 0.0965576171875, 0.322509765625, 0.00522613525390625, 0.00627899169921875, 0.10205078125, 0.1712646484375, 0.044708251953125, 0.0007910728454589844, 0.042449951171875, 0.040771484375, 6.866455078125e-05, 0.0027008056640625, 0.00571441650390625, 0.0004677772521972656, 0.236572265625, 0.317626953125, 0.005702972412109375, 0.00818634033203125, 0.006420135498046875, 0.227294921875, 0.03363037109375, 0.0006046295166015625, 0.0012845993041992188, 0.026519775390625, 0.38623046875, 0.53759765625, 0.0015840530395507812, 0.032196044921875, 0.017852783203125, 0.009857177734375, 2.968311309814453e-05, 0.08599853515625, 0.038116455078125, 0.0177154541015625, 0.12396240234375, 0.31494140625, 0.002262115478515625, 0.30810546875, 0.09600830078125, 0.050537109375, 0.02197265625, 3.8743019104003906e-05, 0.0001842975616455078], "tokens": [397, 442, 537, 652, 1212, 26, 1763, 32, 5203, 30, 10652, 1212, 32, 6682, 1035, 284, 320, 446, 477, 1788, 284, 4004, 2164, 959, 8208, 26, 959, 8208, 10652, 1212, 27, 301, 397, 4004, 1541, 280, 33202, 26, 1763, 32, 8460, 22532, 293, 397, 436, 308, 45480, 7018, 499, 10652, 1212, 32]}
{"line_number": 184, "line_type": "original", "code": "  }", "entropy": 5.80859375, "is_bug_line": false, "sus_score": 0.6831992268562317, "per_token_entropy": [2.998046875, 8.6171875], "tokens": [225, 320]}
{"line_number": 184, "line_type": "generated", "code": "\n   * the fileoverview comment.\n   */\n  private JsDocInfoParser createJsDocInfoParser(Comment comment) {\n    JsDocInfoParser jsDocParser = new JsDocInfoParser(comment.getValue());\n    jsDocParser.parse();\n   ", "entropy": 0.251708984375, "is_bug_line": false, "sus_score": 0.6831992268562317, "per_token_entropy": [0.56103515625, 0.19580078125, 2.35546875, 1.302734375, 0.7490234375, 1.556640625, 0.76123046875, 0.06048583984375, 0.2352294921875, 0.0114898681640625, 0.052734375, 0.00998687744140625, 4.410743713378906e-06, 8.225440979003906e-06, 0.00010454654693603516, 0.0005950927734375, 8.690357208251953e-05, -0.0, 8.344650268554688e-07, 3.0040740966796875e-05, 0.0007467269897460938, 0.03326416015625, 0.0716552734375, 0.001995086669921875, 0.0013332366943359375, 0.031585693359375, 1.3154296875, 9.47713851928711e-05, 0.0018444061279296875, 0.05267333984375, 0.11419677734375, 0.01209259033203125, 0.122314453125, 0.03369140625, 0.1739501953125, 0.01410675048828125, 5.0067901611328125e-06, 2.682209014892578e-05, 0.0003085136413574219, 0.673828125, 0.72216796875, 0.51123046875, 0.259521484375, 0.289306640625, 0.0831298828125, 0.367431640625, 0.0017852783203125, 0.005748748779296875, 0.00060272216796875, 0.2197265625, 0.0831298828125, 0.042999267578125], "tokens": [664, 319, 322, 803, 11034, 5093, 32, 664, 569, 334, 945, 22301, 4216, 1120, 2825, 1487, 10535, 4216, 1120, 2825, 26, 6315, 5093, 27, 301, 284, 22301, 4216, 1120, 2825, 4060, 4216, 2825, 280, 537, 22301, 4216, 1120, 2825, 26, 3647, 32, 6682, 1035, 284, 4060, 4216, 2825, 32, 2208, 473, 284]}
{"line_number": 335, "line_type": "original", "code": "      return node;", "entropy": 6.57421875, "is_bug_line": false, "sus_score": 0.6769093871116638, "per_token_entropy": [3.0859375, 10.25, 6.01171875, 6.953125], "tokens": [647, 442, 1541, 45]}
{"line_number": 335, "line_type": "generated", "code": "\n      return false;\n    }\n\n    @Override\n    Node processBlock(Block blockNode) {\n      Node block = newNode(Token.BLOCK);\n      for (AstNode child : blockNode.getStatements()) {\n        Node n = transform(child);\n       ", "entropy": 0.22412109375, "is_bug_line": false, "sus_score": 0.6769093871116638, "per_token_entropy": [2.2578125, 1.296875, 0.20166015625, 0.0019779205322265625, 0.03656005859375, 0.0010366439819335938, 0.20703125, 0.2310791015625, 0.0004172325134277344, 0.003566741943359375, 0.016876220703125, 0.006378173828125, 0.76220703125, 0.0008082389831542969, 0.01006317138671875, 0.01373291015625, 0.44189453125, 0.0009698867797851562, 0.00439453125, 0.03271484375, 0.2237548828125, 0.94921875, 0.0188751220703125, 0.0284423828125, 0.0037517547607421875, 0.0223541259765625, 1.7881393432617188e-06, 0.0009670257568359375, 0.045562744140625, 0.1259765625, 0.367919921875, 0.0023345947265625, 0.208251953125, 0.000186920166015625, 0.318359375, 0.01407623291015625, 0.002532958984375, 0.00024020671844482422, 0.18505859375, 1.0400390625, 2.2649765014648438e-05, 0.0017824172973632812, 0.0018224716186523438, 0.010894775390625, 0.7802734375, 1.6748046875, 0.0112457275390625, 0.035797119140625, 0.008880615234375, 0.0005145072937011719, 0.002002716064453125, 0.04052734375], "tokens": [397, 442, 901, 45, 284, 320, 446, 477, 1788, 284, 4004, 2164, 2227, 26, 2227, 2163, 1212, 27, 301, 397, 4004, 2163, 280, 33202, 26, 1763, 32, 10322, 293, 397, 436, 308, 19511, 1212, 2838, 499, 2163, 1212, 32, 19702, 1728, 1157, 301, 291, 4004, 310, 280, 4522, 26, 2661, 293, 291]}
{"line_number": 466, "line_type": "original", "code": "      node.addChildToBack(transform(statementNode.getExpression()));", "entropy": 1.8232421875, "is_bug_line": false, "sus_score": 0.6766802668571472, "per_token_entropy": [4.8359375, 4.5703125, 0.0210723876953125, 0.09716796875, 0.001987457275390625, 0.53076171875, 0.0038700103759765625, 3.443359375, 0.426513671875, 8.953125, 0.845703125, 0.244873046875, 0.68701171875, 2.658203125, 0.0309295654296875], "tokens": [647, 1541, 32, 21545, 705, 2495, 26, 3792, 26, 9849, 1212, 32, 371, 3487, 5073]}
{"line_number": 466, "line_type": "generated", "code": "\n      } else {\n        node.addChildToFront(newName);\n      }\n\n      for (AstNode param : functionNode.getParameters()) {\n        node.addChildToBack(transform(param));\n      }\n\n      if (functionNode.isArrow()) {", "entropy": 0.26318359375, "is_bug_line": false, "sus_score": 0.6766802668571472, "per_token_entropy": [0.61181640625, 0.0159912109375, 0.351318359375, 0.01861572265625, 0.1446533203125, 0.6689453125, 0.002899169921875, 0.002681732177734375, 0.0002796649932861328, 0.80908203125, 0.0016469955444335938, 0.02264404296875, 0.0245819091796875, 0.01287078857421875, 0.2335205078125, 0.0003800392150878906, 1.3916015625, 1.7392578125, 0.0044403076171875, 0.2296142578125, 0.0017175674438476562, 0.86376953125, 0.335693359375, 0.00444793701171875, 6.461143493652344e-05, 9.34600830078125e-05, 0.31494140625, 0.00984954833984375, 0.0013933181762695312, 0.03045654296875, 0.190673828125, 0.00014603137969970703, 0.0007448196411132812, 0.0005602836608886719, 0.07342529296875, 0.0014972686767578125, 0.04473876953125, 0.038360595703125, 0.001163482666015625, 0.01275634765625, 0.010284423828125, 0.00016951560974121094, 0.78076171875, 1.5947265625, 0.1966552734375, 0.1517333984375, 0.0003018379211425781, 0.0006785392761230469, 0.1337890625, 1.3134765625, 1.275390625, 0.0093231201171875], "tokens": [397, 320, 813, 301, 291, 1541, 32, 21545, 705, 10112, 26, 890, 558, 293, 397, 320, 1687, 436, 308, 19511, 1212, 4356, 499, 667, 1212, 32, 44034, 1157, 301, 291, 1541, 32, 21545, 705, 2495, 26, 3792, 26, 753, 876, 397, 320, 1687, 415, 308, 1126, 1212, 32, 297, 12513, 1157, 301]}
{"line_number": 915, "line_type": "original", "code": "      case com.google.javascript.jscomp.mozilla.rhino.Token.LSH:", "entropy": 0.93896484375, "is_bug_line": false, "sus_score": 0.6732650399208069, "per_token_entropy": [6.375, 0.48681640625, 0.22705078125, 0.00013446807861328125, 0.0005817413330078125, 5.602836608886719e-06, 0.0002655982971191406, 1.1920928955078125e-06, 0.025604248046875, 4.887580871582031e-06, 0.0001138448715209961, 0.00054168701171875, 0.00025463104248046875, 0.01305389404296875, 1.71661376953125e-05, 0.00021350383758544922, 0.0003905296325683594, 0.0030231475830078125, 9.5625, 3.01953125, 0.004795074462890625], "tokens": [647, 1135, 767, 32, 2175, 32, 4259, 32, 754, 980, 32, 16415, 32, 17089, 6100, 32, 1763, 32, 62, 2514, 44]}
{"line_number": 915, "line_type": "generated", "code": "\n      case com.google.javascript.jscomp.mozilla.rhino.Token.TRUE:\n        return Token.TRUE;\n      case com.google.javascript.jscomp.mozilla.rhino.Token.FALSE:\n        return Token.FALSE;", "entropy": 0.05615234375, "is_bug_line": false, "sus_score": 0.6732650399208069, "per_token_entropy": [0.8583984375, 0.09698486328125, 0.032928466796875, 1.5139579772949219e-05, 0.00037598609924316406, 4.887580871582031e-06, 6.377696990966797e-05, 2.384185791015625e-07, 0.00244903564453125, 7.152557373046875e-07, 9.298324584960938e-06, 0.00010967254638671875, 3.24249267578125e-05, 0.003139495849609375, 1.6689300537109375e-06, 3.933906555175781e-06, 6.711483001708984e-05, 0.0007538795471191406, 1.650390625, 0.00020456314086914062, 0.0302276611328125, 0.0008721351623535156, 0.00022852420806884766, 5.7697296142578125e-05, 0.002044677734375, 0.0006041526794433594, 0.231201171875, 0.001232147216796875, 0.0016107559204101562, 3.0040740966796875e-05, 2.7418136596679688e-06, 4.172325134277344e-06, 4.172325134277344e-06, 2.3245811462402344e-05, 2.9802322387695312e-06, -0.0, 5.3763389587402344e-05, 6.794929504394531e-06, 2.5510787963867188e-05, 7.3909759521484375e-06, -0.0, 1.0013580322265625e-05, 1.3828277587890625e-05, 3.9458274841308594e-05, 0.00010454654693603516, 9.059906005859375e-06, 0.00402069091796875, 4.839897155761719e-05, 2.5510787963867188e-05, 0.0003066062927246094, 8.893013000488281e-05, 0.0002548694610595703], "tokens": [397, 1135, 767, 32, 2175, 32, 4259, 32, 754, 980, 32, 16415, 32, 17089, 6100, 32, 1763, 32, 6373, 44, 291, 442, 6512, 32, 6373, 45, 397, 1135, 767, 32, 2175, 32, 4259, 32, 754, 980, 32, 16415, 32, 17089, 6100, 32, 1763, 32, 7347, 44, 291, 442, 6512, 32, 7347, 45]}
{"line_number": 1194, "line_type": "original", "code": "    return new Node(type, child1).clonePropsFrom(templateNode);", "entropy": 0.8330078125, "is_bug_line": false, "sus_score": 0.6731195449829102, "per_token_entropy": [6.171875, 0.97216796875, 1.1123046875, 0.638671875, 0.01125335693359375, 0.443359375, 0.0301055908203125, 0.45166015625, 0.01470947265625, 4.296875, 0.0063934326171875, 0.0015506744384765625, 0.0002295970916748047, 0.0006666183471679688, 0.005126953125, 0.0007848739624023438, 0.005184173583984375], "tokens": [264, 442, 537, 4004, 26, 681, 30, 2838, 35, 547, 6358, 3913, 1792, 26, 2387, 1212, 293]}
{"line_number": 1194, "line_type": "generated", "code": "\n\n  // Creates a new node for the given token.\n  private Node newTokenNode(Token token) {\n    return new Node(tokenToType(token)).clonePropsFrom(templateNode);\n  }\n\n  // Creates a new node for the given token", "entropy": 0.41015625, "is_bug_line": false, "sus_score": 0.6731195449829102, "per_token_entropy": [0.75732421875, 0.8544921875, 3.181640625, 0.342041015625, 0.74853515625, 1.31640625, 1.7919921875, 1.2314453125, 0.7890625, 0.7265625, 0.77099609375, 0.3603515625, 0.236328125, 0.0303497314453125, 0.367919921875, 0.332275390625, 0.04901123046875, 0.004787445068359375, 0.79638671875, 0.035491943359375, 0.13525390625, 0.004497528076171875, 0.07061767578125, 0.53271484375, 0.252685546875, 0.427978515625, 0.01190185546875, 0.47900390625, 1.142578125, 0.1790771484375, 0.049163818359375, 0.0014209747314453125, 0.53173828125, 0.031585693359375, 0.0026912689208984375, 3.421306610107422e-05, 9.09566879272461e-05, 0.01297760009765625, 0.0184478759765625, 0.002544403076171875, 0.00452423095703125, 0.0003333091735839844, 0.2364501953125, 0.3330078125, 0.72705078125, 0.076416015625, 0.1583251953125, 0.455078125, 0.1949462890625, 0.1761474609375, 0.04193115234375, 0.31591796875], "tokens": [719, 434, 9301, 312, 537, 1541, 436, 322, 2702, 2404, 32, 334, 945, 4004, 537, 1763, 1212, 26, 1763, 2404, 27, 301, 284, 442, 537, 4004, 26, 1956, 705, 620, 26, 1956, 3427, 6358, 3913, 1792, 26, 2387, 1212, 293, 334, 320, 719, 434, 9301, 312, 537, 1541, 436, 322, 2702, 2404]}
{"line_number": 1198, "line_type": "original", "code": "    return new Node(type, child1, child2).clonePropsFrom(templateNode);", "entropy": 0.6884765625, "is_bug_line": false, "sus_score": 0.6715614795684814, "per_token_entropy": [6.07421875, 0.9111328125, 1.009765625, 0.462890625, 0.007526397705078125, 0.2291259765625, 0.0166168212890625, 0.261962890625, 0.004730224609375, 0.00644683837890625, 0.0149688720703125, 0.0014295578002929688, 4.7265625, 0.002590179443359375, 0.001422882080078125, 0.0003979206085205078, 0.0019741058349609375, 0.0281982421875, 0.0005102157592773438, 0.0029773712158203125], "tokens": [264, 442, 537, 4004, 26, 681, 30, 2838, 35, 30, 2838, 36, 547, 6358, 3913, 1792, 26, 2387, 1212, 293]}
{"line_number": 1198, "line_type": "generated", "code": "\n\n  // Creates a new node that is a shallow copy of the given node.\n  private Node copyNode(Node n) {\n    return n.cloneNode();\n  }\n\n  // Creates a new node that is a shallow copy of the given node and\n ", "entropy": 0.490966796875, "is_bug_line": false, "sus_score": 0.6715614795684814, "per_token_entropy": [0.67236328125, 0.95654296875, 3.1171875, 0.333740234375, 0.71435546875, 1.353515625, 2.0, 1.0341796875, 0.252197265625, 1.8125, 0.235107421875, 0.0197906494140625, 0.73291015625, 0.677734375, 0.149169921875, 0.308837890625, 0.211181640625, 0.3232421875, 0.1473388671875, 0.7900390625, 0.056304931640625, 0.007720947265625, 0.01116180419921875, 0.5732421875, 0.02685546875, 0.005352020263671875, 0.02325439453125, 1.0361328125, 0.2266845703125, 0.0628662109375, 0.03436279296875, 1.2939453125, 0.2493896484375, 0.0168914794921875, 0.0004944801330566406, 0.17041015625, 0.380126953125, 1.0458984375, 0.05401611328125, 0.1346435546875, 0.385498046875, 0.2408447265625, 0.06988525390625, 0.057159423828125, 0.45849609375, 0.01751708984375, 0.00769805908203125, 0.042724609375, 0.050628662109375, 0.1650390625, 1.65234375, 1.138671875], "tokens": [719, 434, 9301, 312, 537, 1541, 688, 438, 312, 25433, 1933, 432, 322, 2702, 1541, 32, 334, 945, 4004, 1933, 1212, 26, 1212, 310, 27, 301, 284, 442, 310, 32, 6358, 1212, 473, 334, 320, 719, 434, 9301, 312, 537, 1541, 688, 438, 312, 25433, 1933, 432, 322, 2702, 1541, 461, 334]}
{"line_number": 818, "line_type": "original", "code": "      Node node = transform(initializerNode.getTarget());", "entropy": 2.578125, "is_bug_line": false, "sus_score": 0.6691011786460876, "per_token_entropy": [5.0078125, 4.0859375, 7.4921875, 0.159423828125, 1.8974609375, 0.11334228515625, 5.5, 0.1844482421875, 0.039031982421875, 3.845703125, 0.035247802734375], "tokens": [647, 4004, 1541, 280, 4522, 26, 19321, 1212, 32, 26054, 1035]}
{"line_number": 818, "line_type": "generated", "code": "\n      errorReporter.error(\n          \"setters are not supported in Internet Explorer\",\n          sourceName,\n          node.getLineno(), \"\", 0);\n    }\n\n    void reportTypedVar(AstNode node) {\n      errorReporter.error(\n         ", "entropy": 0.146240234375, "is_bug_line": false, "sus_score": 0.6691011786460876, "per_token_entropy": [0.1461181640625, 0.2783203125, 0.000194549560546875, 0.00026702880859375, 0.007465362548828125, 0.01525115966796875, 0.0140533447265625, 0.0021610260009765625, 0.0645751953125, 1.4066696166992188e-05, 0.00312042236328125, 0.0007443428039550781, 0.00748443603515625, 0.00506591796875, 0.0085296630859375, 5.4717063903808594e-05, 0.005779266357421875, 0.0128326416015625, 0.0022487640380859375, 0.00014019012451171875, 0.00018703937530517578, 0.01092529296875, 0.003314971923828125, 0.0004069805145263672, 0.0018606185913085938, 0.0006690025329589844, 0.0001481771469116211, 0.0025119781494140625, 0.00583648681640625, 0.00151824951171875, 0.0004734992980957031, 0.0004057884216308594, 0.08587646484375, 0.00112152099609375, 0.350341796875, 0.4130859375, 0.054107666015625, 2.458984375, 2.796875, 0.2216796875, 0.1031494140625, 0.0003910064697265625, 0.07598876953125, 0.05767822265625, 0.002254486083984375, 0.29931640625, 0.047943115234375, 3.1113624572753906e-05, 6.198883056640625e-05, 0.00763702392578125, 0.0125274658203125, 0.0086212158203125], "tokens": [397, 1048, 20624, 32, 731, 26, 616, 313, 470, 5725, 884, 646, 5420, 328, 13939, 18234, 392, 616, 1914, 558, 30, 616, 1541, 32, 371, 7366, 7888, 1026, 4320, 225, 34, 293, 284, 320, 446, 763, 3639, 11851, 1881, 26, 19511, 1212, 1541, 27, 301, 397, 1048, 20624, 32, 731, 26, 616]}
{"line_number": 501, "line_type": "original", "code": "      return node;", "entropy": 1.677734375, "is_bug_line": false, "sus_score": 0.6624253988265991, "per_token_entropy": [5.55078125, 1.09765625, 0.052886962890625, 0.00925445556640625], "tokens": [647, 442, 1541, 45]}
{"line_number": 501, "line_type": "generated", "code": "\n      return node;\n    }\n\n    @Override\n    Node processIf(If ifNode) {\n      Node node = newNode(Token.IF, transform(ifNode.getCondition()));\n      node.addChildToBack(transformBlock(ifNode.getThen", "entropy": 0.12115478515625, "is_bug_line": false, "sus_score": 0.6624253988265991, "per_token_entropy": [0.434326171875, 0.67138671875, 0.0227813720703125, 0.004638671875, 0.055450439453125, 0.0006580352783203125, 0.21826171875, 0.047088623046875, 0.0003864765167236328, 0.010406494140625, 0.0112762451171875, 0.0023345947265625, 0.63671875, 0.1470947265625, 0.0020618438720703125, 0.06036376953125, 0.01380157470703125, 0.00307464599609375, 0.0007085800170898438, 0.0142059326171875, 0.53515625, 0.185302734375, 0.0042572021484375, 0.027099609375, 0.0037708282470703125, 0.525390625, 3.2901763916015625e-05, 0.117919921875, 0.60595703125, 0.395751953125, 0.005184173583984375, 0.0012912750244140625, 7.152557373046875e-06, 8.0108642578125e-05, 0.01325225830078125, 0.006908416748046875, 0.06768798828125, 0.09271240234375, 0.1739501953125, 0.0004260540008544922, 0.0026264190673828125, 0.0002741813659667969, 0.005504608154296875, 0.00038814544677734375, 0.01080322265625, 1.1298828125, 0.002086639404296875, 0.000667572021484375, 2.002716064453125e-05, 5.829334259033203e-05, 0.0247802734375, 0.0039005279541015625], "tokens": [397, 442, 1541, 45, 284, 320, 446, 477, 1788, 284, 4004, 2164, 2797, 26, 2797, 415, 1212, 27, 301, 397, 4004, 1541, 280, 33202, 26, 1763, 32, 2952, 30, 4522, 26, 325, 1212, 32, 371, 5356, 5073, 397, 1541, 32, 21545, 705, 2495, 26, 3792, 2227, 26, 325, 1212, 32, 371, 10684]}
