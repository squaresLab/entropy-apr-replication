{"line_number": 2917, "line_type": "original", "code": "        if (isAssignmentOp(value)", "entropy": 3.0078125, "is_bug_line": true, "sus_score": 0.6182720065116882, "per_token_entropy": [3.244140625, 0.5380859375, 0.110107421875, 0.84765625, 9.9453125, 1.7890625, 0.0269317626953125, 9.859375, 0.7021484375], "tokens": [351, 415, 308, 297, 12589, 3397, 26, 853, 27]}
{"line_number": 2917, "line_type": "generated", "code": "\n      if (isName(propNode, \"toString\")) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private static boolean isCallOrNew(Node call) {\n    return call.getType() == Token.CALL || call", "entropy": 0.248291015625, "is_bug_line": true, "sus_score": 0.6182720065116882, "per_token_entropy": [0.83837890625, 0.58154296875, 0.09234619140625, 0.86962890625, 0.52685546875, 0.03759765625, 0.03070068359375, 0.00039768218994140625, 1.5947265625, 0.020965576171875, 0.0255126953125, 0.54638671875, 0.056793212890625, 0.46435546875, 0.3994140625, 0.056549072265625, 0.0020847320556640625, 0.0263519287109375, 0.0013065338134765625, 0.11468505859375, 0.00278472900390625, 0.128662109375, 0.007320404052734375, 0.0023937225341796875, 0.0007023811340332031, 0.00989532470703125, 0.0009541511535644531, 0.109619140625, 0.791015625, 0.00954437255859375, 0.039276123046875, 0.6982421875, 1.7861328125, 0.05401611328125, 0.0032062530517578125, 0.1212158203125, 0.0007023811340332031, 0.7783203125, 0.1883544921875, 0.00159454345703125, 0.131103515625, 0.4423828125, 0.8046875, 0.07635498046875, 0.1771240234375, 0.001239776611328125, 0.0032291412353515625, 0.002407073974609375, 1.4066696166992188e-05, 0.044647216796875, 0.1484375, 0.06494140625], "tokens": [397, 415, 308, 297, 558, 26, 4641, 1212, 30, 313, 3108, 2131, 301, 291, 442, 861, 45, 397, 320, 284, 320, 284, 442, 901, 45, 334, 320, 719, 945, 907, 1905, 438, 1853, 1527, 1812, 26, 1212, 1476, 27, 301, 284, 442, 1476, 32, 10272, 346, 610, 6512, 32, 5038, 1276, 1476]}
{"line_number": 1015, "line_type": "original", "code": "    Set<String> emptySet = Collections.emptySet();", "entropy": 1.837890625, "is_bug_line": false, "sus_score": 0.6159824728965759, "per_token_entropy": [3.2578125, 12.4765625, 0.1494140625, 2.19921875, 0.00321197509765625, 5.1484375, 0.01218414306640625, 0.0304718017578125, 0.51806640625, 0.06500244140625, 0.0205078125, 0.00034236907958984375, 0.0078582763671875], "tokens": [264, 1756, 46, 652, 48, 3502, 885, 280, 15496, 32, 2951, 885, 473]}
{"line_number": 1015, "line_type": "generated", "code": "\n   *  5 bitwise-or |\n   *  6 bitwise-xor ^\n   *  7 bitwise-and &\n   *  8 equality ==!= ===!==\n   *  9 relational <= >= < >\n   * 10 bit", "entropy": 0.11163330078125, "is_bug_line": false, "sus_score": 0.6159824728965759, "per_token_entropy": [0.4990234375, 0.1973876953125, 0.057891845703125, 0.10833740234375, 0.14990234375, 0.10205078125, 0.0020046234130859375, 0.0008325576782226562, 0.05889892578125, 0.00858306884765625, 0.0001583099365234375, 0.0013017654418945312, 0.0012559890747070312, 0.0011081695556640625, 0.002414703369140625, 0.00025844573974609375, 0.024017333984375, 0.0056915283203125, 0.007129669189453125, 0.00018537044525146484, 0.0026569366455078125, 0.001941680908203125, 0.0007085800170898438, 0.0016660690307617188, 0.00019443035125732422, 0.0013608932495117188, 0.001277923583984375, 0.0155792236328125, 0.00045943260192871094, 0.005596160888671875, 0.0029144287109375, 0.0227813720703125, 0.09307861328125, 0.0279693603515625, 0.69921875, 0.0032253265380859375, 0.00617218017578125, 0.0002529621124267578, 0.004878997802734375, 0.0016469955444335938, 1.2734375, 6.318092346191406e-06, 1.4365234375, 0.0262298583984375, 0.14453125, 0.00042247772216796875, 0.023162841796875, 0.00036072731018066406, 0.047576904296875, 0.0009355545043945312, 0.00194549560546875, 0.72607421875], "tokens": [664, 319, 261, 39, 3493, 3767, 31, 271, 523, 664, 319, 261, 40, 3493, 3767, 31, 17316, 5304, 664, 319, 261, 41, 3493, 3767, 31, 363, 549, 664, 319, 261, 42, 28599, 610, 863, 1720, 3326, 664, 319, 261, 43, 1875, 5144, 2511, 2377, 333, 848, 664, 319, 225, 35, 34, 3493]}
{"line_number": 2884, "line_type": "original", "code": "        if (value.getBooleanProp(Node.INCRDECR_PROP)) {", "entropy": 1.26953125, "is_bug_line": false, "sus_score": 0.5480934977531433, "per_token_entropy": [6.8359375, 2.005859375, 0.1640625, 2.986328125, 0.2054443359375, 4.42578125, 0.0024242401123046875, 0.004306793212890625, 0.0164337158203125, 0.00725555419921875, 5.4765625, 0.422607421875, 0.0008740425109863281, 0.0008311271667480469, 0.0013246536254882812, 0.0635986328125, 0.1693115234375, 0.061309814453125], "tokens": [351, 415, 308, 853, 32, 28186, 6567, 26, 1212, 32, 521, 3754, 852, 3754, 81, 15262, 490, 301]}
{"line_number": 2884, "line_type": "generated", "code": "\n  static Node getSibling(Node n, int index) {\n    Node result = n.getNext();\n    while (index-- > 0) {\n      result = result.getNext();\n      if (result == null) {\n        return null;\n      }", "entropy": 0.2509765625, "is_bug_line": false, "sus_score": 0.5480934977531433, "per_token_entropy": [0.38037109375, 0.415771484375, 0.035980224609375, 0.5234375, 1.380859375, 0.07623291015625, 0.0204010009765625, 1.486328125, 0.003997802734375, 0.00887298583984375, 0.884765625, 0.025115966796875, 0.00719451904296875, 0.0887451171875, 1.021484375, 1.7587890625, 0.0283660888671875, 0.34326171875, 0.50830078125, 0.0303192138671875, 0.036346435546875, 0.058990478515625, 0.89892578125, 0.094482421875, 0.72900390625, 0.42138671875, 0.04583740234375, 0.0017490386962890625, 0.036407470703125, 0.50927734375, 0.002376556396484375, 0.0270538330078125, 0.69140625, 0.0009622573852539062, 0.002780914306640625, 0.028076171875, 8.213520050048828e-05, 0.0017404556274414062, 0.251953125, 0.006938934326171875, 0.006626129150390625, 0.002277374267578125, 0.003170013427734375, 0.014404296875, 0.003429412841796875, 0.0049285888671875, 0.019561767578125, 0.09814453125, 0.01812744140625, 0.0005030632019042969, 0.004764556884765625, 0.00015056133270263672], "tokens": [334, 907, 4004, 622, 20862, 26, 1212, 310, 30, 629, 1650, 27, 301, 284, 4004, 1056, 280, 310, 32, 23017, 473, 284, 2218, 308, 1055, 287, 848, 225, 34, 27, 301, 397, 1056, 280, 1056, 32, 23017, 473, 397, 415, 308, 1267, 610, 744, 27, 301, 291, 442, 744, 45, 397, 320]}
{"line_number": 2885, "line_type": "original", "code": "          return evaluatesToLocalValue(value.getFirstChild(), locals);", "entropy": 2.22265625, "is_bug_line": false, "sus_score": 0.5480934977531433, "per_token_entropy": [8.453125, 0.77001953125, 16.234375, 0.034454345703125, 0.0028839111328125, 0.0189208984375, 1.5390625, 0.341552734375, 1.0625, 0.0016469955444335938, 0.184326171875, 0.011871337890625, 0.237548828125], "tokens": [2033, 442, 43992, 40608, 882, 26, 853, 32, 25657, 2931, 1026, 28363, 293]}
{"line_number": 2885, "line_type": "generated", "code": "\n  }\n\n  /**\n   * @return Whether the node is known to be a value that is not referenced\n   * elsewhere.\n   */\n  static boolean isImmutableValue(Node value) {\n    if (value.getType() == Token.NAME) {\n     ", "entropy": 0.304931640625, "is_bug_line": false, "sus_score": 0.5480934977531433, "per_token_entropy": [0.8271484375, 0.00775909423828125, 0.0928955078125, 0.31884765625, 0.04345703125, 0.0010766983032226562, 1.5341796875, 0.154296875, 0.431640625, 0.509765625, 1.03125, 0.39697265625, 1.115234375, 0.0189208984375, 0.2200927734375, 0.50830078125, 0.6025390625, 0.06591796875, 0.1893310546875, 0.5146484375, 0.2529296875, 0.026611328125, 0.0007228851318359375, 0.716796875, 0.11761474609375, 0.032257080078125, 0.0209197998046875, 0.00927734375, 0.1868896484375, 0.009246826171875, 0.182373046875, 0.2099609375, 0.00981903076171875, 0.00286102294921875, 0.0013246536254882812, 0.233154296875, 0.0024394989013671875, 0.0008697509765625, 0.175537109375, 1.724609375, 0.0712890625, 0.5107421875, 0.4677734375, 0.517578125, 0.0019550323486328125, 0.08197021484375, 0.00017380714416503906, 1.5020370483398438e-05, 1.4228515625, 0.2430419921875, 0.002712249755859375, 0.028228759765625], "tokens": [334, 320, 719, 1022, 664, 319, 477, 601, 14071, 322, 1541, 438, 8967, 372, 526, 312, 786, 688, 438, 646, 15167, 664, 319, 33289, 32, 664, 569, 334, 907, 1905, 438, 15027, 882, 26, 1212, 786, 27, 301, 284, 415, 308, 853, 32, 10272, 346, 610, 6512, 32, 2474, 27, 301, 397]}
{"line_number": 2923, "line_type": "original", "code": "        throw new IllegalStateException(", "entropy": 2.759765625, "is_bug_line": false, "sus_score": 0.5480934977531433, "per_token_entropy": [8.6484375, 3.75, 0.0701904296875, 0.5546875, 0.7705078125], "tokens": [351, 1422, 537, 21665, 26]}
{"line_number": 2923, "line_type": "generated", "code": "\n  /**\n   * Given a node, this checks if the node is a local value.\n   * A local value is a value that is not affected by changes\n   * in the global scope.\n   * @param value The node to check.\n   * @", "entropy": 0.76513671875, "is_bug_line": false, "sus_score": 0.5480934977531433, "per_token_entropy": [1.2578125, 0.8251953125, 0.071533203125, 0.0005488395690917969, 1.294921875, 1.0263671875, 1.96484375, 0.489501953125, 0.580078125, 2.056640625, 0.348388671875, 1.0517578125, 0.357666015625, 0.433837890625, 0.69677734375, 1.96484375, 1.140625, 0.472412109375, 0.0982666015625, 0.358154296875, 1.2373046875, 0.62060546875, 0.0309906005859375, 0.288330078125, 0.7138671875, 0.330078125, 0.329345703125, 0.98583984375, 1.0625, 2.39453125, 0.0767822265625, 2.65234375, 1.2744140625, 0.0014028549194335938, 0.73095703125, 1.4443359375, 2.310546875, 0.08056640625, 0.252685546875, 0.293212890625, 0.64794921875, 2.15234375, 0.319091796875, 0.77734375, 0.7724609375, 0.33740234375, 0.2318115234375, 0.341552734375, 0.330078125, 0.00893402099609375, 0.23193359375, 0.0185394287109375], "tokens": [334, 1022, 664, 319, 15273, 312, 1541, 30, 458, 9371, 415, 322, 1541, 438, 312, 2196, 786, 32, 664, 319, 399, 2196, 786, 438, 312, 786, 688, 438, 646, 18802, 810, 3404, 664, 319, 328, 322, 3649, 4576, 32, 664, 319, 477, 753, 786, 886, 1541, 372, 1505, 32, 664, 319, 477]}
{"line_number": 2874, "line_type": "original", "code": "        return evaluatesToLocalValue(value.getLastChild(), locals);", "entropy": 1.802734375, "is_bug_line": false, "sus_score": 0.5473313927650452, "per_token_entropy": [2.419921875, 8.1328125, 9.28125, 0.0178070068359375, 0.00545501708984375, 0.029632568359375, 0.08514404296875, 0.1458740234375, 2.939453125, 0.000728607177734375, 0.136962890625, 0.01349639892578125, 0.2235107421875], "tokens": [351, 442, 43992, 40608, 882, 26, 853, 32, 20197, 2931, 1026, 28363, 293]}
{"line_number": 2874, "line_type": "generated", "code": "\n            \"Unexpected node type: \" + value.getType());\n    }\n  }\n\n  private static boolean isImmutableValue(Node value) {\n    return NodeUtil.isImmutableValue(value);\n  }\n\n  /**\n   * @return Whether the node is known", "entropy": 0.347900390625, "is_bug_line": false, "sus_score": 0.5473313927650452, "per_token_entropy": [1.529296875, 0.349609375, 0.4814453125, 0.57958984375, 0.34130859375, 0.755859375, 0.028228759765625, 0.079345703125, 0.10333251953125, 0.1402587890625, 0.123779296875, 0.5693359375, 0.06787109375, 0.0019369125366210938, 0.03277587890625, 0.0012559890747070312, 0.2147216796875, 1.783203125, 0.05718994140625, 0.083984375, 0.5947265625, 1.623046875, 0.01061248779296875, 0.004016876220703125, 0.0020656585693359375, 0.701171875, 0.00293731689453125, 0.0021839141845703125, 0.024078369140625, 0.64111328125, 0.998046875, 0.00746917724609375, 0.00015914440155029297, 0.0258636474609375, 0.025665283203125, 0.00421142578125, 0.0022296905517578125, 0.00688934326171875, 0.6787109375, 0.0219879150390625, 0.0008869171142578125, 0.08758544921875, 0.8232421875, 0.074951171875, 0.0004892349243164062, 0.6162109375, 0.22900390625, 0.1544189453125, 0.31005859375, 0.8828125, 0.35791015625, 1.8486328125], "tokens": [324, 313, 10203, 1541, 827, 44, 313, 474, 786, 32, 10272, 1035, 284, 320, 334, 320, 719, 945, 907, 1905, 438, 15027, 882, 26, 1212, 786, 27, 301, 284, 442, 4004, 1733, 32, 297, 15027, 882, 26, 853, 293, 334, 320, 719, 1022, 664, 319, 477, 601, 14071, 322, 1541, 438, 8967]}
{"line_number": 2967, "line_type": "original", "code": "      return isString(propNode) && \"toString\".equals(propNode.getString());", "entropy": 0.99755859375, "is_bug_line": false, "sus_score": 0.5470432639122009, "per_token_entropy": [7.14453125, 0.88427734375, 3.298828125, 1.6923828125, 0.4091796875, 0.355712890625, 0.01377105712890625, 0.853515625, 1.431640625, 2.466796875, 0.010589599609375, 0.054595947265625, 0.0015611648559570312, 0.00311279296875, 0.2191162109375, 0.0019054412841796875, 0.0181121826171875, 0.0034332275390625, 0.08721923828125], "tokens": [647, 442, 438, 652, 26, 4641, 1212, 27, 962, 313, 3108, 2296, 3574, 26, 4641, 1212, 32, 7069, 1035]}
{"line_number": 2967, "line_type": "generated", "code": "\n\n  /**\n   * Given a new node, this returns the function\n   * that will be called to initialize the object.\n   */\n  static Node getConstructorForNew(Node newNode) {\n    Preconditions.checkState(isNew(newNode));\n    return", "entropy": 0.481689453125, "is_bug_line": false, "sus_score": 0.5470432639122009, "per_token_entropy": [0.80859375, 0.6123046875, 0.057830810546875, 0.0004267692565917969, 1.2685546875, 1.0009765625, 2.8984375, 0.7998046875, 0.1878662109375, 0.60400390625, 0.445556640625, 1.4541015625, 1.2216796875, 1.4326171875, 0.0028858184814453125, 0.79052734375, 1.5361328125, 0.058563232421875, 0.489990234375, 1.251953125, 0.74853515625, 0.2626953125, 0.7626953125, 0.2030029296875, 0.0102081298828125, 0.372314453125, 0.01263427734375, 0.732421875, 0.004108428955078125, 0.08795166015625, 1.333984375, 0.25, 0.0255126953125, 0.259521484375, 0.0017852783203125, 1.1396484375, 0.7705078125, 0.00420379638671875, 0.0010128021240234375, 0.037078857421875, 0.2159423828125, 4.565715789794922e-05, 0.00026488304138183594, 0.050262451171875, 0.00063323974609375, 0.0305633544921875, 0.004222869873046875, 0.0001112222671508789, 1.5974044799804688e-05, 0.02227783203125, 0.12939453125, 0.6572265625], "tokens": [719, 1022, 664, 319, 15273, 312, 537, 1541, 30, 458, 3217, 322, 667, 664, 319, 688, 1098, 526, 3823, 372, 7379, 322, 1300, 32, 664, 569, 334, 907, 4004, 622, 7932, 1562, 1812, 26, 1212, 537, 1212, 27, 301, 284, 40596, 32, 1553, 1078, 26, 42688, 26, 890, 1212, 876, 284, 442]}
{"line_number": 2870, "line_type": "original", "code": "        return NodeUtil.isImmutableValue(value.getLastChild())", "entropy": 1.7646484375, "is_bug_line": false, "sus_score": 0.5467286109924316, "per_token_entropy": [6.6640625, 0.7109375, 8.84375, 0.0010194778442382812, 0.005489349365234375, 0.402587890625, 0.759765625, 0.04412841796875, 0.006805419921875, 0.0689697265625, 2.8125, 2.333984375, 0.0006256103515625, 2.052734375], "tokens": [351, 442, 4004, 1733, 32, 297, 15027, 882, 26, 853, 32, 20197, 2931, 1157]}
{"line_number": 2870, "line_type": "generated", "code": "\n          return true;\n        }\n        return false;\n    }\n  }\n\n  /**\n   * @return Whether the node is known to be a value that is not referenced\n   * elsewhere.\n   */\n  static boolean isImmutableValue(Node value) {\n    switch", "entropy": 0.232666015625, "is_bug_line": false, "sus_score": 0.5467286109924316, "per_token_entropy": [0.451171875, 0.1162109375, 0.28271484375, 0.003108978271484375, 0.044708251953125, 0.00272369384765625, 0.6787109375, 0.71240234375, 0.1456298828125, 0.0005269050598144531, 0.02166748046875, 0.0006427764892578125, 0.0134735107421875, 0.001617431640625, 0.2423095703125, 0.291748046875, 0.052398681640625, 0.0004341602325439453, 0.401611328125, 0.24658203125, 0.142822265625, 0.310791015625, 0.7255859375, 0.381103515625, 0.74072265625, 0.0167083740234375, 0.1539306640625, 0.66796875, 0.6904296875, 0.0760498046875, 0.2861328125, 0.6181640625, 0.50732421875, 0.0428466796875, 0.0006127357482910156, 0.87744140625, 0.202392578125, 0.028350830078125, 0.0125274658203125, 0.00913238525390625, 0.07598876953125, 0.0085601806640625, 0.26904296875, 0.289794921875, 0.012298583984375, 0.001018524169921875, 0.0007495880126953125, 0.4091796875, 0.0015020370483398438, 0.0004832744598388672, 0.039886474609375, 0.794921875], "tokens": [616, 442, 861, 45, 291, 320, 291, 442, 901, 45, 284, 320, 334, 320, 719, 1022, 664, 319, 477, 601, 14071, 322, 1541, 438, 8967, 372, 526, 312, 786, 688, 438, 646, 15167, 664, 319, 33289, 32, 664, 569, 334, 907, 1905, 438, 15027, 882, 26, 1212, 786, 27, 301, 284, 3578]}
{"line_number": 2880, "line_type": "original", "code": "        return evaluatesToLocalValue(value.getFirstChild().getNext(), locals)", "entropy": 1.859375, "is_bug_line": false, "sus_score": 0.5460609793663025, "per_token_entropy": [7.421875, 1.0830078125, 6.85546875, 0.0271148681640625, 0.00884246826171875, 0.0178070068359375, 0.30859375, 0.2181396484375, 1.0546875, 0.002979278564453125, 7.6328125, 1.810546875, 0.320556640625, 0.03173828125, 1.0888671875], "tokens": [351, 442, 43992, 40608, 882, 26, 853, 32, 25657, 2931, 922, 23017, 1026, 28363, 27]}
{"line_number": 2880, "line_type": "generated", "code": "\n   * @return Whether the node is known to be a value that is not a reference\n   *     outside the expression scope.\n   */\n  static boolean isImmutableValue(Node value) {\n    switch (value.getType()) {\n      case Token.STRING", "entropy": 0.23486328125, "is_bug_line": false, "sus_score": 0.5460609793663025, "per_token_entropy": [0.71337890625, 0.48876953125, 0.47607421875, 0.33544921875, 0.2176513671875, 0.39501953125, 0.74853515625, 0.351806640625, 0.74658203125, 0.01580810546875, 0.2291259765625, 0.310791015625, 0.4912109375, 0.059417724609375, 0.135498046875, 0.3056640625, 0.9296875, 0.0826416015625, 0.04486083984375, 0.004703521728515625, 0.057769775390625, 0.038543701171875, 0.0261383056640625, 0.1419677734375, 0.00757598876953125, 0.1640625, 0.1356201171875, 0.033660888671875, 0.049407958984375, 0.253173828125, 0.013519287109375, 0.8828125, 0.763671875, 0.01194000244140625, 0.0030155181884765625, 0.0023441314697265625, 0.494384765625, 0.0024623870849609375, 0.006389617919921875, 0.08392333984375, 0.75732421875, 0.013092041015625, 0.002582550048828125, 3.6716461181640625e-05, 0.0019702911376953125, 4.00543212890625e-05, 0.0025234222412109375, 0.036041259765625, 0.029266357421875, 0.0005831718444824219, 9.894371032714844e-06, 1.1123046875], "tokens": [664, 319, 477, 601, 14071, 322, 1541, 438, 8967, 372, 526, 312, 786, 688, 438, 646, 312, 4121, 664, 319, 262, 11127, 322, 6101, 4576, 32, 664, 569, 334, 907, 1905, 438, 15027, 882, 26, 1212, 786, 27, 301, 284, 3578, 308, 853, 32, 10272, 1157, 301, 397, 1135, 6512, 32, 5203]}
{"line_number": 2877, "line_type": "original", "code": "        return evaluatesToLocalValue(value.getFirstChild(), locals)", "entropy": 1.1806640625, "is_bug_line": false, "sus_score": 0.5457920432090759, "per_token_entropy": [5.4375, 1.0771484375, 5.5234375, 0.004375457763671875, 0.0038661956787109375, 0.01241302490234375, 0.185546875, 0.10638427734375, 1.171875, 0.0002543926239013672, 0.0170745849609375, 0.01488494873046875, 1.78515625], "tokens": [351, 442, 43992, 40608, 882, 26, 853, 32, 25657, 2931, 1026, 28363, 27]}
{"line_number": 2877, "line_type": "generated", "code": "\n  }\n\n  /**\n   * @return Whether the node is known to be a value that is not referenced\n   *     outside the expression scope.\n   */\n  static boolean isImmutableValue(Node n) {\n    return n.getType() == Token.STRING", "entropy": 0.29345703125, "is_bug_line": false, "sus_score": 0.5457920432090759, "per_token_entropy": [0.51318359375, 0.06353759765625, 0.1865234375, 0.46044921875, 0.07293701171875, 0.0006365776062011719, 0.623046875, 0.2017822265625, 0.1624755859375, 0.352294921875, 0.81982421875, 0.33935546875, 0.66259765625, 0.013824462890625, 0.1689453125, 0.4111328125, 0.55712890625, 0.0704345703125, 0.1820068359375, 0.428955078125, 0.40283203125, 0.04296875, 0.0008220672607421875, 0.76318359375, 1.1103515625, 0.1368408203125, 0.380859375, 0.0188446044921875, 0.27587890625, 0.046112060546875, 0.05169677734375, 0.0171661376953125, 0.141845703125, 0.00927734375, 0.3984375, 0.372314453125, 0.0161895751953125, 0.0021724700927734375, 0.00128173828125, 1.138671875, 0.0008349418640136719, 0.0005035400390625, 0.01416015625, 1.2880859375, 1.0908203125, 0.044464111328125, 0.5849609375, 0.00765228271484375, 0.01306915283203125, 0.00017547607421875, 8.344650268554688e-06, 0.60205078125], "tokens": [334, 320, 719, 1022, 664, 319, 477, 601, 14071, 322, 1541, 438, 8967, 372, 526, 312, 786, 688, 438, 646, 15167, 664, 319, 262, 11127, 322, 6101, 4576, 32, 664, 569, 334, 907, 1905, 438, 15027, 882, 26, 1212, 310, 27, 301, 284, 442, 310, 32, 10272, 346, 610, 6512, 32, 5203]}
{"line_number": 2890, "line_type": "original", "code": "        return locals.apply(value);", "entropy": 2.396484375, "is_bug_line": false, "sus_score": 0.5441752076148987, "per_token_entropy": [5.66796875, 0.2313232421875, 12.921875, 0.0560302734375, 0.01511383056640625, 0.0023403167724609375, 0.257568359375, 0.023345947265625], "tokens": [351, 442, 28363, 32, 4699, 26, 853, 293]}
{"line_number": 2890, "line_type": "generated", "code": "\n    return sibling;\n  }\n\n  /**\n   * Returns the node for the last parameter in a function call.\n   */\n  static Node getFunctionCallParameter(Node call) {\n    Preconditions.checkArgument(call.getType() == Token.CALL);\n   ", "entropy": 0.53125, "is_bug_line": false, "sus_score": 0.5441752076148987, "per_token_entropy": [0.27880859375, 0.07659912109375, 0.03021240234375, 0.0108795166015625, 0.0062255859375, 0.0012159347534179688, 0.177978515625, 0.278564453125, 0.056365966796875, 0.0006918907165527344, 1.689453125, 1.1806640625, 3.171875, 2.7890625, 0.302001953125, 3.072265625, 1.9912109375, 1.5263671875, 0.52197265625, 0.86669921875, 0.6748046875, 0.70556640625, 0.0828857421875, 0.6181640625, 0.007007598876953125, 0.60693359375, 0.00438690185546875, 0.58837890625, 1.38671875, 0.59375, 1.1650390625, 0.047271728515625, 0.01428985595703125, 0.453369140625, 0.249267578125, 0.0005068778991699219, 0.09344482421875, 1.01953125, 0.00015914440155029297, 0.0016927719116210938, 0.2498779296875, 0.00266265869140625, 0.359375, 0.00980377197265625, 0.298828125, 0.001766204833984375, 0.0008130073547363281, 0.0007190704345703125, 6.9141387939453125e-06, 0.0002014636993408203, 0.126220703125, 0.2337646484375], "tokens": [284, 442, 40560, 45, 334, 320, 719, 1022, 664, 319, 3759, 322, 1541, 436, 322, 2401, 3395, 328, 312, 667, 1476, 32, 664, 569, 334, 907, 4004, 622, 2447, 1853, 3012, 26, 1212, 1476, 27, 301, 284, 40596, 32, 1553, 3484, 26, 1851, 32, 10272, 346, 610, 6512, 32, 5038, 293, 284]}
{"line_number": 931, "line_type": "original", "code": "      }", "entropy": 6.9921875, "is_bug_line": false, "sus_score": 0.5435442328453064, "per_token_entropy": [4.96484375, 9.0234375], "tokens": [647, 320]}
{"line_number": 931, "line_type": "generated", "code": "\n   * the ones that can have side effects.\n   */\n  static boolean nodeMayHaveSideEffects(Node n) {\n    switch (n.getType()) {\n      case Token.CALL:\n      case Token.NEW:\n        return true;\n      case Token", "entropy": 0.330810546875, "is_bug_line": false, "sus_score": 0.5435442328453064, "per_token_entropy": [0.347412109375, 0.1944580078125, 1.2548828125, 1.5517578125, 0.5703125, 1.619140625, 0.70361328125, 0.07794189453125, 0.06011962890625, 0.26806640625, 0.1781005859375, 0.80029296875, 0.026947021484375, 0.13427734375, 0.0106353759765625, 1.2802734375, 1.8779296875, 0.0007190704345703125, 0.0013294219970703125, 0.004974365234375, 0.058319091796875, 0.06805419921875, 0.2421875, 0.0513916015625, 0.0010833740234375, 0.0726318359375, 1.1689453125, 0.04180908203125, 0.001499176025390625, 6.949901580810547e-05, 0.0013170242309570312, 9.40561294555664e-05, 0.006252288818359375, 0.2425537109375, 0.05511474609375, 0.00815582275390625, 4.00543212890625e-05, 0.92822265625, 0.001956939697265625, 0.79052734375, 0.016571044921875, 0.0011777877807617188, 3.4570693969726562e-06, 0.03961181640625, 0.0012674331665039062, 1.4345703125, 0.1756591796875, 0.11285400390625, 0.00023615360260009766, 0.6494140625, 0.07415771484375, 0.00021183490753173828], "tokens": [664, 319, 322, 11668, 688, 883, 1159, 5209, 15987, 32, 664, 569, 334, 907, 1905, 1541, 12911, 9037, 7427, 20126, 26, 1212, 310, 27, 301, 284, 3578, 308, 96, 32, 10272, 1157, 301, 397, 1135, 6512, 32, 5038, 44, 397, 1135, 6512, 32, 11356, 44, 291, 442, 861, 45, 397, 1135, 6512]}
{"line_number": 932, "line_type": "original", "code": "", "entropy": 3.939453125, "is_bug_line": false, "sus_score": 0.5435442328453064, "per_token_entropy": [3.939453125], "tokens": [203]}
{"line_number": 932, "line_type": "generated", "code": "\n   * @param n - node to check\n   */\n  static boolean nodeHasSideEffects(Node n) {\n    switch (n.getType()) {\n      case Token.CALL:\n        return functionCallHasSideEffects(n);\n      case Token.NEW", "entropy": 0.254150390625, "is_bug_line": false, "sus_score": 0.5435442328453064, "per_token_entropy": [0.205810546875, 0.3662109375, 0.309814453125, 0.180419921875, 0.693359375, 1.4697265625, 1.0224609375, 0.440185546875, 0.53759765625, 0.44775390625, 0.458251953125, 0.0186920166015625, 0.11431884765625, 0.0112457275390625, 1.1025390625, 1.10546875, 0.22119140625, 0.01561737060546875, 0.1953125, 0.00475311279296875, 0.0011987686157226562, 0.052215576171875, 0.0013322830200195312, 0.08917236328125, 1.2490234375, 0.049652099609375, 0.0019550323486328125, 5.53131103515625e-05, 0.0020008087158203125, 0.0001131296157836914, 0.00412750244140625, 0.1414794921875, 0.058685302734375, 0.00875091552734375, 4.4226646423339844e-05, 1.076171875, 0.0024394989013671875, 0.281982421875, 0.26953125, 0.422119140625, 0.0003197193145751953, 0.0004253387451171875, 1.8715858459472656e-05, 2.384185791015625e-05, 0.003204345703125, 0.0023136138916015625, 0.050628662109375, 0.481689453125, 0.0106658935546875, 0.00042057037353515625, 3.6954879760742188e-06, 0.033721923828125], "tokens": [664, 319, 477, 753, 310, 429, 1541, 372, 1505, 664, 569, 334, 907, 1905, 1541, 3993, 7427, 20126, 26, 1212, 310, 27, 301, 284, 3578, 308, 96, 32, 10272, 1157, 301, 397, 1135, 6512, 32, 5038, 44, 291, 442, 667, 1853, 3993, 7427, 20126, 26, 96, 293, 397, 1135, 6512, 32, 11356]}
{"line_number": 2902, "line_type": "original", "code": "        return newHasLocalResult(value)", "entropy": 3.017578125, "is_bug_line": false, "sus_score": 0.5435059070587158, "per_token_entropy": [8.0703125, 1.7314453125, 6.3125, 7.3125, 0.83447265625, 0.08807373046875, 0.3291015625, 0.35205078125, 2.12890625], "tokens": [351, 442, 537, 3993, 3325, 1394, 26, 853, 27]}
{"line_number": 2902, "line_type": "generated", "code": "\n\n  /**\n   * Given the function, this returns the nth\n   * parameter or null if no such parameter exists.\n   */\n  static Node getParameterForFunction(Node function, int index) {\n    Preconditions.checkState(isFunction(function));\n    return", "entropy": 0.1378173828125, "is_bug_line": false, "sus_score": 0.5435059070587158, "per_token_entropy": [0.7265625, 0.3935546875, 0.057281494140625, 0.000766754150390625, 1.28125, 0.50537109375, 0.64013671875, 0.2086181640625, 0.069091796875, 0.036346435546875, 0.1258544921875, 0.6494140625, 0.1173095703125, 0.00030517578125, 1.13671875, 0.256591796875, 0.0134124755859375, 0.0014753341674804688, 0.01113128662109375, 0.0013599395751953125, 0.021087646484375, 0.002437591552734375, 0.004352569580078125, 0.01080322265625, 0.07489013671875, 0.01898193359375, 0.1429443359375, 0.019622802734375, 0.002468109130859375, 0.080078125, 0.051727294921875, 0.00630950927734375, 0.0018358230590820312, 0.01190948486328125, 0.005756378173828125, 0.0025348663330078125, 0.00090789794921875, 0.0038547515869140625, 0.0013332366943359375, 0.0012254714965820312, 0.0203704833984375, 0.0268402099609375, 1.1205673217773438e-05, 0.0021915435791015625, 0.01494598388671875, 0.00036787986755371094, 0.005992889404296875, 0.00189208984375, 8.869171142578125e-05, 0.019195556640625, 0.06378173828125, 0.31103515625], "tokens": [719, 1022, 664, 319, 15273, 322, 667, 30, 458, 3217, 322, 46245, 664, 319, 3395, 556, 744, 415, 1289, 3751, 3395, 5375, 32, 664, 569, 334, 907, 4004, 622, 3012, 1562, 2447, 26, 1212, 667, 30, 629, 1650, 27, 301, 284, 40596, 32, 1553, 1078, 26, 39504, 26, 1126, 876, 284, 442]}
{"line_number": 2966, "line_type": "original", "code": "      Node propNode = getNode.getLastChild();", "entropy": 1.2236328125, "is_bug_line": false, "sus_score": 0.5430722236633301, "per_token_entropy": [7.6953125, 3.056640625, 0.7216796875, 0.006649017333984375, 0.0210418701171875, 0.186767578125, 0.0090484619140625, 0.498291015625, 0.00042438507080078125, 0.0369873046875], "tokens": [647, 4004, 7018, 1212, 280, 40524, 32, 20197, 2931, 473]}
{"line_number": 2966, "line_type": "generated", "code": "\n  private static boolean isImmutableValue(Node n) {\n    return isNull(n) || isBoolean(n) || isNumber(n) || isString(n);\n  }\n\n  private static boolean isNull(Node n) {\n    return", "entropy": 0.29248046875, "is_bug_line": false, "sus_score": 0.5430722236633301, "per_token_entropy": [0.72509765625, 0.54248046875, 0.021484375, 0.07086181640625, 0.6708984375, 1.708984375, 0.043121337890625, 0.00677490234375, 0.003719329833984375, 1.638671875, 0.003505706787109375, 0.001651763916015625, 0.054534912109375, 0.78564453125, 0.896484375, 1.4228515625, 0.291259765625, 0.0004420280456542969, 0.005950927734375, 0.8173828125, 0.23193359375, 1.1279296875, 0.0028972625732421875, 0.00023186206817626953, 0.0126190185546875, 0.1004638671875, 0.0611572265625, 0.56298828125, 0.0014362335205078125, 0.00021696090698242188, 0.1065673828125, 0.061798095703125, 0.03472900390625, 0.0172119140625, 0.0010271072387695312, 0.00025177001953125, 0.1390380859375, 0.022308349609375, 0.002620697021484375, 0.2685546875, 0.619140625, 0.0203704833984375, 0.04034423828125, 0.2210693359375, 1.7529296875, 0.0175628662109375, 0.000507354736328125, 0.0191192626953125, 0.00040435791015625, 0.00244140625, 0.024200439453125, 0.0198822021484375], "tokens": [334, 945, 907, 1905, 438, 15027, 882, 26, 1212, 310, 27, 301, 284, 442, 438, 1883, 26, 96, 27, 1276, 438, 4709, 26, 96, 27, 1276, 438, 1918, 26, 96, 27, 1276, 438, 652, 26, 96, 293, 334, 320, 719, 945, 907, 1905, 438, 1883, 26, 1212, 310, 27, 301, 284, 442]}
{"line_number": 2896, "line_type": "original", "code": "        return locals.apply(value);", "entropy": 2.333984375, "is_bug_line": false, "sus_score": 0.5428551435470581, "per_token_entropy": [7.70703125, 1.28515625, 8.28125, 0.10211181640625, 0.1292724609375, 0.003200531005859375, 0.5654296875, 0.59375], "tokens": [351, 442, 28363, 32, 4699, 26, 853, 293]}
{"line_number": 2896, "line_type": "generated", "code": "\n   */\n  private static Node getNthArgument(Node function, int index) {\n    Preconditions.checkArgument(function.getType() == Token.FUNCTION);\n\n    Node paramList = function.getFirstChild().getNext();\n    Node param = paramList.", "entropy": 0.279296875, "is_bug_line": false, "sus_score": 0.5428551435470581, "per_token_entropy": [0.39892578125, 0.321533203125, 0.0166015625, 0.34814453125, 0.0179443359375, 0.0204620361328125, 0.01233673095703125, 0.09722900390625, 0.0010499954223632812, 1.01953125, 0.01421356201171875, 0.03912353515625, 0.4287109375, 0.042572021484375, 0.00414276123046875, 0.0509033203125, 0.0093994140625, 0.003993988037109375, 0.07275390625, 1.0556640625, 0.00044536590576171875, 0.010345458984375, 0.41259765625, 0.00687408447265625, 0.78955078125, 0.0248870849609375, 0.330322265625, 0.00218963623046875, 0.00261688232421875, 0.0011034011840820312, 9.417533874511719e-06, 0.040496826171875, 0.2120361328125, 1.2724609375, 0.56201171875, 1.5830078125, 0.374755859375, 0.00927734375, 0.2138671875, 0.0016021728515625, 0.84326171875, 0.00021755695343017578, 0.65771484375, 0.030303955078125, 0.07476806640625, 0.1519775390625, 1.4755859375, 0.86376953125, 0.140625, 0.403564453125, 1.704692840576172e-05, 0.05438232421875], "tokens": [664, 569, 334, 945, 907, 4004, 622, 64, 349, 3484, 26, 1212, 667, 30, 629, 1650, 27, 301, 284, 40596, 32, 1553, 3484, 26, 1126, 32, 10272, 346, 610, 6512, 32, 9842, 293, 446, 4004, 4356, 720, 280, 667, 32, 25657, 2931, 922, 23017, 473, 284, 4004, 4356, 280, 4356, 720, 32]}
{"line_number": 1488, "line_type": "original", "code": "    return n.getType() == Token.STRING;", "entropy": 2.138671875, "is_bug_line": false, "sus_score": 0.5424092411994934, "per_token_entropy": [3.63671875, 4.17578125, 5.3125, 0.06964111328125, 0.78857421875, 0.2271728515625, 0.15966796875, 0.049407958984375, 0.031829833984375, 8.765625, 0.294677734375], "tokens": [264, 442, 310, 32, 10272, 346, 610, 6512, 32, 5203, 45]}
{"line_number": 1488, "line_type": "generated", "code": "\n    }\n    return false;\n  }\n\n  /**\n   * @return Whether the node represents a FOR loop.\n   */\n  static boolean isFor(Node n) {\n    return n.getType() == Token.FOR;\n  }\n\n  /**\n   * @", "entropy": 0.1224365234375, "is_bug_line": false, "sus_score": 0.5424092411994934, "per_token_entropy": [0.80810546875, 0.01171875, 0.1141357421875, 0.0308380126953125, 0.0015497207641601562, 0.0003685951232910156, 0.0094451904296875, 0.0009407997131347656, 0.17138671875, 0.0810546875, 0.0218658447265625, 0.0004818439483642578, 1.9765625, 0.156982421875, 0.134521484375, 0.06866455078125, 0.1387939453125, 0.11651611328125, 0.1141357421875, 0.84912109375, 0.26025390625, 0.249755859375, 0.009857177734375, 0.009765625, 0.0008287429809570312, 0.013641357421875, 0.0006079673767089844, 0.0005645751953125, 0.011871337890625, 0.1507568359375, 0.0008745193481445312, 0.003910064697265625, 0.0004248619079589844, 0.0004954338073730469, 0.0298919677734375, 0.022918701171875, 0.031951904296875, 0.0002541542053222656, 0.0016908645629882812, 7.998943328857422e-05, 0.00011181831359863281, 8.463859558105469e-05, 0.0001220703125, 0.00011622905731201172, 0.350341796875, 0.00687408447265625, 0.00021195411682128906, 0.03515625, 0.03253173828125, 0.00830078125, 0.00010156631469726562, 0.32568359375], "tokens": [284, 320, 284, 442, 901, 45, 334, 320, 719, 1022, 664, 319, 477, 601, 14071, 322, 1541, 10666, 312, 4786, 5258, 32, 664, 569, 334, 907, 1905, 438, 1562, 26, 1212, 310, 27, 301, 284, 442, 310, 32, 10272, 346, 610, 6512, 32, 7321, 45, 334, 320, 719, 1022, 664, 319, 477]}
{"line_number": 2898, "line_type": "original", "code": "        return callHasLocalResult(value)", "entropy": 2.728515625, "is_bug_line": false, "sus_score": 0.5422093272209167, "per_token_entropy": [4.01171875, 1.193359375, 6.80078125, 1.79296875, 1.490234375, 0.151611328125, 0.023529052734375, 8.7734375, 0.326904296875], "tokens": [351, 442, 1476, 3993, 3325, 1394, 26, 853, 27]}
{"line_number": 2898, "line_type": "generated", "code": "\n    return getNthSibling(function.getFirstChild(), index);\n  }\n\n  /**\n   * Given the function, this returns the nth\n   * argument or null if no such parameter exists.\n   */\n  static Node getArgumentForFunction(Node function,", "entropy": 0.20556640625, "is_bug_line": false, "sus_score": 0.5422093272209167, "per_token_entropy": [0.88623046875, 1.21484375, 0.89306640625, 0.118896484375, 8.475780487060547e-05, 0.11224365234375, 0.0036773681640625, 0.12469482421875, 0.06915283203125, 0.30859375, 0.0003561973571777344, 0.051361083984375, 0.0228271484375, 0.1943359375, 0.036895751953125, 0.001705169677734375, 0.1900634765625, 0.305908203125, 0.04656982421875, 0.0018463134765625, 0.70703125, 0.36279296875, 0.7490234375, 0.245361328125, 0.04766845703125, 0.0240325927734375, 0.0701904296875, 0.410888671875, 0.09576416015625, 0.00019502639770507812, 1.1083984375, 0.2059326171875, 0.04388427734375, 0.0015773773193359375, 0.01355743408203125, 0.0016632080078125, 0.02728271484375, 0.0037174224853515625, 0.0113983154296875, 0.00948333740234375, 0.06903076171875, 0.006984710693359375, 0.1527099609375, 0.1383056640625, 0.05169677734375, 0.1956787109375, 0.370361328125, 0.6279296875, 0.2156982421875, 0.06640625, 0.044281005859375, 0.023834228515625], "tokens": [284, 442, 622, 64, 349, 20862, 26, 1126, 32, 25657, 2931, 1026, 1650, 293, 334, 320, 719, 1022, 664, 319, 15273, 322, 667, 30, 458, 3217, 322, 46245, 664, 319, 2793, 556, 744, 415, 1289, 3751, 3395, 5375, 32, 664, 569, 334, 907, 4004, 622, 3484, 1562, 2447, 26, 1212, 667, 30]}
{"line_number": 2965, "line_type": "original", "code": "    if (isGet(getNode)) {", "entropy": 1.66015625, "is_bug_line": false, "sus_score": 0.5422093272209167, "per_token_entropy": [5.96875, 2.267578125, 0.341552734375, 1.302734375, 1.99609375, 1.2685546875, 1.0517578125, 0.67138671875, 0.065185546875], "tokens": [264, 415, 308, 297, 936, 26, 17699, 490, 301]}
{"line_number": 2965, "line_type": "generated", "code": "\n    return false;\n  }\n\n  private static boolean isCallOrNew(Node call) {\n    return call.getType() == Token.CALL || call.getType() == Token.NEW;\n  }\n\n  private static boolean isFunction(Node call) {", "entropy": 0.259765625, "is_bug_line": false, "sus_score": 0.5422093272209167, "per_token_entropy": [1.875, 0.97900390625, 0.203857421875, 0.0020160675048828125, 0.056365966796875, 0.0032215118408203125, 0.515625, 1.408203125, 0.033203125, 0.072021484375, 0.5947265625, 1.4951171875, 0.037139892578125, 0.002788543701171875, 0.08251953125, 0.0008363723754882812, 1.1708984375, 0.32763671875, 0.00264739990234375, 0.1600341796875, 0.5625, 0.433837890625, 0.097900390625, 0.11395263671875, 0.0010576248168945312, 0.0036563873291015625, 0.002735137939453125, 2.9802322387695312e-05, 0.08050537109375, 0.201904296875, 0.0634765625, 0.00018465518951416016, 0.0018148422241210938, 0.000720977783203125, 0.0002696514129638672, 0.00047779083251953125, 1.8715858459472656e-05, 1.6450881958007812e-05, 0.00420379638671875, 0.0073394775390625, 0.0006160736083984375, 0.07220458984375, 0.32763671875, 0.0078582763671875, 0.017913818359375, 0.0743408203125, 0.3681640625, 0.0228424072265625, 0.0008764266967773438, 1.9892578125, 0.026092529296875, 0.0002593994140625], "tokens": [284, 442, 901, 45, 334, 320, 719, 945, 907, 1905, 438, 1853, 1527, 1812, 26, 1212, 1476, 27, 301, 284, 442, 1476, 32, 10272, 346, 610, 6512, 32, 5038, 1276, 1476, 32, 10272, 346, 610, 6512, 32, 11356, 45, 334, 320, 719, 945, 907, 1905, 438, 2447, 26, 1212, 1476, 27, 301]}
{"line_number": 1018, "line_type": "original", "code": "", "entropy": 3.798828125, "is_bug_line": false, "sus_score": 0.5420702695846558, "per_token_entropy": [3.798828125], "tokens": [203]}
{"line_number": 1018, "line_type": "generated", "code": "\n   *  8 equality ==!= ===!==\n   *  9 comparison < <= > >=\n   * 10 bitshift << >> >>>\n   * 11 plus +\n   * 12 minus -\n   * 13 mul *\n   * ", "entropy": 0.150634765625, "is_bug_line": false, "sus_score": 0.5420702695846558, "per_token_entropy": [0.3056640625, 0.10400390625, 0.054229736328125, 0.0178985595703125, 0.038665771484375, 0.09893798828125, 0.050689697265625, 0.405029296875, 0.0028839111328125, 0.010498046875, 0.0005888938903808594, 0.01294708251953125, 0.001750946044921875, 0.493896484375, 0.152587890625, 0.9912109375, 0.01508331298828125, 0.013458251953125, 0.4462890625, 0.0003883838653564453, 0.1070556640625, 0.0006699562072753906, 0.0019550323486328125, 0.284423828125, 1.1015625, 0.06488037109375, 0.001422882080078125, 0.005100250244140625, 0.00820159912109375, 0.0005879402160644531, 0.0020961761474609375, 0.0004794597625732422, 0.0036334991455078125, 1.44140625, 0.02783203125, 0.06549072265625, 7.069110870361328e-05, 0.0003731250762939453, 0.00038552284240722656, 0.0020961761474609375, 0.002536773681640625, 0.003955841064453125, 0.0086822509765625, 0.00022149085998535156, 0.0008215904235839844, 0.0008983612060546875, 0.0017442703247070312, 1.4287109375, 0.00342559814453125, 0.048736572265625, 0.00016999244689941406, 0.0002772808074951172], "tokens": [664, 319, 261, 42, 28599, 610, 863, 1720, 3326, 664, 319, 261, 43, 14828, 333, 2511, 848, 2377, 664, 319, 225, 35, 34, 3493, 5494, 1264, 3776, 8217, 664, 319, 225, 35, 35, 10952, 474, 664, 319, 225, 35, 36, 25897, 429, 664, 319, 225, 35, 37, 17476, 319, 664, 319, 225]}
{"line_number": 1024, "line_type": "original", "code": "   */", "entropy": 4.2578125, "is_bug_line": false, "sus_score": 0.5420702695846558, "per_token_entropy": [6.44140625, 2.072265625], "tokens": [261, 569]}
{"line_number": 1024, "line_type": "generated", "code": "\n  static boolean isAssignmentOp(Node n) {\n    switch (n.getType()) {\n      case Token.ASSIGN:\n      case Token.ASSIGN_ADD:\n      case Token.ASSIGN_BITOR:\n      case Token.ASSIGN_BITXOR:\n     ", "entropy": 0.10198974609375, "is_bug_line": false, "sus_score": 0.5420702695846558, "per_token_entropy": [0.9189453125, 0.26953125, 0.1370849609375, 0.2222900390625, 0.041290283203125, 0.0185394287109375, 0.0016088485717773438, 0.021514892578125, 0.0273590087890625, 0.01287841796875, 0.0014896392822265625, 0.019622802734375, 0.91259765625, 0.10302734375, 0.00989532470703125, 6.818771362304688e-05, 0.0017871856689453125, 0.00028705596923828125, 0.00273895263671875, 0.05633544921875, 0.03515625, 0.00975799560546875, 8.96453857421875e-05, 0.90771484375, 0.0665283203125, 0.2474365234375, 0.004425048828125, 0.0003604888916015625, 2.0384788513183594e-05, 0.4306640625, 4.684925079345703e-05, 0.054656982421875, 0.0002617835998535156, 0.0061187744140625, 0.00014698505401611328, 3.337860107421875e-05, 1.3470649719238281e-05, 0.00012314319610595703, 9.5367431640625e-07, 0.61962890625, 0.1334228515625, 0.00010669231414794922, 0.0012426376342773438, 0.0001952648162841797, 3.790855407714844e-05, 1.2993812561035156e-05, 5.340576171875e-05, 1.3113021850585938e-06, 0.00064849853515625, 0.00516510009765625, 1.823902130126953e-05, 0.0005526542663574219], "tokens": [334, 907, 1905, 438, 12589, 3397, 26, 1212, 310, 27, 301, 284, 3578, 308, 96, 32, 10272, 1157, 301, 397, 1135, 6512, 32, 25620, 44, 397, 1135, 6512, 32, 25620, 81, 5363, 44, 397, 1135, 6512, 32, 25620, 81, 5670, 758, 44, 397, 1135, 6512, 32, 25620, 81, 5670, 42417, 44, 397]}
