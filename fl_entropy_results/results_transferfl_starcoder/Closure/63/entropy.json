{"line_number": 91, "line_type": "original", "code": "      b.append('\\n');", "entropy": 2.02734375, "is_bug_line": false, "sus_score": 0.6950898170471191, "per_token_entropy": [3.0703125, 8.3984375, 0.057037353515625, 0.01007843017578125, 2.61328125, 0.023345947265625, 0.01255035400390625], "tokens": [647, 323, 32, 1689, 9442, 96, 895]}
{"line_number": 91, "line_type": "generated", "code": "\n      for (int i = 0; i <= region.getEndingLineNumber(); i++) {\n        int end = code.indexOf('\\n', start);\n        if (end == -1) {\n          end = code.length();\n        }\n        int", "entropy": 0.1798095703125, "is_bug_line": false, "sus_score": 0.6950898170471191, "per_token_entropy": [0.181640625, 0.80419921875, 0.020538330078125, 0.0960693359375, 0.55712890625, 0.021484375, 0.65771484375, 0.1829833984375, 0.1851806640625, 0.0305328369140625, 0.84326171875, 0.031951904296875, 0.000148773193359375, 0.033172607421875, 0.01059722900390625, 0.0024013519287109375, 0.1973876953125, 0.046234130859375, 0.0168609619140625, 0.0024566650390625, 0.0195159912109375, 0.837890625, 0.7724609375, 0.1741943359375, 0.19775390625, 8.64267349243164e-05, 0.0033397674560546875, 0.064208984375, 0.00026869773864746094, 0.0015687942504882812, 0.0030269622802734375, 0.029022216796875, 0.04339599609375, 0.224365234375, 0.0008945465087890625, 0.217041015625, 0.291748046875, 0.006992340087890625, 0.0005865097045898438, 0.004459381103515625, 0.005680084228515625, 0.01134490966796875, 0.1412353515625, 0.0003829002380371094, 0.0180511474609375, 1.5974044799804688e-05, 0.0012845993041992188, 0.038330078125, 0.01953125, 0.0002799034118652344, 0.348876953125, 1.94921875], "tokens": [397, 436, 308, 410, 595, 280, 225, 34, 45, 595, 2511, 6699, 32, 371, 42360, 29690, 473, 595, 1987, 301, 291, 629, 943, 280, 1340, 32, 7142, 9442, 96, 370, 1477, 293, 291, 415, 308, 416, 610, 429, 35, 27, 301, 616, 943, 280, 1340, 32, 1322, 473, 291, 320, 291, 629]}
{"line_number": 92, "line_type": "original", "code": "      int charno = error.getCharno();", "entropy": 1.8759765625, "is_bug_line": false, "sus_score": 0.6950898170471191, "per_token_entropy": [3.275390625, 2.3046875, 4.625, 0.10528564453125, 0.043792724609375, 8.6640625, 0.031463623046875, 1.037109375, 0.26416015625, 0.0264129638671875, 0.26904296875], "tokens": [647, 629, 1351, 1347, 280, 1048, 32, 371, 2659, 1347, 473]}
{"line_number": 92, "line_type": "generated", "code": "\n      while (end!= -1) {\n        // line number\n        builder.append(String.format(\"%\" + numberLength + \"d", "entropy": 0.291748046875, "is_bug_line": false, "sus_score": 0.6950898170471191, "per_token_entropy": [0.478515625, 0.56201171875, 0.00783538818359375, 0.4814453125, 0.68408203125, 0.004913330078125, 0.0009860992431640625, 0.01457977294921875, 0.0024871826171875, 0.0239715576171875, 1.724609375, 1.8310546875, 0.4267578125, 0.375, 0.5537109375, 0.01264190673828125, 0.0228729248046875, 0.204345703125, 0.327392578125, 0.00543212890625, 0.002315521240234375, 0.170654296875, 0.391845703125, 0.007476806640625, 0.07354736328125, 0.00021326541900634766, 0.00815582275390625, 0.00968170166015625, 0.055572509765625], "tokens": [397, 2218, 308, 416, 863, 429, 35, 27, 301, 291, 434, 1628, 1451, 291, 4906, 32, 1689, 26, 652, 32, 1643, 4912, 20, 474, 1451, 2380, 474, 313, 86]}
{"line_number": 76, "line_type": "original", "code": "      b.append(error.sourceName);", "entropy": 2.57421875, "is_bug_line": false, "sus_score": 0.6559770107269287, "per_token_entropy": [4.34375, 10.703125, 0.0911865234375, 0.0168609619140625, 0.37255859375, 7.29296875, 0.0131072998046875, 2.787109375, 0.015350341796875, 0.11090087890625], "tokens": [647, 323, 32, 1689, 26, 731, 32, 1855, 558, 293]}
{"line_number": 76, "line_type": "generated", "code": "\n      return region.toString();\n    }\n  }", "entropy": 0.2406005859375, "is_bug_line": false, "sus_score": 0.6559770107269287, "per_token_entropy": [0.201416015625, 0.62451171875, 1.0615234375, 0.0413818359375, 0.08782958984375, 0.181396484375, 0.0265960693359375, 0.0014743804931640625, 0.1768798828125, 0.0030422210693359375], "tokens": [397, 442, 6699, 32, 3108, 473, 284, 320, 334, 320]}
{"line_number": 77, "line_type": "original", "code": "      if (error.lineNumber > 0) {", "entropy": 1.5185546875, "is_bug_line": false, "sus_score": 0.6559770107269287, "per_token_entropy": [3.904296875, 4.96875, 0.036163330078125, 4.984375, 0.0361328125, 1.7880859375, 0.0310516357421875, 2.04296875, 0.06842041015625, 0.208740234375, 0.10406494140625, 0.041229248046875], "tokens": [647, 415, 308, 731, 32, 928, 1918, 848, 225, 34, 27, 301]}
{"line_number": 77, "line_type": "generated", "code": "\n        return null;\n      }\n      StringBuilder b = new StringBuilder();\n      for (int i = region.start.line; i <= region.end.line; i++) {\n        b.append(String.format(\"%4d", "entropy": 0.1947021484375, "is_bug_line": false, "sus_score": 0.6559770107269287, "per_token_entropy": [0.461669921875, 0.12384033203125, 0.93994140625, 0.0017032623291015625, 0.0211181640625, 0.0007734298706054688, 0.59423828125, 0.7177734375, 0.431640625, 0.0009360313415527344, 0.0022258758544921875, 8.26120376586914e-05, 0.05908203125, 0.095947265625, 1.1572265625, 0.00577545166015625, 0.2222900390625, 0.247802734375, 0.0226593017578125, 0.11376953125, 0.00012004375457763672, 0.90283203125, 0.3349609375, 0.058624267578125, 0.070556640625, 0.027557373046875, 0.378662109375, 0.0011758804321289062, 2.014636993408203e-05, 0.0034389495849609375, 0.00039315223693847656, 0.003292083740234375, 0.0031948089599609375, 0.02642822265625, 0.0033512115478515625, 0.00043082237243652344, 0.04144287109375, 0.576171875, 0.00038313865661621094, 0.00653839111328125, 0.171142578125, 0.7451171875, 0.0011167526245117188, 0.10821533203125, 0.1231689453125, 0.295166015625, 0.047454833984375], "tokens": [291, 442, 744, 45, 397, 320, 397, 9706, 323, 280, 537, 9706, 473, 397, 436, 308, 410, 595, 280, 6699, 32, 1366, 32, 928, 45, 595, 2511, 6699, 32, 416, 32, 928, 45, 595, 1987, 301, 291, 323, 32, 1689, 26, 652, 32, 1643, 4912, 38, 86]}
{"line_number": 78, "line_type": "original", "code": "        b.append(':');", "entropy": 2.953125, "is_bug_line": false, "sus_score": 0.6559770107269287, "per_token_entropy": [5.41796875, 5.2265625, 0.01096343994140625, 0.0037708282470703125, 6.28515625, 0.78076171875], "tokens": [351, 323, 32, 1689, 16487, 895]}
{"line_number": 78, "line_type": "generated", "code": "\n      }\n      StringBuilder b = new StringBuilder();\n      int startLine = region.getStart().getLine();\n      int endLine = region.getEnd().getLine();\n      for (int i = startLine; i <= endLine; i++) {\n        if (i", "entropy": 0.2100830078125, "is_bug_line": false, "sus_score": 0.6559770107269287, "per_token_entropy": [0.071533203125, 0.0246734619140625, 0.646484375, 0.849609375, 0.4365234375, 0.0010814666748046875, 0.0029544830322265625, 0.0001327991485595703, 0.06805419921875, 0.0848388671875, 1.28515625, 1.1640625, 0.64306640625, 0.03057861328125, 0.0204010009765625, 0.0001513957977294922, 0.27734375, 0.93603515625, 0.480712890625, 0.011383056640625, 0.01873779296875, 0.2105712890625, 0.1983642578125, 0.0026111602783203125, 0.01064300537109375, 0.00444793701171875, 7.677078247070312e-05, 0.017120361328125, 0.0013208389282226562, 0.0013551712036132812, 0.0233154296875, 0.1419677734375, 0.80419921875, 0.004566192626953125, 0.0088348388671875, 0.325439453125, 0.0029468536376953125, 0.042144775390625, 1.8835067749023438e-05, 0.01529693603515625, 0.00296783447265625, 0.0307769775390625, 0.002079010009765625, 2.384185791015625e-06, 0.0030956268310546875, 0.02313232421875, 0.003208160400390625, 0.0009055137634277344, 0.04095458984375, 1.583984375, 0.00800323486328125, 0.35546875], "tokens": [397, 320, 397, 9706, 323, 280, 537, 9706, 473, 397, 629, 1477, 1811, 280, 6699, 32, 31862, 922, 42949, 473, 397, 629, 943, 1811, 280, 6699, 32, 45709, 922, 42949, 473, 397, 436, 308, 410, 595, 280, 1477, 1811, 45, 595, 2511, 943, 1811, 45, 595, 1987, 301, 291, 415, 308, 91]}
{"line_number": 79, "line_type": "original", "code": "        b.append(error.lineNumber);", "entropy": 2.16015625, "is_bug_line": false, "sus_score": 0.6559770107269287, "per_token_entropy": [5.71484375, 6.90234375, 0.037109375, 0.0179443359375, 0.74755859375, 6.90234375, 0.019287109375, 0.9677734375, 0.0037021636962890625, 0.27734375], "tokens": [351, 323, 32, 1689, 26, 731, 32, 928, 1918, 293]}
{"line_number": 79, "line_type": "generated", "code": "\n    }\n  }", "entropy": 0.26611328125, "is_bug_line": false, "sus_score": 0.6559770107269287, "per_token_entropy": [0.90283203125, 0.0200653076171875, 0.1392822265625, 0.002532958984375], "tokens": [284, 320, 334, 320]}
{"line_number": 81, "line_type": "original", "code": "      b.append(\": \");", "entropy": 3.9140625, "is_bug_line": false, "sus_score": 0.6559770107269287, "per_token_entropy": [4.23046875, 9.4609375, 0.0181884765625, 0.005573272705078125, 6.37109375, 3.390625], "tokens": [647, 323, 32, 1689, 17919, 7170]}
{"line_number": 81, "line_type": "generated", "code": "\n        return null;\n      }\n      StringBuilder b = new StringBuilder();\n      for (int i = 0; i < region.start.line; i++) {\n        b.append(i + 1);\n        b.append('|');\n        b.", "entropy": 0.254150390625, "is_bug_line": false, "sus_score": 0.6559770107269287, "per_token_entropy": [0.7841796875, 0.11199951171875, 0.939453125, 0.0014858245849609375, 0.022003173828125, 8.83340835571289e-05, 0.490234375, 0.65869140625, 0.467529296875, 0.0007762908935546875, 0.002490997314453125, 5.340576171875e-05, 0.1114501953125, 0.07666015625, 1.8359375, 0.0037021636962890625, 0.10906982421875, 0.224365234375, 0.0056915283203125, 0.5810546875, 0.06793212890625, 0.25390625, 0.01218414306640625, 0.042572021484375, 0.322265625, 0.00019669532775878906, 1.7421875, 0.54736328125, 0.153564453125, 0.201171875, 0.031951904296875, 0.00342559814453125, 0.0006017684936523438, 0.043243408203125, 0.0916748046875, 0.0001583099365234375, 0.0003399848937988281, 0.90576171875, 0.798828125, 0.26416015625, 0.020599365234375, 0.0016574859619140625, 0.19384765625, 0.016632080078125, 0.0032291412353515625, 4.088878631591797e-05, 0.00010955333709716797, 0.876953125, 0.0714111328125, 0.10247802734375, 0.0100250244140625, 0.0002849102020263672], "tokens": [291, 442, 744, 45, 397, 320, 397, 9706, 323, 280, 537, 9706, 473, 397, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 6699, 32, 1366, 32, 928, 45, 595, 1987, 301, 291, 323, 32, 1689, 26, 91, 474, 225, 35, 293, 291, 323, 32, 1689, 44868, 895, 291, 323, 32]}
{"line_number": 69, "line_type": "original", "code": "    String sourceExcerpt = source == null ? null :", "entropy": 2.001953125, "is_bug_line": false, "sus_score": 0.6036462783813477, "per_token_entropy": [4.0078125, 4.97265625, 5.37109375, 0.98681640625, 0.01055908203125, 0.31005859375, 1.884765625, 5.140625, 0.005107879638671875, 0.54931640625, 0.4384765625, 0.358154296875], "tokens": [264, 892, 1914, 571, 21112, 280, 1914, 610, 744, 1018, 744, 499]}
{"line_number": 69, "line_type": "generated", "code": "\n   */\n  static String formatRegion(SourceExcerptProvider source,\n      SourceExcerpt excerpt, int startLine, int endLine) {\n    Preconditions.checkArgument(startLine <= endLine);\n\n    // extract source excerpt\n    StringBuilder b =", "entropy": 0.412841796875, "is_bug_line": false, "sus_score": 0.6036462783813477, "per_token_entropy": [0.2041015625, 0.43896484375, 0.053741455078125, 1.8076171875, 0.8525390625, 0.1405029296875, 0.1875, 0.07781982421875, 1.4091796875, 0.5791015625, 6.0439109802246094e-05, 0.2734375, 0.044097900390625, 0.037841796875, 0.90869140625, 1.1845703125, 0.91259765625, 1.0848045349121094e-05, 0.71142578125, 0.0014219284057617188, 0.517578125, 0.71240234375, 0.5654296875, 0.92236328125, 0.039825439453125, 0.023956298828125, 0.133544921875, 0.0022220611572265625, 0.235107421875, 0.006641387939453125, 0.1539306640625, 1.12109375, 0.0002486705780029297, 0.1529541015625, 0.1466064453125, 0.044036865234375, 0.533203125, 0.000255584716796875, 0.423095703125, 0.007457733154296875, 6.67572021484375e-06, 0.0859375, 1.0556640625, 1.462890625, 1.400390625, 0.199462890625, 0.0767822265625, 0.0088348388671875, 0.236328125, 1.2197265625, 0.14892578125, 0.0012493133544921875], "tokens": [664, 569, 334, 907, 892, 2179, 6062, 26, 2028, 571, 21112, 2570, 1914, 30, 397, 6374, 571, 21112, 538, 21112, 30, 629, 1477, 1811, 30, 629, 943, 1811, 27, 301, 284, 40596, 32, 1553, 3484, 26, 1366, 1811, 2511, 943, 1811, 293, 446, 434, 6571, 1914, 538, 21112, 284, 9706, 323, 280]}
{"line_number": 68, "line_type": "original", "code": "    SourceExcerptProvider source = getSource();", "entropy": 2.033203125, "is_bug_line": false, "sus_score": 0.5993557572364807, "per_token_entropy": [4.81640625, 5.5625, 0.30712890625, 0.0036563873291015625, 0.97119140625, 1.6953125, 2.21875, 4.38671875, 0.045196533203125, 0.32177734375], "tokens": [264, 6374, 571, 21112, 2570, 1914, 280, 622, 2028, 473]}
{"line_number": 68, "line_type": "generated", "code": "\n   * @param region The region to format.\n   * @param sourceName The name of the source file.\n   * @param excerptFormatter The formatter to use to generate the excerpt.\n   */\n  public String formatRegion(Region region, String", "entropy": 0.5302734375, "is_bug_line": false, "sus_score": 0.5993557572364807, "per_token_entropy": [0.07440185546875, 0.552734375, 0.8359375, 0.09649658203125, 0.99365234375, 1.09375, 0.13232421875, 0.17333984375, 0.273193359375, 0.282470703125, 0.08782958984375, 0.12890625, 0.01227569580078125, 0.72705078125, 1.4453125, 1.6572265625, 0.199462890625, 0.365966796875, 0.0172576904296875, 0.01230621337890625, 0.45263671875, 0.94873046875, 0.6845703125, 0.0615234375, 0.169921875, 0.00872802734375, 0.34619140625, 2.546875, 0.00518798828125, 0.189697265625, 0.6103515625, 1.0791015625, 0.55078125, 0.1435546875, 1.662109375, 1.615234375, 0.450927734375, 0.6162109375, 0.2408447265625, 0.1256103515625, 0.021881103515625, 1.3017578125, 0.02618408203125, 0.92236328125, 1.3876953125, 0.033233642578125, 0.2496337890625, 0.006526947021484375, 1.8212890625, 0.002349853515625, 0.0121612548828125, 0.10186767578125], "tokens": [664, 319, 477, 753, 6699, 886, 6699, 372, 2179, 32, 664, 319, 477, 753, 1914, 558, 886, 636, 432, 322, 1914, 803, 32, 664, 319, 477, 753, 538, 21112, 8736, 886, 14971, 372, 793, 372, 4450, 322, 538, 21112, 32, 664, 569, 334, 562, 892, 2179, 6062, 26, 6062, 6699, 30, 892]}
{"line_number": 89, "line_type": "original", "code": "    if (sourceExcerpt != null) {", "entropy": 1.599609375, "is_bug_line": false, "sus_score": 0.5993557572364807, "per_token_entropy": [3.64453125, 4.546875, 0.06103515625, 5.05078125, 0.7021484375, 0.025634765625, 1.72265625, 0.0037746429443359375, 0.12432861328125, 0.11236572265625], "tokens": [264, 415, 308, 1855, 571, 21112, 863, 744, 27, 301]}
{"line_number": 89, "line_type": "generated", "code": "\n      StringBuilder b = new StringBuilder();\n      String[] lines = code.split(\"\\\\n\");\n      for (int i = region.getStartingLineNumber();\n           i <= region.getEndingLineNumber(); i++) {\n        String line = lines[i - 1", "entropy": 0.2117919921875, "is_bug_line": false, "sus_score": 0.5993557572364807, "per_token_entropy": [0.329345703125, 0.578125, 0.405029296875, 0.0013666152954101562, 0.003559112548828125, 0.00020635128021240234, 0.10772705078125, 0.0911865234375, 2.314453125, 0.393310546875, 0.053619384765625, 0.0018930435180664062, 0.1544189453125, 0.0006766319274902344, 0.005130767822265625, 0.5888671875, 0.307861328125, 0.270263671875, 0.1258544921875, 0.5244140625, 0.004123687744140625, 0.01708984375, 0.2041015625, 0.003173828125, 0.81298828125, 5.14984130859375e-05, 0.163330078125, 0.1630859375, 0.00879669189453125, 0.2322998046875, 0.5966796875, 0.0017328262329101562, 0.06658935546875, 0.0021343231201171875, 0.00013554096221923828, 0.00020420551300048828, 0.0017900466918945312, 1.704692840576172e-05, 0.01194000244140625, 0.37451171875, 0.00601959228515625, 0.0010519027709960938, 0.049346923828125, 0.96923828125, 0.51904296875, 0.04290771484375, 0.1851806640625, 0.00937652587890625, 0.0037631988525390625, 0.093994140625, 0.21142578125, 8.64267349243164e-05], "tokens": [397, 9706, 323, 280, 537, 9706, 473, 397, 892, 1178, 5430, 280, 1340, 32, 2998, 22899, 96, 724, 397, 436, 308, 410, 595, 280, 6699, 32, 371, 15624, 29690, 473, 2607, 595, 2511, 6699, 32, 371, 42360, 29690, 473, 595, 1987, 301, 291, 892, 1628, 280, 5430, 77, 91, 429, 225, 35]}
{"line_number": 36, "line_type": "original", "code": "   * A constructor for when the client doesn't care about source information.", "entropy": 3.197265625, "is_bug_line": false, "sus_score": 0.5993557572364807, "per_token_entropy": [5.703125, 3.716796875, 4.21484375, 7.76953125, 1.609375, 6.76953125, 1.4462890625, 6.6796875, 1.8974609375, 0.004894256591796875, 1.2880859375, 0.6171875, 2.623046875, 3.2734375, 0.35595703125], "tokens": [261, 319, 399, 4374, 436, 1412, 322, 2043, 4163, 1330, 9347, 2625, 1914, 2471, 32]}
{"line_number": 36, "line_type": "generated", "code": "\n          if (c == '\\t') {\n            b.append('\\t');\n          } else {\n            b.append(' ');\n          }\n        }\n        b.append('^');\n        b.append('\\n');\n      }\n    }\n\n    return b.", "entropy": 0.16796875, "is_bug_line": false, "sus_score": 0.5993557572364807, "per_token_entropy": [0.568359375, 0.89453125, 0.0963134765625, 0.1016845703125, 0.14697265625, 0.1688232421875, 0.09002685546875, 0.01543426513671875, 0.0123291015625, 0.21875, 0.208984375, 5.9604644775390625e-05, 0.00341033935546875, 1.6826171875, 0.006221771240234375, 0.0017766952514648438, 0.10650634765625, 0.0015878677368164062, 0.0340576171875, 0.306884765625, 0.02325439453125, 0.0249481201171875, 0.00010609626770019531, 0.00044655799865722656, 0.047454833984375, 0.0028018951416015625, 0.0089263916015625, 0.00046181678771972656, 0.37841796875, 0.0008687973022460938, 0.5107421875, 0.15966796875, 5.5789947509765625e-05, 0.0009551048278808594, 0.71728515625, 0.01145172119140625, 0.022125244140625, 0.38330078125, 0.07666015625, 0.0003230571746826172, 0.0001138448715209961, 0.0804443359375, 0.00493621826171875, 0.006717681884765625, 0.054534912109375, 0.000179290771484375, 0.1785888671875, 5.066394805908203e-05, 0.8251953125, 0.54150390625, 0.00965118408203125, 3.802776336669922e-05], "tokens": [616, 415, 308, 85, 610, 3228, 102, 683, 301, 324, 323, 32, 1689, 9442, 102, 895, 616, 320, 813, 301, 324, 323, 32, 1689, 463, 17858, 616, 320, 291, 320, 291, 323, 32, 1689, 463, 80, 895, 291, 323, 32, 1689, 9442, 96, 895, 397, 320, 284, 320, 446, 442, 323, 32]}
{"line_number": 84, "line_type": "original", "code": "    b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR));", "entropy": 2.130859375, "is_bug_line": false, "sus_score": 0.5909094214439392, "per_token_entropy": [4.9453125, 4.46875, 0.039764404296875, 0.006092071533203125, 0.6201171875, 4.8359375, 9.203125, 6.1875, 0.2724609375, 2.333984375, 4.0234375, 6.60546875, 0.0017538070678710938, 0.001007080078125, 0.02850341796875, 0.355712890625, 0.615234375, 0.00021159648895263672, 0.0015621185302734375, 0.00021660327911376953, 0.1895751953125], "tokens": [264, 323, 32, 1689, 26, 371, 2656, 558, 26, 5691, 1018, 3456, 2656, 32, 10431, 499, 3456, 2656, 32, 2930, 876]}
{"line_number": 84, "line_type": "generated", "code": "\n      StringBuilder b = new StringBuilder();\n      int lastLine = 0;\n      for (int i = 0; i < code.length(); i++) {\n        char ch = code.charAt(i);\n        if (ch == '\\n') {", "entropy": 0.30126953125, "is_bug_line": false, "sus_score": 0.5909094214439392, "per_token_entropy": [0.224609375, 1.51171875, 0.4951171875, 0.0015840530395507812, 0.003551483154296875, 0.00026535987854003906, 0.1107177734375, 0.1361083984375, 1.345703125, 2.837890625, 0.8212890625, 0.4931640625, 1.5302734375, 0.147216796875, 0.00861358642578125, 0.0797119140625, 0.66748046875, 0.005504608154296875, 0.8095703125, 0.70556640625, 0.01617431640625, 0.1353759765625, 0.0113525390625, 0.1326904296875, 0.01094818115234375, 0.1231689453125, 0.2352294921875, 0.0003483295440673828, 0.0014314651489257812, 0.03240966796875, 0.1610107421875, 0.0053558349609375, 0.0004322528839111328, 0.0262298583984375, 0.82958984375, 1.5771484375, 0.002880096435546875, 0.00165557861328125, 3.0279159545898438e-05, 0.00014722347259521484, 4.1484832763671875e-05, 0.00024771690368652344, 0.0008301734924316406, 0.04913330078125, 0.1695556640625, 0.0125732421875, 0.04840087890625, 0.0186614990234375, 0.00930023193359375, 0.01108551025390625, 0.1033935546875, 0.0019283294677734375], "tokens": [397, 9706, 323, 280, 537, 9706, 473, 397, 629, 2401, 1811, 280, 225, 34, 45, 397, 436, 308, 410, 595, 280, 225, 34, 45, 595, 333, 1340, 32, 1322, 473, 595, 1987, 301, 291, 1351, 663, 280, 1340, 32, 15611, 26, 91, 293, 291, 415, 308, 380, 610, 3228, 96, 683, 301]}
{"line_number": 75, "line_type": "original", "code": "    if (error.sourceName != null) {", "entropy": 1.1328125, "is_bug_line": false, "sus_score": 0.5872023105621338, "per_token_entropy": [2.658203125, 3.447265625, 0.1082763671875, 2.568359375, 0.032257080078125, 2.515625, 0.019378662109375, 0.728515625, 0.0120697021484375, 0.338623046875, 0.0304718017578125], "tokens": [264, 415, 308, 731, 32, 1855, 558, 863, 744, 27, 301]}
{"line_number": 75, "line_type": "generated", "code": "\n    public String formatRegion(String[] lines, int startLine, int endLine) {\n      StringBuilder b = new StringBuilder();\n      for (int i = startLine; i <= endLine; i++) {\n        b.append(String.format(\"%", "entropy": 0.224609375, "is_bug_line": false, "sus_score": 0.5872023105621338, "per_token_entropy": [0.814453125, 0.7099609375, 0.1683349609375, 0.291748046875, 1.607421875, 0.048492431640625, 0.2724609375, 1.46484375, 0.47216796875, 0.132080078125, 0.142578125, 0.462890625, 0.76904296875, 0.028045654296875, 0.2244873046875, 0.08294677734375, 0.0023517608642578125, 0.1881103515625, 0.01123046875, 0.029815673828125, 0.548828125, 0.42822265625, 0.0012407302856445312, 0.0018148422241210938, 0.0001176595687866211, 0.06365966796875, 0.1185302734375, 0.491455078125, 0.0083160400390625, 0.0035247802734375, 0.1497802734375, 0.0060272216796875, 0.09283447265625, 0.000301361083984375, 0.02691650390625, 0.0025691986083984375, 0.105224609375, 0.002002716064453125, 1.7762184143066406e-05, 0.00870513916015625, 0.035552978515625, 0.003253936767578125, 0.0008635520935058594, 0.01416778564453125, 0.406005859375, 0.0002536773681640625, 0.0025005340576171875, 0.1536865234375, 0.8486328125, 0.0012369155883789062, 0.10211181640625, 0.12548828125], "tokens": [284, 562, 892, 2179, 6062, 26, 652, 1178, 5430, 30, 629, 1477, 1811, 30, 629, 943, 1811, 27, 301, 397, 9706, 323, 280, 537, 9706, 473, 397, 436, 308, 410, 595, 280, 1477, 1811, 45, 595, 2511, 943, 1811, 45, 595, 1987, 301, 291, 323, 32, 1689, 26, 652, 32, 1643, 4912]}
{"line_number": 110, "line_type": "original", "code": "    return b.toString();", "entropy": 2.978515625, "is_bug_line": false, "sus_score": 0.5802916288375854, "per_token_entropy": [4.78125, 5.4921875, 7.29296875, 0.023590087890625, 0.2744140625, 0.01393890380859375], "tokens": [264, 442, 323, 32, 3108, 473]}
{"line_number": 110, "line_type": "generated", "code": "\n        builder.append(\"| \");\n        builder.append(line);\n        builder.append('\\n');\n\n        // next line\n        lineNumber++;\n        start = end + 1;\n        end = code.indexOf('\\n', start);\n      }\n      return builder.", "entropy": 0.136962890625, "is_bug_line": false, "sus_score": 0.5802916288375854, "per_token_entropy": [0.45263671875, 0.78955078125, 0.0002727508544921875, 0.00057220458984375, 0.712890625, 0.1741943359375, 0.37158203125, 0.09423828125, 0.00027251243591308594, 6.711483001708984e-05, 0.0009503364562988281, 0.0200958251953125, 0.03326416015625, 0.325927734375, 0.371826171875, 0.0002262592315673828, 0.00048089027404785156, 0.11572265625, 5.042552947998047e-05, 9.655952453613281e-05, 0.317138671875, 0.41015625, 0.412109375, 0.51220703125, 0.1429443359375, 0.9765625, 0.0167236328125, 0.004154205322265625, 0.06427001953125, 0.0003380775451660156, 0.00798797607421875, 0.08905029296875, 0.0034637451171875, 0.00012731552124023438, 0.0002994537353515625, 0.00525665283203125, 0.035888671875, 0.0013828277587890625, 0.02423095703125, 1.3828277587890625e-05, 0.00010573863983154297, 0.0039825439453125, 0.00014889240264892578, 8.535385131835938e-05, 0.01611328125, 0.0017385482788085938, 0.01299285888671875, 0.00013971328735351562, 0.330322265625, 0.1197509765625, 0.1512451171875, 0.0003058910369873047], "tokens": [291, 4906, 32, 1689, 35619, 7170, 291, 4906, 32, 1689, 26, 928, 293, 291, 4906, 32, 1689, 9442, 96, 895, 584, 434, 2354, 1628, 291, 47643, 3334, 291, 1477, 280, 943, 474, 225, 35, 45, 291, 943, 280, 1340, 32, 7142, 9442, 96, 370, 1477, 293, 397, 320, 397, 442, 4906, 32]}
{"line_number": 87, "line_type": "original", "code": "    b.append(error.description);", "entropy": 2.650390625, "is_bug_line": false, "sus_score": 0.5802916288375854, "per_token_entropy": [4.98828125, 3.826171875, 0.0601806640625, 0.029876708984375, 1.4130859375, 7.36328125, 0.0195159912109375, 6.0234375, 0.1322021484375], "tokens": [264, 323, 32, 1689, 26, 731, 32, 2310, 293]}
{"line_number": 87, "line_type": "generated", "code": "\n      StringBuilder b = new StringBuilder();\n      for (int i = region.getStartingLineNumber();\n           i <= region.getEndingLineNumber(); i++) {\n        b.append(String.format(\"%\" + numberLength + \"d", "entropy": 0.153564453125, "is_bug_line": false, "sus_score": 0.5802916288375854, "per_token_entropy": [0.272216796875, 0.8388671875, 0.52099609375, 0.001277923583984375, 0.004886627197265625, 0.00015473365783691406, 0.295654296875, 0.1085205078125, 0.91015625, 0.00449371337890625, 0.07684326171875, 0.310302734375, 0.00843048095703125, 0.263427734375, 6.115436553955078e-05, 0.11285400390625, 0.1983642578125, 0.009033203125, 0.049163818359375, 0.37939453125, 0.002742767333984375, 0.06671142578125, 0.00127410888671875, 0.00015115737915039062, 0.0002942085266113281, 0.001800537109375, 1.0967254638671875e-05, 0.00601959228515625, 0.368896484375, 0.007541656494140625, 0.0016412734985351562, 0.034088134765625, 0.783203125, 0.0008063316345214844, 0.0288238525390625, 0.19287109375, 0.55126953125, 0.006072998046875, 0.002193450927734375, 0.2373046875, 0.384521484375, 0.00437164306640625, 0.10369873046875, 9.000301361083984e-05, 0.004791259765625, 0.00930023193359375, 0.054779052734375], "tokens": [397, 9706, 323, 280, 537, 9706, 473, 397, 436, 308, 410, 595, 280, 6699, 32, 371, 15624, 29690, 473, 2607, 595, 2511, 6699, 32, 371, 42360, 29690, 473, 595, 1987, 301, 291, 323, 32, 1689, 26, 652, 32, 1643, 4912, 20, 474, 1451, 2380, 474, 313, 86]}
{"line_number": 88, "line_type": "original", "code": "    b.append('\\n');", "entropy": 1.787109375, "is_bug_line": false, "sus_score": 0.5802916288375854, "per_token_entropy": [4.3515625, 6.23828125, 0.076904296875, 0.066162109375, 1.74609375, 0.01554107666015625, 0.01311492919921875], "tokens": [264, 323, 32, 1689, 9442, 96, 895]}
{"line_number": 88, "line_type": "generated", "code": "\n      // start line number\n      int startLine = region.getStartingLineNumber();\n      // end line number\n      int endLine = region.getEndingLineNumber();\n      // line number length\n      int lineLength = Integer.toString(endLine).length();\n\n     ", "entropy": 0.474365234375, "is_bug_line": false, "sus_score": 0.5802916288375854, "per_token_entropy": [0.1962890625, 1.33203125, 3.66796875, 1.5869140625, 0.55712890625, 0.84619140625, 0.2548828125, 0.56982421875, 1.17578125, 0.2081298828125, 0.0288238525390625, 0.0001474618911743164, 0.18115234375, 0.177001953125, 0.0053558349609375, 0.0274810791015625, 0.384521484375, 0.7734375, 1.6787109375, 0.013214111328125, 0.018341064453125, 0.3125, 0.00527191162109375, 0.0171051025390625, 0.0017175674438476562, 0.0083465576171875, 0.004947662353515625, 8.404254913330078e-05, 0.00020873546600341797, 0.0027675628662109375, 1.3113021850585938e-05, 0.020050048828125, 0.55126953125, 0.47265625, 2.5234375, 1.1943359375, 2.869140625, 0.68505859375, 0.10882568359375, 0.6953125, 0.345703125, 0.01178741455078125, 0.301513671875, 0.001377105712890625, 0.0009102821350097656, 0.0005784034729003906, 0.1636962890625, 1.239776611328125e-05, 0.08172607421875, 0.00019943714141845703, 0.006015777587890625, 0.6005859375], "tokens": [397, 434, 1477, 1628, 1451, 397, 629, 1477, 1811, 280, 6699, 32, 371, 15624, 29690, 473, 397, 434, 943, 1628, 1451, 397, 629, 943, 1811, 280, 6699, 32, 371, 42360, 29690, 473, 397, 434, 1628, 1451, 3104, 397, 629, 1628, 2380, 280, 4401, 32, 3108, 26, 416, 1811, 547, 1322, 473, 1687]}
{"line_number": 122, "line_type": "original", "code": "      return line;", "entropy": 3.90234375, "is_bug_line": false, "sus_score": 0.57760089635849, "per_token_entropy": [2.111328125, 5.8046875, 7.578125, 0.11248779296875], "tokens": [647, 442, 1628, 45]}
{"line_number": 122, "line_type": "generated", "code": "\n        }\n      }\n      return builder.toString();\n    }\n  }\n\n  /**\n   * Formats a region by appending line numbers in front, e.g.\n   * <pre>  10", "entropy": 0.300537109375, "is_bug_line": false, "sus_score": 0.57760089635849, "per_token_entropy": [0.68994140625, 0.003993988037109375, 0.0382080078125, 0.0003960132598876953, 0.2413330078125, 0.1348876953125, 0.10284423828125, 0.0005369186401367188, 0.779296875, 0.005519866943359375, 0.05511474609375, 0.0007662773132324219, 0.1026611328125, 0.005340576171875, 0.6015625, 0.407470703125, 0.150390625, 0.0005645751953125, 0.8916015625, 0.0009016990661621094, 0.3740234375, 0.0914306640625, 0.2471923828125, 1.1845703125, 0.0020427703857421875, 0.67578125, 0.11480712890625, 0.296630859375, 0.0288543701171875, 0.325439453125, 0.102783203125, 0.00022542476654052734, 0.0002048015594482422, 0.007404327392578125, 0.00812530517578125, 0.000499725341796875, 0.03533935546875, 0.005596160888671875, 0.091064453125, 1.8515625, 1.6220703125, 1.3486328125], "tokens": [291, 320, 397, 320, 397, 442, 4906, 32, 3108, 473, 284, 320, 334, 320, 719, 1022, 664, 319, 3720, 1966, 312, 6699, 810, 1123, 4013, 1628, 7515, 328, 8432, 30, 484, 32, 89, 32, 664, 319, 333, 1001, 48, 261, 35, 34]}
{"line_number": 200, "line_type": "original", "code": "", "entropy": 0.443359375, "is_bug_line": false, "sus_score": 0.5729350447654724, "per_token_entropy": [0.443359375], "tokens": [203]}
{"line_number": 200, "line_type": "generated", "code": "", "entropy": "10", "is_bug_line": false, "sus_score": 0.5729350447654724, "per_token_entropy": [], "tokens": []}
{"line_number": 82, "line_type": "original", "code": "    }", "entropy": 2.623046875, "is_bug_line": false, "sus_score": 0.5654643177986145, "per_token_entropy": [5.0625, 0.1824951171875], "tokens": [264, 320]}
{"line_number": 82, "line_type": "generated", "code": "\n      }\n\n      // determine minimum number of digits\n      int digits = 1;\n      for (int i = region.getStart(); i <= region.getEnd(); i++) {\n        digits = Math.max(digits, (int) Math.log10", "entropy": 0.441650390625, "is_bug_line": false, "sus_score": 0.5654643177986145, "per_token_entropy": [0.285400390625, 0.2122802734375, 1.0361328125, 1.498046875, 3.791015625, 3.041015625, 1.4560546875, 0.006740570068359375, 0.1820068359375, 1.193359375, 0.09783935546875, 1.0751953125, 0.0277862548828125, 0.5263671875, 0.294677734375, 0.024810791015625, 0.01123809814453125, 0.99853515625, 0.044891357421875, 0.023284912109375, 0.456787109375, 0.00720977783203125, 1.5078125, 0.00010704994201660156, 0.499755859375, 1.951171875, 0.0257720947265625, 0.84814453125, 0.00127410888671875, 4.3392181396484375e-05, 0.006053924560546875, 0.009307861328125, 0.03570556640625, 0.006763458251953125, 0.0009212493896484375, 0.007686614990234375, 0.63232421875, 0.00859832763671875, 0.0843505859375, 0.00018584728240966797, 0.0006871223449707031, 0.004871368408203125, 0.032867431640625, 9.453296661376953e-05, 0.499755859375, 0.075439453125, 0.0128173828125, 0.2166748046875, 0.0006189346313476562, 0.1702880859375, 0.034393310546875, 8.618831634521484e-05], "tokens": [397, 320, 1687, 434, 9921, 9340, 1451, 432, 16105, 397, 629, 16105, 280, 225, 35, 45, 397, 436, 308, 410, 595, 280, 6699, 32, 31862, 473, 595, 2511, 6699, 32, 45709, 473, 595, 1987, 301, 291, 16105, 280, 4175, 32, 1449, 26, 17980, 30, 308, 410, 27, 4175, 32, 751, 35, 34]}
{"line_number": 85, "line_type": "original", "code": "    b.append(\" - \");", "entropy": 2.841796875, "is_bug_line": false, "sus_score": 0.5608783960342407, "per_token_entropy": [7.01171875, 3.69921875, 0.0565185546875, 0.017913818359375, 2.1796875, 6.4765625, 0.450439453125], "tokens": [264, 323, 32, 1689, 440, 429, 7170]}
{"line_number": 85, "line_type": "generated", "code": "\n      int maxDigits = 1 + (int) Math.log10(code.length());\n      StringBuilder b = new StringBuilder();\n      for (int i = region.getBegin(); i < region.getEnd(); i++) {\n        if (i", "entropy": 0.3544921875, "is_bug_line": false, "sus_score": 0.5608783960342407, "per_token_entropy": [0.57373046875, 0.99169921875, 1.55859375, 1.9619140625, 0.0282745361328125, 0.6513671875, 0.416015625, 0.759765625, 0.6962890625, 0.0723876953125, 0.041168212890625, 0.2392578125, 0.0002682209014892578, 0.51904296875, 0.0152587890625, 6.461143493652344e-05, 0.018341064453125, 0.2120361328125, 0.0006442070007324219, 0.221435546875, 0.2587890625, 0.6904296875, 0.54931640625, 0.53662109375, 0.001033782958984375, 0.003475189208984375, 0.00014507770538330078, 0.385498046875, 0.235595703125, 0.96240234375, 0.0029697418212890625, 0.024505615234375, 0.3603515625, 0.006580352783203125, 0.630859375, 7.128715515136719e-05, 1.361328125, 0.59814453125, 0.71044921875, 0.0303497314453125, 0.0966796875, 0.001373291015625, 3.9696693420410156e-05, 0.03692626953125, 0.00870513916015625, 0.0692138671875, 0.0254669189453125, 0.0004138946533203125, 0.02667236328125, 1.5712890625, 0.0738525390625, 0.207763671875], "tokens": [397, 629, 1769, 22326, 280, 225, 35, 474, 308, 410, 27, 4175, 32, 751, 35, 34, 26, 687, 32, 1322, 1035, 397, 9706, 323, 280, 537, 9706, 473, 397, 436, 308, 410, 595, 280, 6699, 32, 371, 5942, 473, 595, 333, 6699, 32, 45709, 473, 595, 1987, 301, 291, 415, 308, 91]}
{"line_number": 145, "line_type": "original", "code": "        String line;", "entropy": 3.314453125, "is_bug_line": false, "sus_score": 0.5478875637054443, "per_token_entropy": [7.44140625, 4.57421875, 0.82421875, 0.41455078125], "tokens": [351, 892, 1628, 45]}
{"line_number": 145, "line_type": "generated", "code": "\n  private static final ExcerptFormatter LINE = new LineNumberingFormatter();", "entropy": 0.398681640625, "is_bug_line": false, "sus_score": 0.5478875637054443, "per_token_entropy": [1.2763671875, 1.2109375, 0.25, 1.10546875, 0.8447265625, 0.00011026859283447266, 0.004863739013671875, 0.433349609375, 0.53564453125, 0.297607421875, 0.01230621337890625, 0.00022602081298828125, 2.8967857360839844e-05, 9.226799011230469e-05, 0.00760650634765625], "tokens": [334, 945, 907, 1158, 1283, 21112, 8736, 26543, 280, 537, 7064, 1918, 299, 8736, 473]}
