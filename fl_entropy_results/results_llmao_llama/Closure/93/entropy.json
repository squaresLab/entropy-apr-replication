{"line_number": 872, "line_type": "original", "code": "      Preconditions.checkState(isNamespacePlaceholder(decl));", "entropy": 1.3972188234329224, "is_bug_line": false, "sus_score": 0.32144, "per_token_entropy": [11.016132354736328, 6.711804389953613, 0.018526606261730194, 0.0017877324717119336, 0.007257526274770498, 0.005467105656862259, 0.5731988549232483, 0.1124400794506073, 1.320318341255188, 0.46645963191986084, 0.0153986606746912, 0.0027699219062924385, 0.00285075674764812, 0.6715313196182251, 0.03233688697218895], "tokens": [539, 4721, 1116, 2187, 29889, 3198, 2792, 29898, 275, 23335, 22150, 7694, 29898, 27787, 2483]}
{"line_number": 872, "line_type": "generated", "code": "\n  /**\n   * @return Whether the node is a {@code require} call.\n   */\n  private boolean isRequireNode(Node n) {\n    if (n.getType() != Token.CALL) {\n", "entropy": 0.3376820683479309, "is_bug_line": false, "sus_score": 0.32144, "per_token_entropy": [0.07084386050701141, 0.1826619803905487, 0.5089053511619568, 0.05886033922433853, 0.004301106557250023, 0.001046586548909545, 3.073328733444214, 0.2839674949645996, 0.5429914593696594, 0.36285391449928284, 1.403632640838623, 0.2896205186843872, 0.32712361216545105, 1.9368468523025513, 0.03570447489619255, 1.795682430267334, 0.6427366137504578, 0.9315245151519775, 0.7945533394813538, 0.023655220866203308, 0.0013994909822940826, 0.03757457807660103, 0.000927256653085351, 0.015826916322112083, 0.16486145555973053, 0.5960233807563782, 0.015733277425169945, 0.3628869950771332, 0.0006559127941727638, 0.15913692116737366, 0.005194738041609526, 0.010922643356025219, 0.25338423252105713, 0.05446707084774971, 0.0007229813490994275, 0.0010684978915378451, 0.04157629609107971, 1.1563315391540527, 0.3669899106025696, 0.12345663458108902, 0.15122896432876587, 0.10763131827116013, 0.07991740107536316, 0.0007936188485473394, 0.30147767066955566, 0.00028832571115344763, 0.0009070096421055496, 0.08694376051425934, 0.00015853578224778175, 0.1823522001504898, 0.004861914087086916, 0.002925998531281948], "tokens": [13, 29871, 7762, 13, 259, 334, 732, 2457, 26460, 278, 2943, 338, 263, 26633, 401, 1996, 29913, 1246, 29889, 13, 259, 3776, 13, 29871, 2024, 7223, 338, 1123, 1548, 4247, 29898, 4247, 302, 29897, 426, 13, 1678, 565, 313, 29876, 29889, 657, 1542, 580, 2804, 25159, 29889, 29907, 9818, 29897, 426, 13]}
{"line_number": 332, "line_type": "original", "code": "    // If both of those things are true, then we can rewrite:", "entropy": 2.6767876148223877, "is_bug_line": false, "sus_score": 0.29871, "per_token_entropy": [7.78549337387085, 1.668225646018982, 4.210693359375, 5.240476608276367, 2.2599098682403564, 3.8391191959381104, 2.392595052719116, 0.2646627724170685, 0.025013182312250137, 0.15297909080982208, 0.808069109916687, 0.8923951983451843, 2.101097345352173, 5.09541654586792, 3.415667772293091], "tokens": [268, 849, 960, 1716, 310, 1906, 2712, 526, 1565, 29892, 769, 591, 508, 10683, 29901]}
{"line_number": 332, "line_type": "generated", "code": "\n          baseClassNode = callNode.getLastChild();\n        }\n      }\n\n      if (baseClassNode == null) {\n        reportBadBaseClassUse(t, n,\n            \"Could not find enclosing", "entropy": 0.12925994396209717, "is_bug_line": false, "sus_score": 0.29871, "per_token_entropy": [0.05952482298016548, 0.34953051805496216, 0.6404162645339966, 0.0015240018256008625, 0.01797434873878956, 0.0002926159941125661, 0.05270398035645485, 1.9192511899746023e-05, 0.006020032335072756, 0.00038747431244701147, 0.0013067525578662753, 0.00020251607929822057, 0.11929008364677429, 0.005230552051216364, 0.3636719584465027, 0.002038069535046816, 0.0956769734621048, 0.030401334166526794, 0.0003924791526515037, 0.041927531361579895, 0.5214481353759766, 0.0810953751206398, 0.24133062362670898, 0.0323147252202034, 0.04619400575757027, 1.764281842042692e-05, 0.0006324436399154365, 0.33589431643486023, 0.003303548786789179, 0.17993247509002686, 0.00018153927521780133, 0.0007066613179631531, 0.022281890735030174, 0.14216995239257812, 0.002740677213296294, 0.00023803261865396053, 0.002716662595048547, 0.0008945039589889348, 0.0013187768636271358, 0.4348575174808502, 0.0003995097358711064, 0.008799702860414982, 0.0008582960581406951, 1.0034574270248413, 0.08288837969303131, 0.03937850147485733, 0.9813533425331116, 0.0815824419260025, 0.18342268466949463, 0.5001488924026489, 0.0004058252670802176, 2.038458114839159e-05], "tokens": [13, 3986, 2967, 2385, 4247, 353, 1246, 4247, 29889, 657, 8897, 5938, 890, 13, 4706, 500, 13, 418, 500, 13, 13, 418, 565, 313, 3188, 2385, 4247, 1275, 1870, 29897, 426, 13, 4706, 3461, 22050, 5160, 2385, 11403, 29898, 29873, 29892, 302, 29892, 13, 9651, 376, 23323, 451, 1284, 427, 11291, 292]}
{"line_number": 411, "line_type": "original", "code": "        reportBadBaseClassUse(", "entropy": 2.1994049549102783, "is_bug_line": false, "sus_score": 0.2814, "per_token_entropy": [10.007061958312988, 5.108565807342529, 0.1640510857105255, 0.027622006833553314, 0.011424243450164795, 0.0118305254727602, 0.06527825444936752], "tokens": [308, 3461, 22050, 5160, 2385, 11403, 29898]}
{"line_number": 411, "line_type": "generated", "code": "\n  }\n\n  /**\n   * Inlines the call to the super class constructor.\n   * @param n The node to inline.\n   */\n  private void inlineConstructor(NodeTraversal t, Node n) {\n", "entropy": 0.6428783535957336, "is_bug_line": false, "sus_score": 0.2814, "per_token_entropy": [0.09282876551151276, 0.23990586400032043, 0.010017595253884792, 0.017865218222141266, 0.9733808040618896, 0.15369482338428497, 0.5623834133148193, 0.5504462718963623, 0.006154632195830345, 0.0012066233903169632, 4.127777099609375, 1.455030083656311, 1.2643702030181885, 3.4199349880218506, 0.2082643210887909, 1.385695219039917, 0.8410974144935608, 1.874180555343628, 2.1600921154022217, 0.9182460308074951, 0.24527201056480408, 0.034133683890104294, 0.49251216650009155, 1.2710508108139038, 0.2299688309431076, 1.800455927848816, 0.3470480442047119, 1.528899908065796, 1.247332215309143, 1.018528938293457, 0.37242570519447327, 0.09671328216791153, 0.005464497487992048, 1.0538851022720337, 0.0004614718782249838, 0.03484703600406647, 0.06721752882003784, 0.04026813805103302, 0.26108089089393616, 0.9985455274581909, 0.9082286357879639, 0.14193765819072723, 0.5965725779533386, 3.2782016205601394e-05, 0.0001308832288486883, 0.00151305110193789, 0.0014569868799299002, 0.023486046120524406, 0.09658265858888626, 0.24952492117881775, 0.0007077334448695183, 0.0008166077313944697], "tokens": [13, 29871, 500, 13, 13, 29871, 7762, 13, 259, 334, 512, 9012, 278, 1246, 304, 278, 2428, 770, 5823, 29889, 13, 259, 334, 732, 3207, 302, 450, 2943, 304, 10583, 29889, 13, 259, 3776, 13, 29871, 2024, 1780, 10583, 23770, 29898, 4247, 5323, 874, 284, 260, 29892, 9071, 302, 29897, 426, 13]}
{"line_number": 147, "line_type": "original", "code": "      case Token.CALL:", "entropy": 1.438125491142273, "is_bug_line": false, "sus_score": 0.27634, "per_token_entropy": [7.781702041625977, 0.8947030901908875, 0.08694693446159363, 0.0001294529065489769, 1.2806466817855835, 0.019937586039304733, 0.002812836552038789], "tokens": [539, 1206, 25159, 29889, 29907, 9818, 29901]}
{"line_number": 147, "line_type": "generated", "code": "\n      case Token.NAME:\n        if (n.getString().equals(\"goog\")) {\n          compiler.report(JSError.make(\n              t.getSourceName(), n, MISSING_PROVIDE_ERROR", "entropy": 0.3230685591697693, "is_bug_line": false, "sus_score": 0.27634, "per_token_entropy": [0.055336397141218185, 1.2242443561553955, 0.3953495919704437, 0.10014262795448303, 7.915183232398704e-05, 1.8112062215805054, 0.0007644353318028152, 0.07577280700206757, 0.043020352721214294, 1.1525554656982422, 0.30909430980682373, 1.4446449279785156, 0.013032026588916779, 0.05846114456653595, 0.004309771116822958, 0.07291258126497269, 0.3228990435600281, 0.6573275923728943, 4.172316494077677e-06, 0.3164093792438507, 0.0008175606490112841, 0.0015432840446010232, 0.007555717136710882, 1.6076736450195312, 0.002088390989229083, 0.0878702700138092, 0.12769970297813416, 0.5326642990112305, 6.735097849741578e-05, 0.0030853785574436188, 0.00021407696476671845, 0.0009560781763866544, 1.2485175132751465, 0.1453094333410263, 0.6339432597160339, 0.029357487335801125, 0.0014017528155818582, 0.12235750257968903, 6.8662193370983e-05, 0.0006201728247106075, 0.06185724213719368, 0.014080350287258625, 2.5190677642822266, 0.39250272512435913, 3.6954811548639555e-06, 9.83428253675811e-05, 2.098061486321967e-05, 1.1608073711395264, 0.014118785969913006, 0.00018940561858471483, 0.010383511893451214, 0.015057943761348724], "tokens": [13, 418, 1206, 25159, 29889, 5813, 29901, 13, 4706, 565, 313, 29876, 29889, 13719, 2141, 10954, 703, 1484, 468, 5783, 426, 13, 3986, 6516, 29889, 12276, 29898, 29967, 29173, 29889, 5675, 29898, 13, 795, 260, 29889, 657, 4435, 1170, 3285, 302, 29892, 341, 29902, 1799, 4214, 29918, 8618, 13044, 29923, 29918, 11432]}
{"line_number": 819, "line_type": "original", "code": "        return makeAssignmentExprNode(namespace, firstNode);", "entropy": 2.1953518390655518, "is_bug_line": false, "sus_score": 0.25845, "per_token_entropy": [6.491456031799316, 9.532685279846191, 2.0845911502838135, 2.879246473312378, 0.1436402052640915, 0.15593321621418, 0.10579176992177963, 0.28574177622795105, 0.8757040500640869, 0.6888831853866577, 5.110474586486816, 0.04246637970209122, 0.14295896887779236], "tokens": [308, 736, 1207, 7900, 10194, 21176, 4247, 29898, 22377, 29892, 937, 4247, 416]}
{"line_number": 819, "line_type": "generated", "code": "\n          createNamespaceLiteral()));\n      decl.copyInformationFromForTree(node);\n      return decl;\n    }\n\n    /**\n     * Creates a dotted namespace assignment expression\n     * (e.g.", "entropy": 0.19439607858657837, "is_bug_line": false, "sus_score": 0.25845, "per_token_entropy": [0.4990978538990021, 1.098596215248108, 0.5628817081451416, 0.00758139044046402, 0.0014959108084440231, 0.00032264748006127775, 0.19926519691944122, 0.0013080621138215065, 0.4175938367843628, 0.20814254879951477, 0.003583677811548114, 1.0111385583877563, 0.0005231918767094612, 0.0002227773511549458, 0.15938332676887512, 0.002782047726213932, 0.0010609956225380301, 0.004560664761811495, 0.00333574740216136, 0.00093606993323192, 0.05939171463251114, 0.14680297672748566, 0.0027829986065626144, 0.0017269235104322433, 0.0004885195521637797, 0.007913073524832726, 0.0004887578543275595, 0.0021941415034234524, 0.3375495374202728, 0.0782676637172699, 0.3418344259262085, 0.06349487602710724, 0.0007890925044193864, 0.00019894051365554333, 1.499716877937317, 0.0005567907355725765, 0.18549785017967224, 0.9794535636901855, 6.401333666872233e-05, 0.10286922752857208, 1.3625043630599976, 0.09166181832551956, 0.21908459067344666, 0.00030620177858509123, 0.00038985759601928294, 0.0464448519051075, 0.0024970562662929296, 6.3774932641536e-05, 4.768258077092469e-05, 0.0009091534884646535], "tokens": [13, 3986, 1653, 23335, 24938, 284, 20465, 13, 418, 4845, 29889, 8552, 20350, 4591, 2831, 9643, 29898, 3177, 416, 13, 418, 736, 4845, 29936, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 6760, 1078, 263, 270, 15048, 7397, 12827, 4603, 13, 268, 334, 313, 29872, 29889, 29887, 29889]}
