{"line_number": 518, "line_type": "original", "code": "   *", "entropy": 6.112608909606934, "is_bug_line": false, "sus_score": 0.36427, "per_token_entropy": [6.785062313079834, 5.440155506134033], "tokens": [1678, 334]}
{"line_number": 518, "line_type": "generated", "code": "\n  /**\n   * Given an expression by its root and sub-expression n, return true if there\n   * the predicate is true for some expression on the left or right of n.\n   *\n   * Example:\n   *\n", "entropy": 0.13852116465568542, "is_bug_line": false, "sus_score": 0.36427, "per_token_entropy": [0.04270605370402336, 0.27436408400535583, 0.37299808859825134, 0.040169429033994675, 0.016616519540548325, 0.0009666775586083531, 1.2157549858093262, 0.3741706311702728, 0.06916661560535431, 0.08703577518463135, 0.005859934259206057, 0.006677219644188881, 0.0489518903195858, 0.06718720495700836, 0.009445147588849068, 0.003917045891284943, 0.017324311658740044, 0.010501954704523087, 0.12420433759689331, 0.08207672834396362, 0.02499760314822197, 0.34882983565330505, 0.007321550045162439, 0.04174724221229553, 0.00047994061606004834, 0.24417658150196075, 0.013963975943624973, 0.008505192585289478, 0.009102986194193363, 0.026997357606887817, 0.13801288604736328, 0.11249291896820068, 0.4198695123195648, 0.11885608732700348, 0.7674371600151062, 0.4875643253326416, 0.2975250482559204, 0.03868076577782631, 0.010599387809634209, 0.03357822448015213, 0.010158385150134563, 0.13662928342819214, 0.1476736068725586, 0.025566913187503815, 0.021768447011709213, 0.005573803558945656, 0.030547143891453743, 0.011266658082604408, 0.006170507986098528, 0.5531609654426575, 0.00455627404153347, 0.22919486463069916], "tokens": [13, 29871, 7762, 13, 259, 334, 11221, 385, 4603, 491, 967, 3876, 322, 1014, 29899, 17471, 302, 29892, 736, 1565, 565, 727, 13, 259, 334, 278, 24384, 338, 1565, 363, 777, 4603, 373, 278, 2175, 470, 1492, 310, 302, 29889, 13, 259, 334, 13, 259, 334, 8741, 29901, 13, 259, 334, 13]}
{"line_number": 489, "line_type": "original", "code": "      NodeTraversal.traverse(compiler, n, gatherCb);", "entropy": 1.2669345140457153, "is_bug_line": false, "sus_score": 0.34575, "per_token_entropy": [10.087685585021973, 5.197254657745361, 2.1753005981445312, 0.0006524579366669059, 0.0024635223671793938, 0.2157977670431137, 0.05295862630009651, 0.001690745702944696, 0.16662566363811493, 0.5386044383049011, 0.0017007424030452967, 1.357132077217102, 0.09285136312246323, 1.5201096534729004, 0.10269605368375778, 0.012662487104535103, 0.011699868366122246], "tokens": [539, 9071, 5323, 874, 284, 29889, 3018, 3901, 29898, 21789, 29892, 302, 29892, 11705, 29907, 29890, 416]}
{"line_number": 489, "line_type": "generated", "code": "\n\n  private static boolean isDefinedBefore(Node n, Node expressionRoot) {\n    return checkLeftOf(n, expressionRoot, new Predicate<Node>() {\n      @Override\n      public boolean apply(Node n) {", "entropy": 0.38423410058021545, "is_bug_line": false, "sus_score": 0.34575, "per_token_entropy": [0.032485414296388626, 0.7154579758644104, 0.0994826927781105, 1.5556042194366455, 0.7214705348014832, 0.6074659824371338, 0.5187622308731079, 4.185349464416504, 1.052593469619751, 2.118931293487549, 0.46042346954345703, 0.5523715019226074, 0.7721476554870605, 0.20100614428520203, 0.10691042989492416, 1.6372519731521606, 0.023835891857743263, 0.37075287103652954, 0.0018208129331469536, 0.0017118098912760615, 0.05212230607867241, 0.8536643385887146, 0.2782387435436249, 0.5630307793617249, 0.000990496133454144, 0.0014512732159346342, 0.11684566736221313, 0.003218353958800435, 0.006597996223717928, 0.0003177614707965404, 0.0010221739066764712, 1.0967425107955933, 0.11380956321954727, 0.001908744452521205, 0.0028949754778295755, 0.0010700459824874997, 0.04011033847928047, 0.0015380469849333167, 0.0009188005933538079, 0.2577091157436371, 0.07577987760305405, 0.0011152960360050201, 0.12374834716320038, 0.005244426429271698, 0.0033585589844733477, 0.001994169782847166, 0.0012206730898469687, 0.009503600187599659, 0.0014181805308908224, 0.6048983931541443, 0.020870130509138107, 0.0009831124916672707], "tokens": [13, 13, 29871, 2024, 2294, 7223, 338, 3206, 1312, 18743, 29898, 4247, 302, 29892, 9071, 4603, 10303, 29897, 426, 13, 1678, 736, 1423, 8091, 2776, 29898, 29876, 29892, 4603, 10303, 29892, 716, 21099, 9593, 29966, 4247, 16917, 426, 13, 418, 732, 4640, 13, 418, 970, 7223, 3394, 29898, 4247, 302, 29897, 426]}
{"line_number": 350, "line_type": "original", "code": "", "entropy": 4.5066022872924805, "is_bug_line": false, "sus_score": 0.33915, "per_token_entropy": [4.748454570770264, 4.2647504806518555], "tokens": [29871, 13]}
{"line_number": 350, "line_type": "generated", "code": "\n                 cfg.getDirectedGraphNode(useCfgNode),\n                 new Predicate<Node>() {\n                   @Override\n                   public boolean apply(Node input) {\n                     return NodeUtil.mayHaveSideEffect", "entropy": 0.15105846524238586, "is_bug_line": false, "sus_score": 0.33915, "per_token_entropy": [0.8452096581459045, 0.15544717013835907, 0.18447864055633545, 0.00025912740966305137, 0.008939837105572224, 0.0010444429935887456, 0.012000035494565964, 7.116541382856667e-05, 0.00015233787416946143, 0.0010970771545544267, 0.0038239466957747936, 0.05298621207475662, 0.004964406136423349, 0.00010656742961145937, 0.00010561384988250211, 0.3846324384212494, 0.030282218009233475, 0.48899751901626587, 1.2462719678878784, 0.911607563495636, 0.0017933252966031432, 0.007649415638297796, 0.35021063685417175, 0.01394798792898655, 0.0009866851614788175, 0.014299190603196621, 0.08864886313676834, 0.2769639790058136, 0.047528088092803955, 0.0005246216314844787, 0.01636628806591034, 0.004151179920881987, 0.019234098494052887, 0.0030119314324110746, 0.002133833011612296, 0.0009064141195267439, 0.009231857024133205, 0.0014971011551097035, 0.2607015371322632, 0.0018156962469220161, 0.00021443451987579465, 0.0030213205609470606, 0.05421946942806244, 0.023858707398176193, 0.5669444799423218, 1.629570722579956, 0.0003408804477658123, 0.0005872909096069634, 0.08919910341501236, 0.00495171407237649, 0.027930647134780884, 0.00012027494085486978], "tokens": [13, 462, 274, 16434, 29889, 657, 17392, 287, 9527, 4247, 29898, 1509, 29907, 16434, 4247, 511, 13, 462, 716, 21099, 9593, 29966, 4247, 16917, 426, 13, 462, 259, 732, 4640, 13, 462, 259, 970, 7223, 3394, 29898, 4247, 1881, 29897, 426, 13, 462, 268, 736, 9071, 7270, 29889, 13029, 25559, 23908, 13971]}
{"line_number": 442, "line_type": "original", "code": "     * @param n A node that has a corresponding CFG node in the CFG.", "entropy": 2.5290627479553223, "is_bug_line": false, "sus_score": 0.32909, "per_token_entropy": [8.867666244506836, 5.247653007507324, 2.22705340385437, 1.288353681564331, 2.8728864192962646, 3.053079843521118, 1.059775471687317, 2.4168853759765625, 3.849766492843628, 1.4290655851364136, 6.288331031799316, 1.3451076745986938, 0.0008840228547342122, 0.19512462615966797, 2.6985816955566406, 1.6520004272460938, 2.756387710571289, 0.0020655503030866385, 0.8015204668045044], "tokens": [418, 334, 732, 3207, 302, 319, 2943, 393, 756, 263, 6590, 17861, 29954, 2943, 297, 278, 17861, 29954, 29889]}
{"line_number": 442, "line_type": "generated", "code": "\n  private class RemoveDeadCode extends AbstractPostOrderCallback {\n    private final ControlFlowGraph<Node> cfg;\n    private final Node externs;\n    private final Node root;\n\n    RemoveDeadCode(Node externs,", "entropy": 0.5051377415657043, "is_bug_line": false, "sus_score": 0.32909, "per_token_entropy": [0.04736790433526039, 0.9985823035240173, 1.3638851642608643, 1.7686805725097656, 3.585585117340088, 1.5854545831680298, 0.14085835218429565, 0.9113399982452393, 0.8756178617477417, 0.37905868887901306, 0.21509899199008942, 0.0016940779751166701, 0.0003778220561798662, 0.235112726688385, 0.0015268584247678518, 0.5240480899810791, 0.9948581457138062, 0.8878825902938843, 1.0180606842041016, 0.0004266782198101282, 0.020154565572738647, 0.09318602085113525, 0.003490310162305832, 0.0017049076268449426, 0.02694641798734665, 0.0009411911014467478, 0.008497273549437523, 0.0008827127167023718, 0.7506100535392761, 0.18648861348628998, 0.34112703800201416, 2.211158275604248, 2.652554988861084, 0.6073780059814453, 0.0024379552341997623, 0.4857921898365021, 0.07644735276699066, 0.18658684194087982, 0.4377332329750061, 0.21830503642559052, 0.010230482555925846, 0.0006653240998275578, 0.5809463858604431, 0.054061148315668106, 0.813400149345398, 0.00013219437096267939, 9.369411418447271e-05, 3.3854863431770355e-05, 0.02697577513754368, 0.8977513313293457, 0.029665246605873108, 0.005264348816126585], "tokens": [13, 29871, 2024, 770, 15154, 29928, 1479, 3399, 4988, 25513, 6747, 7514, 10717, 426, 13, 1678, 2024, 2186, 11264, 17907, 9527, 29966, 4247, 29958, 274, 16434, 29936, 13, 1678, 2024, 2186, 9071, 26478, 29936, 13, 1678, 2024, 2186, 9071, 3876, 29936, 13, 13, 1678, 15154, 29928, 1479, 3399, 29898, 4247, 26478, 29892]}
