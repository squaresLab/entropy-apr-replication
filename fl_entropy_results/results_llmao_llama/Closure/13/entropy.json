{"line_number": 168, "line_type": "original", "code": "    if (node.isFunction() || node.isScript()) {", "entropy": 1.3702625036239624, "is_bug_line": false, "sus_score": 0.28861, "per_token_entropy": [9.259340286254883, 5.41156530380249, 0.15145684778690338, 3.3736908435821533, 0.24695029854774475, 0.12872318923473358, 0.92409348487854, 0.9011463522911072, 0.0667979046702385, 0.03618460148572922, 0.003962167073041201, 0.006091955117881298, 0.015387038700282574, 0.017545605078339577, 0.011000699363648891], "tokens": [268, 565, 313, 3177, 29889, 275, 6678, 580, 3830, 2943, 29889, 275, 4081, 3101, 426]}
{"line_number": 168, "line_type": "generated", "code": "\n  private class ScopeState {\n    boolean changed = false;\n    boolean traverseChildScopes = true;\n  }\n\n  /**\n   * A peephole optimization.\n   */\n  private abstract class Abstract", "entropy": 0.3205746114253998, "is_bug_line": false, "sus_score": 0.28861, "per_token_entropy": [0.1094309389591217, 0.43760326504707336, 0.9626352190971375, 1.6961244344711304, 0.06244941055774689, 0.002337939338758588, 0.00719598401337862, 0.026321347802877426, 0.004767953883856535, 0.056140393018722534, 0.47763824462890625, 0.37799039483070374, 0.40549713373184204, 0.25896668434143066, 0.008063028566539288, 0.011344452388584614, 0.07495149224996567, 0.04021798446774483, 0.009407476522028446, 0.005777683109045029, 0.004814579151570797, 0.004790495615452528, 0.005762748885899782, 0.016361597925424576, 0.02913091890513897, 0.0049230074509978294, 0.009855539537966251, 0.36088383197784424, 0.01586962677538395, 0.011220214888453484, 0.6731597781181335, 0.10442628711462021, 1.7201709747314453, 0.08651517331600189, 0.005120852496474981, 0.003910633735358715, 2.0991461277008057, 2.2042136192321777, 0.02235661819577217, 0.0004549183649942279, 0.0007296522380784154, 0.1650048941373825, 1.7668077945709229, 0.376811683177948, 0.028210917487740517, 0.45338284969329834, 0.0015278107021003962, 0.0411306694149971, 1.060495138168335, 0.28913506865501404, 0.05770155042409897, 0.010993389412760735], "tokens": [13, 29871, 2024, 770, 317, 4338, 2792, 426, 13, 1678, 7223, 3939, 353, 2089, 29936, 13, 1678, 7223, 29370, 5938, 4421, 459, 267, 353, 1565, 29936, 13, 29871, 500, 13, 13, 29871, 7762, 13, 259, 334, 319, 1236, 29872, 561, 1772, 13883, 29889, 13, 259, 3776, 13, 29871, 2024, 9846, 770, 25513]}
{"line_number": 195, "line_type": "original", "code": "", "entropy": 4.038692474365234, "is_bug_line": false, "sus_score": 0.28149, "per_token_entropy": [3.808108329772949, 4.2692766189575195], "tokens": [29871, 13]}
{"line_number": 195, "line_type": "generated", "code": "\n  /**\n   * Make sure that all the optimizations have the current traversal so they\n   * can report errors.\n   */\n  private void beginTraversal() {\n    for (AbstractPeepholeOptimization", "entropy": 0.1242051050066948, "is_bug_line": false, "sus_score": 0.28149, "per_token_entropy": [0.058083049952983856, 0.20665039122104645, 0.7722628712654114, 0.06768286973237991, 0.0018234307644888759, 0.001727756578475237, 3.2785696983337402, 0.06871197372674942, 0.1176588386297226, 0.1108652651309967, 0.05174531787633896, 0.03858017921447754, 0.002161787124350667, 0.21884316205978394, 0.09816530346870422, 0.02531949244439602, 0.02022022195160389, 0.0015404274454340339, 0.02114083059132099, 0.009046637453138828, 0.004058933816850185, 0.0018032018560916185, 0.0017308506648987532, 0.0020368797704577446, 0.006620023399591446, 0.01729455217719078, 0.01540863886475563, 0.011086766608059406, 0.004614656325429678, 0.020072313025593758, 0.0013473490253090858, 0.019501851871609688, 0.18419787287712097, 0.014969751238822937, 0.08198481053113937, 0.018692879006266594, 0.0004631400224752724, 0.0012411518255248666, 0.25950536131858826, 0.0646752417087555, 0.019195392727851868, 0.25604814291000366, 0.18920326232910156, 0.0028572946321219206, 0.07836378365755081, 0.0022715735249221325, 0.0007640779949724674, 0.0015444743912667036, 0.0004661188868340105, 0.00481730792671442, 0.0002217047003796324, 0.0008069596369750798], "tokens": [13, 29871, 7762, 13, 259, 334, 8561, 1854, 393, 599, 278, 5994, 17063, 505, 278, 1857, 13310, 284, 577, 896, 13, 259, 334, 508, 3461, 4436, 29889, 13, 259, 3776, 13, 29871, 2024, 1780, 3380, 5323, 874, 284, 580, 426, 13, 1678, 363, 313, 9118, 29925, 3905, 561, 1772, 20624, 326, 2133]}
{"line_number": 152, "line_type": "original", "code": "    }", "entropy": 4.333481788635254, "is_bug_line": false, "sus_score": 0.27256, "per_token_entropy": [6.130418300628662, 2.5365452766418457], "tokens": [268, 500]}
{"line_number": 152, "line_type": "generated", "code": "\n    }\n  }\n\n  /**\n   * Make sure that all the optimizations have the current traversal so they\n   * can report errors.\n   */\n  private void endTraversal() {\n    for (Abstract", "entropy": 0.10773095488548279, "is_bug_line": false, "sus_score": 0.27256, "per_token_entropy": [0.21612107753753662, 0.8770651817321777, 0.07802093029022217, 0.004056203179061413, 0.22922131419181824, 0.003872397355735302, 0.0027353274635970592, 0.043704912066459656, 0.04301510006189346, 0.8023581504821777, 0.030444234609603882, 0.003801977029070258, 0.0023520919494330883, 1.2949192523956299, 0.016094645485281944, 0.20766595005989075, 0.08169153332710266, 0.03704893961548805, 0.017490433529019356, 0.006462508346885443, 0.7058171033859253, 0.3405676782131195, 0.03996763378381729, 0.005446357652544975, 0.0032580411061644554, 0.03583214804530144, 0.01578596420586109, 0.006856604013592005, 0.0028338772244751453, 0.0016701571876183152, 0.008537815883755684, 0.0467781126499176, 0.011539734899997711, 0.024023165926337242, 0.0112437903881073, 0.0026700582820922136, 0.010229657404124737, 0.0019919094629585743, 0.010393068194389343, 0.011467376723885536, 0.005159515421837568, 0.013963858596980572, 0.0014855550834909081, 0.0020808966364711523, 0.002245525596663356, 0.00350254587829113, 0.004992044065147638, 0.005038421601057053, 0.19996818900108337, 0.05913623049855232, 0.0040123919025063515, 0.005371660925447941], "tokens": [13, 1678, 500, 13, 29871, 500, 13, 13, 29871, 7762, 13, 259, 334, 8561, 1854, 393, 599, 278, 5994, 17063, 505, 278, 1857, 13310, 284, 577, 896, 13, 259, 334, 508, 3461, 4436, 29889, 13, 259, 3776, 13, 29871, 2024, 1780, 1095, 5323, 874, 284, 580, 426, 13, 1678, 363, 313, 9118]}
