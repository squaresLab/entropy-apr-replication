{"line_number": 1454, "line_type": "original", "code": "                  functionName, name, oType.toString(),", "entropy": 3.229377269744873, "is_bug_line": false, "sus_score": 0.61363, "per_token_entropy": [8.545561790466309, 2.3333749771118164, 5.4977827072143555, 2.9658102989196777, 1.8530967235565186, 6.003012180328369, 0.8082756996154785, 3.5318565368652344, 0.11461935937404633, 4.848021984100342, 0.38800865411758423, 1.863102912902832], "tokens": [462, 259, 740, 1170, 29892, 1024, 29892, 288, 1542, 29889, 7711, 3285]}
{"line_number": 1454, "line_type": "generated", "code": "\n        for (String name : functionType.getPropertyNames()) {\n          ObjectType interfaceType = functionType.getPropertyType(name)\n              .getImplicitPrototype();\n          if (interfaceType != null) {\n           ", "entropy": 0.27438902854919434, "is_bug_line": false, "sus_score": 0.61363, "per_token_entropy": [0.121912382543087, 0.5510920882225037, 1.8217577934265137, 0.0024852838832885027, 0.6008601188659668, 0.6185019612312317, 0.01149660348892212, 0.08239372074604034, 0.0022245917934924364, 0.004735089838504791, 0.2170124053955078, 0.4825078248977661, 0.013912955299019814, 0.0025900411419570446, 0.00023958197562023997, 0.0003190723655279726, 0.04044411703944206, 1.3917655944824219, 0.005786572117358446, 2.742776393890381, 0.20116360485553741, 0.027691464871168137, 1.1368625164031982, 0.003350479993969202, 0.014940508641302586, 0.4737863540649414, 0.10466938465833664, 0.0061719296500086784, 0.0019547895062714815, 0.019230591133236885, 0.6676538586616516, 0.006658865138888359, 0.2808906137943268, 0.001871978398412466, 0.037257641553878784, 0.17639556527137756, 4.458328112377785e-05, 0.06599808484315872, 0.00039295581518672407, 0.034434106200933456, 0.0015943447360768914, 0.06009345129132271, 0.5171372890472412, 0.11046569794416428, 0.09901280701160431, 0.0003321811091154814, 0.24338512122631073, 0.011537023819983006, 1.2157583236694336, 0.0007560970261693001, 0.0013619918609037995, 0.030560903251171112], "tokens": [13, 4706, 363, 313, 1231, 1024, 584, 740, 1542, 29889, 657, 4854, 8659, 3101, 426, 13, 3986, 4669, 1542, 5067, 1542, 353, 740, 1542, 29889, 657, 4854, 1542, 29898, 978, 29897, 13, 795, 869, 657, 24192, 4019, 1184, 10414, 890, 13, 3986, 565, 313, 13248, 1542, 2804, 1870, 29897, 426, 13, 9651]}
{"line_number": 1452, "line_type": "original", "code": "          compiler.report(", "entropy": 3.2252185344696045, "is_bug_line": false, "sus_score": 0.30007, "per_token_entropy": [7.5502028465271, 8.490744590759277, 0.012217329815030098, 0.060488853603601456, 0.012439403682947159], "tokens": [965, 6516, 29889, 12276, 29898]}
{"line_number": 1452, "line_type": "generated", "code": "\n        }\n      }\n    }\n\n    if (functionType.isInterface()) {\n      HashMap<String, ObjectType> properties =\n          new HashMap<String, ObjectType>();\n      HashMap<String, ObjectType> current", "entropy": 0.21888108551502228, "is_bug_line": false, "sus_score": 0.30007, "per_token_entropy": [0.050566915422677994, 0.3956557512283325, 0.006798470392823219, 0.004918025340884924, 0.7181689739227295, 0.0033639054745435715, 0.0015337619697675109, 0.5959099531173706, 0.0011882871622219682, 0.4837378263473511, 1.236271619796753, 0.09387573599815369, 1.1861203908920288, 0.20653587579727173, 0.25791049003601074, 0.015435519628226757, 0.02352551743388176, 0.062392741441726685, 0.5666911602020264, 0.07080832123756409, 0.00047886825632303953, 0.0011376821203157306, 0.07212729007005692, 2.5122313499450684, 0.0040582213550806046, 0.0011273226700723171, 0.00015317220822907984, 0.019451698288321495, 0.0009310677996836603, 0.0001833270798670128, 0.3408139944076538, 0.016385991126298904, 0.6649281978607178, 0.6977922320365906, 0.0626475065946579, 0.0036301210056990385, 0.0020192726515233517, 0.0004117832868359983, 7.354942499659956e-05, 0.001795467222109437, 1.9311717551317997e-05, 0.032554883509874344, 0.0008449559682048857, 0.033546868711709976, 0.8549957275390625, 0.00017736769223120064, 0.0004190520558040589, 0.00010299152199877426, 0.0018484188476577401, 0.00021562635083682835, 5.4238757002167404e-05, 0.07324866950511932], "tokens": [13, 4706, 500, 13, 418, 500, 13, 1678, 500, 13, 13, 1678, 565, 313, 2220, 1542, 29889, 275, 10448, 3101, 426, 13, 418, 23073, 29966, 1231, 29892, 4669, 1542, 29958, 4426, 353, 13, 3986, 716, 23073, 29966, 1231, 29892, 4669, 1542, 8295, 13, 418, 23073, 29966, 1231, 29892, 4669, 1542, 29958, 1857]}
{"line_number": 1791, "line_type": "original", "code": "   * @return true if the sub-tree n is a reference, false otherwise.", "entropy": 2.8719449043273926, "is_bug_line": false, "sus_score": 0.28904, "per_token_entropy": [4.847329616546631, 1.8563870191574097, 4.7271246910095215, 2.672424554824829, 4.920009613037109, 0.23912829160690308, 0.7286380529403687, 5.410128593444824, 4.383368968963623, 0.7506150007247925, 8.16518783569336, 1.6578612327575684, 2.0598039627075195, 2.672419548034668, 2.8751511573791504, 1.7270147800445557, 1.5320614576339722, 0.4703513979911804], "tokens": [1678, 334, 732, 2457, 1565, 565, 278, 1014, 29899, 8336, 302, 338, 263, 3407, 29892, 2089, 6467, 29889]}
{"line_number": 1791, "line_type": "generated", "code": "\n  /**\n   * Reports an error if the node's type is unknown.\n   */\n  private void reportUnknownTypeError(NodeTraversal t, Node n) {\n    JSType type = n.getJ", "entropy": 0.3719863295555115, "is_bug_line": false, "sus_score": 0.28904, "per_token_entropy": [0.15225352346897125, 0.5543117523193359, 1.1113390922546387, 0.04358235001564026, 0.05850881710648537, 0.0012974663404747844, 3.370000123977661, 0.5747416019439697, 0.9865504503250122, 0.36635565757751465, 0.6257750391960144, 0.32489460706710815, 1.8927624225616455, 1.415959358215332, 0.0002683041093405336, 0.2212512046098709, 0.3315960168838501, 1.5909837484359741, 0.36539480090141296, 0.2784283459186554, 0.1097365990281105, 0.30128857493400574, 0.0005466635921038687, 0.016413314267992973, 0.08604177832603455, 0.20091985166072845, 0.9204172492027283, 0.25846683979034424, 0.04746101796627045, 0.9614584445953369, 0.005889324937015772, 0.1014217734336853, 0.16882887482643127, 0.0001292145170737058, 7.188061863416806e-05, 0.011977420188486576, 0.00313101289793849, 0.024471940472722054, 0.06040233373641968, 0.10165957361459732, 0.002845288719981909, 0.0007494263118132949, 0.061346571892499924, 0.8464043736457825, 0.025210579857230186, 0.00012170527770649642, 0.18179623782634735, 0.006483827717602253, 0.5677274465560913, 0.001026222831569612, 0.00019012074335478246, 0.0023965705186128616], "tokens": [13, 29871, 7762, 13, 259, 334, 830, 4011, 385, 1059, 565, 278, 2943, 29915, 29879, 1134, 338, 9815, 29889, 13, 259, 3776, 13, 29871, 2024, 1780, 3461, 14148, 1542, 2392, 29898, 4247, 5323, 874, 284, 260, 29892, 9071, 302, 29897, 426, 13, 1678, 435, 1254, 668, 1134, 353, 302, 29889, 657, 29967]}
{"line_number": 1470, "line_type": "original", "code": "   * scope chain to use in name lookups as well as error reporting.", "entropy": 4.4292168617248535, "is_bug_line": false, "sus_score": 0.27217, "per_token_entropy": [3.707822561264038, 11.270963668823242, 10.680212020874023, 6.011414527893066, 3.61299467086792, 4.740757465362549, 3.5097808837890625, 5.322370529174805, 1.643612027168274, 0.030360858887434006, 6.792691230773926, 2.889301300048828, 0.1679762601852417, 6.775279998779297, 3.0473854541778564, 0.6645505428314209], "tokens": [1678, 334, 6874, 9704, 304, 671, 297, 1024, 1106, 14340, 408, 1532, 408, 1059, 23415, 29889]}
{"line_number": 1470, "line_type": "generated", "code": "\n      // check properties\n      validator.expectAllInterfaceProperties(t, n, functionType);\n<|mask:0|>\n    } else {\n      // Check if the function is an extern function\n      // and if it", "entropy": 0.6016908884048462, "is_bug_line": false, "sus_score": 0.27217, "per_token_entropy": [0.24679429829120636, 0.4697490930557251, 0.3876609206199646, 1.309165120124817, 0.28976017236709595, 0.031738851219415665, 0.0354008711874485, 0.2683383524417877, 0.00017998983094003052, 0.0008398343343287706, 0.07122215628623962, 0.3210209310054779, 0.08816970884799957, 0.011724375188350677, 0.0013580633094534278, 0.006552283186465502, 0.00036113892565481365, 0.002148583298549056, 0.0015230495482683182, 0.006343468092381954, 0.0003084660565946251, 0.006798943970352411, 0.003958248998969793, 0.9323268532752991, 0.0014578201808035374, 0.2618984580039978, 0.00411295285448432, 1.150747299194336, 0.006109965033829212, 0.7780432105064392, 0.2648409903049469, 0.20223304629325867, 0.0013923484366387129, 0.5935467481613159, 0.42574918270111084, 0.03800836205482483, 0.04533469304442406, 0.5241913795471191, 2.5655694007873535, 2.0340490341186523, 1.4099024534225464, 0.7369258999824524, 1.0192469358444214, 2.5628576278686523, 2.635343074798584, 1.1010878086090088, 1.2125699520111084, 0.053977120667696, 2.44783616065979, 2.3598430156707764, 1.433771014213562, 0.9238342046737671], "tokens": [13, 418, 849, 1423, 4426, 13, 418, 2854, 1061, 29889, 17854, 3596, 10448, 11857, 29898, 29873, 29892, 302, 29892, 740, 1542, 416, 13, 29966, 29989, 13168, 29901, 29900, 29989, 29958, 13, 1678, 500, 1683, 426, 13, 418, 849, 5399, 565, 278, 740, 338, 385, 3622, 740, 13, 418, 849, 322, 565, 372]}
{"line_number": 1767, "line_type": "original", "code": "            \"element type must match enum's type\");", "entropy": 3.9212422370910645, "is_bug_line": false, "sus_score": 0.26867, "per_token_entropy": [10.03050422668457, 5.032918453216553, 9.692326545715332, 3.0449867248535156, 3.908608913421631, 4.934360504150391, 1.332945466041565, 2.2871861457824707, 0.0009465504554100335, 2.0808491706848145, 0.788030743598938], "tokens": [632, 376, 5029, 1134, 1818, 1993, 14115, 29915, 29879, 1134, 1496]}
{"line_number": 1767, "line_type": "generated", "code": "\n      return unknownType;\n    }\n    return jsType;\n  }\n\n  /**\n   * This predicate is used to determine if the node represents an expression\n   * that is a Reference according to JavaScript definitions.\n   *", "entropy": 0.2280409187078476, "is_bug_line": false, "sus_score": 0.26867, "per_token_entropy": [0.2962019443511963, 0.8698808550834656, 0.9194386005401611, 1.2142091989517212, 0.00016878610767889768, 0.0027917956467717886, 0.008851221762597561, 0.04166148602962494, 0.00010132275929208845, 0.6856255531311035, 0.17959095537662506, 0.03355367109179497, 0.003982233814895153, 0.00018416139937471598, 0.0006258912617340684, 0.0002733095607254654, 0.008589111268520355, 0.0003716255014296621, 0.0007408496458083391, 0.005795579869300127, 0.06616389751434326, 0.26579439640045166, 0.028822878375649452, 0.0008823553798720241, 0.0003847335756290704, 1.0122191905975342, 0.7509549260139465, 0.5226262807846069, 0.016995735466480255, 0.025382718071341515, 0.06830278038978577, 0.03881654515862465, 0.11279263347387314, 0.29520317912101746, 0.3005259931087494, 0.5570111274719238, 0.2882751524448395, 0.018294058740139008, 0.0001461399078834802, 0.00032205163734033704, 0.08447157591581345, 0.23331786692142487, 0.4946300983428955, 1.0507817268371582, 0.768688440322876, 0.003049249993637204, 0.07613057643175125, 0.0072783553041517735, 0.27978813648223877, 0.14422117173671722, 0.0019891730044037104, 0.07122670859098434], "tokens": [13, 418, 736, 9815, 1542, 29936, 13, 1678, 500, 13, 1678, 736, 6965, 1542, 29936, 13, 29871, 500, 13, 13, 29871, 7762, 13, 259, 334, 910, 24384, 338, 1304, 304, 8161, 565, 278, 2943, 11524, 385, 4603, 13, 259, 334, 393, 338, 263, 12105, 5034, 304, 8286, 15848, 29889, 13, 259, 334]}
