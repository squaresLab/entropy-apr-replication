{"line_number": 466, "line_type": "original", "code": "        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);", "entropy": 1.1274999380111694, "is_bug_line": true, "sus_score": 0.60471, "per_token_entropy": [6.315445423126221, 6.987939357757568, 4.035519123077393, 0.07711438834667206, 0.08829881995916367, 3.296720266342163, 0.001192454481497407, 0.3333534598350525, 0.00025233422638848424, 3.981510963058099e-05, 0.06421855837106705, 2.110663890838623, 0.003729413729161024, 0.0006282739923335612, 0.0011194637045264244, 0.03535829484462738, 0.0003275334893260151, 0.0030769407749176025, 0.31919488310813904, 1.7404405298293568e-05, 0.0032876271288841963], "tokens": [308, 938, 330, 2252, 353, 14176, 18877, 12596, 275, 272, 29898, 11309, 29889, 6897, 29898, 8058, 1061, 511, 14267, 1061, 416]}
{"line_number": 466, "line_type": "generated", "code": "\n     * @return a new fraction instance with the same sign as this one\n     */\n    public Fraction abs() {\n        if (numerator", "entropy": 0.22947020828723907, "is_bug_line": true, "sus_score": 0.60471, "per_token_entropy": [0.05786661058664322, 0.5513052940368652, 0.07648004591464996, 0.35088852047920227, 0.07341937720775604, 0.16606220602989197, 0.061711329966783524, 0.011543151922523975, 0.025324257090687752, 0.16726846992969513, 0.20508083701133728, 1.224151849746704, 2.3567147254943848, 0.13156768679618835, 0.2982892096042633, 0.1031038910150528, 0.6267701983451843, 0.12394025176763535, 0.12181677669286728, 0.003739984007552266, 0.03693440556526184, 0.012910587713122368, 0.003561346558853984, 8.583032467868179e-06, 0.020922081544995308, 0.002914468990638852, 0.003753879340365529, 0.009668782353401184, 0.1640842705965042, 0.5421631336212158, 0.006767685525119305, 0.0317656435072422, 1.7404405298293568e-05], "tokens": [13, 268, 334, 732, 2457, 263, 716, 15958, 2777, 411, 278, 1021, 1804, 408, 445, 697, 13, 268, 3776, 13, 1678, 970, 7347, 428, 6425, 580, 426, 13, 4706, 565, 313, 8058, 1061]}
{"line_number": 470, "line_type": "original", "code": "        return Fraction.getFraction(numerator / gcd, denominator / gcd);", "entropy": 1.2975473403930664, "is_bug_line": false, "sus_score": 0.44081, "per_token_entropy": [7.886889934539795, 2.4725430011749268, 4.56908655166626, 0.0010546842822805047, 0.05157177150249481, 0.5888417363166809, 0.6786818504333496, 2.9682672902708873e-05, 0.34388333559036255, 0.5225428342819214, 5.6622808187967166e-05, 7.531478404998779, 1.6683448553085327, 0.017937934026122093, 0.21749897301197052, 0.39747118949890137, 6.4490144723095e-05, 0.14788411557674408, 0.008514057844877243, 0.0004223884898237884, 0.14369575679302216], "tokens": [308, 736, 7347, 428, 29889, 657, 29943, 13857, 29898, 8058, 1061, 847, 330, 2252, 29892, 14267, 1061, 847, 330, 2252, 416]}
{"line_number": 470, "line_type": "generated", "code": "\n\n    /**\n     *", "entropy": 0.1365136355161667, "is_bug_line": false, "sus_score": 0.44081, "per_token_entropy": [0.05869870260357857, 0.5528239011764526, 0.05480477958917618, 0.28264710307121277, 0.004527674522250891, 0.0014107999159023166, 0.0006823595031164587], "tokens": [13, 13, 1678, 7762, 13, 268, 334]}
{"line_number": 146, "line_type": "original", "code": "            if (numerator==Integer.MIN_VALUE ||", "entropy": 1.573127031326294, "is_bug_line": false, "sus_score": 0.34572, "per_token_entropy": [7.962485313415527, 4.008406162261963, 0.1239023357629776, 2.123344898223877, 0.005550686735659838, 1.842968225479126, 1.270448088645935, 0.004051572643220425, 0.027560776099562645, 0.0006286313873715699, 0.00018320789968129247, 1.5079935789108276], "tokens": [632, 565, 313, 8058, 1061, 1360, 7798, 29889, 16173, 29918, 19143, 3830]}
{"line_number": 146, "line_type": "generated", "code": "\n     *", "entropy": 0.10700111836194992, "is_bug_line": false, "sus_score": 0.34572, "per_token_entropy": [0.14182646572589874, 0.14493732154369354, 0.03423955664038658], "tokens": [13, 268, 334]}
{"line_number": 150, "line_type": "original", "code": "            numerator = -numerator;", "entropy": 3.495651960372925, "is_bug_line": false, "sus_score": 0.32309, "per_token_entropy": [4.188394546508789, 6.255302906036377, 0.0007223857101053, 1.8848621845245361, 7.101517677307129, 7.960134983062744, 0.0018767378060147166, 0.5724045634269714], "tokens": [632, 4825, 1061, 353, 448, 8058, 1061, 29936]}
{"line_number": 150, "line_type": "generated", "code": "\n     * fraction will represent 1/2.\n     *\n     * @param numerator  the numerator, for example the three in 'three sevenths'\n     * @param denominator  the denominator, for example the seven", "entropy": 0.15234559774398804, "is_bug_line": false, "sus_score": 0.32309, "per_token_entropy": [0.8408055901527405, 0.20613640546798706, 0.005099860019981861, 0.7066407203674316, 0.227669820189476, 0.8737725019454956, 0.014806029386818409, 0.004118295386433601, 0.0015880366554483771, 0.006018610205501318, 1.7362933158874512, 1.181250810623169, 0.1370774656534195, 0.0018387805903330445, 0.8629850745201111, 0.02813500352203846, 0.0002989322238136083, 0.8890747427940369, 0.006181288976222277, 0.01997673325240612, 1.6093124941107817e-05, 0.004206262528896332, 0.00025245340657420456, 0.0007290565990842879, 2.3841830625315197e-06, 0.017745302990078926, 0.0010296764085069299, 0.00016509123088326305, 0.0008931938209570944, 0.10568741708993912, 0.0008725888328626752, 0.0015088851796463132, 0.015421433374285698, 0.002130740089341998, 0.0006923662149347365, 0.002002378925681114, 0.0007558587822131813, 0.012790193781256676, 2.8967437174287625e-05, 0.0003713871701620519, 0.00014280252798926085, 0.0015285247936844826, 9.369411418447271e-05, 0.0010201494442299008, 8.630380034446716e-05, 0.0010405131615698338, 2.8132995794294402e-05, 5.23315102327615e-05, 0.00023707917716819793, 8.785339014139026e-05, 4.8874615458771586e-05, 0.0005352256703190506], "tokens": [13, 268, 334, 15958, 674, 2755, 29871, 29896, 29914, 29906, 29889, 13, 268, 334, 13, 268, 334, 732, 3207, 4825, 1061, 29871, 278, 4825, 1061, 29892, 363, 1342, 278, 2211, 297, 525, 17536, 16741, 9499, 29915, 13, 268, 334, 732, 3207, 14267, 1061, 29871, 278, 14267, 1061, 29892, 363, 1342, 278, 9881]}
{"line_number": 151, "line_type": "original", "code": "            denominator = -denominator;", "entropy": 2.661872148513794, "is_bug_line": false, "sus_score": 0.30303, "per_token_entropy": [9.529464721679688, 8.088624000549316, 0.005960665177553892, 0.7972495555877686, 4.93267822265625, 0.5696353316307068, 0.0042977831326425076, 0.00011979816190432757, 0.02881755121052265], "tokens": [632, 14267, 1061, 353, 448, 1145, 5817, 1061, 29936]}
{"line_number": 151, "line_type": "generated", "code": "\n     *\n     * @param numerator  the numerator, for example the three in 'three sevenths'\n     * @param denominator  the denominator, for example the seven in 'three sevenths'\n     * @return", "entropy": 0.019066259264945984, "is_bug_line": false, "sus_score": 0.30303, "per_token_entropy": [0.036954279989004135, 0.1671377569437027, 0.008275032043457031, 0.3915961682796478, 0.008167675696313381, 0.0002953569928649813, 0.1766313761472702, 0.007378824986517429, 0.038271136581897736, 2.90866428258596e-05, 0.005167223978787661, 0.0003177614707965404, 0.0010805251076817513, 2.3841830625315197e-06, 0.031561337411403656, 0.0017635759431868792, 0.00017438798386137933, 0.0006983225466683507, 0.045469798147678375, 0.0008043391280807555, 0.0005490464391186833, 0.007925491780042648, 0.003303548786789179, 0.0008275659638457, 0.0018552012043073773, 0.0007208371534943581, 0.0116348285228014, 1.6331539882230572e-05, 0.00029047083808109164, 0.0002727136597968638, 0.0031701093539595604, 6.961580220377073e-05, 0.000872946111485362, 7.664863369427621e-05, 0.0009034366230480373, 2.062299427052494e-05, 4.649054244509898e-05, 0.00024923557066358626, 6.210611172718927e-05, 3.528532761265524e-05, 0.0005551227368414402, 9.548207890475169e-05, 6.222531374078244e-05, 0.00024089295766316354, 0.001490316353738308, 0.0003511289251036942, 0.000311802898067981, 0.0012466285843402147, 0.009701485745608807, 0.007284509018063545, 0.0014869834994897246, 0.013939994387328625], "tokens": [13, 268, 334, 13, 268, 334, 732, 3207, 4825, 1061, 29871, 278, 4825, 1061, 29892, 363, 1342, 278, 2211, 297, 525, 17536, 16741, 9499, 29915, 13, 268, 334, 732, 3207, 14267, 1061, 29871, 278, 14267, 1061, 29892, 363, 1342, 278, 9881, 297, 525, 17536, 16741, 9499, 29915, 13, 268, 334, 732, 2457]}
