{"line_number": 423, "line_type": "original", "code": "        return optimizeInternal(maxEval,", "entropy": 1.3355947732925415, "is_bug_line": false, "sus_score": 0.33521, "per_token_entropy": [5.00460958480835, 5.3346967697143555, 0.45186978578567505, 1.1371779441833496, 0.013288269750773907, 0.07433270663022995, 0.000709282117895782, 0.00010215714428341016, 0.003567879553884268], "tokens": [308, 736, 24656, 16491, 29898, 3317, 29923, 791, 29892]}
{"line_number": 423, "line_type": "generated", "code": "\n     * @param target Target value for the objective functions at optimum.\n<|mask:1|><|mask:0|>\n     * @param weights Weights for the least squares cost computation.\n<|mask:1|", "entropy": 0.08270920813083649, "is_bug_line": false, "sus_score": 0.33521, "per_token_entropy": [0.3412080705165863, 0.32726094126701355, 0.002360417041927576, 0.03390013054013252, 0.2126300036907196, 0.8477676510810852, 0.027926011011004448, 0.018293941393494606, 0.002807843731716275, 0.004575260449200869, 0.005692935548722744, 0.05847688764333725, 0.01529664546251297, 0.0011308948742225766, 0.0001081169830285944, 0.005890628322958946, 0.005858749151229858, 1.0219860076904297, 0.0009485750924795866, 0.05611154064536095, 0.005752793047577143, 0.41880011558532715, 0.009517769329249859, 0.20608508586883545, 0.002600028645247221, 0.021408073604106903, 0.0005920564290136099, 0.06104975938796997, 0.0016383809270337224, 0.02895178087055683, 0.023412100970745087, 0.02413337118923664, 0.00019870213873218745, 0.004811376333236694, 0.03247156739234924, 0.26679039001464844, 0.006174062378704548, 0.009054906666278839, 0.0030378405936062336, 0.0011169631034135818, 0.016382120549678802, 0.011238249950110912, 0.0011152960360050201, 0.0009148702956736088, 0.006122997961938381, 0.004803783260285854, 0.11307661235332489, 0.00016616393986623734, 0.0018364008283242583, 0.00032074074260890484, 0.025555873289704323, 0.0015172171406447887], "tokens": [13, 268, 334, 732, 3207, 3646, 17157, 995, 363, 278, 12091, 3168, 472, 5994, 398, 29889, 13, 29966, 29989, 13168, 29901, 29896, 29989, 5299, 29989, 13168, 29901, 29900, 29989, 29958, 13, 268, 334, 732, 3207, 18177, 1334, 5861, 363, 278, 3203, 25256, 3438, 16287, 29889, 13, 29966, 29989, 13168, 29901, 29896, 29989]}
{"line_number": 153, "line_type": "original", "code": "    protected void updateJacobian() {", "entropy": 2.0797500610351562, "is_bug_line": false, "sus_score": 0.31759, "per_token_entropy": [5.885859489440918, 3.474569082260132, 0.2646481394767761, 0.45562395453453064, 5.727228164672852, 0.02750742994248867, 0.0027000184636563063, 2.4844226837158203, 0.395190954208374], "tokens": [268, 6364, 1780, 2767, 24288, 711, 713, 580, 426]}
{"line_number": 153, "line_type": "generated", "code": "\n        final RealMatrix weightedJacobian = computeWeightedJacobian(point);\n        weightedResiduals = weightedJacobian.operate(residuals).getData();\n        cost = computeCost(point", "entropy": 0.17842169106006622, "is_bug_line": false, "sus_score": 0.31759, "per_token_entropy": [0.04206332564353943, 0.39307087659835815, 0.8026760220527649, 0.7260043621063232, 0.2640345096588135, 0.13835644721984863, 0.016189424321055412, 0.20777828991413116, 0.0024221388157457113, 0.0007908792467787862, 0.03148290514945984, 0.028401311486959457, 0.0007373951375484467, 3.6238969187252223e-05, 0.0005154472892172635, 5.3881147323409095e-05, 1.597391747054644e-05, 0.012913059443235397, 0.0637664720416069, 0.004720496013760567, 0.0062996381893754005, 0.14457054436206818, 0.24494080245494843, 0.00275470525957644, 0.035957735031843185, 0.0003578022588044405, 0.5916047692298889, 0.12759540975093842, 0.26054370403289795, 0.05328124761581421, 0.03143635019659996, 0.00012194366718176752, 0.0002728328399825841, 0.003418674925342202, 0.0029419257771223783, 3.933898824470816e-06, 0.005611263681203127, 0.8562934994697571, 0.005904849618673325, 0.013783276081085205, 1.5919032096862793, 0.04907107353210449, 0.4628349840641022, 0.050240013748407364, 0.012928592972457409, 0.35494497418403625, 0.37556928396224976, 0.03959061577916145, 0.9792927503585815, 0.06718286126852036, 0.017378320917487144, 0.15326589345932007], "tokens": [13, 4706, 2186, 8195, 14609, 7688, 287, 24288, 711, 713, 353, 10272, 22676, 287, 24288, 711, 713, 29898, 3149, 416, 13, 4706, 7688, 287, 1666, 333, 27101, 353, 7688, 287, 24288, 711, 713, 29889, 3372, 403, 29898, 690, 333, 27101, 467, 657, 1469, 890, 13, 4706, 3438, 353, 10272, 25733, 29898, 3149]}
{"line_number": 176, "line_type": "original", "code": "        final int nR = getTarget().length;", "entropy": 2.090153455734253, "is_bug_line": false, "sus_score": 0.30136, "per_token_entropy": [6.603376388549805, 2.13968825340271, 4.2881293296813965, 0.43036705255508423, 1.1063283681869507, 0.012330020777881145, 3.4777517318725586, 2.094254493713379, 2.4444334506988525, 0.36419543623924255, 0.030833732336759567], "tokens": [308, 2186, 938, 302, 29934, 353, 679, 8667, 2141, 2848, 29936]}
{"line_number": 176, "line_type": "generated", "code": "\n        return r.dotProduct(r);\n    }\n\n    /**\n     * Computes the objective function value.\n     *\n     * @param point Model parameters.\n     * @return the objective function value.\n     *", "entropy": 0.17653527855873108, "is_bug_line": false, "sus_score": 0.30136, "per_token_entropy": [0.1346684843301773, 0.07551528513431549, 0.5222793817520142, 0.8259251117706299, 0.008546680212020874, 0.014344785362482071, 0.000205018965061754, 0.0013175864005461335, 0.7114415764808655, 0.1618805080652237, 0.022832823917269707, 1.6172951459884644, 0.01129105780273676, 0.006702678743749857, 0.02173205278813839, 0.018661171197891235, 0.005742836743593216, 0.023561961948871613, 0.00025412190007045865, 0.00020418466010596603, 0.3953920602798462, 0.19630369544029236, 0.05929296836256981, 0.8515428304672241, 0.5519006252288818, 0.06781332194805145, 0.06142796576023102, 0.009465222246944904, 0.0011392300948500633, 0.00027366707217879593, 0.1429707556962967, 0.0037555419839918613, 0.00010549465514486656, 0.013142391107976437, 0.007537733297795057, 0.7338259816169739, 0.22430330514907837, 0.0064832353964447975, 1.1241087913513184, 0.002320099389180541, 0.002012848388403654, 0.000653530121780932, 0.005457383580505848, 0.003696990432217717, 0.05329424515366554, 0.1898694932460785, 0.054308898746967316, 0.012436342425644398, 0.18007206916809082, 0.0019502682844176888, 0.0029809109400957823, 0.0355941578745842], "tokens": [13, 4706, 736, 364, 29889, 6333, 7566, 29898, 29878, 416, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 11796, 267, 278, 12091, 740, 995, 29889, 13, 268, 334, 13, 268, 334, 732, 3207, 1298, 8125, 4128, 29889, 13, 268, 334, 732, 2457, 278, 12091, 740, 995, 29889, 13, 268, 334]}
{"line_number": 132, "line_type": "original", "code": "     */", "entropy": 9.200916290283203, "is_bug_line": false, "sus_score": 0.27196, "per_token_entropy": [6.199039459228516, 12.202794075012207], "tokens": [418, 3776]}
{"line_number": 132, "line_type": "generated", "code": "\n            final double[] jacobianRow = jacobianData[i];\n            for (int j = 0; j", "entropy": 0.3122400939464569, "is_bug_line": false, "sus_score": 0.27196, "per_token_entropy": [0.5386947989463806, 0.45129773020744324, 1.4882668256759644, 0.8973322510719299, 0.29075369238853455, 2.185255527496338, 0.1987585425376892, 0.30200281739234924, 0.003989832941442728, 0.9634084701538086, 0.3194155991077423, 0.22608797252178192, 0.006228440906852484, 0.0013881819322705269, 6.031808152329177e-05, 0.0053245872259140015, 0.0009177286992780864, 0.0004583738627843559, 0.01057508960366249, 0.006684206426143646, 0.10314464569091797, 1.1947516202926636, 0.0023498323280364275, 0.009189807809889317, 0.14952297508716583, 0.001353658502921462, 0.0037669430021196604, 0.004431546665728092, 0.0007870675181038678, 0.0010030006524175406], "tokens": [13, 9651, 2186, 3765, 2636, 432, 562, 711, 713, 4301, 353, 432, 562, 711, 713, 1469, 29961, 29875, 1385, 13, 9651, 363, 313, 524, 432, 353, 29871, 29900, 29936, 432]}
{"line_number": 187, "line_type": "original", "code": "            }", "entropy": 7.050164222717285, "is_bug_line": false, "sus_score": 0.24259, "per_token_entropy": [7.869302272796631, 6.231026649475098], "tokens": [632, 500]}
{"line_number": 187, "line_type": "generated", "code": "\n     * @return the RMS.\n     * @see #computeCost(double[])\n     * @since 3.1\n     */\n    public double getRMS() {\n        return cost;\n    }\n\n   ", "entropy": 0.20653197169303894, "is_bug_line": false, "sus_score": 0.24259, "per_token_entropy": [0.3079548478126526, 0.13109956681728363, 0.01872715912759304, 0.3459443747997284, 0.11801845580339432, 0.6945358514785767, 0.4589555263519287, 0.0020738777238875628, 1.3515784740447998, 0.003925714176148176, 0.15467602014541626, 0.5516406297683716, 0.11493927240371704, 0.6871953010559082, 0.08270896226167679, 1.8902696371078491, 0.3014487326145172, 0.015714969485998154, 0.0023073735646903515, 0.008038313128054142, 0.0035355696454644203, 0.08518626540899277, 0.35487473011016846, 0.017254246398806572, 0.5801874995231628, 0.0032541200052946806, 0.029086917638778687, 0.0008606782066635787, 0.03814423456788063, 0.0044657266698777676, 0.021937331184744835, 0.03475826606154442, 0.0013709203340113163, 0.056141406297683716, 0.29947975277900696, 0.014214927330613136, 0.007975399494171143, 0.009704318828880787, 0.010259863920509815, 0.004602197092026472, 0.0022078203037381172, 0.004740072879940271, 0.16320574283599854, 0.4305453300476074, 1.0313063859939575, 0.05403268709778786, 0.0018473479431122541, 0.06480005383491516, 0.002841128269210458, 0.003510861424729228, 0.0673966258764267, 0.09418141096830368], "tokens": [13, 268, 334, 732, 2457, 278, 390, 4345, 29889, 13, 268, 334, 732, 4149, 396, 26017, 25733, 29898, 8896, 23076, 13, 268, 334, 732, 16076, 29871, 29941, 29889, 29896, 13, 268, 3776, 13, 1678, 970, 3765, 679, 29934, 4345, 580, 426, 13, 4706, 736, 3438, 29936, 13, 1678, 500, 13, 13, 1678]}
