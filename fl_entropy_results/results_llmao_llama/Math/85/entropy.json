{"line_number": 198, "line_type": "original", "code": "        if (fa * fb >= 0.0 ) {", "entropy": 2.072371006011963, "is_bug_line": true, "sus_score": 0.50055, "per_token_entropy": [7.063171863555908, 8.599418640136719, 0.14455392956733704, 4.717319488525391, 0.40392524003982544, 0.02269788645207882, 0.4695781469345093, 2.439531087875366, 0.01763228140771389, 0.001157209975644946, 0.40208882093429565, 0.000753476400859654, 4.584524154663086, 0.14683756232261658], "tokens": [308, 565, 313, 5444, 334, 285, 29890, 6736, 29871, 29900, 29889, 29900, 1723, 426]}
{"line_number": 198, "line_type": "generated", "code": "\n    /**\n     * Find a root of the given function.\n     *", "entropy": 0.4903614819049835, "is_bug_line": true, "sus_score": 0.50055, "per_token_entropy": [0.17858944833278656, 0.4927874207496643, 0.13756616413593292, 0.4502357542514801, 0.009447509422898293, 0.0009365463047288358, 2.5827136039733887, 0.2256544679403305, 1.2933450937271118, 0.8425460457801819, 0.39130717515945435, 0.3158874809741974, 0.2311745285987854, 1.11781907081604, 0.06273259967565536, 0.002654126612469554, 0.0007481159991584718], "tokens": [13, 1678, 7762, 13, 268, 334, 10987, 263, 3876, 310, 278, 2183, 740, 29889, 13, 268, 334]}
{"line_number": 104, "line_type": "original", "code": "     * <code>Integer.MAX_VALUE</code> iterations to throw a ", "entropy": 1.6988645792007446, "is_bug_line": false, "sus_score": 0.3865, "per_token_entropy": [5.748028755187988, 0.5040141940116882, 3.899510622024536, 0.6964370608329773, 0.02786955237388611, 2.5110292434692383, 0.012098264880478382, 0.8940422534942627, 0.002909595612436533, 0.0016767027555033565, 0.05935913696885109, 0.0010220548138022423, 0.17503106594085693, 0.4877263903617859, 6.481817245483398, 7.171232223510742, 0.9568498730659485, 0.9489079713821411], "tokens": [418, 334, 529, 401, 29958, 7798, 29889, 12648, 29918, 19143, 829, 401, 29958, 24372, 304, 3183, 263, 29871]}
{"line_number": 104, "line_type": "generated", "code": "\n     * @param upperBound upper bound (b never is greater than this\n     * value)\n<|mask:1|><|mask:0|>\n     * @param maximumIterations maximum number of iterations to perform\n     *", "entropy": 0.07707470655441284, "is_bug_line": false, "sus_score": 0.3865, "per_token_entropy": [0.13873691856861115, 0.019963176921010017, 0.0004549183649942279, 0.025596775114536285, 0.0027629081159830093, 0.017662031576037407, 0.001178523525595665, 0.001727637485601008, 0.000945240433793515, 0.0021588134113699198, 0.0015939876902848482, 0.03609791025519371, 0.0027757470961660147, 0.0002454218047205359, 0.0005667987279593945, 0.0010633773636072874, 0.05954122170805931, 0.1255444586277008, 0.0008997444529086351, 0.011159033514559269, 0.009450461715459824, 0.08629747480154037, 0.518310010433197, 0.0037387963384389877, 0.20182853937149048, 0.003669435391202569, 0.3969673812389374, 0.004075080621987581, 0.2269408255815506, 0.002595629310235381, 0.014516572467982769, 0.0016105312388390303, 0.020054785534739494, 0.0008454324561171234, 0.04828420281410217, 0.019743703305721283, 0.04775802791118622, 0.00037996700848452747, 0.009619549848139286, 0.021380536258220673, 0.030408503487706184, 0.0002975021197926253, 0.0008634176338091493, 0.35436132550239563, 0.05817168205976486, 0.001680511049926281, 0.09902770817279816, 0.5008788704872131, 0.6279608607292175, 0.04302171990275383, 0.20206446945667267, 0.000406301929615438], "tokens": [13, 268, 334, 732, 3207, 7568, 17109, 7568, 3216, 313, 29890, 2360, 338, 7621, 1135, 445, 13, 268, 334, 995, 29897, 13, 29966, 29989, 13168, 29901, 29896, 29989, 5299, 29989, 13168, 29901, 29900, 29989, 29958, 13, 268, 334, 732, 3207, 7472, 13463, 800, 7472, 1353, 310, 24372, 304, 2189, 13, 268, 334]}
{"line_number": 51, "line_type": "original", "code": "    public static double solve(UnivariateRealFunction f, double x0, double x1)", "entropy": 1.0638266801834106, "is_bug_line": false, "sus_score": 0.3757, "per_token_entropy": [2.5344438552856445, 9.292710304260254, 0.08004681766033173, 1.0618404150009155, 2.7608697414398193, 0.0760183334350586, 0.21149183809757233, 0.0013621109537780285, 0.00022456508304458112, 0.028057346120476723, 0.011849727481603622, 0.07999498397111893, 0.0034728473983705044, 1.5147863626480103, 2.96626353263855, 0.4533764123916626, 0.1294230818748474, 0.394707053899765, 0.0751039981842041, 0.004643134772777557, 0.6596714854240417], "tokens": [268, 970, 2294, 3765, 4505, 29898, 2525, 27432, 403, 21713, 6678, 285, 29892, 3765, 921, 29900, 29892, 3765, 921, 29896, 29897]}
{"line_number": 51, "line_type": "generated", "code": "\n     * </ul>\n     *\n     * @param f the function to solve\n     * @param initial the start value to use\n     * @param lowerBound the lower bound for the interval\n     * @param upperBound the upper", "entropy": 0.2624056935310364, "is_bug_line": false, "sus_score": 0.3757, "per_token_entropy": [0.2449539601802826, 0.18147027492523193, 0.009732297621667385, 0.7197255492210388, 0.010446982458233833, 0.07487627863883972, 0.13547781109809875, 0.059990957379341125, 0.003673592582345009, 1.2690140008926392, 0.023294012993574142, 0.0012016226537525654, 0.09281551092863083, 0.006492237094789743, 0.11073742806911469, 0.547660231590271, 0.07879874855279922, 0.3536335527896881, 1.7010997533798218, 0.2705899477005005, 0.10550764203071594, 6.389413465512916e-05, 0.003278834745287895, 0.001897679059766233, 0.8924326300621033, 1.3553911447525024, 1.1991322040557861, 0.05662139877676964, 0.7520889043807983, 0.8311468958854675, 0.5737177133560181, 0.018923696130514145, 8.189342770492658e-05, 0.0037260884419083595, 0.03517474606633186, 0.06441641598939896, 0.7557099461555481, 0.5908321738243103, 0.3202565312385559, 0.025261608883738518, 0.02104266732931137, 0.0021673778537660837, 0.07803051918745041, 0.030320728197693825, 0.01099928468465805, 8.106198947643861e-06, 0.0003079893649555743, 0.0006775943911634386, 0.0017364437226206064, 0.004220151342451572, 0.0022775204852223396, 0.011960340663790703], "tokens": [13, 268, 334, 1533, 352, 29958, 13, 268, 334, 13, 268, 334, 732, 3207, 285, 278, 740, 304, 4505, 13, 268, 334, 732, 3207, 2847, 278, 1369, 995, 304, 671, 13, 268, 334, 732, 3207, 5224, 17109, 278, 5224, 3216, 363, 278, 7292, 13, 268, 334, 732, 3207, 7568, 17109, 278, 7568]}
{"line_number": 199, "line_type": "original", "code": "            throw new ConvergenceException(", "entropy": 2.145932674407959, "is_bug_line": false, "sus_score": 0.35218, "per_token_entropy": [8.527913093566895, 6.282505512237549, 0.8076704144477844, 1.1329723596572876, 0.003490904113277793, 0.009103459306061268, 0.037098564207553864, 0.366707980632782], "tokens": [632, 3183, 716, 1281, 369, 10238, 2451, 29898]}
{"line_number": 199, "line_type": "generated", "code": "\n    /**\n     * Creates a solver factory with default settings.\n     * The default solver is\n     * {@link net.objecthunter.exp4j.univariate.newton.NewtonRaphsonSol", "entropy": 0.4159899055957794, "is_bug_line": false, "sus_score": 0.35218, "per_token_entropy": [0.22320573031902313, 0.6485553979873657, 0.13976441323757172, 0.4609617590904236, 0.011949856765568256, 0.0012996093137189746, 2.7335362434387207, 0.003962998278439045, 0.31510046124458313, 0.9205843806266785, 0.00045885046711191535, 1.536260962486267, 1.19527268409729, 0.16456148028373718, 0.3858533501625061, 0.05200145021080971, 0.019002651795744896, 0.0031691587064415216, 0.011214084923267365, 1.559588074684143, 1.4130198955535889, 1.1597797870635986, 0.09266752749681473, 0.5141475200653076, 1.3465317487716675, 0.022349972277879715, 0.0008117241668514907, 0.16258777678012848, 0.008947161957621574, 2.428748846054077, 0.0014432977186515927, 1.399597406387329, 0.1133013367652893, 0.0043846662156283855, 0.00041607304592616856, 0.005254506133496761, 0.0008253029081970453, 0.0009828743059188128, 0.000841025379486382, 0.23541177809238434, 0.2946764826774597, 2.4914430468925275e-05, 0.0008973624208010733, 0.7459989786148071, 0.01255783811211586, 0.060041364282369614, 0.29033130407333374, 0.015216105617582798, 0.861166775226593, 0.012399019673466682, 0.0001652104256208986, 0.03964320570230484], "tokens": [13, 1678, 7762, 13, 268, 334, 6760, 1078, 263, 899, 369, 12529, 411, 2322, 6055, 29889, 13, 268, 334, 450, 2322, 899, 369, 338, 13, 268, 334, 26633, 2324, 7787, 29889, 3318, 29882, 8428, 29889, 4548, 29946, 29926, 29889, 348, 27432, 403, 29889, 1482, 880, 29889, 4373, 880, 29934, 12451, 1100, 13296]}
{"line_number": 120, "line_type": "original", "code": "     * function", "entropy": 6.042333126068115, "is_bug_line": false, "sus_score": 0.33856, "per_token_entropy": [4.634394645690918, 9.093940734863281, 4.398663520812988], "tokens": [418, 334, 740]}
{"line_number": 120, "line_type": "generated", "code": "\n        if (maximumIterations <= 0) {\n            throw new IllegalArgumentException(\n                    \"Maximum iterations must be positive\");\n        }\n\n        if ((initial", "entropy": 0.3392083942890167, "is_bug_line": false, "sus_score": 0.33856, "per_token_entropy": [0.3153667747974396, 0.6302717924118042, 1.3385958671569824, 0.12359138578176498, 1.3218642473220825, 3.85038583772257e-05, 0.00018320789968129247, 4.7444173105759546e-05, 0.20143739879131317, 0.012394191697239876, 0.0033365790732204914, 0.17001782357692719, 0.07772979885339737, 0.017957018688321114, 0.09032569080591202, 0.023186977952718735, 0.7310134172439575, 0.0794103667140007, 2.8729025871143676e-05, 0.00045372682507149875, 7.748303323751315e-05, 0.47955024242401123, 0.2565575838088989, 0.45431622862815857, 0.17001038789749146, 0.21076349914073944, 1.4007821083068848, 0.004204125609248877, 0.47421684861183167, 0.09432429075241089, 0.009848102927207947, 0.16696618497371674, 0.8106580972671509, 0.027724046260118484, 0.0247187577188015, 0.004431665409356356, 0.09473772346973419, 1.4072837829589844, 0.14794322848320007, 0.7414312958717346, 1.7682855129241943, 0.3606700003147125], "tokens": [13, 4706, 565, 313, 27525, 398, 13463, 800, 5277, 29871, 29900, 29897, 426, 13, 9651, 3183, 716, 1720, 12018, 15730, 2451, 29898, 13, 462, 1678, 376, 7976, 12539, 24372, 1818, 367, 6374, 1496, 13, 4706, 500, 13, 13, 4706, 565, 5135, 11228]}
