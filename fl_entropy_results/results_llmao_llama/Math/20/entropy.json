{"line_number": 991, "line_type": "original", "code": "            for (int i = 0; i < x.length; i++) {", "entropy": 1.0130001306533813, "is_bug_line": false, "sus_score": 0.3619, "per_token_entropy": [6.649702072143555, 1.173356533050537, 0.004926210269331932, 0.0022852513939142227, 3.6685678958892822, 0.020993174985051155, 0.006479090079665184, 0.005841446109116077, 0.0061088986694812775, 0.0038358219899237156, 0.01115207839757204, 6.425414562225342, 0.16183710098266602, 0.0330323725938797, 0.016147430986166, 0.020123369991779327, 0.008330123499035835, 0.01587033085525036], "tokens": [632, 363, 313, 524, 474, 353, 29871, 29900, 29936, 474, 529, 921, 29889, 2848, 29936, 474, 4862, 426]}
{"line_number": 991, "line_type": "generated", "code": "\n                d[r][c] = Math.sqrt(m.getEntry(r, c));\n            }\n        }\n        return new Array2DRowRealMatrix(d, false);\n    }\n\n    /**\n    ", "entropy": 0.05119960010051727, "is_bug_line": false, "sus_score": 0.3619, "per_token_entropy": [0.11824948340654373, 1.159605860710144, 0.21013057231903076, 0.002565190428867936, 0.24459008872509003, 0.004984334111213684, 0.007429943419992924, 0.0012961566681042314, 0.003598050447180867, 0.10181936621665955, 0.003211937379091978, 0.05572116747498512, 0.0027969072107225657, 0.01934097521007061, 0.0022286358289420605, 0.0003588747640606016, 0.000618624035269022, 0.0010241983691230416, 0.012670138850808144, 0.0007133323233574629, 0.005967419594526291, 0.012139014899730682, 0.004630319774150848, 0.11821887642145157, 0.0022574197500944138, 0.007527558133006096, 0.22403912246227264, 0.007482479326426983, 0.0035807082895189524, 0.07734071463346481, 0.007797872181981802, 0.0032921424135565758, 0.0029503649566322565, 0.00035339308669790626, 0.00015662873920518905, 0.0002733095607254654, 0.00021073981770314276, 0.0001820160250645131, 0.0003694805200211704, 0.0008861667010933161, 0.022338781505823135, 0.006738675758242607, 0.0009899006690829992, 0.0024297498166561127, 0.020703986287117004, 0.0015758965164422989, 0.009140077978372574, 0.03915831819176674, 0.04138290137052536, 0.07497327774763107, 0.004752055741846561, 0.005585420876741409], "tokens": [13, 18884, 270, 29961, 29878, 3816, 29883, 29962, 353, 5792, 29889, 3676, 29898, 29885, 29889, 657, 9634, 29898, 29878, 29892, 274, 2483, 13, 9651, 500, 13, 4706, 500, 13, 4706, 736, 716, 4398, 29906, 29928, 4301, 21713, 14609, 29898, 29881, 29892, 2089, 416, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268]}
{"line_number": 910, "line_type": "original", "code": "                double diff = boundaries[1][i] - boundaries[0][i];", "entropy": 0.8052229285240173, "is_bug_line": false, "sus_score": 0.3435, "per_token_entropy": [6.241587162017822, 4.431244850158691, 1.9158592224121094, 0.17131675779819489, 0.32472091913223267, 0.005024425685405731, 0.07791805267333984, 0.01658756099641323, 0.09252126514911652, 0.0048184944316744804, 0.08744895458221436, 0.29442456364631653, 0.0013763965107500553, 0.009489193558692932, 0.0031697528902441263, 0.007035363931208849, 0.0042457920499145985], "tokens": [462, 3765, 2923, 353, 24371, 29961, 29896, 3816, 29875, 29962, 448, 24371, 29961, 29900, 3816, 29875, 1385]}
{"line_number": 910, "line_type": "generated", "code": "\n         * @param point Normalized objective variables.\n         * @param repaired Repaired objective variables.\n         * @return the penalty for violated bounds.\n         */\n        public double penalty(final double[] point, final", "entropy": 0.15962199866771698, "is_bug_line": false, "sus_score": 0.3435, "per_token_entropy": [0.2332722693681717, 0.7053244709968567, 0.041300661861896515, 0.3890499174594879, 0.04313236474990845, 0.7122988104820251, 0.7473409175872803, 0.0015912501839920878, 0.04418634623289108, 0.012209675274789333, 0.057921960949897766, 0.001759410952217877, 0.04859868437051773, 0.005086457822471857, 0.006880993023514748, 0.9459989070892334, 0.20204965770244598, 0.0020500849932432175, 0.00031406714697368443, 1.2426674365997314, 0.010660485364496708, 0.00022313489171210676, 0.40465518832206726, 0.01807445101439953, 0.11382956057786942, 0.0057001663371920586, 0.021560218185186386, 0.007828744128346443, 0.006775144953280687, 0.0038519722875207663, 0.28839951753616333, 0.07619033753871918, 0.22926633059978485, 0.2677127718925476, 0.0545065812766552, 0.08836386352777481, 0.09691693633794785, 0.006416433956474066, 0.018290897831320763, 0.02078373357653618, 0.0034919732715934515, 0.051870957016944885, 0.5100914239883423, 0.0028398206923156977, 0.002072688192129135, 0.009075816720724106, 0.11655989289283752, 0.0005414212355390191, 0.0021203910000622272, 0.0026213114615529776, 0.001875072019174695, 0.41414204239845276], "tokens": [13, 308, 334, 732, 3207, 1298, 21981, 1891, 12091, 3651, 29889, 13, 308, 334, 732, 3207, 1634, 29874, 2859, 830, 3274, 2859, 12091, 3651, 29889, 13, 308, 334, 732, 2457, 278, 27368, 363, 5537, 630, 13451, 29889, 13, 308, 3776, 13, 4706, 970, 3765, 27368, 29898, 8394, 3765, 2636, 1298, 29892, 2186]}
{"line_number": 949, "line_type": "original", "code": "                value = CMAESOptimizer.this", "entropy": 1.6355891227722168, "is_bug_line": false, "sus_score": 0.34248, "per_token_entropy": [4.4584126472473145, 9.020525932312012, 2.76444149017334, 1.699749231338501, 0.0007753941463306546, 0.0010788579238578677, 0.0013267532922327518, 0.00023135847004596144, 0.0002623452164698392, 0.035931169986724854, 0.008743572980165482], "tokens": [462, 995, 353, 315, 1529, 2890, 20624, 326, 3950, 29889, 1366]}
{"line_number": 949, "line_type": "generated", "code": "\n            }\n            return repaired;\n        }\n\n        /**\n         * @param x Normalized objective variables.\n         * @param repaired Repaired objective variables.\n         * @return the penalty for violated", "entropy": 0.10904575139284134, "is_bug_line": false, "sus_score": 0.34248, "per_token_entropy": [0.20667481422424316, 0.48412615060806274, 0.029963308945298195, 0.0038294093683362007, 0.05496027693152428, 0.019805647432804108, 0.019583215937018394, 0.0006469779182225466, 0.0006229128921404481, 0.0012018608395010233, 0.001039560534991324, 0.029199693351984024, 0.0014748420799151063, 0.007425328716635704, 0.03273453190922737, 0.03329853340983391, 0.06435448676347733, 0.004920516163110733, 0.0035062285605818033, 0.0005079409456811845, 0.08922167867422104, 0.02180367149412632, 0.5412901043891907, 0.630372941493988, 0.000987876090221107, 0.046317387372255325, 0.004457300528883934, 0.046294283121824265, 0.0014331794809550047, 0.0020239122677594423, 0.002584571484476328, 0.001629097736440599, 0.21674610674381256, 0.29529786109924316, 0.0019469369435682893, 0.0008611546363681555, 0.9793580770492554, 0.0034018049482256174, 0.00041797960875555873, 0.2243327498435974, 0.006007116287946701, 0.2354009449481964, 0.005214542616158724, 0.0022776394616812468, 0.007653556298464537, 0.0032560210675001144, 0.0024990777019411325, 0.3349989950656891, 0.17577889561653137, 0.4223349988460541, 0.2701757848262787, 0.09412629157304764], "tokens": [13, 9651, 500, 13, 9651, 736, 1634, 29874, 2859, 29936, 13, 4706, 500, 13, 13, 4706, 7762, 13, 308, 334, 732, 3207, 921, 21981, 1891, 12091, 3651, 29889, 13, 308, 334, 732, 3207, 1634, 29874, 2859, 830, 3274, 2859, 12091, 3651, 29889, 13, 308, 334, 732, 2457, 278, 27368, 363, 5537, 630]}
