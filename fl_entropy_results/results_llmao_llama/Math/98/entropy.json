{"line_number": 783, "line_type": "original", "code": "     *", "entropy": 3.343595504760742, "is_bug_line": false, "sus_score": 0.38641, "per_token_entropy": [5.886646270751953, 0.800544798374176], "tokens": [418, 334]}
{"line_number": 783, "line_type": "generated", "code": "\n     * @param row the row index\n     * @param column the column index\n     * @return the entry in the specified row and column\n     * @throws MatrixIndexException if the row or column index is not valid\n     */", "entropy": 0.1323515772819519, "is_bug_line": false, "sus_score": 0.38641, "per_token_entropy": [0.04350953549146652, 0.04401342198252678, 0.004000281449407339, 0.03223439306020737, 0.007161542307585478, 0.14656434953212738, 1.2820574045181274, 0.16909456253051758, 0.5563589930534363, 0.17186471819877625, 0.05099589377641678, 5.113947918289341e-05, 0.004810071084648371, 0.0006171943969093263, 0.02045489102602005, 0.01006102655082941, 0.015790188685059547, 0.0017638138961046934, 0.017861003056168556, 0.028563518077135086, 0.0010671879863366485, 0.0037574421148747206, 0.008148521184921265, 0.12151394039392471, 0.3208465874195099, 0.6119451522827148, 0.27352824807167053, 0.49235522747039795, 0.12538515031337738, 0.12310444563627243, 0.0018187901005148888, 0.29998159408569336, 0.038559649139642715, 0.005074715707451105, 0.0023871755693107843, 0.0139600969851017, 8.129743218887597e-05, 0.029507270082831383, 0.0002244459028588608, 9.035655966727063e-05, 0.047195758670568466, 0.2684127390384674, 0.7640019059181213, 0.044626280665397644, 0.005481095518916845, 0.06597977876663208, 0.05282723903656006, 0.22563639283180237, 0.014518922194838524, 0.17631131410598755, 0.10030589997768402, 0.03581984341144562], "tokens": [13, 268, 334, 732, 3207, 1948, 278, 1948, 2380, 13, 268, 334, 732, 3207, 1897, 278, 1897, 2380, 13, 268, 334, 732, 2457, 278, 6251, 297, 278, 6790, 1948, 322, 1897, 13, 268, 334, 732, 386, 5727, 22513, 3220, 2451, 565, 278, 1948, 470, 1897, 2380, 338, 451, 2854, 13, 268, 3776]}
{"line_number": 994, "line_type": "original", "code": "            for (int i = 0; i < nCols; i++) {", "entropy": 1.031507134437561, "is_bug_line": false, "sus_score": 0.25116, "per_token_entropy": [7.139294624328613, 6.332721710205078, 1.4040005207061768, 0.626350462436676, 0.38998329639434814, 0.030928973108530045, 0.018838418647646904, 0.019578656181693077, 0.005049689672887325, 0.006596812047064304, 0.023892927914857864, 1.3634370565414429, 1.0500887632369995, 0.03341994062066078, 0.017275337129831314, 0.0509895496070385, 0.022704878821969032, 0.03197614476084709], "tokens": [632, 363, 313, 524, 474, 353, 29871, 29900, 29936, 474, 529, 302, 1625, 29879, 29936, 474, 4862, 426]}
{"line_number": 994, "line_type": "generated", "code": "\n     *\n     * @param v the column vectors to solve for\n     * @return the solution vectors\n     * @throws IllegalArgumentException if columnDimension != v.size()\n     * @throws IllegalArgumentException", "entropy": 0.36797285079956055, "is_bug_line": false, "sus_score": 0.25116, "per_token_entropy": [0.63054358959198, 0.22928795218467712, 0.007266047410666943, 1.4439523220062256, 0.04615894705057144, 0.0011462554102763534, 0.05642176792025566, 0.4316457509994507, 2.2665395736694336, 0.8312354683876038, 2.0433878898620605, 1.1772410869598389, 0.3614017963409424, 1.0720927715301514, 0.6636852025985718, 0.15363267064094543, 0.1184101477265358, 0.0015248350100591779, 0.013570438139140606, 0.02926047518849373, 1.153938889503479, 0.779574990272522, 0.508901059627533, 0.34422019124031067, 0.06328385323286057, 0.08647690713405609, 0.029796354472637177, 0.013893439434468746, 0.00026806574896909297, 0.07443175464868546, 1.597391747054644e-05, 0.002578150946646929, 0.00029976642690598965, 0.04658140242099762, 0.8483380675315857, 0.024067388847470284, 0.00036590558011084795, 0.02962520532310009, 0.06908150762319565, 0.021697409451007843, 0.9773637056350708, 0.016991516575217247, 0.14029687643051147, 0.17295971512794495, 0.8351730108261108, 0.2225087732076645, 0.04493382200598717, 9.285972191719338e-05, 1.012507677078247, 7.879423355916515e-05, 0.035372909158468246, 0.00046921687317080796], "tokens": [13, 268, 334, 13, 268, 334, 732, 3207, 325, 278, 1897, 12047, 304, 4505, 363, 13, 268, 334, 732, 2457, 278, 1650, 12047, 13, 268, 334, 732, 386, 5727, 1720, 12018, 15730, 2451, 565, 1897, 16142, 2673, 2804, 325, 29889, 2311, 580, 13, 268, 334, 732, 386, 5727, 1720, 12018, 15730, 2451]}
{"line_number": 995, "line_type": "original", "code": "                sum = sum.add(data[row][i].multiply(v[i]));", "entropy": 1.309483289718628, "is_bug_line": false, "sus_score": 0.2443, "per_token_entropy": [7.047458171844482, 12.306620597839355, 1.084065556526184, 1.0646167993545532, 0.02145976386964321, 0.12251835316419601, 0.016658609732985497, 0.2013397514820099, 0.00511670159175992, 1.1602954864501953, 0.025486499071121216, 2.4748449325561523, 0.042825981974601746, 0.06391040235757828, 0.00022539935889653862, 0.005943956319242716, 1.5115200281143188, 0.03475412353873253, 0.22834821045398712, 0.07739179581403732, 0.0037491286639124155], "tokens": [462, 2533, 353, 2533, 29889, 1202, 29898, 1272, 29961, 798, 3816, 29875, 1822, 18056, 368, 29898, 29894, 29961, 29875, 2314, 416]}
{"line_number": 995, "line_type": "generated", "code": "\n     *\n     * @param b matrix of constant vectors\n     * @return a matrix of solution vectors\n     * @throws IllegalArgumentException if columnDimension != b.rowDimension\n     * or b is singular\n    ", "entropy": 0.2904372215270996, "is_bug_line": false, "sus_score": 0.2443, "per_token_entropy": [0.26989805698394775, 0.15279707312583923, 0.0509423092007637, 0.9572387933731079, 0.04558882862329483, 0.00518145551905036, 0.04067889600992203, 0.03470587730407715, 0.16017170250415802, 0.9344295859336853, 0.4613158106803894, 0.5371021628379822, 0.044204480946063995, 0.23429115116596222, 0.07844589650630951, 0.0037722873967140913, 0.021218325942754745, 0.047379616647958755, 2.2923173904418945, 0.030674206092953682, 0.23633277416229248, 0.17482800781726837, 0.01417261641472578, 0.12486657500267029, 0.07051818817853928, 0.11989636719226837, 0.07465182989835739, 0.020285407081246376, 0.0002559096028562635, 0.0931292176246643, 3.397406908334233e-05, 0.0020204621832817793, 0.0003093002596870065, 0.06222943216562271, 0.8695820569992065, 0.03627968207001686, 0.0006413786904886365, 0.0889897346496582, 0.17250898480415344, 0.014835510402917862, 0.2800378203392029, 0.0020688814111053944, 0.00030429501202888787, 0.5368858575820923, 0.19159644842147827, 0.6860679388046265, 1.3628449440002441, 1.2511754035949707, 0.8523573875427246, 0.9161176085472107, 0.40306636691093445, 0.041491784155368805], "tokens": [13, 268, 334, 13, 268, 334, 732, 3207, 289, 4636, 310, 4868, 12047, 13, 268, 334, 732, 2457, 263, 4636, 310, 1650, 12047, 13, 268, 334, 732, 386, 5727, 1720, 12018, 15730, 2451, 565, 1897, 16142, 2673, 2804, 289, 29889, 798, 16142, 2673, 13, 268, 334, 470, 289, 338, 13512, 13, 268]}
{"line_number": 986, "line_type": "original", "code": "        if (v.length != this.getColumnDimension()) {", "entropy": 1.4625972509384155, "is_bug_line": false, "sus_score": 0.23079, "per_token_entropy": [6.8478169441223145, 5.10629415512085, 0.10790584981441498, 4.135430812835693, 1.5931484699249268, 0.0378841795027256, 1.0097311735153198, 2.3414154052734375, 0.0025800534058362246, 0.057278137654066086, 0.6513866186141968, 0.00027771908207796514, 9.63164638960734e-05, 0.0306547824293375, 0.017058787867426872], "tokens": [308, 565, 313, 29894, 29889, 2848, 2804, 445, 29889, 657, 4409, 16142, 2673, 3101, 426]}
{"line_number": 986, "line_type": "generated", "code": "\n        }\n        return out;\n    }\n    \n    /**\n     * Returns the (row) vector result of premultiplying this by the vector", "entropy": 0.09229191392660141, "is_bug_line": false, "sus_score": 0.23079, "per_token_entropy": [0.30243292450904846, 1.8744922876358032, 0.4181920886039734, 0.007594522554427385, 0.10216782987117767, 0.049292147159576416, 0.004810189828276634, 0.000865680689457804, 0.0036551826633512974, 0.0200816597789526, 0.0014177043922245502, 0.004108916502445936, 0.042641397565603256, 0.0001793938863556832, 0.040324702858924866, 0.01368003711104393, 0.004276891704648733, 0.0018193849828094244, 0.0001530530134914443, 0.04478416591882706, 0.03809305280447006, 0.10910637676715851, 0.005094404332339764, 0.0002131234941771254, 0.00699523463845253, 0.004395822528749704, 0.0003332536434754729, 0.0123368501663208, 0.0014830554137006402, 0.0004191712068859488, 0.001746677909977734, 0.002916014287620783, 0.00316226645372808, 0.014659666456282139], "tokens": [13, 4706, 500, 13, 4706, 736, 714, 29936, 13, 1678, 500, 13, 268, 13, 1678, 7762, 13, 268, 334, 16969, 278, 313, 798, 29897, 4608, 1121, 310, 758, 18056, 5890, 445, 491, 278, 4608]}
{"line_number": 774, "line_type": "original", "code": "        }", "entropy": 7.9538984298706055, "is_bug_line": false, "sus_score": 0.22926, "per_token_entropy": [5.9771904945373535, 9.9306058883667], "tokens": [308, 500]}
{"line_number": 774, "line_type": "generated", "code": "\n     * Returns the matrix cell value at", "entropy": 0.5391780138015747, "is_bug_line": false, "sus_score": 0.22926, "per_token_entropy": [0.30485770106315613, 0.35657191276550293, 0.07232081890106201, 0.7698508501052856, 0.651392936706543, 1.4727802276611328, 0.7688061594963074, 0.15505839884281158, 0.3009627163410187], "tokens": [13, 268, 334, 16969, 278, 4636, 3038, 995, 472]}
