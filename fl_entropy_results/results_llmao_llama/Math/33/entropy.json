{"line_number": 338, "line_type": "original", "code": "            if (Precision.compareTo(entry, 0d, maxUlps) > 0) {", "entropy": 0.9188882112503052, "is_bug_line": true, "sus_score": 0.602, "per_token_entropy": [9.356752395629883, 2.4957985877990723, 0.1881367713212967, 1.6494543552398682, 0.0005737089086323977, 0.0004924515378661454, 0.002278947737067938, 0.0854511633515358, 0.00042000532266683877, 0.0052923341281712055, 3.522364377975464, 0.014832221902906895, 0.16568399965763092, 0.13475297391414642, 0.040192220360040665, 0.002221023431047797, 4.947429656982422, 0.03705227002501488, 0.0015442363219335675, 0.0003935516288038343, 0.02847326546907425, 1.1661779880523682, 0.015221741981804371, 0.0032982020638883114, 0.022002752870321274, 0.004804020747542381], "tokens": [632, 565, 313, 29925, 3757, 2459, 29889, 18307, 1762, 29898, 8269, 29892, 29871, 29900, 29881, 29892, 4236, 29965, 29880, 567, 29897, 1405, 29871, 29900, 29897, 426]}
{"line_number": 338, "line_type": "generated", "code": "\n        return true;\n    }\n\n    /**\n     * Returns whether the problem is unbounded.\n     * @return whether the problem is unbounded\n     */\n    boolean isUnbounded() {\n        for (int i =", "entropy": 0.13993556797504425, "is_bug_line": true, "sus_score": 0.602, "per_token_entropy": [0.09040617197751999, 0.30958303809165955, 0.25401294231414795, 0.2533379793167114, 0.0009654866298660636, 0.002646517474204302, 0.059101399034261703, 0.0014965059235692024, 0.0031969649717211723, 0.043512843549251556, 0.07432960718870163, 0.061196327209472656, 0.06617840379476547, 0.0022306579630821943, 0.0005465444410219789, 1.1689975261688232, 0.5249271392822266, 0.11502502113580704, 0.35617977380752563, 0.22326026856899261, 1.5511517524719238, 0.008381903171539307, 0.2786870300769806, 0.02915210649371147, 0.002455436158925295, 0.0015675650211051106, 0.0366678312420845, 0.019246144220232964, 0.07951871305704117, 0.011263711377978325, 0.8040630221366882, 0.030143307521939278, 0.029825281351804733, 0.0021503677126020193, 0.0807720422744751, 0.00249824533239007, 0.017225656658411026, 0.0006796196103096008, 0.012506275437772274, 0.08707904815673828, 0.005920729599893093, 0.010435421019792557, 0.0017501289257779717, 0.004860490560531616, 0.001258653705008328, 0.0041594901122152805, 0.12157253175973892, 0.4078255295753479, 0.0006204110686667264, 0.00421172333881259, 0.016870558261871338, 0.0009975224966183305], "tokens": [13, 4706, 736, 1565, 29936, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 16969, 3692, 278, 1108, 338, 443, 29306, 29889, 13, 268, 334, 732, 2457, 3692, 278, 1108, 338, 443, 29306, 13, 268, 3776, 13, 1678, 7223, 338, 2525, 29306, 580, 426, 13, 4706, 363, 313, 524, 474, 353]}
{"line_number": 336, "line_type": "original", "code": "        for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {", "entropy": 1.136046290397644, "is_bug_line": false, "sus_score": 0.39487, "per_token_entropy": [8.256244659423828, 6.269851207733154, 0.0033949140924960375, 0.050073008984327316, 4.650458812713623, 0.03584549203515053, 0.8908677697181702, 0.0838308185338974, 0.027653083205223083, 0.0013718727277591825, 0.0007418026216328144, 0.00042381841922178864, 0.14504703879356384, 0.0067038629204034805, 0.0035464982502162457, 0.038779161870479584, 7.831216335296631, 0.0021629766561090946, 0.000770391256082803, 0.01910288631916046, 0.004135034512728453, 0.06372620165348053, 0.01010964810848236, 0.0032611305359750986, 0.0018391376361250877], "tokens": [308, 363, 313, 524, 474, 353, 679, 8009, 2061, 573, 6678, 29879, 890, 474, 529, 679, 9986, 928, 616, 16174, 10302, 890, 474, 4862, 426]}
{"line_number": 336, "line_type": "generated", "code": "\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Returns whether the problem is at an unbounded state.\n     * @return whether the model has been solved\n     */\n    boolean isUnbounded", "entropy": 0.16558654606342316, "is_bug_line": false, "sus_score": 0.39487, "per_token_entropy": [0.1638394147157669, 0.5196826457977295, 0.14711183309555054, 0.29657649993896484, 0.07164791971445084, 0.002068405505269766, 0.0021346656139940023, 0.2521021068096161, 0.03657704219222069, 0.02799881063401699, 0.0006687788409180939, 0.0011319665936753154, 0.01654241792857647, 0.0008247073274105787, 0.0018154582940042019, 0.029548589140176773, 0.05673933029174805, 0.05014534667134285, 0.06006437912583351, 0.0017903504194691777, 0.001046467456035316, 1.1497570276260376, 0.4783550500869751, 0.11451539397239685, 0.3530143201351166, 0.22231446206569672, 1.1651077270507812, 0.48329320549964905, 1.1711640357971191, 0.025175008922815323, 0.01809845119714737, 0.027400610968470573, 0.009349845349788666, 0.004233683925122023, 0.0012011463986709714, 0.02567276544868946, 0.015891332179307938, 0.04267258197069168, 0.01081132609397173, 0.3108115792274475, 0.6860838532447815, 0.2415309101343155, 0.17802083492279053, 0.04433620721101761, 0.005993726197630167, 0.008160345256328583, 0.0010789770167320967, 0.01024782843887806, 0.04522736743092537, 0.006997365038841963, 0.012526877224445343, 0.0013994909822940826], "tokens": [13, 9651, 500, 13, 4706, 500, 13, 4706, 736, 1565, 29936, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 16969, 3692, 278, 1108, 338, 472, 385, 443, 29306, 2106, 29889, 13, 268, 334, 732, 2457, 3692, 278, 1904, 756, 1063, 7484, 13, 268, 3776, 13, 1678, 7223, 338, 2525, 29306]}
{"line_number": 337, "line_type": "original", "code": "            final double entry = tableau.getEntry(0, i);", "entropy": 0.8942226767539978, "is_bug_line": false, "sus_score": 0.38768, "per_token_entropy": [7.593540668487549, 4.238103866577148, 0.23153121769428253, 0.6866796612739563, 0.20910455286502838, 0.15161634981632233, 0.00012444675667211413, 0.0008250646642409265, 0.0005380851216614246, 0.000990615226328373, 0.0019873883575201035, 0.20347575843334198, 0.0005208089714869857, 0.040611933916807175, 0.05368918180465698], "tokens": [632, 2186, 3765, 6251, 353, 1591, 585, 29889, 657, 9634, 29898, 29900, 29892, 474, 416]}
{"line_number": 337, "line_type": "generated", "code": "\n        }\n        return true;\n    }\n\n    /**\n     * Returns whether the problem is at a basic state.\n     * @return whether the model has been solved\n     */\n    boolean isBasic() {\n        for", "entropy": 0.1990697681903839, "is_bug_line": false, "sus_score": 0.38768, "per_token_entropy": [0.10099266469478607, 0.5768575668334961, 0.004840560257434845, 0.0027769359294325113, 0.23711363971233368, 0.03351401537656784, 0.02577175199985504, 0.0005709686665795743, 0.0008912881603464484, 0.01376305241137743, 0.0006420934805646539, 0.0013448490062728524, 0.026443954557180405, 0.04884268343448639, 0.05130499601364136, 0.05937553942203522, 0.00145329674705863, 0.0008370947907678783, 1.1670607328414917, 0.5063076615333557, 0.11100705713033676, 0.3482711613178253, 0.22326228022575378, 1.1404669284820557, 0.9950520992279053, 1.331477403640747, 1.495368242263794, 0.06120585650205612, 0.017499569803476334, 0.0013325868640094995, 0.0017613149248063564, 0.03811635076999664, 0.01251781266182661, 0.05393917113542557, 0.03855666518211365, 0.2922841012477875, 0.45729538798332214, 0.11575399339199066, 0.03983223810791969, 0.04923064261674881, 0.004602909088134766, 0.01300966925919056, 0.0002985746832564473, 0.004274161532521248, 0.07689076662063599, 0.012604337185621262, 0.1170303001999855, 0.049433641135692596, 0.0011046981671825051, 0.0014991246862336993, 0.08826913684606552, 0.2976730465888977], "tokens": [13, 4706, 500, 13, 4706, 736, 1565, 29936, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 16969, 3692, 278, 1108, 338, 472, 263, 6996, 2106, 29889, 13, 268, 334, 732, 2457, 3692, 278, 1904, 756, 1063, 7484, 13, 268, 3776, 13, 1678, 7223, 338, 16616, 580, 426, 13, 4706, 363]}
{"line_number": 339, "line_type": "original", "code": "                columnsToDrop.add(i);", "entropy": 3.020019054412842, "is_bug_line": false, "sus_score": 0.29218, "per_token_entropy": [9.305906295776367, 15.15993881225586, 0.2894137501716614, 0.10283147543668747, 0.4819422960281372, 0.10593331605195999, 0.018349654972553253, 1.6119259595870972, 0.10392970591783524], "tokens": [462, 4341, 1762, 15063, 29889, 1202, 29898, 29875, 416]}
{"line_number": 339, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Get the number of artificial variables in the tableau.\n     * @return the number of artificial variables in the tableau\n     */\n    int getNumArtificialVariables() {\n       ", "entropy": 0.20805417001247406, "is_bug_line": false, "sus_score": 0.29218, "per_token_entropy": [0.04039362818002701, 0.41587910056114197, 0.006489512976258993, 0.009019938297569752, 0.07014929503202438, 0.0754101574420929, 0.06955132633447647, 0.06503409892320633, 0.0020713796839118004, 0.0006205302197486162, 2.487727165222168, 0.16958075761795044, 2.0429024696350098, 0.0032591104973107576, 1.3746246099472046, 0.10168584436178207, 0.9752032160758972, 0.32634493708610535, 0.7807483673095703, 0.01850132830440998, 0.12272629886865616, 0.043814681470394135, 0.002817591419443488, 0.0038112399633973837, 0.05988350883126259, 0.0015137653099372983, 0.27397722005844116, 0.01207058783620596, 0.0019320646533742547, 0.020056655630469322, 0.008159635588526726, 0.15840674936771393, 0.0021757043432444334, 0.004000162705779076, 0.0010970771545544267, 0.3330039381980896, 0.004469168372452259, 0.010898706503212452, 0.0015062665333971381, 0.0062186080031096935, 0.6542134284973145, 0.00150079105515033, 0.007694013882428408, 0.0027925088070333004, 0.00035506143467500806, 0.0005218812730163336, 0.0018911350052803755, 0.00023910524032544345, 0.0012359131360426545, 0.000535821367520839, 0.003770505776628852, 0.036329228430986404], "tokens": [13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 3617, 278, 1353, 310, 23116, 3651, 297, 278, 1591, 585, 29889, 13, 268, 334, 732, 2457, 278, 1353, 310, 23116, 3651, 297, 278, 1591, 585, 13, 268, 3776, 13, 1678, 938, 679, 8009, 9986, 928, 616, 10444, 1849, 580, 426, 13, 4706]}
{"line_number": 226, "line_type": "original", "code": "                matrix.setEntry(row, getSlackVariableOffset() + slackVar++, -1); // excess", "entropy": 1.6243294477462769, "is_bug_line": false, "sus_score": 0.26415, "per_token_entropy": [9.782597541809082, 13.054398536682129, 0.7279289364814758, 0.1482067108154297, 0.1634628027677536, 0.0035847469698637724, 0.850495457649231, 0.030362823978066444, 0.48071640729904175, 0.5657294988632202, 0.003532005939632654, 0.0028484982904046774, 0.0013666347367689013, 0.02128869853913784, 0.14120548963546753, 0.17462371289730072, 0.005880436860024929, 0.027909433469176292, 0.4845135807991028, 1.857962727546692, 0.01639302633702755, 0.015787841752171516, 1.5374653339385986, 8.885644912719727], "tokens": [462, 4636, 29889, 842, 9634, 29898, 798, 29892, 679, 29903, 2364, 16174, 10302, 580, 718, 269, 2364, 9037, 10024, 448, 29896, 416, 849, 19163]}
{"line_number": 226, "line_type": "generated", "code": "\n    /**\n     * Get the offset of the slack variables in the tableau.\n     * @return offset of the slack variables\n     */\n    protected final int getSlackVariableOffset() {\n        return numDecisionVari", "entropy": 0.1926019787788391, "is_bug_line": false, "sus_score": 0.26415, "per_token_entropy": [0.056612271815538406, 0.2613241970539093, 0.08432312309741974, 0.0859774574637413, 0.0038379596080631018, 0.0006924853660166264, 0.6106827259063721, 0.12509633600711823, 0.9135950803756714, 0.6590867638587952, 0.08888284862041473, 1.1809816360473633, 0.0004127365828026086, 0.28938135504722595, 0.7219499349594116, 0.45132869482040405, 0.20845703780651093, 0.008178908377885818, 0.25458139181137085, 0.06988731771707535, 0.0040699755772948265, 0.00955567229539156, 0.10376820713281631, 0.00598412798717618, 0.8776669502258301, 0.6468133926391602, 0.37694358825683594, 0.05923432111740112, 0.0006037319544702768, 0.03095867671072483, 0.697350025177002, 0.003991376142948866, 0.010047100484371185, 0.0009777533123269677, 0.019136101007461548, 0.24829214811325073, 0.2745181918144226, 0.0019472938729450107, 0.0006828360492363572, 0.0010946955299004912, 0.00019572250312194228, 0.00044741155579686165, 0.00021836756786797196, 0.0009265420376323164, 0.0009066523634828627, 0.0054896315559744835, 0.03297943249344826, 0.047246359288692474, 0.44968220591545105, 0.02729656547307968, 0.00046039948938414454, 0.0005479741375893354], "tokens": [13, 1678, 7762, 13, 268, 334, 3617, 278, 9210, 310, 278, 269, 2364, 3651, 297, 278, 1591, 585, 29889, 13, 268, 334, 732, 2457, 9210, 310, 278, 269, 2364, 3651, 13, 268, 3776, 13, 1678, 6364, 2186, 938, 679, 29903, 2364, 16174, 10302, 580, 426, 13, 4706, 736, 954, 6185, 2459, 10444]}
