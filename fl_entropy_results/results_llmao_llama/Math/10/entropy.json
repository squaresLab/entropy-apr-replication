{"line_number": 1391, "line_type": "original", "code": "        add(tmp1, 0, tmp2, 0, tmp2, 0);                 // x^2 + y^2", "entropy": 1.0830715894699097, "is_bug_line": false, "sus_score": 0.5308, "per_token_entropy": [6.513125419616699, 5.824594020843506, 0.14334969222545624, 5.5154595375061035, 1.0925827026367188, 0.036137234419584274, 0.08554298430681229, 0.03620299696922302, 0.0016548046842217445, 0.3802858591079712, 0.2760574221611023, 0.0011944787111133337, 0.006938292644917965, 0.008265573531389236, 0.022835154086351395, 0.6641983389854431, 1.9050995111465454, 0.0028790475334972143, 0.0027601737529039383, 0.00285337190143764, 0.006714638322591782, 3.2580761909484863, 1.79399573802948, 2.1735734939575195, 0.8060715198516846, 0.061908453702926636, 1.3529443740844727, 0.5123843550682068, 0.0035400837659835815, 0.0009201106731779873], "tokens": [308, 788, 29898, 7050, 29896, 29892, 29871, 29900, 29892, 13128, 29906, 29892, 29871, 29900, 29892, 13128, 29906, 29892, 29871, 29900, 416, 462, 849, 921, 29985, 29906, 718, 343, 29985, 29906]}
{"line_number": 1391, "line_type": "generated", "code": "\n        }\n\n        // apply function composition\n        compose(operand, operandOffset, function, result, resultOffset);\n\n    }\n\n    /** Compute hyperbolic sine of a derivative structure.\n     * @", "entropy": 0.027349792420864105, "is_bug_line": false, "sus_score": 0.5308, "per_token_entropy": [0.05238603800535202, 0.35072970390319824, 0.005533022340387106, 0.004155928734689951, 0.015803683549165726, 0.003111404599621892, 0.014613615348935127, 0.02907973900437355, 0.008654704317450523, 0.0009715604246594012, 0.003977127838879824, 0.012678613886237144, 0.0030939350835978985, 0.000503770774230361, 0.04371370002627373, 3.659658250398934e-05, 0.0001137191939051263, 0.0022587282583117485, 2.312633478140924e-05, 5.8530047681415454e-05, 0.00438098656013608, 0.001116486731916666, 9.178694017464295e-05, 0.0009581027552485466, 0.00011884459672728553, 0.0006870055221952498, 2.90866428258596e-05, 0.0019309938652440906, 0.0007613382767885923, 0.023206427693367004, 0.015355578623712063, 0.00027497802511788905, 0.00011669908417388797, 0.005280238576233387, 0.006199889350682497, 0.0013888961402699351, 0.02215515822172165, 0.0006036128615960479, 0.6080975532531738, 4.708655978902243e-05, 8.487341256113723e-05, 0.17115584015846252, 4.2437604861333966e-05, 0.0017059786478057504, 0.0006594866863451898, 0.0003833036171272397, 0.00025006983196362853, 0.0008685392094776034, 0.00012289722508285195, 0.0008211340173147619, 0.00012432756193447858, 0.0016721803694963455], "tokens": [13, 4706, 500, 13, 13, 4706, 849, 3394, 740, 15259, 13, 4706, 27435, 29898, 3372, 392, 29892, 1751, 392, 10302, 29892, 740, 29892, 1121, 29892, 1121, 10302, 416, 13, 13, 1678, 500, 13, 13, 1678, 7762, 11796, 29872, 11266, 2095, 293, 269, 457, 310, 263, 16291, 3829, 29889, 13, 268, 334, 732]}
{"line_number": 757, "line_type": "original", "code": "", "entropy": 4.883190155029297, "is_bug_line": false, "sus_score": 0.37792, "per_token_entropy": [4.725095748901367, 5.041284084320068], "tokens": [29871, 13]}
{"line_number": 757, "line_type": "generated", "code": "    * one of the input arrays)\n     * @param resultOffset offset of the result in its array\n     */\n    public void remainder(final double[] lhs, final int lhsOffset,\n                          final double[] rhs, final", "entropy": 0.0388655848801136, "is_bug_line": false, "sus_score": 0.37792, "per_token_entropy": [1.1313310861587524, 0.4242367744445801, 0.049323465675115585, 0.0008746135863475502, 0.012452354654669762, 0.0006316096987575293, 0.0008336406317539513, 0.07556182146072388, 0.01648496277630329, 0.043607570230960846, 0.003134815488010645, 0.00030310326837934554, 0.0001438752660760656, 0.00045313104055821896, 0.00032574593205936253, 0.00043418517452664673, 6.12716976320371e-05, 7.045020902296528e-05, 0.00016008525562938303, 0.0002588890492916107, 0.0002775999018922448, 0.00012742661056108773, 0.0037028100341558456, 0.03602684661746025, 0.05562093108892441, 0.009970386512577534, 0.043686311691999435, 0.008317474275827408, 0.0047979699447751045, 0.0024698248598724604, 0.0005945583689026535, 0.003777512814849615, 0.0007817073492333293, 0.0005497612874023616, 0.002097907941788435, 4.2199197196168825e-05, 0.0001941730733960867, 0.002605973742902279, 0.00017414960893802345, 0.0004951919545419514, 9.417489309271332e-06, 0.00012838016846217215, 0.0003333727945573628, 0.0028962830547243357, 0.020612670108675957, 0.05713358521461487, 0.0010468247346580029, 0.0004932855372317135, 0.0002040654799202457, 0.0004260824352968484, 8.272782724816352e-05, 0.0006494796834886074], "tokens": [268, 334, 697, 310, 278, 1881, 7049, 29897, 13, 268, 334, 732, 3207, 1121, 10302, 9210, 310, 278, 1121, 297, 967, 1409, 13, 268, 3776, 13, 1678, 970, 1780, 21162, 29898, 8394, 3765, 2636, 301, 9499, 29892, 2186, 938, 301, 9499, 10302, 29892, 13, 462, 3986, 2186, 3765, 2636, 29365, 29892, 2186]}
{"line_number": 1399, "line_type": "original", "code": "            atan(tmp1, 0, tmp2, 0);                     // atan(y / (r + x))", "entropy": 1.355055570602417, "is_bug_line": false, "sus_score": 0.36015, "per_token_entropy": [10.24034309387207, 9.530118942260742, 0.32344111800193787, 0.6472495198249817, 8.855424880981445, 0.9907025098800659, 1.614654302597046, 0.11862149089574814, 0.010666029527783394, 0.029404137283563614, 0.49054884910583496, 0.10301797091960907, 0.00222090445458889, 0.007078332360833883, 0.0034151107538491488, 0.0692211240530014, 1.500957727432251, 0.751501739025116, 0.03174474090337753, 0.16236422955989838, 0.009015803225338459, 0.046721458435058594, 1.059657335281372, 0.13460668921470642, 0.5141847133636475, 0.06937506049871445, 1.8270504474639893, 0.13095630705356598, 0.02234729193150997], "tokens": [632, 472, 273, 29898, 7050, 29896, 29892, 29871, 29900, 29892, 13128, 29906, 29892, 29871, 29900, 416, 462, 268, 849, 472, 273, 29898, 29891, 847, 313, 29878, 718, 921, 876]}
{"line_number": 1399, "line_type": "generated", "code": "\n     * @param operand array holding the operand\n     * @param operandOffset offset of the operand in its array\n     * @param result array where result must be stored (for\n     * hyperbolic sine the result", "entropy": 0.01589897647500038, "is_bug_line": false, "sus_score": 0.36015, "per_token_entropy": [0.1547105312347412, 0.34100085496902466, 0.012351921759545803, 0.02123081497848034, 0.0007279845303855836, 0.03514862060546875, 0.0002330270071979612, 0.002474462613463402, 0.00016032364510465413, 0.0001284993631998077, 0.0006864098832011223, 0.00021753329201601446, 0.002084703417494893, 0.09103620797395706, 0.0003980797773692757, 0.0001147919538198039, 2.0146166207268834e-05, 0.00444756867364049, 1.3351351299206726e-05, 5.543078441405669e-05, 0.00021860594279132783, 3.6238969187252223e-05, 1.490105023549404e-05, 0.00010299152199877426, 7.271740287251305e-06, 0.00011002412065863609, 3.862306402879767e-05, 0.0002252801787108183, 0.00039915222441777587, 0.04168481007218361, 0.0007840896723791957, 0.0004328744253143668, 0.0004117832868359983, 0.0017886845162138343, 0.0020252210088074207, 0.0002019201492657885, 0.0005183068569749594, 0.00019834458362311125, 2.9205850296420977e-05, 3.4450891689630225e-05, 0.027968786656856537, 0.0010643299901857972, 0.021401304751634598, 0.03536301478743553, 0.00013052565918769687, 0.004826205782592297, 5.674201020156033e-05, 4.005352093372494e-05, 0.016604209318757057, 5.113947918289341e-05, 0.002524405485019088, 0.0002119316632160917], "tokens": [13, 268, 334, 732, 3207, 1751, 392, 1409, 13587, 278, 1751, 392, 13, 268, 334, 732, 3207, 1751, 392, 10302, 9210, 310, 278, 1751, 392, 297, 967, 1409, 13, 268, 334, 732, 3207, 1121, 1409, 988, 1121, 1818, 367, 6087, 313, 1454, 13, 268, 334, 11266, 2095, 293, 269, 457, 278, 1121]}
{"line_number": 1389, "line_type": "original", "code": "        double[] tmp2 = new double[getSize()];", "entropy": 1.7239969968795776, "is_bug_line": false, "sus_score": 0.35228, "per_token_entropy": [7.780858039855957, 4.297976493835449, 3.981036424636841, 1.3420430421829224, 3.5989990234375, 0.08419196307659149, 0.07381153851747513, 0.0030100299045443535, 0.010577094741165638, 1.2188206911087036, 0.0022808508947491646, 0.0009320206008851528, 0.017424244433641434], "tokens": [308, 3765, 2636, 13128, 29906, 353, 716, 3765, 29961, 657, 3505, 580, 1385]}
{"line_number": 1389, "line_type": "generated", "code": "\n                function[i] = 0;\n            }\n        }\n\n        // apply function composition\n        compose(operand, operandOffset, function, result, resultOffset);\n\n    }\n\n    /** Compute hyper", "entropy": 0.0600302591919899, "is_bug_line": false, "sus_score": 0.35228, "per_token_entropy": [0.1658572107553482, 0.5018512606620789, 0.10124683380126953, 0.0016191004542633891, 0.003344183089211583, 0.0005844315164722502, 0.007239419035613537, 1.123855710029602, 0.03588654845952988, 0.2583637237548828, 0.020104676485061646, 0.07690964639186859, 0.000379132863599807, 0.0007850425899960101, 0.03025110624730587, 0.00014447122521232814, 0.0009673921740613878, 0.008384031243622303, 0.002038188511505723, 0.0062274932861328125, 0.023304728791117668, 0.008360506035387516, 0.0009160612826235592, 0.002817948115989566, 0.0115628307685256, 0.002328186994418502, 0.00042024365393444896, 0.047121159732341766, 4.5060096454108134e-05, 9.238292841473594e-05, 0.0019757291302084923, 2.2649508537142538e-05, 5.435795901576057e-05, 0.0039770095609128475, 0.0009607228566892445, 0.00010859376925509423, 0.0008205384365282953, 0.00011062010162277147, 0.0006571040721610188, 3.2305197237292305e-05, 0.0009763241396285594, 0.0004520586517173797, 0.018743189051747322, 0.009989151731133461, 0.00022873646230436862, 6.580135959666222e-05, 0.0028594343457370996, 0.00529992301017046, 0.001007526065222919, 0.024493461474776268, 0.0006768796010874212, 0.6050525903701782], "tokens": [13, 18884, 740, 29961, 29875, 29962, 353, 29871, 29900, 29936, 13, 9651, 500, 13, 4706, 500, 13, 13, 4706, 849, 3394, 740, 15259, 13, 4706, 27435, 29898, 3372, 392, 29892, 1751, 392, 10302, 29892, 740, 29892, 1121, 29892, 1121, 10302, 416, 13, 13, 1678, 500, 13, 13, 1678, 7762, 11796, 29872, 11266]}
