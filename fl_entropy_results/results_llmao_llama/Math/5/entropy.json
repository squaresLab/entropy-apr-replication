{"line_number": 305, "line_type": "original", "code": "            return NaN;", "entropy": 3.604531764984131, "is_bug_line": true, "sus_score": 0.5267, "per_token_entropy": [7.401767730712891, 1.3301975727081299, 4.713936805725098, 0.9722256064414978], "tokens": [632, 736, 18780, 29936]}
{"line_number": 305, "line_type": "generated", "code": "\n     * Return the hash code for this complex number.\n     *\n     * @return hash code for the complex number\n     */\n    @Override\n    public int hashCode() {\n        return 37 * (7 * (", "entropy": 0.31107547879219055, "is_bug_line": true, "sus_score": 0.5267, "per_token_entropy": [0.4271010160446167, 0.3331097364425659, 0.05843247100710869, 2.5606513023376465, 1.3348380327224731, 0.47760993242263794, 0.010875830426812172, 0.021090874448418617, 0.24783141911029816, 0.1459566056728363, 0.19265955686569214, 0.008130784146487713, 0.04283728823065758, 0.08233125507831573, 0.02021496370434761, 0.23156867921352386, 0.04538698494434357, 0.001490197260864079, 0.17226718366146088, 0.0022852513939142227, 0.5632489919662476, 0.039666350930929184, 0.279413640499115, 1.8692076206207275, 0.12108682096004486, 0.19723919034004211, 0.5773606300354004, 0.08386929333209991, 0.11522869765758514, 0.003954805433750153, 0.06320138275623322, 0.017001008614897728, 0.002893430180847645, 0.0043082283809781075, 0.015089061111211777, 0.005523656960576773, 0.005551871843636036, 0.0018086755881085992, 0.00012575789878610522, 0.019630441442131996, 0.002600504318252206, 0.011181667447090149, 0.24023433029651642, 0.9989380836486816, 0.39547112584114075, 0.3399999439716339, 0.07292255759239197, 0.023388229310512543, 0.2985115051269531, 2.522149085998535, 0.27198776602745056, 0.5964614152908325], "tokens": [13, 268, 334, 7106, 278, 6608, 775, 363, 445, 4280, 1353, 29889, 13, 268, 334, 13, 268, 334, 732, 2457, 6608, 775, 363, 278, 4280, 1353, 13, 268, 3776, 13, 1678, 732, 4640, 13, 1678, 970, 938, 6608, 3399, 580, 426, 13, 4706, 736, 29871, 29941, 29955, 334, 313, 29955, 334, 313]}
{"line_number": 345, "line_type": "original", "code": "            if (c.isNaN) {", "entropy": 2.587340831756592, "is_bug_line": false, "sus_score": 0.36001, "per_token_entropy": [9.729538917541504, 3.8416225910186768, 0.11337094753980637, 8.182027816772461, 0.2162989228963852, 0.7459825873374939, 0.12496347725391388, 0.3057005703449249, 0.026561902835965157], "tokens": [632, 565, 313, 29883, 29889, 275, 19377, 29897, 426]}
{"line_number": 345, "line_type": "generated", "code": "\n    public boolean isNaN() {\n        return isNaN;\n    }\n\n    /**\n     * Checks whether either or both parts of this complex number is\n     * infinite and neither is {@code NaN}.\n     *\n    ", "entropy": 0.07675744593143463, "is_bug_line": false, "sus_score": 0.36001, "per_token_entropy": [0.1964762955904007, 0.4468262195587158, 0.1623525768518448, 0.013908135704696178, 0.0021534604020416737, 0.011255813762545586, 0.07905179262161255, 0.007108042482286692, 0.009973455220460892, 0.08035344630479813, 0.013706965371966362, 0.1700650006532669, 0.0032256022095680237, 0.015996336936950684, 0.0019791792146861553, 0.033176302909851074, 0.009397084824740887, 0.01077759824693203, 0.1708570420742035, 0.08572474122047424, 0.010293254628777504, 0.027064654976129532, 0.0033241037745028734, 0.00030989613151177764, 0.13699711859226227, 0.06465692073106766, 0.03153638541698456, 0.35956820845603943, 0.14460612833499908, 0.0020042823161929846, 0.0011547094909474254, 0.003927732817828655, 0.001493292162194848, 0.0040609524585306644, 0.002044255845248699, 0.023586297407746315, 0.6165125370025635, 0.0013131813611835241, 0.00018273114983458072, 0.10847682505846024, 0.44420766830444336, 0.004443296231329441, 0.2170325666666031, 0.024540571495890617, 0.002186052966862917, 0.19729378819465637, 0.004812444094568491, 0.013253801502287388, 0.00175453198608011, 0.00044955636258237064, 0.012866221368312836, 0.0010680215200409293], "tokens": [13, 1678, 970, 7223, 338, 19377, 580, 426, 13, 4706, 736, 338, 19377, 29936, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 5399, 29879, 3692, 2845, 470, 1716, 5633, 310, 445, 4280, 1353, 338, 13, 268, 334, 10362, 322, 9561, 338, 26633, 401, 18780, 1836, 13, 268, 334, 13, 268]}
{"line_number": 304, "line_type": "original", "code": "        if (real == 0.0 && imaginary == 0.0) {", "entropy": 0.8469192981719971, "is_bug_line": false, "sus_score": 0.29454, "per_token_entropy": [7.5480523109436035, 1.8740962743759155, 0.12722620368003845, 3.5379223823547363, 0.3912631571292877, 1.0515389442443848, 0.016631878912448883, 0.5892655253410339, 0.06147022917866707, 0.34803473949432373, 0.3513365089893341, 0.0015411416534334421, 0.03307170048356056, 0.023621924221515656, 0.003944712691009045, 0.006238984875380993, 0.0005301024066284299, 0.11502619087696075, 0.010654824785888195], "tokens": [308, 565, 313, 6370, 1275, 29871, 29900, 29889, 29900, 2607, 6382, 3821, 1275, 29871, 29900, 29889, 29900, 29897, 426]}
{"line_number": 304, "line_type": "generated", "code": "\n    /**\n     * Returns a hash code for the instance.  All NaN values have the same\n     * hash code.\n     *\n     * @return a hash code value for this object.\n     */\n    @Override\n   ", "entropy": 0.1823640912771225, "is_bug_line": false, "sus_score": 0.29454, "per_token_entropy": [0.10238349437713623, 0.600802481174469, 0.24416005611419678, 0.39099428057670593, 0.010974053293466568, 0.0009581027552485466, 1.2399951219558716, 0.7949666380882263, 0.1518777459859848, 0.03427388519048691, 0.12376899272203445, 0.2476932406425476, 1.5766050815582275, 0.011016499251127243, 0.6442593336105347, 0.6370949745178223, 1.1678547859191895, 0.017421433702111244, 0.4093460142612457, 0.06456629186868668, 0.102298803627491, 0.31877073645591736, 0.001836162875406444, 0.0003766304289456457, 0.0014327033422887325, 0.02800031751394272, 0.02811390906572342, 0.022829795256257057, 0.007272674702107906, 0.03066345490515232, 0.03318298980593681, 0.006059371400624514, 0.0010919567430391908, 0.005241936072707176, 0.0005540504935197532, 0.30333438515663147, 0.003883915953338146, 0.002316293539479375, 0.0012384133879095316, 0.003976890817284584, 0.0012877037515863776, 6.48477507638745e-05, 0.016547342762351036, 0.0009184433147311211, 0.007170418743044138, 0.014477682299911976, 0.0012618682812899351, 0.026911720633506775, 0.023748237639665604, 0.0026955006178468466, 0.0033394305501133204, 0.011022040620446205], "tokens": [13, 1678, 7762, 13, 268, 334, 16969, 263, 6608, 775, 363, 278, 2777, 29889, 29871, 2178, 18780, 1819, 505, 278, 1021, 13, 268, 334, 6608, 775, 29889, 13, 268, 334, 13, 268, 334, 732, 2457, 263, 6608, 775, 995, 363, 445, 1203, 29889, 13, 268, 3776, 13, 1678, 732, 4640, 13, 1678]}
{"line_number": 340, "line_type": "original", "code": "        if (this == other) {", "entropy": 2.8594911098480225, "is_bug_line": false, "sus_score": 0.29211, "per_token_entropy": [3.3208351135253906, 5.92264986038208, 0.36719709634780884, 4.523233890533447, 2.840648889541626, 5.576756954193115, 0.2725868225097656, 0.05202080309391022], "tokens": [308, 565, 313, 1366, 1275, 916, 29897, 426]}
{"line_number": 340, "line_type": "generated", "code": "\n     * {@code Double.NaN}.\n     *\n     * @return  {@code true} if either or both parts of this complex number is\n<|mask:1|><|mask:0|>\n     * {@code Double", "entropy": 0.16816574335098267, "is_bug_line": false, "sus_score": 0.29211, "per_token_entropy": [0.9674906730651855, 0.26398104429244995, 0.04815390706062317, 0.9923595190048218, 0.08328288048505783, 0.5140938758850098, 0.0026587634347379208, 0.016155758872628212, 0.04726341366767883, 0.070393867790699, 0.07676955312490463, 0.005108043551445007, 0.17076900601387024, 0.02817765437066555, 0.0008631794480606914, 0.006576087325811386, 0.0023215266410261393, 1.852205514907837, 0.5201321840286255, 0.0007798014557920396, 0.04083935171365738, 0.003951124381273985, 0.04145633056759834, 0.0912708267569542, 0.04734255000948906, 0.001189477858133614, 0.005699336528778076, 0.2673276960849762, 0.009872891008853912, 0.10043809562921524, 0.09691888093948364, 0.6172798275947571, 0.07764806598424911, 1.3818765878677368, 0.0007489498239010572, 0.00553906848654151, 0.0022292304784059525, 0.09122904390096664, 0.004072943702340126, 0.08133465051651001, 0.00044347942457534373, 0.0016590891173109412, 0.0003545847721397877, 0.005610078107565641, 0.0008142255246639252, 0.0019488405669108033, 0.009375355206429958, 0.011438503861427307, 0.0031190102454274893, 0.0608409121632576, 0.0008254220010712743, 0.010387877002358437], "tokens": [13, 268, 334, 26633, 401, 11599, 29889, 19377, 1836, 13, 268, 334, 13, 268, 334, 732, 2457, 29871, 26633, 401, 1565, 29913, 565, 2845, 470, 1716, 5633, 310, 445, 4280, 1353, 338, 13, 29966, 29989, 13168, 29901, 29896, 29989, 5299, 29989, 13168, 29901, 29900, 29989, 29958, 13, 268, 334, 26633, 401, 11599]}
{"line_number": 348, "line_type": "original", "code": "                return (real == c.real) && (imaginary == c.imaginary);", "entropy": 1.2117083072662354, "is_bug_line": false, "sus_score": 0.27443, "per_token_entropy": [10.069666862487793, 6.516759395599365, 2.6899638175964355, 1.7646160125732422, 0.4123925566673279, 3.1785454750061035, 0.013487995602190495, 0.06088802590966225, 0.4230816960334778, 0.0497082881629467, 0.17977681756019592, 0.003476292360574007, 0.00025602878304198384, 0.00039414744242094457, 0.0046625942923128605, 0.008169213309884071, 0.001141492510214448, 0.0013162767281755805, 0.0008417400531470776, 0.000486970558995381, 0.06624144315719604], "tokens": [462, 736, 313, 6370, 1275, 274, 29889, 6370, 29897, 2607, 313, 326, 351, 3821, 1275, 274, 29889, 326, 351, 3821, 416]}
{"line_number": 348, "line_type": "generated", "code": "\n    /**\n     * Checks whether either or both parts of this complex number is\n     * infinite and neither is {@code Double.NaN}.\n     *\n     * @return true if either or both parts of this complex number is\n    ", "entropy": 0.1010683998465538, "is_bug_line": false, "sus_score": 0.27443, "per_token_entropy": [0.08538582175970078, 0.3819636404514313, 0.05819665268063545, 0.11263032257556915, 0.0059171742759644985, 0.0011268462985754013, 0.3699352741241455, 0.06331999599933624, 0.025610603392124176, 0.4342430531978607, 0.1640779972076416, 0.0022965504322201014, 0.0011297041783109307, 0.003939725458621979, 0.002807368291541934, 0.004800461698323488, 0.001747867907397449, 0.04327233508229256, 0.6911929845809937, 0.0010725465836003423, 0.0004318020073696971, 0.1636512726545334, 0.8197988271713257, 0.005746036767959595, 0.10599830001592636, 0.03623702749609947, 0.0028433867264539003, 1.4678078889846802, 0.0004357342259027064, 0.0010699268896132708, 0.006051906384527683, 0.018802737817168236, 0.0014191328082233667, 0.0010586139978840947, 0.01798149012029171, 0.0010768335778266191, 0.000734178873244673, 0.0019621660467237234, 0.000927137560211122, 0.015342782251536846, 0.0065186480060219765, 0.01386675238609314, 0.0074333748780190945, 0.000614335120189935, 0.0009775151265785098, 0.01122210081666708, 0.0014179424615576863, 0.0009585791267454624, 0.0029294455889612436, 0.002438668627291918, 0.08197163045406342, 0.0011632826644927263], "tokens": [13, 1678, 7762, 13, 268, 334, 5399, 29879, 3692, 2845, 470, 1716, 5633, 310, 445, 4280, 1353, 338, 13, 268, 334, 10362, 322, 9561, 338, 26633, 401, 11599, 29889, 19377, 1836, 13, 268, 334, 13, 268, 334, 732, 2457, 1565, 565, 2845, 470, 1716, 5633, 310, 445, 4280, 1353, 338, 13, 268]}
