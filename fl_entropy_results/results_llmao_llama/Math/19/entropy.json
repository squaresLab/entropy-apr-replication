{"line_number": 944, "line_type": "original", "code": "                double diff = boundaries[1][i] - boundaries[0][i];", "entropy": 0.9580698609352112, "is_bug_line": false, "sus_score": 0.29306, "per_token_entropy": [9.097989082336426, 5.641561031341553, 1.0376644134521484, 0.193440780043602, 0.11649984121322632, 0.0012722263345494866, 0.009429795667529106, 0.005996807012706995, 0.06771540641784668, 0.0032250082585960627, 0.025000624358654022, 0.08002931624650955, 0.0006474544061347842, 0.0019286142196506262, 0.000993830617517233, 0.0012668687850236893, 0.0025279729161411524], "tokens": [462, 3765, 2923, 353, 24371, 29961, 29896, 3816, 29875, 29962, 448, 24371, 29961, 29900, 3816, 29875, 1385]}
{"line_number": 944, "line_type": "generated", "code": "\n        /**\n         * @param point Normalized objective variables.\n         * @param repaired Repaired objective variables.\n         * @return the penalty for violated bounds.\n         */\n        public double penalty(final double[]", "entropy": 0.13523118197917938, "is_bug_line": false, "sus_score": 0.29306, "per_token_entropy": [0.09021284431219101, 0.11741188168525696, 0.12885251641273499, 0.05068839713931084, 0.009168545715510845, 0.0004204819560982287, 0.21632370352745056, 0.10784131288528442, 1.7582489252090454, 0.5328410863876343, 0.0012188870459794998, 0.02354496344923973, 0.007117629982531071, 0.03367539495229721, 0.0007884969236329198, 0.0031967272516340017, 0.002012729411944747, 0.0008319730986841023, 0.47450438141822815, 0.18865209817886353, 0.00114292127545923, 0.00018261195509694517, 0.9448274970054626, 0.009338153526186943, 0.00013433984713628888, 0.3087606728076935, 0.0075296880677342415, 0.0805196538567543, 0.0032433071173727512, 0.0022220939863473177, 0.0046783750876784325, 0.001312824198976159, 0.001566374790854752, 0.5497865676879883, 0.17394393682479858, 0.31202423572540283, 0.12262770533561707, 0.03388618677854538, 0.06295336037874222, 0.0779614970088005, 0.004573480691760778, 0.004213147796690464, 0.016132768243551254, 0.0012662734370678663, 0.00542655773460865, 0.3886805474758148, 0.003243782324716449, 0.0018789985915645957, 0.0013510395074263215, 0.15659953653812408, 0.0004633783537428826, 0.001997025217860937], "tokens": [13, 4706, 7762, 13, 308, 334, 732, 3207, 1298, 21981, 1891, 12091, 3651, 29889, 13, 308, 334, 732, 3207, 1634, 29874, 2859, 830, 3274, 2859, 12091, 3651, 29889, 13, 308, 334, 732, 2457, 278, 27368, 363, 5537, 630, 13451, 29889, 13, 308, 3776, 13, 4706, 970, 3765, 27368, 29898, 8394, 3765, 2636]}
{"line_number": 958, "line_type": "original", "code": "                value = CMAESOptimizer.this", "entropy": 1.6268898248672485, "is_bug_line": false, "sus_score": 0.27848, "per_token_entropy": [4.620381832122803, 8.682843208312988, 2.7359778881073, 1.7963738441467285, 0.0004848258395213634, 0.0006366133457049727, 0.0013271104544401169, 8.642300235806033e-05, 0.00017534149810671806, 0.04929816350340843, 0.008203265257179737], "tokens": [462, 995, 353, 315, 1529, 2890, 20624, 326, 3950, 29889, 1366]}
{"line_number": 958, "line_type": "generated", "code": "\n            }\n            return repaired;\n        }\n\n        /**\n         * @param x Normalized objective variables.\n         * @param repaired Repaired objective variables.\n         * @return the penalty for violated", "entropy": 0.10160226374864578, "is_bug_line": false, "sus_score": 0.27848, "per_token_entropy": [0.19939294457435608, 0.4160614013671875, 0.02210630290210247, 0.004030557814985514, 0.0531366802752018, 0.016354091465473175, 0.009150000289082527, 0.00037019551382400095, 0.0004080893413629383, 0.0007662221323698759, 0.0006797387031838298, 0.014427158050239086, 0.0011364913079887629, 0.006604154594242573, 0.03500232845544815, 0.030480658635497093, 0.0637090876698494, 0.0037910512182861567, 0.0030385537538677454, 0.000291662581730634, 0.07754768431186676, 0.01719272881746292, 0.5259905457496643, 0.5947812795639038, 0.0006824786541983485, 0.04568267613649368, 0.004915889818221331, 0.05133024975657463, 0.0010946955299004912, 0.0016837242292240262, 0.002869062591344118, 0.0009726322605274618, 0.23875205218791962, 0.29096516966819763, 0.0014193708775565028, 0.00042250767000950873, 0.7638286352157593, 0.0024523441679775715, 0.00023231192608363926, 0.21012574434280396, 0.005801861174404621, 0.23845729231834412, 0.004083747509866953, 0.001980606932193041, 0.0064103929325938225, 0.0028606229461729527, 0.0017175221582874656, 0.30531108379364014, 0.18814082443714142, 0.4478696584701538, 0.27673178911209106, 0.0900728702545166], "tokens": [13, 9651, 500, 13, 9651, 736, 1634, 29874, 2859, 29936, 13, 4706, 500, 13, 13, 4706, 7762, 13, 308, 334, 732, 3207, 921, 21981, 1891, 12091, 3651, 29889, 13, 308, 334, 732, 3207, 1634, 29874, 2859, 830, 3274, 2859, 12091, 3651, 29889, 13, 308, 334, 732, 2457, 278, 27368, 363, 5537, 630]}
{"line_number": 943, "line_type": "original", "code": "            for (int i = 0; i < x.length; i++) {", "entropy": 0.6791297793388367, "is_bug_line": false, "sus_score": 0.27809, "per_token_entropy": [7.554750919342041, 4.23585844039917, 0.0077435788698494434, 0.03521088510751724, 0.028697898611426353, 0.009263629093766212, 0.005384229123592377, 0.0061875684186816216, 0.005817624274641275, 0.004074961878359318, 0.003848291002213955, 0.2816779613494873, 0.015353113412857056, 0.00024387246230617166, 0.004912686999887228, 0.01398784015327692, 0.0034565723035484552, 0.007865882478654385], "tokens": [632, 363, 313, 524, 474, 353, 29871, 29900, 29936, 474, 529, 921, 29889, 2848, 29936, 474, 4862, 426]}
{"line_number": 943, "line_type": "generated", "code": "\n        /**\n         * @param x Normalized objective variables.\n         * @return the penalty for violated bounds.\n         */\n        public double penalty(final double[] x, final double[] repaired) {\n            double penalty", "entropy": 0.1649116575717926, "is_bug_line": false, "sus_score": 0.27809, "per_token_entropy": [0.0774533599615097, 0.2955932915210724, 0.1447022706270218, 0.05189404636621475, 0.009349609725177288, 0.0005004345439374447, 0.15003877878189087, 0.12285324186086655, 2.037207841873169, 0.598061203956604, 0.0011699505848810077, 0.023658830672502518, 0.007234685122966766, 0.038979705423116684, 0.0012016226537525654, 0.0025345126632601023, 0.0029229081701487303, 0.0011870964663103223, 0.40259137749671936, 0.5142706632614136, 0.21865829825401306, 0.2938777208328247, 0.37725764513015747, 0.11110690981149673, 0.125753253698349, 0.07437609136104584, 0.0049392590299248695, 0.0031083147041499615, 0.011080872267484665, 0.0008000510279089212, 0.0042300038039684296, 0.32306769490242004, 0.003537470242008567, 0.0033787565771490335, 0.0014294892316684127, 0.12185877561569214, 0.0004450284468475729, 0.0018678138731047511, 0.10853768140077591, 0.3234112858772278, 0.35257604718208313, 0.0007805161876603961, 0.002859077649191022, 0.5141577124595642, 0.004960610531270504, 0.0005277194431982934, 0.027791758999228477, 0.0019972631707787514, 0.0015975582646206021, 0.05370183289051056, 0.5071045756340027, 0.5112234950065613], "tokens": [13, 4706, 7762, 13, 308, 334, 732, 3207, 921, 21981, 1891, 12091, 3651, 29889, 13, 308, 334, 732, 2457, 278, 27368, 363, 5537, 630, 13451, 29889, 13, 308, 3776, 13, 4706, 970, 3765, 27368, 29898, 8394, 3765, 2636, 921, 29892, 2186, 3765, 2636, 1634, 29874, 2859, 29897, 426, 13, 9651, 3765, 27368]}
{"line_number": 570, "line_type": "original", "code": "            lambda = 4 + (int) (3. * Math.log(dimension));", "entropy": 1.4338496923446655, "is_bug_line": false, "sus_score": 0.2734, "per_token_entropy": [8.562382698059082, 6.479446887969971, 1.0696990489959717, 1.2239155769348145, 3.1483378410339355, 0.14375047385692596, 1.6719352006912231, 0.2034206986427307, 0.0777701586484909, 1.9533506631851196, 0.9038873314857483, 1.6493374109268188, 0.16456492245197296, 0.13141800463199615, 0.0023105847649276257, 0.6272568702697754, 0.046069927513599396, 0.21243560314178467, 0.003603158053010702, 0.4021010100841522], "tokens": [632, 14013, 353, 29871, 29946, 718, 313, 524, 29897, 313, 29941, 29889, 334, 5792, 29889, 1188, 29898, 6229, 2673, 2483]}
{"line_number": 570, "line_type": "generated", "code": "\n        xold = MatrixUtils.createColumnRealMatrix(guess); // objective\n                                                          // variables\n                                                          // (previous\n                                                          // iteration)\n        s = MatrixUtils.createRealIdentityMatrix", "entropy": 0.3263903558254242, "is_bug_line": false, "sus_score": 0.2734, "per_token_entropy": [0.062382325530052185, 0.4689233899116516, 1.3324179649353027, 1.2737971544265747, 0.06573557108640671, 0.6025951504707336, 0.00019703354337252676, 0.0005507144378498197, 0.013045675121247768, 0.16896842420101166, 0.0006550788530148566, 0.0004949536523781717, 0.005538475699722767, 0.18776316940784454, 0.00016652150952722877, 0.10464630275964737, 0.4847487807273865, 0.886339008808136, 0.5188136100769043, 0.06363269686698914, 0.0012449617497622967, 0.000325388420606032, 0.5056853890419006, 8.21318244561553e-05, 0.023783162236213684, 0.2075130045413971, 1.3400397300720215, 0.00042000532266683877, 0.00018153927521780133, 0.005784201435744762, 0.00011491115583339706, 1.6264878511428833, 0.8691805601119995, 0.562713623046875, 0.03994953632354736, 3.349725011503324e-05, 1.2397689715726301e-05, 0.0005190217634662986, 9.894321920000948e-06, 0.7429550886154175, 0.02429964393377304, 0.0036114726681262255, 0.18072043359279633, 2.208120346069336, 0.3855811655521393, 0.5152722597122192, 0.0003819928097072989, 0.0006605588714592159, 0.004746479447931051, 0.3225346505641937, 1.0862207412719727, 0.07170028984546661], "tokens": [13, 4706, 921, 1025, 353, 22513, 12177, 29889, 3258, 4409, 21713, 14609, 29898, 2543, 404, 416, 849, 12091, 13, 462, 462, 462, 3986, 849, 3651, 13, 462, 462, 462, 3986, 849, 313, 24957, 13, 462, 462, 462, 3986, 849, 12541, 29897, 13, 4706, 269, 353, 22513, 12177, 29889, 3258, 21713, 18415, 14609]}
