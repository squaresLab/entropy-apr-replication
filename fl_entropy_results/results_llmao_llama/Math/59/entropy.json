{"line_number": 3482, "line_type": "original", "code": "        return (a <= b) ? b : (Float.isNaN(a + b) ? Float.NaN : b);", "entropy": 0.8209714889526367, "is_bug_line": true, "sus_score": 0.5137, "per_token_entropy": [8.698784828186035, 3.246049404144287, 0.5781073570251465, 0.17186109721660614, 0.2900221049785614, 0.00589074706658721, 0.015514280647039413, 0.0016891986597329378, 0.922412097454071, 0.004486495163291693, 1.3878675699234009, 0.6242082715034485, 0.001388300908729434, 0.0124429352581501, 0.006898159626871347, 0.003134815488010645, 0.023138754069805145, 0.030753394588828087, 0.002880473854020238, 0.003874415997415781, 0.002076613949611783, 0.021575385704636574, 0.0006002769805490971, 0.0007689617923460901, 0.0031392124947160482, 6.099700927734375, 0.006962443236261606], "tokens": [308, 736, 313, 29874, 5277, 289, 29897, 1577, 289, 584, 313, 11031, 29889, 275, 19377, 29898, 29874, 718, 289, 29897, 1577, 27842, 29889, 19377, 584, 289, 416]}
{"line_number": 3482, "line_type": "generated", "code": "\n\n    /** Compute the hypotenuse of a right angled triangle.\n     * @param x abscissa of the triangle point\n     * @param y ordinate of the triangle point\n     * @return sqrt(x\u00b2", "entropy": 0.250223845243454, "is_bug_line": true, "sus_score": 0.5137, "per_token_entropy": [0.05795177444815636, 0.7377748489379883, 0.12428940832614899, 0.05706152319908142, 1.1512901782989502, 0.01517583429813385, 0.267935574054718, 1.4645758867263794, 0.024945862591266632, 0.016339315101504326, 0.22015972435474396, 0.05292787402868271, 0.673821210861206, 1.9077506065368652, 0.0001793938863556832, 0.005486905109137297, 1.153882622718811, 0.011413400061428547, 0.013698028400540352, 0.002073521027341485, 0.19153985381126404, 0.0008885487914085388, 0.22286389768123627, 0.320291668176651, 0.00020728347590193152, 0.0032412870787084103, 0.2562485635280609, 0.06079256534576416, 0.6593453288078308, 1.2978882789611816, 0.013983489945530891, 0.000832568621262908, 0.00036137725692242384, 0.0002809368306770921, 0.0006158839096315205, 0.0004267973708920181, 0.014680459164083004, 0.00010191874753218144, 0.00016675988445058465, 0.0001541257370263338, 0.0009894242975860834, 0.0013367536012083292, 0.0009870424401015043, 0.00243831193074584, 0.0005408254801295698, 0.001680511049926281, 0.010082622990012169, 0.8543020486831665, 0.0001559135998832062, 0.0030589953530579805, 0.010647393763065338, 1.1217750310897827], "tokens": [13, 13, 1678, 7762, 11796, 29872, 278, 10163, 16368, 1509, 310, 263, 1492, 2614, 839, 17205, 29889, 13, 268, 334, 732, 3207, 921, 633, 1557, 16343, 310, 278, 17205, 1298, 13, 268, 334, 732, 3207, 343, 4356, 16976, 310, 278, 17205, 1298, 13, 268, 334, 732, 2457, 18074, 2273, 29898, 29916, 30088]}
{"line_number": 3446, "line_type": "original", "code": "        return (a <= b) ? a : (Float.isNaN(a + b) ? Float.NaN : b);", "entropy": 0.7412319183349609, "is_bug_line": false, "sus_score": 0.36351, "per_token_entropy": [9.042625427246094, 4.707091808319092, 1.5122778415679932, 0.5585640072822571, 0.3287951350212097, 0.015388565137982368, 0.023978007957339287, 0.0018876844551414251, 0.7486379742622375, 0.013025907799601555, 2.1792287826538086, 0.640326976776123, 0.0014725804794579744, 0.02417188696563244, 0.006932965479791164, 0.0031122365035116673, 0.028353571891784668, 0.021580634638667107, 0.00452399579808116, 0.003924645483493805, 0.003940556664019823, 0.08822591602802277, 0.000460876093711704, 0.002882137894630432, 0.0017300175968557596, 0.04770961403846741, 0.002411198103800416], "tokens": [308, 736, 313, 29874, 5277, 289, 29897, 1577, 263, 584, 313, 11031, 29889, 275, 19377, 29898, 29874, 718, 289, 29897, 1577, 27842, 29889, 19377, 584, 289, 416]}
{"line_number": 3446, "line_type": "generated", "code": "\n    /** Compute the hypotenuse of a triangle with sides a and b\n     * @param a side of the triangle\n     * @param b side of the triangle\n     * @return hypotenuse of the triangle\n     */\n", "entropy": 0.17835187911987305, "is_bug_line": false, "sus_score": 0.36351, "per_token_entropy": [0.05051172152161598, 0.6039885878562927, 0.09106134623289108, 1.1162996292114258, 0.015185697004199028, 0.25020840764045715, 1.3462684154510498, 0.026339460164308548, 0.0168459415435791, 0.2365128993988037, 0.0746237263083458, 0.7930572032928467, 0.347061425447464, 0.18894316256046295, 0.37372446060180664, 0.15873777866363525, 0.0031211492605507374, 0.5002731084823608, 0.01775631122291088, 0.0010525407269597054, 0.06681206822395325, 0.0012355559738352895, 0.01564878225326538, 0.6184158325195312, 0.2477157562971115, 0.10851500928401947, 0.014841265976428986, 0.15905119478702545, 0.001150065683759749, 0.00054058717796579, 0.001116129569709301, 0.0007381098694168031, 0.001076952670700848, 0.015552426688373089, 0.0009326160652562976, 0.0007354891858994961, 0.0012530578533187509, 0.0017748808022588491, 0.0025078770704567432, 0.0011099375551566482, 0.0016696811653673649, 0.014987367205321789, 0.8990917801856995, 0.0020896997302770615, 0.0009288049186579883, 0.3915976285934448, 0.08612796664237976, 0.005993489176034927, 0.30445238947868347, 0.008641703985631466, 0.08589508384466171, 0.0005258131423033774], "tokens": [13, 1678, 7762, 11796, 29872, 278, 10163, 16368, 1509, 310, 263, 17205, 411, 11192, 263, 322, 289, 13, 268, 334, 732, 3207, 263, 2625, 310, 278, 17205, 13, 268, 334, 732, 3207, 289, 2625, 310, 278, 17205, 13, 268, 334, 732, 2457, 10163, 16368, 1509, 310, 278, 17205, 13, 268, 3776, 13]}
{"line_number": 365, "line_type": "original", "code": "          rb += -ya * denomb * denomr * denomr;   // denominator", "entropy": 2.467250108718872, "is_bug_line": false, "sus_score": 0.25339, "per_token_entropy": [8.582763671875, 9.445082664489746, 3.098742723464966, 3.352329969406128, 2.4062440395355225, 1.4582704305648804, 1.0422732830047607, 1.8814862966537476, 4.5218706130981445, 2.896456241607666, 0.7338962554931641, 0.5149552822113037, 0.4752565026283264, 2.6787049770355225, 0.7535133957862854, 0.032524995505809784, 0.12209155410528183, 0.27153080701828003, 4.921445369720459, 0.15576918423175812, 4.933684349060059, 0.0006065912893973291], "tokens": [965, 364, 29890, 4619, 448, 3761, 334, 972, 3424, 334, 972, 290, 29878, 334, 972, 290, 29878, 29936, 259, 849, 14267, 1061]}
{"line_number": 365, "line_type": "generated", "code": "\n      if (x > 0.5) {\n          double hiPrec[] = new double[2];\n          expm1(x, hiPrec);\n\n          double ya = hiPrec[0] + hiP", "entropy": 0.09436295926570892, "is_bug_line": false, "sus_score": 0.25339, "per_token_entropy": [0.0749562457203865, 0.6011514663696289, 0.685238242149353, 0.02506329119205475, 0.03191760554909706, 0.4015907049179077, 0.058310914784669876, 0.5695450305938721, 0.0066149309277534485, 0.22613845765590668, 0.06151092052459717, 0.0018726922571659088, 0.00619479501619935, 0.14211948215961456, 0.3105076849460602, 0.4984027147293091, 0.0008491248008795083, 9.083335316972807e-05, 0.003038078313693404, 0.0007696765242144465, 0.01196693629026413, 0.00013064485392533243, 0.002162262797355652, 0.0033893303479999304, 0.00022146634000819176, 0.0015012671938166022, 0.040724217891693115, 0.048609472811222076, 0.5219125151634216, 0.00034671969478949904, 0.13473360240459442, 0.08859878778457642, 0.011280213482677937, 0.0030040873680263758, 0.00010561384988250211, 8.976056415122002e-05, 0.0006286313873715699, 0.0037301264237612486, 0.24267703294754028, 0.00273556518368423, 0.026209408417344093, 0.012619993649423122, 0.0018592467531561852, 0.02589384652674198, 2.753696753643453e-05, 0.0002818902430590242, 5.1020273531321436e-05, 0.0023746881633996964, 0.01088915579020977, 0.001082311267964542, 0.0010944573441520333, 5.94836674281396e-05], "tokens": [13, 418, 565, 313, 29916, 1405, 29871, 29900, 29889, 29945, 29897, 426, 13, 3986, 3765, 7251, 29925, 3757, 2636, 353, 716, 3765, 29961, 29906, 1385, 13, 3986, 1518, 29885, 29896, 29898, 29916, 29892, 7251, 29925, 3757, 416, 13, 13, 3986, 3765, 9343, 353, 7251, 29925, 3757, 29961, 29900, 29962, 718, 7251, 29925]}
{"line_number": 342, "line_type": "original", "code": "          double hiPrec[] = new double[2];", "entropy": 1.1131391525268555, "is_bug_line": false, "sus_score": 0.23146, "per_token_entropy": [9.474628448486328, 3.2740254402160645, 0.47493553161621094, 0.0008189899963326752, 0.000120751719805412, 0.01629568636417389, 0.001908863428980112, 0.031127633526921272, 0.00044324109330773354, 0.0028211576864123344, 0.07989638298749924, 0.0006469779182225466], "tokens": [965, 3765, 7251, 29925, 3757, 2636, 353, 716, 3765, 29961, 29906, 1385]}
{"line_number": 342, "line_type": "generated", "code": "\n      if (Double.isInfinite(x)) {\n          return x;\n      }\n\n      if (Double.isNaN(x)) {\n          return x;\n      }\n\n      if (x == 0)", "entropy": 0.13476738333702087, "is_bug_line": false, "sus_score": 0.23146, "per_token_entropy": [0.07708204537630081, 0.4676840305328369, 0.22061942517757416, 0.033036984503269196, 0.5146413445472717, 0.0004259632551111281, 0.0009328543092124164, 1.1586811542510986, 2.5629668016335927e-05, 0.0024591225665062666, 0.0008613928221166134, 0.1214931458234787, 0.0011607821797952056, 0.003624657168984413, 0.23140478134155273, 0.4299258887767792, 0.5990021824836731, 0.036182302981615067, 0.03859703987836838, 0.05298146232962608, 0.0027637402527034283, 0.027613425627350807, 0.2433004528284073, 0.05760398507118225, 0.034033793956041336, 0.004433208145201206, 1.2097142934799194, 0.00043823651503771544, 0.00018630675913300365, 0.004636015277355909, 0.0003333727945573628, 0.00013124081306159496, 0.043731726706027985, 0.0015163839561864734, 0.002757082926109433, 0.09861215204000473, 0.006241827737540007, 0.23333127796649933, 0.6273760795593262, 0.014394021593034267, 0.03493717312812805, 0.0003307510633021593, 0.0016565899131819606, 0.025442222133278847, 0.02269427478313446, 0.014926415868103504, 0.0024931321386247873, 0.01785350777208805, 0.044082093983888626, 0.003894484369084239, 0.00028701478731818497, 0.23533527553081512], "tokens": [13, 418, 565, 313, 11843, 29889, 275, 797, 18925, 29898, 29916, 876, 426, 13, 3986, 736, 921, 29936, 13, 418, 500, 13, 13, 418, 565, 313, 11843, 29889, 275, 19377, 29898, 29916, 876, 426, 13, 3986, 736, 921, 29936, 13, 418, 500, 13, 13, 418, 565, 313, 29916, 1275, 29871, 29900, 29897]}
{"line_number": 439, "line_type": "original", "code": "          double dab = da - daa;", "entropy": 1.9475469589233398, "is_bug_line": false, "sus_score": 0.22423, "per_token_entropy": [6.911266803741455, 5.699368000030518, 3.54910945892334, 2.487354278564453, 0.2937925159931183, 0.4152713418006897, 0.08032748848199844, 0.024906910955905914, 0.0011019593803212047, 0.012969544157385826], "tokens": [965, 3765, 270, 370, 353, 1146, 448, 1146, 29874, 29936]}
{"line_number": 439, "line_type": "generated", "code": "\n\n          // Account for nb\n          ratiob += nb / da;\n          // Account for db\n          ratiob += -db * na / da / da;\n\n          result = ratioa + ratiob;\n      }", "entropy": 0.019470656290650368, "is_bug_line": false, "sus_score": 0.22423, "per_token_entropy": [0.020953601226210594, 0.42492982745170593, 0.049904048442840576, 0.06345795094966888, 0.025717496871948242, 0.0005388000281527638, 0.01645072177052498, 0.0007581220706924796, 0.010121212340891361, 0.011689028702676296, 0.01057450007647276, 0.0025733946822583675, 0.011920525692403316, 0.02502085454761982, 0.0005138983833603561, 0.021152852103114128, 0.0008758046315051615, 0.0008200620068237185, 0.0007659838884137571, 0.10056811571121216, 0.005974292289465666, 0.0015217402251437306, 0.0002520958660170436, 0.000982278841547668, 0.0023612494114786386, 0.003530580550432205, 0.003524403553456068, 0.0006789048202335835, 0.004969269502907991, 0.019268009811639786, 0.0024365282151848078, 0.0028174726758152246, 0.0008293526479974389, 0.001292942208237946, 0.0009983561467379332, 0.00152757263276726, 0.0008233971311710775, 0.0014634147519245744, 0.0012440093560144305, 0.022318730130791664, 0.02088320627808571, 0.028581127524375916, 0.0009221353684552014, 0.0022452878765761852, 0.0015389991458505392, 0.0021192014683037996, 0.00039295581518672407, 0.0001995364436879754, 0.0010060969507321715, 0.000954768096562475, 0.07390841841697693, 0.001601009746082127], "tokens": [13, 13, 3986, 849, 16535, 363, 302, 29890, 13, 3986, 11959, 29890, 4619, 302, 29890, 847, 1146, 29936, 13, 3986, 849, 16535, 363, 4833, 13, 3986, 11959, 29890, 4619, 448, 2585, 334, 1055, 847, 1146, 847, 1146, 29936, 13, 13, 3986, 1121, 353, 11959, 29874, 718, 11959, 29890, 29936, 13, 418, 500]}
