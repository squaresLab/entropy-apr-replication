{"line_number": 327, "line_type": "original", "code": "                return (real == c.real) && (imaginary == c.imaginary);", "entropy": 1.2808661460876465, "is_bug_line": false, "sus_score": 0.56356, "per_token_entropy": [10.003231048583984, 6.727349758148193, 2.6010773181915283, 2.573777914047241, 0.3719184398651123, 3.65838360786438, 0.007126862648874521, 0.054893363267183304, 0.3756623864173889, 0.07071391493082047, 0.34862595796585083, 0.004460267256945372, 0.0001370812824461609, 0.00021205084340181202, 0.00904191192239523, 0.008624804206192493, 0.001129227806814015, 0.0011616155970841646, 0.000387831823900342, 0.00027569307712838054, 0.07999740540981293], "tokens": [462, 736, 313, 6370, 1275, 274, 29889, 6370, 29897, 2607, 313, 326, 351, 3821, 1275, 274, 29889, 326, 351, 3821, 416]}
{"line_number": 327, "line_type": "generated", "code": "\n    /**\n     * Checks whether either or both parts of this complex number is\n     * infinite and neither is {@code NaN}.\n     *\n     * @return true if either or both parts of this complex number is\n     * infinite", "entropy": 0.08119860291481018, "is_bug_line": false, "sus_score": 0.56356, "per_token_entropy": [0.08125431090593338, 0.35110437870025635, 0.053446363657712936, 0.018429357558488846, 0.004140495788305998, 0.00048137042904272676, 0.5275586247444153, 0.07466454803943634, 0.03279037028551102, 0.6536761522293091, 0.17948836088180542, 0.0025840960443019867, 0.0017765468219295144, 0.004862270317971706, 0.004984334111213684, 0.006724940147250891, 0.001760719926096499, 0.040091898292303085, 0.6410637497901917, 0.0009632238652557135, 0.0003070359816774726, 0.20291633903980255, 0.6611266732215881, 0.016346821561455727, 0.1376790851354599, 0.03121880255639553, 0.002959041390568018, 0.23436452448368073, 0.0052291289903223515, 0.014220568351447582, 0.001086717238649726, 0.0005525015876628458, 0.019085926935076714, 0.000920825288631022, 0.0004215544031467289, 0.0020793499425053596, 0.001105531700886786, 0.02262936346232891, 0.006368106231093407, 0.028645191341638565, 0.012803846038877964, 0.0005287918029353023, 0.0009696549386717379, 0.008854175917804241, 0.001484721782617271, 0.0010886224918067455, 0.003977602813392878, 0.004225967917591333, 0.07943195104598999, 0.0009029601933434606, 0.00019262365822214633, 0.03675734996795654], "tokens": [13, 1678, 7762, 13, 268, 334, 5399, 29879, 3692, 2845, 470, 1716, 5633, 310, 445, 4280, 1353, 338, 13, 268, 334, 10362, 322, 9561, 338, 26633, 401, 18780, 1836, 13, 268, 334, 13, 268, 334, 732, 2457, 1565, 565, 2845, 470, 1716, 5633, 310, 445, 4280, 1353, 338, 13, 268, 334, 10362]}
{"line_number": 319, "line_type": "original", "code": "        if (this == other) {", "entropy": 2.800478219985962, "is_bug_line": false, "sus_score": 0.4558, "per_token_entropy": [3.333021402359009, 5.734573841094971, 0.345540851354599, 4.44882869720459, 2.437570095062256, 5.7592597007751465, 0.29527318477630615, 0.04975740239024162], "tokens": [308, 565, 313, 1366, 1275, 916, 29897, 426]}
{"line_number": 319, "line_type": "generated", "code": "\n     * @return true if either or both parts are {@code Double.NaN}.\n     */\n    public boolean isNaN() {\n        return isNaN;\n    }\n\n    /**\n     * Checks whether neither or both parts", "entropy": 0.2035994827747345, "is_bug_line": false, "sus_score": 0.4558, "per_token_entropy": [0.869040846824646, 0.2814159095287323, 0.038920775055885315, 1.9422786235809326, 0.0539553202688694, 0.4649515748023987, 0.055518537759780884, 0.23645491898059845, 0.2610011100769043, 0.003273844253271818, 0.01356267649680376, 0.8199199438095093, 1.2537517547607422, 0.018171267583966255, 0.2283962070941925, 0.0018161722691729665, 0.025570863857865334, 1.1123812198638916, 0.007179769221693277, 0.0790187418460846, 0.09170423448085785, 0.0029920830857008696, 0.03665289282798767, 0.023876864463090897, 0.005406282842159271, 0.0005648924270644784, 0.002267410745844245, 0.06733845174312592, 0.002816283842548728, 0.005344863515347242, 0.08604384958744049, 0.006921481806784868, 0.02445460669696331, 0.002282872796058655, 0.019443046301603317, 0.003582608886063099, 0.030069276690483093, 0.001856985967606306, 0.003466432448476553, 0.04362274706363678, 0.05505426228046417, 0.010908729396760464, 0.00828827265650034, 0.006833398249000311, 0.00039760314393788576, 0.177130788564682, 0.15669168531894684, 0.0359448567032814, 1.4631586074829102, 0.420771062374115, 0.010822528973221779, 0.013882388360798359], "tokens": [13, 268, 334, 732, 2457, 1565, 565, 2845, 470, 1716, 5633, 526, 26633, 401, 11599, 29889, 19377, 1836, 13, 268, 3776, 13, 1678, 970, 7223, 338, 19377, 580, 426, 13, 4706, 736, 338, 19377, 29936, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 5399, 29879, 3692, 9561, 470, 1716, 5633]}
{"line_number": 252, "line_type": "original", "code": "        if (isNaN || divisor.isNaN) {", "entropy": 1.1674442291259766, "is_bug_line": false, "sus_score": 0.40989, "per_token_entropy": [8.032759666442871, 2.6890463829040527, 0.08244366943836212, 1.2028387784957886, 0.31676656007766724, 0.2040172517299652, 0.33496972918510437, 0.000164018536452204, 0.02716013975441456, 0.050655197352170944, 0.004017259925603867, 2.2299346923828125, 0.0020024979021400213], "tokens": [308, 565, 313, 275, 19377, 3830, 8572, 272, 29889, 275, 19377, 29897, 426]}
{"line_number": 252, "line_type": "generated", "code": "\n    /**\n     * Returns a {@code Complex} whose value is\n     * {@code (this / divisor)}, with {@code divisor} interpreted as a real number.\n     *\n     * @param  divisor Value by which", "entropy": 0.1526385098695755, "is_bug_line": false, "sus_score": 0.40989, "per_token_entropy": [0.10249013453722, 0.5902841091156006, 0.11293745785951614, 0.05528033524751663, 0.0027448381297290325, 0.0005800233921036124, 0.2759055495262146, 0.3361481726169586, 0.02268436923623085, 0.00801891926676035, 0.018415430560708046, 0.0007242917199619114, 0.011289878748357296, 0.029210343956947327, 0.00013720047718379647, 0.7722737789154053, 0.0007309625507332385, 0.00015627116954419762, 0.1223946362733841, 0.0004848258395213634, 0.32552477717399597, 0.0703289806842804, 0.7892110347747803, 0.04327576234936714, 9.405170567333698e-05, 1.0877771377563477, 0.1722620576620102, 0.033203285187482834, 0.0004769618099089712, 0.051914531737565994, 9.16677454370074e-05, 0.0006093314150348306, 0.38594305515289307, 0.05227437615394592, 0.2809365391731262, 0.41391298174858093, 0.9104711413383484, 0.040973350405693054, 0.0011031500762328506, 0.004283064045011997, 0.0006332775810733438, 0.6288130879402161, 0.004351789131760597, 0.00040749352774582803, 0.03248552978038788, 0.003323628567159176, 0.10856901854276657, 0.01755017414689064, 7.795983401592821e-05, 0.012323662638664246, 0.0008723505889065564, 0.00023552982020191848], "tokens": [13, 1678, 7762, 13, 268, 334, 16969, 263, 26633, 401, 26596, 29913, 5069, 995, 338, 13, 268, 334, 26633, 401, 313, 1366, 847, 8572, 272, 19230, 411, 26633, 401, 8572, 272, 29913, 21551, 408, 263, 1855, 1353, 29889, 13, 268, 334, 13, 268, 334, 732, 3207, 29871, 8572, 272, 7865, 491, 607]}
{"line_number": 324, "line_type": "original", "code": "            if (c.isNaN) {", "entropy": 2.5319666862487793, "is_bug_line": false, "sus_score": 0.27847, "per_token_entropy": [9.676523208618164, 3.7390565872192383, 0.11279444396495819, 8.024827003479004, 0.2675320506095886, 0.30776017904281616, 0.06312248110771179, 0.5757020115852356, 0.020382825285196304], "tokens": [632, 565, 313, 29883, 29889, 275, 19377, 29897, 426]}
{"line_number": 324, "line_type": "generated", "code": "\n    public boolean isNaN() {\n        return isNaN;\n    }\n\n    /**\n     * Checks whether either or both parts of this complex number is\n     * infinite and neither is {@code NaN}.\n     *\n    ", "entropy": 0.08040871471166611, "is_bug_line": false, "sus_score": 0.27847, "per_token_entropy": [0.17652416229248047, 0.41333523392677307, 0.152800053358078, 0.01508542150259018, 0.0021445390302687883, 0.015571440570056438, 0.0750274732708931, 0.006772066466510296, 0.01372707262635231, 0.07207615673542023, 0.009949731640517712, 0.15958213806152344, 0.004647406283766031, 0.01649305410683155, 0.003060540184378624, 0.02614704705774784, 0.005982468836009502, 0.014938277192413807, 0.1923009157180786, 0.08506452292203903, 0.012213443405926228, 0.005889324937015772, 0.00311924796551466, 0.000286657246761024, 0.17838571965694427, 0.07177352160215378, 0.03943958505988121, 0.4294118881225586, 0.15103945136070251, 0.0018486568005755544, 0.001916835200972855, 0.004479374270886183, 0.0025854038540273905, 0.007447100710123777, 0.0019306369358673692, 0.02326780930161476, 0.6671332120895386, 0.0025503274518996477, 0.00012265883560758084, 0.13084544241428375, 0.4340912103652954, 0.013343322090804577, 0.24227958917617798, 0.023700974881649017, 0.0019162403186783195, 0.2303561568260193, 0.0033721032086759806, 0.014054019935429096, 0.0019812018144875765, 0.00024530262453481555, 0.01781650446355343, 0.0011801904765889049], "tokens": [13, 1678, 970, 7223, 338, 19377, 580, 426, 13, 4706, 736, 338, 19377, 29936, 13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 5399, 29879, 3692, 2845, 470, 1716, 5633, 310, 445, 4280, 1353, 338, 13, 268, 334, 10362, 322, 9561, 338, 26633, 401, 18780, 1836, 13, 268, 334, 13, 268]}
{"line_number": 364, "line_type": "original", "code": "        return real;", "entropy": 5.587651252746582, "is_bug_line": false, "sus_score": 0.26414, "per_token_entropy": [7.109251976013184, 6.950603485107422, 5.730888366699219, 2.5598607063293457], "tokens": [308, 736, 1855, 29936]}
{"line_number": 364, "line_type": "generated", "code": "\n    }\n\n    /**\n     * Returns a {@code Complex} whose value is {@code (this / divisor)}.\n     * Implements preliminary checks for {@code NaN} and infinity followed by\n     * the definitional formula", "entropy": 0.07486116886138916, "is_bug_line": false, "sus_score": 0.26414, "per_token_entropy": [0.1325080692768097, 1.0003069639205933, 0.4729580581188202, 0.00424294313415885, 0.08471716940402985, 0.05409784987568855, 0.009478094056248665, 0.01242762990295887, 0.0028531341813504696, 0.00020621081057470292, 0.03719619661569595, 0.05151810497045517, 0.015291715040802956, 0.004898452199995518, 0.0032018369529396296, 0.0002233732520835474, 0.000780754373408854, 0.0013893722789362073, 9.941560711013153e-05, 0.10793869942426682, 5.435795901576057e-05, 0.38018307089805603, 0.35298365354537964, 0.4064145088195801, 0.08836168050765991, 3.814689989667386e-06, 0.13515065610408783, 0.007725361734628677, 0.014195182360708714, 3.9934315282152966e-05, 0.1788376122713089, 0.000427274004323408, 0.13771981000900269, 5.2927523938706145e-05, 1.585470999998506e-05, 7.60526381782256e-05, 0.0008897398365661502, 0.036115847527980804, 0.0006064721383154392, 0.0014799605123698711, 0.009888708591461182, 0.01075059175491333, 0.06959836930036545, 0.032054077833890915, 0.014051081612706184, 0.005385177675634623, 0.000339569611242041, 1.7881377516459906e-06, 0.011005062609910965, 0.0014336556196212769, 5.435795901576057e-05, 0.0005504761938937008], "tokens": [13, 1678, 500, 13, 13, 1678, 7762, 13, 268, 334, 16969, 263, 26633, 401, 26596, 29913, 5069, 995, 338, 26633, 401, 313, 1366, 847, 8572, 272, 29512, 13, 268, 334, 1954, 9711, 758, 2576, 3821, 12747, 363, 26633, 401, 18780, 29913, 322, 27971, 5643, 491, 13, 268, 334, 278, 7403, 3245, 7063]}
